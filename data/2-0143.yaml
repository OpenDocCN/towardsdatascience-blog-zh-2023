- en: 7 Steps to Help You Make Your Matplotlib Bar Charts Beautiful
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 7 步骤帮助你让 Matplotlib 条形图更美观
- en: 原文：[https://towardsdatascience.com/7-steps-to-help-you-make-your-matplotlib-bar-charts-beautiful-f87419cb14cb](https://towardsdatascience.com/7-steps-to-help-you-make-your-matplotlib-bar-charts-beautiful-f87419cb14cb)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/7-steps-to-help-you-make-your-matplotlib-bar-charts-beautiful-f87419cb14cb](https://towardsdatascience.com/7-steps-to-help-you-make-your-matplotlib-bar-charts-beautiful-f87419cb14cb)
- en: Easily Improve the Quality of Your Matplotlib Data Visualisations With a Few
    Simple Tweaks
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过简单的调整轻松提升 Matplotlib 数据可视化的质量
- en: '[](https://andymcdonaldgeo.medium.com/?source=post_page-----f87419cb14cb--------------------------------)[![Andy
    McDonald](../Images/df11d647be032aeb3d31852affb33a64.png)](https://andymcdonaldgeo.medium.com/?source=post_page-----f87419cb14cb--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f87419cb14cb--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f87419cb14cb--------------------------------)
    [Andy McDonald](https://andymcdonaldgeo.medium.com/?source=post_page-----f87419cb14cb--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://andymcdonaldgeo.medium.com/?source=post_page-----f87419cb14cb--------------------------------)[![Andy
    McDonald](../Images/df11d647be032aeb3d31852affb33a64.png)](https://andymcdonaldgeo.medium.com/?source=post_page-----f87419cb14cb--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f87419cb14cb--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f87419cb14cb--------------------------------)
    [Andy McDonald](https://andymcdonaldgeo.medium.com/?source=post_page-----f87419cb14cb--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----f87419cb14cb--------------------------------)
    ·13 min read·Mar 27, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----f87419cb14cb--------------------------------)
    ·13 分钟阅读·2023年3月27日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/0b82852b468b478357866615394725b8.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0b82852b468b478357866615394725b8.png)'
- en: Matplotlib horizontal bar chart after changing several features to make it more
    visually appealing. Image by the author.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Matplotlib 的水平条形图，在更改了多个特征后，使其更具视觉吸引力。图片来源于作者。
- en: Bar charts are a commonly used data visualisation tool where categorical features
    are represented by bars of varying lengths/heights. The height or length of the
    bar corresponds to the value being represented for that category.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 条形图是一种常用的数据可视化工具，其中分类特征由长度/高度不同的条形表示。条形的高度或长度对应于该类别所表示的值。
- en: Bar charts can easily be created in [**matplotlib**](https://matplotlib.org/).
    However, the [**matplotlib**](https://matplotlib.org/) library is often regarded
    as a library that produces unexciting charts and can be challenging to work with.
    However, with perseverance, exploration, and a few extra lines of [**Python**](https://www.python.org/)
    code, we can generate distinctive, aesthetically pleasing and informative figures.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 条形图可以在 [**matplotlib**](https://matplotlib.org/) 中轻松创建。然而， [**matplotlib**](https://matplotlib.org/)
    库通常被认为是生成不令人兴奋的图表的库，并且使用起来可能具有挑战性。然而，通过坚持、探索以及几行额外的 [**Python**](https://www.python.org/)
    代码，我们可以生成独特、美观且信息量丰富的图形。
- en: 'If you want to see what matplotlib is capable of with a little bit of extra
    work, then you may be interested in checking out my previous article:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解 Matplotlib 在稍加努力后的能力，你可能会对查看我之前的文章感兴趣：
- en: '[](/3-unique-charts-created-with-matplotlib-you-probably-havent-seen-before-421ab8cdd36f?source=post_page-----f87419cb14cb--------------------------------)
    [## 3 Unique Charts You Wouldn’t Think Were Created with Matplotlib'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/3-unique-charts-created-with-matplotlib-you-probably-havent-seen-before-421ab8cdd36f?source=post_page-----f87419cb14cb--------------------------------)
    [## 3 个你没想到是用 Matplotlib 创建的独特图表'
- en: Utilising Python’s Matplotlib to Create Advanced Data Visualisations
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 利用 Python 的 Matplotlib 创建高级数据可视化
- en: towardsdatascience.com](/3-unique-charts-created-with-matplotlib-you-probably-havent-seen-before-421ab8cdd36f?source=post_page-----f87419cb14cb--------------------------------)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/3-unique-charts-created-with-matplotlib-you-probably-havent-seen-before-421ab8cdd36f?source=post_page-----f87419cb14cb--------------------------------)
- en: 'Within this article, we will see how we can go from a boring figure like this:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将探讨如何将一个无聊的图表转变为：
- en: '![](../Images/36097f227bcb22ac4b335a3387706191.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/36097f227bcb22ac4b335a3387706191.png)'
- en: Matplotlib horizontal bar plot displaying porosity values for different reservoir
    intervals. Image by the author.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Matplotlib 的水平条形图显示了不同储层区间的孔隙度值。图片来源于作者。
- en: 'To one that looks like this:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 变成这样：
- en: '![](../Images/153a3ceb6c83b4bc65bcb56af69e1557.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/153a3ceb6c83b4bc65bcb56af69e1557.png)'
- en: Before and after transforming our bar chart from a bland figure to one much
    more visually appealing. Image by the author.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在将条形图从一个平淡的图形转变为更具视觉吸引力的图形之前和之后的对比。作者提供的图片。
- en: We will see how we can improve the story we are trying to tell with a few simple
    extra lines of python code.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看到如何通过几行简单的 Python 代码来改善我们试图讲述的故事。
- en: Video Version of the Tutorial
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 教程的视频版本
- en: 'If you would like to see how this code is built from scratch in video form,
    then you may be interested in watching the following:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想查看如何从零开始构建这段代码的视频形式，你可能会对以下内容感兴趣：
- en: Importing Libraries and Setting up Data
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入库并设置数据
- en: The first step is to import the libraries we are going to work with. In this
    case, we will be using [**pandas**](https://pandas.pydata.org/) to store our data
    and [**matplotlib**](https://matplotlib.org/) to create the figures.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是导入我们将要使用的库。在这种情况下，我们将使用 [**pandas**](https://pandas.pydata.org/) 来存储数据，并使用
    [**matplotlib**](https://matplotlib.org/) 来创建图形。
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Next, we will create some data, which has been derived from the [**Xeex Force
    2020 Lithology Machine Learning competition**](https://zenodo.org/record/4351156#.ZCFr8OzMIeY).
    These data represent individual wells, with average porosity values for sandstone
    lithology within the Hugin Fm. These wells originate on the Norwegian Continental
    shelf.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将创建一些数据，这些数据来源于 [**Xeex Force 2020 Lithology Machine Learning competition**](https://zenodo.org/record/4351156#.ZCFr8OzMIeY)。这些数据表示单个井，包含
    Hugin Fm 内砂岩岩性平均孔隙度值。这些井起源于挪威大陆架。
- en: See the bottom of the article for further details on this dataset.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅文章底部以获取有关此数据集的更多详细信息。
- en: Rather than loading data from a CSV file, we can create one with a simple dictionary,
    and pass that to the `pd.DataFrame()` function.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过一个简单的字典来创建数据，而不是从 CSV 文件中加载，并将其传递给 `pd.DataFrame()` 函数。
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Creating a Basic Bar Plot with Matplotlib
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Matplotlib 创建基本条形图
- en: Now that we have our pandas dataframe setup, we can move on to creating our
    very first bar plot. There are a few ways to create a bar plot, one of which involves
    using the dataframe directly ( `df.plot(kind='bar'....)` ), however, for this
    article, we will focus on using matplotlib-focused code to build our plot.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经设置好 pandas 数据框，我们可以开始创建我们的第一个条形图。创建条形图有几种方法，其中一种是直接使用数据框（`df.plot(kind='bar'....)`），然而，在本文中，我们将专注于使用以
    matplotlib 为中心的代码来构建我们的图表。
- en: To create a basic bar chart with matplotlib, we first need to setup our fig
    and ax variables, which will be set to `plt.subplots()` Within this function,
    we can pass in the figure size.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 matplotlib 创建一个基本的条形图，我们首先需要设置我们的 fig 和 ax 变量，这些变量将被设置为 `plt.subplots()`。在此函数中，我们可以传入图形大小。
- en: Next, we will create a new variable called bars, and assign it to `plt.bar()`
    Within this function, we can simply pass in our categorical variable, in this
    case a list of well names, and the average porosity value.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将创建一个名为 bars 的新变量，并将其分配给 `plt.bar()`。在此函数中，我们可以简单地传入我们的分类变量，此处为井名称列表，以及平均孔隙度值。
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: When it is run, we are presented with the following bar plot. As you can see
    it is very basic and not very appealing.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当运行时，我们会看到如下的条形图。正如你所见，它非常基础，也不太吸引人。
- en: '![](../Images/81ac0185d8a66fc10cdb70f21775e31c.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/81ac0185d8a66fc10cdb70f21775e31c.png)'
- en: A basic barplot generated with matplotlib. Image by the author.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 matplotlib 生成的基本条形图。作者提供的图片。
- en: 'If we take a closer look at the plot, we will start to see more issues:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们仔细查看图表，会发现更多问题：
- en: It is difficult to read the labels on the x-axis
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阅读 x 轴上的标签很困难
- en: We have to work our brains more to understand the values of each of the bars
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们需要更加动脑筋来理解每个条形的值
- en: It is difficult to compare bars
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比较条形图是困难的
- en: Let’s see how we can create a much more effective and aesthetically pleasing
    visualisation.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何创建一个更有效、更具美感的可视化。
- en: 1\. Rotate Your Chart
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 旋转你的图表
- en: The first step in improving our bar chart is to rotate it 90 degrees.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 改善条形图的第一步是将其旋转 90 度。
- en: This makes it easier to read longer labels like the ones we have. Another option
    we could consider is rotating the labels on the x-axis, however, that requires
    the reader to also tilt their heads to try and read them.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得阅读像我们这样较长的标签变得更容易。我们还可以考虑旋转 x 轴上的标签，但这需要读者也倾斜头部来尝试阅读它们。
- en: Additionally, horizontal bar charts are a great way to save on space in a report
    or presentation whilst maintaining readability. This is especially useful if you
    have a large number of categories.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，水平条形图是在报告或演示文稿中节省空间的绝佳方式，同时保持可读性。如果你有大量类别，这尤其有用。
- en: To rotate our bar chart, we have to change the plot type we are calling in matplotlib
    from `.bar()` to `.barh()`.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要旋转我们的条形图，我们需要将 matplotlib 中调用的图表类型从 `.bar()` 改为 `.barh()`。
- en: '[PRE3]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: What we get back is the following chart with the category labels (well names)
    in a much nicer and easier-to-read format.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到的图表是带有类别标签（井名）的格式更加美观和易读。
- en: We can now tell which bar belongs to what well.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以明确哪一根条形属于哪个井。
- en: '![](../Images/36097f227bcb22ac4b335a3387706191.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/36097f227bcb22ac4b335a3387706191.png)'
- en: Matplotlib horizontal bar plot displaying porosity values for different reservoir
    intervals. Image by the author.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Matplotlib 水平条形图显示不同储层区间的孔隙度值。图片由作者提供。
- en: 2\. Arrange Bars in Order
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 按顺序排列条形
- en: The next step for improving our plot is to sort the bars in ascending order.
    This can help improve the readability of our chart considerably.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 改进图表的下一步是将条形按升序排序。这可以显著提高图表的可读性。
- en: Before applying any sorting to the data, you first need to consider if it is
    a sensible option.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在对数据进行任何排序之前，你需要首先考虑这是否是一个明智的选择。
- en: If your bars are related to categories that should be in a certain order, then
    sorting the data from longest to shortest may not be the best option. For example,
    days of the week, months of the year or age groups.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的条形与应按特定顺序排列的类别相关，那么按从长到短排序可能不是最佳选择。例如，星期几、月份或年龄组。
- en: Ordering bars from longest to shortest can make bar charts easier to read by
    allowing the reader to easily compare the different bars. This is especially true
    when the bars are of similar lengths.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 将条形按从长到短排序，可以使条形图更易于阅读，允许读者轻松比较不同的条形。当条形长度相近时尤为如此。
- en: It also creates a more aesthetically pleasing chart to look at by giving the
    data a sense of order.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这还通过赋予数据一种顺序感，使图表看起来更加美观。
- en: To sort the data, we need to go back to the dataframe, and sort the values by
    `porosity`.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 要排序数据，我们需要返回到数据框中，并按 `porosity` 排序值。
- en: '[PRE4]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: When we run the above code, we get the following plot returned.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们运行上述代码时，我们得到如下图表。
- en: '![](../Images/161cf07c6b6b474c153ae0b9b2af07fd.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/161cf07c6b6b474c153ae0b9b2af07fd.png)'
- en: Matplotlib horizontal bar plot displaying porosity values for different reservoir
    intervals in descending order. Image by the author.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Matplotlib 水平条形图显示不同储层区间的孔隙度值按降序排列。图片由作者提供。
- en: 3\. Remove Spines and Axes
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 移除边框和坐标轴
- en: If we have unnecessary chart elements such as gridlines and borders (commonly
    known as “chart junk”) it can distract the reader and can take longer for the
    chart to be understood.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们有多余的图表元素，如网格线和边框（通常称为“图表垃圾”），它们可能会分散读者的注意力，并且图表的理解可能需要更长时间。
- en: We can remove this extra chart junk, to improve, not only the readability of
    the chart but also the aesthetics and the message we are trying to get across
    to the reader.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以去除这些多余的图表垃圾，从而不仅改善图表的可读性，还能提高图表的美观性以及我们想传达的信息。
- en: For our chart, we will remove the top, bottom and right edges of the chart by
    calling upon `ax.spines[[‘right’, ‘top’, ‘bottom’]].set_visible(False)`.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的图表，我们将通过调用 `ax.spines[[‘right’, ‘top’, ‘bottom’]].set_visible(False)` 来移除图表的顶部、底部和右侧边缘。
- en: We will also hide the x-axis. You may be thinking why would we want to remove
    the numbers on the axis — wouldn’t that harm readability?
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将隐藏x轴。你可能会想，为什么我们要移除坐标轴上的数字——这不是会影响可读性吗？
- en: This is true, however, we will see in the next step, how we can make it better
    and easier for the reader to understand the values.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这是正确的，然而，我们将在下一步中看到如何让读者更容易理解这些值。
- en: '[PRE5]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: When we run the above code, we get back the following plot.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们运行上述代码时，得到如下图表。
- en: This now looks much cleaner than the previous step.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在看起来比前一步干净多了。
- en: '![](../Images/5bf7729d96d76385ea70029c36c125a7.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5bf7729d96d76385ea70029c36c125a7.png)'
- en: Matplotlib horizontal bar plot after removing extra chart junk. Image by the
    author.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 去除多余图表垃圾后的 Matplotlib 水平条形图。图片由作者提供。
- en: 4\. Add Data Labels
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 添加数据标签
- en: In the above image, we removed the x-axis ticks and numbers. This does reduce
    readability, however, if the x-axis were to remain, we are expecting our reader
    to do extra work when trying to understand the absolute values and compare the
    different bars.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述图片中，我们移除了 x 轴的刻度和数字。这确实减少了可读性，然而，如果 x 轴保留，我们期望读者在尝试理解绝对值并比较不同条形时需要额外的工作。
- en: To make the chart more effective, we can add data labels to each of the bars
    with the absolute values. This improves clarity, saves space, and improves precision.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使图表更有效，我们可以为每个条形添加绝对值数据标签。这提高了清晰度，节省了空间，并提高了精确性。
- en: To make adding labels easier on bar charts, the developers of matplotlib introduced
    the `[bar_label()](https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.bar_label.html)`
    function. This allows us to pass in our bar charts, and it will automatically
    add the labels.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更方便地在条形图中添加标签，matplotlib 的开发者引入了 `[bar_label()](https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.bar_label.html)`
    函数。这允许我们在条形图中自动添加标签。
- en: '[PRE6]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: When the above code is run, we get the following chart. We can see the absolute
    values directly at the end of the bars, which improves readability significantly.
    For example, if we went on bar length alone for the top two bars, we would say
    they were the same, however, if we look at the absolute value, we will see that
    they are very slightly different.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 当运行上述代码时，我们得到如下图表。我们可以直接在条形的末端看到绝对值，这显著提高了可读性。例如，如果仅根据条形长度来看前两个条形，我们会说它们是一样的，但如果查看绝对值，我们会发现它们略有不同。
- en: '![](../Images/29b05ad53fdc5d3fd6e5282af6536d46.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/29b05ad53fdc5d3fd6e5282af6536d46.png)'
- en: Matplotlib horizontal bar chart with data labels displayed to improve readability.
    Image by the author.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: Matplotlib 水平条形图中显示了数据标签，以提高可读性。图片由作者提供。
- en: Controlling the Label Format of matplotlib’s bar_label Function
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 控制 matplotlib 的 bar_label 函数的标签格式
- en: The `bar_label()` function allows us to provide a number of keyword arguments.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '`bar_label()` 函数允许我们提供多个关键字参数。'
- en: In the example below, I have changed the font size, colour and font weight.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的示例中，我更改了字体大小、颜色和字体粗细。
- en: Also, in order to place the labels on the inside edge of the bar, we can call
    upon the padding parameter (`pad`). If we use a negative number, we will be able
    to place the labels inside the bars.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，为了将标签放置在条形的内边缘，我们可以调用 padding 参数 (`pad`)。如果使用负数，我们将能够将标签放置在条形内部。
- en: The `fmt` parameter, allows us to control how the labels are displayed. Using
    `%.1f%%` means we are using 1 decimal place and including a % sign at the end
    of the label.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '`fmt` 参数允许我们控制标签的显示方式。使用 `%.1f%%` 意味着我们使用了 1 位小数，并在标签末尾包含一个 % 符号。'
- en: '[PRE7]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: When the above code is run, we get the following plot.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 当运行上述代码时，我们得到如下图。
- en: '![](../Images/98c5156144e13b8935fa9080f01e08c9.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/98c5156144e13b8935fa9080f01e08c9.png)'
- en: Matplotlib horizontal bar chart with data labels displayed on the inside edge
    of the bar to improve readability using bar_label. Image by the author.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: Matplotlib 水平条形图中，数据标签显示在条形的内边缘，以提高可读性，使用了 bar_label。图片由作者提供。
- en: 5\. Increase Spacing Between Bars
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5. 增加条形之间的间距
- en: Another step in improving readability is to increase the space between the bars.
    It allows us to create a less cluttered and more aesthetically pleasing chart.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 提高可读性的另一个步骤是增加条形之间的间距。它使我们能够创建一个更不拥挤、更具美感的图表。
- en: To increase the spacing, we first need to increase the height of our figure
    in the `plt.subplots()` function call, and then add the `height` parameter to
    the `plt.barh()` function.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 要增加间距，我们首先需要在 `plt.subplots()` 函数调用中增加图形的高度，然后将 `height` 参数添加到 `plt.barh()`
    函数中。
- en: '[PRE8]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: When the plot is generated, we now have a chart that has a little more room
    to breathe and is easier on the eye.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 当生成图表时，我们现在拥有了一个稍微宽松的图表，更加舒适。
- en: '![](../Images/273418c00b0e300af944e9fcfd57573e.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/273418c00b0e300af944e9fcfd57573e.png)'
- en: Matplotlib horizontal bar chart after increasing the spacing between the bars.
    Image by the author.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Matplotlib 水平条形图在增加条形之间的间距后。图片由作者提供。
- en: 6\. Choosing Colours for Bar Plots
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 6. 为条形图选择颜色
- en: Choosing colours for charts can be quite subjective and time-consuming. We ideally
    want to try and avoid overwhelming the reader with a rainbow palette of colours.
    Not only will the plot look poor, but it can hinder the readability and impact
    the message you are trying to get across.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 选择图表的颜色可能相当主观且耗时。我们理想上希望避免用彩虹色的调色板来淹没读者。不仅图表效果差，而且可能影响可读性和传达的信息。
- en: 'There are a few ways we can use colour in our bar chart:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在柱状图中使用颜色的几种方式：
- en: We can keep colours consistent, such as the blue in the previous charts
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以保持颜色的一致性，例如前面图表中的蓝色
- en: Use colour to draw attention to the top bar or bottom bar
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用颜色来引起对顶部或底部柱子的关注
- en: Use colour to draw attention to a specific bar
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用颜色来引起对特定柱状图的关注
- en: Use colour to highlight bars that meet certain criteria
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用颜色来突出显示符合特定标准的柱子
- en: Use a colour that is associated with category branding, for example using blue
    for Facebook, and red for YouTube
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用与类别品牌相关的颜色，例如使用蓝色代表 Facebook，红色代表 YouTube
- en: Use colour to show groupings
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用颜色来显示分组
- en: Improve accessibility for readers with colour vision deficiencies
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改善对色盲读者的可访问性
- en: And there are many more ways.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 还有许多其他方法。
- en: 'Check out this article if you are looking for a tool to help with colour selection:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在寻找帮助选择颜色工具的文章，可以查看这个：
- en: '[](/4-essential-tools-to-help-you-select-a-colour-palette-for-your-data-visualisation-ddb2ec92a08?source=post_page-----f87419cb14cb--------------------------------)
    [## 4 Essential Tools to Help You Select a Colour Palette for Your Data Visualisation'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/4-essential-tools-to-help-you-select-a-colour-palette-for-your-data-visualisation-ddb2ec92a08?source=post_page-----f87419cb14cb--------------------------------)
    [## 4 种选择数据可视化颜色方案的必备工具'
- en: Tools for Making it Easy to Select Colour Palettes for Data Visualisations
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使选择数据可视化颜色方案变得容易的工具
- en: towardsdatascience.com](/4-essential-tools-to-help-you-select-a-colour-palette-for-your-data-visualisation-ddb2ec92a08?source=post_page-----f87419cb14cb--------------------------------)
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/4-essential-tools-to-help-you-select-a-colour-palette-for-your-data-visualisation-ddb2ec92a08?source=post_page-----f87419cb14cb--------------------------------)'
- en: Let’s have a closer look at a few of these different options of using colour
    in a matplotlib bar plot.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们仔细看看这些在 matplotlib 柱状图中使用颜色的不同选项。
- en: Drawing Attention to a Single Bar using Colour
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用颜色引起对单个柱子的关注
- en: If we want to draw the reader’s attention to a specific bar, we can use the
    following code.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要吸引读者对某个特定柱子的注意，可以使用以下代码。
- en: Rather than creating a list for our colours, we will add the colours directly
    to the dataframe using the `apply` function and a lambda function. Here we are
    highlighting a specific well.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 与其为我们的颜色创建列表，不如直接使用 `apply` 函数和 lambda 函数将颜色添加到数据框中。在这里，我们高亮显示了一个特定的井。
- en: '[PRE9]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: When the above code is run, we get the following plot. We can see that well
    16/2–16 is highlighted in orange and immediately grabs your attention.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 当运行上述代码时，我们得到如下图表。我们可以看到井 16/2–16 被高亮显示为橙色，立即引起了你的注意。
- en: '![](../Images/242071908fbd85391c9b8a297ce865ca.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/242071908fbd85391c9b8a297ce865ca.png)'
- en: Matplotlib horizontal bar plot after applying colour to a single bar in order
    to draw the reader’s focus. Image by the author.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: Matplotlib 水平柱状图在应用颜色到单个柱子以引起读者的注意后的效果。图片由作者提供。
- en: Apply Colour to Above a Cutoff Value
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用颜色到超过阈值的值
- en: Another way to apply colour is by highlighting specific categories/bars that
    meet or exceed a cutoff.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种应用颜色的方法是通过突出显示符合或超过阈值的特定类别/柱子。
- en: In this example, we want to highlight the bars where porosity is greater than
    20%. We could just let the readers use the labels to identify the bars, however,
    to make it easier and quicker for the reader, we can highlight those bars.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们希望突出显示孔隙度大于20%的柱子。我们可以让读者通过标签来识别这些柱子，但为了让读者更容易和更快地找到它们，我们可以高亮显示这些柱子。
- en: This is done using the `apply` function within pandas and using a lambda function
    which checks if the values are greater than our cutoff value.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 这是通过在 pandas 中使用 `apply` 函数和 lambda 函数来检查值是否大于我们的阈值来完成的。
- en: '[PRE10]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: When the plot is generated, we get the following plot, and our eyes are immediately
    drawn to the top 5 bars.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 当图表生成后，我们得到如下图表，我们的视线立即被前五个柱子吸引。
- en: '![](../Images/1f6acf1e89dd9a4eaadc7a0f2f4debdd.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1f6acf1e89dd9a4eaadc7a0f2f4debdd.png)'
- en: Matplotlib bar chart showing bars that are greater than a 20% porosity cutoff.
    Image by the author.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: Matplotlib 柱状图显示了大于20%孔隙度阈值的柱子。图片由作者提供。
- en: However, the reader might not know why these five bars are highlighted, so we
    can add a text annotation to help them.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，读者可能不知道为什么这五个柱子被突出显示，因此我们可以添加文本注释来帮助他们。
- en: '[PRE11]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Using matplotlib’s `ax.text` and `ax.axvline`functions, we can add a label and
    a vertical cutoff line to explain why the top 5 bars are highlighted.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 matplotlib 的`ax.text`和`ax.axvline`函数，我们可以添加一个标签和一条垂直截断线，以解释为什么前 5 个柱子被突出显示。
- en: '![](../Images/107cac7fdd7f449d482e334ac979d0b0.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/107cac7fdd7f449d482e334ac979d0b0.png)'
- en: Matplotlib bar chart showing bars that are greater than a 20% porosity cutoff
    and after adding a text annotation. Image by the author.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 显示大于 20% 孔隙度截断值的柱状图，并在添加文本注释后。图片由作者提供。
- en: Applying a Traffic-Light-Type Scale to a Bar Chart
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将交通灯类型刻度应用于柱状图
- en: If we have multiple cutoffs or target values, we can use a traffic-light-type
    scale to indicate where each bar falls. Caution should be exercised when using
    conventional red, green and yellow colours, as they are not suitable for everyone,
    especially if they have colour perception issues.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们有多个截断值或目标值，我们可以使用交通灯类型的刻度来指示每个柱子的位置。使用传统的红色、绿色和黄色时应注意，因为这些颜色对所有人都不适用，特别是对于有色觉问题的人。
- en: In this example, we are going to have three colours, which have been picked
    from [**ColorBrewer 2.0**](https://colorbrewer2.org/)**,** to indicate where we
    have wells with good, average and poor porosity.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们将使用从 [**ColorBrewer 2.0**](https://colorbrewer2.org/) 中挑选的三种颜色**，**以指示我们在哪些地方的孔隙度好、平均或差。
- en: 'Instead of using a lambda function like in the previous example, we can create
    a new function called `bar_highlight` and pass in three parameters: our actual
    value (`value`), the average value cutoff (`average_value`) and the good value
    cutoff (`good_value`).'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前的示例中使用 lambda 函数不同，我们可以创建一个名为`bar_highlight`的新函数，并传入三个参数：我们的实际值（`value`）、平均值截断（`average_value`）和良好值截断（`good_value`）。
- en: We will then check the actual value against these cutoffs and assign a colour
    to it.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将检查实际值与这些截断值，并为其分配颜色。
- en: '[PRE12]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: To help the reader, we can add a new label and vertical line to indicate where
    these cutoff values are. In order to save typing the value multiple times, we
    can use f-strings in the calls to `ax.text`.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助读者，我们可以添加一个新标签和一条垂直线来指示这些截断值的位置。为了避免多次输入值，我们可以在调用`ax.text`时使用 f-strings。
- en: When we run the code, we get the following plot.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们运行代码时，我们会得到以下图表。
- en: We can immediately see that the data has been split into three groups of colour,
    which helps tell our story to the reader.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以立即看到数据已被分成三组颜色，这有助于向读者讲述我们的故事。
- en: '![](../Images/8e094db1d168d43696ba3097874f3406.png)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8e094db1d168d43696ba3097874f3406.png)'
- en: Using colouring to indicate the performance of different bars to cutoff/benchmark
    values. Image by the author.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 使用颜色来指示不同柱子对截断/基准值的表现。图片由作者提供。
- en: 7\. Add a Title
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 7\. 添加标题
- en: If we carry forward our chart where we are using a single 20% porosity cutoff,
    we can polish off our chart by adding an informative title. This tells the reader
    directly what the chart is about.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们继续使用单一的 20% 孔隙度截断值的图表，我们可以通过添加一个信息丰富的标题来完善图表。这直接告诉读者图表的内容。
- en: '![](../Images/153a3ceb6c83b4bc65bcb56af69e1557.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/153a3ceb6c83b4bc65bcb56af69e1557.png)'
- en: Matplotlib horizontal bar plot after a title has been added. Image by the author.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 添加标题后的 Matplotlib 横向柱状图。图片由作者提供。
- en: We can do this simply by adding a call to `ax.title` in our code.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过在代码中添加对`ax.title`的调用来简单实现这一点。
- en: '[PRE13]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Summary
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Even though matplotlib appears daunting at first, it can be a very powerful
    library for creating effective visualisations.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管一开始 matplotlib 看起来很吓人，但它实际上是一个非常强大的库，可以创建有效的可视化。
- en: With a few extra lines of code and the matplotlib library, we have seen how
    we can go from an ugly and boring bar plot to one that is more aesthetically pleasing
    to look at and helps tell a story to our readers.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 通过几行额外的代码和 matplotlib 库，我们已经看到如何将一个丑陋且无聊的柱状图变成一个更具美感的图表，帮助向读者讲述一个故事。
- en: '![](../Images/36097f227bcb22ac4b335a3387706191.png)![](../Images/75a522bdf640b3d9e8b73904a11750d0.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/36097f227bcb22ac4b335a3387706191.png)![](../Images/75a522bdf640b3d9e8b73904a11750d0.png)'
- en: Before and after transforming our bar chart from a bland figure to one much
    more visually appealing. Image by the author.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在将我们的柱状图从一个平淡的图形转变为更具视觉吸引力的图形之前和之后。图片由作者提供。
- en: Why not give these examples a try on your next bar chart?
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么不在下一个柱状图上尝试这些示例呢？
- en: I would love to hear in the comments about any tips that you have for working
    with matplotlib and making beautiful data visualisations.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 我很想在评论中听到你关于使用 matplotlib 和制作美丽数据可视化的任何技巧。
- en: '*Thanks for reading. Before you go, you should definitely subscribe to my content
    and get my articles in your inbox.* [***You can do that here!***](https://andymcdonaldgeo.medium.com/subscribe)*Alternatively,
    you can* [***sign up for my newsletter***](https://fabulous-founder-2965.ck.page/2ca286e572)
    *to get additional content straight into your inbox for free.*'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '*感谢阅读。在你离开之前，你应该订阅我的内容，以便将我的文章发送到你的邮箱。* [***你可以在这里操作！***](https://andymcdonaldgeo.medium.com/subscribe)*或者，你可以*
    [***注册我的新闻通讯***](https://fabulous-founder-2965.ck.page/2ca286e572) *以便免费将额外的内容直接发送到你的邮箱。*'
- en: '*Secondly, you can get the full Medium experience and support me and thousands
    of other writers by signing up for a membership. It only costs you $5 a month,
    and you have full access to all of the fantastic Medium articles and the chance
    to make money with your writing. If you sign up using* [***my link***](https://andymcdonaldgeo.medium.com/membership)***,***
    *you will support me directly with a portion of your fee, and it won’t cost you
    more. If you do so, thank you so much for your support!*'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '*其次，你可以通过注册会员来获得完整的 Medium 体验，同时支持我和成千上万其他作者。每月只需 $5，你就可以全面访问所有精彩的 Medium 文章，并有机会通过写作赚取收入。如果你使用*
    [***我的链接***](https://andymcdonaldgeo.medium.com/membership)***，*** *你将直接通过部分费用支持我，而不会增加你的花费。如果你这么做了，非常感谢你的支持！*'
- en: Dataset Used in this Tutorial
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本教程使用的数据集
- en: The dataset used for this tutorial is a subset of a training dataset used as
    part of a Machine Learning competition run by Xeek and FORCE 2020.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程使用的数据集是 Xeek 和 FORCE 2020 举办的机器学习比赛中的训练数据集的一个子集。
- en: Bormann, Peter, Aursand, Peder, Dilib, Fahad, Manral, Surrender, & Dischington,
    Peter. (2020). FORCE 2020 Well well log and lithofacies dataset for machine learning
    competition [Data set]. Zenodo. [https://doi.org/10.5281/zenodo.4351156](https://doi.org/10.5281/zenodo.4351156)
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: Bormann, Peter, Aursand, Peder, Dilib, Fahad, Manral, Surrender, & Dischington,
    Peter. (2020). FORCE 2020 油井日志和岩性数据集，用于机器学习竞赛 [数据集]。Zenodo. [https://doi.org/10.5281/zenodo.4351156](https://doi.org/10.5281/zenodo.4351156)
- en: This dataset is licensed under a a Creative Commons Attribution 4.0 International
    license.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 该数据集遵循 Creative Commons Attribution 4.0 International 许可证。
