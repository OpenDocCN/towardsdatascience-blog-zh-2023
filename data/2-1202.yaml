- en: How To Install A Private Docker Container Registry In Kubernetes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何在 Kubernetes 中安装私有 Docker 容器注册表
- en: 原文：[https://towardsdatascience.com/how-to-install-a-private-docker-container-registry-in-kubernetes-eadcfd6e0f27](https://towardsdatascience.com/how-to-install-a-private-docker-container-registry-in-kubernetes-eadcfd6e0f27)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-install-a-private-docker-container-registry-in-kubernetes-eadcfd6e0f27](https://towardsdatascience.com/how-to-install-a-private-docker-container-registry-in-kubernetes-eadcfd6e0f27)
- en: Get full control of where your images are stored
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 完全控制你图像存储的位置
- en: '[](https://medium.knulst.de/?source=post_page-----eadcfd6e0f27--------------------------------)[![Paul
    Knulst](../Images/9fcb767d927a1fe53ee739c584fdf92c.png)](https://medium.knulst.de/?source=post_page-----eadcfd6e0f27--------------------------------)[](https://towardsdatascience.com/?source=post_page-----eadcfd6e0f27--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----eadcfd6e0f27--------------------------------)
    [Paul Knulst](https://medium.knulst.de/?source=post_page-----eadcfd6e0f27--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.knulst.de/?source=post_page-----eadcfd6e0f27--------------------------------)[![Paul
    Knulst](../Images/9fcb767d927a1fe53ee739c584fdf92c.png)](https://medium.knulst.de/?source=post_page-----eadcfd6e0f27--------------------------------)[](https://towardsdatascience.com/?source=post_page-----eadcfd6e0f27--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----eadcfd6e0f27--------------------------------)
    [Paul Knulst](https://medium.knulst.de/?source=post_page-----eadcfd6e0f27--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----eadcfd6e0f27--------------------------------)
    ·7 min read·Feb 1, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----eadcfd6e0f27--------------------------------)
    ·阅读时间 7 分钟·2023年2月1日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/7845977d57ebf55058ab85daf608d88c.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7845977d57ebf55058ab85daf608d88c.png)'
- en: Photo by [Growtika](https://unsplash.com/@growtika?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/wLknZfsKmxQ?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Growtika](https://unsplash.com/@growtika?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    提供，刊登在 [Unsplash](https://unsplash.com/photos/wLknZfsKmxQ?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: Hosting a Docker private registry gives you full control over the storage location
    of your images and how you can access them. This is especially useful if you develop
    private projects that shouldn’t be publicly on Docker Hub.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 托管一个 Docker 私有注册表使你可以完全控制图像的存储位置以及如何访问它们。如果你开发的是不应公开在 Docker Hub 上的私人项目，这一点尤为有用。
- en: In this tutorial, you will learn how to install a private Docker registry in
    any Kubernetes cluster. It is a [follow-up of a tutorial previously released on
    this blog](https://www.paulsblog.dev/how-to-install-traefik-ingress-controller-in-kubernetes/)
    because it will use a Traefik Ingress Controller to expose the Docker registry.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，你将学习如何在任何 Kubernetes 集群中安装一个私有 Docker 注册表。这是 [之前在本博客发布的教程的后续内容](https://www.paulsblog.dev/how-to-install-traefik-ingress-controller-in-kubernetes/)，因为它将使用
    Traefik Ingress Controller 来暴露 Docker 注册表。
- en: Preparation
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Create Kubernetes Namespace
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建 Kubernetes 命名空间
- en: 'The first step is to create a Kubernetes namespace where all resources will
    be applied during this tutorial:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是创建一个 Kubernetes 命名空间，在本教程中所有资源都将在该命名空间中应用：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: PersistentVolumeClaim
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PersistentVolumeClaim
- en: In this section, you will mount a volume into a dedicated Kubernetes Pod using
    a PersistentVolumeClaim. A PersistentVolumeClaim (`PVC`) is a Kubernetes resource
    to use a pre-defined abstract PersistentVolume (`PV`) storage without exposing
    how those volumes are implemented.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将使用 PersistentVolumeClaim 将一个卷挂载到一个专用的 Kubernetes Pod 中。PersistentVolumeClaim（`PVC`）是一个
    Kubernetes 资源，用于使用预定义的抽象 PersistentVolume（`PV`）存储，而不暴露这些卷是如何实现的。
- en: 💡 **Prerequisite:** *A PersistentVolume should exist within the Kubernetes cluster.
    A PersistentVolume (*`*PV*`*) is a storage definition that was either manually
    provisioned by a user or dynamically provisioned using a storage class.* [*See
    this link for further information*](https://kubernetes.io/docs/concepts/storage/persistent-volumes/)*.*
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 💡 **前提条件：** *Kubernetes 集群中应该存在一个 PersistentVolume。PersistentVolume（`*PV*`）是一个存储定义，可以是用户手动配置的，也可以是使用存储类动态配置的。*
    [*有关更多信息，请参见此链接*](https://kubernetes.io/docs/concepts/storage/persistent-volumes/)*。*
- en: To set up the PersistentVolumeClaim that will be used in the private Docker
    registry, this tutorial will assume that you already have a preconfigured PersistentVolume
    called `csi-cinder-classic`.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 为了设置将在私有 Docker 注册表中使用的 PersistentVolumeClaim，本教程假设你已经有一个预配置的 PersistentVolume，名称为
    `csi-cinder-classic`。
- en: '1\. Create a new file (`registry-pvc.yaml`) containing the PersistentVolumeClaim
    using the `csi-cinder-classic` storage class:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 创建一个新文件（`registry-pvc.yaml`），包含使用 `csi-cinder-classic` 存储类的 PersistentVolumeClaim：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '2\. Apply it to the Kubernetes Cluster:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 将其应用到 Kubernetes 集群：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '3\. Verify if the persistent volume claim was successfully created:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 验证持久卷声明是否成功创建：
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Set Up Docker Registry
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 Docker Registry
- en: Now, that you have created the namespace and the PersistentVolumeClaim you can
    deploy a Docker registry using the external storage and make the registry available
    across the entire Kubernetes cluster.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已创建了命名空间和 PersistentVolumeClaim，可以使用外部存储部署 Docker registry，并使其在整个 Kubernetes
    集群中可用。
- en: Generate User & Password
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生成用户与密码
- en: To set up the Docker registry, you need to generate a user and password that
    will be used to push and pull images to the registry.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置 Docker registry，你需要生成一个用户和密码，用于推送和拉取镜像到 registry。
- en: 'Create a new file `gen-pass.sh` that contains the following content:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个新文件 `gen-pass.sh`，包含以下内容：
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 💡 **Note:** *Change REGISTRY_USER and REGISTRY_PASS to your needs. Also, since*
    `*htpasswd*` *was removed from the latest Docker images we will be using version
    2.7.0 to generate the user and password. For more information* [*have a look at
    this stack overflow post*](https://stackoverflow.com/questions/62531462/docker-local-registry-exec-htpasswd-executable-file-not-found-in-path)*.*
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 💡 **注意：** *根据需要更改 REGISTRY_USER 和 REGISTRY_PASS。此外，由于`*htpasswd*` *在最新的 Docker
    镜像中已被移除，我们将使用版本 2.7.0 来生成用户和密码。更多信息* [*请查看这个 stack overflow 文章*](https://stackoverflow.com/questions/62531462/docker-local-registry-exec-htpasswd-executable-file-not-found-in-path)*。*
- en: 'Execute the script which will create the credentials within the subfolder `./registry-creds`:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 执行脚本，这将创建在子文件夹 `./registry-creds` 中的凭据：
- en: '[PRE5]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Install Docker Registry Using Helm
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Helm 安装 Docker Registry
- en: In the following steps, you will use Helm to install the Docker registry.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的步骤中，你将使用 Helm 安装 Docker registry。
- en: 💡 **Note:** *Helm is the package manager for Kubernetes, focused on automating
    the installation of all kinds of Kubernetes applications.*
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 💡 **注意：** *Helm 是 Kubernetes 的包管理器，专注于自动化安装各种 Kubernetes 应用程序。*
- en: '1\. Add the `twuni/docker-registry` Helm repository that is a successor of
    the official Docker registry:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 添加 `twuni/docker-registry` Helm 仓库，该仓库是官方 Docker registry 的继任者：
- en: '[PRE6]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '2\. Update local Helm chart repository cache:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 更新本地 Helm 图表仓库缓存：
- en: '[PRE7]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '3\. Search for the latest version of `twuni/docker-registry` Helm chart version:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 搜索 `twuni/docker-registry` Helm 图表的最新版本：
- en: '[PRE8]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '4\. Create a `registry-chart.yaml` which will be used to install the Docker
    registry in our Kubernetes cluster:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. 创建一个 `registry-chart.yaml` 文件，用于在我们的 Kubernetes 集群中安装 Docker registry：
- en: '[PRE9]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 💡**Note:** *Replace the* `*htpasswd*` *string with the content of the file that
    was generated by the* `*gen-pass.sh*` *script (*`*./registry-cred/htpasswd*`*)*
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 💡**注意：** *将* `*htpasswd*` *字符串替换为由* `*gen-pass.sh*` *脚本生成的文件内容 (*`*./registry-cred/htpasswd*`*)*
- en: '5\. Install the Docker registry Helm chart using the `registry-chart.yaml`:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 5\. 使用 `registry-chart.yaml` 安装 Docker registry Helm 图表：
- en: '[PRE10]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '6\. Verify installation:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 6\. 验证安装：
- en: '[PRE11]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'If you want to change something like the `replicaCount`, the `htpasswd` or
    the storage, you can do this by adjusting the `registry-chart.yaml` and reapply
    it by executing:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想更改像 `replicaCount`、`htpasswd` 或存储之类的内容，可以通过调整 `registry-chart.yaml` 来完成，并通过执行以下命令重新应用：
- en: '[PRE12]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: How To Uninstall?
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何卸载？
- en: 'To uninstall the Docker registry, you have to remove it from the Kubernetes
    cluster with Helm:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 要卸载 Docker registry，你需要使用 Helm 将其从 Kubernetes 集群中移除：
- en: '[PRE13]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Then remove the Docker registry namespace from the Kubernetes cluster:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 然后从 Kubernetes 集群中删除 Docker registry 命名空间：
- en: '[PRE14]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Add Docker Registry Ingress
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加 Docker Registry Ingress
- en: To expose the Docker registry, you will use Traefik Ingress Controller to allow
    access to the registry through HTTPS with a proper TLS certificate.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 要暴露 Docker registry，你将使用 Traefik Ingress Controller 通过 HTTPS 和适当的 TLS 证书来允许访问
    registry。
- en: 💡**Note:** *Read about how to install Traefik Ingress Controller in any Kubernetes
    cluster within this tutorial:* [*https://www.paulsblog.dev/how-to-install-traefik-ingress-controller-in-kubernetes/*](https://www.paulsblog.dev/how-to-install-traefik-ingress-controller-in-kubernetes/)
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 💡**注意：** *请阅读关于如何在任何 Kubernetes 集群中安装 Traefik Ingress Controller 的教程：* [*https://www.paulsblog.dev/how-to-install-traefik-ingress-controller-in-kubernetes/*](https://www.paulsblog.dev/how-to-install-traefik-ingress-controller-in-kubernetes/)
- en: '1\. Create a new file (`ingressroute.yaml`) and make sure to replace YOUR_DOMAIN
    with your Docker registry domain:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 创建一个新文件（`ingressroute.yaml`），并确保将 YOUR_DOMAIN 替换为你的 Docker registry 域名：
- en: '[PRE15]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '2\. Apply the IngressRoute by executing:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 通过执行来应用 IngressRoute：
- en: '[PRE16]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '3\. Verify if the Kubernetes resource was successfully created:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 验证Kubernetes资源是否成功创建：
- en: '[PRE17]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Push Images To Private Registry In Kubernetes Cluster
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将镜像推送到Kubernetes集群中的私有注册表
- en: To show how to push a Docker Image to our new Docker registry, this tutorial
    will show how to pull a public Docker Hub image, tag it, and then push it to your
    registry.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 为了展示如何将Docker镜像推送到我们的新Docker注册表，本教程将展示如何拉取一个公共的Docker Hub镜像，对其进行标记，然后将其推送到你的注册表。
- en: 1\. Log in to the Docker registry by using the previously created credentials
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 使用先前创建的凭据登录Docker注册表
- en: '[PRE18]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '2\. Pull the `nginx:latest` Docker image:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 拉取`nginx:latest` Docker镜像：
- en: '[PRE19]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 3\. Tag the image with a custom name and prepend the private Docker registry
    domain name
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 用自定义名称标记镜像，并在前面加上私有Docker注册表域名
- en: '[PRE20]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 4\. Push the Docker Image to the registry
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. 将Docker镜像推送到注册表
- en: '[PRE21]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Use Docker Registry To Pull Images In Your Kubernetes Cluster
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Docker注册表在Kubernetes集群中拉取镜像
- en: As you have a Docker registry deployed in your Kubernetes cluster, you can start
    using it by pulling previously pushed images for your Kubernetes Pods.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 由于你在Kubernetes集群中部署了Docker注册表，你可以通过拉取之前推送的镜像来开始使用它，为你的Kubernetes Pods。
- en: To learn how a private Docker registry can be used for pulling images, you will
    create a simple Kubernetes pod in a new `test` namespace. This Kubernetes Pod
    will use the previously pushed image `YOUR_DOMAIN/my-nginx`.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解如何使用私有Docker注册表拉取镜像，你将创建一个新的`test`命名空间中的简单Kubernetes pod。这个Kubernetes Pod将使用之前推送的镜像`YOUR_DOMAIN/my-nginx`。
- en: 'First, you have to create the `test` Kubernetes namespace:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你必须创建`test` Kubernetes命名空间：
- en: '[PRE22]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Create Docker Registry Secret
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建Docker注册表Secret
- en: '**This is the most important step!**'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**这是最重要的一步！**'
- en: 'You have to create a Docker Secret for accessing the Docker registry from your
    Kubernetes cluster. To do this, use the credentials from the previous step and
    create a Kubernetes Docker Secret in the `test` namespace:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 你必须创建一个Docker Secret，以便从Kubernetes集群访问Docker注册表。为此，使用上一步的凭据，在`test`命名空间中创建一个Kubernetes
    Docker Secret：
- en: '[PRE23]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '💡 **Note: This Kubernetes Docker secret resource must be** *created within
    the correct namespace!*'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 💡 **注意：这个Kubernetes Docker secret资源必须** *在正确的命名空间中创建！*
- en: Create Kubernetes Pod With Image From Docker Registry
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Docker注册表中的镜像创建Kubernetes Pod
- en: 'After the Kubernetes secret containing the credentials for the Docker registry
    is created, you create a new Kubernetes Deployment (`test-nginx.yaml`) that uses
    your registry:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建包含Docker注册表凭据的Kubernetes secret后，你创建一个新的Kubernetes Deployment（`test-nginx.yaml`），该Deployment使用你的注册表：
- en: '[PRE24]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: If taking a close look at this file, you will see that it contains three essential
    differences from a normal `nginx` deployment.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如果仔细查看此文件，你会发现它与正常的`nginx`部署有三个基本的不同之处。
- en: '`image: YOUR_DOMAIN/my-nginx`'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`image: YOUR_DOMAIN/my-nginx`'
- en: '`imagePullSecrets: - name: regred`'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`imagePullSecrets: - name: regred`'
- en: Both changes are necessary to use the Docker registry. The first option selects
    the image to use in the pod (registry URL as a prefix + image name). The second
    option sets which Docker secret is used to pull the image. If you changed credentials
    or names, you have to update both values.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个更改都是使用Docker注册表所必需的。第一个选项选择要在pod中使用的镜像（注册表URL作为前缀+镜像名称）。第二个选项设置用于拉取镜像的Docker
    secret。如果你更改了凭据或名称，你必须更新这两个值。
- en: 'Now, deploy the Kubernetes Deployment in your Cluster:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在你的集群中部署Kubernetes Deployment：
- en: '[PRE25]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Use `kubectl describe podname -n test` to see if the image will be pulled and
    the container gets started correctly. The output should look like this:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`kubectl describe podname -n test`查看镜像是否会被拉取，以及容器是否能够正确启动。输出应如下所示：
- en: '![](../Images/2201868b5b2ce5b8408252b4fc36d20d.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2201868b5b2ce5b8408252b4fc36d20d.png)'
- en: Pod Pull Image Events after deployment my-nginx Kubernetes Deployment
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 部署my-nginx Kubernetes部署后的Pod拉取镜像事件
- en: Closing Notes
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结束语
- en: Hopefully, this article gave you a good overview of how to set up a private
    Docker registry in your Kubernetes cluster.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 希望这篇文章给你提供了一个关于如何在Kubernetes集群中设置私有Docker注册表的良好概述。
- en: Remember, having a Private Docker registry is essential if deploying Docker
    services that are not Open Source!
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，如果部署的Docker服务不是开源的，拥有私有Docker注册表是至关重要的！
- en: 'To have an easy, repeatable procedure that you can run on any Kubernetes cluster,
    I created [a GitHub Gist containing all necessary files](https://gist.github.com/paulknulst/f077420faead4fd6e901d46eb9ba00d4).
    If you already [have a Traefik Ingress Controller running in your Kubernetes cluster](https://www.paulsblog.dev/how-to-install-traefik-ingress-controller-in-kubernetes/),
    you can simply download all files, adjust them to your needs, and then apply them
    by executing:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提供一个可以在任何 Kubernetes 集群上运行的简单、可重复的流程，我创建了 [一个包含所有必要文件的 GitHub Gist](https://gist.github.com/paulknulst/f077420faead4fd6e901d46eb9ba00d4)。如果你已经
    [在你的 Kubernetes 集群中运行了 Traefik Ingress Controller](https://www.paulsblog.dev/how-to-install-traefik-ingress-controller-in-kubernetes/)，你可以简单地下载所有文件，调整到你的需求，然后通过执行来应用它们：
- en: '[PRE26]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: I would love to hear your feedback about this tutorial. Furthermore, if you
    also have set up a Docker registry and use a different approach, please comment
    here and explain what you have done differently. Also, if you have any questions,
    please ask them in the comments. I will answer them if possible.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我很想听到你对这个教程的反馈。此外，如果你也设置了 Docker 注册表并使用了不同的方法，请在这里评论并解释你做了什么不同的操作。如果你有任何问题，请在评论中提出。我会尽可能回答。
- en: Feel free to connect with me on [my blog](https://www.paulsblog.dev), [LinkedIn](https://www.linkedin.com/in/paulknulst/),
    [Twitter](https://twitter.com/paulknulst), and [GitHub](https://github.com/paulknulst).
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 随时通过 [我的博客](https://www.paulsblog.dev)、[LinkedIn](https://www.linkedin.com/in/paulknulst/)、[Twitter](https://twitter.com/paulknulst)
    和 [GitHub](https://github.com/paulknulst) 与我联系。
- en: '*This article was initially published on my blog at* [*https://www.paulsblog.dev/how-to-install-a-private-docker-container-registry-in-kubernetes/*](https://www.paulsblog.dev/how-to-install-a-private-docker-container-registry-in-kubernetes/)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '*这篇文章最初发布在我的博客上* [*https://www.paulsblog.dev/how-to-install-a-private-docker-container-registry-in-kubernetes/*](https://www.paulsblog.dev/how-to-install-a-private-docker-container-registry-in-kubernetes/)'
