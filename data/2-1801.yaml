- en: Running SQL Queries in Jupyter Notebook using JupySQL, DuckDB, and MySQL
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Jupyter Notebook 中使用 JupySQL、DuckDB 和 MySQL 运行 SQL 查询
- en: 原文：[https://towardsdatascience.com/running-sql-queries-in-jupyter-notebook-using-jupysql-duckdb-and-mysql-3c53fbe40f8d](https://towardsdatascience.com/running-sql-queries-in-jupyter-notebook-using-jupysql-duckdb-and-mysql-3c53fbe40f8d)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/running-sql-queries-in-jupyter-notebook-using-jupysql-duckdb-and-mysql-3c53fbe40f8d](https://towardsdatascience.com/running-sql-queries-in-jupyter-notebook-using-jupysql-duckdb-and-mysql-3c53fbe40f8d)
- en: Learn how to run SQL in your Jupyter Notebooks
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 学习如何在你的 Jupyter Notebooks 中运行 SQL
- en: '[](https://weimenglee.medium.com/?source=post_page-----3c53fbe40f8d--------------------------------)[![Wei-Meng
    Lee](../Images/10fc13e8a6858502d6a7b89fcaad7a10.png)](https://weimenglee.medium.com/?source=post_page-----3c53fbe40f8d--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3c53fbe40f8d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3c53fbe40f8d--------------------------------)
    [Wei-Meng Lee](https://weimenglee.medium.com/?source=post_page-----3c53fbe40f8d--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://weimenglee.medium.com/?source=post_page-----3c53fbe40f8d--------------------------------)[![魏梦龙](../Images/10fc13e8a6858502d6a7b89fcaad7a10.png)](https://weimenglee.medium.com/?source=post_page-----3c53fbe40f8d--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3c53fbe40f8d--------------------------------)[![数据科学的前沿](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3c53fbe40f8d--------------------------------)
    [魏梦龙](https://weimenglee.medium.com/?source=post_page-----3c53fbe40f8d--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----3c53fbe40f8d--------------------------------)
    ·8 min read·Feb 24, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [数据科学的前沿](https://towardsdatascience.com/?source=post_page-----3c53fbe40f8d--------------------------------)
    ·8 分钟阅读·2023年2月24日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/243efc1d9e9a6b0829180fe106bd4934.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/243efc1d9e9a6b0829180fe106bd4934.png)'
- en: Photo by [Wafer WAN](https://unsplash.com/@waferwan?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Wafer WAN](https://unsplash.com/@waferwan?utm_source=medium&utm_medium=referral)
    提供，来自 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: 'Traditionally, data scientists use Jupyter Notebook to pull data from database
    servers, or from external datasets (such as CSV, JSON files, etc) and store them
    into Pandas dataframes:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 传统上，数据科学家使用 Jupyter Notebook 从数据库服务器或外部数据集（如 CSV、JSON 文件等）中提取数据，并将其存储到 Pandas
    数据框中：
- en: '![](../Images/045e46113ac1e7638be1dcd0a1163924.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/045e46113ac1e7638be1dcd0a1163924.png)'
- en: All images by author unless otherwise stated
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 除非另有说明，否则所有图片均由作者提供
- en: 'They then use the dataframes for visualization purposes. This approach has
    a couple of drawbacks:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，他们使用数据框进行可视化。这种方法有几个缺点：
- en: Querying a database server may degrade the performance of the database server,
    which may not be optimized for analytical workloads.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查询数据库服务器可能会降低数据库服务器的性能，因为数据库服务器可能未针对分析工作负载进行优化。
- en: Loading the data into dataframes take up precious resources. For example, if
    the intention is to visualize certain aspects of the dataset, you need to first
    load the entire dataset into memory before visualization can be performed.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将数据加载到数据框中会占用宝贵的资源。例如，如果目的是可视化数据集的某些方面，则需要先将整个数据集加载到内存中，然后才能进行可视化操作。
- en: To improve the performance of the above, ideally the processing of the data
    (all the data wrangling and filtering) should be offloaded to a client which is
    able to perform the data analytics efficiently, and return the result to be used
    for visualization. And this is the topic of this article — **JupySQL**.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提高上述操作的性能，理想情况下，应将数据处理（所有的数据清理和过滤）卸载到能够高效执行数据分析的客户端，并返回结果用于可视化。这就是本文的主题 —
    **JupySQL**。
- en: J**upySQL is a SQL client for Jupyter Notebook, allowing you to access your
    datasets directly in Jupyer Notebook using SQL. The main idea of JupySQL is to
    run SQL in a Jupyter Notebook, hence its name.**
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**JupySQL 是一个 Jupyter Notebook 的 SQL 客户端，允许你使用 SQL 直接访问数据集。JupySQL 的主要思想是在
    Jupyter Notebook 中运行 SQL，因此得名。**'
- en: 'JupySQL allows you to query your dataset using SQL, without needing you to
    maintain the dataframe to store your dataset. For example, you could use JupySQL
    to connect to your database server (such as MySQL or PostgreSQL), or your CSV
    files through the DuckDB engine. The result of your query can then be directly
    used for visualization. The following figure shows how JupySQL works:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: JupySQL 允许你使用 SQL 查询数据集，而无需维护存储数据集的数据框。例如，你可以使用 JupySQL 连接到数据库服务器（如 MySQL 或
    PostgreSQL），或通过 DuckDB 引擎访问你的 CSV 文件。查询结果可以直接用于可视化。下图展示了 JupySQL 的工作原理：
- en: '![](../Images/40d2fce894792268bd0d96361347db05.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/40d2fce894792268bd0d96361347db05.png)'
- en: 'You can use the following magic commands to use JupySQL in your Jupyter Notebooks:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用以下魔法命令在 Jupyter Notebooks 中使用 JupySQL：
- en: '`%sql` — this is a line magic command to execute a SQL statement'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%sql` — 这是一个行魔法命令，用于执行 SQL 语句'
- en: '`%%sql` — this is a cell magic command to execute multiple-line SQL statements'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%%sql` — 这是一个单元魔法命令，用于执行多行 SQL 语句'
- en: '`%sqlplot` — this is a line magic command to plot a chart'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%sqlplot` — 这是一个行魔法命令，用于绘制图表'
- en: Our Datasets
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们的数据集
- en: 'For this article, I am going to use a few datasets:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本文，我将使用一些数据集：
- en: '**Titanic Dataset** (*titanic_train.csv*). *Source*: [https://www.kaggle.com/datasets/tedllh/titanic-train](https://www.kaggle.com/datasets/tedllh/titanic-train).
    *Licensing* — Database Contents License (DbCL) v1.0'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**泰坦尼克号数据集** (*titanic_train.csv*)。 *来源*：[https://www.kaggle.com/datasets/tedllh/titanic-train](https://www.kaggle.com/datasets/tedllh/titanic-train)。
    *许可证* — 数据库内容许可证 (DbCL) v1.0'
- en: '**Insurance Dataset** (*insurance.csv*). *Source*: [https://www.kaggle.com/datasets/teertha/ushealthinsurancedataset](https://www.kaggle.com/datasets/teertha/ushealthinsurancedataset?resource=download.).
    *Licensing* — [CC0: Public Domain](https://creativecommons.org/publicdomain/zero/1.0/).'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**保险数据集** (*insurance.csv*)。 *来源*：[https://www.kaggle.com/datasets/teertha/ushealthinsurancedataset](https://www.kaggle.com/datasets/teertha/ushealthinsurancedataset?resource=download.)。
    *许可证* — [CC0: 公开领域](https://creativecommons.org/publicdomain/zero/1.0/)。'
- en: '**2015 Flights Delay Dataset** (*airports.csv*). *Source*: [https://www.kaggle.com/datasets/usdot/flight-delays](https://www.kaggle.com/datasets/usdot/flight-delays).
    *Licensing* — [CC0: Public Domain](https://creativecommons.org/publicdomain/zero/1.0/)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**2015 年航班延误数据集** (*airports.csv*)。 *来源*：[https://www.kaggle.com/datasets/usdot/flight-delays](https://www.kaggle.com/datasets/usdot/flight-delays)。
    *许可证* — [CC0: 公开领域](https://creativecommons.org/publicdomain/zero/1.0/)'
- en: '**Boston Dataset** (*boston.csv*). *Source*: [https://www.kaggle.com/datasets/altavish/boston-housing-dataset](https://www.kaggle.com/datasets/altavish/boston-housing-dataset).
    *Licensing* — [CC0: Public Domain](https://creativecommons.org/publicdomain/zero/1.0/)'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**波士顿数据集** (*boston.csv*)。 *来源*：[https://www.kaggle.com/datasets/altavish/boston-housing-dataset](https://www.kaggle.com/datasets/altavish/boston-housing-dataset)。
    *许可证* — [CC0: 公开领域](https://creativecommons.org/publicdomain/zero/1.0/)'
- en: '**Apple Historical Dataset** (AAPL.csv). *Source*: ([https://www.kaggle.com/datasets/prasoonkottarathil/apple-lifetime-stocks-dataset](https://www.kaggle.com/datasets/prasoonkottarathil/apple-lifetime-stocks-dataset)).
    *License* — [CC0: Public Domain](https://creativecommons.org/publicdomain/zero/1.0/)'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**苹果历史数据集** (AAPL.csv)。 *来源*：[https://www.kaggle.com/datasets/prasoonkottarathil/apple-lifetime-stocks-dataset](https://www.kaggle.com/datasets/prasoonkottarathil/apple-lifetime-stocks-dataset)。
    *许可证* — [CC0: 公开领域](https://creativecommons.org/publicdomain/zero/1.0/)'
- en: Installing JupySQL
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 JupySQL
- en: 'To install the JupySQL, you can use the `pip` command:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 JupySQL，你可以使用 `pip` 命令：
- en: '[PRE0]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The above statement installs the `jupysql` package as well as the `duckdb-engine`.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 上述语句安装了 `jupysql` 包以及 `duckdb-engine`。
- en: 'Next step is to load the `sql` extension using the `%load_ext` line magic command:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是使用 `%load_ext` 行魔法命令加载 `sql` 扩展：
- en: '[PRE1]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Integrating with DuckDB
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与 DuckDB 集成
- en: 'With the `sql` extension loaded, you need to load a database engine in which
    you can use it to process your data. For this section, I am going to use DuckDB.
    The following statement starts a DuckDB in-memory database:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 加载 `sql` 扩展后，你需要加载一个数据库引擎来处理数据。对于本节，我将使用 DuckDB。以下语句启动一个 DuckDB 内存数据库：
- en: '[PRE2]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Performing a query
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 执行查询
- en: 'With the DuckDB database started, let’s perform a query using the airports.csv
    file:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 启动 DuckDB 数据库后，让我们使用 airports.csv 文件执行查询：
- en: '[PRE3]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You will see the following output:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 你将看到以下输出：
- en: '![](../Images/ac17759472c92a58412055a3420a371a.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ac17759472c92a58412055a3420a371a.png)'
- en: 'If your SQL query is long, use the `%%sql` cell magic command:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的 SQL 查询很长，请使用 `%%sql` 单元魔法命令：
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The above SQL statement generates the following output:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 上述 SQL 语句生成了以下输出：
- en: '![](../Images/1ab89a50abb6c4134e20ddcad6287dd1.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1ab89a50abb6c4134e20ddcad6287dd1.png)'
- en: Saving Queries
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保存查询
- en: 'You can also use the`--save` option to save the query so that it can be used
    later:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以使用`--save`选项保存查询，以便后续使用：
- en: '[PRE5]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/cbedffeddc2827536c099f9ed5aec256.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cbedffeddc2827536c099f9ed5aec256.png)'
- en: 'If you want to save a query without executing it, use the `--no-execute` option:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想保存一个查询但不执行它，请使用`--no-execute`选项：
- en: '[PRE6]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The above statements saved the result of the query as a table named `boston`.
    You will see the following output:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 上述语句将查询结果保存为名为`boston`的表。你将看到以下输出：
- en: '[PRE7]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Plotting
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 绘图
- en: JupySQL allows you to plot charts using the `%sqlplot` line magic command.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: JupySQL 允许你使用 `%sqlplot` 行魔术命令绘制图表。
- en: Histogram
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 直方图
- en: 'Using the saved query in the previous section, you can now plot a histogram
    showing the distribution of the `age` and `medv` fields:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 使用前面部分保存的查询，你现在可以绘制一个直方图，显示`age`和`medv`字段的分布：
- en: '[PRE8]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Here is the histogram showing the distribution of values for the `age` and
    `medv` fields:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这是显示`age`和`medv`字段值分布的直方图：
- en: '![](../Images/b5f2e086355ced24376f2ed9b8736814.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b5f2e086355ced24376f2ed9b8736814.png)'
- en: 'Here’s another example. This time round, we will use the titanic_train.csv
    file:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这是另一个示例。这一次，我们将使用 titanic_train.csv 文件：
- en: '[PRE9]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](../Images/ab4da20440e64c643db854959906e851.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ab4da20440e64c643db854959906e851.png)'
- en: 'You can now plot the distribution of ages for all the passengers:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以绘制所有乘客的年龄分布：
- en: '[PRE10]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: You can specify the number of bins you want using the `--bin` option.
  id: totrans-67
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可以使用`--bin`选项来指定你想要的箱数。
- en: '![](../Images/eaa05f94a056dad6ec55023085b95136.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/eaa05f94a056dad6ec55023085b95136.png)'
- en: 'You can also customize the plot by assigning the plot to a variable, which
    is of type `matplotlib.axes._subplots.AxesSubplot`:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过将绘图分配给一个变量来定制绘图，该变量的类型为`matplotlib.axes._subplots.AxesSubplot`：
- en: '[PRE11]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Using the `matplotlib.axes._subplots.AxesSubplot` object, you can turn on the
    grid, set a title, as well as set the x-label for the plot:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`matplotlib.axes._subplots.AxesSubplot`对象，你可以开启网格、设置标题以及为绘图设置 x 轴标签：
- en: '![](../Images/d3bda39fe4bfe149f53d086dfd84332a.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d3bda39fe4bfe149f53d086dfd84332a.png)'
- en: Box plot
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 箱形图
- en: 'Besides histogram, you can also plot box plots:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 除了直方图，你还可以绘制箱形图：
- en: '[PRE12]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The resultant box plot shows the median, minimum, and maximum values as well
    as outliers for both the `age` and `fare` fields:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 结果箱形图显示了`age`和`fare`字段的中位数、最小值和最大值以及异常值：
- en: '![](../Images/ac59b10d99ed183e8576a79db3283f5e.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ac59b10d99ed183e8576a79db3283f5e.png)'
- en: 'You can also view the boxplots for the `sibsp` and `parch` fields:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以查看`sibsp`和`parch`字段的箱形图：
- en: '[PRE13]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![](../Images/312243836dd970a1c5e734f5fb8f2da4.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/312243836dd970a1c5e734f5fb8f2da4.png)'
- en: Pie chart
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 饼图
- en: You can also plot pie charts using JupySQL’s legacy plotting API. For this example,
    I am going to use the airports.csv file to find the number of airports belonging
    to each state.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以使用 JupySQL 的遗留绘图 API 绘制饼图。对于这个示例，我将使用 airports.csv 文件来找出每个州的机场数量。
- en: 'First, I use SQL to count all the airports from each state and filter the top
    five:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我使用 SQL 统计每个州的所有机场并筛选出前五名：
- en: '[PRE14]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The result of the `%sql` statement is a `sql.run.ResultSet` object. From this
    object, I can obtain the dataframe if I want to:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '`%sql`语句的结果是一个`sql.run.ResultSet`对象。从这个对象中，如果需要，我可以获得数据框：'
- en: '[PRE15]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![](../Images/1a9a19ad4a577d017a5c0e286825ca63.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1a9a19ad4a577d017a5c0e286825ca63.png)'
- en: 'I can also use it to call the `pie()` API to plot a pie chart:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 我还可以使用它调用`pie()` API 来绘制饼图：
- en: '[PRE16]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![](../Images/6a6f133061e2ebb47d8586589284a9a3.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6a6f133061e2ebb47d8586589284a9a3.png)'
- en: 'The plotting API also supports bar charts:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 绘图 API 还支持条形图：
- en: '[PRE17]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![](../Images/39b800c595e1f5ac7c77bda56e444945.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/39b800c595e1f5ac7c77bda56e444945.png)'
- en: 'And line charts using the `plot()` function (here I am using the AAPL.csv file):'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 并使用`plot()`函数绘制折线图（这里我使用 AAPL.csv 文件）：
- en: '[PRE18]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '![](../Images/09de289e6c1c3b0ba63a8f76fc5d8297.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/09de289e6c1c3b0ba63a8f76fc5d8297.png)'
- en: Integrating with MySQL
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集成 MySQL
- en: 'So far all the examples in the previous few sections were all using DuckDB.
    Let’s now try to connect to a database server. For my example, I will use the
    MySQL server with the following details:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 迄今为止，前面几个部分的所有示例都是使用 DuckDB。现在让我们尝试连接到数据库服务器。对于我的示例，我将使用 MySQL 服务器，具体信息如下：
- en: '**Database** — Insurance'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据库** — 保险'
- en: '**Table** — Insurance (imported from the insurance.csv file)'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**表格** — 保险（从 insurance.csv 文件导入）'
- en: '**User account** — `user1`'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户账户** — `user1`'
- en: 'To connect to the MySQL server, create a **SQLAlchemy URL standard** connection
    string, in the following format: `mysql://*username*:*password*@*host*/*db*`'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 要连接到 MySQL 服务器，请创建一个**SQLAlchemy URL 标准**连接字符串，格式如下：`mysql://*username*:*password*@*host*/*db*`
- en: 'The following code snippet when run will prompt you to enter the password for
    the `user1` account:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下代码片段时，将提示你输入 `user1` 账户的密码：
- en: '[PRE19]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Enter the password for the `user1` account:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 输入 `user1` 账户的密码：
- en: '![](../Images/e49945f5cb9d819394a4e8e166fe5a45.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e49945f5cb9d819394a4e8e166fe5a45.png)'
- en: 'To connect JupySQL to the MySQL server, use the `%sql` line magic, together
    with the connection string:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 要将 JupySQL 连接到 MySQL 服务器，请使用 `%sql` 行魔法，并附上连接字符串：
- en: '[PRE20]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'If you use the `%sql` line magic without any inputs, you will see the current
    connections (which is DuckDB and MySQL):'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用 `%sql` 行魔法而没有任何输入，你将会看到当前的连接（即 DuckDB 和 MySQL）：
- en: '[PRE21]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '![](../Images/67bbd9cb9035553579e716ca7368af60.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/67bbd9cb9035553579e716ca7368af60.png)'
- en: 'Let’s select the **Insurance** table to examine its content:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们选择**保险**表来检查其内容：
- en: '[PRE22]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '![](../Images/4efc0b067ea097fe466ca98134fb4129.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4efc0b067ea097fe466ca98134fb4129.png)'
- en: 'And let’s plot a bar chart using the `bar()` API:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们使用 `bar()` API 绘制一个条形图：
- en: '[PRE23]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '![](../Images/06940a90ecf6ec929dd7fbc51da667cc.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/06940a90ecf6ec929dd7fbc51da667cc.png)'
- en: '**If you like reading my articles and that it helped your career/study, please
    consider signing up as a Medium member. It is $5 a month, and it gives you unlimited
    access to all the articles (including mine) on Medium. If you sign up using the
    following link, I will earn a small commission (at no additional cost to you).
    Your support means that I will be able to devote more time on writing articles
    like this.**'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果你喜欢阅读我的文章，并且它对你的职业/学习有所帮助，请考虑注册成为 Medium 会员。每月 $5，它可以让你无限访问 Medium 上的所有文章（包括我的文章）。如果你使用以下链接注册，我将获得一小笔佣金（对你没有额外费用）。你的支持意味着我将能投入更多时间写类似的文章。**'
- en: '[](https://weimenglee.medium.com/membership?source=post_page-----3c53fbe40f8d--------------------------------)
    [## Join Medium with my referral link - Wei-Meng Lee'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://weimenglee.medium.com/membership?source=post_page-----3c53fbe40f8d--------------------------------)
    [## 使用我的推荐链接加入 Medium - Wei-Meng Lee'
- en: Read every story from Wei-Meng Lee (and thousands of other writers on Medium).
    Your membership fee directly supports…
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阅读 Wei-Meng Lee（以及 Medium 上成千上万其他作家的）每一个故事。你的会员费用直接支持……
- en: weimenglee.medium.com](https://weimenglee.medium.com/membership?source=post_page-----3c53fbe40f8d--------------------------------)
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '[weimenglee.medium.com](https://weimenglee.medium.com/membership?source=post_page-----3c53fbe40f8d--------------------------------)'
- en: Summary
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概要
- en: I hope this article has given you a better idea of how to use JupySQL and the
    various ways to connect to different data sources, such as MySQL and DuckDB. Also,
    besides connecting to our datasets, I have also showed you how you can use JupySQL
    to perform visualization directly using the result of your query. As usual, be
    sure to give it a try and let me know how it goes for you!
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望这篇文章让你更好地了解如何使用 JupySQL 以及连接到不同数据源（如 MySQL 和 DuckDB）的各种方法。此外，除了连接到我们的数据集，我还展示了如何使用
    JupySQL 直接对查询结果进行可视化。像往常一样，请务必尝试一下，并告诉我效果如何！
