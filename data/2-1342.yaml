- en: Introduction to Apache Iceberg Tables
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Apache Iceberg 表介绍
- en: 原文：[https://towardsdatascience.com/introduction-to-apache-iceberg-tables-a791f1758009](https://towardsdatascience.com/introduction-to-apache-iceberg-tables-a791f1758009)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/introduction-to-apache-iceberg-tables-a791f1758009](https://towardsdatascience.com/introduction-to-apache-iceberg-tables-a791f1758009)
- en: A few Compelling Reasons to Choose Apache Iceberg for Data Lakes
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择 Apache Iceberg 作为数据湖的几个令人信服的理由
- en: '[](https://mshakhomirov.medium.com/?source=post_page-----a791f1758009--------------------------------)[![💡Mike
    Shakhomirov](../Images/bc6895c7face3244d488feb97ba0f68e.png)](https://mshakhomirov.medium.com/?source=post_page-----a791f1758009--------------------------------)[](https://towardsdatascience.com/?source=post_page-----a791f1758009--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----a791f1758009--------------------------------)
    [💡Mike Shakhomirov](https://mshakhomirov.medium.com/?source=post_page-----a791f1758009--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://mshakhomirov.medium.com/?source=post_page-----a791f1758009--------------------------------)[![💡Mike
    Shakhomirov](../Images/bc6895c7face3244d488feb97ba0f68e.png)](https://mshakhomirov.medium.com/?source=post_page-----a791f1758009--------------------------------)[](https://towardsdatascience.com/?source=post_page-----a791f1758009--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----a791f1758009--------------------------------)
    [💡Mike Shakhomirov](https://mshakhomirov.medium.com/?source=post_page-----a791f1758009--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----a791f1758009--------------------------------)
    ·8 min read·Apr 10, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----a791f1758009--------------------------------)
    ·8 分钟阅读·2023年4月10日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/8757d57a9e2fc3aae50cadf617507568.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8757d57a9e2fc3aae50cadf617507568.png)'
- en: Photo by [Annie Spratt](https://unsplash.com/@anniespratt?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 由 [Annie Spratt](https://unsplash.com/@anniespratt?utm_source=medium&utm_medium=referral)
    提供的照片，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: '**Apache Iceberg**: What is it? Apache Iceberg — is it a new data lake file
    format? A table format? Why is it so good? Time travel for data lakes?'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**Apache Iceberg**：这是什么？Apache Iceberg——它是新的数据湖文件格式吗？还是表格格式？它为何如此优秀？数据湖的时间旅行？'
- en: I will try to answer all these questions in this story.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我将在这个故事中尝试回答所有这些问题。
- en: Transactionally consistent data lake tables with point-in-time snapshot isolation
    is all we need.
  id: totrans-10
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 事务一致的数据湖表以及时间点快照隔离是我们所需的一切。
- en: Selecting a table format is a crucial choice for anybody pursuing a data lake
    or data mesh strategy. Some important data lake platform features to consider
    include **schema evolution support,** **read and write time**, **scalability**
    (is data processing Hadoop splittable?), **compression** efficiency and **time
    travel** to name a few.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 选择表格格式是任何追求数据湖或数据网格策略的人都必须做出的关键选择。选择数据湖平台时需要考虑的一些重要功能包括**模式演变支持**、**读写时间**、**可扩展性**（数据处理是否可以Hadoop分割？）、**压缩**效率以及**时间旅行**等。
- en: Choosing the right file and table format based on business requirements will
    define how fast and cost-effective your data platform might be.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 根据业务需求选择正确的文件和表格格式将决定你的数据平台的速度和成本效益。
- en: '**Iceberg** is a ***table format***, engine and file format agnostic. Iceberg
    is not, in general, a development of a previous technology like **Apache Hive**.
    And it is a good thing, because developing something from an older technology
    might be limiting. A good example is how schema can change over time, and Iceberg
    can help to handle this as simply as renaming a column. ***It was designed and
    is proven to perform in data lake platforms at scale on the world’s most demanding
    workloads.***'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**Iceberg** 是一种***表格格式***，引擎和文件格式无关。Iceberg 通常不是像**Apache Hive**这样的旧技术的开发。这是件好事，因为从旧技术中开发可能会有局限性。一个好的例子是模式如何随时间变化，而Iceberg可以像重命名列一样简单地处理这种变化。***它被设计并证明在全球最苛刻的工作负载中大规模的数据湖平台上表现良好。***'
- en: More and more data tools introduce Iceberg tables support.
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 越来越多的数据工具开始引入冰山表的支持。
- en: 'For instance, we can create an Apache Iseberg table in AWS Athena (must be
    engine 3) like so:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以在 AWS Athena（必须是引擎 3）中这样创建一个 Apache Iceberg 表：
- en: 'Google’s BigQuery now also supports Iceberg tables:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌的 BigQuery 现在也支持 Iceberg 表：
- en: Iceberg tables and data platform types
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 冰山表和数据平台类型
- en: Netflix created Iceberg originally, and it was supported and donated to the
    Apache Software Foundation eventually. Now, Iceberg is developed independently,
    it is a completely non-profit, open-source project and is focused on dealing with
    challenging data platform architectures.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Netflix 最初创建了 Iceberg，最终它得到了 Apache 软件基金会的支持和捐赠。现在，Iceberg 独立开发，它是一个完全非盈利的开源项目，专注于处理复杂的数据平台架构。
- en: It supports multiple big data file formats, including Apache Avro, Apache Parquet,
    and Apache ORC.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 它支持多种大数据文件格式，包括 Apache Avro、Apache Parquet 和 Apache ORC。
- en: Keeping data in the data lake is one the most simple solutions when we design
    the data platform.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计数据平台时，将数据保存在数据湖中是最简单的解决方案之一。
- en: It requires much less maintenance compared to modern data warehouse solutions.
  id: totrans-21
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 相比于现代数据仓库解决方案，它需要的维护要少得多。
- en: Data lakes are typically used to store all types of data — structured and unstructured
    — at any size. Data lakes were traditionally connected with the Apache Hadoop
    Distributed File System (HDFS). However, organizations are increasingly using
    object storage solutions such as Amazon S3, Google Cloud Storage or Microsoft
    Azure Data Lake Storage.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 数据湖通常用于存储所有类型的数据——结构化和非结构化——无论大小。数据湖传统上与 Apache Hadoop 分布式文件系统（HDFS）连接。然而，组织越来越多地使用对象存储解决方案，如
    Amazon S3、Google Cloud Storage 或 Microsoft Azure Data Lake Storage。
- en: In a few words, data lakes simplify data management by centralizing the data.
  id: totrans-23
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 简而言之，数据湖通过集中管理数据来简化数据管理。
- en: 'Opposite to that, when every access is routed through a single system ( data
    warehouse), it simplifies concurrency management and updates but limits flexibility
    and raises costs. I previously wrote about it here:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 与此相反，当每次访问都通过一个单一系统（数据仓库）进行时，它简化了并发管理和更新，但限制了灵活性并增加了成本。我之前在这里写过：
- en: '[](/data-platform-architecture-types-f255ac6e0b7?source=post_page-----a791f1758009--------------------------------)
    [## Data Platform Architecture Types'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/data-platform-architecture-types-f255ac6e0b7?source=post_page-----a791f1758009--------------------------------)
    [## 数据平台架构类型'
- en: How well does it answer your business needs? Dilemma of a choice.
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 它在多大程度上满足了您的业务需求？选择的困境。
- en: towardsdatascience.com](/data-platform-architecture-types-f255ac6e0b7?source=post_page-----a791f1758009--------------------------------)
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/data-platform-architecture-types-f255ac6e0b7?source=post_page-----a791f1758009--------------------------------)
- en: It is all great but while building a data lake data platform we might face some
    other issues as well, i.e. no time travel, no schema evolution support, and complexity
    of data transformation and data definition.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 一切都很棒，但在构建数据湖数据平台时，我们可能还会遇到其他一些问题，例如没有时间旅行、没有模式演变支持以及数据转换和定义的复杂性。
- en: When we build a data lake data platform, external tables will most likely bring
    the whole set of cons related to that architecture… but Iceberg helps to solve
    this.
  id: totrans-29
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当我们构建数据湖数据平台时，外部表通常会带来与该架构相关的一整套缺点……但 Iceberg 有助于解决这些问题。
- en: '**At least some well-known limitations of traditional external tables:**'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**传统外部表的一些已知限制：**'
- en: For example, we **can’t modify them with DML statements and data consistency
    is not guaranteed.** Having said that, if the underlying data was changed during
    the processing we might not get consistent results.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如，我们**不能通过 DML 语句修改它们，且数据一致性不能得到保证**。话虽如此，如果在处理过程中底层数据发生变化，我们可能会得到不一致的结果。
- en: Have usually a **limited number of concurrent queries** in modern data warehouses,
    i.e. 4 in BigQuery.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现代数据仓库中通常有**有限的并发查询数**，例如 BigQuery 中为 4。
- en: External tables **do not work with clustering** and will not let export data
    from them.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 外部表**不支持集群**，也不允许从中导出数据。
- en: Will not let us use wildcards to reference table names.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不允许使用通配符引用表名。
- en: '**No time travel features**'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**没有时间旅行功能**'
- en: From my experience, data consistency is one of the most important features large-scale
    analytics would require. Iceberg solves it and now multiple engines ( Spark, Hive,
    Presto, Dremio, etc.) can operate on the same table simultaneously.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我的经验，数据一致性是大规模分析所需的最重要的特性之一。Iceberg 解决了这个问题，现在多个引擎（如 Spark、Hive、Presto、Dremio
    等）可以同时操作同一张表。
- en: It also offers many other brilliant features such as rollback to the previous
    table version (to quietly resolve issues), and advanced data filtering capabilities
    at scale when processing huge amounts of data.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 它还提供了许多其他出色的功能，例如回滚到先前的表版本（以悄悄解决问题），以及在处理海量数据时的高级数据过滤能力。
- en: Data consistency and improved processing efficiency
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据一致性和改进的处理效率
- en: A good example is when an ETL process modifies the dataset by adding and deleting
    files from storage, another application reading the dataset may process a partial
    or inconsistent representation of the dataset and produce inaccurate results.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 一个好的例子是，当 ETL 过程通过从存储中添加和删除文件来修改数据集时，另一个读取数据集的应用程序可能会处理数据集的部分或不一致的表示，从而产生不准确的结果。
- en: Iceberg would typically mitigate these risks by leveraging lots of manifest
    (metadata) files to take snapshots along the way the data is being processed.
    It will capture schemas and maintain deltas, including file information and partitioning
    data to guarantee consistency and complete isolation.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Iceberg 通常通过利用大量清单（元数据）文件来缓解这些风险，以便在数据处理过程中进行快照。它将捕获模式并维护增量，包括文件信息和分区数据，以保证一致性和完全隔离。
- en: Iceberg also automatically arranges snapshot metadata in a hierarchical manner
    which ensures quick and efficient table modifications without redefining all dataset
    files, resulting in optimal performance while working at data lake scale.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Iceberg 还会自动以层次结构的方式排列快照元数据，这确保了快速高效的表格修改，无需重新定义所有数据集文件，从而在数据湖规模下实现最佳性能。
- en: Iceberg offers SQL commands that allow you to combine new data (MERGE), change
    old rows, and remove specific rows.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Iceberg 提供 SQL 命令，允许你合并新数据（MERGE）、更改旧行和删除特定行。
- en: Iceberg can eagerly rebuild data files to improve read performance or employ
    delete deltas to speed up updates.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Iceberg 可以积极重建数据文件以提高读取性能，或者使用删除增量加快更新速度。
- en: 'A good merge example can be found here:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 一个好的合并示例可以在这里找到：
- en: '[](/advanced-sql-techniques-for-beginners-211851a28488?source=post_page-----a791f1758009--------------------------------)
    [## Advanced SQL techniques for beginners'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[//advanced-sql-techniques-for-beginners-211851a28488?source=post_page-----a791f1758009--------------------------------](//advanced-sql-techniques-for-beginners-211851a28488?source=post_page-----a791f1758009--------------------------------)
    [## 初学者的高级 SQL 技巧'
- en: On a scale from 1 to 10 how good are your data warehousing skills?
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 1 到 10 的范围内，你的数据仓库技能有多好？
- en: towardsdatascience.com](/advanced-sql-techniques-for-beginners-211851a28488?source=post_page-----a791f1758009--------------------------------)
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/advanced-sql-techniques-for-beginners-211851a28488?source=post_page-----a791f1758009--------------------------------)'
- en: 'Another one which can be applied to that AWS Athena table above is this:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个可以应用于上述 AWS Athena 表格的示例如下：
- en: '![](../Images/2ddfd9ebb83759959e340d702256c0e3.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2ddfd9ebb83759959e340d702256c0e3.png)'
- en: Image by author
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Time travel feature
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 时间旅行功能
- en: 'Modern data warehouses allow to time travel in your data, i.e. we can go to
    a specific timestamp to get that particular state of data in our table. For instance,
    in Google Cloud BigQuery we can run this SQL below to do so:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现代数据仓库允许你在数据中进行时间旅行，即我们可以转到特定的时间戳以获取表格中的特定数据状态。例如，在 Google Cloud BigQuery 中，我们可以运行以下
    SQL 来实现：
- en: '[PRE0]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: It might be a “nice-to-have” feature for data lake platforms as well.
  id: totrans-54
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这也可能是数据湖平台的一个“不错的附加功能”。
- en: 'If you design a data architecture around files, such as Apache ORC or Apache
    Parquet, you will profit from ease of implementation, but you will also run into
    that issue described above. Time travel is not supported. Schema evolution has
    always been a problem too. When fields change over time it might be a problem.
    For instance, AVRO file format has schema evolution support and I previously wrote
    about big data file formats’ pros and cons here:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你围绕文件设计数据架构，例如 Apache ORC 或 Apache Parquet，你将受益于实现的简便，但你也会遇到上述提到的问题。时间旅行不被支持。模式演变一直是个问题。当字段随时间变化时可能会出现问题。例如，AVRO
    文件格式支持模式演变，我之前写过关于大数据文件格式优缺点的文章：
- en: '[](/big-data-file-formats-explained-275876dc1fc9?source=post_page-----a791f1758009--------------------------------)
    [## Big Data File Formats, Explained'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '[//big-data-file-formats-explained-275876dc1fc9?source=post_page-----a791f1758009--------------------------------](//big-data-file-formats-explained-275876dc1fc9?source=post_page-----a791f1758009--------------------------------)
    [## 大数据文件格式详解'
- en: Parquet vs ORC vs AVRO vs JSON. Which one to choose and how to use them?
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Parquet 与 ORC 与 AVRO 与 JSON。该选择哪个以及如何使用它们？
- en: towardsdatascience.com](/big-data-file-formats-explained-275876dc1fc9?source=post_page-----a791f1758009--------------------------------)
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/big-data-file-formats-explained-275876dc1fc9?source=post_page-----a791f1758009--------------------------------)'
- en: Iceberg keeps the whole history within the Iceberg table format, with no storage
    system dependencies.
  id: totrans-59
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Iceberg 将整个历史记录保存在 Iceberg 表格格式中，没有存储系统依赖。
- en: Iceberg table users may query past states at any Iceberg snapshot or historical
    point in time for consistent results, comparison, or rollback to remedy errors
    since the historical state is immutable.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: Iceberg 表格用户可以在任何 Iceberg 快照或历史时间点查询过去的状态，以获得一致的结果、进行比较或回滚以修复错误，因为历史状态是不可变的。
- en: '[PRE1]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Schema evolution support
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模式演进支持
- en: It’s not a secret that data lake files might change over time, as well as their
    schemas. Adding a column in the Iceberg table now will not return “dead” data.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 数据湖文件以及它们的模式随着时间的推移可能会发生变化，这并不是秘密。现在在 Iceberg 表中添加一列不会返回“无效”数据。
- en: Column names and the order can be changed. The best part is that schema updates
    never need to rebuild your table.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 列名和顺序可以更改。最棒的是，模式更新从不需要重建你的表。
- en: '[PRE2]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Iceberg allows for in-place table changes and it ensures correctness, i.e. new
    columns added never read existing values from another column. When data volume
    varies, we now can modify partition layout or change a table schema just using
    SQL, even for nested structures, i.e.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Iceberg 允许就地修改表，并确保正确性，即添加的新列永远不会从其他列中读取现有值。当数据量发生变化时，我们现在可以仅通过 SQL 修改分区布局或更改表模式，即使是嵌套结构。
- en: '[PRE3]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This is what Iceberg calls Partition evolution.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是 Iceberg 所谓的分区演进。
- en: When you modify a partition specification, the existing data written with an
    earlier specification remains unaffected.
  id: totrans-69
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当你修改分区规范时，使用早期规范写入的现有数据不会受到影响。
- en: Each partition version’s metadata is saved separately. Iceberg does not require
    expensive diversions such as rewriting table data or moving to a new table.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 每个分区版本的元数据被单独保存。Iceberg 不需要昂贵的操作，例如重写表数据或迁移到新表。
- en: Improved partitioning
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 改进的分区
- en: In Iceberg terms it is called “Hidden partitions”. The traditional data lake
    way of using partitions is called “Hive partitioning layout”.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Iceberg 中，这被称为“隐藏分区”。传统的数据湖分区方式称为“Hive 分区布局”。
- en: 'Let’s consider an external table with Hive partitioning layout in BigQuery:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一个在 BigQuery 中具有 Hive 分区布局的外部表：
- en: '[PRE4]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Partitions must be explicit in Hive and are shown as columns, thus the `**user_transactions**`
    table would contain a `**dt**` date column. This means that all SQL queries that
    do something with our table will have to have `**dt**` filter in addition to a
    `**timestamp**` filter.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Hive 中，分区必须是明确的，并且显示为列，因此 `**user_transactions**` 表将包含一个 `**dt**` 日期列。这意味着对我们表进行操作的所有
    SQL 查询都必须除了 `**timestamp**` 过滤器外，还要有 `**dt**` 过滤器。
- en: Hive requires partition values. It does not understand the link between the
    transaction timestamp and `dt` in our table example above.
  id: totrans-76
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Hive 需要分区值。它不了解事务时间戳和我们表中的 `dt` 之间的联系。
- en: '**Oppositely**, Iceberg generates partition values by taking a column value
    and, if needed, modifying it. Iceberg is in charge of translating transaction
    **`timestamp**` to `**dt**` and maintaining the connection. Iceberg may hide partitioning
    since it does not require user-maintained partition columns.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**相反**，Iceberg 通过取列值并在必要时进行修改来生成分区值。Iceberg 负责将事务**`timestamp`** 转换为 `**dt**`
    并维护连接。Iceberg 可能会隐藏分区，因为它不需要用户维护分区列。'
- en: Partition values are always created appropriately and utilized to speed up queries
    wherever possible.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 分区值总是被适当地创建并在可能的情况下用于加速查询。
- en: '`dt` would be invisible to both producers and consumers and queries no longer
    rely on the actual physical layout of our table.'
  id: totrans-79
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`dt` 对生产者和消费者都是不可见的，查询不再依赖于我们表的实际物理布局。'
- en: 'It helps to avoid partitioning errors while transforming the data. For example,
    using the wrong date format, led to incorrect partitioning, not failures: `**20230101**`
    instead of `**2023–01–01**`. ***This is a well-known and most common problem with
    Hive partitioning payout.*** Another problem that Iceberg helps to solve is that
    in Hive partitioning layout all working queries are related to the table’s partitioning
    scheme, therefore changing the partitioning setup will break queries.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 它有助于避免在转换数据时出现分区错误。例如，使用错误的日期格式，导致不正确的分区，而不是失败：`**20230101**` 代替 `**2023–01–01**`。***这是
    Hive 分区布局中一个众所周知且最常见的问题。*** 另一个 Iceberg 有助于解决的问题是，在 Hive 分区布局中，所有工作的查询都与表的分区方案相关，因此更改分区设置将会破坏查询。
- en: Conclusion
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: Relational databases and data warehouses both support atomic transactions and
    time travel but they do it in their proprietary way. Iceberg, being an Apache
    project, is completely open source and not reliant on any specific tools or data
    lake engines.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 关系型数据库和数据仓库都支持原子事务和时间旅行，但它们以其专有的方式实现。Iceberg 作为一个 Apache 项目，是完全开源的，不依赖于任何特定的工具或数据湖引擎。
- en: Iceberg supports industry-standard file formats like Parquet, ORC, and Avro
    and is compatible with key data lake engines such as Dremio, Spark, Hive, and
    Presto. Its wide community collaboration generates new ideas and provides assistance
    in the long term. It features various active communities, such as public Slack
    channels, in which everyone is free and welcome to participate. It was designed
    and is proven to perform in data lake platforms at scale on the world’s largest
    workloads and environments.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Iceberg 支持行业标准文件格式如 Parquet、ORC 和 Avro，并且与 Dremio、Spark、Hive 和 Presto 等关键数据湖引擎兼容。其广泛的社区合作生成新想法，并提供长期的帮助。它拥有各种活跃的社区，例如公共
    Slack 频道，任何人都可以自由参与。它经过设计并证明在全球最大工作负载和环境中的数据湖平台上表现出色。
- en: Organizations now can enjoy the full potential and advantages of moving to a
    data lake architecture by utilizing Iceberg. Feel the cost-effectiveness of cloud
    storage-based data platforms with no need to sacrifice the features and capabilities
    of traditional databases and data warehouse solutions.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 组织现在可以通过利用 Iceberg 充分发挥数据湖架构的潜力和优势。体验基于云存储的数据平台的成本效益，同时无需牺牲传统数据库和数据仓库解决方案的功能和能力。
- en: It makes our data lake platform really flexible and reliable
  id: totrans-85
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 它使我们的数据湖平台真正灵活且可靠
- en: '**To conclude these are the benefits of the Iceberg table format:**'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**总结一下，Iceberg 表格格式的优点如下：**'
- en: Several separate programs can handle the same dataset concurrently and consistently.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多个独立程序可以同时一致地处理相同的数据集。
- en: Improved data processing and data reliability (more efficient updates for very
    large data lake-scale tables).
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进的数据处理和数据可靠性（针对非常大的数据湖规模表格的更新更加高效）。
- en: Improved schema handling as it evolves over time.
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随着时间的推移，改进的模式处理。
- en: ETL pipelines are greatly simplified (By acting on data in place in the data
    lake rather than transporting data between numerous separate systems).
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ETL 管道大大简化（通过对数据湖中的数据进行操作，而不是在多个独立系统之间传输数据）。
- en: 'Recommended read:'
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 推荐阅读：
- en: 1\. [https://cloud.google.com/bigquery/docs/time-travel](https://cloud.google.com/bigquery/docs/time-travel)
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. [https://cloud.google.com/bigquery/docs/time-travel](https://cloud.google.com/bigquery/docs/time-travel)
- en: 2\. [https://www.apache.org/](https://www.apache.org/)
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. [https://www.apache.org/](https://www.apache.org/)
- en: 3\. [https://hive.apache.org/](https://hive.apache.org/)
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. [https://hive.apache.org/](https://hive.apache.org/)
- en: 4\. [https://iceberg.apache.org/community/](https://iceberg.apache.org/community/)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. [https://iceberg.apache.org/community/](https://iceberg.apache.org/community/)
- en: 5\. [https://cloud.google.com/bigquery/docs/iceberg-tables](https://cloud.google.com/bigquery/docs/iceberg-tables)
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 5\. [https://cloud.google.com/bigquery/docs/iceberg-tables](https://cloud.google.com/bigquery/docs/iceberg-tables)
- en: 6\. [https://medium.com/towards-data-science/data-platform-architecture-types-f255ac6e0b7](https://medium.com/towards-data-science/data-platform-architecture-types-f255ac6e0b7)
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 6\. [https://medium.com/towards-data-science/data-platform-architecture-types-f255ac6e0b7](https://medium.com/towards-data-science/data-platform-architecture-types-f255ac6e0b7)
- en: 7\. [https://medium.com/towards-data-science/big-data-file-formats-explained-275876dc1fc9](https://medium.com/towards-data-science/big-data-file-formats-explained-275876dc1fc9)
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 7\. [https://medium.com/towards-data-science/big-data-file-formats-explained-275876dc1fc9](https://medium.com/towards-data-science/big-data-file-formats-explained-275876dc1fc9)
- en: 8\. [https://iceberg.apache.org/docs/latest/evolution/](https://iceberg.apache.org/docs/latest/evolution/)
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 8\. [https://iceberg.apache.org/docs/latest/evolution/](https://iceberg.apache.org/docs/latest/evolution/)
- en: 9\. [https://iceberg.apache.org/docs/latest/partitioning/#icebergs-hidden-partitioning](https://iceberg.apache.org/docs/latest/partitioning/#icebergs-hidden-partitioning)
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 9\. [https://iceberg.apache.org/docs/latest/partitioning/#icebergs-hidden-partitioning](https://iceberg.apache.org/docs/latest/partitioning/#icebergs-hidden-partitioning)
- en: 10\. [https://cloud.google.com/bigquery/docs/external-data-cloud-storage#sql](https://cloud.google.com/bigquery/docs/external-data-cloud-storage#sql)
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 10\. [https://cloud.google.com/bigquery/docs/external-data-cloud-storage#sql](https://cloud.google.com/bigquery/docs/external-data-cloud-storage#sql)
