- en: These 7 Programming Habits Are Making You a Less Productive Data Scientist
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这7个编程习惯让你成为一个低效的数据科学家
- en: 原文：[https://towardsdatascience.com/these-7-programming-habits-are-making-you-a-less-productive-data-scientist-6d9767fd8ff3?source=collection_archive---------9-----------------------#2023-02-03](https://towardsdatascience.com/these-7-programming-habits-are-making-you-a-less-productive-data-scientist-6d9767fd8ff3?source=collection_archive---------9-----------------------#2023-02-03)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/these-7-programming-habits-are-making-you-a-less-productive-data-scientist-6d9767fd8ff3?source=collection_archive---------9-----------------------#2023-02-03](https://towardsdatascience.com/these-7-programming-habits-are-making-you-a-less-productive-data-scientist-6d9767fd8ff3?source=collection_archive---------9-----------------------#2023-02-03)
- en: Fixing these habits can make you a more efficient data scientist
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修正这些习惯可以让你成为一个更高效的数据科学家
- en: '[](https://madison13.medium.com/?source=post_page-----6d9767fd8ff3--------------------------------)[![Madison
    Hunter](../Images/fa84176a13175e75944b49e110b92e14.png)](https://madison13.medium.com/?source=post_page-----6d9767fd8ff3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----6d9767fd8ff3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----6d9767fd8ff3--------------------------------)
    [Madison Hunter](https://madison13.medium.com/?source=post_page-----6d9767fd8ff3--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://madison13.medium.com/?source=post_page-----6d9767fd8ff3--------------------------------)[![Madison
    Hunter](../Images/fa84176a13175e75944b49e110b92e14.png)](https://madison13.medium.com/?source=post_page-----6d9767fd8ff3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----6d9767fd8ff3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----6d9767fd8ff3--------------------------------)
    [Madison Hunter](https://madison13.medium.com/?source=post_page-----6d9767fd8ff3--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6a8c6841e521&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthese-7-programming-habits-are-making-you-a-less-productive-data-scientist-6d9767fd8ff3&user=Madison+Hunter&userId=6a8c6841e521&source=post_page-6a8c6841e521----6d9767fd8ff3---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----6d9767fd8ff3--------------------------------)
    ·9 min read·Feb 3, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F6d9767fd8ff3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthese-7-programming-habits-are-making-you-a-less-productive-data-scientist-6d9767fd8ff3&user=Madison+Hunter&userId=6a8c6841e521&source=-----6d9767fd8ff3---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6a8c6841e521&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthese-7-programming-habits-are-making-you-a-less-productive-data-scientist-6d9767fd8ff3&user=Madison+Hunter&userId=6a8c6841e521&source=post_page-6a8c6841e521----6d9767fd8ff3---------------------post_header-----------)
    发表在[Towards Data Science](https://towardsdatascience.com/?source=post_page-----6d9767fd8ff3--------------------------------)
    ·9分钟阅读·2023年2月3日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F6d9767fd8ff3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthese-7-programming-habits-are-making-you-a-less-productive-data-scientist-6d9767fd8ff3&user=Madison+Hunter&userId=6a8c6841e521&source=-----6d9767fd8ff3---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F6d9767fd8ff3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthese-7-programming-habits-are-making-you-a-less-productive-data-scientist-6d9767fd8ff3&source=-----6d9767fd8ff3---------------------bookmark_footer-----------)![](../Images/745feeba3d2e35ac0d0ccd075f510ce9.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F6d9767fd8ff3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthese-7-programming-habits-are-making-you-a-less-productive-data-scientist-6d9767fd8ff3&source=-----6d9767fd8ff3---------------------bookmark_footer-----------)![](../Images/745feeba3d2e35ac0d0ccd075f510ce9.png)'
- en: Photo by [Rémi Jacquaint](https://unsplash.com/@jack_1?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源于[Rémi Jacquaint](https://unsplash.com/@jack_1?utm_source=medium&utm_medium=referral)的[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: I’m pretty sure we’ve all done at least one of these bad habits at some point
    or another in our collective journeys toward data science.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信在我们共同的数据科学之路上，大家至少都曾经犯过其中一个这些坏习惯。
- en: Whether we do them when we’re just starting with our learning, or we do them
    later on because we’re reasonably good at what we do and get lazy, we’ve all committed
    at least one of these programming faults.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 无论我们是在刚开始学习时做这些注释，还是因为我们已经比较擅长而变得懒惰时做这些注释，我们都曾犯过这些编程错误。
- en: Whatever the reason, it’s never too late to clean up your programming act and
    become a more productive, efficient data scientist. Luckily, you’ve already done
    the hard part and taught yourself to code. Now, we just need to refine your techniques
    and implement some good habits to help you get more enjoyment out of one of the
    best parts of data science projects. At the very least what you learn today will
    keep you from getting yelled at by your software department.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 无论出于何种原因，清理你的编程习惯，成为更高效的数据科学家永远不会太晚。幸运的是，你已经完成了最困难的部分，学会了编程。现在，我们只需要完善你的技巧，养成一些良好的习惯，让你在数据科学项目中享受更多乐趣。至少你今天学到的知识会让你避免被软件部门责备。
- en: Straight from the experience of a software development student, these habits
    are surely keeping you from being your most productive self — let’s change that
    right now.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 从软件开发学生的经验来看，这些习惯无疑会妨碍你发挥最佳生产力——让我们现在就改变这一点。
- en: 1\. Not commenting your code
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 未对代码进行注释
- en: 'Commenting your code is a critical part of code documentation that ensures
    three things:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 对代码进行注释是代码文档的重要部分，确保以下三点：
- en: Other people can understand your code.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 其他人能够理解你的代码。
- en: Other people can maintain your code.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 其他人能够维护你的代码。
- en: You can understand your code when you revisit it after a period away.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你在一段时间后重新访问你的代码时，你能理解它。
- en: 'At the bare minimum, there are [three types of comments](/software-engineering-best-practices-for-data-scientists-4c199ede6e03)
    that you must have in your code — these are non-negotiable:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 至少，你的代码中必须有[三种类型的注释](/software-engineering-best-practices-for-data-scientists-4c199ede6e03)——这些是不可协商的：
- en: The first is a comment that describes any newly committed or shared code within
    your personal, or team’s repository. This comment could be a part of your Git
    commit message, but it should also feature within the code, usually above the
    chunk of code that you just committed. I like to separate this code section further
    by creating a dashed line around it that encompasses the code and the comment
    — just for clearer viewing, nothing more. This comment should describe the code’s
    functionality.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一点是对你个人或团队代码库中任何新提交或共享代码的注释。这个注释可以作为你的 Git 提交消息的一部分，但也应该出现在代码中，通常位于你刚刚提交的代码块上方。我喜欢通过在代码和注释周围创建虚线来进一步分隔这个代码段——只是为了更清晰的查看，仅此而已。这个注释应该描述代码的功能。
- en: The second is a comment that describes each function in your code. This comment
    should sit directly on top of each function and explain its inputs and outputs,
    as well as the function logic.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第二点是对代码中每个函数的注释。该注释应直接位于每个函数的上方，并解释其输入、输出以及函数逻辑。
- en: The final comment you should have should be located on top of any one-liners
    in your code. One-liners describe logic in your code that is usually spread out
    over several lines but was instead written in one single line. Sometimes these
    one-liners can be difficult to understand, so a comment that describes what it
    does and how each part works is a great way to keep yourself organized.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最终的注释应该位于代码中任何单行代码的上方。单行代码描述了通常分散在几行代码中的逻辑，但却写成了一行。由于这些单行代码有时可能难以理解，因此一个描述其功能及每个部分如何工作的注释是保持组织性的好方法。
- en: From working with other software developers, what I’ve seen that sets apart
    good code from great code is the level and detail of comments within. In other
    words, comment your code succinctly, accurately, and liberally. If something seems
    obvious to you, make a comment just in case it isn’t obvious to someone else (or
    yourself in the future for that matter).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 从与其他软件开发者的合作中，我看到将好代码与优秀代码区分开来的因素是代码注释的层次和细节。换句话说，简洁、准确、充分地注释你的代码。如果某些内容对你来说很明显，最好还是做个注释，以防对其他人（或将来你自己）不够明显。
- en: 2\. Not using GitHub for version control
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 未使用 GitHub 进行版本控制
- en: There’s really no reason anymore for someone working in tech to not be using
    GitHub. GitHub is not only a version control tool, but it’s also a productivity
    tool that helps you easily work on code and collaborate with others.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在已经没有理由让从事技术工作的人不使用 GitHub 了。GitHub 不仅是一个版本控制工具，而且还是一个生产力工具，帮助你轻松处理代码和与他人协作。
- en: GitHub is generally the golden standard and the one by which most tech companies
    carry out version control for their code. Even if you’re a single data scientist
    working at a company, GitHub is an important tool if you’re sharing your code
    with a software department that will turn it into production code.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub 通常被认为是黄金标准，大多数科技公司都通过它来进行代码的版本控制。即使你是一个在公司里工作的单独数据科学家，如果你将代码分享给一个将其转化为生产代码的软件部门，GitHub
    也是一个重要的工具。
- en: At one point or another, we’ve all announced that we’re going to *really* learn
    how to use GitHub once and for all. GitHub has so many useful features (including
    tracking changes in your code as well as working on older versions of your code),
    but to be honest, data scientists can usually get away with using it for simple
    commits to the main branch, with a few branches for running alternative scenarios.
    It’s as simple as that.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在某个时候，我们都曾宣布要*真正*学会如何使用 GitHub 一劳永逸。GitHub 具有许多有用的功能（包括跟踪代码的变化以及处理代码的旧版本），但说实话，数据科学家通常可以仅仅使用它来进行简单的主分支提交，配合几个分支以运行替代场景。就是这么简单。
- en: Well, this is your sign to begin using it — for real this time.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，这就是你真正开始使用它的标志——这次是认真的。
- en: '[](/comprehensive-guide-to-github-for-data-scientist-d3f71bd320da?source=post_page-----6d9767fd8ff3--------------------------------)
    [## Comprehensive Guide to GitHub for Data Scientists'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/comprehensive-guide-to-github-for-data-scientist-d3f71bd320da?source=post_page-----6d9767fd8ff3--------------------------------)
    [## 数据科学家的全面 GitHub 指南'
- en: GitHub Tutorial for Data Scientists through UI & Command Line
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据科学家的 GitHub 教程，包括 UI 和命令行
- en: towardsdatascience.com](/comprehensive-guide-to-github-for-data-scientist-d3f71bd320da?source=post_page-----6d9767fd8ff3--------------------------------)
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/comprehensive-guide-to-github-for-data-scientist-d3f71bd320da?source=post_page-----6d9767fd8ff3--------------------------------)'
- en: 3\. Not testing your code
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 不测试你的代码
- en: We’ve all been there, where we avoid running and testing our code for as long
    as possible because we were afraid of what might happen. 1% of the time we might
    get lucky and have everything run properly, but I can guarantee you that the other
    99% of the time everything goes haywire.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们都经历过这种情况：因为害怕可能发生的事情而尽可能避免运行和测试代码。1% 的时候我们可能运气好，一切正常运行，但我可以保证，其他 99% 的时候，一切都会出问题。
- en: Coming from an education in software development, they drilled testing into
    us regularly. Not testing your code regularly was seen as a sin and something
    that we got quick at. Not only did it help us find bugs and errors immediately,
    but it also meant that we weren’t having to sift through hundreds of lines of
    code to find the issue.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 从软件开发的教育背景中，我们经常接受测试的训练。不定期测试代码被视为一种罪过，我们很快就能做到。不仅帮助我们立即发现错误和缺陷，还意味着我们不需要筛查数百行代码来找出问题所在。
- en: Testing your code is as simple as writing [unit tests](https://www.guru99.com/unit-testing-guide.html),
    a type of test that involves checking that functions, objects, or classes (the
    units) are working properly. A simple way to carry out unit testing is to print
    the output of functions based on the input you give them.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 测试你的代码就像编写 [单元测试](https://www.guru99.com/unit-testing-guide.html) 一样简单，这种测试涉及检查函数、对象或类（单元）是否正常工作。进行单元测试的一种简单方法是根据你提供的输入打印函数的输出。
- en: '[](https://www.freecodecamp.org/news/how-to-write-unit-tests-for-python-functions/?source=post_page-----6d9767fd8ff3--------------------------------)
    [## How to Write Unit Tests for Python Functions'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://www.freecodecamp.org/news/how-to-write-unit-tests-for-python-functions/?source=post_page-----6d9767fd8ff3--------------------------------)
    [## 如何为 Python 函数编写单元测试'
- en: This guide will teach you how to write unit tests for Python functions. But
    why should you consider writing unit tests…
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 本指南将教你如何为 Python 函数编写单元测试。但你为什么应该考虑编写单元测试……
- en: www.freecodecamp.org](https://www.freecodecamp.org/news/how-to-write-unit-tests-for-python-functions/?source=post_page-----6d9767fd8ff3--------------------------------)
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[www.freecodecamp.org](https://www.freecodecamp.org/news/how-to-write-unit-tests-for-python-functions/?source=post_page-----6d9767fd8ff3--------------------------------)'
- en: 4\. Not breaking down complex problems into simple variables and functions
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 没有将复杂问题拆解为简单变量和函数
- en: Data science problems are often complex and involve many moving parts. These
    problems can be intimidating and without being broken down into simple parts,
    can lead you to sit staring at your computer screen until it’s time to go home
    without having written a single line of code.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学问题通常很复杂，涉及许多活动的部分。这些问题可能让人感到气馁，如果不将其拆解成简单的部分，可能会导致你盯着计算机屏幕发呆，直到该回家时却没有写下一行代码。
- en: The trick is to [begin a problem with the end in mind](https://www.franklincovey.com/the-7-habits/)
    and then break it down into simple variables and functions — because really, that’s
    all that code is, are variables and functions.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 诀窍是 [以终为始地开始解决问题](https://www.franklincovey.com/the-7-habits/)，然后将其拆解成简单的变量和函数——因为实际上，代码就是由变量和函数组成的。
- en: '[To start](/15-habits-i-stole-from-highly-effective-data-scientists-441b1d46c572),
    you need to ask yourself what this problem is trying to solve and what the outcome
    of this solution will be. This will help you begin to figure out what pieces of
    code you’ll need to reach the final goal. Once you’ve determined what the solution
    should look like, you can begin laying out the individual variables and functions
    that you’ll need to make it happen.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '[开始之前](/15-habits-i-stole-from-highly-effective-data-scientists-441b1d46c572)，你需要问自己这个问题试图解决什么，以及这个解决方案的结果将是什么。这将帮助你开始确定你需要哪些代码片段来达到最终目标。一旦你确定了解决方案的样子，你可以开始规划你需要的各个变量和函数，以实现它。'
- en: See, you’ve already broken down your complex problem into manageable tasks!
    Doesn’t that feel better?
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 看，你已经把复杂的问题拆解成了可管理的任务！这感觉不是更好吗？
- en: After adding these tasks to your Kanban board (my favorite way to stay organized
    while working on a complex problem), you can then start creating the smaller parts
    of the project that will lead to a whole solution.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在将这些任务添加到你的看板上（我在处理复杂问题时保持组织的最爱方式）之后，你可以开始创建将导致完整解决方案的项目小部分。
- en: 5\. Not refactoring your code
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5\. 不重构你的代码
- en: '[Code refactoring](https://en.wikipedia.org/wiki/Code_refactoring) refers to
    restructuring your code without changing its original function. While refactoring
    is typically seen in [software development scenarios](/15-habits-i-stole-from-highly-effective-data-scientists-441b1d46c572),
    it can also be used by data scientists to clean up their code.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[代码重构](https://en.wikipedia.org/wiki/Code_refactoring)是指在不改变原有功能的情况下，对代码进行重组。虽然重构通常出现在
    [软件开发场景](/15-habits-i-stole-from-highly-effective-data-scientists-441b1d46c572)中，但数据科学家也可以使用重构来清理他们的代码。'
- en: '[Refactoring](/15-habits-i-stole-from-highly-effective-data-scientists-441b1d46c572)
    is easier than it sounds: take a look at some old code you’ve written and ask
    how it could be written more efficiently. Then, applying good coding practices,
    clean up your code until it looks better than it did before.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[重构](/15-habits-i-stole-from-highly-effective-data-scientists-441b1d46c572)
    比听起来要简单：查看一些你以前写的旧代码，问问它可以如何更有效地编写。然后，应用良好的编码实践，清理你的代码，直到它看起来比以前更好。'
- en: Refactoring is a task best done after you’ve written code that works. For example,
    when you’re first working on a [data science problem,](/15-habits-i-stole-from-highly-effective-data-scientists-441b1d46c572)
    you want to make sure that your code works, regardless of if it's pretty. Then,
    once you’ve ensured that it gives the proper outputs, you can go back in and clarify
    variable names, properly indent your code, use python syntax standards to create
    functions that eliminate redundancy, and generally re-write anything that looks
    like a pile of spaghetti.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 重构最好是在你编写了有效的代码之后进行。例如，当你刚开始处理一个 [数据科学问题](/15-habits-i-stole-from-highly-effective-data-scientists-441b1d46c572)时，你要确保你的代码能正常工作，不管它是否优雅。然后，一旦你确保它产生了正确的输出，你可以回过头来明确变量名称，正确缩进代码，使用
    Python 语法标准创建消除冗余的函数，并且总体上重写任何看起来像一堆意大利面的代码。
- en: I recommend doing any refactoring only after you’ve gotten out of the flow state
    and gotten your code to work. Stopping and refactoring your code every time you
    write a line will knock you out of the zone and will make it take ten times longer
    to finish your code. Much like how it’s suggested that you don’t worry about spelling
    or grammar until you’ve gotten your ideas down on paper, wait until you’ve written
    all of your code to make it look pretty.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议在你从专注状态中出来并使代码正常工作之后再进行任何重构。每次写一行代码就停下来重构会让你脱离专注状态，并且使完成代码的时间延长十倍。就像建议在你把想法写到纸上之前不要担心拼写或语法一样，等到你写完所有的代码后再美化它。
- en: 6\. Not keeping your code organized
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 6. 不保持代码的组织
- en: Bad organization skills are something I often came across during my time in
    college studying software development. As much as many of my classmates were brilliant
    developers, organization skills were not their strong suit which left a lot to
    be desired when looking at their code.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在我大学学习软件开发期间，我经常遇到糟糕的组织技能。尽管我的许多同学都是优秀的开发者，但组织能力并不是他们的强项，这使得他们的代码在查看时留下了很多遗憾。
- en: Learning proper code organization skills early on can help you create code that
    is easy to navigate and work with, and that will reduce the time it takes you
    to push out projects.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 早期学习适当的代码组织技能可以帮助你创建易于导航和处理的代码，从而减少你推动项目的时间。
- en: 'According to [Karl Broman](https://kbroman.org/steps2rr/pages/organize.html),
    code and data organization are as simple as:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 根据[Karl Broman](https://kbroman.org/steps2rr/pages/organize.html)的说法，代码和数据组织可以简单到如下几点：
- en: '**Keeping everything for a project in a single directory.** This directory
    should include all of your data, code, and results for a project, which makes
    it easier to work on in the future or hand off to someone else.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**将项目的所有内容保存在一个目录中。** 该目录应包含项目的所有数据、代码和结果，这样将来在继续工作或交给他人时会更方便。'
- en: '**Separating raw data from derived data.** Keep two subdirectories, one that
    contains raw data and the other that contains derived data. A subdirectory that
    contains data summaries can also be useful to keep your data organized.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**将原始数据与派生数据分开。** 保持两个子目录，一个包含原始数据，另一个包含派生数据。包含数据总结的子目录也有助于保持数据的组织。'
- en: '**Keeping your data separate from your code.** Keep your code in one subdirectory
    and your data in another subdirectory (or three as described above).'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**将数据与代码分开。** 将代码放在一个子目录中，将数据放在另一个子目录中（或者像上面描述的那样，三个子目录）。'
- en: '**Staying away from absolute paths and instead using relative paths:** When
    it comes to collaborating with other people who may not have copies of your project
    directory in the exact same location, it’s important to use relative paths to
    allow them to open and access all of your files.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**避免使用绝对路径，改用相对路径：** 当与其他人合作时，他们可能没有在完全相同的位置复制你的项目目录，因此使用相对路径很重要，以便他们能够打开和访问你的所有文件。'
- en: '**Choosing good file (and variable, and function) names:** Raw data file names
    should be kept the same as when you got them, but code file names should be as
    descriptive as possible. The same goes for variable and function names, naturally.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**选择好的文件（以及变量和函数）名称：** 原始数据文件名应保持不变，但代码文件名应尽可能具有描述性。变量和函数名称也是如此。'
- en: '**Never use “final” in a file name:** As Broman says, “nothing is ever final”.
    Multiple versions of a file should be appended with a version number, but the
    “final” version should never be labeled as such.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文件名中永远不要使用“final”：** 正如Broman所说，“没有什么是最终的”。多个版本的文件应附加版本号，但“最终”版本不应如此标记。'
- en: '**Writing documentation and README files.** Documentation is necessary to explain
    what everything is and does. Good documentation involves describing the files
    and the processes they contain. Keeping README up to date is important, as is
    including your contact information if anyone has further questions.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**编写文档和README文件。** 文档是解释所有内容及其功能的必要手段。好的文档包括描述文件及其包含的过程。保持README更新很重要，同时如果有人有进一步的问题，也要包含你的联系信息。'
- en: One of the tasks I’ve taken on in previous projects is organizing my team’s
    code. Not only is it a great way to learn how the code works, but it’s also an
    important skill to become proficient in. Make an organization system that works
    for you (mine is quite similar to the one described above) and put it into practice
    for every project, big or small.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我在之前的项目中承担的任务之一是组织团队的代码。这不仅是一个学习代码如何工作的好方法，而且是成为熟练开发者的重要技能。建立一个适合你的组织系统（我的系统与上述描述的相似）并在每个项目中付诸实践，无论大小。
- en: 7\. Not taking breaks
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 7. 不休息
- en: 'I’ll let you in on a little secret: you write bad code when you don’t take
    breaks.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我告诉你一个小秘密：当你不休息时，你写的代码往往很糟糕。
- en: Hustle culture is still alive and well in tech, where it’s not abnormal to work
    90-hour weeks, only getting up once in a while to refill your soda and not seeing
    the sun for days on end.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在技术领域，拼命文化依然存在，工作90小时的周数并不少见，你可能只会偶尔起身去加点饮料，几天不见太阳也很正常。
- en: While it may seem like your boss owns you, they don’t own your health (both
    physical, mental, and emotional).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然你可能觉得老板支配了你，但他们并不支配你的健康（包括身体、心理和情感健康）。
- en: So I want you to pledge right now that you’ll get at least one hour of activity
    a day, you’ll drink something other than soda at least twice a day (water is a
    good place to start, coffee doesn’t count), you’ll get outside at least once a
    day, and you’ll try to eat food that isn’t takeout.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我希望你现在就承诺每天至少进行一个小时的活动，每天至少喝两次除了苏打水以外的饮品（开始时可以选择水，咖啡不算），每天至少出去一次，并且尽量吃不是外卖的食物。
- en: Trust me, I can’t remember the number of times that I’ve solved coding or logical
    problems while out walking the dog. Fresh air seems to do wonders for the problem-solving
    part of your brain.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 相信我，我记不清多少次是在遛狗的时候解决了编码或逻辑问题。新鲜空气似乎对大脑的解决问题部分有奇效。
- en: Sitting in front of your computer banging out code for eight or more hours every
    day without any type of break is going to leave you burned out and lacking in
    productivity even more than you already are. In other words, life is short, your
    job isn’t everything, and taking care of yourself will make you a better data
    scientist in the long run.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 每天坐在电脑前连续编写代码八小时或更长时间而没有任何休息，会使你感到精疲力竭，生产力也会比之前更低。换句话说，生活短暂，你的工作并不是一切，照顾好自己从长远来看会让你成为更优秀的数据科学家。
- en: 'Subscribe to get my stories sent directly to your inbox: [Story Subscription](https://madison13.medium.com/subscribe)'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 订阅以便直接将我的故事发送到你的收件箱：[故事订阅](https://madison13.medium.com/subscribe)
- en: 'Please become a member to get unlimited access to Medium using my referral
    link (I will receive a small commission at no extra cost to you): [Medium Membership](https://madison13.medium.com/membership)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 请通过我的推荐链接成为会员，以获得对 Medium 的无限访问（这对你没有额外费用，我会获得少量佣金）：[Medium 会员](https://madison13.medium.com/membership)
- en: 'Support my writing by donating to fund the creation of more stories like this
    one: [Donate](https://ko-fi.com/madisonhunter13)'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 通过捐赠支持我的写作，帮助创造更多这样的故事：[捐赠](https://ko-fi.com/madisonhunter13)
