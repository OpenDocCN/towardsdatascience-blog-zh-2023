- en: Introducing PyDicom, Its Classes, Methods, and Attributes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 PyDicom 及其类、方法和属性
- en: 原文：[https://towardsdatascience.com/introducing-pydicom-its-classes-methods-and-attributes-518c1d71162?source=collection_archive---------4-----------------------#2023-01-04](https://towardsdatascience.com/introducing-pydicom-its-classes-methods-and-attributes-518c1d71162?source=collection_archive---------4-----------------------#2023-01-04)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/introducing-pydicom-its-classes-methods-and-attributes-518c1d71162?source=collection_archive---------4-----------------------#2023-01-04](https://towardsdatascience.com/introducing-pydicom-its-classes-methods-and-attributes-518c1d71162?source=collection_archive---------4-----------------------#2023-01-04)
- en: PyDicom…Beyond Pixel Data
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PyDicom……超越像素数据
- en: '[](https://medium.com/@omar.ok1998?source=post_page-----518c1d71162--------------------------------)[![Omar
    Alkousa](../Images/7598618abe8e8fa89f1d8a4bfc21f014.png)](https://medium.com/@omar.ok1998?source=post_page-----518c1d71162--------------------------------)[](https://towardsdatascience.com/?source=post_page-----518c1d71162--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----518c1d71162--------------------------------)
    [Omar Alkousa](https://medium.com/@omar.ok1998?source=post_page-----518c1d71162--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@omar.ok1998?source=post_page-----518c1d71162--------------------------------)[![Omar
    Alkousa](../Images/7598618abe8e8fa89f1d8a4bfc21f014.png)](https://medium.com/@omar.ok1998?source=post_page-----518c1d71162--------------------------------)[](https://towardsdatascience.com/?source=post_page-----518c1d71162--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----518c1d71162--------------------------------)
    [Omar Alkousa](https://medium.com/@omar.ok1998?source=post_page-----518c1d71162--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff8302b9534b5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroducing-pydicom-its-classes-methods-and-attributes-518c1d71162&user=Omar+Alkousa&userId=f8302b9534b5&source=post_page-f8302b9534b5----518c1d71162---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----518c1d71162--------------------------------)
    ·12 min read·Jan 4, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F518c1d71162&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroducing-pydicom-its-classes-methods-and-attributes-518c1d71162&user=Omar+Alkousa&userId=f8302b9534b5&source=-----518c1d71162---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff8302b9534b5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroducing-pydicom-its-classes-methods-and-attributes-518c1d71162&user=Omar+Alkousa&userId=f8302b9534b5&source=post_page-f8302b9534b5----518c1d71162---------------------post_header-----------)
    发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----518c1d71162--------------------------------)
    ·12 分钟阅读·2023年1月4日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F518c1d71162&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroducing-pydicom-its-classes-methods-and-attributes-518c1d71162&user=Omar+Alkousa&userId=f8302b9534b5&source=-----518c1d71162---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F518c1d71162&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroducing-pydicom-its-classes-methods-and-attributes-518c1d71162&source=-----518c1d71162---------------------bookmark_footer-----------)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F518c1d71162&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroducing-pydicom-its-classes-methods-and-attributes-518c1d71162&source=-----518c1d71162---------------------bookmark_footer-----------)'
- en: If you are a Pythonista and you’re working with Medical Data, especially DICOM
    data, you’ve probably heard of the great python package PyDicom. In this post,
    you’ll learn the basics of this package. We’ll discuss PyDicom classes (DataSet,
    DataElement, Sequence) and some useful methods and attributes that you can apply
    to PyDicom classes.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是 Python 爱好者，并且正在处理医疗数据，特别是 DICOM 数据，你可能已经听说过很棒的 Python 包 PyDicom。在这篇文章中，你将学习这个包的基础知识。我们将讨论
    PyDicom 的类（DataSet、DataElement、Sequence）以及一些你可以应用于 PyDicom 类的有用方法和属性。
- en: '![](../Images/39096cddc78e4a0000426966966e024c.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/39096cddc78e4a0000426966966e024c.png)'
- en: Photo by [Owen Beard](https://unsplash.com/@owenbeard?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Owen Beard](https://unsplash.com/@owenbeard?utm_source=medium&utm_medium=referral)
    提供，来自 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: PyDicom is a pure Python package for working with DICOM files such as medical
    images, reports, and radiotherapy objects. PyDicom makes it easy to read and write
    these complex files into natural pythonic structures for easy manipulation.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: PyDicom 是一个用于处理 DICOM 文件（如医学图像、报告和放射治疗对象）的纯 Python 包。PyDicom 使读取和写入这些复杂文件变得简单，转换为自然的
    Python 结构以便于操作。
- en: DICOM, Digital Imaging and Communications in Medicine, is the standard language
    of Medical Imaging Systems. When you hear the word “DICOM”, you probably think
    of it as just medical images. But **Healthcare Data Scientists/Analysts** may
    consider it as treasury as any other **medical Dataset**. Because it goes beyond
    just data of pixels. A DICOM file contains many useful data related to the patient,
    the imaging modality, and others.
  id: totrans-12
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: DICOM（医学数字成像和通信）是医学成像系统的标准语言。当你听到“DICOM”这个词时，你可能会认为它只是医学图像。但 **医疗数据科学家/分析师**
    可能会将其视为任何其他 **医学数据集** 的宝贵财富。因为它不仅仅是像素数据。DICOM 文件包含许多与患者、成像模态等相关的有用数据。
- en: Dealing with DICOM metadata and accessing specific attributes is beneficial
    for anyone, including data scientists/analysts, working with DICOM files. Luckily,
    PyDicom provides many useful functions, methods, and attributes on DICOM files.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 处理 DICOM 元数据并访问特定属性对任何人（包括数据科学家/分析师）在处理 DICOM 文件时都是有益的。幸运的是，PyDicom 提供了许多有用的函数、方法和属性来处理
    DICOM 文件。
- en: Thanks to the creators and contributors of PyDicom
  id: totrans-14
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 感谢 PyDicom 的创建者和贡献者
- en: Let’s Begin Coding
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 让我们开始编码
- en: When I want to discover a new Python package, I usually begin with general examples
    using this package and then dive into it more and more gradually. My main purpose
    is to learn how to extract the metadata of many DICOM files and convert it to
    a Dataset that I can use for analysis and exploration.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 当我想探索一个新的 Python 包时，我通常会从使用该包的一般示例开始，然后逐渐深入。我的主要目的是学习如何提取多个 DICOM 文件的元数据，并将其转换为我可以用于分析和探索的数据集。
- en: So… let’s begin our journey with a common example of PyDicom.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 所以……让我们从一个常见的 PyDicom 示例开始我们的旅程。
- en: '**We will discuss the following:**'
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**我们将讨论以下内容：**'
- en: '***Example of reading a DICOM File***'
  id: totrans-19
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '***读取 DICOM 文件的示例***'
- en: ''
  id: totrans-20
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '***Core Elements in PyDicom***'
  id: totrans-21
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '***PyDicom 的核心元素***'
- en: ''
  id: totrans-22
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '***PyDICOM DataSet***'
  id: totrans-23
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '***PyDicom 数据集***'
- en: ''
  id: totrans-24
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '***Methods for PyDicom DataSet* .keys()** Method'
  id: totrans-25
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '***PyDicom 数据集的 * .keys()** 方法'
- en: '**.values()** Method'
  id: totrans-26
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**.values()** 方法'
- en: '**.elements()** Method'
  id: totrans-27
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**.elements()** 方法'
- en: '**.group_dataset()** Method'
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**.group_dataset()** 方法'
- en: '**.dir() Method**'
  id: totrans-29
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**.dir()** 方法'
- en: ''
  id: totrans-30
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '***Attributes for PyDicom DataSet* pixel_array** Attribute'
  id: totrans-31
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '***PyDicom 数据集的属性* pixel_array** 属性'
- en: ''
  id: totrans-32
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '***PyDicom DataElement***'
  id: totrans-33
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '***PyDicom 数据元素***'
- en: ''
  id: totrans-34
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '***PyDicom Sequence***'
  id: totrans-35
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '***PyDicom 序列***'
- en: ''
  id: totrans-36
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '***PyDicom vs. ImageIO***'
  id: totrans-37
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '***PyDicom 与 ImageIO***'
- en: Example of reading a DICOM File
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 读取 DICOM 文件的示例
- en: 'To read a DICOM file using pydicom, you can use the following steps:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 pydicom 读取 DICOM 文件，你可以按照以下步骤操作：
- en: 'Install pydicom: To use pydicom, you will need to install it using pip.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 pydicom：要使用 pydicom，你需要通过 pip 安装它。
- en: '[PRE0]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Import the pydicom library: In your Python script, you will need to import
    the pydicom library in order to use it.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入 pydicom 库：在你的 Python 脚本中，你需要导入 pydicom 库以便使用它。
- en: '[PRE2]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: There are a lot of DICOM samples on the internet. And you can use your own DICOM
    files. For this post, I chose a [dataset](https://www.kaggle.com/datasets/dmisky/dlwptvolumetricdicomlung)
    of 99 slices of chest-CT scans for one patient. You can find it on Kaggle. I saved
    the dataset on my [Drive](https://drive.google.com/drive/folders/1dbJpXVUBn0mSUxgJIqKZj4d_0thSeTW3?usp=sharing)
    so I can easily have access through GoogleColab.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 网上有很多 DICOM 样本。你也可以使用你自己的 DICOM 文件。在这篇文章中，我选择了一个 [数据集](https://www.kaggle.com/datasets/dmisky/dlwptvolumetricdicomlung)，包含一个患者的
    99 切片胸部 CT 扫描。你可以在 Kaggle 上找到它。我将数据集保存到了我的 [Drive](https://drive.google.com/drive/folders/1dbJpXVUBn0mSUxgJIqKZj4d_0thSeTW3?usp=sharing)
    中，以便通过 GoogleColab 轻松访问。
- en: '**Note:** Sometimes, the output of some code lines will be too long and bulky.
    Sorry in advance about that!!! But this a great chance for you to get a taste
    of how DICOM files look like in real life.'
  id: totrans-46
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意：** 有时，某些代码行的输出可能会过长和庞大。对此提前表示歉意！！！但这是一个很好的机会，让你感受一下 DICOM 文件在现实生活中的样子。'
- en: 'Read the DICOM file: To read a DICOM file, you can use the **dcmread** function,
    which returns a Dataset object containing the data from the DICOM file.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读取 DICOM 文件：要读取 DICOM 文件，你可以使用 **dcmread** 函数，它返回一个包含 DICOM 文件数据的 Dataset 对象。
- en: '[PRE3]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/5fca1aaf7829e8715b8e483b1fc05ac2.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5fca1aaf7829e8715b8e483b1fc05ac2.png)'
- en: The full output is added as a GitHub gist following this [link](https://gist.github.com/OmarAlkousa/53b35934cd3fac3d381f0448b8e27073).
    [Image by the Author]
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 完整输出已作为 GitHub gist 添加，详细内容请参阅这个[链接](https://gist.github.com/OmarAlkousa/53b35934cd3fac3d381f0448b8e27073)。
    [作者提供的图片]
- en: Clearly, there are a lot of DICOM metadata other than pixel data. But we can
    see a pattern of the output, whereas the DICOM attributes are written row by row.
    Each row has a unique tag and other core elements of the DICOM attribute. Let’s
    discuss them in more detail.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 很明显，除了像素数据之外，还有很多 DICOM 元数据。但我们可以看到输出的模式，即 DICOM 属性是逐行写入的。每一行都有一个唯一的标签和其他核心的
    DICOM 属性元素。让我们更详细地讨论它们。
- en: Core Elements in PyDicom
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PyDicom中的核心元素
- en: 'Applying **.dcmread()** wraps a DataSet, a dictionary data structure {}. This
    DataSet contains keys and values represented like the following:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 **.dcmread()** 会封装一个 DataSet，即一个字典数据结构 {}。这个 DataSet 包含如下表示的键和值：
- en: '***Keys:*** contains the DICOM Tags of the attributes specified in the DICOM
    file you are reading. Examples of the keys like:'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***Keys:*** 包含你正在读取的 DICOM 文件中指定的属性的 DICOM 标签。示例键包括：'
- en: '- (0x0010, 0x0010) PatientName attribute.'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- (0x0010, 0x0010) PatientName 属性。'
- en: '- (0x0028, 0x0010) Rows attribute.'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- (0x0028, 0x0010) 行数属性。'
- en: '- (0x7fe0, 0x0010) PixelData attribute.'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- (0x7fe0, 0x0010) PixelData 属性。'
- en: The tags’ numbers consist of two **hexadecimal**, the first refers to the group,
    and the second refers to a specific element. So, you might find many attributes
    that have the same first number of tags.
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 标签的数字由两个**十六进制**数字组成，第一个数字表示组，第二个数字表示特定元素。因此，你可能会发现许多属性具有相同的第一个标签数字。
- en: '***Values:*** the values of this dictionary generally contain the following:'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***Values:*** 这个字典的值通常包含以下内容：'
- en: '- **Tag:** the element’s tag like (0028, 0030), for example.'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- **Tag:** 元素的标签，例如 (0028, 0030)。'
- en: '- **Keyword:** describes what the attribute refers to. The keyword of the tag
    (0028, 0030) is “Pixel Spacing”.'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- **Keyword:** 描述属性所指的内容。标签 (0028, 0030) 的关键字是“Pixel Spacing”。'
- en: '- **VR:** it’s only two characters that refer to the Value Representation of
    the element, which describes the data type and format of the attribute value.
    The VR of the tag (0028, 0030) is “DS”, Decimal String. You can see the VR of
    any tag and how it is represented using Python structures following the[**link**](https://pydicom.github.io/pydicom/stable/guides/element_value_types.html).'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**VR:** 这仅是两个字符，指的是元素的值表示（Value Representation），它描述了属性值的数据类型和格式。标签 (0028, 0030)
    的 VR 是“DS”，即十进制字符串。你可以通过 Python 结构查看任何标签的 VR 以及它是如何表示的，详细信息请参考[**链接**](https://pydicom.github.io/pydicom/stable/guides/element_value_types.html)。'
- en: '- **Value:** the actual value of the element. It could be an integer, a string,
    a list, or even a **Sequence**, which is a dataset of attributes. The value of
    the tag (0028, 0030) is a list of two floats that represent the physical distance
    along the rows and columns, respectively, in mm. An example of this list is [0.564453125,
    0.564453125].'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**Value:** 元素的实际值。它可以是整数、字符串、列表，甚至是**Sequence**，即一个属性的数据集。标签 (0028, 0030) 的值是一个包含两个浮点数的列表，分别表示沿行和列的物理距离（单位为毫米）。这个列表的一个示例是
    [0.564453125, 0.564453125]。'
- en: '![](../Images/41f59fac44ad6f2697b5e2d3f1cc08c0.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/41f59fac44ad6f2697b5e2d3f1cc08c0.png)'
- en: The output of dcmread() function. [Image by the Author]
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: dcmread() 函数的输出。[作者提供的图片]
- en: Now that we understand reading a DICOM file using PyDicom requires working directly
    with the main class, which is DataSet. Let’s Discuss it in more depth and see
    what are the contents of a DataSet.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们理解了使用 PyDicom 读取 DICOM 文件需要直接操作主要类 DataSet。让我们更深入地讨论一下 DataSet 的内容。
- en: PyDicom DataSet
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PyDicom DataSet
- en: A DICOM DataSet is a mutable mapping of DICOM DataElements. Each DataElement,
    a value of the dictionary, in the DICOM DataSet has a unique tag, a key of the
    dictionary, that identifies it. For example, the “PatientName” attribute corresponds
    to the tag (0x0010, 0x0010) in the DICOM standard, which identifies the patient’s
    name data element.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: DICOM DataSet 是 DICOM DataElements 的可变映射。DICOM DataSet 中的每个 DataElement，即字典中的值，都有一个唯一的标签，即字典的键，用于标识它。例如，“PatientName”
    属性对应于 DICOM 标准中的标签 (0x0010, 0x0010)，它标识了病人的名字数据元素。
- en: '![](../Images/1c21fe16c903cf2c27bcb7290e756f9d.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1c21fe16c903cf2c27bcb7290e756f9d.png)'
- en: The contents of PyDicom DataSet class. [Image by the Author]
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: PyDicom DataSet 类的内容。[作者提供的图片]
- en: 'You can access specific DICOM attributes in many different ways like the following:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过多种方式访问特定的 DICOM 属性，例如：
- en: '[PRE4]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Or you can access the same attribute, PatientName, using its unique tag. For
    example, the tag of the PatientName attribute is (0010, 0010). ***Note***that
    the numbers are in Hexadecimals as it is in the DICOM Standard.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 或者你可以通过唯一标签访问相同的属性 PatientName。例如，PatientName 属性的标签是 (0010, 0010)。***注意***这些数字是十六进制的，符合
    DICOM 标准。
- en: '[PRE6]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Notice that using the tag, which is the key of the dataset dictionary, yields
    the whole value of the dictionary and not only the actual value of the attribute.
    To get only the actual value, you should use the .value attribute.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，使用标签，即数据集字典的键，会返回字典的整个值，而不仅仅是属性的实际值。要仅获取实际值，你应该使用 .value 属性。
- en: '[PRE8]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: It’s up to you to decide whether you extract the specific attribute using its
    unique tag or using its keyword. Now let’s see some of the useful methods and
    attributes we can use with the DataSet class.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以决定是通过唯一标签提取特定属性，还是通过其关键词提取。现在让我们深入了解一下我们可以与 DataSet 类一起使用的一些有用的方法和属性。
- en: Methods for PyDicom DataSet
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PyDicom DataSet 的方法
- en: .keys() Method
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .keys() 方法
- en: Using **.keys()** returns the list of the keys of the DataSet dictionary. This
    method could be helpful when joining metadata from multiple sources of DICOM files
    that have common DICOM attributes.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**.keys()** 返回 DataSet 字典的键列表。当合并具有共同 DICOM 属性的多个 DICOM 文件的元数据时，这种方法可能会很有用。
- en: '[PRE10]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![](../Images/197965ae4908172a1f1753d8c336fe58.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/197965ae4908172a1f1753d8c336fe58.png)'
- en: The output of .keys() method. [Image by the Author]
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: .keys() 方法的输出。 [图片由作者提供]
- en: .values() Method
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .values() 方法
- en: This method returns a list of the values of the DataSet dictionary. It’s kinda
    bulky and not preferred to read in this form. But this method could be useful
    for iterating over a list of values in some cases.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法返回 DataSet 字典的值列表。这种形式有点笨重，不太适合阅读。但在某些情况下，这种方法可能对迭代值列表很有用。
- en: '[PRE11]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![](../Images/61db2db06e426699fb231266ab458956.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/61db2db06e426699fb231266ab458956.png)'
- en: Part of the output of .values() method. [Image by the Author]
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: .values() 方法的部分输出。 [图片由作者提供]
- en: .elements() Method
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .elements() 方法
- en: Using .elements() yields the top-level elements of the Dataset. This method
    will be useful when you don’t need the DICOM attributes in any of the Sequences
    that you might find in the DICOM files you’re working with. Notice how the Sequences
    are represented when using the .elements() method in the output figure below.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 .elements() 方法可以获得 DataSet 的顶级元素。当你不需要 DICOM 文件中可能存在的 Sequences 的 DICOM 属性时，这个方法会很有用。注意下面输出图中
    .elements() 方法使用时 Sequences 的表示方式。
- en: '[PRE12]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![](../Images/c2462f1ef7a0b36c722a3b8ea72bcc43.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c2462f1ef7a0b36c722a3b8ea72bcc43.png)'
- en: The full output of the .elements() method is added as a GitHub gist following
    the [link](https://gist.github.com/OmarAlkousa/03ce85834bdfbb0e65bda9a7989f5e3d).
    [Image by the Author]
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: .elements() 方法的完整输出已作为 GitHub gist 添加，查看 [链接](https://gist.github.com/OmarAlkousa/03ce85834bdfbb0e65bda9a7989f5e3d)。
    [图片由作者提供]
- en: .group_dataset() Method
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .group_dataset() 方法
- en: As we’ve mentioned above, you might find many attributes that have the same
    first number. These tags, the ones with a common first tag, usually describe a
    common parameter. For example, the attributes with the common first tag (0x0010)
    usually refer to Patient-related attributes. Attributes with the first tag (0x0028)
    describe **Image Pixel** attributes. Sometimes it’s helpful to see all the attributes
    that are related to a specific parameter. Using the method (.group_dataset) returns
    a Dataset containing only elements of a certain group.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所述，你可能会发现许多属性的第一个数字相同。这些标签，具有共同的第一个标签，通常描述一个共同的参数。例如，具有共同第一个标签 (0x0010) 的属性通常与病人相关。第一个标签为
    (0x0028) 的属性描述**图像像素**属性。有时查看与特定参数相关的所有属性会很有帮助。使用方法 (.group_dataset) 返回一个仅包含某个组元素的
    DataSet。
- en: '[PRE13]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: .dir() Method
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .dir() 方法
- en: Return an alphabetical list of element keywords in the Dataset. This is a great
    choice to give the first insight into the metadata you’re dealing with.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 DataSet 中元素关键词的字母顺序列表。这是对你处理的元数据提供初步了解的好选择。
- en: '[PRE15]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: A filter of a specific set of attributes can be implemented as an argument to
    the .dir() method.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 特定属性集的过滤器可以作为参数实现到 .dir() 方法中。
- en: '[PRE17]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Attributes for PyDicom DataSet
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PyDicom DataSet 的属性
- en: There are some attributes that you can use with the DataSet class. But I will
    point out only one, the most important and commonly used attribute, **pixel_array**.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些属性可以与 DataSet 类一起使用。但我只会指出一个，最重要和最常用的属性，即**pixel_array**。
- en: '[PRE19]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '![](../Images/1886795a09e9629668c4dd2a8619d51f.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1886795a09e9629668c4dd2a8619d51f.png)'
- en: '[Image by the Author]'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '[作者提供的图片]'
- en: PyDicom DataElement
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PyDicom DataElement
- en: As we’ve mentioned above, a DataSet is a PyDicom class that contains a set of
    DICOM tags as keys and values as DICOM DataElements. DataElements are the values
    of the attributes or the metadata that you might find during reading DICOM files.
    It’s useful to be able to access specific information that might interest you
    in your work or research without searching about it in such pretty large text-like
    data like above. You can access specific info inside a specific DataElement using
    attributes.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们上面提到的，DataSet 是一个 PyDicom 类，包含一组 DICOM 标签作为键，值作为 DICOM DataElements。DataElements
    是在读取 DICOM 文件时可能会发现的属性值或元数据。能够访问特定信息对于你的工作或研究非常有用，而无需在如此庞大的文本数据中搜索。你可以使用属性在特定
    DataElement 中访问特定信息。
- en: '![](../Images/1dd34ec7ed665a00eec7beec6805585b.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1dd34ec7ed665a00eec7beec6805585b.png)'
- en: The contents of a PyDicom DataElement class and the way to access specific info.
    [Image by the Author]
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: PyDicom DataElement 类的内容及访问特定信息的方法。[作者提供的图片]
- en: '[PRE22]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: PyDicom Sequence
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PyDicom 序列
- en: The DataElement inside a PyDicom DataSet could contain values that are strings,
    integers, lists, or even a Sequence of data. The sequence is derived from Python’s
    list. But it can even be a DataSet. Let’s see how to access specific parameters
    within a particular Sequence. Since there’s bulky information in the file we’re
    working with, let’s use the method .dir(*filter). With a proper filter implemented
    as an argument, we can extract the names of the “Sequence”s.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: PyDicom DataSet 中的 DataElement 可能包含字符串、整数、列表，甚至是数据序列。该序列源自 Python 的列表，但它甚至可以是一个
    DataSet。让我们看看如何访问特定序列中的参数。由于我们正在处理的文件信息量庞大，让我们使用 .dir(*filter) 方法。通过合适的过滤器参数，我们可以提取“序列”的名称。
- en: '[PRE24]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Let’s try to work with De-identification Method Code Sequence.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试使用去标识化方法代码序列。
- en: '[PRE26]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: To print out all the elements in the Sequence, we can use the indices.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 要打印出序列中的所有元素，我们可以使用索引。
- en: '[PRE28]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: To access specific info inside the Sequence, we can use its index.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问序列中的特定信息，我们可以使用其索引。
- en: '[PRE30]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '***PyDicom vs. ImageIO***'
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '***PyDicom 与 ImageIO***'
- en: Personal opinion, I found PyDicom the best package to deal with DICOM files.
    It’s kinda obvious because it’s specifically designed for DICOM. It provides more
    flexible options for the programmer, especially when the user wants to deal with
    DICOM metadata and not just pixel data. But on the other side, if I want only
    the pixel data, I would prefer using ImageIO as it provides only the basic metadata
    that I need to deal with pixel data. To see more about using ImageIO with DICOM
    files, check this post.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 个人观点，我发现 PyDicom 是处理 DICOM 文件的最佳包。因为它专为 DICOM 设计，这一点很明显。它为程序员提供了更灵活的选项，特别是当用户想处理
    DICOM 元数据而不仅仅是像素数据时。然而，另一方面，如果我只需要像素数据，我会更倾向于使用 ImageIO，因为它只提供处理像素数据所需的基本元数据。要了解更多关于如何使用
    ImageIO 处理 DICOM 文件的信息，请查看这篇文章。
- en: '[](/dealing-with-dicom-using-imageio-python-package-117f1212ab82?source=post_page-----518c1d71162--------------------------------)
    [## Dealing with DICOM Using ImageIO Python Package'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/dealing-with-dicom-using-imageio-python-package-117f1212ab82?source=post_page-----518c1d71162--------------------------------)
    [## 使用 ImageIO Python 包处理 DICOM'
- en: Medical Images == DICOM
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 医学图像 == DICOM
- en: towardsdatascience.com](/dealing-with-dicom-using-imageio-python-package-117f1212ab82?source=post_page-----518c1d71162--------------------------------)
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/dealing-with-dicom-using-imageio-python-package-117f1212ab82?source=post_page-----518c1d71162--------------------------------)
- en: 'Conclusion:'
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论：
- en: PyDicom DataSet is the main class of the package. And the user will directly
    deal with it.
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PyDicom DataSet 是该包的主类，用户将直接处理它。
- en: A DataSet is a Python dictionary structure that contains DICOM tags as keys
    and DICOM attributes as values.
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DataSet 是一个 Python 字典结构，包含 DICOM 标签作为键，DICOM 属性作为值。
- en: We introduced how to use some of the important methods and attributes that PyDicom
    provides to deal with the DataSet class.
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们介绍了如何使用 PyDicom 提供的一些重要方法和属性来处理 DataSet 类。
- en: The values of a DataSet are basically a DataElement, another PyDicom class,
    that contains the DICOM tag, keyword, VR, and the value for each DICOM attribute.
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DataSet 的值基本上是一个 DataElement，另一个 PyDicom 类，它包含 DICOM 标签、关键字、VR 和每个 DICOM 属性的值。
- en: '***Thanks For Reading…***'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '***感谢阅读…***'
- en: Recommendation
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 推荐
- en: For more details about ***DICOM***, refer to this post
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 欲了解更多关于 ***DICOM*** 的信息，请参阅这篇文章
- en: '[](https://medium.com/@omar.ok1998/what-is-dicom-a28c5fe24c9d?source=post_page-----518c1d71162--------------------------------)
    [## What is DICOM?'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@omar.ok1998/what-is-dicom-a28c5fe24c9d?source=post_page-----518c1d71162--------------------------------)
    [## 什么是 DICOM？'
- en: There are literally billions of DICOM Images currently in use for clinical care!!
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 目前用于临床护理的 DICOM 图像数量多达数十亿！
- en: medium.com](https://medium.com/@omar.ok1998/what-is-dicom-a28c5fe24c9d?source=post_page-----518c1d71162--------------------------------)
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '[medium.com](https://medium.com/@omar.ok1998/what-is-dicom-a28c5fe24c9d?source=post_page-----518c1d71162--------------------------------)'
- en: '***DICOM Metadata — A Useful Resource for Big Data Analytics:***'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***DICOM 元数据——大数据分析的有用资源：***'
- en: This [article](https://healthmanagement.org/c/healthmanagement/issuearticle/dicom-metadata-a-useful-resource-for-big-data-analytics)
    provides an overview of new ways to represent data by combining patient access
    and DICOM information, advanced use of medical imaging metadata, analysis of radiation
    dose and image segmentation, and deep learning for feature engineering to enrich
    data.
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这篇 [文章](https://healthmanagement.org/c/healthmanagement/issuearticle/dicom-metadata-a-useful-resource-for-big-data-analytics)
    概述了通过结合患者访问和 DICOM 信息来表示数据的新方法，医学影像元数据的高级使用，辐射剂量分析和图像分割，以及用于特征工程的深度学习，以丰富数据。
- en: '***PyDicom Documentation:*** We only scratched the surface of this great package
    and it’s really well documented. If you want to learn more about PyDicom, refer
    to this [link](https://pydicom.github.io/pydicom/stable/index.html) and try coding
    what you read there.'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***PyDicom 文档：*** 我们仅仅触及了这个优秀包的表面，它的文档非常详尽。如果你想了解更多关于 PyDicom 的内容，请参考这个 [链接](https://pydicom.github.io/pydicom/stable/index.html)
    并尝试编写你在其中阅读到的代码。'
- en: References
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[1] PyDicom Documentation, [**User Guide**](https://pydicom.github.io/pydicom/stable/old/pydicom_user_guide.html),
    [Accessed at 25/12/2022]'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] PyDicom 文档， [**用户指南**](https://pydicom.github.io/pydicom/stable/old/pydicom_user_guide.html)，
    [访问日期：2022年12月25日]'
- en: '[2] PyDicom Documentation, [**Element VRs and Python types**](https://pydicom.github.io/pydicom/stable/guides/element_value_types.html),
    [Accessed at 25/12/2022]'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] PyDicom 文档， [**元素 VR 和 Python 类型**](https://pydicom.github.io/pydicom/stable/guides/element_value_types.html)，
    [访问日期：2022年12月25日]'
- en: '[3] PyDicom Documentation,[**API Reference**](https://pydicom.github.io/pydicom/stable/reference/index.html),
    [Accessed at 25/12/2022]'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '[3] PyDicom 文档，[**API 参考**](https://pydicom.github.io/pydicom/stable/reference/index.html)，
    [访问日期：2022年12月25日]'
