- en: Playing with Apple Health Data
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 玩转苹果健康数据
- en: 原文：[https://towardsdatascience.com/playing-with-apple-health-data-be426bcff85e](https://towardsdatascience.com/playing-with-apple-health-data-be426bcff85e)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/playing-with-apple-health-data-be426bcff85e](https://towardsdatascience.com/playing-with-apple-health-data-be426bcff85e)
- en: Data Science Projects
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据科学项目
- en: Classification and time-series forecasting on blood glucose data
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对血糖数据进行分类和时间序列预测
- en: '[](https://medium.com/@ednalyn.dedios?source=post_page-----be426bcff85e--------------------------------)[![Ednalyn
    C. De Dios](../Images/b47f52d0c1f05fcf4bc7a7df05275c93.png)](https://medium.com/@ednalyn.dedios?source=post_page-----be426bcff85e--------------------------------)[](https://towardsdatascience.com/?source=post_page-----be426bcff85e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----be426bcff85e--------------------------------)
    [Ednalyn C. De Dios](https://medium.com/@ednalyn.dedios?source=post_page-----be426bcff85e--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@ednalyn.dedios?source=post_page-----be426bcff85e--------------------------------)[![Ednalyn
    C. De Dios](../Images/b47f52d0c1f05fcf4bc7a7df05275c93.png)](https://medium.com/@ednalyn.dedios?source=post_page-----be426bcff85e--------------------------------)[](https://towardsdatascience.com/?source=post_page-----be426bcff85e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----be426bcff85e--------------------------------)
    [Ednalyn C. De Dios](https://medium.com/@ednalyn.dedios?source=post_page-----be426bcff85e--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----be426bcff85e--------------------------------)
    ·12 min read·Feb 27, 2023
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----be426bcff85e--------------------------------)
    ·阅读时间 12 分钟·2023年2月27日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/a211c1f0d5bf63634e544c80fad268be.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a211c1f0d5bf63634e544c80fad268be.png)'
- en: Photo by [Laesa D](https://unsplash.com/@proudestpuff21?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Laesa D](https://unsplash.com/@proudestpuff21?utm_source=medium&utm_medium=referral)
    提供，[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Today, we’re going to foray into the world of Apple.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，我们将深入探索苹果的世界。
- en: I am a diabetic and wear a continuous glucose monitor, or CGM for short. It
    records my blood sugar every few minutes and communicates the results to my phone.
    Conveniently, I can share my data with my doctor, and together, we discuss specific
    trends and patterns and make truly data-driven decisions.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我是一名糖尿病患者，佩戴一款持续血糖监测仪，简称 CGM。它每几分钟记录一次我的血糖，并将结果传送到我的手机上。方便的是，我可以与医生分享我的数据，我们一起讨论特定的趋势和模式，并做出真正基于数据的决策。
- en: Naturally, I am interested in the data collected by the app. Since Dexcom G6
    (my CGM brand) doesn’t have a csv export function, I worked around that limitation
    by syncing the data with Apple Health. The problem is Apple Health does not allow
    the user to filter what data is exported. Consequently, the export file that is
    generated is a monolith. If you’ve had your phone for at least a year, the export
    file is so large that it’s almost impossible to open. Almost!
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 自然地，我对应用程序收集的数据感兴趣。由于 Dexcom G6（我的 CGM 品牌）没有 CSV 导出功能，我通过将数据同步到苹果健康来绕过这个限制。问题是苹果健康不允许用户过滤导出的数据。因此，生成的导出文件是一个巨大的文件。如果你用了手机至少一年，导出的文件大到几乎无法打开。差点儿！
- en: 'I accepted the challenge: find a way to read the file and play with it.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我接受了这个挑战：找到读取文件并进行处理的方法。
- en: Python, to the rescue!
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Python，救援！
- en: Planning
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 规划
- en: We will approach this challenge like a good ol’ data science project. First,
    we will use the [PAPEM-DM](/papem-dm-7-steps-towards-a-data-science-win-f8cac4f8e02f)
    framework to produce insightful graphics and a clean csv file.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将像处理一个优秀的数据科学项目一样来应对这个挑战。首先，我们将使用 [PAPEM-DM](/papem-dm-7-steps-towards-a-data-science-win-f8cac4f8e02f)
    框架来生成有见地的图形和一个干净的 CSV 文件。
- en: 'Here are the two major obstacles:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有两个主要障碍：
- en: The file is in XML format.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件格式为 XML。
- en: The file is so large that XML readers and converters online can’t even open
    it.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个文件非常大，以至于在线的 XML 阅读器和转换器都无法打开它。
- en: We do not know what the schema is.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们不知道架构是什么。
- en: 'And here’s our approach:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们的方案：
- en: Read the XML file into a dataframe
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 XML 文件读取到数据框中
- en: Whittle down the data into just Dexcom G6 data
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据缩减为仅包含 Dexcom G6 数据
- en: Clean up the dataframe a little bit
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 稍微清理一下数据框
- en: Export the dataframe into a csv
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据框导出为 CSV
- en: Conduct feature engineering
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进行特征工程
- en: Conduct Exploratory Data Analysis (make pretty graphs)
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进行探索性数据分析（制作漂亮的图表）
- en: Predict whether blood sugar is high, normal, or low
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 预测血糖水平是高、正常还是低
- en: Do some time-series forecasting
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进行一些时间序列预测
- en: Acquisition of Apple Health Data from XML to CSV
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 XML 到 CSV 的 Apple Health 数据采集
- en: It’s time to fire up a Jupyter notebook and get our data!
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候启动 Jupyter notebook 并获取我们的数据了！
- en: First, let’s import some Python packages.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们导入一些 Python 包。
- en: '[PRE0]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Second, let’s create the element tree object [1].
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 第二步，让我们创建元素树对象 [1]。
- en: '[PRE1]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Third, let’s convert the element tree object into a dataframe. [1]
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 第三步，让我们将元素树对象转换为数据框 [1]。
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Below, we can see the odd names on the type column.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面，我们可以看到类型列中的奇怪名称。
- en: '![](../Images/758fd7cc598224491fff892f7d8bf95f.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/758fd7cc598224491fff892f7d8bf95f.png)'
- en: Screenshot by the Ednalyn C. De Dios
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 截图由 Ednalyn C. De Dios 提供
- en: Let’s fix that!
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们解决这个问题！
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Here we go:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 来看看：
- en: '![](../Images/84136e99240c335966449943e93c8a81.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/84136e99240c335966449943e93c8a81.png)'
- en: Screenshot by the Ednalyn C. De Dios
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 截图由 Ednalyn C. De Dios 提供
- en: Our dataframe is big!
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的数据框很大！
- en: '![](../Images/97a26b03b92cd1be96e47fedc30d25c7.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/97a26b03b92cd1be96e47fedc30d25c7.png)'
- en: Screenshot by the Ednalyn C. De Dios
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 截图由 Ednalyn C. De Dios 提供
- en: Let’s search for what we’re after.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们搜索我们想要的内容。
- en: '![](../Images/40b567e639f6621352380fcfaf18b525.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/40b567e639f6621352380fcfaf18b525.png)'
- en: Screenshot by the Ednalyn C. De Dios
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 截图由 Ednalyn C. De Dios 提供
- en: Let’s filter for it.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进行筛选。
- en: '[PRE4]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Then, let’s further whittle down the size of our dataframe by keeping only the
    necessary columns and rows.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，通过仅保留必要的列和行，进一步缩减我们的数据框大小。
- en: '[PRE5]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Good!
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 很好！
- en: '![](../Images/6e56716495de8a87b79b83f6c1e85f37.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6e56716495de8a87b79b83f6c1e85f37.png)'
- en: Screenshot by the Ednalyn C. De Dios
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 截图由 Ednalyn C. De Dios 提供
- en: Now, let’s do a little bit of cleaning. Below, we change the data type of the
    startDate column to datetime and force the value column to be of the numeric datatype.
    Lastly, we fill the blank fields with 1 for those records that do not necessarily
    measure anything.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们做一点清理。下面，我们将 startDate 列的数据类型更改为 datetime，并将值列强制为数字类型。最后，我们用 1 填充那些未必测量到任何值的记录的空白字段。
- en: '[PRE6]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Finally, it’s time to export our dataframe into a csv file. Let’s name it “blood_glucose.csv.”
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，是时候将我们的数据框导出为 CSV 文件。我们将其命名为 “blood_glucose.csv”。
- en: '[PRE7]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Preparation of Apple Health Data from Dexcom G6
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 Dexcom G6 的 Apple Health 数据的准备
- en: Now, let’s get ready to do some wrangling.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们准备进行一些数据整理。
- en: First, let’s rename ‘startDate’ with ‘timestamp’ for clarity. Then, we’ll extract
    the time components and attributes from the timestamp column.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，为了清晰起见，让我们将 ‘startDate’ 重命名为 ‘timestamp’。然后，我们将从 timestamp 列中提取时间组件和属性。
- en: '[PRE8]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: We will also extract the weekday characteristic from the day of the week column
    and derive the part of the day based on the hour column.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将从星期几列中提取星期几特征，并根据小时列推导出一天中的时间段。
- en: '[PRE9]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Next, we will categorize whether a record’s blood glucose is high, normal, or
    low.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将对记录的血糖水平进行分类，判断其是高、正常还是低。
- en: '[PRE10]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Looking at the value counts, we can see a massive imbalance between the status
    categories.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 查看值计数，我们可以看到状态类别之间存在巨大的不平衡。
- en: '![](../Images/db8dae87634d36217607fd18eda4fa74.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/db8dae87634d36217607fd18eda4fa74.png)'
- en: Screenshot by the Ednalyn C. De Dios
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 截图由 Ednalyn C. De Dios 提供
- en: I’ve decided to forgo the low status and create another column indicating whether
    a reading is high or not.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我决定放弃低状态，并创建另一列来指示读取值是否为高。
- en: '[PRE11]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: And now, we’re ready to drop timestamp and status columns because we no longer
    need them.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们准备删除 timestamp 和 status 列，因为我们不再需要它们。
- en: '[PRE12]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Let’s look at our dataframe now.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们现在看看我们的数据框。
- en: '![](../Images/45b56df0a701768b16ef933c0d7f5977.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/45b56df0a701768b16ef933c0d7f5977.png)'
- en: Screenshot by the Ednalyn C. De Dios
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 截图由 Ednalyn C. De Dios 提供
- en: Exploratory Data Analysis of Apple Health Data from Dexcom G6
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Dexcom G6 的 Apple Health 数据的探索性数据分析
- en: We’re about to do some visualizations, so let’s set up our figure size and layout.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们即将进行一些可视化，所以让我们设置图形大小和布局。
- en: '[PRE13]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Before we get too deep in the weeds, let’s check out the years we’re working
    with. Let’s do a value_counts().
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入探讨之前，让我们检查一下我们正在处理的年份。让我们执行 value_counts()。
- en: '[PRE14]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: We can see, though, that the years are out of order, so let’s just manually
    create a list of the years in the correct chronological order.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 不过我们可以看到年份的顺序混乱，所以让我们手动创建一个正确的年份顺序列表。
- en: '[PRE15]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Next comes the exciting part. Let’s make some violin plots! Below we’re defining
    a function that will create some violin plots for us based on what part of the
    day it is, the blood glucose value, and whether or not it is a weekend. Here’s
    the code to do all that:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是令人兴奋的部分。让我们绘制一些小提琴图！下面我们定义一个函数，根据一天中的时间、血糖值以及是否为周末来创建一些小提琴图。以下是实现这一切的代码：
- en: '[PRE16]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'And the snippet that will make create individual violin plots based on the
    year:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 以及用于根据年份创建单独的小提琴图的代码片段：
- en: '[PRE17]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'And the result:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是：
- en: '![](../Images/901b68082efc1a01c50590c16aa62c28.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/901b68082efc1a01c50590c16aa62c28.png)'
- en: Screenshot by the Ednalyn C. De Dios
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 截图由 Ednalyn C. De Dios 提供
- en: Beautiful!
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 美丽！
- en: 'But what if we want to compare all the years together? Let’s do the same thing
    again, except lay the graphs on top of each other and see what they look like.
    In the code, it translates into omitting the plt.show() line in the function.
    Here’s the code:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 但如果我们想将所有年份的数据进行比较呢？让我们再次做同样的事情，只是将图表叠加在一起，看看它们的效果。在代码中，这转化为在函数中省略 plt.show()
    这一行。这是代码：
- en: '[PRE18]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'And the result:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是：
- en: '![](../Images/ad97819e68e6120d251b0e2b9a93b1ee.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ad97819e68e6120d251b0e2b9a93b1ee.png)'
- en: Screenshot by the Ednalyn C. De Dios
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 截图由 Ednalyn C. De Dios 提供
- en: Perfect!
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 完美！
- en: Let’s pat ourselves on the back. We managed to pack a lot of dimensions into
    one pretty graph!
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们为自己鼓掌。我们成功地将许多维度压缩到了一个漂亮的图表中！
- en: Exploratory Data Analysis is a process with no one correct way to do it. So
    we’ll leave the rest of the usual suspects (distribution, average over time graphs,
    et cetera) and move on to modeling.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 探索性数据分析没有唯一正确的方法。因此，我们将跳过其余常见的分析方法（如分布、时间序列图等），直接进入建模阶段。
- en: Modeling — Logistic Regression
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 建模 — 逻辑回归
- en: First, let’s drop the value column since we will use the high column as the
    target variable.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们丢弃值列，因为我们将使用高列作为目标变量。
- en: '[PRE19]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Since we will be doing a classification task to predict whether a reading will
    be high, let’s create dummy variables for our categorical variables.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们将进行分类任务以预测读数是否会很高，所以让我们为我们的分类变量创建虚拟变量。
- en: '[PRE20]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Let’s check our dataframe for class imbalance:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们检查一下数据框是否存在类别不平衡：
- en: '[PRE21]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: As the above shows, there are a lot more non-highs than highs. This could lead
    to some inaccuracy with our model so we will fix that with SMOTE. A technique
    used in machine learning to address the problem of imbalanced datasets, SMOTE
    (Synthetic Minority Over-sampling Technique) works by creating synthetic data
    points for the minority class by interpolating between existing minority class
    data points. It does this by randomly selecting a minority class data point and
    finding its k-nearest neighbors. It then randomly chooses one of those neighbors
    and creates a new data point by interpolating between them.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所示，高值的数量远远少于非高值。这可能会导致我们的模型不准确，因此我们将使用 SMOTE 来解决这个问题。SMOTE（合成少数类过采样技术）是一种用于解决数据集不平衡问题的机器学习技术，它通过在现有少数类数据点之间进行插值来创建合成的数据点。它通过随机选择一个少数类数据点并找到其k个最近邻来实现。然后随机选择这些邻居中的一个，并通过它们之间的插值创建一个新的数据点。
- en: The new data point is created by selecting a random point on the line segment
    that connects the minority data point and its chosen neighbor. This process is
    repeated until the minority class is balanced with the majority class.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 新的数据点是通过选择连接少数类数据点及其选择的邻居的线段上的一个随机点来创建的。这个过程会重复进行，直到少数类与多数类平衡为止。
- en: The result is a balanced dataset, which allows machine learning algorithms to
    be trained more effectively. Furthermore, by creating synthetic data points, SMOTE
    ensures that the classifier is not biased towards the majority class, which can
    improve its performance on the minority class.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是一个平衡的数据集，这使得机器学习算法可以更有效地进行训练。此外，通过创建合成的数据点，SMOTE 确保分类器不会偏向于多数类别，从而提高在少数类别上的表现。
- en: Here’s the implementation of SMOTE borrowed from Susan Li’s article on Logistic
    Regression. [2]
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这是从 Susan Li 的关于逻辑回归的文章中借用的 SMOTE 实现。[2]
- en: '[PRE22]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Next, we’ll conduct feature selection by practicing common sense and relying
    on intuition to select which columns to use to predict high blood glucose.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将通过运用常识和直觉来进行特征选择，以决定使用哪些列来预测高血糖。
- en: '[PRE23]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Then, we’ll divide our dataframe into independent and dependent variables, X
    and y.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将把数据框分成自变量和因变量，即X和y。
- en: '[PRE24]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Afterward, we’ll do a train-test-split and create a Logistic Regression object,
    which we will then fit with our data.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将进行训练-测试-划分，并创建一个逻辑回归对象，接着用我们的数据进行拟合。
- en: '[PRE25]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: At long last, we’re ready to predict!
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 终于，我们准备进行预测了！
- en: '[PRE26]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: We’ll even add the confusion matrix and other metrics to evaluate the model’s
    performance.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将添加混淆矩阵和其他指标来评估模型的表现。
- en: '[PRE27]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'And the result:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是：
- en: '![](../Images/a9a66c0646eae5f77e185e25f5e4e72b.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a9a66c0646eae5f77e185e25f5e4e72b.png)'
- en: Screenshot by the Ednalyn C. De Dios
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 截图由 Ednalyn C. De Dios 提供
- en: And since we’re doing binary classification, we will examine the ROC (Receiver
    Operating Characteristic) and AUC (Area Under the Curve).
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们进行的是二分类，我们将检查 ROC（接收者操作特征）和 AUC（曲线下面积）。
- en: An ROC curve is a graph that shows the trade-off between the true positive rate
    (sensitivity) and the false positive rate (1 — specificity) of a binary classifier
    as the classification threshold is varied. In other words, it shows how well the
    classifier can distinguish between positive and negative examples at different
    levels of certainty.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: ROC 曲线是一个图表，显示了二分类器的真实正例率（灵敏度）和假正例率（1 — 特异性）之间的权衡，随着分类阈值的变化。换句话说，它显示了分类器在不同置信水平下区分正例和负例的能力。
- en: The ROC curve is created by plotting the true positive rate against the false
    positive rate for each possible threshold value. The AUC is the area under the
    ROC curve, which ranges from 0 to 1\. An AUC of 1 means that the classifier can
    perfectly distinguish between positive and negative examples, while an AUC of
    0.5 means that it is no better than random guessing.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: ROC 曲线是通过绘制真实正例率与假正例率的关系图创建的。AUC 是 ROC 曲线下的面积，范围从 0 到 1。AUC 为 1 表示分类器可以完美区分正例和负例，而
    AUC 为 0.5 表示分类器的表现不比随机猜测好。
- en: '![](../Images/45d2e76a52c3a3222c7503cb534148e2.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/45d2e76a52c3a3222c7503cb534148e2.png)'
- en: Screenshot by the Ednalyn C. De Dios
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 截图由 Ednalyn C. De Dios 提供
- en: In plain English, ROC AUC provides a way to measure how well a binary classifier
    can correctly distinguish between positive and negative examples, regardless of
    the threshold used. A high AUC score indicates the good performance of the classifier,
    while a low score indicates poor performance. It is a valuable tool for evaluating
    and comparing the performance of different classifiers, especially when the dataset
    is imbalanced or the cost of false positives and false negatives is different.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 用通俗的话来说，ROC AUC 提供了一种衡量二分类器在正确区分正例和负例的能力的方法，无论使用什么阈值。高 AUC 分数表示分类器表现良好，而低分数表示表现较差。它是评估和比较不同分类器性能的有价值工具，尤其是在数据集不平衡或假正例和假负例的成本不同的情况下。
- en: Time-Series Forecasting — Prophet
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 时间序列预测 — Prophet
- en: 'For our last stint, we will use Prophet for time-series forecasting. Prophet
    is a time-series forecasting tool developed by Facebook that is designed to be
    user-friendly and flexible. When using Prophet for time-series forecasting, there
    are several things to keep in mind:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的最后一次尝试中，我们将使用 Prophet 进行时间序列预测。Prophet 是一个由 Facebook 开发的时间序列预测工具，旨在用户友好和灵活。在使用
    Prophet 进行时间序列预测时，需要注意以下几点：
- en: 'The data should be in a specific format: Prophet requires time-series data
    in a particular format, with a column named ‘ds’ for dates/times and a column
    named ‘y’ for the values to be predicted.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据应该符合特定格式：Prophet 需要时间序列数据的特定格式，包含一个名为‘ds’的列用于日期/时间，一个名为‘y’的列用于要预测的值。
- en: 'Outliers should be handled: Outliers can significantly impact the accuracy
    of forecasts, so it’s essential to identify and handle them appropriately.'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要处理异常值：异常值可能会显著影响预测的准确性，因此必须识别和妥善处理这些异常值。
- en: 'Seasonality and trend components should be accounted for: Prophet is designed
    to capture seasonality and trend components in time-series data, so it’s essential
    to include them in the model if they exist in the data.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要考虑季节性和趋势成分：Prophet 旨在捕捉时间序列数据中的季节性和趋势成分，因此如果数据中存在这些成分，必须将其包含在模型中。
- en: 'Holidays and events should be included: Prophet allows you to include holidays
    and events that may affect the time-series data, such as national holidays or
    marketing campaigns.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应包括节假日和事件：Prophet 允许你包含可能影响时间序列数据的节假日和事件，如国家假日或营销活动。
- en: 'Multiple time-series can be included: Prophet can handle multiple time-series
    with different seasonalities and trends, allowing you to model and forecast them
    simultaneously.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以包含多个时间序列：Prophet 可以处理具有不同季节性和趋势的多个时间序列，允许你同时建模和预测它们。
- en: 'Forecast uncertainty should be considered: Prophet provides uncertainty intervals
    for its forecasts, which should be considered when making decisions based on the
    forecasts.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要考虑预测的不确定性：Prophet 为其预测提供了不确定性区间，在根据预测做决策时需要考虑这些不确定性区间。
- en: 'Hyperparameters should be tuned: Prophet has several hyperparameters that can
    be adjusted to improve the accuracy of forecasts, such as the number of Fourier
    terms used to capture seasonality.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 超参数需要调整：Prophet 具有多个可以调整的超参数，以提高预测的准确性，例如用于捕捉季节性的傅里叶项的数量。
- en: Overall, Prophet can be a powerful tool for time-series forecasting, but it’s
    essential to carefully consider the data and model settings to ensure accurate
    and useful predictions. As such, we will import the csv file we saved earlier
    to focus on our dataframe before all the transformations.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，Prophet 可以成为一个强大的时间序列预测工具，但必须仔细考虑数据和模型设置，以确保准确和有用的预测。因此，我们将导入之前保存的 csv
    文件，专注于我们的数据框架，避免所有的转换。
- en: '[PRE28]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Next, we’ll rename the columns to ‘ds’ and ‘y’ as Prophet needs.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将把列重命名为 ‘ds’ 和 ‘y’，因为 Prophet 需要这样的格式。
- en: '[PRE29]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: We’ll also ensure that the ‘ds’ columns are in a datetime format. With tx_localize(None),
    we’re also removing the timezone part of the timestamp since Prophet doesn’t like
    it.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将确保 ‘ds’ 列是 datetime 格式的。通过 tx_localize(None)，我们也在去除时间戳中的时区部分，因为 Prophet
    不喜欢这样。
- en: '[PRE30]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Then, we will resample our data to account for the average of the daily readings.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将重新采样我们的数据，以考虑每日读数的平均值。
- en: '[PRE31]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'And we’re ready:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 我们准备好了：
- en: '[PRE32]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '![](../Images/ff189ae1f9f84abff76af831b5e956e3.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ff189ae1f9f84abff76af831b5e956e3.png)'
- en: Screenshot by the Ednalyn C. De Dios
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 截图由 Ednalyn C. De Dios 提供
- en: 'And for the components:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 以及组件：
- en: '[PRE33]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '![](../Images/e960c3b98f1586e7e9d92ec8c557a6f4.png)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e960c3b98f1586e7e9d92ec8c557a6f4.png)'
- en: Screenshot by the Ednalyn C. De Dios
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 截图由 Ednalyn C. De Dios 提供
- en: Conclusion
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: We’ve come a long way from importing Apple Health data to transforming it to
    discover insights, predict high blood sugar, and forecast blood glucose.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经从导入 Apple Health 数据，转换它以发现见解，预测高血糖，并预测血糖水平，走了很长一段路。
- en: Along the way, we learned how to use the datetime object, make violin plots,
    balance an imbalance dataset with SMOTE, classify with logistic regression, and
    forecast with Prophet.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个过程中，我们学习了如何使用 datetime 对象，制作小提琴图，利用 SMOTE 平衡不平衡的数据集，使用逻辑回归进行分类，并使用 Prophet
    进行预测。
- en: Next, we’ll play with the cleaned data and use Power BI to create a dashboard.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将处理清洗过的数据，并使用 Power BI 创建一个仪表盘。
- en: Stay tuned!
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 敬请关注！
- en: Thanks for stopping by and reading my post. I hope this step-by-step walkthrough
    helps you!
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢你的光临和阅读我的文章。希望这个逐步的讲解对你有所帮助！
- en: '*If you want to learn more about my journey from slacker to data scientist,
    check out the article below:*'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你想了解更多关于我从懒散者到数据科学家的旅程，请查看下面的文章：*'
- en: '[](/from-slacker-to-data-scientist-b4f34aa10ea1?source=post_page-----be426bcff85e--------------------------------)
    [## From Slacker to Data Scientist'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/from-slacker-to-data-scientist-b4f34aa10ea1?source=post_page-----be426bcff85e--------------------------------)
    [## 从懒散者到数据科学家'
- en: My journey into data science without a degree.
  id: totrans-167
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我没有学位的情况下进入数据科学的历程。
- en: towardsdatascience.com](/from-slacker-to-data-scientist-b4f34aa10ea1?source=post_page-----be426bcff85e--------------------------------)
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/from-slacker-to-data-scientist-b4f34aa10ea1?source=post_page-----be426bcff85e--------------------------------)
- en: You can reach me on [Twitter](https://twitter.com/ecdedios) or [LinkedIn](https://www.linkedin.com/in/ednalyn-de-dios/).
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过 [Twitter](https://twitter.com/ecdedios) 或 [LinkedIn](https://www.linkedin.com/in/ednalyn-de-dios/)
    联系我。
- en: 'References:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献：
- en: '[1] [https://www.python-engineer.com/posts/apple-health-data-python/](https://www.python-engineer.com/posts/apple-health-data-python/)'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[1] [https://www.python-engineer.com/posts/apple-health-data-python/](https://www.python-engineer.com/posts/apple-health-data-python/)'
- en: '[2] [https://towardsdatascience.com/building-a-logistic-regression-in-python-step-by-step-becd4d56c9c8](/building-a-logistic-regression-in-python-step-by-step-becd4d56c9c8)'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[2] [https://towardsdatascience.com/building-a-logistic-regression-in-python-step-by-step-becd4d56c9c8](/building-a-logistic-regression-in-python-step-by-step-becd4d56c9c8)'
