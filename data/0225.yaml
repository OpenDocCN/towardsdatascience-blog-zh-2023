- en: Analyzing Chess960 Data
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析 Chess960 数据
- en: 原文：[https://towardsdatascience.com/analyzing-chess960-data-da5c8cdb01de?source=collection_archive---------12-----------------------#2023-01-13](https://towardsdatascience.com/analyzing-chess960-data-da5c8cdb01de?source=collection_archive---------12-----------------------#2023-01-13)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/analyzing-chess960-data-da5c8cdb01de?source=collection_archive---------12-----------------------#2023-01-13](https://towardsdatascience.com/analyzing-chess960-data-da5c8cdb01de?source=collection_archive---------12-----------------------#2023-01-13)
- en: Using more than 14M Chess960 games to find if there’s a variation that’s better
    than the others
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用超过 1400 万局 Chess960 游戏来找出是否有比其他变体更好的变体
- en: '[](https://medium.com/@alexmolasmartin?source=post_page-----da5c8cdb01de--------------------------------)[![Alex
    Molas](../Images/52941b0208bc2094929feb965f145712.png)](https://medium.com/@alexmolasmartin?source=post_page-----da5c8cdb01de--------------------------------)[](https://towardsdatascience.com/?source=post_page-----da5c8cdb01de--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----da5c8cdb01de--------------------------------)
    [Alex Molas](https://medium.com/@alexmolasmartin?source=post_page-----da5c8cdb01de--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@alexmolasmartin?source=post_page-----da5c8cdb01de--------------------------------)[![亚历克斯·莫拉斯](../Images/52941b0208bc2094929feb965f145712.png)](https://medium.com/@alexmolasmartin?source=post_page-----da5c8cdb01de--------------------------------)[](https://towardsdatascience.com/?source=post_page-----da5c8cdb01de--------------------------------)[![数据科学的道路](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----da5c8cdb01de--------------------------------)
    [亚历克斯·莫拉斯](https://medium.com/@alexmolasmartin?source=post_page-----da5c8cdb01de--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F8fa4cb38d347&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fanalyzing-chess960-data-da5c8cdb01de&user=Alex+Molas&userId=8fa4cb38d347&source=post_page-8fa4cb38d347----da5c8cdb01de---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----da5c8cdb01de--------------------------------)
    ·12 min read·Jan 13, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fda5c8cdb01de&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fanalyzing-chess960-data-da5c8cdb01de&user=Alex+Molas&userId=8fa4cb38d347&source=-----da5c8cdb01de---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F8fa4cb38d347&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fanalyzing-chess960-data-da5c8cdb01de&user=Alex+Molas&userId=8fa4cb38d347&source=post_page-8fa4cb38d347----da5c8cdb01de---------------------post_header-----------)
    发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----da5c8cdb01de--------------------------------)
    · 12 分钟阅读 · 2023年1月13日 [](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fda5c8cdb01de&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fanalyzing-chess960-data-da5c8cdb01de&user=Alex+Molas&userId=8fa4cb38d347&source=-----da5c8cdb01de---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fda5c8cdb01de&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fanalyzing-chess960-data-da5c8cdb01de&source=-----da5c8cdb01de---------------------bookmark_footer-----------)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fda5c8cdb01de&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fanalyzing-chess960-data-da5c8cdb01de&source=-----da5c8cdb01de---------------------bookmark_footer-----------)'
- en: In this post, I analyze all the available Chess960 games played in Lichess.
    With this information, and using Bayesian A/B testing, I show that there are no
    starting positions that favor any of the players more than other positions.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我分析了 Lichess 上所有可用的 Chess960 游戏。通过这些信息，并使用贝叶斯 A/B 测试，我展示了没有哪个起始位置比其他位置更有利于任何一方。
- en: The original post was published [here](https://www.amolas.dev/blog/chess-960-initial-position/).
    All the images and plots, unless stated otherwise, are by the author.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 原始文章发布于 [这里](https://www.amolas.dev/blog/chess-960-initial-position/)。所有图片和图表，除非另有说明，均由作者提供。
- en: '![](../Images/8fe33057b8146f1b28a6c55115a33718.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8fe33057b8146f1b28a6c55115a33718.png)'
- en: Photo by [Hassan Pasha](https://unsplash.com/@hpzworkz?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [哈桑·帕莎](https://unsplash.com/@hpzworkz?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Introduction
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: The World Fischer Random Chess Championship recently took place in Reykjavik,
    with [GMHikaru](https://twitter.com/GMHikaru) emerging victorious. Fischer Random
    Chess, also known as Chess960, is a unique variation of the classic game that
    randomizes the starting position of the pieces. The intention behind this change
    is to level the playing field by eliminating the advantage of memorized openings
    and forcing players to rely on their skill and creativity.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 世界费舍尔随机棋锦标赛最近在雷克雅未克举行，[GMHikaru](https://twitter.com/GMHikaru) 胜出。费舍尔随机棋，也被称为
    Chess960，是经典棋局的一种独特变体，它随机化棋子的起始位置。这一改变的目的是通过消除记忆开局的优势来平衡比赛，使玩家不得不依靠自己的技巧和创造力。
- en: 'As I followed the event, one question came to mind: are there certain initial
    Chess960 variations that give one player an unfair advantage? As it stands, the
    standard chess initial position gives white a slight edge, with white usually
    winning around 55% of game points ([ref](https://en.wikipedia.org/wiki/First-move_advantage_in_chess)))
    and Stockfish giving white a score of +0.3 ([ref](https://lichess.org/analysis))).
    However, this edge is relatively small, which is likely one of the reasons why
    this position has remained the standard.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在跟踪这一事件的过程中，我心中出现了一个问题：是否有某些初始 Chess960 变体会给某一方带来不公平的优势？目前标准棋局的初始位置给白方略微的优势，白方通常赢得约
    55% 的比赛点数（[参考](https://en.wikipedia.org/wiki/First-move_advantage_in_chess)），Stockfish
    给白方的评分为 +0.3（[参考](https://lichess.org/analysis)）。然而，这一优势相对较小，这可能是该位置成为标准位置的原因之一。
- en: There is some work already done about this topic. Ryan Wiley wrote this [blog
    post](https://lichess.org/@/rdubwiley/blog/using-lichesss-public-data-to-find-the-best-chess-960-position/GCpB9WLH)
    where he analyzes some data from lichess and reach the conclusion that some variations
    are better than others. In the post, he says that some positions have a higher
    winning probability for white pieces, but he doesn’t show how significant is this
    claim. This made me think that maybe his findings need to be revisited. He also
    trains a ML model on the data in order to determine the winner of a game using
    as inputs the variation and the ELOs of the players. The resulting model has an
    accuracy of 65%.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 关于这个主题已有一些工作。Ryan Wiley 写了这篇[博客文章](https://lichess.org/@/rdubwiley/blog/using-lichesss-public-data-to-find-the-best-chess-960-position/GCpB9WLH)，他在文章中分析了
    lichess 上的数据，并得出了一些变体优于其他变体的结论。文章中提到某些棋局对白方的胜率更高，但他没有展示这一说法的显著性。这让我觉得也许他的发现需要重新审视。他还训练了一个机器学习模型，以变体和玩家的
    ELO 为输入来预测比赛结果。最终模型的准确率为 65%。
- en: On the other hand, there’s also this [repo](https://github.com/welyab/chess960-win-by-position-setup)
    with the statistics for 4.5 millions games (~4500 games per variation). In this
    repo the biggest difference for white and black are listed, but again no statistical
    significance is given.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，还有这个[仓库](https://github.com/welyab/chess960-win-by-position-setup)，其中包含了
    450 万场比赛的统计数据（每个变体约 4500 场比赛）。在这个仓库中，列出了白方和黑方的最大差异，但同样没有给出统计显著性。
- en: Finally, there’s also some research about this topic focused in computer analysis.
    In this [spreadsheet](https://docs.google.com/spreadsheets/u/1/d/1JVT6_ROOlCTtMmazzBe0lhcGv54rB6JCq67QOhaRp6U/edit#gid=0)
    there’s the Stockfish evaluation at depth ~40 for all the starting positions.
    Interestingly there’s no position where Stockfish gives black player an advantage.
    There’s also this [database](http://computerchess.org.uk/ccrl/404FRC/opening_report_by_white_score.html)
    with Chess960 games between different computer engines. However, I’m currently
    only interested in analyzing human games, so I’ll not put a lot of attention to
    this type of games. Maybe in a future post.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，还有一些关于这个主题的计算机分析研究。在这个[电子表格](https://docs.google.com/spreadsheets/u/1/d/1JVT6_ROOlCTtMmazzBe0lhcGv54rB6JCq67QOhaRp6U/edit#gid=0)中，包含了所有起始位置的
    Stockfish 深度 ~40 评估。有趣的是，没有一个位置 Stockfish 给黑方提供优势。还有这个[数据库](http://computerchess.org.uk/ccrl/404FRC/opening_report_by_white_score.html)，其中包含了不同计算机引擎之间的
    Chess960 比赛。然而，我目前只对分析人类比赛感兴趣，所以对这类比赛不会给予过多关注，也许在未来的文章中会涉及。
- en: Since none of the previous work has addressed the problem of assigning statistical
    confidence to the winning chances to each variation of Chess960 I decided to give
    it a try.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 由于之前的工作没有解决给每种 Chess960 变体的获胜机会赋予统计信心的问题，我决定尝试一下。
- en: tl;dr
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简而言之
- en: In this post I analyze all the available Chess960 games played in Lichess. With
    this information I show that
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我分析了所有在 Lichess 上进行的 Chess960 比赛。通过这些信息，我展示了
- en: using bayesian AB testing I show that there are no starting positions that favor
    any of the players more than other positions
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用贝叶斯AB测试，我展示了没有任何起始位置比其他位置更有利于任何一方。
- en: also, the past winning rate of a variation doesn’t predict the future winning
    rate of the same variation
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，变体过去的获胜率并不预测该变体未来的获胜率。
- en: and stockfish evaluations don’t predict actual winning rates for each variation
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 并且Stockfish的评估并不预测每个变体的实际获胜率
- en: finally, knowing the variation being played doesn’t help to predict the winner
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，知道正在使用的变体并不能帮助预测获胜者。
- en: Data
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据
- en: Lichess—the greatest chess platform out —maintains a [database](https://database.lichess.org/)
    with all the games that have been played in their platform. To do the analysis,
    I downloaded ALL the available Chess960 data (up until 31–12–2022). For all the
    games played I extracted the variation, the players ELO and the final result.
    The data is available on [Kaggle](https://www.kaggle.com/datasets/alexmolas/chess-960-lichess).
    The scripts and notebooks to donwload and process the data are available on this
    [repo](https://github.com/AlexMolas/chess-960).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Lichess——世界上最伟大的国际象棋平台——维护了一个 [数据库](https://database.lichess.org/) ，其中包含了他们平台上所有已进行的游戏。为了进行分析，我下载了所有可用的Chess960数据（直到2022年12月31日）。对于所有进行的游戏，我提取了变体、玩家的ELO以及最终结果。这些数据可以在
    [Kaggle](https://www.kaggle.com/datasets/alexmolas/chess-960-lichess) 上获得。用于下载和处理数据的脚本和笔记本可以在这个
    [repo](https://github.com/AlexMolas/chess-960) 上找到。
- en: The data I used is released under the [Creative Commons CC0 license](https://tldrlegal.com/license/creative-commons-cc0-1.0-universal),
    which means you can use them for research, commercial purpose, publication, anything
    you like. You can download, modify and redistribute them, without asking for permission.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用的数据是根据 [Creative Commons CC0 许可协议](https://tldrlegal.com/license/creative-commons-cc0-1.0-universal)
    发布的，这意味着你可以将其用于研究、商业目的、出版等任何你喜欢的用途。你可以下载、修改和再分发这些数据，无需请求许可。
- en: Mathematical framework
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数学框架
- en: Bayesian A/B testing
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 贝叶斯A/B测试
- en: According to the prior work mentioned above some variations are better than
    others. But how can we be sure that these differences are statistically significant?
    To answer this question we can use the famous A/B testing strategy. This is, we
    start with the hypothesis that variation *A* has bigger winning chances than variation
    *B*. The null hypothesis is then that and *A* and *B* have the same winning rate.
    To discard the null hypothesis we need to show that the observed data is so extreme
    under the assumption of the null hypothesis that it doesn’t make sense to still
    believe in it. To do that we’ll use bayesian A/B testing [1](https://www.amolas.dev/blog/chess-960-initial-position/#fn:1).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 根据上述的先前工作，一些变体比其他变体更好。但我们如何确保这些差异在统计上是显著的呢？为了解答这个问题，我们可以使用著名的A/B测试策略。也就是说，我们首先假设变体*A*比变体*B*具有更大的获胜机会。零假设则是*A*和*B*具有相同的获胜率。为了排除零假设，我们需要证明在零假设的假设下观察到的数据是如此极端，以至于继续相信零假设没有意义。为此，我们将使用贝叶斯A/B测试
    [1](https://www.amolas.dev/blog/chess-960-initial-position/#fn:1)。
- en: In the bayesian framework, we assign to each variation a probability distribution
    for the winning rate. This is, instead of saying that variation *A* has a winning
    rate of `X%` we say that the winning rate for *A* has some probability distribution.
    The natural choice when modelling this kind of problem is to choose the beta distribution
    ([ref](https://www.countbayesie.com/blog/2015/4/25/bayesian-ab-testing)).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在贝叶斯框架下，我们为每个变体分配一个获胜率的概率分布。也就是说，不是说变体*A*的获胜率是`X%`，而是说变体*A*的获胜率有某种概率分布。建模这种问题时，自然的选择是使用贝塔分布
    ([ref](https://www.countbayesie.com/blog/2015/4/25/bayesian-ab-testing))。
- en: The beta distribution is defined as
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 贝塔分布被定义为
- en: '![](../Images/24ede66099b563d4b781df12d943538c.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/24ede66099b563d4b781df12d943538c.png)'
- en: where *B(a, b) = Γ(a)Γ(b)/Γ(a+b), Γ(x)* is the gamma function, and for positive
    integers is *Γ(n) = (n-1)!.* For a given variation, the parameter α can be interpreted
    as the number of white wins plus one, and β as the number of white losses plus
    one.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 *B(a, b) = Γ(a)Γ(b)/Γ(a+b), Γ(x)* 是伽马函数，对于正整数 *Γ(n) = (n-1)!*。对于给定的变体，参数α可以解释为白方胜利的次数加一，而β则为白方失败的次数加一。
- en: Now, for two variations *A* and *B* we want to know how probable is that the
    winning rate of *A* is bigger than the winning rate of *B*. Numerically, we can
    do this by sampling *N* values from *A* and *B*, namely *w_A* and *w_B* and compute
    the fraction of times that *w_A > w_b*. However, we can compute this analytically,
    starting with
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，对于两种变体*A*和*B*，我们想知道*A*的胜率比*B*的胜率大的可能性。数值上，我们可以通过从*A*和*B*中抽取*N*个值，即*w_A*和*w_B*，并计算*w_A
    > w_B*的比例来做到这一点。然而，我们可以通过解析的方法计算这一点，从
- en: '![](../Images/66cb6695aef5fe4dd6ad66279b3e98a9.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/66cb6695aef5fe4dd6ad66279b3e98a9.png)'
- en: Notice that the beta function can give huge numbers, so to avoid overflow we
    can transform it using `log`. Fortunately, many statistical packages have implementations
    for the log beta function. With this transformation, the addends are transformed
    to
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，Beta函数可能会给出非常大的数字，因此为了避免溢出，我们可以使用`log`进行转换。幸运的是，许多统计软件包都有对数Beta函数的实现。通过这种转换，项被转换为
- en: '![](../Images/79a085f52c272028026d4ac7d687d5ab.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/79a085f52c272028026d4ac7d687d5ab.png)'
- en: This is implemented in python, using the `scipy.special.betaln` implementation
    of log B(a, b) , as
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这在python中实现，使用`scipy.special.betaln`对数B(a, b)的实现，如
- en: '[PRE0]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: With this method, we can compute how probable is for a variation to be better
    than another, and with that, we can define a threshold *α* such that we say that
    variation *B* is significantly better than variation *A* if *Pr(p_A>p_B)<1-α*.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种方法，我们可以计算一个变体比另一个变体更好的可能性，并由此定义一个阈值*α*，使得我们可以说，如果*Pr(p_A>p_B)<1-α*，则变体*B*显著优于变体*A*。
- en: Below you can see the plot of some beta distributions. In the first plot, the
    parameters are *α_A*= 100, *β_A*=80, *α_B*=110 and *β_B=*70.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 下面你可以看到一些Beta分布的图。第一幅图中，参数为*α_A*= 100，*β_A*=80，*α_B*=110和*β_B*=70。
- en: '![](../Images/cbcfb243bbfe096a0d530a021483bc76.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cbcfb243bbfe096a0d530a021483bc76.png)'
- en: Beta distributions with parameters *α_A*= 100, *β_A*=80, *α_B*=110 and *β_B=*70
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 参数为*α_A*= 100，*β_A*=80，*α_B*=110和*β_B*=70的Beta分布
- en: In this second plot, the parameters *α_A*= 10, *β_A*=8, *α_B*=11 and *β_B=*7.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二幅图中，参数为*α_A*= 10，*β_A*=8，*α_B*=11和*β_B*=7。
- en: '![](../Images/02ae50aa2d80ea7b83272b4b9f1751d8.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/02ae50aa2d80ea7b83272b4b9f1751d8.png)'
- en: Beta distributions with parameters *α_A*= 10, *β_A*=8, *α_B*=11 and *β_B=*7
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 参数为*α_A*= 10，*β_A*=8，*α_B*=11和*β_B*=7的Beta分布
- en: Notice that, even in both cases the winning rates are the same, but the distributions
    look different. This is because in the first case, we’re more sure about the actual
    rate, and this is because we’ve observed more points than in the second case.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，即使在两种情况下胜率相同，但分布看起来不同。这是因为在第一种情况下，我们对实际胜率的确定性更高，这是因为我们观察到了比第二种情况更多的点。
- en: Family-wise error rate
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 家庭错误率
- en: 'Usually, in A/B testing one just compares two variations, eg: conversions in
    a website with white background vs blue background. However, in this experiment,
    we’re not just comparing two variations, but we’re comparing all the possible
    pairs of variations -remember that we want to find if there is at least one variation
    that is better than another variation- therefore, the number of comparisons we
    are doing is 960*959/2 ~ 5e5\. This means that using the typical value of *α=0.05*
    is an error because we need to take into consideration that we’re doing a lot
    of comparisons. For instance, assuming that the winning probabilities distributions
    are the same for all the initial positions and using the standard one would have
    a probability'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，在A/B测试中，人们仅比较两个变体，例如：白色背景与蓝色背景的网站转换率。然而，在这个实验中，我们不仅仅是在比较两个变体，而是比较所有可能的变体对——记住我们想找出是否有至少一个变体优于另一个变体——因此，我们所做的比较数量是960*959/2
    ~ 5e5。这意味着使用典型值*α=0.05*是不正确的，因为我们需要考虑到我们进行的比较数量。例如，假设所有初始位置的胜率分布相同，使用标准值会有一定的概率
- en: '![](../Images/4215f76ceed934641ccbf577d3c4de98.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4215f76ceed934641ccbf577d3c4de98.png)'
- en: of at least observing one false positive! This means that even if there’s no
    statistically significant difference between any pair of variations we’ll still
    observe at least one false positive. If we want to keep the same *α* but increase
    the number of comparisons from 2 to we need then to define an effective *α* like
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 至少观察到一个假阳性！这意味着即使在任何变体对之间没有统计显著差异的情况下，我们仍将观察到至少一个假阳性。如果我们想保持相同的*α*但将比较数量从2增加到，我们需要定义一个有效的*α*，如
- en: '![](../Images/1111c69d505aa6d33eaf5c53d27a7be6.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1111c69d505aa6d33eaf5c53d27a7be6.png)'
- en: and solving
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 并解决
- en: '![](../Images/9cf2989d713285449a026cf88ac8532d.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9cf2989d713285449a026cf88ac8532d.png)'
- en: Plugging our values we finally get *α_eff =1e-7*.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 插入我们的值后，我们最终得到*α_eff =1e-7*。
- en: Train/Test split
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 列车/测试分割
- en: In the previous sections, we developed the theory to determine if a variation
    is better than another variation according to the observed data. This is, after
    having seen some data we build a hypothesis of the form `variation B is better
    than variation A` . However, we can’t test the truth of this hypothesis using
    the same data we used to generate the hypothesis. We need to test the hypothesis
    against a set of data that we haven’t used yet.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的部分，我们发展了理论，以确定一种变体是否比另一种变体更好，基于观察到的数据。也就是说，在看到一些数据后，我们建立了`变体B优于变体A`的形式的假设。然而，我们不能使用用于生成假设的数据来验证假设的真实性。我们需要在尚未使用的数据集上测试这个假设。
- en: To make this possible we will split the full dataset into two disjoint `train`
    and `test` datasets. The `train` dataset will be used together with the bayesian
    A/B testing framework to generate hypotheses of the form *B>A*. And then, using
    the `test` dataset we’ll check if the hypotheses hold.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这一点，我们将把完整的数据集拆分成两个不相交的`train`和`test`数据集。`train`数据集将与贝叶斯A/B测试框架一起使用，以生成*B>A*形式的假设。然后，使用`test`数据集，我们将检查这些假设是否成立。
- en: Notice that this approach makes sense only if the distribution of winning rates
    doesn’t change over time. This seems a reasonable assumption since, AFAIK, there
    haven’t been big theoretical advances that have changed the winning probability
    of certain variations during the last few years. In fact, minimizing the theory
    and preparation impact on game results is one of the goals of Chess960.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这种方法只有在赢率的分布随时间不变时才有意义。这似乎是一个合理的假设，因为，据我所知，过去几年没有发生过重大的理论进展来改变某些变体的获胜概率。实际上，最小化理论和准备对游戏结果的影响是Chess960的目标之一。
- en: Data preparation
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据准备
- en: In the previous sections we have implicitly assumed that a game can be either
    won or lost, however, it can also be drawn. I’ve assigned `1` point for a victory,
    `1/2` point for a draw, and `0` points for a loss, which is the usual approach
    in chess games.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的部分，我们隐含地假设一局游戏要么赢，要么输，但它也可能是平局。我为胜利分配了`1`分，为平局分配了`1/2`分，为失败分配了`0`分，这是国际象棋比赛中通常的做法。
- en: Results
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结果
- en: In this section, we will apply all the techniques explained above to the lichess
    dataset. In the dataset, we have more than 13M games, which is ~14K games per
    variation. However, the dataset contains games for a huge variety of players and
    time controls (from ELO 900 to 2000, and from blitz to classic games). Therefore,
    doing the comparisons using all the games would mean ignoring confounder variables.
    To avoid this problem I’ve only used games for players with an ELO in the range
    (1800, 2100) and with a blitz time control. I’m aware that these filters do not
    resemble the reality of top-level contests such as the World Fischer Random Chess
    Championship, but in lichess data, there are not a lot of classical Chess960 games
    for high-rated players (>2600), so I will just use the group with more games.
    After applying these filters we end up with a dataset with ~2.4M games, which
    is ~2.5K games per variation.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将应用上面解释的所有技术到lichess数据集中。在数据集中，我们有超过1300万局游戏，这大约是每种变体1.4万局。然而，数据集包含了大量不同的玩家和时间控制（从ELO
    900到2000，从快速棋到经典棋）。因此，使用所有游戏进行比较将意味着忽视混杂变量。为避免这个问题，我只使用了ELO在（1800, 2100）范围内且使用快速棋时间控制的玩家的游戏。我意识到这些筛选条件与世界费舍尔随机国际象棋锦标赛等顶级比赛的现实情况不符，但在lichess数据中，高等级玩家（>2600）的经典Chess960游戏并不多，所以我将只使用游戏数量更多的组。在应用这些筛选条件后，我们得到一个包含约240万局游戏的数据集，每种变体约有2500局。
- en: The train/test split has been done using a temporal split. All the games prior
    to `2022-06-01` are part of the training dataset, and all the games after that
    date are part of the testing dataset, which accounts for ~80% of the data for
    training and ~20% for testing.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 列车/测试分割是通过时间分割完成的。`2022-06-01`之前的所有游戏都属于训练数据集，而该日期之后的所有游戏都属于测试数据集，这大约占训练数据的80%和测试数据的20%。
- en: Generating hypotheses
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生成假设
- en: The first step is to generate a set of hypotheses using A/B testing. The number
    of variation pairs to compare is pretty big (1e5) and testing all of them would
    take a lot, so we’ll just compare the 20 variations with the highest winning rates
    against the 30 variations with the lowest winning rates. This means we’ll have
    900 pairs of variations to compare. Here we see the pair of variations with the
    bigger difference in the `train` dataset
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是通过 A/B 测试生成一组假设。要比较的变化对数量相当大（1e5），测试所有这些变化对会花费很多时间，因此我们只比较获胜率最高的 20 个变化与获胜率最低的
    30 个变化。这意味着我们将有 900 对变化进行比较。在这里，我们看到 `train` 数据集中差异较大的变化对。
- en: '![](../Images/7427f6589c9c58467da2056f4f8d9052.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7427f6589c9c58467da2056f4f8d9052.png)'
- en: Notice that the *α* for these variations is bigger than *α*_*eff*, which means
    that the difference is not significant. Since these are the variations with the
    higher difference we know that there’s not any variation pair with a statistically
    significant difference.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到这些变化的 *α* 大于 *α*_*eff*，这意味着差异不显著。由于这些是差异较大的变化，我们知道没有任何变化对具有统计学上显著的差异。
- en: Anyway, even if the difference is not significant, with this table one can hypothesize
    that variation `rnnqbkrb` is worse than variation `bbqrnkrn`. If we check these
    variation values in the `test` dataset we get
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管差异不显著，但从这张表格可以假设变化 `rnnqbkrb` 比变化 `bbqrnkrn` 更差。如果我们在 `test` 数据集中检查这些变化值，我们会得到
- en: '![](../Images/c464a5a432cccb5fa9a94c4655a18b8e.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c464a5a432cccb5fa9a94c4655a18b8e.png)'
- en: 'Notice that the “bad” variation still has a winning rate lower than the “good”
    variation, however, it has increased from `0.473` to `0.52`, which is quite a
    lot. This brings a new question: do past variation performance guarantee future
    performance?'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到“差”的变化的获胜率仍然低于“好”的变化，然而，它已经从 `0.473` 增加到 `0.52`，这差距还是很大的。这提出了一个新问题：过去的变化表现是否能保证未来的表现？
- en: Past vs Future performances
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 过去与未来的表现
- en: In the last section, we have seen how to generate and test hypotheses, but we
    have also noticed that the performance of some variations changes over time. In
    this section, we’ll analyze this question more in detail. To do so, I have computed
    the winning rate in the `train` and `test` datasets and plotted one against the
    other.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一部分，我们已经看到如何生成和测试假设，但我们也注意到一些变化的表现会随时间变化。在这一部分，我们将更详细地分析这个问题。为此，我计算了 `train`
    和 `test` 数据集中的获胜率，并将它们绘制在一起进行比较。
- en: '![](../Images/58f09dc78392f377090b472ccbc38d6e.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/58f09dc78392f377090b472ccbc38d6e.png)'
- en: Train vs Test winning rates
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 训练与测试的获胜率
- en: As we can see, there’s no relation between past and future winning rates!
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，过去的获胜率与未来的获胜率之间没有关系！
- en: Evaluation vs Rates
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 评估与率
- en: We’ve seen that past performances do not guarantee future performances, but
    do Stockfish evaluations predict future performances? In the following plot, I
    show the evaluation of Stockfish for each variation and the corresponding winning
    rate in the dataset.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到过去的表现不能保证未来的表现，但 Stockfish 评估能否预测未来的表现？在接下来的图表中，我展示了 Stockfish 对每个变化的评估以及数据集中相应的获胜率。
- en: '![](../Images/eb685762948b82d79ce09c69cef055da.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/eb685762948b82d79ce09c69cef055da.png)'
- en: Stockfish Evaluation vs Winning rate for each variation
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Stockfish 评估与每个变化的获胜率
- en: Machine learning model
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 机器学习模型
- en: Until now we’ve seen that there are no better variations in the Chess960 game
    and that previous performance is no guarantee of future performance. In this section,
    we’ll see if we can predict which side is going to win a match based on the variation
    and the ELO of the players. To do so I’ll train an ML model.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 直到现在，我们已经看到在 Chess960 游戏中没有更好的变化，并且过去的表现不能保证未来的表现。在这一部分，我们将看看是否可以根据变化和玩家的 ELO
    预测哪一方将赢得比赛。为此，我将训练一个机器学习模型。
- en: The features of the model are the ELO of the white and black player, the variation
    being played, and the time control being used. Since the cardinality of the variation
    feature is huge I’ll use `CatBoost`, which has been specifically designed to deal
    with categorical features. Also, as a baseline, I’ll use a model that predicts
    that white wins if `White ELO > Black ELO`, draws if `White ELO == Black ELO`,
    and losses if `White ELO < Black ELO`. With this experiment, I want to see which
    is the impact of the variation in the expected winning rate.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 模型的特征包括白棋和黑棋的ELO、正在进行的变体以及使用的时间控制。由于变体特征的基数很大，我将使用`CatBoost`，该模型专门设计用于处理分类特征。此外，作为基准，我将使用一个模型，该模型预测如果`White
    ELO > Black ELO`则白棋获胜，`White ELO == Black ELO`则平局，`White ELO < Black ELO`则白棋失败。通过这个实验，我想了解变体对预期胜率的影响。
- en: In the next tables, I show the classification reports for both models.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的表格中，我展示了两个模型的分类报告。
- en: CatBoost model
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CatBoost模型
- en: '![](../Images/b68d8ca2ce3342cc675bf5e9c8a0ec91.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b68d8ca2ce3342cc675bf5e9c8a0ec91.png)'
- en: Baseline model
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基准模型
- en: '![](../Images/569e6151fe5136fba0e941216900256d.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/569e6151fe5136fba0e941216900256d.png)'
- en: From these tables, we can see that the CatBoost and the baseline model have
    almost the same results, which means that knowing the variation being played doesn’t
    help to predict the result of the game. Notice that the results are compatible
    with the ones obtained [here](https://lichess.org/@/rdubwiley/blog/using-lichesss-public-data-to-find-the-best-chess-960-position/GCpB9WLH)
    (accuracy ~65%), but in the linked blog it’s assumed that the knowing the variation
    helps to predict the winner, and we have seen that this is not true.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 从这些表格中，我们可以看到CatBoost和基准模型的结果几乎相同，这意味着知道正在进行的变体并不有助于预测游戏结果。注意，结果与[这里](https://lichess.org/@/rdubwiley/blog/using-lichesss-public-data-to-find-the-best-chess-960-position/GCpB9WLH)获得的结果相符（准确率
    ~65%），但在链接的博客中假设知道变体有助于预测赢家，而我们已经看到这并不成立。
- en: Conclusions & Comments
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论与评论
- en: In this post, I’ve shown that
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我展示了
- en: using the standard threshold to determine significant results is not valid when
    having more than one comparison, and it needs to be adjusted.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用标准阈值来确定显著结果在进行多次比较时不有效，需要进行调整。
- en: 'there are no statistically significant differences in the winning rates, ie:
    we can’t say that a variation is preferable for white than another.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 胜率没有统计学上的显著差异，即：我们不能说某个变体比另一个变体对白棋更有利。
- en: past rates don’t imply future rates.
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过去的比率不能暗示未来的比率。
- en: stockfish evaluations don’t predict winning rates.
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Stockfish评估无法预测胜率。
- en: knowing which variation is being played doesn’t help to predict the result of
    a match.
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 知道正在进行的变体并不有助于预测比赛结果。
- en: However, I’m aware that the data I’ve used is not representative of the problem
    I wanted to study in the first place. This is because the data accessible at Lichess
    is skewed towards non-professional players, and even though I’ve used data from
    players with a decent ELO (from 1800 to 2100) they are pretty far from the players
    participating in the Chess960 World Cup (>2600). The problem is that the number
    of players with an ELO >2600 is very low (209 according to [chess.com](https://www.chess.com/players?page=10)),
    and not all of them play regularly Chess960 in Lichess, so the number of games
    with such characteristics is almost zero.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我意识到我使用的数据并不代表我最初想研究的问题。这是因为Lichess上的数据偏向于非职业玩家，即使我使用了来自具有良好ELO（从1800到2100）的玩家的数据，但他们距离参加Chess960世界杯的玩家（>2600）还很远。问题在于，ELO
    >2600的玩家数量非常少（根据[chess.com](https://www.chess.com/players?page=10)的数据显示为209），而且并不是所有人都在Lichess上定期进行Chess960比赛，因此具有这种特征的棋局数量几乎为零。
