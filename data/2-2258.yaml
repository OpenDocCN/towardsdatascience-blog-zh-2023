- en: Use to_string() to Stop Python from Hiding the Body of the Printed DataFrames
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 to_string() 防止 Python 隐藏打印数据框的主体
- en: 原文：[https://towardsdatascience.com/use-to-string-to-stop-python-from-hiding-the-body-of-the-printed-dataframes-47ce474ea914](https://towardsdatascience.com/use-to-string-to-stop-python-from-hiding-the-body-of-the-printed-dataframes-47ce474ea914)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/use-to-string-to-stop-python-from-hiding-the-body-of-the-printed-dataframes-47ce474ea914](https://towardsdatascience.com/use-to-string-to-stop-python-from-hiding-the-body-of-the-printed-dataframes-47ce474ea914)
- en: 3-Minutes Pandas
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3-分钟 Pandas
- en: What should we do to see the entire printed dataframe after the execution of
    a Python script?
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们应该怎么做才能在 Python 脚本执行后查看整个打印的数据框？
- en: '[](https://jianan-lin.medium.com/?source=post_page-----47ce474ea914--------------------------------)[![Yufeng](../Images/8b1a4c165aaac045ea819f850017b7cd.png)](https://jianan-lin.medium.com/?source=post_page-----47ce474ea914--------------------------------)[](https://towardsdatascience.com/?source=post_page-----47ce474ea914--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----47ce474ea914--------------------------------)
    [Yufeng](https://jianan-lin.medium.com/?source=post_page-----47ce474ea914--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://jianan-lin.medium.com/?source=post_page-----47ce474ea914--------------------------------)[![Yufeng](../Images/8b1a4c165aaac045ea819f850017b7cd.png)](https://jianan-lin.medium.com/?source=post_page-----47ce474ea914--------------------------------)[](https://towardsdatascience.com/?source=post_page-----47ce474ea914--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----47ce474ea914--------------------------------)
    [Yufeng](https://jianan-lin.medium.com/?source=post_page-----47ce474ea914--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----47ce474ea914--------------------------------)
    ·4 min read·Apr 10, 2023
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----47ce474ea914--------------------------------)
    ·4 分钟阅读·2023 年 4 月 10 日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/82ece6c195a037aa5d625ace0831eddf.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/82ece6c195a037aa5d625ace0831eddf.png)'
- en: Photo by [Pascal Müller](https://unsplash.com/@millerthachiller?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Pascal Müller](https://unsplash.com/@millerthachiller?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Sometimes running through a Python script without reporting any errors is not
    the only task of the debugging process. We need to make sure the functions are
    executed as expected. It’s a typical step in the exploratory data analysis to
    check how the data looks like before and after some specific data processing.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，运行 Python 脚本时没有报告任何错误，并不是调试过程中的唯一任务。我们需要确保函数按预期执行。这是在探索性数据分析中的一个典型步骤，检查数据在某些特定数据处理前后的样子。
- en: So, we need to print out some data frames or essential variables during the
    execution of the script, in order to check whether they are “correct”. However,
    simple print command can only show the top and bottom rows of the data frame sometimes
    (as shown in the example below), which makes the checking procedure unnecessarily
    hard.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们需要在脚本执行过程中打印一些数据框或重要变量，以检查它们是否“正确”。然而，简单的 print 命令有时只能显示数据框的前几行和最后几行（如下例所示），这使得检查过程变得不必要地困难。
- en: Usually, the data frames are in the format of `pandas.DataFrame`, and if you
    use the print command directly, you might get something like this,
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，数据框的格式是 `pandas.DataFrame`，如果直接使用 print 命令，你可能会得到如下内容，
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](../Images/45c899e7e97eae3889f90f12f2b773b3.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/45c899e7e97eae3889f90f12f2b773b3.png)'
- en: print the top 100 rows (image by author)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 打印前 100 行（图像由作者提供）
- en: You may have already noticed that the middle part of the data frame is hidden
    by three dots. What if we really need to check what the top 100 rows are? For
    example, we want to check the result of a specific step in the middle of a large
    Python script, in order to make sure the functions are executed as expected.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到，数据框的中间部分被三个点隐藏了。如果我们真的需要检查前 100 行是什么呢？例如，我们想检查一个大型 Python 脚本中间某个特定步骤的结果，以确保函数按预期执行。
- en: set_option()
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: set_option()
- en: One of the most straightforward solutions is to edit the default number of rows
    that Pandas show,
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 最直接的解决方案之一是编辑 Pandas 显示的默认行数，
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/67428d29db198d387f537af5edec7a1a.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/67428d29db198d387f537af5edec7a1a.png)'
- en: print the top 100 rows after setting the default number of rows that Pandas
    displays (image by author)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 设置 Pandas 显示的默认行数后，打印前 100 行（图像由作者提供）
- en: where `set_option` is a method that allows you to control the behavior of Pandas
    functions, which includes setting the maximum number of rows or columns to display,
    as we did above. The first argument `display.max_rows` is to adjust the maximum
    number of rows to display and 500 is the value we set as the maximum row number.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 `set_option` 是一个方法，它允许你控制 Pandas 函数的行为，包括设置显示的最大行数或列数，如我们之前所做的。第一个参数 `display.max_rows`
    是用来调整显示的最大行数的，500 是我们设定的最大行数值。
- en: Even though this method is widely used, it’s not ideal to put it inside an executable
    Python file, especially if you have multiple data frames to print and they are
    desired to display different numbers of rows.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这种方法被广泛使用，但将其放在可执行的 Python 文件中并不理想，尤其是当你有多个数据框要打印，并且希望它们显示不同的行数时。
- en: For example, I have a script structured as shown,
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我有一个结构如下的脚本，
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: we have different numbers of top rows to show through the entire script, and
    sometimes we want to see the entire printed data frame, but sometimes we only
    care about the dimension and structure of the data frame without the need to see
    the entire data.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在整个脚本中需要显示不同数量的前行，有时我们想查看整个打印的数据框，但有时我们只关心数据框的维度和结构，而不需要查看全部数据。
- en: In such a case, we probably need to use the function `pd.set_option()` to set
    the desired `display` or `pd.reset_option()` to use the default options every
    time before we print a data frame, which makes it very messy and troublesome.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们可能需要使用函数 `pd.set_option()` 来设置所需的 `display`，或使用 `pd.reset_option()`
    每次在打印数据框之前恢复默认选项，这样会变得非常麻烦。
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: There’s actually a more flexible and effective way of showing the entire data
    frame without specifying the display options for Pandas.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，还有一种更灵活和有效的方法来显示整个数据框，而不需要为 Pandas 指定显示选项。
- en: to_string()
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: to_string()
- en: '`to_string()` directly transfer the `pd.DataFrame` object to a string object
    and when we print it out, it doesn’t care about the display limit from `pandas`
    .'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`to_string()` 直接将 `pd.DataFrame` 对象转换为字符串对象，当我们打印它时，不会受 `pandas` 的显示限制影响。'
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/398b0574757fa765397fb59aea6ea6a3.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/398b0574757fa765397fb59aea6ea6a3.png)'
- en: print the top 100 rows using to_string() (image by author)
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 to_string() 打印前 100 行（图片由作者提供）
- en: We can see above that even though I set the maximum number of rows to display
    as 10, `to_string()` helps us print the entire data frame of 100 rows.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，尽管我将显示的最大行数设置为 10，`to_string()` 帮助我们打印了 100 行的整个数据框。
- en: The function, `to_string()` , converts an entire data frame to the `string`
    format, so it can keep all the values and indexes in the data frame in the printing
    step. Since `set_option()` is only effective on pandas objects, our printing `string`
    is not limited by the maximum number of rows to display set earlier.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 函数 `to_string()` 将整个数据框转换为 `string` 格式，因此可以在打印步骤中保留数据框中的所有值和索引。由于 `set_option()`
    仅对 pandas 对象有效，我们的打印 `string` 不受之前设置的最大行数限制。
- en: So, the strategy is that you don’t need to set anything via `set_option()` and
    you only need to use `to_string()` to see the entire data frame. It will save
    you from thinking about which option to set in which part across the script.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，策略是你无需通过 `set_option()` 设置任何内容，只需使用 `to_string()` 即可查看整个数据框。这将避免你考虑在脚本的哪个部分设置哪个选项。
- en: Takeaways
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 收获
- en: Use `set_option('display.max_rows')` when you have a consistent number of rows
    to display across the entire script.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你在整个脚本中有一致的行数需要显示时，请使用 `set_option('display.max_rows')`。
- en: Use `to_string()` if you want to print out the entire Pandas data frame no matter
    what Pandas options have been set.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你想打印整个 Pandas 数据框，无论 Pandas 选项设置如何，请使用 `to_string()`。
- en: Thanks for reading! Hope you enjoy using the Pandas trick in your work!
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读！希望你在工作中喜欢使用 Pandas 技巧！
- en: Please [subscribe to my Medium](https://jianan-lin.medium.com/subscribe) if
    you want to read more stories from me. And you can also join the Medium membership
    by my [referral link](https://jianan-lin.medium.com/membership)!
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想阅读更多我的故事，请 [订阅我的 Medium](https://jianan-lin.medium.com/subscribe)。你还可以通过我的
    [推荐链接](https://jianan-lin.medium.com/membership) 加入 Medium 会员！
