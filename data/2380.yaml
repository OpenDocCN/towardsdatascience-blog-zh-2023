- en: How to Build an Interconnected Multi-Page Streamlit App
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何构建一个互联的多页面 Streamlit 应用
- en: 原文：[https://towardsdatascience.com/how-to-build-an-interconnected-multi-page-streamlit-app-3114c313f88f?source=collection_archive---------8-----------------------#2023-07-24](https://towardsdatascience.com/how-to-build-an-interconnected-multi-page-streamlit-app-3114c313f88f?source=collection_archive---------8-----------------------#2023-07-24)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-build-an-interconnected-multi-page-streamlit-app-3114c313f88f?source=collection_archive---------8-----------------------#2023-07-24](https://towardsdatascience.com/how-to-build-an-interconnected-multi-page-streamlit-app-3114c313f88f?source=collection_archive---------8-----------------------#2023-07-24)
- en: From planning to execution — how I built GPT lab
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从规划到执行——我是如何构建 GPT 实验室的
- en: '[](https://medium.com/@dclin?source=post_page-----3114c313f88f--------------------------------)[![Dave
    Lin](../Images/630f84748ac5ea04912ca28cffdbfd15.png)](https://medium.com/@dclin?source=post_page-----3114c313f88f--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3114c313f88f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3114c313f88f--------------------------------)
    [Dave Lin](https://medium.com/@dclin?source=post_page-----3114c313f88f--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@dclin?source=post_page-----3114c313f88f--------------------------------)[![Dave
    Lin](../Images/630f84748ac5ea04912ca28cffdbfd15.png)](https://medium.com/@dclin?source=post_page-----3114c313f88f--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3114c313f88f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3114c313f88f--------------------------------)
    [Dave Lin](https://medium.com/@dclin?source=post_page-----3114c313f88f--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6b1d830863a3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-an-interconnected-multi-page-streamlit-app-3114c313f88f&user=Dave+Lin&userId=6b1d830863a3&source=post_page-6b1d830863a3----3114c313f88f---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----3114c313f88f--------------------------------)
    ·9 min read·Jul 24, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F3114c313f88f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-an-interconnected-multi-page-streamlit-app-3114c313f88f&user=Dave+Lin&userId=6b1d830863a3&source=-----3114c313f88f---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6b1d830863a3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-an-interconnected-multi-page-streamlit-app-3114c313f88f&user=Dave+Lin&userId=6b1d830863a3&source=post_page-6b1d830863a3----3114c313f88f---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----3114c313f88f--------------------------------)
    ·9分钟阅读·2023年7月24日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F3114c313f88f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-an-interconnected-multi-page-streamlit-app-3114c313f88f&user=Dave+Lin&userId=6b1d830863a3&source=-----3114c313f88f---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3114c313f88f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-an-interconnected-multi-page-streamlit-app-3114c313f88f&source=-----3114c313f88f---------------------bookmark_footer-----------)![](../Images/e492690c6892273adc45a13ebb488b40.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3114c313f88f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-an-interconnected-multi-page-streamlit-app-3114c313f88f&source=-----3114c313f88f---------------------bookmark_footer-----------)![](../Images/e492690c6892273adc45a13ebb488b40.png)'
- en: Photo by [Clément Hélardot](https://unsplash.com/@clemhlrdt?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Clément Hélardot](https://unsplash.com/@clemhlrdt?utm_source=medium&utm_medium=referral)
    在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral) 上提供
- en: '*Note: This article was originally featured on* [*Streamlit blog*](https://blog.streamlit.io/how-to-build-an-interconnected-multi-page-streamlit-app/)*.
    I wanted to share it here for the Medium community to see.*'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '*注意：本文最初发布于* [*Streamlit 博客*](https://blog.streamlit.io/how-to-build-an-interconnected-multi-page-streamlit-app/)*。我希望在这里与
    Medium 社区分享。*'
- en: Wow! What an incredible three months since I first published my blog post on
    [the lessons learned from building GPT Lab](https://www.notion.so/Building-GPT-Lab-with-Streamlit-2b8e8694a1384373a0bf176506d79444?pvs=21)!
    🚀
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 哇！自从我首次发布关于 [构建 GPT 实验室的经验教训](https://www.notion.so/Building-GPT-Lab-with-Streamlit-2b8e8694a1384373a0bf176506d79444?pvs=21)
    的博客文章以来，这三个月真是令人难以置信！ 🚀
- en: Thanks to your tremendous support, GPT Lab has received over 9K app views, 1150+
    unique signed-in users, 900+ sessions with assistants, 650+ prompts tested, and
    180+ assistants created. The app has also been featured in the Streamlit App Gallery
    alongside other great apps.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢你们的巨大支持，GPT Lab 已获得超过 9K 的应用查看次数、1150+ 的独特登录用户、900+ 次与助手的会话、650+ 个测试过的提示以及
    180+ 个创建的助手。该应用还在 Streamlit 应用画廊中与其他优秀应用一起展示。
- en: '[http://gptlab.streamlit.app/?embed=true](http://gptlab.streamlit.app/?embed=true)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://gptlab.streamlit.app/?embed=true](http://gptlab.streamlit.app/?embed=true)'
- en: Many of you have asked me, “How did you plan and build such a large application
    with Streamlit?” Eager to answer, I’ve decided to open-source GPT Lab.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 你们中的许多人问我，“你是如何规划和构建如此大型的 Streamlit 应用的？”迫不及待地想回答，我决定将 GPT Lab 开源。
- en: In this post, I’ll share insights into the strategies and thought processes
    behind this ambitious project. I hope it will inspire you to push Streamlit to
    its limits and bring your ambitious apps to life.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我将分享关于这个雄心勃勃项目的策略和思维过程的见解。我希望这能激励你们将 Streamlit 推向极限，并将你们雄心勃勃的应用变为现实。
- en: '*💡 Want to skip ahead? Check out the* [*app*](https://gptlab.streamlit.app/)
    *and the* [*code*](https://github.com/dclin/gptlab-streamlit)*.*'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '*💡 想跳到下一部分？查看* [*应用程序*](https://gptlab.streamlit.app/) *和* [*代码*](https://github.com/dclin/gptlab-streamlit)*。*'
- en: Planning a large Streamlit app
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 规划一个大型的 Streamlit 应用
- en: 'Building large Streamlit apps, such as GPT Lab, requires careful planning rather
    than just throwing code together. For GPT Lab, I focused on planning these four
    key aspects:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 构建大型 Streamlit 应用，例如 GPT Lab，需要仔细的规划，而不仅仅是将代码拼凑在一起。对于 GPT Lab，我专注于规划这四个关键方面：
- en: '**Feature and UX.** What will the app do? What kind of user experience do we
    aim to provide?'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**功能和用户体验。** 应用程序将做什么？我们旨在提供什么样的用户体验？'
- en: '**Data model.** How will data be persisted? What should be stored in the database
    versus session state variables?'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**数据模型。** 数据将如何持久化？应该存储在数据库中的内容与会话状态变量中的内容应该如何区分？'
- en: '**Code structure.** How should the app be architected to ensure modularity,
    maintainability, and scalability?'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**代码结构。** 应该如何构建应用以确保模块化、可维护性和可扩展性？'
- en: '**Session states.** Which session state variables are needed to link the user
    interface?'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**会话状态。** 需要哪些会话状态变量来链接用户界面？'
- en: Understanding these aspects offered a clearer view of what I was trying to build
    and provided a framework to approach the complex task systematically.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 理解这些方面提供了我所尝试构建的更清晰的视图，并提供了一个系统性处理复杂任务的框架。
- en: Let’s dive into each aspect in more detail.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地探讨每个方面。
- en: 'Feature and UX: Creating initial spec and low-fi UX mocks'
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 功能和用户体验：创建初始规范和低保真用户体验模型
- en: To start, I created a simple specification document (or “spec”) outlining the
    overall scope and approach. I also included a sitemap detailing the use cases
    I wanted to support. The spec provided me with a clear roadmap to follow and a
    means to measure my progress.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我创建了一个简单的规范文档（或称为“规范”），概述了整体范围和方法。我还包括了一个站点地图，详细说明了我想支持的用例。该规范为我提供了明确的路线图以及衡量进展的手段。
- en: 'Here’s an excerpt from the original spec:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这是原始规范的摘录：
- en: '***Scope***'
  id: totrans-27
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '***范围***'
- en: ''
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*Build a platform that allows generative AI (GA) bot enthusiasts to build their
    own GPT-3 prompt-based chatbot for their friends and families. The goal is to
    test the hypothesis that enough GA bot enthusiasts would want to build their niche-domain
    bots.*'
  id: totrans-29
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*构建一个平台，允许生成式 AI (GA) 机器人爱好者为他们的朋友和家人创建自己的基于 GPT-3 的聊天机器人。目标是验证足够多的 GA 机器人爱好者是否愿意构建他们的利基领域机器人。*'
- en: ''
  id: totrans-30
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '***Approach***'
  id: totrans-31
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '***方法***'
- en: ''
  id: totrans-32
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*A public Streamlit site that allows users to interact with one of the four
    pre-trained coach bots or create and interact with their bots.*'
  id: totrans-33
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*一个公共的 Streamlit 网站，允许用户与四个预训练的教练机器人中的一个互动，或创建并与他们的机器人互动。*'
- en: As with most development projects, I made some changes. But the original sitemap
    remained intact for the most part, as I was able to implement most of the planned
    features.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 与大多数开发项目一样，我做了一些修改。但原始的站点地图大部分保持不变，因为我能够实现大多数计划中的功能。
- en: 'Here is the final version of the sitemap:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这是站点地图的最终版本：
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: I can’t overstate the importance of feature planning. It provides a roadmap,
    a way to measure progress, and a starting point for thinking about the data model.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我不能过分强调功能规划的重要性。它提供了一个路线图、衡量进展的方法以及思考数据模型的起点。
- en: 'Data model: Determining the schema'
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据模型：确定模式
- en: From the start, I recognized that a backend data store was crucial for persisting
    user, assistant, and session records. After considering my options, I decided
    on Google Firestore due to its scalability, real-time capabilities, and generous
    free tier. To support future expansions, I strategically designed the data model.
    Although the current app only uses a fraction of its potential, it’s possible
    to add prompt version controls to GPT Lab. This would enable users to edit or
    revert their assistants.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 从一开始，我就认识到后端数据存储对于持久化用户、助手和会话记录至关重要。在考虑了我的选择后，我决定使用 Google Firestore，因为它具有可扩展性、实时能力和慷慨的免费层。为了支持未来的扩展，我战略性地设计了数据模型。尽管当前应用程序仅使用了其潜力的一部分，但可以在
    GPT Lab 中添加提示版本控制。这将使用户能够编辑或恢复他们的助手。
- en: '*💡 NOTE: In the app backend and data model, assistants are referred to as bots,
    despite my previous insistence on not calling them bots in the user interface
    😅.*'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '*💡 注意：在应用程序后台和数据模型中，助手被称为机器人，尽管我之前坚持不在用户界面中称其为机器人 😅。*'
- en: 'Now, let’s explore the four main Firestore collections in GPT Lab: users, user_hash,
    bots, and sessions.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们深入探讨 GPT Lab 中的四个主要 Firestore 集合：users、user_hash、bots 和 sessions。
- en: '**Users and user_hash**'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**用户和 user_hash**'
- en: The users collection is where the app stores information about its users. To
    protect user privacy, the app doesn’t store any personally identifiable information
    (PII) about users. Instead, each user is associated only with the one-way hash
    value of their OpenAI API key. The metric fields are incremented whenever a user
    creates an assistant or starts/ends a session with an assistant. This allows for
    basic analytics gathering within the app.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 用户集合是应用程序存储有关用户信息的地方。为了保护用户隐私，应用程序不会存储任何个人可识别信息（PII）。相反，每个用户仅与其 OpenAI API 密钥的单向哈希值相关联。每当用户创建助手或开始/结束与助手的会话时，指标字段会递增。这允许在应用程序内进行基本的分析收集。
- en: '[PRE1]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Google Firestore doesn’t provide a way to ensure the uniqueness of a document
    field value within a collection, so I created a separate collection called user_hash.
    This ensures that each unique API key has only one associated user record. Each
    user document is uniquely associated with a user_hash document, and each user_hash
    document may be associated with a user document. The data model is flexible enough
    to accommodate users who change their API keys in the future (users can log in
    with their old API key and then swap it out for a new one).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Google Firestore 不提供确保集合中文档字段值唯一性的方法，因此我创建了一个名为 user_hash 的单独集合。这确保每个唯一的 API
    密钥只有一个关联的用户记录。每个用户文档唯一地关联到一个 user_hash 文档，每个 user_hash 文档可能与一个用户文档相关联。数据模型足够灵活，以适应未来更改
    API 密钥的用户（用户可以使用旧的 API 密钥登录，然后更换为新的密钥）。
- en: '[PRE2]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Bots**'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**机器人**'
- en: The bots collection stores configurations for AI assistants. The crux of each
    AI assistant is its large language model (LLM), model configurations, and prompts.
    To enable proper version control of prompts and model configurations in the future,
    model_configs and prompts are modeled as subcollections (part of GPT Lab’s vision
    is to be the repository of your prompts).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 机器人集合存储 AI 助手的配置。每个 AI 助手的核心是其大型语言模型（LLM）、模型配置和提示。为了在未来实现提示和模型配置的适当版本控制，model_configs
    和 prompts 被建模为子集合（GPT Lab 的愿景之一是成为你提示的存储库）。
- en: To minimize subcollection reads (so you don’t need to constantly query the subcollections
    for the active record), the document IDs of the active subcollection are also
    stored at the document level. The session_type field indicates whether the assistant
    is in a brainstorming or coaching session, which affects the session message truncation
    technique.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 为了最小化子集合读取（以便无需不断查询子集合以获取活动记录），活动子集合的文档 ID 也在文档级别存储。session_type 字段指示助手是否处于头脑风暴或辅导会话中，这会影响会话消息的截断技术。
- en: Finally, the metric fields are incremented when a user starts or ends a session
    with an assistant.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，当用户开始或结束与助手的会话时，指标字段会递增。
- en: '[PRE3]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: S**essions**
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: S**essions**
- en: 'The sessions collection stores session data. It contains two types of sessions:
    lab sessions (used for testing prompts) and assistant sessions (used for chatting
    with created assistants). To reduce the need for frequent retrieval of the bot
    document, its information is cached within the session document. This makes conceptual
    sense, as the bot document could drift if an editing assistant use case were ever
    implemented.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: sessions 集合存储会话数据。它包含两种类型的会话：实验室会话（用于测试提示）和助手会话（用于与创建的助手聊天）。为了减少对机器人文档频繁检索的需要，它的信息会在会话文档中缓存。这是有道理的，因为如果实现编辑助手的用例，机器人文档可能会出现偏差。
- en: The `messages_str` field stores the most recent payload sent to OpenAI's LLM.
    This feature allows users to resume their previous assistant sessions. The `messages`
    subcollection stores the actual chat messages. Note that lab session chat messages
    aren’t stored.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '`messages_str` 字段存储发送到 OpenAI LLM 的最新有效负载。此功能允许用户恢复之前的助手会话。`messages` 子集合存储实际的聊天消息。注意，实验室会话聊天消息不会被存储。'
- en: To ensure user confidentiality and privacy, OpenAI request payloads and session
    messages are encrypted before being saved in the database. This data model allows
    users to restart a previous session and continue chatting with the assistant.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保用户的机密性和隐私，OpenAI 请求有效负载和会话消息在保存到数据库之前会被加密。这种数据模型允许用户重新启动以前的会话并继续与助手聊天。
- en: '[PRE4]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: By carefully considering all potential use cases from the beginning, I created
    a data model that is future-proof and able to accommodate the evolving needs and
    features of the app. In the following section, we’ll examine the structure of
    the backend application code to see how it supports and implements this robust
    data model.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 通过从一开始就仔细考虑所有潜在的用例，我创建了一个未来-proof 的数据模型，能够满足应用程序不断发展的需求和功能。在接下来的部分中，我们将深入了解后端应用程序代码的结构，以了解它如何支持和实现这个强大的数据模型。
- en: 'Code structure: Structuring for scalability and modularity'
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码结构：为了可扩展性和模块化进行结构化
- en: I created GPT Lab to empower users with low or no technical skills to build
    their own prompt-based LLM-based AI applications, without having to worry about
    the underlying infrastructure. My goal is to eventually offer backend APIs that
    connect users’ custom front-end apps (whether using Streamlit or not) with their
    AI assistants. This motivated me to design a decoupled architecture that separates
    the front-end Streamlit application from the backend logic.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我创建 GPT Lab 是为了赋能那些技术水平低或没有技术技能的用户，使他们能够构建自己的基于提示的 LLM AI 应用，而无需担心底层基础设施。我的目标是最终提供后端
    API，将用户的自定义前端应用（无论是否使用 Streamlit）与他们的 AI 助手连接。这激励我设计了一个解耦架构，将前端 Streamlit 应用与后端逻辑分开。
- en: 'The backend code was structured as follows:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 后端代码的结构如下：
- en: '[PRE5]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The modules are as follows:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 模块如下：
- en: '**api_util_firebase** handles CRUD operations with the Firestore database.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**api_util_firebase** 处理与 Firestore 数据库的 CRUD 操作。'
- en: '**api_util_openai** interacts with OpenAI’s models, provides a unified chat
    model to upstream models, prunes chat messages, and tries to detect and prevent
    prompt injection attacks.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**api_util_openai** 与 OpenAI 的模型进行交互，向上游模型提供统一的聊天模型，修剪聊天消息，并尝试检测和防止提示注入攻击。'
- en: '**api_util_users**, **api_util_sessions**, and **api_util_bots** are interfaces
    to their corresponding Firestore collections. They interact with api_util_firebase
    and api_util_openai and implement GPT Lab-specific business logic.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**api_util_users**、**api_util_sessions** 和 **api_util_bots** 是它们各自 Firestore
    集合的接口。它们与 api_util_firebase 和 api_util_openai 进行交互，并实现 GPT Lab 特定的业务逻辑。'
- en: This design enables separate development, testing, and scaling of different
    parts of the code. It also establishes an easier migration path to convert the
    backend util_collections modules into Google Cloud Functions, which can be exposed
    via API Gateways.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这种设计使得代码的不同部分可以独立开发、测试和扩展。它还建立了一个更简单的迁移路径，将后端 util_collections 模块转换为 Google
    Cloud Functions，这些函数可以通过 API Gateways 公开。
- en: 'Session states: Managing UI and user flow'
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 会话状态：管理 UI 和用户流程
- en: 'As explained in the [first blog article](https://blog.streamlit.io/building-gpt-lab-with-streamlit/#2-developing-advanced-uis-with-ui-functions-rendered-by-session-states),
    I used session state variables to control and manage functionalities on Streamlit
    pages. The following illustrates how these variables are utilized throughout the
    app:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 正如在 [第一篇博客文章](https://blog.streamlit.io/building-gpt-lab-with-streamlit/#2-developing-advanced-uis-with-ui-functions-rendered-by-session-states)
    中解释的，我使用了会话状态变量来控制和管理 Streamlit 页面上的功能。以下说明了这些变量在整个应用中的使用方式：
- en: '*home.py*'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '*home.py*'
- en: '**user** controls whether to render the OpenAI API key module'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户** 控制是否渲染 OpenAI API 密钥模块'
- en: pages/1_lounge.py
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: pages/1_lounge.py
- en: '**user** controls whether to render the OpenAI API key module, enable assistant
    selections, and show the My Assistants tab.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户** 控制是否渲染 OpenAI API 密钥模块，启用助手选择，并显示我的助手标签页。'
- en: After users choose to interact with an assistant, the assistant details are
    stored in **bot_info**.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户选择与助手互动后，助手详细信息会存储在 **bot_info** 中。
- en: pages/2_assistant.py
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: pages/2_assistant.py
- en: '**user** controls whether to render the OpenAI API key module.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户** 控制是否渲染 OpenAI API 密钥模块。'
- en: '**bot_info**, **session_id**, and **session_ended** determine which screen
    variation to display.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**bot_info**、**session_id** 和 **session_ended** 决定显示哪个屏幕变体。'
- en: '**bot_info** does not exist: check to see if assistant_id is in the URL parameter.
    Else, prompt users to search for an assistant.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**bot_info** 不存在：检查 assistant_id 是否在 URL 参数中。如果没有，则提示用户搜索助手。'
- en: '**bot_info** and **session_id** exist, and **session_ended** is false: display
    the chat session screen.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**bot_info** 和 **session_id** 存在，并且 **session_ended** 为 false：显示聊天会话屏幕。'
- en: '**bot_info** and **session_id** exist, and **session_ended** is true: display
    the chat session recap screen.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**bot_info** 和 **session_id** 存在，并且 **session_ended** 为 true：显示聊天会话回顾屏幕。'
- en: In the chat session, **session_msg_list** stores the conversation.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在聊天会话中，**session_msg_list** 存储对话内容。
- en: pages/3_lab.py
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: pages/3_lab.py
- en: '**user** gates whether to render the OpenAI API key module and whether to allow
    users to start creating assistants in the lab.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户** 控制是否渲染 OpenAI API 密钥模块以及是否允许用户在实验室中开始创建助手。'
- en: '**lab_active_step** controls which lab session state to render:'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**lab_active_step** 控制渲染哪个实验室会话状态：'
- en: 'If 1: render step 1 UI to set assistant initial prompt and model.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果为 1：渲染步骤 1 UI 以设置助手的初始提示和模型。
- en: 'If 2: render step 2 UI to test chat with assistant.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果为 2：渲染步骤 2 UI 测试与助手的聊天。
- en: 'If 3: render step 3 UI to finalize assistant details. On create, the bot record
    is created in Firestore DB, and the document ID is saved to lab_bot_id.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果为 3：渲染步骤 3 UI 完成助手详细信息。创建时，机器人记录会在 Firestore DB 中创建，并将文档 ID 保存到 lab_bot_id。
- en: 'If 4 and lab_bot_id is set: render step 4 UI to show assistant creation confirmation.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果为 4 且 lab_bot_id 已设置：渲染步骤 4 UI 显示助手创建确认。
- en: During the test chat session, **lab_msg_list** stores the test messages. By
    using separate **lab_bot_id** and **bot_info**, I can allow users to jump back
    and forth between lounge/assistant and lab without losing progress in each.
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在测试聊天会话期间，**lab_msg_list** 存储测试消息。通过使用单独的 **lab_bot_id** 和 **bot_info**，我可以让用户在休息室/助手和实验室之间来回跳转，而不会丢失每个部分的进度。
- en: With the upfront planning done, the rest of the execution was a lot more manageable.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成前期规划后，接下来的执行变得更加可控。
- en: Wrapping up
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this post, I covered the upfront planning required for creating GPT Lab,
    including the features, data model, code, and session state. I hope this inspires
    you to build your own ambitious Streamlit apps.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我涵盖了创建 GPT 实验室所需的前期规划，包括功能、数据模型、代码和会话状态。我希望这能激励你构建自己的雄心勃勃的 Streamlit
    应用程序。
- en: Connect with me on [Twitter](https://twitter.com/dclin) or [Linkedin](https://www.linkedin.com/in/d2clin/).
    I’d love to hear from you.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 [Twitter](https://twitter.com/dclin) 或 [Linkedin](https://www.linkedin.com/in/d2clin/)
    与我联系。我很期待你的反馈。
- en: Happy Streamlit-ing! 🎈
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 祝你使用 Streamlit 愉快！ 🎈
