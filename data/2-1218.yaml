- en: How to Optimize Multidimensional Numpy Array Operations with Numexpr
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何优化多维Numpy数组操作的Numexpr
- en: 原文：[https://towardsdatascience.com/how-to-optimize-multidimensional-numpy-array-operations-with-numexpr-32ba9ea8e9a6](https://towardsdatascience.com/how-to-optimize-multidimensional-numpy-array-operations-with-numexpr-32ba9ea8e9a6)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-optimize-multidimensional-numpy-array-operations-with-numexpr-32ba9ea8e9a6](https://towardsdatascience.com/how-to-optimize-multidimensional-numpy-array-operations-with-numexpr-32ba9ea8e9a6)
- en: '[FAST COMPUTING](https://medium.com/@qtalen/list/fast-computing-2a37a7e82be5)'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[快速计算](https://medium.com/@qtalen/list/fast-computing-2a37a7e82be5)'
- en: A real-world case study of performance optimization in Numpy
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Numpy性能优化的实际案例研究
- en: '[](https://qtalen.medium.com/?source=post_page-----32ba9ea8e9a6--------------------------------)[![Peng
    Qian](../Images/9ce9aeb381ec6b017c1ee5d4714937e2.png)](https://qtalen.medium.com/?source=post_page-----32ba9ea8e9a6--------------------------------)[](https://towardsdatascience.com/?source=post_page-----32ba9ea8e9a6--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----32ba9ea8e9a6--------------------------------)
    [Peng Qian](https://qtalen.medium.com/?source=post_page-----32ba9ea8e9a6--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://qtalen.medium.com/?source=post_page-----32ba9ea8e9a6--------------------------------)[![Peng
    Qian](../Images/9ce9aeb381ec6b017c1ee5d4714937e2.png)](https://qtalen.medium.com/?source=post_page-----32ba9ea8e9a6--------------------------------)[](https://towardsdatascience.com/?source=post_page-----32ba9ea8e9a6--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----32ba9ea8e9a6--------------------------------)
    [Peng Qian](https://qtalen.medium.com/?source=post_page-----32ba9ea8e9a6--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----32ba9ea8e9a6--------------------------------)
    ·5 min read·Oct 22, 2023
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----32ba9ea8e9a6--------------------------------)
    ·阅读时间5分钟·2023年10月22日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/96fef5f72810913ebac709c8f00de6a6.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/96fef5f72810913ebac709c8f00de6a6.png)'
- en: 'How to Optimize Multidimensional Numpy Array Operations with Numexpr. Photo
    Credit: Created by Author, [Canva](https://www.canva.com/).'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如何使用Numexpr优化多维Numpy数组操作。图片来源：作者创建，[Canva](https://www.canva.com/)。
- en: This is a relatively brief article. In it, I will use a real-world scenario
    as an example to explain how to use [Numexpr expressions](https://numexpr.readthedocs.io/en/latest/user_guide.html?ref=dataleadsfuture.com#supported-functions)
    in multidimensional Numpy arrays to achieve substantial performance improvements.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一篇相对简短的文章。在其中，我将以一个实际场景为例，解释如何在多维Numpy数组中使用[Numexpr表达式](https://numexpr.readthedocs.io/en/latest/user_guide.html?ref=dataleadsfuture.com#supported-functions)以实现显著的性能提升。
- en: There aren’t many articles explaining how to use Numexpr in multidimensional
    Numpy arrays and how to use Numexpr expressions, so I hope this one will help
    you.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 目前关于如何在多维Numpy数组中使用Numexpr及其表达式的文章不多，因此希望这篇文章能对你有所帮助。
- en: Introduction
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: 'Recently, while reviewing some of my old work, I stumbled upon this piece of
    code:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，在回顾一些旧工作时，我偶然发现了这段代码：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This code transforms prediction results from probabilities to classification
    results of 0 or 1 in the logistic regression model of machine learning.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码将预测结果从概率转换为机器学习中逻辑回归模型的0或1分类结果。
- en: But heavens, who would use a `for loop` to iterate over Numpy ndarray?
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 但天哪，谁会用`for loop`来遍历Numpy ndarray？
- en: You can foresee that when the data reaches a certain amount, it will not only
    occupy a lot of memory, but the performance will also be inferior.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以预见，当数据量达到一定程度时，它不仅会占用大量内存，而且性能也会变差。
- en: That’s right, the person who wrote this code was me when I was younger.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，这段代码是我年轻时写的。
- en: With a sense of responsibility, I plan to rewrite this code with the Numexpr
    library today.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 带着责任感，我计划今天使用Numexpr库重写这段代码。
- en: Along the way, I will show you how to use Numexpr and Numexpr’s `where` expression
    in multidimensional Numpy arrays to achieve significant performance improvements.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个过程中，我将展示如何在多维Numpy数组中使用Numexpr及其`where`表达式，以实现显著的性能提升。
- en: Code Implementation
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码实现
- en: 'If you are not familiar with the basic usage of Numexpr, you can refer to this
    article:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不熟悉Numexpr的基本用法，可以参考这篇文章：
- en: '[](/exploring-numexpr-a-powerful-engine-behind-pandas-cdb94965ca3a?source=post_page-----32ba9ea8e9a6--------------------------------)
    [## Exploring Numexpr: A Powerful Engine Behind Pandas'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/exploring-numexpr-a-powerful-engine-behind-pandas-cdb94965ca3a?source=post_page-----32ba9ea8e9a6--------------------------------)
    [## 探索Numexpr：Pandas背后的强大引擎'
- en: Enhancing your data analysis performance with Python’s Numexpr and Pandas’ eval/query
    functions
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 Python 的 Numexpr 和 Pandas 的 eval/query 函数提升数据分析性能
- en: towardsdatascience.com](/exploring-numexpr-a-powerful-engine-behind-pandas-cdb94965ca3a?source=post_page-----32ba9ea8e9a6--------------------------------)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/exploring-numexpr-a-powerful-engine-behind-pandas-cdb94965ca3a?source=post_page-----32ba9ea8e9a6--------------------------------)'
- en: This article uses a real-world example to demonstrate the specific usage of
    Numexpr’s API and expressions in Numpy and Pandas.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 本文使用实际案例演示了 Numexpr 在 Numpy 和 Pandas 中的 API 和表达式的具体用法。
- en: '`where(bool, number1, number2): number` - number1 if the bool condition is
    true, number2 otherwise.'
  id: totrans-26
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`where(bool, number1, number2): number` - 如果布尔条件为真，则为 number1，否则为 number2。'
- en: The above is the usage of the where expression in Numpy.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 上述是 Numexpr 中 where 表达式的用法。
- en: When dealing with matrix data, you may used to using Pandas `DataFrame`. But
    since the `eval` method of Pandas does not support the `where` expression, you
    can only choose to use Numexpr in multidimensional Numpy ndarray.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理矩阵数据时，你可能习惯使用 Pandas 的 `DataFrame`。但由于 Pandas 的 `eval` 方法不支持 `where` 表达式，你只能选择在多维
    Numpy ndarray 中使用 Numexpr。
- en: Don’t worry, I’ll explain it to you right away.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 不用担心，我会马上为你解释。
- en: 'Before starting, we need to import the necessary packages and implement a `generate_ndarray`
    method to generate a specific size ndarray for testing:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，我们需要导入必要的包并实现一个 `generate_ndarray` 方法，用于生成特定大小的 ndarray 进行测试：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'First, we generate a matrix of 200 rows to see if it is the test data we want:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们生成一个 200 行的矩阵，以查看它是否是我们想要的测试数据：
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: To be close to the actual situation of the logistic regression model, we generate
    an ndarray of the shape `(200, 1)`an. Of course, you can also test other shapes
    of ndarray according to your needs.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 为了接近实际的逻辑回归模型情况，我们生成一个形状为 `(200, 1)` 的 ndarray。当然，你也可以根据需要测试其他形状的 ndarray。
- en: 'Then, we start writing the specific use of Numexpr in the `numexpr_to_binary
    method`:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 接着，我们开始编写 Numexpr 在 `numexpr_to_binary method` 中的具体用法：
- en: First, we use the index to separate the columns that need to be processed.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，我们使用索引来分隔需要处理的列。
- en: Then, use the where expression of Numexpr to process the values.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后，使用 Numexpr 的 where 表达式来处理这些值。
- en: Finally, merge the processed columns with other columns to generate the required
    results.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，将处理过的列与其他列合并，以生成所需结果。
- en: Since the ndarray’s shape here is `(200, 1)`, there is only one column, so I
    add a new dimension.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 ndarray 的形状是 `(200, 1)`，只有一列，因此我添加了一个新维度。
- en: 'The code is as follows:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 代码如下：
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We can test the result with an array of 10 rows to see if it is what I want:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以用一个 10 行的数组测试结果，以查看是否符合预期：
- en: '[PRE4]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/13311bcec6696d413197750909d02feb.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/13311bcec6696d413197750909d02feb.png)'
- en: I test an array of 10 rows and the result is what I want. Image by Author
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我测试了一个 10 行的数组，结果是我想要的。图片由作者提供
- en: Look, the match is correct. Our task is completed.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 看，匹配是正确的。我们的任务已完成。
- en: 'The entire process can be demonstrated with the following figure:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 整个过程可以通过以下图示演示：
- en: '![](../Images/7b69c20ea53ba88dd7a3408f48aa0219.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7b69c20ea53ba88dd7a3408f48aa0219.png)'
- en: The entire process of how Numexpr transforms the multidimensional ndarray. Image
    by Author
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Numexpr 如何转换多维 ndarray 的整个过程。图片由作者提供
- en: Performance Comparison
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 性能比较
- en: After the code implementation, we need to compare the Numexpr implementation
    version with the previous `for each` implementation version to confirm that there
    has been a performance improvement.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在代码实现后，我们需要将 Numexpr 实现版本与之前的 `for each` 实现版本进行比较，以确认性能是否有所提升。
- en: 'First, we implement a `numexpr_example` method. This method is based on the
    implementation of Numexpr:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们实现一个 `numexpr_example` 方法。该方法基于 Numexpr 的实现：
- en: '[PRE5]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Then, we need to supplement a `for_loop_example` method. This method refers
    to the original code I need to rewrite and is used as a performance benchmark:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 接着，我们需要补充一个 `for_loop_example` 方法。该方法参考了我需要重写的原始代码，并用作性能基准：
- en: '[PRE6]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Then, I wrote a test method `time_method`. This method will generate data from
    10 to 10 to the 9th power rows separately, call the corresponding method, and
    finally save the time required for different data amounts:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我编写了一个测试方法 `time_method`。该方法将分别生成从 10 到 10 的 9 次方行的数据，调用相应的方法，并最终保存不同数据量所需的时间：
- en: '[PRE7]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'We test the numexpr version and the `for_loop` version separately, and use
    `matplotlib` to draw the time required for different amounts of data:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们分别测试 numexpr 版本和 `for_loop` 版本，并使用 `matplotlib` 绘制不同数据量所需的时间：
- en: '[PRE8]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](../Images/2f0838e067b94b2ae7c340f88d0055db.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2f0838e067b94b2ae7c340f88d0055db.png)'
- en: The Numexpr version of the implementation has a huge performance improvement.
    Image by Author
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Numexpr版本的实现具有显著的性能提升。图片来源：作者
- en: It can be seen that when the number of rows of data is greater than 10 to the
    6th power, the Numexpr version of the implementation has a huge performance improvement.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 可以看出，当数据行数大于10的6次方时，Numexpr版本的实现具有显著的性能提升。
- en: Conclusion
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: After explaining the basic usage of Numexpr in the previous article, this article
    uses a specific example in actual work to explain how to use Numexpr to rewrite
    existing code to obtain performance improvement.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一篇文章中解释了Numexpr的基本用法，本篇文章通过实际工作中的具体示例，说明如何使用Numexpr重写现有代码以获得性能提升。
- en: 'This article mainly uses two features of Numexpr:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 本文主要使用了Numexpr的两个特性：
- en: Numexpr allows calculations to be performed in a vectorized manner.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Numexpr允许以矢量化的方式进行计算。
- en: During the calculation of Numexpr, no new arrays will be generated, thereby
    significantly reducing memory usage.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Numexpr的计算过程中，不会生成新的数组，从而显著减少内存使用。
- en: Thank you for reading. If you have other solutions, please feel free to leave
    a message and discuss them with me.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读。如果你有其他解决方案，请随时留言与我讨论。
- en: Thank you for reading my stories.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读我的故事。
- en: You can [**subscribe**](https://www.dataleadsfuture.com/#/portal) to get the
    latest data science stories from me.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以[**订阅**](https://www.dataleadsfuture.com/#/portal)以获取我最新的数据科学故事。
- en: Find me on [LinkedIn](https://www.linkedin.com/in/qtalen/) or [Twitter(X)](https://twitter.com/qtalen)
    if you have any questions.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有任何问题，可以在[LinkedIn](https://www.linkedin.com/in/qtalen/)或[Twitter(X)](https://twitter.com/qtalen)找到我。
- en: This article was originally published on [Data Leads Future](https://www.dataleadsfuture.com/how-to-optimize-multidimensional-numpy-array-operations-with-numexpr/#/portal).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 本文最初发布在[Data Leads Future](https://www.dataleadsfuture.com/how-to-optimize-multidimensional-numpy-array-operations-with-numexpr/#/portal)。
