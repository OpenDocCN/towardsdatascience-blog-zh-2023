- en: What’s New in Pandas 2.1
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Pandas 2.1 中的新功能
- en: 原文：[https://towardsdatascience.com/whats-new-in-pandas-2-1-d26c0b8314a?source=collection_archive---------2-----------------------#2023-09-07](https://towardsdatascience.com/whats-new-in-pandas-2-1-d26c0b8314a?source=collection_archive---------2-----------------------#2023-09-07)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/whats-new-in-pandas-2-1-d26c0b8314a?source=collection_archive---------2-----------------------#2023-09-07](https://towardsdatascience.com/whats-new-in-pandas-2-1-d26c0b8314a?source=collection_archive---------2-----------------------#2023-09-07)
- en: '*The most interesting things about the new release*'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*关于新版本最有趣的功能*'
- en: '[](https://medium.com/@patrick_hoefler?source=post_page-----d26c0b8314a--------------------------------)[![Patrick
    Hoefler](../Images/35ca9ef1100d8c93dbadd374f0569fe1.png)](https://medium.com/@patrick_hoefler?source=post_page-----d26c0b8314a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d26c0b8314a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d26c0b8314a--------------------------------)
    [Patrick Hoefler](https://medium.com/@patrick_hoefler?source=post_page-----d26c0b8314a--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@patrick_hoefler?source=post_page-----d26c0b8314a--------------------------------)[![Patrick
    Hoefler](../Images/35ca9ef1100d8c93dbadd374f0569fe1.png)](https://medium.com/@patrick_hoefler?source=post_page-----d26c0b8314a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d26c0b8314a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d26c0b8314a--------------------------------)
    [Patrick Hoefler](https://medium.com/@patrick_hoefler?source=post_page-----d26c0b8314a--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F103b3417e0f5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhats-new-in-pandas-2-1-d26c0b8314a&user=Patrick+Hoefler&userId=103b3417e0f5&source=post_page-103b3417e0f5----d26c0b8314a---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d26c0b8314a--------------------------------)
    ·5 min read·Sep 7, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd26c0b8314a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhats-new-in-pandas-2-1-d26c0b8314a&user=Patrick+Hoefler&userId=103b3417e0f5&source=-----d26c0b8314a---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F103b3417e0f5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhats-new-in-pandas-2-1-d26c0b8314a&user=Patrick+Hoefler&userId=103b3417e0f5&source=post_page-103b3417e0f5----d26c0b8314a---------------------post_header-----------)
    发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d26c0b8314a--------------------------------)
    ·5分钟阅读·2023年9月7日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd26c0b8314a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhats-new-in-pandas-2-1-d26c0b8314a&user=Patrick+Hoefler&userId=103b3417e0f5&source=-----d26c0b8314a---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd26c0b8314a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhats-new-in-pandas-2-1-d26c0b8314a&source=-----d26c0b8314a---------------------bookmark_footer-----------)![](../Images/8e89647d8a4a3d7cd6168954effc8280.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd26c0b8314a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhats-new-in-pandas-2-1-d26c0b8314a&source=-----d26c0b8314a---------------------bookmark_footer-----------)![](../Images/8e89647d8a4a3d7cd6168954effc8280.png)'
- en: Photo by [Lukas W.](https://unsplash.com/@theluki?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/e3mu-MTj7Xk?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Lukas W.](https://unsplash.com/@theluki?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    提供，来源于 [Unsplash](https://unsplash.com/photos/e3mu-MTj7Xk?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
- en: pandas 2.1 was released on August 30th 2023\. Let’s take a look at the things
    this release introduces and how it will help us improving our pandas workloads.
    It includes a bunch of improvements and also a set of new deprecations.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 2.1 于2023年8月30日发布。让我们来看看这次发布带来了哪些新功能，以及它如何帮助我们改善 pandas 的工作负载。它包含了一系列改进，同时也引入了一些新的弃用功能。
- en: pandas 2.1 builds heavily on the PyArrow integration that became available with
    pandas 2.0\. We focused a lot on building out the support for new features that
    are expected to become the default with pandas 3.0\. Let’s dig into what this
    means for you. We will look at the most important improvements in detail.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 2.1 在 pandas 2.0 提供的 PyArrow 集成基础上进行了大量构建。我们专注于扩展对预计将成为 pandas 3.0 默认功能的新特性的支持。让我们深入了解这对你意味着什么。我们将详细查看最重要的改进。
- en: I am part of the pandas core team. I am an open source engineer for [Coiled](https://www.coiled.io)
    where I work on Dask, including improving the pandas integration.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我是 pandas 核心团队的一员。我是 [Coiled](https://www.coiled.io) 的开源工程师，在那里我负责 Dask，包括改进
    pandas 集成。
- en: Avoiding NumPy object-dtype for string columns
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 避免为字符串列使用 NumPy 对象 dtype
- en: 'One major pain point in pandas is the inefficient string representation. This
    is a topic that we worked on for quite some time. The first PyArrow backed string
    dtype became available in pandas 1.3\. It has the potential to reduce memory usage
    by around 70% and improve the performance. I’ve explored this topic in more depth
    in [one of my previous posts](/utilizing-pyarrow-to-improve-pandas-and-dask-workflows-2891d3d96d2b),
    which includes memory comparisons and performance measurements (tldr: it’s impressive).'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 中一个主要的痛点是低效的字符串表示。这是我们工作了很长时间的一个话题。第一个 PyArrow 支持的字符串 dtype 在 pandas
    1.3 中可用。它有潜力将内存使用减少约 70% 并提高性能。我在 [我之前的一篇文章](/utilizing-pyarrow-to-improve-pandas-and-dask-workflows-2891d3d96d2b)
    中更深入地探讨了这个话题，其中包括内存比较和性能测量（总结：非常令人印象深刻）。
- en: We’ve decided to introduce a new configuration option that will store all string
    columns in a PyArrow array. You don’t have to worry about casting string columns
    anymore, this will just work.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们决定引入一个新的配置选项，将所有字符串列存储在 PyArrow 数组中。你不再需要担心转换字符串列，这将直接生效。
- en: 'You can turn this option on with:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过以下方式启用此选项：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This behavior will become the default in pandas 3.0, which means that string-columns
    would always be backed by PyArrow. You have to install PyArrow to use this option.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这种行为将在 pandas 3.0 中成为默认，这意味着字符串列将始终由 PyArrow 支持。你需要安装 PyArrow 才能使用此选项。
- en: PyArrow has different behavior than NumPy object dtype, which can make a pain
    to figure out in detail. We implemented the string dtype that is used for this
    option to be compatible with NumPy sematics. It will behave exactly the same as
    NumPy object columns would. I encourage everyone to try this out!
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: PyArrow 的行为与 NumPy 对象 dtype 不同，这可能会使详细了解变得棘手。我们实现了用于此选项的字符串 dtype，以便与 NumPy
    语义兼容。它的行为将与 NumPy 对象列完全相同。我鼓励大家试一试！
- en: Improved PyArrow support
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 改进的 PyArrow 支持
- en: We have introduced PyArrow backed DataFrame in pandas 2.0\. One major goal for
    us was to improve the integration within pandas over the last few months. We were
    aiming to make the switch from NumPy backed DataFrames as easy as possible. One
    area that we focused on was fixing performance bottlenecks, since this caused
    unexpected slowdowns before.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在 pandas 2.0 中引入了 PyArrow 支持的 DataFrame。我们的主要目标之一是在过去几个月内改善 pandas 的集成。我们旨在使从
    NumPy 支持的 DataFrame 切换尽可能简单。我们关注的一个领域是修复性能瓶颈，因为之前这会导致意外的慢速。
- en: 'Let’s look at an example:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个例子：
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Our DataFrame has 1 million rows and 10 groups. Let’s look at the performance
    on pandas 2.0.3 compared to pandas 2.1:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的 DataFrame 有 100 万行和 10 个组。让我们看一下 pandas 2.0.3 与 pandas 2.1 的性能对比：
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This particular example is 5 times faster on the new version. `merge` is another
    commonly used function that will be faster now. We are hopeful that the experience
    with PyArrow backed DataFrames is much better now.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在新版本中，这个特定示例的速度快了 5 倍。`merge` 是另一个常用的函数，现在也会更快。我们希望使用 PyArrow 支持的 DataFrame
    的体验会更好。
- en: Copy-on-Write
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Copy-on-Write
- en: Copy-on-Write was initially introduced in pandas 1.5.0 and is expected to become
    the default behavior in pandas 3.0\. Copy-on-Write provides a good experience
    on pandas 2.0.x already. We were mostly focused on fixing known bugs and make
    it run faster. I would recommend to use this mode in production now. I wrote a
    series of blog posts explaining [what Copy-on-Write is](/a-solution-for-inconsistencies-in-indexing-operations-in-pandas-b76e10719744)
    and [how it works](/deep-dive-into-pandas-copy-on-write-mode-part-i-26982e7408c6).
    These blog posts go into great detail and explain how Copy-on-Write works internally
    and what you can expect from it. This includes performance and behavior.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Copy-on-Write 最初在 pandas 1.5.0 中引入，并预计将在 pandas 3.0 中成为默认行为。Copy-on-Write 在
    pandas 2.0.x 上已经提供了良好的体验。我们主要集中在修复已知的错误并提高运行速度。我建议现在在生产中使用此模式。我写了一系列博客文章来解释 [什么是
    Copy-on-Write](/a-solution-for-inconsistencies-in-indexing-operations-in-pandas-b76e10719744)
    和 [它是如何工作的](/deep-dive-into-pandas-copy-on-write-mode-part-i-26982e7408c6)。这些博客文章详细讲解了
    Copy-on-Write 的内部工作原理以及你可以期待什么，包括性能和行为。
- en: We’ve seen that Copy-on-Write can improve the performance of real-world workflows
    by over 50%.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到 Copy-on-Write 可以将实际工作流的性能提高超过 50%。
- en: Deprecating silent upcasting in setitem-like operations
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 弃用在 setitem 类操作中的静默上升类型转换
- en: 'Historically, pandas would silently change the dtype of one of your columns
    if you set an incompatible value into it. Let’s look at an example:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 历史上，如果你将不兼容的值设置到列中，pandas 会静默更改其中一个列的数据类型。让我们来看一个例子：
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We have a Series with integers, which will result in integer dtype. Let’s set
    the letter `"a"` into the second row:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有一个包含整数的 Series，这将导致数据类型为整数。让我们将字母 `"a"` 设置到第二行：
- en: '[PRE4]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This changes the dtype of your Series to object. Object is the only dtype that
    can hold integers and strings. This is a major pain for a lot of user. Object
    columns take up a lot of memory, calculations won’t work anymore, performance
    degrades and many other things. It also added a lot of special casing internally
    to accomodate these things. Silent dtype changes in my DataFrame were a major
    annoyance for me in the past. This behavior is now deprecated and will raise a
    FutureWarning:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这将把你的 Series 的数据类型更改为 object。Object 是唯一可以同时包含整数和字符串的数据类型。这对很多用户来说是一个重大困扰。Object
    列占用大量内存，计算将无法进行，性能下降以及其他许多问题。它还在内部增加了许多特殊处理来适应这些问题。在过去，DataFrame 中的静默数据类型更改曾让我非常烦恼。这个行为现在已被弃用，并将引发
    FutureWarning：
- en: '[PRE5]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Operations like our example will raise an error in pandas 3.0\. The dtypes of
    a DataFrames columns will stay consistent across different operations. You will
    have to be explicit when you want to change your dtype, which adds a bit of code
    but makes it easier to follow for future developers.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 像我们的例子这样的操作将在 pandas 3.0 中引发错误。DataFrame 的列数据类型将保持一致。你需要在想要更改数据类型时明确指出，这增加了一些代码，但使得未来的开发者更容易理解。
- en: This change affects all dtypes, e.g. setting a float value into an integer column
    will also raise.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这一变化影响所有的数据类型，例如，将浮点值设置到整数列中也会引发错误。
- en: Upgrading to the new version
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 升级到新版本
- en: 'You can install the new pandas version with:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过以下方式安装新的 pandas 版本：
- en: '[PRE6]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Or:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 或：
- en: '[PRE7]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This will give you the new release in your environment.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这将为你的环境提供新的发布版本。
- en: Conclusion
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: We’ve looked at a couple of improvements that will help you write more efficient
    code. This includes performance improvements, easier opt-in into PyArrow backed
    string columns and further improvements for Copy-on-Write. We’ve also seen a deprecation
    that will make the behavior of pandas easier to predict in the next major release.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经查看了一些改进，这些改进将帮助你编写更高效的代码。这包括性能改进、更容易选择 PyArrow 支持的字符串列以及进一步改进 Copy-on-Write。我们还看到了一项弃用，这将使
    pandas 在下一个主要版本中更易于预测其行为。
- en: Thank you for reading. Feel free to reach out to share your thoughts and feedback.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读。欢迎随时联系分享你的想法和反馈。
