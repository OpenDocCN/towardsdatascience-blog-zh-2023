- en: How to Build an ELT with Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用 Python 构建 ELT
- en: 原文：[https://towardsdatascience.com/how-to-build-an-elt-with-python-8f5d9d75a12e](https://towardsdatascience.com/how-to-build-an-elt-with-python-8f5d9d75a12e)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-build-an-elt-with-python-8f5d9d75a12e](https://towardsdatascience.com/how-to-build-an-elt-with-python-8f5d9d75a12e)
- en: Extracting, Loading and Transforming Data
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提取、加载和转换数据
- en: '[](https://medium.com/@marietruong?source=post_page-----8f5d9d75a12e--------------------------------)[![Marie
    Truong](../Images/2816e49beef958724dc0f38cfa49c4be.png)](https://medium.com/@marietruong?source=post_page-----8f5d9d75a12e--------------------------------)[](https://towardsdatascience.com/?source=post_page-----8f5d9d75a12e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----8f5d9d75a12e--------------------------------)
    [Marie Truong](https://medium.com/@marietruong?source=post_page-----8f5d9d75a12e--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@marietruong?source=post_page-----8f5d9d75a12e--------------------------------)[![Marie
    Truong](../Images/2816e49beef958724dc0f38cfa49c4be.png)](https://medium.com/@marietruong?source=post_page-----8f5d9d75a12e--------------------------------)[](https://towardsdatascience.com/?source=post_page-----8f5d9d75a12e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----8f5d9d75a12e--------------------------------)
    [Marie Truong](https://medium.com/@marietruong?source=post_page-----8f5d9d75a12e--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----8f5d9d75a12e--------------------------------)
    ·7 min read·Feb 7, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----8f5d9d75a12e--------------------------------)
    ·阅读时间 7 分钟·2023年2月7日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/3bb2cf8a93d38e55adefa041419b80d8.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3bb2cf8a93d38e55adefa041419b80d8.png)'
- en: Photo by [JJ Ying](https://unsplash.com/@jjying?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [JJ Ying](https://unsplash.com/@jjying?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: ELT (Extract, Load, Transform) is a modern approach to data integration that
    differs slightly from ETL (Extract, Transform, Data). ETL transforms data before
    loading it inside the data warehouse, whereas in an ELT, the raw data is loaded
    directly inside the data warehouse and transformed using SQL.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: ELT（提取、加载、转换）是一种现代的数据集成方法，与 ETL（提取、转换、加载）略有不同。ETL 在将数据加载到数据仓库之前进行转换，而 ELT 则将原始数据直接加载到数据仓库中，并使用
    SQL 进行转换。
- en: Building ELTs is a very important part of data and analytics engineers’s job,
    and it can also be a useful skill for data analysts and scientists with a wider
    scope, or job seekers building a complete portfolio.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 构建 ELT 是数据和分析工程师工作中非常重要的一部分，它也可以成为数据分析师和科学家更广泛领域的有用技能，或者是那些构建完整作品集的求职者。
- en: 'In this article, we’ll build a short ELT pipeline in Python using data from
    [dummyJSON](https://dummyjson.com/). dummyJSON is a fake REST API. It provides
    9 types of resources:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们将使用来自 [dummyJSON](https://dummyjson.com/) 的数据在 Python 中构建一个简短的 ELT
    管道。dummyJSON 是一个虚假的 REST API，提供 9 种类型的资源：
- en: '![](../Images/63f9d7d997ffb2a73d9b21d5c41a3987.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/63f9d7d997ffb2a73d9b21d5c41a3987.png)'
- en: Screenshot of dummyjson.com
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: dummyjson.com 的截图
- en: We will try to find out which customers spent the most money on our dummy shop.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将尝试找出哪些客户在我们的虚拟商店中花费了最多的钱。
- en: 'This script will involve 3 steps:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这个脚本将包括 3 个步骤：
- en: Extracting Data from dummyJSON API
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 dummyJSON API 提取数据
- en: Loading raw data to BigQuery
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将原始数据加载到 BigQuery
- en: Executing a query to perform the analysis
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行查询以进行分析
- en: Let’s start building our pipeline!
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始构建我们的数据管道吧！
- en: Extracting Data
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提取数据
- en: 'We will need to retrieve 2 resources from the API: carts, and users.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要从 API 中检索 2 个资源：购物车和用户。
- en: 'Let’s create a function that makes the API call and returns the JSON data:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个函数，执行 API 调用并返回 JSON 数据：
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We use the **requests** library to make a simple HTTP GET request. We check
    that it’s a success with the status code and return the JSON data.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用 **requests** 库来发出简单的 HTTP GET 请求。我们通过状态码检查请求是否成功，并返回 JSON 数据。
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We have our data about orders! Let’s try it with customers:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经有了关于订单的数据！让我们尝试获取客户数据：
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This time, something catches our attention: there is a total of 100 users,
    but we only received 30.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，有些事情引起了我们的注意：总共有 100 个用户，但我们只收到了 30 个。
- en: '![](../Images/07b7c1c7143edc8e7c90c6a6d51785af.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/07b7c1c7143edc8e7c90c6a6d51785af.png)'
- en: Screenshot by Author
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截图
- en: Therefore, we need to call that API again until we have all the data, skipping
    the ones that we already have. However, we are not interested in sending those
    *total*, *skip*, and *limit* keys to our data warehouse; let’s keep only the users
    and carts.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们需要再次调用那个API，直到我们获取所有数据，跳过我们已经拥有的数据。然而，我们不希望将那些*total*、*skip*和*limit*键发送到数据仓库；让我们只保留用户和购物车。
- en: 'Here is our updated function:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们更新后的函数：
- en: '[PRE3]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This time, we have our 100 users!
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这一次，我们有了100个用户！
- en: Loading Data
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加载数据
- en: Now, it’s time to upload our data to BigQuery. We are going to use the [BigQuery
    client library for Python](https://cloud.google.com/bigquery/docs/reference/libraries).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，是时候将数据上传到BigQuery了。我们将使用[BigQuery Python客户端库](https://cloud.google.com/bigquery/docs/reference/libraries)。
- en: '![](../Images/67f493aa3d84f23c718c80a2abbb3f57.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/67f493aa3d84f23c718c80a2abbb3f57.png)'
- en: 'Source: [cloud.google.com/bigquery/docs/batch-loading-data](http://cloud.google.com/bigquery/docs/batch-loading-data)'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：[cloud.google.com/bigquery/docs/batch-loading-data](http://cloud.google.com/bigquery/docs/batch-loading-data)
- en: Looking at the documentation, we see that it’s possible to load a local file
    into BigQuery. Right now, our JSON is only a dict. Let’s download it to a local
    file.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 从文档中可以看到，可以将本地文件加载到BigQuery中。目前，我们的JSON只是一个字典。让我们将其下载到本地文件中。
- en: We are going to use the native library **json** and write our JSON data inside
    a file. One thing we need to keep in mind is that BigQuery accepts JSONS in a
    newline delimited format, not a comma delimited format.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用原生库**json**并将JSON数据写入文件。需要记住的是，BigQuery接受换行符分隔的JSON格式，而不是逗号分隔格式。
- en: '[PRE4]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We can now check that our carts.json file is in the right JSON format:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以检查我们的carts.json文件是否为正确的JSON格式：
- en: '[PRE5]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Let’s try to upload our files now!
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们尝试上传我们的文件！
- en: First, we need to [download the client library for Python](https://cloud.google.com/bigquery/docs/reference/libraries).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要[下载Python客户端库](https://cloud.google.com/bigquery/docs/reference/libraries)。
- en: 'Once this is done, we have to [download a service account key](https://cloud.google.com/bigquery/docs/authentication/service-account-file)
    and create an environment variable to tell BigQuery where our credentials are
    stored. In the terminal, we can enter the following command:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，我们需要[下载服务账户密钥](https://cloud.google.com/bigquery/docs/authentication/service-account-file)并创建一个环境变量，以告诉BigQuery我们的凭证存储在哪里。在终端中，我们可以输入以下命令：
- en: '[PRE6]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Then, we can write our Python function. Luckily, BigQuery documentation gives
    us a code sample:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以编写Python函数。幸运的是，BigQuery文档为我们提供了代码示例：
- en: '![](../Images/a98dd38fd0458a0b7c93aabaac288d7e.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a98dd38fd0458a0b7c93aabaac288d7e.png)'
- en: Screenshot by Author
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截图
- en: 'We can define a new function using this sample:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用这个示例定义一个新函数：
- en: '[PRE7]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: We told BigQuery to truncate our table every time, so if we rerun the script,
    existing rows will be overwritten.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们告诉BigQuery每次都截断我们的表格，因此如果我们重新运行脚本，现有行将被覆盖。
- en: 'We now have our 2 tables inside BigQuery:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在在BigQuery中有了我们的两个表：
- en: '![](../Images/40a669a1e0ec8bdd1355a5b43bfad3de.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/40a669a1e0ec8bdd1355a5b43bfad3de.png)'
- en: Screenshot by Author
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截图
- en: Transforming Data
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 转换数据
- en: It’s time to move on to the last letter in ELT!
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候进入ELT中的最后一部分了！
- en: We want to have a table with the users and the amount they spent on our shop.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望有一个包含用户及其在我们商店消费金额的表格。
- en: 'Let’s join our two tables to have this information:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们连接两个表格以获取这些信息：
- en: '[PRE9]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](../Images/1c71b7052b8f3a7a0b7f59703d641317.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1c71b7052b8f3a7a0b7f59703d641317.png)'
- en: Screenshot by Author
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截图
- en: Seems like Trace Douglas is our top spender! Let’s add this table as a part
    of our ELT.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 看来Trace Douglas是我们的最高消费者！让我们将这个表格作为ELT的一部分添加。
- en: '[PRE10]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: I removed the ORDER BY as this is computationally expensive; we can still order
    our results once we query the **dummy_best_spenders** table.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我移除了ORDER BY，因为这在计算上很昂贵；我们仍然可以在查询**dummy_best_spenders**表时对结果进行排序。
- en: 'Let’s check that our table was created:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们检查一下我们的表格是否已创建：
- en: '![](../Images/24a0e10ad92790fc0311bb985ba07139.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/24a0e10ad92790fc0311bb985ba07139.png)'
- en: Screenshot by Author
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截图
- en: That’s it, we built our first ELT in just a few lines of code!
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样，我们用几行代码完成了第一个ELT！
- en: Going Further with ELTs
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步探索ELT
- en: 'When dealing with real and bigger projects, there are a few more things to
    consider:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理实际和更大的项目时，还有一些其他事项需要考虑：
- en: We will deal with larger amounts of data. There will be new data every day,
    so we have to incrementally append data to our tables instead of treating all
    the data every day.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们将处理更大的数据量。每天都有新数据，所以我们必须逐步追加数据到表格中，而不是每天处理所有数据。
- en: As our ELTs get more complex, with multiple sources of data, we might need to
    use a workflow orchestration tool like Airflow or Prefect.
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   随着我们的 ELT 变得越来越复杂，涉及多个数据源，我们可能需要使用像 Airflow 或 Prefect 这样的工作流编排工具。'
- en: We can only load files that weight less than 10MB directly into BigQuery. To
    load bigger files, we need to load them in Cloud Storage first.
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   我们只能将小于 10MB 的文件直接加载到 BigQuery 中。要加载更大的文件，我们需要先将其加载到 Cloud Storage 中。'
- en: Resources
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '-   资源'
- en: '[BigQuery client library](https://cloud.google.com/python/docs/reference/bigquery/latest/google.cloud.bigquery.client.Client)'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[BigQuery 客户端库](https://cloud.google.com/python/docs/reference/bigquery/latest/google.cloud.bigquery.client.Client)'
- en: '[Requests: HTTP for Humans](https://requests.readthedocs.io/en/latest/)'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   [Requests: HTTP for Humans](https://requests.readthedocs.io/en/latest/)'
- en: '[JSON encoder and decoder](https://docs.python.org/3/library/json.html)'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[JSON 编码器和解码器](https://docs.python.org/3/library/json.html)'
- en: I hope you enjoyed this article! If you did, please follow me for more content
    on Python, SQL, and analytics.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '-   希望你喜欢这篇文章！如果你喜欢，请关注我获取更多关于 Python、SQL 和分析的内容。'
- en: Become a member and read all stories on Medium. Your membership fee will directly
    support me and other writers you read. You’ll also get full access to every story
    on Medium.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '-   成为会员并阅读 Medium 上的所有故事。你的会员费用将直接支持我和你阅读的其他作者。你还将获得对 Medium 上每个故事的完全访问权限。'
- en: '[](https://medium.com/@marietruong/membership?source=post_page-----8f5d9d75a12e--------------------------------)
    [## Join Medium with my referral link — Marie Truong'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '-   [## 通过我的推荐链接加入 Medium — Marie Truong](https://medium.com/@marietruong/membership?source=post_page-----8f5d9d75a12e--------------------------------)'
- en: Read every story from Marie Truong (and thousands of other writers on Medium).
    Your membership fee directly supports…
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '-   阅读 Marie Truong（以及 Medium 上其他成千上万位作者）的每个故事。你的会员费用直接支持…'
- en: medium.com](https://medium.com/@marietruong/membership?source=post_page-----8f5d9d75a12e--------------------------------)
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '-   [medium.com](https://medium.com/@marietruong/membership?source=post_page-----8f5d9d75a12e--------------------------------)'
