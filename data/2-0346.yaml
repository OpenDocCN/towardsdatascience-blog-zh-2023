- en: Automated Python Application Testing Using GitHub Actions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用GitHub Actions进行自动化Python应用程序测试
- en: 原文：[https://towardsdatascience.com/automated-python-application-testing-using-github-actions-79606f3f9eb2](https://towardsdatascience.com/automated-python-application-testing-using-github-actions-79606f3f9eb2)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/automated-python-application-testing-using-github-actions-79606f3f9eb2](https://towardsdatascience.com/automated-python-application-testing-using-github-actions-79606f3f9eb2)
- en: How to run automatic testing on the `push` command
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何在`push`命令上运行自动测试
- en: '[](https://philip-wilkinson.medium.com/?source=post_page-----79606f3f9eb2--------------------------------)[![Philip
    Wilkinson, Ph.D.](../Images/9811fa38963c29193b01a5cf856d014f.png)](https://philip-wilkinson.medium.com/?source=post_page-----79606f3f9eb2--------------------------------)[](https://towardsdatascience.com/?source=post_page-----79606f3f9eb2--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----79606f3f9eb2--------------------------------)
    [Philip Wilkinson, Ph.D.](https://philip-wilkinson.medium.com/?source=post_page-----79606f3f9eb2--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://philip-wilkinson.medium.com/?source=post_page-----79606f3f9eb2--------------------------------)[![Philip
    Wilkinson, Ph.D.](../Images/9811fa38963c29193b01a5cf856d014f.png)](https://philip-wilkinson.medium.com/?source=post_page-----79606f3f9eb2--------------------------------)[](https://towardsdatascience.com/?source=post_page-----79606f3f9eb2--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----79606f3f9eb2--------------------------------)
    [Philip Wilkinson, Ph.D.](https://philip-wilkinson.medium.com/?source=post_page-----79606f3f9eb2--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----79606f3f9eb2--------------------------------)
    ·6 min read·Mar 21, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----79606f3f9eb2--------------------------------)
    ·6分钟阅读·2023年3月21日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/cda5a053f31851154a45ff8b1b4be350.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cda5a053f31851154a45ff8b1b4be350.png)'
- en: Photo by [Roman Synkevych 🇺🇦](https://unsplash.com/@synkevych?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[Roman Synkevych 🇺🇦](https://unsplash.com/@synkevych?utm_source=medium&utm_medium=referral)拍摄，发布在[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)上
- en: Testing your application is a crucial step in any software development or data
    science workflow. Testing allows you to ensure that the code functions as expected,
    reduces the likelihood of bugs or errors, and increases the overall quality and
    reliability of the software.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 测试你的应用程序是任何软件开发或数据科学工作流程中的关键步骤。测试可以确保代码按预期工作，减少错误或漏洞的可能性，提高软件的整体质量和可靠性。
- en: In some cases though testing can often be a burden and yourself or others may
    forget to run the testing suite before you commit to your repository. This is
    where automating your testing workflow through GitHub Actions comes into play,
    to reduce the manual effort required, ensure consistent testing and be able to
    detect issues early on.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在某些情况下，测试可能会成为负担，你或其他人可能会忘记在提交到仓库之前运行测试套件。这时，通过GitHub Actions自动化测试工作流程可以减少手动工作，确保一致的测试，并能够及早发现问题。
- en: In this article I will cover how to set up a GitHub Action workflow to automate
    the testing of your application. This includes creating a GitHub Action workflow,
    setting the trigger events, creating the jobs to run and adding a badge to your
    repository to show the tests are passing. By the end of this you will have a fully
    automated testing workflow that you can show to the world that your code is working
    as expected!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我将讲解如何设置GitHub Action工作流程以自动化应用程序测试。这包括创建GitHub Action工作流程、设置触发事件、创建要运行的作业，并为你的仓库添加徽章以显示测试是否通过。到最后，你将拥有一个完全自动化的测试工作流程，可以向世界展示你的代码是否按预期工作！
- en: What is a GitHub Action?
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是GitHub Action？
- en: 'As per the description provided by GitHub:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 根据GitHub提供的描述：
- en: GitHub Actions makes it easy to automate all your software workflows, now with
    world-class CI/CD. Build, test, and deploy your code right from GitHub.
  id: totrans-13
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: GitHub Actions使得自动化所有的软件工作流程变得简单，现在拥有世界级的CI/CD。从GitHub直接构建、测试和部署你的代码。
- en: which means that GitHub Actions is an automation platform provided by GitHub
    that focuses on automating software development workflows.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着GitHub Actions是由GitHub提供的自动化平台，专注于自动化软件开发工作流程。
- en: An Action itself is then a unit of code that can be executed as part of a GitHub
    Actions workflow. This aims to automate a specific task or workflow that is triggered
    by events in your GitHub repository.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Action本身是可以作为GitHub Actions工作流程的一部分执行的代码单元。其目的是自动化由GitHub仓库中的事件触发的特定任务或工作流程。
- en: Importantly, a GitHub Action can be written in any language, can run on any
    operating system and can interact with the code in your repository through the
    GitHub API. They can be used for a variety of tasks including automating the deployment
    of the latest builds, updating datasets in the code base, and for our purposes
    testing the latest push to the main branch.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是，GitHub Action可以用任何语言编写，可以在任何操作系统上运行，并可以通过GitHub API与存储库中的代码进行交互。它们可以用于各种任务，包括自动化最新构建的部署、更新代码库中的数据集，以及我们的目的——测试推送到主分支的最新内容。
- en: Creating a GitHub Action
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建GitHub Action。
- en: Creating a GitHub Action action is a relatively simple process and starts by
    creating a new directory in your GitHub repository. This takes the form of a folder
    title `.github/workflows` which is recognised by GitHub as containing actions
    that we want GitHub to undertake.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 创建GitHub Action是一个相对简单的过程，首先是在你的GitHub存储库中创建一个新目录。这以一个文件夹标题`.github/workflows`的形式存在，GitHub会识别这个文件夹包含我们希望GitHub执行的操作。
- en: 'GitHub Actions uses YAML files that describe the action that we want GitHub
    to perform. This means that in the `.github/workflows` folder, we need to create
    a YAML file. For now we can call this `python-app.yml` and we can give it a name
    in the file:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Actions使用描述我们希望GitHub执行的操作的YAML文件。这意味着在`.github/workflows`文件夹中，我们需要创建一个YAML文件。现在我们可以称之为`python-app.yml`，并在文件中给它一个名称：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This is the base which we will then build on to run our testing suite.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们将基于此构建来运行测试套件的基础。
- en: Setting the trigger events
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置触发事件。
- en: Once the file has been created, telling GitHub that we want it to run some action,
    we need to tell GitHub when we want this to take place. We do this by specifying
    the trigger events in the YAML file using the `on` key.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 文件创建完成后，告知GitHub我们希望它运行某些操作，我们需要告诉GitHub我们希望何时进行。这是通过在YAML文件中使用`on`关键字指定触发事件来完成的。
- en: 'For testing, you typically want to run the full application testing suite when
    any changes are made to the application to ensure that the changes made do not
    introduce any bugs into the system. Given the best practices of Git this often
    falls at two points:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在测试时，你通常希望在对应用进行任何更改时运行完整的应用测试套件，以确保所做的更改不会引入任何系统漏洞。根据Git的最佳实践，这通常在两个点上：
- en: Any pushes to the `main` application branch
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何推送到`main`应用分支的操作。
- en: Any pull requests to the `main` application branch.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对`main`应用分支的任何拉取请求。
- en: 'This is because the latest deployment of your application should normally come
    from the `main` branch of your repository. In our YAML file this can be specified
    using:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为你的应用程序的最新部署通常应该来自你的存储库的`main`分支。在我们的YAML文件中，这可以使用以下内容指定：
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Here the `push` key is used to specify that we want the action to be run on
    a push to the `main` branch and we use the `pull_request` key to specify we want
    the testing suite to also be run when a pull request is made to the main branch.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这里使用`push`关键字指定我们希望在推送到`main`分支时运行该操作，并使用`pull_request`关键字指定我们希望在向主分支发起拉取请求时也运行测试套件。
- en: This ensures that any changes to the main branch are fully tested before any
    deployment takes place and is run whenever the changes are made public.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这确保了主分支上的任何更改在部署之前都经过全面测试，并且在更改公开时会运行。
- en: Create the job to run
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建要运行的作业。
- en: Now that we have told GitHub when we want to run an action, we need to actually
    tell it what we actually want to run. This is done using the `jobs` key which
    specifies the job that will be run as part of the GitHub Action.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经告诉GitHub我们希望何时运行一个操作，我们需要实际告诉它我们希望运行什么。这是通过使用`jobs`关键字来完成的，它指定了作为GitHub
    Action的一部分将要运行的作业。
- en: 'Within this `job` we need to specify three main things:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个`job`中，我们需要指定三个主要内容：
- en: The name of the job that we want to run
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们希望运行的作业名称。
- en: The platform we want the workflow to run on
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们希望工作流运行的平台。
- en: The `steps` that we want to be undertaken as part of the workflow
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工作流中我们希望执行的`steps`。
- en: This is done by first using the key `jobs:` followed by the name of the job
    we want to undertake. For now we can simply call this `build` .
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这首先通过使用`jobs:`关键字及我们想要进行的工作的名称来完成。现在我们可以简单地称之为`build`。
- en: 'Following the `build` key, we then need to specify what platform we want the
    job to run on. In our case we can specify `runs-on: ubuntu-latest` , assuming
    that Linux is a suitable platform for our testing suite.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '在`build`关键字之后，我们需要指定我们希望工作运行的平台。在我们的案例中，我们可以指定`runs-on: ubuntu-latest`，假设Linux是我们测试套件的合适平台。'
- en: 'We then specify a series of steps that we want to undertake within this `job`
    . To run our testing suite we will need to:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们指定一系列步骤，我们希望在这个 `job` 中进行。要运行我们的测试套件，我们需要：
- en: Checkout the repository to the run platform
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将代码库检出到运行平台
- en: Setup Python on the environment
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在环境中设置 Python
- en: Install the dependencies required to run the testing suite
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装运行测试套件所需的依赖项
- en: Run the testing suite itself
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行测试套件本身
- en: 'This can be done with the following commands:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以通过以下命令完成：
- en: '[PRE2]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Explaining these steps:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 解释这些步骤：
- en: '`uses: actions/checkout@v3` tells the runner that we want to use the `actions/checkout@v3`
    functionality which checks out the repository code into the job''s workspace.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`uses: actions/checkout@v3` 告诉运行器我们想要使用 `actions/checkout@v3` 功能，这会将代码库的代码检出到作业的工作区。'
- en: '`name: Set up Python 3.10` creates a step that setups the Python environment
    on the runner to use version 3.10.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name: Set up Python 3.10` 创建一个步骤，设置运行器上的 Python 环境以使用 3.10 版本。'
- en: '`name: Install dependencies` installs the necessary dependencies for the project
    which includes those specified in the `requirements.txt` file.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name: Install dependencies` 安装项目所需的依赖项，包括 `requirements.txt` 文件中指定的那些。'
- en: '`name: Test with pytest` Runs the testing suite using the `pytest` command
    which will fail the job if a test doesn’t pass.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name: Test with pytest` 使用 `pytest` 命令运行测试套件，如果测试未通过则会使作业失败。'
- en: For this, we split up the steps using the `name` key which means that we can
    clearly identify at which point in our workflow, if any, fails. We can then use
    these names to be able to rectify any issues quickly and creates a jobs workflow
    that looks like the image below.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们使用 `name` 键将步骤拆分，这意味着我们可以清楚地识别在工作流中哪个点（如果有的话）失败。然后我们可以使用这些名称快速修复任何问题，并创建一个如下图所示的作业工作流。
- en: '![](../Images/dcf70df39e391c5e68eec6c5e6705c92.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dcf70df39e391c5e68eec6c5e6705c92.png)'
- en: Image by Author
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Adding a badge to your repository
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向你的代码库添加徽章
- en: Creating the above file will tell GitHub that we want to run the testing workflow
    for our repository but the anyone looking at our repository won’t necessarily
    see that straight away. To rectify that we can create a badge that will show up
    in our README markdown document to clearly show that our tests are passing.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 创建上述文件将告诉 GitHub 我们想要为我们的代码库运行测试工作流，但任何查看我们代码库的人不会立即看到这一点。为了解决这个问题，我们可以创建一个徽章，它将出现在我们的
    README Markdown 文档中，清晰地显示我们的测试正在通过。
- en: '![](../Images/ffc51f73697446cece6faacc1e932c6a.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ffc51f73697446cece6faacc1e932c6a.png)'
- en: Image by Author
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: 'This tells any new user at a single glance that the build on the main branch
    is stable and that the application is tested. The syntax for this badge follows:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以让任何新用户一目了然地知道主分支上的构建是稳定的，并且应用程序已被测试。此徽章的语法如下：
- en: '[PRE3]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'For my repository that I am currently developing, this translates into:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我当前开发的代码库，这转化为：
- en: '[PRE4]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Where I’ve also added a link to the workflow file as well so that people looking
    at the repository can also see what this badge is clearly saying.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我还添加了一个链接到工作流文件，以便查看代码库的人也可以清楚地看到这个徽章所表示的内容。
- en: Conclusions
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: Testing your code is a key part of any software engineering or data science
    workflow but it can also be an easy step to forget before you push your changes
    to the main branch. To simply this process and ensure testing consistency across
    all developers, you can create a GitHub Action that will automate your testing
    workflow. In the article above we have shown how you can add this to your own
    repository in a few simple steps. An important part of this is telling new users
    of your application that you have tested your application, and this can come in
    the form of a badge that you can add to your README file.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 测试你的代码是任何软件工程或数据科学工作流的关键部分，但它也可能是一个容易在推送更改到主分支之前被忘记的步骤。为了简化这个过程并确保所有开发者之间测试的一致性，你可以创建一个
    GitHub Action 来自动化你的测试工作流。在上面的文章中，我们展示了如何通过几个简单的步骤将其添加到你自己的代码库中。一个重要的部分是告诉你应用程序的新用户你已经测试了你的应用程序，这可以以你可以添加到
    README 文件中的徽章形式呈现。
- en: 'An example of a testing workflow can be found in my repository:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我的代码库中可以找到测试工作流的示例：
- en: '[https://github.com/PhilipDW183/flask_petrol_map](https://github.com/PhilipDW183/flask_petrol_map)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PhilipDW183/flask_petrol_map](https://github.com/PhilipDW183/flask_petrol_map)'
