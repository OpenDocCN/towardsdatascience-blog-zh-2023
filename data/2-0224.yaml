- en: A Quick Start to Connecting to PostgreSQL and Pulling Data into Pandas
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 快速入门 PostgreSQL 连接和数据导入 Pandas
- en: 原文：[https://towardsdatascience.com/a-quick-start-to-connecting-to-postgresql-and-pulling-data-into-pandas-26fbe7c0fcd5](https://towardsdatascience.com/a-quick-start-to-connecting-to-postgresql-and-pulling-data-into-pandas-26fbe7c0fcd5)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/a-quick-start-to-connecting-to-postgresql-and-pulling-data-into-pandas-26fbe7c0fcd5](https://towardsdatascience.com/a-quick-start-to-connecting-to-postgresql-and-pulling-data-into-pandas-26fbe7c0fcd5)
- en: Get you on your way to data analysis and model building quickly by pulling PostgreSQL
    data into Pandas
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过将 PostgreSQL 数据导入 Pandas，快速开始数据分析和模型构建
- en: '[](https://medium.com/@broepke?source=post_page-----26fbe7c0fcd5--------------------------------)[![Brian
    Roepke](../Images/0b7ef72cbfc9acda69fde14127d65dcf.png)](https://medium.com/@broepke?source=post_page-----26fbe7c0fcd5--------------------------------)[](https://towardsdatascience.com/?source=post_page-----26fbe7c0fcd5--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----26fbe7c0fcd5--------------------------------)
    [Brian Roepke](https://medium.com/@broepke?source=post_page-----26fbe7c0fcd5--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@broepke?source=post_page-----26fbe7c0fcd5--------------------------------)[![Brian
    Roepke](../Images/0b7ef72cbfc9acda69fde14127d65dcf.png)](https://medium.com/@broepke?source=post_page-----26fbe7c0fcd5--------------------------------)[](https://towardsdatascience.com/?source=post_page-----26fbe7c0fcd5--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----26fbe7c0fcd5--------------------------------)
    [Brian Roepke](https://medium.com/@broepke?source=post_page-----26fbe7c0fcd5--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----26fbe7c0fcd5--------------------------------)
    ·4 min read·Feb 5, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----26fbe7c0fcd5--------------------------------)
    ·4 分钟阅读·2023年2月5日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/b4223994373e20c953c2c141aa932517.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b4223994373e20c953c2c141aa932517.png)'
- en: Photo by [Sergi Ferrete](https://unsplash.com/@sergiferrete?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[Sergi Ferrete](https://unsplash.com/@sergiferrete?utm_source=medium&utm_medium=referral)
    提供的照片，发布在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)'
- en: What is PostgreSQL?
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 PostgreSQL？
- en: '[PostgreSQL](https://www.postgresql.org) is a powerful **relational database
    management system** (RDBMS) that many organizations use. Connecting to it is easy,
    and thanks to the great Python ecosystem, getting your data into a Data Frame
    in Pandas is just as easy. Let’s look at a simple example that will help you get
    started.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[PostgreSQL](https://www.postgresql.org) 是一个强大的 **关系数据库管理系统**（RDBMS），许多组织都在使用它。连接到它很简单，得益于优秀的
    Python 生态系统，将数据导入 Pandas 的数据框也同样简单。让我们看一个简单的例子，帮助你入门。'
- en: Running PostgreSQL Locally
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本地运行 PostgreSQL
- en: One simple way to run PostgreSQL locally is to use [Docker](https://www.docker.com).
    If you don’t have Docker installed, you can download it [here](https://www.docker.com/products/docker-desktop).
    Once you have Docker installed, you can run the following command to start a PostgreSQL
    container.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本地运行 PostgreSQL 的一种简单方法是使用 [Docker](https://www.docker.com)。如果你尚未安装 Docker，可以
    [在这里](https://www.docker.com/products/docker-desktop) 下载。安装 Docker 后，你可以运行以下命令来启动一个
    PostgreSQL 容器。
- en: Head to the [Docker Hub](https://hub.docker.com/) and search for `postgres`.
    You'll see several different images. We want the `postgres` image; yo can pull
    it down with the following command.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 前往 [Docker Hub](https://hub.docker.com/) 搜索 `postgres`。你会看到几个不同的镜像。我们需要的是 `postgres`
    镜像；你可以使用以下命令将其拉取下来。
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: After that, you can run the following command (per the documentation on Docker
    Hub) to start a container.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你可以运行以下命令（按照 Docker Hub 上的文档）来启动一个容器。
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: You can connect to the DB using any supported SQL tool, such as [SQL Workbench](https://www.sql-workbench.eu/index.html).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用任何支持的 SQL 工具连接到数据库，例如 [SQL Workbench](https://www.sql-workbench.eu/index.html)。
- en: '![](../Images/f6cd7e9570e991d39538bb28e4598e7e.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f6cd7e9570e991d39538bb28e4598e7e.png)'
- en: Image by Author
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Running the above commands will create a database called `MAIN` and a table
    called `CONTACTS`. It will also insert a single row into the table and then select
    all the rows from the table; that should get you started with a simple PG setup
    locally.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 运行上述命令将创建一个名为 `MAIN` 的数据库和一个名为 `CONTACTS` 的表。它还会向表中插入一行数据，然后从表中选择所有行；这应该能让你开始一个简单的本地
    PG 设置。
- en: Imports
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入
- en: The first thing we’ll do is import the libraries we will need. We will need
    the `psycopg2` library to connect to PostgreSQL and the `pandas` library to work
    with our data. in addition; we're going to use `pandas`, `os`, `urllib`, and `sqlalchemy`
    to help us connect to our database.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先需要导入所需的库。我们将需要`psycopg2`库来连接PostgreSQL，还需要`pandas`库来处理数据。此外，我们还将使用`pandas`、`os`、`urllib`和`sqlalchemy`来帮助我们连接到数据库。
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Next, we want to ensure we’re not hard-coding our sensitive information but
    rather pulling it from environment variables. If you’d like to learn more about
    this process, check out this [article](https://www.dataknowsall.com/envvar.html).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们要确保不将敏感信息硬编码到代码中，而是从环境变量中提取。如果您想了解更多关于此过程的信息，请查看这篇[文章](https://www.dataknowsall.com/envvar.html)。
- en: Next, we need to ensure any information in our connection string is **properly
    URL encoded**, like the username and password, which can be easily achieved with
    the `quote_plus` function from `urllib`. Let's take a quick look at a sample password
    and how it is encoded.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要确保连接字符串中的任何信息都**正确URL编码**，例如用户名和密码，这可以通过`urllib`中的`quote_plus`函数轻松实现。让我们快速看一下示例密码及其编码方式。
- en: '[PRE4]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Next, we can create our **connection string** that contains all the information
    needed to connect to our database. We will use string format ( `f` in front of
    the string) to insert variables. We will also use the `quote_plus` function to
    encode our username and password.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们可以创建包含连接到数据库所需所有信息的**连接字符串**。我们将使用字符串格式（在字符串前加上`f`）来插入变量。我们还将使用`quote_plus`函数来对用户名和密码进行编码。
- en: '[PRE6]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: In addition to the connection string, we will also create an **SQLAlchemy engine**.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 除了连接字符串，我们还将创建一个**SQLAlchemy引擎**。
- en: That’s it! Assuming you didn’t receive an error, you are now connected to your
    PostgreSQL database. Let’s look at how we can pull data into a Pandas Data Frame.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！假设你没有收到错误消息，现在你已经连接到你的PostgreSQL数据库。让我们看看如何将数据提取到Pandas数据框中。
- en: First, we’ll define a query in the form of a string. A best practice here is
    to use triple quotes (`"""`), allowing us to write our query over multiple lines
    as well as avoid conflicts when our query itself contains quotes, such as `WHERE
    FIRST_NAME = 'Brian'`.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将以字符串的形式定义一个查询。这里的最佳实践是使用三重引号（`"""`），这样可以在多行中编写查询，同时避免查询本身包含引号时的冲突，例如`WHERE
    FIRST_NAME = 'Brian'`。
- en: '[PRE7]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Next, we will create the connection from the `alchemyEngine` we created earlier.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将创建之前创建的`alchemyEngine`的连接。
- en: '[PRE8]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: We will then use the `read_sql` function from `pandas` to pull our data into
    a Data Frame.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们将使用`pandas`中的`read_sql`函数将数据提取到数据框中。
- en: '[PRE9]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Now that we have a data frame and can display the first few rows and see our
    data.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了数据框，可以显示前几行并查看数据。
- en: '[PRE10]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: A best practice is to close your connection when you’re done.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 一个最佳实践是完成后关闭连接。
- en: '[PRE11]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Conclusion
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: PostgreSQL is a powerful relational database management system (RDBMS) used
    by many companies. We covered connecting to it and getting your data into a Pandas
    data frame. We also discussed some best practices like storing credentials in
    Environment Variables and how to easily URL encode your username and password,
    which often will have characters that are not supported.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: PostgreSQL是一个强大的关系数据库管理系统（RDBMS），被许多公司使用。我们介绍了如何连接到它并将数据导入Pandas数据框。我们还讨论了一些最佳实践，如将凭据存储在环境变量中，以及如何轻松地URL编码用户名和密码，这些密码通常包含不受支持的字符。
- en: '*If you enjoy reading stories like these and want to support me as a writer,
    consider signing up to become a Medium member. It’s $5 a month, with unlimited
    access to thousands of articles. If you sign up using* [*my link*](https://medium.com/@broepke/membership)*,
    I’ll earn a small commission at no extra cost.*'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你喜欢阅读这样的故事并希望支持我作为一名作者，可以考虑注册成为Medium会员。每月5美元，您可以无限访问数千篇文章。如果您通过* [*我的链接*](https://medium.com/@broepke/membership)*注册，我将获得一小笔佣金，而您无需支付额外费用。*'
