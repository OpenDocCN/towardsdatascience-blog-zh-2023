- en: Identifying Topical Hot Spots in Urban Areas
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 识别城市区域的热点
- en: 原文：[https://towardsdatascience.com/identifying-topical-hot-spots-in-urban-areas-3c47cde5ae10](https://towardsdatascience.com/identifying-topical-hot-spots-in-urban-areas-3c47cde5ae10)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/identifying-topical-hot-spots-in-urban-areas-3c47cde5ae10](https://towardsdatascience.com/identifying-topical-hot-spots-in-urban-areas-3c47cde5ae10)
- en: '![](../Images/76d9a53bc4caa856f34174d3080e2287.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/76d9a53bc4caa856f34174d3080e2287.png)'
- en: Hipster Hot-Spots in Budapest.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 布达佩斯的时髦热点。
- en: A generic framework using OpenStreetMap and DBSCAN Spatial Clustering to Capture
    the most hyped urban areas
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一个通用框架，使用OpenStreetMap和DBSCAN空间聚类来捕捉最受热捧的城市区域
- en: '[](https://medium.com/@janosovm?source=post_page-----3c47cde5ae10--------------------------------)[![Milan
    Janosov](../Images/77b62460041f66ec4585a81baef81a03.png)](https://medium.com/@janosovm?source=post_page-----3c47cde5ae10--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3c47cde5ae10--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3c47cde5ae10--------------------------------)
    [Milan Janosov](https://medium.com/@janosovm?source=post_page-----3c47cde5ae10--------------------------------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@janosovm?source=post_page-----3c47cde5ae10--------------------------------)[![米兰·亚诺索夫](../Images/77b62460041f66ec4585a81baef81a03.png)](https://medium.com/@janosovm?source=post_page-----3c47cde5ae10--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3c47cde5ae10--------------------------------)[![数据科学前沿](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3c47cde5ae10--------------------------------)
    [米兰·亚诺索夫](https://medium.com/@janosovm?source=post_page-----3c47cde5ae10--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----3c47cde5ae10--------------------------------)
    ·9 min read·Oct 16, 2023
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[数据科学前沿](https://towardsdatascience.com/?source=post_page-----3c47cde5ae10--------------------------------)
    ·9分钟阅读·2023年10月16日
- en: --
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: In this article, I show a quick and easy-to-use methodology that is capable
    of identifying hot spots for a given interest based on Point of interest (POI)
    collected from [OpenStreeetMap](https://help.openstreetmap.org/questions/64731/place-type-categories)
    ([OSM](https://help.openstreetmap.org/questions/64731/place-type-categories))
    using the [DBSCAN](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.DBSCAN.html)
    algorithm of sklearn. First, I will collect the raw data of POIs belonging to
    a couple of categories that I found on ChatGPT, and I assumed they are characteristic
    of the sometimes-called hyp-lifestyle (e.g., cafes, bars, marketplaces, yoga studios);
    after converting that data into a handy GeoDataFrame, I do the geospatial clustering,
    and finally, evaluate the results based on how well the different urban functionalities
    mix in each cluster.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我展示了一种快速且易于使用的方法，能够基于从[OpenStreeetMap](https://help.openstreetmap.org/questions/64731/place-type-categories)（[OSM](https://help.openstreetmap.org/questions/64731/place-type-categories)）收集的兴趣点（POI）来识别特定兴趣的热点，使用了sklearn的[DBSCAN](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.DBSCAN.html)算法。首先，我将收集一些我在ChatGPT上找到的属于几个类别的POI的原始数据，并假设这些数据具有所谓的时髦生活方式的特征（例如，咖啡馆、酒吧、市场、瑜伽馆）；将这些数据转换为便捷的GeoDataFrame后，我进行地理空间聚类，最后，根据不同城市功能在每个聚类中的混合程度来评估结果。
- en: While the choice of the topic I call ‘hipster’ and the POI categories linked
    to it is somewhat arbitrary, they can be easily replaced by other topics and categories
    — the automatic hot-spot detecting method remains the same. The advantages of
    such an easy-to-adopt method range from identifying local [innovation hubs](https://scholar.google.com/citations?view_op=view_citation&hl=en&user=5_ep83MAAAAJ&citation_for_view=5_ep83MAAAAJ%3AWF5omc3nYNoC)
    supporting innovation planning to detecting urban subcenters supporting urban
    planning initiatives, assessing different market opportunities for businesses,
    analyzing real-estate investment opportunities, or capturing tourist hotspots.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我所称之为“时髦”的主题和与之相关的POI类别在某种程度上是随意的，但它们可以很容易地被其他主题和类别替代——自动热点检测方法保持不变。这种易于采用的方法的优势包括从识别支持创新规划的本地[创新中心](https://scholar.google.com/citations?view_op=view_citation&hl=en&user=5_ep83MAAAAJ&citation_for_view=5_ep83MAAAAJ%3AWF5omc3nYNoC)到检测支持城市规划倡议的城市次中心、评估企业的不同市场机会、分析房地产投资机会或捕捉旅游热点。
- en: '*All images were created by the author.*'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '*所有图像均由作者创建。*'
- en: 1\. Acquire data from OSM
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 从 OSM 获取数据
- en: First, I get the admin polygon of the target city. As Budapest is my hometown,
    for easy (on-field) validation purposes, I use that. However, as I am only using
    the global database of [OSM](https://www.openstreetmap.org/copyright), these steps
    can easily be reproduced for any other part of the world that OSM covers. In particular,
    I use the OSMNx package to get the admin boundaries in a super easy way.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我获取目标城市的行政多边形。由于布达佩斯是我的家乡，为了方便（现场）验证，我使用了它。然而，由于我仅使用了[OSM](https://www.openstreetmap.org/copyright)的全球数据库，这些步骤可以很容易地应用于OSM覆盖的世界其他任何地方。特别是，我使用OSMNx包以非常简单的方式获取行政边界。
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The result of this code block:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这个代码块的结果：
- en: '![](../Images/5ea27afb37eba9ffa020c9dbac1156d0.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5ea27afb37eba9ffa020c9dbac1156d0.png)'
- en: The admin boundaries of Budapest.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 布达佩斯的行政边界。
- en: Now, use the OverPass API to download the POIs that fall within the bounding
    box of Budapest’s admin boundaries. In the amenity_mapping list, I compiled a
    list of POI categories that I associate with the hipster lifestyle. I also have
    to note here that this is a vague and not-expert-based categorization, and with
    the methods presented here, anyone may update the list of categories accordingly.
    Additionally, one may incorporate other POI data sources that contain more fine-grained
    multi-level categorization for a more accurate characterization of the given topic.
    In other words, this list can be changed in any way you see fit — from covering
    the hipsterish things better to readjusting this exercise to any other topic-categorization
    (e.g., food courts, shopping areas, tourist hotspots, etc).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，使用OverPass API下载在布达佩斯行政边界的边界框内的POI。在amenity_mapping列表中，我编制了一个与嬉皮士生活方式相关的POI类别列表。我还必须在此说明，这是一种模糊的、非专业的分类方法，使用这里介绍的方法，任何人都可以相应地更新类别列表。此外，还可以结合其他包含更精细多层次分类的POI数据源，以便更准确地描述给定主题。换句话说，这个列表可以根据你的需要进行任何方式的修改——从更好地覆盖嬉皮士相关内容到将这个练习重新调整到任何其他主题分类（例如，食品广场、购物区、旅游热点等）。
- en: 'Note: as the [OverPass](https://wiki.openstreetmap.org/wiki/Overpass_API) downloader
    returns all results within a bounding box, at the end of this code block, I filter
    out those POIs outside of the admin boundaries by using GeoPandas’ overlay function.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：由于[OverPass](https://wiki.openstreetmap.org/wiki/Overpass_API)下载器返回的是边界框内的所有结果，在这个代码块的末尾，我使用GeoPandas的叠加功能过滤掉那些在行政边界之外的POI。
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The result of this code block is the frequency distribution of each downloaded
    POI category:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这个代码块的结果是每个下载的POI类别的频率分布：
- en: '![](../Images/279062c78c8eb9d46c53c79953bacf3b.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/279062c78c8eb9d46c53c79953bacf3b.png)'
- en: The frequency distribution of each downloaded POI category.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 每个下载的POI类别的频率分布。
- en: 2\. Visualize the POI data
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 可视化POI数据
- en: 'Now, visualize all the 2101 POIs:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，可视化所有2101个POI：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The result of this code cell:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这个代码单元的结果：
- en: '![](../Images/08cfed1dd592d8f4779b7db5efdad9e0.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/08cfed1dd592d8f4779b7db5efdad9e0.png)'
- en: Budapest with all the downloaded POIs labeled by their categories.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 布达佩斯所有下载的POI按其类别标记。
- en: This plot is pretty difficult to interpret — except that the city center is
    super crowded, so let’s go for an interactive visualization tool, [Folium](https://python-visualization.github.io/folium/latest/).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这个图表相当难以解释——除了市中心非常拥挤之外，所以我们使用一个交互式可视化工具，[Folium](https://python-visualization.github.io/folium/latest/)。
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The default view of this map (which you can easily change by adjusting the
    zoom_start=12 parameter):'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 该地图的默认视图（你可以通过调整zoom_start=12参数轻松更改）：
- en: '![](../Images/fb0d32088a2e35d86d2ca9d99ba0daf9.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fb0d32088a2e35d86d2ca9d99ba0daf9.png)'
- en: Budapest with all the downloaded POIs labeled by their categories — interactive
    version, first zoom setting.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 布达佩斯所有下载的POI按其类别标记——交互版本，第一次缩放设置。
- en: 'Then, it is possible to change the zoom parameter and replot the map, or simply
    zoom in using the mouse:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，可以更改缩放参数并重新绘制地图，或使用鼠标简单地放大：
- en: '![](../Images/1caf04520f02ba12216267a719bc9f52.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1caf04520f02ba12216267a719bc9f52.png)'
- en: Budapest with all the downloaded POIs labeled by their categories — interactive
    version, second zoom setting.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 布达佩斯所有下载的POI按其类别标记——交互版本，第二次缩放设置。
- en: 'Or completely zoom out:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 或者完全缩小：
- en: '![](../Images/e24905932348dca4c56bd7ce3782f963.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e24905932348dca4c56bd7ce3782f963.png)'
- en: Budapest with all the downloaded POIs labeled by their categories — interactive
    version, third zoom setting.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 布达佩斯所有下载的POI按其类别标记——交互版本，第三次缩放设置。
- en: 3\. Spatial clustering
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 空间聚类
- en: Now that I have all the necessary POIs at hand, I go for the DBSCAN algorithm,
    first writing a function that takes the POIs and does the clustering. I will only
    finetune the *eps* parameter of [DBSDCAN](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.DBSCAN.html),
    which, essentially, quantifies the characteristic size of a cluster, the distance
    between POIs to be grouped together. Additionally, I transform the geometries
    to a local CRS (EPSG:23700) to work in SI units. More on CRS conversions [here](https://medium.com/@janosovm/the-world-map-with-many-faces-map-projections-f58a210ff2f7).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我已经手头有了所有必要的 POI，我使用 DBSCAN 算法，首先编写一个函数来处理 POI 并进行簇分析。我只会微调 [DBSCAN](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.DBSCAN.html)
    的 *eps* 参数，它本质上量化了簇的特征大小，即要分组在一起的 POI 之间的距离。此外，我将几何图形转换为本地 CRS（EPSG:23700）以使用国际单位制。更多关于
    CRS 转换的信息 [在这里](https://medium.com/@janosovm/the-world-map-with-many-faces-map-projections-f58a210ff2f7)。
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The result of this cell:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 该单元格的结果：
- en: '![](../Images/867884af64d3c5e2ddea54a14c885c2e.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/867884af64d3c5e2ddea54a14c885c2e.png)'
- en: Preview on the POI GeoDataFrame where each POI is labeled by its cluster id.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在 POI GeoDataFrame 中预览，每个 POI 按其簇 ID 标记。
- en: There are 1237 clusters — that seems to be a bit too much if we are just looking
    at cozy, hipsterish hotspots. Let’s take a look at their size distribution and
    then pick a size threshold — calling a cluster with two POIs hotspots is probably
    not really sound anyways.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 总共有 1237 个簇——如果我们只是看舒适的 hipster 热点，这似乎有点太多了。让我们查看它们的大小分布，然后选择一个大小阈值——将一个只有两个
    POI 的簇称为热点可能不太靠谱。
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The result of this cell:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 该单元格的结果：
- en: '![](../Images/a9078ece6822d23013faeb74208bbcab.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a9078ece6822d23013faeb74208bbcab.png)'
- en: Cluster size distribution.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 簇大小分布。
- en: Based on the gap in the histogram, let’s keep clusters with at least 10 POIs!
    For now, this is a simple enough working hypothesis. However, this could be worked
    in more sophisticated ways as well, for instance, by incorporating the number
    of different POI types or the geographical area covered.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 根据直方图中的差距，让我们保留至少有 10 个兴趣点（POI）的簇！目前，这是一个足够简单的工作假设。然而，这也可以通过更复杂的方式来处理，例如，通过考虑不同类型的
    POI 或覆盖的地理区域。
- en: '[PRE6]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This snippet shows that there are 15 clusters satisfying the filtering.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这个片段显示有 15 个簇满足过滤条件。
- en: 'Once we have the 15 true hipster clusters, put them on a map:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们有了 15 个真实的 hipster 簇，将它们放在地图上：
- en: '[PRE7]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../Images/c9a26ba3cd2d7d99d33672ef83d4986f.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c9a26ba3cd2d7d99d33672ef83d4986f.png)'
- en: Hipster POI clusters — first zoom level.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Hipster POI 簇 — 第一级缩放。
- en: '![](../Images/02603dd889752b75678b56839b385bb8.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/02603dd889752b75678b56839b385bb8.png)'
- en: Hipster POI clusters — second zoom level.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Hipster POI 簇 — 第二级缩放。
- en: '![](../Images/f541367574cdae487ea894a71008656f.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f541367574cdae487ea894a71008656f.png)'
- en: Hipster POI clusters — third zoom level.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Hipster POI 簇 — 第三级缩放。
- en: 4\. Comparing the clusters
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 比较簇
- en: Each cluster counts as a fancy, hipster cluster — however, they all must be
    unique in some way or another, right? Let’s see how unique they are by comparing
    the portfolio of POI categories they have to offer.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 每个簇都算作一个别致的 hipster 簇——然而，它们都必须以某种方式独特，对吧？让我们通过比较它们所提供的 POI 类别组合来看看它们有多独特。
- en: First, shoot for diversity and measure the variety/diversity of POI categories
    in each cluster by computing their entropy.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，追求多样性，并通过计算每个簇中 POI 类别的熵来衡量它们的多样性/变化性。
- en: '[PRE8]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The result of this cell:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 该单元格的结果：
- en: '![](../Images/f814840d74c75523797b50804f148ecc.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f814840d74c75523797b50804f148ecc.png)'
- en: The diversity (entropy) of each cluster based on its POI profile.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 每个簇基于其 POI 配置文件的多样性（熵）。
- en: 'And a quick correlation analysis on this table:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 以及对该表的快速相关性分析：
- en: '[PRE9]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](../Images/bb152c9e9b3dfa05a35ba1d3b7380ddc.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bb152c9e9b3dfa05a35ba1d3b7380ddc.png)'
- en: The correlation between cluster features.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 簇特征之间的相关性。
- en: After computing the correlation between cluster-ID, cluster size and cluster
    entropy, there is a significant correlation between size and entropy; however,
    it's far from explaining all the diversity. Apparently, indeed, some hotspots
    are more diverse than others - while others are somewhat more specialized. What
    are they specialized in? I will answer this question by comparing the POI profiles
    of each cluster to the overall distribution of each POI type within clusters and
    pick the top three POI categories most typical to a cluster compared to the average.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算聚类ID、聚类大小和聚类熵之间的相关性后，发现大小和熵之间有显著的相关性；然而，这远未解释所有的多样性。显然，确实有些热点比其他热点更具多样性——而其他热点则相对更专业。它们专注于什么？我将通过比较每个聚类的POI档案与每个POI类型在聚类中的总体分布，并挑选出与平均水平相比最典型的三个POI类别来回答这个问题。
- en: '[PRE10]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The result of this code-block:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 该代码块的结果：
- en: '![](../Images/3a606acd8d683c239559f4383ece1a29.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3a606acd8d683c239559f4383ece1a29.png)'
- en: The unique amenity fingerprint of each cluster.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 每个聚类的独特设施指纹。
- en: The top category descriptions already show some trends. Such as cluster 17 is
    clearly for drinking, while 19 also mixes music, possibly partying with it. Cluster
    91, with bookstores, galleries, and cafes, is certainly a place for daytime relaxation,
    while cluster 120, with music and a gallery can be a great warm-up for any pub
    crawl. From the distribution, we can also see that hopping in a bar is always
    appropriate (or, depending on the use case, we should think of further normalizations
    based on category frequencies)!
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 顶级类别描述已经显示出一些趋势。例如，聚类17显然是用于饮酒的，而19也混合了音乐，可能还有派对。聚类91包含书店、画廊和咖啡馆，显然是白天放松的地方，而聚类120，则有音乐和画廊，可以是任何酒吧巡游的绝佳热身。从分布中，我们也可以看到，跳进酒吧总是合适的（或者，根据使用情况，我们应该根据类别频率考虑进一步的规范化）！
- en: Concluding remarks
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: 'As a local resident, I can confirm that these clusters make perfect sense and
    represent the desired urban functionality mix quite well despite the simple methodology.
    Of course, this is a quick pilot that can be enriched and touched up in several
    ways, such as:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 作为本地居民，我可以确认这些聚类非常合理，并且尽管方法简单，但很好地代表了期望的城市功能组合。当然，这只是一个快速的试点，可以通过多种方式进行丰富和改进，例如：
- en: Relying on more detailed POI categorization and selection
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 依赖于更详细的POI分类和选择
- en: Considering the POI categories when doing the clustering (semantic clustering)
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在进行聚类时考虑POI类别（语义聚类）
- en: Enriching the POI information with e.g., social media reviews and ratings
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过社交媒体评论和评分等方式丰富POI信息
