- en: Expanding Time
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扩展时间
- en: 原文：[https://towardsdatascience.com/expanding-time-8a1c41e101c2](https://towardsdatascience.com/expanding-time-8a1c41e101c2)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/expanding-time-8a1c41e101c2](https://towardsdatascience.com/expanding-time-8a1c41e101c2)
- en: How to Increase the Value of Low-Dimensional Data by Extracting Time Features
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何通过提取时间特征来提升低维数据的价值
- en: '[](https://medium.com/@kurt.klingensmith?source=post_page-----8a1c41e101c2--------------------------------)[![Kurt
    Klingensmith](../Images/2249e99f12d10f81598c754b1aaf76cc.png)](https://medium.com/@kurt.klingensmith?source=post_page-----8a1c41e101c2--------------------------------)[](https://towardsdatascience.com/?source=post_page-----8a1c41e101c2--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----8a1c41e101c2--------------------------------)
    [Kurt Klingensmith](https://medium.com/@kurt.klingensmith?source=post_page-----8a1c41e101c2--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@kurt.klingensmith?source=post_page-----8a1c41e101c2--------------------------------)[![库尔特·克林根史密斯](../Images/2249e99f12d10f81598c754b1aaf76cc.png)](https://medium.com/@kurt.klingensmith?source=post_page-----8a1c41e101c2--------------------------------)[](https://towardsdatascience.com/?source=post_page-----8a1c41e101c2--------------------------------)[![数据科学](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----8a1c41e101c2--------------------------------)
    [库尔特·克林根史密斯](https://medium.com/@kurt.klingensmith?source=post_page-----8a1c41e101c2--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----8a1c41e101c2--------------------------------)
    ·8 min read·Jun 2, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于[数据科学](https://towardsdatascience.com/?source=post_page-----8a1c41e101c2--------------------------------)
    ·8分钟阅读·2023年6月2日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/8fc618f72a8909656efa287fc09d4fff.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8fc618f72a8909656efa287fc09d4fff.png)'
- en: Photo by [Guillaume de Germain](https://unsplash.com/@guillaumedegermain?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/AtzIa-yrAN4?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 由[吉约姆·德·热尔曼](https://unsplash.com/@guillaumedegermain?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)在[Unsplash](https://unsplash.com/photos/AtzIa-yrAN4?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)拍摄的照片。
- en: While low-dimensional datasets may seem of limited use, there are often ways
    to extract more features from them — especially if the dataset includes time data.
    Extracting additional features by “unpacking” a value for date and time can provide
    additional insights not readily available in the base dataset. This article will
    walk through the process of using Python to take low-dimensional weather data
    further than may be readily evident based on the data’s original features.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管低维数据集看似用途有限，但通常可以从中提取更多特征——尤其是当数据集中包含时间数据时。通过“解包”日期和时间的值来提取额外的特征，可以提供在基础数据集中不易获得的额外洞察。本文将介绍如何使用
    Python 将低维天气数据进行深入分析，这可能超出了数据原始特征所能显现的范围。
- en: Data
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据
- en: 'The data for this is public domain weather data used with permission of the
    Montana Climate Office at [climate.umt.edu](http://climate.umt.edu/) [1]. Montana’s
    weather data is accessible at: [https://shiny.cfc.umt.edu/mesonet-download/](https://shiny.cfc.umt.edu/mesonet-download/)
    [2]. For this article, the data uses daily air temperature recordings for two
    weather stations: Whitefish North, MT and Harding Cutoff, SD. Note that the station
    names and air temperature column have been slightly reformatted to improve understandability
    for this article.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这些数据是公共领域的天气数据，经过蒙大拿气候办公室许可使用，网址为[climate.umt.edu](http://climate.umt.edu/)
    [1]。蒙大拿的天气数据可以在以下网址访问：[https://shiny.cfc.umt.edu/mesonet-download/](https://shiny.cfc.umt.edu/mesonet-download/)
    [2]。本文使用的数据记录了两个气象站的每日气温：白鱼北部，MT 和哈丁岔道，SD。请注意，站点名称和气温列已稍作重新格式化，以提高本文的可读性。
- en: 'Code and Data CSV:'
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代码和数据 CSV：
- en: The full notebook and data CSV with additional visualizations is available at
    the **linked GitHub page:** [**download or clone it from git to follow along**](https://github.com/kurtklingensmith/ExpandingTime)**.**
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 带有附加可视化的完整笔记本和数据 CSV 可以在**链接的 GitHub 页面**上获取：[**从 git 下载或克隆以跟随**](https://github.com/kurtklingensmith/ExpandingTime)**。**
- en: 'This code requires the following libraries:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码需要以下库：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 1\. Initial Data Exploration
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 初步数据探索
- en: 'Here’s what the base dataframe looks like:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 基础数据框的样子如下：
- en: '![](../Images/795f263430d8b22f5ad587796d9e9733.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/795f263430d8b22f5ad587796d9e9733.png)'
- en: Screenshot by author.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的截图。
- en: 'We can run a quick plotly visualization with the following code, which shows
    us temperature recording over time for both weather stations:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用以下代码进行快速的 plotly 可视化，该可视化展示了两个气象站的温度记录随时间的变化：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/d40133b2c31b2cc92ef7ee07acc1f9d4.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d40133b2c31b2cc92ef7ee07acc1f9d4.png)'
- en: Screenshot by author.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截图。
- en: 'This is a good start that shows the impact of seasonality on observed temperatures;
    the dips are winter months and the peaks are summer. Other possibilities include
    a histogram of observed temperatures:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个很好的开始，展示了季节性对观察温度的影响；下降是冬季，峰值是夏季。其他可能性包括观察温度的直方图：
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/5120610abcbd3f52abfb941ee8e0b6b2.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5120610abcbd3f52abfb941ee8e0b6b2.png)'
- en: Screenshot by author.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截图。
- en: More charts are possible, as is a basic statistical analysis on observed temperatures
    overall and by station. However, **taking this data exploration to the next level
    requires additional feature extraction.**
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 更多图表是可能的，基本的统计分析也可以进行，分析观察到的温度总体以及按站点分类。然而，**将这种数据探索提升到下一个层次需要额外的特征提取。**
- en: 2\. Expanding the Time Column
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2. 扩展时间列
- en: 'Let’s revisit the “datetime” column. Looking at a random date example, this
    column contains date information in the following format: 2019–04–22, or year,
    month, day. There’s quite a bit of data packed within this one column. Here’s
    a visual on how it breaks out:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们重新审视“datetime”列。以一个随机日期示例来看，这一列包含的日期信息格式为：2019–04–22，或年、月、日。这一列中包含了相当多的数据。以下是它如何拆解的可视化：
- en: '![](../Images/8f39b9731443bfa54005b666c596065f.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8f39b9731443bfa54005b666c596065f.png)'
- en: Diagram created by author.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 作者创建的图示。
- en: Splitting apart the “datetime” column can create 7 new columns in the dataframe,
    but there are more possibilities tailorable to the specific dataset and domain.
    For example, the day could break down into data on a weekend versus weekday or
    a holiday. Such information could be useful for a retail-focused dataset where
    an analyst is interested in customer behavior over time. Since the data used in
    this example is weather, season is of importance.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 拆分“datetime”列可以在数据框中创建 7 列新数据，但还有更多可能性，可以根据特定的数据集和领域进行定制。例如，日期可以细分为周末与工作日或假期的数据。这类信息对于零售数据集中的分析师了解客户行为可能非常有用。由于本示例中使用的数据是天气数据，因此季节性很重要。
- en: 'Accessing all of this is rather simple via Pandas’ datetime capabilities. The
    first step is ensuring the “datetime” column is formatted as such with the following
    code:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 Pandas 的 datetime 功能访问所有这些数据相当简单。第一步是确保“datetime”列格式正确，可以使用以下代码：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'There are a few ways to extract additional features from the “datetime” column:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 从“datetime”列中提取附加特征有几种方法：
- en: Directly via use of Pandas dt.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过直接使用 Pandas dt。
- en: By using Pandas dt to break the additional features into new columns.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过使用 Pandas dt 将附加特征拆分为新列。
- en: 2.1\. Directly Accessing Elements from the Date and Time Column
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.1. 从日期和时间列直接访问元素
- en: 'Here’s an example of directly accessing and converting the time data:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这是直接访问和转换时间数据的一个示例：
- en: '[PRE4]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The output is:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![](../Images/68016119b4c37f4b671244bc9cb77f29.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/68016119b4c37f4b671244bc9cb77f29.png)'
- en: Screenshot by author.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截图。
- en: 'Here’s an example for months:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这是月份的一个示例：
- en: '[PRE5]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The output here is:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![](../Images/4a4d632686f1c2757f5c00b255b2b0e1.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4a4d632686f1c2757f5c00b255b2b0e1.png)'
- en: Screenshot by author.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截图。
- en: 2.2\. Creating New Columns for Elements Extracted from Date and Time Column
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.2. 为从日期和时间列中提取的元素创建新列
- en: Another way to handle the time data is to extract specific datetime features
    into new columns. This expands the dimensionality of the dataframe. The following
    python code shows how to create new columns for the day name, the numerical day,
    the month name, the numerical month, and the year. The last line creates a column
    for the Julian Date, which is a sequential count of days in a year — the first
    day of the year being 001, the last 365 (or, in a leap year, 366). An example
    Julian calendar is [**available at this link**](https://www.glerl.noaa.gov/res/projects/ifyle/julian_date_calendar.html)
    [3].
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 处理时间数据的另一种方法是将特定的日期时间特征提取到新列中。这会扩展数据框的维度。以下 Python 代码展示了如何创建新的列，分别表示星期几、数字日期、月份名称、数字月份和年份。最后一行创建了一个表示儒略日期的列，儒略日期是年份内的连续天数——年的第一天为001，最后一天为365（或在闰年中为366）。一个儒略日历的示例[**可以通过这个链接获取**](https://www.glerl.noaa.gov/res/projects/ifyle/julian_date_calendar.html)
    [3]。
- en: '[PRE6]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'There’s one thing left to do, and that’s create a season column. **This is
    a good example of where knowing the data, the customer, and domain knowledge relevant
    to the data are important.** In the case of seasons, there are two calendar definitions:
    Meteorological and Astronomical [4]. Meteorologists define each season as a three
    month span beginning on the 1st of a month, whereas the Astronomical Seasons begin
    on calendar dates that do not coincide with the start of the month.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一件事要做，那就是创建一个季节列。**这是一个很好的例子，说明了解数据、客户以及与数据相关的领域知识是多么重要。** 在季节的情况下，有两种日历定义：气象学定义和天文学定义[4]。气象学家将每个季节定义为从某个月的1号开始的三个月时间段，而天文学季节则从不与月份开始一致的日历日期开始。
- en: 'In this example, analyzing weather data mandates use of the Meteorological
    calendar. However, suppose the dataset in question deals with consumer purchases
    over time. In that case, Astronomical Seasons might make more sense. Here’s an
    example of an if-else list comprehension for creating a season column based on
    the Meteorological calendar:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，分析天气数据需要使用气象学日历。然而，如果数据集涉及到的是消费者购买情况，那么天文学季节可能更合适。这是一个基于气象学日历创建季节列的if-else列表推导的示例：
- en: '[PRE7]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This results in the following dataframe:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这会产生以下数据框：
- en: '![](../Images/b40b77ead84a5c939a1f5e17da93de29.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b40b77ead84a5c939a1f5e17da93de29.png)'
- en: Screenshot by author.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截屏。
- en: While 10 columns may still qualify as low-dimensionality for a dataframe, it
    is quite a change from the starting point of 3\. But what do these new time features
    enable? The next section shows some possibilities.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管10列可能仍然被视为低维度的数据框，但这与起始点的3列相比变化很大。但这些新的时间特征能够实现什么呢？下一节将展示一些可能性。
- en: 3\. Making Use of the New Time Features
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 利用新的时间特征
- en: 'Let’s revisit the original plot of temperature over time from section 1\. Here’s
    an example code block visualizing one station (Whitefish North) over time with
    seasons represented by different colors:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们重新审视第1节中温度随时间变化的原始图。这里是一个示例代码块，展示了一个站点（Whitefish North）随时间变化的情况，其中季节用不同的颜色表示：
- en: '[PRE8]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The resulting chart is:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 结果图表为：
- en: '![](../Images/eab233204e08368e8a9ebed0210e59c2.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/eab233204e08368e8a9ebed0210e59c2.png)'
- en: Screenshot by author.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截屏。
- en: 'The new time features quickly show how seasons map to shifts in observed temperature.
    The addition of the seasons column is already proving useful, but revisiting the
    histogram from section 1 is even more interesting. The updated code below assigns
    the season as the value for facet_row in the plotly express histogram:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 新的时间特征迅速显示了季节如何与观测温度的变化相关联。季节列的增加已经证明是有用的，但重新审视第1节中的直方图更为有趣。下面的更新代码将季节作为plotly
    express直方图中facet_row的值：
- en: '[PRE9]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The result is:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 结果为：
- en: '![](../Images/10aab62ee3f6a73191b8c57944c3e9d2.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/10aab62ee3f6a73191b8c57944c3e9d2.png)'
- en: Screenshot by author.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截屏。
- en: Introducing new time features to the dataframe enhances the ability to compare
    the temperature distributions of the two weather stations over time. In this case,
    a noticeable divergence between the two stations occurs in Summer.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 向数据框引入新的时间特征增强了比较两个气象站温度分布的能力。在这种情况下，两个气象站在夏季出现了明显的分歧。
- en: 'Here’s another example — suppose a meteorologist was interested in comparing
    the two weather stations in Summer 2020 by Julian date. Here’s how to visualize
    the temperature recordings using the new features:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这是另一个示例——假设气象学家有兴趣按儒略日期比较两个气象站在2020年夏季的情况。以下是如何使用新特征可视化温度记录：
- en: '[PRE10]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The graph looks like this:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图表如下：
- en: '![](../Images/cfd7430dd56946c6be59f5fc110c0a56.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cfd7430dd56946c6be59f5fc110c0a56.png)'
- en: Screenshot by author.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截屏。
- en: The additional time features allow analysts to quickly answer narrowly scoped
    questions; note how the Harding Cutoff station’s Summer 2020 temperatures were
    typically higher higher than Whitefish N until an anomalous crossover occurred
    in the latter half of the season.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 附加的时间特征使分析师能够快速回答狭窄范围的问题；注意Harding Cutoff站点的2020年夏季温度通常高于Whitefish N，直到在季节的后半段发生异常交叉。
- en: 3.1\. Directly Using the Original Date and Time Column
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.1\. 直接使用原始日期和时间列
- en: 'Recall in section 2 we discussed directly accessing additional date and time
    features versus extracting them into new columns. The above graph, “Summer Temperature
    Recordings, 2020,” is reproducible by using Pandas dt functions on the original
    “datetime” column inside the plotly chart code:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 回顾第2节，我们讨论了直接访问额外的日期和时间特征与将其提取到新列中的区别。上述图表“2020年夏季温度记录”可以通过在plotly图表代码中的原始“datetime”列上使用Pandas
    dt函数来复现。
- en: '[PRE11]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'This results in the same exact graph:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这会导致完全相同的图表：
- en: '![](../Images/bd45d46792d9eb9b55dbf24712972440.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bd45d46792d9eb9b55dbf24712972440.png)'
- en: Screenshot by author.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 截图由作者提供。
- en: The advantage of this technique is it does not require increasing the dataframe’s
    dimensionality which, for very large datasets, can help reduce computational load
    and prevent the dataframe frame from becoming too large to deal with. This technique
    also works well for a narrow analysis question requiring limited use of additional
    time features.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术的优势在于它不需要增加数据框的维度，对于非常大的数据集，这可以帮助减少计算负担，并防止数据框变得过大而难以处理。这种技术也适用于需要有限使用额外时间特征的狭窄分析问题。
- en: The disadvantage is the large amount of code required to format and extract
    specific features within a visualization function. This can hinder the interpretability
    and repeatability of the code. There may also be functions or code that are incompatible
    with in-line Pandas dt operations.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 缺点是需要大量代码来格式化和提取可视化函数中的特定特征。这可能会影响代码的可解释性和可重复性。可能还有与内联Pandas dt操作不兼容的函数或代码。
- en: 4\. Conclusion
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 结论
- en: Time columns in dataframes often contain numerous latent features that can improve
    the analytical and visual output possibilities for a low-dimensional data. Extracting
    these time features can increase a dataframe’s dimensionality in a way that unlocks
    new, useful possibilities for analysis.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 数据框中的时间列通常包含许多潜在特征，这些特征可以改善低维数据的分析和可视化输出。提取这些时间特征可以增加数据框的维度，从而解锁新的、有用的分析可能性。
- en: For more example visualizations and the complete code, [the Jupyter notebook
    and csv file is available at this linked Github page](https://github.com/kurtklingensmith/ExpandingTime).
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更多示例可视化和完整代码，[Jupyter笔记本和csv文件可以在这个链接的Github页面上找到](https://github.com/kurtklingensmith/ExpandingTime)。
- en: 'References:'
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考文献：
- en: '[1] University of Montana, [Montana Climate Office](https://www.umt.edu/climate/)
    (2023).'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] 蒙大拿大学，[蒙大拿气候办公室](https://www.umt.edu/climate/) (2023)。'
- en: '[2] Montana Mesonet Data, [Montana Mesonet Data Downloader](https://shiny.cfc.umt.edu/mesonet-download/)
    (2023).'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] 蒙大拿州Mesonet数据，[蒙大拿州Mesonet数据下载器](https://shiny.cfc.umt.edu/mesonet-download/)
    (2023)。'
- en: '[3] NOAA Great Lakes Environmental Research Laboratory — Ann Arbor, MI, USA,
    [Julian Date Calendar](https://www.glerl.noaa.gov/res/projects/ifyle/julian_date_calendar.html)
    (2023).'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '[3] NOAA大湖区环境研究实验室 — 安娜堡，美国，[Julian日期日历](https://www.glerl.noaa.gov/res/projects/ifyle/julian_date_calendar.html)
    (2023)。'
- en: '[4] NOAA, [Meteorological Versus Astronomical Seasons](https://www.ncei.noaa.gov/news/meteorological-versus-astronomical-seasons)
    (2016).'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '[4] NOAA，[气象季节与天文季节](https://www.ncei.noaa.gov/news/meteorological-versus-astronomical-seasons)
    (2016)。'
