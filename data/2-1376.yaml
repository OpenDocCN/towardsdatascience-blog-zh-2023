- en: Running Jaffle Shop dbt Project in Docker
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Docker中运行Jaffle Shop dbt项目
- en: 原文：[https://towardsdatascience.com/jaffle-shop-dbt-docker-93a9b14532a4](https://towardsdatascience.com/jaffle-shop-dbt-docker-93a9b14532a4)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/jaffle-shop-dbt-docker-93a9b14532a4](https://towardsdatascience.com/jaffle-shop-dbt-docker-93a9b14532a4)
- en: A containerised version of the popular Jaffle Shop dbt project
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 流行的Jaffle Shop dbt项目的容器化版本
- en: '[](https://gmyrianthous.medium.com/?source=post_page-----93a9b14532a4--------------------------------)[![Giorgos
    Myrianthous](../Images/ff4b116e4fb9a095ce45eb064fde5af3.png)](https://gmyrianthous.medium.com/?source=post_page-----93a9b14532a4--------------------------------)[](https://towardsdatascience.com/?source=post_page-----93a9b14532a4--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----93a9b14532a4--------------------------------)
    [Giorgos Myrianthous](https://gmyrianthous.medium.com/?source=post_page-----93a9b14532a4--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://gmyrianthous.medium.com/?source=post_page-----93a9b14532a4--------------------------------)[![Giorgos
    Myrianthous](../Images/ff4b116e4fb9a095ce45eb064fde5af3.png)](https://gmyrianthous.medium.com/?source=post_page-----93a9b14532a4--------------------------------)[](https://towardsdatascience.com/?source=post_page-----93a9b14532a4--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----93a9b14532a4--------------------------------)
    [Giorgos Myrianthous](https://gmyrianthous.medium.com/?source=post_page-----93a9b14532a4--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----93a9b14532a4--------------------------------)
    ·8 min read·Apr 28, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----93a9b14532a4--------------------------------)
    ·8分钟阅读·2023年4月28日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/90bb3052f4f1d0f374def43154a20afe.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/90bb3052f4f1d0f374def43154a20afe.png)'
- en: Photo by [Ryan Howerter](https://unsplash.com/@rhowerter?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/JXIFjYVbAS8?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[Ryan Howerter](https://unsplash.com/@rhowerter?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)的照片，来自[Unsplash](https://unsplash.com/photos/JXIFjYVbAS8?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)'
- en: If you are new to data build tool (dbt) you have probably come across the so
    called Jaffle Shop, a project used for testing purposes.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是数据构建工具（dbt）的新手，你可能已经遇到过所谓的Jaffle Shop，这是一个用于测试的项目。
- en: '`jaffle_shop` is a fictional ecommerce store. This dbt project transforms raw
    data from an app database into a customers and orders model ready for analytics.'
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`jaffle_shop` 是一个虚构的电子商务商店。这个dbt项目将应用数据库中的原始数据转换成一个适合分析的客户和订单模型。'
- en: ''
  id: totrans-10
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '- [Jaffle Shop GitHub project](https://github.com/dbt-labs/jaffle_shop)'
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '- [Jaffle Shop GitHub项目](https://github.com/dbt-labs/jaffle_shop)'
- en: One fundamental issue I observed with the Jaffle Shop project is that it expects
    users, who may be newcomers to dbt, to configure and host a local database for
    the dbt models to materialize.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我观察到的Jaffle Shop项目的一个根本问题是，它期望用户（可能是dbt的新手）配置并托管一个本地数据库，以便dbt模型能够生成。
- en: In this tutorial, I’ll demonstrate how to create a containerized version of
    the project using Docker. This will allow us to deploy a Postgres instance and
    configure the dbt project to read from and write to that database. I’ll also provide
    a link to a GitHub project I’ve created that will help you get all the services
    up and running in no time.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我将演示如何使用Docker创建项目的容器化版本。这将使我们能够部署一个Postgres实例，并将dbt项目配置为从该数据库读取和写入。我还会提供一个我创建的GitHub项目链接，它将帮助你迅速启动所有服务。
- en: '[**Subscribe to Data Pipeline**](https://thedatapipeline.substack.com/welcome)**,
    a newsletter dedicated to Data Engineering**'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[**订阅数据管道**](https://thedatapipeline.substack.com/welcome)**，这是一个专注于数据工程的新闻通讯**'
- en: Creating the Dockerfile and docker-compose.yml
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建Dockerfile和docker-compose.yml
- en: Let’s begin by defining the services we want to run through Docker. First, we’ll
    create a `[docker-compose.yml](https://github.com/gmyrianthous/jaffle_shop/blob/main/docker-compose.yml)`
    file where we'll define two services. The first service will be the Postgres database,
    and the second will be a custom service that we'll create in the next step using
    a Dockerfile.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始定义我们想要通过Docker运行的服务。首先，我们将创建一个`[docker-compose.yml](https://github.com/gmyrianthous/jaffle_shop/blob/main/docker-compose.yml)`文件，在其中定义两个服务。第一个服务是Postgres数据库，第二个服务是我们将在下一步中使用Dockerfile创建的自定义服务。
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The file specifies the version of Docker Compose being used (version 3.9). It
    defines two services, `postgres` and `dbt`, each with their own settings.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 该文件指定了使用的Docker Compose版本（3.9版）。它定义了两个服务，`postgres` 和 `dbt`，每个服务都有自己的设置。
- en: The `postgres` service is based on the official `postgres` Docker image version
    15.2-alpine. It sets the container name to `postgres`, maps port 5432 (the default
    port for Postgres) to the host machine, and sets environment variables for the
    Postgres user and password. The `healthcheck` section specifies a command to test
    if the container is healthy, and sets a timeout and retries for the check.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '`postgres`服务基于官方的`postgres` Docker镜像版本15.2-alpine。它将容器名称设置为`postgres`，将端口5432（Postgres的默认端口）映射到主机，并为Postgres用户和密码设置环境变量。`healthcheck`部分指定了一个命令来测试容器是否健康，并设置了检查的超时时间和重试次数。'
- en: The `dbt` service specifies a `dbt` container of the Docker image of current
    directory (using a Dockerfile). It mounts the current directory as a volume within
    the container, and specifies that it depends on the `postgres` service, and will
    only start once the `postgres` service is healthy.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '`dbt`服务指定了一个`dbt`容器，该容器使用当前目录的Docker镜像（使用Dockerfile）。它将当前目录挂载为容器中的一个卷，并指定它依赖于`postgres`服务，并且只有在`postgres`服务健康时才会启动。'
- en: In order to containerize the Jaffle Shop project, we need to create a `[Dockerfile](https://github.com/gmyrianthous/jaffle_shop/blob/main/Dockerfile)`
    that installs the necessary dependencies for both Python and dbt, and ensures
    that the container remains active once the environment has been set up.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 为了容器化Jaffle Shop项目，我们需要创建一个`[Dockerfile](https://github.com/gmyrianthous/jaffle_shop/blob/main/Dockerfile)`，该文件安装Python和dbt所需的依赖项，并确保环境设置完毕后容器保持活动状态。
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Configuring Postgres with dbt
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置Postgres与dbt
- en: To interact with dbt, we’ll use the dbt Command Line Interface (CLI). A directory
    containing a `[dbt_project.yml](https://github.com/gmyrianthous/jaffle_shop/blob/main/dbt_project.yml)`
    file is considered a dbt project by the dbt CLI.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要与dbt交互，我们将使用dbt命令行界面（CLI）。包含`[dbt_project.yml](https://github.com/gmyrianthous/jaffle_shop/blob/main/dbt_project.yml)`文件的目录被dbt
    CLI视为一个dbt项目。
- en: We'll create one and specify some basic configurations, such as the dbt project
    name and the `profile` to use (which we'll create in the next step). Additionally,
    we'll specify the paths containing the various dbt entities and provide configuration
    about their materialization.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建一个并指定一些基本配置，如dbt项目名称和要使用的`profile`（我们将在下一步中创建）。此外，我们将指定包含各种dbt实体的路径，并提供关于它们的物化配置。
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now the [](https://github.com/gmyrianthous/jaffle_shop/blob/main/profiles/profiles.yml)
    `[profiles.yml](https://github.com/gmyrianthous/jaffle_shop/blob/main/profiles/profiles.yml)`
    file is used to store dbt profiles. A profile consists of targets, each of which
    specifying the connection details and credentials for the database or the data
    warehouse.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在`[profiles.yml](https://github.com/gmyrianthous/jaffle_shop/blob/main/profiles/profiles.yml)`文件用于存储dbt配置文件。一个配置文件包含多个目标，每个目标指定了数据库或数据仓库的连接详细信息和凭据。
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This file defines a profile named `jaffle_shop` that specifies the connection
    details for a Postgres database running on a Docker container named `postgres`.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 该文件定义了一个名为`jaffle_shop`的配置文件，指定了运行在名为`postgres`的Docker容器上的Postgres数据库的连接详细信息。
- en: '`jaffle_shop`: This is the name of the profile. It''s an arbitrary name chosen
    by the user to identify the profile.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`jaffle_shop`：这是配置文件的名称。它是用户为了识别配置文件而选择的任意名称。'
- en: '`target: dev`: This specifies the default target for the profile, which in
    this case is named `dev`.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`target: dev`：这指定了配置文件的默认目标，在这种情况下名为`dev`。'
- en: '`outputs`: This section lists the output configurations for the profile, with
    the default output configuration named `dev`.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`outputs`：这一部分列出了配置文件的输出配置，默认的输出配置名为`dev`。'
- en: '`dev`: This specifies the connection details for the `dev` target, which uses
    a Postgres database.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dev`：这指定了`dev`目标的连接详细信息，该目标使用Postgres数据库。'
- en: '`type: postgres`: This specifies the type of the output, which in this case
    is a Postgres database.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`type: postgres`：这指定了输出的类型，在这种情况下是Postgres数据库。'
- en: '`host: postgres`: This specifies the hostname or IP address of the Postgres
    database server.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`host: postgres`：这指定了Postgres数据库服务器的主机名或IP地址。'
- en: '`user: postgres`: This specifies the username used to connect to the Postgres
    database.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`user: postgres`：这指定了用于连接到Postgres数据库的用户名。'
- en: '`password: postgres`: This specifies the password used to authenticate with
    the Postgres database.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`password: postgres`：这指定了用于认证Postgres数据库的密码。'
- en: '`port: 5432`: This specifies the port number on which the Postgres database
    is listening.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`port: 5432`：这指定了Postgres数据库监听的端口号。'
- en: '`dbname: postgres`: This specifies the name of the Postgres database to connect
    to.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dbname: postgres`：这指定了要连接的 Postgres 数据库的名称。'
- en: '`schema: public`: This specifies the schema name to use when executing queries
    against the database.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`schema: public`：这指定了在对数据库执行查询时要使用的模式名称。'
- en: '`threads: 1`: This specifies the number of threads to use when running dbt
    tasks.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`threads: 1`：这指定了在运行 dbt 任务时要使用的线程数。'
- en: Jaffle Shop dbt models and seeds
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Jaffle Shop dbt 模型和 seeds
- en: The source data for Jaffle Shop project consists of csv files for customers,
    payments and orders. In dbt, we can load this data into our database through [seeds](https://github.com/gmyrianthous/jaffle_shop/tree/main/seeds).
    We then use this source data to build [dbt models](https://github.com/gmyrianthous/jaffle_shop/tree/main/models)
    on top of it.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Jaffle Shop 项目的源数据包括客户、支付和订单的 csv 文件。在 dbt 中，我们可以通过 [seeds](https://github.com/gmyrianthous/jaffle_shop/tree/main/seeds)
    将这些数据加载到数据库中。然后，我们利用这些源数据在其基础上构建 [dbt 模型](https://github.com/gmyrianthous/jaffle_shop/tree/main/models)。
- en: 'Here’s an example model that generates some [metrics for our customers](https://github.com/gmyrianthous/jaffle_shop/blob/main/models/customers.sql):'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个示例模型，它生成一些 [客户的指标](https://github.com/gmyrianthous/jaffle_shop/blob/main/models/customers.sql)：
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Running the services via Docker
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过 Docker 运行服务
- en: 'Now let’s build and spin up our Docker services. To do so, we’ll simply need
    to run the following commands:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们构建并启动我们的 Docker 服务。为此，我们只需运行以下命令：
- en: '[PRE5]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The commands above will run a Postgres instance and then build the dbt resources
    of Jaffle Shop as specified in the repository. These containers will remain up
    and running so that you can:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将运行一个 Postgres 实例，然后构建 Jaffle Shop 的 dbt 资源，如仓库中所述。这些容器将保持运行，以便你可以：
- en: Query the Postgres database and the tables created out of dbt models
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查询 Postgres 数据库及从 dbt 模型创建的表
- en: Run further dbt commands via dbt CLI
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过 dbt CLI 运行进一步的 dbt 命令
- en: Running dbt commands via CLI
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过 CLI 运行 dbt 命令
- en: The dbt container, has built the specified models already. However, we can still
    access the container and run dbt commands via dbt CLI, either for new or modified
    models. To do so, we will first need to access the container.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: dbt 容器已经构建了指定的模型。然而，我们仍然可以访问容器并通过 dbt CLI 运行 dbt 命令，无论是对于新模型还是修改过的模型。为此，我们需要首先访问容器。
- en: 'The following command will list all active containers:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令将列出所有活动的容器：
- en: '[PRE6]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Copy the id of `dbt` container, and then enter it when running the next command:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 复制 `dbt` 容器的 id，然后在运行下一个命令时输入它：
- en: '[PRE7]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The command above will essentially give you access to the container’s bash which
    means you are now able to run dbt commands.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的命令将基本上为你提供对容器的 bash 访问权限，这意味着你现在可以运行 dbt 命令。
- en: '[PRE8]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Note that since we have mounted the local directory to the running container,
    any changes in the local directory will be reflected to the container immediately.
    This means you are also able to create new models or modify existing ones and
    then go into the runnning container and build models, run tests, etc.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，由于我们已将本地目录挂载到正在运行的容器中，因此本地目录中的任何更改将立即反映到容器中。这意味着你也可以创建新的模型或修改现有的模型，然后进入正在运行的容器并构建模型、运行测试等。
- en: Querying the dbt models on Postgres database
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查询 Postgres 数据库中的 dbt 模型
- en: You are also able to query the postgres database and the dbt models or snapshots
    created on it. In the same way, we will have to enter the running postgres container
    in order to be able to query the database directly.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以查询 postgres 数据库及其上创建的 dbt 模型或快照。同样，我们将需要进入正在运行的 postgres 容器，以便直接查询数据库。
- en: '[PRE9]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'We will then use `psql`, a terminal-based interface for PostgreSQL that allows
    us to query the database:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们将使用 `psql`，这是一个基于终端的 PostgreSQL 界面，允许我们查询数据库：
- en: '[PRE10]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The two commands shared below can be used to list tables and views respectively:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 以下两个命令分别用于列出表和视图：
- en: '[PRE11]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'And you can now query dbt models via a `SELECT` query:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以通过 `SELECT` 查询来查询 dbt 模型：
- en: '[PRE12]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Getting the full code
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 获取完整代码
- en: I’ve created a GitHub repository you can clone on your local machine and run
    the containerised version Jaffle Shop dbt project quickly. You can find the project
    as well as the code shared in this tutorial in the following link.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经创建了一个 GitHub 仓库，你可以在本地机器上克隆它，并快速运行容器化的 Jaffle Shop dbt 项目。你可以在以下链接中找到项目及本教程中共享的代码。
- en: '[](https://github.com/gmyrianthous/jaffle_shop?source=post_page-----93a9b14532a4--------------------------------)
    [## GitHub - gmyrianthous/jaffle_shop: This is a containerised version of Jaffle
    Shop dbt project'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://github.com/gmyrianthous/jaffle_shop?source=post_page-----93a9b14532a4--------------------------------)
    [## GitHub - gmyrianthous/jaffle_shop：这是 Jaffle Shop dbt 项目的容器化版本'
- en: This is a containerised version of the popular Jaffle Shop dbt project published
    by dbt Labs. You can use this project…
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 这是由 dbt Labs 发布的流行 Jaffle Shop dbt 项目的容器化版本。你可以使用这个项目…
- en: github.com](https://github.com/gmyrianthous/jaffle_shop?source=post_page-----93a9b14532a4--------------------------------)
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '[github.com](https://github.com/gmyrianthous/jaffle_shop?source=post_page-----93a9b14532a4--------------------------------)'
- en: Final Thoughts
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 最后的思考
- en: Data build tool (dbt) is one of the rapidly growing technologies in modern data
    stacks. If you’re just starting to learn how to use dbt, I highly recommend experimenting
    with the Jaffle Shop project. It’s a self-contained project created by dbt Labs
    for testing and experimentation purposes.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 数据构建工具 (dbt) 是现代数据技术栈中快速增长的技术之一。如果你刚开始学习如何使用 dbt，我强烈推荐尝试 Jaffle Shop 项目。这是一个由
    dbt Labs 创建的自包含项目，用于测试和实验目的。
- en: dbt is a tool commonly used by data analysts and analytics engineers (in addition
    to data engineers), and it requires a connection to a database or data warehouse.
    However, many analysts might not be comfortable configuring and initializing a
    local database.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: dbt 是数据分析师和分析工程师（除了数据工程师）常用的工具，它需要连接到数据库或数据仓库。然而，许多分析师可能不习惯配置和初始化本地数据库。
- en: In this article, we demonstrate how to get started with dbt and run all the
    services required to materialize dbt models on a local Postgres database. I hope
    this tutorial will help you get your dbt project and database up and running as
    quickly as possible. If you experience any issues running the project, please
    let me know in the comments, and I’ll do my best to help you debug your code and
    configuration.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们演示了如何开始使用 dbt 并运行所有必要的服务，以在本地 Postgres 数据库上实现 dbt 模型。我希望这个教程能帮助你尽快启动你的
    dbt 项目和数据库。如果在运行项目时遇到任何问题，请在评论中告知我，我会尽力帮助你调试代码和配置。
- en: 👉 [**Subscribe to Data Pipeline**](https://thedatapipeline.substack.com/welcome)**,
    a newsletter dedicated to Data Engineering**
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 👉 [**订阅 Data Pipeline**](https://thedatapipeline.substack.com/welcome)**，这是一个专注于数据工程的新闻通讯**
- en: 👇**Related articles you may also like** 👇
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 👇**相关的文章你也可能喜欢** 👇
- en: '[](/dbt-cli-model-selection-52ddd038d8b2?source=post_page-----93a9b14532a4--------------------------------)
    [## Model Selection For dbt CLI'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/dbt-cli-model-selection-52ddd038d8b2?source=post_page-----93a9b14532a4--------------------------------)
    [## dbt CLI 的模型选择'
- en: A complete cheatsheet for selecting specific models when running dbt commands
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 运行 dbt 命令时选择特定模型的完整备忘单
- en: 'towardsdatascience.com](/dbt-cli-model-selection-52ddd038d8b2?source=post_page-----93a9b14532a4--------------------------------)
    [](/etl-vs-elt-68e221d78719?source=post_page-----93a9b14532a4--------------------------------)
    [## ETL vs ELT: What’s the Difference?'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/dbt-cli-model-selection-52ddd038d8b2?source=post_page-----93a9b14532a4--------------------------------)
    [](/etl-vs-elt-68e221d78719?source=post_page-----93a9b14532a4--------------------------------)
    [## ETL 与 ELT：有什么区别？
- en: A comparison between ETL and ELT in the context of Data Engineering
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据工程背景下的 ETL 与 ELT 比较
- en: towardsdatascience.com](/etl-vs-elt-68e221d78719?source=post_page-----93a9b14532a4--------------------------------)
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/etl-vs-elt-68e221d78719?source=post_page-----93a9b14532a4--------------------------------)
