- en: Generating Fake Data for Data Analytics
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为数据分析生成虚假数据
- en: 原文：[https://towardsdatascience.com/generating-fake-data-for-data-analytics-19cd5ed82a1](https://towardsdatascience.com/generating-fake-data-for-data-analytics-19cd5ed82a1)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/generating-fake-data-for-data-analytics-19cd5ed82a1](https://towardsdatascience.com/generating-fake-data-for-data-analytics-19cd5ed82a1)
- en: If you don’t have real data, you got to fake it!
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如果你没有真实数据，那就伪造吧！
- en: '[](https://weimenglee.medium.com/?source=post_page-----19cd5ed82a1--------------------------------)[![Wei-Meng
    Lee](../Images/10fc13e8a6858502d6a7b89fcaad7a10.png)](https://weimenglee.medium.com/?source=post_page-----19cd5ed82a1--------------------------------)[](https://towardsdatascience.com/?source=post_page-----19cd5ed82a1--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----19cd5ed82a1--------------------------------)
    [Wei-Meng Lee](https://weimenglee.medium.com/?source=post_page-----19cd5ed82a1--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://weimenglee.medium.com/?source=post_page-----19cd5ed82a1--------------------------------)[![Wei-Meng
    Lee](../Images/10fc13e8a6858502d6a7b89fcaad7a10.png)](https://weimenglee.medium.com/?source=post_page-----19cd5ed82a1--------------------------------)[](https://towardsdatascience.com/?source=post_page-----19cd5ed82a1--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----19cd5ed82a1--------------------------------)
    [Wei-Meng Lee](https://weimenglee.medium.com/?source=post_page-----19cd5ed82a1--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----19cd5ed82a1--------------------------------)
    ·8 min read·Mar 14, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----19cd5ed82a1--------------------------------)
    ·阅读时间 8 分钟·2023年3月14日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/50a67f9bb4a4499679e187efc9c4e02f.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/50a67f9bb4a4499679e187efc9c4e02f.png)'
- en: Photo by [Leif Christoph Gottwald](https://unsplash.com/@project2204?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[Leif Christoph Gottwald](https://unsplash.com/@project2204?utm_source=medium&utm_medium=referral)
    的照片，来自 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)'
- en: In the world of data analytics, getting your hands on a good dataset is of paramount
    importance. In the real world, you probably have access to a lot of uncleaned
    data that you likely need to spend some time cleaning. What if you do not have
    the required data and wanted to hack something out quickly for a proof-of-concept
    demo? In this type of situation, you often have to cook up your own data, and
    at the same time you need your data to have some degree of realism. So what do
    you do? Do you painstakingly make up the data manually, or is there an automated
    way of doing things?
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据分析的世界里，获取一个好的数据集至关重要。在现实世界中，你可能会接触到大量未清理的数据，你可能需要花费一些时间来清理。如果你没有所需的数据并且想要快速制作一个概念验证演示怎么办？在这种情况下，你通常需要自己制作数据，同时你需要这些数据具有一定的现实感。那么你会怎么做？是手动费心制作数据，还是有一种自动化的方式？
- en: In this article, I will show you some cool ways to fake your data, and make
    them look real!
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我将展示一些有趣的方式来伪造数据，并使其看起来真实！
- en: Generating Names
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成名字
- en: 'To generate some fake names, you can use the `names` package. To use it, first
    you need to install it:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要生成一些虚假的名字，你可以使用 `names` 包。要使用它，首先你需要安装它：
- en: '`!pip install names`'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '`!pip install names`'
- en: 'You can now use the various functions in the package to generate gender-specific
    names:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以使用包中的各种函数来生成性别特定的名字：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Here are some names generated:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些生成的名字：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Generating UUIDs
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成 UUID
- en: Besides names, another type of data that you might want to generate is UUIDs.
    An **UUID** (**Universal Unique Identifier**) is a 128-bit value used to uniquely
    identify an object or entity on the internet. In the mobile world, UUIDs are often
    used to identify apps installed on devices.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 除了名字，你可能还想生成另一种数据类型——UUID。**UUID**（**通用唯一标识符**）是一个 128 位的值，用于唯一标识互联网上的对象或实体。在移动领域，UUID
    通常用于识别安装在设备上的应用程序。
- en: 'To generate sample UUIDs, you can use the `uuid` package:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要生成示例 UUID，你可以使用 `uuid` 包：
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You can convert the UUID generated to a string:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将生成的 UUID 转换为字符串：
- en: '[PRE3]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Here is a sample UUID generated:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个生成的 UUID 示例：
- en: '[PRE4]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The `Faker` Package
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '`Faker` 包'
- en: 'When generating fake data using Python, the `faker` package is definitely worth
    mentioning. The `faker` package generates all sorts of fake data for your usage.
    Data that you can generate include:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 Python 生成虚假数据时，`faker` 包绝对值得一提。`faker` 包生成各种虚假数据供你使用。你可以生成的数据包括：
- en: address
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 地址
- en: barcode
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 条形码
- en: credit card information
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 信用卡信息
- en: ISBN
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ISBN
- en: phone number
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电话号码
- en: and more!
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 等等！
- en: In the following sections, I will show you how to generate some commonly needed
    data.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我将向你展示如何生成一些常用的数据。
- en: Generating User Profile
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生成用户资料
- en: 'The `faker` package can generate user profiles, such as username, sex, address,
    email, and date of birth. The following code snippet creates a simple profile
    for a male person:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`faker`包可以生成用户资料，例如用户名、性别、地址、电子邮件和出生日期。以下代码片段创建了一个男性的简单资料：'
- en: '[PRE5]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The output is a dictionary containing the various details of a male person:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 输出是一个包含男性详细信息的字典：
- en: '[PRE6]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Generating Dates
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生成日期
- en: One particular type of data I want to generate is the date of birth (DOB) of
    a person. When storing details of a person, it is always recommended to store
    the DOB rather than the age (for very obvious reasons).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我特别想生成的一种数据是一个人的出生日期（DOB）。在存储个人详细信息时，总是推荐存储出生日期而不是年龄（出于非常明显的原因）。
- en: 'Using the `faker` package, you can generate the birth date of a person that
    is between 18 and 60 years old:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`faker`包，你可以生成一个年龄在18到60岁之间的人的出生日期：
- en: '[PRE7]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The data returned is a `date` object:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的数据是一个`date`对象：
- en: '[PRE8]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'If you want to convert the result to a string, you can use the `strftime()`
    function:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想将结果转换为字符串，可以使用`strftime()`函数：
- en: '[PRE9]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Note that every time you call a function from the `Faker` object, a new set
    of data is generated. If you want the data generated to be deterministic (i.e
    always the same), you can use the `seed()` function, like this: `Faker.seed(0)`.'
  id: totrans-47
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意，每次你调用`Faker`对象中的一个函数时，都会生成一组新的数据。如果你希望生成的数据是确定性的（即总是相同的），你可以使用`seed()`函数，如：`Faker.seed(0)`。
- en: Generating Locations
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生成位置
- en: 'The next type of data I want to generate is location data. For example, you
    want to get the latitude and longitude of a location in the US. You can use the
    `local_latlng()` function and specify the `country_code` parameter:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我想生成的下一种数据是位置数据。例如，你想获取美国某个位置的经纬度。你可以使用`local_latlng()`函数并指定`country_code`参数：
- en: '[PRE10]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The function returns a location known to exist on land in a country specified
    by `country_code`. The informations are enclosed is a tuple that looks like this:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数返回一个在`country_code`指定的国家中已知存在的地点。信息以一个元组的形式返回，如下所示：
- en: '[PRE11]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'If you only want the latitude and longitude and not the rest, set `coords_only`
    to `True`:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只需要经纬度而不需要其他信息，将`coords_only`设置为`True`：
- en: '[PRE12]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The `country_code` parameters accepts values from the `land_coords` constant,
    such as `AU` for Australia:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '`country_code`参数接受来自`land_coords`常量的值，例如`AU`代表澳大利亚：'
- en: '[PRE13]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: I couldn’t find the definition for the `land_coords` constant from the Faker
    documentation, but you can reference the `*land_coords*`variable defined in [https://rdrr.io/github/LuYang19/faker/src/R/init.R](https://rdrr.io/github/LuYang19/faker/src/R/init.R).
  id: totrans-57
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我在Faker文档中找不到`land_coords`常量的定义，但你可以参考[https://rdrr.io/github/LuYang19/faker/src/R/init.R](https://rdrr.io/github/LuYang19/faker/src/R/init.R)中定义的`*land_coords*`变量。
- en: 'If you want a pair of coordinates that is guaranteed to exist on land, use
    the `location_on_land()` function:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要一对保证存在于陆地上的坐标，可以使用`location_on_land()`函数：
- en: '[PRE14]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Generating Addresses
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生成地址
- en: 'If you want generate some sample addresses, use the `address()`, `current_country()`,
    `city()`, `country()`, and `country_code()` functions:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想生成一些示例地址，可以使用`address()`、`current_country()`、`city()`、`country()`和`country_code()`函数：
- en: '[PRE15]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Locales Support in Faker
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Faker中的区域设置支持
- en: 'So far all the names and addresses generated are in English. However, the `faker`
    package also supports different locales. The list of locales supported can be
    found from: [https://faker.readthedocs.io/en/master/locales.html](https://faker.readthedocs.io/en/master/locales.html).'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，生成的所有名称和地址都是英语的。然而，`faker`包也支持不同的区域设置。支持的区域设置列表可以在以下网址找到：[https://faker.readthedocs.io/en/master/locales.html](https://faker.readthedocs.io/en/master/locales.html)。
- en: 'The following figure shows an example locale — `zh_CN`:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了一个示例区域设置——`zh_CN`：
- en: '![](../Images/d2545a338ffe671e76d8219e89d8168b.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d2545a338ffe671e76d8219e89d8168b.png)'
- en: All images by author
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 所有图片均由作者提供
- en: 'For example, in the `zh_CN` locale, you can find the following providers:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在`zh_CN`区域设置中，你可以找到以下提供者：
- en: '`faker.providers.address`'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`faker.providers.address`'
- en: '`faker.providers.company`'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`faker.providers.company`'
- en: '`faker.providers.date_time`'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`faker.providers.date_time`'
- en: '`faker.providers.internet`'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`faker.providers.internet`'
- en: '`faker.providers.job`'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`faker.providers.job`'
- en: '`faker.providers.lores`'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`faker.providers.lores`'
- en: '`faker.providers.person`'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`faker.providers.person`'
- en: '`faker.providers.phone_number`'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`faker.providers.phone_number`'
- en: '`faker.providers.ssn`'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`faker.providers.ssn`'
- en: 'This means that all the above listed providers support the `zh_CN` locale.
    Take the `faker.providers.address` ([https://faker.readthedocs.io/en/master/locales/zh_CN.html#faker-providers-address](https://faker.readthedocs.io/en/master/locales/zh_CN.html#faker-providers-address))
    as an example. When instantiating a `Faker` object, you can pass in one or more
    locales:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着上述所有提供者都支持`zh_CN`地区设置。以`faker.providers.address` ([https://faker.readthedocs.io/en/master/locales/zh_CN.html#faker-providers-address](https://faker.readthedocs.io/en/master/locales/zh_CN.html#faker-providers-address))为例。当实例化`Faker`对象时，可以传入一个或多个地区设置：
- en: '[PRE16]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The above `address()` function returns the address in Chinese:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 上述`address()`函数返回中文地址：
- en: '[PRE17]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'If you use the `zh_CN` locale, some functions will be tied to this locale,
    such as:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用`zh_CN`地区设置，一些函数将绑定到该地区设置，例如：
- en: '`fake.name()`'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fake.name()`'
- en: '`fake.address()`'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fake.address()`'
- en: '`fake.current_country()`'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fake.current_country()`'
- en: 'Here are some examples:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些示例：
- en: '[PRE18]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The address results will be those locations in China.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 地址结果将是中国的这些地点。
- en: 'Calling other functions such as `fake.country()` will return other countries
    but the result will be in Chinese (based on the `zh-CN` locale):'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 调用其他函数，如`fake.country()`将返回其他国家，但结果将以中文显示（基于`zh-CN`地区设置）：
- en: '[PRE19]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 越南 is Vietnam.
  id: totrans-91
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 越南就是Vietnam。
- en: 'You can also generate Chinese names using the `zh_CN` locale:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以使用`zh_CN`地区设置生成中文姓名：
- en: '[PRE20]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Here is a sample output of the above code snippet:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是上述代码片段的示例输出：
- en: '[PRE21]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Putting Them Altogether
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 汇总它们
- en: With all the ways to generate the different types of fake data, I want to put
    them altogether so that I can perform some data analytics on them.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 使用所有生成不同类型虚假数据的方法，我想把它们汇总在一起，以便进行一些数据分析。
- en: 'The following code snippet generates 1000 sets of the following data:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段生成1000组以下数据：
- en: UUID
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: UUID
- en: User name
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户名
- en: Latitude, longitude, and country from one of the seven countries
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自七个国家中的一个的纬度、经度和国家
- en: Gender
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 性别
- en: Data of birth
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 出生日期
- en: '[PRE22]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'I then combined the 1000 sets of data into a Pandas DataFrame:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我将1000组数据合并到一个Pandas DataFrame中：
- en: '[PRE23]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The dataframe now contains 1000 fictitious user accounts and their personal
    details like app ID, location information, gender, and DOB:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 数据框现在包含1000个虚构的用户账户及其个人详细信息，如应用ID、位置信息、性别和出生日期：
- en: '![](../Images/f9c84aa461c95f3894f4c6a0d879f22b.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f9c84aa461c95f3894f4c6a0d879f22b.png)'
- en: Plotting a map
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绘制地图
- en: 'With the latitude and longitude, it would be interesting to plot the geographical
    locations of my users. For this I used Folium:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 使用纬度和经度，绘制用户的地理位置会很有趣。为此，我使用了Folium：
- en: '[PRE24]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[](/visualization-in-python-visualizing-geospatial-data-122bf85d128f?source=post_page-----19cd5ed82a1--------------------------------)
    [## Visualization in Python —Visualizing Geospatial Data'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/visualization-in-python-visualizing-geospatial-data-122bf85d128f?source=post_page-----19cd5ed82a1--------------------------------)
    [## Python中的可视化 — 可视化地理空间数据'
- en: Learn how to use folium to easily display maps and markers
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 学习如何使用folium轻松显示地图和标记
- en: towardsdatascience.com](/visualization-in-python-visualizing-geospatial-data-122bf85d128f?source=post_page-----19cd5ed82a1--------------------------------)
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/visualization-in-python-visualizing-geospatial-data-122bf85d128f?source=post_page-----19cd5ed82a1--------------------------------)'
- en: 'Here’s the map showing the distribution of my users:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 这是显示用户分布的地图：
- en: '![](../Images/c4bbf143ad1163f130531532f73b8cd6.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c4bbf143ad1163f130531532f73b8cd6.png)'
- en: 'I can zoom into the map:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以放大地图：
- en: '![](../Images/43f3c20c5001cf6e963ce9f00be85059.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/43f3c20c5001cf6e963ce9f00be85059.png)'
- en: 'I can also change the tilesets:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我还可以更改图层集：
- en: '![](../Images/a42066beed010006357b69a864a0e64d.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a42066beed010006357b69a864a0e64d.png)'
- en: Plotting pie chart
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绘制饼图
- en: 'I can visualize where my users are from:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以可视化我的用户来自哪里：
- en: '[PRE25]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '![](../Images/b2faa2463ba28ca7946e9cc6465b44f5.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b2faa2463ba28ca7946e9cc6465b44f5.png)'
- en: 'I could also make the pie chart more descriptive:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 我还可以使饼图更具描述性：
- en: '[PRE26]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '![](../Images/e349f316c94299e2d9cf41678d823bfb.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e349f316c94299e2d9cf41678d823bfb.png)'
- en: Plotting bar chart
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绘制条形图
- en: 'The total users from each country can also be plotted using a bar chart:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 每个国家的总用户数也可以通过条形图绘制：
- en: '[PRE27]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'From the chart you can see that Great Britain has the most number of users
    while China has the least:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 从图表中可以看到，大不列颠的用户最多，而中国的用户最少：
- en: '![](../Images/2cdd221dd33cfa1c40df1df6d9d2beba.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2cdd221dd33cfa1c40df1df6d9d2beba.png)'
- en: Plotting histogram
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绘制直方图
- en: 'I can also find out about the age distribution of my users. For this, I need
    to first calculate their current age based on their DOB:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 我还可以了解用户的年龄分布。为此，我需要先根据他们的出生日期计算他们的当前年龄：
- en: '[PRE28]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The dataframe now has an additional column showing the age of each user:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 数据框现在增加了一列，显示每个用户的年龄：
- en: '![](../Images/6e5d5014270a16a6264e0dadf2b846ee.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6e5d5014270a16a6264e0dadf2b846ee.png)'
- en: 'You can now plot a histogram showing the age distribution:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以绘制一个显示年龄分布的直方图：
- en: '[PRE29]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '![](../Images/e0125ec918f69eeb4f38fbc460fd402b.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e0125ec918f69eeb4f38fbc460fd402b.png)'
- en: '**If you like reading my articles and that it helped your career/study, please
    consider signing up as a Medium member. It is $5 a month, and it gives you unlimited
    access to all the articles (including mine) on Medium. If you sign up using the
    following link, I will earn a small commission (at no additional cost to you).
    Your support means that I will be able to devote more time on writing articles
    like this.**'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果你喜欢阅读我的文章并且对你的职业/学习有帮助，请考虑注册成为 Medium 会员。每月$5，可以无限访问 Medium 上的所有文章（包括我的文章）。如果你使用以下链接注册，我将获得一小笔佣金（对你没有额外费用）。你的支持意味着我可以花更多时间写这样的文章。**'
- en: '[](https://weimenglee.medium.com/membership?source=post_page-----19cd5ed82a1--------------------------------)
    [## Join Medium with my referral link - Wei-Meng Lee'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://weimenglee.medium.com/membership?source=post_page-----19cd5ed82a1--------------------------------)
    [## 通过我的推荐链接加入 Medium - 韦孟李'
- en: Read every story from Wei-Meng Lee (and thousands of other writers on Medium).
    Your membership fee directly supports…
  id: totrans-143
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阅读韦孟李的每个故事（以及 Medium 上其他成千上万的作家）。你的会员费直接支持…
- en: weimenglee.medium.com](https://weimenglee.medium.com/membership?source=post_page-----19cd5ed82a1--------------------------------)
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: weimenglee.medium.com](https://weimenglee.medium.com/membership?source=post_page-----19cd5ed82a1--------------------------------)
- en: Summary
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: I hope you are now better equipped to generate any additional data that your
    projects need. Generating realistic demo data not only allows you to test your
    algorithms more accurately, it also provides more realism when using them for
    demos. Let me know in the comments what other types of data you usually need to
    generate!
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你现在更有能力生成项目所需的任何额外数据。生成逼真的演示数据不仅能让你更准确地测试算法，还能在演示中提供更多的真实感。请在评论中告诉我你通常需要生成其他类型的数据！
