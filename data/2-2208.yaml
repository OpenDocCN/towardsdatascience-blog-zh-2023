- en: Unleashing the Power of Prompt Engineering for Data Scientists
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发掘数据科学家的提示工程潜力
- en: 原文：[https://towardsdatascience.com/unleashing-the-power-of-prompt-engineering-for-data-scientists-16b6d1f2bf85](https://towardsdatascience.com/unleashing-the-power-of-prompt-engineering-for-data-scientists-16b6d1f2bf85)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/unleashing-the-power-of-prompt-engineering-for-data-scientists-16b6d1f2bf85](https://towardsdatascience.com/unleashing-the-power-of-prompt-engineering-for-data-scientists-16b6d1f2bf85)
- en: How and why write effective prompts if you work with data
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何以及为什么在数据工作中编写有效的提示
- en: '[](https://federicotrotta.medium.com/?source=post_page-----16b6d1f2bf85--------------------------------)[![Federico
    Trotta](../Images/e997e3a96940c16ab5071629016d82fd.png)](https://federicotrotta.medium.com/?source=post_page-----16b6d1f2bf85--------------------------------)[](https://towardsdatascience.com/?source=post_page-----16b6d1f2bf85--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----16b6d1f2bf85--------------------------------)
    [Federico Trotta](https://federicotrotta.medium.com/?source=post_page-----16b6d1f2bf85--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://federicotrotta.medium.com/?source=post_page-----16b6d1f2bf85--------------------------------)[![Federico
    Trotta](../Images/e997e3a96940c16ab5071629016d82fd.png)](https://federicotrotta.medium.com/?source=post_page-----16b6d1f2bf85--------------------------------)[](https://towardsdatascience.com/?source=post_page-----16b6d1f2bf85--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----16b6d1f2bf85--------------------------------)
    [Federico Trotta](https://federicotrotta.medium.com/?source=post_page-----16b6d1f2bf85--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----16b6d1f2bf85--------------------------------)
    ·18 min read·Jun 7, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于[数据科学之路](https://towardsdatascience.com/?source=post_page-----16b6d1f2bf85--------------------------------)
    ·18分钟阅读·2023年6月7日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/861db2c8c6d2d4a0826e0d619b005bff.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/861db2c8c6d2d4a0826e0d619b005bff.png)'
- en: Image by [Gerd Altmann](https://pixabay.com/it/users/geralt-9301/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=4126485)
    on [Pixabay](https://pixabay.com/it//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=4126485)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[Gerd Altmann](https://pixabay.com/it/users/geralt-9301/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=4126485)提供，来源于[Pixabay](https://pixabay.com/it//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=4126485)
- en: Thanks to GPT models, prompt engineering is becoming a field of interest in
    Data Science. In the beginning, we’ve seen a lot of curious people across the
    globe testing ChatGPT to trick it. Then, while this trend has (finally!) finished,
    the movement of people using it to automate boring stuff or to be helped with
    general tasks, is steadily increased.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 多亏了GPT模型，提示工程正成为数据科学中的一个重要领域。最初，我们看到世界各地许多好奇的人在测试ChatGPT以尝试欺骗它。然后，虽然这种趋势（终于！）结束了，但使用它来自动化无聊的任务或帮助处理一般任务的人数稳步增加。
- en: Developers and Data Scientists are the ones that are having great benefits from
    using prompt systems like ChatGPT. So, in this article, we’ll see an overview
    of prompt engineering and how to write efficient prompts for Data Scientists.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 开发人员和数据科学家从使用像ChatGPT这样的提示系统中受益良多。因此，在本文中，我们将概述提示工程及其如何为数据科学家编写高效提示。
- en: I know you’re benefiting a lot from ChatGPT, don’t you?! But the truth is that
    sometimes we’re not just able to obtain what we’d like from it as Data Scientists.
    So, let’s see how we can improve our prompt skills with some easy precautions.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道你从ChatGPT中受益良多，对吧？！但事实是，有时候我们作为数据科学家并不能完全从中获得我们想要的结果。所以，让我们看看如何通过一些简单的预防措施来提高我们的提示技能。
- en: 'This is what you’ll read in this article:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这篇文章的内容如下：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The importance of prompt engineering today
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 今天提示工程的重要性
- en: The word of the last 150 years could be “automation”. In fact, the world has
    evolved from making stuff by hand to assembly lines. And while crafts are still
    (highly) valuable, “mass production” has become a word coupled with “automation”.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 过去150年的关键词可能是“自动化”。事实上，世界已经从手工制作的产品演变为生产线。虽然手工艺仍然（高度）有价值，但“批量生产”已成为与“自动化”相伴的词汇。
- en: The mechanization and automation of the work are increasing and this has permeated
    different fields, not only the ones directly involved in producing goods like,
    for example, manufacturing or agriculture.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 工作的机械化和自动化在不断增加，这种趋势渗透到了各个领域，不仅限于直接涉及生产商品的领域，例如制造业或农业。
- en: 'If we take a look at a Software, for example, the first thing that we should
    see is automation. When I was learning Python about three years ago a mentor,
    reviewing my first project, told me: “Federico, developing software means automating
    stuff!”. And, if you’re asking, then yes: my first project was a mess (as with
    everything we do for the first time!).'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们以软件为例，第一个应该看到的就是自动化。当我大约三年前学习Python时，一位导师在审查我的第一个项目时告诉我：“Federico，开发软件意味着自动化事物！”
    如果你在问，是的：我的第一个项目是一团糟（就像我们做的所有第一次的事情一样！）。
- en: 'Anyway, here’s the truth: human beings have evolved with a clear goal: automating
    stuff. This can be related to automating boring stuff or “hard work”. It doesn’t
    matter; the point is the direction towards automation.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，真相是：人类进化的明确目标是：自动化事物。这可以与自动化无聊的事情或“艰苦的工作”相关。无论如何，关键在于朝着自动化的方向前进。
- en: 'In this scenario, prompt engineering is just the latest tool that can help
    us automate stuff. On a “code sight,” this means automating the automatable: software
    development is automation at its core, and using prompt engineering means pushing
    automation even harder.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，提示工程只是最新的帮助我们自动化事物的工具。在“代码视角”下，这意味着自动化可自动化的事物：软件开发本质上是自动化，使用提示工程意味着进一步推动自动化。
- en: The truth, in fact, is that even in software development there are boring tasks,
    even if, for example, we’ve created classes that can be imported (but need to
    be modified a little bit).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，即使在软件开发中也存在无聊的任务，即使，例如，我们已经创建了可以导入的类（但需要稍作修改）。
- en: 'Think of that for a moment: as a Data Scientist, how many prototypes per week
    do you develop? And how much time do you have to develop them?'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 想一想：作为一个数据科学家，你每周开发多少个原型？你有多少时间来开发它们？
- en: You create a prototype and then what? The specifications of the projects change,
    the customer changes ideas, your boss is not satisfied…well, you named it.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 你创建一个原型，然后呢？项目的规格发生变化，客户改变主意，你的老板不满意……好吧，你自己说吧。
- en: So, why should we spend a lot of effort on low-value but time-consuming tasks
    rather than automate them? Here are the core concepts of prompt engineering, to
    me.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，为什么我们要花费大量精力在低价值但耗时的任务上，而不是自动化它们呢？在我看来，这里是提示工程的核心概念。
- en: So, let’s see how prompt engineering can affect Data scientists, and then let’s
    see how we can create useful and efficient prompts.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们看看提示工程如何影响数据科学家，然后看看我们如何创建有用且高效的提示。
- en: How prompt engineering can affect Data Scientists
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提示工程如何影响数据科学家
- en: Every new technology has some pros and some cons, and so does prompt engineering.
    First, let’s see the pros and then the cons.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 每项新技术都有其优点和缺点，提示工程也不例外。首先，让我们看看优点，然后是缺点。
- en: 'Prompt Engineering for Data Scientists: pros'
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据科学家的提示工程：优点
- en: '**Faster learning**. If you’re a beginner in Data Science (and in Software
    Development, in general) you’ll find very beneficial a tool like ChatGPT because
    it’s like having a senior developer available 24/7\. Anyway, it shouldn’t be trusted
    as an oracle, primarily because it still makes some errors. I’ve written a dedicated
    article on how to effectively start coding in the era of ChatGPT [here](https://medium.com/towards-data-science/how-to-effectively-start-coding-in-the-era-of-chatgpt-cfc5151e1c42)
    if you’re interested.'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**更快的学习**。如果你是数据科学领域（以及软件开发领域）初学者，你会发现像ChatGPT这样的工具非常有益，因为它就像是24/7随时可用的高级开发人员。不过，仍然不应将其视为万能的，主要因为它仍然会出现一些错误。如果你有兴趣，我写了一篇关于如何在ChatGPT时代有效开始编程的专门文章，[点击这里](https://medium.com/towards-data-science/how-to-effectively-start-coding-in-the-era-of-chatgpt-cfc5151e1c42)。'
- en: '**Faster prototypes**. In my opinion, one of the most important parts of the
    job of a Data Scientist is prototyping. In fact, very often we need to give a
    fast answer based on data (often, with little available data. Very often, with
    dirty data). So, a prototype is what can give the sense of the answer a customer
    needs, giving us time for: a) ask/get for more data, b) ask/get for more specifications,
    c) clean data, and d) make necessary research.'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**更快的原型**。在我看来，数据科学家工作中最重要的部分之一是原型开发。事实上，我们经常需要根据数据（通常是可用数据很少，且很脏的数据）快速给出回答。因此，原型可以给出客户需要的回答感，使我们有时间：a)
    请求/获取更多数据，b) 请求/获取更多规格，c) 清洗数据，d) 进行必要的研究。'
- en: '**Faster debugging and error management**. We have to be honest: debugging
    and error management in software development is more a curse than a delight. This
    is also true when we develop software for Machine/Deep Learning algorithms. ChatGPT
    is a great tool for debugging and error management: with the right prompt, it
    can find errors and bugs in a matter of seconds, making us save a lot of time
    and effort. Just a quick reminder: since ChatGPT (and similar tools) work in the
    cloud and also they may use our prompts to train their algorithms, remember to
    not write code with sensible information because they can get you in trouble in
    cases of data breaches.'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**更快的调试和错误管理**。我们必须诚实地说：在软件开发中，调试和错误管理更多的是一种诅咒而不是一种乐趣。对于机器学习/深度学习算法的软件开发也是如此。ChatGPT是一个很好的调试和错误管理工具：通过正确的提示，它可以在几秒钟内发现错误和漏洞，节省大量时间和精力。只要提醒一下：由于ChatGPT（以及类似工具）在云端工作，并且可能使用我们的提示来训练它们的算法，所以要记住不要写包含敏感信息的代码，因为在数据泄露的情况下可能会给你带来麻烦。'
- en: '**Faster research**. An important part of the job of a Data Scientist is making
    research. We absolutely need to research a lot of stuff to solve our problems
    like: info on particular libraries and their usages, info related to the domain
    knowledge of the problem we’re facing, etc…Well, a good prompt is generally useful
    to let us grab the info we need. The only thing to remember is that we always
    need to verify the correctness of the output by deepening it on the internet or
    on books. Especially with code, is always important to read the documentation:
    otherwise, the risk is to copy and paste the code without actually understanding
    it.'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**更快的研究**。数据科学家的工作中一个重要部分就是进行研究。我们绝对需要大量的研究来解决问题，例如：特定库及其使用信息、与我们面临的问题领域知识相关的信息等等。好的提示通常对获取所需的信息非常有用。唯一需要记住的是，我们始终需要通过在互联网或书籍上深入验证输出的正确性。特别是对于代码，阅读文档始终很重要：否则，风险就是复制和粘贴代码而实际上不理解它。'
- en: 'Prompt Engineering for Data Scientists: cons'
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据科学家的提示工程：缺点
- en: '**Possibility to lose your job**. Yes, we have to say it: AI tools can make
    us lose our job. It seems a contradiction: the necessity for data professionals
    in the market is increasing in these months, but tools like ChatGPT may substitute
    us. Well, let’s say the truth: this possibility is far away at the time because
    AI tools need the supervision of an expert, as we’ve also discussed in the pros.
    Sure, you can ask for some code and for some data analysis, but if you don’t know
    how to use it what do you do with the code? So, yes: prompt engineering may lead
    to job loss for some data professionals, but it’s a matter of years not months.'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**可能会失去工作**。是的，我们必须说：AI工具可能会使我们失去工作。这似乎是一种矛盾：市场对数据专业人员的需求在这些月里不断增加，但像ChatGPT这样的工具可能会取代我们。好吧，实话实说：这个可能性在目前还很遥远，因为AI工具需要专家的监督，就像我们在优点中讨论的那样。当然，你可以请求一些代码和数据分析，但如果你不知道如何使用这些代码，你怎么办？所以，是的：提示工程可能会导致一些数据专业人员失去工作，但这是一件几年后才会发生的事情，而不是几个月。'
- en: '**Possibility to forgot how to code**. This is an actual problem. If we rely
    too much on prompt engineering rather than writing code by ourselves, we can forget
    how to code. You know: coding is a matter of practicing and it needs everyday
    practice. Sure, is like going on a bicycle: you’ll never forget how to do so.
    But, you know: relying too much on the prompts rather than on writing code can
    atrophy your muscles because you’ve become too much comfortable. So, use tools
    like ChatGPT but don’t rely only on those: strive to write code as much as you
    can. Because I know you love to code, so don’t leave it too much to machines.'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**可能会忘记如何编程**。这是一个实际问题。如果我们过于依赖提示工程而不是自己编写代码，我们可能会忘记如何编程。你知道的：编程是一个需要练习的过程，需要每天的练习。当然，就像骑自行车一样：你永远不会忘记如何骑。但你知道：过于依赖提示而不是编写代码会导致你的技能萎缩，因为你变得过于舒适。因此，使用像ChatGPT这样的工具，但不要仅仅依赖于这些工具：尽可能多地努力编写代码。因为我知道你喜欢编程，所以不要过多地依赖机器。'
- en: '**Possibility to not learn new things**. The beauty of working in IT, especially
    in the data field, is that new topics and technologies are born barely every day.
    This is one of the most important reasons [why I changed my career to work in
    IT](https://betterhumans.pub/from-gears-to-code-how-i-successfully-transitioned-from-mechanical-engineering-to-tech-44909e31cbb0):
    because I love to always learn new things, and I’d like that this is recognized
    as a good thing (yes, there are fields/companies where self-improvement is not
    considered a good thing). But if you rely only on the answer you get from your
    prompts and copy and paste the code (or the info you get) you won’t learn new
    things. On the code sight, at least you need to ask for explanations, then read
    the documentation. And then, if possible, try the code in different scenarios
    so that you can get comfortable with the code you received. This is also the same
    approach we need to have when we ask for general information: always deepen them
    by reading other sources (as it always should be: but let’s just keep this in
    mind!).'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**可能无法学习新知识**。从事 IT 工作，尤其是在数据领域，令人兴奋的一点是新话题和技术几乎每天都在诞生。这也是我[转行从事 IT 的原因之一](https://betterhumans.pub/from-gears-to-code-how-i-successfully-transitioned-from-mechanical-engineering-to-tech-44909e31cbb0)：因为我喜欢不断学习新事物，我希望这被视为一件好事（是的，有些领域/公司认为自我提升不是好事）。但如果你只是依赖提示得到的答案并复制粘贴代码（或信息），你不会学到新知识。在代码方面，至少你需要请求解释，然后阅读文档。接着，如果可能的话，在不同的场景中尝试代码，以便你能熟悉你收到的代码。这也是我们在请求一般信息时需要采取的相同方法：始终通过阅读其他来源来深入了解（就像它应该总是那样：但让我们记住这一点！）。'
- en: '**Possibility to implement “wordy code”.** The fact that a piece of code just
    works is not a good reason to leave it as is, as you know. Code quality is also
    important for those who will read that snippet in the future (maybe, you). Sometimes,
    due to different factors (often, to not correct prompts), tools like ChatGPT can
    give us “wordy code” with unnecessary parts. And here comes the importance of
    a professional: don’t blindly copy and paste it. If you copy and paste it, after
    you verified it works, strive to improve it as much as you can.'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**可能出现“冗长的代码”。** 代码能正常工作并不是保留它的好理由，你知道的。代码质量对未来的读者（可能是你）也很重要。有时，由于各种因素（通常是提示不正确），像
    ChatGPT 这样的工具可能会给我们提供带有不必要部分的“冗长代码”。这就需要专业人士的帮助：不要盲目复制和粘贴。如果你复制和粘贴了它，在验证它有效后，尽量将其改进到最佳状态。'
- en: Examples of effective prompts for Data Scientists
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据科学家的有效提示示例
- en: Now, with these pros and cons in mind, let’s see some effective prompts we can
    create in ChatGPT to improve and speed up our jobs as Data Scientists.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，考虑到这些优缺点，让我们看看我们可以在 ChatGPT 中创建的一些有效提示，以改善和加速我们作为数据科学家的工作。
- en: 'Example n°1: prototype'
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例1：原型
- en: Suppose we are studying a binary classification example. We want to compare
    three ML models using learning curves, but we don’t actually remember the code
    to use. Also, our repositories are a little bit messy and we don’t want to waste
    much time.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们正在研究一个二分类示例。我们想用学习曲线比较三种 ML 模型，但我们实际上不记得使用的代码。此外，我们的代码库有点乱，我们不想浪费太多时间。
- en: 'To speed up our job in such situations, we can ask ChatGPT a prompt like the
    following: “*Create, in Python, a binary classification problem with synthetic
    data. Standardize the data using the standard scaler, then split the data into
    the train and the test set. Then, fit the train set with a random forest, a KNN,
    and a SVM classifiers. Then, plot ROC curve to compare the models.*” And these
    are the results:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 为了加快我们在这种情况下的工作，我们可以向 ChatGPT 提出如下提示：“*用 Python 创建一个二分类问题，使用合成数据。使用标准化器对数据进行标准化，然后将数据拆分为训练集和测试集。然后，使用随机森林、KNN
    和 SVM 分类器拟合训练集。最后，绘制 ROC 曲线以比较模型。*” 这些是结果：
- en: 'Certainly! I can help you create a binary classification problem using synthetic
    data in Python and apply the standard scaler for data standardization. Then, we
    can split the data into train and test sets. Finally, we’ll fit the train set
    with three classifiers: Random Forest, K-Nearest Neighbors (KNN), and Support
    Vector Machine (SVM), and plot the ROC curve to compare the models.'
  id: totrans-41
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当然！我可以帮助你使用 Python 创建一个二分类问题，使用标准化器对数据进行标准化。然后，我们可以将数据拆分为训练集和测试集。最后，我们将使用三种分类器来拟合训练集：随机森林、K-最近邻（KNN）和支持向量机（SVM），并绘制
    ROC 曲线以比较模型。
- en: '[PRE1]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The provided code generates a synthetic binary classification problem using
    scikit-learn’s `make_classification` function. It then applies the `StandardScaler`
    to standardize the data and splits it into a train set and a test set.
  id: totrans-43
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 提供的代码使用 scikit-learn 的 `make_classification` 函数生成一个合成的二分类问题。然后应用 `StandardScaler`
    对数据进行标准化，并将数据拆分为训练集和测试集。
- en: ''
  id: totrans-44
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Three classifiers are then trained on the train set: Random Forest, K-Nearest
    Neighbors (KNN), and Support Vector Machine (SVM). For evaluation, the classifiers
    generate probabilities for the test set using the `predict_proba` method.'
  id: totrans-45
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 然后在训练集上训练三个分类器：随机森林、K-近邻（KNN）和支持向量机（SVM）。为了评估，分类器使用 `predict_proba` 方法为测试集生成概率。
- en: ''
  id: totrans-46
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The next step involves plotting the Receiver Operating Characteristic (ROC)
    curve to compare the performance of the classifiers. The False Positive Rate (FPR)
    and True Positive Rate (TPR) are calculated using the `roc_curve` function, and
    the Area Under the Curve (AUC) is computed using the `auc` function.
  id: totrans-47
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 下一步涉及绘制接收者操作特征（ROC）曲线，以比较分类器的性能。使用 `roc_curve` 函数计算假正例率（FPR）和真实正例率（TPR），使用 `auc`
    函数计算曲线下面积（AUC）。
- en: ''
  id: totrans-48
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Finally, the ROC curve is plotted using matplotlib, with each classifier’s AUC
    displayed in the legend. The curve represents the trade-off between the true positive
    rate and the false positive rate for each classifier, allowing visual comparison
    of their performance.
  id: totrans-49
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 最终，ROC 曲线使用 matplotlib 绘制，每个分类器的 AUC 显示在图例中。该曲线表示每个分类器在真实正例率和假正例率之间的权衡，允许对它们的性能进行可视化比较。
- en: ''
  id: totrans-50
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: By examining the ROC curve and comparing the AUC values, you can assess the
    relative performance of the Random Forest, KNN, and SVM classifiers for the given
    binary classification problem.
  id: totrans-51
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 通过检查 ROC 曲线并比较 AUC 值，你可以评估随机森林、KNN 和 SVM 分类器在给定二分类问题上的相对性能。
- en: 'Now, if we copy and paste this code into a Jupyter Notebook we get:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们将这段代码复制并粘贴到 Jupyter Notebook 中，我们会得到：
- en: '![](../Images/ff4a1bda1112ceb978647e8d1bf3f515.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ff4a1bda1112ceb978647e8d1bf3f515.png)'
- en: The ROC curve resulting from the above code. Image by Federico Trotta.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码生成的 ROC 曲线。图片由 Federico Trotta 提供。
- en: 'We get what we wanted, so let’s analyze the prompt:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到了想要的结果，所以让我们分析一下这个提示：
- en: '**It’s specific**. I specified: a) the language (Python), b) the type of problem
    (binary classification), c) the process to follow (data creation, data normalization,
    data split), and d) the ML models to use.'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**它很具体**。我指定了：a) 语言（Python），b) 问题类型（二分类），c) 需要遵循的过程（数据创建、数据标准化、数据拆分），和 d) 使用的
    ML 模型。'
- en: '**It has everything needed**. There are no extra words that may create confusion.
    The prompt goes straight to the point.'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**它包含了所需的一切**。没有额外的词语可能会造成混淆。提示直截了当。'
- en: '**It’s short**. It’s only 3 lines. Longer prompts may lead to incorrect outputs
    or can lead the model to add information we may not need. If you have to insert
    “long prompts” my advice is to subdivide the “big task” into smaller tasks and
    input different short prompts that can be sequential. To be clear, the above prompt
    could be subdivided into sequential chats like so: a) “*create a binary classification
    dataset with Python, normalize the data, and split them into the train and the
    test set*”, b) “*fit the train test with random forest, SVM, and KNN classifiers.
    Then, print the ROC curve*”'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**它很简短**。仅有 3 行。较长的提示可能导致错误的输出或使模型添加我们可能不需要的信息。如果你必须插入“长提示”，我的建议是将“大任务”分解成较小的任务，并输入不同的短提示，这些短提示可以是连续的。明确来说，上述提示可以分解成连续的对话，如：a)
    “*使用 Python 创建一个二分类数据集，对数据进行标准化，并将其拆分为训练集和测试集*”，b) “*用随机森林、SVM 和 KNN 分类器拟合训练集，然后绘制
    ROC 曲线*”'
- en: 'Example n°2: research'
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例 n°2：研究
- en: 'Suppose we know that polynomial regression generally overfits, but we want
    a prove because we’ve never seen this. The prompt could be something like that:
    “ *I know that polynomial regression models generally overfit: can you show me
    something, creating some data in Python*?”'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们知道多项式回归通常会过拟合，但我们想要证明，因为我们从未见过。提示可能是这样的：“*我知道多项式回归模型通常会过拟合：你能展示一些东西吗，通过在
    Python 中创建一些数据*？”
- en: 'And here’s what we get:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: 'Certainly! I can generate some random data and demonstrate how polynomial regression
    can lead to overfitting. Here’s an example in Python:'
  id: totrans-62
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当然！我可以生成一些随机数据并演示多项式回归如何导致过拟合。这是一个 Python 示例：
- en: '[PRE2]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This code generates random data points with a quadratic relationship and adds
    some noise to the y values. It then fits polynomial regression models of different
    degrees (1, 4, and 15 in this example) to the data and plots the resulting curves.
  id: totrans-64
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这段代码生成具有二次关系的随机数据点，并向y值添加一些噪声。然后，它将不同度数（在这个例子中为1、4和15）的多项式回归模型拟合到数据上，并绘制出结果曲线。
- en: ''
  id: totrans-65
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: You will observe that as the degree of the polynomial increases, the model starts
    to fit the noise in the data rather than the underlying trend. This is an example
    of overfitting. The linear model (degree 1) is too simple to capture the underlying
    quadratic relationship, while the high-degree polynomial (degree 15) tries to
    fit every data point precisely, resulting in a highly oscillating curve.
  id: totrans-66
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你会观察到，随着多项式的度数增加，模型开始拟合数据中的噪声而不是潜在的趋势。这是过拟合的一个例子。线性模型（度数为1）过于简单，无法捕捉潜在的二次关系，而高次多项式（度数为15）试图精确拟合每一个数据点，从而导致曲线剧烈震荡。
- en: ''
  id: totrans-67
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: It’s important to note that the example I provided is a simple illustration
    of overfitting in polynomial regression. In practice, you would typically use
    more realistic and complex datasets to evaluate and address overfitting issues.
  id: totrans-68
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 需要注意的是，我提供的这个例子只是多项式回归中过拟合的简单说明。在实践中，你通常会使用更现实和复杂的数据集来评估和解决过拟合问题。
- en: 'Now, let’s see what we get in a Jupyter Notebook:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看在Jupyter Notebook中得到什么：
- en: '![](../Images/72c90aa22d0e36b4dd936037124ca499.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/72c90aa22d0e36b4dd936037124ca499.png)'
- en: A plot showing the difference in fitting the data created with the above code.
    Image by Federico Trotta.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的图显示了用上述代码创建的数据拟合差异。图片来自 Federico Trotta。
- en: 'So, this plot shows that, given some quadratic distributed data:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这个图表显示了，给定一些二次分布的数据：
- en: A linear model can’t grab the path.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线性模型无法抓住路径。
- en: The 4-degree and the 15-degree polynomials “grab the path too well”.
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 4度和15度的多项式“过于贴合路径”。
- en: 'Now, tell me: does it means that the two polynomials overfit?'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现在告诉我：这是否意味着这两个多项式过拟合了？
- en: Stop reading for a second a think about that.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 停下来思考一下。
- en: 'Well, yes and no, but primarily no. In fact, as we know, overfitting occurs
    when:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 是的和不是，但主要是“不是”。实际上，正如我们所知，过拟合发生在：
- en: We define metrics to evaluate our data.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们定义了评估数据的指标。
- en: The metrics are calculated both on the train and test sets and we find big numerical
    differences between them.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指标在训练集和测试集上都进行了计算，我们发现它们之间有很大的数值差异。
- en: 'So, this prompt is not a satisfying one and we have to ask for more. For example,
    we could ask: “*Good, so use the same data and the same polynomials. Then, normalize
    the data, split the dataset into train and test sets, and calculate R² for both
    sets*”.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这个提示不够令人满意，我们需要提出更多问题。例如，我们可以问：“*好，那就用相同的数据和相同的多项式。然后，归一化数据，将数据集拆分为训练集和测试集，并计算两个集合的R²*”。
- en: 'And we get:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到：
- en: 'Certainly! Here’s an updated version of the code that normalizes the data,
    splits it into train and test sets, and calculates the R² score for both sets:'
  id: totrans-82
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当然！这是一个更新版的代码，它归一化数据，将其分为训练集和测试集，并计算这两个集的R²分数：
- en: '[PRE3]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In this updated code, the data is first normalized by subtracting the mean and
    dividing by the standard deviation. Then, the data is split into a train set (80%
    of the data) and a test set (20% of the data) using `train_test_split()` from
    scikit-learn.
  id: totrans-84
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在这个更新的代码中，数据首先通过减去均值并除以标准差进行归一化。然后，使用scikit-learn的`train_test_split()`将数据拆分为训练集（80%的数据）和测试集（20%的数据）。
- en: ''
  id: totrans-85
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The polynomial regression models are fitted using the normalized training data,
    and the R² scores are calculated for both the train and test sets using `r2_score()`
    from scikit-learn. The R² scores are then displayed in the legend of each fitted
    curve.
  id: totrans-86
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 多项式回归模型使用归一化的训练数据进行拟合，然后使用来自scikit-learn的`r2_score()`计算训练集和测试集的R²分数。这些R²分数随后显示在每条拟合曲线的图例中。
- en: ''
  id: totrans-87
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: By normalizing the data and calculating R² scores on both the train and test
    sets, you can evaluate the performance of the polynomial regression models and
    assess whether they overfit or generalize well to unseen data.
  id: totrans-88
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 通过归一化数据并计算训练集和测试集上的R²分数，你可以评估多项式回归模型的表现，并判断它们是否过拟合或对未见数据的泛化能力如何。
- en: 'In this case, we get:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们得到：
- en: '![](../Images/951d88dd080eaedd46f6dd2f9ae8b216.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/951d88dd080eaedd46f6dd2f9ae8b216.png)'
- en: A plot showing the difference in fitting the data created with the above code.
    Image by Federico Trotta.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的图显示了用上述代码创建的数据拟合差异。图片来自 Federico Trotta。
- en: So, what did we get? Well…We can’t see great signs of overfitting because R²
    slightly increases for the 4-degree polynomial on the test set while it slightly
    decreases for the 15-degree polynomial.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，我们得到了什么？嗯……我们看不到明显的过拟合迹象，因为测试集上的 4 度多项式 R² 稍微增加，而 15 度多项式的 R² 稍微下降。
- en: Here the mistake is that we’ve continued the chat we started. Let’s remember
    that LLM are neural networks and they have the tendency to overfit. So, sometimes,
    if you just continue prompting you get the same answer (or something very similar)
    even if it returns you some “apologies for the mistake”.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的错误在于我们继续了开始的聊天。让我们记住，LLM 是神经网络，它们有过拟合的倾向。因此，有时候，如果你继续提示，你会得到相同的答案（或非常相似的东西），即使它返回了一些“对不起，我犯了个错误”的信息。
- en: 'Also, I don’t want any plot. So, in this case, we''d better create another
    chat. Let’s try to be more specific now:” *Create a 2-degree data set in Python.
    Normalize the data, and split it into the train and the test set. Fit the data
    with: linear regression, 4-degree polynomial, and 15-degree polynomial models.
    Print r-squared for each model for both train and test sets.*”'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我不需要任何图表。因此，在这种情况下，我们最好创建另一个聊天。现在让我们尝试更具体一些：“*在 Python 中创建一个 2 度数据集。对数据进行标准化，并将其分割为训练集和测试集。用：线性回归、4
    度多项式和 15 度多项式模型来拟合数据。打印每个模型在训练集和测试集上的 R 平方值。*”
- en: 'And we get:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们得到：
- en: 'To create a 2-degrees dataset in Python, normalize it, and split it into train
    and test sets, you can use the `numpy` and `sklearn` libraries. Here''s an example
    of how you can achieve this:'
  id: totrans-96
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 要在 Python 中创建一个 2 度的数据集，对其进行标准化，并将其分割为训练集和测试集，你可以使用 `numpy` 和 `sklearn` 库。以下是你如何实现这一点的示例：
- en: '[PRE4]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In this example, we generate a random dataset with a quadratic relationship
    between the independent variable `X` and the dependent variable `y`. The data
    is then normalized using z-score normalization. Next, the dataset is split into
    a train set (80%) and a test set (20%) using `train_test_split` from the `sklearn.model_selection`
    module.
  id: totrans-98
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在这个例子中，我们生成了一个具有独立变量`X`和依赖变量`y`之间的二次关系的随机数据集。然后，使用 z-score 标准化对数据进行归一化。接下来，使用来自`sklearn.model_selection`模块的`train_test_split`将数据集分割为训练集（80%）和测试集（20%）。
- en: ''
  id: totrans-99
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'We then fit three different models: linear regression, 4-degree polynomial
    regression, and 15-degree polynomial regression. For polynomial regression, we
    use the `PolynomialFeatures` class from `sklearn.preprocessing` to create polynomial
    features up to the desired degree. The models are fitted using the normalized
    training data.'
  id: totrans-100
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 然后，我们拟合了三种不同的模型：线性回归、4度多项式回归和15度多项式回归。对于多项式回归，我们使用来自`sklearn.preprocessing`的`PolynomialFeatures`类来创建高达所需度数的多项式特征。使用归一化的训练数据来拟合模型。
- en: ''
  id: totrans-101
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Finally, we calculate the R-squared value for both the train and test sets for
    each model using the `score` method of the respective models. The R-squared value
    represents the proportion of the variance in the dependent variable that can be
    explained by
  id: totrans-102
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 最后，我们使用各自模型的`score`方法计算每个模型在训练集和测试集上的 R 平方值。R 平方值表示依赖变量中方差的比例，这部分方差可以通过
- en: 'Good, so we get what we wanted and with some explanations. Now, if we try it
    we get:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，我们得到了我们想要的结果，并附带了一些解释。现在，如果我们尝试一下，我们得到：
- en: '[PRE5]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Ops! As we said, it can happen to get some errors. So, in these cases, we can
    simply continue the chat like so: “*I get: ValueError: X has 16 features, but
    LinearRegression is expecting 5 features as input.*”'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '哎呀！正如我们所说，出现一些错误是很正常的。所以，在这种情况下，我们可以简单地继续聊天，例如：“*我得到：ValueError: X 有 16 个特征，但
    LinearRegression 期望输入 5 个特征。*”'
- en: 'And now it returns:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在它返回：
- en: 'Apologies for the error. It seems that there was an issue with the polynomial
    features transformation. To fix the problem, we need to ensure that we apply the
    polynomial transformation on the normalized `X` data, rather than the original
    `X` data. Here''s the corrected code:'
  id: totrans-107
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 对于错误表示歉意。似乎多项式特征转换出现了问题。要解决这个问题，我们需要确保在归一化的`X`数据上应用多项式转换，而不是在原始`X`数据上。以下是修正后的代码：
- en: '[PRE6]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Now the code should work correctly, applying the polynomial transformation on
    the normalized data and fitting the models accordingly.
  id: totrans-109
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 现在代码应该可以正确工作，对归一化数据应用多项式转换，并相应地拟合模型。
- en: 'Now, if we test it we get:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们测试一下，我们得到：
- en: '[PRE7]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'So, here we can see some slight overfitting of the 4-degree model and a clear
    overfitting of the 15-degree model. In fact, the higher the degree of the polynomial
    the higher the probability it has to overfit the data. Let’s think about that:
    we have a 2-degree data distribution and we’re trying to fit it with a 15-degree
    polynomial. So, it’s easy that the 15-degree polynomial can grab every small modification
    in the data, leading to overfitting.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到4度模型的轻微过拟合和15度模型的明显过拟合。实际上，随着多项式的次数增加，它过拟合数据的概率也会增加。我们来考虑一下：我们有一个2度的数据分布，而我们正试图用15度的多项式来拟合它。因此，15度的多项式很容易捕捉到数据中的每一个小的变化，从而导致过拟合。
- en: Conclusions
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: In this article, we’ve seen the importance of prompt engineering today, how
    it can affect Data Scientists, and some prompt examples for Data Scientists.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们已经看到提示工程的重要性，它如何影响数据科学家，以及一些针对数据科学家的提示示例。
- en: Remember that a prompt should be short and clear and that we always have to
    verify the answers. But, as we’ve shown, the benefits are huge.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，提示应该简洁明了，我们始终需要验证答案。但正如我们所展示的，收益是巨大的。
- en: '**FREE PYTHON EBOOK:**'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '**免费 Python 电子书：**'
- en: 'Started learning Python Data Science but struggling with it? [***Subscribe
    to my newsletter and get my free ebook: this will give you the right learning
    path to follow to learn Python for Data Science with hands-on experience.***](https://federico-trotta.ck.page/a3970f33f4)'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 刚开始学习 Python 数据科学却感到困难？[***订阅我的通讯并获取免费的电子书：这将为您提供正确的学习路径，以便通过实践经验学习 Python 数据科学。***](https://federico-trotta.ck.page/a3970f33f4)
- en: 'Enjoyed the story? Become a Medium member for 5$/month [through my referral
    link](https://medium.com/@federicotrotta/membership): I’ll earn a small commission
    to no additional fee to you:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 享受这个故事吗？通过[我的推荐链接](https://medium.com/@federicotrotta/membership)成为Medium会员，费用为5$/月：我将获得一小笔佣金，而您无需支付额外费用。
- en: '[](https://federicotrotta.medium.com/membership?source=post_page-----16b6d1f2bf85--------------------------------)
    [## Join Medium with my referral link - Federico Trotta'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 通过我的推荐链接加入 Medium - Federico Trotta](https://federicotrotta.medium.com/membership?source=post_page-----16b6d1f2bf85--------------------------------)'
- en: Read every story from Federico Trotta (and thousands of other writers on Medium).
    Your membership fee directly supports…
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阅读 Federico Trotta（以及 Medium 上成千上万其他作者）的每一个故事。您的会员费直接支持……
- en: federicotrotta.medium.com](https://federicotrotta.medium.com/membership?source=post_page-----16b6d1f2bf85--------------------------------)
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '[federicotrotta.medium.com](https://federicotrotta.medium.com/membership?source=post_page-----16b6d1f2bf85--------------------------------)'
