- en: 'Data Streaming Is Exciting: What You Need to Know Before Jumping in'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据流处理令人兴奋：在跳入之前你需要了解的事项
- en: 原文：[https://towardsdatascience.com/data-streaming-is-exciting-what-you-need-to-know-before-jumping-in-e233e192337b](https://towardsdatascience.com/data-streaming-is-exciting-what-you-need-to-know-before-jumping-in-e233e192337b)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/data-streaming-is-exciting-what-you-need-to-know-before-jumping-in-e233e192337b](https://towardsdatascience.com/data-streaming-is-exciting-what-you-need-to-know-before-jumping-in-e233e192337b)
- en: Is Data Streaming Right for Your Business? Key Facts to Consider
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据流处理适合你的业务吗？需要考虑的关键事实
- en: '[](https://chengzhizhao.medium.com/?source=post_page-----e233e192337b--------------------------------)[![Chengzhi
    Zhao](../Images/186bba91822dbcc0f926426e56faf543.png)](https://chengzhizhao.medium.com/?source=post_page-----e233e192337b--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e233e192337b--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e233e192337b--------------------------------)
    [Chengzhi Zhao](https://chengzhizhao.medium.com/?source=post_page-----e233e192337b--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://chengzhizhao.medium.com/?source=post_page-----e233e192337b--------------------------------)[![Chengzhi
    Zhao](../Images/186bba91822dbcc0f926426e56faf543.png)](https://chengzhizhao.medium.com/?source=post_page-----e233e192337b--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e233e192337b--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e233e192337b--------------------------------)
    [Chengzhi Zhao](https://chengzhizhao.medium.com/?source=post_page-----e233e192337b--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e233e192337b--------------------------------)
    ·5 min read·Feb 27, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e233e192337b--------------------------------)
    ·阅读时间 5 分钟·2023 年 2 月 27 日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/1d33cd261fc165c0bb572ab116c342c5.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1d33cd261fc165c0bb572ab116c342c5.png)'
- en: Photo by [Stephen Leonardi](https://unsplash.com/@stephenleo1982?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/DpvBWb4JW1M?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Stephen Leonardi](https://unsplash.com/@stephenleo1982?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    在 [Unsplash](https://unsplash.com/photos/DpvBWb4JW1M?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    上提供
- en: 'Streaming data is an exciting space in the data field, and it has been getting
    tremendous attraction in recent years. With much excitement, the areas for open-source
    projects became crowded. Many technologies have made the streaming data process
    more straightforward than ever: Kafka, Flink, Spark, Storm, Beam, etc., have been
    in the market for years and have built a solid user base.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 流数据是数据领域中一个令人兴奋的领域，近年来受到了极大的关注。由于这种兴奋，开源项目的领域变得非常拥挤。许多技术使流数据处理变得比以往更简单：Kafka、Flink、Spark、Storm、Beam
    等技术已经在市场上存在多年，并建立了坚实的用户基础。
- en: “Let’s do streaming processing.”
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “让我们做流处理。”
- en: 'It is an inevitable topic for data professionals. However, before anyone tells
    you about streaming, we should step back and double confirm with ourselves with
    a simple question: **Do I need streaming data for this use case?** Before jumping
    into it, let’s face the facts of streaming data in this story.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 对于数据专业人士来说，这是一个不可避免的话题。然而，在有人告诉你关于流数据之前，我们应该退一步，用一个简单的问题与自己再次确认：**我在这个用例中需要流数据吗？**
    在深入了解之前，让我们面对这个故事中的流数据事实。
- en: Streaming Data
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 流数据
- en: Before we look at the facts about streaming data, let’s first look at what streaming
    data is. Hadoop set the foundation for processing large datasets and empowered
    data professionals to design more sophisticated data processing tools.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们查看流数据的事实之前，让我们先看看什么是流数据。Hadoop 为处理大规模数据集奠定了基础，并赋予了数据专业人士设计更复杂的数据处理工具的能力。
- en: '[Tyler Akidau](https://www.oreilly.com/people/tyler-akidau/)’s paper on [MillWheel:
    Fault-Tolerant Stream Processing at Internet Scale](https://research.google/pubs/pub41378/)
    in 2013 sets the basis for modern streaming and inspires a streaming framework
    like [Apache Flink](https://flink.apache.org/).'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[Tyler Akidau](https://www.oreilly.com/people/tyler-akidau/) 于 2013 年发表的关于
    [MillWheel: Fault-Tolerant Stream Processing at Internet Scale](https://research.google/pubs/pub41378/)
    的论文为现代流数据奠定了基础，并激发了像 [Apache Flink](https://flink.apache.org/) 这样的流处理框架。'
- en: Tyler’s famous [Streaming 101](https://www.oreilly.com/radar/the-world-beyond-batch-streaming-101/),
    [Streaming 102](https://www.oreilly.com/radar/the-world-beyond-batch-streaming-102/),
    and his book [Streaming System](https://www.oreilly.com/library/view/streaming-systems/9781491983867/)
    have the extensive context of streaming data.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 泰勒著名的 [Streaming 101](https://www.oreilly.com/radar/the-world-beyond-batch-streaming-101/)、[Streaming
    102](https://www.oreilly.com/radar/the-world-beyond-batch-streaming-102/) 以及他的书籍
    [Streaming System](https://www.oreilly.com/library/view/streaming-systems/9781491983867/)
    提供了流处理数据的广泛背景。
- en: I use the term “streaming,” you can safely assume I mean an execution engine
    designed for unbounded data sets, and nothing more. — [Tyler Akidau](https://www.oreilly.com/people/tyler-akidau/)
  id: totrans-15
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当我使用“流处理”这个术语时，你可以安全地假设我指的是一个为无限数据集设计的执行引擎，仅此而已。 — [泰勒·阿基道](https://www.oreilly.com/people/tyler-akidau/)
- en: Let’s use the exact definition followed by Tyler and focus on unbounded data
    throughout this story.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们遵循泰勒的确切定义，并在整个故事中关注无限数据。
- en: Kappa vs. Lambda Architecture
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Kappa 与 Lambda 架构
- en: 'We are all familiar with Lambda architecture — we use two independent data
    processing systems: batch and streaming, writing similar logic twice and processing
    the same data. The streaming is for speculation, and the collection is for accuracy
    and completeness.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们都熟悉 Lambda 架构 — 我们使用两个独立的数据处理系统：批处理和流处理，重复编写类似的逻辑并处理相同的数据。流处理用于推测，批处理用于准确性和完整性。
- en: On the other hand, we have Kappa architecture. We have a single pipeline running
    without duplicated code and leverage Kafka to achieve replayable action when we’d
    need accuracy and completeness.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，我们有 Kappa 架构。我们有一个单一的管道运行，无需重复代码，并利用 Kafka 实现可重放的操作，以便在需要准确性和完整性时使用。
- en: Ultimately, Kappa is a great idea for a well-designed system. However, the such
    system needs to keep data processing as the first citizen.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，Kappa 是一个设计良好的系统的好想法。然而，这样的系统需要将数据处理视为首要任务。
- en: Streaming data Is Not Silver Bullet.
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 流处理数据并非灵丹妙药。
- en: A while ago, there was an impression on data processing that “**Streaming Data
    Is a Silver Bullet,**” and we will all move to stream data. Batch processing is
    an antique.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 不久前，对数据处理有一种印象，即“**流处理数据是灵丹妙药**”，我们都将转向流处理数据。批处理被视为过时的。
- en: 'Momentarily, people realized that streaming data isn’t the silver bullet to
    solve the problem but could worsen things:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 一段时间后，人们意识到流处理数据并不是解决问题的灵丹妙药，反而可能会使情况更糟：
- en: Streaming isn’t good enough to generate the complete data analysis dataset.
    A batch is still required to close the gap due to the late arrival of data or
    processing errors.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 流处理不足以生成完整的数据分析数据集。由于数据的迟到或处理错误，仍然需要批处理来弥补这一缺口。
- en: Streaming and batch processing usually speak a different language. Streaming
    usually runs in Java, Scala, and Go with frameworks like Apache Flink / Kafka
    Stream. Batch processing usually runs in Python, SQL, and R with frameworks like
    Apache Spark / SQL engine. Duplicating the same logic for both batch and streaming
    is a headache. It is one of the most challenging problems when running lambda
    architecture in production.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 流处理和批处理通常讲的是不同的语言。流处理通常使用 Java、Scala 和 Go 运行，配合 Apache Flink / Kafka Stream
    等框架。批处理则通常使用 Python、SQL 和 R 运行，配合 Apache Spark / SQL 引擎等框架。为批处理和流处理重复相同的逻辑是一个麻烦。这是运行
    Lambda 架构时最具挑战性的问题之一。
- en: Streaming data trade-offs
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 流处理数据的权衡
- en: Data naturally comes in a streaming fashion. Solving data problems in batch
    seems inappropriate initially, but batch has a reason to be famous for decades.
    Processing data in the batch is a simplified philosophy to resolve a complex problem.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 数据自然是以流处理的方式出现的。最初，批处理似乎不适合解决数据问题，但批处理因其几十年来的声誉而有其存在的理由。批处理是一种简化的哲学，用于解决复杂的问题。
- en: There are significant trade-offs between batch processing and streaming processing.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 批处理和流处理之间存在显著的权衡。
- en: '**Completeness vs. Speculation**'
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**完整性与推测**'
- en: Many data sources are inevitably generated with delay; mainly, your data analysis
    includes multiple data sources. Batch processing is an excellent position to handle
    completeness by delaying processing when everything is ready.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 许多数据源不可避免地会产生延迟；主要是你的数据分析包括多个数据源。批处理在处理数据完整性方面表现出色，可以在一切准备好后延迟处理。
- en: On the other hand, data streaming can do so by waiting additional time means
    keeping data in memory for hours or a day, and it is expensive to accomplish this
    goal. Streaming can also deliver a complete dataset but requires the upstream
    data generator to cooperate to solve the data consolidation and extra delay.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，数据流可以通过等待额外的时间，即在内存中保持数据几个小时或一天，来实现这一目标，这样做是昂贵的。流处理也可以提供完整的数据集，但需要上游数据生成器的配合，以解决数据整合和额外延迟的问题。
- en: '**The accurate SLA for your use case**'
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**你的用例的准确SLA**'
- en: How fast do you need your streaming system to process data, and how much latency
    can you accept for your use case? Many ETL batch pipeline is processed daily.
    Is that slow for your business? Many use cases are **NOT** SLA restricted. Unlike
    advertisement or day trading, delays for hours won’t stop the company from operating
    regularly.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要你的流处理系统处理数据的速度有多快？你的用例可以接受多少延迟？许多ETL批处理管道是每天处理的。这对你的业务来说是否太慢了？许多用例**不**受服务水平协议（SLA）的限制。与广告或日间交易不同，几个小时的延迟不会阻止公司正常运营。
- en: Streaming data is not easy to maintain
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 流数据不容易维护
- en: Late arrival data
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 迟到的数据
- en: 'One inevitable fact for any data processing system is: **Data Arrives Late**.
    A well-designed system could sometimes dodge this problem but only occasionally.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何数据处理系统来说，一个不可避免的事实是：**数据到达迟缓**。一个设计良好的系统有时可以规避这个问题，但只是偶尔。
- en: In batch processing, late arrival data is not a big concern since data is processed
    much later than its event date, and SLA isn’t strict to minutes or hours. People
    who work in batch processing have a lower expectation that data will arrive within
    24 hours or more.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在批处理过程中，迟到的数据不是一个大问题，因为数据处理的时间远晚于事件日期，并且SLA的要求不严格到分钟或小时。那些从事批处理的人对数据将在24小时或更长时间内到达的期望较低。
- en: 'Streaming isn’t a solution for a “catch-all” scenario—concepts like the [watermark](https://nightlies.apache.org/flink/flink-docs-master/docs/dev/datastream/event-time/generating_watermarks/)
    give an additional buffer for us to process that late arrival data. However, the
    watermark is another way to keep data in memory for some time. Memory isn’t free:
    at a further point, the watermark has to advance, and you decide to drop the record
    or send it to a dead queue for another process to reprocess — batch processing.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 流处理不是“万无一失”的解决方案——像[水印](https://nightlies.apache.org/flink/flink-docs-master/docs/dev/datastream/event-time/generating_watermarks/)这样的概念为我们处理迟到的数据提供了额外的缓冲。然而，水印是另一种将数据保存在内存中的方式。内存不是免费的：在进一步的点上，水印必须推进，你决定丢弃记录或将其发送到死队列，以便另一个过程重新处理——批处理。
- en: 24/7 maintenance
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 24/7维护
- en: Maintaining a streaming application is demanding. Unlike batch processing, you
    have a downtime window in which you can relax to decide to fix a bug or drink
    a coffee.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 维护流处理应用程序是很有挑战性的。与批处理不同，你在停机窗口中可以放松，决定是否修复一个错误或喝杯咖啡。
- en: With streaming data processing, 24/7 with minimum downtime is required. Your
    on-call team must monitor and fix potential data issues to keep the pipeline running.
    Streaming might sound exciting, but being on call as a data engineer who maintains
    a streaming pipeline takes a lot of work.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在流数据处理过程中，需要24/7的监控和最小的停机时间。你的值班团队必须监控并修复潜在的数据问题，以保持管道的运行。流处理可能听起来很令人兴奋，但作为维护流处理管道的数据工程师，值班需要付出很多努力。
- en: '**The join date is way more complex.**'
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**连接数据的复杂性要高得多。**'
- en: Join data with multiple streams isn’t trivial in streaming. In batch, joining
    is easy by stitching a set of standard keys with two bounded tables. In streaming,
    careful consideration must be taken where two unbounded datasets join together.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在流处理中，与多个流的数据连接并不是简单的。在批处理时，通过将一组标准键与两个有界表连接，连接非常简单。在流处理中，必须仔细考虑两个无界数据集如何连接。
- en: 'A bigger question arises: How do we know if there are still incoming records
    we’d need to consider? Tyler’s [Streaming 102](https://www.oreilly.com/radar/the-world-beyond-batch-streaming-102/)
    has a great example to demonstrate this. tl;dr, joining data among different streams
    is far more complex than batch processing'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 一个更大的问题出现了：我们如何知道是否还有需要考虑的传入记录？Tyler的[Streaming 102](https://www.oreilly.com/radar/the-world-beyond-batch-streaming-102/)提供了一个很好的示例来演示这一点。简而言之，在不同流之间连接数据比批处理复杂得多。
- en: Final thoughts
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最后思考
- en: Before adopting a streaming application, it’s critical to understand if your
    use case suits it.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在采用流处理应用程序之前，了解你的用例是否适合流处理是至关重要的。
- en: Processing data in streaming fashion is exciting and attractive.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 以流式方式处理数据是令人兴奋和吸引人的。
- en: However, there is a cost for the excitement. Batch processing is more straightforward
    and has been historically approved for decades. Understanding the pros and cons
    before blindly jumping into data streaming processing should be carefully evaluated.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，激动的背后是成本。批处理更为直接，并且已被历史认可数十年。在盲目进入数据流处理之前，理解其优缺点应当被仔细评估。
- en: 'I hope this story is helpful to you. This article is **part of a series** of
    my engineering & data science stories that currently consist of the following:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望这个故事对你有所帮助。本文是我的工程与数据科学故事系列中的**一部分**，目前包括以下内容：
- en: '![Chengzhi Zhao](../Images/51b8d26809e870b4733e4e5b6d982a9f.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![Chengzhi Zhao](../Images/51b8d26809e870b4733e4e5b6d982a9f.png)'
- en: '[Chengzhi Zhao](https://chengzhizhao.medium.com/?source=post_page-----e233e192337b--------------------------------)'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '[Chengzhi Zhao](https://chengzhizhao.medium.com/?source=post_page-----e233e192337b--------------------------------)'
- en: Data Engineering & Data Science Stories
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据工程与数据科学故事
- en: '[View list](https://chengzhizhao.medium.com/list/data-engineering-data-science-stories-ddab37f718e7?source=post_page-----e233e192337b--------------------------------)53
    stories![](../Images/8b5085966553259eef85cc643e6907fa.png)![](../Images/9dcdca1fc00a5694849b2c6f36f038d4.png)![](../Images/2a6b2af56aa4d87fa1c30407e49c78f7.png)'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[查看列表](https://chengzhizhao.medium.com/list/data-engineering-data-science-stories-ddab37f718e7?source=post_page-----e233e192337b--------------------------------)53个故事![](../Images/8b5085966553259eef85cc643e6907fa.png)![](../Images/9dcdca1fc00a5694849b2c6f36f038d4.png)![](../Images/2a6b2af56aa4d87fa1c30407e49c78f7.png)'
- en: You can also [**subscribe to my new articles**](https://chengzhizhao.medium.com/subscribe)
    or become a [**referred Medium member**](https://chengzhizhao.medium.com/membership)with
    unlimited access to all the stories on Medium.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以[**订阅我的新文章**](https://chengzhizhao.medium.com/subscribe)或成为[**推荐的Medium会员**](https://chengzhizhao.medium.com/membership)，享受Medium上所有故事的无限访问。
- en: In case of questions/comments, **do not hesitate to write in the comments**
    of this story or **reach me directly** through [Linkedin](https://www.linkedin.com/in/chengzhizhao/)
    or [Twitter](https://twitter.com/ChengzhiZhao).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有问题或评论，**请随时在本故事的评论区留言**，或通过[Linkedin](https://www.linkedin.com/in/chengzhizhao/)或[Twitter](https://twitter.com/ChengzhiZhao)与我直接联系。
