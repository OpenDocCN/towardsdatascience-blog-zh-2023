- en: Quantifying Transportation Patterns Using GTFS Data
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 GTFS 数据量化交通模式
- en: 原文：[https://towardsdatascience.com/quantifying-transportation-patterns-using-gtfs-data-16ac3146678b?source=collection_archive---------3-----------------------#2023-12-04](https://towardsdatascience.com/quantifying-transportation-patterns-using-gtfs-data-16ac3146678b?source=collection_archive---------3-----------------------#2023-12-04)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/quantifying-transportation-patterns-using-gtfs-data-16ac3146678b?source=collection_archive---------3-----------------------#2023-12-04](https://towardsdatascience.com/quantifying-transportation-patterns-using-gtfs-data-16ac3146678b?source=collection_archive---------3-----------------------#2023-12-04)
- en: '![](../Images/3e31e03dfd6c7f5378c6c47506ddbf85.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3e31e03dfd6c7f5378c6c47506ddbf85.png)'
- en: In this article, I explore the public transport systems of four selected cities
    relying on General Transit Feed Specification and various tools of spatial data
    science.
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在这篇文章中，我探讨了依托于通用交通信息规范（General Transit Feed Specification）和各种空间数据科学工具的四个精选城市的公共交通系统。
- en: '[](https://medium.com/@janosovm?source=post_page-----16ac3146678b--------------------------------)[![Milan
    Janosov](../Images/77b62460041f66ec4585a81baef81a03.png)](https://medium.com/@janosovm?source=post_page-----16ac3146678b--------------------------------)[](https://towardsdatascience.com/?source=post_page-----16ac3146678b--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----16ac3146678b--------------------------------)
    [Milan Janosov](https://medium.com/@janosovm?source=post_page-----16ac3146678b--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@janosovm?source=post_page-----16ac3146678b--------------------------------)[![Milan
    Janosov](../Images/77b62460041f66ec4585a81baef81a03.png)](https://medium.com/@janosovm?source=post_page-----16ac3146678b--------------------------------)[](https://towardsdatascience.com/?source=post_page-----16ac3146678b--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----16ac3146678b--------------------------------)
    [Milan Janosov](https://medium.com/@janosovm?source=post_page-----16ac3146678b--------------------------------)'
- en: ·
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F838408aa2ad4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquantifying-transportation-patterns-using-gtfs-data-16ac3146678b&user=Milan+Janosov&userId=838408aa2ad4&source=post_page-838408aa2ad4----16ac3146678b---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----16ac3146678b--------------------------------)
    ·12 min read·Dec 4, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F16ac3146678b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquantifying-transportation-patterns-using-gtfs-data-16ac3146678b&user=Milan+Janosov&userId=838408aa2ad4&source=-----16ac3146678b---------------------clap_footer-----------)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F838408aa2ad4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquantifying-transportation-patterns-using-gtfs-data-16ac3146678b&user=Milan+Janosov&userId=838408aa2ad4&source=post_page-838408aa2ad4----16ac3146678b---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----16ac3146678b--------------------------------)
    ·12分钟阅读·2023年12月4日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F16ac3146678b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquantifying-transportation-patterns-using-gtfs-data-16ac3146678b&user=Milan+Janosov&userId=838408aa2ad4&source=-----16ac3146678b---------------------clap_footer-----------)'
- en: --
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F16ac3146678b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquantifying-transportation-patterns-using-gtfs-data-16ac3146678b&source=-----16ac3146678b---------------------bookmark_footer-----------)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F16ac3146678b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquantifying-transportation-patterns-using-gtfs-data-16ac3146678b&source=-----16ac3146678b---------------------bookmark_footer-----------)'
- en: I picked four cities in this notebook, Budapest, Berlin, Stockholm, and Toronto,
    to overview their public transport system using publicly available GTFS (General
    Transit Feed Specification) data. This notebook aims to serve as an introductory
    tutorial on accessing, manipulating, aggregating, and visualising public transport
    data using Pandas, GeoPandas, and other standard data science tools to derive
    insights about public transport. Later on, such understanding can be helpful in
    various use cases, such as transport, urban planning, and location intelligence.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我在这个笔记本中选择了四个城市：布达佩斯、柏林、斯德哥尔摩和多伦多，使用公开可用的GTFS（通用交通信息规范）数据概述它们的公共交通系统。这个笔记本旨在作为一个入门教程，介绍如何使用Pandas、GeoPandas和其他标准数据科学工具访问、操作、聚合和可视化公共交通数据，以获取有关公共交通的见解。后来，这种理解在各种应用场景中都可能有帮助，如交通、城市规划和位置智能。
- en: Additionally, while the GTFS format is supposed to be general and universal,
    I will also point out situations that still require one-by-one, city-level insights
    and manual validations throughout the following analytical steps.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，尽管GTFS格式应具有通用性和普遍性，我也会指出在接下来的分析步骤中仍需逐一进行城市级别的见解和人工验证的情况。
- en: '*In this article, all images were created by the author.*'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '*在这篇文章中，所有图像均由作者创建。*'
- en: 1\. Collect and parse GTFS data
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 收集和解析GTFS数据
- en: 'For this article, I downloaded public transport data from Transitfeeds.com,
    an online aggregator website for public transport data. In particular, I downloaded
    data with the following latest update times for the following cities:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这篇文章，我从Transitfeeds.com下载了公共交通数据，这是一个公共交通数据的在线汇总网站。特别是，我下载了以下城市的最新更新时间的数据：
- en: '[Budapest](https://transitfeeds.com/p/bkk/42) (September 2023)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[布达佩斯](https://transitfeeds.com/p/bkk/42)（2023年9月）'
- en: '[Berlin](https://transitfeeds.com/p/verkehrsverbund-berlin-brandenburg/213)
    (May 2021)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[柏林](https://transitfeeds.com/p/verkehrsverbund-berlin-brandenburg/213)（2021年5月）'
- en: '[Stockholm](https://transitfeeds.com/p/storstockholms-lokaltrafik/1086) (February
    2020)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[斯德哥尔摩](https://transitfeeds.com/p/storstockholms-lokaltrafik/1086)（2020年2月）'
- en: '[Toronto](https://transitfeeds.com/p/ttc/33) (October 2020)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[多伦多](https://transitfeeds.com/p/ttc/33)（2020年10月）'
- en: 'In the following code blocks, I will explore each of these cities multiple
    times, create comparative plots, and stress out the universality of the GTFS format.
    Also, to ensure that my analytics are easy to update with newer data dumps, I
    store each city’s GTFS data in a folder corresponding to the update date:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的代码块中，我将多次探索这些城市，创建比较图，并强调GTFS格式的通用性。此外，为了确保我的分析可以轻松更新到最新的数据转储，我将每个城市的GTFS数据存储在一个对应于更新日期的文件夹中：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The output of this cell:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 此单元格的输出：
- en: '![](../Images/85025766848359c06e5112cf1da76e92.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/85025766848359c06e5112cf1da76e92.png)'
- en: The exact recording time of my GTFS data dumps.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我的GTFS数据转储的确切记录时间。
- en: 'Now, let’s take a closer look at the different files stored in these folders:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们更详细地查看这些文件夹中存储的不同文件：
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The output of this cell:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 此单元格的输出：
- en: '![](../Images/06449b79f2383f9ca78850a749ad3c4b.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/06449b79f2383f9ca78850a749ad3c4b.png)'
- en: The lists of files in the different cities GTFS dumps.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 不同城市GTFS数据转储中的文件列表。
- en: It looks like eight files are present in all of them, resembling to the core
    of the GTFS structure.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来所有这些文件中都有八个文件，类似于GTFS结构的核心部分。
- en: While you can read more about the GTFS structure [here](/where-is-the-bus-gtfs-will-tell-us-f8adc18a2f8e),
    now I will go on with probably the most basic geospatial feature — the location
    of the public transport stops.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然你可以在[这里](/where-is-the-bus-gtfs-will-tell-us-f8adc18a2f8e)阅读更多关于GTFS结构的内容，但现在我将继续讨论可能最基本的地理空间特征——公共交通站点的位置。
- en: 2\. Public transport stop locations
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 公共交通站点位置
- en: First, I created a sample visual where I parse the stops.txt for Budapest. Then,
    I use [Shapely](https://shapely.readthedocs.io) and GeoPandas to create a geometric
    data structure, a GeoDataFrame, by creating Point geometries using the long and
    lat coordinates of each stop location. Then, using the built-in Matplotlib-based
    plotter of [GeoPandas](http://geopandas.org), I create a simple map. Additionally,
    I use [OSMNx](http://osmnx.readthedocs.io) to add the boundaries of the city as
    an enclosing polygon.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我创建了一个示例可视化，解析了布达佩斯的stops.txt文件。然后，我使用[Shapely](https://shapely.readthedocs.io)和GeoPandas，通过使用每个站点位置的经纬度坐标创建Point几何体，创建一个几何数据结构，即GeoDataFrame。接着，使用[GeoPandas](http://geopandas.org)内置的基于Matplotlib的绘图工具，我创建了一个简单的地图。此外，我还使用[OSMNx](http://osmnx.readthedocs.io)将城市边界添加为一个封闭的多边形。
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The resulting figure:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 结果图：
- en: '![](../Images/2de2f7a180101354a1ae3af0f7ff9aa0.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2de2f7a180101354a1ae3af0f7ff9aa0.png)'
- en: The location of public transport stops in Budapest.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 布达佩斯公共交通停靠点的位置。
- en: Looks good at first! The vast majority of stop locations are within the city;
    there are just a few commuter lines that fall outside of it. Also, in the centre
    of the plot, we can clearly see the lack of stop locations where the river Danube
    flows. Now, let’s see this plot for all the cities!
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 起初看起来不错！绝大多数停靠点位置都在城市内；只有少数通勤线路位于城市之外。此外，在图的中心，我们可以清楚地看到多瑙河流经的地方没有停靠点。现在，让我们看看所有城市的这张图！
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/747570e008067e45a9da15d10f803037.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/747570e008067e45a9da15d10f803037.png)'
- en: The public transport stop locations for all four target cities — unfiltered.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 四个目标城市的公共交通停靠点位置——未过滤。
- en: Now that we have seen five cities, we can add a few more shades to our conclusion
    about the generality of GTFS and public transport data. On the one hand, from
    the tech perspective, they indeed look very similar across cities and local transport
    agencies. On the other hand, one certainly has to inspect each city separately
    when added to a pipeline because, as both the cases of Stockholm and Toronto show,
    the data associated with the city actually belongs to a larger, e.g. municipality-level
    territory. The good news is that adding the admin boundary, for instance, from
    OpenStreetMap, makes it easy to filter the data down to the actual city!
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经研究了五个城市，我们可以对GTFS和公共交通数据的一般性得出更多的结论。一方面，从技术角度来看，这些数据在城市和地方交通机构之间确实非常相似。另一方面，当将数据添加到管道中时，必须单独检查每个城市，因为如斯德哥尔摩和多伦多的案例所示，与城市相关的数据实际上属于更大的，例如市政级别的区域。好消息是，例如，添加来自OpenStreetMap的行政边界，使得将数据过滤到实际城市变得容易！
- en: In fact, I just did this last filtering step in the lat-but-one row of the previous
    code block and stored the city-level stop locations in the *stops* dictionary.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，我在前一个代码块的倒数第二行进行了最后的过滤步骤，并将城市级别的停靠点位置存储在*stops*字典中。
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/2b4e48221c33319cc3884f945a974aef.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2b4e48221c33319cc3884f945a974aef.png)'
- en: The public transport stop locations for all four target cities — filtered.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 四个目标城市的公共交通停靠点位置——过滤后。
- en: 3\. Departure times
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 出发时间
- en: First, we explored where the stops are; now, let’s take a look at when one should
    approach them. Also, assuming that the public transport services have significant
    insights into the demand and inhabitants’ schedules and habits, we may also learn
    some insights from these schedules’ temporal patterns.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们探讨了停靠点的位置；现在，让我们看看何时应该接近这些点。另外，假设公共交通服务对需求和居民的时间表及习惯有显著见解，我们也可以从这些时间表的时间模式中获取一些见解。
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The output of this code block:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这个代码块的输出：
- en: '![](../Images/3c0ee44bb53b1bae98a031b8dc131c4a.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3c0ee44bb53b1bae98a031b8dc131c4a.png)'
- en: The number of stop locations in each city and a sample on their schedule tables.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 每个城市的停靠点数量及其时间表的样本。
- en: 'After reading, parsing, and transforming the departure time information, let’s
    create a series of visuals about each city’s city-level departure time distribution:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在读取、解析和转换出发时间信息后，让我们创建一系列关于每个城市城市级别出发时间分布的视觉图：
- en: '[PRE6]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The output image of this code block:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这个代码块的输出图像：
- en: '![](../Images/58b4c40d879891704e5c36e6a22a8d33.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/58b4c40d879891704e5c36e6a22a8d33.png)'
- en: The daily trip departure frequency in each target city.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 每个目标城市的每日出发频率。
- en: While giving a proper, detaild interpretation of these graphs probably requires
    some serious local urban planning knowledge, one can also speculate a bit based
    on personal experience and common sense.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然对这些图表进行适当、详细的解释可能需要一些严肃的地方城市规划知识，但也可以根据个人经验和常识进行一些推测。
- en: First, given these cities’ quite different climate, cultural background, and
    day-night rhythms, I was surprised to see how well-aligned each of them are to
    the 8 am start-of-the-day. Budapest, Berlin, and Stockholm all have nearly the
    same wake-up pattern, while interestingly, Toronto takes a little longer to get
    up and running.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，考虑到这些城市气候、文化背景和昼夜节律的差异，我对它们在早上8点的对齐程度感到惊讶。布达佩斯、柏林和斯德哥尔摩都有几乎相同的起床模式，而有趣的是，多伦多的起床时间稍长一些。
- en: Second, there seems to be a clear order of when the afternoon ends — finishing
    the earliest in Berlin, Budapest, Toronto, and Stockholm. A curious question is
    whether these times do mark the end of the working shifts or the time people go
    home.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，下午结束的时间似乎有一个明确的顺序——柏林最早结束，其次是布达佩斯、多伦多和斯德哥尔摩。一个有趣的问题是这些时间是否标志着工作班次的结束或人们回家的时间。
- en: Third, the morning and afternoon peaks are clearly distinguishable for Budapest
    and Stockholm, while not so much for Berlin and Toronto, which may relate to how
    heavily centralised these cities are.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 第三，布达佩斯和斯德哥尔摩的早晚高峰明显可区分，而柏林和多伦多则不那么明显，这可能与这些城市的中心化程度有关。
- en: 4\. Spatial distributions
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 空间分布
- en: Computing general trends are possible for tabular data, float/integer variables,
    and spatial information. The process behind it is called spatial indexing. [Spatial
    indexing](https://postgis.net/workshops/postgis-intro/indexing.html), in practice,
    means that we split the area, such as the admin boundaries of a city, into a regular
    grid. My personal favourite is Uber’s [H3 hexagon](https://www.uber.com/en-HU/blog/h3/)
    grid — you will find more about it here. Using this grid, we can efficiently conduct
    spatial aggregation by counting the number of stops in each grid cell! Let’s try
    it at different hexagon resolutions.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 对于表格数据、浮点数/整数变量和空间信息，计算一般趋势是可能的。这个过程被称为空间索引。[空间索引](https://postgis.net/workshops/postgis-intro/indexing.html)在实践中意味着我们将一个区域，例如城市的行政边界，划分成规则的网格。我的个人最爱是Uber的[H3六边形](https://www.uber.com/en-HU/blog/h3/)网格——你可以在这里了解更多。使用这个网格，我们可以通过计算每个网格单元格中的停靠点数量来高效地进行空间聚合！让我们尝试不同的六边形分辨率。
- en: '[PRE7]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../Images/a6412debbedd0822a3bda735ff15fba2.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a6412debbedd0822a3bda735ff15fba2.png)'
- en: Budapest — hexagon grids.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 布达佩斯——六边形网格。
- en: '*Technical note:* When I was working on the next cell, I ran into an error
    — namely, it turned out that the admin boundaries of Berlin were a MultiPolygon,
    while all the other city admin areas are simple Polygons, and that is also what
    my *split_admin_boundary_to_hexagons* function is expecting as an input. So I
    checked, and it turned out that, for some reason, there was an extra tiny polygon
    within, with near-zero area, so I had to clean it up by running the following
    command:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '*技术说明：* 当我在处理下一个单元时，我遇到了一个错误——即，柏林的行政边界是一个多边形，而所有其他城市的行政区域都是简单的多边形，这也是我的 *split_admin_boundary_to_hexagons*
    函数期望的输入。因此，我检查了一下，结果发现由于某种原因，存在一个额外的小多边形，面积几乎为零，所以我不得不通过运行以下命令来清理它：'
- en: '[PRE8]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Now that we have a working pilot for the H3 grid construction, let’s count the
    number of stops and number of stoppings in each hexagon in the four example cities.
    While to compute the number of stop locations, we only need to do a spatial join;
    we also need to incorporate the departure times to compute the number of stoppings.
    This way, we also make the spatial and temporal dimensions meet!
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经有了H3网格构建的工作原型，让我们计算四个示例城市中每个六边形的停靠点数量和停靠次数。为了计算停靠点位置的数量，我们只需进行空间连接；但要计算停靠次数，我们还需要结合出发时间。这样，我们也使空间和时间维度得以结合！
- en: '[PRE9]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Let’s see how this looks like:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这是什么样的：
- en: '![](../Images/274d57daa309d65807db12bcfc34a4f0.png)![](../Images/d1c325125551bf7d5f64c552479301a0.png)![](../Images/0414bdca9f90d60f2e4ad55f10a31b51.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/274d57daa309d65807db12bcfc34a4f0.png)![](../Images/d1c325125551bf7d5f64c552479301a0.png)![](../Images/0414bdca9f90d60f2e4ad55f10a31b51.png)'
- en: 5\. Different modes of transport
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5\. 不同的交通方式
- en: Now, we have seen aggregated trends in time and space. Now, let’s zoom in and
    extract the different means of transportation corresponding to the data records.
    This information is usually stored in the *routes.txt*, under the column *route_type*.
    [This](https://developers.google.com/transit/gtfs/reference/extended-route-types),
    [this](https://developers.google.com/transit/gtfs/reference), and [this](https://www.transit.land/routes/r-u0wj-717)
    mapping can encode transportation mode codes to their English names.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经看到时间和空间中的聚合趋势。接下来，让我们放大并提取与数据记录相对应的不同交通方式。这些信息通常存储在 *routes.txt* 中，在
    *route_type* 列下。[这个](https://developers.google.com/transit/gtfs/reference/extended-route-types)、[这个](https://developers.google.com/transit/gtfs/reference)
    和 [这个](https://www.transit.land/routes/r-u0wj-717) 映射可以将交通方式代码编码为其英文名称。
- en: Based on these, I created the official map and then a simplified version of
    it, which I will use later. In the simplified version, I renamed, for instance,
    both the category ‘Tram, Streetcar, Light rail’ (code 0) and the category ‘Tram
    Service’ (code 900) to just ‘Tram’.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 基于这些，我创建了官方地图和一个简化版本，稍后我会使用。在简化版本中，我将例如‘电车、街车、轻轨’（代码0）和‘电车服务’（代码900）两个类别都重命名为‘电车’。
- en: '[PRE10]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Now, visualise the frequency of each transportation mean, measured by the number
    of possible routes:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，直观地展示每种交通方式的频率，测量方式是通过可能的路线数量：
- en: '[PRE11]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'This codeblock outputs the following figure:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这个代码块输出了以下图形：
- en: '![](../Images/cc520c787039984f4f7e3b03e199a53a.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cc520c787039984f4f7e3b03e199a53a.png)'
- en: Transportation mode distribution across the studied cities.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 研究城市间交通模式的分布。
- en: 6\. Route shapes
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 6. 路线形状
- en: After the spatio-temporal aggregations and transport-mean zoom-in, last but
    not least, I would like to highlight my most favourite part — the GPS point sequences
    logging the shape of each route.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行时空聚合和交通工具缩放后，最后但同样重要的是，我想强调我最喜欢的部分——记录每条路线形状的GPS点序列。
- en: 'Access it this way:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 以这种方式访问：
- en: '[PRE12]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The output of this cell:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 本单元的输出：
- en: '![](../Images/d6f099dff9979c770c822ef0d59c404d.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d6f099dff9979c770c822ef0d59c404d.png)'
- en: The route shape table of Budapest.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 布达佩斯的路线形状表。
- en: Now convert this route table, for the case of Budapest, into a GeoDataFrame
    consisting of LineStrings, add the route type mapping from the previous section,
    and use the tripst.txt GTFS file, which connects routes (and means of transports)
    to shapes.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，将布达佩斯的路线表转换为由LineStrings组成的GeoDataFrame，添加上一节的路线类型映射，并使用连接路线（和交通工具）到形状的tripst.txt
    GTFS文件。
- en: The result will be a geographical map of the public transport road network,
    which we can colour, for instance, based on the means of transport following the
    previous section’s colour coding.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 结果将是一个公共交通道路网络的地理地图，我们可以根据前一部分的颜色编码来上色，例如，按照交通工具的不同颜色进行标记。
- en: '[PRE13]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The resulting figures for each city:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 每个城市的结果图：
- en: '![](../Images/859a53b44d159e6af702bc4be5595ce1.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/859a53b44d159e6af702bc4be5595ce1.png)'
- en: Budapest — with just a few lines venturing out ot the agglomeration.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 布达佩斯——仅有少数线路延伸至城市聚集区之外。
- en: '![](../Images/0fed29400890a94ec8af880e4c494f0f.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0fed29400890a94ec8af880e4c494f0f.png)'
- en: Toronto — with its highly contained public transport network.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 多伦多——拥有高度集中的公共交通网络。
- en: '![](../Images/e688045f1afc5924e863bc587b71493c.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e688045f1afc5924e863bc587b71493c.png)'
- en: Berlin — showing how its train lines start from the city and intertwine the
    country.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 柏林——展示了其铁路线路如何从城市开始并交织于乡村。
- en: '![](../Images/3e31e03dfd6c7f5378c6c47506ddbf85.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3e31e03dfd6c7f5378c6c47506ddbf85.png)'
- en: Stockholm — with its public transport network starting from the city but reaching
    the countryside.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 斯德哥尔摩——其公共交通网络从城市出发，但扩展到乡村。
- en: Conclusion
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In this article, I briefly overview the technicalities needed to explore GTFS
    data and explore different cities’ public transport systems in a streamlined way.
    While the general format used in all these cities makes it very handy and easy
    to adopt analytical tasks from one town to another, my findings and results also
    outline the importance of one-by-one city-level validation and sanity checks due
    to some minor flexibility in definitions and terminologies in different cities.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我简要概述了探索GTFS数据所需的技术细节，并以流线型的方式探索不同城市的公共交通系统。虽然所有这些城市使用的通用格式使得从一个城市到另一个城市的分析任务变得非常方便和易于采用，但我的发现和结果也突出了由于不同城市定义和术语的细微差别，逐个城市级别的验证和合理性检查的重要性。
- en: Finally, if you would like to travel back in time and see a similar, transport-related
    analysis going back to ancient Rome, check my previous TDS article, “[Do All the
    Roads Lead to Rome?](/do-all-the-roads-lead-to-rome-5b6756ce7d52)”.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，如果你想回到过去，查看类似的交通相关分析回溯到古罗马，请查看我之前的TDS文章，“[所有道路都通往罗马吗？](/do-all-the-roads-lead-to-rome-5b6756ce7d52)”。
