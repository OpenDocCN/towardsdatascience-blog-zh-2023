- en: Svelte & Data Visualisation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Svelte & 数据可视化
- en: 原文：[https://towardsdatascience.com/svelte-data-visualisation-6210e8164e74](https://towardsdatascience.com/svelte-data-visualisation-6210e8164e74)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/svelte-data-visualisation-6210e8164e74](https://towardsdatascience.com/svelte-data-visualisation-6210e8164e74)
- en: '![](../Images/81954de2afaf7180320431e00696f500.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/81954de2afaf7180320431e00696f500.png)'
- en: 'Svelte Bar Chart (source: author, 2023)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Svelte 条形图（来源：作者，2023年）
- en: Creating interactive bar chart with Svelte
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Svelte 创建交互式条形图
- en: '[](https://sutan.co.uk/?source=post_page-----6210e8164e74--------------------------------)[![Sutan
    Mufti](../Images/0a7922168ff75a80b2ddb38d4a142f37.png)](https://sutan.co.uk/?source=post_page-----6210e8164e74--------------------------------)[](https://towardsdatascience.com/?source=post_page-----6210e8164e74--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----6210e8164e74--------------------------------)
    [Sutan Mufti](https://sutan.co.uk/?source=post_page-----6210e8164e74--------------------------------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://sutan.co.uk/?source=post_page-----6210e8164e74--------------------------------)[![Sutan
    Mufti](../Images/0a7922168ff75a80b2ddb38d4a142f37.png)](https://sutan.co.uk/?source=post_page-----6210e8164e74--------------------------------)[](https://towardsdatascience.com/?source=post_page-----6210e8164e74--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----6210e8164e74--------------------------------)
    [Sutan Mufti](https://sutan.co.uk/?source=post_page-----6210e8164e74--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----6210e8164e74--------------------------------)
    ·6 min read·Mar 20, 2023
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----6210e8164e74--------------------------------)
    ·阅读时间 6 分钟·2023年3月20日
- en: --
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: Data visualisation draws insight to what lives in our data. The usual way is
    to make graphs or maps. We can do this, usually in a spreadsheet software such
    as Microsoft Excel or Google Sheets. Usually this is enough, but we can make it
    fancier by adding interactivity. A simple example of adding interactivity is by
    adding a slicer which filters our data based on the category. In Microsoft Excel,
    we can activate the “developer” tab and add form elements such as buttons, check
    lists, etc.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 数据可视化揭示了我们数据中的信息。通常的方法是制作图表或地图。我们可以在诸如 Microsoft Excel 或 Google Sheets 的电子表格软件中完成这项工作。通常这已经足够了，但我们可以通过添加交互性来使其更具吸引力。一个简单的交互性添加例子是通过添加切片器来根据类别筛选数据。在
    Microsoft Excel 中，我们可以启用“开发者”选项卡并添加表单元素，如按钮、复选框等。
- en: With modern software technology, the classic tool to create such an interactive
    data experience is using d3.js in a vanilla javascript. It’s amazing how simple
    it works yet the result can be beautiful. However, the vanilla javascript feels
    outdated compared to modern frameworks such as React, Angluar, Vue, etc. People
    know these frameworks, but I feel like there is one UI framework for data visualisation
    that is underrated; you guessed it by the title, this is Svelte. Considering its
    young ecosystem, I think this amazing framework needs to be popularised to reach
    more people to either employ it or develop it; particularly for data science.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 使用现代软件技术，创建这种交互式数据体验的经典工具是使用 d3.js 以及原生 JavaScript。它的工作原理如此简单，却能产生美丽的结果，真是令人惊叹。然而，与
    React、Angular、Vue 等现代框架相比，原生 JavaScript 感觉有些过时。虽然大家都知道这些框架，但我觉得有一个用于数据可视化的 UI
    框架被低估了；你从标题中猜到它就是 Svelte。考虑到它的年轻生态系统，我认为这个出色的框架需要被推广，以便让更多人使用或开发它；尤其是在数据科学领域。
- en: This article demonstrate Svelte in visualising data interactively (code link
    in the following github link). First, I will briefly explain its feature that
    distinguishes itself from other frameworks. Second, I will brief the data we are
    going to visualise, and our features. Finally, I will explain some snippets of
    how the code works; I am more focusing on the ideas rather to the syntaxes. At
    the end, we will make the interactive data UI like the article’s main gif image.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本文展示了 Svelte 在交互式数据可视化中的应用（代码链接见下文的 GitHub 链接）。首先，我将简要说明其区别于其他框架的特性。其次，我将概述我们将要可视化的数据和我们的特性。最后，我将解释一些代码片段的工作原理；我更侧重于理念而不是语法。最后，我们将制作一个如文章主要
    gif 图片所示的交互式数据 UI。
- en: Code
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代码
- en: Code is available in the following link.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 代码可在以下链接获取。
- en: '[](https://github.com/sutanmufti/svelte-data-visualisation?source=post_page-----6210e8164e74--------------------------------)
    [## GitHub - sutanmufti/svelte-data-visualisation: visualisation data with svelte'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://github.com/sutanmufti/svelte-data-visualisation?source=post_page-----6210e8164e74--------------------------------)
    [## GitHub - sutanmufti/svelte-data-visualisation: 使用 svelte 可视化数据'
- en: Created by Sutan Mufti (2023), this code is part of RekayasaData.co.uk project.
    This repository hosts the code that…
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 由Sutan Mufti（2023）创建的这段代码是RekayasaData.co.uk项目的一部分。这个代码库托管了代码……
- en: github.com](https://github.com/sutanmufti/svelte-data-visualisation?source=post_page-----6210e8164e74--------------------------------)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[github.com](https://github.com/sutanmufti/svelte-data-visualisation?source=post_page-----6210e8164e74--------------------------------)'
- en: Demo
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 演示
- en: 'you can find the demo here:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在这里找到演示：
- en: '[## London Population Data 2023'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 伦敦人口数据2023'
- en: Demo
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 演示
- en: ceritapeta.co.uk](https://ceritapeta.co.uk/svelte-visualisation/?source=post_page-----6210e8164e74--------------------------------)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[ceritapeta.co.uk](https://ceritapeta.co.uk/svelte-visualisation/?source=post_page-----6210e8164e74--------------------------------)'
- en: What is Svelte?
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是Svelte？
- en: Svelte is a framework to create User Interface by compiling its files into plain
    vanilla html + javascript and css. Svelte-kit is the fresh meta-framework to develop
    a svelte application. It just reached v1.0 just [last december (2022)](https://svelte.dev/blog/announcing-sveltekit-1.0).
    This is the great tool to start and manage svelte application.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Svelte是一个通过将其文件编译成纯HTML + JavaScript和CSS来创建用户界面的框架。Svelte-kit是开发svelte应用程序的新元框架。它刚刚在[去年12月（2022）](https://svelte.dev/blog/announcing-sveltekit-1.0)达到v1.0。这是一个很好的工具来开始和管理svelte应用程序。
- en: 'After months of using Svelte, I have fallen in love with the framework because
    of its amazing features. Personally, these features make them stand out and give
    amazing developing experience. For data science & visualisation, I think these
    features are the most useful:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用Svelte几个月后，我爱上了这个框架，因为它的惊人功能。个人认为，这些功能让它脱颖而出，并提供了出色的开发体验。对于数据科学和可视化，我认为这些功能最为有用：
- en: '**HMR (Hot-Module Replacement)**: when developing, the app persists its state
    while we change our code. This means live changes directly reflected in the browser
    while keeping the variable.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HMR（热模块替换）**：在开发过程中，应用程序在我们更改代码时保持其状态。这意味着实时更改会直接反映在浏览器中，同时保持变量。'
- en: '**Native Reactivity**: This will be demonstrated as the main feature of our
    app in this article! We do not have to manage the state in svelte. If you are
    familiar with React, this replaces the `useState` hook. Although, we still have
    to manage the connectivity between states in many components. A very small code
    to demonstrate this feature; **click a button, generate a random number, and display
    it in an html element**:'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**原生响应性**：这将作为本文中我们应用的主要功能进行演示！我们不需要在svelte中管理状态。如果你熟悉React，这相当于`useState`钩子。虽然，我们仍然需要管理多个组件之间的状态连接。一个非常简短的代码来演示这个功能；**点击一个按钮，生成一个随机数，并在HTML元素中显示它**：'
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](../Images/d98753051c54ec7e9df9b76168ffe5de.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d98753051c54ec7e9df9b76168ffe5de.png)'
- en: 'Randomiser App (source: author, 2023)'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 随机器应用（来源：作者，2023）
- en: You can paste the above code into a svelte file as is!
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以按原样将上述代码粘贴到svelte文件中！
- en: '![](../Images/1f89153e75ff179d9a9bb4a50184c022.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1f89153e75ff179d9a9bb4a50184c022.png)'
- en: 'Randomiser App Code (source: author, 2023)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 随机器应用代码（来源：作者，2023）
- en: '**Data Binding**: like `Document.querySelector` , the `bind` syntax attaches
    an element to the script’s variable. I think it’s easier to manage HTML element
    this way. I’ve given an example in looping and binding in the github repository.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据绑定**：类似于`Document.querySelector`，`bind`语法将一个元素绑定到脚本的变量上。我认为这种方式管理HTML元素更简单。我在github代码库中提供了一个循环和绑定的示例。'
- en: '![](../Images/78c5c440d1409534a41a8c3d626ef219.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/78c5c440d1409534a41a8c3d626ef219.png)'
- en: 'binding (source: author, 2023)'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 绑定（来源：作者，2023）
- en: Building the Interface
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建界面
- en: 'Building the interface requires a knowledge in HTML, Javascript and CSS. I
    prefer typescript to mitigate bug development as it makes us writing our code
    stricter than plain javascript. Now, let’s use the features (binding, reactivity,
    and HMR). The steps that I will discuss are:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 构建界面需要HTML、JavaScript和CSS的知识。我更喜欢typescript来减少bug开发，因为它使我们编写的代码比纯JavaScript更严格。现在，让我们使用这些功能（绑定、响应性和HMR）。我将讨论的步骤是：
- en: setting up the theme using `+layout.svelte`
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`+layout.svelte`设置主题
- en: setting up the data to be imported using ES6 syntax
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用ES6语法设置要导入的数据
- en: putting things together
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整合各个部分
- en: Setting up the Theme
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置主题
- en: First, I like to start with the root layout’s style. the `+layout.svelte` file
    defines the behaviour of all the svelte file. In this file, I only set the fonts,
    color, margin, and background colour. This is basically the “theme” of the app.
    Let’s keep it simple for this demo, at least it’s not the default.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我喜欢从根布局的样式开始。`+layout.svelte`文件定义了所有Svelte文件的行为。在这个文件中，我只设置了字体、颜色、边距和背景颜色。这基本上是应用的“主题”。为了这个演示，我们保持简单，至少它不是默认的。
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Setting up the Data
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置数据
- en: For this demo, we will use population data from the Greater London Area, UK.
    You can find the data [here](https://data.london.gov.uk/dataset/land-area-and-population-density-ward-and-borough).
    The data comes in csv format, and it is advisable to convert it into JSON format.
    Using `pandas` this is very simple thanks to the `to_json("data.json", orient="record")`
    . Please note the `orient` argument as this is the structure that is simpler to
    work with; which is a schema-less style data like MongoDB. This way, we can use
    `forEach` or `map` method in Javascript to only one array.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个演示中，我们将使用来自英国大伦敦地区的人口数据。你可以在[这里](https://data.london.gov.uk/dataset/land-area-and-population-density-ward-and-borough)找到这些数据。数据格式为csv，建议将其转换为JSON格式。使用`pandas`非常简单，因为有`to_json("data.json",
    orient="record")`。请注意`orient`参数，它表示一种无模式的风格数据，类似于MongoDB。这样，我们可以在Javascript中使用`forEach`或`map`方法来处理一个数组。
- en: 'In the ES6 syntax, we can use `import` to import variables or objects from
    other script files. As our data is basically a JSON, we can define this as a variable
    like this example:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在ES6语法中，我们可以使用`import`从其他脚本文件中导入变量或对象。由于我们的数据基本上是JSON，我们可以像这样将其定义为一个变量：
- en: '[PRE2]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: then we can import and de-structure the data into the main script file
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以将数据导入并解构到主脚本文件中。
- en: '[PRE3]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In my example, we store the London population data in `./src/routes/population_london.ts`
    under the variable name `LondonData`.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的示例中，我们将伦敦人口数据存储在`./src/routes/population_london.ts`文件中，变量名为`LondonData`。
- en: Building the App
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建应用
- en: 'Let’s divide this section to two subsections: handling the user’s events and
    actually visualising the data.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将这一部分分成两个小节：处理用户事件和实际可视化数据。
- en: Binding & the User’s Events
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绑定与用户事件
- en: First, we create an option form field that user can use to select a borough.
    Look at the following code, we use `bind` the form value into the `selectionIndex`
    . In the future components, we can use `selectionIndex` that dynamically changes
    following the user’s events.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们创建一个选项表单字段，用户可以用来选择一个区。请查看以下代码，我们使用`bind`将表单值绑定到`selectionIndex`。在未来的组件中，我们可以使用`selectionIndex`，它会根据用户的事件动态变化。
- en: '[PRE4]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Visualising the Data
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据可视化
- en: borrowing the idea in d3.js development paradigm, I am using the SVG to visualise
    the graph. Svelte comes with the native `each` syntax to loop over the variables.
    For each record in our population data, we want to create a rectangle and set
    the height to the density data. Look at the `height` attribute of the `rect`.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 借用d3.js开发范式的理念，我使用SVG来可视化图形。Svelte提供了原生的`each`语法来循环变量。对于我们的人口数据中的每条记录，我们想要创建一个矩形，并将高度设置为密度数据。查看`rect`的`height`属性。
- en: 'Then, the `on:click` attribute handles the click event when the user clicks
    on a bar. It’s callback that executes a function that takes the index of the rectangle’s
    argument. The `activateSelection(index: number)` basically sets the binded `selectionIndex`
    in the previous subsection. when the `selectionIndex` changes, the select-option
    form’s value also changes.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '然后，`on:click`属性处理用户点击条形图时的点击事件。它的回调执行一个函数，该函数接受矩形索引作为参数。`activateSelection(index:
    number)`基本上设置了前一节中绑定的`selectionIndex`。当`selectionIndex`改变时，选择选项表单的值也会改变。'
- en: '[PRE5]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The equivalent code in d3.js is as follows:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: d3.js中的等效代码如下：
- en: '[PRE6]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The Demo
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 演示
- en: Using the static adapter, we can build this into an ordinary `index.html` file
    to be served statically in a web-server such as apache httpd. The following link
    is the published demo; which is also this article main image at the top.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 使用静态适配器，我们可以将其构建为普通的`index.html`文件，以便在如apache httpd这样的Web服务器中静态服务。以下链接是已发布的演示，也是在文章顶部的主要图片。
- en: '[## London Population Data 2023'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 伦敦人口数据 2023'
- en: Demo using Svelte! ceritapeta.co.uk](https://ceritapeta.co.uk/svelte-visualisation/?source=post_page-----6210e8164e74--------------------------------)
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 演示使用Svelte! [ceritapeta.co.uk](https://ceritapeta.co.uk/svelte-visualisation/?source=post_page-----6210e8164e74--------------------------------)
- en: Conclusion
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: 'I think Svelte is an underrated tool in general, moreover for interactive data
    visualisation. In this demo, we do not even require additional libraries for data
    visualisation in a svelte app. I literally just imported the data and… display
    it using svelte. For now everything is static as I think this is enough to demonstrate
    the visualisation bit. What’s more interesting is that we haven’t explored the
    full exent of what svelte can do in this article. For instance, utilising `+server.js`
    to build API and integrate it into our app; or using the transition effects; or
    building components to enhance how the graph looks. One thing is for sure:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为 Svelte 是一个被低估的工具，特别是在交互式数据可视化方面。在这个演示中，我们甚至不需要额外的库来进行数据可视化，只需导入数据并使用 Svelte
    进行显示。目前一切都是静态的，因为我认为这样足以展示可视化部分。更有趣的是，我们在这篇文章中还没有探讨 Svelte 的全部潜力。例如，可以利用 `+server.js`
    构建 API 并将其集成到我们的应用中；或者使用过渡效果；或者构建组件以增强图表的外观。可以确定的是：
- en: The future of data visualisation with Svelte is exciting.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: Svelte 在数据可视化方面的未来令人兴奋。
- en: I hope you found this article useful. Thank you for reading.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望你觉得这篇文章有用。谢谢阅读。
