- en: 'Conquer Retries in Python Using Tenacity: An End-to-End Tutorial'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Tenacity 在 Python 中征服重试：完整教程
- en: 原文：[https://towardsdatascience.com/conquer-retries-in-python-using-tenacity-an-in-depth-tutorial-3c98b216d798](https://towardsdatascience.com/conquer-retries-in-python-using-tenacity-an-in-depth-tutorial-3c98b216d798)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/conquer-retries-in-python-using-tenacity-an-in-depth-tutorial-3c98b216d798](https://towardsdatascience.com/conquer-retries-in-python-using-tenacity-an-in-depth-tutorial-3c98b216d798)
- en: '[PYTHON TOOLBOX](https://medium.com/@qtalen/list/python-toolbox-4289824c6407)'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[PYTHON TOOLBOX](https://medium.com/@qtalen/list/python-toolbox-4289824c6407)'
- en: Enhancing your Python projects with robust retry mechanisms and error-handling
    techniques
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过强健的重试机制和错误处理技术来增强你的 Python 项目
- en: '[](https://qtalen.medium.com/?source=post_page-----3c98b216d798--------------------------------)[![Peng
    Qian](../Images/9ce9aeb381ec6b017c1ee5d4714937e2.png)](https://qtalen.medium.com/?source=post_page-----3c98b216d798--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3c98b216d798--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3c98b216d798--------------------------------)
    [Peng Qian](https://qtalen.medium.com/?source=post_page-----3c98b216d798--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://qtalen.medium.com/?source=post_page-----3c98b216d798--------------------------------)[![Peng
    Qian](../Images/9ce9aeb381ec6b017c1ee5d4714937e2.png)](https://qtalen.medium.com/?source=post_page-----3c98b216d798--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3c98b216d798--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3c98b216d798--------------------------------)
    [Peng Qian](https://qtalen.medium.com/?source=post_page-----3c98b216d798--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----3c98b216d798--------------------------------)
    ·5 min read·Jul 1, 2023
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----3c98b216d798--------------------------------)
    ·5 分钟阅读·2023年7月1日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/7d3089c27ffefc03c909a68dcb0d46b3.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7d3089c27ffefc03c909a68dcb0d46b3.png)'
- en: 'Often, trying one more time leads to success. Photo Credit: Created by Author,
    [Canva](https://www.canva.com/)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 经常情况下，再试一次会带来成功。图片来源：作者创作，[Canva](https://www.canva.com/)
- en: This article will discuss Tenacity’s basic usage and customization capabilities.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本文将讨论 Tenacity 的基本用法和定制能力。
- en: This instrumental Python library provides a retry mechanism. We will also explore
    Tenacity’s retry and exception-handling capabilities through a practical example.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这个实用的 Python 库提供了重试机制。我们还将通过一个实际的例子来探讨 Tenacity 的重试和异常处理功能。
- en: Introduction
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: Imagine you’re managing hundreds of web services, some located overseas (with
    high latency) and others pretty old (and not very stable). How would you feel?
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，你管理着数百个网络服务，其中一些位于海外（延迟高），另一些则相当老旧（不太稳定）。你会有怎样的感受？
- en: 'My colleague Wang is in such a predicament. He told me that he was pretty frustrated:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我的同事 Wang 遇到了这样的困境。他告诉我，他非常沮丧：
- en: Every day, he needs to check the invocation status of these remote services,
    and he often encounters timeout issues or other anomalies. Troubleshooting is
    particularly challenging.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 每天，他需要检查这些远程服务的调用状态，并且经常遇到超时问题或其他异常。故障排除特别具有挑战性。
- en: Moreover, much of the client-side code was written by his predecessors, making
    it challenging to perform substantial refactoring. So, the services have to continue
    running as they are.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，许多客户端代码是由他的前任编写的，这使得进行大规模重构变得困难。因此，这些服务必须继续按原样运行。
- en: It would be great if there was a way to automatically reconnect these remote
    calls after an exception occurs. With tears in his eyes, Wang looked at me.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有一种方法可以在异常发生后自动重新连接这些远程调用，那就太好了。Wang 眼含泪水地看着我。
- en: 'I assured him it was no problem and introduced him to a new tool from my toolbox:
    `Tenacity`. With just one decorator, the existing code can gain retry capabilities.
    Let’s see how to use it.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我向他保证没问题，并向他介绍了我的工具箱中的新工具：`Tenacity`。只需一个装饰器，现有的代码就能获得重试能力。让我们看看如何使用它。
- en: Installation and Basic Usage
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和基本用法
- en: Since Tenacity’s official website only offers a simple API document, let’s start
    with the library’s installation and some basic usage.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Tenacity 的官方网站仅提供了简单的 API 文档，让我们从库的安装和一些基本用法开始。
- en: Installation
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装
- en: 'If you’re using pip, simply run the following:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是 pip，只需运行以下命令：
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'If you’re using Anaconda, Tenacity is not in the default channel, so you need
    to install it from `conda-forge`:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是 Anaconda，Tenacity 不在默认频道中，因此你需要从 `conda-forge` 安装它：
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Basic usage
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基本用法
- en: After installing Tenacity, let’s look at some basic usage of the library.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Tenacity 后，让我们看一下这个库的一些基本用法。
- en: 'Simply add an `@retry` decorator and your code will have retry capabilities:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 只需添加 `@retry` 装饰器，你的代码就会具备重试功能：
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If you want your code to stop retrying after a certain number of attempts,
    you can write it like this:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望代码在尝试一定次数后停止重试，可以这样编写：
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Of course, to avoid frequent retries that may exhaust connection pools, I recommend
    adding a waiting time before each retry. For example, if you want to wait for
    2 seconds before each connection:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，为了避免频繁重试可能耗尽连接池，我建议在每次重试之前添加等待时间。例如，如果你希望在每次连接之前等待 2 秒：
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Although it’s not mentioned in the documentation, I prefer to wait an extra
    second longer than the last time before each retry to minimize resource waste:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管文档中没有提到，但我倾向于在每次重试之前多等一秒，以减少资源浪费：
- en: '[PRE5]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Finally, if the retry is caused by an `exception` being thrown in the method,
    it is best to throw the `exception` back out. This allows for more flexible exception
    handling when calling the method:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，如果重试是由于方法中抛出的 `exception`，最好将 `exception` 抛回。这使得在调用方法时可以更灵活地处理异常：
- en: '[PRE6]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Advanced Features: Custom Callbacks'
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高级功能：自定义回调
- en: In addition to some common use cases, you may add your own retry determination
    logic, such as deciding based on the result of the method execution or printing
    the method invocation parameters before execution.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 除了一些常见的用例外，你还可以添加自己的重试判断逻辑，例如根据方法执行结果来决定，或在执行前打印方法调用参数。
- en: In this case, we can use `Custom Callbacks` for customization.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们可以使用 `Custom Callbacks` 进行定制。
- en: 'There are two ways to extend `Custom Callbacks`:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`Custom Callbacks` 有两种扩展方式：'
- en: 'One is the recommended approach from the documentation: writing an extension
    method.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 一种是文档中推荐的方法：编写一个扩展方法。
- en: This method will be passed a `RetryCallState` instance as a parameter when executed.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 执行时，这个方法会接收一个 `RetryCallState` 实例作为参数。
- en: Through this parameter, we can obtain the wrapped method, the parameters of
    the method call, the returned result, and any thrown exceptions.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这个参数，我们可以获取包装的方法、方法调用的参数、返回的结果以及任何抛出的异常。
- en: 'For example, we can use this approach to judge the return value of a method
    and retry if the value is even:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以使用这种方法来判断一个方法的返回值，并在值为偶数时重试：
- en: '[PRE7]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Of course, before making this judgment, if an `exception` is thrown, retry directly.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，在做出这种判断之前，如果抛出 `exception`，直接重试。
- en: If you need to pass additional parameters in the extension method, you can add
    a wrapper outside the extension method.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要在扩展方法中传递额外的参数，可以在扩展方法外部添加一个包装器。
- en: 'For example, this wrapper will pass a `logger` parameter. When the number of
    retries exceeds two, it will print the retry time, method name, and method parameters
    to the log:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，这个包装器会传递一个 `logger` 参数。当重试次数超过两个时，它会将重试时间、方法名称和方法参数打印到日志中：
- en: '[PRE8]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Real-World Network Example
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实际网络示例
- en: Finally, to give you a deep impression of using `Tenacity` in your projects,
    I will use a remote client project as an example to demonstrate how to integrate
    Tenacity’s powerful capabilities.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，为了给你一个关于在项目中使用 `Tenacity` 的深刻印象，我将使用一个远程客户端项目作为示例，展示如何集成 Tenacity 的强大功能。
- en: This project will simulate accessing an HTTP service and deciding whether or
    not to retry based on the returned `status code`.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 本项目将模拟访问 HTTP 服务，并根据返回的 `status code` 决定是否重试：
- en: Of course, to avoid wasting server resources due to long connection wait times,
    I will also add a 2-second timeout for each request. If a timeout occurs, the
    connection will be retried.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，为了避免由于长时间连接等待而浪费服务器资源，我还将为每个请求添加一个 2 秒的超时。如果发生超时，将重试连接。
- en: '![](../Images/0fff2a947e57c17abb07b946af8fe3f7.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0fff2a947e57c17abb07b946af8fe3f7.png)'
- en: Flow chart of the project. Image by Author
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 项目流程图。图片由作者提供
- en: 'Before starting the code, I will implement several extension methods. One of
    the methods is to judge when a method’s retry count exceeds two, and print a warning
    message in the log:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始代码之前，我会实现几个扩展方法。其中一个方法是判断一个方法的重试次数是否超过两个，并在日志中打印警告信息：
- en: Another extension method is to judge the returned `status code`. If the status
    code is greater than 300, retry. Of course, timeouts will also trigger retries.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个扩展方法是判断返回的 `status code`。如果状态码大于 300，则重试。当然，超时也会触发重试。
- en: Next, we have the implementation of the remote call method. After writing the
    method, remember to add Tenacity’s retry decorator. The strategy I use here is
    to retry up to 20 times, waiting for 1 second longer than the previous retry before
    each retry.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们要实现远程调用方法。编写完该方法后，记得添加Tenacity的重试装饰器。我在这里使用的策略是最多重试20次，每次重试前等待比上次重试多1秒。
- en: 'Of course, don’t forget to add the two extension methods we just implemented:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，别忘了添加我们刚刚实现的两个扩展方法：
- en: '![](../Images/21a0313daa6f3532642772706b958ed4.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/21a0313daa6f3532642772706b958ed4.png)'
- en: After several retries, I finally got the correct result. Screenshot by Author
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 经过几次重试，我终于得到了正确的结果。截图由作者提供
- en: Mission complete! Wasn’t that super simple?
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 任务完成！是不是超级简单？
- en: Conclusion
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: I’m glad I helped Wang solve another problem.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我很高兴我帮助王解决了另一个问题。
- en: By using `Tenacity`, we can easily equip existing code with various retry mechanisms,
    thereby enhancing the robustness and self-recovery capabilities of the program.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用`Tenacity`，我们可以轻松地为现有代码添加各种重试机制，从而增强程序的健壮性和自我恢复能力。
- en: I would be even happier if this library could help you solve problems. Feel
    free to leave a comment and discuss.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这个库能帮助你解决问题，我会更高兴。随时留下评论和讨论。
- en: 'Besides improving code execution speed and performance, using various tools
    to improve work efficiency is also a performance enhancement:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 除了提高代码执行速度和性能外，使用各种工具来提高工作效率也是一种性能提升：
- en: '![Peng Qian](../Images/fa6bd24b4781f623be8ea40c4e6bdb78.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![Peng Qian](../Images/fa6bd24b4781f623be8ea40c4e6bdb78.png)'
- en: '[Peng Qian](https://qtalen.medium.com/?source=post_page-----3c98b216d798--------------------------------)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '[Peng Qian](https://qtalen.medium.com/?source=post_page-----3c98b216d798--------------------------------)'
- en: Python Toolbox
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python工具箱
- en: '[View list](https://qtalen.medium.com/list/python-toolbox-4289824c6407?source=post_page-----3c98b216d798--------------------------------)6
    stories![Seaborn 0.12: An Insightful Guide to the Objects Interface and Declarative
    Graphics](../Images/6c1f4ca8d7b82c288cb229b73f560c04.png)![Supercharge Your Python
    Asyncio With Aiomultiprocess: A Comprehensive Guide](../Images/9c366de04067cd0ec1b30d9ce223011b.png)![Conquer
    Retries in Python Using Tenacity: An In-depth Tutorial](../Images/e636d5546f5826d60865c6a95f976fa8.png)[](https://medium.com/@qtalen/membership?source=post_page-----3c98b216d798--------------------------------)
    [## Join Medium with my referral link - Peng Qian'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '[查看列表](https://qtalen.medium.com/list/python-toolbox-4289824c6407?source=post_page-----3c98b216d798--------------------------------)6
    stories![Seaborn 0.12: An Insightful Guide to the Objects Interface and Declarative
    Graphics](../Images/6c1f4ca8d7b82c288cb229b73f560c04.png)![Supercharge Your Python
    Asyncio With Aiomultiprocess: A Comprehensive Guide](../Images/9c366de04067cd0ec1b30d9ce223011b.png)![Conquer
    Retries in Python Using Tenacity: An In-depth Tutorial](../Images/e636d5546f5826d60865c6a95f976fa8.png)[](https://medium.com/@qtalen/membership?source=post_page-----3c98b216d798--------------------------------)
    [## 通过我的推荐链接加入Medium - Peng Qian'
- en: As a Medium member, a portion of your membership fee goes to writers you read,
    and you get full access to every story…
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 作为Medium会员，你的一部分会员费用将给你阅读的作者，你可以完全访问每个故事…
- en: medium.com](https://medium.com/@qtalen/membership?source=post_page-----3c98b216d798--------------------------------)
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '[medium.com](https://medium.com/@qtalen/membership?source=post_page-----3c98b216d798--------------------------------)'
- en: 'This article was originally published at: [https://www.dataleadsfuture.com/conquer-retries-in-python-using-tenacity-an-end-to-end-tutorial/](https://www.dataleadsfuture.com/conquer-retries-in-python-using-tenacity-an-end-to-end-tutorial/)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '本文最初发布在: [https://www.dataleadsfuture.com/conquer-retries-in-python-using-tenacity-an-end-to-end-tutorial/](https://www.dataleadsfuture.com/conquer-retries-in-python-using-tenacity-an-end-to-end-tutorial/)'
