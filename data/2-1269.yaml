- en: How to Use OpenAI's Function Calling
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用 OpenAI 的函数调用
- en: 原文：[https://towardsdatascience.com/how-to-use-openais-function-calling-e35bdac88ae7](https://towardsdatascience.com/how-to-use-openais-function-calling-e35bdac88ae7)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-use-openais-function-calling-e35bdac88ae7](https://towardsdatascience.com/how-to-use-openais-function-calling-e35bdac88ae7)
- en: An Overview of Function Calling and Its Implications for Building LLM Apps
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 函数调用概述及其对构建 LLM 应用的影响
- en: '[](https://johnadeojo.medium.com/?source=post_page-----e35bdac88ae7--------------------------------)[![John
    Adeojo](../Images/f6460fae462b055d36dce16fefcd142c.png)](https://johnadeojo.medium.com/?source=post_page-----e35bdac88ae7--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e35bdac88ae7--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e35bdac88ae7--------------------------------)
    [John Adeojo](https://johnadeojo.medium.com/?source=post_page-----e35bdac88ae7--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://johnadeojo.medium.com/?source=post_page-----e35bdac88ae7--------------------------------)[![John
    Adeojo](../Images/f6460fae462b055d36dce16fefcd142c.png)](https://johnadeojo.medium.com/?source=post_page-----e35bdac88ae7--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e35bdac88ae7--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e35bdac88ae7--------------------------------)
    [John Adeojo](https://johnadeojo.medium.com/?source=post_page-----e35bdac88ae7--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e35bdac88ae7--------------------------------)
    ·6 min read·Jul 25, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----e35bdac88ae7--------------------------------)
    ·阅读时间 6 分钟·2023年7月25日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/a09010bff67cd967314369c4fcabb3a3.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a09010bff67cd967314369c4fcabb3a3.png)'
- en: 'Image by Author: Generated with Midjourney'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：由 Midjourney 生成
- en: Structuring the Unstructured
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结构化非结构化数据
- en: Function calling is an innovation from [OpenAI](https://openai.com/) that has
    expanded the possibilities when it comes to app development around large language
    models.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 函数调用是[OpenAI](https://openai.com/)的一项创新，扩展了在大型语言模型应用开发方面的可能性。
- en: However, I have found that it remains misunderstood by some. In this article,
    I aim to clarify function calling in the time it takes you to make a cup of coffee.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我发现它仍然被一些人误解。在这篇文章中，我旨在在你泡一杯咖啡的时间内澄清函数调用的概念。
- en: If you have aspirations to build LLM apps, integrate LLMs into your business,
    or simply expand your knowledge in this area, then this article is for you.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有意构建 LLM 应用，将 LLM 集成到你的业务中，或仅仅是想扩展你在这方面的知识，那么这篇文章适合你。
- en: What’s So Great About Function Calling?
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 函数调用有什么了不起的地方？
- en: Function calling allows us to develop natural language interfaces atop our existing
    APIs. If this sounds confusing to you, don’t worry — the details will become clearer
    as you read on.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 函数调用使我们能够在现有的 API 上开发自然语言接口。如果这听起来令你困惑，不用担心——随着你继续阅读，细节会变得更加清晰。
- en: So, what does a natural language API look like? I believe it’s best to demonstrate
    this diagrammatically. Here’s an example app that uses function calling to enable
    users to find flights.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，自然语言 API 是什么样的？我认为最好通过示意图来展示。这是一个示例应用，使用函数调用来帮助用户查找航班。
- en: '![](../Images/42b57c9e4e98903e44fbf7ea6dcfef4d.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/42b57c9e4e98903e44fbf7ea6dcfef4d.png)'
- en: 'Image by Author: Diagrammatic representation of function calling'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：函数调用的示意图
- en: To implement this type of app without function calling, you would need to prompt
    the user to input the flight information using menus, selection boxes, and the
    like.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有函数调用，要实现这种类型的应用，你需要提示用户通过菜单、选择框等输入航班信息。
- en: Function calling also facilitates the possibility of users making requests by
    voice. All you would need is an additional transcription service, and voilà, you
    have an AI personal assistant.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 函数调用还使用户可以通过语音发出请求。你只需一个额外的转录服务，便可以拥有一个 AI 个人助手。
- en: Hopefully, you should now be forming a clearer picture of function calling and
    its purpose. Let’s cement this newfound knowledge with some technical walkthroughs.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你现在已经对函数调用及其用途有了更清晰的了解。让我们通过一些技术演练来巩固这些新知识。
- en: Function Calling with One Function
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 单一函数的函数调用
- en: Let’s examine a simple use case atop a weather API.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来查看一个简单的天气 API 使用案例。
- en: The most basic use case involves function calling with one function. To illustrate
    this, I have modelled an API that provides a temperature forecast — [see here](https://gist.github.com/john-adeojo/13ae233ecfb25aa6908ae834ef16ef53).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 最基本的用例涉及一个函数的调用。为了说明这一点，我建模了一个提供温度预报的 API —— [请见这里](https://gist.github.com/john-adeojo/13ae233ecfb25aa6908ae834ef16ef53)。
- en: 'Please take a moment to study this temperature API; note that it has two arguments:
    location and date.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 请花一点时间研究一下这个温度 API；注意它有两个参数：位置和日期。
- en: 'Now, suppose we wanted to build an app based on this API. The first step we
    might take is to write a script that utilises a function call for our user queries.
    It would look something like this:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，假设我们想基于这个 API 构建一个应用程序。我们可能采取的第一步是编写一个利用函数调用处理用户查询的脚本。它可能如下所示：
- en: 'Script by Author: Function call example with one function'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 作者脚本：一个函数的调用示例
- en: Let’s discuss the function calling. We define our functions as a list of dictionaries.
    The function allows us to extract arguments from a user query, which we can then
    use to feed our API. In our case, the arguments we wish to extract are “location”
    and “date”.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们讨论一下函数调用。我们将函数定义为字典的列表。该函数允许我们从用户查询中提取参数，然后我们可以将其用来馈送到 API 中。在我们的情况下，我们希望提取的参数是“位置”和“日期”。
- en: We state the name of our function, in this case, “get_temperature”, and provide
    a description of what it does.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们声明函数的名称，在这种情况下是“get_temperature”，并提供它的功能描述。
- en: Next, we need to describe the arguments of the function, which is crucial. What
    we receive back from the function call is influenced by how we do this. Take a
    look at how I have outlined the descriptions and types for the two arguments “location”
    and “date”.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要描述函数的参数，这一点至关重要。我们从函数调用中收到的内容受我们如何描述的影响。请查看我如何为两个参数“位置”和“日期”概述描述和类型。
- en: The descriptions are significant because function calling is powered by OpenAI’s
    large language models, which interpret the descriptions and respond accordingly.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 描述很重要，因为函数调用是由 OpenAI 的大型语言模型驱动的，这些模型解释描述并作出相应的回应。
- en: Next, we set up our OpenAI model. The setup resembles a standard text generation
    use case with two key differences — the “functions” parameter and the “function_call”
    parameter.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们设置我们的 OpenAI 模型。该设置类似于标准的文本生成用例，但有两个关键区别——“functions”参数和“function_call”参数。
- en: We pass the functions we defined in the dictionary to the “functions” parameter.
    For the “function_call” parameter, we set it to “auto”, allowing the large language
    model to decide when to use a function or not use one at all.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将字典中定义的函数传递给“functions”参数。对于“function_call”参数，我们将其设置为“auto”，允许大型语言模型决定何时使用函数或根本不使用函数。
- en: So, let’s see what happens when we run a query through this function call.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们看看当我们通过这个函数调用运行查询时会发生什么。
- en: 'Here’s our query:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们的查询：
- en: query = "What's the temperature forecast in Berlin on the 1st of September 2023?"
  id: totrans-34
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: query = "2023年9月1日柏林的天气预报是多少？"
- en: 'And here’s the response:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这是响应：
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The first thing to note is that the function call has returned a structured
    response, a json object.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 首先需要注意的是，函数调用返回了一个结构化的响应，即一个 JSON 对象。
- en: Secondly, the function call has determined from our query that we wish to use
    the “get_temperature” function, and it has parsed the arguments for that function
    (location and date) accordingly.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，函数调用从我们的查询中确定了我们希望使用“get_temperature”函数，并相应地解析了该函数的参数（位置和日期）。
- en: This is excellent as we can now send these arguments to the weather API we constructed
    and obtain a response about the temperature.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这很好，因为我们现在可以将这些参数发送到我们构建的天气 API 并获得有关温度的响应。
- en: '[PRE1]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'And here’s the response we get back from our weather API:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们从天气 API 获得的响应：
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '***Note****: It’s important to understand that function calling does not execute
    the function. It merely parses out the arguments for your function from a natural
    language input.*'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '***注意****：理解函数调用并不会执行函数。这只是从自然语言输入中解析出函数的参数。*'
- en: Function Calling with Multiple Functions
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多函数调用
- en: We can even specify multiple functions to “call” from. This is particularly
    useful when we have a natural language interface sitting atop multiple APIs. Let’s
    illustrate this with an example.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们甚至可以指定多个函数进行“调用”。当我们有一个自然语言接口覆盖多个 API 时，这尤其有用。让我们通过一个例子来说明。
- en: To complement our weather API, I have modelled a news [headline API](https://gist.github.com/john-adeojo/d90431d2d6847c01af3fbe497b1267ad),
    which generates a mock news headline based on a topic.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 为了补充我们的天气 API，我创建了一个新闻 [头条 API](https://gist.github.com/john-adeojo/d90431d2d6847c01af3fbe497b1267ad)，根据主题生成模拟新闻头条。
- en: The topic itself will be requested from a natural language query, which we can
    parse using function calling.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这个主题本身将从自然语言查询中请求，我们可以通过函数调用来解析。
- en: 'We can add this to our existing function call. Here’s how it appears:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将其添加到现有的函数调用中。它是这样显示的：
- en: 'Script by Author: Function call example with two functions'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 作者脚本：带有两个函数的函数调用示例
- en: Because we have set the “function_call” parameter to “auto”, the large language
    model can deduce the most suitable function to call based solely on the query.
    Let’s see how this works for two different queries.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们将“function_call”参数设置为“auto”，大语言模型可以仅基于查询推断出最合适的函数进行调用。让我们看看这对两个不同的查询是如何工作的。
- en: query_1 = "What's the temperature forecast in NYC at the end of September 2023?"
  id: totrans-51
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: query_1 = "2023 年 9 月底纽约的天气预报是什么？"
- en: 'Response from query 1:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 查询 1 的响应：
- en: '[PRE3]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Now let’s run the multi-function function call on a different query.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们对不同的查询运行多功能函数调用。
- en: query_2 = "Give me the latest headline news on Berlin"
  id: totrans-55
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: query_2 = "给我最新的柏林头条新闻"
- en: 'Response from query 2:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 查询 2 的响应：
- en: '[PRE4]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In both cases, the function call has correctly selected which function to get
    the arguments for based on the queries.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两种情况下，函数调用根据查询正确选择了获取参数的函数。
- en: What If We Don’t Use It?
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如果我们不使用它怎么办？
- en: 'At this point, you might be asking yourself: “This is great, but can’t I achieve
    the same result with the chat completion API and a prompt? Why do we need function
    calling at all?”'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，你可能会问自己：“这很好，但我不能通过聊天完成 API 和提示来获得相同的结果吗？我们为什么还需要函数调用？”
- en: Well, the short answer is structure. While the chat completion API is trained
    to respond to a user query, you can prompt it to perform a “function call”, but
    the output you get may not be structured, making it difficult to parse the arguments.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 简单来说就是结构。虽然聊天完成 API 经过训练以响应用户查询，你可以提示它执行“函数调用”，但你得到的输出可能没有结构，导致解析参数变得困难。
- en: 'Consider this for example:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子：
- en: 'Script by Author: Chat completion API for parsing arguments'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 作者脚本：用于解析参数的聊天完成 API
- en: Here we have skipped function calling altogether and simply asked the chat completion
    API to respond with our arguments with some prompting.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们完全跳过了函数调用，仅仅要求聊天完成 API 用一些提示来响应我们的参数。
- en: 'And the response:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 以及响应：
- en: '[PRE5]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Although the answer is correct, it’s more difficult to parse as an argument
    because it is unstructured.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然答案是正确的，但由于其无结构性，作为参数解析起来更困难。
- en: There is also the issue of consistency. You can attempt to enforce some structure
    through prompting, but the responses may not always be structured as you desire.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一致性的问题。你可以通过提示尝试强制某些结构，但响应可能并不总是按你期望的方式构造。
- en: Function calling guarantees a structured response every time, making it a more
    reliable method of parsing arguments to feed a downstream function.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 函数调用保证每次都有结构化的响应，使其成为解析参数以供下游函数使用的更可靠方法。
- en: Conclusion
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Function calling opens the door to the development of a host of new LLM-based
    applications. We can now consistently generate structured outputs from unstructured
    data.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 函数调用为开发大量基于 LLM 的新应用程序开辟了道路。我们现在可以从无结构数据中一致地生成结构化输出。
- en: 'If you wish to explore how you can build your first LLM app, read this:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想深入了解如何构建你的第一个 LLM 应用程序，请阅读这个：
- en: '[](/how-to-build-an-llm-application-360848c957db?source=post_page-----e35bdac88ae7--------------------------------)
    [## How to Build an LLM Application'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '[如何构建 LLM 应用程序](https://towardsdatascience.com/how-to-build-an-llm-application-360848c957db?source=post_page-----e35bdac88ae7--------------------------------)
    [## 如何构建 LLM 应用程序'
- en: Using Langchain and OpenAI to Build LLM Centred Apps
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 Langchain 和 OpenAI 构建以 LLM 为中心的应用程序
- en: towardsdatascience.com](/how-to-build-an-llm-application-360848c957db?source=post_page-----e35bdac88ae7--------------------------------)
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '[如何构建 LLM 应用程序](https://towardsdatascience.com/how-to-build-an-llm-application-360848c957db?source=post_page-----e35bdac88ae7--------------------------------)'
- en: Thanks for reading.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读。
- en: The full notebook, is available via my [GitHub](https://github.com/john-adeojo/function_calling_tutorial)
    repo. There is also a live video tutorial on [YouTube](https://youtu.be/VswwV9RJN7s).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的笔记本可以通过我的 [GitHub](https://github.com/john-adeojo/function_calling_tutorial)
    仓库获得。YouTube 上也有一个直播视频教程 [YouTube](https://youtu.be/VswwV9RJN7s)。
- en: If you’re keen to enhance your skills in artificial intelligence, join the waiting
    list for [my course](https://www.data-centric-solutions.com/course), where I will
    guide you through the process of developing large language model powered applications.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望提升人工智能技能，可以加入[我的课程](https://www.data-centric-solutions.com/course)的等待名单，在课程中我将指导你开发大语言模型驱动的应用程序。
- en: If you’re seeking AI-transformation for your business, book a discovery call
    today.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你寻求为你的企业实现人工智能转型，今天就预约一次发现电话会议吧。
- en: '[](https://www.brainqub3.com/?source=post_page-----e35bdac88ae7--------------------------------)
    [## Brainqub3 | AI software development'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://www.brainqub3.com/?source=post_page-----e35bdac88ae7--------------------------------)
    [## Brainqub3 | 人工智能软件开发'
- en: At Brainqub3 we develop bespoke AI software. We create qub3s, advanced artificial
    brains, using the latest AI to…
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 Brainqub3，我们开发定制的人工智能软件。我们使用最新的人工智能技术创建 qub3s，即先进的人工智能大脑，以…
- en: www.brainqub3.com](https://www.brainqub3.com/?source=post_page-----e35bdac88ae7--------------------------------)
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: www.brainqub3.com](https://www.brainqub3.com/?source=post_page-----e35bdac88ae7--------------------------------)
- en: For more insights on artificial intelligence, data science, and large language
    models you can subscribe to the [YouTube](https://www.youtube.com/channel/UCkXe-exqi25V4GnZendgEaA)
    channel.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多关于人工智能、数据科学和大语言模型的见解，你可以订阅[YouTube](https://www.youtube.com/channel/UCkXe-exqi25V4GnZendgEaA)频道。
