- en: Pandas & Python Tricks for Data Science & Data Analysis — Part 2
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Pandas & Python 数据科学与数据分析技巧 — 第二部分
- en: 原文：[https://towardsdatascience.com/pandas-python-tricks-for-data-science-data-analysis-part-2-dc36460de90d](https://towardsdatascience.com/pandas-python-tricks-for-data-science-data-analysis-part-2-dc36460de90d)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/pandas-python-tricks-for-data-science-data-analysis-part-2-dc36460de90d](https://towardsdatascience.com/pandas-python-tricks-for-data-science-data-analysis-part-2-dc36460de90d)
- en: This is the second part of my Pandas & Python Tricks
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 这是我的 Pandas & Python 技巧的第二部分
- en: '[](https://zoumanakeita.medium.com/?source=post_page-----dc36460de90d--------------------------------)[![Zoumana
    Keita](../Images/34a15c1d03687816dbdbc065f5719f80.png)](https://zoumanakeita.medium.com/?source=post_page-----dc36460de90d--------------------------------)[](https://towardsdatascience.com/?source=post_page-----dc36460de90d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----dc36460de90d--------------------------------)
    [Zoumana Keita](https://zoumanakeita.medium.com/?source=post_page-----dc36460de90d--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://zoumanakeita.medium.com/?source=post_page-----dc36460de90d--------------------------------)[![Zoumana
    Keita](../Images/34a15c1d03687816dbdbc065f5719f80.png)](https://zoumanakeita.medium.com/?source=post_page-----dc36460de90d--------------------------------)[](https://towardsdatascience.com/?source=post_page-----dc36460de90d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----dc36460de90d--------------------------------)
    [Zoumana Keita](https://zoumanakeita.medium.com/?source=post_page-----dc36460de90d--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----dc36460de90d--------------------------------)
    ·5 min read·Jan 17, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----dc36460de90d--------------------------------)
    ·阅读时间5分钟·2023年1月17日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/11eeeaf9d71dbc5826179cfa3cd1c5e2.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/11eeeaf9d71dbc5826179cfa3cd1c5e2.png)'
- en: Photo by [Andrew Neel](https://unsplash.com/@andrewtneel) on [Unsplash](https://unsplash.com/photos/cckf4TsHAuw)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Andrew Neel](https://unsplash.com/@andrewtneel) 在 [Unsplash](https://unsplash.com/photos/cckf4TsHAuw)
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: A couple of days ago, I shared [some Python and Pandas tricks](https://medium.com/towards-data-science/pandas-and-python-tips-and-tricks-for-data-science-and-data-analysis-1b1e05b7d93a)
    to help Data Analysts and Data Scientists quickly learn new valuable concepts
    that they might not be aware of. This is also part of the collection of tricks
    I share daily on [LinkedIn](https://www.linkedin.com/in/zoumana-keita/).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 几天前，我分享了[一些 Python 和 Pandas 技巧](https://medium.com/towards-data-science/pandas-and-python-tips-and-tricks-for-data-science-and-data-analysis-1b1e05b7d93a)，帮助数据分析师和数据科学家快速学习他们可能不知晓的新有价值概念。这也是我每天在[LinkedIn](https://www.linkedin.com/in/zoumana-keita/)上分享的技巧合集的一部分。
- en: A video series of these tips are available on my YouTube channel below.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这些技巧的视频系列可以在我的 YouTube 频道上查看。
- en: 3 tricks from my series
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我的系列中的3个技巧
- en: Python
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python
- en: remove duplicates from a list
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从列表中移除重复项
- en: When trying to remove duplicates from a list, you might attempt to use the 𝗳𝗼𝗿
    loop approach.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试从列表中移除重复项时，你可能会尝试使用𝗳𝗼𝗿 循环方法。
- en: This works but is inefficient ❌ when dealing with very large data.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这样做虽然有效，但在处理非常大的数据时效率不高 ❌。
- en: Instead, use 𝘀𝗲𝘁() ✅ which natively does not accept duplicates.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，使用𝘀𝗲𝘁() ✅，它本身不接受重复项。
- en: Below is an illustration 💡
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个说明 💡
- en: '![](../Images/7a25a88658e8953ba771ad1e6cdf055c.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7a25a88658e8953ba771ad1e6cdf055c.png)'
- en: Remove duplicates (Image by Author)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 移除重复项（图片来源：作者）
- en: Orders in the original list
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 原始列表中的顺序
- en: Using 𝘀𝗲𝘁() to remove duplicates from lists is a great approach.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 使用𝘀𝗲𝘁()来从列表中移除重复项是一个很好的方法。
- en: 🚨 But be careful with using it as it will NOT ❌ preserve the original order.
    Only use it when you don’t care about the order of the elements in your list.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 🚨 但要小心使用，因为它不会❌ 保留原始顺序。仅在不关心列表中元素顺序时使用。
- en: Instead, use 𝗱𝗶𝗰𝘁.𝗳𝗿𝗼𝗺𝗸𝗲𝘆𝘀() ✅ to preserve the original order.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，使用𝗱𝗶𝗰𝘁.𝗳𝗿𝗼𝗺𝗸𝗲𝘆𝘀() ✅ 保持原始顺序。
- en: Below is an illustration 💡
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个说明 💡
- en: '![](../Images/ab0d765c3db368512e0d1132c6cb8749.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ab0d765c3db368512e0d1132c6cb8749.png)'
- en: Original order kept by dict.fromkeys (Image by Author)
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 原始顺序由 dict.fromkeys 保持（图片来源：作者）
- en: Check if an element exists in a list
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查元素是否存在于列表中
- en: '[#Python](https://www.linkedin.com/feed/hashtag/?keywords=python&highlightedUpdateUrns=urn%3Ali%3Aactivity%3A7011293609643716608)
    Tricks ✨🐍✨'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[#Python](https://www.linkedin.com/feed/hashtag/?keywords=python&highlightedUpdateUrns=urn%3Ali%3Aactivity%3A7011293609643716608)
    技巧 ✨🐍✨'
- en: When trying to 𝗰𝗵𝗲𝗰𝗸 𝗶𝗳 𝗮𝗻 𝗶𝘁𝗲𝗺 𝗲𝘅𝗶𝘀𝘁𝘀 𝗶𝗻 𝗮 𝗹𝗶𝘀𝘁, you might attempt to use the
    𝗳𝗼𝗿 loop and 𝗶𝗳 condition approach.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试 𝗰𝗵𝗲𝗰𝗸 𝗶𝗳 𝗮𝗻 𝗶𝘁𝗲𝗺 𝗲𝘅𝗶𝘀𝘁𝘀 𝗶𝗻 𝗮 𝗹𝗶𝘀𝘁 时，你可能会尝试使用𝗳𝗼𝗿 循环和 𝗶𝗳 条件方法。
- en: This works but is inefficient ❌ when dealing with very large data.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这样做有效，但处理非常大数据时效率不高 ❌。
- en: Instead, use the 𝗶𝗻 ✅ approach which natively returns a boolean.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，使用 𝗶𝗻 ✅ 方法，它本地返回布尔值。
- en: Below is an illustration 💡
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个示例 💡
- en: '![](../Images/baf9630156bad0ab19a7121f5eb0547f.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/baf9630156bad0ab19a7121f5eb0547f.png)'
- en: Check if an element exists in a list (Image by Author)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 检查元素是否存在于列表中（图像作者）
- en: Get the N largest and smallest values in a Python list
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 获取 Python 列表中的 N 个最大和最小值
- en: The maximum and minimum values of a list in Python can be found using the 𝗺𝗮𝘅()
    and 𝗺𝗶𝗻() functions respectively.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 中，可以使用 𝗺𝗮𝘅() 和 𝗺𝗶𝗻() 函数分别找到列表的最大值和最小值。
- en: 'However, when it comes to getting the 𝗡 𝗹𝗮𝗿𝗴𝗲𝘀𝘁 or 𝘀𝗺𝗮𝗹𝗹𝗲𝘀𝘁 values of you might
    think of a two-way approach:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当涉及到获取 𝗡 𝗹𝗮𝗿𝗴𝗲𝘀𝘁 或 𝘀𝗺𝗮𝗹𝗹𝗲𝘀𝘁 值时，你可能会考虑双向方法：
- en: 1️⃣ Sort the list in decreasing or increasing order.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 1️⃣ 按递减或递增顺序对列表进行排序。
- en: 2️⃣ Retrieve the N largest or smallest values.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 2️⃣ 检索 N 个最大或最小值。
- en: Good strategy, BUT not efficient ❌ when dealing with large data.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 好策略，但处理大数据时效率不高 ❌。
- en: ✅ Instead, you can use the 𝗻𝗹𝗮𝗿𝗴𝗲𝘀𝘁 and 𝗻𝘀𝗺𝗮𝗹𝗹𝗲𝘀𝘁 functions from the built-in
    Python module 𝗵𝗲𝗮𝗽𝗾 which is fast 🚀 and memory efficient 👍
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: ✅ 相反，你可以使用 𝗻𝗹𝗮𝗿𝗴𝗲𝘀𝘁 和 𝗻𝘀𝗺𝗮𝗹𝗹𝗲𝘀𝘁 函数来自内置的 Python 模块 𝗵𝗲𝗮𝗽𝗾，它是快速 🚀 和内存高效的 👍。
- en: '![](../Images/d40da68eac922c15166e5b5c5c09e982.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d40da68eac922c15166e5b5c5c09e982.png)'
- en: 𝗻𝗹𝗮𝗿𝗴𝗲𝘀𝘁 and 𝗻𝘀𝗺𝗮𝗹𝗹𝗲𝘀𝘁 functions illustration (Image by Author)
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 𝗻𝗹𝗮𝗿𝗴𝗲𝘀𝘁 和 𝗻𝘀𝗺𝗮𝗹𝗹𝗲𝘀𝘁 函数示例（图像作者）
- en: Pandas
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Pandas
- en: Display multiple dataframes using the same cell
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用同一单元格显示多个数据框
- en: Most of the time, we tend to use different notebook cells to display different
    dataframes such as the head() and tail() of the same data.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数时候，我们倾向于使用不同的笔记本单元格来显示不同的数据框，比如相同数据的 head() 和 tail()。
- en: This is because when using them in the same cell, only the last one will be
    displayed, and all the instructions before are ignored ❌
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为在同一单元格中使用它们时，只有最后一个会被显示，之前的所有指令都会被忽略 ❌。
- en: ✅ To solve this issue, you can use the 𝗱𝗶𝘀𝗽𝗹𝗮𝘆() function.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: ✅ 解决此问题，你可以使用 𝗱𝗶𝘀𝗽𝗹𝗮𝘆() 函数。
- en: Below is an illustration 💡
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个示例 💡
- en: '![](../Images/ab3cf7e045cbd33f29fac472321bda81.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ab3cf7e045cbd33f29fac472321bda81.png)'
- en: Multiple dataframes from the same notebook cell (Image by Author)
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 从同一笔记本单元格中获取多个数据框（图像作者）
- en: Describe both numerical & categorical columns
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 描述数值列和分类列
- en: Applying the 𝗱𝗲𝘀𝗰𝗿𝗶𝗯𝗲() function without a parameter naturally returns statistics
    related to numerical columns only.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 应用 𝗱𝗲𝘀𝗰𝗿𝗶𝗯𝗲() 函数没有参数时，自然只返回与数值列相关的统计数据。
- en: This restricts 🚫 our understanding of the data set since most of the time we
    deal with categorical columns as well.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这限制了 🚫 我们对数据集的理解，因为大多数时候我们也处理分类列。
- en: '✅ To solve this issue, you can proceed with a two-way approach:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: ✅ 为了解决这个问题，你可以采取双向方法：
- en: 1️⃣ Use 𝗱𝗲𝘀𝗰𝗿𝗶𝗯𝗲() for numerical columns.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 1️⃣ 使用 𝗱𝗲𝘀𝗰𝗿𝗶𝗯𝗲() 对数值列进行描述。
- en: 2️⃣ Set the parameter 𝗶𝗻𝗰𝗹𝘂𝗱𝗲=[𝗼𝗯𝗷𝗲𝗰𝘁] to provide information about categorical
    ones.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 2️⃣ 设置参数 𝗶𝗻𝗰𝗹𝘂𝗱𝗲=[𝗼𝗯𝗷𝗲𝗰𝘁] 以提供有关分类列的信息。
- en: Below is an illustration 💡
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个示例 💡
- en: '![](../Images/ce8e88c565b6152290078ab245d5bbfe.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ce8e88c565b6152290078ab245d5bbfe.png)'
- en: '**describe** including categorical columns as well (Image by Author)'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**描述** 包括分类列（图像作者）'
- en: Avoid for loops when creating new columns
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建新列时避免使用 for 循环
- en: When working with Pandas dataframes, creating new columns from existing ones
    is mainly part of the process.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理 Pandas 数据框时，从现有列创建新列主要是过程的一部分。
- en: The way these columns are created can affect the efficiency of the overall computation
    time ⏰.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这些列的创建方式会影响整体计算时间的效率 ⏰。
- en: Some may use loops to generate those derived columns.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 有些人可能会使用循环来生成这些派生列。
- en: However, this might not be the right approach ❌ because of the time complexity
    📈, especially when working with large data.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这可能不是正确的方法 ❌，因为时间复杂度 📈，特别是在处理大数据时。
- en: ✅ Adopting the vectorization approach is much better.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: ✅ 采用向量化方法要好得多。
- en: '![](../Images/e6a26db9a840701eb41dc49afb6a4987.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e6a26db9a840701eb41dc49afb6a4987.png)'
- en: illustration of vectorization vs. for loop
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 向量化与 for 循环的示例
- en: Save a subset of Pandas columns
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 保存 Pandas 列的子集
- en: Sometimes we are interested in saving only a subset of columns from the original
    data frame rather than the whole data.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 有时我们只对从原始数据框中保存子集列感兴趣，而不是整个数据。
- en: One way of doing that is to create a new data frame with the columns of interest.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 一种方法是创建一个包含感兴趣列的新数据框。
- en: But, this approach adds another layer of complexity ❌.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，这种方法增加了另一个复杂性 ❌。
- en: ✅ This issue can be solved by specifying the columns argument.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: ✅ 这个问题可以通过指定 columns 参数来解决。
- en: '![](../Images/a773627576845f9001df9b33599a58ba.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a773627576845f9001df9b33599a58ba.png)'
- en: Get a subset of Pandas columns (Image by Author)
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 获取 Pandas 列的子集（图像作者提供）
- en: Convert Tabular data from the webpage into Pandas Dataframe
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将网页上的表格数据转换为 Pandas Dataframe
- en: If you want to extract tables from a webpage 🌐 as Pandas Dataframes, you can
    use the 𝗿𝗲𝗮𝗱_𝗵𝘁𝗺𝗹() function of Pandas.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想从网页 🌐 中提取表格作为 Pandas Dataframes，你可以使用 Pandas 的 𝗿𝗲𝗮𝗱_𝗵𝘁𝗺𝗹() 函数。
- en: ✅ It returns a list of all the tables from the webpage.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: ✅ 它返回网页上所有表格的列表。
- en: '![](../Images/c3f1ad9d423fdc4e0e75d92a644f6f39.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c3f1ad9d423fdc4e0e75d92a644f6f39.png)'
- en: Convert the webpage table into Pandas Dataframe (Image by Author)
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 将网页表格转换为 Pandas Dataframe（图像作者提供）
- en: Conclusion
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Thank you for reading! 🎉 🍾
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读！ 🎉 🍾
- en: I hope you found this list of Python and Pandas tricks helpful! Keep an eye
    on here, because the content will be maintained with more tricks on a daily basis.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望你觉得这份 Python 和 Pandas 技巧的清单对你有帮助！请继续关注，因为内容将每天更新更多技巧。
- en: Also, If you like reading my stories and wish to support my writing, consider
    [becoming a Medium member](https://zoumanakeita.medium.com/membership). With a
    $ 5-a-month commitment, you unlock unlimited access to stories on Medium.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果你喜欢阅读我的故事并希望支持我的写作，可以考虑 [成为 Medium 会员](https://zoumanakeita.medium.com/membership)。每月
    $5 的承诺，你就能解锁 Medium 上的无限故事访问权限。
- en: Feel free to follow me on [Medium](https://zoumanakeita.medium.com/), [Twitter](https://twitter.com/zoumana_keita_),
    and [YouTube](https://www.youtube.com/channel/UC9xKdy8cz6ZuJU5FTNtM_pQ), or say
    Hi on [LinkedIn](https://www.linkedin.com/in/zoumana-keita/). It is always a pleasure
    to discuss AI, ML, Data Science, NLP, and MLOps stuff!
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 随时关注我的 [Medium](https://zoumanakeita.medium.com/)、[Twitter](https://twitter.com/zoumana_keita_)
    和 [YouTube](https://www.youtube.com/channel/UC9xKdy8cz6ZuJU5FTNtM_pQ)，或者在 [LinkedIn](https://www.linkedin.com/in/zoumana-keita/)
    上打个招呼！讨论 AI、ML、数据科学、NLP 和 MLOps 总是令人愉快的！
