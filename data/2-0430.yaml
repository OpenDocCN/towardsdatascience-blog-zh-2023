- en: Build Reliable Machine Learning Pipelines with Continuous Integration
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用持续集成构建可靠的机器学习管道
- en: 原文：[https://towardsdatascience.com/build-reliable-machine-learning-pipelines-with-continuous-integration-ea822eb09bf6](https://towardsdatascience.com/build-reliable-machine-learning-pipelines-with-continuous-integration-ea822eb09bf6)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/build-reliable-machine-learning-pipelines-with-continuous-integration-ea822eb09bf6](https://towardsdatascience.com/build-reliable-machine-learning-pipelines-with-continuous-integration-ea822eb09bf6)
- en: Automate Machine Learning Workflow with Continuous Integration
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用持续集成自动化机器学习工作流程
- en: '[](https://khuyentran1476.medium.com/?source=post_page-----ea822eb09bf6--------------------------------)[![Khuyen
    Tran](../Images/98aa66025ad29b618e875c75f1c400a5.png)](https://khuyentran1476.medium.com/?source=post_page-----ea822eb09bf6--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ea822eb09bf6--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ea822eb09bf6--------------------------------)
    [Khuyen Tran](https://khuyentran1476.medium.com/?source=post_page-----ea822eb09bf6--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://khuyentran1476.medium.com/?source=post_page-----ea822eb09bf6--------------------------------)[![Khuyen
    Tran](../Images/98aa66025ad29b618e875c75f1c400a5.png)](https://khuyentran1476.medium.com/?source=post_page-----ea822eb09bf6--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ea822eb09bf6--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ea822eb09bf6--------------------------------)
    [Khuyen Tran](https://khuyentran1476.medium.com/?source=post_page-----ea822eb09bf6--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ea822eb09bf6--------------------------------)
    ·8 min read·Apr 6, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ea822eb09bf6--------------------------------)
    ·阅读时长8分钟·2023年4月6日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: Scenario
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 情境
- en: As a data scientist, you are responsible for improving the model currently in
    production. After spending months fine-tuning the model, you discover one with
    greater accuracy than the original.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 作为数据科学家，你负责改进当前在生产中的模型。在花费几个月时间微调模型后，你发现了一个比原始模型更准确的模型。
- en: Excited by your breakthrough, you create a pull request to merge your model
    into the main branch.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 对你的突破感到兴奋，你创建了一个拉取请求，将你的模型合并到主分支中。
- en: '![](../Images/480d636e81974aa7e60cbc4909caa2af.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/480d636e81974aa7e60cbc4909caa2af.png)'
- en: Image by Author
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Unfortunately, because of the numerous changes, your team takes over a week
    to evaluate and analyze them, which ultimately impedes project progress.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，由于众多的变更，你的团队需要超过一周的时间来评估和分析这些变更，这最终阻碍了项目进展。
- en: Furthermore, after deploying the model, you identify unexpected behaviors resulting
    from code errors, causing the company to lose money.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在部署模型后，你发现由于代码错误导致的意外行为，使公司损失了金钱。
- en: '![](../Images/0ee3976e144e82d05820476edb13c49d.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0ee3976e144e82d05820476edb13c49d.png)'
- en: Image by Author
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: In retrospect, **automating code and model testing after submitting a pull request**
    would have prevented these problems and saved both time and money.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 回顾来看，**在提交拉取请求后自动化代码和模型测试**本可以避免这些问题，并节省时间和金钱。
- en: Continuous Integration (CI) offers an easy solution for this issue.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 持续集成（CI）为这一问题提供了简单的解决方案。
- en: What is CI?
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是CI？
- en: 'CI is the practice of continuously merging and testing code changes into a
    shared repository. In a machine learning project, CI can be very useful for several
    reasons:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: CI 是将代码更改持续合并和测试到共享仓库中的实践。在机器学习项目中，CI 因多种原因非常有用：
- en: '**Catching errors early**: CI facilitates the early identification of errors
    by automatically testing any code changes made, enabling timely problem detection
    during the development phase'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**尽早捕获错误**：CI 通过自动测试任何代码更改来促进早期错误的识别，从而在开发阶段实现及时的问题检测'
- en: '**Ensuring reproducibility**: CI helps ensure reproducibility by establishing
    clear and consistent testing procedures, making it easier to replicate machine
    learning project results.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**确保可重复性**：CI 通过建立明确且一致的测试程序来帮助确保可重复性，使得复制机器学习项目结果变得更容易。'
- en: '**Faster feedback and decision-making**: By providing clear metrics and parameters,
    CI enables faster feedback and decision-making, freeing up reviewer time for more
    critical tasks.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**更快的反馈和决策**：通过提供明确的指标和参数，CI 使得反馈和决策更加迅速，释放了审阅者的时间以处理更关键的任务。'
- en: '![](../Images/7ad0988b1e5ca2dd147253bbabbeea78.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7ad0988b1e5ca2dd147253bbabbeea78.png)'
- en: Image by Author
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: This article will show you how to create a CI pipeline for a machine-learning
    project.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 本文将展示如何为机器学习项目创建一个 CI 流水线。
- en: 'Feel free to play and fork the source code of this article here:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 随意尝试和分叉本文的源代码：
- en: '[](https://github.com/khuyentran1401/cicd-mlops-demo/?source=post_page-----ea822eb09bf6--------------------------------)
    [## GitHub - khuyentran1401/cicd-mlops-demo: Demo for CI/CD in a machine learning
    project'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://github.com/khuyentran1401/cicd-mlops-demo/?source=post_page-----ea822eb09bf6--------------------------------)
    [## GitHub - khuyentran1401/cicd-mlops-demo: 机器学习项目中的 CI/CD 演示'
- en: This is a sample project for the article Build Reliable Machine Learning Pipelines
    with Continuous Integration. CI/CD…
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 这是文章《构建可靠的机器学习流水线与持续集成》的一个示例项目。CI/CD…
- en: github.com](https://github.com/khuyentran1401/cicd-mlops-demo/?source=post_page-----ea822eb09bf6--------------------------------)
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: github.com](https://github.com/khuyentran1401/cicd-mlops-demo/?source=post_page-----ea822eb09bf6--------------------------------)
- en: CI Pipeline Overview
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CI 流水线概述
- en: 'The approach to building a CI pipeline for a machine-learning project can vary
    depending on the workflow of each company. In this project, we will create one
    of the most common workflows to build a CI pipeline:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 为机器学习项目构建 CI 流水线的方法可以根据每个公司的工作流程有所不同。在本项目中，我们将创建一个最常见的工作流程来构建 CI 流水线：
- en: Data scientists make changes to the code, creating a new model locally.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据科学家对代码进行更改，在本地创建一个新模型。
- en: Data scientists push the new model to remote storage.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据科学家将新模型推送到远程存储。
- en: Data scientists create a pull request for the changes.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据科学家为更改创建一个拉取请求。
- en: A CI pipeline is triggered to test the code and model.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CI 流水线被触发以测试代码和模型。
- en: If changes are approved, they are merged into the main branch.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果更改被批准，它们将合并到主分支中。
- en: '![](../Images/4b234810e2c2f263d5f6bade18a230a7.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4b234810e2c2f263d5f6bade18a230a7.png)'
- en: Image by Author
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Let’s illustrate an example based on this workflow.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们基于这个工作流程举一个例子。
- en: Build the Workflow
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建工作流
- en: Suppose experiment C performs exceptionally well after trying out various processing
    techniques and ML models. As a result, we aim to merge the code and model into
    the main branch.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 假设实验 C 在尝试了各种处理技术和机器学习模型后表现异常出色。因此，我们的目标是将代码和模型合并到主分支中。
- en: '![](../Images/90ccc7411ef02e9442fbc2d5a203afd6.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/90ccc7411ef02e9442fbc2d5a203afd6.png)'
- en: Image by Author
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: 'To accomplish this, we need to perform the following steps:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这一点，我们需要执行以下步骤：
- en: Version the inputs and outputs of the experiment.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对实验的输入和输出进行版本控制。
- en: Upload the model and data to remote storage.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将模型和数据上传到远程存储。
- en: Create test files to test the code and model.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建测试文件以测试代码和模型。
- en: Create a GitHub workflow.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个 GitHub 工作流。
- en: '![](../Images/90d224dae16bbd987f44527ccb0e5ffa.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/90d224dae16bbd987f44527ccb0e5ffa.png)'
- en: Image by Author
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Now, let’s explore each of these steps in detail.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们详细探讨这些步骤。
- en: Version inputs and outputs of an experiment
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对实验的输入和输出进行版本控制
- en: We will use the DVC to version inputs and outputs of an experiment of a pipeline,
    including code, data, and model.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 DVC 对流水线实验的输入和输出进行版本控制，包括代码、数据和模型。
- en: '[](/dvc-github-actions-automatically-rerun-modified-components-of-a-pipeline-a3632519dc42?source=post_page-----ea822eb09bf6--------------------------------)
    [## DVC + GitHub Actions: Automatically Rerun Modified Components of a Pipeline'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/dvc-github-actions-automatically-rerun-modified-components-of-a-pipeline-a3632519dc42?source=post_page-----ea822eb09bf6--------------------------------)
    [## DVC + GitHub Actions: 自动重新运行流水线中修改过的组件'
- en: A Perfect Combo to Quickly Iterate on Your DS Project
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 快速迭代你的数据科学项目的完美组合
- en: towardsdatascience.com](/dvc-github-actions-automatically-rerun-modified-components-of-a-pipeline-a3632519dc42?source=post_page-----ea822eb09bf6--------------------------------)
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/dvc-github-actions-automatically-rerun-modified-components-of-a-pipeline-a3632519dc42?source=post_page-----ea822eb09bf6--------------------------------)
- en: 'The pipeline is defined based on the file locations in the project:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 流水线是根据项目中的文件位置定义的：
- en: '![](../Images/36ec196ec3b019a9b1cc1fd0ba661fc1.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/36ec196ec3b019a9b1cc1fd0ba661fc1.png)'
- en: Image by Author
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: 'We will describe the [stages](https://dvc.org/doc/command-reference/stage)
    of the pipeline and the data dependencies between them in the `dvc.yaml` file:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在 `dvc.yaml` 文件中描述流水线的[阶段](https://dvc.org/doc/command-reference/stage)及其之间的数据依赖关系：
- en: '[PRE0]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To run an experiment pipeline defined in `dvc.yaml` , type the following command
    on your terminal:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行在 `dvc.yaml` 中定义的实验流水线，请在终端中输入以下命令：
- en: '[PRE1]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We will get the following output:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将获得以下输出：
- en: '[PRE2]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The run will automatically generate the `dvc.lock` file that stores the **exact
    versions** of the data, code, and dependencies between them. Using the same versions
    of the inputs and outputs makes sure that the same experiment can be reproduced
    in the future.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 运行将自动生成`dvc.lock`文件，该文件存储数据、代码和它们之间依赖项的**精确版本**。使用相同版本的输入和输出可以确保将来可以重现相同的实验。
- en: '[PRE3]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Upload data and model to a remote storage
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将数据和模型上传到远程存储
- en: DVC makes it easy to upload data files and models produced by the pipeline stages
    in the `dvc.yaml` file to a remote storage location.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: DVC使得将管道阶段产生的数据文件和模型上传到`dvc.yaml`文件中的远程存储位置变得简单。
- en: '[](/introduction-to-dvc-data-version-control-tool-for-machine-learning-projects-7cb49c229fe0?source=post_page-----ea822eb09bf6--------------------------------)
    [## Introduction to DVC: Data Version Control Tool for Machine Learning Projects'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/introduction-to-dvc-data-version-control-tool-for-machine-learning-projects-7cb49c229fe0?source=post_page-----ea822eb09bf6--------------------------------)
    [## DVC简介：机器学习项目的数据版本控制工具'
- en: Just like Git, but with Data!
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 就像Git一样，但带有数据！
- en: towardsdatascience.com](/introduction-to-dvc-data-version-control-tool-for-machine-learning-projects-7cb49c229fe0?source=post_page-----ea822eb09bf6--------------------------------)
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/introduction-to-dvc-data-version-control-tool-for-machine-learning-projects-7cb49c229fe0?source=post_page-----ea822eb09bf6--------------------------------)
- en: 'Before uploading our files, we will specify the remote storage location in
    the file `.dvc/config` :'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在上传文件之前，我们将在文件`.dvc/config`中指定远程存储位置：
- en: '[PRE4]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Make sure to replace the URI of your S3 bucket with the “read-write” remote
    storage URI.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 确保将S3桶的URI替换为“读写”远程存储URI。
- en: '![](../Images/06af2e597cd8ad020588bd02b6c9db80.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/06af2e597cd8ad020588bd02b6c9db80.png)'
- en: Image by Author
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: 'Push files to the remote storage location named “read-write”:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 将文件推送到名为“读写”的远程存储位置：
- en: '[PRE5]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Create tests
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建测试
- en: We will also generate tests that verify the performance of the code responsible
    for processing data, training the model, and the model itself, ensuring that the
    code and model meet our expectations.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将生成测试，以验证处理数据、训练模型以及模型本身的代码性能，确保代码和模型符合我们的期望。
- en: '![](../Images/12bfd1f122812338a9ed526557157be8.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/12bfd1f122812338a9ed526557157be8.png)'
- en: Image by Author
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: View all test files [here](https://github.com/khuyentran1401/cicd-mlops-demo/tree/ci-main/tests).
  id: totrans-83
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 查看所有测试文件 [这里](https://github.com/khuyentran1401/cicd-mlops-demo/tree/ci-main/tests)。
- en: Create a GitHub workflow
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建GitHub工作流
- en: 'Now it comes to the exciting part: Creating a GitHub workflow to automate the
    testing of your data and model! If you are not familiar with GitHub workflow,
    I recommend reading [this article](https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions)
    for a quick overview.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 现在进入激动人心的部分：创建一个GitHub工作流以自动化测试您的数据和模型！如果您不熟悉GitHub工作流，我建议阅读[这篇文章](https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions)以获得快速概述。
- en: 'We will create the workflow called `Test code and model` in the file `.github/workflows/run_test.yaml`
    :'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在文件`.github/workflows/run_test.yaml`中创建名为`Test code and model`的工作流：
- en: '![](../Images/832e1e28a72d976f8a3684ed0ad86373.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/832e1e28a72d976f8a3684ed0ad86373.png)'
- en: Image by Author
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: '[PRE6]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The `on` field specifies that the pipeline is triggered on a pull request event.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '`on`字段指定管道在拉取请求事件时触发。'
- en: 'The `test_model` job includes the following steps:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '`test_model`作业包括以下步骤：'
- en: Checking out the code
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看代码
- en: Setting up the Python environment
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置Python环境
- en: Installing dependencies
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装依赖项
- en: Pulling data and models from a remote storage location using DVC
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用DVC从远程存储位置提取数据和模型
- en: Running tests using pytest
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用pytest运行测试
- en: Evaluating the model using DVC experiments
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用DVC实验评估模型
- en: Setting up the [Iterative CML](https://cml.dev/) (Continuous Machine Learning)
    environment
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置[Iterative CML](https://cml.dev/)（持续机器学习）环境
- en: Creating a report with metrics and parameters, and commenting on the pull request
    with the report using CML.
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用CML创建包含指标和参数的报告，并在拉取请求中评论该报告。
- en: 'Note that for the job to function properly, it requires the following:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，为了使作业正常运行，需要以下内容：
- en: AWS credentials to pull the data and model
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS凭证以提取数据和模型
- en: '[GitHub token](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token)
    to comment on the pull request.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[GitHub token](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token)用于评论拉取请求。'
- en: To ensure the secure storage of sensitive information in our repository and
    enable GitHub Actions to access them, we will use [encrypted secrets](https://docs.github.com/en/actions/security-guides/encrypted-secrets).
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保在我们的仓库中安全存储敏感信息，并允许GitHub Actions访问它们，我们将使用[加密密钥](https://docs.github.com/en/actions/security-guides/encrypted-secrets)。
- en: '![](../Images/e005a07a25beb1c49d4b05bcce81d060.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e005a07a25beb1c49d4b05bcce81d060.png)'
- en: Image by Author
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自作者
- en: That’s it! Now let’s try out this project and see if it works as we expected.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！现在让我们尝试这个项目，看看它是否按照我们预期的方式工作。
- en: Try it Out
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 尝试一下
- en: Setup
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置
- en: To try out this project, start with creating a new repository using the project
    template.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 要尝试这个项目，首先创建一个新的仓库，使用项目模板。
- en: '![](../Images/196074be00df234d18b6a2c1b126c908.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/196074be00df234d18b6a2c1b126c908.png)'
- en: 'Clone the repository to your local machine:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 克隆仓库到本地机器：
- en: '[PRE7]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Set up the environment:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 设置环境：
- en: '[PRE8]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Pull data from the remote storage location called “read”:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 从名为“read”的远程存储位置拉取数据：
- en: '[PRE9]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Create experiments
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建实验
- en: 'The GitHub workflow will be triggered if any changes are made to the `params.yaml`
    file or files in the `src` and `tests` directories. To illustrate this, we will
    make some minor changes to the `params.yaml` file:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 如果对`params.yaml`文件或`src`和`tests`目录中的文件进行任何更改，将触发GitHub工作流。为了说明这一点，我们将对`params.yaml`文件进行一些小改动：
- en: '![](../Images/4657d69d2f9301bc395cb30f5a7601a5.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4657d69d2f9301bc395cb30f5a7601a5.png)'
- en: Image by Author
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自作者
- en: 'Next, let’s create a new experiment with the change:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们创建一个带有更改的新实验：
- en: '[PRE10]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Push the modified data and model to remote storage called “read-write”:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 将修改后的数据和模型推送到名为“read-write”的远程存储：
- en: '[PRE11]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Add, commit, and push changes to the repository:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 添加、提交并推送更改到仓库：
- en: '[PRE12]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Create a pull request
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建拉取请求
- en: Next, create a pull request by clicking the Contribute button.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，通过点击Contribute按钮创建拉取请求。
- en: '![](../Images/22641cfa0bc1b0398282eb04bf9d39b3.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/22641cfa0bc1b0398282eb04bf9d39b3.png)'
- en: Image by Author
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自作者
- en: After creating a pull request in the repository, a GitHub workflow will be triggered
    to run tests on the code and model.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在仓库中创建拉取请求后，将触发GitHub工作流来对代码和模型进行测试。
- en: If all the tests pass, a comment will be added to the pull request, containing
    the metrics and parameters of the new experiment.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 如果所有测试都通过，将会在拉取请求中添加一个评论，包含新实验的度量和参数。
- en: '![](../Images/8d7d6169e49607307b6b2316ae3441ed.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8d7d6169e49607307b6b2316ae3441ed.png)'
- en: Image by Author
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自作者
- en: This information makes it easier for reviews to understand the changes made
    to the code and model. As a result, they can quickly evaluate whether the changes
    meet the expected performance criteria and decide whether to approve the PR for
    merging into the main branch. How cool is that?
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 这些信息使得审查更容易理解对代码和模型所做的更改。因此，他们可以快速评估这些更改是否符合预期的性能标准，并决定是否批准将PR合并到主分支。这是多么酷啊？
- en: Conclusion
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Congratulations! You have just learned how to create a CI pipeline for your
    machine-learning project. I hope this article will give you the motivation to
    create your own CI pipeline to ensure a reliable machine-learning workflow.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你刚刚学会了如何为你的机器学习项目创建CI管道。我希望这篇文章能激励你创建自己的CI管道，以确保可靠的机器学习工作流程。
- en: I love writing about data science concepts and playing with different data science
    tools. You can connect with me on [LinkedIn](https://www.linkedin.com/in/khuyen-tran-1401/)
    and [Twitter](https://twitter.com/KhuyenTran16).
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢写关于数据科学的概念，并玩各种数据科学工具。你可以通过[LinkedIn](https://www.linkedin.com/in/khuyen-tran-1401/)和[Twitter](https://twitter.com/KhuyenTran16)与我联系。
- en: 'Star [this repo](https://github.com/khuyentran1401/Data-science) if you want
    to check the code for the articles I have written. Follow me on Medium to stay
    notified about my latest data science articles:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想查看我写的文章中的代码，请给[这个仓库](https://github.com/khuyentran1401/Data-science)加星。关注我在Medium上的账号，以便接收我最新的数据科学文章：
- en: '[](/build-a-full-stack-ml-application-with-pydantic-and-prefect-915f00fe0c62?source=post_page-----ea822eb09bf6--------------------------------)
    [## Build a Full-Stack ML Application With Pydantic And Prefect'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/build-a-full-stack-ml-application-with-pydantic-and-prefect-915f00fe0c62?source=post_page-----ea822eb09bf6--------------------------------)
    [## 使用Pydantic和Prefect构建全栈机器学习应用程序'
- en: Create a UI for ML Feature Engineering in One Line of Code
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 用一行代码创建一个机器学习特征工程的UI
- en: towardsdatascience.com](/build-a-full-stack-ml-application-with-pydantic-and-prefect-915f00fe0c62?source=post_page-----ea822eb09bf6--------------------------------)
    [](/how-to-structure-an-ml-project-for-reproducibility-and-maintainability-54d5e53b4c82?source=post_page-----ea822eb09bf6--------------------------------)
    [## How to Structure an ML Project for Reproducibility and Maintainability
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '[如何构建一个 ML 项目以确保可重复性和可维护性](https://towardsdatascience.com/how-to-structure-an-ml-project-for-reproducibility-and-maintainability-54d5e53b4c82?source=post_page-----ea822eb09bf6--------------------------------)'
- en: Start Your Next ML Project With This Template
  id: totrans-143
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[如何构建一个全栈 ML 应用程序与 Pydantic 和 Prefect](https://towardsdatascience.com/build-a-full-stack-ml-application-with-pydantic-and-prefect-915f00fe0c62?source=post_page-----ea822eb09bf6--------------------------------)'
- en: towardsdatascience.com](/how-to-structure-an-ml-project-for-reproducibility-and-maintainability-54d5e53b4c82?source=post_page-----ea822eb09bf6--------------------------------)
    [](/4-pre-commit-plugins-to-automate-code-reviewing-and-formatting-in-python-c80c6d2e9f5?source=post_page-----ea822eb09bf6--------------------------------)
    [## 4 pre-commit Plugins to Automate Code Reviewing and Formatting in Python
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '[4 个 pre-commit 插件以自动化 Python 代码审查和格式化](https://towardsdatascience.com/4-pre-commit-plugins-to-automate-code-reviewing-and-formatting-in-python-c80c6d2e9f5?source=post_page-----ea822eb09bf6--------------------------------)'
- en: Write High-Quality Code with black, flake8, isort, and interrogate
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**使用此模板开始您的下一个机器学习项目**'
- en: towardsdatascience.com](/4-pre-commit-plugins-to-automate-code-reviewing-and-formatting-in-python-c80c6d2e9f5?source=post_page-----ea822eb09bf6--------------------------------)
    [](/pytest-for-data-scientists-2990319e55e6?source=post_page-----ea822eb09bf6--------------------------------)
    [## Pytest for Data Scientists
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '[Pytest for Data Scientists](https://towardsdatascience.com/pytest-for-data-scientists-2990319e55e6?source=post_page-----ea822eb09bf6--------------------------------)'
- en: A Comprehensive Guide to Pytest for your Data Science Projects
  id: totrans-147
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**数据科学项目的 Pytest 完整指南**'
- en: towardsdatascience.com](/pytest-for-data-scientists-2990319e55e6?source=post_page-----ea822eb09bf6--------------------------------)
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '**使用 black, flake8, isort 和 interrogate 编写高质量代码**'
