- en: A Guide to Matplotlib Subfigures for Creating Complex Multi-Panel Figures
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Matplotlib 子图形创建复杂多面板图的指南
- en: 原文：[https://towardsdatascience.com/a-guide-to-matplotlib-subfigures-for-creating-complex-multi-panel-figures-70fa8f6c38a4?source=collection_archive---------3-----------------------#2023-11-01](https://towardsdatascience.com/a-guide-to-matplotlib-subfigures-for-creating-complex-multi-panel-figures-70fa8f6c38a4?source=collection_archive---------3-----------------------#2023-11-01)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/a-guide-to-matplotlib-subfigures-for-creating-complex-multi-panel-figures-70fa8f6c38a4?source=collection_archive---------3-----------------------#2023-11-01](https://towardsdatascience.com/a-guide-to-matplotlib-subfigures-for-creating-complex-multi-panel-figures-70fa8f6c38a4?source=collection_archive---------3-----------------------#2023-11-01)
- en: Subfigures — a powerful tool for beautiful multi-panel figures
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 子图形——用于美丽的多面板图形的强大工具
- en: '[](https://tdrose1.medium.com/?source=post_page-----70fa8f6c38a4--------------------------------)[![Tim
    Rose](../Images/12bcd585b5dad388dad140b4ca049392.png)](https://tdrose1.medium.com/?source=post_page-----70fa8f6c38a4--------------------------------)[](https://towardsdatascience.com/?source=post_page-----70fa8f6c38a4--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----70fa8f6c38a4--------------------------------)
    [Tim Rose](https://tdrose1.medium.com/?source=post_page-----70fa8f6c38a4--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://tdrose1.medium.com/?source=post_page-----70fa8f6c38a4--------------------------------)[![Tim
    Rose](../Images/12bcd585b5dad388dad140b4ca049392.png)](https://tdrose1.medium.com/?source=post_page-----70fa8f6c38a4--------------------------------)[](https://towardsdatascience.com/?source=post_page-----70fa8f6c38a4--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----70fa8f6c38a4--------------------------------)
    [Tim Rose](https://tdrose1.medium.com/?source=post_page-----70fa8f6c38a4--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb2b238bba8ac&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-guide-to-matplotlib-subfigures-for-creating-complex-multi-panel-figures-70fa8f6c38a4&user=Tim+Rose&userId=b2b238bba8ac&source=post_page-b2b238bba8ac----70fa8f6c38a4---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----70fa8f6c38a4--------------------------------)
    ·8 min read·Nov 1, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F70fa8f6c38a4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-guide-to-matplotlib-subfigures-for-creating-complex-multi-panel-figures-70fa8f6c38a4&user=Tim+Rose&userId=b2b238bba8ac&source=-----70fa8f6c38a4---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb2b238bba8ac&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-guide-to-matplotlib-subfigures-for-creating-complex-multi-panel-figures-70fa8f6c38a4&user=Tim+Rose&userId=b2b238bba8ac&source=post_page-b2b238bba8ac----70fa8f6c38a4---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----70fa8f6c38a4--------------------------------)
    ·8 分钟阅读·2023年11月1日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F70fa8f6c38a4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-guide-to-matplotlib-subfigures-for-creating-complex-multi-panel-figures-70fa8f6c38a4&user=Tim+Rose&userId=b2b238bba8ac&source=-----70fa8f6c38a4---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F70fa8f6c38a4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-guide-to-matplotlib-subfigures-for-creating-complex-multi-panel-figures-70fa8f6c38a4&source=-----70fa8f6c38a4---------------------bookmark_footer-----------)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F70fa8f6c38a4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-guide-to-matplotlib-subfigures-for-creating-complex-multi-panel-figures-70fa8f6c38a4&source=-----70fa8f6c38a4---------------------bookmark_footer-----------)'
- en: Motivation
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动机
- en: Complex (scientific) figures often consist of multiple plots with different
    sizes or annotations. If you work with the matplotlib/seaborn ecosystem, there
    are many ways to create complex figures, e.g. using [gridspec](https://matplotlib.org/stable/gallery/subplots_axes_and_figures/gridspec_multicolumn.html).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 复杂的（科学）图形通常由多个具有不同大小或注释的子图组成。如果你使用 matplotlib/seaborn 生态系统，有很多方法可以创建复杂的图形，例如使用
    [gridspec](https://matplotlib.org/stable/gallery/subplots_axes_and_figures/gridspec_multicolumn.html)。
- en: 'However, this can get challenging very fast, especially if you want to integrate
    multi-axes plots from seaborn such as [jointplot](https://seaborn.pydata.org/generated/seaborn.jointplot.html)
    or [pairgrid](https://seaborn.pydata.org/generated/seaborn.PairGrid.html#seaborn.PairGrid)
    into your figure because they don’t have the option to provide axes as input parameters.
    But there is another way to assemble figures in matplotlib instead of just working
    with subplots: [**Subfigures**](https://matplotlib.org/stable/gallery/subplots_axes_and_figures/subfigures.html).
    A powerful framework to create multi-panel figures like this one:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这可能会很快变得具有挑战性，特别是如果你想将 seaborn 中的多坐标轴图，如 [jointplot](https://seaborn.pydata.org/generated/seaborn.jointplot.html)
    或 [pairgrid](https://seaborn.pydata.org/generated/seaborn.PairGrid.html#seaborn.PairGrid)
    集成到你的图形中，因为它们没有提供坐标轴作为输入参数的选项。但在 matplotlib 中还有另一种组合图形的方法，而不仅仅是使用子图：[**Subfigures**](https://matplotlib.org/stable/gallery/subplots_axes_and_figures/subfigures.html)。这是一个强大的框架，可以创建像这样的多面板图形：
- en: '![](../Images/d51973be73c935f8aa76c990a9f91967.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d51973be73c935f8aa76c990a9f91967.png)'
- en: The goal of the article is to show you how to make this figure.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本文的目标是向你展示如何制作这个图形。
- en: In this article, I will give an introduction to subfigures and their capabilities.
    We will combine subfigures with subplots and gridspecs to recreate this figure.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我将介绍子图及其功能。我们将结合子图、子图和 gridspecs 来重新创建这个图形。
- en: To follow this article, you should have a basic understanding of matplotlib
    [subplots](https://matplotlib.org/stable/gallery/subplots_axes_and_figures/subplot.html)
    and [gridspec](https://matplotlib.org/stable/gallery/subplots_axes_and_figures/gridspec_multicolumn.html)
    (if not, you can check out the linked tutorials).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要跟随本文，你应该对 matplotlib 的 [subplots](https://matplotlib.org/stable/gallery/subplots_axes_and_figures/subplot.html)
    和 [gridspec](https://matplotlib.org/stable/gallery/subplots_axes_and_figures/gridspec_multicolumn.html)
    有基本的了解（如果没有，你可以查看链接的教程）。
- en: Matplotlib subfigures
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Matplotlib 子图
- en: 'First, we import matplotlib, seaborn and load some example data, which we will
    use to fill the plots with content:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们导入 matplotlib、seaborn，并加载一些示例数据，这些数据将用于填充图表内容：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Let’s start with the concept of subfigures in matplotlib. To create subfigures,
    we first need to create a figure:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从 matplotlib 中子图的概念开始。要创建子图，我们首先需要创建一个图形：
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'From this point, we can define subfigures similarly to subplots. It is possible
    to create a grid of subfigures by providing the number of rows (*2*) and columns
    (*1*). We additionally color the figure backgrounds to highlight them:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 从这一点开始，我们可以类似于子图的方式定义子图。通过提供行数（*2*）和列数（*1*），可以创建一个子图网格。我们还给图形背景上色以突出显示：
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Just figures without any plots (axes) will not be shown, therefore we need
    to define subplots for each subfigure. Here we can already see one great feature
    of subfigures, for each subfigure we can define different layouts of subplots:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 仅有图形没有任何图表（坐标轴）将不会被显示，因此我们需要为每个子图定义子图。这里我们已经可以看到子图的一个伟大特性，对于每个子图，我们可以定义不同的子图布局：
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/4f54a35709dd40f98ad718729e154456.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4f54a35709dd40f98ad718729e154456.png)'
- en: 'We now have two separate figures that we can set up differently but place together
    in one final figure. Of course, we can also play with the size ratios of subfigures:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在有两个独立的图形，可以分别设置它们，但将它们放在一个最终的图形中。当然，我们也可以调整子图的大小比例：
- en: '[PRE4]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/7d814070c4d843fbf4b69749262e512b.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7d814070c4d843fbf4b69749262e512b.png)'
- en: 'However, there is one drawback of subfigures. To eliminate overlapping labels
    or elements outside the figure, `plt.tight_layout()` is a good way of squeezing
    everything nicely into the figure. However, this is not supported for subfigures.
    Here you can see what happens if you try to use it:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，子图有一个缺点。为了消除标签或图形外部元素的重叠，`plt.tight_layout()` 是一个将所有内容紧凑地放入图形中的好方法。然而，这对子图不支持。这里你可以看到如果尝试使用它会发生什么：
- en: '[PRE5]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/b0e637eec7c27b22e48476cb9a6f08d9.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b0e637eec7c27b22e48476cb9a6f08d9.png)'
- en: 'Not really what we intended… To insert spacing between plots and remove any
    overlaps, we need to use the `subplots_adjust` function, which allows us to insert
    (or remove) more space between subplots and the borders:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不是我们想要的……为了在图表之间插入间距并去除任何重叠，我们需要使用 `subplots_adjust` 函数，它允许我们在子图与边框之间插入（或移除）更多空间：
- en: '[PRE6]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/2e48ccfb91bc205dce89c6fb650be26c.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2e48ccfb91bc205dce89c6fb650be26c.png)'
- en: 'Another great aspect of subfigures is that they can be nested, meaning we can
    divide every subfigure into more subfigures:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 子图的另一个伟大方面是它们可以嵌套，这意味着我们可以将每个子图分成更多的子图：
- en: '[PRE7]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../Images/8683969839caafef791e8bd49c4bf8ca.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8683969839caafef791e8bd49c4bf8ca.png)'
- en: Let’s insert a [jointplot](https://seaborn.pydata.org/generated/seaborn.jointplot.html)
    into this figure. Unfortunately, this is not straightforward, since the seaborn
    function does not have the possibility to provide a figure object as an input.
    But if we look into the [source code of the function](https://github.com/seaborn/seaborn/blob/d1c04f2c2c4dbd11ede016405b5ea51380e37f51/seaborn/axisgrid.py#L1640),
    we can see that this plot consists of three subplots with shared x and y axis
    that are defined through a gridspec.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将一个[联合图](https://seaborn.pydata.org/generated/seaborn.jointplot.html)插入到这个图形中。不幸的是，这并不简单，因为seaborn函数没有提供图形对象作为输入的选项。但如果我们查看[函数的源代码](https://github.com/seaborn/seaborn/blob/d1c04f2c2c4dbd11ede016405b5ea51380e37f51/seaborn/axisgrid.py#L1640)，我们可以看到这个图由三个共享x和y轴的子图组成，这些子图通过网格规范定义。
- en: 'This means we can easily plot it inside a subfigure:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们可以轻松地在子图中绘制它：
- en: '[PRE8]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](../Images/f95a47ad62448090ef88650407028719.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f95a47ad62448090ef88650407028719.png)'
- en: You can play with the ratio parameter and see how the plot is changing.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以调整比例参数，看看图形如何变化。
- en: Now, we have all the tools we need to create complex figures, by using subfigure,
    subplots and grids. For such figures, it is often crucial to annotate each plot
    with letters to explain them in the caption or reference them in a text. This
    is often done with other software such as Adobe Illustrator or Inkscape after
    the figure is created. But we can also do it directly in python, which will save
    us additional effort later.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经具备了创建复杂图形所需的所有工具，包括使用子图（subfigure）、子图布局（subplots）和网格（grids）。对于这种图形，通常需要用字母标注每个图，以便在说明中解释它们或在文本中引用。通常，这些标注是在图形创建后使用其他软件如Adobe
    Illustrator或Inkscape完成的。但我们也可以直接在Python中完成这项工作，这样可以节省以后额外的努力。
- en: 'For this, we will define a function to make such annotations:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们将定义一个函数来进行这些标注：
- en: '[PRE9]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The function takes an axes as an input, together with x and y coordinates,
    which will transformed into relative axes coordinates. We can use this to annotate
    some plots in our previously created figure:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数将坐标轴作为输入，连同x和y坐标，这些坐标将转换为相对坐标轴坐标。我们可以用它来在我们之前创建的图形中标注一些图：
- en: '[PRE10]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![](../Images/36c2342c620bdafac1e5ed2f1bc31e94.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/36c2342c620bdafac1e5ed2f1bc31e94.png)'
- en: We can now create the plot shown at the beginning of the article. It consists
    of three subfigures. One top subfigure, spanning the first row, and two bottom
    subfigures. The left bottom subfigure will be used for the jointplot (as shown
    before) and for the right bottom subfigure we will define a gridspec for place
    4 subplots of different sizes.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以创建文章开头显示的图形。它由三个子图组成。一个位于顶部，占据第一行，两个位于底部。左下角的子图将用于联合图（如前所示），而右下角的子图将定义一个网格规范（gridspec），以放置4个不同大小的子图。
- en: '[PRE11]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![](../Images/d51973be73c935f8aa76c990a9f91967.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d51973be73c935f8aa76c990a9f91967.png)'
- en: Conclusion
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Subfigures are a relatively new concept in matplotlib. They make it easy to
    assemble large figures with many plots. All the things shown in this article can
    also be achieved entirely using gridspec. However, this requires a large grid
    with many considerations for the sizes of each subplot. Subfigures are more plug-and-play
    and the same result can be achieved with less work.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 子图是matplotlib中相对较新的概念。它们使得组装包含许多图的大型图形变得简单。本文中展示的所有内容也可以完全通过使用gridpec实现。然而，这需要一个大型网格，并且需要考虑每个子图的大小。子图更像是即插即用的，且用更少的工作就可以达到相同的效果。
- en: For me, subfigures are a very convenient tool for creating scientific figures
    and I hope they can be helpful for you, too.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 对我来说，子图是创建科学图形的一个非常方便的工具，我希望它们对你也能有所帮助。
- en: 'You can also find all the code from this article on GitHub: [https://github.com/tdrose/medium-articles-code](https://github.com/tdrose/medium-articles-code)'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以在GitHub上找到本文中的所有代码：[https://github.com/tdrose/medium-articles-code](https://github.com/tdrose/medium-articles-code)
- en: Unless otherwise noted, all images were created by the author.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 除非另有说明，所有图像均由作者创建。
