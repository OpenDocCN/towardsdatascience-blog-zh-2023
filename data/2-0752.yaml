- en: Do you really need a Feature Store?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你真的需要一个特征存储吗？
- en: 原文：[https://towardsdatascience.com/do-you-really-need-a-feature-store-f71cf9586158](https://towardsdatascience.com/do-you-really-need-a-feature-store-f71cf9586158)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/do-you-really-need-a-feature-store-f71cf9586158](https://towardsdatascience.com/do-you-really-need-a-feature-store-f71cf9586158)
- en: Feature Store — the interface between raw data and ML models
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 特征存储——原始数据与机器学习模型之间的接口
- en: '[](https://medium.com/@weiyunna91?source=post_page-----f71cf9586158--------------------------------)[![YUNNA
    WEI](../Images/ffd0dd5c697dd2b4640ade49274d2bf9.png)](https://medium.com/@weiyunna91?source=post_page-----f71cf9586158--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f71cf9586158--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f71cf9586158--------------------------------)
    [YUNNA WEI](https://medium.com/@weiyunna91?source=post_page-----f71cf9586158--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@weiyunna91?source=post_page-----f71cf9586158--------------------------------)[![YUNNA
    WEI](../Images/ffd0dd5c697dd2b4640ade49274d2bf9.png)](https://medium.com/@weiyunna91?source=post_page-----f71cf9586158--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f71cf9586158--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f71cf9586158--------------------------------)
    [YUNNA WEI](https://medium.com/@weiyunna91?source=post_page-----f71cf9586158--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----f71cf9586158--------------------------------)
    ·8 min read·Mar 17, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----f71cf9586158--------------------------------)
    ·8分钟阅读·2023年3月17日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: “Feature store” has been around for a few years. There are both open-source
    solutions (such as [Feast](https://feast.dev/) and [Hopsworks](https://www.hopsworks.ai/open-source-hopsworks)),
    and commercial offerings (such as [Tecton](https://www.tecton.ai/), [Hopsworks](https://www.hopsworks.ai/open-source-hopsworks),
    [Databricks Feature Store)](https://docs.databricks.com/machine-learning/feature-store/index.html)
    for “feature store”. There have been a lot of articles and blogs published around
    what “feature store” is, and why “feature store” is valuable. Some organizations
    have also already adopted “feature store” to be part of their ML applications.
    However, it is worthwhile to point out that “feature store” is another component
    added to your overall ML infrastructure, which requires extra investment and effort
    to both build and operate. Therefore it is necessary to truly understand and discuss
    ***“is Feature Store really necessary for every organization?”***. In my opinion,
    the answer is, as usual, it depends.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: “特征存储”已经存在了几年。既有开源解决方案（如 [Feast](https://feast.dev/) 和 [Hopsworks](https://www.hopsworks.ai/open-source-hopsworks)），也有商业产品（如
    [Tecton](https://www.tecton.ai/)、[Hopsworks](https://www.hopsworks.ai/open-source-hopsworks)、[Databricks
    Feature Store](https://docs.databricks.com/machine-learning/feature-store/index.html)）。已经有很多关于“特征存储”的文章和博客发布，解释了什么是“特征存储”，以及为什么“特征存储”是有价值的。一些组织也已经将“特征存储”纳入了他们的机器学习应用程序。然而，值得指出的是，“特征存储”是你整体机器学习基础设施中新增的一个组件，它需要额外的投资和努力来建设和运维。因此，有必要真正理解和讨论***“特征存储对每个组织来说真的必要吗？”***。在我看来，答案一如既往，这要视情况而定。
- en: Therefore the focus of today’s article is to analyze when a Feature Store is
    needed, so that organizations can wisely invest effort and resources in ML technologies
    that can actually add value to their business.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，今天文章的重点是分析何时需要特征存储，以便组织能够明智地投资于那些能够真正为业务增加价值的机器学习技术。
- en: 'To answer this question, below are some critical considerations:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 为了回答这个问题，以下是一些关键的考虑因素：
- en: What kind of features do your ML applications need?
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你们的机器学习应用程序需要什么样的特征？
- en: What type of ML applications do your organizations manage?
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你们组织管理的机器学习应用程序类型是什么？
- en: Is there a need to share and reuse features among various teams in your organization?
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否需要在组织中的不同团队之间共享和重用特征？
- en: Is training-serving skew often an issue that negatively impacts ML model performance?
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 训练与服务之间的偏差是否经常成为负面影响机器学习模型性能的问题？
- en: Other than answering the above questions, I will also explain the role of the
    Feature Store in an end-to-end ML lifecycle, if you believe Feature Store is necessary
    for your organization ML infrastructure.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 除了回答上述问题，我还将解释特征存储在端到端机器学习生命周期中的角色，如果你认为特征存储对你们组织的机器学习基础设施是必要的。
- en: Let’s deep dive into each of the above considerations in detail.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们详细探讨上述每一个考虑因素。
- en: '![](../Images/d0086ade7467bff48ccba7eab4219181.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d0086ade7467bff48ccba7eab4219181.png)'
- en: Photo by [Trnava University](https://unsplash.com/@trnavskauni?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由[特尔纳瓦大学](https://unsplash.com/@trnavskauni?utm_source=medium&utm_medium=referral)提供，发表于[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: What kind of features do your ML applications need?
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你的机器学习应用需要哪些功能？
- en: 'Features for ML applications can be roughly divided into the following categories:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习应用的特征大致可以分为以下几类：
- en: Batch features — Features that remain the same for most of time, such as a customer’s
    metadata, including education, gender, age, and so on. Additionally, batch features
    are generally about the metadata of an entity, which is normally a key business
    entity, such as customer, product, supplier and so on. The input data sources
    for batch features are often data warehouses and data lakes.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 批处理特征 — 这些特征在大多数时间内保持不变，例如客户的元数据，包括教育背景、性别、年龄等。此外，批处理特征通常涉及实体的元数据，这些实体通常是关键的业务实体，如客户、产品、供应商等。批处理特征的输入数据源通常是数据仓库和数据湖。
- en: Streaming features — Different from batch features, streaming features are features
    that need to be updated constantly in a low latency situation. For example, the
    number of transactions of a user, in the last 30 minutes. Streaming features are
    generally computed by streaming engines such as Spark Structured Streaming or
    Apache Flink, and pushed directly into an online feature for low-latency serving.
    The input data sources for streaming features are message stores, such as Kafka,
    Kinesis and Event hub.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 流处理特征 — 与批处理特征不同，流处理特征是需要在低延迟情况下不断更新的特征。例如，用户在过去30分钟内的交易数量。流处理特征通常由流处理引擎计算，如Spark
    Structured Streaming或Apache Flink，并直接推送到在线特征存储中以实现低延迟服务。流处理特征的输入数据源是消息存储，如Kafka、Kinesis和Event
    hub。
- en: Advanced features of combing batch and streaming — Features that require joining
    the streaming data with the static data to generate a new feature for ML models
    to learn. This type of feature is also computed by streaming engines, as it also
    requires low latency. The only difference from the streaming feature is that it
    needs to join with another data source.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结合批处理和流处理的高级特征 — 需要将流数据与静态数据结合，以生成供机器学习模型学习的新特征。这类特征也由流处理引擎计算，因为它也需要低延迟。与流处理特征的唯一区别是它需要与另一个数据源进行连接。
- en: If your ML applications require lots of streaming features, which need to be
    served in a very low latency, an online feature store could add significant value
    as one of the key functions of Feature Store is to allow you to pre-compute these
    streaming features, instead of computing the features at the model serving moment,
    which can slow down the model serving significantly.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的机器学习应用需要大量的流处理特征，并且这些特征需要在非常低的延迟下提供服务，那么在线特征存储可以带来显著的价值，因为特征存储的关键功能之一是允许你预计算这些流处理特征，而不是在模型服务时计算，这可能会显著降低模型服务的速度。
- en: What type of ML applications do your organizations manage?
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你的组织管理的机器学习应用类型是什么？
- en: The second consideration is to be clear on the type of ML applications that
    your organization manages? Each type of ML application requires quite a different
    ML infrastructure.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个考虑因素是明确你的组织管理的机器学习应用类型。每种类型的机器学习应用需要的机器学习基础设施差异较大。
- en: 'I categorize the ML applications into the following 3 categories:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我将机器学习应用分为以下三类：
- en: 'The first category is batch feature engineering + batch inference : Feature
    engineering, model training and model serving are all conducted at a fixed interval.
    There is no need for streaming features and the model serving latency is not very
    low either. In this case, you do not need an online feature store and a streaming
    to pre-compute the features, as you have enough time to compute the features on
    demand.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一类是批处理特征工程 + 批处理推断：特征工程、模型训练和模型服务都在固定的时间间隔内进行。无需流处理特征，模型服务的延迟也不需要非常低。在这种情况下，你不需要在线特征存储和流处理来预计算特征，因为你有足够的时间按需计算特征。
- en: 'The second category is batch training + online inference (with both batch and
    streaming features): ML models are trained at the batch level, but the model is
    generally wrapped as an API to be served online. In this case, in order to decide
    if a feature store is required or not, there are 2 important considerations. The
    first is serving latency, and the second is the number of features that need to
    be computed on the fly. If the serving latency is very low and there are quite
    a few features that need to be computed in a very stringent time limit, it is
    very likely that you need the support of a feature store to pre-compute these
    features so that when serving the ML model, you can fetch the required features
    from the online feature store, instead of computing them on the fly. The online
    store is a database that stores only the latest feature values for each entity,
    such as Redis, DynamoDB and PostgreSQL. On the opposite side, if the latency of
    model serving is not very low and the number of features required for model serving
    is small, you probably still have the luxury to compute the features on the fly,
    and therefore an online feature store is not absolutely needed.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二类是批量训练 + 在线推断（具有批量和流式特性）：机器学习模型在批量级别进行训练，但模型通常被包装成API进行在线服务。在这种情况下，为了决定是否需要特征存储，有两个重要的考虑因素。第一个是服务延迟，第二个是需要实时计算的特征数量。如果服务延迟非常低，并且有相当多的特征需要在非常严格的时间限制内计算，那么你很可能需要特征存储的支持来预计算这些特征，以便在服务机器学习模型时，可以从在线特征存储中获取所需特征，而不是实时计算它们。在线存储是一个数据库，仅存储每个实体的最新特征值，例如
    Redis、DynamoDB 和 PostgreSQL。相反，如果模型服务的延迟不低，且模型服务所需的特征数量较少，你可能仍然可以实时计算特征，因此在线特征存储不是绝对必要的。
- en: Based on my experience, ML applications that require streaming features and
    extremely low latency serving are generally operational ML applications, such
    as fraud detection, recommendation, dynamic pricing, and search. For these types
    of ML applications, the function of feature store is to decouple feature calculation
    from feature consumption so that the complex feature engineering logic does not
    need to be calculated on demand.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我的经验，需要流式特征和极低延迟服务的机器学习应用通常是操作性机器学习应用，如欺诈检测、推荐、动态定价和搜索。对于这些类型的机器学习应用，特征存储的功能是将特征计算与特征消费解耦，以便复杂的特征工程逻辑不需要按需计算。
- en: Is there a need to share and reuse features among various teams in your organization?
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 是否需要在组织内的各种团队之间共享和重用特征？
- en: The third consideration is that is there possibly a need to share and reuse
    features among various teams in your organization.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个考虑因素是是否需要在组织内的各种团队之间共享和重用特征。
- en: One of the key functions of feature store is a centralized feature registry
    where users can persist feature definition and relevant metadata about the features.
    Users can discover registered feature data by interacting with the registry. The
    registry acts as a single source of truth of information about all ML features
    in an organization.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 特征存储的关键功能之一是集中式特征注册表，用户可以在其中持久化特征定义和相关的特征元数据。用户可以通过与注册表互动来发现注册的特征数据。注册表作为组织内所有机器学习特征的信息的唯一真实来源。
- en: For organizations where there are multiple data science teams, particularly
    when it is very likely these teams spend duplicated effort producing similar features,
    having a centralized feature store that allows teams to publish, share and reuse
    ML features can significantly improve team collaboration and the productivity
    of data science teams. Generally building and maintaining the data engineering
    pipelines to curate features required for ML applications takes a significant
    amount of engineering effort. If one team can reuse features already curated by
    another team, it can significantly reduce the duplicated engineering effort and
    save lots of engineering time.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 对于拥有多个数据科学团队的组织，特别是当这些团队可能会重复生产类似特征时，拥有一个集中式特征存储可以显著改善团队合作和数据科学团队的生产力，使团队能够发布、共享和重用机器学习特征。通常，建立和维护数据工程管道以策划机器学习应用所需的特征需要大量工程工作。如果一个团队可以重用另一个团队已经策划的特征，则可以显著减少重复的工程工作并节省大量工程时间。
- en: Additionally having a feature store provides a mechanism to allow enterprises
    to govern the use of ML features, which actually are some of the most highly curated
    and refined data assets in a business.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，拥有特征存储提供了一种机制，允许企业管理机器学习特征的使用，这实际上是业务中一些最精心策划和精炼的数据资产。
- en: Is training-serving skew often an issue that negatively impacts ML model performance?
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 训练-服务偏差是否常常是一个负面影响机器学习模型性能的问题？
- en: The next consideration is training-serving skew, often an issue that negatively
    impacts the ML model performance. The training-serving skew is a situation where
    the deployed ML model in a production environment performs worse than the one
    data scientists developed and tested in their local notebook environment. The
    key reason for training-serving skew is that the feature engineering logic in
    the production environment is implemented differently (and maybe only slightly
    different) from the original feature engineering logic created and used by data
    scientists in their notebook environment.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步的考虑是训练-服务偏差，这通常是一个负面影响机器学习模型性能的问题。训练-服务偏差是指在生产环境中部署的机器学习模型的表现比数据科学家在其本地笔记本环境中开发和测试的模型更差。训练-服务偏差的主要原因是生产环境中的特征工程逻辑与数据科学家在笔记本环境中创建和使用的原始特征工程逻辑实现方式不同（可能只是略有不同）。
- en: Feature store can fix the training-serving skew by creating a consistent feature
    interface where both model training and model serving use the same feature engineering
    implementation as shown in the below chart.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 特征存储可以通过创建一个一致的特征接口来修复训练-服务偏差，其中模型训练和模型服务使用相同的特征工程实现，如下图所示。
- en: If training-serving skew is a common reason why your ML applications perform
    worse than expected in a production environment, feature store can be a rescue.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果训练-服务偏差是你的机器学习应用在生产环境中表现不如预期的常见原因，特征存储可以成为救星。
- en: '![](../Images/848d17f473c6be2f43ef7db8409ddd2f.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/848d17f473c6be2f43ef7db8409ddd2f.png)'
- en: Training-Serving Skew | Image by Author
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 训练-服务偏差 | 图片来源：作者
- en: So, where does feature store stand in an end-to-end ML Lifecycle
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 那么，特征存储在端到端机器学习生命周期中处于什么位置
- en: Based on the above analysis, if you have decided that feature store is useful
    to your ML applications and you are going to include it as a new component of
    your ML infrastructure, below is an explanation on how to use feature store in
    an end-to-end ML lifecycle.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 基于以上分析，如果你已经决定特征存储对你的机器学习应用有帮助，并且你打算将其作为机器学习基础设施的新组件，以下是如何在端到端机器学习生命周期中使用特征存储的说明。
- en: Feature definition — data scientists can define required features from the raw
    data. The feature definitions include source data, feature entities, feature name,
    feature schema, feature metadata and time-to-live (TTL).
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 特征定义 — 数据科学家可以从原始数据中定义所需的特征。特征定义包括源数据、特征实体、特征名称、特征模式、特征元数据和生存时间（TTL）。
- en: Feature retrieval for ML model training — Most feature store solutions provide
    functions that allow data scientists to construct a training dataset from defined
    features. A single training dataset possibly needs to draw features from multiple
    feature tables.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器学习模型训练的特征检索 — 大多数特征存储解决方案提供的功能允许数据科学家从定义的特征构建训练数据集。单个训练数据集可能需要从多个特征表中提取特征。
- en: Feature retrieval for ML model serving — There are two types of ML model serving.
    One is batch scoring and the other is real-time predictions. Getting features
    for batch scoring is similar to getting features for an ML model training dataset,
    the only difference being that features for batch scoring are within a most recent
    time-stamp. Fetching features for real-time predictions is getting a feature vector
    for a particular prediction request. The feature vector is generally very small
    data, as it only contains the most recent feature value of a requested entity.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器学习模型服务的特征检索 — 机器学习模型服务有两种类型：批处理评分和实时预测。获取批处理评分的特征与获取机器学习模型训练数据集的特征类似，不同之处在于批处理评分的特征具有最新的时间戳。获取实时预测的特征是为特定预测请求获取特征向量。特征向量通常是非常小的数据，因为它仅包含请求实体的最新特征值。
- en: '![](../Images/e62bb8c4037cdd0e21b85ee51292b317.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e62bb8c4037cdd0e21b85ee51292b317.png)'
- en: Using a feature store in the ML lifecycle | Image by Author
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在机器学习生命周期中使用特征存储 | 图片来源：作者
- en: Summary
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: If you are rolling out real-time prediction use-cases that require lots of streaming
    features, Feature Store can help you achieve the low latency serving requirements
    by decoupling feature computation and feature serving.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在推出需要大量流式特性的实时预测用例，特性存储可以通过解耦特性计算和特性服务来帮助你实现低延迟服务要求。
- en: If your organization’s data science teams have expanded quickly and there is
    a need to share and reuse work among various ML teams, feature store serves as
    a central registry for publishing and reusing features.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你们组织的数据科学团队迅速扩展，并且需要在各种机器学习团队之间共享和重用工作，特性存储可以作为一个中心注册库，用于发布和重用特性。
- en: I hope this article can serve as guidance for you to decide if feature store
    is really needed for your organization. Please feel free to leave a comment if
    you have any questions. I generally publish 1 article related to building efficient
    data and AI stack every week. Feel free to follow me on Medium so that you can
    get notified when these articles are published.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望这篇文章能够帮助你决定是否需要为你的组织设置特性存储。如果你有任何问题，请随时留言。我通常每周发布一篇与构建高效数据和人工智能堆栈相关的文章。欢迎关注我的
    Medium，以便在这些文章发布时获得通知。
- en: If you want to see more guides, deep dives, and insights around modern and efficient
    data+AI stack, please subscribe to my **free** newsletter — [***Efficient Data+AI
    Stack***](https://yunnawei.substack.com/), thanks!
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想查看更多有关现代和高效数据+人工智能堆栈的指南、深度探讨和见解，请订阅我的**免费**通讯 — [***高效数据+人工智能堆栈***](https://yunnawei.substack.com/)，谢谢！
- en: 'Note: Just in case you haven’t become a Medium member yet, and you really should,
    as you’ll get unlimited access to Medium, you can sign up using my [referral link](https://medium.com/@weiyunna91/membership)!'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 注：以防你还没有成为 Medium 会员，而你真的应该成为，因为你将获得对 Medium 的无限访问权限，你可以使用我的[推荐链接](https://medium.com/@weiyunna91/membership)进行注册！
- en: Thanks so much for your support!
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 非常感谢你的支持！
