- en: 'The Underrated Gems Pt.1: 8 Pandas Methods That Will Make You a Pro'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 《被低估的珍宝 第1部分：8 个让你成为高手的 Pandas 方法》
- en: 原文：[https://towardsdatascience.com/the-underrated-gems-pt-1-8-pandas-methods-that-will-make-you-a-pro-b1437a19ca3c?source=collection_archive---------0-----------------------#2023-07-17](https://towardsdatascience.com/the-underrated-gems-pt-1-8-pandas-methods-that-will-make-you-a-pro-b1437a19ca3c?source=collection_archive---------0-----------------------#2023-07-17)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/the-underrated-gems-pt-1-8-pandas-methods-that-will-make-you-a-pro-b1437a19ca3c?source=collection_archive---------0-----------------------#2023-07-17](https://towardsdatascience.com/the-underrated-gems-pt-1-8-pandas-methods-that-will-make-you-a-pro-b1437a19ca3c?source=collection_archive---------0-----------------------#2023-07-17)
- en: Underrated, underappreciated, and underexplored
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 被低估的、未被重视的和未被深入探索的
- en: '[](https://medium.com/@andreas030503?source=post_page-----b1437a19ca3c--------------------------------)[![Andreas
    Lukita](../Images/8660ca1fea5da34ce3475281c1f52152.png)](https://medium.com/@andreas030503?source=post_page-----b1437a19ca3c--------------------------------)[](https://towardsdatascience.com/?source=post_page-----b1437a19ca3c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----b1437a19ca3c--------------------------------)
    [Andreas Lukita](https://medium.com/@andreas030503?source=post_page-----b1437a19ca3c--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@andreas030503?source=post_page-----b1437a19ca3c--------------------------------)[![Andreas
    Lukita](../Images/8660ca1fea5da34ce3475281c1f52152.png)](https://medium.com/@andreas030503?source=post_page-----b1437a19ca3c--------------------------------)[](https://towardsdatascience.com/?source=post_page-----b1437a19ca3c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----b1437a19ca3c--------------------------------)
    [Andreas Lukita](https://medium.com/@andreas030503?source=post_page-----b1437a19ca3c--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F955ef38ea7b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-underrated-gems-pt-1-8-pandas-methods-that-will-make-you-a-pro-b1437a19ca3c&user=Andreas+Lukita&userId=955ef38ea7b&source=post_page-955ef38ea7b----b1437a19ca3c---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----b1437a19ca3c--------------------------------)
    ·10 min read·Jul 17, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb1437a19ca3c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-underrated-gems-pt-1-8-pandas-methods-that-will-make-you-a-pro-b1437a19ca3c&user=Andreas+Lukita&userId=955ef38ea7b&source=-----b1437a19ca3c---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F955ef38ea7b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-underrated-gems-pt-1-8-pandas-methods-that-will-make-you-a-pro-b1437a19ca3c&user=Andreas+Lukita&userId=955ef38ea7b&source=post_page-955ef38ea7b----b1437a19ca3c---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----b1437a19ca3c--------------------------------)
    ·10分钟阅读·2023年7月17日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb1437a19ca3c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-underrated-gems-pt-1-8-pandas-methods-that-will-make-you-a-pro-b1437a19ca3c&user=Andreas+Lukita&userId=955ef38ea7b&source=-----b1437a19ca3c---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb1437a19ca3c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-underrated-gems-pt-1-8-pandas-methods-that-will-make-you-a-pro-b1437a19ca3c&source=-----b1437a19ca3c---------------------bookmark_footer-----------)![](../Images/dfa5d2a3776475bd5e3957104b82b7ae.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb1437a19ca3c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-underrated-gems-pt-1-8-pandas-methods-that-will-make-you-a-pro-b1437a19ca3c&source=-----b1437a19ca3c---------------------bookmark_footer-----------)![](../Images/dfa5d2a3776475bd5e3957104b82b7ae.png)'
- en: Photo by [Roman Kraft](https://unsplash.com/@iamromankraft?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Roman Kraft](https://unsplash.com/@iamromankraft?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: “Amidst the noise of the crowd, it’s the softly spoken words that hold the hidden
    wisdom 💎”
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “在喧嚣的环境中，正是那些低声细语的话语才蕴藏着隐藏的智慧 💎”
- en: Forget ChatGPT for a while. For some of us, we get tired by constantly googling
    for solution every time we want to perform a simple Pandas operation. There seems
    to be numerous ways of doing the same thing, which is which? Having lots of possible
    solution to choose from is of course great, but with it also comes inconsistency
    and confusion in understanding what the line of code is supposed to do.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 暂时忘记ChatGPT。对我们中的一些人来说，我们会因为每次想执行简单的Pandas操作时都要不断地谷歌搜索解决方案而感到疲惫。似乎有无数种方法来做同一件事，那么究竟哪一种才是最佳选择？虽然有很多可能的解决方案确实很好，但也带来了不一致和对代码功能的困惑。
- en: There’s 1000 possible routes to reach Rome, maybe even more. The question is,
    do you travel the hidden shortcut or do you take the complicated route?
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 到达罗马有1000条可能的路线，可能甚至更多。问题是，你选择隐藏的小路还是复杂的路线？
- en: '![](../Images/fae6c5a44fa88fad591aaa9d53e554e8.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fae6c5a44fa88fad591aaa9d53e554e8.png)'
- en: Image by Author
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Here is the takeaway of this post. I’ll walk you through how to put these methods
    to practical use by working through the [bike sharing dataset from UCI Machine
    Learning](https://doi.org/10.24432/C5W894)[¹](#aba8). By adopting these methods,
    you’ll not only streamline your data manipulation code, but also gain a deeper
    understanding of the code you write. Let’s get started by importing the dataset
    and can a quick view on the DataFrame!
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是本文的要点。我将带你了解如何通过处理来自[UCI机器学习的自行车共享数据集](https://doi.org/10.24432/C5W894)[¹](#aba8)来将这些方法付诸实践。通过采用这些方法，你不仅可以简化数据处理代码，还能更深入地理解你编写的代码。让我们开始导入数据集，并快速查看DataFrame！
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](../Images/eb8d9b78b58f0bee83d63227051d66d8.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/eb8d9b78b58f0bee83d63227051d66d8.png)'
- en: Image by Author
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: '**Table of Contents**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**目录**'
- en: '[Method #1:](#b318) `[**.assign()**](#b318)`'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[方法 #1:](#b318) `[**.assign()**](#b318)`'
- en: '[Method #2:](#987c) `[**.groupby()**](#987c)`'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[方法 #2:](#987c) `[**.groupby()**](#987c)`'
- en: '[Method #3:](#e599) `[**.agg()**](#e599)`'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[方法 #3:](#e599) `[**.agg()**](#e599)`'
- en: '[Method #4:](#399c) `[**.transform()**](#399c)`'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[方法 #4:](#399c) `[**.transform()**](#399c)`'
- en: '[Method #5:](#5c03) `[**.pivot_table()**](#5c03)`'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[方法 #5:](#5c03) `[**.pivot_table()**](#5c03)`'
- en: '[Method #6:](#0c9c) `[**.resample()**](#0c9c)`'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[方法 #6:](#0c9c) `[**.resample()**](#0c9c)`'
- en: '[Method #7:](#8974) `[**.unstack()**](#8974)`'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[方法 #7:](#8974) `[**.unstack()**](#8974)`'
- en: '[Method #8:](#6079) `[**.pipe()**](#6079)`'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[方法 #8:](#6079) `[**.pipe()**](#6079)`'
- en: '☕️ Method #1: .assign()'
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '☕️ 方法 #1: .assign()'
- en: Forget about using operations such as `**df["new_col"] =**` and `**df.new_col
    =**` to create new columns. Here is why you should be using the `**.assign()**`
    method — it returns you a DataFrame object, which allows you to continue your
    chaining operation to further manipulate your DataFrame. Unlike the `**.assign()**`
    method, the two infamous operation above return you a `None` which means you cannot
    possibly chain your operation further.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 忘掉使用`**df["new_col"] =**`和`**df.new_col =**`这种操作来创建新列。这里是你应该使用`**.assign()**`方法的原因——它返回一个DataFrame对象，允许你继续链式操作以进一步处理DataFrame。与`**.assign()**`方法不同，上述两种臭名昭著的操作会返回`None`，这意味着你无法进一步链式操作。
- en: If you are not convinced, then let me bring back the old nemesis — `**SettingWithCopyWarning**`.
    Pretty sure each of us has bumped into this one at some point in time.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不信，那么让我重新提起旧的敌人——`**SettingWithCopyWarning**`。相信我们每个人在某个时刻都遇到过这个问题。
- en: '![](../Images/f972812fa73304ae581315e1660cd13a.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f972812fa73304ae581315e1660cd13a.png)'
- en: Image by Author
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Enough of the warning, I want to unsee ugly red boxes in my notebook!
  id: totrans-32
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 警告够了，我不想在我的笔记本中再看到丑陋的红色框框！
- en: Using `**.assign()**`, let us add a few new columns such as `**ratio_casual_registered**`,
    `**avg_temp**`, and `**ratio_squared**`
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`**.assign()**`，让我们添加一些新列，如`**ratio_casual_registered**`、`**avg_temp**`和`**ratio_squared**`
- en: '[PRE1]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'In short, here’s what the method above does:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，上述方法的作用如下：
- en: We can create as many new columns as we want using the `**.assign()**` method,
    separated by the delimiter comma.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以使用`**.assign()**`方法创建任意数量的新列，用逗号分隔。
- en: The lambda function when creating the column `**ratio_squared**` serves to get
    access to the most recent DataFrame after we added the column `**ratio_casual_registered**`.
    Say, we do not use a lambda function to get access to the most recent DataFrame
    `**df_**`, but instead continue with `**bike.ratio_casual_registered.pow(2)**`,
    we would get an error as the original DataFrame does not have the column `**ratio_casual_registered**`,
    even after adding it in the `**.assign()**` method before creating `**ratio_squared**`.
    If you can’t wrap your head around this concept to decide whether or not to use
    lambda function, my suggestion is just use one!
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在创建列`**ratio_squared**`时使用的 lambda 函数是为了访问我们在添加列`**ratio_casual_registered**`后最接近的
    DataFrame。假设我们不使用 lambda 函数来访问最新的 DataFrame `**df_**`，而是继续使用`**bike.ratio_casual_registered.pow(2)**`，我们将会得到一个错误，因为原始
    DataFrame 在创建`**ratio_squared**`之前，即使在`**.assign()**`方法中添加了该列，也没有`**ratio_casual_registered**`列。如果你对这个概念无法理解以决定是否使用
    lambda 函数，我的建议是使用它！
- en: Bonus! I leave some not-so-common way to perform arithmetic operations using
    methods.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 额外的！我留下了一些不那么常见的使用方法进行算术运算。
- en: '☕️ Method #2: .groupby()'
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '☕️ 方法 #2: .groupby()'
- en: Well, the `**.groupby()**` method is not uncommonly used, but they are necessary
    to get us started before we delve deeper into the next methods. One thing that
    often goes unnoticed and left unspoken of is that the the `**.groupby()**` method
    has a lazy nature. By that, it means that the method is lazily evaluated. In other
    words, it does not evaluate right away, that is why you often see `**<pandas.core.groupby.generic.DataFrameGroupBy
    object at 0x14fdc3610>**` right after calling the method `**.groupby()**`
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，`**.groupby()**`方法虽然不罕见，但在我们深入探讨下一个方法之前，它们是必要的。一个常被忽视且未被提及的事情是，`**.groupby()**`方法具有懒惰特性。也就是说，该方法是延迟评估的。换句话说，它不会立即评估，这就是为什么你在调用`**.groupby()**`方法后常常会看到`**<pandas.core.groupby.generic.DataFrameGroupBy
    object at 0x14fdc3610>**`。
- en: From Pandas DataFrame [documentation](https://pandas.pydata.org/docs/reference/frame.html)[²](#f249),
    the value to feed in the parameter `**by**` could be a ***mapping, function, label,
    pd.Grouper or list of such.*** Nonetheless, the most common one you probably encounter
    is to group by columns names (list of Series name separated by comma). After the
    `**.groupby()**` operation, we could perform operation such as `**.mean()**`,
    `**.median()**`, or applying custom function using `**.apply()**`.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Pandas DataFrame [文档](https://pandas.pydata.org/docs/reference/frame.html)[²](#f249)
    中，传递给参数`**by**`的值可以是***映射、函数、标签、pd.Grouper 或此类的列表。*** 然而，你最常遇到的情况可能是按列名分组（用逗号分隔的
    Series 名称列表）。在`**.groupby()**`操作之后，我们可以执行诸如`**.mean()**`、`**.median()**`，或使用`**.apply()**`应用自定义函数等操作。
- en: The value of the specified columns that we feed into the `**by**` parameters
    in the `**.groupby()**` method would become the index of the result. If we specify
    grouping more than 1 column, then we will obtain a MultiIndex.
  id: totrans-42
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我们传递给`**.groupby()**`方法的`**by**`参数中的指定列的值将成为结果的索引。如果我们指定了多个列进行分组，那么我们将获得一个 MultiIndex。
- en: '[PRE2]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Here, we grouped our DataFrame by the column `**season**`, and `**weathersit**`.
    Then, we calculate the mean value and subset only the column `**atemp**`.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们按照列`**season**`和`**weathersit**`对 DataFrame 进行了分组。然后，我们计算了均值，并仅选择了列`**atemp**`。
- en: '![](../Images/b9321d008606497cf39b9bdcda719e00.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b9321d008606497cf39b9bdcda719e00.png)'
- en: Image by Author
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源于作者
- en: '☕️ Method #3: .agg()'
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '☕️ 方法 #3: .agg()'
- en: If you are meticulous enough to dig the Pandas [documentation](https://pandas.pydata.org/docs/reference/frame.html)[²](#f249),
    you might encounter both methods `**.agg()**` and `**.aggregate()**`. You might
    be wondering what is the difference and when to use which? Save your time! They
    are the same, `**.agg()**` is merely an alias for `**.aggregate()**`.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你足够细心去深入研究 Pandas [文档](https://pandas.pydata.org/docs/reference/frame.html)[²](#f249)，你可能会遇到`**.agg()**`和`**.aggregate()**`这两种方法。你可能会想知道它们有什么区别，以及什么时候使用哪个？节省你的时间吧！它们是相同的，`**.agg()**`只是`**.aggregate()**`的别名。
- en: '`**.agg()**` has a parameter `**func**`, which literally takes in a function,
    string function name, or list of functions. By the way, you can aggregate different
    functions over the columns as well! Let’s continue our example above!'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`**.agg()**`有一个参数`**func**`，它可以接受函数、字符串函数名或函数列表。顺便提一下，你也可以在列上聚合不同的函数！让我们继续上面的例子！'
- en: '[PRE3]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/3a7641b468ffb53f978a9bd105544194.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3a7641b468ffb53f978a9bd105544194.png)'
- en: Image by Author
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源于作者
- en: '☕️ Method #4: .transform()'
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '☕️ 方法 #4: .transform()'
- en: With `**.agg()**`, the result we obtain is of reduced dimensionality as compared
    to the initial dataset. In simple terms, your data dimension shrinks with lesser
    number of rows and columns, containing the aggregate information. If what you
    want is to summarize the grouped data and obtain aggregated values, then `**.groupby()**`
    is the solution.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `**.agg()**`，我们得到的结果在维度上相较于初始数据集是缩减的。简单来说，你的数据维度会减少，包含更少的行和列，包含汇总信息。如果你想对分组数据进行总结并获得聚合值，那么
    `**.groupby()**` 是解决方案。
- en: With `**.transform()**`, we also start with the intention of doing aggregation
    of information. However, instead of creating a summary of information, we want
    the output to have the same shape as the original DataFrame, without shrinking
    the size of the original DataFrame.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `**.transform()**`，我们也开始时意图进行信息的汇总。然而，与创建信息汇总不同的是，我们希望输出的形状与原始 DataFrame
    相同，而不缩小原始 DataFrame 的大小。
- en: Those of you who have exposure to database systems like SQL may find the idea
    behind `**.transform()**` similar to that of Window Function. Let’s see how `**.transform()**`
    works on the above example!
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些接触过类似 SQL 的数据库系统的人来说，`**.transform()**` 的概念可能与窗口函数类似。让我们看看 `**.transform()**`
    在上面的示例中是如何工作的！
- en: '[PRE4]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/57cfdf8e60580a2e42ea2ac46196f4d4.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/57cfdf8e60580a2e42ea2ac46196f4d4.png)'
- en: Image by Author
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: As seen above, we created a new column with column name—`**mean_atemp_season**`
    where we fill in the column with the aggregate (mean) of the `**atemp**` column.
    Thus, whenever `**season**` is 1, then we have the same value for `**mean_atemp_season**`.
    Notice the important observation here is that we retain the original dimension
    of the dataset plus one additional column!
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所见，我们创建了一个名为 `**mean_atemp_season**` 的新列，并将该列填充为 `**atemp**` 列的汇总（均值）。因此，每当
    `**season**` 为 1 时，`**mean_atemp_season**` 的值就相同。请注意这里的重要观察点是我们保留了原始数据集的维度，并增加了一列！
- en: '☕️ Method #5: .pivot_table()'
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '☕️ 方法 #5: .pivot_table()'
- en: Here’s a bonus for those obsessed with Microsoft Excel. You might be tempted
    to use `**.pivot_table()**` to create summary table. Well of course, this method
    works too! But here’s a two cent, `**.groupby()**` is more versatile and used
    for a broader range of operations beyond just reshaping, such as filtering, transformation,
    or applying group-specific calculations.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这是给那些对 Microsoft Excel 迷恋的人的额外提示。你可能会被诱惑使用 `**.pivot_table()**` 来创建汇总表。这个方法当然也有效！但这里有一点建议，`**.groupby()**`
    更加灵活，适用于更广泛的操作，不仅限于重新排列，还包括过滤、转换或应用组特定的计算。
- en: Here’s how to use `**.pivot_table()**` in short. You specify the column(s) you
    want to aggregate in the argument `**values**`. Next, specify the **index** of
    the summary table you want to create using a subset of the original DataFrame.
    This can be more than one column and the summary table will be DataFrame of MultiIndex.
    Next, specify the **columns** of the summary table you want to create using a
    subset of the original DataFrame that has not been selected as the index. Last
    but not least, don’t forget to specify the `**aggfunc**`! Let’s take a quick look!
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 简要说明一下如何使用 `**.pivot_table()**`。你在 `**values**` 参数中指定你要汇总的列。接下来，使用原始 DataFrame
    的子集指定你想要创建的汇总表的 **index**。这可以是多列，汇总表将是 MultiIndex 的 DataFrame。接下来，使用未选择为索引的原始
    DataFrame 的子集来指定你想要创建的汇总表的 **columns**。最后但同样重要的是，不要忘记指定 `**aggfunc**`！我们来快速看一下！
- en: '[PRE5]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/b2cc556fc524085340ac327e66b94545.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b2cc556fc524085340ac327e66b94545.png)'
- en: Image by Author
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: '☕️ Method #6: .resample()'
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '☕️ 方法 #6: .resample()'
- en: Roughly speaking, the method `**.resample()**` can be viewed as grouping and
    aggregation specifically for time-series data, where
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 粗略地说，`**.resample()**` 方法可以被视为专门用于时间序列数据的分组和汇总，其中
- en: The index of the DataFrame or Series is a datetime-like object.
  id: totrans-69
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: DataFrame 或 Series 的索引是类似日期时间的对象。
- en: This allows you to group and aggregate data based on different time frequencies,
    such as hourly, daily, weekly, monthly, etc. More generally, `**.resample()**`
    can take in **DateOffset, Timedelta or str**as the rule to perform resampling.
    Let’s apply this to our previous example.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这使你可以根据不同的时间频率对数据进行分组和汇总，例如每小时、每天、每周、每月等。更一般地说，`**.resample()**` 可以接受 **DateOffset、Timedelta
    或 str** 作为规则来执行重采样。让我们将其应用于之前的示例。
- en: '[PRE6]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: In short, what we do above is drop the column `**instant**`, overwrite the `**dteday**`
    column with the `**dteday**` column being converted from `object` type to `**datetime64[ns]**`
    type, and finally setting this `**datetime64[ns]**` column as the index of the
    DataFrame.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，我们在上面所做的操作是删除`**instant**`列，用`**dteday**`列覆盖`**dteday**`列，将`**dteday**`列的类型从`object`转换为`**datetime64[ns]**`类型，最后将这个`**datetime64[ns]**`列设为DataFrame的索引。
- en: '![](../Images/5a33370ebfd03d27d90be81dedbadff8.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5a33370ebfd03d27d90be81dedbadff8.png)'
- en: Image by Author
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: '[PRE7]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../Images/1a857d820fb1f9834a0da75717f63f95.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1a857d820fb1f9834a0da75717f63f95.png)'
- en: Image by Author
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Here, we obtain a descriptive statistics summary (mean) of the feature `**temp**`
    with monthy frequency. Try and play with the `**.resample()**` method using differency
    frequency such as `**Q**`, `**2M**`, `**A**` and so on,
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们获得了特征`**temp**`的描述性统计汇总（均值），以月频率呈现。尝试使用不同的频率，如`**Q**`、`**2M**`、`**A**`等，来玩转`**.resample()**`方法。
- en: '☕️ Method #7: .unstack()'
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '☕️ 方法 #7: .unstack()'
- en: We are nearing the end! Let me show you why `**.unstack()**` is both powerful
    and useful. But before that, let’s get back to one of the example above where
    we want to find the mean temperature across different season and weather situation
    by using `**.groupby()**` and `**.agg()**`
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们快要结束了！让我给你展示一下`**.unstack()**`为何既强大又有用。在此之前，让我们回到上述一个例子，我们想通过使用`**.groupby()**`和`**.agg()**`来找到不同季节和天气情况的平均温度。
- en: '[PRE8]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](../Images/6be4039549c302e00b1da416acef33cb.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6be4039549c302e00b1da416acef33cb.png)'
- en: Image by Author
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Now, let’s visualise this using a line chart produced minimally by chaining
    the methods `**.plot**` and `**.line()**` to the code above. Behind the scene,
    Pandas leverages on Matplotlib plotting backend to do the plotting task. This
    gives the following result, which none of us wanted since the x-axis of the plot
    is grouped by the MultiIndex, making it more difficult to interpret and less meaningful.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用一个线图来可视化这一点，通过将`**.plot**`和`**.line()**`方法最小化地链接到上述代码中。在后台，Pandas利用Matplotlib绘图后端来完成绘图任务。这给出了以下结果，我们都不想要，因为图的x轴是按MultiIndex分组的，使其更难以解释，且意义不大。
- en: '![](../Images/3654c1d2def7e557a794dec007f3016b.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3654c1d2def7e557a794dec007f3016b.png)'
- en: Image by Author
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Compared the plot above and below after we introduce the `**.unstack()**` method.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 比较引入`**.unstack()**`方法后的图与上图。
- en: '[PRE9]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](../Images/de2067fddba9d0e6526b58bb11ac7515.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/de2067fddba9d0e6526b58bb11ac7515.png)'
- en: Image by Author
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: In short, what the method `**.unstack()**` does is to unstack the inner most
    index of the MultiIndex DataFrame, which in this case, is `**weathersit**`. This
    so-called un-stacked index becomes the columns of the new DataFrame, which allows
    our plotting of line plot to give more meaningful outcome for comparison purposes.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，`**.unstack()**`方法的作用是解开MultiIndex DataFrame中最内层的索引，在这个例子中是`**weathersit**`。这个所谓的解开索引变成了新DataFrame的列，这使得我们的线图绘制结果更加有意义，方便比较。
- en: '![](../Images/6892843a34315addb39ca843d2dbd08c.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6892843a34315addb39ca843d2dbd08c.png)'
- en: Image by Author
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: You can also unstack the outer-most index instead of the inner-most index of
    the DataFrame, by specifying the argument `**level=0**` as part of the `**.unstack()**`
    method. Let’s see how we can achieve this.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过指定参数`**level=0**`作为`**.unstack()**`方法的一部分，来解开DataFrame中最外层的索引。让我们看看如何实现这一点。
- en: '[PRE10]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![](../Images/fcaeb87f0b7cd880bda70f0a457b75a0.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fcaeb87f0b7cd880bda70f0a457b75a0.png)'
- en: Image by Author
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: '![](../Images/3c938f38c42c3371f16f5bb6040b6f3b.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3c938f38c42c3371f16f5bb6040b6f3b.png)'
- en: Image by Author
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: '☕️ Method #8: .pipe()'
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '☕️ 方法 #8: .pipe()'
- en: From my observation, you almost never see common folks implement this method
    in their Pandas code when you search online. For one reason, `**.pipe()**` somehow
    has its own mysterious unexplainable aura that makes it not friendly to beginners
    and intermediates-alike. When you go to Pandas [documentation](https://pandas.pydata.org/docs/reference/frame.html)[²](#f249),
    the short explanation you will find is ***“Apply chainable functions that expect
    Series or DataFrames”***. I think this explanation is a little confusing and not
    really helpful, provided if you have never work with chaining before.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 从我的观察来看，当你在线搜索时，你几乎看不到普通人在他们的Pandas代码中实现这个方法。一个原因是，`**.pipe()**`有一种神秘的无法解释的气质，使得它对初学者和中级用户都不友好。当你去Pandas
    [文档](https://pandas.pydata.org/docs/reference/frame.html)[²](#f249)时，你会发现的简短解释是***“应用期望Series或DataFrame的可链式函数”***。我认为这个解释有些混淆，并且对那些从未使用链式操作的人并不十分有帮助。
- en: In short, what `**.pipe()**` offers you is the ability to continue your method
    chaining technique using a function, in the event where you can’t manage to find
    a straightforward solution to perform an operation to return a DataFrame.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，`**.pipe()**`为您提供的是使用函数继续方法链技术的能力，在您无法找到直接解决方案执行操作返回DataFrame的情况下。
- en: The method `**.pipe()**` takes in a function, by that, you can define a method
    outside the chain and then refer to the method as an argument to the `**.pipe()**`
    method.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 方法`**.pipe()**`接受一个函数作为参数，通过这个函数可以定义一个链外方法，然后将该方法作为`**.pipe()**`方法的参数引用。
- en: With `.pipe()`, you can pass a DataFrame or Series as the first argument to
    a custom function, and the function will be applied to the object being passed,
    followed by any additional arguments specified afterwards.
  id: totrans-104
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 使用`.pipe()`，您可以将DataFrame或Series作为自定义函数的第一个参数传递，并且该函数将应用于传递的对象，随后是指定的任何其他参数。
- en: Most of the time, you will see a one-liner lambda function inside the `**.pipe()**`
    method for the purpose of convenience (i.e. get access to the most recent DataFrame
    after some modification steps in the chaining process).
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数情况下，您会看到`**.pipe()**`方法中的一行lambda函数，以方便使用（例如，在链处理过程中的某些修改步骤后获取最新DataFrame）。
- en: 'Let me illustrate using a simplified example. Let’s say we want to get insights
    on the following question: ***“For the year 2012, what is the proportion of working
    day per season, relative to the total working day of that year?”***'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 让我用一个简化的例子来说明。假设我们想要了解以下问题：***“对于2012年，每个季节相对于该年总工作日的工作日比例是多少？”***
- en: '[PRE11]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Here, we use `**.pipe()**` to inject function into our chaining method. Since
    after performing `**.agg(sum)**`, we cannot just continue chaining with `**.div()**`,
    the following code will not work since we lost access to the latest state of the
    DataFrame after some modification through the chaining process.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们使用`**.pipe()**`将函数注入到我们的链式方法中。由于执行了`**.agg(sum)**`之后，我们无法继续使用`**.div()**`进行链式处理，因此以下代码将无法工作，因为我们在链式处理过程中失去了对DataFrame的最新状态的访问。
- en: '[PRE12]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Tips: If you can’t find a way to continue chaining your methods, try think
    of how `.pipe()` can help! Most of the time, it will!'
  id: totrans-110
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 提示：如果找不到继续链接方法的方式，请考虑如何使用`.pipe()`！大多数情况下，它会有所帮助！
- en: Afterword
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结语
- en: That wraps up the first part of The Underrated Gems 💎! They are all methods
    that I didn’t use as much before, perhaps due to my bad habit of brute-forcing
    my code with the thinking that “As long as it works, it’s good enough!” Unfortunately,
    it’s not!
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是低估的宝石💎第一部分的全部内容！这些都是我以前没有经常使用的方法，也许是因为我的坏习惯——用“只要能用，就够好！”的思维强行解决代码问题。不幸的是，这样做是不够好的！
- en: Only after I spend time to learn how to use them properly, they prove to be
    lifesaving, to say the least! I also want to thank Matt Harrison and his book
    [Effective Pandas](https://store.metasnake.com/effective-pandas-book)[³](#deae)
    which completely changes the way I write my Pandas code. Now, I can say my code
    is more concise, readable, and just makes more sense.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 只有在我花时间学习如何正确使用它们之后，它们才被证明是救命稻草，可以这么说！我还要感谢Matt Harrison和他的书[《高效Pandas》](https://store.metasnake.com/effective-pandas-book)[³](#deae)，这本书彻底改变了我编写Pandas代码的方式。现在，我可以说我的代码更简洁、更可读，而且更有意义。
- en: In Part 2 of The Underrated Gems, we are going to touch on another eight lesser-known
    Pandas methods such as `**.explode()**`, `**.melt()**`, and `**.expanding()**`!
    You probably won’t use them as much but they certainly come in handy at the moment
    you need them.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在低估的宝石第二部分中，我们将介绍其他八个较少为人知的Pandas方法，例如`**.explode()**`、`**.melt()**`和`**.expanding()**`！您可能不会经常使用它们，但在需要它们的时候它们肯定很方便。
- en: If you pick up something useful from this article, do consider giving me a [***Follow***](https://medium.com/@andreas030503)
    on Medium. Easy, 1 article a week to keep yourself updated and stay ahead of the
    curve!
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你从本文中获得了一些有用的东西，请考虑在Medium上给我[***关注***](https://medium.com/@andreas030503)。每周一篇文章，轻松跟上时代潮流！
- en: Connect With Me!
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我！
- en: '[*LinkedIn*](https://www.linkedin.com/in/andreaslukita7/)👔'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*LinkedIn*](https://www.linkedin.com/in/andreaslukita7/)👔'
- en: '[*Twitter*](https://twitter.com/andreaslukita7)🖊'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*Twitter*](https://twitter.com/andreaslukita7)🖊'
- en: References
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考资料
- en: Fanaee-T, Hadi. (2013). Bike Sharing Dataset. UCI Machine Learning Repository.
    [https://doi.org/10.24432/C5W894](https://doi.org/10.24432/C5W894).
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Fanaee-T，Hadi。 (2013)。自行车共享数据集。UCI机器学习库。[https://doi.org/10.24432/C5W894](https://doi.org/10.24432/C5W894)。
- en: 'Pandas Documentation: [https://pandas.pydata.org/docs/reference/frame.html](https://pandas.pydata.org/docs/reference/frame.html)'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Pandas 文档: [https://pandas.pydata.org/docs/reference/frame.html](https://pandas.pydata.org/docs/reference/frame.html)'
- en: 'Effective Pandas by Matt Harrison: [https://store.metasnake.com/effective-pandas-book](https://store.metasnake.com/effective-pandas-book)'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Matt Harrison的《Effective Pandas》: [https://store.metasnake.com/effective-pandas-book](https://store.metasnake.com/effective-pandas-book)'
