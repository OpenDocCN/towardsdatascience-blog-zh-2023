- en: How to Connect to GCP Cloud SQL with Cloud SQL Auth Proxy in Docker
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何通过 Cloud SQL Auth Proxy 在 Docker 中连接到 GCP Cloud SQL
- en: 原文：[https://towardsdatascience.com/how-to-connect-to-gcp-cloud-sql-with-cloud-sql-auth-proxy-in-docker-99bdf810c498](https://towardsdatascience.com/how-to-connect-to-gcp-cloud-sql-with-cloud-sql-auth-proxy-in-docker-99bdf810c498)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-connect-to-gcp-cloud-sql-with-cloud-sql-auth-proxy-in-docker-99bdf810c498](https://towardsdatascience.com/how-to-connect-to-gcp-cloud-sql-with-cloud-sql-auth-proxy-in-docker-99bdf810c498)
- en: Learn a standard way to connect dockerized applications to GCP Cloud SQL instances
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 学习一种标准的方法将 Docker 化应用程序连接到 GCP Cloud SQL 实例
- en: '[](https://lynn-kwong.medium.com/?source=post_page-----99bdf810c498--------------------------------)[![Lynn
    G. Kwong](../Images/b9a05b6587db5ca41c1d8264adda5b06.png)](https://lynn-kwong.medium.com/?source=post_page-----99bdf810c498--------------------------------)[](https://towardsdatascience.com/?source=post_page-----99bdf810c498--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----99bdf810c498--------------------------------)
    [Lynn G. Kwong](https://lynn-kwong.medium.com/?source=post_page-----99bdf810c498--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://lynn-kwong.medium.com/?source=post_page-----99bdf810c498--------------------------------)[![Lynn
    G. Kwong](../Images/b9a05b6587db5ca41c1d8264adda5b06.png)](https://lynn-kwong.medium.com/?source=post_page-----99bdf810c498--------------------------------)[](https://towardsdatascience.com/?source=post_page-----99bdf810c498--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----99bdf810c498--------------------------------)
    [Lynn G. Kwong](https://lynn-kwong.medium.com/?source=post_page-----99bdf810c498--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----99bdf810c498--------------------------------)
    ·9 min read·Feb 20, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----99bdf810c498--------------------------------)
    ·9分钟阅读·2023年2月20日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/ab898b9635bf96960353af4de7d4cb3b.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ab898b9635bf96960353af4de7d4cb3b.png)'
- en: Image by WilliamsCreativity (Servers Data) in Pixabay
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源于 Pixabay 上的 WilliamsCreativity (Servers Data)
- en: Cloud SQL on the Google Cloud Platform (GCP) is a great service if you want
    to host your relational databases in the cloud. There are some standard ways to
    connect to Cloud SQL from your GCP resources like Cloud Run, Compute engine, etc.
    However, it’s not as well documented regarding how to connect your dockerized
    application to Cloud SQL.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Google Cloud Platform (GCP) 上的 Cloud SQL 是一个很棒的服务，如果你想在云中托管你的关系型数据库。连接到 Cloud
    SQL 的标准方法有一些，比如从你的 GCP 资源（如 Cloud Run、Compute engine 等）连接。然而，关于如何将 Docker 化应用程序连接到
    Cloud SQL 的文档并不多。
- en: The Cloud SQL Auth proxy is the recommended way to connect your dockerized applications
    to Cloud SQL. It provides secure access to your Cloud SQL instances without the
    need for authorized networks or for configuring SSL.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Cloud SQL Auth proxy 是连接你的 Docker 化应用程序到 Cloud SQL 的推荐方法。它提供了安全访问你的 Cloud SQL
    实例，而无需授权网络或配置 SSL。
- en: In this post, we will introduce how to use Cloud SQL Auth proxy in various ways,
    with a focus on how to write `docker-compose.yaml` file for connecting dockerized
    applications to Cloud SQL instances.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将介绍如何以各种方式使用 Cloud SQL Auth proxy，重点讲解如何编写 `docker-compose.yaml` 文件以连接
    Docker 化应用程序到 Cloud SQL 实例。
- en: Preparation
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: At this point, I assume you already have a GCP Cloud SQL instance available.
    The creation of a Cloud SQL instance is generally done by a system or DevOps engineer.
    However, if you work on your own projects or just want to do it for learning purposes,
    you can create one by yourself. Head to the GCP console and follow the instructions,
    it should be fairly straightforward to create one. Remember to create a DB user
    which will be used later.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，我假设你已经有了一个 GCP Cloud SQL 实例。Cloud SQL 实例的创建通常由系统或 DevOps 工程师完成。然而，如果你在做自己的项目或者只是为了学习目的，你可以自己创建一个。前往
    GCP 控制台并按照说明操作，创建一个应该相当简单。记得创建一个数据库用户，以便后续使用。
- en: If you want to run the code in this post on your personal laptop or desktop,
    it’s recommended to set up your local environment to work with GCP.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想在个人笔记本电脑或台式机上运行本文中的代码，建议设置本地环境以便与 GCP 配合使用。
- en: Make sure your Google account or service account has at least the “*Cloud SQL
    Client*” role. It can also be assigned the “Cloud SQL Editor” or “Cloud SQL Admin”
    role if applicable.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你的 Google 帐号或服务帐号至少具有“*Cloud SQL Client*”角色。如果适用，也可以分配“Cloud SQL Editor”或“Cloud
    SQL Admin”角色。
- en: Make sure the Cloud SQL Admin API is enabled.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 确保已启用 Cloud SQL Admin API。
- en: Use the Cloud SQL Auth proxy command directly
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 直接使用 Cloud SQL Auth proxy 命令。
- en: There are some occasions when using the Cloud SQL Auth proxy command directly
    (without using Docker) is preferable. For example, when you want to run the command
    as a startup script or make it as a service on your bare metal machine or Cloud
    virtual machine (VM).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 有些情况下，直接使用 Cloud SQL Auth 代理命令（而不是使用 Docker）是更可取的。例如，当你想将命令作为启动脚本运行，或在裸金属机器或云虚拟机（VM）上将其作为服务时。
- en: Learning the Cloud SQL Auth proxy command is also helpful for use in Docker
    as the command is actually the same, just the latter is run in a Docker container.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 学习 Cloud SQL Auth 代理命令对在 Docker 中使用也很有帮助，因为命令实际上是相同的，只不过后者是在 Docker 容器中运行。
- en: 'First, we need to download the binary file of the Cloud SQL Auth proxy:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要下载 Cloud SQL Auth 代理的二进制文件：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You can find the latest version of Cloud SQL Auth proxy in its GitHub repo.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在其 GitHub 仓库中找到 Cloud SQL Auth 代理的最新版本。
- en: 'Then we can use Cloud SQL Auth proxy to connect to our Cloud SQL instance,
    please check the comments below which include context-wise explanations for each
    command:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以使用 Cloud SQL Auth 代理连接到我们的 Cloud SQL 实例，请查看下面的评论，这些评论包含每个命令的上下文解释：
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Note that an ampersand (&) is put at the end of the `cloud-sql-proxy` command
    line so we can run Cloud SQL Auth proxy in another process in the background.
    In this way, we won’t accidentally close the connection and don’t need to open
    a new tab if we want to use a SQL client to connect to our SQL instance immediately.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在`cloud-sql-proxy`命令行的末尾放置了一个和号（&），这样我们可以在后台的另一个进程中运行 Cloud SQL Auth 代理。这样，我们不会意外关闭连接，也不需要打开一个新的标签页，如果我们想立即使用
    SQL 客户端连接到我们的 SQL 实例。
- en: We can use the `jobs` command to see the processes running in the background.
    We can also use `fg %N` or `kill %N` (where `N` is the number returned by `jobs`)
    to bring the process to the foreground or to kill it.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`jobs`命令查看后台运行的进程。我们还可以使用`fg %N`或`kill %N`（其中`N`是`jobs`返回的数字）将进程切换到前台或终止它。
- en: 'When you see:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当你看到：
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: You can then connect to your SQL instance with your SQL client or in your application
    with some libraries like SQLAlchemy.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 然后你可以使用 SQL 客户端或在你的应用程序中使用一些库（如 SQLAlchemy）连接到你的 SQL 实例。
- en: 'For a MySQL client, the command is:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 MySQL 客户端，命令是：
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note that the host is `127.0.0.1`, namely, our local host as we are using a
    proxy to connect to our database.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，主机是`127.0.0.1`，即我们的本地主机，因为我们使用代理连接到我们的数据库。
- en: If you need to write complex SQL queries, it’s highly recommended to use a graphical
    tool like DBeaver, which is a free universal tool for managing various databases.
    It has great support for syntax highlighting, autocompletion, and many other fantastic
    features. It’s like a graphical version of SQLAlchemy. If you haven’t tried it
    before, it’s well worth trying and you will find it outperforms most other tools.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要编写复杂的 SQL 查询，强烈推荐使用图形化工具，如 DBeaver，它是一个免费的通用数据库管理工具。它对语法高亮、自动补全以及许多其他出色功能有很好的支持。它就像
    SQLAlchemy 的图形化版本。如果你还没试过，值得一试，你会发现它的表现优于大多数其他工具。
- en: Use the Cloud SQL Auth proxy with Docker
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Docker 启动 Cloud SQL Auth 代理
- en: We can also start Cloud SQL Auth proxy with Docker, which is normally suitable
    when you don’t want to or cannot install `cloud-sql-proxy`.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以使用 Docker 启动 Cloud SQL Auth 代理，这通常适用于你不想或不能安装`cloud-sql-proxy`时。
- en: 'It’s pretty straightforward to start the Cloud SQL Auth proxy with Docker,
    you just need to follow these commands:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Docker 启动 Cloud SQL Auth 代理非常简单，你只需按照这些命令操作：
- en: '[PRE4]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Note that `-p 127.0.0.1:3306` specifies that the Cloud SQL Auth proxy is not
    exposed outside the local host, whereas `--address 0.0.0.0` is used to make the
    port accessible outside of the Docker container.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`-p 127.0.0.1:3306`指定了 Cloud SQL Auth 代理不会暴露在本地主机之外，而`--address 0.0.0.0`用于使端口在
    Docker 容器外部可访问。
- en: It’s not very common to start the Cloud SQL Auth proxy with Docker directly.
    A more useful way is to use Docker Compose as we will see in the next section.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 直接使用 Docker 启动 Cloud SQL Auth 代理并不常见。更有用的方法是使用 Docker Compose，如我们将在下一节中看到的那样。
- en: Use the Cloud SQL Auth proxy with Docker Compose
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Docker Compose 启动 Cloud SQL Auth 代理
- en: Normally we don’t use Docker to start a standalone container for the Cloud SQL
    Auth proxy. Instead, we specify it together with our application in a `docker-compose.yaml`
    file. In this way, our application can be dockerized properly and can be installed
    by all developers on their computers together with the database dependencies required.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 通常我们不会使用 Docker 启动一个独立的 Cloud SQL Auth 代理容器。相反，我们将其与应用程序一起在 `docker-compose.yaml`
    文件中指定。这样，我们的应用程序可以得到适当的 docker 化，并且所有开发人员可以在他们的计算机上与所需的数据库依赖项一起安装。
- en: We will see how to put a FastAPI microservice and Cloud SQL Auth proxy in the
    same `docker-compose.yaml` file.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看到如何在同一个 `docker-compose.yaml` 文件中放置 FastAPI 微服务和 Cloud SQL Auth 代理。
- en: 'But first, let’s see how to create a `docker-compose.yaml` file just for the
    Cloud SQL Auth proxy because there are some details that we should get clear with
    first. Our initial `docker-compose.yaml` file will have the content as follows:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 但首先，让我们看看如何仅为 Cloud SQL Auth 代理创建 `docker-compose.yaml` 文件，因为有一些细节需要先弄清楚。我们初始的
    `docker-compose.yaml` 文件内容如下：
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: As we see, the settings are the same as the ones above for using Docker directly.
    Note that for the `command` key, we should not specify the `cloud-sql-proxy` command
    as it’s specified inside the Docker container automatically.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，设置与直接使用 Docker 时的设置相同。请注意，对于 `command` 键，我们不应指定 `cloud-sql-proxy` 命令，因为它会在
    Docker 容器内自动指定。
- en: 'Then we can bring up the `cloudsql` service by:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以通过以下命令启动 `cloudsql` 服务：
- en: '[PRE6]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Normally as a developer, we would have permission to access our databases with
    our personal Google accounts. If you have logged into GCP with `gcloud auth login`,
    you can just bind the `~/.config/gcloud` folder to the container and don’t need
    to provide a service account key file:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 通常作为开发人员，我们会有权限使用个人 Google 帐户访问我们的数据库。如果你已经通过 `gcloud auth login` 登录到 GCP，你只需将
    `~/.config/gcloud` 文件夹绑定到容器中，不需要提供服务帐号密钥文件：
- en: '[PRE7]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This is the preferable way for local development because using a service account
    key file has the risk of leaking it and causing security issues.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这是本地开发的推荐方式，因为使用服务帐号密钥文件有泄露的风险，并可能导致安全问题。
- en: 'However, if you bring up the `cloudsql` service with this `docker-compose.yaml`
    file directly, you will normally see this error:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果你直接使用这个 `docker-compose.yaml` 文件启动 `cloudsql` 服务，通常会看到这个错误：
- en: '[PRE8]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The reason is that we are binding the `~/.config/gcloud` folder from our local
    host to a folder in the container which will be used by the `nonroot` user. Therefore,
    we need to change the permissions for the `~/.config/gcloud` folder so it can
    be accessed by the `nonroot` user in the container:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 原因是我们将本地主机上的 `~/.config/gcloud` 文件夹绑定到容器中的一个文件夹，该文件夹将被 `nonroot` 用户使用。因此，我们需要更改
    `~/.config/gcloud` 文件夹的权限，以便容器中的 `nonroot` 用户可以访问：
- en: '[PRE9]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: These two commands make the `~/.config/gcloud/` folder and its subfolders, as
    well as all the content, accessible to other users (non-owner or group users).
    Please check [this post](https://levelup.gitconnected.com/some-linux-commands-that-can-boost-your-work-efficiency-dramatically-9dc802a10618)
    if you want to know more about these commands.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个命令使 `~/.config/gcloud/` 文件夹及其子文件夹以及所有内容对其他用户（非拥有者或组用户）可访问。如果你想了解更多关于这些命令的信息，请查看
    [这篇文章](https://levelup.gitconnected.com/some-linux-commands-that-can-boost-your-work-efficiency-dramatically-9dc802a10618)。
- en: If you bring up the service again, everything should work properly.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你重新启动服务，一切应该能正常工作。
- en: 'Now let’s add our FastAPI application to the `docker-compose.yaml` file:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们将我们的 FastAPI 应用程序添加到 `docker-compose.yaml` 文件中：
- en: '[PRE10]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Key points for this `docker-compose.yaml` file:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '`docker-compose.yaml` 文件的关键点：'
- en: The application and Cloud proxy services must have the same network. Otherwise,
    the database cannot be accessed in the application.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应用程序和 Cloud 代理服务必须在同一网络中。否则，应用程序无法访问数据库。
- en: Some non-sensitive environment variables are set as plain text by the `environment`
    key, and sensitive ones by the secret file `secrets.env`. This file should not
    be added to the repository for version control.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一些非敏感的环境变量通过 `environment` 键以明文设置，而敏感的环境变量则通过秘密文件 `secrets.env` 设置。此文件不应添加到版本控制的代码库中。
- en: The application is set to depend on the Cloud proxy so the database can always
    be accessible when the application is up.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应用程序被设置为依赖于 Cloud 代理，以便在应用程序运行时数据库始终可访问。
- en: A special environment variable `PYTHONPATH` is set to `/app:.:..` to make it
    easier to import the modules by relative or absolute paths.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个特殊的环境变量 `PYTHONPATH` 被设置为 `/app:.:..`，以便更容易通过相对或绝对路径导入模块。
- en: 'We can use Pydantic to read the environment variables in our application, which
    is really convenient:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 Pydantic 来读取应用程序中的环境变量，这非常方便：
- en: '[PRE11]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The above code can be used as a template for any Python microservice.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码可以作为任何 Python 微服务的模板。
- en: 'In our simple application, we can read our users'' data with a [FastAPI](https://levelup.gitconnected.com/build-apis-with-fastapi-in-python-all-essentials-you-need-to-get-started-6bf9fa90c6b8)
    dependency injection:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的简单应用中，我们可以通过[FastAPI](https://levelup.gitconnected.com/build-apis-with-fastapi-in-python-all-essentials-you-need-to-get-started-6bf9fa90c6b8)依赖注入来读取用户数据：
- en: '[PRE12]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[This GitHub repo](https://github.com/lynnkwong/cloudsql-proxy-demo) contains
    all the code for this post. It is recommended to check the related posts for [Pydantic](https://lynn-kwong.medium.com/how-to-use-pydantic-to-read-environment-variables-and-secret-files-in-python-8a6b8c56381c),
    [SQLAlchemy](https://levelup.gitconnected.com/learn-the-basics-and-get-started-with-sqlalchemy-orm-from-scratch-66c8624b069),
    and [FastAPI](https://levelup.gitconnected.com/build-apis-with-fastapi-in-python-all-essentials-you-need-to-get-started-6bf9fa90c6b8)
    if you want to dive into the code. These are all very popular libraries for Python
    developers and are well worth being added to your toolset.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '[这个 GitHub 仓库](https://github.com/lynnkwong/cloudsql-proxy-demo)包含了本篇文章的所有代码。如果你想深入了解代码，建议查看相关的文章，比如[Pydantic](https://lynn-kwong.medium.com/how-to-use-pydantic-to-read-environment-variables-and-secret-files-in-python-8a6b8c56381c)、[SQLAlchemy](https://levelup.gitconnected.com/learn-the-basics-and-get-started-with-sqlalchemy-orm-from-scratch-66c8624b069)和[FastAPI](https://levelup.gitconnected.com/build-apis-with-fastapi-in-python-all-essentials-you-need-to-get-started-6bf9fa90c6b8)。这些都是非常受欢迎的
    Python 开发者库，非常值得加入你的工具集。'
- en: In this post, we have introduced how to use Cloud SQL Auth proxy on a bare metal
    machine or virtual machine directly. Different authenticating methods are introduced,
    including using default authentication and a service account key file.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 本文介绍了如何在裸机或虚拟机上直接使用 Cloud SQL Auth 代理。介绍了不同的认证方法，包括使用默认认证和服务账号密钥文件。
- en: We have also introduced how to use Docker to start the Cloud SQL Auth proxy
    directly. However, it’s not recommended as it’s not portable and is thus difficult
    to share the settings with other developers. A preferable way is to use a`docker-compose.yaml`
    file to connect our dockerized applications to Cloud SQL instances.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还介绍了如何使用 Docker 直接启动 Cloud SQL Auth 代理。然而，由于其不可移植，不推荐使用这种方法，因此难以与其他开发者共享设置。更好的方式是使用`docker-compose.yaml`文件将我们的
    Docker 化应用程序连接到 Cloud SQL 实例。
- en: A simple but practical example of how to use the Cloud SQL Auth proxy in a real
    project is provided which can serve as a template for your own projects.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 提供了一个简单但实用的 Cloud SQL Auth 代理在实际项目中使用的例子，可以作为你自己项目的模板。
- en: 'Related articles:'
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关文章：
- en: '[How to Connect to GCP Cloud SQL Instances in Cloud Run Services](/how-to-connect-to-gcp-cloud-sql-instances-in-cloud-run-servies-1e60a908e8f2)'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何在 Cloud Run 服务中连接到 GCP Cloud SQL 实例](/how-to-connect-to-gcp-cloud-sql-instances-in-cloud-run-servies-1e60a908e8f2)'
- en: '[Build APIs with FastAPI in Python — All Essentials You Need to Get Started](https://levelup.gitconnected.com/build-apis-with-fastapi-in-python-all-essentials-you-need-to-get-started-6bf9fa90c6b8)'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 FastAPI 构建 Python API — 所有启动所需的基本知识](https://levelup.gitconnected.com/build-apis-with-fastapi-in-python-all-essentials-you-need-to-get-started-6bf9fa90c6b8)'
