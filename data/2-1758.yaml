- en: Quick Text Sentiment Analysis with R
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 R 进行快速文本情感分析
- en: 原文：[https://towardsdatascience.com/quick-text-sentiment-analysis-with-r-2cc4f04c35c1](https://towardsdatascience.com/quick-text-sentiment-analysis-with-r-2cc4f04c35c1)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/quick-text-sentiment-analysis-with-r-2cc4f04c35c1](https://towardsdatascience.com/quick-text-sentiment-analysis-with-r-2cc4f04c35c1)
- en: Use TidyText to create a nice and quick text analysis with R
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 TidyText 创建一个简洁且快速的文本分析工具与 R
- en: '[](https://gustavorsantos.medium.com/?source=post_page-----2cc4f04c35c1--------------------------------)[![Gustavo
    Santos](../Images/a19a9f4525cdeb6e7a76cd05246aa622.png)](https://gustavorsantos.medium.com/?source=post_page-----2cc4f04c35c1--------------------------------)[](https://towardsdatascience.com/?source=post_page-----2cc4f04c35c1--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----2cc4f04c35c1--------------------------------)
    [Gustavo Santos](https://gustavorsantos.medium.com/?source=post_page-----2cc4f04c35c1--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://gustavorsantos.medium.com/?source=post_page-----2cc4f04c35c1--------------------------------)[![Gustavo
    Santos](../Images/a19a9f4525cdeb6e7a76cd05246aa622.png)](https://gustavorsantos.medium.com/?source=post_page-----2cc4f04c35c1--------------------------------)[](https://towardsdatascience.com/?source=post_page-----2cc4f04c35c1--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----2cc4f04c35c1--------------------------------)
    [Gustavo Santos](https://gustavorsantos.medium.com/?source=post_page-----2cc4f04c35c1--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----2cc4f04c35c1--------------------------------)
    ·9 min read·Mar 10, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----2cc4f04c35c1--------------------------------)
    ·阅读时间 9 分钟·2023年3月10日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/5960e531934e6170b542d5661e786195.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5960e531934e6170b542d5661e786195.png)'
- en: Photo by [Kenny Eliason](https://unsplash.com/@neonbrand?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/jxmVsYjglnQ?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[Kenny Eliason](https://unsplash.com/@neonbrand?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    拍摄的照片，来源于 [Unsplash](https://unsplash.com/photos/jxmVsYjglnQ?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)'
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: Text everywhere! Since the Internet was spread around the world, the amount
    of textual data we generate everyday is ginormous. Only textual messages sent
    everyday, it is estimated that there are around 18 Billion of them circulating
    on a [daily basis](https://seedscientific.com/how-much-data-is-created-every-day/)*.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 到处都是文本！自从互联网传播到全球以来，我们每天生成的文本数据量巨大。仅每日发送的文本消息，就估计有大约 180 亿条在 [日常基础](https://seedscientific.com/how-much-data-is-created-every-day/)上流通。
- en: Now imagine the amount of news generated as well. It’s a so overwhelming amount
    that there are whole businesses built around news clipping, separating the best
    information about a given topic to help companies in their marketing strategies.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 现在想象一下生成的新闻量。这个数量如此庞大，以至于围绕新闻剪辑建立了整个业务，分离出关于特定话题的最佳信息，以帮助公司制定营销策略。
- en: How is AI helping that? Certainly, NLP plays a huge part on that providing good
    tools and algorithms to analyze textual information. As Data Scientists, we can
    profit of `tidytext`, an excellent library from `R` to help us building quick
    analytical tools to check the content of a text.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 人工智能如何提供帮助？显然，自然语言处理（NLP）在其中发挥了重要作用，提供了良好的工具和算法来分析文本信息。作为数据科学家，我们可以利用 `tidytext`，这是
    `R` 的一个优秀库，帮助我们构建快速分析工具来检查文本内容。
- en: Let’s see that in practice, next.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们在实践中看看这个。
- en: Text Analysis
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文本分析
- en: Prepare your environment
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备你的环境
- en: To be prepared to code along with this article, load the libraries listed as
    follows.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 为了准备好与本文一起编写代码，加载下列列出的库。
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The library `tidytext` works on the same fashion as `tidyverse`, making use
    of intuitive function names and chaining them with the pipe symbol `%>%`.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '`tidytext` 库的工作方式与 `tidyverse` 类似，利用直观的函数名称，并通过管道符号 `%>%` 链接它们。'
- en: Let’s use [this text from Wikipedia about the *R Language*](https://en.wikipedia.org/wiki/R_(programming_language))
    to create our first simple **Text Analyzer**.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用 [这篇关于 *R 语言* 的维基百科文本](https://en.wikipedia.org/wiki/R_(programming_language))
    来创建我们第一个简单的 **文本分析器**。
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The next step is to transform this text into a `tibble` object, which can be
    understood as a `data.frame`.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是将这个文本转换为 `tibble` 对象，可以理解为 `data.frame`。
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: It won’t change much your object, but it is just something required for us to
    be able to work with the `tidytext` functions, as those require that the data
    comes from a tibble or data.frame object. In case you’re curious, here is what
    it looks like after the transformation.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 它不会改变太多你的对象，但这是我们能够使用`tidytext`函数所必需的，因为这些函数要求数据来自tibble或data.frame对象。如果你感兴趣的话，这里是转换后的样子。
- en: '![](../Images/7d1c694128d9a6998ab7b9c60da8f7b7.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7d1c694128d9a6998ab7b9c60da8f7b7.png)'
- en: Text transformed to a tibble object. Image by the author.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 文本转换为tibble对象。图片来源：作者。
- en: Frequency count
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 频率计数
- en: Moving on, now we will tokenize the text. A token is the smallest meaningful
    unit of a text. Most of the projects use 1 word = 1 token, but it can be another
    size, if your project requires it. Therefore, **tokenization** is this process
    of breaking a text into this minimal pieces that carry a meaning to make the message.
    To tokenize our text with `tidytext`, use this function.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 继续，我们将对文本进行标记化。令牌是文本中最小的有意义单位。大多数项目使用1个单词=1个令牌，但如果你的项目需要，也可以是其他大小。因此，**标记化**就是将文本分解为这种最小的有意义的片段，以构成信息。要使用`tidytext`标记化我们的文本，请使用此函数。
- en: A token is the smallest meaningful unit of a text. [1]
  id: totrans-27
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 令牌是文本中最小的有意义单位。[1]
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: And the result is this, as follows.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下。
- en: '![](../Images/34d2e38a8448d11f3b2ab5df40ec097f.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/34d2e38a8448d11f3b2ab5df40ec097f.png)'
- en: Tokenized text. Image by the author.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 经过标记化的文本。图片来源：作者。
- en: However, we can see that tokens such as `is` , `a` , `for` won’t add anything
    to the message. Agree? Those are called **stop words**. We should have a way to
    remove those tokens and leave only the clean data, those tokens with a real meaning
    from the text’s message.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，我们可以看到诸如`is`、`a`、`for`之类的令牌不会为信息添加任何内容。认同吗？这些被称为**停用词**。我们应该有办法去除这些令牌，只留下干净的数据，即文本信息中的实际意义的令牌。
- en: '`tidytext` already comes with a dataset with the stop words integrated. If
    we write `stop_words` and run the code, we will be able to see it.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`tidytext`已经附带了集成了停用词的数据集。如果我们输入`stop_words`并运行代码，我们将能看到它。'
- en: '[PRE4]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Notice that the column with the words is named `word`. That is why we also named
    our tokenized column with that variable name, so it is easier to join both datasets.
    So, our job now is to join them, removing those stop words. We can use the `anti_join()`
    function for that, which will keep only the words that are in the dataset A, but
    not in B. On the sequence, we just count and sort by most frequent appearances.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到包含单词的列命名为`word`。这也是我们将标记化列命名为该变量名的原因，这样更容易将两个数据集连接起来。因此，我们现在的工作是将它们连接起来，去除停用词。我们可以使用`anti_join()`函数，它只保留数据集A中存在但在B中不存在的单词。在序列中，我们只需计数并按出现频率排序。
- en: '[PRE5]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Amazing, huh? That easily we have a sense of what’s this text about. *A software
    or programming language for statistical data analysis.*
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 惊人吧？这样我们就很容易了解这段文本的主题。*用于统计数据分析的软件或编程语言。*
- en: We could create a function with the preceding code to quickly give us frequency
    counts of any text.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用前面的代码创建一个函数，快速给出任何文本的频率计数。
- en: '[PRE6]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Let’s put it to test. I will go back to the first section of this article, copy
    it and let our function count the frequencies.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来测试一下。我会回到这篇文章的第一部分，复制它，让我们的函数计算频率。
- en: '[PRE7]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Works like a charm.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 效果非常好。
- en: Going the extra mile
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 额外进阶
- en: We could stop here, but this topic is so interesting that I sense we should
    still go on with a little more content. Let’s add a sentiment analysis to our
    text analyzer now.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在这里停下来，但这个话题非常有趣，我觉得我们应该再深入一点。让我们现在向我们的文本分析器添加情感分析吧。
- en: '`tidytext` also comes prepared for sentiment analysis, since it has a couple
    of sentiments datasets provided with it. The options are “Bing”, “Afinn” and “nrc”.
    Let’s see the difference between them.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '`tidytext`还准备好了情感分析，因为它提供了几个情感数据集。选项包括“Bing”、“Afinn”和“nrc”。让我们看看它们之间的区别。'
- en: '*Bing* sentiments dataset comes with words classified as positive or negative.
    So, one option here is to check how many positive vs. negative words does your
    text carry, and then have an idea of the sentiment.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '*Bing*情感数据集包含分类为正面或负面的单词。因此，一个选项是检查你的文本中正面与负面单词的数量，从而了解情感。'
- en: '[PRE8]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '*Afinn* sentiments, probably from affinity classifies the words with numbers.
    The more positive the number, the more positive the word and the inverse is also
    true. It requires the `library(textdata)` to be loaded.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '*Afinn*情感数据集，可能来源于affinity，将单词与数字分类。数字越正面，单词越正面，反之亦然。它需要加载`library(textdata)`。'
- en: '[PRE9]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Finally, the *NRC* will classify the words as sentiment names, like trust, surprise
    etc.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，*NRC* 会将单词分类为情感名称，如信任、惊讶等。
- en: '[PRE10]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: So, what we will do next is to use *afinn* to create a score and then plot the
    result of positive vs. negative words of our text.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我们接下来要做的是使用*afinn*创建一个评分，然后绘制我们文本中正面和负面单词的结果。
- en: I will use a text captured in the internet about the layoffs in tech. The function
    now counts with a graphic that shows the scores of the words according to the
    *afinn* values and frequencies.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我将使用关于科技行业裁员的网络文本。现在该功能包含一个图形，显示单词根据*afinn*值和频率的评分。
- en: '[PRE11]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The resulting table was displayed above. This is the outcome graphic.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 上述结果表格已显示。这是结果图形。
- en: '![](../Images/fd5affd63340536336e464f171638c63.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fd5affd63340536336e464f171638c63.png)'
- en: Sentiment Analysis for a news text about the layoffs in the Tech industry. Image
    by the author.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 针对关于科技行业裁员的新闻文本进行情感分析。图片由作者提供。
- en: In my GitHub, there’s another function where you can also choose the sentiments
    pack to be used. The results are displayed below, followed by the code link.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的 GitHub 上，还有另一个函数，你也可以选择要使用的情感包。结果如下所示，随后是代码链接。
- en: '[PRE12]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![](../Images/5ac821fd87c1d36dd0f3dd578ba8bc99.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5ac821fd87c1d36dd0f3dd578ba8bc99.png)'
- en: Sentiments captured by word frequency with the “nrc” pack. Image by the author.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 使用“nrc”包捕获的单词频率情感。图片由作者提供。
- en: '![](../Images/c7f55b4b01ec5ed8d47f17f42a007b18.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c7f55b4b01ec5ed8d47f17f42a007b18.png)'
- en: Sentiments captured by word frequency using the “Bing” pack. Image by the author.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 使用“Bing”包捕获的单词频率情感。图片由作者提供。
- en: 'You can see the entire code here: [Link to the code in Git Hub](https://github.com/gurezende/Sentiment_Analysis_TidyText).'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '你可以在这里查看完整代码: [GitHub 代码链接](https://github.com/gurezende/Sentiment_Analysis_TidyText)。'
- en: You can play with a Shiny App created out of this code too.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用这个代码创建的 Shiny 应用进行尝试。
- en: '[## [ TEXT SENTIMENT ANALYZER ]'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '[## [ 文本情感分析器 ]'
- en: This project - created by Gustavo R Santos - to quickly create a text analysis
    to count word frequencies and plot the…
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 这个项目 - 由 Gustavo R Santos 创建 - 用于快速创建文本分析，以计算单词频率并绘制图形…
- en: gurezende.shinyapps.io](https://gurezende.shinyapps.io/Sentiment_Analysis/?source=post_page-----2cc4f04c35c1--------------------------------)
    ![](../Images/fcda764b6d41bfc5b1870f5c59081645.png)
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: gurezende.shinyapps.io](https://gurezende.shinyapps.io/Sentiment_Analysis/?source=post_page-----2cc4f04c35c1--------------------------------)
    ![](../Images/fcda764b6d41bfc5b1870f5c59081645.png)
- en: '[Shiny App: Text Sentiment Analyzer](https://gurezende.shinyapps.io/Sentiment_Analysis/).
    Image by the author.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '[Shiny 应用：文本情感分析器](https://gurezende.shinyapps.io/Sentiment_Analysis/)。图片由作者提供。'
- en: Before You Go
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在你离开之前
- en: I enjoy studying NLP and text mining data science tools. There is so much we
    can extract from a text. It’s super interesting.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢研究自然语言处理和文本挖掘的数据科学工具。我们可以从文本中提取出很多信息，这非常有趣。
- en: I recommend that you check the links below in the References section and find
    resources to deepen your knowledge. My book also brings some interesting exercises
    about wrangling textual data, including text mining.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议你查看下方参考部分的链接，并找到资源以深化你的知识。我的书中也包含一些关于处理文本数据的有趣练习，包括文本挖掘。
- en: If you liked this content, don’t forget to follow my blog. [Find me on LinkedIn](https://www.linkedin.com/in/gurezende/).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢这些内容，别忘了关注我的博客。[在 LinkedIn 上找到我](https://www.linkedin.com/in/gurezende/)。
- en: '[](https://gustavorsantos.medium.com/?source=post_page-----2cc4f04c35c1--------------------------------)
    [## Gustavo Santos - Medium'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://gustavorsantos.medium.com/?source=post_page-----2cc4f04c35c1--------------------------------)
    [## Gustavo Santos - Medium'
- en: Read writing from Gustavo Santos on Medium. Data Scientist. I extract insights
    from data to help people and companies…
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阅读 Gustavo Santos 在 Medium 上的文章。数据科学家。我从数据中提取洞察，以帮助个人和公司…
- en: gustavorsantos.medium.com](https://gustavorsantos.medium.com/?source=post_page-----2cc4f04c35c1--------------------------------)
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: gustavorsantos.medium.com](https://gustavorsantos.medium.com/?source=post_page-----2cc4f04c35c1--------------------------------)
- en: References
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[1] *Santos, G. 2023\. Data Wrangling with R. 1ed. Packt Publishing.*'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] *Santos, G. 2023. 用 R 进行数据处理。第 1 版。Packt Publishing.*'
- en: '[](https://www.tidytextmining.com/tidytext.html?source=post_page-----2cc4f04c35c1--------------------------------)
    [## 1 The tidy text format | Text Mining with R'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://www.tidytextmining.com/tidytext.html?source=post_page-----2cc4f04c35c1--------------------------------)
    [## 1 整洁文本格式 | 用 R 进行文本挖掘'
- en: Using tidy data principles is a powerful way to make handling data easier and
    more effective, and this is no less true…
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用整洁数据原则是使数据处理更简单、更有效的强大方法，这一点也不例外…
- en: www.tidytextmining.com](https://www.tidytextmining.com/tidytext.html?source=post_page-----2cc4f04c35c1--------------------------------)
    [](https://en.wikipedia.org/wiki/R_%28programming_language%29?source=post_page-----2cc4f04c35c1--------------------------------)
    [## R (programming language) - Wikipedia
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[Tidytext Mining](https://www.tidytextmining.com/tidytext.html?source=post_page-----2cc4f04c35c1--------------------------------)
    [R (编程语言) - 维基百科](https://en.wikipedia.org/wiki/R_%28programming_language%29?source=post_page-----2cc4f04c35c1--------------------------------)
    [## R (编程语言) - 维基百科'
- en: R is a programming language for statistical computing and graphics supported
    by the R Core Team and the R Foundation…
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: R 是一种用于统计计算和图形绘制的编程语言，由 R Core Team 和 R Foundation 支持…
- en: 'en.wikipedia.org](https://en.wikipedia.org/wiki/R_%28programming_language%29?source=post_page-----2cc4f04c35c1--------------------------------)
    [](https://www.amazon.com/Data-Wrangling-Transform-Visualize-tidyverse/dp/1803235403/ref=sr_1_4?crid=2GAN2WONI7ZS5&keywords=Data+Wrangling+with+R&qid=1672819697&sprefix=data+wrangling+with+%2Caps%2C324&sr=8-4&source=post_page-----2cc4f04c35c1--------------------------------)
    [## Data Wrangling with R: Load, explore, transform and visualize data for modeling
    with tidyverse…'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '[数据整理与R](https://en.wikipedia.org/wiki/R_%28programming_language%29?source=post_page-----2cc4f04c35c1--------------------------------)
    [数据整理与R: 加载、探索、转换和可视化数据以进行建模，使用tidyverse库](https://www.amazon.com/Data-Wrangling-Transform-Visualize-tidyverse/dp/1803235403/ref=sr_1_4?crid=2GAN2WONI7ZS5&keywords=Data+Wrangling+with+R&qid=1672819697&sprefix=data+wrangling+with+%2Caps%2C324&sr=8-4&source=post_page-----2cc4f04c35c1--------------------------------)
    [## 数据整理与R：加载、探索、转换和可视化数据以进行建模，使用tidyverse库'
- en: 'Data Wrangling with R: Load, explore, transform and visualize data for modeling
    with tidyverse libraries [Santos…'
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据整理与R：加载、探索、转换和可视化数据以进行建模，使用tidyverse库[Santos…
- en: www.amazon.com](https://www.amazon.com/Data-Wrangling-Transform-Visualize-tidyverse/dp/1803235403/ref=sr_1_4?crid=2GAN2WONI7ZS5&keywords=Data+Wrangling+with+R&qid=1672819697&sprefix=data+wrangling+with+%2Caps%2C324&sr=8-4&source=post_page-----2cc4f04c35c1--------------------------------)
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '[Amazon](https://www.amazon.com/Data-Wrangling-Transform-Visualize-tidyverse/dp/1803235403/ref=sr_1_4?crid=2GAN2WONI7ZS5&keywords=Data+Wrangling+with+R&qid=1672819697&sprefix=data+wrangling+with+%2Caps%2C324&sr=8-4&source=post_page-----2cc4f04c35c1--------------------------------)'
