- en: The Starter Guide For Transitioning Your Python Projects To R
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 《将你的 Python 项目迁移到 R 的入门指南》
- en: 原文：[https://towardsdatascience.com/the-starter-guide-for-transitioning-your-python-projects-to-r-8de4122b04ad?source=collection_archive---------3-----------------------#2023-06-02](https://towardsdatascience.com/the-starter-guide-for-transitioning-your-python-projects-to-r-8de4122b04ad?source=collection_archive---------3-----------------------#2023-06-02)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/the-starter-guide-for-transitioning-your-python-projects-to-r-8de4122b04ad?source=collection_archive---------3-----------------------#2023-06-02](https://towardsdatascience.com/the-starter-guide-for-transitioning-your-python-projects-to-r-8de4122b04ad?source=collection_archive---------3-----------------------#2023-06-02)
- en: R Tutorial
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: R 教程
- en: '*Exploring Electric vehicle trends in R*'
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*在 R 中探索电动车趋势*'
- en: '[](https://medium.com/@stephanie_lo?source=post_page-----8de4122b04ad--------------------------------)[![Stephanie
    Lo](../Images/2b7787607352815394cf8b734a9f0f02.png)](https://medium.com/@stephanie_lo?source=post_page-----8de4122b04ad--------------------------------)[](https://towardsdatascience.com/?source=post_page-----8de4122b04ad--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----8de4122b04ad--------------------------------)
    [Stephanie Lo](https://medium.com/@stephanie_lo?source=post_page-----8de4122b04ad--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@stephanie_lo?source=post_page-----8de4122b04ad--------------------------------)[![Stephanie
    Lo](../Images/2b7787607352815394cf8b734a9f0f02.png)](https://medium.com/@stephanie_lo?source=post_page-----8de4122b04ad--------------------------------)[](https://towardsdatascience.com/?source=post_page-----8de4122b04ad--------------------------------)[![数据科学前沿](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----8de4122b04ad--------------------------------)
    [Stephanie Lo](https://medium.com/@stephanie_lo?source=post_page-----8de4122b04ad--------------------------------)'
- en: ·
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff4309a31ceee&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-starter-guide-for-transitioning-your-python-projects-to-r-8de4122b04ad&user=Stephanie+Lo&userId=f4309a31ceee&source=post_page-f4309a31ceee----8de4122b04ad---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----8de4122b04ad--------------------------------)
    ·11 min read·Jun 2, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8de4122b04ad&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-starter-guide-for-transitioning-your-python-projects-to-r-8de4122b04ad&user=Stephanie+Lo&userId=f4309a31ceee&source=-----8de4122b04ad---------------------clap_footer-----------)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff4309a31ceee&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-starter-guide-for-transitioning-your-python-projects-to-r-8de4122b04ad&user=Stephanie+Lo&userId=f4309a31ceee&source=post_page-f4309a31ceee----8de4122b04ad---------------------post_header-----------)
    发表在 [数据科学前沿](https://towardsdatascience.com/?source=post_page-----8de4122b04ad--------------------------------)
    · 11分钟阅读 · 2023年6月2日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8de4122b04ad&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-starter-guide-for-transitioning-your-python-projects-to-r-8de4122b04ad&user=Stephanie+Lo&userId=f4309a31ceee&source=-----8de4122b04ad---------------------clap_footer-----------)'
- en: --
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8de4122b04ad&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-starter-guide-for-transitioning-your-python-projects-to-r-8de4122b04ad&source=-----8de4122b04ad---------------------bookmark_footer-----------)![](../Images/64f3008199729af52d032ea851af2fb9.png)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8de4122b04ad&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-starter-guide-for-transitioning-your-python-projects-to-r-8de4122b04ad&source=-----8de4122b04ad---------------------bookmark_footer-----------)![](../Images/64f3008199729af52d032ea851af2fb9.png)'
- en: Photo by [Milad Fakurian](https://unsplash.com/@fakurian?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Milad Fakurian](https://unsplash.com/@fakurian?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Are you curious about delving into the world of R programming? While Python
    remains the dominant choice amongst the data science community, with approximately
    60% of developers using it in 2022¹, there are instances where R may pop up now
    and again. That’s because R is optimized for statistics and data. If you, like
    me, have a foundation in Python but now encounter job listings and internal company
    tasks that demand R skills, this article aims to break that down. We will explore
    the fundamental distinctions between Python and R and wrap the project into a
    data cleaning and visualization tutorial to ensure a smooth transition to R.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 你是否对深入了解 R 编程感到好奇？虽然 Python 在数据科学社区中仍然是主要选择，2022 年约有 60% 的开发者使用它¹，但有时 R 也会出现。这是因为
    R 针对统计和数据进行了优化。如果你像我一样有 Python 基础，但现在遇到了需要 R 技能的职位列表和公司内部任务，这篇文章旨在为你提供帮助。我们将探索
    Python 和 R 之间的基本区别，并将项目整合到数据清理和可视化教程中，以确保顺利过渡到 R。
- en: 'Note: If you have a keen interest in green technology and electric vehicles,
    the tutorial includes some interesting visuals that showcase the popularity of
    electric and hybrid vehicles in Canada, so feel free to skip ahead to the tutorial
    section to explore these visuals and associated analyses firsthand!'
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注：如果你对绿色技术和电动汽车特别感兴趣，教程中包括一些有趣的视觉图像，展示了电动和混合动力汽车在加拿大的受欢迎程度，所以可以跳到教程部分，亲自查看这些视觉效果和相关分析！
- en: '**A brief breakdown of R**'
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**R 的简要概述**'
- en: R is an open-source, programming language that has a reputation for being used
    primarily in the fields of statistical modelling and data visualization. Originally
    developed in 1993 by statisticians Robert Gentleman and Ross Ihaka, R was designed
    to handle statistical analysis and data transformation tasks It still maintains
    its reputation for being a statistics-focused program. However, thanks to a vast
    library of over 18,000 packages, it has also evolved to support a wide range of
    projects and applications beyond data science over the years.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: R 是一种开源编程语言，主要用于统计建模和数据可视化领域。R 最初由统计学家 Robert Gentleman 和 Ross Ihaka 于 1993
    年开发，旨在处理统计分析和数据转换任务。它仍然保持着以统计为重点的程序声誉。然而，得益于超过 18,000 个软件包的大量库，R 多年来也发展到了支持数据科学以外的广泛项目和应用领域。
- en: When it comes to setup and application, R is commonly used within the RStudio
    environment, which is both free and straightforward to install. You can find an
    installation guide [here](/r-basics-getting-started-with-r-and-rstudio-b47664eb5baf).
    Now that we have covered some initial explanations, let’s move onto our cheatsheet
    transition guide from Python to R.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在设置和应用方面，R 通常在 RStudio 环境中使用，该环境既免费又易于安装。你可以在[这里](/r-basics-getting-started-with-r-and-rstudio-b47664eb5baf)找到安装指南。现在我们已经介绍了一些初步的说明，让我们进入从
    Python 到 R 的速查表过渡指南。
- en: '**Exploring the main differences between Python and R**'
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**探索 Python 和 R 之间的主要区别**'
- en: 'While it is impossible to capture all the nuances between Python and R in one
    image, the diagram below provides a good initial overview of the key differences
    between the two programming languages:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然不可能通过一张图来捕捉 Python 和 R 之间所有的细微差别，但下图提供了两种编程语言之间关键差异的良好初步概述：
- en: '![](../Images/4cbad4a3e0920a1a055c42d1deb577f7.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4cbad4a3e0920a1a055c42d1deb577f7.png)'
- en: Python to R Transition Guide — Image by Author
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Python 到 R 过渡指南 — 作者提供的图像
- en: Please note that this diagram is not exhaustive and does not encompass all distinctions
    between Python and R. For a more detailed, and comprehensive breakdown tailored
    to your specific projects, MIT has a good conversion resource [here](https://www.mit.edu/~amidi/teaching/data-science-tools/conversion-guide/r-python-data-manipulation/).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这张图并不详尽，也没有涵盖 Python 和 R 之间的所有区别。有关更详细和全面的分解，量身定制你的特定项目，MIT 提供了一个很好的转换资源[这里](https://www.mit.edu/~amidi/teaching/data-science-tools/conversion-guide/r-python-data-manipulation/)。
- en: 'So to summarize the the key differences between Python and R, let’s highlight
    a couple of key items:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 总结 Python 和 R 之间的关键区别，让我们重点突出几个关键项目：
- en: '**Syntax**: Python adopts a more straightforward and concise syntax, whereas
    R’s syntax tends to involve a higher usage of parentheses, brackets, and symbols.
    This can make R code initially appear more complex, but we will explore this concept
    later on in the tutorial.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**语法**：Python 采用更直接和简洁的语法，而 R 的语法往往涉及更多的括号、方括号和符号。这可能使得 R 代码最初看起来更复杂，但我们将在教程中进一步探讨这一概念。'
- en: '**Data Manipulation**: Python relies more on external libraries like NumPy
    and pandas for complex data manipulation tasks. In contrast, R often provides
    built-in functions and features specifically tailored for data manipulation.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据操作**：Python更多地依赖于像NumPy和pandas这样的外部库进行复杂的数据操作任务。相比之下，R通常提供专门为数据操作设计的内置函数和功能。'
- en: We can explore these differences in practice to gain a more complete understanding
    of the contrasting aspects of Python and R. Let’s move onto the tutorial section
    where we will go through some simple cleaning and data transformation and explore
    these visuals using data.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过实际探索来了解Python和R的对比方面，从而更全面地理解这些差异。让我们转到教程部分，我们将进行一些简单的数据清洗和转换，并使用数据来探索这些可视化效果。
- en: '**Our R package breakdown**'
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**我们的R包简介**'
- en: 'Before we begin, let’s get familiar with the R packages we will be working
    with:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，让我们熟悉一下我们将使用的R包：
- en: '`**tidyverse**`**:** This package was created to follow the principles of tidy
    data (as the name suggests) and contains many essential packages. Amongst them,
    `dplyr` is popular for its capabilities in data manipulation and transformation,
    and `ggplot2` offers a powerful suite of tools for data visualization.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**tidyverse**`**：** 这个包是按照整洁数据的原则（正如其名字所示）创建的，包含许多基本的包。其中，`dplyr`因其在数据操作和转换方面的能力而受到欢迎，而`ggplot2`则提供了强大的工具套件用于数据可视化。'
- en: '`**sqldf**`: This R package that allows you to perform SQL queries on R data
    frames, providing a more convenient way to apply the SQL syntax for data manipulation
    and analysis within the R environment.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**sqldf**`：这个R包允许您在R数据框上执行SQL查询，为在R环境中应用SQL语法进行数据操作和分析提供了更方便的方式。'
- en: '**Tutorial: Electric Vehicle Licenses in Canada**'
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**教程：加拿大的电动车许可证**'
- en: '![](../Images/a08fa6278bde2b54b2a72d6d00f1e92f.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a08fa6278bde2b54b2a72d6d00f1e92f.png)'
- en: Photo by [Roberto H](https://unsplash.com/@droberobert?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由[Roberto H](https://unsplash.com/@droberobert?utm_source=medium&utm_medium=referral)提供，来自[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: In this tutorial, we will focus on examining the popularity of light and zero-emission
    vehicles following the launch of the Canadian Federal Government’s Incentives
    for Zero-Emission Vehicle Program (iZEV); which is a national program which offers
    financial rebates to Canadians who purchase electric vehicles, including plug-in
    hybrid vehicles*.* Lucky for us, we have access to the Government of Canada’s
    data spanning from the program’s inception in 2019 up until March 2023.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将重点研究加拿大联邦政府推出的零排放车辆激励计划（iZEV）后轻型和零排放车辆的受欢迎程度。这是一个国家性的计划，为购买电动车辆（包括插电混合动力车辆）的加拿大人提供财政回扣。幸运的是，我们可以访问加拿大政府的数据，涵盖了该计划自2019年起至2023年3月的数据。
- en: 'The analysis will be separated into 2 sections: **data loading and cleaning**
    which makes some light comparisons between Python and R, and subsequently the
    **data analysis**. First, let’s outline some of the questions we want answered
    by our visuals to help guide the sections, where the primary focus is on understanding
    the shifts in popularity over time:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 分析将分为两个部分：**数据加载和清洗**，它对Python和R进行了一些轻微的比较，然后是**数据分析**。首先，让我们概述一些我们希望通过我们的可视化回答的问题，重点是理解随时间推移受欢迎程度的变化：
- en: How have the number of vehicles registered under the iZEV program evolved over
    the years?
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 多年来，根据iZEV计划注册的车辆数量如何发展？
- en: What changes have occurred in automaker brand preferences since the implementation
    of the program?
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 自该计划实施以来，汽车制造商品牌偏好发生了哪些变化？
- en: Which vehicle models have experienced the most significant increases and decreases
    in popularity?
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪些车型的受欢迎程度增长或减少最为显著？
- en: To keep the tutorial concise and focused on Python to R transition, analysis
    will be kept fairly broad, however we will show the final produced data visualizations
    to complete a picture on iZEV licenses registered in Canada so far. For a more
    in-depth analysis, including the complete R code, additional markdown, and visuals,
    as well as a link to the dataset, please refer to my GitHub repository [*here*](https://github.com/stephrlo/Python_to_R).
  id: totrans-36
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 为了保持教程简洁，并专注于Python到R的过渡，分析将保持相对广泛，但我们将展示最终生成的数据可视化结果，以完成对加拿大迄今为止注册的iZEV许可证情况的全面了解。如需更深入的分析，包括完整的R代码、额外的Markdown和可视化效果，以及数据集的链接，请参阅我的GitHub仓库[*这里*](https://github.com/stephrlo/Python_to_R)。
- en: '**Data Loading and Cleaning**'
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**数据加载和清洗**'
- en: 'To begin, we will install and load the R packages we mentioned earlier, which
    can be followed out with the following code:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将安装和加载前面提到的R包，可以使用以下代码：
- en: 'Next, let’s load in the packages into our R environment:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们将包加载到我们的R环境中：
- en: To load our data we will use the `<-` operator to assign values to variables,
    as opposed to the `=` operator commonly used in python. After which, we can quickly
    use the `dim` function to retrieve the number of rows and columns of our loaded
    data set which is equivalent to the `numpy.shape()` function in Python.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 为了加载我们的数据，我们将使用`<-`操作符为变量分配值，这与Python中通常使用的`=`操作符不同。之后，我们可以快速使用`dim`函数获取我们加载的数据集的行数和列数，这相当于Python中的`numpy.shape()`函数。
- en: 'In R, you can explore the first rows of a dataframe using the head() function.
    This is similar to the `df.head()` function in Python’s pandas library. Here’s
    an example of how to accomplish this in R:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在R中，你可以使用`head()`函数探索数据框的前几行。这类似于Python pandas库中的`df.head()`函数。以下是如何在R中实现这一操作的示例：
- en: 'The `%>%` operator helps to chain the operations. In the code above it lets
    R know to take the `df` dataframe and then show the first 5 lines, where you would
    have an output like the one below:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`%>%`操作符有助于链式操作。在上面的代码中，它让R知道要取`df`数据框然后显示前5行，你将得到如下输出：'
- en: '![](../Images/40e8cef9b2bea53864f53890294f23ec.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/40e8cef9b2bea53864f53890294f23ec.png)'
- en: After obtaining an initial overview of the data frame and shape, right away
    we can see some irrelevant columns which can be removed. At the same time, we
    can revise some lengthy column names for easier reference later on.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在获得数据框和形状的初始概述之后，我们可以立即看到一些无关紧要的列，这些列可以删除。同时，我们可以修改一些冗长的列名，以便以后更容易地进行参考。
- en: All of these steps can be replicated in Python using `drop()`, `rename()` and
    `map()` functions.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些步骤都可以在Python中使用`drop()`、`rename()`和`map()`函数复制。
- en: 'The next steps of the data cleaning process often entails removing nulls and
    duplicate rows, however for this particular dataset we will only remove nulls
    since we have many duplicate rows, but in the absence of unique row identifiers
    (i.e. license ID) we risk losing valuable data if we remove duplicates, so we
    need to trust that the row inputs are correct. Here’s how you would remove nulls
    in R:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 数据清洗过程的下一步通常涉及删除空值和重复行，但对于这个特定的数据集，我们只会删除空值，因为我们有许多重复行，但在没有唯一行标识符（如许可证ID）的情况下，如果我们删除重复项，则可能会丢失宝贵的数据，因此我们需要相信行输入是正确的。以下是如何在R中删除空值的方法：
- en: The Python row equivalent function of dropping nulls can be called using `dropna()`.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: Python中删除空值的等效函数可以使用`dropna()`调用。
- en: This final step is in preparation for the final question on vehicle make and
    models popularity, where we can make car model naming conventions in the `Vehicle_Make_and_Model`
    column consistent. For example, we would consider ‘Hyundai Ioniq PHEV’ the same
    as ‘Hyundai Ioniq Plug-In hybrid’. We can do this by creating a list and referring
    to it with the `str_replace_all` function.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这最后一步是为了准备关于车辆品牌和型号受欢迎程度的最后一个问题，我们可以使`Vehicle_Make_and_Model`列中的车型命名约定一致。例如，我们将考虑‘Hyundai
    Ioniq PHEV’与‘Hyundai Ioniq 插电混合动力’相同。我们可以通过创建列表，并使用`str_replace_all`函数来实现这一点。
- en: Great, that’s some simple data cleaning out of the way, now onto the interesting
    part, the analysis!
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 很好，数据清洗就这样进行了一些简单的步骤，现在进入有趣的部分，分析！
- en: '**Data Analysis**'
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**数据分析**'
- en: 'The following visuals will explore each of the three questions we had outlined
    at the beginning, and explain how `ggplot` versus `matplotlib` differs. Let’s
    take a look at our first question:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的可视化内容将探讨我们在开始时列出的三个问题，并解释`ggplot`与`matplotlib`的区别。让我们先来看看我们的第一个问题：
- en: How have the number of vehicles registered under the iZEV program evolved over
    the years?
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: iZEV计划下注册的车辆数量随年份的变化如何？
- en: 'Here, we need to visualize years and counts of licenses registered, where the
    R `dplyr` package can be used to edit the `clean_df` data frame so it’s in a suitable
    format. Each row of the data set counts as a vehicle entry, so `summarise(total=n())`
    is required to receive total row counts:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们需要可视化注册年份和许可证数量，可以使用R的`dplyr`包编辑`clean_df`数据框，使其处于适当的格式中。数据集的每一行都计为一个车辆条目，因此需要使用`summarise(total=n())`来获取总行数：
- en: When it comes to plotting data, there are some differences between R’s `ggplot`
    and Python’s plotting libraries. In `ggplot`, a layering syntax is used, where
    different components are added using the `+` operator.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在绘制数据时，R的`ggplot`和Python的绘图库之间存在一些差异。在`ggplot`中，使用层叠语法，通过`+`运算符添加不同的组件。
- en: 'Let’s compare with how you might code this out this exact plot using `matplotlib`
    with Python:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来比较一下你可能用`matplotlib`和Python绘制这个图表的方法：
- en: 'Overall, the length of code is fairly similar between the two, but with R we
    can see the code looks more condensed with the `+` operators. Now, let’s show
    this visual:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，两者之间的代码长度相似，但R中的代码看起来更为简洁，使用了`+`运算符。现在，让我们展示这个可视化：
- en: '![](../Images/b2a7ea2b363ce14624e0133ec9deac96.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b2a7ea2b363ce14624e0133ec9deac96.png)'
- en: Data up until March 2023
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 数据截至到2023年3月
- en: 'I also included a second plot illustrating the breakdown of iZEV recipients
    by province (Full R code can be found in my GitHub Repository [here](https://github.com/stephrlo/Python_to_R)):'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我还包含了第二个图表，展示了各省iZEV受益者的分布情况（完整的R代码可以在我的GitHub仓库[这里](https://github.com/stephrlo/Python_to_R)找到）：
- en: '![](../Images/9c52ba8a8b96cb4a3bd23f6b49fbc20a.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9c52ba8a8b96cb4a3bd23f6b49fbc20a.png)'
- en: Data up until March 2023
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 数据截至到2023年3月
- en: '**Observations**'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**观察**'
- en: 'So what can we see from these two visuals? We can see that there was an overall
    increase in the number of zero-emission vehicles registered under the iZEV program
    from 33,611 licenses in 2019 to 57,564 licenses in 2022, supporting the growing
    transition to electric vehicles in Canada. Note: the EV market represents a small
    position of overall passenger vehicle registrations at ~5%⁴.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 那么我们从这两个可视化中能看到什么？我们可以看到，从2019年的33,611个许可证到2022年的57,564个许可证，在iZEV计划下注册的零排放车辆总数有所增加，支持了加拿大向电动车的过渡。注意：电动车市场在整体乘用车注册中占比很小，约为5%⁴。
- en: Breaking this out by province, we see Quebec accounted for the largest share
    of licenses, surpassing that of BC, Ontario and Other provinces combined, likely
    in part due to higher financial motivations as Québec offers an additional rebate
    of up to $8,000 on top of the Federal government scheme (in contrast BC offers
    only up to $3,000). In addition, a clear mandate to utility company Hydro-Quebec,
    has aided the EV charger infrastructure in the province, helping to ease driver
    concerns of where to recharge.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 按省份划分，我们看到魁北克省占据了许可证的最大份额，超过了BC省、安大略省和其他省份的总和，这可能部分归因于魁北克省提供的额外最高$8,000的折扣，而联邦政府计划则提供相应的补贴（相比之下，BC省仅提供最高$3,000）。此外，对公用事业公司Hydro-Québec的明确要求，帮助省内的电动车充电基础设施的发展，缓解了司机对充电地点的担忧。
- en: Breaking this out by province, we see Québec accounted for the largest share
    of licenses, surpassing that of BC, Ontario and Other provinces combined, likely
    in part due to higher financial motivations as Québec offers an additional rebate
    of up to $8,000 on top of the Federal government scheme (in contrast BC offers
    only up to $3,000). In addition, a clear mandate to utility company Hydro-Québec,
    has aided the EV charger infrastructure in the province, helping to ease driver
    concerns of where to recharge.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 按省份划分，我们看到魁北克省占据了许可证的最大份额，超过了BC省、安大略省和其他省份的总和，这可能部分归因于魁北克省提供的额外最高$8,000的折扣，而联邦政府计划则提供相应的补贴（相比之下，BC省仅提供最高$3,000）。此外，对公用事业公司Hydro-Québec的明确要求，帮助省内的电动车充电基础设施的发展，缓解了司机对充电地点的担忧。
- en: '**2\. What changes have occurred in automaker brand preferences since the implementation
    of the program?**'
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**2\. 自计划实施以来，汽车制造商品牌偏好发生了什么变化？**'
- en: To address our second question, we want to examine changes in popularity among
    automakers. Instead of focusing on absolute totals as we did in the first question,
    we will explore relative changes. By analyzing proportions, we can compare the
    performance of different automakers on a similar scale, allowing for more meaningful
    comparisons.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 为了回答我们的第二个问题，我们想要研究汽车制造商的受欢迎程度变化。与第一个问题中关注绝对总数不同，我们将探讨相对变化。通过分析比例，我们可以在类似的尺度上比较不同汽车制造商的表现，从而进行更有意义的比较。
- en: Now, bear with me here since there is a fair amount of R code before we arrive
    at our next visual, but what we are ultimately going for here are subplots by
    brand showing proportional change year over year. All of the data we have thus
    far only represents absolute counts, so we need to calculate ‘*per 1,000 vehicles
    sold’* for the proportional scale.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 现在请耐心一点，因为在我们到达下一个可视化之前，有相当多的R代码，但我们最终要实现的是按品牌显示的子图，展示年复一年比例变化。到目前为止我们拥有的数据仅代表绝对计数，所以我们需要计算‘*每1,000辆车*’来进行比例缩放。
- en: 'To start we will create a table that shows vehicle brand by year and count
    which we can carry out using the `sqldf` R package:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将创建一个显示车辆品牌按年份和计数的表格，我们可以使用`sqldf` R包来实现。
- en: Next, we want to have each year split out onto its own row where we can use
    the `pivot_wider` function (fairly similar to the `pivot` function in Python).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们希望将每年拆分到自己的行中，在这里我们可以使用`pivot_wider`函数（与Python中的`pivot`函数相似）。
- en: After, we want to calculate the `‘per _1K’` licenses for each year which we
    can do by taking each vehicle count by brand, dividing it by the total vehicles
    registered and multiplying this by 1,000.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们需要计算每年的`‘per_1K’`许可证，这可以通过将每种品牌的车辆计数除以登记的总车辆数，并将其乘以1,000来完成。
- en: Now we want to calculate the difference between 2022 and 2019, looking only
    at complete years in terms of proportional change.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们想计算2022年和2019年的差异，只关注按比例变化的完整年份。
- en: This next step re-pivots the years and the `per_1K` columns that we calculated
    into one long pivot table to help prepare these for our graphs. After, we will
    join the absolute counts and the `per_1K` counts into one long pivot table.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步将计算出的年份和`per_1K`列重新透视成一个长的透视表，以帮助准备这些数据用于图表。之后，我们将绝对计数和`per_1K`计数合并成一个长的透视表。
- en: '`query_vehicle_counts` has everything we need already so we just need to join
    these two:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '`query_vehicle_counts`已经包含了我们所需的一切，所以我们只需将这两个数据集连接起来：'
- en: Lastly, we want to rank each vehicle by their totals by year, which is where
    we can reuse `sqldf` and use window functions to do this easily.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们希望按年份对每辆车进行排名，这样我们可以重用`sqldf`并利用窗口函数轻松完成。
- en: Finally, to plot out how proportions of vehicles have changed over time we can
    use subplots (in `ggplot` this is referred to as `facet_wrap`, this is similar
    to `subplots` in the Python `matplotlib` library).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，为了绘制车辆比例如何随时间变化，我们可以使用子图（在`ggplot`中称为`facet_wrap`，类似于Python `matplotlib`库中的`subplots`）。
- en: 'Here’s our visual:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们的可视化：
- en: '![](../Images/39f8db2400da2296862d2be623a188f4.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/39f8db2400da2296862d2be623a188f4.png)'
- en: '**Observations**'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**观察**'
- en: Having the subplots laid out above show us that when comparing proportions Tesla
    has the largest share of cars, accounting for 300 out of 1000 electric vehicles
    (EVs) on the road in Canada from 2019–2022\. In the past couple of years they
    have lost some market share as newer incoming players have arrived on the Canadian
    market such as Audi, Jeep, Mazda and Polestar.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的子图显示，当比较比例时，特斯拉拥有最大的汽车份额，占2019–2022年加拿大道路上每1,000辆电动汽车（EV）中的300辆。近年来，他们的市场份额有所下降，因为新进入的竞争者如奥迪、吉普、马自达和极星等已经进入加拿大市场。
- en: '**3\. Which vehicle models have experienced the most significant increases
    and decreases in popularity?**'
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**3. 哪些车型经历了最显著的受欢迎程度增加和减少？**'
- en: Our last set of questions focuses on the popularity of specific vehicle models,
    where we can examine the changes in proportions of models purchased between 2019–2022\.
    The code for this analysis is fairly similar to what we used for the previous
    question, exchanging `Vehicle_Make` for `Vehicle_Make_and Model` (again, for a
    more detailed step-by-step guide please refer to my GitHub link [here](https://github.com/stephrlo/Python_to_R)).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们最后一组问题关注特定车型的受欢迎程度，我们可以检查2019–2022年之间购买车型比例的变化。这个分析的代码与我们之前使用的代码非常相似，只需将`Vehicle_Make`替换为`Vehicle_Make_and
    Model`（有关更详细的逐步指南，请参阅我的GitHub链接[这里](https://github.com/stephrlo/Python_to_R)）。
- en: 'Let’s code these out and explore why we see might be seeing these patterns:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们编写这些代码并探索为什么我们可能会看到这些模式：
- en: '![](../Images/60122b7b298885b06d17ff22d1eed07e.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/60122b7b298885b06d17ff22d1eed07e.png)'
- en: '**Observations**'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**观察**'
- en: Based on the graph above we can see that the Hyundai IONIQ 5 saw the biggest
    boost in popularity, where for every 1,000 licenses there were 83 more purchased
    in 2022 versus 2019\. In percentage terms, the model saw an 8.3% increase during
    this time period. It is important to note that the majority of the models that
    saw growth in popularity are SUVs, as evident from the top five listed above.
    This goes with the preferences of the North American market, where consumers have
    awaited larger electric vehicle options, shifting away from smaller sedan formats
    that were previously dominant, such as the Tesla Model 3.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 根据上面的图表，我们可以看到现代IONIQ 5的受欢迎程度最大增长，在2022年每1,000个许可证中比2019年多了83个。从百分比上看，该模型在此期间增长了8.3%。值得注意的是，大多数受欢迎程度上升的模型都是SUV，如上面列出的前五名所示。这与北美市场的偏好一致，消费者期待更大的电动车选项，转向较小的轿车格式，如特斯拉Model
    3。
- en: 'Let’s move onto coding and plotting out the model decreases:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续进行模型减少的编码和绘图：
- en: '![](../Images/9304ae60386ff9ef0a2cd6b1ad2654d6.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9304ae60386ff9ef0a2cd6b1ad2654d6.png)'
- en: '**Observations**'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**观察**'
- en: Whilst still in the Top 5 ranks of most popular automakers, the Toyota Prius
    Prime has seen the biggest drop in popularity, with 114 fewer licences (per 1,000)
    from 2019 to 2022\. The drop may be due to supply issues and raised prices affecting
    popularity, but also since it is a plug-in hybrid model iZEV financial incentives
    are reduced, where you can only get half of the full available rebate offered.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管仍然在前五名最受欢迎汽车制造商中，丰田普锐斯Prime的受欢迎程度却出现了最大下降，从2019年到2022年每1,000个许可证减少了114个。这一下降可能是由于供应问题和价格上涨影响了受欢迎程度，但也因为它是插电式混合动力车型，iZEV财政激励措施减少，你只能获得全额可用折扣的一半。
- en: The Tesla Model 3 saw a decrease in popularity, with a decline of licenses of
    64 per 1,000 licenses, but it is worth noting that Tesla still remains a dominant
    automaker in the market when looking at absolute totals.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 特斯拉Model 3的受欢迎程度有所下降，每1,000个许可证减少了64个许可证，但值得注意的是，当从绝对总数来看，特斯拉依然是市场上的主导汽车制造商。
- en: '**Closing Thoughts**'
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**结束语**'
- en: In conclusion, we have embarked on a mini data analysis project to explore the
    coding differences between Python and R. Hopefully, this has made R feel a little
    more approachable and has lent some inspiration to create compelling visuals on
    your own!
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，我们开展了一个小型数据分析项目，以探索Python和R之间的编码差异。希望这能让R变得更易接近，并为你们创造引人注目的视觉效果提供一些灵感！
- en: As a final, friendly reminder, for access to the full R code, please check out
    my GitHub repository [here](https://github.com/stephrlo/Python_to_R). Happy Coding!
  id: totrans-94
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 作为最后的友好提醒，若要访问完整的R代码，请查看我的GitHub仓库 [这里](https://github.com/stephrlo/Python_to_R)。祝编程愉快！
- en: All images unless otherwise noted are by the author.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 除非另有说明，所有图片均由作者提供。
- en: References
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考文献
- en: SlashData, [State of the Developer Nation](https://slashdata-website-cms.s3.amazonaws.com/sample_reports/plfZ4xvQOitZpOOk.pdf),
    Q1 2023
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SlashData, [开发者国家状况](https://slashdata-website-cms.s3.amazonaws.com/sample_reports/plfZ4xvQOitZpOOk.pdf),
    2023年第一季度
- en: 'M.Omar , [101 Data Science with Munira: Getting started with R and RStudio](/r-basics-getting-started-with-r-and-rstudio-b47664eb5baf),
    Jun 2020 Medium'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: M.Omar， [101 数据科学与Munira：入门R和RStudio](/r-basics-getting-started-with-r-and-rstudio-b47664eb5baf)，2020年6月
    Medium
- en: A.Amidi and S.Amidi, [Data manipulation R-Python conversion guide](https://www.mit.edu/~amidi/teaching/data-science-tools/conversion-guide/r-python-data-manipulation/),
    MIT.edu
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: A.Amidi 和 S.Amidi，[数据操作 R-Python 转换指南](https://www.mit.edu/~amidi/teaching/data-science-tools/conversion-guide/r-python-data-manipulation/)，MIT.edu
- en: Statistics Canada, [Automotive Statistics](https://www.statcan.gc.ca/en/topics-start/automotive),
    March 2023
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 统计加拿大，[汽车统计](https://www.statcan.gc.ca/en/topics-start/automotive)，2023年3月
