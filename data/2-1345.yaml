- en: Introduction to Data Manipulation in R with {dplyr}
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用{dplyr}进行R的数据操作入门
- en: 原文：[https://towardsdatascience.com/introduction-to-data-manipulation-in-r-with-dplyr-ae13383af3d7](https://towardsdatascience.com/introduction-to-data-manipulation-in-r-with-dplyr-ae13383af3d7)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/introduction-to-data-manipulation-in-r-with-dplyr-ae13383af3d7](https://towardsdatascience.com/introduction-to-data-manipulation-in-r-with-dplyr-ae13383af3d7)
- en: Learn to use the {dplyr} package in R which helps you to solve the most common
    data manipulation challenges
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 学习如何使用R中的{dplyr}包，它帮助你解决最常见的数据操作挑战
- en: '[](https://antoinesoetewey.medium.com/?source=post_page-----ae13383af3d7--------------------------------)[![Antoine
    Soetewey](../Images/51d7837d18ff15a62cac2343a485e35d.png)](https://antoinesoetewey.medium.com/?source=post_page-----ae13383af3d7--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ae13383af3d7--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ae13383af3d7--------------------------------)
    [Antoine Soetewey](https://antoinesoetewey.medium.com/?source=post_page-----ae13383af3d7--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://antoinesoetewey.medium.com/?source=post_page-----ae13383af3d7--------------------------------)[![Antoine
    Soetewey](../Images/51d7837d18ff15a62cac2343a485e35d.png)](https://antoinesoetewey.medium.com/?source=post_page-----ae13383af3d7--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ae13383af3d7--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ae13383af3d7--------------------------------)
    [Antoine Soetewey](https://antoinesoetewey.medium.com/?source=post_page-----ae13383af3d7--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ae13383af3d7--------------------------------)
    ·27 min read·Nov 27, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----ae13383af3d7--------------------------------)
    ·27分钟阅读·2023年11月27日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/34f6144f88eb797315f364b70afbc1de.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/34f6144f88eb797315f364b70afbc1de.png)'
- en: Photo by [Claudio Schwarz](https://unsplash.com/@purzlbaum?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由[Claudio Schwarz](https://unsplash.com/@purzlbaum?utm_source=medium&utm_medium=referral)提供
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: In a previous post, we showed how to [manipulate data in R](https://statsandr.com/blog/data-manipulation-in-r/).
    In particular, we illustrated how to create and manipulate vectors, factors, lists
    and data frames. This served as an introduction to R and was aimed at beginners.
    Moreover, as long as it was possible, all manipulations were made in base R, that
    is, without having to load any package.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的帖子中，我们展示了如何[在R中操作数据](https://statsandr.com/blog/data-manipulation-in-r/)。特别是，我们介绍了如何创建和操作向量、因子、列表和数据框。这是对R的介绍，面向初学者。此外，只要可能，所有操作都是在基础R中完成的，即不需要加载任何包。
- en: In this post, we would like to show again how to manipulate data in R, but this
    time using the `{dplyr}` package.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇帖子中，我们将再次展示如何在R中操作数据，但这次使用的是`{dplyr}`包。
- en: 'The `{dplyr}` package, developed by Hadley Wickham and colleagues at posit,
    provides a complete set of functions that help you solve the most common data
    manipulation challenges such as:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '`{dplyr}`包由Hadley Wickham及posit团队开发，提供了一整套功能，帮助你解决最常见的数据操作挑战，例如：'
- en: filtering observations based on their values
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于值过滤观测数据
- en: extracting observations based on their values or positions
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于值或位置提取观测数据
- en: sampling observations based on a specific number or fraction of rows
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于特定数量或比例的行进行观测抽样
- en: sorting observations based on one or several variables
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据一个或多个变量对观测数据进行排序
- en: selecting variables based on their names or positions
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据变量的名称或位置选择变量
- en: renaming variables
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新命名变量
- en: adding new variables based on existing ones
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于现有变量添加新变量
- en: summarizing observations or variables to a single descriptive measure
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将观测数据或变量汇总到一个描述性指标
- en: performing any operation by group
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按组执行任何操作
- en: categorizing observations into two or more groups
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将观测数据分类为两个或多个组
- en: etc.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 等等
- en: More information about the package can be found at [dplyr.tidyverse.org](https://dplyr.tidyverse.org/).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 关于该包的更多信息，请访问[dplyr.tidyverse.org](https://dplyr.tidyverse.org/)。
- en: In this post, we will present the most common functions for data manipulation
    and data management using the `{dplyr}` package (illustrated on a data frame).
    This is however not an exhaustive list! It is likely that you will need other
    functions that the ones presented here. For the interested readers, see the end
    of this post for further resources.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们将介绍使用`{dplyr}`包进行数据操作和数据管理的最常见函数（在数据框上进行说明）。然而，这并不是一个详尽的列表！你可能会需要其他未在此处介绍的函数。对于感兴趣的读者，请参见文章末尾的更多资源。
- en: A question I am often asked is whether it is best to first learn data manipulation
    with base R and *then* with `{dplyr}`, or directly learn `{dplyr}`.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我经常被问到的问题是，是否最好先学习基础R的数据操作，然后再学习`{dplyr}`，还是直接学习`{dplyr}`。
- en: 'Everyone may not agree, but here is what I tend to answer. The interest in
    terms of efficiency and clarity/readability of the code that `{dplyr}` brings
    is obvious. So even when I give a [training](https://datanalyze.be/trainings/)
    targeted to statisticians, I present the `{dplyr}` package. However, I still do
    believe that learning data manipulation with base R is important for two reasons:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 也许每个人不一定同意，但这是我倾向于回答的。`{dplyr}`在效率和代码的清晰度/可读性方面的优势是显而易见的。因此，即使我给统计学家提供[培训](https://datanalyze.be/trainings/)，我也会介绍`{dplyr}`包。然而，我仍然相信，学习基础R的数据操作很重要，原因有二：
- en: Everyone will, at some point, be confronted with code written in base R (either
    from collaboration with other R users, or from code found in textbooks or online).
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每个人在某个时候都会遇到用基础R编写的代码（无论是与其他R用户合作，还是从教科书或在线找到的代码）。
- en: Through the feedback I receive from my students, I notice that `{dplyr}` is
    relatively easy to learn when you are familiar with base R (which is quite rewarding
    for those who struggled at the beginning).
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从我收到的学生反馈中，我发现当你对基础R有所了解时，学习`{dplyr}`相对容易（这对于那些一开始感到困难的人来说非常有成就感）。
- en: 'For these reasons, I tend to teach data manipulation with base R first and
    then slowly switch to `{dplyr}` (up to the point that for some advanced training
    courses, I hardly use base R at all by the end of the course). As a side note,
    this is the approach I follow for data visualization in R as well: I teach first
    how to plot data with base R, then I gradually teach them [how to use](https://statsandr.com/blog/graphics-in-r-with-ggplot2/)
    `[{ggplot2}](https://statsandr.com/blog/graphics-in-r-with-ggplot2/)`.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 基于这些原因，我倾向于先使用基础R教授数据操作，然后逐渐转向`{dplyr}`（以至于在一些高级培训课程中，我几乎完全不使用基础R）。顺便提一句，这也是我在R中进行数据可视化时遵循的方法：我首先教如何使用基础R绘制数据，然后逐步教授[如何使用](https://statsandr.com/blog/graphics-in-r-with-ggplot2/)`[{ggplot2}](https://statsandr.com/blog/graphics-in-r-with-ggplot2/)`。
- en: With this approach, some students may have the impression that they wasted their
    time learning base R. At least, some may have this impression during the training.
    However, as soon as the training is done and they have to learn R by themselves
    or work on real projects, they are grateful of having learned both.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 采用这种方法，一些学生可能会觉得他们学习基础R的时间被浪费了。至少，在培训期间，他们可能有这种印象。然而，一旦培训结束，他们需要自行学习R或从事实际项目时，他们会感激自己学过这两者。
- en: I am curious to hear from other teachers regarding their approach, so feel free
    to share your opinion.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我很想听听其他老师的看法，因此请随时分享你的意见。
- en: Data
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据
- en: 'To present the different functions, we will use the data frame `penguins`,
    available within the `{palmerpenguins}` package (Horst, Hill, and Gorman 2020).
    Data are available by [CC-0](https://creativecommons.org/public-domain/cc0/) license
    and can be downloaded from CRAN:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 为了展示不同的函数，我们将使用数据框`penguins`，该数据框可以在`{palmerpenguins}`包中找到（Horst, Hill, 和 Gorman
    2020）。数据使用[CC-0](https://creativecommons.org/public-domain/cc0/)许可，并可以从CRAN下载：
- en: '[PRE0]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Before going further, we rename the data frame as `dat`:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入之前，我们将数据框重命名为`dat`：
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'I like to call data frames I am working on with a generic name such as `dat`
    for two reasons:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢用诸如`dat`这样的通用名称来命名我正在处理的数据框，原因有二：
- en: Every time I need to write the name of the data frame, it is usually shorter
    to write `dat` than to write the name of the data frame (which is in this case
    `penguins`).
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每次我需要写出数据框的名称时，通常写`dat`比写数据框的完整名称（在此情况下是`penguins`）要简短。
- en: If I need to do similar analyses or plots on different data frames, the code
    I wrote in the past can be reused with only a few modifications. With this very
    simple trick, most of the time I only have to edit the names of the variables,
    but the name of the data frame does not need to be changed (which saves me a lot
    of time).
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我需要对不同的数据框进行类似的分析或绘图，我过去写的代码可以重复使用，只需进行少量修改。通过这个非常简单的技巧，大多数情况下我只需编辑变量的名称，而数据框的名称无需更改（这为我节省了大量时间）。
- en: The data frame contains data for 344 penguins and 8 variables describing the
    species, the island, some measurements of the size of the bill, flipper and body
    mass, the sex and the study year. More information about the data frame can be
    found by running `?penguins` (after loading the `{palmerpenguins}` package).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 数据框包含344只企鹅的数据和8个变量，描述了物种、岛屿、一些喙、鳍和体重的测量、性别和研究年份。有关数据框的更多信息可以通过运行 `?penguins`（在加载
    `{palmerpenguins}` 包后）找到。
- en: For this post, we will focus only on the variables `species`, `body_mass_g`,
    `sex` and `year`.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们将仅关注变量 `species`、`body_mass_g`、`sex` 和 `year`。
- en: 'Before proceeding with the different data manipulation techniques, let’s first
    inspect the data by displaying its structure, the first 6 rows and a summary of
    it:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行不同的数据处理技术之前，让我们首先通过显示数据的结构、前6行和总结来检查数据：
- en: '[PRE2]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '{dplyr} package'
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '{dplyr} 包'
- en: Without further ado, let’s illustrate the different functions for data manipulation
    available in the `{dplyr}` package in the following sections.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 毫无废话，让我们在接下来的部分中说明 `{dplyr}` 包中可用于数据处理的不同函数。
- en: 'As for any package, we first need to install and load it before using it:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 和任何包一样，我们首先需要安装并加载它才能使用：
- en: '[PRE8]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Note that all functions presented below requires tidy data, which means that:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，下面介绍的所有函数都需要整洁数据，这意味着：
- en: each variable is in its own column,
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个变量都有自己的列，
- en: each observation, or case, is in its own row, and
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个观测值或案例都有自己的行，并且
- en: each value is in its own cell.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个值都有自己的单元格。
- en: Filter observations
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 筛选观测值
- en: 'Filtering observations based on their values can be done with the `filter()`
    function. This function works on both [quantitative](https://statsandr.com/blog/variable-types-and-examples/#quantitative)
    and [qualitative](https://statsandr.com/blog/variable-types-and-examples/#qualitative)
    variables:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用 `filter()` 函数根据观测值进行筛选。这个函数适用于 [定量](https://statsandr.com/blog/variable-types-and-examples/#quantitative)
    和 [定性](https://statsandr.com/blog/variable-types-and-examples/#qualitative) 变量：
- en: '[PRE9]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'You can combine several conditions with `&` (if the conditions must be cumulative)
    or `|` (if the conditions are alternatives), for instance:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 `&` 组合多个条件（如果条件必须是累积的）或 `|`（如果条件是替代的），例如：
- en: '[PRE13]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Notice that variable names do *not* have to be written inside single nor double
    quotation marks (`''` or `""`). This is the case for all functions presented below.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，变量名*不*必需要写在单引号或双引号内（`''`或`""`）。下面介绍的所有函数都是如此。
- en: The pipe operator
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管道操作符
- en: As you can see from the code above, the `filter()` functions requires the name
    of the data frame as first argument, then the condition (with the usual logical
    operators `>`, `<`, `>=`, `<=`, `==`, `!=`, `%in%`, etc.) as second argument.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 从上面的代码可以看出，`filter()` 函数需要将数据框的名称作为第一个参数，然后是条件（使用常见的逻辑操作符 `>`, `<`, `>=`, `<=`,
    `==`, `!=`, `%in%` 等）作为第二个参数。
- en: 'Specifying the name of the data frame as first argument is required for all
    functions presented in this list. However, there is a workaround to specifying
    the data frame’s name inside the functions: the pipe operator (`|>` or `%>%`).'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 所有列表中介绍的函数都需要将数据框的名称作为第一个参数。然而，指定数据框名称有一种变通办法：管道操作符（`|>` 或 `%>%`）。
- en: The pipe operator allows to perform a sequence of several operations, that is,
    chain a sequence of calculations together. It is particularly useful when you
    are performing several operations on a data frame, and you do not want to save
    the output at each intermediate step. We will see below how to use the pipe operator
    with several operations, but for now I would like to introduce it with only one
    operation at a time.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 管道操作符允许执行一系列操作，即将一系列计算连接在一起。当你对数据框执行多个操作时特别有用，你不想在每个中间步骤保存输出。我们将在下面看到如何使用管道操作符进行多个操作，但现在我想先介绍单次操作的使用。
- en: As you can see with the `filter()` function, the pipe operator is not compulsory.
    However, I recommend it so much (even to beginners) for its easy of use, convenience,
    code readability and popularity that from now on functions available in `{dplyr}`
    will be presented together with the pipe operator.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，使用`filter()`函数时，管道操作符不是强制性的。然而，我强烈推荐它（即使是对初学者），因为它易于使用、方便、代码可读性高且流行，从现在起，`{dplyr}`中可用的函数将与管道操作符一起展示。
- en: 'So with the pipe operator, the code above becomes:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 所以使用管道操作符，上述代码变成了：
- en: '[PRE15]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The pipe operator simply takes the results of one operation into the next operation
    below it, making the code extremely easy to write and read.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 管道操作符只是将一个操作的结果传递到下一个操作，使代码极其易于编写和阅读。
- en: This way, instead of specifying the data frame’s name as first argument in the
    `filter()` function (or any other function within the `{dplyr}` package), we simply
    specify the data frame’s name and then the desired function, combined together
    thanks to the pipe operator.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这样一来，我们不再需要在`filter()`函数（或`{dplyr}`包中的任何其他函数）中将数据框的名称作为第一个参数，而是简单地指定数据框的名称，然后结合管道操作符与所需的函数。
- en: Extract observations
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提取观察值
- en: 'It is possible to extract observations based on:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 可以基于以下内容提取观察值：
- en: their positions, or
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们的位置，或
- en: their values.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们的值。
- en: Based on their positions
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于它们的位置
- en: 'Extracting observations based on their positions can be done with the `slice()`
    function:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 基于它们的位置提取观察值可以使用`slice()`函数：
- en: '[PRE21]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Moreover, extracting the first or last rows can be done with `slice_head()`
    and `slice_tail()`:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，提取第一行或最后一行可以使用`slice_head()`和`slice_tail()`：
- en: '[PRE23]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Based on their values
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于它们的值
- en: 'To extract observations based on values of a variable, use:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 要根据变量的值提取观察值，请使用：
- en: '`slice_min()` to select rows with the **lowest** values (with a defined proportion),
    and'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`slice_min()`用于选择具有**最低**值的行（按定义的比例），并且'
- en: '`slice_max()` to select rows with the **highest** values (with a defined proportion).'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`slice_max()`用于选择具有**最高**值的行（按定义的比例）。'
- en: '[PRE27]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Sample observations
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 采样观察值
- en: 'Sampling observations can be done in two ways:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 采样观察值可以通过两种方式完成：
- en: Random sample of a **number** of rows with `sample_n()`
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`sample_n()`随机抽取**数量**的行
- en: Random sample of a **fraction** of rows with `sample_frac()`
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`sample_frac()`随机抽取**比例**的行
- en: '[PRE31]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[PRE34]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Note that, as with the `sample()` function within base R, `size` can be greater
    than the size of the data frame. In this case, some rows will be duplicated, and
    you will need to specify the argument `replace = TRUE`.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，与基础R中的`sample()`函数一样，`size`可以大于数据框的大小。在这种情况下，某些行将会重复，你需要指定参数`replace = TRUE`。
- en: 'Alternatively, it is possible to obtain a random sample of a number of rows
    or fraction or rows with `slice_sample()`. For this, use:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，可以使用`slice_sample()`获得随机样本的行数或行的比例。为此，请使用：
- en: the argument `n` to select a number of rows, or
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参数`n`用于选择行的数量，或
- en: the argument `prop` to select a fraction of rows.
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参数`prop`用于选择行的比例。
- en: '[PRE35]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Sort observations
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 排序观察值
- en: 'Sorting observations can be done with the `arrange()` function:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`arrange()`函数对观察值进行排序：
- en: '[PRE39]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'By default, `arrange()` uses the **ascending** order. To sort in **descending**
    order, use `desc()` inside `arrange()`:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`arrange()`使用**升序**。要按**降序**排序，请在`arrange()`内部使用`desc()`：
- en: '[PRE41]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'As with `filter()`, `arrange()` can be used for several variables and works
    both on quantitative and qualitative variables:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 与`filter()`一样，`arrange()`可以用于多个变量，并且对定量和定性变量都有效：
- en: '[PRE43]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: The code above sorts the observations first based on the sex (in alphabetical
    order) and then based on the body mass (in ascending order, so from lowest to
    highest).
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码首先根据性别（按字母顺序）排序观察值，然后根据体重（按升序，从最低到最高）排序。
- en: Note that if the qualitative variable is defined as an ordered [factor](https://statsandr.com/blog/data-types-in-r/#factor),
    the sorting is based on level order, not alphabetical order!
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果定性变量被定义为有序的[因子](https://statsandr.com/blog/data-types-in-r/#factor)，则排序是基于级别顺序，而不是字母顺序！
- en: Select variables
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择变量
- en: 'Selecting variables can be done with the `select()` function, based on:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 选择变量可以使用`select()`函数，基于：
- en: the position of the variable(s), or
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 变量的位置，或
- en: the name(s) of the variable(s).
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 变量的名称。
- en: '[PRE45]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[PRE46]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '[PRE47]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Note that it is also possible to remove variables. For this, use the `-` sign
    in front of their positions or names:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，也可以删除变量。为此，请在其位置或名称前使用`-`符号：
- en: '[PRE49]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '[PRE50]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[PRE51]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[PRE52]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'It is also possible to select variables with a sequence of names:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以使用一系列名称选择变量：
- en: '[PRE53]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '[PRE54]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Last but not least, `select()` can also be used as an easy way to rearrange
    columns in the desired order:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 最后但同样重要的是，`select()`也可以作为一种简便的方法来重新排列列的顺序：
- en: '[PRE55]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '[PRE56]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Rename variables
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重命名变量
- en: 'To rename variables, use the `rename()` function:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 要重命名变量，请使用`rename()`函数：
- en: '[PRE57]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '[PRE58]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: This might not be intuitive (at least it was not for me at the time of learning
    this package), so bear in mind that you always need to write first the new name
    and then the old name (separated with the `=` sign).
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能不是直观的（至少在我学习这个包时不是），所以请记住，您总是需要先写新名称，然后再写旧名称（用`=`符号分隔）。
- en: Create or modify variables
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建或修改变量
- en: 'You can create or modify certain variables of the data frame with `mutate()`,
    based on:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`mutate()`创建或修改数据框中的某些变量，基于：
- en: another variable, or
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 另一个变量，或
- en: a vector of your choice.
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择的向量。
- en: '[PRE59]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: '[PRE60]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: '[PRE61]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: '[PRE62]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: Note that if you create a variable with a name which already exists in the data
    frame, the old variable will be erased and replaced by the new one.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果您创建了一个已在数据框中存在的名称的变量，旧变量将被新变量替换。
- en: Like `rename()`, `mutate()` requires the argument to be written as `name = expression`,
    where `name` is name of the column created or modified and `expression` is the
    formula for calculating the values.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 与`rename()`类似，`mutate()`要求参数写成`name = expression`的形式，其中`name`是创建或修改的列的名称，`expression`是计算值的公式。
- en: Summarize observations
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结观察
- en: 'Often, you will want to summarize the data with some [descriptive statistics](https://statsandr.com/blog/descriptive-statistics-in-r/).
    This can be done with the `summarize()` function, in addition to most functions
    used for descriptive statistics (`mean()`, `median()`, `min()`, `max()`, `sd()`,
    `var()`, etc.):'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，您会想要用一些[描述性统计量](https://statsandr.com/blog/descriptive-statistics-in-r/)来总结数据。这可以通过`summarize()`函数完成，此外还有大多数用于描述性统计量的函数（`mean()`，`median()`，`min()`，`max()`，`sd()`，`var()`等）：
- en: '[PRE63]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: '[PRE64]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'Note that:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意：
- en: The `na.rm = TRUE` argument is used to omit missing values in the computation
    of the summary statistics.
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`na.rm = TRUE`参数用于在计算总结统计量时忽略缺失值。'
- en: '`summarize()` and `summarise()` give the exact same results.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`summarize()`和`summarise()`给出完全相同的结果。'
- en: Identify distinct values
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 识别不同的值
- en: 'Identifying distinct values of a variable can be done with `distinct()`:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`distinct()`来识别变量的不同值：
- en: '[PRE65]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: '[PRE66]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: Identifying distinct values is mostly done on qualitative or quantitative discrete
    variables, but it can be done on any type of variable and with several variables
    at the same time. If more than one variables is specified, it returns all the
    combinations of values of the variables.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 识别不同的值主要在定性或定量离散变量上进行，但它可以在任何类型的变量以及多个变量上同时进行。如果指定了多个变量，它会返回变量值的所有组合。
- en: 'For instance, with species and study year:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，按物种和研究年份：
- en: '[PRE67]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: '[PRE68]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Connected operations
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接操作
- en: Another advantage of using the `{dplyr}` package is that several operations
    can be connected all at once, with great readability of the code. This can easily
    be done with the pipe operator (`|>` or `%>%`) introduced earlier.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`{dplyr}`包的另一个优点是可以一次连接多个操作，使代码的可读性大大提高。这可以轻松通过之前介绍的管道操作符（`|>`或`%>%`）来实现。
- en: 'Until now, we have always seen the same structure: we call a data frame, and
    then we apply an operation on that data frame. From now on, we will see how to
    combine more operations into one single chain of operations.'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们一直看到相同的结构：我们调用一个数据框，然后对该数据框应用一个操作。从现在开始，我们将看到如何将更多操作组合成一个单一的操作链。
- en: Group by
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 按组
- en: '`group_by()` allows to modify the way the basic functions are performed. Instead
    of covering all the rows of the data frame, the operations will cover each of
    the groups of rows defined by the grouping command. In this way, aggregation operations,
    using `summarize()`, will produce statistics for each group rather than for all
    observations.'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '`group_by()`允许修改基本函数的执行方式。操作将覆盖由分组命令定义的每个行组，而不是数据框的所有行。通过这种方式，使用`summarize()`的聚合操作将为每个组生成统计数据，而不是所有观察值。'
- en: For example, we might be interested in computing some descriptive statistics
    of a quantitative variable, for each level of a qualitative variable (so by group).
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可能对计算定量变量在每个定性变量水平（即按组）上的一些描述性统计量感兴趣。
- en: 'In our case, suppose we would like to compute the mean and standard deviation
    of the body mass, but this time separately for each species:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的例子中，假设我们想分别计算每种物种的体重均值和标准差：
- en: '[PRE69]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: '[PRE70]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'Applied to the example above, here is how the pipe operator works:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 应用到上述示例，管道操作符的工作方式如下：
- en: The first operation (`group_by()`) groups observations by species.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一个操作（`group_by()`）按物种分组观察值。
- en: 'Then the output of the first operation is used as the input for the second
    operation (`summarize()`): mean and standard deviation are computed on body mass.'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，第一个操作的输出被用作第二个操作（`summarize()`）的输入：计算体重的均值和标准差。
- en: As a result, we have the mean and standard deviation of body mass by group.
    As you can imagine, all previous operations can be connected to match your needs.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是按组计算的体重均值和标准差。正如你所想，所有先前的操作都可以连接以满足你的需求。
- en: 'Also note that `group_by()` can be used for several grouping variables at the
    same time:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 同时注意，`group_by()` 可以用于多个分组变量：
- en: '[PRE71]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: '[PRE72]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: (Note that, as for all connected operations, the name of the data frame needs
    to be specified only in the first operation.)
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: （注意，对于所有连接操作，数据框的名称只需在第一次操作中指定。）
- en: Number of observations
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 观察值的数量
- en: Some operations can only be performed inside other operations.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 一些操作只能在其他操作内部执行。
- en: 'This is the case with the number of observations `n()`, which can only be used
    inside `summarize()`:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 这是观察值 `n()` 的情况，这只能在 `summarize()` 内部使用：
- en: '[PRE73]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: '[PRE74]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'To refer with the previous connected operation `group_by()`, we can compute
    the number of observations by group using the two operations `n()` and `group_by()`
    separated by the pipe operator:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 为了参考之前的连接操作 `group_by()`，我们可以使用管道操作符分隔的两个操作 `n()` 和 `group_by()` 来计算每组的观察值数量：
- en: '[PRE75]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: '[PRE76]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: Note that `n()` accepts no parameters and is therefore always written with empty
    parentheses.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 注意 `n()` 不接受任何参数，因此总是写为空括号。
- en: 'Moreover, note also that the `count()` function is equivalent to `summarize(n
    = n())`:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，请注意，`count()` 函数等同于 `summarize(n = n())`：
- en: '[PRE77]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: '[PRE78]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '[PRE79]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '[PRE80]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: Number of distinct values
  id: totrans-210
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不同值的数量
- en: '`n_distinct()`, which can also be used only inside `summarize()`, computes
    the number of different values/levels of a variable or combination of variables:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '`n_distinct()`，它也只能在 `summarize()` 内部使用，计算变量或变量组合的不同值/级别的数量：'
- en: '[PRE81]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: '[PRE82]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: '[PRE83]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: '[PRE84]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: 'Note that you do not have to specify a name for the output. In that case, the
    name of the operation will be used. For example:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，你不必为输出指定名称。在这种情况下，将使用操作的名称。例如：
- en: '[PRE85]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: '[PRE86]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: First, last or nth value
  id: totrans-219
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 首个、最后一个或第 n 个值
- en: 'Also only available inside `summarize()`, the first, last or nth value can
    be found with the following commands:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 也仅在 `summarize()` 内部可用，第一个、最后一个或第 n 个值可以通过以下命令找到：
- en: '[PRE87]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: '[PRE88]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: '[PRE89]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: '[PRE90]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: '[PRE91]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: '[PRE92]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: Several interesting arguments exist within this function to deal with missing
    values. For the interested reader, see more information in the documentation of
    the function (run `?nth()`).
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个函数中存在一些处理缺失值的有趣参数。感兴趣的读者可以在函数文档中查看更多信息（运行 `?nth()`）。
- en: If else
  id: totrans-228
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如果 else
- en: A very common data transformation is the well known “if else” technique. This
    technique is usually used to create, from an existing variable, another variable
    which can take **two levels**.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 一种非常常见的数据转换是众所周知的“if else”技术。这种技术通常用于从现有变量创建另一个可以取 **两个级别** 的变量。
- en: 'Suppose that we want to create a new variable called `body_mass_cat`, which
    takes the value “High” when `body_mass_g` is equal or greater than a certain threshold,
    “Low” otherwise. This transformation can be performed with the combination of
    `mutate()` and `if_else()`:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们想创建一个名为 `body_mass_cat` 的新变量，当 `body_mass_g` 等于或大于某个阈值时取值“High”，否则取“Low”。这种转换可以通过
    `mutate()` 和 `if_else()` 的组合来完成：
- en: '[PRE93]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: '[PRE94]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: 'The `if_else()` function works with 3 arguments:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '`if_else()` 函数接受 3 个参数：'
- en: 'The condition (in our case: `body_mass_g >= 4000`)'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 条件（在我们的例子中：`body_mass_g >= 4000`）
- en: The output value when the condition is true (`High` in our case).
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当条件为真时的输出值（在我们的例子中是 `High`）。
- en: The output value when the conditions is false (`Low` in our case).
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当条件为假时的输出值（在我们的例子中是 `Low`）。
- en: As you can see from the table above, when body mass is missing, `if_else()`
    also returns a missing value, which is often a good thing to prevent observations
    being classified erroneously.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 如上表所示，当体重缺失时，`if_else()` 也会返回缺失值，这通常是防止观察值被错误分类的好方法。
- en: Case when
  id: totrans-238
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 情况
- en: If you want to categorize a variable into **more than two levels**, an if else
    is not the most appropriate tool. In these cases, a “case when” is more appropriate.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想将变量分类为 **两个以上的级别**，`if_else` 不是最合适的工具。在这种情况下，“情况”更为合适。
- en: For your information, when I learned R, I used to write nested if else functions,
    that is, a secondary if else inside a primary if else. Most of the time it worked
    (with very often a waste of time trying to debug my code), but it is very easy
    to make a mistake. And even if you managed to make it work, the code is not easy
    to read at all!
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 供您参考，当我学习 R 时，我曾经编写过嵌套的 if else 函数，即在主要的 if else 中嵌入二级的 if else。大多数时候它有效（虽然经常需要花费大量时间调试代码），但很容易出错。即使你成功让它工作，代码也很难阅读！
- en: So I highly recommend using this case when technique instead of several if else
    functions nested within each other.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我强烈建议使用 case when 技术，而不是多个相互嵌套的 if else 函数。
- en: 'Suppose we want to classify body mass into 3 categories: low, medium and high.
    For this illustration, we arbitrarily decide that body mass is low when it is
    strictly lower than 3500, high when it is strictly higher than 4750 and medium
    otherwise.'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们想将体重分为 3 类：低、中和高。为了说明，我们随意决定体重低于 3500 时为低，超过 4750 时为高，其余为中。
- en: 'With nested if else functions, here is the code we would need to write:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 使用嵌套的 if else 函数，我们需要编写如下代码：
- en: '[PRE95]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: '[PRE96]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: 'This code works as follows:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码的工作原理如下：
- en: It evaluates the first condition `body_mass_g < 3500`.
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它评估第一个条件 `body_mass_g < 3500`。
- en: If it is true, `body_mass_cat` is `Low`. On the contrary, if it is false, it
    evaluates the second condition `body_mass_g > 4750`.
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果是真的，`body_mass_cat` 是 `Low`。相反，如果为假，它将评估第二个条件 `body_mass_g > 4750`。
- en: If this second condition is true, `body_mass_cat` is `High`, otherwise it is
    `Medium`.
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果第二个条件为真，`body_mass_cat` 是 `High`，否则是 `Medium`。
- en: As you can see from the results above, it works. However, you will concede that
    it is easy to make coding mistakes, and that the code is not easy to write nor
    to read.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 从上述结果可以看出，它有效。然而，你会承认容易出现编码错误，而且代码既难以编写也难以阅读。
- en: 'To improve this workflow, we now use the case when technique:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 为了改进这个工作流程，我们现在使用 case when 技术：
- en: '[PRE97]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: '[PRE98]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: This workflow is much simpler to code and read!
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 这个工作流程更易于编码和阅读！
- en: 'If there are no missing values in the variable(s) used for the condition(s),
    it can even be simplified to:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用于条件的变量中没有缺失值，它甚至可以简化为：
- en: '[PRE99]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: '[PRE100]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: As you can see, a default output can be specified with `.default` for observations
    that do not match any of the conditions.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，对于不符合任何条件的观察，可以通过 `.default` 指定一个默认输出。
- en: However, be careful if there are missing values! Indeed, if there is at least
    one missing value (as in our case), the code above is not correct because observations
    with missing `body_mass_g` will be misclassified as `Medium`.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果存在缺失值，请小心！确实，如果至少有一个缺失值（如我们的案例），上述代码是不正确的，因为缺失 `body_mass_g` 的观察将被误分类为
    `Medium`。
- en: 'Therefore, if you really want to specify a default output, I recommend using
    the code below which keeps missing values as `NA`:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果你真的想指定一个默认输出，我建议使用下面的代码，它将缺失值保留为 `NA`：
- en: '[PRE101]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: '[PRE102]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: I personally prefer to write all categories and not write a default option for
    improved code readability and robustness of my code, but it is more a personal
    opinion.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 我个人更喜欢编写所有类别，而不写默认选项，以提高代码的可读性和健壮性，但这更是一种个人观点。
- en: In all cases, no matter if you used an if else or a case when, it is a good
    practice to check the variable you just created to make sure that you obtain the
    intended results.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有情况下，无论你使用的是 if else 还是 case when，检查你刚创建的变量以确保获得预期结果是一种良好实践。
- en: Conclusion and other resources
  id: totrans-265
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论和其他资源
- en: Thanks for reading.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 谢谢阅读。
- en: This article introduced and illustrated the most common data manipulation and
    data management tools in R, using the `{dplyr}` package. We also introduced the
    pipe operator, well known to users of modern R packages.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 本文介绍并说明了在 R 中最常见的数据操作和数据管理工具，使用了 `{dplyr}` 包。我们还介绍了管道操作符，现代 R 包的用户非常熟悉。
- en: 'The `{dplyr}` package offers many more functions for data manipulation (in
    particular to merge data frames with the family of `join()` functions). If you
    would like to learn more about this package, I recommend starting with the following
    resources:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '`{dplyr}` 包提供了更多的数据操作函数（特别是使用 `join()` 函数系列合并数据框）。如果你想了解更多关于这个包的内容，我推荐从以下资源开始：'
- en: '[dplyr.tidyverse.org](https://dplyr.tidyverse.org/)'
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[dplyr.tidyverse.org](https://dplyr.tidyverse.org/)'
- en: '[Chapter “Data transformation”](https://r4ds.hadley.nz/data-transform.html)
    in the book “R for Data Science”'
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[书籍《R for Data Science》中的“数据转换”章节](https://r4ds.hadley.nz/data-transform.html)'
- en: '[Cheatsheet](https://github.com/rstudio/cheatsheets/blob/main/data-transformation.pdf)'
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[备忘单](https://github.com/rstudio/cheatsheets/blob/main/data-transformation.pdf)'
- en: '[Vignette](https://dplyr.tidyverse.org/articles/dplyr.html)'
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[说明书](https://dplyr.tidyverse.org/articles/dplyr.html)'
- en: For those who are used to base R, a [vignette](https://cran.r-project.org/web/packages/dplyr/vignettes/base.html)
    comparing `{dplyr}` functions to their base R equivalents
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于习惯于基础 R 的用户，[说明书](https://cran.r-project.org/web/packages/dplyr/vignettes/base.html)
    比较了 `{dplyr}` 函数与其基础 R 等效函数
- en: As always, if you have a question or a suggestion related to the topic covered
    in this article, please add it as a comment so other readers can benefit from
    the discussion.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 一如既往，如果你对本文涉及的主题有任何问题或建议，请将其作为评论添加，以便其他读者也能从讨论中受益。
- en: References
  id: totrans-275
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: 'Horst, Allison Marie, Alison Presmanes Hill, and Kristen B Gorman. 2020\. *Palmerpenguins:
    Palmer Archipelago (Antarctica) Penguin Data*. [https://doi.org/10.5281/zenodo.3960218](https://doi.org/10.5281/zenodo.3960218).'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 'Horst, Allison Marie, Alison Presmanes Hill, 和 Kristen B Gorman. 2020\. *Palmerpenguins:
    Palmer Archipelago (Antarctica) Penguin Data*. [https://doi.org/10.5281/zenodo.3960218](https://doi.org/10.5281/zenodo.3960218).'
- en: The keyboard shortcut for the pipe operator is `ctrl + shift + m` (Windows)
    or `cmd + shift + m` (Mac). It will print `%>%`, unless you specified to use the
    native pipe operator `|>` in the settings of RStudio.[↩︎](https://statsandr.com/blog/introduction-to-data-manipulation-in-r-with-dplyr/#fnref1)
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 管道操作符的键盘快捷键是 `ctrl + shift + m`（Windows）或 `cmd + shift + m`（Mac）。它将打印 `%>%`，除非你在
    RStudio 的设置中指定使用原生管道操作符 `|>`。[↩︎](https://statsandr.com/blog/introduction-to-data-manipulation-in-r-with-dplyr/#fnref1)
- en: Related articles
  id: totrans-278
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 相关文章
- en: '[Top 10 errors in R and how to fix them](https://statsandr.com/blog/top-10-errors-in-r/)'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[R 中的十大错误及其修复方法](https://statsandr.com/blog/top-10-errors-in-r/)'
- en: '[One-sample Wilcoxon test in R](https://statsandr.com/blog/one-sample-wilcoxon-test-in-r/)'
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[R 中的单样本 Wilcoxon 检验](https://statsandr.com/blog/one-sample-wilcoxon-test-in-r/)'
- en: '[Hypothesis test by hand](https://statsandr.com/blog/hypothesis-test-by-hand/)'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[手动假设检验](https://statsandr.com/blog/hypothesis-test-by-hand/)'
- en: '[ANOVA in R](https://statsandr.com/blog/anova-in-r/)'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[R 中的 ANOVA](https://statsandr.com/blog/anova-in-r/)'
- en: '[Correlation coefficient and correlation test in R](https://statsandr.com/blog/correlation-coefficient-and-correlation-test-in-r/)'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[R 中的相关系数和相关性测试](https://statsandr.com/blog/correlation-coefficient-and-correlation-test-in-r/)'
- en: '*Originally published at* [*https://statsandr.com*](https://statsandr.com/blog/introduction-to-data-manipulation-in-r-with-dplyr/)
    *on November 27, 2023.*'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: '*最初发表于* [*https://statsandr.com*](https://statsandr.com/blog/introduction-to-data-manipulation-in-r-with-dplyr/)
    *于 2023 年 11 月 27 日。*'
