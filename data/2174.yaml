- en: Working with Geospatial Data at the Postcode Level
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在邮政编码级别处理地理空间数据
- en: 原文：[https://towardsdatascience.com/working-with-geospatial-data-at-the-postcode-level-3c9f79d866b3?source=collection_archive---------9-----------------------#2023-07-06](https://towardsdatascience.com/working-with-geospatial-data-at-the-postcode-level-3c9f79d866b3?source=collection_archive---------9-----------------------#2023-07-06)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/working-with-geospatial-data-at-the-postcode-level-3c9f79d866b3?source=collection_archive---------9-----------------------#2023-07-06](https://towardsdatascience.com/working-with-geospatial-data-at-the-postcode-level-3c9f79d866b3?source=collection_archive---------9-----------------------#2023-07-06)
- en: How to associate “point” postcodes with area census data
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何将“点”邮政编码与区域普查数据关联起来
- en: '[](https://lakshmanok.medium.com/?source=post_page-----3c9f79d866b3--------------------------------)[![Lak
    Lakshmanan](../Images/9faaaf72d600f592cbaf3e9089cbb913.png)](https://lakshmanok.medium.com/?source=post_page-----3c9f79d866b3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3c9f79d866b3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3c9f79d866b3--------------------------------)
    [Lak Lakshmanan](https://lakshmanok.medium.com/?source=post_page-----3c9f79d866b3--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://lakshmanok.medium.com/?source=post_page-----3c9f79d866b3--------------------------------)[![Lak
    Lakshmanan](../Images/9faaaf72d600f592cbaf3e9089cbb913.png)](https://lakshmanok.medium.com/?source=post_page-----3c9f79d866b3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3c9f79d866b3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3c9f79d866b3--------------------------------)
    [Lak Lakshmanan](https://lakshmanok.medium.com/?source=post_page-----3c9f79d866b3--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F247b0630b5d6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fworking-with-geospatial-data-at-the-postcode-level-3c9f79d866b3&user=Lak+Lakshmanan&userId=247b0630b5d6&source=post_page-247b0630b5d6----3c9f79d866b3---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----3c9f79d866b3--------------------------------)
    ·9 min read·Jul 6, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F3c9f79d866b3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fworking-with-geospatial-data-at-the-postcode-level-3c9f79d866b3&user=Lak+Lakshmanan&userId=247b0630b5d6&source=-----3c9f79d866b3---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F247b0630b5d6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fworking-with-geospatial-data-at-the-postcode-level-3c9f79d866b3&user=Lak+Lakshmanan&userId=247b0630b5d6&source=post_page-247b0630b5d6----3c9f79d866b3---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----3c9f79d866b3--------------------------------)
    · 9分钟阅读 · 2023年7月6日 [](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F3c9f79d866b3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fworking-with-geospatial-data-at-the-postcode-level-3c9f79d866b3&user=Lak+Lakshmanan&userId=247b0630b5d6&source=-----3c9f79d866b3---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3c9f79d866b3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fworking-with-geospatial-data-at-the-postcode-level-3c9f79d866b3&source=-----3c9f79d866b3---------------------bookmark_footer-----------)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3c9f79d866b3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fworking-with-geospatial-data-at-the-postcode-level-3c9f79d866b3&source=-----3c9f79d866b3---------------------bookmark_footer-----------)'
- en: In some countries, postcodes are points or routes and not areas. For example,
    the last three digits of a Canadian postcode correspond to the local delivery
    unit which may correspond to houses on one side of a street or rural route. Similarly,
    UK postcodes have a postcode of the form “YO8 9UR”. This could be as small as
    a single building in London. In a 5+4 US zipcode, the last four numbers determine
    a postal delivery route (so, a set of addresses) and not an area. Contrary to
    common belief, US 5-digit zipcodes are not areas either — they are simply a collection
    of the 5+4 postal routes, typically served from a single post office.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在一些国家，邮政编码是点或路线，而非区域。例如，加拿大邮政编码的最后三位数字对应于本地投递单元，可能对应于街道一侧或乡村路线上的房屋。类似地，英国的邮政编码形式为“YO8
    9UR”。这可以小到伦敦的一座建筑。在5+4的美国邮政编码中，最后四位数字决定了一个邮政投递路线（即一组地址），而不是一个区域。与普遍认为的相反，美国5位数的邮政编码也不是区域——它们只是5+4邮政路线的集合，通常由一个邮局提供服务。
- en: France, as befits the originator of the metric system, is very logical. In France,
    postcodes correspond to an area — the last two digits correspond to the arrondissement,
    thus 75008 corresponds to the 8th arrondissement of Paris and is truly an area.
    Mail delivery routes are probably suboptimal, though.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 法国作为公制系统的发源地，非常逻辑化。在法国，邮政编码对应于一个区域——最后两位数字对应于区，因此 75008 对应于巴黎的第八区，确实是一个区域。然而，邮件配送路线可能并不最佳。
- en: Because people and stores have addresses, which have associated postcodes, most
    consumer data is reported at a postcode level. In order to carry out computations
    such as areal coverage, market share, etc. it is necessary to determine the areal
    extent of a postcode. This is easy in France, but will be difficult in any country
    where postcodes are postal routes and not areas.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 由于人们和商店有地址，而这些地址有相关的邮政编码，大多数消费者数据都是以邮政编码级别报告的。为了进行区域覆盖、市场份额等计算，有必要确定邮政编码的区域范围。这在法国很容易，但在那些邮政编码是邮政路线而不是区域的国家中则会很困难。
- en: '![](../Images/55b0a9e4ec5886def068a563d03fa27b.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/55b0a9e4ec5886def068a563d03fa27b.png)'
- en: UK postcodes are Royal Mail delivery addresses, not areas. This is true of Canada
    and the United States also. Photo by [Monty Allen](https://unsplash.com/@monty_a?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/vOPhBFg4Ldw?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 英国邮政编码是皇家邮政的配送地址，而不是区域。加拿大和美国也是如此。照片由 [Monty Allen](https://unsplash.com/@monty_a?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    拍摄，发布在 [Unsplash](https://unsplash.com/photos/vOPhBFg4Ldw?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)。
- en: Because their postcodes are mail delivery addresses, there are infinitely many
    polygons that can be drawn to partition the UK/Canada/US into valid postcode “regions”.
    This is why UK demographic data is published by their Office of National Statistics
    (ONS) on administrative areas (such as counties), not postcodes. The US census
    publishes data at a “Zip code tabulation area” (ZCTA) level, and US voting data
    is published at the county level. When working with UK/Canada/US data, you’ll
    often have a similar mixture of addresses (which are points) and spatial data
    collected over an area. How do you associate these together?
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 由于他们的邮政编码是邮件配送地址，因此可以绘制无限多个多边形来将英国/加拿大/美国划分为有效的邮政编码“区域”。这就是为什么英国的人口统计数据由其国家统计局（ONS）按照行政区域（如县）发布，而不是邮政编码。美国人口普查以“邮政编码统计区”（ZCTA）级别发布数据，而美国投票数据则按县级发布。在处理英国/加拿大/美国的数据时，你通常会遇到地址（即点）和在区域内收集的空间数据的混合。你如何将这些数据关联起来？
- en: To illustrate, I’ll tie together UK postcode data and census data in this article.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明这一点，我将在本文中将英国邮政编码数据和人口普查数据结合起来。
- en: Download link
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载链接
- en: If you are in a hurry, you can download the results of my analysis from [https://github.com/lakshmanok/lakblogs/tree/main/uk_postcode](https://github.com/lakshmanok/lakblogs/tree/main/uk_postcode)
    — there are a couple of CSV files there, and they contain the data you may need.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你很急，可以从 [https://github.com/lakshmanok/lakblogs/tree/main/uk_postcode](https://github.com/lakshmanok/lakblogs/tree/main/uk_postcode)
    下载我分析的结果——那里有几个 CSV 文件，包含你可能需要的数据。
- en: '[ukpopulation.csv.gz](https://github.com/lakshmanok/lakblogs/blob/main/uk_postcode/ukpopulation.csv.gz)
    has the following columns:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[ukpopulation.csv.gz](https://github.com/lakshmanok/lakblogs/blob/main/uk_postcode/ukpopulation.csv.gz)
    具有以下列：'
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[ukpostcodes.csv.gz](https://github.com/lakshmanok/lakblogs/blob/main/uk_postcode/ukpostcodes.csv.gz)
    has one extra column — the polygon for each postcode in WKT format:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[ukpostcodes.csv.gz](https://github.com/lakshmanok/lakblogs/blob/main/uk_postcode/ukpostcodes.csv.gz)
    有一列额外的内容——每个邮政编码的 WKT 格式的多边形：'
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Please note that use of the data or code is at your own risk — it is distributed
    on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
    or implied.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，数据或代码的使用风险由你自行承担——它是以“按原样”基础分发的，没有任何形式的明示或暗示的担保或条件。
- en: In this article, I’ll step through how I created the dataset in that GitHub
    repo. You can follow along with me using the notebook [uk_postcodes.ipynb](https://github.com/lakshmanok/lakblogs/blob/main/uk_postcode/uk_postcodes.ipynb).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我将详细介绍我如何在那个 GitHub 仓库中创建数据集。你可以通过使用笔记本 [uk_postcodes.ipynb](https://github.com/lakshmanok/lakblogs/blob/main/uk_postcode/uk_postcodes.ipynb)
    跟随我一起操作。
- en: Raw data
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 原始数据
- en: 'We start from three sources of raw data released under the [UK Open Government
    License](https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/):'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从三个在 [英国开放政府许可证](https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/)
    下发布的原始数据源开始：
- en: Free Map Tools has a [downloadable file](https://www.freemaptools.com/download-uk-postcode-lat-lng.htm)
    that has the centroid lat and lon for each postcode. This is not enough for spatial
    analysis since you can not do things like ST_INTERSECTS with just a point. But
    it’s a good start.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Free Map Tools 提供了一个[可下载文件](https://www.freemaptools.com/download-uk-postcode-lat-lng.htm)，其中包含每个邮政编码的中心点纬度和经度。这对于空间分析还不够，因为你不能仅用一个点做诸如
    ST_INTERSECTS 的操作。但这是一个好的开始。
- en: The ONS has published [census data](https://www.ons.gov.uk/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/populationandhouseholdestimatesenglandandwalescensus2021)
    for areas such as “County Durham”. These are not postcodes, though. They are typically
    at the ward, county, or region level.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: ONS 已发布[普查数据](https://www.ons.gov.uk/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/populationandhouseholdestimatesenglandandwalescensus2021)，覆盖如“达勒姆郡”这样的区域。这些不是邮政编码，通常是区、县或地区级别的数据。
- en: 'The UK statistics office has helpfully identified the [areas associated with
    each postcode](https://geoportal.statistics.gov.uk/datasets/ons-postcode-directory-february-2023-version-2/about).
    Every postcode lives in different areas defined for different purposes and resolutions.
    This includes, but is not limited to the parish, ward, county, and region that
    the region is in. For completeness, here are all the other associations available
    (depending on your spatial dataset, you may need the other columns):'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 英国统计局已经帮助识别了[每个邮政编码相关的区域](https://geoportal.statistics.gov.uk/datasets/ons-postcode-directory-february-2023-version-2/about)。每个邮政编码存在于不同目的和分辨率定义的区域中。这包括但不限于教区、区、县和所在地区。为完整起见，这里是所有其他可用的关联（根据你的空间数据集，你可能需要其他列）：
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'My notebook downloads the data files using wget:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我的笔记本使用 wget 下载数据文件：
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Reading data
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 读取数据
- en: 'Reading CSV directly into Pandas is straightforward:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 直接将 CSV 读取到 Pandas 中很简单：
- en: '[PRE4]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This gives me the centroid lat-lon of every postcode:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这为我提供了每个邮政编码的中心点纬度和经度：
- en: '![](../Images/d556ab2c8fdffdc20bea403a145851e6.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d556ab2c8fdffdc20bea403a145851e6.png)'
- en: Centroid lat-lon for every postcode
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 每个邮政编码的中心点纬度和经度
- en: 'There are many packages that allow you to read Excel files into Pandas, but
    I decided to use DuckDB because I’ll be using it later in the notebook to join
    the three datasets using SQL:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多包允许你将 Excel 文件读取到 Pandas 中，但我决定使用 DuckDB，因为我会在笔记本中用 SQL 连接这三个数据集：
- en: '[PRE5]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This Excel file has 7 rows of header info that I can drop. I also rename the
    columns to meaningful variables:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 Excel 文件有 7 行标题信息，我可以删除这些信息。我还将列重命名为有意义的变量：
- en: '[PRE6]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: That was the sheet named P01\. Note that the P04 sheet has a population density
    information, but it is not useful because population is not distributed evenly
    over the area code. We’ll derive the population of each postcode.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 那是名为 P01 的表格。请注意，P04 表格有一个人口密度信息，但它没有用，因为人口在区域编码上并不均匀分布。我们将推导出每个邮政编码的人口。
- en: I write this out to a CSV file so that I can easily read it from DuckDB.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我将这些数据写入 CSV 文件，以便我可以从 DuckDB 中轻松读取它。
- en: '[PRE7]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Similarly, I extract the necessary columns from the UK statistics office file
    and write it to a CSV file:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我从英国统计局文件中提取所需的列并将其写入 CSV 文件：
- en: '[PRE8]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Associating data
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关联数据
- en: Now, we can use DuckDB to join the three prepared datasets to get the population
    density at every postcode. Why DuckDB? Even though I can do the join in Pandas,
    I find SQL to be much more readable. Besides, this gave me an excuse to use the
    new hot thing.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以使用 DuckDB 将这三个准备好的数据集连接起来，以获取每个邮政编码的密度。为什么使用 DuckDB？即使我可以在 Pandas 中进行连接，但我发现
    SQL 更加易读。此外，这也给了我一个使用新热门工具的理由。
- en: 'I join the datasets by first reading them into DuckB using read_csv_auto. Then,
    I look up the ward, parish, county that the postcode is in and find the area (parish,
    ward, or county) that the population density data is reported at:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我通过首先使用 read_csv_auto 将数据集读取到 DuckB 中来连接这些数据集。然后，我查找邮政编码所在的区、教区、县，并找到人口密度数据报告的区域（教区、区或县）：
- en: '[PRE9]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Note that the spatial quantities are scalars that correspond to the whole area
    and not the postcode. They have to be split among the postcodes.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，空间数量是对应于整个区域的标量，而不是邮政编码。它们必须在邮政编码之间进行分配。
- en: Split area quantities among the postcodes
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在邮政编码之间分配区域数量
- en: The all_persons, females, males above correspond to the whole area, not to the
    specific postcode. We could do it proportionally based on area of the postcode,
    but there are infinitely many polygons that can fit the postcodes, and as we will
    see later, the areal extent of postcodes near parks and lakes are a bit iffy.
    So we’ll do something simple that gives us a single, unique answer — we’ll split
    the scalar value evenly among all the postcodes in the area! This is not as strange
    as it sounds — in higher density neighborhoods, there are more postcodes, so dividing
    equally among the postcodes is akin to distributing the scalar quantity proportional
    to the population density.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: all_persons、females、males 对应于整个区域，而不是特定的邮政编码。我们可以根据邮政编码的面积按比例进行，但有无数种多边形可以适应邮政编码，正如我们稍后将看到的，靠近公园和湖泊的邮政编码的区域范围有点不确定。所以我们将做一些简单的处理，给我们一个唯一的答案——我们将把标量值均匀分配到该区域内的所有邮政编码中！这听起来并不奇怪——在高密度社区中，邮政编码更多，因此在邮政编码之间均等分配类似于按人口密度分配标量量。
- en: '[PRE10]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'At this point, we have the quantity for each postcode — this is the association
    that we needed:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，我们拥有每个邮政编码的数量——这是我们需要的关联：
- en: '![](../Images/5d6d8463c1d7ede6394a5582f05452b5.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5d6d8463c1d7ede6394a5582f05452b5.png)'
- en: 'So, write it out:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，写出来：
- en: '[PRE11]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Areal extent of postcodes
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 邮政编码的区域范围
- en: 'For many analyses, we’ll want the postcodes to be not points but areas. Even
    though there are infinitely many polygons that we can use to divide the UK such
    that there is only postcode centroid in each polygon, there does exist a notion
    of the “best” polygon. That is the [Voronoi partition](https://en.wikipedia.org/wiki/Voronoi_diagram),
    which splits the area such that any point belongs to the postcode closest to it:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 对于许多分析，我们希望邮政编码不是点，而是区域。尽管有无数种多边形可以将英国划分为每个多边形中仅有一个邮政编码质心，但确实存在一个“最佳”多边形的概念。那就是[沃罗诺伊划分](https://en.wikipedia.org/wiki/Voronoi_diagram)，它将区域划分为每个点都属于距离它最近的邮政编码：
- en: '![](../Images/5b96a1b8d8dcf021a26844d2c2bc70ce.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5b96a1b8d8dcf021a26844d2c2bc70ce.png)'
- en: Voronoi analysis of 20 points, from Wikipedia
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 20 个点的沃罗诺伊分析，来自 Wikipedia
- en: 'To compute this, we can use scipy:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 为了计算这一点，我们可以使用 scipy：
- en: '[PRE12]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: I’m assuming here that the area is small enough that there isn’t much of a difference
    between the geodesic distance and Euclidean distance computed from the latitude
    and longitude. UK postcodes are small enough that this is the case.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我在这里假设区域足够小，以至于从纬度和经度计算的地理距离与欧几里得距离之间的差异不大。英国的邮政编码足够小，符合这一情况。
- en: 'The result is organized such that, for every point, there is a region consisting
    of a set of vertices. We can create a WKT polygon string for each point using:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 结果被组织成这样的结构：每个点都有一个由一组顶点组成的区域。我们可以为每个点创建一个 WKT 多边形字符串，方法如下：
- en: '[PRE13]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Here’s an example result:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个示例结果：
- en: '[PRE14]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'We can create a GeoDataFrame and plot a subset of postcodes:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以创建一个 GeoDataFrame 并绘制邮政编码的子集：
- en: '[PRE15]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![](../Images/868480570d8fce494971efd3c3def988.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/868480570d8fce494971efd3c3def988.png)'
- en: Postcode spatial extent for St. Albans. Image generated by author.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 圣奥尔本斯的邮政编码空间范围。由作者生成的图像。
- en: 'Here’s Birmingham:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这是伯明翰：
- en: '[PRE16]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![](../Images/f4d207c37815f65293336b580442b1ca.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f4d207c37815f65293336b580442b1ca.png)'
- en: Postcode spatial extent for Birmingham. Image generated by author.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 伯明翰的邮政编码空间范围。由作者生成的图像。
- en: Unpopulated areas
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 未开发区域
- en: 'Note the horn at the top and the large area of blue in the middle. What’s going
    on? Let’s look at Birmingham in Google Maps:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 注意顶部的喇叭和中间的大块蓝色区域。发生了什么？让我们在 Google Maps 中查看伯明翰：
- en: '![](../Images/df427ee197d0fa38368486ed2960472d.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/df427ee197d0fa38368486ed2960472d.png)'
- en: Birmingham, screenshot of Google Maps by author.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 伯明翰，作者的 Google Maps 截图。
- en: Notice the park areas? The Royal Mail doesn’t have to deliver to anyone there.
    So there are no postcodes there. Therefore, the nearby postcodes get “extended”
    into those areas. This will cause problems in spatial calculations as those postcodes
    will appear to be much larger than they are.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到公园区域了吗？皇家邮政不需要向那里任何人投递邮件。所以那里没有邮政编码。因此，附近的邮政编码被“扩展”到这些区域。这会导致空间计算中的问题，因为这些邮政编码看起来会比实际要大得多。
- en: 'To fix this, I’ll take a rather heuristic approach. I’ll grid the UK into 0.01x0.01
    (approximately 1 sq km) resolution grid cells and find grid cells that have no
    postcodes in them:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，我将采取一种相当启发式的方法。我将把英国划分为 0.01x0.01（大约 1 平方公里）分辨率的网格单元，并找到没有邮政编码的网格单元：
- en: '[PRE17]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'We’ll create fake postcodes in the center of such unpopulated grid cells, and
    assign a zero population density to those. Add these fake postcodes to the actual
    postcodes, and repeat the Voronoi analysis:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在这些无人居住的网格单元的中心创建虚拟邮政编码，并将零人口密度分配给这些编码。将这些虚拟邮政编码添加到实际的邮政编码中，然后重复 Voronoi
    分析：
- en: '[PRE18]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Now, when we plot Birmingham, we get something much nicer:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当我们绘制伯明翰时，我们得到的效果要好得多：
- en: '![](../Images/7d356fbe0032c8050dd8de72e477ae85.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7d356fbe0032c8050dd8de72e477ae85.png)'
- en: Postcode polygons of Birmingham. Image generated by author
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 伯明翰的邮政编码多边形。图片由作者生成
- en: 'It is this dataframe that I saved as the second csv file:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这个数据框，我将其保存为第二个 CSV 文件：
- en: '[PRE19]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[Optional] Loading into BigQuery'
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[可选] 加载到 BigQuery'
- en: 'We can load the CSV file into BigQuery and do some spatial analysis with it,
    but it is better to have BigQuery parse the last string column as a geometry first
    and have the data clustered by postcode:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将 CSV 文件加载到 BigQuery 中并进行一些空间分析，但最好是让 BigQuery 首先将最后一个字符串列解析为几何图形，并根据邮政编码对数据进行聚类：
- en: '[PRE20]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Now, we can easily query it. For example, we can use ST_AREA for the postcodes:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以轻松地查询它。例如，我们可以对邮政编码使用 ST_AREA：
- en: '[PRE21]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Summary
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: Spatial analysis often requires areal extent, not just point locations. In countries
    where postcodes are points/routes, there are infinitely many ways to generate
    a polygonal spatial extent for the postcodes. A reasonable approach is to use
    Voronoi regions to create polygons that contain those postcodes. However, if you
    do so, you will get unnaturally large polygons near lakes or parks where the post
    office does not deliver mail. To fix this, also grid the country and create artificial
    postcodes at unpopulated grid cells. In this article, I demonstrated how to do
    this for the UK. The associated notebook can be adapted to other places.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 空间分析通常需要面积扩展，而不仅仅是点位置。在邮政编码为点/路线的国家中，有无数种方法可以生成邮政编码的多边形空间扩展。一种合理的方法是使用 Voronoi
    区域来创建包含这些邮政编码的多边形。然而，如果这样做，你会在湖泊或公园附近得到不自然的大多边形，因为邮局不在那里投递邮件。为了解决这个问题，还需要对国家进行网格化，并在无人居住的网格单元中创建虚拟邮政编码。在这篇文章中，我演示了如何在英国进行此操作。相关的笔记本可以适应其他地方。
- en: Next steps
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下一步
- en: Check out the complete code at [https://github.com/lakshmanok/lakblogs/blob/main/uk_postcode/uk_postcodes.ipynb](https://github.com/lakshmanok/lakblogs/blob/main/uk_postcode/uk_postcodes.ipynb)
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看完整的代码 [https://github.com/lakshmanok/lakblogs/blob/main/uk_postcode/uk_postcodes.ipynb](https://github.com/lakshmanok/lakblogs/blob/main/uk_postcode/uk_postcodes.ipynb)
- en: Download the data from [https://github.com/lakshmanok/lakblogs/tree/main/uk_postcode](https://github.com/lakshmanok/lakblogs/tree/main/uk_postcode)
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [https://github.com/lakshmanok/lakblogs/tree/main/uk_postcode](https://github.com/lakshmanok/lakblogs/tree/main/uk_postcode)
    下载数据
