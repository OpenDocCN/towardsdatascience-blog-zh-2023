- en: 'Visualizing 3 Sklearn Cross-validation: K-Fold, Shuffle & Split, and Time Series
    Split'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可视化 3 种 Sklearn 交叉验证：K-Fold、Shuffle & Split 和 Time Series Split
- en: 原文：[https://towardsdatascience.com/visualizing-sklearn-cross-validation-k-fold-shuffle-split-and-time-series-split-a13221eb5a56](https://towardsdatascience.com/visualizing-sklearn-cross-validation-k-fold-shuffle-split-and-time-series-split-a13221eb5a56)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/visualizing-sklearn-cross-validation-k-fold-shuffle-split-and-time-series-split-a13221eb5a56](https://towardsdatascience.com/visualizing-sklearn-cross-validation-k-fold-shuffle-split-and-time-series-split-a13221eb5a56)
- en: Plotting the process of Sklearn K-Fold, Shuffle & Split, and Time Series Split
    cross-validation and showing validating results using Python
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绘制 Sklearn K-Fold、Shuffle & Split 和 Time Series Split 交叉验证的过程，并使用 Python 显示验证结果
- en: '[](https://medium.com/@borih.k?source=post_page-----a13221eb5a56--------------------------------)[![Boriharn
    K](../Images/1b23a79640f5272c1382918bfdba03b0.png)](https://medium.com/@borih.k?source=post_page-----a13221eb5a56--------------------------------)[](https://towardsdatascience.com/?source=post_page-----a13221eb5a56--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----a13221eb5a56--------------------------------)
    [Boriharn K](https://medium.com/@borih.k?source=post_page-----a13221eb5a56--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@borih.k?source=post_page-----a13221eb5a56--------------------------------)[![Boriharn
    K](../Images/1b23a79640f5272c1382918bfdba03b0.png)](https://medium.com/@borih.k?source=post_page-----a13221eb5a56--------------------------------)[](https://towardsdatascience.com/?source=post_page-----a13221eb5a56--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----a13221eb5a56--------------------------------)
    [Boriharn K](https://medium.com/@borih.k?source=post_page-----a13221eb5a56--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----a13221eb5a56--------------------------------)
    ·11 min read·Jul 10, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----a13221eb5a56--------------------------------)
    ·阅读时间 11 分钟·2023年7月10日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/d108871835f017946586b4ff1daf416d.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d108871835f017946586b4ff1daf416d.png)'
- en: Photo by [Ryoji Iwata](https://unsplash.com/ja/@ryoji__iwata?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Ryoji Iwata](https://unsplash.com/ja/@ryoji__iwata?utm_source=medium&utm_medium=referral)
    在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral) 提供
- en: What is Cross-validation?
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是交叉验证？
- en: 'Basically, cross-validation is a statistical method for evaluating learning
    algorithms. A fixed number of folds (groups of data) is set to run the analysis.
    These folds group the data into 2 sets: training and testing (validation) sets,
    that are cross-over in rounds, allowing each data point to be validated.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，交叉验证是一种评估学习算法的统计方法。设置一个固定数量的折（数据组）来运行分析。这些折将数据分成 2 个集合：训练集和测试（验证）集，这些集合在轮次中交叉，使每个数据点都能被验证。
- en: The main purpose is to test the model's ability to predict independent data
    that was not used in creating it. It is also useful to cope with problems like
    [overfitting](https://en.wikipedia.org/wiki/Overfitting) or [selection bias](https://en.wikipedia.org/wiki/Selection_bias).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 主要目的是测试模型预测独立数据的能力，这些数据在模型创建过程中没有使用。它也有助于应对诸如 [过拟合](https://en.wikipedia.org/wiki/Overfitting)
    或 [选择偏差](https://en.wikipedia.org/wiki/Selection_bias) 等问题。
- en: '![](../Images/1e795e6552c4b80a654b1939bab4b22b.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1e795e6552c4b80a654b1939bab4b22b.png)'
- en: An example of results from cross-validations in this article. Image by Author.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这篇文章中的交叉验证结果示例。图片由作者提供。
- en: 'In this article, we are going to apply Python to visualize the process of 3
    cross-validation types from the [Scikit Learn](https://scikit-learn.org/stable/modules/cross_validation.html)
    library:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将应用 Python 来可视化来自 [Scikit Learn](https://scikit-learn.org/stable/modules/cross_validation.html)
    库的 3 种交叉验证类型的过程：
- en: K-Fold cross-validation
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: K-Fold 交叉验证
- en: Shuffle & Split cross-validation
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Shuffle & Split 交叉验证
- en: Time Series Split cross-validation
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Time Series Split 交叉验证
- en: Moreover, the validation results can also be plotted to express insightful information.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，验证结果也可以绘制出来以表达有见地的信息。
- en: Let's get started
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 开始吧
- en: 1\. K-Fold cross-validation
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. K-Fold 交叉验证
- en: K-fold is a common method for cross-validation. Firstly, all the data are divided
    into folds. Then, the learning model is created from the training set (k-1 folds),
    and the testing set (the fold left) is used for validation.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: K-fold 是一种常见的交叉验证方法。首先，将所有数据划分为折。然后，从训练集（k-1 折）创建学习模型，并使用测试集（剩下的折）进行验证。
- en: Normally, the folds obtained from the K-fold cross-validation are divided as
    equally as possible. Next, we are going to see the process of the K-fold cross-validation.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，从K折交叉验证中获得的折叠被尽可能均匀地划分。接下来，我们将深入了解K折交叉验证的过程。
- en: Import libraries and load data
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入库并加载数据
- en: For example, this article will work with the [wine dataset](https://archive.ics.uci.edu/dataset/109/wine),
    which can be downloaded from the Sklearn library. The dataset is a copy of [UCI
    ML wine data](https://archive.ics.uci.edu/dataset/109/wine) under the [CC BY 4.0](https://creativecommons.org/licenses/by/4.0/)
    license.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，本文将使用[葡萄酒数据集](https://archive.ics.uci.edu/dataset/109/wine)，可以从Sklearn库下载。该数据集是[UCI
    ML葡萄酒数据](https://archive.ics.uci.edu/dataset/109/wine)的副本，采用[CC BY 4.0](https://creativecommons.org/licenses/by/4.0/)许可证。
- en: In total, there are 13 constituents found in each of the three types of wines.
    These attributes will be used to build a classification model for classifying
    the wine classes.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 总共有13种成分在三种类型的葡萄酒中发现。这些属性将用于构建一个用于分类葡萄酒类别的分类模型。
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](../Images/fb6152c16146145fb7cbad158467d821.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fb6152c16146145fb7cbad158467d821.png)'
- en: 'The next process can be explained: we will start by applying the `KFold` [function](https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.KFold.html)
    from Sklearn to group the data into training and testing sets. The number of folds
    can be specified with the *n_splits* parameter*.*'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步的过程可以解释为：我们将首先应用`KFold` [function](https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.KFold.html)来将数据分组为训练集和测试集。可以通过*n_splits*参数指定折数。
- en: Then, the Support Vector Machines ([SVMs](https://en.wikipedia.org/wiki/Support_vector_machine))
    will be created to classify wine classes in each iteration using the `svm` [function](https://scikit-learn.org/stable/modules/svm.html#:~:text=Support%20vector%20machines%20(SVMs)%20are,classification,%20regression%20and%20outliers%20detection.).
    Lastly, the `score` [function](https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVC.html#sklearn.svm.SVC.score)
    will be used to measure the mean accuracy of the model performance.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，将创建支持向量机（[SVMs](https://en.wikipedia.org/wiki/Support_vector_machine)）以在每次迭代中使用`svm`
    [function](https://scikit-learn.org/stable/modules/svm.html#:~:text=Support%20vector%20machines%20(SVMs)%20are,classification,%20regression%20and%20outliers%20detection.)来分类葡萄酒类别。最后，将使用`score`
    [function](https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVC.html#sklearn.svm.SVC.score)来衡量模型性能的平均准确性。
- en: These steps can be performed using the for-loop function in Python, as shown
    in the code below.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这些步骤可以使用Python中的for-loop函数来完成，如下方代码所示。
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/ce190a8b84af274ff3b0e22fa07b5eb0.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ce190a8b84af274ff3b0e22fa07b5eb0.png)'
- en: Now that we have data and accuracy scores from the iterations, let's define
    a function to create a DataFrame for plotting.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们拥有来自迭代的数据和准确性分数，让我们定义一个函数来创建一个用于绘图的DataFrame。
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/ede77792fc279241bd373a448cd909a0.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ede77792fc279241bd373a448cd909a0.png)'
- en: Assign the order number of the iterations to the DataFrame.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 将迭代的顺序编号分配给DataFrame。
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/3ed4ca8cb65b1227ba8cf0f52d807472.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3ed4ca8cb65b1227ba8cf0f52d807472.png)'
- en: Visualizing K-Fold cross-validation iterations
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可视化K折交叉验证的迭代过程
- en: Next, we can plot the process with scatter plots using [Plotly](https://plotly.com/python/line-and-scatter/),
    a useful data visualization library that can help build an interactive chart with
    just a few lines of code.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们可以使用[Plotly](https://plotly.com/python/line-and-scatter/)绘制散点图，这是一种有用的数据可视化库，可以用几行代码构建交互式图表。
- en: '[PRE4]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/c1facaa19844d9c5bafee41d0c3538b5.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c1facaa19844d9c5bafee41d0c3538b5.png)'
- en: Plotting the K-fold cross-validation iterations. Image by Author.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制K折交叉验证的迭代过程。图片来源：作者。
- en: It can be noticed from the scatter plot that the training and testing sets in
    K-fold cross-validation are cross-over in successive rounds in each iteration.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 从散点图中可以注意到，在每次迭代中，K折交叉验证中的训练集和测试集在连续的轮次中交叉。
- en: Visualizing K-Fold cross-validation results
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可视化K折交叉验证结果
- en: Let's continue by plotting the accuracy scores on the chart to get more information.
    Filter the DataFrame by selecting only rows with testing sets to get the accuracy
    scores.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续在图表上绘制准确性分数，以获取更多信息。通过选择仅包含测试集的行来过滤DataFrame，以获取准确性分数。
- en: '[PRE5]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Plot the score values using a color scale.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 使用颜色刻度绘制分数值。
- en: '[PRE6]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/bc5d2f64a4f907e3975c83a0920e0ba0.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bc5d2f64a4f907e3975c83a0920e0ba0.png)'
- en: Plotting the K-fold cross-validation results. Image by Author.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制K折交叉验证的结果。图片来源：作者。
- en: Plotting the scores can facilitate comparing the outcomes. We can tell from
    the chart that the SVMs' accuracy obtained in the 7th iteration has the lowest
    score compared to the others.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制分数有助于比较结果。我们可以从图表中看出，SVM 在第 7 次迭代中获得的准确率与其他迭代相比最低。
- en: '**Bonus!!**'
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**奖励！！**'
- en: Fortunately, we can combine the scatter plots to see both the process and the
    validation scores in the same plot with Plotly. The results will be presented
    as an interactive chart.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，我们可以使用 Plotly 将散点图合并，以在同一图表中查看过程和验证分数。结果将以交互式图表形式呈现。
- en: '[PRE7]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Ta-da…
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 哒哒……
- en: '![](../Images/a73ad713c2f4f14d33ff99feec26a7ae.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a73ad713c2f4f14d33ff99feec26a7ae.png)'
- en: Combining the K-fold cross-validation iterations plot and results plot. Image
    by Author.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 合并 K-fold 交叉验证迭代图和结果图。图片由作者提供。
- en: 2\. Shuffle & Split cross-validation
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. Shuffle & Split 交叉验证
- en: As its name suggests, this cross-validation technique will first shuffle the
    data and then split it into training and testing sets.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 正如其名，这种交叉验证技术将首先打乱数据，然后将其分为训练集和测试集。
- en: By applying the `ShuffleSplit` [function](https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.ShuffleSplit.html)
    from Sklearn, we can set the parameters to control the number of splits and the
    proportion between the sets. This method can be an alternative to K-fold if there
    is a need to control the proportion size.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 通过应用 Sklearn 的 `ShuffleSplit` [函数](https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.ShuffleSplit.html)，我们可以设置参数以控制拆分次数和数据集之间的比例。如果需要控制比例大小，这种方法可以作为
    K-fold 的替代方案。
- en: '[PRE8]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](../Images/fd6a8f07b757d50d9d1fc963e05dde94.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fd6a8f07b757d50d9d1fc963e05dde94.png)'
- en: Since the process for creating a DataFrame is the same as previously mentioned,
    we are going to repeat the code as shown below.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 由于创建 DataFrame 的过程与之前提到的相同，我们将重复如下所示的代码。
- en: '[PRE9]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](../Images/bda18a9e37eb663f0da953722b964688.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bda18a9e37eb663f0da953722b964688.png)'
- en: Visualizing Shuffle & Split cross-validation iterations
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可视化 Shuffle & Split 交叉验证迭代
- en: Now that we have prepared the DataFrame, let's use a scatter plot to show the
    sets obtained from the shuffle & split cross-validation.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经准备好 DataFrame，让我们使用散点图来展示从 shuffle & split 交叉验证中获得的数据集。
- en: '[PRE10]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![](../Images/531d393dab1e3ca428ab5cbcaa73963f.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/531d393dab1e3ca428ab5cbcaa73963f.png)'
- en: Plotting the shuffle & split cross-validation iterations. Image by Author.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制 shuffle & split 交叉验证迭代。图片由作者提供。
- en: It can be seen that in shuffle & split, the data are all randomly divided into
    training and testing sets, while the data are grouped into the training and testing
    sets in the K-fold cross-validation.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 可以看出，在 shuffle & split 中，数据都被随机分为训练集和测试集，而在 K-fold 交叉验证中，数据被分组到训练集和测试集中。
- en: Let's continue to plot the validation results.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续绘制验证结果。
- en: Visualizing Shuffle & Split cross-validation results
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可视化 Shuffle & Split 交叉验证结果
- en: Filter the DataFrame to get the accuracy scores.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 过滤 DataFrame 以获取准确率分数。
- en: '[PRE11]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![](../Images/44abd64a7537e35b30ad673be3d7d2d8.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/44abd64a7537e35b30ad673be3d7d2d8.png)'
- en: Plot the results using a color scale to express the score values.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 使用颜色尺度绘制结果以表达分数值。
- en: '[PRE12]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![](../Images/ffd1a624ede4208ae3278ea47ea1c84a.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ffd1a624ede4208ae3278ea47ea1c84a.png)'
- en: Plotting the shuffle & split cross-validation results. Image by Author.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制 shuffle & split 交叉验证结果。图片由作者提供。
- en: The obtained chart does not look good. It is hard to read since data in the
    testing set are not grouped. We can improve the result by changing the scatter
    sizes. This can be done by adding a size parameter, as shown in the code below.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 获取的图表效果不好。由于测试集中的数据没有分组，因此难以阅读。我们可以通过更改散点大小来改善结果。这可以通过添加大小参数来完成，如下面的代码所示。
- en: '[PRE13]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![](../Images/388aeb7bbfaa60a711cde5bc14b1ea97.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/388aeb7bbfaa60a711cde5bc14b1ea97.png)'
- en: Plotting the shuffle & split results using color and size to show the score
    values. Image by Author.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 使用颜色和大小绘制 shuffle & split 结果以显示分数值。图片由作者提供。
- en: Changing the scatter size helps distinguish the validation results. From the
    result above, the SVMs' accuracy from the testing set in the 6th iteration returns
    the lowest score while the 1st and the 3rd iterations return the highest ones.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 更改散点大小有助于区分验证结果。从上面的结果来看，第 6 次迭代中测试集的 SVM 准确率返回了最低分，而第 1 次和第 3 次迭代返回了最高分。
- en: 3\. Time Series Split cross-validation
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 时间序列分割交叉验证
- en: 'This technique helps validate a time-series model on a rolling basis. The main
    difference between time series split and K-fold: the first `K` folds in each iteration
    are the training sets and the `K+1` th fold is the testing set.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 该技术有助于在滚动基础上验证时间序列模型。时间序列拆分和K折的主要区别在于：每次迭代中的前`K`折是训练集，第`K+1`折是测试集。
- en: Import libraries and load data
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入库并加载数据
- en: This article will work with meteorological data as an example. We can use the
    `Meteostat` [library](https://github.com/meteostat/meteostat-python) to get a
    location's temperature over time. This library is a useful tool that provides
    simple access to open weather and climate data using Pandas.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 本文将使用气象数据作为示例。我们可以使用`Meteostat` [库](https://github.com/meteostat/meteostat-python)获取某地的温度随时间变化的数据。该库是一个有用的工具，提供了通过Pandas简单访问开放天气和气候数据的方式。
- en: The meteorological data is used under the terms of the [CC BY-NC 4.0](https://creativecommons.org/licenses/by-nc/4.0/deed.en_GB)
    license. For example, let's get the average temperature of New York City between
    2010–2022.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 气象数据在[CC BY-NC 4.0](https://creativecommons.org/licenses/by-nc/4.0/deed.en_GB)许可证下使用。例如，让我们获取2010–2022年间纽约市的平均温度。
- en: '[PRE14]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![](../Images/ce95bbe5b478d04cf4e5388f825b7ef3.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ce95bbe5b478d04cf4e5388f825b7ef3.png)'
- en: Plot the average temperature data with a line chart.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 用折线图绘制平均温度数据。
- en: '[PRE15]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![](../Images/a7a958e615f63842e61679baec130258.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a7a958e615f63842e61679baec130258.png)'
- en: Line chart showing the average daily temperature of New York City 2010–2022\.
    Image by Author.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 折线图显示了纽约市2010–2022年的每日平均温度。图片作者提供。
- en: The datetime column will be grouped to obtain the average monthly temperature
    for performing with a time-series model later.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 将日期时间列分组以获得平均月温度，以便后续进行时间序列模型分析。
- en: '[PRE16]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![](../Images/2def517922791d768304a3f3247254f3.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2def517922791d768304a3f3247254f3.png)'
- en: Here comes the cross-validation part. We will use the `TimeSeriesSplit` [function](https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.TimeSeriesSplit.html)
    from the Sklearn library to conduct the time series split cross-validation. The
    ***n_splits*** parameter can be specified to set the number of splits.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 现在进入交叉验证部分。我们将使用`TimeSeriesSplit` [函数](https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.TimeSeriesSplit.html)来自Sklearn库进行时间序列拆分交叉验证。可以指定***n_splits***参数来设置拆分的数量。
- en: '[PRE17]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Assign the row numbers to each iteration for plotting.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 为每次迭代分配行号以进行绘图。
- en: '[PRE18]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '![](../Images/881f473aa073464cbfc04c0dde43b8c1.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/881f473aa073464cbfc04c0dde43b8c1.png)'
- en: Visualizing Time Series Split cross-validation iterations
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可视化时间序列拆分交叉验证迭代
- en: Create a scatter plot to show the iterations of the time series split cross-validation.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个散点图，以显示时间序列拆分交叉验证的迭代。
- en: '[PRE19]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '![](../Images/40b2260d5c6b74d50eec7480f357fecd.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/40b2260d5c6b74d50eec7480f357fecd.png)'
- en: Plotting the time series split cross-validation iterations. Image by Author.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制时间序列拆分交叉验证迭代。图片作者提供。
- en: Even though the visualization above can show us the process, the meteorological
    data are not this straight line. Next, we will plot the actual data and the prediction
    result in the chart.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管上述可视化可以展示过程，但气象数据并不是这条直线。接下来，我们将把实际数据和预测结果绘制在图表中。
- en: Visualizing Time Series Split cross-validation results
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可视化时间序列拆分交叉验证结果
- en: For cross-validation, we can use the Autoregressive Integrated Moving Average
    ([ARIMA](https://en.wikipedia.org/wiki/Autoregressive_integrated_moving_average))
    model, a powerful method to build a prediction based on historical time-series
    data. The ARIMA model in this article will be created using the `pmdarima` [library](https://pypi.org/project/pmdarima/).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 对于交叉验证，我们可以使用自回归积分滑动平均（[ARIMA](https://en.wikipedia.org/wiki/Autoregressive_integrated_moving_average)）模型，这是一种基于历史时间序列数据进行预测的强大方法。本文中的ARIMA模型将使用`pmdarima`
    [库](https://pypi.org/project/pmdarima/)创建。
- en: 'The process can be explained: in each iteration, the ARIMA model is built from
    the data in training sets. After that, the forecasting and the data in testing
    sets are plotted in the same chart to compare the results.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 该过程可以解释为：在每次迭代中，ARIMA模型是从训练集中的数据建立的。之后，将预测结果和测试集中的数据绘制在同一图表中以比较结果。
- en: '[PRE20]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Voila!
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 瞧！
- en: '![](../Images/57deec43a12ae5f6c02bfe9eccffc1ec.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/57deec43a12ae5f6c02bfe9eccffc1ec.png)'
- en: Plotting the time series split cross-validation with ARIMA prediction results.
    Image by Author.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制时间序列拆分交叉验证与ARIMA预测结果。图片作者提供。
- en: From the chart, it can be seen that the ARIMA model has been improved over the
    iterations. Even though the first prediction does not perfectly fit (overlap)
    with the data in the testing set, it keeps getting better in the following ones.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 从图表中可以看出，ARIMA模型在迭代过程中得到了改进。尽管第一次预测与测试集中的数据不完全匹配（重叠），但后续预测会越来越好。
- en: Summary
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 摘要
- en: Cross-validation techniques help validate learning algorithms. The main concept
    is dividing data into training and testing sets. Then, the model is created using
    the training sets and is validated using the testing sets.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 交叉验证技术有助于验证学习算法。其主要概念是将数据分为训练集和测试集。然后，使用训练集创建模型，并使用测试集对模型进行验证。
- en: These methods can also be used to flag overfitting or selection bias.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 这些方法也可以用来标记过拟合或选择偏差。
- en: 'Obviously, there are more cross-validation types than the ones mentioned in
    this article. By the way, the main concept is the same, and they all share the
    same purpose: to evaluate the model.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，交叉验证的类型比本文中提到的要多。顺便说一下，主要概念是相同的，它们都具有相同的目的：评估模型。
- en: Thanks for reading.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读。
- en: 'Here are some of my articles that you may find interesting:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一些你可能会感兴趣的文章：
- en: Visualizing the Effect of Multicollinearity on Multiple Regression Model ([link](https://medium.com/towards-data-science/visualizing-the-effect-of-multicollinearity-on-multiple-regression-model-8f323ef542a9))
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可视化多重共线性对多重回归模型的影响 ([link](https://medium.com/towards-data-science/visualizing-the-effect-of-multicollinearity-on-multiple-regression-model-8f323ef542a9))
- en: 8 Visualizations with Python to Handle Multiple Time-Series Data ([link](/8-visualizations-with-python-to-handle-multiple-time-series-data-19b5b2e66dd0))
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 8 个用 Python 处理多时间序列数据的可视化 ([link](/8-visualizations-with-python-to-handle-multiple-time-series-data-19b5b2e66dd0))
- en: 7 Visualizations with Python to Express changes in Rank over time ([link](/7-visualizations-with-python-to-express-changes-in-rank-over-time-71c1f11d7e4b))
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 7 个用 Python 表达排名随时间变化的可视化 ([link](/7-visualizations-with-python-to-express-changes-in-rank-over-time-71c1f11d7e4b))
- en: 9 Visualizations with Python to show Proportions or Percentages instead of a
    Pie chart ([link](/9-visualizations-to-show-proportions-or-percentages-instead-of-a-pie-chart-4e8d81617451))
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 9 个用 Python 显示比例或百分比而不是饼图的可视化 ([link](/9-visualizations-to-show-proportions-or-percentages-instead-of-a-pie-chart-4e8d81617451))
- en: 9 Visualizations with Python that Catch More Attention than a Bar Chart ([link](/9-visualizations-that-catch-more-attention-than-a-bar-chart-72d3aeb2e091))
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 9 个用 Python 制作的比条形图更引人注目的可视化 ([link](/9-visualizations-that-catch-more-attention-than-a-bar-chart-72d3aeb2e091))
- en: References
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考文献
- en: Aeberhard,Stefan and Forina,M. (1991). *Wine.* UCI Machine Learning Repository.
    [https://doi.org/10.24432/C5PC7J](https://doi.org/10.24432/C5PC7J).
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Aeberhard, Stefan 和 Forina, M. （1991年）。*Wine.* UCI 机器学习库。 [https://doi.org/10.24432/C5PC7J](https://doi.org/10.24432/C5PC7J)。
- en: '*Cross-validation: Evaluating estimator performance*. Scikit. (n.d.). [https://scikit-learn.org/stable/modules/cross_validation.html#cross-validation-iterators](https://scikit-learn.org/stable/modules/cross_validation.html#cross-validation-iterators)'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*交叉验证：评估估算器性能*。Scikit. （无日期）。 [https://scikit-learn.org/stable/modules/cross_validation.html#cross-validation-iterators](https://scikit-learn.org/stable/modules/cross_validation.html#cross-validation-iterators)'
- en: '*Cross-validation in Machine Learning — Javatpoint*. [www.javatpoint.com.](http://www.javatpoint.com.)
    (n.d.-b). [https://www.javatpoint.com/cross-validation-in-machine-learning](https://www.javatpoint.com/cross-validation-in-machine-learning)'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*机器学习中的交叉验证 — Javatpoint*。 [www.javatpoint.com.](http://www.javatpoint.com.)
    （无日期）。 [https://www.javatpoint.com/cross-validation-in-machine-learning](https://www.javatpoint.com/cross-validation-in-machine-learning)'
- en: 'Refaeilzadeh, P., Tang, L., Liu, H. (2009). *Cross-Validation*. In: LIU, L.,
    ÖZSU, M.T. (eds) Encyclopedia of Database Systems. Springer, Boston, MA. [https://doi.org/10.1007/978-0-387-39940-9_565](https://doi.org/10.1007/978-0-387-39940-9_565)'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Refaeilzadeh, P., Tang, L., Liu, H. （2009年）。*交叉验证*。收录于：LIU, L., ÖZSU, M.T.（编辑）《数据库系统百科全书》。施普林格，波士顿，马萨诸塞州。
    [https://doi.org/10.1007/978-0-387-39940-9_565](https://doi.org/10.1007/978-0-387-39940-9_565)
- en: Wikimedia Foundation. (2023, June 17). *Cross-validation (statistics)*. Wikipedia.
    [https://en.wikipedia.org/wiki/Cross-validation_(statistics)](https://en.wikipedia.org/wiki/Cross-validation_(statistics))
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维基媒体基金会。（2023年6月17日）。*交叉验证（统计学）*。维基百科。 [https://en.wikipedia.org/wiki/Cross-validation_(statistics)](https://en.wikipedia.org/wiki/Cross-validation_(statistics))
- en: Cochrane, C. (2018, May 19). *Time series nested cross-validation*. Medium.
    [https://towardsdatascience.com/time-series-nested-cross-validation-76adba623eb9](/time-series-nested-cross-validation-76adba623eb9)
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cochrane, C. （2018年5月19日）。*时间序列嵌套交叉验证*。Medium。 [https://towardsdatascience.com/time-series-nested-cross-validation-76adba623eb9](/time-series-nested-cross-validation-76adba623eb9)
- en: 'Meteostat. (n.d.). *Meteostat/meteostat-python: Access and analyze historical
    weather and climate data with Python.* GitHub. [https://github.com/meteostat/meteostat-python](https://github.com/meteostat/meteostat-python)'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Meteostat。（无日期）。*Meteostat/meteostat-python: 使用 Python 访问和分析历史天气与气候数据*。GitHub。[https://github.com/meteostat/meteostat-python](https://github.com/meteostat/meteostat-python)'
- en: '*PMDARIMA*. PyPI. (n.d.). [https://pypi.org/project/pmdarima](https://pypi.org/project/pmdarima)'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*PMDARIMA*。PyPI。（无日期）。[https://pypi.org/project/pmdarima](https://pypi.org/project/pmdarima)'
