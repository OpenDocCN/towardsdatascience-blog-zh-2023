- en: It’s a Mistake to Trust the Best Model of a GridSearchCV
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 依赖GridSearchCV的最佳模型是一个错误
- en: 原文：[https://towardsdatascience.com/its-a-mistake-to-trust-the-best-model-of-a-gridsearchcv-536a73e835ad](https://towardsdatascience.com/its-a-mistake-to-trust-the-best-model-of-a-gridsearchcv-536a73e835ad)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/its-a-mistake-to-trust-the-best-model-of-a-gridsearchcv-536a73e835ad](https://towardsdatascience.com/its-a-mistake-to-trust-the-best-model-of-a-gridsearchcv-536a73e835ad)
- en: Explained through four examples where the “best model” isn’t actually the best
    model
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过四个例子解释了“最佳模型”实际上并不是最佳模型的情况
- en: '[](https://medium.com/@tomergabay?source=post_page-----536a73e835ad--------------------------------)[![Tomer
    Gabay](../Images/1fb1d408bc89415918c1aa6733df44e1.png)](https://medium.com/@tomergabay?source=post_page-----536a73e835ad--------------------------------)[](https://towardsdatascience.com/?source=post_page-----536a73e835ad--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----536a73e835ad--------------------------------)
    [Tomer Gabay](https://medium.com/@tomergabay?source=post_page-----536a73e835ad--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@tomergabay?source=post_page-----536a73e835ad--------------------------------)[![Tomer
    Gabay](../Images/1fb1d408bc89415918c1aa6733df44e1.png)](https://medium.com/@tomergabay?source=post_page-----536a73e835ad--------------------------------)[](https://towardsdatascience.com/?source=post_page-----536a73e835ad--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----536a73e835ad--------------------------------)
    [Tomer Gabay](https://medium.com/@tomergabay?source=post_page-----536a73e835ad--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----536a73e835ad--------------------------------)
    ·6 min read·Jan 4, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----536a73e835ad--------------------------------)
    ·6分钟阅读·2023年1月4日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/e21cbcd59ca104b1b7dcf6a964510800.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e21cbcd59ca104b1b7dcf6a964510800.png)'
- en: Photo by [Choong Deng Xiang](https://unsplash.com/@dengxiangs?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Choong Deng Xiang](https://unsplash.com/@dengxiangs?utm_source=medium&utm_medium=referral)
    在[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Scikit-learn’s `GridSearchCV` is an often-used tool to optimize the hyperparameters
    of a machine-learning model. Unfortunately, not everyone is analyzing its output
    thoroughly, and simply uses the `GridSearchCV’s`best estimator. This means in
    a lot of situations you might not be using the actual *best* estimator. Let’s
    first determine how to run a grid search and detect which estimator it chooses
    as its best.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Scikit-learn的`GridSearchCV`是一个常用的工具，用于优化机器学习模型的超参数。不幸的是，并不是每个人都能彻底分析它的输出，很多人只是使用`GridSearchCV`的最佳估计器。这意味着在很多情况下，你可能没有使用到真正的*最佳*估计器。让我们首先确定如何运行网格搜索，并检测它选择哪个估计器作为最佳。
- en: 'A very basic `GridSearchCV` could look like this:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 一个非常基础的`GridSearchCV`可能看起来是这样的：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In the bottom lines of the code above I warn about using the `best_estimator_`.
    Therefore it is important to understand how *scikit-learn* chooses the best estimator
    of a `GridSearchCv` . We only need to look at one column of the `results`data
    frame generated with `cv_results_`to determine why a model has been selected as
    the best: `mean_test_score` :'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面代码的底部，我提醒不要仅仅使用`best_estimator_`。因此，了解*scikit-learn*如何选择`GridSearchCV`的最佳估计器非常重要。我们只需要查看由`cv_results_`生成的`results`数据框中的一列，以确定为什么一个模型被选择为最佳：`mean_test_score`：
- en: '![](../Images/e3f72e88ebdad4f2b3b8c0c79dcd5ee0.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e3f72e88ebdad4f2b3b8c0c79dcd5ee0.png)'
- en: (table by Author)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: (作者提供的表格)
- en: '`mean_test_score` displays the average score of that model on the test sets;
    e.g. by default parameter `cv=5` which means the `mean_test_score` is the average
    of the model’s test score for 5 test sets. If you would change `cv` to 4 you’d
    get the following train-test data division:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '`mean_test_score`显示了该模型在测试集上的平均得分；例如，默认参数`cv=5`表示`mean_test_score`是模型在5个测试集上的测试得分的平均值。如果将`cv`改为4，你会得到如下的训练-测试数据划分：'
- en: '![](../Images/d5cc913b44aad71b6fc4b0a933323760.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d5cc913b44aad71b6fc4b0a933323760.png)'
- en: Cross-validation with cv=4 (Image by Author)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 使用cv=4的交叉验证（图由作者提供）
- en: By default, `GridSearchCV` picks the model with the highest `mean_test_score`
    and assigns it a `rank_test_score` of 1\. This also means that when you access
    a `GridSearchCV’s` best estimator through `gs.best_estimator_`you will use the
    model with a `rank_test_score`of 1\. However, there are many cases when the model
    with a `rank_test_score` of 1 isn’t actually the best model. Let’s illustrate
    this through four examples where the ‘best’ model isn’t the best model, and see
    how we can determine what the actual best model is.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`GridSearchCV` 选择 `mean_test_score` 最高的模型，并将其分配一个 `rank_test_score` 为
    1\. 这也意味着当你通过 `gs.best_estimator_` 访问 `GridSearchCV` 的最佳估算器时，你将使用 `rank_test_score`
    为 1 的模型。然而，有许多情况下 `rank_test_score` 为 1 的模型并不一定是最佳模型。让我们通过四个示例来说明‘最佳’模型并不是最优模型，并看看我们如何确定实际的最佳模型。
- en: 'Example #1: test score’s standard deviation'
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '示例 #1：测试分数的标准差'
- en: '![](../Images/f1e025803d12771b816ff29dd1d187a3.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f1e025803d12771b816ff29dd1d187a3.png)'
- en: 'If we take a look at the table above we can see that the ‘best’ model has a
    `mean_test_score` of -100 and a `std_test_score` of 21, which are expressed in
    the [*mean absolute error*](https://en.wikipedia.org/wiki/Mean_absolute_error).
    Because this is an error score, the closer the value is to zero, the better the
    score. The ‘second best’ model has a `mean_test_score` of -102 and a `std_test_score`
    of 5\. `std_test_score` stands for the standard deviation of the scores of the
    model on the test set, and this is an absolute value, hence, the closer to 0 the
    more consistent the model performs. Even though the #1 model has a slightly better
    mean, its standard deviation is much larger. This means that the performance of
    the model is less consistent and less reliable and most often this is not ideal.
    That’s why in this example I would pick model #2 over model #1, and in most use
    cases you should too.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '如果我们查看上面的表格，我们可以看到‘最佳’模型的 `mean_test_score` 为 -100，`std_test_score` 为 21，这些分数以
    [*均方误差*](https://en.wikipedia.org/wiki/Mean_absolute_error) 表示。因为这是一个误差分数，所以值越接近零，得分越好。‘第二最佳’模型的
    `mean_test_score` 为 -102，`std_test_score` 为 5\. `std_test_score` 代表模型在测试集上的分数的标准差，这是一个绝对值，因此，离
    0 越近，模型的表现越一致。尽管 #1 模型的均值稍好，但其标准差要大得多。这意味着模型的性能不够一致和可靠，并且通常这并不是理想的。这就是为什么在这个例子中我会选择模型
    #2 而不是模型 #1，并且在大多数使用情况下你也应该这样做。'
- en: 'Example #2: train scores'
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '示例 #2：训练分数'
- en: 'Let’s now consider two models which perform nearly identically on the test
    set:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们考虑两个在测试集上表现几乎相同的模型：
- en: '![](../Images/dcdd0597b82bafb3ebaf8b04e6c4b75b.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dcdd0597b82bafb3ebaf8b04e6c4b75b.png)'
- en: Two seemingly identical decision trees (Image by Author)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 两个看似相同的决策树（作者提供的图片）
- en: Even though these models seem to be nearly equal in performance, they are not,
    but to be able to detect that we have to set the `return_train_score` parameter
    of `GridSearchCV` from its default value `False` to `True:`
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这些模型的性能看起来几乎相同，但它们并不是相同的。为了检测这一点，我们必须将 `GridSearchCV` 的 `return_train_score`
    参数从默认值 `False` 设置为 `True`：
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now if we run `gridsearch.cv_results_` after fitting and training, we notice
    there are multiple columns added, of which one is displayed below: `mean_train_score`
    :'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在如果我们在拟合和训练后运行 `gridsearch.cv_results_`，我们会注意到添加了多个列，其中一个列显示如下：`mean_train_score`：
- en: '![](../Images/7fd7f6f20ae43583ee03fac768a66bdb.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7fd7f6f20ae43583ee03fac768a66bdb.png)'
- en: cv_results_ with train scores (Image by Author)
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 带有训练分数的 cv_results_（作者提供的图片）
- en: What we can notice now is that even though both models seem to perform equally
    on the test set, the second model is actually significantly better on the train
    set compared to the first model. Of course, this could imply overfitting in some
    situations, but here the mean train score aligns better with the mean test score
    and therefore doesn’t seem to imply overfitting. Generally speaking, when two
    models perform similarly on the test sets, the model which performs more consistently
    when also taking the train scores into account should be preferred.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以注意到，尽管两个模型在测试集上的表现似乎相同，但第二个模型在训练集上的表现实际上明显优于第一个模型。当然，这在某些情况下可能意味着过拟合，但在这里，均值训练分数与均值测试分数更一致，因此似乎没有暗示过拟合。一般来说，当两个模型在测试集上的表现相似时，考虑到训练分数时表现更一致的模型应该被优先选择。
- en: 'Example #3: Model Complexity'
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '示例 #3：模型复杂度'
- en: 'Let’s consider the following grid search results:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑以下网格搜索结果：
- en: '![](../Images/a20a1e2c444bd705122c0b56d993fe6e.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a20a1e2c444bd705122c0b56d993fe6e.png)'
- en: cv_results_ (Image by Author)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: cv_results_（作者提供的图片）
- en: Above we have two models with nearly identical test and train scores. Yet, there
    is more important information to consider before confirming the first model to
    be the best one. In the last column, we see `param_tree__max_depth` , which shows
    the tree depth of each model’s decision tree. The ‘best’ model’s decision tree
    has a tree depth of 50, while the ‘second best’ decision tree has a tree depth
    of just 2\. In this case, we could choose the second model to be the best model,
    because this decision tree is much better interpretable. E.g., we could plot the
    tree using `[sklearn.tree.plot_tree](https://scikit-learn.org/stable/modules/generated/sklearn.tree.plot_tree.html)`
    and see a very simple and easy-to-interpret tree. A tree with a depth of 50 is
    hardly readable and interpretable at all. As a rule of thumb, a less complex model
    should be preferred over a more complex model when two models perform equally
    on both the test set and the train set.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 上述两个模型的测试和训练分数几乎相同。然而，在确认第一个模型是最佳模型之前，还有更多重要的信息需要考虑。在最后一列中，我们看到 `param_tree__max_depth`，它显示了每个模型决策树的树深度。‘最佳’模型的决策树深度为50，而‘第二最佳’决策树的深度仅为2。在这种情况下，我们可以选择第二个模型作为最佳模型，因为这个决策树更容易解释。例如，我们可以使用
    `[sklearn.tree.plot_tree](https://scikit-learn.org/stable/modules/generated/sklearn.tree.plot_tree.html)`
    绘制决策树，并查看一个非常简单且易于解释的树。一个深度为50的树几乎不可读且难以解释。作为经验法则，当两个模型在测试集和训练集上的表现相当时，应优先选择更简单的模型。
- en: 'Example #4: Model Speed Performance'
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '示例 #4：模型速度性能'
- en: 'The last example I’d like to show is one of speed performance. Let’s assume
    we have the same grid search results as in example #3 but with one added column:
    `mean_score_time.`'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '我想展示的最后一个例子是关于速度性能的。假设我们有与示例 #3 相同的网格搜索结果，但添加了一个新列：`mean_score_time`。'
- en: '![](../Images/9084cd7a094846ab02754b148d75848b.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9084cd7a094846ab02754b148d75848b.png)'
- en: Now, another reason appears why we could prefer the second model over the first
    model. The first model takes more than 6 times as long as the second model, probably
    due to its extra complexity. Of course, as `mean_score_time` expresses the mean
    time it took the model to predict a validation set, this difference seems neglectable.
    However, imagine a model that needs to predict machine failure based on hundreds
    of sensors per machine. For such a model that needs to make live streaming predictions
    on huge amounts of data, a difference between 0.02 seconds on *n* observations
    versus 0.003 seconds on *n* observations can make a significant difference*.*
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，另一个原因出现了，我们可能会更喜欢第二个模型而不是第一个模型。第一个模型的运行时间是第二个模型的6倍以上，这可能是由于其额外的复杂性。当然，由于
    `mean_score_time` 表示模型预测验证集的平均时间，这种差异似乎可以忽略不计。然而，想象一下一个需要基于每台机器数百个传感器预测机器故障的模型。对于这样的模型，如果需要在大量数据上进行实时预测，那么
    *n* 个观测值上的0.02秒与 *n* 个观测值上的0.003秒之间的差异可能会产生显著影响。
- en: To Conclude
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In this article, we’ve seen four examples that show why you should never blindly
    trust a *scikit-learn*’s `GridSearchCV's` best estimator. Rather than just relying
    on the mean test score, we should also consider other columns of the cross-validation
    results to determine which model is the best, especially when the top models’
    test scores are similar.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们看到了四个示例，展示了为什么你不应该盲目相信 *scikit-learn* 的 `GridSearchCV` 的最佳估计器。我们不仅要依赖平均测试分数，还应该考虑交叉验证结果中的其他列，以确定哪个模型最好，尤其是在顶级模型的测试分数相似时。
- en: 'If you want to learn more about machine-learning and/or grid searching make
    sure to read these other articles about it:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多关于机器学习和/或网格搜索的内容，请务必阅读这些相关文章：
- en: '[](/significantly-increase-your-grid-search-results-with-these-parameters-b096b3d158aa?source=post_page-----536a73e835ad--------------------------------)
    [## Significantly Increase Your Grid-Search Results With These Parameters'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/significantly-increase-your-grid-search-results-with-these-parameters-b096b3d158aa?source=post_page-----536a73e835ad--------------------------------)
    [## 使用这些参数显著提高你的网格搜索结果'
- en: Grid search over any machine learning pipeline step using an EstimatorSwitch.
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 EstimatorSwitch 对任何机器学习管道步骤进行网格搜索。
- en: towardsdatascience.com](/significantly-increase-your-grid-search-results-with-these-parameters-b096b3d158aa?source=post_page-----536a73e835ad--------------------------------)
    [](/a-highly-anticipated-time-series-cross-validator-is-finally-here-7dc99f672736?source=post_page-----536a73e835ad--------------------------------)
    [## A highly anticipated Time Series Cross-validator is finally here
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[通过这些参数显著提高网格搜索结果](https://towardsdatascience.com/significantly-increase-your-grid-search-results-with-these-parameters-b096b3d158aa?source=post_page-----536a73e835ad--------------------------------)
    [一款备受期待的时间序列交叉验证器终于到来](https://towardsdatascience.com/a-highly-anticipated-time-series-cross-validator-is-finally-here-7dc99f672736?source=post_page-----536a73e835ad--------------------------------)
    [## 一款备受期待的时间序列交叉验证器终于到来'
- en: Unevenly spread Time Series data is no longer a problem for cross-validation.
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 不均匀分布的时间序列数据不再是交叉验证的问题。
- en: towardsdatascience.com](/a-highly-anticipated-time-series-cross-validator-is-finally-here-7dc99f672736?source=post_page-----536a73e835ad--------------------------------)
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[一款备受期待的时间序列交叉验证器终于到来](https://towardsdatascience.com/a-highly-anticipated-time-series-cross-validator-is-finally-here-7dc99f672736?source=post_page-----536a73e835ad--------------------------------)'
