- en: Using PyGWalker to Enhance Your Jupyter Notebook EDA Experience
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 PyGWalker 提升你的 Jupyter Notebook EDA 体验
- en: 原文：[https://towardsdatascience.com/use-pygwalker-to-enhance-your-jupyter-notebook-eda-experience-d7a5ee358be9](https://towardsdatascience.com/use-pygwalker-to-enhance-your-jupyter-notebook-eda-experience-d7a5ee358be9)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/use-pygwalker-to-enhance-your-jupyter-notebook-eda-experience-d7a5ee358be9](https://towardsdatascience.com/use-pygwalker-to-enhance-your-jupyter-notebook-eda-experience-d7a5ee358be9)
- en: An Introduction to the PyGWalker Library for Easy Data Visualisation
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PyGWalker 库简介，便于数据可视化
- en: '[](https://andymcdonaldgeo.medium.com/?source=post_page-----d7a5ee358be9--------------------------------)[![Andy
    McDonald](../Images/df11d647be032aeb3d31852affb33a64.png)](https://andymcdonaldgeo.medium.com/?source=post_page-----d7a5ee358be9--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d7a5ee358be9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d7a5ee358be9--------------------------------)
    [Andy McDonald](https://andymcdonaldgeo.medium.com/?source=post_page-----d7a5ee358be9--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://andymcdonaldgeo.medium.com/?source=post_page-----d7a5ee358be9--------------------------------)[![Andy
    McDonald](../Images/df11d647be032aeb3d31852affb33a64.png)](https://andymcdonaldgeo.medium.com/?source=post_page-----d7a5ee358be9--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d7a5ee358be9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d7a5ee358be9--------------------------------)
    [Andy McDonald](https://andymcdonaldgeo.medium.com/?source=post_page-----d7a5ee358be9--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d7a5ee358be9--------------------------------)
    ·8 min read·Mar 1, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d7a5ee358be9--------------------------------)
    ·阅读时间 8 分钟·2023年3月1日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/d1654e3d8430ddfdcc8f3c0cc172f965.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d1654e3d8430ddfdcc8f3c0cc172f965.png)'
- en: PyGWalker showing multiple plots within the same view. Image by the author.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: PyGWalker 在同一视图中显示多个图表。图片由作者提供。
- en: Creating effective and compelling data visualisations quickly and efficiently
    is a key part of the data science workflow. There are several options available
    to do this ranging from commercial software like Tableau to free alternatives
    like dedicated python libraries. The amount of skill and time needed to generate
    plots can vary between the different options.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 快速高效地创建有效且引人注目的数据可视化是数据科学工作流程的关键部分。有多种选项可以实现这一点，从商业软件如 Tableau 到免费的替代方案如专用的
    Python 库。生成图表所需的技能和时间因选项而异。
- en: Over the years, several python libraries have been developed to simplify the
    process of exploring your data. So simple in fact, that all you need to get started
    are 3–5 lines of code.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，已经开发了几种 Python 库来简化数据探索过程。事实上，这些库如此简单，以至于你只需 3–5 行代码即可开始使用。
- en: One such library that has recently appeared on the EDA scene is PyGWalker.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 最近出现在 EDA 场景中的一个库是 PyGWalker。
- en: '[PyGWalker](https://github.com/Kanaries/graphic-walker) (**Py**thon binding
    of **G**raphic **Walker**) is a python library that can help speed up the data
    analysis and visualisation workflow directly within a Jupyter notebook. It leverages
    the power of interactivity by providing an interface similar to the popular data
    analytics software called Tableau.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[PyGWalker](https://github.com/Kanaries/graphic-walker) (**Py**thon 绑定的 **G**raphic
    **Walker**) 是一个 Python 库，能够帮助加速数据分析和可视化工作流程，直接在 Jupyter notebook 中进行。它通过提供类似于流行数据分析软件
    Tableau 的界面来利用交互性的强大功能。'
- en: '![](../Images/00162996533ed4eb612a487218021c89.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/00162996533ed4eb612a487218021c89.png)'
- en: Creating a scatter plot in PygWalker using well log data. Image by the author.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 使用井孔数据在 PygWalker 中创建散点图。图片由作者提供。
- en: With this type of interface, we can drag and drop our variables into specific
    sections and quickly create a plot, filter it, and understand our data.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种类型的界面，我们可以将变量拖放到特定部分，快速创建图表、筛选图表并理解数据。
- en: You can visit the GitHub repository for PyGWalker using the link below.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用下面的链接访问 PyGWalker 的 GitHub 存储库。
- en: '[](https://github.com/Kanaries/pygwalker?source=post_page-----d7a5ee358be9--------------------------------)
    [## GitHub - Kanaries/pygwalker: PyGWalker: Turn your pandas dataframe into a
    Tableau-style User…'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://github.com/Kanaries/pygwalker?source=post_page-----d7a5ee358be9--------------------------------)
    [## GitHub - Kanaries/pygwalker: PyGWalker: 将你的 pandas 数据框转换为 Tableau 风格的用户界面…](https://github.com/Kanaries/pygwalker?source=post_page-----d7a5ee358be9--------------------------------)'
- en: PyGWalker can simplify your Jupyter Notebook data analysis and data visualization
    workflow, by turning your pandas…
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PyGWalker 可以简化你的 Jupyter Notebook 数据分析和数据可视化工作流程，通过将 pandas 数据框转换为 Tableau 风格的界面来实现。
- en: github.com](https://github.com/Kanaries/pygwalker?source=post_page-----d7a5ee358be9--------------------------------)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[github.com](https://github.com/Kanaries/pygwalker?source=post_page-----d7a5ee358be9--------------------------------)'
- en: This article will explore some of the features of PyGWalker using one of my
    favourite well log data sets (details at the end of the article).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 本文将探讨 PyGWalker 的一些功能，使用的是我最喜欢的井筒数据集之一（详细信息见文章末尾）。
- en: At the time of writing this article, the version of PygWalker is `0.1.4.6`,
    and some of the features illustrated may have been updated since this version.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，PygWalker 的版本是 `0.1.4.6`，其中一些功能可能已在此版本之后进行了更新。
- en: Video Tutorial
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 视频教程
- en: A video version of this tutorial is available on my [YouTube channel](https://www.youtube.com/c/AndyMcDonald42)
    if you want to see PyGWalker in action.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想查看 PyGWalker 的实际操作，可以在我的 [YouTube 频道](https://www.youtube.com/c/AndyMcDonald42)
    上找到该教程的视频版本。
- en: Installing and Running PyGWalker in Jupyter Lab
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Jupyter Lab 中安装和运行 PyGWalker
- en: To get started with PyGWalker, we need to install it. We can do this by using
    `pip install pygwalker`or `conda install pygwalker`if you are using Anaconda.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用 PyGWalker，我们需要先安装它。我们可以使用 `pip install pygwalker` 或 `conda install pygwalker`（如果你使用
    Anaconda）。
- en: After the PyGWalker library has been installed, we can open our Jupyter Notebook
    and then import PyGWalker alongside the [pandas](https://pandas.pydata.org/) library,
    which will be used to load our data from a CSV file.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 PyGWalker 库后，我们可以打开 Jupyter Notebook，然后导入 PyGWalker 和 [pandas](https://pandas.pydata.org/)
    库，后者将用于从 CSV 文件中加载数据。
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: After these have been imported, the next step is to load the data we are going
    to be using for this tutorial. We can load this data by calling upon the familiar
    `pd.read_csv()` function from pandas, and then pass in our CSV file.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些导入之后，下一步是加载我们将用于本教程的数据。我们可以通过调用 pandas 中熟悉的 `pd.read_csv()` 函数来加载数据，然后传入我们的
    CSV 文件。
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Now it is time to run PyGWalker, and we can do it with the following straightforward
    call.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是运行 PyGWalker 的时候了，我们可以使用以下简单的调用来实现。
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Once the cell has been run, we will get a very nice interface showing the available
    variables within the dataset. The variables will be split based on their type.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦单元格运行完毕，我们将得到一个非常好的界面，显示数据集中可用的变量。变量将根据其类型进行分组。
- en: '![](../Images/f4244560ed41e8b6535a0d1fc1d8ed94.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f4244560ed41e8b6535a0d1fc1d8ed94.png)'
- en: PyGWalker User Interface directly within a Jupyter Notebook. Image by the author.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: PyGWalker 用户界面直接在 Jupyter Notebook 中。图片由作者提供。
- en: Building a Scatter Plot with PygWalker
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 PyGWalker 构建散点图
- en: The first plot we will create is a simple scatter plot of RHOB and NPHI — a
    commonly used plot within petrophysics.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建的第一个图是 RHOB 和 NPHI 的简单散点图——这是岩石物理学中常用的图。
- en: Before we do this, we need to turn off the aggregation on the toolbar. This
    will allow us to plot the actual data values rather than any form of aggregation.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在此之前，我们需要在工具栏上关闭聚合。这将允许我们绘制实际的数据值，而不是任何形式的聚合。
- en: '![](../Images/2e6f96904f7918b59359a1e51804a2b9.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2e6f96904f7918b59359a1e51804a2b9.png)'
- en: Toggling the aggregation option off will allow the plotting of actual data values.
    Image by the author.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 关闭聚合选项将允许绘制实际的数据值。图片由作者提供。
- en: Now we can select the variables we want to plot from the field list on the left.
    These can be clicked on and dragged into the x or y-axis boxes, depending on what
    axis you want the variables on.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以从左侧的字段列表中选择我们想要绘制的变量。根据你想将变量放在 x 轴还是 y 轴，可以点击并拖动到相应的轴框中。
- en: You will also notice that the items within the field list have different icons.
    The blue document-like icons represent categorical data, and the purple hashtags
    represent numeric data.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 你还会注意到字段列表中的项目有不同的图标。蓝色文档图标代表分类数据，紫色井号代表数值数据。
- en: In this example, I have placed the NPHI on the x-axis and RHOB on the y-axis.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我将 NPHI 放在 x 轴上，将 RHOB 放在 y 轴上。
- en: '![](../Images/00162996533ed4eb612a487218021c89.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/00162996533ed4eb612a487218021c89.png)'
- en: Creating a scatter plot in PygWalker using well log data. Image by the author.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 使用井筒数据在 PygWalker 中创建散点图。图片由作者提供。
- en: Changing the PygWalker Plot Size
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更改 PyGWalker 图表大小
- en: When the plot appears, it may look very small. However, we can increase the
    size of our plot very easily. This is done by going to the menu and changing the
    layout mode from auto to fixed.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 当图表出现时，它可能看起来很小。然而，我们可以很容易地增加图表的大小。方法是通过菜单将布局模式从自动更改为固定。
- en: Once that option has been changed, we can either change the size by clicking
    on the blue border that appears around our plot or by clicking on the cog icon
    next to the Layout Mode button and adjusting the sliders.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦选项更改，我们可以通过点击出现在图周围的蓝色边框来更改大小，或者点击“布局模式”按钮旁边的齿轮图标并调整滑块。
- en: '![](../Images/8555e7e2d16ee9f8582fc1da7c20d2ef.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8555e7e2d16ee9f8582fc1da7c20d2ef.png)'
- en: Changing the figure size within PygWalker. Image by the author.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在PygWalker中更改图形大小。图片来自作者。
- en: Adding Additional Variables to the PyGWalker Scatter Plot
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向PyGWalker散点图添加额外的变量
- en: We can also apply more variables to the plot to help us understand our data
    better. These additional variables can be categorical or numeric, and we can use
    them to add colour, opacity, size and shape.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以向图中添加更多变量，以帮助我们更好地理解数据。这些额外的变量可以是分类的也可以是数值的，我们可以使用它们来添加颜色、不透明度、大小和形状。
- en: In the example below, I have added the LITH variable, which will colour the
    data points by different lithologies. We can then hover over any point in the
    scatter plot and view its values.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的示例中，我添加了LITH变量，这将根据不同的岩性给数据点上色。然后我们可以将鼠标悬停在散点图中的任何一点上，查看其值。
- en: '![](../Images/a781e0f757480a286f33049dd90dec8e.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a781e0f757480a286f33049dd90dec8e.png)'
- en: Applying a categorical variable to the scatter plot created by PyGWalker. Image
    by the author.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 将分类变量应用于PyGWalker创建的散点图。图片来自作者。
- en: If we use a numeric variable instead, we will get a colour bar along the side
    of the plot. The range of values for this axis can be changed by applying a filter
    — we will see how to do this shortly.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们改用数字变量，我们将在图的侧边看到一个颜色条。这个轴的值范围可以通过应用过滤器来更改——我们很快就会看到如何操作。
- en: '![](../Images/d4e08a793c345da37a74ea50fb422266.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d4e08a793c345da37a74ea50fb422266.png)'
- en: Applying a numeric variable to the scatter plot created by PyGWalker. Image
    by the author.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 将数字变量应用于PyGWalker创建的散点图。图片来自作者。
- en: Zooming and Moving Around the PygWalker Scatter Plot
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 缩放和移动PygWalker散点图
- en: If we want to change the scales or zoom in on a section of data, we first have
    to click on the Auto Resizing button on the toolbar and then we can zoom in or
    out using the mouse scroll wheel.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要更改比例或放大数据的某个部分，我们首先需要点击工具栏上的“自动调整大小”按钮，然后可以使用鼠标滚轮进行放大或缩小。
- en: We can then move around the plot by using the left mouse clicking, holding that
    button, and dragging the cursor around the plot.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以通过使用左键点击、按住该按钮并拖动光标在图中移动。
- en: '![](../Images/e20373495604d16d61c0c17420581f5d.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e20373495604d16d61c0c17420581f5d.png)'
- en: Zooming and moving around the scatter plot in PyGWalker. Image by the author.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在PyGWalker中缩放和移动散点图。图片来自作者。
- en: It would be nice to be able to change the scales on the plot manually by clicking
    on the axis or the corners of the axis, similar to how we can do it in a Plotly
    chart.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果能像在Plotly图表中那样，通过点击轴或轴的角来手动更改图上的刻度，将是一个很好的功能。
- en: Filtering Data By Categories
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 按类别过滤数据
- en: We can also filter the data using our variables.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用我们的变量过滤数据。
- en: When we filter using categorical data, we click and drag the variable we want
    into the filters section and then deselect the categories we do not want to see.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们使用分类数据进行过滤时，我们点击并拖动我们想要的变量到过滤器区域，然后取消选择我们不想看到的类别。
- en: '![](../Images/eab93de92f6290f933b68c6222223752.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/eab93de92f6290f933b68c6222223752.png)'
- en: Applying categorical filters in PygWalker. Image by the author.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在PygWalker中应用分类过滤器。图片来自作者。
- en: When filtering using a numeric variable, we get a slider where we can control
    the min and max range. It does not appear as if we can edit the values manually,
    which would be a nice feature to have.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 使用数字变量进行过滤时，我们会得到一个滑块，可以控制最小值和最大值范围。看起来我们不能手动编辑这些值，这将是一个很好的功能。
- en: A nice feature is that we can we can apply multiple filters by adding another
    variable into the filter box and setting the range or selecting the categories
    we want.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 一个不错的功能是，我们可以通过将另一个变量添加到过滤框中并设置范围或选择我们想要的类别，来应用多个过滤器。
- en: '![](../Images/37e54c8c6170fb5ea1f422b39bbf73fe.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/37e54c8c6170fb5ea1f422b39bbf73fe.png)'
- en: Applying numerical filters to data using PygWalker. Image by the author.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 使用PygWalker对数据应用数值过滤器。图片来自作者。
- en: Creating a Line Plot with PyGWalker
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用PyGWalker创建折线图
- en: There are several different plot types available within PyGWalker.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: PyGWalker中有几种不同的图表类型。
- en: When adding data and the Mark Type is set to Auto, the library will try to find
    the best plot for your data. However, this may not always be the most appropriate
    chart type.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 当添加数据且标记类型设置为自动时，库将尝试为你的数据找到最佳图表。然而，这可能并不总是最合适的图表类型。
- en: You can change the chart type by clicking the Mark Type button on the toolbar
    and then selecting the type you want.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过点击工具栏上的标记类型按钮，然后选择你想要的类型来更改图表类型。
- en: The example below shows how you can create a line plot with two variables.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的示例展示了如何用两个变量创建折线图。
- en: '![](../Images/0348c57c0c4267e82e2c400494a99b50.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0348c57c0c4267e82e2c400494a99b50.png)'
- en: Creating a line plot in PyGWalker. Image by the author.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在 PyGWalker 中创建折线图。图片由作者提供。
- en: Viewing Raw Data
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查看原始数据
- en: PyGWalker provides a nice way to view the raw data within your dataframe and
    change the data type if required. This is handy if a column has been accidentally
    identified as the wrong data type and you need to change it quickly.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: PyGWalker 提供了一种方便的方式来查看数据框中的原始数据，并在需要时更改数据类型。如果某列被错误识别为不正确的数据类型，你可以快速更改它。
- en: It would be nice to be able to do more on the data view, such as filtering the
    data or applying colour scales to the columns, as sometimes this can help reveal
    any issues within the data.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 如果数据视图中能够进行更多操作，例如过滤数据或对列应用颜色比例尺，那就太好了，因为有时这有助于揭示数据中的问题。
- en: '![](../Images/d1c4314b584eded28f4038fde054ab37.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d1c4314b584eded28f4038fde054ab37.png)'
- en: The raw data view within PyGWalker. Image by the author.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: PyGWalker 中的原始数据视图。图片由作者提供。
- en: Summary
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: PyGWalker has provided one of the most interactive experiences and nicest-looking
    setups I have come across with EDA libraries in a Jupyter notebook. The interface
    provides an easy way for non-coders or beginner coders to start creating charts
    immediately.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: PyGWalker 提供了我在 Jupyter notebook 中遇到的最互动、外观最好的 EDA 库体验之一。该界面为非编码者或初学者提供了一种立即开始创建图表的简便方法。
- en: You should give it a try for your next project. Check out my article below if
    you want to see other powerful Python EDA libraries.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该在下一个项目中尝试一下。查看我下面的文章，如果你想了解其他强大的 Python EDA 库。
- en: '[](/5-powerful-python-libraries-you-need-to-know-to-enhance-your-eda-process-f0100d563c16?source=post_page-----d7a5ee358be9--------------------------------)
    [## 5 Powerful Python Libraries For EDA You Need to Know About'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/5-powerful-python-libraries-you-need-to-know-to-enhance-your-eda-process-f0100d563c16?source=post_page-----d7a5ee358be9--------------------------------)
    [## 5 个强大的 Python 库，你需要了解的 EDA 工具'
- en: Leverage the Power of Python to Explore and Understand Your Data
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 利用 Python 的力量探索和理解你的数据
- en: towardsdatascience.com](/5-powerful-python-libraries-you-need-to-know-to-enhance-your-eda-process-f0100d563c16?source=post_page-----d7a5ee358be9--------------------------------)
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/5-powerful-python-libraries-you-need-to-know-to-enhance-your-eda-process-f0100d563c16?source=post_page-----d7a5ee358be9--------------------------------)
- en: 'The dataset used in this article is a subset of a training dataset used as
    part of a Machine Learning competition run by Xeek and FORCE 2020 *(Bormann et
    al., 2020)*. It is released under a NOLD 2.0 licence from the Norwegian Government,
    details of which can be found here: [Norwegian Licence for Open Government Data
    (NLOD) 2.0](https://data.norge.no/nlod/en/2.0/). The full dataset can be accessed
    [here](https://doi.org/10.5281/zenodo.4351155).'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 本文使用的数据集是 Xeek 和 FORCE 2020 *(Bormann et al., 2020)* 机器学习竞赛的训练数据集的一个子集。它在挪威政府的
    NOLD 2.0 许可下发布，详细信息可以在这里找到：[挪威开放政府数据许可 (NLOD) 2.0](https://data.norge.no/nlod/en/2.0/)。完整数据集可以[在这里访问](https://doi.org/10.5281/zenodo.4351155)。
- en: 'The full reference for the dataset is:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集的完整参考是：
- en: Bormann, Peter, Aursand, Peder, Dilib, Fahad, Manral, Surrender, & Dischington,
    Peter. (2020). FORCE 2020 Well well log and lithofacies dataset for machine learning
    competition [Data set]. Zenodo. [http://doi.org/10.5281/zenodo.4351156](http://doi.org/10.5281/zenodo.4351156)
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: Bormann, Peter, Aursand, Peder, Dilib, Fahad, Manral, Surrender, & Dischington,
    Peter. (2020). FORCE 2020 油井记录和岩性数据集，用于机器学习竞赛 [数据集]. Zenodo. [http://doi.org/10.5281/zenodo.4351156](http://doi.org/10.5281/zenodo.4351156)
- en: '*Thanks for reading. Before you go, you should definitely subscribe to my content
    and get my articles in your inbox.* [***You can do that here!***](https://andymcdonaldgeo.medium.com/subscribe)*Alternatively,
    you can* [***sign up for my newsletter***](https://fabulous-founder-2965.ck.page/2ca286e572)
    *to get additional content straight into your inbox for free.*'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '*感谢阅读。在你离开之前，你一定要订阅我的内容，并将我的文章发送到你的邮箱。* [***你可以在这里操作！***](https://andymcdonaldgeo.medium.com/subscribe)*另外，你也可以*
    [***注册我的通讯***](https://fabulous-founder-2965.ck.page/2ca286e572) *，将额外的内容直接发送到你的邮箱，完全免费。*'
- en: '*Secondly, you can get the full Medium experience and support me and thousands
    of other writers by signing up for a membership. It only costs you $5 a month,
    and you have full access to all of the fantastic Medium articles and the chance
    to make money with your writing. If you sign up using* [***my link***](https://andymcdonaldgeo.medium.com/membership)***,***
    *you will support me directly with a portion of your fee, and it won’t cost you
    more. If you do so, thank you so much for your support!*'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '*其次，您可以通过注册会员来获得完整的 Medium 体验，并支持我和其他数千名作者。它只需每月 $5，并且您可以全面访问所有精彩的 Medium 文章，还可以通过写作赚取收入。如果您使用*
    [***我的链接***](https://andymcdonaldgeo.medium.com/membership)***，*** *您将直接通过您的费用的一部分支持我，而不会增加额外费用。如果您这样做，非常感谢您的支持！*'
