- en: Your First Step Into Computer Vision
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你进入计算机视觉的第一步
- en: 原文：[https://towardsdatascience.com/your-first-step-into-the-field-of-computer-vision-f9928ecb313f](https://towardsdatascience.com/your-first-step-into-the-field-of-computer-vision-f9928ecb313f)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/your-first-step-into-the-field-of-computer-vision-f9928ecb313f](https://towardsdatascience.com/your-first-step-into-the-field-of-computer-vision-f9928ecb313f)
- en: Knowing various Computer Vision tasks and their formats
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解各种计算机视觉任务及其格式
- en: '[](https://sekharm.medium.com/?source=post_page-----f9928ecb313f--------------------------------)[![Sekhar
    M](../Images/7d3b78f65e579c27d68571d07fee8fa3.png)](https://sekharm.medium.com/?source=post_page-----f9928ecb313f--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f9928ecb313f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f9928ecb313f--------------------------------)
    [Sekhar M](https://sekharm.medium.com/?source=post_page-----f9928ecb313f--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://sekharm.medium.com/?source=post_page-----f9928ecb313f--------------------------------)[![Sekhar
    M](../Images/7d3b78f65e579c27d68571d07fee8fa3.png)](https://sekharm.medium.com/?source=post_page-----f9928ecb313f--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f9928ecb313f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f9928ecb313f--------------------------------)
    [Sekhar M](https://sekharm.medium.com/?source=post_page-----f9928ecb313f--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----f9928ecb313f--------------------------------)
    ·8 min read·Jan 30, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----f9928ecb313f--------------------------------)
    ·8分钟阅读·2023年1月30日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/65fda783746f38982c08d7e8a84b8b0e.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/65fda783746f38982c08d7e8a84b8b0e.png)'
- en: 'Image Source: Wikimedia (Creative Commons)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图像来源：维基媒体（创意共享）
- en: 'Introduction:'
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍：
- en: Computer Vision(CV) is the field that makes computers extract information from
    images like how the Human Visual System can do.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机视觉（CV）是让计算机从图像中提取信息的领域，就像人类视觉系统一样。
- en: There are various Computer Vision tasks, all of which typically take an image
    of dimension *W*x*H*x*3* as input and produce the output according to the task
    at hand. While *W* and *H* represent the image’s resolution (Width and Height),
    *3* is the number of channels (*R*, *G*, and *B*).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 有各种计算机视觉任务，所有这些任务通常以维度为*W*x*H*x*3*的图像作为输入，并根据任务生成输出。*W*和*H*表示图像的分辨率（宽度和高度），*3*是通道数（*R*、*G*和*B*）。
- en: “The first step to solving a problem is to define it well.”
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “解决问题的第一步是定义它。”
- en: This article covers various Computer Vision tasks and their formats, defined
    mathematically, highlighting what the corresponding inputs and outputs for each
    task are.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本文涵盖了各种计算机视觉任务及其格式，从数学上定义，突出每个任务的相应输入和输出。
- en: 'Various Computer Vision tasks:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 各种计算机视觉任务：
- en: '[Image Classification](#be14)'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[图像分类](#be14)'
- en: '- Binary Classification'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 二分类'
- en: '- Multi-class Classification'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 多类别分类'
- en: '- Multi-label Classification'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 多标签分类'
- en: '[Classification with Localization](#3ea9)'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[带有定位的分类](#3ea9)'
- en: '[Object Detection](#f87c)'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[目标检测](#f87c)'
- en: '[Image Segmentation](#a794)'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[图像分割](#a794)'
- en: '- Semantic Segmentation'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 语义分割'
- en: '- Instance Segmentation'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 实例分割'
- en: '- Panoptic Segmentation'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 全景分割'
- en: '1\. Image Classification:'
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 图像分类：
- en: Image Classification is the task of classifying or categorizing a given image
    into pre-defined classes.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图像分类是将给定图像分类或归类为预定义类别的任务。
- en: 'Binary Classification:'
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 二分类：
- en: Binary classification classifies a given image into either of the two pre-defined
    classes.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 二分类将给定图像分类为两个预定义类别中的一个。
- en: '**Input:** X — Dimension: *W* x *H* x *3*'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**输入：** X — 维度：*W* x *H* x *3*'
- en: '**Output:** Y — Dimension: *1*'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：** Y — 维度：*1*'
- en: Here, the ground truth value of an output Y will be either 1 or 0 (for positive
    and negative examples, respectively).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，输出Y的真实值将是1或0（分别表示正例和负例）。
- en: However, a binary classification model’s output will typically be a number between
    0 and 1, which will be treated as a probability of the input image belonging to
    the positive class.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，二分类模型的输出通常是介于0和1之间的一个数字，这个数字将被视为输入图像属于正类的概率。
- en: '![](../Images/54bdc50168da698db03994ddbf227926.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/54bdc50168da698db03994ddbf227926.png)'
- en: Binary Classification Model (Image by Author)
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 二分类模型（图片由作者提供）
- en: The below example classifies an input image into either ‘Cat’ or ‘Not a Cat.’
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的例子将输入图像分类为‘猫’或‘非猫’。
- en: '![](../Images/017e70a08da9a86099a73b68f9459e53.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/017e70a08da9a86099a73b68f9459e53.png)'
- en: Binary Classification Example (Image by Author)
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 二分类示例（图片来源于作者）
- en: 'Multi-class Classification:'
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多类别分类：
- en: Multi-class classification classifies a given image into one among the many(*n*)
    pre-defined classes.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 多类别分类将给定的图像分类为多个预定义类别中的一个。
- en: '**Input:** X — Dimension: *W* x *H* x *3*'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**输入：** X — 维度：*W* x *H* x *3*'
- en: '**Output:** Y — Dimension: *n* x *1*'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：** Y — 维度：*n* x *1*'
- en: Here, the ground truth value of an output Y will be a one-hot encoded vector
    (position of 1 indicating the class assigned to the input image).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，输出Y的真实值将是一个一维独热编码向量（1的位置表示分配给输入图像的类别）。
- en: However, a multi-class classification model’s output will typically be a vector
    of numbers between 0 and 1, all of which add up to 1\. These will be treated as
    probabilities of the input image belonging to the respective classes.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，多类别分类模型的输出通常是一个介于0和1之间的数值向量，这些数值的总和为1。这些数值将被视为输入图像属于各个类别的概率。
- en: '![](../Images/19306c367baaba9a35646d7c4cf60ec2.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/19306c367baaba9a35646d7c4cf60ec2.png)'
- en: Multi-class Classification Model (Image by Author)
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 多类别分类模型（图片来源于作者）
- en: The below example classifies an input image into one among the n pre-defined
    classes.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的例子将输入图像分类为n个预定义类别中的一个。
- en: '![](../Images/32718ed60e745c46a975abec7b49a4c2.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/32718ed60e745c46a975abec7b49a4c2.png)'
- en: Multi-class Classification Example (Image by Author)
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 多类别分类示例（图片来源于作者）
- en: 'Multi-label Classification:'
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多标签分类：
- en: Multi-label classification is similar to multi-class classification except that
    the input image can be assigned with more than one pre-defined class among *n*.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 多标签分类与多类别分类类似，不同之处在于输入图像可以被分配给多个预定义的类别中的一个或多个。
- en: '**Input:** X — Dimension: *W* x *H* x *3*'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**输入：** X — 维度：*W* x *H* x *3*'
- en: '**Output:** Y — Dimension: *n* x *1*'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：** Y — 维度：*n* x *1*'
- en: Here, the ground truth value of an output Y can have 1 in more than one position.
    So, it can be a binary vector instead of a one-hot vector.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，输出Y的真实值可以在多个位置上为1。因此，它可以是一个二值向量，而不是一个独热编码向量。
- en: However, a multi-label classification model’s output will typically be a vector
    of numbers between 0 and 1\. Note that these numbers need not add up to 1 since
    an input image can belong to more than one pre-defined class at a time. Each number
    is treated as the probability of the input image belonging to the corresponding
    class.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，多标签分类模型的输出通常是一个介于0和1之间的数值向量。注意，这些数值的总和不需要为1，因为一个输入图像可以同时属于多个预定义的类别。每个数值被视为输入图像属于对应类别的概率。
- en: '![](../Images/12ebb2d15a743a32afb89bb84c53e528.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/12ebb2d15a743a32afb89bb84c53e528.png)'
- en: Multi-label Classification Model (Image by Author)
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 多标签分类模型（图片来源于作者）
- en: The below example assigns multiple classes to a given input image as applicable.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的例子将多个类别分配给给定的输入图像。
- en: '![](../Images/785e6265e4dbdaa94fe7299fd62ddbde.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/785e6265e4dbdaa94fe7299fd62ddbde.png)'
- en: Multi-label Classification Example (Image by Author)
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 多标签分类示例（图片来源于作者）
- en: '2\. Classification With Localization:'
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 带定位的分类：
- en: Classification with localization typically means a multi-class classification
    along with localizing the portion of the input image that determined its classification
    output.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 带定位的分类通常意味着多类别分类，同时定位决定分类输出的输入图像部分。
- en: '**Input:** X — Dimension: *W* x *H* x *3*'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**输入：** X — 维度：*W* x *H* x *3*'
- en: '**Output:** Y — Dimension: *(1+4+n)* x *1*'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：** Y — 维度：*(1+4+n)* x *1*'
- en: In the ground truth value of Y, `*Pc*`is 1 if anyone among *n* classes is present
    in the input image and is 0 otherwise. `*bx*`, `*by*`, `*bw*`, and `*bh*` represent
    the bounding box around the portion that determined the classification output.
    And `*C1*` to `*Cn*` is the one-hot vector representing the classification.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在Y的真实值中，`*Pc*`为1如果输入图像中存在任意一个* n* 类别，否则为0。`*bx*`、`*by*`、`*bw*`和`*bh*`表示确定分类输出的部分的边界框。`*C1*`到`*Cn*`是表示分类的一维独热编码向量。
- en: Note that when none of the *n* classes is present in the input image, `*Pc*`
    is 0, and the rest of the values in the output are immaterial.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，当输入图像中没有任何一个* n* 类别时，`*Pc*` 为0，输出中的其他值则不重要。
- en: '![](../Images/915bdb5b158501fbfb69a9233edf4dc0.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/915bdb5b158501fbfb69a9233edf4dc0.png)'
- en: Classification with Localization Model (Image by Author)
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 带定位的分类模型（图片来源于作者）
- en: The below example classifies the input image as a Horse along with outputting
    the localization information.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的例子将输入图像分类为马，并输出定位信息。
- en: '![](../Images/8318b2d9fcd67ff6d8732de8b233ad0b.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8318b2d9fcd67ff6d8732de8b233ad0b.png)'
- en: Classification with Localization Example (Image by Author)
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 分类与定位示例（图像来源：作者）
- en: While `x`, `y`, `w`, and `h` are the absolute values in the image, `*bx*`, `*bw*`
    are expressed as a fractional value in `W`, and `*bx*`,`*bh*` in `H`.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 `x`、`y`、`w` 和 `h` 是图像中的绝对值，`*bx*` 和 `*bw*` 表示为 `W` 的分数值，`*bx*` 和 `*bh*` 表示为
    `H` 的分数值。
- en: '![](../Images/cc85e36ffab54d879647a4e04449fc0c.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cc85e36ffab54d879647a4e04449fc0c.png)'
- en: Input Image (left) and Localization information superimposed on Input Image
    (right). (Image by Author)
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 输入图像（左）和叠加在输入图像上的定位信息（右）。(图像来源：作者)
- en: Note that the origin (0, 0) is always considered to be the top left corner of
    the image. And `x` is along the width (from left to right) of the image and `y`
    along the height (from top to bottom).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，原点 (0, 0) 始终被认为是图像的左上角。`x` 沿图像的宽度（从左到右），`y` 沿图像的高度（从上到下）。
- en: '3\. Object Detection:'
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3. 物体检测：
- en: Object detection is typically the localization applied to multi-label classification.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 物体检测通常是对多标签分类应用定位。
- en: YOLO is one example of an object detection model. It divides the input image
    into a `gxg` grid of cells and produces one classification-localization vector
    as output for each cell. YOLO Algorithm typically has a grid of size 19x19.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: YOLO 是一种物体检测模型的示例。它将输入图像划分为一个 `gxg` 的网格，并为每个单元产生一个分类-定位向量作为输出。YOLO 算法通常有一个 19x19
    的网格。
- en: '**Input:** X — Dimension: *W* x *H* x *3*'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**输入：** X — 尺寸：*W* x *H* x *3*'
- en: '**Output:** Y — Dimension: *g* x *g* x (*1*+*4*+*n)*'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：** Y — 尺寸：*g* x *g* x (*1*+*4*+*n)*'
- en: '![](../Images/8cbedb7a31a424d8c4f753272aca4ef5.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8cbedb7a31a424d8c4f753272aca4ef5.png)'
- en: Object Detection Model (Image by Author)
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 物体检测模型（图像来源：作者）
- en: In output Y, for each of the `gxg` cells, the third dimension is the vector
    `[*Pc*, *bx*, *by*, *bw*, *bh*, *C1*,...,*Cn*]`. Here, `*bx*`, `*bw*` and `*bx*`,`*bh*`are
    expressed as a fractional value in `Width` and `Height` of the corresponding cell
    respectively (rather than of the Image).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在输出 Y 中，对于每个 `gxg` 单元，第三维是向量 `[*Pc*, *bx*, *by*, *bw*, *bh*, *C1*,...,*Cn*]`。这里，`*bx*`、`*bw*`
    和 `*bx*`、`*bh*` 被表示为对应单元的 `宽度` 和 `高度` 的分数值（而不是图像的）。
- en: Here, the values of `*bw*` and `*bh*` can exceed 1 since the size of the object
    can be more than that of the cell. However, the values of `*bx*` and `*by*` still
    remain between 0 and 1 since the centroid of an object can belong to any one cell
    alone.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`*bw*` 和 `*bh*` 的值可以超过 1，因为物体的大小可能大于单元格的大小。然而，`*bx*` 和 `*by*` 的值仍然保持在 0 和
    1 之间，因为物体的质心只能属于一个单元。
- en: '![](../Images/d7330275e1f7df78d15caddeeb7f20a2.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d7330275e1f7df78d15caddeeb7f20a2.png)'
- en: Input Image (left), 4x4 grid of cells (middle), Output superimposed on cells
    5 and 7 (right) (Image by Author)
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 输入图像（左），4x4 单元网格（中），叠加在单元格 5 和 7 上的输出（右）（图像来源：作者）
- en: 'The ground truth values of the output Y for the above image example with a
    *4*x*4* grid are as below:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 对于上面的图像示例，*4*x*4* 网格的输出 Y 的实际值如下：
- en: For cell positions 5 and 7, the classification-localization vectors are given
    by `[1, 0.90, 0.60, 1.30, 0.95, 1,...,0]` and `[1, 0.55, 0.80, 1.90, 1.20, 1,...,0]`
    respectively. (Assuming Car to be the label 1 among *n* labels)
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 对于单元位置 5 和 7，分类-定位向量分别为 `[1, 0.90, 0.60, 1.30, 0.95, 1,...,0]` 和 `[1, 0.55,
    0.80, 1.90, 1.20, 1,...,0]`。（假设汽车为 *n* 标签中的标签 1）
- en: And for all the other cell positions except 5 and 7, the Classification-Localization
    vector is given by `[0, ?, ?, ?, ?, ?,...,?]`
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 对于除 5 和 7 之外的所有其他单元位置，分类-定位向量为 `[0, ?, ?, ?, ?, ?,...,?]`
- en: When `*Pc*` is 0, the rest of the values in the vector are immaterial. And ‘?’
    here indicates a *don’t care* condition.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 当 `*Pc*` 为 0 时，向量中的其余值无关紧要。‘？’表示 *不关心* 状态。
- en: 'Note: In this algorithm, there can only be one object identified in a cell.
    However, there are other techniques, using anchor boxes, to be able to identify
    multiple objects of different sizes within a single cell.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：在这个算法中，一个单元格中只能识别一个物体。然而，使用锚框等其他技术，可以在一个单元中识别多个不同大小的物体。
- en: '4\. Image Segmentation:'
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4. 图像分割：
- en: Image segmentation is the task of partitioning an image into multiple image
    regions called segments.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图像分割是将图像划分为多个称为区域的任务。
- en: 'Semantic Segmentation:'
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 语义分割：
- en: Semantic segmentation is the task of multi-class classification applied at a
    pixel level, i.e., each pixel of the input image is classified into one of the
    *n* pre-defined classes.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 语义分割是将多类分类应用于像素级任务，即输入图像的每个像素都被分类为 *n* 个预定义类别之一。
- en: '**Input:** X — Dimension: *W* x *H* x *3*'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**输入：** X — 尺寸：*W* x *H* x *3*'
- en: '**Output:** Y — Dimension: *W* x *H* x *n*'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：** Y — 维度：*W* x *H* x *n*'
- en: '![](../Images/7cedb2dd371828073beea6e335df52ba.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7cedb2dd371828073beea6e335df52ba.png)'
- en: Semantic Segmentation Model (Image by Author)
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 语义分割模型（图像由作者提供）
- en: Each *1*x*n* dimensional vector, corresponding to each pixel position in the
    output, represents the label classification of that particular pixel in the input
    image.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 *1*x*n* 维向量，表示输出中每个像素位置，代表输入图像中特定像素的标签分类。
- en: Semantic segmentation does not distinguish between two instances of the same
    class present in the image. It only mentions the category of each pixel. For example,
    pixels from all the Horses present in an image are segmented into the same category
    — Horse pixels.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 语义分割不会区分图像中同一类别的两个实例。它只提及每个像素的类别。例如，图像中所有的马像素被分割为相同类别——马像素。
- en: 'Instance Segmentation:'
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实例分割：
- en: Instance segmentation is object detection followed by per-pixel segmentation
    within the *Region of Interest(RoI)* of each detected object.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 实例分割是在每个检测到的对象的 *兴趣区域 (RoI)* 内进行像素级分割的目标检测。
- en: So, along with the classification label and bounding box, it also outputs a
    binary segmentation mask (of size equal to the corresponding ROI) for each detected
    object.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，除了分类标签和边界框外，它还输出一个每个检测到的对象的二值分割掩码（大小等于相应的ROI）。
- en: '**Input:** X — Dimension: *W* x *H* x *3*'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**输入：** X — 维度：*W* x *H* x *3*'
- en: '**Output:** Y — Dimension: *N* x (*Label* + *Bounding Box + Segmentation Mask)*'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：** Y — 维度：*N* x (*标签* + *边界框 + 分割掩码*)*'
- en: Where *N* is the number of objects detected, the label vector is a vector of
    dimension equal to the number of predetermined classes, the bounding box is represented
    by four values `[*bx,by,bw,bh*]` , and a segmentation mask is a binary mask of
    the size equal to the RoI of the corresponding object.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 *N* 是检测到的对象数量，标签向量是一个维度等于预定类别数量的向量，边界框由四个值 `[*bx,by,bw,bh*]` 表示，分割掩码是与相应对象的RoI大小相等的二值掩码。
- en: This binary segmentation mask highlights the pixels belonging to the object
    from the rest within the bounding box.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这个二值分割掩码突出了属于对象的像素与边界框内其余部分的区别。
- en: As the name suggests, Instance Segmentation distinguishes even between multiple
    instances of the same object class.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 正如其名所示，实例分割即使区分同一对象类别的多个实例。
- en: 'Panoptic Segmentation:'
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 全景分割：
- en: Panoptic segmentation combines semantic segmentation and instance segmentation.
    For every pixel*,* it assigns a *Semantic Class Label*(*l*)and an *Instance ID*(*z*)*.*
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 全景分割结合了语义分割和实例分割。对于每个像素*，* 它分配一个 *语义类别标签* (*l*) 和一个 *实例ID* (*z*)*。*
- en: '**Input:** X — Dimension: *W* x *H* x *3*'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '**输入：** X — 维度：*W* x *H* x *3*'
- en: '**Output:** Y — Dimension: *W* x *H* x one (*l, z)* pair per pixel'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：** Y — 维度：*W* x *H* x 每个像素一个 (*l, z)* 对'
- en: '![](../Images/a63a87aefcded72d8b8adf9a25e46f0b.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a63a87aefcded72d8b8adf9a25e46f0b.png)'
- en: Panoptic segmentation treats the contents of an image as two types — *Things*
    and *Stuff.*
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 全景分割将图像的内容视为两种类型——*Things* 和 *Stuff*。
- en: A ‘Thing’ is any countable object, such as Car, Horse, and Person. And Stuff
    is an uncountable amorphous region of identical texture, such as Sky, Road, Water,
    and Ground.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: ‘Thing’ 是任何可计数的对象，如汽车、马和人。而 Stuff 是一种不可计数的具有相同纹理的区域，如天空、道路、水和地面。
- en: '![](../Images/18b0883b4ad5a8b80e5e35424f517ad0.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/18b0883b4ad5a8b80e5e35424f517ad0.png)'
- en: 'Semantic vs Instance vs Panoptic:'
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 语义 vs 实例 vs 全景：
- en: '![](../Images/f6db37d65be02a725272dd698e4c999a.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f6db37d65be02a725272dd698e4c999a.png)'
- en: '(a) Input Image, (b) Semantic, (c) Instance, (d) Panoptic (Source: [1])'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: (a) 输入图像，(b) 语义，(c) 实例，(d) 全景（来源：[1]）
- en: Note that, in semantic segmentation, there is no distinction between multiple
    instances of the same category, i.e., all Cars together are shown in blue and
    Persons in red, for example.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，在语义分割中，没有区分同一类别的多个实例，即例如，所有汽车被显示为蓝色，所有人被显示为红色。
- en: In instance segmentation, since the initial object detection step detects all
    the object instances present in the image, each ‘Thing’ — Car and Person — is
    segmented individually while all the ‘Stuff’ is ignored.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在实例分割中，由于初始目标检测步骤检测到图像中存在的所有对象实例，每个‘Thing’——汽车和人——被单独分割，而所有‘Stuff’则被忽略。
- en: And in panoptic segmentation, there is a semantic segmentation of both ‘Things’
    as well as ‘Stuff’ while each instance of a ‘Thing’ is also segmented individually.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在全景分割中，既对‘Thing’进行语义分割，也对‘Stuff’进行语义分割，同时每个‘Thing’的实例也被单独分割。
- en: And in panoptic segmentation, there is a semantic segmentation of both ‘Things’
    as well as ‘Stuff’ while each instance of a ‘Thing’ is also segmented individually.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在全景分割中，不仅对“物体”和“材料”进行语义分割，而且每一个“物体”实例也被单独分割。
- en: 'Conclusion:'
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论：
- en: The field of Computer Vision has several applications ranging from Autonomous
    Vehicle Driving to Medical Image Analysis, which employ these various Computer
    Vision tasks.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机视觉领域有多个应用，从自动驾驶到医学图像分析，这些应用都使用了各种计算机视觉任务。
- en: Since the first step to solving a problem is to define it well, I hope this
    article — demystifying various Computer Vision tasks — will be of good use to
    anyone breaking into the field of Computer Vision.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 由于解决问题的第一步是对其进行明确的定义，我希望这篇文章——解密各种计算机视觉任务——对任何进入计算机视觉领域的人都能有所帮助。
- en: 'References:'
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献：
- en: '[1] Kirillov et al., Panoptic Segmentation, 2019.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] Kirillov 等人，《全景分割》，2019年。'
- en: '[2] He et al., Mask R-CNN, 2017.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] He 等人，《Mask R-CNN》，2017年。'
- en: '[3] Redmon et al., You Only Look Once, 2015.'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '[3] Redmon 等人，《你只看一次》，2015年。'
