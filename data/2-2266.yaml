- en: Using DuckDB with Polars
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 DuckDB 与 Polars
- en: 原文：[https://towardsdatascience.com/using-duckdb-with-polars-e15a865e48a3](https://towardsdatascience.com/using-duckdb-with-polars-e15a865e48a3)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/using-duckdb-with-polars-e15a865e48a3](https://towardsdatascience.com/using-duckdb-with-polars-e15a865e48a3)
- en: Learn how to use SQL to query your Polars DataFrames
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解如何使用 SQL 查询你的 Polars DataFrame
- en: '[](https://weimenglee.medium.com/?source=post_page-----e15a865e48a3--------------------------------)[![Wei-Meng
    Lee](../Images/10fc13e8a6858502d6a7b89fcaad7a10.png)](https://weimenglee.medium.com/?source=post_page-----e15a865e48a3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e15a865e48a3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e15a865e48a3--------------------------------)
    [Wei-Meng Lee](https://weimenglee.medium.com/?source=post_page-----e15a865e48a3--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://weimenglee.medium.com/?source=post_page-----e15a865e48a3--------------------------------)[![Wei-Meng
    Lee](../Images/10fc13e8a6858502d6a7b89fcaad7a10.png)](https://weimenglee.medium.com/?source=post_page-----e15a865e48a3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e15a865e48a3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e15a865e48a3--------------------------------)
    [Wei-Meng Lee](https://weimenglee.medium.com/?source=post_page-----e15a865e48a3--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e15a865e48a3--------------------------------)
    ·6 min read·Apr 14, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e15a865e48a3--------------------------------)
    ·阅读时间 6 分钟·2023年4月14日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/cbb9711706d8c7fc20b5950a3119d9d5.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cbb9711706d8c7fc20b5950a3119d9d5.png)'
- en: Photo by [Hans-Jurgen Mager](https://unsplash.com/@hansjurgen007?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[Hans-Jurgen Mager](https://unsplash.com/@hansjurgen007?utm_source=medium&utm_medium=referral)
    在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral) 上的照片'
- en: 'In my previous few articles on data analytics, I talk about two important up-and-coming
    libraries that are currently gaining a lot of tractions in the industry:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在我之前关于数据分析的几篇文章中，我讨论了两个在业界逐渐受到关注的重要新兴库：
- en: '**DuckDB** — where you can query your dataset in-memory using SQL statements.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DuckDB** — 你可以使用 SQL 语句在内存中查询数据集。'
- en: '**Polars** — a much more efficient DataFrame library compared to the venerable
    Pandas library.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Polars** — 与久负盛名的 Pandas 库相比，更高效的数据框库。'
- en: '[](https://levelup.gitconnected.com/using-duckdb-for-data-analytics-bab3e3ff032c?source=post_page-----e15a865e48a3--------------------------------)
    [## Using DuckDB for Data Analytics'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://levelup.gitconnected.com/using-duckdb-for-data-analytics-bab3e3ff032c?source=post_page-----e15a865e48a3--------------------------------)
    [## 使用 DuckDB 进行数据分析'
- en: Learn how to use SQL to perform data analytics
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 了解如何使用 SQL 进行数据分析
- en: levelup.gitconnected.com](https://levelup.gitconnected.com/using-duckdb-for-data-analytics-bab3e3ff032c?source=post_page-----e15a865e48a3--------------------------------)
    [](/getting-started-with-the-polars-dataframe-library-6f9e1c014c5c?source=post_page-----e15a865e48a3--------------------------------)
    [## Getting Started with the Polars DataFrame Library
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[levelup.gitconnected.com](https://levelup.gitconnected.com/using-duckdb-for-data-analytics-bab3e3ff032c?source=post_page-----e15a865e48a3--------------------------------)
    [](/getting-started-with-the-polars-dataframe-library-6f9e1c014c5c?source=post_page-----e15a865e48a3--------------------------------)
    [## 开始使用 Polars DataFrame 库'
- en: Learn how to manipulate tabular data using the Polars dataframe library (and
    replace Pandas)
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 了解如何使用 Polars DataFrame 库操作表格数据（并替代 Pandas）
- en: towardsdatascience.com](/getting-started-with-the-polars-dataframe-library-6f9e1c014c5c?source=post_page-----e15a865e48a3--------------------------------)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/getting-started-with-the-polars-dataframe-library-6f9e1c014c5c?source=post_page-----e15a865e48a3--------------------------------)
- en: What about combining the power of these two libraries?
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，结合这两个库的优势会怎样呢？
- en: In fact, you can directly query a Polars dataframe through DuckDB, using SQL
    statements.
  id: totrans-17
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 实际上，你可以通过 DuckDB 直接使用 SQL 语句查询 Polars 数据框。
- en: 'So what are the benefits of querying your Polars dataframe using SQL? Despite
    the ease of use, manipulating Polars dataframes still require a bit of practise
    and a relatively steep learning curve. But since most developers are already familiar
    with SQL, isn’t it more convenient to manipulate the dataframes directly using
    SQL? Using this approach, developers have the best of both worlds:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，使用 SQL 查询 Polars 数据框有什么好处呢？尽管使用起来很方便，但操作 Polars 数据框仍然需要一些练习和相对陡峭的学习曲线。但由于大多数开发者已经熟悉
    SQL，直接使用 SQL 操作数据框是否更加方便呢？采用这种方法，开发者可以兼得两全其美：
- en: the ability to query Polars dataframes using all the various functions, or
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用所有各种函数查询 Polars 数据框的能力，或者
- en: use SQL for cases where it is much more natural and easier to extract the data
    that they want
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在数据提取时，使用 SQL 进行更自然、更简单的操作
- en: In this article, I will give you some examples of how you can make use of SQL
    through DuckDB to query your Polars dataframes.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我将给你一些如何通过 DuckDB 使用 SQL 查询 Polars 数据框的示例。
- en: Installing Polars and DuckDB
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Polars 和 DuckDB
- en: 'For this article, I am using Jupyter Notebook. Ensure that you have installed
    Polars and DuckDB using the following commands:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这篇文章，我正在使用 Jupyter Notebook。确保你已经通过以下命令安装了 Polars 和 DuckDB：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Creating a Polars DataFrame
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建 Polars 数据框
- en: 'To get started, let’s create a Polars DataFrame by hand:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用，让我们手动创建一个 Polars 数据框：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Here’s how the dataframe looks:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 数据框的样子如下：
- en: '![](../Images/4bb866b4933fae6c0685796b7e4a1e30.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4bb866b4933fae6c0685796b7e4a1e30.png)'
- en: All images by author
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 所有图片由作者提供
- en: 'Say, you now want to find all phones from Apple which has sales of more than
    80\. You can use the `filter()` function in Polars, like this:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 比如，你现在想找出所有苹果公司销售量超过 80 的手机。你可以使用 Polars 中的 `filter()` 函数，如下所示：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'And the result looks like this:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下所示：
- en: '![](../Images/f098ddc50e2829d6a26b202146a398e2.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f098ddc50e2829d6a26b202146a398e2.png)'
- en: Using SQL on Polars DataFrames
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Polars 数据框上使用 SQL
- en: 'Let’s now do the exact query that we did in the previous section, except that
    this time round we will use DuckDB with a SQL statement. But first, let’s select
    all the rows in the dataframe:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们执行与前一节相同的查询，只不过这次我们将使用 DuckDB 和 SQL 语句。不过首先，让我们选择数据框中的所有行：
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/4d50095af9274b5ae4e2576f9e17f367.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4d50095af9274b5ae4e2576f9e17f367.png)'
- en: You can directly reference the `df` dataframe from your SQL statement.
  id: totrans-39
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可以直接在 SQL 语句中引用 `df` 数据框。
- en: 'Using DuckDB, you issue a SQL statement using the `sql()` function. Alternatively,
    the `query()` function also works:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 DuckDB 时，你可以通过 `sql()` 函数发出 SQL 语句。或者，`query()` 函数也可以使用：
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The `result` variable is a `duckdb.DuckDBPyRelation` object. Using this object,
    you can perform quite a number of different tasks, such as:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`result` 变量是一个 `duckdb.DuckDBPyRelation` 对象。使用这个对象，你可以执行许多不同的任务，例如：'
- en: 'Getting the mean of the **Sales** column:'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算 **销售额** 列的平均值：
- en: '[PRE5]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/091914145b671517fd57378f896f92ab.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/091914145b671517fd57378f896f92ab.png)'
- en: 'Describing the dataframe:'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述数据框：
- en: '[PRE6]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/a0c80c8875f5263c64246451a45d4d28.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a0c80c8875f5263c64246451a45d4d28.png)'
- en: 'Applying a scaler function to the columns in the dataframe:'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对数据框中的列应用缩放函数：
- en: '[PRE7]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../Images/73659ac83d2d352e7c9b25c89aabcbe0.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/73659ac83d2d352e7c9b25c89aabcbe0.png)'
- en: 'Reordering the dataframe:'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新排序数据框：
- en: '[PRE8]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](../Images/dc415b24e3fa94c1c3333e8f90e64c34.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dc415b24e3fa94c1c3333e8f90e64c34.png)'
- en: But the easiest way is to query the Polars DataFrame is to use SQL directly.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 但最简单的方式是直接使用 SQL 查询 Polars 数据框。
- en: 'For example, if you want to get all the rows with sales greater than 80, simply
    use the `sql()` function with the SQL statement below:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你想获取所有销售量大于 80 的行，只需使用 `sql()` 函数和以下 SQL 语句：
- en: '[PRE9]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](../Images/040257cca6b5961a73c12a190c0f5963.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/040257cca6b5961a73c12a190c0f5963.png)'
- en: The `pl()` function converts the `duckdb.DuckDBPyRelation` object to a Polars
    DataFrame. If you want to convert it to a Pandas DataFrame instead, use the `df()`
    function.
  id: totrans-59
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`pl()` 函数将 `duckdb.DuckDBPyRelation` 对象转换为 Polars 数据框。如果你想将其转换为 Pandas 数据框，请使用
    `df()` 函数。'
- en: 'If you want to get all the rows whose model name starts with “*iPhone*”, then
    use the following SQL statement:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想获取所有型号名称以“*iPhone*”开头的行，请使用以下 SQL 语句：
- en: '[PRE10]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![](../Images/db8c004f556c41e592182fe2b9df15f5.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/db8c004f556c41e592182fe2b9df15f5.png)'
- en: 'If you want all devices from *Apple* and *Xiao Mi*, then use the following
    SQL statement:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想获取 *Apple* 和 *Xiao Mi* 的所有设备，请使用以下 SQL 语句：
- en: '[PRE11]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![](../Images/8e98424eb7dd2ce0c60aee96851c10dc.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8e98424eb7dd2ce0c60aee96851c10dc.png)'
- en: 'The real power of using DuckDB with Polars DataFrame is when you want to query
    from multiple dataframes. Consider the following three CSV files from the **2015
    Flights Delay** dataset:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 DuckDB 与 Polars 数据框的真正强大之处在于你想从多个数据框中查询时。考虑以下来自 **2015年航班延误** 数据集的三个 CSV
    文件：
- en: '**2015 Flights Delay dataset** — [https://www.kaggle.com/datasets/usdot/flight-delays](https://www.kaggle.com/datasets/usdot/flight-delays).
    **Licensing —** [CC0: Public Domain](https://creativecommons.org/publicdomain/zero/1.0/)'
  id: totrans-67
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**2015年航班延误数据集** — [https://www.kaggle.com/datasets/usdot/flight-delays](https://www.kaggle.com/datasets/usdot/flight-delays)。**许可证
    —** [CC0: 公开领域](https://creativecommons.org/publicdomain/zero/1.0/)'
- en: flights.csv
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: flights.csv
- en: airlines.csv
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: airlines.csv
- en: airports.csv
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: airports.csv
- en: 'Let’s load them up using Polars:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用 Polars 加载它们：
- en: '[PRE12]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The above statements use lazy evaluation to load up the three CSV files. This
    ensures that any queries on the dataframes are not performed until all the queries
    are optimized. The `collect()` function forces Polars to load the CSV files into
    dataframes.
  id: totrans-73
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 上述语句使用了惰性求值来加载这三个 CSV 文件。这确保了在优化所有查询之前，不会对数据框执行任何查询。`collect()` 函数强制 Polars
    将 CSV 文件加载到数据框中。
- en: 'Here is how the `df_flights`, `df_airlines`, and `df_airports` dataframes look
    like:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是 `df_flights`、`df_airlines` 和 `df_airports` 数据框的样子：
- en: '![](../Images/076397b1b57dcc0891cadea711ca2e06.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/076397b1b57dcc0891cadea711ca2e06.png)'
- en: 'Suppose you want to count the number of times an airline has a delay , and
    at the same time display the name of each airline, here is the SQL statement that
    you can use using the `df_airlines` and `df_flights` dataframes:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你想统计一家航空公司延误的次数，同时显示每家航空公司的名称，这里是你可以使用的 SQL 语句，使用 `df_airlines` 和 `df_flights`
    数据框：
- en: '[PRE13]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'And here is the result:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![](../Images/ef73a955174fd254140ac86f4113281b.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ef73a955174fd254140ac86f4113281b.png)'
- en: 'If you want to count the number of airports in each state and sort the count
    in descending order, you can use the following SQL statement:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想统计每个州的机场数量并按降序排序，可以使用以下 SQL 语句：
- en: '[PRE14]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![](../Images/c7e20ebbe013dcef94abc9c60f0fa139.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c7e20ebbe013dcef94abc9c60f0fa139.png)'
- en: 'Finally, suppose you want to know which airline has the highest average delay.
    You can use the following SQL statement to calculate the various statistics, such
    as *minimum arrival delay*, *maximum array delay*, *mean arrival delay*, and *standard
    deviation of arrival delay*:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，假设你想知道哪家航空公司有最高的平均延误时间。你可以使用以下 SQL 语句计算各种统计数据，如 *最小到达延误*、*最大到达延误*、*平均到达延误*
    和 *到达延误的标准差*：
- en: '[PRE15]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![](../Images/7a4765e06988734c7d87d811ce38a1ff.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7a4765e06988734c7d87d811ce38a1ff.png)'
- en: Based on the mean arrival delay, we can see that the AS airline is the one with
    the shortest delay (as the value is negative, this means most of the time it arrives
    earlier!) and NK airline is the one with the longest delay. Want to know what
    is the AS airline? Try it out using what you have just learned! I will leave it
    as an exercise and the answer is at the end of this article.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 根据平均到达延误，我们可以看到 AS 航空公司是延误最短的航空公司（由于值为负，这意味着大多数情况下它会更早到达！），而 NK 航空公司是延误最长的航空公司。想知道
    AS 航空公司是什么吗？尝试使用你刚学到的知识！我将把它留作练习，答案在本文末尾。
- en: '**If you like reading my articles and that it helped your career/study, please
    consider signing up as a Medium member. It is $5 a month, and it gives you unlimited
    access to all the articles (including mine) on Medium. If you sign up using the
    following link, I will earn a small commission (at no additional cost to you).
    Your support means that I will be able to devote more time on writing articles
    like this.**'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果你喜欢阅读我的文章并且它对你的职业/学习有所帮助，请考虑注册成为 Medium 会员。每月仅需 5 美元，你将获得对 Medium 上所有文章（包括我的文章）的无限制访问。如果你通过以下链接注册，我将获得一小部分佣金（对你没有额外费用）。你的支持意味着我可以花更多时间写更多类似的文章。**'
- en: '[](https://weimenglee.medium.com/membership?source=post_page-----e15a865e48a3--------------------------------)
    [## Join Medium with my referral link - Wei-Meng Lee'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 通过我的推荐链接加入 Medium - Wei-Meng Lee](https://weimenglee.medium.com/membership?source=post_page-----e15a865e48a3--------------------------------)'
- en: Read every story from Wei-Meng Lee (and thousands of other writers on Medium).
    Your membership fee directly supports…
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阅读 Wei-Meng Lee 的每个故事（以及 Medium 上其他成千上万的作家的故事）。你的会员费直接支持……
- en: weimenglee.medium.com](https://weimenglee.medium.com/membership?source=post_page-----e15a865e48a3--------------------------------)
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '[weimenglee.medium.com](https://weimenglee.medium.com/membership?source=post_page-----e15a865e48a3--------------------------------)'
- en: Summary
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this short article, I illustrated how DuckDB and Polars can be used together
    to query your dataframes. Utilizing both libraries gives you the best of both
    worlds — using a familiar querying language (which is SQL) to query an efficient
    dataframe. Go ahead and try it out using your own dataset and share with us how
    it has helped your data analytics processes.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇简短的文章中，我展示了如何将 DuckDB 和 Polars 结合使用来查询你的数据框。利用这两个库，你可以享受最好的两个世界——使用熟悉的查询语言（即
    SQL）来查询高效的数据框。快用你自己的数据集试试看，并与我们分享它是如何帮助你的数据分析过程的。
- en: '*Answer to quiz:*'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '*问答题答案：*'
- en: '[PRE16]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
