- en: 'Expose Kubernetes Volumes Securely Over HTTP: How to Serve PVC on the Internet'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过HTTP安全地暴露Kubernetes卷：如何在互联网上服务PVC
- en: 原文：[https://towardsdatascience.com/expose-kubernetes-volumes-securely-over-http-how-to-serve-pvc-on-the-internet-67f10f448693?source=collection_archive---------10-----------------------#2023-02-08](https://towardsdatascience.com/expose-kubernetes-volumes-securely-over-http-how-to-serve-pvc-on-the-internet-67f10f448693?source=collection_archive---------10-----------------------#2023-02-08)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/expose-kubernetes-volumes-securely-over-http-how-to-serve-pvc-on-the-internet-67f10f448693?source=collection_archive---------10-----------------------#2023-02-08](https://towardsdatascience.com/expose-kubernetes-volumes-securely-over-http-how-to-serve-pvc-on-the-internet-67f10f448693?source=collection_archive---------10-----------------------#2023-02-08)
- en: Create Kubernetes manifests to expose PersistentVolumeClaims
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建Kubernetes清单以暴露PersistentVolumeClaims
- en: '[](https://meysam.io/?source=post_page-----67f10f448693--------------------------------)[![Meysam](../Images/32fd0f84e6a880a584ee310facb587b9.png)](https://meysam.io/?source=post_page-----67f10f448693--------------------------------)[](https://towardsdatascience.com/?source=post_page-----67f10f448693--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----67f10f448693--------------------------------)
    [Meysam](https://meysam.io/?source=post_page-----67f10f448693--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://meysam.io/?source=post_page-----67f10f448693--------------------------------)[![Meysam](../Images/32fd0f84e6a880a584ee310facb587b9.png)](https://meysam.io/?source=post_page-----67f10f448693--------------------------------)[](https://towardsdatascience.com/?source=post_page-----67f10f448693--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----67f10f448693--------------------------------)
    [Meysam](https://meysam.io/?source=post_page-----67f10f448693--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Feb4a2e2f734a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexpose-kubernetes-volumes-securely-over-http-how-to-serve-pvc-on-the-internet-67f10f448693&user=Meysam&userId=eb4a2e2f734a&source=post_page-eb4a2e2f734a----67f10f448693---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----67f10f448693--------------------------------)
    ·7 min read·Feb 8, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F67f10f448693&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexpose-kubernetes-volumes-securely-over-http-how-to-serve-pvc-on-the-internet-67f10f448693&user=Meysam&userId=eb4a2e2f734a&source=-----67f10f448693---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Feb4a2e2f734a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexpose-kubernetes-volumes-securely-over-http-how-to-serve-pvc-on-the-internet-67f10f448693&user=Meysam&userId=eb4a2e2f734a&source=post_page-eb4a2e2f734a----67f10f448693---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----67f10f448693--------------------------------)
    · 7 min read · 2023年2月8日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F67f10f448693&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexpose-kubernetes-volumes-securely-over-http-how-to-serve-pvc-on-the-internet-67f10f448693&user=Meysam&userId=eb4a2e2f734a&source=-----67f10f448693---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F67f10f448693&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexpose-kubernetes-volumes-securely-over-http-how-to-serve-pvc-on-the-internet-67f10f448693&source=-----67f10f448693---------------------bookmark_footer-----------)![](../Images/0699da88213fc3e1b6e62163670dea6f.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F67f10f448693&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexpose-kubernetes-volumes-securely-over-http-how-to-serve-pvc-on-the-internet-67f10f448693&source=-----67f10f448693---------------------bookmark_footer-----------)![](../Images/0699da88213fc3e1b6e62163670dea6f.png)'
- en: Photo by [Uriel Soberanes](https://unsplash.com/@soberanes?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/s/photos/deep-ocean?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Uriel Soberanes](https://unsplash.com/@soberanes?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    在 [Unsplash](https://unsplash.com/s/photos/deep-ocean?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
- en: Intro
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: You may have encountered a situation in your daily product development where
    you needed to get your hands on some persisted files residing in the Kubernetes
    cluster. One common & safe approach is to do port-forwarding, whether with the
    help of Kubectl or pure SSH using a bastion host.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能在日常的产品开发中遇到过这样一种情况，需要获取Kubernetes集群中某些持久化文件。一种常见且安全的方法是进行端口转发，无论是通过Kubectl还是使用堡垒主机进行纯SSH。
- en: In either case, after you're done with the task, you'd terminate the session,
    and for every future interaction, you'd go through the same manual process every
    time.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 无论哪种情况，完成任务后，你会终止会话，并且每次未来的交互中，你都需要重复相同的手动过程。
- en: It might be ideal, security-wise, to keep your environment as sealed as possible,
    not giving the adversaries any chance & it is a valid reason to keep it like that.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 从安全角度看，理想情况下，你的环境应该尽可能密封，不给对手任何机会，这也是保持这种状态的合理原因。
- en: But, if you want long-running exposure to the underlying storage out on the
    internet, this article is for you.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果你想要长期在互联网上暴露底层存储，这篇文章就是为你准备的。
- en: 'First Things First: Authentication'
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 首先：认证
- en: As this file server will be exposed publicly to the internet, your first and
    most important line of defense is the authentication layer. To put that into perspective,
    a formal definition of **authentication** is necessary.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 由于该文件服务器将公开暴露在互联网上，你的首要和最重要的防线是认证层。为了阐明这一点，有必要提供**认证**的正式定义。
- en: Authentication is the act of proving an assertion, such as the identity of a
    computer system user. [[source](https://en.wikipedia.org/wiki/Authentication)]
  id: totrans-16
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 认证是证明一个主张的行为，例如计算机系统用户的身份。[[source](https://en.wikipedia.org/wiki/Authentication)]
- en: In layperson's terms, authentication happens when a system user proves he is
    who he claims to be!
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 通俗来说，认证发生在系统用户证明他是他所声称的人的时候！
- en: Now that we've cleared that let's dig out some options for integrating authentication
    into our webserver (further below).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经清楚了这一点，让我们深入探讨一些将认证集成到我们的 web 服务器中的选项（见下文）。
- en: Using Nginx or Apache as a **proxy**, with the help of `htpasswd`, an [Apache
    tool](https://httpd.apache.org/docs/2.4/programs/htpasswd.html) that allows storing
    an encrypted username-password pair in a file, which can later be used to verify
    a given password.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Nginx 或 Apache 作为**代理**，借助 `htpasswd`，这是一个[Apache 工具](https://httpd.apache.org/docs/2.4/programs/htpasswd.html)，它允许在文件中存储加密的用户名-密码对，之后可以用来验证给定的密码。
- en: '[Ory Oathkeeper](https://www.google.com/url?sa=t&rct=j&q=&esrc=s&cd=&cad=rja&uact=8&ved=2ahUKEwjrrMvg_vr8AhVqyXMBHesLD2YQFnoECBYQAQ&url=https%3A%2F%2Fwww.ory.sh%2Fdocs%2Foathkeeper&usg=AOvVaw3lE0kJQsgKh6i4iwjk7_dX)
    as a **proxy**, with the help of [Kratos](https://www.google.com/url?sa=t&rct=j&q=&esrc=s&cd=&cad=rja&uact=8&ved=2ahUKEwiEue_r_vr8AhX2ErcAHeuXAUMQFnoECBUQAQ&url=https%3A%2F%2Fwww.ory.sh%2Fkratos%2F&usg=AOvVaw0nIrUC8QOSo2f1dZW32Yhg),
    another one of Ory''s products, as the **identity provider**. This is somewhat
    more complex than the earlier approach, and it takes some learning curve to master
    the configuration and the provisioning of those two. I will cover another article
    later about this, so stay tuned! 😉'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Ory Oathkeeper](https://www.google.com/url?sa=t&rct=j&q=&esrc=s&cd=&cad=rja&uact=8&ved=2ahUKEwjrrMvg_vr8AhVqyXMBHesLD2YQFnoECBYQAQ&url=https%3A%2F%2Fwww.ory.sh%2Fdocs%2Foathkeeper&usg=AOvVaw3lE0kJQsgKh6i4iwjk7_dX)
    作为**代理**，借助 [Kratos](https://www.google.com/url?sa=t&rct=j&q=&esrc=s&cd=&cad=rja&uact=8&ved=2ahUKEwiEue_r_vr8AhX2ErcAHeuXAUMQFnoECBUQAQ&url=https%3A%2F%2Fwww.ory.sh%2Fkratos%2F&usg=AOvVaw0nIrUC8QOSo2f1dZW32Yhg)，这是
    Ory 的另一个产品，作为**身份提供者**。这比早期的方法稍微复杂一些，需要一些学习曲线来掌握配置和这些工具的提供。我会在稍后的文章中覆盖这一点，所以请继续关注！😉'
- en: Of course, you can add many more to this list, but for the sake of keeping this
    article short, and honestly, because I don't know many other solutions, I'll suffice
    to the two items above for the moment.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，你可以将更多内容添加到这个列表中，但为了保持本文简洁，老实说，因为我对其他解决方案不太了解，我暂时就以上两个项目满足要求。
- en: Another point I want to mention here is that since this article is about **exposure
    to the internet**, I'm not talking about private network solutions here. Still,
    you can imagine that will also be one **safe** option.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个我要提到的点是，由于这篇文章涉及到**互联网的暴露**，我这里不谈论私人网络解决方案。不过，你可以想象这也会是一个**安全**的选项。
- en: Now that we know Ory's products are not the easiest to provision and that the
    author is not an authentication expert 😁 let's [keep it simple](https://en.wikipedia.org/wiki/KISS_principle)
    and go for the first approach.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们知道 Ory 的产品不是最容易配置的，而且作者也不是认证专家 😁，让我们[保持简单](https://en.wikipedia.org/wiki/KISS_principle)并采用第一种方法。
- en: Create the `htpasswd` File
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建 `htpasswd` 文件
- en: '`htpasswd` is quite a simple tool to enforce a [**Basic** authentication](https://www.rfc-editor.org/rfc/rfc7617#section-2)
    mechanism into any platform. It works by receiving a username and a password as
    input. The result will be a one-way hashed password in a file or standard output
    that can later be used to **verify** the user credential. Still, it can [not be
    reversed (de-hashed) to the original password](https://www.quora.com/Is-it-possible-to-reverse-a-password-hashed-with-bcrypt)
    in a reasonable amount of time, at least [not in 2023, with our current computing
    capacity](https://www.quora.com/How-would-quantum-computers-render-one-way-hashing-algorithms-like-SHA-256-Bitcoin-useless-Would-they-somehow-be-able-to-reverse-the-hashes-or-would-they-just-be-better-at-finding-collisions)!'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '`htpasswd`是一个相当简单的工具，用于将[**基本**认证](https://www.rfc-editor.org/rfc/rfc7617#section-2)机制应用到任何平台。它通过接收用户名和密码作为输入来工作。结果将是一个单向哈希密码，存储在文件或标准输出中，随后可以用来**验证**用户凭证。然而，它[不能在合理的时间内被还原（解哈希）为原始密码](https://www.quora.com/Is-it-possible-to-reverse-a-password-hashed-with-bcrypt)，至少[在2023年，考虑到我们当前的计算能力](https://www.quora.com/How-would-quantum-computers-render-one-way-hashing-algorithms-like-SHA-256-Bitcoin-useless-Would-they-somehow-be-able-to-reverse-the-hashes-or-would-they-just-be-better-at-finding-collisions)!'
- en: To have a simple demonstration, look at the snippet below.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要进行简单演示，请查看下面的片段。
- en: This will only create a new file for a user and tries to verify it with both
    the correct password and the wrong one.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这将仅为用户创建一个新文件，并尝试用正确的密码和错误的密码进行验证。
- en: We will use the same in our "Secure File Server," exposed publicly to the internet.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在我们的“安全文件服务器”中使用相同的设置，公开暴露到互联网。
- en: Reverse Proxy
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 反向代理
- en: Unless you want to handle the authentication on the file server layer (I know
    I won't), you'll use a reverse proxy to sit right in front, receiving every traffic
    and failing all those with the wrong credentials. You may even add another restricting
    measure, including but not limited to rate-limiting, logging, instrumentation,
    reporting, etc.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 除非你想在文件服务器层处理认证（我知道我不会），你将使用反向代理来位于前面，接收所有流量，并拒绝所有凭证错误的请求。你甚至可以添加其他限制措施，包括但不限于速率限制、日志记录、仪表化、报告等。
- en: 'Apache & Nginx can both work with a `htpasswd` generated file to verify the
    credential. You can see the links below for more information on each:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Apache 和 Nginx 都可以使用`htpasswd`生成的文件来验证凭证。有关每个的更多信息，请参见以下链接：
- en: '[https://httpd.apache.org/docs/2.4/howto/auth.html](https://httpd.apache.org/docs/2.4/howto/auth.html)'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://httpd.apache.org/docs/2.4/howto/auth.html](https://httpd.apache.org/docs/2.4/howto/auth.html)'
- en: '[https://docs.nginx.com/nginx/admin-guide/security-controls/configuring-http-basic-authentication/](https://docs.nginx.com/nginx/admin-guide/security-controls/configuring-http-basic-authentication/)'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.nginx.com/nginx/admin-guide/security-controls/configuring-http-basic-authentication/](https://docs.nginx.com/nginx/admin-guide/security-controls/configuring-http-basic-authentication/)'
- en: I'm sure other web servers are fine, doing the same stuff as the one mentioned
    here.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信其他Web服务器也可以，做同样的事情。
- en: In this article, I'm going to go with Nginx & since this will be hosted in Kubernetes,
    it will be a docker container of Nginx. This allows me to mount any number of
    config files into the `/etc/nginx/conf.d` directory, and the Nginx web server
    process picks it up.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我将使用Nginx，并且由于这将托管在Kubernetes中，它将是一个Nginx的docker容器。这允许我将任意数量的配置文件挂载到`/etc/nginx/conf.d`目录中，Nginx
    Web服务器进程会拾取这些配置文件。
- en: So, if I can mount any config file in the directory, I can write a config file
    in a [Kubernetes ConfigMap](https://kubernetes.io/docs/concepts/configuration/configmap/),
    and mount that into the container's desired directory. This is both powerful and
    quite flexible.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果我可以将任何配置文件挂载到目录中，我可以在[Kubernetes ConfigMap](https://kubernetes.io/docs/concepts/configuration/configmap/)中编写配置文件，并将其挂载到容器的目标目录。这既强大又相当灵活。
- en: This is the configuration I'm about to mount into the Nginx container.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我即将挂载到Nginx容器中的配置。
- en: The entry named`proxy_pass`you see in the configuration file points to the file
    server that will expose the file system's directory using the HTTP protocol. More
    on this in the next section.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 配置文件中名为`proxy_pass`的条目指向将通过HTTP协议暴露文件系统目录的文件服务器。更多内容请见下一节。
- en: '![](../Images/441ddc1ea43bca0cf61688ae43b84759.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/441ddc1ea43bca0cf61688ae43b84759.png)'
- en: Photo by [Carl Barcelo](https://unsplash.com/@barcelocarl?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/s/photos/gymnastic?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Carl Barcelo](https://unsplash.com/@barcelocarl?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    提供，来源于 [Unsplash](https://unsplash.com/s/photos/gymnastic?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
- en: File Server Over HTTP
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过 HTTP 提供文件
- en: There are just a few to mention among the many other static web servers.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多其他静态 web 服务器中，只提到其中的一些。
- en: '[Python module:](https://docs.python.org/3/library/http.server.html) `[http.server](https://docs.python.org/3/library/http.server.html)`'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 模块:](https://docs.python.org/3/library/http.server.html) `[http.server](https://docs.python.org/3/library/http.server.html)`'
- en: '[Npm:](https://www.npmjs.com/package/serve/v/14.2.0) `[serve](https://www.npmjs.com/package/serve/v/14.2.0)`'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Npm:](https://www.npmjs.com/package/serve/v/14.2.0) `[serve](https://www.npmjs.com/package/serve/v/14.2.0)`'
- en: '[Nginx static serving](https://docs.nginx.com/nginx/admin-guide/web-server/serving-static-content/)'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Nginx 静态服务](https://docs.nginx.com/nginx/admin-guide/web-server/serving-static-content/)'
- en: Of course, this list can grow more, but we're trying to keep it short and informative.
    😇
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这个列表可以更多，但我们试图保持简短和信息丰富。😇
- en: 'In this article, I''ll be using Python''s builtin module: `http.server`. It
    has got a straightforward and intuitive interface and makes usage straightforward.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我将使用 Python 的内置模块：`http.server`。它具有直接和直观的接口，使得使用非常简单。
- en: 'The way you can serve static content with it is as below:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 使用它提供静态内容的方式如下：
- en: '[PRE0]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This works very well, especially since you don't need to do a lot of magic to
    make it work.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这效果很好，特别是因为你不需要做很多复杂的操作来使它工作。
- en: Having this web server running and **accessible** from the Nginx container means
    you can mount your PersistentVolumeClaims in the static web server & place the
    Nginx described above right in front of it to gate for unauthenticated access
    to your precious data in the Kubernetes cluster.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 运行并**可访问**的 web 服务器从 Nginx 容器中意味着你可以将 PersistentVolumeClaims 挂载到静态 web 服务器上，并将上述
    Nginx 放置在前面，以防止未认证的访问你的 Kubernetes 集群中的宝贵数据。
- en: Mount Kubernetes ConfigMap as Volume
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 挂载 Kubernetes ConfigMap 为 Volume
- en: Before we wrap it all up into one unified manifest, one last critical piece
    of information is used in this approach and needs a little explanation. But if
    you're already a master on how to mount a ConfigMap as a Volume to a container
    in Kubernetes, feel free to skip this section.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们将所有内容汇总为一个统一的清单之前，还有一个最后的关键信息在这种方法中使用，需要一点解释。但如果你已经是 Kubernetes 中如何将 ConfigMap
    挂载为容器 Volume 的大师，可以跳过这一部分。
- en: 'To mount a Kubernetes ConfigMap as a Volume, you use the projection in the
    volumes'' section of the container definition like below [[source](https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/volume/#projections)]:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 要将 Kubernetes ConfigMap 挂载为 Volume，你可以在容器定义的 volumes 部分使用 projection，如下所示 [[source](https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/volume/#projections)]：
- en: Right at the same level as `containers` , there is a `volumes` defined, which
    can accept a couple of volume types, one being ConfigMap. This allows for defining
    some script and passing that as volume to the running container.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `containers` 相同级别下，定义了 `volumes`，它可以接受几种 volume 类型，其中之一是 ConfigMap。这允许定义一些脚本并将其作为
    volume 传递给运行中的容器。
- en: After creating the manifest above, here's what the logs will show from the container.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 创建上述清单后，以下是容器日志中显示的内容。
- en: '[PRE1]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Wrapping it All Together
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结合所有内容
- en: 'Now that we''ve seen all the information piece by piece, it''s time to put
    them together to serve as a unified manifest, which will be used for one sole
    purpose: **An HTTP serving file server.**'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经逐步了解了所有信息，是时候将它们结合在一起，作为一个统一的清单，用于一个唯一的目的：**一个 HTTP 文件服务器**。
- en: The second file, an Ingress resource, is optional but still included since this
    article was about publicly exposing an HTTP static webserver. You will only get
    internet exposure if you create the Ingress.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个文件，一个 Ingress 资源，是可选的，但仍然包含在内，因为这篇文章是关于公开暴露 HTTP 静态网页服务器的。只有创建 Ingress 才能获得互联网曝光。
- en: 'To get another safety measure in place, you can assign a UUID-generated value
    to your subdomain to avoid having only the username & password as your ONLY security
    measure. It can be something like this:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 为了增加另一层安全措施，你可以为子域分配一个 UUID 生成的值，以避免仅使用用户名和密码作为唯一的安全措施。它可以是这样的：
- en: '[PRE2]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Otherwise, you're only as safe as your username & password, and if your brand
    gives away the username you have assigned, then you're only as secure as your
    password, and that's different from the position you'd like to put yourself in!
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 否则，你的安全性仅与用户名和密码相同，如果你的品牌暴露了你分配的用户名，那么你的安全性就仅仅取决于你的密码，而这与你希望的安全状态不同！
- en: Also, remember that you will need HTTPS. You never want to have some random
    fellow eavesdrop on your connection, watching you transmit precious customer data
    over the internet.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，请记得你需要 HTTPS。你绝不希望有陌生人窃听你的连接，监视你通过互联网传输宝贵的客户数据。
- en: '![](../Images/c07e959a8e5d41359349f86ddb138797.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c07e959a8e5d41359349f86ddb138797.png)'
- en: Photo by [Haley Phelps](https://unsplash.com/@haleyephelps?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/s/photos/swimming?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Haley Phelps](https://unsplash.com/@haleyephelps?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    提供，来自 [Unsplash](https://unsplash.com/s/photos/swimming?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
- en: Conclusion
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Since this is Kubernetes we're talking about, there is no tying to any cloud
    providers, and you simply apply this practice anywhere with a Kubernetes cluster.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们讨论的是 Kubernetes，这与任何云服务提供商无关，你只需在任何 Kubernetes 集群中应用这个做法。
- en: This will effectively mean that you can securely expose your dynamic provisioned
    persistent volumes to the internet!
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这将有效地意味着你可以安全地将动态配置的持久卷暴露到互联网上！
- en: Take the "secure" part with a grain of salt since this is not the safest bet,
    but you can still protect yourself if you assign a random string to the subdomain
    of your Ingress. That way, the attacker will have to find the URL out of many
    combinations on the internet, effectively taking many years. By which time, we
    may have all been gone by then!
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 对于“安全”部分，需持保留态度，因为这并不是最安全的选择，但如果你给你的 Ingress 的子域名分配一个随机字符串，你仍然可以保护自己。这样，攻击者将不得不在互联网上找到多个组合中的
    URL，这将需要很多年。到那时，我们可能都已经离开了！
- en: Have an excellent rest of the day. [Stay tuned](https://meysam.io/), and take
    care!
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 祝你今天过得愉快。[保持关注](https://meysam.io/)，保重！
- en: Acknowledgment
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 致谢
- en: I hope you find this helpful article. Here's a list of some of my previous work
    you might enjoy.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你觉得这篇文章对你有帮助。以下是一些你可能会喜欢的我以前的工作列表。
- en: '[](/how-to-set-up-ingress-controller-in-aws-eks-d745d9107307?source=post_page-----67f10f448693--------------------------------)
    [## How to Set Up Ingress Controller in AWS EKS'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/how-to-set-up-ingress-controller-in-aws-eks-d745d9107307?source=post_page-----67f10f448693--------------------------------)
    [## 如何在 AWS EKS 中设置 Ingress Controller'
- en: Deploy Ingress Controller on AWS EKS the right way
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 AWS EKS 上以正确的方式部署 Ingress Controller
- en: towardsdatascience.com](/how-to-set-up-ingress-controller-in-aws-eks-d745d9107307?source=post_page-----67f10f448693--------------------------------)
    [](https://meysam.io/what-is-haproxy-how-to-get-the-most-from-of-it-a9009b67f618?source=post_page-----67f10f448693--------------------------------)
    [## What is HAProxy & how to get the most out of it?
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/how-to-set-up-ingress-controller-in-aws-eks-d745d9107307?source=post_page-----67f10f448693--------------------------------)
    [](https://meysam.io/what-is-haproxy-how-to-get-the-most-from-of-it-a9009b67f618?source=post_page-----67f10f448693--------------------------------)
    [## 什么是 HAProxy 及如何充分利用它？
- en: Balancing load, SSL/TLS, caching, and many more.
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 负载均衡、SSL/TLS、缓存等等。
- en: meysam.io](https://meysam.io/what-is-haproxy-how-to-get-the-most-from-of-it-a9009b67f618?source=post_page-----67f10f448693--------------------------------)
    [](/how-to-write-your-own-github-action-59cc4746a57a?source=post_page-----67f10f448693--------------------------------)
    [## How to Write Your Own GitHub Action
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: meysam.io](https://meysam.io/what-is-haproxy-how-to-get-the-most-from-of-it-a9009b67f618?source=post_page-----67f10f448693--------------------------------)
    [](/how-to-write-your-own-github-action-59cc4746a57a?source=post_page-----67f10f448693--------------------------------)
    [## 如何编写自己的 GitHub Action
- en: Complete your CI/CD toolbox with GitHub Workflows.
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 用 GitHub Workflows 完善你的 CI/CD 工具箱。
- en: towardsdatascience.com](/how-to-write-your-own-github-action-59cc4746a57a?source=post_page-----67f10f448693--------------------------------)
    [](https://medium.com/licenseware/12-factor-app-for-dummies-d905d894d9f8?source=post_page-----67f10f448693--------------------------------)
    [## 12-Factor App For Dummies
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/how-to-write-your-own-github-action-59cc4746a57a?source=post_page-----67f10f448693--------------------------------)
    [](https://medium.com/licenseware/12-factor-app-for-dummies-d905d894d9f8?source=post_page-----67f10f448693--------------------------------)
    [## 12-Factor App 入门
- en: The 12-Factor App is a set of principles and best practices applied to modern
    web development to make apps more…
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 12-Factor App 是一组应用于现代 Web 开发的原则和最佳实践，以使应用程序更加……
- en: medium.com](https://medium.com/licenseware/12-factor-app-for-dummies-d905d894d9f8?source=post_page-----67f10f448693--------------------------------)
    [](https://medium.com/licenseware/stop-committing-configurations-to-your-source-code-fb37be351492?source=post_page-----67f10f448693--------------------------------)
    [## Stop Committing Configurations to your Source Code
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: medium.com](https://medium.com/licenseware/12-factor-app-for-dummies-d905d894d9f8?source=post_page-----67f10f448693--------------------------------)
    [](https://medium.com/licenseware/stop-committing-configurations-to-your-source-code-fb37be351492?source=post_page-----67f10f448693--------------------------------)
    [## 停止将配置提交到源代码中
- en: Making apps reproducible across different environments with a change in the
    configuration.
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过更改配置使应用程序在不同环境中可复现。
- en: medium.com](https://medium.com/licenseware/stop-committing-configurations-to-your-source-code-fb37be351492?source=post_page-----67f10f448693--------------------------------)
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: medium.com](https://medium.com/licenseware/stop-committing-configurations-to-your-source-code-fb37be351492?source=post_page-----67f10f448693--------------------------------)
- en: References
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考资料
- en: '[http://nginx.org/en/docs/](http://nginx.org/en/docs/)'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://nginx.org/en/docs/](http://nginx.org/en/docs/)'
- en: '[https://kubernetes.io/docs/](https://kubernetes.io/docs/)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://kubernetes.io/docs/](https://kubernetes.io/docs/)'
