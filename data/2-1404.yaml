- en: 'Learning Math Through Code: Derivatives'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过代码学习数学：导数
- en: 原文：[https://towardsdatascience.com/learning-math-through-code-derivatives-bbcd2df166d3](https://towardsdatascience.com/learning-math-through-code-derivatives-bbcd2df166d3)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/learning-math-through-code-derivatives-bbcd2df166d3](https://towardsdatascience.com/learning-math-through-code-derivatives-bbcd2df166d3)
- en: Gain a deeper understanding of derivatives with Python
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过 Python 深入了解导数
- en: '[](https://harrisonfhoffman.medium.com/?source=post_page-----bbcd2df166d3--------------------------------)[![Harrison
    Hoffman](../Images/5eaa3e2bd0507297eb6c4a7efcf06324.png)](https://harrisonfhoffman.medium.com/?source=post_page-----bbcd2df166d3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----bbcd2df166d3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----bbcd2df166d3--------------------------------)
    [Harrison Hoffman](https://harrisonfhoffman.medium.com/?source=post_page-----bbcd2df166d3--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://harrisonfhoffman.medium.com/?source=post_page-----bbcd2df166d3--------------------------------)[![哈里森·霍夫曼](../Images/5eaa3e2bd0507297eb6c4a7efcf06324.png)](https://harrisonfhoffman.medium.com/?source=post_page-----bbcd2df166d3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----bbcd2df166d3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----bbcd2df166d3--------------------------------)
    [哈里森·霍夫曼](https://harrisonfhoffman.medium.com/?source=post_page-----bbcd2df166d3--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----bbcd2df166d3--------------------------------)
    ·5 min read·Mar 20, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----bbcd2df166d3--------------------------------)
    ·阅读时间 5 分钟·2023年3月20日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/c8e5f9d8443fa9c5a1bd237257397a82.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c8e5f9d8443fa9c5a1bd237257397a82.png)'
- en: Team Leibniz. Image by Author.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 莱布尼茨团队。图片由作者提供。
- en: Mathematics is a notoriously difficult subject for many. Because of its cumulative
    and abstract nature, students can find it challenging to make connections and
    understand how math is applied. In my ongoing journey, I’ve found it extremely
    helpful to enhance my understanding of math concepts by implementing them in code.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 数学对许多人来说是一个 notoriously difficult 的学科。由于其累积性和抽象性，学生可能会发现很难建立联系并理解数学的应用。在我不断的学习过程中，我发现通过实现代码来增强对数学概念的理解是非常有帮助的。
- en: Coding demands precision because computers can only execute a specific set of
    instructions. The need for exactness requires a logical and systematic approach
    to problem-solving, which can be incredibly beneficial for understanding the underlying
    concepts. Through coding, we can develop a more profound intuition for the idea
    being implemented. Moreover, coding allows us to experiment with, visualize and
    automate mathematical concepts in an interactive and hands-on way, which can bring
    theoretical concepts to life and enhance our learning experience.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 编程要求精确，因为计算机只能执行特定的一组指令。对精确性的需求要求采用逻辑和系统化的问题解决方法，这对理解基础概念非常有帮助。通过编程，我们可以对所实现的理念形成更深刻的直觉。此外，编程允许我们以互动和动手的方式实验、可视化和自动化数学概念，这可以使理论概念生动起来，提升我们的学习体验。
- en: In this article, we will try to gain a better understanding of derivatives by
    implementing the “forward difference quotient” approximation in python. While
    this is a simple implementation requiring little code, it gets to the heart of
    what derivatives represent.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将通过在 Python 中实现“前向差分商”近似，来更好地理解导数。虽然这是一个简单的实现，所需代码很少，但它揭示了导数所代表的核心。
- en: What is a derivative?
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是导数？
- en: 'Let’s begin by stating the definition of the derivative. Because there are
    plenty of freely available resources on derivatives, this explanation will not
    be comprehensive. The derivative of a function f(x) with respect to x is defined
    as:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们定义导数。由于有许多免费的导数资源，这个解释不会是全面的。函数 f(x) 对 x 的导数定义为：
- en: '![](../Images/ef8ebfb5eb61371d186b6278ca09e135.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ef8ebfb5eb61371d186b6278ca09e135.png)'
- en: The definition of a derivative in one dimension. Image by Author.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 一维情况下的导数定义。图片由作者提供。
- en: The derivative tells us, at a single point, the *direction* and *rate* at which
    a function is changing. By picking two points x and x + h, computing the slope
    of the function between the two points (i.e. (f(x+h) — f(x)) / h), and allowing
    h to get infinitely close to 0, we recover the instantaneous rate of change (the
    derivative) of the function at x.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 导数告诉我们在某一点，函数变化的*方向*和*速率*。通过选择两个点x和x + h，计算这两个点之间函数的斜率（即(f(x+h) — f(x)) / h），并让h无限接近0，我们恢复了函数在x处的瞬时变化率（即导数）。
- en: Approximating Derivatives in Python
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用Python近似计算导数
- en: 'The most abstract and perhaps difficult-to-understand component of the derivative
    is that h gets infinitely close to 0 without actually reaching 0\. We can write
    a function in python that approximates this idea:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 导数最抽象且可能最难理解的部分是h接近0但实际上不会达到0\。我们可以用Python编写一个函数来近似这个概念：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This function takes in a [pure function](https://en.wikipedia.org/wiki/Pure_function#:~:text=In%20computer%20programming%2C%20a%20pure,arguments%20or%20input%20streams)%2C%20and)
    of a single variable, and approximates the derivative at the point(s) specified
    in the x argument. The actual logic of this function resides in a single line
    of code, yet it approximates many derivatives within a tolerable error.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数接收一个[纯函数](https://en.wikipedia.org/wiki/Pure_function#:~:text=In%20computer%20programming%2C%20a%20pure,arguments%20or%20input%20streams)%2C%20and)作为输入，该函数仅有一个变量，并在x参数指定的点处近似计算导数。这个函数的实际逻辑只存在于一行代码中，但它能在可接受的误差范围内近似计算多个导数。
- en: 'To see this in action, let’s approximate the derivative of the quadratic function.
    By the power rule (or by computing the limit of the difference quotient), we know
    that:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要观察这个过程，我们可以近似计算二次函数的导数。根据幂法则（或通过计算差商的极限），我们知道：
- en: '![](../Images/741adf72fb3150c04e2949019c432f34.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/741adf72fb3150c04e2949019c432f34.png)'
- en: The derivative of the quadratic function. Image by Author.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 二次函数的导数。图片来源：作者。
- en: 'As an example, the derivative of the function at x = 3 is 2*3 = 6\. The following
    code approximates the derivative of the quadratic function at x = 3:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，函数在x = 3处的导数是2*3 = 6\。以下代码近似计算了x = 3处的二次函数的导数：
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'By setting h to be a small positive number close to 0, we extract an approximation
    to the derivative which is close to the true value. As h gets smaller (up to a
    [certain tolerance](https://acme.byu.edu/0000017a-17ef-d8b9-adfe-77ef210e0000/vol1b-numericalderivatiation-2017-pdf)),
    the approximation gets more accurate:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将h设置为接近0的小正数，我们提取出一个接近真实值的导数近似值。随着h变得更小（直到达到[某个容忍度](https://acme.byu.edu/0000017a-17ef-d8b9-adfe-77ef210e0000/vol1b-numericalderivatiation-2017-pdf)），近似值会变得更加准确：
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We can visualize this behavior for decreasing values of h:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将这种行为可视化，以观察h值逐渐减小时的效果：
- en: '![](../Images/093fc26d3d0ef32cf7ba07fe23c25682.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/093fc26d3d0ef32cf7ba07fe23c25682.png)'
- en: As the value of h decreases, the derivative approximation gets more accurate
    (converging towards 6). Image by Author.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 随着h的值减小，导数的近似值变得更准确（趋近于6）。图片来源：作者。
- en: 'Another interesting example involves the trigonometric functions. From the
    definition of the derivative, we [know the following](https://www.youtube.com/watch?v=HVvCbnrUxek):'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有趣的例子涉及三角函数。根据导数的定义，我们[知道以下内容](https://www.youtube.com/watch?v=HVvCbnrUxek)：
- en: '![](../Images/860edfc457250e1606013244a887a234.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/860edfc457250e1606013244a887a234.png)'
- en: The derivative of sin(x) is cos(x). Image by Author.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: sin(x)的导数是cos(x)。图片来源：作者。
- en: 'Using the derivative function, we can approximate this:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 使用导数函数，我们可以进行如下近似：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/128d33bfbf1785f902f978309f5a35f0.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/128d33bfbf1785f902f978309f5a35f0.png)'
- en: The approximated derivative of sin(x) resembles cos(x). Image by Author.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: sin(x)的近似导数类似于cos(x)。图片来源：作者。
- en: Final Thoughts
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最后的思考
- en: The derivative approximation implemented in this article is known as the “forward
    difference quotient” and is one of many ways to perform numerical differentiation.
    It’s important to note that this approximation is imperfect, as it tends to [break
    down](https://acme.byu.edu/0000017a-17ef-d8b9-adfe-77ef210e0000/vol1b-numericalderivatiation-2017-pdf)
    for small values of h. Moreover, in practice, we can compute exact derivatives
    of close-form functions, removing the need for approximations. The purpose of
    this article was to help the reader see how the math plays out through code and
    hopefully increase their intuition for derivatives. I would encourage the reader
    to test the code on different functions, explore other derivative approximations,
    and understand the respective strengths and weaknesses. Thanks for reading!
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 本文实现的导数近似称为“前向差分商”，它是进行数值微分的众多方法之一。需要注意的是，这种近似是不完美的，因为它在`h`的值很小时往往会[崩溃](https://acme.byu.edu/0000017a-17ef-d8b9-adfe-77ef210e0000/vol1b-numericalderivatiation-2017-pdf)。此外，在实际应用中，我们可以计算封闭形式函数的精确导数，避免近似的需求。本文的目的是帮助读者通过代码了解数学如何运作，并希望增强他们对导数的直觉。我鼓励读者在不同的函数上测试代码，探索其他导数近似方法，并理解各自的优缺点。感谢阅读！
- en: References
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: '***Numerical Derivatives***— [https://acme.byu.edu/0000017a-17ef-d8b9-adfe-77ef210e0000/vol1b-numericalderivatiation-2017-pdf](https://acme.byu.edu/0000017a-17ef-d8b9-adfe-77ef210e0000/vol1b-numericalderivatiation-2017-pdf)'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '***数值导数***— [https://acme.byu.edu/0000017a-17ef-d8b9-adfe-77ef210e0000/vol1b-numericalderivatiation-2017-pdf](https://acme.byu.edu/0000017a-17ef-d8b9-adfe-77ef210e0000/vol1b-numericalderivatiation-2017-pdf)'
