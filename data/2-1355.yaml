- en: Introduction to Optimization Constraints with SciPy
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 SciPy 的优化约束介绍
- en: 原文：[https://towardsdatascience.com/introduction-to-optimization-constraints-with-scipy-7abd44f6de25](https://towardsdatascience.com/introduction-to-optimization-constraints-with-scipy-7abd44f6de25)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/introduction-to-optimization-constraints-with-scipy-7abd44f6de25](https://towardsdatascience.com/introduction-to-optimization-constraints-with-scipy-7abd44f6de25)
- en: Explore bounds, linear and nonlinear constraints with practical Python examples
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索边界、线性和非线性约束，并结合实际 Python 示例
- en: '[](https://nicolo-albanese.medium.com/?source=post_page-----7abd44f6de25--------------------------------)[![Nicolo
    Cosimo Albanese](../Images/9a2c26207146741b58c3742927d09450.png)](https://nicolo-albanese.medium.com/?source=post_page-----7abd44f6de25--------------------------------)[](https://towardsdatascience.com/?source=post_page-----7abd44f6de25--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----7abd44f6de25--------------------------------)
    [Nicolo Cosimo Albanese](https://nicolo-albanese.medium.com/?source=post_page-----7abd44f6de25--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://nicolo-albanese.medium.com/?source=post_page-----7abd44f6de25--------------------------------)[![Nicolo
    Cosimo Albanese](../Images/9a2c26207146741b58c3742927d09450.png)](https://nicolo-albanese.medium.com/?source=post_page-----7abd44f6de25--------------------------------)[](https://towardsdatascience.com/?source=post_page-----7abd44f6de25--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----7abd44f6de25--------------------------------)
    [Nicolo Cosimo Albanese](https://nicolo-albanese.medium.com/?source=post_page-----7abd44f6de25--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----7abd44f6de25--------------------------------)
    ·8 min read·Jan 31, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----7abd44f6de25--------------------------------)
    ·8 分钟阅读·2023年1月31日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/d21debedc54b93104a0d8720c23d510f.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d21debedc54b93104a0d8720c23d510f.png)'
- en: Image by author.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: Table of contents
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 目录
- en: '[Introduction](#d414)'
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[介绍](#d414)'
- en: '[Implementation](#5bb0)'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[实现](#5bb0)'
- en: 2.1 [Unconstrained optimization](#b0a9)
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 2.1 [无约束优化](#b0a9)
- en: 2.2 [Bounds](#5ca2)
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 2.2 [边界](#5ca2)
- en: 2.3 [Linear constraints](#a9d0)
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 2.3 [线性约束](#a9d0)
- en: 2.4 [Nonlinear constraints](#e5dd)
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 2.4 [非线性约束](#e5dd)
- en: 2.5 [Applying different constraint types together](#694a)
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 2.5 [同时应用不同约束类型](#694a)
- en: '[Conclusions](#1887)'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[结论](#1887)'
- en: 1\. Introduction
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 介绍
- en: Optimization is the process of picking the best elements from a set of potential
    candidates to reach a specific goal.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 优化是从一组潜在候选元素中选择最佳元素以达到特定目标的过程。
- en: 'We perform a lot of optimization tasks in our everyday life: finding the shortest
    or fastest route to reach a destination, preparing a to-do list with daily assignments
    ordered by priority, buying groceries.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在日常生活中执行许多优化任务：寻找最短或最快的到达目的地路线，准备按优先级排序的待办事项清单，购买杂货。
- en: We can describe such problems starting with the definition of an **objective
    function** `**f(x)**`.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过定义**目标函数**`**f(x)**`来描述此类问题。
- en: Let us imagine that we are organizing a journey to another city, and we are
    trying assess a suitable departure time. In this example, the objective function
    `f(x)` is the duration of the trip as function of the departure time `x`.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们假设我们正在组织一次去另一座城市的旅行，并尝试评估一个合适的出发时间。在这个例子中，目标函数`f(x)`是出发时间`x`作为旅行持续时间的函数。
- en: 'We can formulate an optimization problem as the **identification of the minimum
    or maximum value of the objective function**. In our example, we want to determine
    the departure time that will *minimize* the duration of the trip:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将优化问题表述为**目标函数的最小值或最大值的确定**。在我们的例子中，我们想要确定一个出发时间，以*最小化*旅行的持续时间：
- en: '![](../Images/53058bafd753fc24b8787f2bae65a947.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/53058bafd753fc24b8787f2bae65a947.png)'
- en: 'In other scenarios, we may want to maximize `f(x)`. For instance, when the
    objective represents a likelihood or a return of investment. Nevertheless, maximizing
    a function is equivalent to minimizing its negative. Therefore, one may focus
    on minimization problems alone:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在其他情况下，我们可能希望最大化`f(x)`。例如，当目标表示某种可能性或投资回报时。然而，最大化一个函数等同于最小化其负值。因此，人们可以仅关注最小化问题：
- en: '![](../Images/14906b0b542215c7c747bb23b40cc4c4.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/14906b0b542215c7c747bb23b40cc4c4.png)'
- en: 'In real-world applications, we may need to apply **constraints** to our optimization
    problem. For example, we may want to find the fastest route, but we are unwilling
    to pay tolls, or travel at night. We define **constrained optimization** as the
    process of minimizing the objective function under some logical conditions that
    may reflect:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际应用中，我们可能需要对优化问题应用**约束**。例如，我们可能想找到最快的路线，但我们不愿意支付通行费或夜间旅行。我们将**受约束优化**定义为在一些逻辑条件下最小化目标函数，这些条件可能反映：
- en: real-world limitations;
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现实世界的限制；
- en: the physical meaning of the input variables;
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入变量的物理意义；
- en: contextual circumstances.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 上下文情况。
- en: 'In this post, we share an optimization example using `[SciPy](https://scipy.org/)`,
    a popular Python library for scientific computing. In particular, we **explore
    the most common constraint types**: bounds, linear and nonlinear constraints.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们分享了一个使用 `[SciPy](https://scipy.org/)` 的优化示例，这是一款流行的科学计算 Python 库。特别地，我们**探索最常见的约束类型**：界限、线性约束和非线性约束。
- en: 2\. Implementation
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 实现
- en: 2.1 Unconstrained optimization
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.1 无约束优化
- en: We start from a simple unconstrained optimization problem, and add constraints
    to the input variables later on.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从一个简单的无约束优化问题开始，然后在输入变量上添加约束。
- en: 'Import the needed libraries:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 导入所需的库：
- en: '[PRE0]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Imagine the following multivariable objective function:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 设想以下多变量目标函数：
- en: '![](../Images/2079c6191ec31308b1dfed1d5b7fd9f3.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2079c6191ec31308b1dfed1d5b7fd9f3.png)'
- en: Its gradient with respect to `x₀` and `x₁` is
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 关于`x₀`和`x₁`的梯度为
- en: '![](../Images/662db459c6a779db707e7ef0aec798f2.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/662db459c6a779db707e7ef0aec798f2.png)'
- en: '[PRE1]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Let us generate data and observe the function values for `x₀, x₁ ∈ [-1, 1]`:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们生成数据并观察`x₀, x₁ ∈ [-1, 1]`的函数值：
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/0d7e0e1af54d0729a342fef793aa5d61.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0d7e0e1af54d0729a342fef793aa5d61.png)'
- en: Objective function. Image by author.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 目标函数。图片由作者提供。
- en: In our example, the objective function is **non-convex** and possesses several
    minima.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的示例中，目标函数是**非凸**的，并且具有多个最小值。
- en: This implies that, depending on the starting point, the problem may converge
    to a different minimizer.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着，根据起点不同，问题可能会收敛到不同的最小化器。
- en: 'We can solve the optimization problem by leveraging the helpful `[scipy.optimize.minimize](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.minimize.html)`
    function as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以利用有用的 `[scipy.optimize.minimize](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.minimize.html)`
    函数来解决优化问题，具体如下：
- en: '[PRE3]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Notably, we are applying the `trust-constr` method. It allows to optimize a
    function subject to constraints. More information on the method is available in
    the [package documentation](https://docs.scipy.org/doc/scipy/reference/optimize.minimize-trustconstr.html)
    and in "*Trust-region methods*" ([Conn, Gould and Toint; 2000](https://doi.org/10.1137/1.9780898719857)).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，我们应用了 `trust-constr` 方法。它允许对受约束的函数进行优化。有关该方法的更多信息，请参见 [包文档](https://docs.scipy.org/doc/scipy/reference/optimize.minimize-trustconstr.html)
    和 "*Trust-region methods*" ([Conn, Gould and Toint; 2000](https://doi.org/10.1137/1.9780898719857))。
- en: 'The above code snippet returns the found minimizer:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码片段返回找到的最小化器：
- en: '[PRE4]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Let us plot it:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们绘制它：
- en: '[PRE5]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/66d4997ba1de5aa3755f82614ac329c5.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/66d4997ba1de5aa3755f82614ac329c5.png)'
- en: Objective function and its minimizer. Image by author.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 目标函数及其最小化器。图片由作者提供。
- en: We can now experiment the addition of constraints.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以尝试添加约束。
- en: 2.2 Bounds
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.2 界限
- en: Let us consider our previous example about finding the fastest trip between
    two cities, with the departure time as input variable. We may expect to find more
    or less traffic depending on the hour of the day. By aiming at minimizing the
    duration of the trip, a model may also suggest, for instance, to travel at night.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑之前的示例，即在两个城市之间找到最快的旅行路线，出发时间作为输入变量。我们可能会根据一天中的时间预期找到更多或更少的交通。通过以最小化旅行时间为目标，模型也可能建议，例如，夜间旅行。
- en: Although this might result in the shortest trip, we may prefer to travel during
    daytime. So, we could ask the model to find the shortest trip considering departure
    times ranging from 7.00 AM to 6.00 PM only.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这可能会导致最短的旅行时间，但我们可能更喜欢白天旅行。因此，我们可以要求模型在早上7:00到下午6:00之间的出发时间范围内找到最短的旅行时间。
- en: This is where bounds come in. Bounds are simply **equality or inequality constraints
    on input variables**. They allow to evaluate the objective function solely **between
    the specified ranges**.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这时界限就派上用场了。界限只是对输入变量的**等式或不等式约束**。它们允许仅**在指定范围之间**评估目标函数。
- en: 'In our case, suppose to have the following acceptable values for `x₀` and `x₁`:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的情况下，假设`x₀`和`x₁`有以下可接受的值：
- en: '![](../Images/713880e133fbe83aaff59ff2641d1306.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/713880e133fbe83aaff59ff2641d1306.png)'
- en: 'We can easily pass these values to the `[Bounds](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.Bounds.html)`
    object and perform a new optimization experiment as follows:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以轻松地将这些值传递给`[Bounds](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.Bounds.html)`对象，并进行新的优化实验，如下所示：
- en: '[PRE6]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The optimization task leads now to a different solution, as the previous point
    `array([0 , 0])` does not fall in the feasible region:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 优化任务现在导致了一个不同的解决方案，因为之前的点`array([0 , 0])`不在可行区域内：
- en: '[PRE7]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'We can finally plot the new minimum and the feasible region, and observe the
    area in which `f(x)` was evaluated:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以最终绘制新的最小值和可行区域，并观察`f(x)`被评估的区域：
- en: '[PRE8]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](../Images/9b2da2d21a86ce185cf9379a050ea493.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9b2da2d21a86ce185cf9379a050ea493.png)'
- en: Objective function with “unconstrained” minimum (red dot) and minimum resulting
    from the application of bounds (blue dot). The applied variables ranges identify
    the grey colored area (feasible region).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 目标函数的“无约束”最小值（红点）和应用边界后的最小值（蓝点）。应用的变量范围标识了灰色区域（可行区域）。
- en: 2.3 Linear constraints
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.3 线性约束
- en: Linear constraints define linear relations between the optimization variables.
    For example, let us imagine `x₀` and `x₁` to be subject to
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 线性约束定义了优化变量之间的线性关系。例如，假设`x₀`和`x₁`受到以下约束：
- en: '![](../Images/cd9d55e32117cab6c5e0dd5f0ce82be8.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cd9d55e32117cab6c5e0dd5f0ce82be8.png)'
- en: 'We can easily rewrite these conditions as a linear system, and pass them to
    the `[LinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.LinearConstraint.html)`
    object before running the optimization task:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以轻松地将这些条件重写为线性系统，并在运行优化任务之前将其传递给`[LinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.LinearConstraint.html)`对象：
- en: '![](../Images/3f290c523447ca6bcc524b60810f9b84.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3f290c523447ca6bcc524b60810f9b84.png)'
- en: Linear constraints. Image by author.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 线性约束。图片由作者提供。
- en: '[PRE9]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The new solution is
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 新解决方案是
- en: '[PRE10]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The feasible region of `f(x)` corresponds to a portion of the space delimited
    by an intersection of hyperplanes. Let us plot these boundaries:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '`f(x)`的可行区域对应于由超平面交集限定的空间的一部分。让我们绘制这些边界：'
- en: '[PRE11]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![](../Images/79c1e348e74229be8b2d909311b18d3e.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/79c1e348e74229be8b2d909311b18d3e.png)'
- en: Objective function. The blue dot is the minimum identified by applying linear
    constraints, whose boundaries are shown as hyperplanes. Image by author.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 目标函数。蓝点是通过应用线性约束确定的最小值，其边界显示为超平面。图片由作者提供。
- en: 2.4 Nonlinear constraints
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.4 非线性约束
- en: 'We can also explore the objective function within the region defined by nonlinear
    constraints using the `[NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html)`
    object. Assume that `x₀` and `x₁` are subject to:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用`[NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html)`对象在非线性约束定义的区域内探索目标函数。假设`x₀`和`x₁`受到以下约束：
- en: '![](../Images/7dd014f36d8ee68145831b86c5dfd339.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7dd014f36d8ee68145831b86c5dfd339.png)'
- en: 'We optimize `f(x)` as follows:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们优化`f(x)`的方法如下：
- en: '[PRE12]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Similarly to the previous examples, we could observe the objective and the
    found minimizer given the current constraint:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于之前的示例，我们可以观察到在当前约束下的目标函数和找到的最小值。
- en: '![](../Images/d3e4bfc3e9028da8dc30cbc98543e77c.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d3e4bfc3e9028da8dc30cbc98543e77c.png)'
- en: The feasible region is outside of the cylinder defined by the nonlinear constraint.
    Image by author.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 可行区域位于由非线性约束定义的圆柱体外部。图片由作者提供。
- en: 2.5 Applying different constraint types together
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.5 结合不同的约束类型
- en: 'We can combine bounds as well as linear and nonlinear constraints as follows:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以结合边界以及线性和非线性约束，如下所示：
- en: '[PRE14]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: We remark that not all optimization methods support bounds and/or constraints.
    Additional information can be found in the [package documentation](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.minimize.html).
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们指出，并非所有优化方法都支持边界和/或约束。更多信息可以在[包文档](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.minimize.html)中找到。
- en: 3\. Conclusions
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 结论
- en: In this post, we explored different types of optimization constraints. In particular,
    we shared practical Python examples using the `SciPy` library. The examples come
    with plots that allow to visually inspect the different constraints.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们探索了不同类型的优化约束。特别是，我们分享了使用`SciPy`库的实际 Python 示例。这些示例配有图表，可以直观地检查不同的约束。
- en: 'Related posts:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 相关帖子：
- en: '[](/survival-analysis-optimize-the-partial-likelihood-of-the-cox-model-b56b8f112401?source=post_page-----7abd44f6de25--------------------------------)
    [## Survival Analysis: Optimize the Partial Likelihood of the Cox Model'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/survival-analysis-optimize-the-partial-likelihood-of-the-cox-model-b56b8f112401?source=post_page-----7abd44f6de25--------------------------------)
    [## 生存分析：优化 Cox 模型的部分似然'
- en: Finding the coefficients that maximize the log-partial likelihood in Python
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 Python 中寻找最大化对数部分似然的系数
- en: towardsdatascience.com](/survival-analysis-optimize-the-partial-likelihood-of-the-cox-model-b56b8f112401?source=post_page-----7abd44f6de25--------------------------------)
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/survival-analysis-optimize-the-partial-likelihood-of-the-cox-model-b56b8f112401?source=post_page-----7abd44f6de25--------------------------------)'
