- en: Turbocharge your data manipulation skills
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提升你的数据操作技能
- en: 原文：[https://towardsdatascience.com/turbocharge-your-data-manipulation-skills-3a26897ad6a](https://towardsdatascience.com/turbocharge-your-data-manipulation-skills-3a26897ad6a)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/turbocharge-your-data-manipulation-skills-3a26897ad6a](https://towardsdatascience.com/turbocharge-your-data-manipulation-skills-3a26897ad6a)
- en: Unlock the power of pandas groupby, apply and transform
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解锁 pandas `groupby`、`apply` 和 `transform` 的强大功能
- en: '[](https://bradley-stephen-shaw.medium.com/?source=post_page-----3a26897ad6a--------------------------------)[![Bradley
    Stephen Shaw](../Images/b3ef5e6e292083ff0f8523ec5ffe89f0.png)](https://bradley-stephen-shaw.medium.com/?source=post_page-----3a26897ad6a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3a26897ad6a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3a26897ad6a--------------------------------)
    [Bradley Stephen Shaw](https://bradley-stephen-shaw.medium.com/?source=post_page-----3a26897ad6a--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://bradley-stephen-shaw.medium.com/?source=post_page-----3a26897ad6a--------------------------------)[![Bradley
    Stephen Shaw](../Images/b3ef5e6e292083ff0f8523ec5ffe89f0.png)](https://bradley-stephen-shaw.medium.com/?source=post_page-----3a26897ad6a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3a26897ad6a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3a26897ad6a--------------------------------)
    [Bradley Stephen Shaw](https://bradley-stephen-shaw.medium.com/?source=post_page-----3a26897ad6a--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----3a26897ad6a--------------------------------)
    ·11 min read·Feb 21, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----3a26897ad6a--------------------------------)
    ·阅读时间 11 分钟·2023年2月21日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/4f99de58d30f656f07cc060f24d46e5e.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4f99de58d30f656f07cc060f24d46e5e.png)'
- en: Photo by [Kier in Sight](https://unsplash.com/@kierinsight?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Kier in Sight](https://unsplash.com/@kierinsight?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: In a competitive and data-rich world, understanding segmental behaviour is key
    to providing tailored insights and product offerings.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个竞争激烈且数据丰富的世界中，理解分段行为是提供量身定制的洞察和产品服务的关键。
- en: Whether that’s achieved through understanding segmental trends through descriptive
    statistics or via more nuanced approaches like including segmental features in
    machine learning models, some data manipulation is required.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 无论是通过描述性统计了解分段趋势，还是通过将分段特征纳入机器学习模型等更细致的方法，都会涉及到一定的数据操作。
- en: 'Luckily for us, pandas provides highly versatile functionality which allows
    us to cut through the majority of heavy manipulation required for segmenting data
    in various ways. Using some examples, we’ll demonstrate:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，pandas 提供了高度多功能的功能，使我们能够轻松应对多种数据分段所需的大量操作。通过一些示例，我们将演示：
- en: The `groupby` operation — what it is, how it works, and what it returns.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`groupby` 操作——它是什么、如何工作以及返回什么。'
- en: How to use `apply` with `groupby` in order to apply more complex and exotic
    transformations.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何使用 `apply` 与 `groupby` 来应用更复杂和特殊的转换。
- en: Using `groupby` and `transform` to map the magic of `groupby` and `apply` back
    to the original data shape.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `groupby` 和 `transform` 将 `groupby` 和 `apply` 的魔力映射回原始数据形状。
- en: Some tips and tricks that I’ve picked up over time.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一些我在时间中积累的小贴士和技巧。
- en: Let’s get cracking — first up, getting some data to play around with.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧——首先，获取一些可以操作的数据。
- en: The data
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据
- en: This time round we’ll be using information collected from a portfolio of consumer
    credit cards¹.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这次我们将使用从一组消费信用卡¹中收集的信息。
- en: 'Apart from column name changes and some format changes I’ve applied, the data
    is almost intact — a sneak peak:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 除了列名更改和我应用的一些格式更改之外，数据几乎保持不变——预览如下：
- en: '![](../Images/b65ed0b084d87e1b1e4f88808ee1424c.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b65ed0b084d87e1b1e4f88808ee1424c.png)'
- en: Image by author
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: We have various categorical features (e.g. education level) mixed in with numeric
    features (e.g. customer age). The data set is wider than the snapshot above implies,
    so don’t be surprised if you see new and interesting features being used below.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有各种分类特征（如教育水平）与数值特征（如客户年龄）混合在一起。数据集的宽度超出了上面快照的范围，因此如果下面出现新的和有趣的特征，请不要感到惊讶。
- en: Groupby
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分组
- en: First things first — the `groupby`.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 首先是 `groupby`。
- en: 'From the documentation²:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 来自文档²：
- en: A groupby operation involves some combination of splitting the object, applying
    a function, and combining the results. This can be used to group large amounts
    of data and compute operations on these groups.
  id: totrans-25
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`groupby` 操作涉及将对象拆分、应用函数和合并结果的组合。这可以用来对大量数据进行分组，并对这些组进行计算操作。'
- en: 'That’s quite a good explanation. I also find it helpful to think of a `groupby`
    as a sort of for loop:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个相当好的解释。我也发现将 `groupby` 想象成一种 for 循环的方式很有帮助。
- en: Segment the data into various groups. Or, **group** the data **by** referring
    to the given segmentation “rules”.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据分成不同的组。或者，通过参考给定的分组“规则”来**对数据进行分组**。
- en: For each of the groups, apply a specified function. This could be a simple calculation
    like an average, or more exotic and complex calculations (more on that later).
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对每个组应用指定的函数。这可以是像平均值这样的简单计算，或更为复杂和奇特的计算（稍后会详细讨论）。
- en: Collate the results.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 汇总结果。
- en: This might be a little vague at the moment, so let’s work through a couple of
    examples.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在可能有点模糊，所以让我们通过几个例子来详细了解。
- en: 'A starter — determining the average credit limit for each type of customer,
    across the gender groups:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 一个起点 — 确定每种客户类型的平均信用额度，按性别分组：
- en: '[PRE0]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](../Images/ad3d1c75cd76fc360f9f82d65615c4b5.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ad3d1c75cd76fc360f9f82d65615c4b5.png)'
- en: Image by author
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Easy peasy, lemon `groupby`.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 非常简单，柠檬`groupby`。
- en: Let’s ignore the massive gender discrepancy in credit limits for now and focus
    on the underlying code. What `pandas` has done for us is divide the DataFrame
    into `attrition_flag x gender` groups, calculated the average `credit_limit` for
    each group, and collated the results.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们暂时忽略信用额度中的性别差异，专注于底层代码。`pandas` 为我们做的是将 DataFrame 分成 `attrition_flag x gender`
    组，计算每组的平均 `credit_limit`，并汇总结果。
- en: 'What if we wanted to extend the segmentation to include education level, and
    also calculate the average credit utilisation rate? That’s not too complex:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想扩展分组以包含教育水平，并且还计算平均信用利用率呢？这并不复杂：
- en: '[PRE1]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/f7cc81ad89d8110e53234c5118c98e2b.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f7cc81ad89d8110e53234c5118c98e2b.png)'
- en: Image by author
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: 'Changing the calculation being applied to each group is also straightforward.
    For instance, if we wanted to count the number of observations in each segment,
    we could use `size` :'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 更改应用于每个组的计算也是简单的。例如，如果我们想计算每个分组中的观察次数，可以使用 `size`：
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/7edc60af09634ebad6307230d18a97d7.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7edc60af09634ebad6307230d18a97d7.png)'
- en: Image by author
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: 'This leads us to a more general recipe for `groupby` statements:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这引导我们进入 `groupby` 语句的一个更一般的配方：
- en: '![](../Images/89e831c6bd3c4675e088939b20e72440.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/89e831c6bd3c4675e088939b20e72440.png)'
- en: Image by author
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: … where we can tailor `segments` , `features` , and `function` to individual
    use cases. I’ve been purposefully vague on what `function` actually is — we’ll
    see why in a minute — but the general idea holds true in most cases.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: … 在这里，我们可以根据具体的使用情况定制`segments`、`features` 和 `function`。我故意没有详细说明 `function`
    实际上是什么 — 稍后我们会看到原因 — 但这个一般思路在大多数情况下是成立的。
- en: First, let’s talk about a few things.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们讨论一些事情。
- en: So far, we’ve performed very basic calculations using two built-in `pandas`
    functions — `mean` and `size` . There are of course many other useful functions
    available for use, like median and standard deviation. In a minute, we’ll see
    how we can use more complex functions, custom functions and functions from other
    packages.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 到目前为止，我们使用了两个内置的 `pandas` 函数 — `mean` 和 `size` 进行了非常基础的计算。当然，还有许多其他有用的函数可以使用，如中位数和标准差。稍后，我们将看到如何使用更复杂的函数、自定义函数和来自其他包的函数。
- en: Using the `groupby` statement the way we have returns an object which has the
    same column names as the original DataFrame. It’s quite plausible that you end
    up with data sets which look similar but consistent of very different information
    — don’t be caught out. Sensible naming conventions or code structure can help
    with this, as well as renaming columns appropriately.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按照我们使用的 `groupby` 语句返回的对象，其列名与原始 DataFrame 相同。你很可能会遇到数据集看起来相似但信息完全不同的情况 — 不要被迷惑。合理的命名约定或代码结构可以帮助解决这个问题，以及适当地重命名列。
- en: So far, we’ve used the same function on multiple columns. If you’d like to apply
    different functions to different columns, or different functions to the same column
    in the same groupby statement, I’d check out the `agg` functionality³. It also
    has a neat way of letting the user define the names of calculation results through
    tuples.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 到目前为止，我们在多个列上使用了相同的函数。如果你想对不同的列应用不同的函数，或者在同一个 groupby 语句中对相同的列应用不同的函数，我建议你查看
    `agg` 功能³。它还提供了一种通过元组定义计算结果名称的巧妙方法。
- en: Now that we have a basic grasp of `groupby`, we can apply ourselves as we move
    on to see how we can start using more exotic functions.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对 `groupby` 有了基本的了解，我们可以继续看看如何开始使用更多的高级函数。
- en: See what I did there? So funny.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 看到我刚才做了什么了吗？真有趣。
- en: '*Pro tip: using a single feature in a groupby statement will return a Series,
    which Jupyter will present like a jumble of numbers.* `to_frame` *converts the
    Series into a DataFrame, which Jupyter outputs in a more aesthetically pleasing
    way.*'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '*专业提示：在 groupby 语句中使用单个特征将返回一个 Series，Jupyter 会将其呈现为一堆数字。* `to_frame` *将 Series
    转换为 DataFrame，Jupyter 会以更美观的方式输出。*'
- en: Apply
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Apply
- en: The “standard” functions that we’ve seen above will only take us so far — that’s
    really the point of standard functions really.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前看到的“标准”函数只能带我们到这一步——这也是标准函数的真正意义所在。
- en: If we need to do anything or advanced or bespoke, or rely on functionality in
    other packages, we need to combine `groupby` with `apply` .
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们需要做任何高级或定制的操作，或者依赖于其他包中的功能，我们需要将 `groupby` 与 `apply` 结合使用。
- en: 'The `apply` statement is quite self-explanatory, and described succinctly in
    the documentation⁴:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '`apply` 语句相当直观，并且在文档中有简明的描述⁴：'
- en: Apply a function along an axis of the DataFrame.
  id: totrans-60
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在 DataFrame 的一个轴上应用函数。
- en: ''
  id: totrans-61
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Objects passed to the function are Series objects whose index is either the
    DataFrame’s index (`axis=0`) or the DataFrame’s columns (`axis=1`).
  id: totrans-62
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 传递给函数的对象是 Series 对象，其索引可以是 DataFrame 的索引（`axis=0`）或 DataFrame 的列（`axis=1`）。
- en: Let’s do some examples of using bespoke functions on groupings.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们做一些使用定制函数对分组进行操作的例子。
- en: 'We’ll start by doing a bit of a different calculation: scaling the group median
    by the ratio of the group maximum to the group minimum; we’ll do this for each
    type of customer split by gender.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将开始做一些不同的计算：通过将组的最大值与组的最小值的比例来缩放组的中位数；我们将对每种类型的客户按性别进行此操作。
- en: '[PRE3]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/4f30d3fe0667104f362fbff353ac604a.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4f30d3fe0667104f362fbff353ac604a.png)'
- en: Image by author
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: 'If you’re feeling especially Pythonic, you can use lambda functions in the
    `apply` statement. That would look something like:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你感到特别 Pythonic，可以在 `apply` 语句中使用 lambda 函数。代码示例如下：
- en: '[PRE4]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Now, what about applying a custom function to multiple features (columns)? It
    takes a bit more thought — let’s use an example to demonstrate.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，如何将自定义函数应用于多个特征（列）呢？这需要更多的思考——我们用一个例子来演示。
- en: The organisation has a heuristic which indicates the likely receptiveness of
    a customer to a credit offer. This heuristic — let’s call it the “appetite score”
    — is based on marital status, gender, number of dependents, and the average credit
    utilisation. We would like to understand the average appetite score for each customer
    type and gender.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 组织有一个启发式方法，用于指示客户对信用优惠的可能接受度。这个启发式方法——我们称之为“胃口评分”——基于婚姻状况、性别、赡养人数以及平均信用利用率。我们希望了解每种客户类型和性别的平均胃口评分。
- en: 'Code-wise, this could look something like this:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 从代码的角度来看，可以是这样的：
- en: '[PRE5]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '… which gives:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: … 这会给出：
- en: '![](../Images/200bca61e535b7047c2cdbf38bdba787.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/200bca61e535b7047c2cdbf38bdba787.png)'
- en: Image by author
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: A few things to notice here.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 有几点需要注意。
- en: We use dictionaries and `map` to convert marital status and gender to numeric
    values for calculation in the heuristic, remembering to convert the data type
    appropriately.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用字典和 `map` 将婚姻状况和性别转换为数值，以便在启发式方法中进行计算，并记得适当转换数据类型。
- en: We don’t explicitly select the features we need for the heuristic. This is actually
    a nifty trick which I haven’t really touched on — we can feed both Series and
    DataFrames into the `apply` . In this case, since we don’t specify which features
    to use, we are effectively passing the resulting grouped DataFrame to the `cohort_score`
    function, which in turn filters out necessary columns.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会明确选择用于启发式方法的特征。这实际上是一个巧妙的技巧，我之前没有详细提到——我们可以将 `apply` 同时用于 Series 和 DataFrames。在这种情况下，由于我们没有指定使用哪些特征，我们实际上是将分组后的
    DataFrame 传递给 `cohort_score` 函数，该函数再进一步过滤出必要的列。
- en: 'The calculation of the mean is baked into the function. Now arguably, this
    is cheating a bit — in real life, we may want to build a heuristic which calculates
    the appetite score on an individual level, and then create group statistics from
    the result. This actually ties in well with two other concepts : using functions
    from other packages and using a lambda function.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 均值的计算已经融入到函数中。现在可以说这有点作弊——在现实生活中，我们可能希望建立一个在个体水平上计算胃口分数的启发式方法，然后从结果中创建组统计数据。这实际上与两个其他概念很好地结合起来：使用来自其他包的函数和使用lambda函数。
- en: Let’s do exactly that now — define a heuristic which doesn’t return an average,
    use `numpy` to calculate the group average, and wrap it in a lambda function.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 现在就这样做——定义一个不返回平均值的启发式方法，使用`numpy`计算组平均值，并将其包装在一个lambda函数中。
- en: '[PRE6]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'which gives:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![](../Images/15b09d5439da4993d28fe9bca3016aad.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/15b09d5439da4993d28fe9bca3016aad.png)'
- en: Image by author
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Look familiar? It should do, as it’s exactly the same result as the calculation
    above.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来很熟悉吗？确实如此，因为这是与上面的计算完全相同的结果。
- en: One thing to notice is how easy it is to use a function from another package.
    In this case, we’ve used the mean calculation from `numpy` , but the concept is
    the same — feed the function into `apply` , making reference to the package it
    comes from (remembering of course to import the package!).
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 一点需要注意的是使用来自其他包的函数有多么简单。在这种情况下，我们使用了`numpy`的均值计算，但概念是相同的——将函数传递给`apply`，并参考其来源的包（当然要记得导入包！）。
- en: Transform
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 转换
- en: You’ll by now have noticed that `groupby` returns group statistics, presented
    at a *group* level. Perfect if that’s what you’re after — for instance, for visualisation
    or summation — but there are cases where we need to “map" the group result back
    to individual observations.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可能已经注意到，`groupby`返回的是组统计数据，呈现于*组*级别。如果这正是你所需要的——例如，用于可视化或汇总——那就完美了，但也有需要将组结果“映射”回个别观察值的情况。
- en: I’m sure there are many other applications for this, but this approach can be
    extremely useful in feature engineering. Imagine for a moment that you’re predicting
    house prices — wouldn’t it be good to know how big an individual house is compared
    to the “average" house in the same neighborhood?
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信还有许多其他应用，但这种方法在特征工程中非常有用。假设你在预测房价——了解一个单独的房子与同一邻里的“平均”房子相比有多大，不是很好吗？
- en: 'Luckily for us, pandas provides easy functionality which allows us to do just
    that, without the need for any joining or merging. This is the magic of transform,
    though the documentation undersells it a bit⁵:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，pandas提供了简便的功能，允许我们做到这一点，无需任何连接或合并。这就是transform的魔力，尽管文档对此有所低估⁵：
- en: Call `func` on self producing a DataFrame with the same axis shape as self
  id: totrans-92
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 对self调用`func`生成一个与self具有相同轴形状的DataFrame
- en: 'Maybe an example would be useful! Let’s see how we could apply the scaled median
    function again, but this time using transform to create a new column in the data
    with the group results mapped back to each individual observation:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 也许一个示例会很有用！让我们看看如何再次应用缩放中位数函数，但这次使用transform在数据中创建一个新列，将组结果映射回每个单独的观察值：
- en: '[PRE7]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'which gives:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![](../Images/7f7b06317df8e3efc0beb9701fa3307a.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7f7b06317df8e3efc0beb9701fa3307a.png)'
- en: Image by author
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Here we see how the same group values are produced, but are also mapped back
    to size and included in the DataFrame.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里我们看到相同的组值是如何生成的，但这些值也会映射回大小并包含在DataFrame中。
- en: Tips and tricks
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提示与技巧
- en: Now that we have a grounding in `groupby` , `apply`, and `transform`, let’s
    take a look at some tips and tricks that might be useful.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经掌握了`groupby`、`apply`和`transform`，让我们看看一些可能有用的提示和技巧。
- en: The versatility of apply
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`apply`的多才多艺'
- en: The `apply` function is very versatile. We’ve seen how we can apply it with
    a `groupby` operation, but that’s not always necessary — i.e. you can use `apply`
    on a DataFrame directly.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '`apply`函数非常多才多艺。我们已经看到如何在`groupby`操作中应用它，但这并不总是必要的——也就是说，你可以直接在DataFrame上使用`apply`。'
- en: Axes and apply
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 轴与应用
- en: When I started using `apply` in anger, I encountered (probably more than) my
    fair share of error messages. More often than not, it was down to me not completely
    understanding the axis that the function was being applied along — i.e. I was
    incorrectly specifying whether or not to apply the function to rows or columns.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 当我开始使用`apply`时，我遇到了（可能超过）我应得的错误信息。大多数时候，这都是因为我没有完全理解函数应用的轴——即我错误地指定了是否将函数应用于行或列。
- en: So, if you’re certain that your function works but `pandas` is still being disagreeable,
    I’d recommend taking a look at the `axis` argument in `apply`.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果你确定你的函数有效但`pandas`仍然不合作，我建议你查看一下`apply`中的`axis`参数。
- en: Using built-in functions with apply
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用内置函数与apply
- en: As we’ve seen above, we can use built-in `pandas` functions directly on grouped
    DataFrames.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们上面所见，我们可以直接在分组的DataFrames上使用内置的`pandas`函数。
- en: 'We can also use the same built-in functions in an `apply` , though we have
    to refer to the function by its name. For instance, using the built-in standard
    deviation function would look something like this:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以在`apply`中使用相同的内置函数，不过我们必须通过其名称来引用该函数。例如，使用内置标准差函数可能会是这样的：
- en: '[PRE8]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: So as it is with most things Python, there’s more than one way of doing things.
    However, using built-in functions in an `apply` statement like this can actually
    be *slower* than using them directly.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 正如大多数Python相关的事情一样，做事的方法不止一种。然而，像这样在`apply`语句中使用内置函数实际上可能比直接使用它们更*慢*。
- en: Missing data imputation
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 缺失数据插补
- en: We earlier touched on how `apply` and `transform` are useful techniques when
    doing feature engineering. Well, they’re also great for data cleansing, particularly
    if you want to impute missing values using segmental statistics.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前提到了`apply`和`transform`在特征工程中的有用性。它们在数据清洗中同样有效，特别是当你想要使用分段统计来插补缺失值时。
- en: Here’s an example where we see how we can use median customer age for customer
    type and marital status to impute missing customer age values.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个例子，展示了我们如何使用客户类型和婚姻状况的中位数客户年龄来插补缺失的客户年龄值。
- en: '[PRE9]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](../Images/d34af0df3babd9d26ac965a9ac931a9e.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d34af0df3babd9d26ac965a9ac931a9e.png)'
- en: Image by author
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: This is obviously quite a contrived example but the logic transfers well to
    other use cases, especially if the groups are fairly homogeneous.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这显然是一个比较牵强的例子，但这种逻辑同样适用于其他用例，尤其是当组相对同质时。
- en: We’ll leave it here for now, and do a quick recap.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们暂时就到这里，并做一个简要的回顾。
- en: Wrapping up
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We’ve covered a fair bit of ground here.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经覆盖了相当多的内容。
- en: Firstly, we had a look at the `groupby` operation — what it is, how it works,
    and what it returns.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们查看了`groupby`操作——它是什么、如何工作以及它返回什么。
- en: Once we found our feet using basic function with `groupby` , we pushed the boat
    out a bit and moved on to using bespoke functions by combining `apply` with `groupby`.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们习惯了使用基本函数和`groupby`，我们就进一步拓展，结合使用`apply`和`groupby`来使用定制函数。
- en: While having statistics at the group level is useful, we discussed why we might
    want to map those group statistics back to each individual observation. We saw
    how we can use `groupby` and `transform` to do exactly that.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管在组级别进行统计很有用，但我们讨论了为什么我们可能想要将这些组统计映射回每个个体观察值。我们展示了如何使用`groupby`和`transform`来实现这一点。
- en: I also shared a few “tips and tricks” that I’ve learned over time — hopefully
    they make your journey with `groupby`, `apply`, and `transform` a little smoother.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 我还分享了一些我随着时间学到的“技巧和窍门”——希望它们能让你在使用`groupby`、`apply`和`transform`时更顺利。
- en: Now that you’ve seen a few examples, I’d encourage you to have a go yourself
    — practice makes perfect and all that.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经看到了一些示例，我鼓励你自己尝试——实践是完美的关键。
- en: 'Of course, there are extra bits we can do to take our analysis and presentation
    to the next level. The first is to appropriately format DataFrames:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们可以做一些额外的工作，将我们的分析和展示提升到一个新水平。首先是适当格式化DataFrames：
- en: '[](/make-your-tables-look-glorious-2a5ddbfcc0e5?source=post_page-----3a26897ad6a--------------------------------)
    [## Make Your Tables Look Glorious'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/make-your-tables-look-glorious-2a5ddbfcc0e5?source=post_page-----3a26897ad6a--------------------------------)
    [## 让你的表格看起来辉煌'
- en: Simple formatting tricks to make your pandas DataFrames presentation-ready
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使你的pandas DataFrames准备好展示的简单格式化技巧
- en: towardsdatascience.com](/make-your-tables-look-glorious-2a5ddbfcc0e5?source=post_page-----3a26897ad6a--------------------------------)
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/make-your-tables-look-glorious-2a5ddbfcc0e5?source=post_page-----3a26897ad6a--------------------------------)
- en: '… and the second is to produce presentation-ready charts:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: …第二个是生成准备好展示的图表：
- en: '[](/make-your-charts-look-glorious-9ce3fa310b70?source=post_page-----3a26897ad6a--------------------------------)
    [## Make your charts look glorious'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/make-your-charts-look-glorious-9ce3fa310b70?source=post_page-----3a26897ad6a--------------------------------)
    [## 让你的图表看起来辉煌'
- en: Simple tricks to make matplotplib charts presentation-ready
  id: totrans-132
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使matplotlib图表准备好展示的简单技巧
- en: towardsdatascience.com](/make-your-charts-look-glorious-9ce3fa310b70?source=post_page-----3a26897ad6a--------------------------------)
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/make-your-charts-look-glorious-9ce3fa310b70?source=post_page-----3a26897ad6a--------------------------------)
- en: As always, I hope you’ve enjoyed reading this as much as I have enjoyed writing
    it. As always, I’d love to learn about new tips and tricks, so please feel free
    to share in the comments!
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 一如既往，我希望你和我一样享受阅读这篇文章的过程。也如既往，我很乐意了解新的技巧和窍门，请随时在评论中分享！
- en: References and resources
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献和资源
- en: '[zhyli. (2020). Prediction of Churning Credit Card Customers [Data set]. Zenodo.](https://doi.org/10.5281/zenodo.4322341),
    provided under the [Creative Comons — Attribution 4.0 International](https://creativecommons.org/licenses/by/4.0/legalcode)
    licence.'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[zhyli. (2020). 预测客户流失的信用卡数据集 [数据集]。Zenodo。](https://doi.org/10.5281/zenodo.4322341)，依据[创意共享
    — 署名 4.0 国际](https://creativecommons.org/licenses/by/4.0/legalcode)许可证提供。'
- en: '[pandas.DataFrame.groupby — pandas 1.5.3 documentation (pydata.org)](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.groupby.html)'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[pandas.DataFrame.groupby — pandas 1.5.3 文档 (pydata.org)](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.groupby.html)'
- en: '[pandas.DataFrame.agg — pandas 1.5.3 documentation (pydata.org)](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.agg.html)'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[pandas.DataFrame.agg — pandas 1.5.3 文档 (pydata.org)](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.agg.html)'
- en: '[pandas.DataFrame.apply — pandas 1.5.3 documentation (pydata.org)](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.apply.html)'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[pandas.DataFrame.apply — pandas 1.5.3 文档 (pydata.org)](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.apply.html)'
- en: '[pandas.DataFrame.transform — pandas 1.5.3 documentation (pydata.org)](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.transform.html)'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[pandas.DataFrame.transform — pandas 1.5.3 文档 (pydata.org)](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.transform.html)'
