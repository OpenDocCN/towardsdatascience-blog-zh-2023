- en: Understanding Predictive Maintenance — Unit Roots and Stationarity
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解预测性维护 — 单位根和稳态
- en: 原文：[https://towardsdatascience.com/understanding-predictive-maintenance-unit-roots-and-stationarity-f05322f7b6df](https://towardsdatascience.com/understanding-predictive-maintenance-unit-roots-and-stationarity-f05322f7b6df)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/understanding-predictive-maintenance-unit-roots-and-stationarity-f05322f7b6df](https://towardsdatascience.com/understanding-predictive-maintenance-unit-roots-and-stationarity-f05322f7b6df)
- en: '[](https://marcin-staskopl.medium.com/?source=post_page-----f05322f7b6df--------------------------------)[![Marcin
    Stasko](../Images/5142b9a260a1cce7c6a2ebcc16f46fbb.png)](https://marcin-staskopl.medium.com/?source=post_page-----f05322f7b6df--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f05322f7b6df--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f05322f7b6df--------------------------------)
    [Marcin Stasko](https://marcin-staskopl.medium.com/?source=post_page-----f05322f7b6df--------------------------------)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://marcin-staskopl.medium.com/?source=post_page-----f05322f7b6df--------------------------------)[![Marcin
    Stasko](../Images/5142b9a260a1cce7c6a2ebcc16f46fbb.png)](https://marcin-staskopl.medium.com/?source=post_page-----f05322f7b6df--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f05322f7b6df--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f05322f7b6df--------------------------------)
    [Marcin Stasko](https://marcin-staskopl.medium.com/?source=post_page-----f05322f7b6df--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----f05322f7b6df--------------------------------)
    ·13 min read·Nov 13, 2023
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----f05322f7b6df--------------------------------)
    ·阅读时间13分钟·2023年11月13日
- en: --
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/2fe2b9db20b9852d4ce6f3bfb405bd63.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2fe2b9db20b9852d4ce6f3bfb405bd63.png)'
- en: Photo by [Emma Gossett](https://unsplash.com/@emmagossett?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由[艾玛·戈塞特](https://unsplash.com/@emmagossett?utm_source=medium&utm_medium=referral)拍摄，来源于[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Article Purpose
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文章目的
- en: In this article, we’re diving into the critical concepts of unit roots and stationarity.
    Buckle up for an exploration into why checking stationarity is crucial, what unit
    roots are, and how these elements play a key role in our predictive maintenance
    arsenal. We will also master the chaos!
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们将深入探讨单位根和稳态的关键概念。请做好准备，我们将探讨为何检查稳态至关重要，什么是单位根，以及这些元素如何在我们的预测维护工具箱中发挥重要作用。我们还将掌握混沌理论！
- en: This article is part of the series Understanding Predictive Maintenance. I plan
    to create the entire series in a similar style.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这篇文章是“理解预测性维护”系列的一部分。我计划以类似风格创建整个系列。
- en: '[Check the whole series in this link](https://marcin-staskopl.medium.com/list/understanding-predictive-maintenance-series-e1f44d8a0cc3).
    Ensure you don’t miss out on new articles by following me.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[点击此链接查看整个系列](https://marcin-staskopl.medium.com/list/understanding-predictive-maintenance-series-e1f44d8a0cc3)。请关注我，以确保不会错过新的文章。'
- en: Data Stationarity — hide and seek analytical game
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据稳态 — 捉迷藏的分析游戏
- en: '![](../Images/9cb429f26f1318dd3344ef4e4f314a93.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9cb429f26f1318dd3344ef4e4f314a93.png)'
- en: Photo by [Mitchell Luo](https://unsplash.com/@mitchel3uo?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由[米切尔·洛](https://unsplash.com/@mitchel3uo?utm_source=medium&utm_medium=referral)拍摄，来源于[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Ever wondered if your data is playing a game of hide and seek? Let’s cut to
    the chase — we’re talking about stationarity. It’s not just a fancy term; it’s
    the secret sauce to understanding how stable and predictable your time-dependent
    data really is. Buckle up as we explore why data stationarity is the game-changer
    in modeling and forecasting.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 是否曾经想过你的数据是否在玩捉迷藏？直接切入主题——我们在谈论稳态。它不仅仅是一个花哨的术语，它是理解你的时间依赖数据究竟有多稳定和可预测的秘密武器。请做好准备，我们将探讨为何数据稳态在建模和预测中是游戏规则的改变者。
- en: Key Rules of Stationarity
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 稳态的关键规则
- en: '**Constant Mean**: A stationary time series should exhibit a consistent average
    value over time. If the mean changes, it suggests a shift in the underlying behavior
    of the process.'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**常数均值**：一个平稳的时间序列应表现出一致的平均值。如果均值发生变化，可能表明过程的基本行为发生了变化。'
- en: '**Constant Variance**: The variance of the time series, representing the spread
    of data points, should remain constant. Fluctuations in variance can make it challenging
    to make accurate predictions.'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**常数方差**：时间序列的方差，代表数据点的分布，应该保持不变。方差的波动会使得准确预测变得困难。'
- en: '**Constant Autocorrelation**: Autocorrelation measures the correlation between
    a time series and its lagged values. In a stationary series, the strength and
    pattern of autocorrelation should be consistent throughout.'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**常数自相关**：自相关测量时间序列与其滞后值之间的相关性。在平稳序列中，自相关的强度和模式应该保持一致。'
- en: Just “*stability*” of statistical properties.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 仅仅是统计性质的“*稳定性*”。
- en: Why Stationarity is a Big Deal
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么平稳性如此重要
- en: Imagine your predictive models as expert navigators sailing through the sea
    of data. To navigate smoothly, they prefer calm waters — that’s where stationarity
    comes in. Stationary data is like a serene ocean, where patterns stay consistent.
    But, if your data is a stormy sea with waves of ups and downs (non-stationary),
    accurate predictions become a real challenge. That’s why we need to spot these
    storms and transform our data into a peaceful pond for effective time series analysis.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下你的预测模型就像是专家导航员在数据的海洋中航行。为了顺利导航，它们更喜欢平静的水域——这就是平稳性的作用。平稳数据就像是一片宁静的海洋，模式保持一致。但是，如果你的数据是一片风雨交加、波涛汹涌的海洋（非平稳），准确预测就会变得非常困难。这就是为什么我们需要发现这些风暴，并将数据转变成一个平静的池塘，以便进行有效的时间序列分析。
- en: Real-world Implications
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 现实世界的影响
- en: Data stationarity isn’t just a tech thing; it’s everywhere, influencing decisions
    from finance to predicting the weather. In finance, where precision is key for
    risk and return estimates, assuming stationarity is like having a reliable compass.
    Climate scientists rely on stationary models to predict long-term weather patterns
    — it’s like having a trustworthy weather app for Earth’s future.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 数据的平稳性不仅仅是技术问题；它无处不在，影响着从金融到天气预测的决策。在金融领域，精确性对于风险和回报的估计至关重要，假设平稳性就像拥有一个可靠的指南针。气候科学家依赖平稳模型来预测长期天气模式——这就像拥有一个可靠的天气应用程序来预测地球的未来。
- en: Journey to Insightful Analysis
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 迈向深刻分析的旅程
- en: Getting our data stationary is more than a tech quest; it’s an adventure toward
    clarity. It’s like transforming a chaotic treasure map into a clear guide that
    helps analysts and decision-makers make sense of it all. In the dynamic world
    of time-dependent data, stationarity becomes our trusty map, guiding us to understand
    the patterns beneath the surface and making our journey through data waters much
    smoother.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 使我们的数据平稳不仅仅是一个技术任务；它是迈向清晰的冒险。这就像将混乱的宝藏地图转变成清晰的指南，帮助分析师和决策者理解一切。在动态的时间依赖数据世界中，平稳性成为我们可靠的地图，引导我们理解表面下的模式，使我们在数据的旅程中更加顺利。
- en: Alright, now that we get why it’s cool to have calm data, let’s learn how to
    make it chill. But wait, before we get our hands dirty by code, let me introduce
    you to something called “unit roots.” Think of them as the special ingredients
    that affect how our data behaves. Knowing about unit roots is like having a secret
    recipe to turn our wavy, wild data into a smooth pond, ready for us to dive in
    and explore. So, get ready for the next part of our journey!
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 好了，现在我们了解了为什么平静的数据很酷，接下来让我们学习如何让它平静下来。但是等等，在我们动手写代码之前，让我给你介绍一下“单位根”。把它们当作影响我们数据行为的特殊成分。了解单位根就像拥有一个秘密配方，将我们波动的、混乱的数据变成一个平滑的池塘，准备好让我们潜入其中探索。所以，准备好迎接我们旅程的下一部分吧！
- en: Unit Roots — Mischievous Time Travelers in Data’s History Book
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 单位根——数据历史书中的顽皮时间旅行者
- en: '![](../Images/fee7bbfec10ec66cade63856833e9962.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fee7bbfec10ec66cade63856833e9962.png)'
- en: Photo by [Andy Beales](https://unsplash.com/@andybeales?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[Andy Beales](https://unsplash.com/@andybeales?utm_source=medium&utm_medium=referral)
    拍摄于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)'
- en: Unit roots are fundamental concepts in time series analysis, playing a pivotal
    role in understanding the behavior and characteristics of real-world data. In
    this exploration, we’ll delve into what unit roots are, why they are important
    in real data analysis, and how they influence the predictive maintenance landscape.
    Of course, we will do some experiments in the hands-on section.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 单位根是时间序列分析中的基本概念，在理解现实世界数据的行为和特征中发挥着关键作用。在这次探讨中，我们将深入了解单位根是什么，它们在真实数据分析中为何重要，以及它们如何影响预测性维护领域。当然，我们会在动手实验部分做一些实验。
- en: What are unit roots?
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是单位根？
- en: A unit root in a time series variable implies a stochastic process where the
    variable’s value at any given time is influenced by its past values. Formally,
    a unit root suggests non-stationarity, indicating that the variable does not revert
    to a constant mean over time.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列变量中的单位根意味着一个随机过程，其中变量在任何给定时间的值受其过去值的影响。形式上，单位根表明非平稳性，表明该变量不会随着时间的推移回到一个恒定的均值。
- en: '![](../Images/d91ab44242de93c2139cc47d529f2e22.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d91ab44242de93c2139cc47d529f2e22.png)'
- en: Unit root mathematical explanation
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 单位根的数学解释
- en: The presence of unit roots introduces persistence into the time series, leading
    to challenges in modeling and forecasting. The Augmented Dickey-Fuller (ADF) test
    and other statistical methods are employed to detect the existence of unit roots,
    providing a quantitative measure of non-stationarity.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 单位根的存在将持久性引入时间序列，导致建模和预测中的挑战。增强型迪基-富勒（ADF）测试及其他统计方法用于检测单位根的存在，提供了非平稳性的定量度量。
- en: Unit roots are like the storytellers of our data, weaving narratives that extend
    beyond individual moments and create a continuous storyline. They signify the
    persistence of historical influences, introducing an element of memory into the
    numerical fabric of our datasets.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 单位根就像数据的讲述者，编织出超越个体时刻的叙事，创造出连续的故事情节。它们标志着历史影响的持续性，将记忆的元素引入我们数据集的数字结构中。
- en: Imagine your dataset as a historical novel, with each data point representing
    a chapter in the unfolding tale. Unit roots, in this context, are the recurring
    motifs and characters that leave an indelible mark on the narrative, guiding the
    plot with a subtle yet consistent influence.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 想象你的数据集是一部历史小说，每个数据点代表着正在展开的故事中的一章。在这个背景下，单位根就是那些反复出现的主题和角色，它们在叙事中留下了不可磨灭的印记，以微妙而一致的影响引导情节发展。
- en: Why it is important for us?
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么这对我们很重要？
- en: Understanding unit roots is fundamental for time series analysts and modelers.
    Non-stationary data poses challenges, as traditional models often assume stationarity
    for accurate predictions. Analysts must address unit roots by employing transformations,
    such as differencing, to induce stationarity and facilitate model development.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 理解单位根对时间序列分析师和建模师来说是基础性的。非平稳数据带来了挑战，因为传统模型通常假设数据是平稳的，以便进行准确的预测。分析师必须通过采用如差分等变换来处理单位根，以诱导平稳性并促进模型开发。
- en: In predictive maintenance scenarios, unit roots play a crucial role in ensuring
    the accuracy of forecasting models. The long-term influence embedded in unit roots
    can significantly impact the reliability of predictions, making their identification
    and mitigation paramount for effective maintenance strategies.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在预测维护场景中，单位根在确保预测模型准确性方面发挥着至关重要的作用。嵌入单位根的长期影响可能显著影响预测的可靠性，因此其识别和缓解对于有效的维护策略至关重要。
- en: As we navigate this technical exploration, we will delve deeper into unit root
    testing methodologies, interpret the results, and explore strategies for handling
    non-stationary time series data. The theoretical underpinnings of unit roots provide
    a solid foundation for the practical applications that follow in our analytical
    journey.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们进行这次技术探索时，我们将深入探讨单位根测试方法，解读结果，并探索处理非平稳时间序列数据的策略。单位根的理论基础为我们在分析旅程中的实际应用提供了坚实的基础。
- en: '**Augumented Dickey Fuller (ADF) helps us**'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**增强型迪基-富勒（ADF）帮助我们**'
- en: '![](../Images/eed6bc49efe1774e36f19abbe8c5f35e.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/eed6bc49efe1774e36f19abbe8c5f35e.png)'
- en: Photo by [MD_JERRY](https://unsplash.com/@salijareer?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 由 [MD_JERRY](https://unsplash.com/@salijareer?utm_source=medium&utm_medium=referral)
    提供的照片，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Imagine you have a line of ants moving in a certain direction. The ADF test
    checks if the ants are marching with a purpose (stationary) or if they’re randomly
    scattered all over the place (non-stationary).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 想象你有一行蚂蚁朝某个方向移动。ADF测试检查这些蚂蚁是否有目的地行进（平稳）或是随机散布在各处（非平稳）。
- en: 'The ADF test involves a bit of math, but let’s simplify it:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: ADF测试涉及一些数学运算，但我们可以简化它：
- en: 'Null Hypothesis (`*H0*`): This is like the default assumption. The null hypothesis
    for ADF is that the data has a unit root, which means it’s non-stationary. It’s
    like saying the ants are wandering randomly.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 零假设 (`*H0*`)：这就像默认假设。ADF的零假设是数据有单位根，这意味着它是非平稳的。就像说蚂蚁在随机游走。
- en: '**H0:The data has a unit root (non-stationary)**'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**H0: 数据具有单位根（非平稳）**'
- en: 'Alternative Hypothesis (`*H1*`): This is what we’re trying to prove. The alternative
    hypothesis is that the data is stationary, like the ants marching in a clear line.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '替代假设 (`*H1*`): 这是我们试图证明的假设。替代假设是数据是平稳的，就像蚂蚁在清晰的直线上行走一样。'
- en: '**H1:The data is stationary**'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**H1: 数据是平稳的**'
- en: 'Test Statistic: The ADF test calculates a number called the test statistic.
    If this number is very small, it suggests that the data is likely stationary.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '测试统计量: ADF 测试计算一个称为测试统计量的数字。如果这个数字很小，表明数据可能是平稳的。'
- en: 'P-value: This is a probability score. If the *p-value* is small (less than
    a certain threshold, like 0.05), we reject the null hypothesis and accept the
    alternative, saying our data is probably stationary.'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'p 值: 这是一个概率分数。如果 *p 值* 很小（低于某个阈值，例如 0.05），我们就拒绝零假设并接受替代假设，认为我们的数据可能是平稳的。'
- en: This is not very complicated, just run the tests and check P-value
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不复杂，只需运行测试并检查 p 值
- en: '[PRE0]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You will probably most of the time use adf like this:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '你通常会像这样使用 adf:'
- en: '[PRE1]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: But I will explain what is behind these variables
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 但我会解释这些变量背后的含义
- en: '`adf_statistic`: The test statistic from the ADF test, indicating the strength
    of evidence against the null hypothesis of non-stationarity.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`adf_statistic`: ADF 测试中的统计量，指示了针对非平稳性零假设的证据强度。'
- en: '`adf_p_value`: The p-value associated with the null hypothesis. A lower p-value
    suggests stronger evidence against non-stationarity.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`adf_p_value`: 与零假设相关的 p 值。较低的 p 值表示更强的反对非平稳性的证据。'
- en: '`adf_lags`: The number of lags used in the test.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`adf_lags`: 测试中使用的滞后数。'
- en: '`adf_nobs`: The number of observations used in the ADF test.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`adf_nobs`: ADF 测试中使用的观察数量。'
- en: '`adf_critical_values`: The critical values for the test statistic at various
    significance levels.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`adf_critical_values`: 在不同显著性水平下的测试统计量的临界值。'
- en: '`adf_reg_results`: The regression results, which provide additional information
    about the linear regression performed during the test.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`adf_reg_results`: 回归结果，提供了关于测试中执行的线性回归的额外信息。'
- en: While chaos might seem daunting, we can transform it into our ally by understanding
    and harnessing its patterns. In the realm of data and analysis, chaos can be a
    powerful force that, when properly channeled, provides insights, predictions,
    and a clearer path forward. It’s all about turning the unpredictable into an advantage,
    making chaos our strategic companion in the journey of exploration and understanding.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然混沌可能看起来令人生畏，但我们可以通过理解和利用其模式将其转变为我们的盟友。在数据和分析的领域，混沌可以是一种强大的力量，当正确引导时，提供洞察、预测和更清晰的前进道路。这一切都是关于将不可预测性转变为优势，让混沌成为我们探索和理解旅程中的战略伙伴。
- en: How “random” is your random?
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你的随机性有多“随机”？
- en: 'Let’s kick things off by generating a straightforward stationary series, but
    here’s a heads-up: not all “random” is created equal. There are two main flavors
    of randomness — true random and pseudorandom. Chances are, you’ve been hanging
    out with pseudorandom more often because that’s the go-to for computers.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先生成一个简单的平稳序列，但这里有个提醒：“随机”并非全都相同。随机性主要有两种——真正的随机和伪随机。你可能更常接触伪随机，因为这是计算机的首选。
- en: In computing, generating truly random numbers is a challenge because computers
    are deterministic machines. Pseudorandom numbers, as the name suggests, are not
    genuinely random but instead are generated by algorithms that simulate randomness.
    These algorithms start with an initial value called a seed and use it to produce
    a sequence of numbers that appears random.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算中，生成真正的随机数是一个挑战，因为计算机是确定性的机器。伪随机数，顾名思义，并非真正随机，而是由模拟随机性的算法生成。这些算法以一个称为种子的初始值开始，并使用它生成看起来随机的数字序列。
- en: Seeds
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 种子
- en: The seed is a crucial element in pseudorandom number generation. It serves as
    the starting point for the algorithm. If you use the same seed, you’ll get the
    same sequence of pseudorandom numbers every time. This determinism can be advantageous
    in scenarios where you want reproducibility. For example, if you’re running a
    simulation or an experiment that involves randomness, setting the seed allows
    you to recreate the exact sequence of random numbers.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 种子是伪随机数生成中的一个关键元素。它作为算法的起点。如果你使用相同的种子，每次都会得到相同的伪随机数序列。这种确定性在你希望重现的场景中是有利的。例如，如果你运行一个涉及随机性的模拟或实验，设置种子可以让你重现确切的随机数序列。
- en: On the flip side, changing the seed results in a different sequence of pseudorandom
    numbers. This property is often used to introduce variability in simulations or
    to provide different initial conditions for algorithms that use randomness.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，更改种子会导致不同的伪随机数序列。这一特性常用于引入模拟中的变异性或为使用随机性的算法提供不同的初始条件。
- en: In summary, pseudorandom numbers are generated by algorithms, and the seed is
    the starting point for these algorithms. Controlling the seed allows you to control
    the sequence of pseudorandom numbers, providing a balance between determinism
    and variability in computer-generated randomness.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，伪随机数是由算法生成的，而种子是这些算法的起点。控制种子可以让你控制伪随机数的序列，在计算机生成的随机性中提供确定性与变异性之间的平衡。
- en: Time to generate our pseudorandom distribution.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 生成我们的伪随机分布的时间到了。
- en: '[PRE2]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Can we use true randomness?
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们可以使用真正的随机性吗？
- en: '![](../Images/b714019efbe74c0dd688281439b26f7b.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b714019efbe74c0dd688281439b26f7b.png)'
- en: Photo by [aj_aaaab](https://unsplash.com/@ajing_?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [aj_aaaab](https://unsplash.com/@ajing_?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Now we might feel suprised that even randomness we are affecting most of the
    time is the deterministic random. But can we make true randomness, ensuring that
    no determism is behind it?
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可能会惊讶于即使是我们大多数时间所接触的随机性也是确定性随机。但是我们能否创造真正的随机性，确保没有确定性在其背后？
- en: Well, good news! We can tap into something truly physical — atmospheric noise.
    Remember those flickering black and white dots on your TV screen? That’s our atmospheric
    noise, and we’re going to harness it to whip up some genuine randomness. So, your
    TV’s not just for shows; it’s your ticket out of the deterministic world.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 好消息！我们可以利用真正的物理现象——大气噪声。还记得你电视屏幕上的那些闪烁的黑白点吗？那就是我们的大气噪声，我们将利用它来产生真正的随机性。所以，你的电视不仅仅是用来看节目的；它是你摆脱确定性世界的门票。
- en: '[PRE3]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Using this function we can genarate true randomness, Horray!
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个函数，我们可以生成真正的随机性，万岁！
- en: Stationarity check
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 平稳性检验
- en: First lets generate the series.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们生成序列。
- en: '[PRE4]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Create results plot.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 创建结果图。
- en: '[PRE5]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/2884b8655c81cd03b40717e21f56856d.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2884b8655c81cd03b40717e21f56856d.png)'
- en: Hmm “spectacular”
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，“壮观”
- en: '[PRE6]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/0d12ca08c2de448701e0435bbe84f22f.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0d12ca08c2de448701e0435bbe84f22f.png)'
- en: Results
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 结果
- en: When the p-value is very small (**<0.05**), it provides evidence against the
    null hypothesis, suggesting that your data is likely **stationary**.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 当 p 值非常小（**<0.05**）时，它提供了反对零假设的证据，表明你的数据很可能是**平稳的**。
- en: So, in this case, with a p-value much smaller than 0.05, you have the confidence
    to say, “Yes, our data is stationary.”
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，在这种情况下，p 值远小于 0.05，你可以有信心地说，“是的，我们的数据是平稳的。”
- en: Now, let’s take a moment to crunch the numbers. Our pseudorandom boasts a P-value
    approximately 2 million times smaller than the truly random one.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们花一点时间来处理这些数据。我们的伪随机数的 p 值大约比真正的随机数小 200 万倍。
- en: Why does this happen? Pseudorandom numbers are generated by algorithms, introducing
    a level of determinism. These algorithms can unintentionally introduce patterns
    or structure into the data. On the other hand, truly random data, like atmospheric
    noise, is more likely to exhibit the characteristics of pure randomness. The ADF
    test, keen on detecting patterns indicative of non-stationarity, may find less
    evidence of such patterns in truly random data, leading to a relatively higher
    P-value.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么会发生这种情况？伪随机数是由算法生成的，这引入了一定程度的确定性。这些算法可能会无意中在数据中引入模式或结构。另一方面，真正的随机数据，如大气噪声，更有可能表现出纯随机性的特征。ADF
    检验专注于检测指示非平稳性的模式，可能会在真正的随机数据中发现较少的此类模式，从而导致相对较高的 p 值。
- en: Hand`s on experience
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实践经验
- en: '![](../Images/ee9374aaf65da24e2be4fc1b2e7925cc.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ee9374aaf65da24e2be4fc1b2e7925cc.png)'
- en: Photo by [Eddie Kopp](https://unsplash.com/@fiveohfilms?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Eddie Kopp](https://unsplash.com/@fiveohfilms?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Now it is the time to make hands dirty by code. We will run some experiments
    to help you get fammilarized with article concepts. I reccomend you to reproduce
    it. Before we will dive deeply into stationarity I want to ask you question.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候通过代码来动手了。我们将进行一些实验，帮助你熟悉文章中的概念。我建议你复现这些实验。在我们深入探讨平稳性之前，我想问你一个问题。
- en: '![](../Images/ec2a77859fa7ef8a56f202f2ff72f769.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ec2a77859fa7ef8a56f202f2ff72f769.png)'
- en: Photo by [Ian Barsby](https://unsplash.com/@ian_barsby?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Ian Barsby](https://unsplash.com/@ian_barsby?utm_source=medium&utm_medium=referral)
    拍摄，来自 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: And now we will add couple of examples how we can make this data not stationary,
    we are going to break our key rules of stationarity. After explanation we will
    plot all of them.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将添加几个示例，展示如何使这些数据变为非平稳数据，我们将打破平稳性的关键规则。解释完毕后，我们将绘制所有图表。
- en: Linear Trend (Non-Constant Mean)
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 线性趋势（非恒定均值）
- en: '[PRE7]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Introducing a linear trend to violate the constant mean rule means adding a
    systematic increase or decrease over time. In the case of the non-stationary linear
    trend series, the values linearly increase over time. This violates the constant
    mean rule because the average value of the series is changing, indicating a shift
    in the underlying behavior of the process. Unit roots, in this context, contribute
    to the persistence of the linear trend, causing the variable’s value at any given
    time to be influenced by its past values.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 引入线性趋势以违反恒定均值规则意味着在时间上添加系统性的增加或减少。在非平稳的线性趋势序列中，值随着时间线性增加。这违反了恒定均值规则，因为序列的平均值在变化，表明过程的基本行为发生了变化。在这种情况下，单位根有助于线性趋势的持续性，导致变量在任何给定时间的值受到其过去值的影响。
- en: Sine Amplitude **(Non-Constant Variance)**
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 正弦幅度 **（非恒定方差）**
- en: '[PRE8]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Adding a sinusoidal component with increasing amplitude violates the constant
    variance rule. In the non-stationary seasonal component series, the amplitude
    of the sinusoidal component grows linearly with time. This results in fluctuations
    in the spread of data points, making the variance non-constant. Unit roots contribute
    to the persistence of the seasonal component, influencing the variance to vary
    as the amplitude changes.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 添加一个幅度逐渐增加的正弦组件违反了恒定方差规则。在非平稳的季节性组件序列中，正弦组件的幅度随时间线性增长。这导致数据点的分布波动，使得方差变得不恒定。单位根有助于季节性组件的持续性，影响方差随着幅度的变化而变化。
- en: Exponential Growth **(Non-Constant Autocorrelation)**
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 指数增长 **（非恒定自相关）**
- en: '[PRE9]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Incorporating an exponential growth pattern violates the constant autocorrelation
    rule. The non-stationary expanding amplitude series exhibits exponential growth,
    causing the autocorrelation pattern to change with increasing values. Unit roots
    play a role in introducing persistence into the time series, leading to challenges
    in modeling and forecasting. The presence of unit roots implies non-stationarity,
    indicating that the variable does not revert to a constant mean over time.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 引入指数增长模式违反了恒定自相关规则。非平稳的扩展幅度序列表现出指数增长，导致自相关模式随着值的增加而变化。单位根在时间序列中引入了持续性，导致建模和预测中的挑战。单位根的存在意味着非平稳性，表明变量随时间不会恢复到恒定均值。
- en: Start the experimets
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开始实验
- en: Execute the code and generate the timeseries and plot the results.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 执行代码生成时间序列并绘制结果。
- en: '[PRE10]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![](../Images/b0baea2e0e391683785a2ee71085b3b9.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b0baea2e0e391683785a2ee71085b3b9.png)'
- en: Spotting a linear trend or exponential growth during exploratory data analysis
    is relatively straightforward, as these patterns exhibit clear visual cues. However,
    distinguishing between stationary and non-stationary states becomes challenging
    when dealing with sinusoidal amplitude. Visually, it’s hard to differentiate whether
    the amplitude is stationary or non-stationary just by looking at the data.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在探索性数据分析中，发现线性趋势或指数增长相对简单，因为这些模式展示了明显的视觉线索。然而，在处理正弦幅度时，区分平稳状态和非平稳状态变得具有挑战性。仅通过查看数据，很难判断幅度是平稳还是非平稳。
- en: '![](../Images/18f24cb8512e83ef1e603fdcdd3649dc.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/18f24cb8512e83ef1e603fdcdd3649dc.png)'
- en: This case will show the power of statistical tests. We have powerfull tools
    in our hands.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这个案例将展示统计测试的力量。我们手中有强大的工具。
- en: '[PRE11]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![](../Images/0345853e1acabce5a6111e30e3e7b0dd.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0345853e1acabce5a6111e30e3e7b0dd.png)'
- en: The test results are clear only stationary series is stationary in terms of
    ADF test
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 测试结果表明，只有平稳序列在ADF测试中是平稳的。
- en: The ADF test provides a clear distinction between stationary and non-stationary
    time series. In the first case, we can confidently reject the null hypothesis,
    indicating that the time series is stationary. However, for the other cases, we
    must accept the null hypothesis, concluding that the data is non-stationary. Specifically,
    in the case of sinusoidal amplitude, even though the non-stationarity is visually
    evident, the ADF test confirms our observation by not allowing us to reject the
    null hypothesis.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: ADF 测试在平稳和非平稳时间序列之间提供了明确的区分。在第一种情况下，我们可以自信地拒绝原假设，表明时间序列是平稳的。然而，对于其他情况，我们必须接受原假设，得出数据是非平稳的结论。具体来说，在正弦幅度的情况下，尽管非平稳性在视觉上显而易见，但
    ADF 测试通过不允许我们拒绝原假设来确认我们的观察结果。
- en: Practice the transformation
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实践变换
- en: Now, let’s have some fun with transformations and attempt to convert our non-stationary
    time series into a stationary one — like a bit of reverse engineering. In real-life
    scenarios, determining the exact transformation needed is often a trial-and-error
    process. I recommend conducting exploratory data analysis, plotting the time series,
    and making empirical attempts. If a transformation renders the series stationary,
    you not only achieve stationarity but also gain valuable insights into the characteristics
    of your data.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们玩一玩变换，尝试将我们的非平稳时间序列转变为平稳序列——就像做一点反向工程。在现实场景中，确定所需的确切变换通常是一个试错过程。我建议进行探索性数据分析，绘制时间序列，并进行经验尝试。如果某个变换使序列平稳，你不仅达到了平稳性，还可以获得有关数据特征的宝贵见解。
- en: '[PRE12]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Having defined our transformation functions, it’s time to put them to work.
    Let’s apply these transformations to our non-stationary time series and see if
    we can successfully induce stationarity.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在定义了我们的变换函数后，是时候将它们付诸实践了。让我们将这些变换应用于我们的非平稳时间序列，看看是否能够成功引入平稳性。
- en: '[PRE13]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![](../Images/e2de2a85964f09574b18335283e6f773.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e2de2a85964f09574b18335283e6f773.png)'
- en: Now my data is stationary horray!
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我的数据平稳了，太棒了！
- en: 'And how this data looks:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 数据的样子如下：
- en: '![](../Images/38f20fa76291050df05604acc80bc8ee.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/38f20fa76291050df05604acc80bc8ee.png)'
- en: Great news! With our data now stationary, we confidently reject the null hypothesis
    in each case. Now, for a bit of fun, I’ll take on the challenge of reverse engineering
    your random generation iteration with the given seed. Let’s see if I can unravel
    the mystery! 😄
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 好消息！由于我们的数据现在是平稳的，我们可以在每种情况下自信地拒绝原假设。现在，为了增加一点趣味，我将接受用给定种子反向工程你的随机生成迭代的挑战。让我们看看我能否揭开这个谜团！😄
- en: '[Check the whole series in this link](https://marcin-staskopl.medium.com/list/understanding-predictive-maintenance-series-e1f44d8a0cc3).
    Ensure you don’t miss out on new articles by following me.'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '[在这个链接中查看整个系列](https://marcin-staskopl.medium.com/list/understanding-predictive-maintenance-series-e1f44d8a0cc3)。通过关注我，确保你不会错过新文章。'
