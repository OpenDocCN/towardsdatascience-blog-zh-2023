- en: 'A bird’s eye view of linear algebra: The measure of a map — determinant'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 线性代数鸟瞰图：映射的度量——行列式
- en: 原文：[https://towardsdatascience.com/a-birds-eye-view-of-linear-algebra-the-measure-of-a-map-determinant-1e5fd752a3be](https://towardsdatascience.com/a-birds-eye-view-of-linear-algebra-the-measure-of-a-map-determinant-1e5fd752a3be)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/a-birds-eye-view-of-linear-algebra-the-measure-of-a-map-determinant-1e5fd752a3be](https://towardsdatascience.com/a-birds-eye-view-of-linear-algebra-the-measure-of-a-map-determinant-1e5fd752a3be)
- en: '[](https://medium.com/@rohitpandey576?source=post_page-----1e5fd752a3be--------------------------------)[![Rohit
    Pandey](../Images/af817d8f68f2984058f0afb8fd7ecbe9.png)](https://medium.com/@rohitpandey576?source=post_page-----1e5fd752a3be--------------------------------)[](https://towardsdatascience.com/?source=post_page-----1e5fd752a3be--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----1e5fd752a3be--------------------------------)
    [Rohit Pandey](https://medium.com/@rohitpandey576?source=post_page-----1e5fd752a3be--------------------------------)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@rohitpandey576?source=post_page-----1e5fd752a3be--------------------------------)[![Rohit
    Pandey](../Images/af817d8f68f2984058f0afb8fd7ecbe9.png)](https://medium.com/@rohitpandey576?source=post_page-----1e5fd752a3be--------------------------------)[](https://towardsdatascience.com/?source=post_page-----1e5fd752a3be--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----1e5fd752a3be--------------------------------)
    [Rohit Pandey](https://medium.com/@rohitpandey576?source=post_page-----1e5fd752a3be--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----1e5fd752a3be--------------------------------)
    ·16 min read·Nov 5, 2023
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----1e5fd752a3be--------------------------------)
    ·阅读时间 16 分钟·2023年11月5日
- en: --
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/b0a624404feecd67f0eeefedb248be8c.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b0a624404feecd67f0eeefedb248be8c.png)'
- en: Image created with midjourney
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 图像由 midjourney 创建
- en: 'This is the second chapter of the in-progress book on linear algebra, “A birds
    eye view of linear algebra”. The table of contents so far:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这是正在进行的线性代数书籍《线性代数鸟瞰图》的第二章。到目前为止的目录：
- en: 'Chapter-1: [The basics](https://medium.com/towards-data-science/a-birds-eye-view-of-linear-algebra-the-basics-29ad2122d98f)'
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '第一章: [基础](https://medium.com/towards-data-science/a-birds-eye-view-of-linear-algebra-the-basics-29ad2122d98f)'
- en: '**Chapter-2**: (Current) The measure of a map — determinants'
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**第二章**: （当前）映射的度量——行列式'
- en: Chapter-3:[Why is matrix multiplication the way it is?](https://medium.com/towards-data-science/a-birds-eye-view-of-linear-algebra-why-is-matrix-multiplication-like-that-a4d94067651e)
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '第三章: [为什么矩阵乘法是这样的？](https://medium.com/towards-data-science/a-birds-eye-view-of-linear-algebra-why-is-matrix-multiplication-like-that-a4d94067651e)'
- en: 'Chapter-4: [Systems of equations, linear regression and neural networks](https://medium.com/p/fe5b88a57f66)'
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '第四章: [方程组、线性回归和神经网络](https://medium.com/p/fe5b88a57f66)'
- en: 'Chapter-5: [Rank nullity and why row rank == col rank](/a-birds-eye-view-of-linear-algebra-rank-nullity-and-why-row-rank-equals-column-rank-bc084e0e1075)'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '第五章: [秩与零度及行秩==列秩](/a-birds-eye-view-of-linear-algebra-rank-nullity-and-why-row-rank-equals-column-rank-bc084e0e1075)'
- en: Linear algebra is the tool of many-dimensions. No matter what you might be doing,
    as soon as you scale to *n* dimensions, linear algebra comes into the picture.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 线性代数是多维工具。不管你在做什么，只要你扩展到 *n* 维，线性代数就会出现。
- en: In the [previous chapter,](https://medium.com/towards-data-science/a-birds-eye-view-of-linear-algebra-the-basics-29ad2122d98f)
    we described abstract linear maps. In this one, we roll up our sleeves and start
    to deal with matrices. Practical considerations like numerical stability, efficient
    algorithms, etc. will now start to be explored.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [前一章](https://medium.com/towards-data-science/a-birds-eye-view-of-linear-algebra-the-basics-29ad2122d98f)
    中，我们描述了抽象的线性映射。在本章中，我们挽起袖子开始处理矩阵。实际考虑因素如数值稳定性、效率算法等将开始被探讨。
- en: I) How to quantify a linear map?
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: I) 如何量化线性映射？
- en: We discussed in the [previous chapter](https://medium.com/towards-data-science/a-birds-eye-view-of-linear-algebra-the-basics-29ad2122d98f)
    the concept of vector spaces (basically n-dimensional collections of numbers —
    and more generally collections of [fields](https://en.wikipedia.org/wiki/Field_(mathematics)))
    and linear maps that operate on two of those vector spaces, taking objects in
    one to the other.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [前一章](https://medium.com/towards-data-science/a-birds-eye-view-of-linear-algebra-the-basics-29ad2122d98f)
    中，我们讨论了向量空间的概念（基本上是n维数值集合——更广泛地说，是 [域](https://en.wikipedia.org/wiki/Field_(mathematics))
    的集合）和对这两个向量空间进行操作的线性映射。
- en: As an example of these kinds of maps, one vector space could be the surface
    of the planet you’re sitting on and the other could be the surface of the table
    you might be sitting at. Literal maps of the world are also maps in this sense
    since they “map” every point on the surface of the Earth to a point on a paper
    or surface of a table, although they aren’t linear maps since they don’t preserve
    relative areas (Greenland appears much larger than it is for example in some of
    the projections).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 作为这些映射的一种例子，一个向量空间可以是你坐的行星的表面，另一个可以是你可能坐的桌子的表面。从这个意义上说，世界地图也是地图，因为它们将地球表面的每一点“映射”到纸上或桌面上的一点，尽管它们不是线性映射，因为它们不保持相对面积（例如在某些投影中格林兰的面积看起来比实际大得多）。
- en: '![](../Images/b3b6c94f34c69adff0f339b5d2ec2d9b.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b3b6c94f34c69adff0f339b5d2ec2d9b.png)'
- en: An actual map of the surface of the Earth is also a map in the sense of linear
    algebra, but it is not a linear map. Image created with midjourney.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 地球表面的实际地图在线性代数的意义上也是一种地图，但它不是线性映射。图像由 midjourney 创建。
- en: Once we pick a [basis](https://en.wikipedia.org/wiki/Basis_(linear_algebra))
    for the vector space (a collection of *n* “independent” vectors in the space;
    there could be infinite choices in general), all linear maps on that vector space
    get unique matrices assigned to them.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们为向量空间选择了一个 [基](https://en.wikipedia.org/wiki/Basis_(linear_algebra))（空间中
    *n* 个“独立”向量的集合；通常可以有无限的选择），所有在该向量空间上的线性映射都有唯一的矩阵与之对应。
- en: For the time being, let’s restrict our attention to maps that take vectors from
    an n-dimensional space back to the n-dimensional space (we’ll generalize later).
    The matrices corresponding to these linear maps are *n* x *n* (see section III
    of [chapter 1](https://medium.com/towards-data-science/a-birds-eye-view-of-linear-algebra-the-basics-29ad2122d98f)).
    It might be useful to “quantify” such a linear map, express its effect on the
    vector space, R^n in a single number. The kind of map we’re dealing with, effectively
    takes vectors from R^n and “distorts” them into some other vectors in the same
    space. Both the original vector *v* and the vector *u* that the map converted
    it into have some lengths (say |*v*| and *|u|*). We can think about how much the
    length of the vector is changed by the map, *|u|/|v|*. Maybe that can quantify
    the impact of the map? How much it “stretches” vectors?
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，让我们将注意力限制在将向量从 n 维空间映射回 n 维空间的映射上（我们稍后会进行推广）。这些线性映射对应的矩阵是 *n* x *n*（见 [第1章](https://medium.com/towards-data-science/a-birds-eye-view-of-linear-algebra-the-basics-29ad2122d98f)
    的第III节）。将这种线性映射“量化”，以单一数字表示其对向量空间 R^n 的影响可能是有用的。我们处理的这种映射，实际上是将向量从 R^n 中“扭曲”到同一空间中的其他向量。原始向量
    *v* 和映射转换后的向量 *u* 都有一些长度（例如 |*v*| 和 *|u|*）。我们可以考虑映射改变了向量长度的多少，*|u|/|v|*。也许这可以量化映射的影响？它对向量的“拉伸”程度？
- en: This approach has a fatal flaw. The ratio depends not just on the linear map,
    but also on the vector v it acts on. It is therefore not strictly a property of
    the linear map itself.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法有一个致命的缺陷。比率不仅依赖于线性映射，还依赖于它作用的向量 *v*。因此，它并不是线性映射本身的一个严格性质。
- en: What if we take two vectors instead now, *v_1* and *v_2* which are converted
    by the linear map into the vectors *u_1* and *u_2*. Just as the measure of the
    single vector, *v* was its length, the measure of two vectors is the area of the
    parallelogram contained between them.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 假如我们现在考虑两个向量，*v_1* 和 *v_2*，它们通过线性映射转化为向量 *u_1* 和 *u_2*。就像单个向量 *v* 的度量是它的长度一样，两个向量的度量是它们之间的平行四边形的面积。
- en: '![](../Images/bedfea891b309d55e79ba75b893049d7.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bedfea891b309d55e79ba75b893049d7.png)'
- en: The area of the parallelogram formed by two vectors. Image created with midjourney.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 由两个向量形成的平行四边形的面积。图像由 midjourney 创建。
- en: Just as we considered the amount by which the length of *v* changed, we can
    now talk in terms of the amount by which the area between *v_1* and *v_2* changes
    once they pass through the linear map and become *u_1, u_2*. And alas, this again
    depends not just on the linear map, but also the vectors chosen.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 就像我们考虑 *v* 长度变化的量一样，我们现在可以讨论 *v_1* 和 *v_2* 之间的面积在通过线性映射后变成 *u_1, u_2* 时的变化量。遗憾的是，这同样不仅依赖于线性映射，还依赖于选择的向量。
- en: Next, we can go to three vectors and consider the change in volume of the [parallelepiped](https://en.wikipedia.org/wiki/Parallelepiped)
    between them and run into the same problem of the initial vectors having a say.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们可以扩展到三个向量，考虑它们之间的 [平行六面体](https://en.wikipedia.org/wiki/Parallelepiped)
    体积的变化，并遇到相同的问题，即初始向量的影响。
- en: '![](../Images/31c46dc1d5d7dbbc6f15f6ad9e645ea9.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/31c46dc1d5d7dbbc6f15f6ad9e645ea9.png)'
- en: A three dimensional region in three dimensional space. If a linear map acts
    on these three vectors, the volume changes by the same amount no matter what the
    initial choice of the vectors. Image created with midjourney.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 三维空间中的一个三维区域。如果线性映射作用于这三个向量，无论初始选择的向量是什么，体积的变化量都相同。图像由midjourney创建。
- en: But now consider an n-dimensional region in the original vector space. This
    region will have some “n-dimensional measure”. To understand this, a two dimensional
    measure is an area (measured in square kilometers). A three dimensional measure
    is the volume used for measuring water (in liters). A four dimensional measure
    has no counterpart in the physical world we’re used to, but is just as mathematically
    sound, a measure of the amount of four dimensional space enclosed within a parallelepiped
    formed of four 4- d vectors and so on.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 但现在考虑原始向量空间中的一个n维区域。这个区域将具有某种“n维度量”。要理解这一点，一个二维量度是面积（以平方公里计算）。三维量度是用于测量水的体积（以升计算）。四维量度在我们习惯的物理世界中没有对应物，但在数学上同样合理，是测量由四个4-d向量形成的平行六面体中四维空间的量，依此类推。
- en: '![](../Images/d70bf6a71b72e4addf0955abcf3d767f.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d70bf6a71b72e4addf0955abcf3d767f.png)'
- en: The measure in a 2-d space is area and that in 3-d space is volume. These notions
    can be extended to 4-d space and up.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在2维空间中的度量是面积，在3维空间中的度量是体积。这些概念可以扩展到4维空间及以上。
- en: The *n* original vectors (*v_1, v_2, …, v_n*) form a parallelepiped which is
    transformed by the linear map into *n* new vectors, *u_1, u_2 … u_n* which form
    their own parallelepiped*.* We can then ask about the n-dimensional measure of
    the new region in relation to the original one. And this ratio it turns out, is
    indeed a function only of the linear map. Regardless of what the original region
    looked like, where it was placed and so on, the ratio of its measure once the
    linear map acted on it to its measure before will be the same, a function purely
    of the linear map. This ratio of n-dimensional measures (after to before) then
    is what we’ve been looking for. An *exclusive* property of the linear map that
    quantifies its effect in one number.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '*n* 个原始向量（*v_1, v_2, …, v_n*）形成一个平行六面体，该平行六面体被线性映射变换为*n* 个新向量，*u_1, u_2 … u_n*，它们形成自己的平行六面体。然后我们可以问新区域的n维度量与原始区域的关系。结果发现，这个比例确实只是线性映射的函数。无论原始区域的样子、位置等如何，线性映射作用于它后的度量与作用之前的度量之比将相同，是线性映射的纯粹函数。这个n维度量的比例（后/前）就是我们一直在寻找的。一个量化线性映射效果的*唯一*属性。'
- en: This ratio by which the measure of ***any*** n-dimensional patch of space is
    changed by the linear map is a good way to quantify the effect it has on the space
    it acts on. It is called the determinant of the linear map (the reason for that
    name will become apparent in section V).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 通过线性映射改变的***任何***n维空间片段的比例是量化它对所作用空间影响的一个好方法。这个比例称为线性映射的行列式（这个名字的原因将在第V节中显现）。
- en: For now, we simply stated the fact that the amount by which a linear map from
    R^n to R^n “stretches” any patch of n-dimensional space depends only on the map
    without offering a proof since the purpose here was motivation. We’ll cover a
    proof later (section VI), once we arm ourselves with some weapons.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，我们只是简单陈述了线性映射从R^n到R^n“拉伸”任何n维空间片段的程度仅依赖于映射本身，而没有提供证明，因为这里的目的是激励。我们将在稍后（第VI节）提供证明，一旦我们准备好一些工具。
- en: II) Calculating determinants
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: II) 计算行列式
- en: Now, how do we find this determinant given a linear map from the vector space
    *R^n* back to *R^n*? We can take any *n* vectors, find the measure of the parallelepiped
    between them and the measure of the new parallelepiped once the linear map has
    acted on all of them. Finally, divide the latter by the former.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，如何在给定一个从向量空间 *R^n* 到 *R^n* 的线性映射时找到这个行列式呢？我们可以取任何*n*个向量，找到它们之间的平行六面体的度量，然后找到线性映射作用于所有向量后的新平行六面体的度量。最后，将后者除以前者。
- en: We need to make these steps more concrete. First, let’s start playing around
    in this *R^n* vector space.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要使这些步骤更具体。首先，让我们开始在这个 *R^n* 向量空间中玩耍。
- en: 'The *R^n* vector space is just a collection of *n* real numbers. The simplest
    vector is just *n* zeros — *[0, 0,…, 0]*. This is the zero vector. If we multiply
    a scalar with it, we just get the zero vector back. Not interesting. For the next
    simplest vector, we can replace the first *0* with a *1\.* This leads to the vector:
    *e1=[1, 0, 0,.., 0]*. Now, multiplying by a scalar, *c* gives us a different vector.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '*R^n* 向量空间只是 *n* 个实数的集合。最简单的向量是 *n* 个零——*[0, 0,…, 0]*。这是零向量。如果我们用一个标量乘它，我们得到的仍然是零向量。这并不有趣。对于下一个最简单的向量，我们可以将第一个
    *0* 替换为 *1*。这就得到了向量：*e1=[1, 0, 0,.., 0]*。现在，乘以一个标量 *c* 会得到一个不同的向量。'
- en: '*c.[1, 0, 0,.., 0] = [c, 0, 0, …, 0]*'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '*c.[1, 0, 0,.., 0] = [c, 0, 0, …, 0]*'
- en: We can “span” an infinite number of vectors with *e1* depending on the scalar,
    *c* we choose.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以用 *e1* “生成”无限多个向量，具体取决于我们选择的标量 *c*。
- en: If *e1* is the vector with just the first element being *1* and the rest being
    *0*, then what is *e2*? The second element being *1* and the rest being *0* seems
    like a logical choice.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 *e1* 是第一个元素为 *1* 其余为 *0* 的向量，那么 *e2* 是什么？第二个元素为 *1* 其余为 *0* 看起来是一个合乎逻辑的选择。
- en: '*e2 = [0,1,0,0,…0]*'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '*e2 = [0,1,0,0,…0]*'
- en: 'Taking this to its logical conclusion, we get a collection of *n* vectors:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 将此推向逻辑的结论，我们得到一个由 *n* 个向量组成的集合：
- en: '*e1 = [1, 0, 0,.., 0]*'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '*e1 = [1, 0, 0,.., 0]*'
- en: '*e2 = [0,1,0,0,…0]*'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '*e2 = [0,1,0,0,…0]*'
- en: '*e2 = [0,0,1,0,…0]*'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '*e2 = [0,0,1,0,…0]*'
- en: …
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: …
- en: '*en = [0,0,0,0,…1]*'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '*en = [0,0,0,0,…1]*'
- en: These vectors form a basis of the vector space that is *R^n*. What does this
    mean? Any vector, *v* in *R^n* can be expressed as a linear combination of these
    *n* vectors. Which means that for some scalars, *c1, c2,…, cn:*
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这些向量构成了 *R^n* 向量空间的一个基底。这意味着什么？*R^n* 中的任何向量 *v* 都可以表示为这些 *n* 个向量的线性组合。这意味着对于某些标量
    *c1, c2,…, cn：*
- en: '*v = c1.e1+c2.e2+…+cn.en*'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '*v = c1.e1+c2.e2+…+cn.en*'
- en: All vectors, *v* are “spanned” by the set of vectors *e1, e2,…, en*.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 所有向量，*v* 都是由向量集 *e1, e2,…, en* “生成”的。
- en: This particular collection of vectors isn’t the only basis. Any set of *n* vectors
    work. The only caveat is that none of the *n* vectors should be “spanned” by the
    rest. In other words, all the *n* vectors should be linearly independent. If we
    choose *n* random numbers from most continuous distributions and repeat the process
    *n* times to create the *n* vectors, you will get a set of linearly independent
    vectors with 100% probability (“almost surely” in probability terms). It’s just
    very very unlikely that a random vector happens to be “spanned” by some other
    *k<n* random vectors.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这个特定的向量集合不是唯一的基底。任何 *n* 个向量的集合都可以。唯一的注意事项是，这些 *n* 个向量中没有一个应由其余向量“生成”。换句话说，所有的
    *n* 个向量应当是线性无关的。如果我们从大多数连续分布中随机选择 *n* 个数，并重复这个过程 *n* 次来创建这 *n* 个向量，你将以100%的概率获得一组线性无关的向量（在概率术语中为“几乎肯定”）。只是非常非常不可能随机向量恰好由其他
    *k<n* 个随机向量“生成”。
- en: Going back to our recipe at the beginning of this section to find the determinant
    of a linear map, we now have a basis to express our vectors in. Fixing the basis
    also means our linear map can be expressed as a matrix (see section III of chapter
    1). Since this linear map is taking vectors from *R^n* back to *R^n*, the corresponding
    matrix is *n* x *n*.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 回到本节开始时我们用来寻找线性映射行列式的公式，我们现在有一个基底来表示我们的向量。确定基底也意味着我们的线性映射可以表示为一个矩阵（参见第1章第III节）。由于该线性映射将向量从
    *R^n* 映射回 *R^n*，因此相应的矩阵是 *n* x *n*。
- en: Next, we needed *n* vectors to form our parallelepiped. Why not take the *e1*,
    *e2, …* *en* standard basis we defined before. The measure of the patch of space
    contained between these vectors happens to be *1,* by very definition. The picture
    below for *R³* will hopefully make this clear.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要 *n* 个向量来形成我们的平行六面体。为什么不使用我们之前定义的 *e1*, *e2, …* *en* 标准基底。由这些向量包含的空间补丁的度量恰好是
    *1*，这就是定义。下面的 *R³* 图像希望能让这一点变得清晰。
- en: '![](../Images/fa5e1f9d8a6f18827a82f4027589640b.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fa5e1f9d8a6f18827a82f4027589640b.png)'
- en: The standard patch of space contained between vectors e1, e2, e3, …, en. In
    this case, we have three vectors since the space is 3-dimensional. Image created
    with midjourney.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 向量 *e1, e2, e3, …, en* 之间包含的标准空间补丁。在这种情况下，我们有三个向量，因为空间是三维的。图像由 midjourney 创建。
- en: 'If we collect these vectors from the standard basis into a matrix (rows or
    columns), we get the identity matrix (1’s on the main diagonal, 0’s everywhere
    else):'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将这些标准基底的向量收集成一个矩阵（行或列），我们会得到单位矩阵（主对角线上的1，其他地方为0）：
- en: '![](../Images/33231727fbd66a497f87aa568da3cd0c.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/33231727fbd66a497f87aa568da3cd0c.png)'
- en: The identity matrix. Image by author.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 单位矩阵。图像由作者提供。
- en: When we said we could apply our linear transform to any n-dimensional patch
    of space, we might as well apply it to this “standard” patch.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们说可以将线性变换应用于任何n维空间的补丁时，我们也可以将其应用于这个“标准”补丁。
- en: But, it's easy to show that multiplying any matrix with the identity matrix
    results in the same matrix. So, the resulting vectors after the linear map is
    applied are the columns of the matrix representing the linear map itself. So,
    the amount by which the linear map changed the volume of the “standard patch”
    is the same as the n-dimensional measure of the parallelepiped between the column
    vectors of the matrix representing the map itself.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 但，很容易证明将任何矩阵与单位矩阵相乘会得到相同的矩阵。因此，应用线性映射后的结果向量是表示线性映射本身的矩阵的列。因此，线性映射改变“标准补丁”体积的量与表示映射本身的矩阵的列向量之间的平行六面体的n维度量是相同的。
- en: To recap, we started by motivating the determinant as the ratio by which a linear
    map changes the measure of an n-dimensional patch of space. And now, we showed
    that this ratio itself is an n-dimensional measure. In particular, the measure
    contained between the column vectors of any matrix representing the linear map.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，我们从激发行列式作为线性映射改变n维空间补丁度量的比率开始。现在，我们展示了这个比率本身是n维度量。特别是，包含在任何表示线性映射的矩阵的列向量之间的度量。
- en: III) Motivating the basic properties
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: III) 激发基本属性
- en: We described in the previous section how a determinant of a linear map should
    simply be the measure contained between the vectors of any of its matrix representations.
    In this section, we use two dimensional space (where measures are areas) to motivate
    some fundamental properties a determinant must have.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在前一节中描述了线性映射的行列式应该简单地是任何其矩阵表示之间的度量。在这一节中，我们使用二维空间（其中度量是面积）来激发行列式必须具有的一些基本属性。
- en: 'The first property is multi-linearity. A determinant is a function that takes
    a bunch of vectors (collected in a matrix) and maps them to a single scalar. Since
    we’re restricting to two-dimensional space, we’ll consider two vectors, both two
    dimensional. Our determinant (since we’ve motivated it to be the area of the parallelogram
    between the vectors) can be expressed as:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个属性是多重线性。行列式是一个将一组向量（收集在矩阵中）映射到一个标量的函数。由于我们限制在二维空间中，我们将考虑两个向量，都是二维的。我们的行列式（由于我们将其解释为向量之间平行四边形的面积）可以表示为：
- en: '*det = A(v1, v2)*'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '*det = A(v1, v2)*'
- en: 'How should this function behave if we add a vector to one of the two vectors?
    The multi-linearity property requires:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将一个向量添加到两个向量中的一个，函数应该如何表现？多重线性属性要求：
- en: '*A(v1+v3, v2) = A(v1,v2)+A(v3,v2) __ (1)*'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '*A(v1+v3, v2) = A(v1,v2)+A(v3,v2) __ (1)*'
- en: This is apparent from the moving picture below (note the new area getting added).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 从下面的动态图中可以看出这一点（注意新增的面积）。
- en: '![](../Images/4cd5f3fd20fce6e1f0c619432a102d76.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4cd5f3fd20fce6e1f0c619432a102d76.png)'
- en: The additive property of a determinant. Image by author.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 行列式的加法属性。图片作者提供。
- en: 'And this visualization can also be used to see (by scaling one of the vectors
    instead of adding another vector to it):'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这个可视化也可以用于观察（通过缩放其中一个向量而不是添加另一个向量）：
- en: '*A(c.v1, v2) = c.A(v1, v2) __ (2)*'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '*A(c.v1, v2) = c.A(v1, v2) __ (2)*'
- en: This second property has an important implication. What if we plug a negative
    *c* into the equation? The area, *A(v1, v2)* should then be the opposite sign
    to *A(c.v1,v2).*
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个属性具有一个重要的含义。如果我们将负的 *c* 代入方程中，面积 *A(v1, v2)* 应该与 *A(c.v1,v2)* 的符号相反。
- en: Which means we need to introduce the notion of negative area and a negative
    determinant.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们需要引入负面积和负行列式的概念。
- en: This makes a lot of sense if we’re okay with the concept of negative lengths.
    If lengths, measures in 1-d space can be positive or negative, then it stands
    to reason that areas, measures in 2-d space should also be allowed to be negative.
    And so, measures in space of any dimensionality should as well.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们接受负长度的概念，这就很有意义。如果一维空间中的长度度量可以是正的或负的，那么二维空间中的面积度量也应该允许为负。因此，任何维度的空间度量也应如此。
- en: Together, equations (1) and (2) are the multi-linearity property.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 结合方程（1）和（2）就是多重线性属性。
- en: 'Another important property that has to do with the sign of the determinant
    is the “alternating property”. It requires:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个与行列式符号有关的重要属性是“交替属性”。它要求：
- en: '*A(v1, v2) = -A(v2, v1) __(3)*'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '*A(v1, v2) = -A(v2, v1) __(3)*'
- en: Swapping the order of two vectors negates the sign of the determinant (or measure
    between them). If you learnt about the [cross product](https://en.wikipedia.org/wiki/Cross_product#:~:text=The%20cross%20product%20a%20×,parallelogram%20that%20the%20vectors%20span.)
    of 3-d vectors, this property will be very natural. To motivate it, let’s think
    first of the one-dimensional distance between two position vectors, *d(v1, v2)*.
    Its clear that *d(v1, v2) = -d(v2, v1)* since when we go from *v2* to *v1*, we’re
    traveling in the opposite direction to when we go from *v1* to *v2*. Similarly,
    if the area spanned between vectors *v1* and *v2* is positive, then that between
    *v2* and *v1* must be negative. This property holds in *n* dimensional space as
    well. If in *A(v1, v2, …, vn*) we swap two of the vectors, it causes the sign
    to switch.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 交换两个向量的顺序会使行列式（或它们之间的度量）符号取反。如果你学过 [叉积](https://en.wikipedia.org/wiki/Cross_product#:~:text=The%20cross%20product%20a%20×,parallelogram%20that%20the%20vectors%20span.)
    3D 向量，这个性质会非常自然。为了说明这个性质，先考虑两个位置向量之间的一维距离 *d(v1, v2)*。显然 *d(v1, v2) = -d(v2, v1)*，因为当我们从
    *v2* 移动到 *v1* 时，我们的方向与从 *v1* 移动到 *v2* 时的方向相反。类似地，如果向量 *v1* 和 *v2* 之间的面积是正的，那么
    *v2* 和 *v1* 之间的面积必须是负的。这个性质在 *n* 维空间中也成立。如果在 *A(v1, v2, …, vn*) 中我们交换两个向量，它会导致符号的改变。
- en: 'The alternating property also implies that if one of the vectors is simply
    a scalar multiple of the other, the determinant must be *0*. This is because swapping
    the two vectors should negate the determinant:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 交替性质还意味着如果其中一个向量只是另一个向量的标量倍数，则行列式必须是 *0*。这是因为交换两个向量应该会使行列式取反：
- en: '*A(v1, v1) = -A(v1, v1)*'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '*A(v1, v1) = -A(v1, v1)*'
- en: => *2 A(v1, v1) = 0*
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: => *2 A(v1, v1) = 0*
- en: '*=> A(v1, v1) = 0*'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '*=> A(v1, v1) = 0*'
- en: 'We also have by multi-linearity (equation 2):'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以通过多线性（公式 2）：
- en: '*A(v1, c.v1) = c A(v1, v1) = 0*'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '*A(v1, c.v1) = c A(v1, v1) = 0*'
- en: This makes sense geometrically since if two vectors are parallel to each other,
    the area between them is *0*.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 从几何角度来看这是合理的，因为如果两个向量彼此平行，那么它们之间的面积是 *0*。
- en: The [video [6]](https://www.youtube.com/watch?v=9IswLDsEWFk) covers the geometric
    motivation of these properties with really good visualizations and [video [4]](https://www.youtube.com/watch?v=Ip3X9LOh2dk&t=295s)
    visualizes the alternating property quite well.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '[视频 [6]](https://www.youtube.com/watch?v=9IswLDsEWFk) 通过非常好的可视化展示了这些性质的几何动机，[视频
    [4]](https://www.youtube.com/watch?v=Ip3X9LOh2dk&t=295s) 也很好地可视化了交替性质。'
- en: 'IV) Getting algebraic: Deriving the Leibniz formula'
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: IV) 代数推导：推导莱布尼茨公式
- en: In this section, we move away from geometric intuition and approach the topic
    of determinants from an alternate route. That of cold, algebraic calculations.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们远离几何直观，从另一个角度，即冷冰冰的代数计算，来探讨行列式的话题。
- en: See, the multi-linearity and alternating properties which we motivated in the
    last section with geometry are (remarkably) enough to give us a very specific
    algebraic formula for the determinant, called the Leibniz formula.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一节通过几何学所激发的多线性和交替性质，（显著地）足以为我们提供一个非常具体的行列式代数公式，称为莱布尼茨公式。
- en: That formula helps us see properties of the determinant that would be really,
    really hard from the geometric approach or with other algebraic formulas.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这个公式帮助我们看到行列式的性质，这些性质从几何方法或其他代数公式中会非常困难。
- en: The Leibniz formula can then be reduced to the Laplace expansion, involving
    going along a row or column and calculating co-factors which many people see in
    high school.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 莱布尼茨公式可以简化为拉普拉斯展开，涉及沿着某一行或列进行计算并计算余子式，这些在高中时许多人见过。
- en: Let’s derive the Leibniz formula. We need a function that takes the *n* column
    vectors, 𝛼*1,* 𝛼2, …, 𝛼n of the matrix as input and converts them into a scalar,
    *c*.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们推导莱布尼茨公式。我们需要一个函数，它接受矩阵的 *n* 列向量，𝛼*1,* 𝛼2, …, 𝛼n 作为输入，并将它们转换为一个标量 *c*。
- en: '![](../Images/6deafeac9e62bd5fdff44b3b4278e1f4.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6deafeac9e62bd5fdff44b3b4278e1f4.png)'
- en: We can express each column vector in terms of the standard basis of the space.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以用空间的标准基表示每个列向量。
- en: '![](../Images/c5cadb1dde3b10898ae93347fb00d1f6.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c5cadb1dde3b10898ae93347fb00d1f6.png)'
- en: Now, we can apply the property of multi-linearity. For now, to the first column,
    𝛼*1.*
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以应用多线性性质。暂时考虑第一个列，𝛼*1*。
- en: '![](../Images/d8b0489c4d178c771f108d14543a589d.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d8b0489c4d178c771f108d14543a589d.png)'
- en: We can do the same for the second column. Let’s take just the first term from
    the summation above and take a look at the resulting terms.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 对第二列也可以这样做。我们只取上面求和中的第一个项，看看结果。
- en: '![](../Images/eaab85176481b60806e0dc37a58b9831.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/eaab85176481b60806e0dc37a58b9831.png)'
- en: Note that in the first term, we get the vector, *e1* appearing twice. And by
    the alternating property, the function *f* for that term becomes *0*.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 注意在第一个项中，我们得到向量*e1*出现两次。根据交替属性，该项的函数*f*变为*0*。
- en: In order for two *e1*’s to appear, the second indices of the two *a*’s in the
    product must each become *1*.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让两个*e1*出现，积中两个*a*的第二个指标必须都变成*1*。
- en: So, once we do this for all the columns, the terms that won’t become zero by
    the alternating property will be the ones where the second indices of the *a*’s
    don’t have any repetition — so all distinct numbers from *1* to *n*. In other
    words, we’re looking for permutations of *1* to *n* to appear in the second indices
    of the *a*’s.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，一旦我们对所有列进行这个操作，按照交替属性不会变为零的项将是那些第二个指标没有任何重复的项——即从*1*到*n*的所有不同数字。换句话说，我们在寻找*a*的第二个指标中出现*1*到*n*的排列。
- en: What about the first indices of the *a*’s? Those are simply the numbers *1*
    to *n* in order since we pull out the *a_1x*’s first, then the *a_2x*’s and so
    on. In more compact algebraic notation,
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，*a*的第一个指标是什么呢？这些指标只是从*1*到*n*的顺序，因为我们首先提取*a_1x*，然后是*a_2x*，以此类推。用更简洁的代数符号表示，
- en: '![](../Images/4393761627ae977ce9371178e9dd0482.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4393761627ae977ce9371178e9dd0482.png)'
- en: In the expression on the right, the areas, *f(e_j1, e_j2, …, e_jn)* can either
    be *+1*, *-1* or *0* since the *e_j*’s are all unit vectors orthogonal to each
    other. We already established that any term that has any repeated *e_j*’s will
    become *0* leaving us with just permutations (no repetition). Among those permutations,
    we will sometimes get *+1* and sometimes *-1*.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在右边的表达式中，区域*f(e_j1, e_j2, …, e_jn)* 可以是 *+1*、*-1* 或 *0*，因为*e_j*都是彼此正交的单位向量。我们已经确定，任何具有重复*e_j*的项将变为*0*，留下的只是排列（没有重复）。在这些排列中，我们有时会得到
    *+1*，有时会得到 *-1*。
- en: 'The concept of permutations carries with it [signs](https://en.wikipedia.org/wiki/Parity_of_a_permutation#:~:text=The%20sign%2C%20signature%2C%20or%20signum,1%20if%20σ%20is%20odd.).
    The signs of the areas are equivalent to the signs of the permutations. If we
    denote by *S_n* the set of all permutations of *[1,2,…,n]* then we get the Leibniz
    formula of the determinant:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 排列的概念带有[符号](https://en.wikipedia.org/wiki/Parity_of_a_permutation#:~:text=The%20sign%2C%20signature%2C%20or%20signum,1%20if%20σ%20is%20odd.)。这些区域的符号与排列的符号相等。如果我们用*S_n*表示*{1,2,…,n}*的所有排列集合，那么我们得到的就是行列式的莱布尼茨公式：
- en: '![](../Images/c9d8fd2543edb17b179f5a961751aeba.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c9d8fd2543edb17b179f5a961751aeba.png)'
- en: 'If you’re still confused about the formula, see the [mathexchange post, [3]](https://math.stackexchange.com/questions/319321/understanding-the-leibniz-formula-for-determinants#:~:text=The%20formula%20says%20that%20det,permutation%20get%20a%20minus%20sign.&text=where%20the%20minus%20signs%20correspond%20to%20the%20odd%20permutations%20from%20above).
    And if you’re the kind of person that needs to see working code for things to
    click, here is some Python:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对这个公式仍然感到困惑，可以查看[mathexchange帖子，[3]](https://math.stackexchange.com/questions/319321/understanding-the-leibniz-formula-for-determinants#:~:text=The%20formula%20says%20that%20det,permutation%20get%20a%20minus%20sign.&text=where%20the%20minus%20signs%20correspond%20to%20the%20odd%20permutations%20from%20above)。如果你是那种需要看到实际代码才能理解的人，这里有一些Python代码：
- en: '[PRE0]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: One shouldn’t actually use this formula to calculate the determinant of a matrix
    (unless it’s just for fun or exposition). It works, but is comically inefficient
    given the sum over all permutations (which is *n!*, superexponential).
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，不应该使用这个公式来计算矩阵的行列式（除非只是为了娱乐或展示）。它是有效的，但由于涉及到所有排列的求和（即*n!*，超指数级），因此显得非常低效。
- en: 'However, many theoretical properties of the determinant become trivial to see
    with the Leibniz formula when they would be very hard to decipher or prove if
    we started from another of its forms. For example:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，行列式的许多理论性质在使用莱布尼茨公式时变得容易看出，而如果从它的其他形式开始，可能会很难解读或证明。例如：
- en: 'With this formula it becomes apparent that a matrix and its transpose have
    the same determinant: *|A| = |A^T|*. It’s a simple consequence of the symmetry
    of the formula.'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用这个公式可以明显看出，一个矩阵及其转置具有相同的行列式：*|A| = |A^T|*。这是公式对称性的简单结果。
- en: A very similar derivation to the above can be used to show that for two matrices
    *A* and *B*, *|AB| = |A|.|B|.* See [this answer](https://math.stackexchange.com/a/60293/155881)
    in the [mathexchange post, [8]](https://math.stackexchange.com/questions/60284/how-to-show-that-detab-deta-detb).
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以使用与上述非常相似的推导来证明，对于两个矩阵 *A* 和 *B*，*|AB| = |A|.|B|*。参见[这个答案](https://math.stackexchange.com/a/60293/155881)和[mathexchange帖子，[8]](https://math.stackexchange.com/questions/60284/how-to-show-that-detab-deta-detb)。
- en: 'With the Leibniz formula, we can easily see that if the matrix is upper triangular
    or lower triangular (lower triangular means every element of the matrix above
    the diagonal is zero), the determinant is simply the product of the entries on
    the diagonal. This is because all permutations bar one: *(a_11.a_22…a_nn)* (the
    main diagonal)get some zero term or the other and make their terms in the summation
    *0*.'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用莱布尼茨公式，我们可以很容易地看到，如果矩阵是上三角矩阵或下三角矩阵（下三角矩阵意味着矩阵对角线以上的每个元素都是零），行列式仅仅是对角线元素的乘积。这是因为除了一个排列：*(a_11.a_22…a_nn)*（主对角线），其他排列都得到一些零项或其他，从而使求和中的项为*0*。
- en: '![](../Images/57b484c50ad54119997e39dd1577e0e9.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/57b484c50ad54119997e39dd1577e0e9.png)'
- en: An upper triangular matrix. All entries below the main diagonal are 0\. Image
    by author.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 上三角矩阵。主对角线下方的所有元素都是0。作者提供的图像。
- en: The third fact actually leads to the most efficient algorithm for calculating
    a determinant that most linear algebra libraries use. A matrix can be decomposed
    efficiently into lower and upper triangular matrices (called the LU decomposition
    which we’ll cover in the next chapter). After doing this decomposition, the third
    fact is used to multiply the diagonals of those lower and upper matrices to get
    their determinants. And finally, the second fact is used to multiply those two
    determinants and get the determinant of the original matrix.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个事实实际上导致了最有效的行列式计算算法，这是大多数线性代数库使用的。矩阵可以高效地分解为下三角矩阵和上三角矩阵（称为LU分解，我们将在下一章中介绍）。在完成这种分解后，第三个事实用于将这些下三角矩阵和上三角矩阵的对角线元素相乘以得到它们的行列式。最后，第二个事实用于将这两个行列式相乘以获得原始矩阵的行列式。
- en: A lot of people in high school or university when first exposed to the determinant,
    learn about the Laplace expansion, which involves expanding about a row or column,
    finding co-factors for each element and summing. That can be derived from the
    above Leibniz expansion by collecting similar terms. See [this answer](https://math.stackexchange.com/a/4225580/155881)
    to the [mathexchange post, [2]](https://math.stackexchange.com/a/4225580/155881).
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 许多高中或大学的学生在首次接触行列式时，学习关于拉普拉斯展开的方法，包括按行或列展开，为每个元素找余因子并求和。这可以通过收集类似项从上面的莱布尼茨展开推导出来。参见[这个答案](https://math.stackexchange.com/a/4225580/155881)中的[mathexchange帖子，[2]](https://math.stackexchange.com/a/4225580/155881)。
- en: V) Historic motivation
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: V) 历史激发
- en: '![](../Images/e0ae6dadb79d423fc427fc015f6e979e.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e0ae6dadb79d423fc427fc015f6e979e.png)'
- en: Historic motivation for determinants. Image created with midjourney.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 行列式的历史激发。图像由midjourney创建。
- en: The determinant was first discovered in the context of linear systems of equations.
    Say we have *n* equations in *n* variables *(x_0, x_1, …, x_n)*.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 行列式最初是在解决线性方程组的背景下发现的。假设我们有*n*个方程和*n*个变量*(x_0, x_1, …, x_n)*。
- en: '![](../Images/08d8acc42c6ecd21dc0163c0fe9cc12f.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/08d8acc42c6ecd21dc0163c0fe9cc12f.png)'
- en: A system of linear equations. Image by author.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 线性方程组。作者提供的图像。
- en: 'This system can be expressed in matrix form:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这个系统可以用矩阵形式表示：
- en: '![](../Images/c23217c45d321b5125f4eac5d17ee2b4.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c23217c45d321b5125f4eac5d17ee2b4.png)'
- en: System of linear equations in matrix form. Image by author.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 矩阵形式的线性方程组。作者提供的图像。
- en: 'And more compactly:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 更简洁地：
- en: '*A.x = b*'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '*A.x = b*'
- en: An important question is whether or not the system above has a unique solution,
    *x*. And the determinant is a function that “determines” this. There is a unique
    solution if and only if the determinant of *A* is non-zero.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 一个重要的问题是上述系统是否有唯一解*x*。行列式是一个“决定”这一点的函数。当且仅当*A*的行列式非零时，才存在唯一解。
- en: This historically inspired approach motivates the determinant as a polynomial
    that arises when we try to solve a linear system of equations associated with
    the linear map.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 这种历史性激发的方法使得行列式作为一个多项式，这个多项式在我们尝试解决与线性映射相关的线性方程组时出现。
- en: For more on this, see the excellent answer in the [mathexchange post, [8]](https://math.stackexchange.com/a/4782557/155881).
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 更多内容请参见[这个优质回答](https://math.stackexchange.com/a/4782557/155881)中的[mathexchange帖子，[8]](https://math.stackexchange.com/a/4782557/155881)。
- en: VI) Proof of the property we motivated with
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VI) 我们所激发的性质的证明
- en: We started this chapter by motivating the determinant as the amount by which
    the *R^n to R^n* linear map changes the measure of an n-dimensional patch of space.
    We also said that this doesn’t work for 1, 2, .. n-1 dimensional measures. Below
    is a proof of this where we use some of the properties we encountered in the rest
    of the sections.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本章开始时通过将行列式作为*R^n 到 R^n* 线性映射改变 n 维空间小块的度量来进行动机说明。我们还提到，这对 1、2、.. n-1 维度的度量不适用。下面是一个证明，我们使用了在其他部分遇到的一些性质。
- en: '![](../Images/187785e848c6429aad42afbb8fa79c71.png)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/187785e848c6429aad42afbb8fa79c71.png)'
- en: If you’re enjoying the book, consider buying me a coffee for motivation :)
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢这本书，考虑请我喝杯咖啡以激励我 :)
- en: '[https://www.buymeacoffee.com/w045tn0iqw](https://www.buymeacoffee.com/w045tn0iqw)'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.buymeacoffee.com/w045tn0iqw](https://www.buymeacoffee.com/w045tn0iqw)'
- en: References
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[1] Mathexchange post: Determinant of a linear map doesn’t depend on the bases:
    [https://math.stackexchange.com/questions/962382/determinant-of-linear-transformation](https://math.stackexchange.com/questions/962382/determinant-of-linear-transformation)'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] Mathexchange 帖子：线性映射的行列式与基的选择无关： [https://math.stackexchange.com/questions/962382/determinant-of-linear-transformation](https://math.stackexchange.com/questions/962382/determinant-of-linear-transformation)'
- en: '[2] Mathexchange post: Determinant of a matrix Laplace expansion (high school
    formula) [https://math.stackexchange.com/a/4225580/155881](https://math.stackexchange.com/a/4225580/155881)'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] Mathexchange 帖子：矩阵的行列式拉普拉斯展开（高中公式） [https://math.stackexchange.com/a/4225580/155881](https://math.stackexchange.com/a/4225580/155881)'
- en: '[3] Mathexchange post: Understanding Leibniz formula for determinants [https://math.stackexchange.com/questions/319321/understanding-the-leibniz-formula-for-determinants#:~:text=The%20formula%20says%20that%20det,permutation%20get%20a%20minus%20sign.&text=where%20the%20minus%20signs%20correspond%20to%20the%20odd%20permutations%20from%20above](https://math.stackexchange.com/questions/319321/understanding-the-leibniz-formula-for-determinants#:~:text=The%20formula%20says%20that%20det,permutation%20get%20a%20minus%20sign.&text=where%20the%20minus%20signs%20correspond%20to%20the%20odd%20permutations%20from%20above).'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '[3] Mathexchange 帖子：理解莱布尼茨公式的行列式 [https://math.stackexchange.com/questions/319321/understanding-the-leibniz-formula-for-determinants#:~:text=The%20formula%20says%20that%20det,permutation%20get%20a%20minus%20sign.&text=where%20the%20minus%20signs%20correspond%20to%20the%20odd%20permutations%20from%20above](https://math.stackexchange.com/questions/319321/understanding-the-leibniz-formula-for-determinants#:~:text=The%20formula%20says%20that%20det,permutation%20get%20a%20minus%20sign.&text=where%20the%20minus%20signs%20correspond%20to%20the%20odd%20permutations%20from%20above).'
- en: '[4] Youtube video: 3B1B on determinants [https://www.youtube.com/watch?v=Ip3X9LOh2dk&t=295s](https://www.youtube.com/watch?v=Ip3X9LOh2dk&t=295s)'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '[4] Youtube 视频：3B1B 关于行列式 [https://www.youtube.com/watch?v=Ip3X9LOh2dk&t=295s](https://www.youtube.com/watch?v=Ip3X9LOh2dk&t=295s)'
- en: '[5] Connecting Leibniz formula with geometry [https://math.stackexchange.com/questions/593222/leibniz-formula-and-determinants](https://math.stackexchange.com/questions/593222/leibniz-formula-and-determinants)'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '[5] 连接莱布尼茨公式与几何 [https://math.stackexchange.com/questions/593222/leibniz-formula-and-determinants](https://math.stackexchange.com/questions/593222/leibniz-formula-and-determinants)'
- en: '[6] Youtube video: Leibniz formula is area: [https://www.youtube.com/watch?v=9IswLDsEWFk](https://www.youtube.com/watch?v=9IswLDsEWFk)'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '[6] Youtube 视频：莱布尼茨公式即面积： [https://www.youtube.com/watch?v=9IswLDsEWFk](https://www.youtube.com/watch?v=9IswLDsEWFk)'
- en: '[7] Mathexchange post: product of determinants is determinant of product [https://math.stackexchange.com/questions/60284/how-to-show-that-detab-deta-detb](https://math.stackexchange.com/questions/60284/how-to-show-that-detab-deta-detb)'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '[7] Mathexchange 帖子：行列式的乘积等于乘积的行列式 [https://math.stackexchange.com/questions/60284/how-to-show-that-detab-deta-detb](https://math.stackexchange.com/questions/60284/how-to-show-that-detab-deta-detb)'
- en: '[8] Historic context for motivating determinant: [https://math.stackexchange.com/a/4782557/155881](https://math.stackexchange.com/a/4782557/155881)'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '[8] 行列式的历史背景： [https://math.stackexchange.com/a/4782557/155881](https://math.stackexchange.com/a/4782557/155881)'
