- en: 4 Pandas One-Liners That Solve Particular Tasks Efficiently
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4 个 Pandas 一行代码解决特定任务的高效方法
- en: 原文：[https://towardsdatascience.com/4-pandas-one-liners-that-surprised-me-in-a-good-way-b67955211f81](https://towardsdatascience.com/4-pandas-one-liners-that-surprised-me-in-a-good-way-b67955211f81)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/4-pandas-one-liners-that-surprised-me-in-a-good-way-b67955211f81](https://towardsdatascience.com/4-pandas-one-liners-that-surprised-me-in-a-good-way-b67955211f81)
- en: Complex tasks completed in a quick and simple way
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 以快速简单的方式完成复杂任务
- en: '[](https://sonery.medium.com/?source=post_page-----b67955211f81--------------------------------)[![Soner
    Yıldırım](../Images/c589572e9d1ee176cd4f5a0008173f1b.png)](https://sonery.medium.com/?source=post_page-----b67955211f81--------------------------------)[](https://towardsdatascience.com/?source=post_page-----b67955211f81--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----b67955211f81--------------------------------)
    [Soner Yıldırım](https://sonery.medium.com/?source=post_page-----b67955211f81--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://sonery.medium.com/?source=post_page-----b67955211f81--------------------------------)[![Soner
    Yıldırım](../Images/c589572e9d1ee176cd4f5a0008173f1b.png)](https://sonery.medium.com/?source=post_page-----b67955211f81--------------------------------)[](https://towardsdatascience.com/?source=post_page-----b67955211f81--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----b67955211f81--------------------------------)
    [Soner Yıldırım](https://sonery.medium.com/?source=post_page-----b67955211f81--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----b67955211f81--------------------------------)
    ·5 min read·Nov 23, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----b67955211f81--------------------------------)
    ·阅读时间 5 分钟·2023年11月23日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/5569fc0f11be8364c66846bfb0609968.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5569fc0f11be8364c66846bfb0609968.png)'
- en: Photo by [Tom Bradley](https://unsplash.com/@tomrootstudio?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)
    on [Unsplash](https://unsplash.com/photos/brown-squirrel-on-green-grass-during-daytime-Z-ns9qAcvl4?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Tom Bradley](https://unsplash.com/@tomrootstudio?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)
    提供，来源于 [Unsplash](https://unsplash.com/photos/brown-squirrel-on-green-grass-during-daytime-Z-ns9qAcvl4?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)
- en: Third-party libraries are created and developed in response to a need. No one
    sits down and says “I’m gonna create a tool and wait for circumstances to arise
    in which others need it”. Instead, they realize a problem and think of a solution
    to help solve it. That’s how tools are created.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 第三方库是为了回应需求而创建和开发的。没有人会坐下来说：“我要创建一个工具，等待情况出现，让其他人需要它。”相反，他们会意识到问题并思考解决方案来解决它。这就是工具的创造方式。
- en: The same goes for adding new features to existing tools. How well and quickly
    new features are added depends on the popularity of the tool and the team behind
    it.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 添加新功能到现有工具也一样。新功能的添加速度和效果取决于工具的受欢迎程度和背后的团队。
- en: Pandas, for sure, has a highly active community that keeps Pandas as one of
    the most popular data analysis and cleaning libraries in the data science ecosystem.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 确实，Pandas 拥有一个高度活跃的社区，这使得 Pandas 成为数据科学生态系统中最受欢迎的数据分析和清洗库之一。
- en: Pandas has functions to solve very specific issues and use cases. These must
    have been demanded from the community who are actively using it.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas 拥有解决非常具体问题和用例的函数。这些一定是社区中积极使用它的人提出的需求。
- en: In this article, I’ll share 4 operations that you can do in one line of code
    with Pandas. These helped me solve particular tasks efficiently and surprised
    me in a good way.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我将分享 4 个可以用 Pandas 一行代码完成的操作。这些操作帮助我高效解决了特定任务，并让我感到惊喜。
- en: 1\. Create a dictionary from a list
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. 从列表创建字典
- en: I have a list of items and I want to see the distribution of them. To be more
    specific, I want to see the unique values along with their number of occurrences
    in the list.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我有一个项目列表，想查看它们的分布。更具体地说，我想查看列表中每个唯一值及其出现次数。
- en: A Python dictionary is a great way to store data in this format. The items would
    be the dictionary keys and number of occurrences would be the values.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Python 字典是以这种格式存储数据的好方法。项目将是字典的键，而出现次数将是值。
- en: Thanks to the `value_counts` and `to_dict` functions, this task can be completed
    in one line of code.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 `value_counts` 和 `to_dict` 函数，这个任务可以用一行代码完成。
- en: 'Here is a simple example to demonstrate this case:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的示例来演示这个情况：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We first convert the list to a Pandas Series, which is the one-dimensional data
    structure of Pandas. Then, we apply the `value_counts` function to get the unique
    values with their frequency in the Series. Finally, we convert the output to a
    dictionary.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先将列表转换为 Pandas Series，这是一维的数据结构。然后，我们应用 `value_counts` 函数以获取 Series 中唯一值及其频率。最后，我们将输出转换为字典。
- en: 2\. Create a DataFrame from a JSON file
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2. 从 JSON 文件创建 DataFrame
- en: JSON is a frequently used file format for storing and delivering data. For instance,
    when you request data from an API, it’s highly likely to be delivered in JSON.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: JSON 是一种常用的文件格式，用于存储和传递数据。例如，当你从 API 请求数据时，它很可能会以 JSON 格式交付。
- en: When we clean, process, or analyze data, we usually prefer it to be in tabular
    format (i.e. in a table-like data structure). We can create a Pandas DataFrame
    from a JSON-formatted object with a single operation thanks to the `json_normalize`
    function.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们清理、处理或分析数据时，通常更喜欢将其以表格格式（即表格状的数据结构）表示。我们可以利用 `json_normalize` 函数通过一次操作从 JSON
    格式的对象创建 Pandas DataFrame。
- en: 'Let’s say the data is stored in a JSON file called `data.json` . We first read
    it as follows:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 假设数据存储在名为 `data.json` 的 JSON 文件中。我们首先按如下方式读取它：
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'If we pass this variable to the DataFrame constructor, it’ll create a DataFrame
    as follows, which is definitely not a usable format:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将这个变量传递给 DataFrame 构造函数，它将创建如下的 DataFrame，这绝对不是一个可用的格式：
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/2ac39c06795fa69c508251ff2fba93f3.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2ac39c06795fa69c508251ff2fba93f3.png)'
- en: df (image by author)
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: df（图片由作者提供）
- en: 'But if we use the `json_normalize` function and provide the record path, we’ll
    get a DataFrame in nice and clean format:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 但如果我们使用 `json_normalize` 函数并提供记录路径，我们将获得一个格式良好且干净的 DataFrame：
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/f54adad98e37b03455dd5e31b8f388fc.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f54adad98e37b03455dd5e31b8f388fc.png)'
- en: df (image by author)
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: df（图片由作者提供）
- en: 3\. Explode function
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3. Explode 函数
- en: Consider a case where you have a list of items that match a particular record.
    You need to reformat it in a way that there is a separate row for each item in
    that list.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑一个你有符合特定记录的项列表的情况。你需要以每个项单独占一行的方式重新格式化它。
- en: 'The following drawing illustrates what I tried to explain:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图示说明了我试图解释的内容：
- en: '![](../Images/347fc5df4fa22374320ceff798e524a4.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/347fc5df4fa22374320ceff798e524a4.png)'
- en: (image by author)
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: （图片由作者提供）
- en: You can think of many different ways of solving this task. One of the simplest
    (may be the simplest) is the `explode` function. Let’s see how it works.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以考虑多种不同的方法来解决这个任务。最简单（可能是最简单）的一个方法是 `explode` 函数。让我们看看它是如何工作的。
- en: 'We have the following DataFrame:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有以下 DataFrame：
- en: '![](../Images/ae95d917871c615a345df60e29aed647.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ae95d917871c615a345df60e29aed647.png)'
- en: df (image by author)
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: df（图片由作者提供）
- en: 'We’ll use the `explode` function and specify the column name to be exploded:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 `explode` 函数，并指定要爆炸的列名：
- en: '[PRE4]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/017148d21da9f19eea24b9e72176fb88.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/017148d21da9f19eea24b9e72176fb88.png)'
- en: df_new (image by author)
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: df_new（图片由作者提供）
- en: The `reset_index` assigns a new integer index to the resulting DataFrame. Otherwise,
    the index before exploding would be preserved (i.e. all the rows with a key value
    of A would have an index of 0).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`reset_index` 将新的整数索引分配给结果 DataFrame。否则，爆炸之前的索引将被保留（即所有键值为 A 的行将具有索引 0）。'
- en: 4\. Combine first
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4. Combine first
- en: The `combine_first` function serves for a specific purpose but simplifies that
    specific task greatly.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '`combine_first` 函数有一个特定的用途，但极大地简化了这个特定的任务。'
- en: 'The specific case where you’d want to use the `combine_first` function:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `combine_first` 函数的具体情况：
- en: You want to extract a column from a DataFrame. If there are missing values in
    the column, you want to replace those missing values with a value from another
    column.
  id: totrans-50
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你想从一个 DataFrame 中提取一列。如果该列中存在缺失值，你希望用另一列中的值来替换这些缺失值。
- en: In this regard, it does the same thing as the `COALESCE` function in SQL.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在这方面，它的功能与 SQL 中的`COALESCE`函数相同。
- en: 'Let’s create a sample DataFrame with some missing values:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个包含缺失值的示例 DataFrame：
- en: '[PRE5]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/f0ad46e4f43caf9569dc6a1ab205f110.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f0ad46e4f43caf9569dc6a1ab205f110.png)'
- en: df (image by author)
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: df（图片由作者提供）
- en: We need the data in column A. If there is a row with a missing value (i.e. NaN),
    we want it to be filled with the value of the same row in column B.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要列 A 中的数据。如果有一行缺失值（即 NaN），我们希望用同一行中列 B 的值填充它。
- en: '[PRE6]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: As we see in the output, the first and last rows of column A are taken from
    column B.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在输出中看到的，列 A 的第一行和最后一行是从列 B 中取出的。
- en: If there are 3 columns that we want to use, we can chain `combine_first` functions.
    The following line of code first checks column A. If there is a missing value,
    it takes it from column B. If the corresponding row in column B is also NaN, then
    it takes the value from column C.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想使用 3 列，我们可以链式调用 `combine_first` 函数。以下代码首先检查 A 列。如果有缺失值，则从 B 列获取。如果 B 列中对应的行也为
    NaN，则从 C 列获取值。
- en: '[PRE7]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: We can also use the `combine_first` function on the DataFrame level. In that
    case, all the missing values are filled from the corresponding value (i.e. same
    row, same column) from the second DataFrame.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以在 DataFrame 层级上使用 `combine_first` 函数。在这种情况下，所有缺失值都将从第二个 DataFrame 中相应的值（即同一行、同一列）填充。
- en: Final words
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 最后的话
- en: Pandas is one of the most versatile tools I’ve ever used. From calculating simple
    statistics to highly complex data cleaning processes, Pandas always helped me
    get a quick solution for the tasks I had. The only issue I had was when working
    with very large datasets, which seemed to be the only shortcoming of Pandas. However,
    there have been some developments recently to make Pandas operate more efficiently
    with large datasets. This is I believe good news for everyone who loves to work
    with this great tool.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas 是我用过的最万能的工具之一。从计算简单的统计数据到非常复杂的数据清理过程，Pandas 总是帮助我快速解决任务。我唯一遇到的问题是处理非常大的数据集时，这似乎是
    Pandas 唯一的短板。然而，最近有一些进展使 Pandas 在处理大数据集时更高效。我相信这是对所有热爱使用这个伟大工具的人们的好消息。
- en: Thank you for reading. Please let me know if you have any feedback.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读。如果您有任何反馈，请告知我。
