- en: Unsupervised Learning Series — Exploring DBScan
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 无监督学习系列——探索DBScan
- en: 原文：[https://towardsdatascience.com/unsupervised-learning-series-exploring-dbscan-624c820290ce](https://towardsdatascience.com/unsupervised-learning-series-exploring-dbscan-624c820290ce)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/unsupervised-learning-series-exploring-dbscan-624c820290ce](https://towardsdatascience.com/unsupervised-learning-series-exploring-dbscan-624c820290ce)
- en: Learn the theory behind the famous density-based clustering algorithm while
    using Python’s sklearn
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在使用Python的sklearn时，了解著名的基于密度的聚类算法背后的理论
- en: '[](https://ivopbernardo.medium.com/?source=post_page-----624c820290ce--------------------------------)[![Ivo
    Bernardo](../Images/39887b6f3e63a67c0545e87962ad5df0.png)](https://ivopbernardo.medium.com/?source=post_page-----624c820290ce--------------------------------)[](https://towardsdatascience.com/?source=post_page-----624c820290ce--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----624c820290ce--------------------------------)
    [Ivo Bernardo](https://ivopbernardo.medium.com/?source=post_page-----624c820290ce--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://ivopbernardo.medium.com/?source=post_page-----624c820290ce--------------------------------)[![Ivo
    Bernardo](../Images/39887b6f3e63a67c0545e87962ad5df0.png)](https://ivopbernardo.medium.com/?source=post_page-----624c820290ce--------------------------------)[](https://towardsdatascience.com/?source=post_page-----624c820290ce--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----624c820290ce--------------------------------)
    [Ivo Bernardo](https://ivopbernardo.medium.com/?source=post_page-----624c820290ce--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----624c820290ce--------------------------------)
    ·11 min read·Nov 21, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----624c820290ce--------------------------------)
    ·阅读时长11分钟·2023年11月21日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/74b7d631749ea7e4f95f5041fd619497.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/74b7d631749ea7e4f95f5041fd619497.png)'
- en: Image from [Kier in Sight Archives](https://unsplash.com/pt-br/@kierinsightarchives)
    @Unsplash.com
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自 [Kier in Sight Archives](https://unsplash.com/pt-br/@kierinsightarchives)
    @Unsplash.com
- en: Clustering algorithms are one of the most widely used solutions in the data
    science world, with the most popular ones being grouped into distance-based and
    density-based approaches. Although often overlooked, density based-clustering
    methods are interesting alternatives to the ubiquitous [*k-means*](/unsupervised-learning-method-series-exploring-k-means-clustering-d129fff3ab6a?sk=0618fadb196a71ce4b9f378f9ee83107)
    and [*hierarchical*](/unsupervised-learning-series-exploring-hierarchical-clustering-15d992467aa8?sk=87714b0d7aa252330dd7a8d3b1c620f4)approaches.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 聚类算法是数据科学领域最常用的解决方案之一，其中最受欢迎的算法被分为基于距离的方法和基于密度的方法。尽管经常被忽视，基于密度的聚类方法是[**k-means**](/unsupervised-learning-method-series-exploring-k-means-clustering-d129fff3ab6a?sk=0618fadb196a71ce4b9f378f9ee83107)和[**层次聚类**](/unsupervised-learning-series-exploring-hierarchical-clustering-15d992467aa8?sk=87714b0d7aa252330dd7a8d3b1c620f4)的有趣替代方案。
- en: Some of the famous density-based clustering techniques include *DBSCan* (Density-based
    spatial clustering of applications with noise) or Mean-Shift, two algorithms that
    use data points’ center of mass to group observations together.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 一些著名的基于密度的聚类技术包括*DBScan*（基于密度的空间聚类方法）或均值漂移，这两种算法使用数据点的质心来将观测值分组。
- en: 'In this blog post, we’ll explore DBScan, a clustering algorithms that is particularly
    be useful when your data contains some of the following features:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇博客文章中，我们将探索DBScan，一种特别适用于当你的数据包含以下特征时的聚类算法：
- en: Clusters have an irregular shape. For example, a non spherical shape.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 聚类具有不规则的形状。例如，非球形。
- en: Compared with other methods, DBScan doesn’t assume any prior about the underlying
    distribution of the data.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与其他方法相比，DBScan不会对数据的底层分布做出任何假设。
- en: Your dataset contains some relevant outliers that shouldn’t influence how the
    clusters’ centroids are mapped.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的数据集包含一些相关的离群值，这些离群值不应影响簇的质心映射。
- en: If these three sentences were confusing to you, don’t worry! In this post, we’re
    going to see a step-by-step implementation of the *DBScan* method, while discussing
    the topics above. Also,we’ll check the famous `sklearn` Python implementation!
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这三句话让你感到困惑，不用担心！在这篇文章中，我们将一步一步实现*DBScan*方法，同时讨论上述话题。此外，我们还会查看著名的`sklearn`
    Python实现！
- en: 'Also, if you would like to drop by others posts of my Unsupervised Learning
    series, you can check:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果你想浏览我无监督学习系列的其他帖子，你可以查看：
- en: '[K-means](/unsupervised-learning-method-series-exploring-k-means-clustering-d129fff3ab6a?sk=0618fadb196a71ce4b9f378f9ee83107)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[K均值](/unsupervised-learning-method-series-exploring-k-means-clustering-d129fff3ab6a?sk=0618fadb196a71ce4b9f378f9ee83107)'
- en: '[Hierarchical Clustering](/unsupervised-learning-series-exploring-hierarchical-clustering-15d992467aa8?sk=87714b0d7aa252330dd7a8d3b1c620f4)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[层次聚类](/unsupervised-learning-series-exploring-hierarchical-clustering-15d992467aa8?sk=87714b0d7aa252330dd7a8d3b1c620f4)'
- en: '[Self-Organizing Maps](/unsupervised-learning-series-exploring-self-organizing-maps-fe2efde9f7a1?sk=0a2649f9b411c236c2682729a5e616b4)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[自组织映射](/unsupervised-learning-series-exploring-self-organizing-maps-fe2efde9f7a1?sk=0a2649f9b411c236c2682729a5e616b4)'
- en: Let’s then dive deep and understand how DBScan works!
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们深入了解一下DBScan的工作原理吧！
- en: Fitting Distance-Based Clustering Solutions
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 拟合基于距离的聚类解决方案
- en: In this step-by-step playbook, we’ll use a toy dataset with information about
    customers. In this example, we’ll use a two variable clustering to make it easier
    to grasp.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本逐步操作手册中，我们将使用一个包含客户信息的玩具数据集。在这个例子中，我们将使用两个变量的聚类来便于理解。
- en: Let’s imagine that we run a shop and we have demographic information about our
    customers. **We would like to do some campaigns based on their annual income and
    age and we only want to run 3 or 4 distinct marketing campaigns.**
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们经营一家商店，并且拥有关于客户的人口统计信息。**我们希望根据他们的年收入和年龄进行一些营销活动，并且只希望运行3到4个不同的营销活动。**
- en: 'First, we start by plotting these two variables in a scatter plot:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们通过散点图绘制这两个变量：
- en: '![](../Images/87e8e912f5bf6b5d23eb6a55d97b9b66.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/87e8e912f5bf6b5d23eb6a55d97b9b66.png)'
- en: Customer Age vs. Annual Income — Image by Author
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 客户年龄与年收入 — 作者提供的图片
- en: For now, imagine that it is reasonable that someone makes 120$ per year (we’re
    just using this scale to have similar values between Age and Income, as that will
    make the explanation more intuitive).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，假设某人的年收入为120美元是合理的（我们只是使用这个尺度来使年龄和收入之间的值相似，因为这样解释会更直观）。
- en: '**If you look at the data, how many differents groups of customers do you see
    here?** 2? 3? 4? This is an open question that we can’t really answer because
    there is no label or correct answer.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果你查看这些数据，你看到多少个不同的客户群体？** 2个？3个？4个？这是一个开放性问题，我们无法真正回答，因为没有标签或正确答案。'
- en: 'We can argue that we have three different groups, by the way that the customers
    are scattered throughout the plot:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过客户在图中的分布方式来争论我们有三种不同的群体：
- en: One scattered cluster on the left side of the plot.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图的左侧有一个散布的簇。
- en: A group of 5 to 6 customers on the center.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在中心处有一组5到6个客户。
- en: A third group of clusters on the right side of the plot.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在图的右侧有第三组簇。
- en: 'But, this is just a guess. Maybe *k-means* can help us! Let’s fit a k-means
    algorithm with 3 clusters:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，这只是一个猜测。也许 *k均值* 可以帮助我们！让我们用3个簇拟合k均值算法：
- en: '![](../Images/f01722e075bf4d0d4b7b22285aa56396.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f01722e075bf4d0d4b7b22285aa56396.png)'
- en: K-Means solution with 3 centroids — Image by Author
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 带有3个质心的K均值解决方案 — 作者提供的图片
- en: Although an interesting solution, it seems that our clustering is no picking
    up some patterns, being drawn away by outliers. What’s the result if we fit a
    solution with 4 centroids?
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这是一个有趣的解决方案，但似乎我们的聚类没有识别出一些模式，被离群点分散了。如果我们用4个质心进行拟合，结果会怎样？
- en: '![](../Images/d98f996a3b0ae052c8b12d7d62fba16b.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d98f996a3b0ae052c8b12d7d62fba16b.png)'
- en: K-means Solution with 4 centroids
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 带有4个质心的K均值解决方案
- en: 'Again, the *k-means* solution is being driven away by outliers. Will Hierarchical
    Clustering help? Let’s see:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，*k均值*解决方案被离群点驱散了。层次聚类会有帮助吗？让我们看看：
- en: '![](../Images/07fa692e3dd592fbc6b448c291a22b56.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/07fa692e3dd592fbc6b448c291a22b56.png)'
- en: Ward Hierarchical Clustering — Image by Author
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Ward层次聚类 — 作者提供的图片
- en: 'Using the Ward method, our result is similar to *K-means* clustering (with
    3 centroids). Let’s change the linkage of the Hierarchical Clustering solution
    and see the results:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Ward方法，我们的结果类似于 *K均值* 聚类（带有3个质心）。让我们改变层次聚类解决方案的连接方式，看看结果：
- en: '![](../Images/6e14f9c75c61c3ef45f3eccbca39ed29.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6e14f9c75c61c3ef45f3eccbca39ed29.png)'
- en: Complete Hierarchical Clustering — Image by Author
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的层次聚类 — 作者提供的图片
- en: Uh-oh, even worse! Changing the linkage method was also a bad option.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 哎呀，更糟了！更改连接方法也是一个糟糕的选择。
- en: The crux of this exercise is that certain datasets are not a fit for distance-based
    clustering. Normally, people rush to use these types of clustering models as they
    are very interpretable but these solutions work better when our clusters are spherical
    and well defined.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这个练习的核心是，某些数据集不适合基于距离的聚类。通常，人们急于使用这些类型的聚类模型，因为它们非常易于解释，但这些解决方案在我们的簇是球形且定义明确时效果更好。
- en: Demystifying DBScan
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解密 DBScan
- en: Now that we’ve seen how distance-based clusters may not be a fit for certain
    types of data, let’s explore why *DBScan* is different.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经看到基于距离的簇可能不适合某些类型的数据，让我们探讨为什么 *DBScan* 是不同的。
- en: 'DBScan starts by selecting a random point in our dataset:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: DBScan 从选择数据集中的一个随机点开始：
- en: '![](../Images/af84aa0cc11a16d885c842fa5b9b28ae.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/af84aa0cc11a16d885c842fa5b9b28ae.png)'
- en: DBScan Step 1— Image by Author
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: DBScan 步骤 1 — 作者提供的图像
- en: After picking the data point, we draw a circle around this data point with a
    certain radius.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 选择数据点后，我们在该数据点周围绘制一个一定半径的圆。
- en: The radius of the circle built around the data point is a hyperparameter of
    the DBScan algorithm.
  id: totrans-52
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 围绕数据点构建的圆的半径是 DBScan 算法的一个超参数。
- en: 'For our example, we’ll draw a circle with a radius of 9 units:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的例子，我们将绘制一个半径为 9 单位的圆：
- en: '![](../Images/24b06bdba0da5bec514b262e3498ae70.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/24b06bdba0da5bec514b262e3498ae70.png)'
- en: DBScan Step 2— Image by Author
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: DBScan 步骤 2 — 作者提供的图像
- en: 'How many datapoints points do the radius touch? In this case, our radius touches
    9 data points (including the data point itself). **This number is related to another
    hyperparameter of the DBScan algorithm: the *min_samples***.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 半径触及了多少个数据点？在这个例子中，我们的半径触及了 9 个数据点（包括数据点本身）。 **这个数字与 DBScan 算法的另一个超参数有关：*min_samples***。
- en: If the radius touches mo*re* or equal to what’s stated on *min_samples*, we
    consider the chosen data point as a core point!
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如果半径触及的点数等于或多于 *min_samples* 中的数值，我们将所选数据点视为核心点！
- en: Min_samples is another hyperparameter of the DBScan algorithm
  id: totrans-58
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Min_samples` 是 DBScan 算法的另一个超参数。'
- en: 'Being considered a core point gives significant power to the data point:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 被认为是核心点赋予数据点显著的权力：
- en: '**The data point belongs to a cluster.**'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据点属于一个簇。**'
- en: '**The data point is able to call other data points from within the radius into
    the cluster.**'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据点能够将半径内的其他数据点召唤到簇中。**'
- en: 'After testing if the data point is a core point, we move to another point within
    the boundary:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在测试数据点是否为核心点后，我们移动到边界内的另一个点：
- en: '![](../Images/85da5b6e60c64dde31b480c1513a66f2.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/85da5b6e60c64dde31b480c1513a66f2.png)'
- en: Moving to Another Point on the DBScan Boundary — Image by Author
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 移动到 DBScan 边界上的另一个点 — 作者提供的图像
- en: We’ve just moved to the data point right above our first data point. The next
    question is, naturally, if this is a core point?
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚移动到第一个数据点上方的那个数据点。接下来的问题自然是，这是否是一个核心点？
- en: 'You know how to do this test! Let’s start by drawing a boundary around the
    new data point:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 你知道如何进行这个测试！让我们开始在新数据点周围绘制一个边界：
- en: '![](../Images/27283b888b731af6532bfbe4c8f220f6.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/27283b888b731af6532bfbe4c8f220f6.png)'
- en: Drawing another Boundary on the second data point — Image by Author
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二个数据点上绘制另一个边界 — 作者提供的图像
- en: '*Note: This circle has the exact same radius as the one we’ve seen before.*'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '*注意：这个圆的半径与我们之前看到的完全相同。*'
- en: So.. is this a core point? No! Because this data points’ radius only touches
    8 data points, less than the *min_samples* hyperparameter we’ve defined.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，这是否是一个核心点？不！因为这个数据点的半径仅触及 8 个数据点，少于我们定义的 *min_samples* 超参数。
- en: '**We call this a satellite data point.** Although it belongs to the cluster
    (because it has been “summoned” by another data point), it will not have the right
    to call other data points within its boundary to the cluster. **This is the main
    difference between core and satellite points.**'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**我们称之为卫星数据点。** 尽管它属于簇（因为它被另一个数据点“召唤”），但它没有权利将边界内的其他数据点召唤到簇中。 **这是核心点和卫星点之间的主要区别。**'
- en: 'So far, we’ve known two types of data points in the DBScan solution:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经知道了 DBScan 解决方案中的两种数据点：
- en: '**Core points:** Belong to a cluster and have the power to bring other points
    into it'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**核心点：** 属于一个簇，并且有能力将其他点带入其中。'
- en: '**Satellite points:** Belong to a cluster but don’t have the power to being
    other data points into it.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**卫星点：** 属于一个簇，但没有将其他数据点带入其中的能力。'
- en: '**We consider that a cluster is defined when we touch satellite points that
    make a frontier.**'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**我们认为当触及形成边界的卫星点时，簇才被定义。**'
- en: 'In our solution, all the data points below are considered satellite points
    (using our hyperparameters) and everything within their boundary belongs to a
    cluster:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的解决方案中，以下所有数据点都被视为卫星点（使用我们的超参数），而它们边界内的所有点都属于一个簇：
- en: '![](../Images/245fdafcfd981c3233e9c70ff05cc358.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/245fdafcfd981c3233e9c70ff05cc358.png)'
- en: Satellite points Frontier — Image by Author
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 卫星点前沿 —— 图片由作者提供
- en: But there’s still a group of data points that we haven’t spoke of — What about
    data points that are not called by other data points? Those points are definitely
    core points. They also cannot be considered satellite data points as they aren’t
    touched by any core point.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 但仍然有一组数据点我们没有讨论 —— 那些没有被其他数据点调用的数据点怎么办？这些点肯定是核心点。它们也不能被视为卫星数据点，因为它们没有被任何核心点触及。
- en: Those are called outliers! This is useful feature of the *dbscan* algorithm
    that incorporates the identification of outliers in the solution.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这些被称为离群点！这是*dbscan*算法的一个有用特性，它在解决方案中包含了离群点的识别。
- en: 'For example, take this data point right here:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，看看这里的这个数据点：
- en: '![](../Images/75da58c7bf16e65209a70bf8b999d869.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/75da58c7bf16e65209a70bf8b999d869.png)'
- en: Outlier Identification — Image by Author
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 离群点识别 —— 图片由作者提供
- en: 'We can draw a radius around this data point as well:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以在这个数据点周围画一个半径：
- en: '![](../Images/c049d49da4f77408e20f0953b23421f6.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c049d49da4f77408e20f0953b23421f6.png)'
- en: Radius around Outlier — Image by Author
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 离群点的半径 —— 图片由作者提供
- en: Notice that this data point is completely isolated from the other data points.
    Additionally, it does not have enough data points in its boundary to be considered
    a core data point.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，这个数据点与其他数据点完全孤立。此外，它的边界内没有足够的数据点来被视为核心数据点。
- en: 'This makes it an ***Outlier****.* Data points can be outliers in DBScan for
    two main reasons:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这使它成为***离群点***。数据点在DBScan中可以成为离群点的原因有两个：
- en: It doesn’t have enough data points in its boundary and is not a satellite point.
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它的边界内没有足够的数据点，也不是卫星点。
- en: Only boundaries of *satellite points* are able to reach them. Remember that
    satellite points are not able to bring data points into their own cluster. Only
    core points share that responsability.
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只有*卫星点*的边界能够到达它们。记住，卫星点无法将数据点引入自己的簇中。只有核心点承担这一责任。
- en: Data points in the DBScan algorithm are categorized into Core, Satellite and
    Outlier
  id: totrans-91
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: DBScan算法中的数据点被分类为核心、卫星和离群点
- en: After cataloging all data points as either Core, Satellite or Outlier, the algorithm
    is complete!
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在将所有数据点分类为核心、卫星或离群点后，算法完成了！
- en: What clusters will a DBScan solution find in our Age vs. Annual Income data?
    Let’s fit a dbscan solution with the following *hyperparameters* (do you still
    remember them?)
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: DBScan解决方案会在我们的年龄与年收入数据中找到哪些簇？让我们用以下*超参数*拟合一个dbscan解决方案（你还记得它们吗？）
- en: '**Epsilon = 9**'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Epsilon = 9**'
- en: '**Min_Samples = 5**'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Min_Samples = 5**'
- en: '![](../Images/b5f3c5ae3dda4213d42dc8050de467e6.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b5f3c5ae3dda4213d42dc8050de467e6.png)'
- en: First DBScan Solution — Image by Author
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个DBScan解决方案 —— 图片由作者提供
- en: '**The purple points are not a “cluster”. They are considered outliers by the
    solution.**'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '**紫色点不是“簇”。它们被解决方案视为离群点。**'
- en: 'We have one upside and downside in this solution:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这个解决方案中有一个利弊：
- en: Our 3 clusters have been created according to the density of points, which may
    be a good solution.
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们的3个簇是根据点的密度创建的，这可能是一个不错的解决方案。
- en: Unfortunately, these hyperparameters are also too strict in this solution, producing
    too many outliers.
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不幸的是，这些超参数在这个解决方案中也过于严格，产生了太多离群点。
- en: DbScan is sensitive to changes in the hyperparameters
  id: totrans-102
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: DbScan对超参数的变化非常敏感
- en: One common trick is to do a *DBSCan* clustering that produces alot of outliers
    and thenrun a distance minimizing algorithm afterwards to allocate the leftover
    points (minimum euclidean distance to each cluster centroid, as an example).
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 一个常见的技巧是进行一个*DBSCan*聚类，产生大量离群点，然后运行一个距离最小化算法来分配剩余的点（例如，最小欧氏距离到每个簇中心）。
- en: 'Another alternative is to tweak our *hyperparameters.* Here, we can raise *EPS*
    or minimize the *min_samples*, for example:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个替代方案是调整我们的*超参数*。例如，我们可以提高*EPS*或减少*min_samples*：
- en: '**EPS** = 12'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**EPS** = 12'
- en: '**Min Samples** = 4'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Min Samples** = 4'
- en: '![](../Images/a01644cfcd71fcd91356282e4ff4dfe2.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a01644cfcd71fcd91356282e4ff4dfe2.png)'
- en: Second DBScan Solution — Image by Author
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个DBScan解决方案 —— 图片由作者提供
- en: This result is a bit different and we are able to consider less points as outliers.
    Although there’s no correct solution, analyzing the clusters with different hyperparameters
    will give you different solutions as this algorithm is quite sensitive to the
    *eps* and *min_samples* parameters.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这个结果稍有不同，我们能够将更少的点视为异常值。尽管没有正确的解决方案，但使用不同的超参数分析聚类会给出不同的结果，因为该算法对*eps*和*min_samples*参数非常敏感。
- en: Given that we have acquired new knowledge on *DBScan,* let’s use it on a practical
    use case next!
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们获得了关于*DBScan*的新知识，那么接下来就将其应用于实际案例吧！
- en: Practical Use Case — Taxi Stations in the US
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实际案例 — 美国的出租车站
- en: The dataset we will be using for this practical case is based on the Taxi Trip
    Duration dataset available on [Kaggle](https://www.kaggle.com/competitions/nyc-taxi-trip-duration/data)
    and made available on Google BigQuery DataSets. For simplicity, we will just use
    a sample of the dataset to be able to plot it in a map.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在此实际案例中使用的数据集基于[Kaggle](https://www.kaggle.com/competitions/nyc-taxi-trip-duration/data)上的Taxi
    Trip Duration数据集，并在Google BigQuery DataSets上提供。为简化起见，我们将仅使用数据集的一个样本，以便在地图上绘制。
- en: The dataset contains a lot of information but what will interest us is the *pickup_longitude*
    and *pickup_latitude*. These two columns contain the GPS coordinates where the
    passenger joined the ride.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集包含大量信息，但我们感兴趣的是*pickup_longitude*和*pickup_latitude*。这两列包含乘客加入行程的GPS坐标。
- en: Our goal is to let the taxi company know where they should build their taxi
    stations. Knowing that it would be interesting to have cars readily available
    for passengers, their goal is to build stations in the most appropriate locations,
    trying to maximize the number of potential rides they can serve from the stations.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的目标是让出租车公司知道他们应该在何处建立出租车站。考虑到乘客可以随时使用汽车，他们的目标是将站点建立在最合适的位置，尽量增加他们能从这些站点服务的潜在乘车次数。
- en: 'To solve this problem, let’s start by loading the data using `pandas` :'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 要解决这个问题，让我们首先使用`pandas`加载数据：
- en: '[PRE0]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We have some data points that have their GPS coordinates wrongly stated. We
    need to remove those outliers:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有一些数据点的GPS坐标错误。我们需要去除这些异常值：
- en: '[PRE1]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'After removing these rows, let’s plot our pickup coordinates in a 2-D map.
    For the following code to work, you need to install and load `cartopy`and `contextily`-
    `cartopy` may have some issues when you install them on local environments (for
    example, using `conda` ) — if you are having trouble, install the library in a
    Google Colab environment using:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 去除这些行后，让我们在二维地图上绘制我们的取车坐标。为了使以下代码正常工作，您需要安装并加载`cartopy`和`contextily`——`cartopy`在本地环境（例如使用`conda`）安装时可能会遇到一些问题——如果您遇到麻烦，请在Google
    Colab环境中安装该库：
- en: '[PRE2]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'After installing the dependencies, we can plot our data points on New York
    using:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 安装依赖项后，我们可以使用以下命令在纽约绘制数据点：
- en: '[PRE3]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/7b0aba407e2684b08a2bbfded57d3562.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7b0aba407e2684b08a2bbfded57d3562.png)'
- en: New York Taxi Pickups — Image by Author
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 纽约出租车接客 — 作者提供的图片
- en: 'Before fitting our algorithm, we know that `dbscan` is based on distances.
    What should we do? Standardize! Let’s standardize `latitude` and `longitude` to
    the same scale. Although the lack of standardization would not cause too many
    issues for this data, it’s still a good practice to do it, particularly if you
    want to apply this use case to other datasets:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在拟合算法之前，我们知道`dbscan`是基于距离的。我们该怎么做？标准化！让我们将`latitude`和`longitude`标准化到相同的尺度。尽管缺乏标准化不会对这些数据造成太多问题，但做标准化仍然是一个好习惯，特别是如果您想将此用例应用于其他数据集：
- en: '[PRE4]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Imagining we would like each of our taxi stations to serve at least 100 trips,
    how does this fit with our `dbscan` parameters?
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们希望每个出租车站点服务至少100次行程，这与我们的`dbscan`参数如何匹配？
- en: 'We can tweak the `min_samples` parameter! Let’s fit our first clustering solution:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以调整`min_samples`参数！让我们拟合第一个聚类解决方案：
- en: '[PRE5]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We’ve chosen `eps=0.25` . Let’s see our solution on a map! … but which coordinates
    should we plot? One interesting solution is to calculate the average value of
    the coordinates for each cluster:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 我们选择了`eps=0.25`。让我们在地图上查看我们的解决方案！……但是我们应该绘制哪些坐标？一个有趣的解决方案是计算每个聚类坐标的平均值：
- en: '[PRE6]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Also, `DBScan` represents outliers with the value `-1` . Let’s exclude these
    values as they are not considered a “cluster”:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，`DBScan`用值`-1`表示异常值。让我们排除这些值，因为它们不被视为“聚类”：
- en: '[PRE7]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../Images/c95c979713c4b4da83561b24e5a24521.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c95c979713c4b4da83561b24e5a24521.png)'
- en: New York Taxi Pickups Clustering — Image by Author
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 纽约出租车接客聚类 — 作者提供的图片
- en: 'Very cool! We would setup 3 stations:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 非常酷！我们将设置3个站点：
- en: One in Manhattan.
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 曼哈顿的一篇。
- en: One in the JFK Airport.
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 约翰·肯尼迪国际机场的一个。
- en: One in La Guardia Airport.
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拉瓜迪亚机场的一个。
- en: Want to check which trips are “theoretically” served by which station?
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 想查看哪些行程“理论上”由哪个站点服务？
- en: '![](../Images/d5fea4715d5b0c21c125ed05d0e96f53.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d5fea4715d5b0c21c125ed05d0e96f53.png)'
- en: New York Taxi Pickups Clustering — Image by Author
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 纽约出租车接送聚类 — 作者提供的图像
- en: 'Cool! Purple points are considered outliers of the `dbscan` solution. It seems
    that we are being a bit strict on our definition of clusters in the `DBScan`solution.
    Remember how to adjust this? Lowering `eps` or the `min_samples` arguments! Let’s
    try both:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 很酷！紫色点被视为`dbscan`解决方案的离群点。似乎我们对`DBScan`解决方案中簇的定义有些严格。记得如何调整吗？降低`eps`或`min_samples`参数！让我们尝试一下：
- en: '[PRE8]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Checking the centroids of our new solution and plotting it:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 检查我们新解决方案的质心并进行绘制：
- en: '[PRE9]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](../Images/8c551a499237c52b2cfa2e49afac596d.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8c551a499237c52b2cfa2e49afac596d.png)'
- en: New York Taxi Pickups Clustering — Image by Author
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 纽约出租车接送聚类 — 作者提供的图像
- en: 'Notice how we would setup more stations with these new parameters. By adjusting
    our `eps` and `min_samples` we were able to create smaller clusters in our data:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 注意我们如何使用这些新参数设置更多站点。通过调整`eps`和`min_samples`，我们能够在数据中创建更小的簇：
- en: '![](../Images/6476e68db2d3f2a489cd13f5ab76bcb2.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6476e68db2d3f2a489cd13f5ab76bcb2.png)'
- en: New York Taxi Pickups Clustering — Image by Author
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 纽约出租车接送聚类 — 作者提供的图像
- en: Keep adjusting the `eps` and `min_samples` parameters and see for yourself the
    impact on the clustering elements!
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 继续调整`eps`和`min_samples`参数，亲自查看对聚类元素的影响！
- en: Conclusion
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: DBScan is a widely used algorithm that can be very cool to use in certain scenarios,
    particularly when your clusters are not spherical and contain irregular patterns.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: DBScan是一种广泛使用的算法，在某些情况下非常酷，特别是当你的簇不是球形的且包含不规则模式时。
- en: DBScan has been used in applications as different as gene expression clustering,
    customer analytics or in some instances of image segmentation. Although *k-means*
    and *hierarchical clustering* are more famous, density based clustering methods
    are very cool options you can consider for your unsupervised learning projects.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: DBScan已在基因表达聚类、客户分析或某些图像分割实例中得到应用。虽然*k-means*和*层次聚类*更为著名，但基于密度的聚类方法是你可以考虑的非常酷的选项，特别是对于你的无监督学习项目。
- en: 'In a nutshell, here’s what you should remember about DBScan:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，这里是你应该记住的关于DBScan的要点：
- en: It is able to identify outliers.
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它能够识别离群点。
- en: It divides points into core, satellite and outlier points.
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它将点分为核心点、卫星点和离群点。
- en: It uses a radius (eps) around the data point to create the density cluster.
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它使用数据点周围的半径（eps）来创建密度簇。
- en: It uses a minimum number samples (min_samples argument) to catalog the datapoint
    according to its function (core, satellite, other).
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它使用最小样本数（min_samples 参数）来根据其功能（核心、卫星、其他）对数据点进行分类。
- en: 'If you enjoyed this post, make sure to read my other posts on the Unsupervised
    Learning series:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢这篇文章，确保阅读我在无监督学习系列中的其他文章：
- en: '[K-Means](/unsupervised-learning-method-series-exploring-k-means-clustering-d129fff3ab6a?sk=0618fadb196a71ce4b9f378f9ee83107)'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[K-Means](/unsupervised-learning-method-series-exploring-k-means-clustering-d129fff3ab6a?sk=0618fadb196a71ce4b9f378f9ee83107)'
- en: '[Hierarchical Clustering](/unsupervised-learning-series-exploring-hierarchical-clustering-15d992467aa8?sk=87714b0d7aa252330dd7a8d3b1c620f4)'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[层次聚类](/unsupervised-learning-series-exploring-hierarchical-clustering-15d992467aa8?sk=87714b0d7aa252330dd7a8d3b1c620f4)'
- en: '[Self-Organizing Maps](/unsupervised-learning-series-exploring-self-organizing-maps-fe2efde9f7a1?sk=0a2649f9b411c236c2682729a5e616b4)'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[自组织映射](/unsupervised-learning-series-exploring-self-organizing-maps-fe2efde9f7a1?sk=0a2649f9b411c236c2682729a5e616b4)'
- en: '**Feel free to check the** [**Youtube**](https://youtu.be/um3_oEHBBTo) **video
    where I explain DBScan in my channel The Data Journey.**'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '**随时查看** [**YouTube**](https://youtu.be/um3_oEHBBTo) **视频，我在我的频道The Data Journey中解释了DBScan。**'
- en: '*If you would like to drop by my Python courses, feel free to join my* [*Complete
    Python Bootcamp for Beginners*](https://www.udemy.com/course/the-python-for-absolute-beginners-bootcamp/?couponCode=APR2023)*.
    My Python courses are suitable for beginners/mid-level developers and I would
    love to have you on my class!*'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你想加入我的Python课程，请随时参加我的* [*完整的Python入门训练营*](https://www.udemy.com/course/the-python-for-absolute-beginners-bootcamp/?couponCode=APR2023)*。我的Python课程适合初学者/中级开发者，我很希望你能加入我的课程！*'
- en: '*[The dataset used in this post is under Public Domain License]*'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '*[本文使用的数据集受公共领域许可证保护]*'
