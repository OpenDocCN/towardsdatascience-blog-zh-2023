- en: Simple ways to create synthetic dataset in Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Python中创建合成数据集的简单方法
- en: 原文：[https://towardsdatascience.com/simple-ways-to-create-synthetic-dataset-in-python-76a8e9a2f35c](https://towardsdatascience.com/simple-ways-to-create-synthetic-dataset-in-python-76a8e9a2f35c)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/simple-ways-to-create-synthetic-dataset-in-python-76a8e9a2f35c](https://towardsdatascience.com/simple-ways-to-create-synthetic-dataset-in-python-76a8e9a2f35c)
- en: Data Science Fundamentals
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据科学基础
- en: A beginner’s guide to create mock tabular data
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建模拟表格数据的初学者指南
- en: '[](https://zluvsand.medium.com/?source=post_page-----76a8e9a2f35c--------------------------------)[![Zolzaya
    Luvsandorj](../Images/dd3bb91f8625a6fbe8fd26e56036ad29.png)](https://zluvsand.medium.com/?source=post_page-----76a8e9a2f35c--------------------------------)[](https://towardsdatascience.com/?source=post_page-----76a8e9a2f35c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----76a8e9a2f35c--------------------------------)
    [Zolzaya Luvsandorj](https://zluvsand.medium.com/?source=post_page-----76a8e9a2f35c--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://zluvsand.medium.com/?source=post_page-----76a8e9a2f35c--------------------------------)[![Zolzaya
    Luvsandorj](../Images/dd3bb91f8625a6fbe8fd26e56036ad29.png)](https://zluvsand.medium.com/?source=post_page-----76a8e9a2f35c--------------------------------)[](https://towardsdatascience.com/?source=post_page-----76a8e9a2f35c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----76a8e9a2f35c--------------------------------)
    [Zolzaya Luvsandorj](https://zluvsand.medium.com/?source=post_page-----76a8e9a2f35c--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----76a8e9a2f35c--------------------------------)
    ·7 min read·Jan 12, 2023
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----76a8e9a2f35c--------------------------------)
    ·阅读时间7分钟·2023年1月12日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: When developing a code, sometimes we need a dummy dataset. For instance, we
    want to share code and the underlying data but real-life dataset is confidential
    so not suitable for sharing. One option is to find and use a suitable [toy dataset
    or publicly available datasets](/datasets-in-python-425475a20eb1). Another option
    is to create a synthetic dataset that is sufficient for your use-case. In this
    post, we will look at a few simple ways to create synthetic datasets in Python.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发代码时，有时我们需要一个虚拟数据集。例如，我们想分享代码和底层数据，但实际数据集是机密的，因此不适合分享。一个选项是找到并使用合适的[玩具数据集或公开可用的数据集](/datasets-in-python-425475a20eb1)。另一个选项是创建一个足够满足使用案例的合成数据集。在本文中，我们将探讨一些在Python中创建合成数据集的简单方法。
- en: '![](../Images/9298cc1e32a2bf82fd4e570d2c3cb6c6.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9298cc1e32a2bf82fd4e570d2c3cb6c6.png)'
- en: Photo by [Jackie Tsang](https://unsplash.com/es/@jickii?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自[Jackie Tsang](https://unsplash.com/es/@jickii?utm_source=medium&utm_medium=referral)在[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: 🔧 Setup
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 🔧 设置
- en: 'We will start by loading necessary libraries:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从加载必要的库开始：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We are all set, let’s dive in!
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 一切准备就绪，*让我们深入探讨*！
- en: 📍 Scikit-learn
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 📍 Scikit-learn
- en: Scikit-learn comes with many useful functions to create synthetic numeric datasets.
    In this section, we will familiarise with a selected few.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Scikit-learn 提供了许多有用的函数来创建合成数值数据集。在这一部分，我们将熟悉其中的一些。
- en: 📌 Regression
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 📌 回归
- en: 'We can create datasets with numeric features and a continuous target using
    `[make_regression](https://scikit-learn.org/stable/modules/generated/sklearn.datasets.make_regression.html)`
    function. Let’s create a dataset with 5 features and a continuous target for 1000
    records :'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`[make_regression](https://scikit-learn.org/stable/modules/generated/sklearn.datasets.make_regression.html)`函数创建具有数值特征和连续目标的数据集。我们来创建一个包含5个特征和1000条记录的连续目标数据集：
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/1ce697a3bb5d9663a02392065b694905.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1ce697a3bb5d9663a02392065b694905.png)'
- en: Image by author
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: 'That was very straight-forward! We have specified the number of records to
    `n_samples` argument and number of features to `n_features` argument. We set seed
    so that the synthetic dataset can be reproduced. We can use this dataset to build
    a regression model if we wanted to:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这非常简单明了！我们将记录数指定为`n_samples`参数，特征数指定为`n_features`参数。我们设置了随机种子，以便合成数据集可以被再现。如果需要，我们可以使用这个数据集来构建回归模型：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/bb573001cfce803a03f371447198ff81.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bb573001cfce803a03f371447198ff81.png)'
- en: Image by author
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: The model seem to be overfitting quite badly to the training data in this case.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，模型似乎在训练数据上过拟合得很严重。
- en: 📌 Classification
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 📌 分类
- en: 'Similar to above, we can create dataset with desired number of numeric features
    and a discrete target with `[make_classification](https://scikit-learn.org/stable/modules/generated/sklearn.datasets.make_classification.html)`.
    We will now practice creating a dataset with 5 features and a binary target for
    1000 records:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于上面，我们可以使用`[make_classification](https://scikit-learn.org/stable/modules/generated/sklearn.datasets.make_classification.html)`创建具有所需数量数值特征和离散目标的数据集。我们现在将练习创建一个包含5个特征和一个二进制目标的1000条记录的数据集：
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/cd9e7aea1cf7b833060b18752bea0cca.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cd9e7aea1cf7b833060b18752bea0cca.png)'
- en: Image by author
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: 'In addition to the arguments we used in the regression section, we specified
    the number of classes to the `n_classes` argument. We will go ahead and build
    a classification model:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 除了在回归部分使用的参数外，我们还将类别数量指定为`n_classes`参数。我们接下来将构建一个分类模型：
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/631c2fecf425ff77975b5a4f736c5862.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/631c2fecf425ff77975b5a4f736c5862.png)'
- en: Image by author
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: 'From a quick glance, the model seem to be doing well. We can also create datasets
    for multi-label classification problem using `[make_multilabel_classification](https://scikit-learn.org/stable/modules/generated/sklearn.datasets.make_multilabel_classification.html#sklearn.datasets.make_multilabel_classification)`:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 从初步观察来看，该模型表现不错。我们还可以使用`[make_multilabel_classification](https://scikit-learn.org/stable/modules/generated/sklearn.datasets.make_multilabel_classification.html#sklearn.datasets.make_multilabel_classification)`创建多标签分类问题的数据集：
- en: '[PRE5]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/fdadad9605ffc03d33542c85e73cef26.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fdadad9605ffc03d33542c85e73cef26.png)'
- en: Image by author
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: 'In this case, we have two target labels. Using the dummy dataset, we can build
    a multi-label classification model:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们有两个目标标签。使用虚拟数据集，我们可以构建一个多标签分类模型：
- en: '[PRE6]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/b1282caf0505f33548e8ec72cdbdbaa7.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b1282caf0505f33548e8ec72cdbdbaa7.png)'
- en: Image by author
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: 📌 Clustering
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 📌 聚类
- en: 'Another useful function is `[make_blobs](https://scikit-learn.org/stable/modules/generated/sklearn.datasets.make_blobs.html)`
    that creates data for clustering:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有用的函数是`[make_blobs](https://scikit-learn.org/stable/modules/generated/sklearn.datasets.make_blobs.html)`，它用于创建聚类数据：
- en: '[PRE7]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../Images/bd6787db3cdd1e0e9fe02e28da0cd13f.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bd6787db3cdd1e0e9fe02e28da0cd13f.png)'
- en: Image by author
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: 'In this case, we have chosen 4 cluster centers with the `centers` parameter.
    Although clustering is unsupervised, meaning that we don’t have a target variable,
    we get the clusters as the target variable in the synthetic dataset. Let’s visualise
    the sum of squared distances across different values of `k`:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们选择了4个簇中心作为`centers`参数。尽管聚类是无监督的，即我们没有目标变量，但我们在合成数据集中得到了簇作为目标变量。让我们可视化不同`k`值下的平方距离和：
- en: '[PRE8]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](../Images/c2e5227327336c3b9af19a5918ce2b3f.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c2e5227327336c3b9af19a5918ce2b3f.png)'
- en: Image by author
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: It looks like the sum of squared distance plateaus after when k=4\. Or are we
    influenced by confirmation bias?
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来当k=4时，平方距离和趋于平稳。还是我们受到了确认偏误的影响？
- en: If you are curious to learn more, these 4 functions we just learned have other
    useful parameters to further customise and control how you create synthetic datasets.
    You can learn more about Scikit-learn’s functions to generate synthetic datasets
    from [here](https://scikit-learn.org/stable/datasets/sample_generators.html).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多，这四个函数还有其他有用的参数，可以进一步定制和控制如何创建合成数据集。你可以从[这里](https://scikit-learn.org/stable/datasets/sample_generators.html)了解更多关于Scikit-learn生成合成数据集的函数。
- en: 📍 NumPy & pandas
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 📍 NumPy & pandas
- en: 'We can also use `numpy` and `pandas`, commonly used data manipulation libraries,
    to create dummy datasets:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用`numpy`和`pandas`，这两个常用的数据处理库，来创建虚拟数据集：
- en: '[PRE9]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](../Images/8477af89e805ea010c34c309c38393c4.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8477af89e805ea010c34c309c38393c4.png)'
- en: Image by author
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: 📌 Categorical variable
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 📌 分类变量
- en: 'We have created a categorical variable: `gender` as an example. Using the `p`
    argument, we have specified the desired probabilities for the categories. We can
    check if the generated data reflects this:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了一个分类变量：`gender`作为示例。使用`p`参数，我们指定了类别的期望概率。我们可以检查生成的数据是否反映了这一点：
- en: '[PRE10]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![](../Images/64033e5ad7b3dd61c0767a9943022e52.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/64033e5ad7b3dd61c0767a9943022e52.png)'
- en: Image by author
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Great, it’s roughly 60:40\. If we don’t specify `p` argument, categories will
    be evenly distributed.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 很好，大致是60:40。如果我们不指定`p`参数，类别将会均匀分配。
- en: 📌 Numeric variable
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 📌 数值变量
- en: 'We have created a few numeric variables: `id`, `age`, `spend`, `points`.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了一些数值变量：`id`、`age`、`spend`、`points`。
- en: '◼️ `id`: We ensured that the 5-digit id is unique by specifying `replace=False`.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: ◼️ `id`：我们通过指定`replace=False`确保5位数的ID是唯一的。
- en: '◼️ ️`age`: Used `np.random.randint()` function to generate random integers
    between a range.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: ◼️ `age`：使用了`np.random.randint()`函数在一个范围内生成随机整数。
- en: '◼️ `spend`: Used `scipy.stats.skewnorm.rvs()` function to create a skewed random
    numeric variable.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: ◼️ `spend`：使用了`scipy.stats.skewnorm.rvs()`函数创建了一个偏斜的随机数值变量。
- en: '◼️ `points`: Used `np.random.normal()` function to create a normally distributed
    random numeric variable.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: ◼️ `points`：使用了`np.random.normal()`函数创建了一个正态分布的随机数值变量。
- en: 'Let’s compare the distribution of `spend` and `points` as below:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们比较一下`spend`和`points`的分布，如下所示：
- en: '[PRE11]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![](../Images/fc520dc2d1790fa300da83cd42ff15bd.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fc520dc2d1790fa300da83cd42ff15bd.png)'
- en: Image by author
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: We can see that `spend` is skewed with a long right tail whereas `points` is
    roughly normally distributed.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，`spend`的分布偏斜且有一个长的右尾，而`points`大致呈正态分布。
- en: 📌 Date variable
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 📌 日期变量
- en: 'Lastly, we created a date variable using `pandas`. We defined `start_date`
    and `end_date` and found random dates within the range. We can check the distribution
    of the randomly sampled dates:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们使用`pandas`创建了一个日期变量。我们定义了`start_date`和`end_date`，并在这个范围内找到了随机日期。我们可以检查随机抽样日期的分布：
- en: '[PRE12]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![](../Images/9d6d3201680eb57f3336b653b540105a.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9d6d3201680eb57f3336b653b540105a.png)'
- en: Image by author
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Now, let’s familiarise with an interesting library.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们熟悉一个有趣的库。
- en: 📍 Faker
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 📍 Faker
- en: '`Faker` is a library to create fake datasets. The way we work with the library
    is quite simple, we first initialise a `Faker` object: `fake = Faker()`. Then
    we can access a whole ranges of methods it offers by `fake.<method_name()>`. For
    example, check out `fake.name()`. Here’s a sample dataset we can create using
    the library:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '`Faker`是一个用于创建假数据集的库。我们使用这个库的方法非常简单，我们首先初始化一个`Faker`对象：`fake = Faker()`。然后我们可以通过`fake.<method_name()>`访问它提供的所有方法。例如，查看`fake.name()`。以下是我们可以使用该库创建的样本数据集：'
- en: '[PRE13]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![](../Images/e708fa3a8ba3e1bd32d071fed2fdc338.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e708fa3a8ba3e1bd32d071fed2fdc338.png)'
- en: Image by author | Fake personnel information is blurred out for safety reason
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供 | 假人员信息因安全原因已被模糊处理
- en: 'Besides using `pandas`, we can also add dates using `Faker` as can be seen
    from `birthday` column. We have also generated a few free text columns. When you
    need dummy data, this library is quite useful, isn’t it? If you want to create
    dummy text, here’s a sample syntax we can use:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 除了使用`pandas`，我们还可以使用`Faker`添加日期，如`birthday`列所示。我们还生成了一些自由文本列。当你需要虚拟数据时，这个库非常有用，不是吗？如果你想创建虚拟文本，这里有一个示例语法：
- en: '[PRE14]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![](../Images/614a0da3746284cb2955456b2c554b10.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/614a0da3746284cb2955456b2c554b10.png)'
- en: Image by author
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: 'There are also slightly different versions of this depending on what we are
    after: `fake.sentences()`, `fake.paragraph()` or `fake.paragraphs()`.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们的需求，这里还有略有不同的版本：`fake.sentences()`、`fake.paragraph()`或`fake.paragraphs()`。
- en: In this post, we have only looked at a few of its methods. If you want to explore
    more about the library, [here](https://github.com/joke2k/faker/blob/master/docs/fakerclass.rst)’s
    its GitHub documentation.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们只看了一些它的方法。如果你想了解更多关于这个库的信息，请访问[这里](https://github.com/joke2k/faker/blob/master/docs/fakerclass.rst)的GitHub文档。
- en: Voila, that was it! Hope this simple ways to generate synthetic datasets will
    be useful in your Python code development.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！希望这些生成合成数据集的简单方法对你的Python代码开发有所帮助。
- en: '![](../Images/f552a8c38f153675d4ffcdfd99826b98.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f552a8c38f153675d4ffcdfd99826b98.png)'
- en: Photo by [Edgar Chaparro](https://unsplash.com/@echaparro?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[Edgar Chaparro](https://unsplash.com/@echaparro?utm_source=medium&utm_medium=referral)提供，来源于[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: 'Thank you for reading this article. If you are interested, here are links to
    some of my other posts:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读这篇文章。如果你感兴趣，这里有我其他一些文章的链接：
- en: ◼️️ [From ML Model to ML Pipeline](/from-ml-model-to-ml-pipeline-9f95c32c6512)
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: ◼️️ [从ML模型到ML管道](/from-ml-model-to-ml-pipeline-9f95c32c6512)
- en: ◼️️ [Explaining Scikit-learn models with SHAP](/explaining-scikit-learn-models-with-shap-61daff21b12a)
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: ◼️️ [使用SHAP解释Scikit-learn模型](/explaining-scikit-learn-models-with-shap-61daff21b12a)
- en: ◼️️ [4 simple tips for plotting multiple graphs in Python](/4-simple-tips-for-plotting-multiple-graphs-in-python-38df2112965c)
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: ◼️️ [Python中绘制多个图形的4个简单技巧](/4-simple-tips-for-plotting-multiple-graphs-in-python-38df2112965c)
- en: ◼️ [Prettifying pandas DataFrames](/prettifying-pandas-dataframes-75c1a1a6877d)
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: ◼️ [美化pandas DataFrames](/prettifying-pandas-dataframes-75c1a1a6877d)
- en: ◼ [Simple data visualisations in Python that you will find useful](/simple-data-visualisations-in-python-that-you-will-find-useful-5e42c92df51e)️
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: ◼ [在 Python 中简单的数据可视化，你会发现很有用](/simple-data-visualisations-in-python-that-you-will-find-useful-5e42c92df51e)️
- en: ◼️ [6 simple tips for prettier and customised plots in Seaborn (Python)](/6-simple-tips-for-prettier-and-customised-plots-in-seaborn-python-22f02ecc2393)
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: ◼️ [在 Seaborn（Python）中绘制更美观和定制化图表的 6 个简单技巧](/6-simple-tips-for-prettier-and-customised-plots-in-seaborn-python-22f02ecc2393)
- en: Bye for now 🏃 💨
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 再见了 🏃 💨
