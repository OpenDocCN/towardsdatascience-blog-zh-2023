- en: Python on the Web
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python 在网络上
- en: 原文：[https://towardsdatascience.com/python-on-the-web-b819a6a55ec7](https://towardsdatascience.com/python-on-the-web-b819a6a55ec7)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/python-on-the-web-b819a6a55ec7](https://towardsdatascience.com/python-on-the-web-b819a6a55ec7)
- en: Showcasing Python applications on the web without any server
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在没有任何服务器的情况下展示 Python 应用
- en: '[](https://pierpaoloippolito28.medium.com/?source=post_page-----b819a6a55ec7--------------------------------)[![Pier
    Paolo Ippolito](../Images/981abb84149adab275473b76bdbde66f.png)](https://pierpaoloippolito28.medium.com/?source=post_page-----b819a6a55ec7--------------------------------)[](https://towardsdatascience.com/?source=post_page-----b819a6a55ec7--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----b819a6a55ec7--------------------------------)
    [Pier Paolo Ippolito](https://pierpaoloippolito28.medium.com/?source=post_page-----b819a6a55ec7--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://pierpaoloippolito28.medium.com/?source=post_page-----b819a6a55ec7--------------------------------)[![Pier
    Paolo Ippolito](../Images/981abb84149adab275473b76bdbde66f.png)](https://pierpaoloippolito28.medium.com/?source=post_page-----b819a6a55ec7--------------------------------)[](https://towardsdatascience.com/?source=post_page-----b819a6a55ec7--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----b819a6a55ec7--------------------------------)
    [Pier Paolo Ippolito](https://pierpaoloippolito28.medium.com/?source=post_page-----b819a6a55ec7--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----b819a6a55ec7--------------------------------)
    ·9 min read·Oct 11, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----b819a6a55ec7--------------------------------)
    ·阅读时间 9 分钟·2023年10月11日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/318b3a5fe6458ff8549c4a678f90e7c6.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/318b3a5fe6458ff8549c4a678f90e7c6.png)'
- en: Photo by [Ales Nesetril](https://unsplash.com/@alesnesetril?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Ales Nesetril](https://unsplash.com/@alesnesetril?utm_source=medium&utm_medium=referral)
    提供，来自 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: Using [popular Python visualization libraries](/interactive-data-visualization-167ae26016e8)
    it can be relatively straightforward to create locally charts and dashboards of
    different forms. Although, it can be much more complicated to share your results
    with other people on the web.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 [流行的 Python 可视化库](/interactive-data-visualization-167ae26016e8) 可以相对简单地在本地创建各种形式的图表和仪表板。然而，将你的结果分享给其他人则可能复杂得多。
- en: One possible approach to do this is using libraries such as Streamlit, [Flask](/flask-and-heroku-for-online-machine-learning-deployment-425beb54a274),
    [Plotly Dash](/interactive-dashboards-for-data-science-51aa038279e5) and paying
    for a web hosting service to cover the server side and run your Python scripts
    to show on the webpage. Alternatively, some providers like [Plotly Chart or Datapane
    provide also free cloud support](/embedding-interactive-python-plots-on-the-web-84ceab57e417)
    for you to upload your Python visualizations and then embed them on the web. In
    both scenarios, you would be able to achieve anything you need if you have a small
    budget for your project, but there is any way we could achieve similar results
    for free?
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 实现这一目标的一种可能方法是使用诸如 Streamlit、[Flask](/flask-and-heroku-for-online-machine-learning-deployment-425beb54a274)、[Plotly
    Dash](/interactive-dashboards-for-data-science-51aa038279e5) 等库，并支付网络托管服务费用以覆盖服务器端，并运行你的
    Python 脚本在网页上显示。另一种选择是，一些提供商如 [Plotly Chart 或 Datapane 也提供免费的云支持](/embedding-interactive-python-plots-on-the-web-84ceab57e417)，你可以将
    Python 可视化图上传并嵌入到网页上。在这两种情况下，如果你的项目预算较小，你都能实现你所需要的功能，但是否有可能免费实现类似的结果呢？
- en: 'As part of this article, we are going to explore 3 possible approaches:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 作为本文的一部分，我们将探索三种可能的方法：
- en: '[Panel by Holoviz](https://panel.holoviz.org/)'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Holoviz 面板](https://panel.holoviz.org/)'
- en: '[Shiny for Python](https://shiny.posit.co/py/)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 的 Shiny](https://shiny.posit.co/py/)'
- en: '[PyScript](https://pyscript.net/)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[PyScript](https://pyscript.net/)'
- en: In order to showcase each of these 3 approaches, we are going to create a simple
    application to explore historical inflation data from all over the world. In order
    to do so, we are going to use [The World Bank Gloabal Database of Inflation](https://www.worldbank.org/en/research/brief/inflation-database)
    all information about licensing for the data can be found at [this link](https://datacatalog.worldbank.org/public-licenses)
    [1].
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 为了展示这三种方法，我们将创建一个简单的应用程序，以探索来自全球的历史通货膨胀数据。为此，我们将使用 [世界银行全球通货膨胀数据库](https://www.worldbank.org/en/research/brief/inflation-database)，有关数据许可的所有信息可以在
    [此链接](https://datacatalog.worldbank.org/public-licenses) [1] 中找到。
- en: Once downloaded the data, we can then use the following pre-processing function
    in order to better shape the dataset for visualization and import just the 3 Excel
    Sheets we are going to use as part of the analysis (overall inflation data, inflation
    for food and energy prices).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 数据下载后，我们可以使用以下预处理函数，以更好地调整数据集以进行可视化，并仅导入我们将用于分析的 3 个 Excel 表格（总体通胀数据、食品和能源价格的通胀数据）。
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Each dataset will then have a date index with a row for each year and a column
    for each of the different countries with their respective inflation percentage
    values (Figure 1).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 每个数据集将会有一个日期索引，每年一行，每个国家的通胀百分比值一列（图 1）。
- en: '![](../Images/f811c1a1abd52a2611b57a5f64250a92.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f811c1a1abd52a2611b57a5f64250a92.png)'
- en: 'Figure 1: Overall Inflation Dataset (Image by Author).'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1：总体通胀数据集（图像由作者提供）。
- en: All the code used as part of this project can be freely accessed on my [GitHub
    profile](https://github.com/pierpaolo28/Data-Visualization/tree/master) and the
    resulting online dashboards from this project can be accessed at [this link](https://ppiconsulting.dev/Projects/project23.html).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 本项目中使用的所有代码可以在我的 [GitHub 个人资料](https://github.com/pierpaolo28/Data-Visualization/tree/master)上自由访问，本项目生成的在线仪表板可以通过
    [这个链接](https://ppiconsulting.dev/Projects/project23.html)访问。
- en: Panel
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 面板
- en: 'Panel is an open-source Python library part of the HoloViz ecosystem. It can
    be simply installed using the following command:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Panel 是 HoloViz 生态系统中的一个开源 Python 库。可以使用以下命令简单安装：
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Once imported the data, we can then proceed to develop our application:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 数据导入后，我们可以继续开发我们的应用程序：
- en: We first import the necessary libraries.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们首先导入必要的库。
- en: Specify a tamplate to use to style the application and its title.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指定一个模板来样式化应用程序及其标题。
- en: Create a dropdown widget where the user can select a country to examine. In
    this case Switzerland is provided as the default choice when the application is
    loaded.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个下拉小部件，用户可以选择一个国家进行检查。在此情况下，瑞士被提供为应用程序加载时的默认选择。
- en: 3 helper functions are designed in order to take the selected country as input
    and then return different temporal parts of the series to nicely display the raw
    inflation data to the user.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3 个辅助函数旨在将所选国家作为输入，然后返回系列的不同时间部分，以便向用户清晰地显示原始通胀数据。
- en: Ultimately, the 3 helper functions are binded with the dropdown widget and added
    together on a column on the interface.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最终，3 个辅助函数与下拉小部件绑定，并一起添加到界面上的一列中。
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'As a result, we should then get the following output (Figure 2):'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是，我们应得到如下输出（图 2）：
- en: '![](../Images/f50c23dddbd57d88aa9e095d983867d8.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f50c23dddbd57d88aa9e095d983867d8.png)'
- en: 'Figure 2: Displaying Tabular data (Image by Author).'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2：显示表格数据（图像由作者提供）。
- en: Following a similar structure, we can then proceed to make a slider where the
    user can pick the range of years to examine and create a plot to visualize the
    country historical trend (Figure 3).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 按照类似的结构，我们可以继续制作一个滑块，用户可以选择要检查的年份范围，并创建一个图表以可视化国家历史趋势（图 3）。
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/74803242388d911d1807b15e6176ada7.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/74803242388d911d1807b15e6176ada7.png)'
- en: 'Figure 3: Overall Inflation Trend (Image by Author).'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3：总体通胀趋势（图像由作者提供）。
- en: Now that we have been able to visualize the overall inflation data, we can then
    add a second plot where the user can choose if inspect the food or energy prices
    inflation trend (Figure 4).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经能够可视化总体通胀数据，我们可以添加第二个图表，用户可以选择检查食品或能源价格的通胀趋势（图 4）。
- en: '[PRE4]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/757ea8438c4b466a6329128a26479340.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/757ea8438c4b466a6329128a26479340.png)'
- en: 'Figure 4: Food/Energy Inflation Trend (Image by Author).'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4：食品/能源通胀趋势（图像由作者提供）。
- en: Finally, we can also add an explorer widget on the dashboard in order to make
    it possible for the user to create its own charts (Figure 5).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们还可以在仪表板上添加一个探索器小部件，以便用户能够创建自己的图表（图 5）。
- en: '[PRE5]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/d0fa4d52e024688d9615717b79679fe3.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d0fa4d52e024688d9615717b79679fe3.png)'
- en: 'Figure 5: Explorer Widget (Image by Author).'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5：探索器小部件（图像由作者提供）。
- en: Once created the full application and stored it in a ***pane_example.py*** file,
    we can then run the command below in order to visualize the results.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦创建了完整的应用程序并将其存储在 ***pane_example.py*** 文件中，我们可以运行以下命令以可视化结果。
- en: '[PRE6]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The application can then be converted into an HTML format using the following
    command:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，可以使用以下命令将应用程序转换为 HTML 格式：
- en: '[PRE7]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'After the conversion, it should then be possible to launch it with an HTTP
    server. The web page should then be available at the following link: [***http://localhost:8000/docs/panel_example.html***](http://localhost:8000/docs/panel_example.html)'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 转换后，应该可以使用 HTTP 服务器启动它。网页应该可以通过以下链接访问：[***http://localhost:8000/docs/panel_example.html***](http://localhost:8000/docs/panel_example.html)
- en: '[PRE8]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Shiny for Python
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Shiny for Python
- en: 'Shiny was on open source library originally developed for R, that is now available
    also for Python users. It can be easily installed using the following command:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Shiny 是一个最初为 R 开发的开源库，现在也可供 Python 用户使用。可以使用以下命令轻松安装：
- en: '[PRE9]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Once imported the data, we can then work on our application, by first importing
    the necessary dependencies and then structuring the layout of the application.
    Specifically the following steps are adopted:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 导入数据后，我们可以继续工作，首先导入必要的依赖项，然后构建应用程序的布局。具体采用以下步骤：
- en: We first create a title for the application.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先为应用程序创建一个标题。
- en: Design a sidebar containing a dropdown and a slider (to be used as inputs to
    populate the following plots).
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计一个包含下拉菜单和滑块的侧边栏（用于作为输入填充以下图表）。
- en: Output 2 plots next to the sidebar (to show the overall inflation trend for
    a country and its annual change in inflation).
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在侧边栏旁输出 2 个图表（展示一个国家的整体通胀趋势及其年度通胀变化）。
- en: Add a final dropdown and plot at the end of the application (where users can
    inspect the food/energy prices inflation trend).
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在应用程序末尾添加一个最终下拉菜单和图表（用户可以检查食品/能源价格的通胀趋势）。
- en: '[PRE10]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Once defined the layour we can then proceed to create the different plots:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 定义布局后，我们可以继续创建不同的图表：
- en: '[PRE11]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The application can then be launched locally using the following command (Figure
    6):'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 然后可以使用以下命令在本地启动应用程序（见图 6）：
- en: '[PRE12]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![](../Images/001f8bdbccc70c0f8b1e08509c4af725.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/001f8bdbccc70c0f8b1e08509c4af725.png)'
- en: 'Figure 6: Shiny Application Example (Image by Author).'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6：Shiny 应用程序示例（图片来源于作者）。
- en: If interested in converting the code into HTML so that to share it on a webpage,
    we then need to first install [***shinylive***](https://shiny.posit.co/py/docs/shinylive.html)
    and then use the following command (make sure to name your application ***app.py***!).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有兴趣将代码转换为 HTML 以便在网页上共享，我们需要首先安装 [***shinylive***](https://shiny.posit.co/py/docs/shinylive.html)，然后使用以下命令（确保将应用程序命名为
    ***app.py***！）。
- en: '[PRE13]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'After the conversion, it should then be possible to launch the application
    with an HTTP server. The web page should then be available at the following link:
    [http://[::1]:8008/](http://[::1]:8008/)'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 转换后，应该可以使用 HTTP 服务器启动应用程序。网页应该可以通过以下链接访问：[http://[::1]:8008/](http://[::1]:8008/)
- en: '[PRE14]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: PyScript
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PyScript
- en: PyScript is a framework developed by Anaconda in order to make possible to write
    Python code directly into your HTML files. After importing the ***pyscript.js***
    scripts, Python code can then be automatically executed and processed to render
    the results in your application.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: PyScript 是 Anaconda 开发的一个框架，用于直接在 HTML 文件中编写 Python 代码。导入 ***pyscript.js***
    脚本后，Python 代码将会自动执行并处理，从而在应用程序中呈现结果。
- en: All the HTML code needed in order to run our application is shown below. The
    Python code can then be just pasted between the ***<py-config>*** commands. After
    the ***<py-config>*** command, a ***div*** has also been added in order add a
    title to the application and get different input parameters for our plots (in
    the same way we had input parameters for our Panel and Shiny dashboards).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 为运行我们的应用程序所需的所有 HTML 代码如下所示。然后，Python 代码可以直接粘贴在 ***<py-config>*** 命令之间。在 ***<py-config>***
    命令之后，还添加了一个 ***div*** 元素，以便为应用程序添加标题，并获取图表的不同输入参数（与我们在 Panel 和 Shiny 仪表板中所用的输入参数方式相同）。
- en: '[PRE15]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: In this case, we start by importing the libraries and defining a plot function
    to create the overall inflation trend plot and annual change. Using the js library
    we can then be able to get the input parameters specified in the HTML file and
    call our plotting function.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们首先导入库并定义一个绘图函数，用于创建整体通胀趋势图和年度变化图。使用 js 库，我们可以获取 HTML 文件中指定的输入参数，并调用我们的绘图函数。
- en: Finally, a proxy is created in order to check if the end users change over time
    any of the parameters, and if so automatically update their values stored in Python
    and the respective plots.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，创建一个代理，以便检查最终用户是否随时间更改了任何参数，如果是的话，自动更新其在 Python 中存储的值和相应的图表。
- en: '[PRE16]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Once finished developing the application and storing it in a ***.html*** file,
    we can then immediately launch it by opening the file using a web browser (Figure
    7).
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦开发完成应用程序并将其存储在***.html***文件中，我们可以通过使用网页浏览器打开文件来立即启动它（图 7）。
- en: '![](../Images/86c33463f7c22ea76d62953a14567770.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/86c33463f7c22ea76d62953a14567770.png)'
- en: 'Figure 7: PyScript Example Application (Image by Author).'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7：PyScript 示例应用程序（图片由作者提供）。
- en: Deployment
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署
- en: 'In order to deploy our applications on the web, it might be necessary to store
    our input data alongside the application in a single file (e.g. after the conversion
    from Python to HTML it could in fact not be possible anymore to load the data
    from XLSX). One possible way to do this is to:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将我们的应用程序部署到网上，可能需要将我们的输入数据与应用程序一起存储在一个文件中（例如，Python 转换为 HTML 后，可能不再能够从 XLSX
    中加载数据）。一种可能的方法是：
- en: Export the 3 daframes originally imported into CSV files.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将最初导入的 3 个数据帧导出为 CSV 文件。
- en: Open the CSV files one at the time and paste the whole content in a variable
    (as shown below).
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一次打开一个 CSV 文件，并将全部内容粘贴到一个变量中（如下所示）。
- en: Use this setup in the same file as the rest of your application (instead of
    the ***import_data*** function).
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在与应用程序其余部分相同的文件中使用此设置（而不是***import_data***函数）。
- en: '[PRE17]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Using this setup and converting the Panel and Python Shiny applications to HTML
    code as explained above it can then be possible to host your application on the
    web without needing to pay for any server.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 使用上述设置并将 Panel 和 Python Shiny 应用程序转换为 HTML 代码后，便可以在不需要支付任何服务器费用的情况下将应用程序托管到网上。
- en: One simple approach in order to do this, is using GitHub pages and adding our
    project files to an online repository. More information about GitHub pages is
    available [here.](https://pages.github.com/)
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 一种简单的方法是使用 GitHub Pages 并将我们的项目文件添加到在线仓库中。有关 GitHub Pages 的更多信息，请参见[此处](https://pages.github.com/)。
- en: Conclusion
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: As part of this article we explored 3 different options which can be used in
    order to share your Python applications on the web without having to pay for any
    service management. Although, we also saw that taking this approach has some inherent
    limitations and could therefore not be the best option when designing more complex
    applications or working with large amounts of data.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们探讨了三种不同的选项，这些选项可以用来在不支付任何服务管理费用的情况下共享你的 Python 应用程序。虽然我们也看到这种方法存在一些固有的局限性，因此在设计更复杂的应用程序或处理大量数据时，可能不是最佳选择。
- en: If interested instead in showcasing your Machine Learning projects online (without
    needing a server architecture), [Tensorflow.js](/online-machine-learning-with-tensorflow-js-2ae232352901)
    and [ONNX](/onnx-easily-exchange-deep-learning-models-f3c42100fd77) could be two
    great solutions for your needs.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对在线展示你的机器学习项目感兴趣（无需服务器架构），[Tensorflow.js](/online-machine-learning-with-tensorflow-js-2ae232352901)
    和 [ONNX](/onnx-easily-exchange-deep-learning-models-f3c42100fd77)可能是你需求的两个优秀解决方案。
- en: Contacts
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系方式
- en: 'If you want to keep updated with my latest articles and projects [follow me
    on Medium](https://pierpaoloippolito28.medium.com/subscribe) and subscribe to
    my [mailing list](http://eepurl.com/gwO-Dr). These are some of my contacts details:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想跟进我最新的文章和项目，*请在 Medium 上关注我*([follow me on Medium](https://pierpaoloippolito28.medium.com/subscribe))并订阅我的[邮件列表](http://eepurl.com/gwO-Dr)。以下是我的一些联系方式：
- en: '[Linkedin](https://uk.linkedin.com/in/pier-paolo-ippolito-202917146)'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Linkedin](https://uk.linkedin.com/in/pier-paolo-ippolito-202917146)'
- en: '[Personal Website](https://pierpaolo28.github.io/)'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[个人网站](https://pierpaolo28.github.io/)'
- en: '[Medium Profile](https://towardsdatascience.com/@pierpaoloippolito28)'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Medium 个人资料](https://towardsdatascience.com/@pierpaoloippolito28)'
- en: '[GitHub](https://github.com/pierpaolo28)'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[GitHub](https://github.com/pierpaolo28)'
- en: '[Kaggle](https://www.kaggle.com/pierpaolo28)'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Kaggle](https://www.kaggle.com/pierpaolo28)'
- en: Bibliography
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[1] The World Bank, A Global Database of Inflation. Accessed at: [https://www.worldbank.org/en/research/brief/inflation-database](https://www.worldbank.org/en/research/brief/inflation-database).
    License: [Creative Commons Attribution 4.0 International license](https://creativecommons.org/licenses/by/4.0)
    (CC-BY 4.0).'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] 世界银行，全球通货膨胀数据库。访问网址：[https://www.worldbank.org/en/research/brief/inflation-database](https://www.worldbank.org/en/research/brief/inflation-database)。许可：[知识共享署名
    4.0 国际许可协议](https://creativecommons.org/licenses/by/4.0) (CC-BY 4.0)。'
