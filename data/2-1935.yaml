- en: Structuring Your Cloud Instances’ Startup Scripts
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结构化您的云实例启动脚本
- en: 原文：[https://towardsdatascience.com/structuring-your-cloud-instances-startup-scripts-2ce981825b8d](https://towardsdatascience.com/structuring-your-cloud-instances-startup-scripts-2ce981825b8d)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/structuring-your-cloud-instances-startup-scripts-2ce981825b8d](https://towardsdatascience.com/structuring-your-cloud-instances-startup-scripts-2ce981825b8d)
- en: Separating between first launch vs reboot
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 区分首次启动与重启
- en: '[](https://medium.com/@teosiyang?source=post_page-----2ce981825b8d--------------------------------)[![Jake
    Teo](../Images/9687f43822fab69befb750a8ec58516d.png)](https://medium.com/@teosiyang?source=post_page-----2ce981825b8d--------------------------------)[](https://towardsdatascience.com/?source=post_page-----2ce981825b8d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----2ce981825b8d--------------------------------)
    [Jake Teo](https://medium.com/@teosiyang?source=post_page-----2ce981825b8d--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@teosiyang?source=post_page-----2ce981825b8d--------------------------------)[![Jake
    Teo](../Images/9687f43822fab69befb750a8ec58516d.png)](https://medium.com/@teosiyang?source=post_page-----2ce981825b8d--------------------------------)[](https://towardsdatascience.com/?source=post_page-----2ce981825b8d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----2ce981825b8d--------------------------------)
    [Jake Teo](https://medium.com/@teosiyang?source=post_page-----2ce981825b8d--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----2ce981825b8d--------------------------------)
    ·7 min read·Nov 9, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----2ce981825b8d--------------------------------)
    ·阅读时间 7 分钟·2023 年 11 月 9 日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: Most of your machine-learning tasks will typically be, after the initial exploration
    phase, packaged into images and deployed to on-premise or cloud servers. This
    will facilitate the rapid iteration to build the infrastructure supporting the
    operationalisation of the MLOps pipeline with the involvement of the entire development
    team comprising data scientists, together with data, software, cloud engineers,
    etc.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数机器学习任务通常在初步探索阶段后，会被打包成镜像并部署到本地或云服务器上。这将促进快速迭代，以建立支持 MLOps 管道运行的基础设施，涉及整个开发团队，包括数据科学家、数据、软件和云工程师等。
- en: '![](../Images/d582e642cfce4bde1f97ee0d72d95c17.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d582e642cfce4bde1f97ee0d72d95c17.png)'
- en: Sample diagram showing a typical deployment of machine learning tasks to servers
    (VM = virtual machine). Image by author
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 示例图展示了机器学习任务典型的服务器部署（VM = 虚拟机）。图片由作者提供
- en: Startup scripts are used to execute automated configuration or other tasks upon
    the start of a cloud server instance. This is known as **user data** in **AWS
    EC2**, **startup scripts** in **Google Cloud Engine**, and **custom script extensions**
    in **Azure Virtual Machine**. The contents within the startup scripts could come
    in the form of installations, metadata settings, environment variables, etc. The
    main purpose is that each instance is always configured to be ready to serve the
    applications within or adjacent services whenever it is started.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 启动脚本用于在云服务器实例启动时执行自动化配置或其他任务。这在 **AWS EC2** 中被称为 **用户数据**，在 **Google Cloud Engine**
    中称为 **启动脚本**，在 **Azure Virtual Machine** 中称为 **自定义脚本扩展**。启动脚本中的内容可以包括安装、元数据设置、环境变量等。其主要目的是确保每个实例在启动时始终配置为准备好服务于内部或相邻服务的应用程序。
- en: As with all scripts we write, we should always target them to be neat, structured
    and centralised so that they can be reused as templates. This will make your life
    easier to manage multiple applications in different instances in your project.
    In the following sections, I will be showing how you can do that.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 就像我们编写的所有脚本一样，我们应始终使其保持整洁、结构化和集中，以便可以将其作为模板重复使用。这将使您在管理项目中不同实例的多个应用程序时更加轻松。在接下来的部分中，我将展示如何做到这一点。
- en: '*While the latter sections are specific to AWS EC2’s user data, they can easily
    be adapted to other providers using the same concept.*'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '*虽然后面的部分专门针对 AWS EC2 的用户数据，但可以很容易地将其适应于其他提供商，只需使用相同的概念。*'
- en: 1) First Launch vs Reboot Startup Scripts
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1) 首次启动与重启启动脚本
- en: It is quite intuitive to use startup scripts on an instance’s first launch,
    but rebooting? If we are using on-demand instances, and they are not meant for
    production environments (e.g., dev, staging, SIT, UAT), it makes little financial
    sense to have them running on weekends or after office hours when developers are
    not at work. Hence, they are scheduled to be turned off and restarted when they
    are required. There are also occasions when a reboot is required on patching.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在实例首次启动时使用启动脚本是相当直观的，但重启呢？如果我们使用的是按需实例，并且它们不用于生产环境（例如开发、测试、系统集成测试、用户验收测试），那么在开发人员不在工作时（例如周末或下班后）让它们运行是没有经济意义的。因此，它们会被安排在需要时关闭和重启。在打补丁时也有需要重启的情况。
- en: During those periods of shutdown, there could be updates to the metadata that
    the application needs. Hence, after a reboot, these should be refreshed to reflect
    the latest information.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些关闭期间，可能会有应用程序需要的元数据更新。因此，在重启后，这些数据应该被刷新，以反映最新的信息。
- en: '![](../Images/87872fa95d640f0b4e9156f0c1be8fdc.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/87872fa95d640f0b4e9156f0c1be8fdc.png)'
- en: An example of what is required for an instance’s first launch and reboot. Image
    by author.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 实例首次启动和重启所需的示例。图片来源：作者。
- en: Henceforth, user data can be served to configure instances when they are first
    launched, and also on reboot. More often than not, both types of start-ups do
    not require the same configuration, but the dilemma is that we can only attach
    one user data file to each instance. So how can we differentiate them within the
    same user data file?
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 从现在开始，用户数据可以在实例首次启动时进行配置，也可以在重启时进行配置。通常，这两种启动方式所需的配置并不相同，但问题在于我们只能将一个用户数据文件附加到每个实例上。那么，我们如何在同一个用户数据文件中区分它们呢？
- en: Multi-part format
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多部分格式
- en: If we only require our user data to be executed on the instance’s first launch,
    the script can just contain the shell commands. However, to enable it to be also
    executed in every instance reboot, a cloud-config command is required. This is
    in a separate format, hence AWS uses the MIME (Multipurpose Internet Mail Extensions)
    multi-part format to contain both information.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们只要求在实例首次启动时执行用户数据，脚本只需包含 shell 命令。然而，要使其在每次实例重启时也能执行，则需要一个 cloud-config
    命令。这是一个单独的格式，因此 AWS 使用 MIME（多用途互联网邮件扩展）多部分格式来包含这两种信息。
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You can see from the above the definition of MIME, followed by the cloud configuration,
    with `[scripts-user, always]` indicating the user data to be executed on both
    instance’s first launch and subsequent reboot. The next format is catered for
    the shell commands.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 从上面可以看到 MIME 的定义，随后是云配置，其中 `[scripts-user, always]` 表示用户数据将在实例首次启动和随后的重启时执行。下一个格式是为
    shell 命令量身定制的。
- en: Differentiate between first launch & reboot
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 区分首次启动和重启
- en: Technically, AWS does not have a user data configuration to separate your scripts
    based on the first launch and reboot. Luckily we can use some simple scripting
    to do that elegantly, as you can see from the pseudo code below.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术上讲，AWS 没有用户数据配置来根据首次启动和重启分隔你的脚本。幸运的是，我们可以使用一些简单的脚本优雅地完成这一任务，如下面的伪代码所示。
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: First, we need to structure our script into functions so that they can be called
    later either during the first launch or reboot. You can see that I have defined
    four functions for `install_docker`, `create_dotenv`, `setup_docker_compose` and
    `launch_docker_compose`. Appropriate arguments should be set to make it as reusable
    as possible.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要将脚本结构化为函数，以便它们可以在首次启动或重启时调用。你可以看到我定义了 `install_docker`、`create_dotenv`、`setup_docker_compose`
    和 `launch_docker_compose` 四个函数。应设置适当的参数，使其尽可能可重用。
- en: Second, we have a simple if-else statement such that when the file `STARTED`
    is not present, it will execute all four functions, and at the end, create the
    `STARTED` file within. In the reboot of that instance, since that `STARTED` file
    is present, it will only run two of the configuration functions, not the others.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，我们有一个简单的 if-else 语句，当 `STARTED` 文件不存在时，它将执行所有四个函数，并在末尾创建 `STARTED` 文件。在该实例重启时，由于
    `STARTED` 文件存在，它将仅运行两个配置函数，而不是其他函数。
- en: That’s pretty straightforward, right? Below is a working example using a Ubuntu
    virtual machine to illustrate this further.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这很简单，对吧？下面是一个使用 Ubuntu 虚拟机进一步说明的实际示例。
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: A short description of each function is provided. Note the use of arguments
    to make each function reusable.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 每个函数的简短描述已经提供。请注意参数的使用，使每个函数都可以重用。
- en: '**install_docker()**: update package manager, and install base libraries as
    well as docker and docker-compose.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**install_docker()**：更新包管理器，安装基础库以及docker和docker-compose。'
- en: '**create_dotenv()**: grab metadata of the environment, e.g., dev, staging,
    prod from the instance metadata tag, and put it in a `.env` file.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**create_dotenv()**：从实例元数据标签中获取环境的元数据，例如开发、暂存、生产，并将其放入`.env`文件中。'
- en: '**set_docker_compose()**: get the latest `docker-compose.yml` file from the
    source code repository, set the image tag using the environment within the file,
    and then log in to the container registry.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**set_docker_compose()**：从源代码库中获取最新的`docker-compose.yml`文件，使用文件中的环境设置镜像标签，然后登录到容器注册表。'
- en: '**launch_docker_compose()**: deploy the image as a container'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**launch_docker_compose()**：将镜像部署为容器'
- en: 2) Centralise Startup Scripts & Overcome Character Limits
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2) 集中启动脚本与克服字符限制
- en: User data has a character or size limit of 16K and 16KB respectively. That is
    a healthy length to play with in most use cases. However, should you exceed this
    amount, you can easily store the scripts in your blob storage like S3 bucket,
    and within the user data, pull the scripts in and execute them. This is also the
    preferable way to update all user data scripts via a central store.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 用户数据的字符或大小限制分别为16K和16KB。这在大多数使用案例中是一个合理的长度。然而，如果超过此限制，你可以轻松地将脚本存储在像S3桶这样的Blob存储中，并在用户数据中拉取并执行这些脚本。这也是通过中央存储更新所有用户数据脚本的首选方法。
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We can store all four functions above in a file called `userdata_template.sh`
    and place it in an S3 bucket of your choice.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将上述四个函数存储在名为`userdata_template.sh`的文件中，并将其放置在你选择的S3桶中。
- en: To access the S3 bucket, we need to ensure that 1) the instance has the relevant
    permissions to read from this bucket within the instance profile, and 2) that
    the instance has `aws-cli` installed so that the appropriate commands can be used
    to pull the startup script from S3.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问S3桶，我们需要确保1) 实例在实例配置文件中具有读取该桶的相关权限，以及2) 实例已安装`aws-cli`以便使用适当的命令从S3中拉取启动脚本。
- en: With that, we can easily download the script, `source` it so that you can access
    the earlier functions, and execute them accordingly.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些，我们可以轻松下载脚本，`source`它以访问之前的函数，并根据需要执行它们。
- en: 3) Debugging
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3) 调试
- en: If your user data is not performing the task as expected, you can view the log
    file within the instance to see if any error messages are captured. This can be
    found at `/var/log/cloud-init-output.log`.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户数据没有按预期执行任务，你可以查看实例中的日志文件，以查看是否捕获到任何错误消息。日志文件位于`/var/log/cloud-init-output.log`。
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: If you need to check on the user data script itself, you may do that with the
    following two methods.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要检查用户数据脚本本身，可以使用以下两种方法。
- en: '[PRE5]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Summary
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: So there you have it! Hope you have learnt some elegant tips to structure your
    user data from your virtual machines’ first launch and reboot. I hope you find
    it useful and intuitive.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！希望你从虚拟机的首次启动和重启中学到一些优雅的结构化用户数据的技巧。希望你觉得这些技巧有用且直观。
- en: Reference
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考资料
- en: '[https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html)'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html)'
- en: '[https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-add-user-data.html#](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-add-user-data.html#)'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-add-user-data.html#](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-add-user-data.html#)'
