- en: 'Enhanced Object Detection: How To Effectively Implement YOLOv8'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 增强型目标检测：如何有效实现 YOLOv8
- en: 原文：[https://towardsdatascience.com/enhanced-object-detection-how-to-effectively-implement-yolov8-afd1bf6132ae](https://towardsdatascience.com/enhanced-object-detection-how-to-effectively-implement-yolov8-afd1bf6132ae)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/enhanced-object-detection-how-to-effectively-implement-yolov8-afd1bf6132ae](https://towardsdatascience.com/enhanced-object-detection-how-to-effectively-implement-yolov8-afd1bf6132ae)
- en: A practical guide to object detection in images, videos, and real-time webcam
    feed using both CLI and Python
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一本关于在图像、视频和实时摄像头画面中使用 CLI 和 Python 进行目标检测的实用指南。
- en: '[](https://thomasdorfer.medium.com/?source=post_page-----afd1bf6132ae--------------------------------)[![Thomas
    A Dorfer](../Images/9258a1735cee805f1d9b02e2adf01096.png)](https://thomasdorfer.medium.com/?source=post_page-----afd1bf6132ae--------------------------------)[](https://towardsdatascience.com/?source=post_page-----afd1bf6132ae--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----afd1bf6132ae--------------------------------)
    [Thomas A Dorfer](https://thomasdorfer.medium.com/?source=post_page-----afd1bf6132ae--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://thomasdorfer.medium.com/?source=post_page-----afd1bf6132ae--------------------------------)[![Thomas
    A Dorfer](../Images/9258a1735cee805f1d9b02e2adf01096.png)](https://thomasdorfer.medium.com/?source=post_page-----afd1bf6132ae--------------------------------)[](https://towardsdatascience.com/?source=post_page-----afd1bf6132ae--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----afd1bf6132ae--------------------------------)
    [Thomas A Dorfer](https://thomasdorfer.medium.com/?source=post_page-----afd1bf6132ae--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----afd1bf6132ae--------------------------------)
    ·7 min read·Mar 23, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: · 发布在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----afd1bf6132ae--------------------------------)
    · 阅读时间：7 分钟 · 2023 年 3 月 23 日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/7648a5890412b71ee953a2a079374602.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7648a5890412b71ee953a2a079374602.png)'
- en: Video by [Camilo Calderón](https://www.pexels.com/@camilo-calderon-3343529/)
    on [Pexels](https://www.pexels.com/video/a-video-footage-of-busy-street-4997787/).
    Converted to GIF format by the Author.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 视频由 [Camilo Calderón](https://www.pexels.com/@camilo-calderon-3343529/) 制作，发布在
    [Pexels](https://www.pexels.com/video/a-video-footage-of-busy-street-4997787/)。由作者转换为
    GIF 格式。
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: Object detection, a subfield of computer vision, is primarily concerned with
    the identification and localization of objects in images or videos with a certain
    degree of confidence. An identified object is generally annotated with a bounding
    box, which provides information to the viewer about the object’s nature and location
    in the scene.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 目标检测是计算机视觉的一个子领域，主要关注于以一定的置信度识别和定位图像或视频中的对象。被识别的对象通常会用一个边界框进行标注，这为观众提供有关对象性质和在场景中位置的信息。
- en: 'In 2015, the [debut of **YOLO**](https://arxiv.org/abs/1506.02640), or **You
    Only Look Once**, shook the world of computer vision as its system was capable
    of real-time object detection with astounding accuracy and speed. Since then,
    YOLO has undergone several iterations of improvements in prediction accuracy and
    efficiency, eventually culminating in the release of its latest family member:
    **YOLOv8** by [Ultralytics](https://github.com/ultralytics/ultralytics).'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 2015 年，[**YOLO** 的首次发布](https://arxiv.org/abs/1506.02640)，即 **You Only Look
    Once**，震撼了计算机视觉界，因为它的系统能够以惊人的准确性和速度进行实时目标检测。从那时起，YOLO 经过了几次改进，提高了预测准确性和效率，最终推出了其最新的家族成员：由
    [Ultralytics](https://github.com/ultralytics/ultralytics) 推出的 **YOLOv8**。
- en: 'YOLOv8 comes in five versions: nano (n), small (s), medium (m), large (l),
    and extra large (x). Their respective improvements can be demonstrated by their
    mean average precisions (mAP) and latencies, evaluated by the the [COCO val2017](http://cocodataset.org/)
    dataset.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv8 有五个版本：nano (n)、small (s)、medium (m)、large (l) 和 extra large (x)。它们各自的改进可以通过它们的平均精度均值（mAP）和延迟来展示，这些是通过
    [COCO val2017](http://cocodataset.org/) 数据集进行评估的。
- en: '![](../Images/1d7acc0bee95ad83fd133a136f70ce50.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1d7acc0bee95ad83fd133a136f70ce50.png)'
- en: 'Image by [Ultralytics](https://github.com/ultralytics/ultralytics). License:
    [GNU General Public License](https://github.com/ultralytics/ultralytics/blob/main/LICENSE).'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Ultralytics](https://github.com/ultralytics/ultralytics) 提供。许可证： [GNU 通用公共许可证](https://github.com/ultralytics/ultralytics/blob/main/LICENSE)。
- en: Compared to previous versions, YOLOv8 is not only faster and more accurate,
    but it also requires fewer parameters to achieve its performance and, as if that
    wasn’t enough, comes with an intuitive and easy-to-use command-line interface
    (CLI) as well as a [Python package](https://pypi.org/project/ultralytics/), providing
    a more seamless experience for users and developers.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前的版本相比，YOLOv8不仅更快更准确，还需要更少的参数来实现其性能，而且，如果这还不够，它还配备了一个直观且易于使用的命令行接口（CLI）以及一个[Python包](https://pypi.org/project/ultralytics/)，为用户和开发者提供了更无缝的体验。
- en: In this article, I will demonstrate how YOLOv8 can be applied to detect objects
    in static images, videos, and a live webcam using both CLI and Python.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我将演示如何使用CLI和Python将YOLOv8应用于静态图像、视频和实时摄像头中的对象检测。
- en: Without further ado, let’s get into it!
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 不再赘述，让我们开始吧！
- en: Installation
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装
- en: 'All you need to do to get started with YOLOv8 is to run the following command
    in your terminal:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用YOLOv8，你只需在终端中运行以下命令：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This will install YOLOv8 via the `ultralytics` pip package.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这将通过`ultralytics` pip包安装YOLOv8。
- en: Image Detection
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图像检测
- en: Object detection in static images has proven useful in a variety of domains,
    such as surveillance, medical imaging, or retail analytics. Whatever domain you
    choose to apply your detection system, YOLOv8 has made it incredibly simple for
    you to do so.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 静态图像中的对象检测在许多领域中都被证明是有用的，如监控、医学成像或零售分析。无论你选择将检测系统应用于哪个领域，YOLOv8都使这一过程变得极其简单。
- en: Below is the raw image that we’re going to perform object detection on.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是我们将进行对象检测的原始图像。
- en: '![](../Images/72f307a8e29880c10ac55e9b51f8d2ea.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/72f307a8e29880c10ac55e9b51f8d2ea.png)'
- en: Photo by [James Coleman](https://unsplash.com/@jhc) on [Unsplash](https://unsplash.com/photos/jViepQKI01Q).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[詹姆斯·科尔曼](https://unsplash.com/@jhc)拍摄，发布于[Unsplash](https://unsplash.com/photos/jViepQKI01Q)。'
- en: In order to run YOLOv8, we will look into both CLI and Python implementations.
    While in this particular case we’ll be using a `jpg` image, YOLOv8 supports a
    variety of different [image formats](https://docs.ultralytics.com/modes/predict/#image-formats).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 为了运行YOLOv8，我们将探讨CLI和Python实现。虽然在这个具体的例子中我们将使用一张`jpg`图像，但YOLOv8支持多种不同的[图像格式](https://docs.ultralytics.com/modes/predict/#image-formats)。
- en: CLI
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CLI
- en: 'Assuming we’d like to run the extra large YOLOv8x on our image (let’s call
    it `img.jpg`), the following command can be put into the CLI:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们想在图像（我们称之为`img.jpg`）上运行超大YOLOv8x，可以将以下命令输入CLI：
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Here, we specify the following arguments: `detect` to use object detection,
    `predict` to perform a prediction task, `model` to select the model version, `source`
    to provide the file path of our image, and `save` to save the processed image
    with the object’s bounding boxes and their predicted classes and class probabilities.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们指定以下参数：`detect`用于对象检测，`predict`用于执行预测任务，`model`用于选择模型版本，`source`用于提供图像的文件路径，以及`save`用于保存带有对象边界框及其预测类别和类别概率的处理图像。
- en: Python
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python
- en: 'In Python, the exact same task can be achieved with the following intuitive
    and low-code solution:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在Python中，完全相同的任务可以通过以下直观且低代码的解决方案来完成：
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Whether you use the CLI or Python; in either case, the saved, processed image
    looks as follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你使用CLI还是Python，在任何情况下，保存的处理后图像如下所示：
- en: '![](../Images/31f70aa8124121a131a552d4f565fc2c.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/31f70aa8124121a131a552d4f565fc2c.png)'
- en: Photo by [James Coleman](https://unsplash.com/@jhc) on [Unsplash](https://unsplash.com/photos/jViepQKI01Q).
    Processed with YOLOv8 by the Author.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[詹姆斯·科尔曼](https://unsplash.com/@jhc)拍摄，发布于[Unsplash](https://unsplash.com/photos/jViepQKI01Q)。经作者使用YOLOv8处理。'
- en: We can clearly see the bounding boxes around every object it detected, as well
    as their corresponding class labels and probabilities.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以清楚地看到它检测到的每个对象周围的边界框，以及它们对应的类别标签和概率。
- en: Video Detection
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 视频检测
- en: Performing object detection on video files is almost identical to image files,
    with the only difference being the source file format. Just like with images,
    YOLOv8 supports a variety of different [video formats](https://docs.ultralytics.com/modes/predict/#video-formats)
    that can be fed as an input to the model. In our case, we’ll be using an `mp4`
    file.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 对视频文件进行对象检测与图像文件几乎相同，唯一的区别是源文件格式。与图像一样，YOLOv8支持多种不同的[视频格式](https://docs.ultralytics.com/modes/predict/#video-formats)作为模型的输入。在我们的案例中，我们将使用一个`mp4`文件。
- en: Let’s again look at both CLI and Python implementations. For faster computation,
    let’s now use the YOLOv8m model instead of the extra large version.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再次查看CLI和Python实现。为了加快计算速度，我们现在使用YOLOv8m模型，而不是超大版本。
- en: CLI
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CLI
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Python
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'First, let’s inspect our raw, `vid.mp4` file before we perform object detection
    on it:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在对`vid.mp4`文件进行物体检测之前，让我们检查一下原始文件：
- en: '![](../Images/69a4afce1a59ac810aa7ccb5fa3bed97.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/69a4afce1a59ac810aa7ccb5fa3bed97.png)'
- en: Video by [Camilo Calderón](https://www.pexels.com/@camilo-calderon-3343529/)
    on [Pexels](https://www.pexels.com/video/a-video-footage-of-busy-street-4997787/).
    Converted to GIF format by the Author.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 视频由[Camilo Calderón](https://www.pexels.com/@camilo-calderon-3343529/)提供，发布在[Pexels](https://www.pexels.com/video/a-video-footage-of-busy-street-4997787/)上。作者转换为GIF格式。
- en: The video shows a scene of a busy city with lots of traffic, including cars,
    busses, trucks, and cyclists, as well as some people on the right side apparently
    waiting for a bus.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 视频展示了一个繁忙城市的场景，交通繁忙，包括汽车、公交车、卡车和骑自行车的人，以及右侧的一些人显然在等公交车。
- en: 'After processing this file using YOLOv8’s medium version, we get the following
    result:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 使用YOLOv8的中等版本处理此文件后，我们得到了以下结果：
- en: '![](../Images/7648a5890412b71ee953a2a079374602.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7648a5890412b71ee953a2a079374602.png)'
- en: Video by [Camilo Calderón](https://www.pexels.com/@camilo-calderon-3343529/)
    on [Pexels](https://www.pexels.com/video/a-video-footage-of-busy-street-4997787/).
    Processed with YOLOv8m and converted to GIF format by the Author.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 视频由[Camilo Calderón](https://www.pexels.com/@camilo-calderon-3343529/)提供，发布在[Pexels](https://www.pexels.com/video/a-video-footage-of-busy-street-4997787/)上。使用YOLOv8m处理并由作者转换为GIF格式。
- en: Again, we can see that YOLOv8m does a really good job at accurately capturing
    the objects in the scene. It even detects smaller objects that are part of a larger
    whole, such as a person on a bicycle wearing a backpack.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 再次看到，YOLOv8m在准确捕捉场景中的物体方面做得非常好。它甚至能够检测到大整体中的小物体，例如骑自行车背着背包的人。
- en: Live Detection
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实时检测
- en: Finally, let’s take a look at what is required to detect objects in a live webcam
    feed. To do so, I’ll use my personal webcam and, just like before, both CLI and
    Python approaches.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们看看在实时网络摄像头喂送中检测物体需要什么。为此，我将使用我的个人网络摄像头，并像之前一样，采用CLI和Python方法。
- en: To reduce the latency and subsequently the lag in the video, I’ll be using the
    light-weight nano version of YOLOv8.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 为了减少延迟和视频中的滞后，我将使用YOLOv8的轻量级nano版本。
- en: CLI
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CLI
- en: '[PRE5]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Most of these arguments are identical to what we have seen above for image and
    video files, with the exception of `source`, which allows us to specify which
    video source to use. In my case, it’s the inbuilt webcam (0).
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这些参数大多与我们之前在图像和视频文件中看到的一致，不同之处在于`source`，它允许我们指定使用的视频源。在我的情况下，它是内置的网络摄像头（0）。
- en: Python
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python
- en: '[PRE6]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Again, we can perform the same task in Python with an ultra low-code solution.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，我们可以通过超低代码解决方案在Python中执行相同的任务。
- en: 'Here’s an illustration of what YOLOv8n looks like on a live webcam:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这是YOLOv8n在实时网络摄像头上显示的插图：
- en: '![](../Images/1eaea037e2dd5c0a26e7956db86e34c8.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1eaea037e2dd5c0a26e7956db86e34c8.png)'
- en: GIF by the Author. Recorded from webcam using YOLOv8n.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: GIF由作者制作。使用YOLOv8n从网络摄像头录制。
- en: Impressive! Despite the rather low video quality and poor lighting conditions,
    it still captures the objects pretty well and even detects some objects in the
    background, such as the olive oil and vinegar bottles on the left and the sink
    on the right.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 令人印象深刻！尽管视频质量较低且光线条件较差，它仍然相当好地捕捉了物体，甚至检测到了一些背景中的物体，比如左侧的橄榄油和醋瓶以及右侧的水槽。
- en: It is worth noting that while these intuitive CLI commands and low-code Python
    solutions are great ways to quickly get started on an object detection task, they
    do have limitations when it comes to custom configurations. For instance, if we’d
    like to configure the aesthetics of the bounding boxes or perform a simple task
    such as counting and displaying the number of objects that are being detected
    at any given time, we would have to code up our own custom implementation using
    packages such as [cv2](https://pypi.org/project/opencv-python/) or [supervision](https://pypi.org/project/supervision/).
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，尽管这些直观的CLI命令和低代码Python解决方案是快速开始物体检测任务的好方法，但在自定义配置方面确实存在局限性。例如，如果我们想要配置边框的美观或执行一些简单任务，比如统计和显示在任何给定时间检测到的物体数量，我们就必须使用[cv2](https://pypi.org/project/opencv-python/)或[supervision](https://pypi.org/project/supervision/)等包自行编写自定义实现。
- en: 'In fact, the webcam footage above has been recorded using the following Python
    code in order to adjust the webcam’s resolution and custom-define the bounding
    boxes and their annotations. (Note: This was mainly done to make the GIF above
    more presentable. The CLI and Python implementations shown above would suffice
    to produce similar outcomes.)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，上面的摄像头视频是使用以下 Python 代码录制的，以调整摄像头的分辨率和自定义定义边界框及其注释。（注意：这主要是为了使上面的 GIF 更具可观赏性。上述的
    CLI 和 Python 实现已经足以产生类似的效果。）
- en: '[PRE7]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'While the details in this code are beyond the scope of this article, here’s
    a great reference that uses a similar approach in case you are interested in upping
    your object detection game:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管本文中的代码细节超出了讨论范围，但这里有一个很好的参考，采用了类似的方法，如果您有兴趣提升您的目标检测技能：
- en: Conclusion
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: YOLOv8 does not only outperform its predecessors in accuracy and speed, but
    it also considerably improves user experience through an extremely easy-to-use
    CLI and low-code Python solutions. It also comes in five different model versions,
    providing the user with the opportunity to choose depending on their individual
    needs and tolerance limits for latency and accuracy.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv8 不仅在准确性和速度上超越了其前辈，而且通过极易使用的 CLI 和低代码 Python 解决方案显著提升了用户体验。它还提供了五种不同的模型版本，用户可以根据个人需求和对延迟及准确性的容忍度选择合适的版本。
- en: Whether your goal is to perform object detection on static images, videos, or
    a live webcam, YOLOv8 enables you to do this in a seamless manner. However, should
    your application require custom configurations, you may have to resort to additional
    computer vision packages such as `cv2` and `supervision`.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您的目标是对静态图像、视频还是实时摄像头进行目标检测，YOLOv8 都可以无缝完成。然而，如果您的应用需要自定义配置，您可能需要依赖其他计算机视觉包，例如
    `cv2` 和 `supervision`。
- en: More Resources
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多资源
- en: '[ultralytics/ultralytics: NEW — YOLOv8 🚀 in PyTorch > ONNX > CoreML > TFLite
    (github.com)](https://github.com/ultralytics/ultralytics)'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[ultralytics/ultralytics: NEW — YOLOv8 🚀 in PyTorch > ONNX > CoreML > TFLite
    (github.com)](https://github.com/ultralytics/ultralytics)'
- en: '[YOLOv8 Docs (ultralytics.com)](https://docs.ultralytics.com/)'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[YOLOv8 文档 (ultralytics.com)](https://docs.ultralytics.com/)'
- en: '[YOLOv8 Object Counting in Real-time with Webcam, OpenCV and Supervision —
    YouTube](https://www.youtube.com/watch?v=QV85eYOb7gk)'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[YOLOv8 实时物体计数，使用摄像头、OpenCV 和 Supervision — YouTube](https://www.youtube.com/watch?v=QV85eYOb7gk)'
- en: Liked this article?
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 喜欢这篇文章吗？
- en: Let’s connect! You can find me on [Twitter](https://twitter.com/ThomasADorfer)
    and [LinkedIn](https://www.linkedin.com/in/thomasdorfer/).
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们联系吧！您可以在 [Twitter](https://twitter.com/ThomasADorfer) 和 [LinkedIn](https://www.linkedin.com/in/thomasdorfer/)
    上找到我。
- en: If you like to support my writing, you can do so through a [Medium Membership](https://thomasdorfer.medium.com/membership),
    which provides you access to all my stories as well as those of thousands of other
    writers on Medium.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望支持我的写作，您可以通过 [Medium 会员](https://thomasdorfer.medium.com/membership) 来实现，这样您可以访问我所有的故事，以及
    Medium 上其他成千上万作家的文章。
- en: '[](https://medium.com/@thomasdorfer/membership?source=post_page-----afd1bf6132ae--------------------------------)
    [## Join Medium with my referral link - Thomas A Dorfer'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 通过我的推荐链接加入 Medium - Thomas A Dorfer](https://medium.com/@thomasdorfer/membership?source=post_page-----afd1bf6132ae--------------------------------)'
- en: Read every story from Thomas A Dorfer (and thousands of other writers on Medium).
    Your membership fee directly supports…
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阅读 Thomas A Dorfer 的每一篇文章（以及 Medium 上成千上万的其他作家的文章）。您的会员费用直接支持……
- en: medium.com](https://medium.com/@thomasdorfer/membership?source=post_page-----afd1bf6132ae--------------------------------)
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '[medium.com](https://medium.com/@thomasdorfer/membership?source=post_page-----afd1bf6132ae--------------------------------)'
