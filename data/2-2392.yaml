- en: Winning with Simple, not even Linear Time-Series Models
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用简单的，甚至非线性的时间序列模型获胜
- en: 原文：[https://towardsdatascience.com/winning-with-simple-not-even-linear-time-series-models-6ece77be22bc](https://towardsdatascience.com/winning-with-simple-not-even-linear-time-series-models-6ece77be22bc)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/winning-with-simple-not-even-linear-time-series-models-6ece77be22bc](https://towardsdatascience.com/winning-with-simple-not-even-linear-time-series-models-6ece77be22bc)
- en: If your dataset is small, the subsequent ideas might be useful
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如果你的数据集较小，接下来的想法可能会很有用
- en: '[](https://sarem-seitz.medium.com/?source=post_page-----6ece77be22bc--------------------------------)[![Sarem
    Seitz](../Images/f833f915a0eb061f47524a67685ba76c.png)](https://sarem-seitz.medium.com/?source=post_page-----6ece77be22bc--------------------------------)[](https://towardsdatascience.com/?source=post_page-----6ece77be22bc--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----6ece77be22bc--------------------------------)
    [Sarem Seitz](https://sarem-seitz.medium.com/?source=post_page-----6ece77be22bc--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://sarem-seitz.medium.com/?source=post_page-----6ece77be22bc--------------------------------)[![Sarem
    Seitz](../Images/f833f915a0eb061f47524a67685ba76c.png)](https://sarem-seitz.medium.com/?source=post_page-----6ece77be22bc--------------------------------)[](https://towardsdatascience.com/?source=post_page-----6ece77be22bc--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----6ece77be22bc--------------------------------)
    [Sarem Seitz](https://sarem-seitz.medium.com/?source=post_page-----6ece77be22bc--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----6ece77be22bc--------------------------------)
    ·9 min read·May 10, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----6ece77be22bc--------------------------------)
    ·9分钟阅读·2023年5月10日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/df6c32f54e340c91d39bddc987d1cca5.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/df6c32f54e340c91d39bddc987d1cca5.png)'
- en: Photo by [Thomas Bormans](https://unsplash.com/@thomasbormans?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    from [Unsplash](https://unsplash.com/de/s/fotos/time?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Thomas Bormans](https://unsplash.com/@thomasbormans?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    拍摄，来源于 [Unsplash](https://unsplash.com/de/s/fotos/time?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
- en: '**Disclaimer:** Title heavily inspired by [this](https://www.youtube.com/watch?v=68ABAU_V8qI&pp=ygUad2lubmluZyB3aXRoIHNpbXBsZSBtb2RlbHM%3D&ref=sarem-seitz.com)
    great talk.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**免责声明：** 标题深受 [这个](https://www.youtube.com/watch?v=68ABAU_V8qI&pp=ygUad2lubmluZyB3aXRoIHNpbXBsZSBtb2RlbHM%3D&ref=sarem-seitz.com)
    精彩讲座的启发。'
- en: As the name implies, today we want to consider almost trivially simple models.
    Although the current trend points towards complex models, even for time-series
    models, I am still a big believer in simplicity. In particular, when your dataset
    is small, the subsequent ideas might be useful.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 正如名字所示，今天我们想要考虑几乎简单到微不足道的模型。尽管目前的趋势是趋向复杂模型，即使是时间序列模型，我仍然非常相信简单性。特别是当你的数据集较小时，接下来的想法可能会很有用。
- en: To be fair, this article will probably be most valuable for people who are just
    starting out with time-series analysis. Anyone else should check the table of
    contents first and decide for themselves if they want to continue.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 公平地说，这篇文章可能对刚开始进行时间序列分析的人最有价值。其他人应首先查看目录，自己决定是否继续阅读。
- en: Personally, I am still quite intrigued by how far you can push even the most
    simplistic time-series models. The upcoming paragraphs show some ideas and thoughts
    that I have been gathering on the topic over time.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 就个人而言，我对即使是最简单的时间序列模型能推到多远仍然感到非常好奇。接下来的段落展示了一些我在这个话题上逐渐积累的想法和见解。
- en: Models with pure i.i.d. noise
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 纯i.i.d.噪声的模型
- en: 'We start with the simplest (probabilistic) way to model a (univariate) time-series.
    Namely, we want to look at plain **i**ndependently, **i**dentically, **d** istributed
    randomness:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从最简单的（概率性）方式开始建模（单变量）时间序列。也就是说，我们希望查看纯粹的**i**独立的，**i**同分布的，**d**分布随机性：
- en: '![](../Images/5e350742cc00edf698579955e7fba37a.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5e350742cc00edf698579955e7fba37a.png)'
- en: (image by author)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: （图像作者提供）
- en: This implies that all our observations follow the same distribution at any point
    in time ( **identically** distributed). Even more importantly, we presume no interrelation
    between observations at all ( **independently** distributed). Obviously, this
    precludes any autoregressive terms as well.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们的所有观测在任何时间点都遵循相同的分布（**同分布**）。更重要的是，我们假设观测之间完全没有相互关系（**独立分布**）。显然，这排除了任何自回归项。
- en: Probably your first question is if such models aren’t too simplistic to be useful
    for real-world problems. Certainly, most time-series are unlikely to have no statistical
    relationship with their own past.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能首先会问这样模型是否过于简单以至于无法用于现实问题。当然，大多数时间序列不太可能与自身过去没有统计关系。
- en: 'While those concerns are true by all means, we can nevertheless deduce the
    following:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这些担忧完全正确，但我们仍然可以推导出以下内容：
- en: '*Any time-series model that is more complex than a pure-noise model should
    also produce better forecasts than a pure-noise model.*'
  id: totrans-19
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*任何比纯噪声模型更复杂的时间序列模型也应该能提供比纯噪声模型更好的预测。*'
- en: In short, we can at least use random noise as a benchmark model. There is arguably
    no simpler approach to create baseline benchmarks than this one. Even smoothing
    techniques will likely require more parameters to be fitted.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，我们至少可以使用随机噪声作为基准模型。可以说，没有比这更简单的方法来创建基准基准了。即使平滑技术可能也需要更多的参数进行拟合。
- en: 'Besides this rather obvious use-case, there is another potential application
    for i.i.d. noise. Due to their simplicity, noise models cand be useful for very
    small datasets. Consider this: If big, complex models require large datasets to
    prevent overfitting, then simple models require only a handful of data.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这个相当明显的用例之外，i.i.d. 噪声还有另一个潜在的应用。由于其简单性，噪声模型对非常小的数据集也可能有用。考虑一下：如果大型复杂模型需要大量数据以防止过拟合，那么简单模型只需少量数据。
- en: Of course, it is debatable what dataset size can be seen as ‘small’.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，什么数据集大小可以被视为“小型”是有争议的。
- en: Integrated i.i.d. noise
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 积分i.i.d.噪声
- en: 'Now, things are becoming more interesting. While raw i.i.d. noise cannot account
    for auto-correlation between observations, integrated noise can. Before we do
    a demonstration, let us introduce the *differencing operator*:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，事情变得更有趣了。虽然原始i.i.d.噪声无法解释观察值之间的自相关，但积分噪声可以。在我们进行演示之前，让我们介绍一下*differencing
    operator*：
- en: '![](../Images/40c8d3675a77a45bdaa7c19e19a4b0c5.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/40c8d3675a77a45bdaa7c19e19a4b0c5.png)'
- en: (image by author)
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: (image by author)
- en: If you haven’t heard about differencing for time-series problems yet — great!
    If you have, then you can hopefully still learn something new.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没听说过时间序列问题中的差分——太好了！如果你听说过，那么希望你仍然能学到一些新东西。
- en: Definition of an integrated time-series
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 积分时间序列的定义
- en: 'With the difference operator in our toolbox, we can now define an *integrated
    time-series*:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 有了我们的差分算子，我们现在可以定义一个*积分时间序列*：
- en: '![](../Images/a83f91138217de79a9e9a59de98166ec.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a83f91138217de79a9e9a59de98166ec.png)'
- en: (image by author)
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: (image by author)
- en: 'There are several ideas in this definition that we should clarify further:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这个定义中有几个我们应该进一步澄清的想法：
- en: 'First, you probably noticed the concept of exponentiating the difference operator.
    You can simply think of this as performing the differentiation several times.
    For the squared difference operator, this would look as follows:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你可能注意到差分算子的指数概念。你可以简单地把它看作是多次进行微分。对于平方差分算子，这看起来如下：
- en: '![](../Images/1f28bca052a6a8c897dbefeb333e637a.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1f28bca052a6a8c897dbefeb333e637a.png)'
- en: (image by author)
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: (image by author)
- en: As we will see, multiple difference operators allow us to handle different time-series
    patterns at once.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们将看到的，多重差分算子使我们可以一次处理不同的时间序列模式。
- en: Third, it is common convention to simply write
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 第三，通常的约定是简单地写
- en: '![](../Images/2c476381732175dc4d357eb52ca29c93.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2c476381732175dc4d357eb52ca29c93.png)'
- en: (image by author)
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: (image by author)
- en: We will happily adopt this convention here. Also, we call such time-series *simply
    integrated* without referencing its order or seasonality.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们会很乐意在这里采用这一约定。此外，我们称这样的时间序列为*简单积分*，而不参考其顺序或季节性。
- en: Obviously, we also need to re-transform a difference representation back to
    its original domain. In our notation, this means we invert the difference transformation,
    i.e.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，我们还需要将差分表示重新转换回其原始领域。在我们的记号中，这意味着我们反转差分变换，即
- en: '![](../Images/1734857993033021621d6f59291aea11.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1734857993033021621d6f59291aea11.png)'
- en: (image by author)
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: (image by author)
- en: must hold for arbitrary difference transformations. If we expand this formula,
    we get
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 必须适用于任意差分变换。如果我们展开这个公式，我们得到
- en: '![](../Images/11eeaa68897f9d80151df92640bca120.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/11eeaa68897f9d80151df92640bca120.png)'
- en: (image by author)
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: (image by author)
- en: These simplifications follow from the fact the difference operator is a linear
    operator (we won’t cover the details here). Technically, the last equation merely
    says that the next observation is a sum of this observation plus a delta.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这些简化源于差分运算符是线性运算符的事实（我们在这里不会详细讨论）。从技术上讲，最后的方程仅仅表示下一个观测值是当前观测值加上一个增量。
- en: In a forecasting problem, we will typically have a prediction for the change
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个预测问题中，我们通常会有一个变化的预测。
- en: '![](../Images/5d24988691a8a2447af9c99a554bd069.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5d24988691a8a2447af9c99a554bd069.png)'
- en: (image by author)
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: （图片作者提供）
- en: Let’s denote this prediction as
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将这个预测表示为
- en: '![](../Images/7235096d93091daa9f5101237ab5e812.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7235096d93091daa9f5101237ab5e812.png)'
- en: (image by author)
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: （图片作者提供）
- en: to stress that it is not the actual change, but a predicted one. Thus, the forecast
    for the integrated time-series is
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 强调这不是实际变化，而是预测的变化。因此，积分时间序列的预测为
- en: '![](../Images/24ce027e19ab52fd99ff658795e44cf3.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/24ce027e19ab52fd99ff658795e44cf3.png)'
- en: (image by author)
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: （图片作者提供）
- en: 'Afterwards, we apply this logic recursively as far into the future as our forecast
    should go:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们将这种逻辑递归应用到预测应该延续的未来：
- en: '![](../Images/9c262e7923f30b2a38fa861d847c2a05.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9c262e7923f30b2a38fa861d847c2a05.png)'
- en: (image by author)
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: （图片作者提供）
- en: '![](../Images/1ac71bbec3ccca089b9be39cc7f74b32.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1ac71bbec3ccca089b9be39cc7f74b32.png)'
- en: White noise time-series (left) and corresponding integrated time-series (right).
    Both time-series are related via the simple difference operator and its inverse.
    (image by author)
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 白噪声时间序列（左）及其对应的积分时间序列（右）。这两个时间序列通过简单的差分运算符及其逆相关联。（图片作者提供）
- en: Integrated noise for seemingly complex patterns
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对于看似复杂的模式，积分噪声
- en: By now, you can probably imagine what is meant by an integrated noise model.
    In fact, we can come up with countless variants of an integrated noise model by
    just chaining some difference operators with random noise.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 到现在，你可能已经能想象什么是积分噪声模型。实际上，我们可以通过将一些差分运算符与随机噪声链式组合来提出无数种积分噪声模型变体。
- en: '**Linear trends from integrated time-series:** One possibility would be a simply
    integrated time-series, i.e.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**来自积分时间序列的线性趋势：** 一种可能性是简单的积分时间序列，即'
- en: '![](../Images/9328b9ed1c5083e0c285e8f9f38007a3.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9328b9ed1c5083e0c285e8f9f38007a3.png)'
- en: (image by author)
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: （图片作者提供）
- en: It is an interesting exercise to simulate data from such a model using a plain
    standard normal distribution.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 使用普通标准正态分布模拟这种模型的数据是一个有趣的练习。
- en: As it turns out, samples from this time-series appear to exhibit linear trends
    with potential change points. However, it is clear that these trends and change
    points occur completely at random.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是，这个时间序列的样本似乎展示了具有潜在变化点的线性趋势。然而，这些趋势和变化点显然完全是随机的。
- en: This implies that simply fitting piece-wise linear functions to forecast such
    trends can be a dangerous approach. After all, if the changes are occurring at
    random, then all linear trend lines are mere artifacts of the random data-generating
    process.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着简单地将分段线性函数拟合用于预测这些趋势可能是一种危险的方法。毕竟，如果变化是随机发生的，那么所有线性趋势线只是随机数据生成过程的伪影。
- en: As an important disclaimer, though, ‘ *unpredictable*’ means unpredictable from
    the time-series itself. An external feature might still be able to accurately
    forecast potential change points. Here, however, we presume that the time-series
    is our solely available source of information.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个重要的免责声明，虽然‘*不可预测*’意味着从时间序列本身不可预测，但一个外部特征可能仍然能够准确预测潜在的变化点。然而，在这里，我们假设时间序列是我们唯一可用的信息来源。
- en: Below, you can see an example of the described phenomenon. While there appears
    to be a trend change at around t=50, this change is purely random. The upward
    trend after t=50 also stalls at around t=60\. Imagine how your model would have
    performed if you extrapolated the upward trend after t=60.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 下面，你可以看到上述现象的一个示例。虽然在t=50左右似乎有一个趋势变化，但这个变化完全是随机的。t=50之后的上升趋势在t=60左右也停滞了。想象一下，如果你在t=60之后对上升趋势进行外推，你的模型会如何表现。
- en: '![](../Images/b144c4b04bf38e474e7371a3ea90bb15.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b144c4b04bf38e474e7371a3ea90bb15.png)'
- en: '*Generating a time-series with shifting linear trends by integrating standard
    normal noise.* (image by author)'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '*通过对标准正态噪声进行积分生成具有变化线性趋势的时间序列。*（图片作者提供）'
- en: Of course, the saying goes ‘never say never’, even in those settings. However,
    you should really know what you are doing if you apply such models.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，有句谚语说‘永远不要说永远’，即使在这些情况下也是如此。然而，如果你应用这样的模型，你真的应该知道自己在做什么。
- en: '**Seasonal patterns:** Similarly to how a simple integration produceds trends,
    we can also create seasonal patterns:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**季节性模式：** 类似于简单集成产生趋势的方式，我们也可以创建季节性模式：'
- en: Formally, we now need the s-th difference of our seasonal process to be a stationary
    process, e.g.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 正式来说，我们现在需要季节性过程的第s阶差分是一个平稳过程，例如：
- en: '![](../Images/6bffde0336d4fe2c9e6fb477100d35da.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6bffde0336d4fe2c9e6fb477100d35da.png)'
- en: (image by author)
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: （图片作者提供）
- en: 'The inverse operation — transforming the i.i.d. process back to the seasonally
    integrated — works similarly to the one before:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 逆操作——将i.i.d.过程转换回季节集成——与之前的操作类似：
- en: '![](../Images/fa662643396bc45b06b0b8b5c8021251.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fa662643396bc45b06b0b8b5c8021251.png)'
- en: (image by author)
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: （图片作者提供）
- en: 'You can think of the inverse operation of seasonal differencing as a *cumsum*
    operation over `s` periods. Since I am not aware of a respective, native Python
    function, I decided to do `reshape->cumsum->reshape` to get the desired outcome.
    Below is an example with `s=4`:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以把季节差分的逆操作看作是在`s`个周期内的*cumsum*操作。由于我不知道相应的本地Python函数，我决定通过`reshape->cumsum->reshape`来获得所需的结果。以下是`s=4`的示例：
- en: '![](../Images/7b84fd311862af1073d4e7e6f9d34c77.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7b84fd311862af1073d4e7e6f9d34c77.png)'
- en: Seasonality of order `4` from a purely i.i.d. process. (image by author)
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 纯i.i.d.过程的`4`阶季节性。（图片作者提供）
- en: As you can see, the generated time-series looks reasonably realistic. We could
    easily sell this as quarterly sales numbers of some product to an unsuspecting
    Data Scientist.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，生成的时间序列看起来相当真实。我们可以轻松地将其作为某产品的季度销售数字出售给一位不知情的数据科学家。
- en: 'We could even combine both types of integration to generate a seasonal time-series
    with trending behavior:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们甚至可以结合这两种类型的集成，以生成具有趋势行为的季节性时间序列：
- en: '![](../Images/0e45a94f2c186f59880b834c93c63407.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0e45a94f2c186f59880b834c93c63407.png)'
- en: Seasonal and trending patterns emerge by integrating white noise. (image by
    author)
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 通过对白噪声进行集成，可以显现出季节性和趋势模式。（图片作者提供）
- en: At this point, you will probably realize that the title of this article was
    a little click-baity. Integrated time-series are, in fact, purely linear models.
    However, I believe that most people wouldn’t consider a model with, more-or-less,
    zero parameters a typical linear model.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，你可能会意识到这篇文章的标题有些点击诱饵。事实上，集成时间序列完全是线性模型。然而，我相信大多数人不会认为一个参数更多或更少的模型是典型的线性模型。
- en: '**Memory effects through integration:** Another interesting property of integrated
    time-series is the ability to model memory effects.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**集成中的记忆效应：** 集成时间序列的另一个有趣特性是能够建模记忆效应。'
- en: 'This effect can be seen particularly well when there are larger shocks or outliers
    in our data. Consider the below example, which shows seasonal integration of order
    `s=12` over i.i.d. draws from a standard [Cauchy distribution](https://en.wikipedia.org/wiki/Cauchy_distribution?ref=sarem-seitz.com):'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 当数据中出现较大冲击或异常值时，这种效果尤为明显。考虑下面的示例，它显示了从标准[Cauchy分布](https://en.wikipedia.org/wiki/Cauchy_distribution?ref=sarem-seitz.com)中进行i.i.d.抽样时的季节集成，顺序为`s=12`：
- en: '![](../Images/70bacb7562011ab40d4a495c2c61a196.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/70bacb7562011ab40d4a495c2c61a196.png)'
- en: I.i.d. standard Cauchy series (left) and corresponding seasonally integrated
    time-series. (image by author)
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: i.i.d.标准Cauchy序列（左）及其对应的季节性集成时间序列。（图片作者提供）
- en: The first large shock in the i.i.d. Cauchy series at around t=20 is sustained
    over the whole integrated series on the right. Over time, more shocks occur, which
    are also sustained.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: i.i.d. Cauchy序列中大约t=20的第一次大冲击在右侧整个集成序列中得以维持。随着时间的推移，更多的冲击发生，这些冲击也得以维持。
- en: This memory property can be very useful in practice. For example, the economic
    shocks from the pandemic have caused persistent changes in many time-series.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这个记忆属性在实践中非常有用。例如，疫情带来的经济冲击导致了许多时间序列中的持续变化。
- en: Benchmarking against NBEATS and NHITS
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与NBEATS和NHITS的基准比较
- en: Let us now use the *AirPassengers* dataset from Nixtla’s [neuralforecast](https://github.com/Nixtla/neuralforecast?ref=sarem-seitz.com)
    for a quick evaluation of the above ideas. If you are regularly reading my articles,
    you might remember the general procedure from [this one](https://www.sarem-seitz.com/facebook-prophet-covid-and-why-i-dont-trust-the-prophet/#:~:text=even%20simpler%20forecast-,model,-As%20you%20might).
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们使用*AirPassengers*数据集，来自Nixtla的[neuralforecast](https://github.com/Nixtla/neuralforecast?ref=sarem-seitz.com)，对上述想法进行快速评估。如果你经常阅读我的文章，你可能还记得[这篇文章](https://www.sarem-seitz.com/facebook-prophet-covid-and-why-i-dont-trust-the-prophet/#:~:text=even%20simpler%20forecast-,model,-As%20you%20might)中的一般程序。
- en: 'First, we split the data into a train and test period, with the latter consisting
    of 36 months of data:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将数据分为训练期和测试期，后者包含36个月的数据：
- en: '![](../Images/bb84a4fe0b1e32b6cc735158f399e1a6.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bb84a4fe0b1e32b6cc735158f399e1a6.png)'
- en: Airline passengers dataset — train and test split. (image by author)
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 航空乘客数据集——训练和测试拆分。(作者提供的图像)
- en: 'In order to obtain a stationary, i.i.d. series we perform the following transformation:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获得一个平稳的i.i.d.序列，我们执行以下变换：
- en: '![](../Images/c5e57f705c9ea4d24507e386d17a240f.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c5e57f705c9ea4d24507e386d17a240f.png)'
- en: (image by author)
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: (作者提供的图像)
- en: First, the square-root stabilizes the increasing variance. The two differencing
    operators then remove seasonality and trend. For the respective re-transformation,
    check the code further down below.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，平方根稳定了不断增加的方差。然后，两次差分操作去除了季节性和趋势。有关相应的反变换，请查看下方代码。
- en: '![](../Images/4154b6f216d065cd0fed490616d53076.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4154b6f216d065cd0fed490616d53076.png)'
- en: Stationarity-transformed time-series (training set). (image by author)
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 平稳性变换后的时间序列（训练集）。(作者提供的图像)
- en: 'We can also check a histogram and density plot of the stabilized time-series:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以检查稳定时间序列的直方图和密度图：
- en: '![](../Images/bc4124b3a39c42e1862b1581932ba95f.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bc4124b3a39c42e1862b1581932ba95f.png)'
- en: Kernel density and histogram of the stationary time-series. (image by author)
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 平稳时间序列的核密度和直方图。(作者提供的图像)
- en: Our stationary series looks also somewhat normally distributed, which is always
    a nice property.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的平稳序列看起来也有些接近正态分布，这总是一个很好的特性。
- en: 'Now, let us create the forecast for the test period. Presuming that we don’t
    know the exact distribution of our i.i.d. series, we simply draw from the empirical
    distribution via the training data. Hence, we simulate future values by reintegrating
    random samples from the empirical data:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们为测试期创建预测。假设我们不知道i.i.d.序列的确切分布，我们仅仅通过训练数据从经验分布中抽样。因此，我们通过重新整合来自经验数据的随机样本来模拟未来值：
- en: '![](../Images/8da3329d2e188ead1ed3a09e3ccce96c.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8da3329d2e188ead1ed3a09e3ccce96c.png)'
- en: Train set (blue), test set (red), mean forecast (green line) and 90% CI (green
    area). (image by author)
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 训练集（蓝色）、测试集（红色）、均值预测（绿色线）和90%置信区间（绿色区域）。(作者提供的图像)
- en: This looks very good — the mean forecast is very close to the test data. In
    addition, our simulation allows us to empirically sample the whole forecast distribution.
    Therefore, we can also easily add confidence intervals.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 这看起来非常好——均值预测非常接近测试数据。此外，我们的模拟允许我们经验性地抽样整个预测分布。因此，我们还可以轻松地添加置信区间。
- en: 'Finally, let us see how our approach compares against rather complex time-series
    models. To do so, I went with Nixtla’s implementation of [NBEATS](https://arxiv.org/abs/1905.10437?ref=sarem-seitz.com)
    and [NHITS](https://arxiv.org/abs/2201.12886?ref=sarem-seitz.com):'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们看看我们的方法与复杂时间序列模型的比较。为此，我使用了Nixtla的[NBEATS](https://arxiv.org/abs/1905.10437?ref=sarem-seitz.com)和[NHITS](https://arxiv.org/abs/2201.12886?ref=sarem-seitz.com)的实现：
- en: 'Below are the respective *RMSEs* for the test set:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是测试集的*均方根误差*（RMSE）：
- en: '**Simple Model:** 25.5021'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**简单模型:** 25.5021'
- en: '**NBEATS:** 42.6277'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NBEATS:** 42.6277'
- en: '**NHITS:** 62.6822'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NHITS:** 62.6822'
- en: As we can see, our almost trivial model has beaten two sophisticated time-series
    models by a fair margin. Of course, we need to emphasize that this doesn’t allow
    to draw any general conclusions.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所见，我们几乎简单的模型已经比两个复杂的时间序列模型超出不少。当然，我们需要强调，这并不允许得出任何普遍性的结论。
- en: Rather, I’d expect the neural models to outperform our simple approach for larger
    datasets. Nevertheless, as a benchmark, those trivial models are always a worthwhile
    consideration.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，我期望神经模型在较大的数据集上超越我们简单的方法。然而，作为基准，这些简单模型总是值得考虑的。
- en: Takeaways — What do we make of this?
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论——我们从中得到什么？
- en: 'As stated multiple times throughout this article:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 正如本文多次指出的：
- en: A seemingly complex time-series could still follow a fairly simple data-generating
    process.
  id: totrans-124
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 看似复杂的时间序列仍然可能遵循相当简单的数据生成过程。
- en: In the end, you might spend hours trying to fit an overly complex model even
    though the underlying problem is almost trivial. At some point, somebody could
    come along, fit a simple ARIMA(1,0,0), and still outperform your sophisticated
    neural model.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，你可能会花费数小时尝试拟合一个过于复杂的模型，即使基础问题几乎是微不足道的。某些时候，可能有人会出现，拟合一个简单的ARIMA(1,0,0)，并且仍然超越你的复杂神经模型。
- en: 'To avoid the above worst-case scenario, consider the following idea:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免上述最坏的情况，考虑以下想法：
- en: When starting out with a new time-series problem, always start with the simplest
    possible model and use it as a benchmark for all other models.
  id: totrans-127
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在开始解决新的时间序列问题时，总是从最简单的模型开始，并将其作为所有其他模型的基准。
- en: Although this is common knowledge in the Data Science community, I feel like
    it deserves particular emphasis in this context. Especially due to nowadays’ (to
    some extent justified) hype around Deep Learning, it can be tempting to directly
    start with something fancy.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这是数据科学领域的常识，但我觉得在这种情况下仍然值得特别强调。尤其是由于如今（在某种程度上是有道理的）围绕深度学习的炒作，直接从一些花哨的东西开始可能会很诱人。
- en: For many problems, this might just be the right way to go. Nobody today would
    consider a Hidden Markov Model for NLP today when LLM embeddings are available
    almost for free now.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 对于许多问题，这可能正是正确的解决方案。今天没有人会在大规模语言模型嵌入几乎是免费的情况下考虑使用隐马尔可夫模型来进行自然语言处理。
- en: Once your time-series becomes large, however, modern Machine Learning will likely
    be better. In particular, [Gradient Boosted Trees](https://lightgbm.readthedocs.io/en/v3.3.2/?ref=sarem-seitz.com)
    are very popular for such large-scale problems.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，一旦你的时间序列变得庞大，现代机器学习可能会更好。特别是，[梯度提升树](https://lightgbm.readthedocs.io/en/v3.3.2/?ref=sarem-seitz.com)
    在这种大规模问题中非常受欢迎。
- en: A more controversial approach would be, you guessed it, Deep Learning for time-series.
    While some people believe that these models don’t work as well here, their popularity
    at [tech firms like Amazon](https://www.amazon.science/videos-and-tutorials/forecasting-big-time-series-theory-and-practice?ref=sarem-seitz.com)
    probably speaks for itself.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 更具争议的方法是，你猜对了，时间序列的深度学习。虽然有些人认为这些模型在这里效果不好，但它们在像[亚马逊这样的科技公司](https://www.amazon.science/videos-and-tutorials/forecasting-big-time-series-theory-and-practice?ref=sarem-seitz.com)的流行程度可能说明了一切。
- en: References
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: '**[1]** Hamilton, James Douglas. *Time series analysis*. Princeton university
    press, 2020.'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '**[1]** Hamilton, James Douglas. *时间序列分析*. 普林斯顿大学出版社, 2020。'
- en: '**[2]** Hyndman, Rob J., & Athanasopoulos, George. *Forecasting: principles
    and practice*. OTexts, 2018.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '**[2]** Hyndman, Rob J., & Athanasopoulos, George. *预测：原理与实践*. OTexts, 2018。'
- en: '*Originally published at* [*https://www.sarem-seitz.com*](https://www.sarem-seitz.com/winning-with-simple-not-even-linear-time-series-models/)
    *on May 10, 2023.*'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '*最初发布于* [*https://www.sarem-seitz.com*](https://www.sarem-seitz.com/winning-with-simple-not-even-linear-time-series-models/)
    *于 2023年5月10日。*'
