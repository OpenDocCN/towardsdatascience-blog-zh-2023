- en: The Chaos Data-Engineering Manifesto
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 《混沌数据工程宣言》
- en: 原文：[https://towardsdatascience.com/the-chaos-data-engineering-manifesto-5dc09a182e85?source=collection_archive---------3-----------------------#2023-02-24](https://towardsdatascience.com/the-chaos-data-engineering-manifesto-5dc09a182e85?source=collection_archive---------3-----------------------#2023-02-24)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/the-chaos-data-engineering-manifesto-5dc09a182e85?source=collection_archive---------3-----------------------#2023-02-24](https://towardsdatascience.com/the-chaos-data-engineering-manifesto-5dc09a182e85?source=collection_archive---------3-----------------------#2023-02-24)
- en: 'Another lesson we can learn from software engineers: break stuff to make it
    more reliable.'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们可以从软件工程师那里学到的另一个教训是：破坏现有系统，以便让它变得更加可靠。
- en: '[](https://medium.com/@shane.murray5?source=post_page-----5dc09a182e85--------------------------------)[![shane
    murray](../Images/8bb1f3acf15dc26273097e12d03dd616.png)](https://medium.com/@shane.murray5?source=post_page-----5dc09a182e85--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5dc09a182e85--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5dc09a182e85--------------------------------)
    [shane murray](https://medium.com/@shane.murray5?source=post_page-----5dc09a182e85--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@shane.murray5?source=post_page-----5dc09a182e85--------------------------------)[![shane
    murray](../Images/8bb1f3acf15dc26273097e12d03dd616.png)](https://medium.com/@shane.murray5?source=post_page-----5dc09a182e85--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5dc09a182e85--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5dc09a182e85--------------------------------)
    [shane murray](https://medium.com/@shane.murray5?source=post_page-----5dc09a182e85--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F8aa0d9ae3ebd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-chaos-data-engineering-manifesto-5dc09a182e85&user=shane+murray&userId=8aa0d9ae3ebd&source=post_page-8aa0d9ae3ebd----5dc09a182e85---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----5dc09a182e85--------------------------------)
    ·12 min read·Feb 24, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5dc09a182e85&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-chaos-data-engineering-manifesto-5dc09a182e85&user=shane+murray&userId=8aa0d9ae3ebd&source=-----5dc09a182e85---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F8aa0d9ae3ebd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-chaos-data-engineering-manifesto-5dc09a182e85&user=shane+murray&userId=8aa0d9ae3ebd&source=post_page-8aa0d9ae3ebd----5dc09a182e85---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----5dc09a182e85--------------------------------)
    ·12 min read·2023年2月24日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5dc09a182e85&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-chaos-data-engineering-manifesto-5dc09a182e85&user=shane+murray&userId=8aa0d9ae3ebd&source=-----5dc09a182e85---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5dc09a182e85&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-chaos-data-engineering-manifesto-5dc09a182e85&source=-----5dc09a182e85---------------------bookmark_footer-----------)![](../Images/a73fda73f6bec9620f90b89108400b0f.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5dc09a182e85&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-chaos-data-engineering-manifesto-5dc09a182e85&source=-----5dc09a182e85---------------------bookmark_footer-----------)![](../Images/a73fda73f6bec9620f90b89108400b0f.png)'
- en: '*Photo by* [*Soheb Zaidi*](https://unsplash.com/@msohebzaidi?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    *on* [*Unsplash*](https://unsplash.com/s/photos/chaos?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*照片由* [*Soheb Zaidi*](https://unsplash.com/@msohebzaidi?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    *提供，刊登于* [*Unsplash*](https://unsplash.com/s/photos/chaos?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)'
- en: It’s midnight in the dim and cluttered office of *The* *New York Times* currently
    serving as the “situation room.”
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在*《纽约时报》*作为“指挥室”使用的昏暗凌乱的办公室里已是午夜时分。
- en: A powerful surge of traffic is inevitable. During every major election, the
    wave would crest and crash against our overwhelmed systems before receding, allowing
    us to assess the damage.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 强大的流量冲击是不可避免的。在每次重大选举期间，流量会达到高峰，然后猛烈冲击我们不堪重负的系统，随后才会退去，让我们能够评估损害。
- en: We had been in the cloud for years, which helped some. Our main systems would
    scale—our articles were always served—but integration points across backend services
    would eventually buckle and burst under the sustained pressure of insane traffic
    levels.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经在云环境中待了多年，这有帮助。我们的主要系统可以扩展——我们的文章总是能被服务——但后端服务中的集成点最终会在疯狂的流量压力下崩溃。
- en: However, this night in 2020 was different from similar election nights in 2014,
    2016, and 2018\. That’s because this traffic surge was simulated and an election
    wasn’t taking place.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，2020年的这个夜晚与2014年、2016年和2018年的类似选举之夜有所不同。因为这次流量激增是模拟的，而不是实际发生的选举。
- en: Pushing to the point of failure
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 推至失败的边缘
- en: Simulation or not, this *was* prod so the stakes were high. There was suppressed
    horror as J-Kidd–our system that brought ad targeting parameters to the front
    end–went down hard. It was as if all the ligaments had been ripped from the knees
    of the pass-first point guard for which it had been named. Ouch.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟与否，这*确实*是生产环境，所以风险很高。当我们的系统J-Kidd——它将广告定位参数带到前端——崩溃时，压抑的恐惧感蔓延开来。这就像是所有的韧带都从以其名字命名的传球控卫的膝盖上被撕扯下来一样。哎呀。
- en: '![](../Images/83a91cb62d835846ae9285688a44eac9.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/83a91cb62d835846ae9285688a44eac9.png)'
- en: '*Via* [*Wikimedia Commons*](https://www.google.com/url?sa=i&url=https%3A%2F%2Fcommons.wikimedia.org%2Fwiki%2FFile%3AJason_Kidd_Mike_Woodson.jpg&psig=AOvVaw2eZ0VfIHJlUc8ya-YFm_Rg&ust=1677332195040000&cd=vfe&ved=0CA8QjRxqFwoTCMDoy9Gjrv0CFQAAAAAdAAAAABAD)*.
    Credit: KeithAllisonPhoto.com.* This file is licensed under the [Creative Commons](https://en.wikipedia.org/wiki/en:Creative_Commons)
    [Attribution-Share Alike 2.0 Generic](https://creativecommons.org/licenses/by-sa/2.0/deed.en)
    license.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '*通过* [*维基共享资源*](https://www.google.com/url?sa=i&url=https%3A%2F%2Fcommons.wikimedia.org%2Fwiki%2FFile%3AJason_Kidd_Mike_Woodson.jpg&psig=AOvVaw2eZ0VfIHJlUc8ya-YFm_Rg&ust=1677332195040000&cd=vfe&ved=0CA8QjRxqFwoTCMDoy9Gjrv0CFQAAAAAdAAAAABAD)*。
    版权归 KeithAllisonPhoto.com 所有。* 本文件采用[创意共享](https://en.wikipedia.org/wiki/en:Creative_Commons)
    [署名-相同方式共享 2.0 通用](https://creativecommons.org/licenses/by-sa/2.0/deed.en) 许可协议授权。'
- en: J-Kidd wasn’t the only system that found its way to the disabled list. That
    was the point of the whole exercise, to push our systems until they failed. We
    succeeded. Or failed depending on your point of view.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: J-Kidd并不是唯一一个被列入禁用名单的系统。这次演练的目的就是将我们的系统推向极限，直到它们失败。我们成功了。或者说，从你的角度来看，我们失败了。
- en: The next day the team made adjustments. We decoupled systems, implemented failsafes,
    and returned to the court for game 2\. As a result, the 2020 election was the
    first I can remember where the on-call engineers weren’t on the edge of their
    seats, white-knuckling their keyboards…At least not for system reliability reasons.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 第二天，团队进行了调整。我们拆分了系统，实施了安全机制，然后回到赛场迎接第二场比赛。因此，2020年的选举是我记得的第一次，值班工程师们没有绷紧神经，紧握键盘……至少不是因为系统可靠性的问题。
- en: Pre-Mortems and Chaos Engineering
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 预先检讨和混沌工程
- en: We referred to that exercise as a “pre-mortem.” Its conceptual roots can be
    traced back to the idea of [chaos engineering](https://principlesofchaos.org/)
    introduced by site reliability engineers.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们把这次演练称为“预先检讨”。其概念根源可以追溯到由站点可靠性工程师提出的[混沌工程](https://principlesofchaos.org/)。
- en: For those unfamiliar, chaos engineering is a disciplined methodology for intentionally
    introducing points of failure within systems to better understand their thresholds
    and improve resilience.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 对于不熟悉的人来说，混沌工程是一种有纪律的方法论，旨在有意地在系统内引入故障点，以更好地理解其阈值并提高弹性。
- en: It was popularized in large part by the success of [Netflix’s Simian Army](https://netflixtechblog.com/the-netflix-simian-army-16e57fbab116),
    a suite of programs that would automatically introduce chaos by removing servers,
    regions, and introduce other points of failure into production. All in the name
    of reliability and resiliency.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这一方法在很大程度上是通过[Netflix的猩猩军团](https://netflixtechblog.com/the-netflix-simian-army-16e57fbab116)的成功而广泛流行起来的，该程序套件会通过删除服务器、区域以及引入其他故障点来自动引入混沌。所有这些都是为了可靠性和弹性。
- en: While this idea isn’t [completely](https://lakefs.io/blog/chaos-data-engineering/)
    [foreign](https://www.linkedin.com/posts/eczachly_dataengineering-activity-7033975323838877696-s4Qj?utm_source=share&utm_medium=member_desktop)
    [to](https://medium.com/geekculture/why-you-should-occasionally-kill-your-data-stack-613143c986ea)
    data engineering, it can certainly be described as an extremely uncommon practice.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这一理念在数据工程中并非[完全](https://lakefs.io/blog/chaos-data-engineering/) [陌生](https://www.linkedin.com/posts/eczachly_dataengineering-activity-7033975323838877696-s4Qj?utm_source=share&utm_medium=member_desktop)
    [的](https://medium.com/geekculture/why-you-should-occasionally-kill-your-data-stack-613143c986ea)，但它确实可以被描述为一种极为罕见的实践。
- en: 'No data engineer in their right mind has looked at their to-do list, the unfilled
    roles on their team, the complexity of their pipelines, and then said: “This needs
    to be harder. Let’s introduce some chaos.” That may be part of the problem.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 任何理智的数据工程师都不会看着自己的待办事项清单、团队中未填补的职位、管道的复杂性，然后说：“这需要更难一点。我们引入一些混乱吧。” 这可能是问题的一部分。
- en: Data teams need to think beyond providing snapshots of data quality to the business
    and start thinking about how to build and maintain reliable data systems at scale.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 数据团队需要超越提供数据质量快照的传统思维，开始考虑如何构建和维护可扩展的可靠数据系统。
- en: We cannot afford to overlook data’s increasingly large role in critical operations.
    Just this year, we witnessed how the deletion of one file and an out-of-sync legacy
    database [could ground more than 4,000 flights](https://www.nbcnews.com/news/us-news/us-flights-grounded-faa-outage-rcna65243).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不能忽视数据在关键操作中的日益重要角色。仅今年，我们就目睹了一次文件删除和一个不同步的遗留数据库[如何使超过4000个航班停飞](https://www.nbcnews.com/news/us-news/us-flights-grounded-faa-outage-rcna65243)。
- en: Of course, you can’t just copy and paste software engineering concepts straight
    into data engineering playbooks. Data is different. DataOps tweaks DevOps methodology
    as [data observability](https://www.montecarlodata.com/blog-what-is-data-observability/)
    does to observability.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，你不能直接将软件工程概念复制粘贴到数据工程手册中。数据是不同的。DataOps对DevOps方法论的调整就如同[数据可观察性](https://www.montecarlodata.com/blog-what-is-data-observability/)对可观察性的调整。
- en: Consider this manifesto then a proposal for how to take the proven concepts
    of chaos engineering and apply them to the eccentric world of data.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，请把这个宣言视为如何将混乱工程的验证概念应用于数据这个特殊领域的提案。
- en: The 5 Laws Of Data Chaos Engineering
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据混乱工程的5条法则
- en: The principles and lessons of chaos engineering are a good place to start defining
    the contours of a data chaos engineering discipline. Our first law combines two
    of the most important.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 混乱工程的原则和经验教训是定义数据混乱工程学科轮廓的良好起点。我们的第一条法则结合了两个最重要的方面。
- en: 'First Law: Have a bias for production, but minimize the blast radius'
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第一条法则：对生产保持偏见，但要最小化爆炸半径
- en: There is a maxim among site reliability engineers that will ring true for every
    data engineer who has had the pleasure of the same SQL query return two different
    results across staging and production environments. That is, “Nothing acts like
    prod except for prod.”
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在站点可靠性工程师中有一句格言，对于每一位曾经历过相同SQL查询在测试和生产环境中返回不同结果的数据工程师来说，这句话一定会引起共鸣：“没有什么像生产环境那样运作，除了生产环境。”
- en: To that I would add, “production data too.” Data is just too creative and fluid
    for humans to anticipate. [Synthetic data](https://medium.com/cord-tech/the-advantages-and-disadvantages-of-synthetic-training-data-b3acbb68e116)
    has come a long way, and don’t get me wrong, it can be a piece of the puzzle,
    but it’s unlikely to simulate key edge cases.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我会补充一句：“生产数据也是如此。” 数据过于创造性和流动，难以被人类预见。[合成数据](https://medium.com/cord-tech/the-advantages-and-disadvantages-of-synthetic-training-data-b3acbb68e116)已经取得了很大进展，别误解我的意思，它可以是拼图中的一部分，但不太可能模拟关键的边缘情况。
- en: Like me, the mere thought of introducing points of failure into production systems
    probably makes your stomach churn. It’s terrifying. Some data engineers justifiably
    wonder, “Is this even necessary within a modern data stack where so many tools
    abstract the underlying infrastructure?”
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 像我一样，单单想到将故障点引入生产系统可能会让你感到不安。这是令人恐惧的。一些数据工程师正当地会怀疑：“在一个如此多工具抽象了基础设施的现代数据栈中，这真的有必要吗？”
- en: I’m afraid so. Remember, as the opening anecdote and J-Kidd’s snapped ligaments
    illustrated, the elasticity of the cloud is not a cure-all.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我也担心如此。正如开头的轶事和J-Kidd的韧带断裂所示，云的弹性并不是万能的。
- en: In fact, it’s that abstraction and opacity–along with the multiple integration
    points–that make it so important to stress test a modern data stack. An on-premise
    database may be more limiting, but data teams tend to understand its thresholds
    as they hit them more regularly during day to day operations.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，正是这种抽象性和不透明性——加上多个集成点——使得对现代数据堆栈进行压力测试变得如此重要。虽然本地数据库可能限制更多，但数据团队倾向于在日常操作中更频繁地遇到其阈值，因此对其有更好的理解。
- en: Let’s move past the philosophical objections for the moment, and dive into the
    practical. Data is different. Introducing fake data into a system won’t be helpful
    because the input changes the output. It’s going to get really messy too.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们暂时跳过哲学上的异议，深入实际。数据是不同的。将假数据引入系统不会有帮助，因为输入改变了输出。这也会变得非常混乱。
- en: 'That’s where the second part of the law comes into play: minimize the blast
    radius. There is a spectrum of chaos and tools that can be used:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是法律的第二部分发挥作用的地方：最小化爆炸半径。有一个混乱的光谱和可以使用的工具：
- en: In words only, “let’s say this failed, what would we do?”
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅用文字来说，“假设这失败了，我们该怎么办？”
- en: Synthetic data in production
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生产中的合成数据
- en: Techniques like data diff that allow you to test snippets of SQL code on production
    data
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 像数据差异化这样的技术允许你在生产数据上测试 SQL 代码片段
- en: Solutions like LakeFS allow you to do this on a bigger scale by creating “chaos
    branches” or complete snapshots of your production environment where you can use
    production data but with complete isolation.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 像 LakeFS 这样的解决方案允许你通过创建“混乱分支”或生产环境的完整快照，在更大规模上实现这一点，你可以使用生产数据，但完全隔离。
- en: Do it in prod, and practice your backfilling skills. After all, nothing acts
    like prod, but prod.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在生产环境中进行操作，并练习你的数据回填技能。毕竟，没有什么能像生产环境那样模拟生产环境。
- en: Starting with lesser chaotic scenarios is probably a good idea and will help
    you understand how to minimize the blast radius in production.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 从较少混乱的场景开始可能是个好主意，并将帮助你理解如何在生产环境中最小化爆炸半径。
- en: Deep-diving into real production incidents is also a great place to start. Does
    everyone really understand what exactly happened? Production incidents are chaos
    experiments that you’ve already paid for, so make sure that you are getting the
    most out of them.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 深入研究真实生产事件也是一个很好的起点。每个人真的理解发生了什么吗？生产事件是你已经支付的混乱实验，因此确保你从中获得最多的价值。
- en: Mitigating the blast radius may also include strategies like backing up applicable
    systems or having data observability or data quality monitoring solution in place
    to assist with the detection and resolution of data incidents.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 减少爆炸半径还可能包括诸如备份相关系统或拥有数据可观察性或数据质量监控解决方案的策略，以协助检测和解决数据事件。
- en: 'Second Law: Understand it’s never a perfect time (within reason)'
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第二法则：理解没有一个完美的时机（在合理范围内）
- en: Another chaos engineering principle holds to observe and understand “steady
    state behavior.”
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个混乱工程原则是观察和理解“稳定状态行为”。
- en: There is wisdom in this principle, but it is also important to understand the
    field of data engineering isn’t quite ready to measure by the standard of “5 9s”
    or 99.999% uptime.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这一原则有其智慧，但同样重要的是要理解，数据工程领域还未完全准备好按照“5 9s”或 99.999% 的正常运行时间标准进行衡量。
- en: Data systems are constantly in flux and there is a wider range of “steady state
    behavior.” There will be the temptation to delay the introduction of chaos until
    you’ve reached the mythical point of “readiness.” Well, you [can’t out-architect
    bad data](https://www.montecarlodata.com/blog-you-cant-out-architect-bad-data/)
    and no one is ever ready for chaos.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 数据系统始终处于变化中，并且有更广泛的“稳定状态行为”。会有诱惑推迟引入混乱，直到你达到了所谓的“准备”点。好吧，你[无法通过架构应对糟糕的数据](https://www.montecarlodata.com/blog-you-cant-out-architect-bad-data/)，也没有人真正准备好面对混乱。
- en: The Silicon Valley cliche of fail fast is applicable here. Or [to paraphrase
    Reid Hoffman](https://twitter.com/reidhoffman/status/847142924240379904?lang=en),
    if you aren’t embarrassed by the results of your first pre-mortem/fire drill/chaos
    introducing event, you introduced it too late.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 硅谷的“快速失败”陈词在这里适用。或者[引用 Reid Hoffman](https://twitter.com/reidhoffman/status/847142924240379904?lang=en)，如果你对第一次预演/火灾演习/引入混乱事件的结果不感到尴尬，那你引入它的时机太晚了。
- en: Introducing fake data incidents while you are dealing with real ones may seem
    silly, but ultimately this can help you get ahead by better understanding where
    you have been putting bandaids on larger issues that may need to be refactored.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理真实数据事件时引入假数据事件可能看起来很傻，但最终这可以帮助你更好地了解你在什么地方用创可贴解决了可能需要重构的更大问题。
- en: 'Third Law: Formulate hypotheses and identify variables at the system, code,
    and data levels'
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第三法则：制定假设并识别系统、代码和数据层级的变量
- en: Chaos engineering encourages forming hypotheses of how systems will react to
    understand what thresholds to monitor. It also encourages leveraging or mimicing
    past real-world incidents or likely incidents.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 混沌工程鼓励形成关于系统如何反应的假设，以了解需要监控的阈值。它也鼓励利用或模拟过去的真实世界事件或可能发生的事件。
- en: 'We’ll dive deeper into the details of this in the next section, but the important
    modification here is to ensure these span the system, code, and data levels. Variables
    at each level can create data incidents, some quick examples:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在下一节中深入探讨这些细节，但这里的重要修改是确保这些涵盖系统、代码和数据层级。每个层级的变量都可能产生数据事件，以下是一些快速示例：
- en: '**System**: You didn’t have the right permissions set in your data warehouse.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**系统**：你的数据仓库中没有设置正确的权限。'
- en: '**Code**: A bad left JOIN.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码**：一个糟糕的左连接。'
- en: '**Data**: A third-party sent you garbage columns with a bunch of NULLS.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据**：第三方发送给你带有一堆NULLS的垃圾列。'
- en: Simulating increased traffic levels and shutting down servers impact data systems,
    and those are important tests, but don’t neglect some of the more unique and fun
    ways data systems can break bad.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟增加的流量水平和关闭服务器会影响数据系统，这些都是重要的测试，但也不要忽视数据系统可能出现的独特和有趣的故障方式。
- en: 'Fourth Law: Everyone in one room (or at least Zoom call)'
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第四法则：所有人都在一个房间里（或者至少是Zoom通话）
- en: This law is based on the experience of my colleague, site reliability engineer,
    and chaos practitioner [Tim Tischler](https://www.linkedin.com/in/timtischler).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这个法则基于我的同事、站点可靠性工程师和混沌实践者[Tim Tischler](https://www.linkedin.com/in/timtischler)的经验。
- en: “Chaos engineering is just as much about people as it is systems. They evolve
    together and they can’t be separated. Half of the value from these exercises come
    from putting all the engineers in a room and asking, ‘what happens if we do X
    or if we do Y?’ You are guaranteed to get different answers. Once you simulate
    the event and see the result, now everyone’s mental maps are aligned. That is
    incredibly valuable,” he said.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: “混沌工程不仅关乎系统，也关乎人。这两者一起演变，无法分开。这些练习的一半价值来自于把所有工程师放在一个房间里，问‘如果我们做X或者做Y，会发生什么？’你一定会得到不同的答案。一旦你模拟了事件并看到了结果，现在每个人的思维地图都一致了。这是非常宝贵的，”他说。
- en: Also, the interdependence of data systems and responsibilities creates blurry
    lines of ownership even on the most well-run teams. Breaks often happen, and are
    overlooked, in those overlaps and gaps in responsibility where the data engineer,
    analytical engineer, and data analyst are pointing at the other.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，数据系统和职责的相互依赖性即使在最好的团队中也会造成所有权模糊。常常在这些重叠和责任空白的地方发生并被忽视，例如数据工程师、分析工程师和数据分析师互相指责的地方。
- en: In many organizations, the product engineers creating the data and the data
    engineers managing it are separated and siloed by team structures. They also often
    have different tools and models of the same system and data. Feel free to pull
    these product engineers in as well, especially when the data has been generated
    from internally built systems.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多组织中，创建数据的产品工程师和管理数据的数据工程师被团队结构分隔开。他们还常常拥有不同的工具和相同系统与数据的模型。尤其是当数据来自内部构建的系统时，欢迎把这些产品工程师也拉进来。
- en: Good incident management and triage can often involve multiple teams and having
    everyone in one room can make the exercise more productive.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 良好的事件管理和分类通常涉及多个团队，把每个人都放在一个房间里可以让练习更高效。
- en: I’ll also add from personal experience that these exercises can be fun (in the
    same weird way putting all your chips on red is fun). I’d encourage data teams
    to consider a chaos data engineering fire drill or pre-mortem event at the next
    offsite. It makes for a much more practical team bonding exercise than getting
    out of an escape room.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我也从个人经验中补充，这些练习可以很有趣（以同样奇怪的方式，就像把所有筹码押在红色上很有趣）。我建议数据团队在下一次离线会议中考虑进行一次混沌数据工程演习或预先检讨活动。相比于逃脱房间，这更是一种实际的团队凝聚力练习。
- en: 'Fifth Law: Hold off on the automation for now'
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第五法则：暂时不要自动化
- en: Truly mature chaos engineering programs like Netflix’s Simian Army are automated
    and even unscheduled. While this may create a more accurate simulation, the reality
    is that the automated tools don’t currently exist for data engineering. If they
    did, I’m unsure if I would be brave enough to use them.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 像 Netflix 的 Simian Army 这样的真正成熟的混沌工程程序是自动化的，甚至是非计划的。虽然这可能创造出更准确的模拟，但现实情况是，目前数据工程还没有自动化工具。如果有的话，我不确定自己是否足够勇敢去使用它们。
- en: To this point, one of the original Netflix chaos engineers [has described](https://medium.com/@njones_18523/chaos-engineering-traps-e3486c526059)
    how they didn’t always use automation as the chaos could create more problems
    than they could fix (especially in collaboration with those running the system)
    in a reasonable period of time.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，Netflix 的一位原始混沌工程师 [描述过](https://medium.com/@njones_18523/chaos-engineering-traps-e3486c526059)
    他们并不总是使用自动化，因为混沌可能会比他们能解决的问题更多（特别是在与运行系统的人员合作时），在合理的时间内解决这些问题。
- en: Given data engineering’s current reliability evolution and the greater potential
    for an unintentionally large blast radius, I would recommend data teams lean more
    towards scheduled, carefully managed events.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于数据工程目前的可靠性演变以及潜在的意外大范围影响，我建议数据团队更倾向于安排有计划、仔细管理的事件。
- en: Data Chaos Engineering Variables, AKA What To Break
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据混沌工程变量，也就是要破坏的内容
- en: It would be a bit of a cop out to suggest data engineers overhaul their processes
    and introduce greater levels of risk without providing more concrete examples
    of tests or the value that can be derived from them.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不提供更多具体的测试示例或从中获得的价值，建议数据工程师彻底改革他们的流程并引入更高的风险有些不够实际。
- en: Here are some suggestions.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些建议。
- en: Systems Level
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 系统级别
- en: 'At this level you should be testing the integration points across your IT and
    data systems. This includes your data pipelines from ingestion and storage to
    orchestration and visualization. You could create some chaos by:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个级别，你应该测试你 IT 和数据系统之间的集成点。这包括从摄取和存储到编排和可视化的数据管道。你可以通过以下方式制造一些混乱：
- en: '**Creating problems in Postgres**- You may discover you need to decouple operational
    systems from your analytical systems.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在 Postgres 中制造问题**- 你可能会发现你需要将操作系统与分析系统解耦。'
- en: '**Killing Airflow jobs or Spark clusters-** You may discover you need alerts
    to notify the team when these failures occur and [self-healing pipeline design](https://www.startdataengineering.com/post/design-patterns/#32-behavioral).'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**终止 Airflow 作业或 Spark 集群**- 你可能会发现你需要警报来通知团队这些失败发生时，并 [自愈管道设计](https://www.startdataengineering.com/post/design-patterns/#32-behavioral)。'
- en: '**Changing up your number of Spark core executors**- [Zach Wilson has pointed
    out](https://www.linkedin.com/posts/eczachly_dataengineering-activity-7023802704107888640-kAtW?utm_source=share&utm_medium=member_desktop)
    how adding more Spark executor cores can negatively impact reliability without
    boosting performance. Experiment with that.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**改变 Spark 核心执行器的数量**- [Zach Wilson 指出](https://www.linkedin.com/posts/eczachly_dataengineering-activity-7023802704107888640-kAtW?utm_source=share&utm_medium=member_desktop)
    增加更多的 Spark 执行器核心可能会负面影响可靠性而不是提升性能。对此进行实验。'
- en: '**Adjust the auto-suspend policy in Snowflake**- A lot of teams are working
    to optimize their data cloud costs and it’s easy to cut a bit too deep and cause
    reliability issues. For example, if you set the auto-suspend more tightly than
    any gaps in your query workload, the warehouse could end up in a continual state
    of auto-suspend and auto-resume. This might help you discover you need to re-organize
    and categorize your data workloads by data warehouse size. Or, maybe be a bit
    more judicious on who has permission and authority to make these types of changes.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**调整 Snowflake 中的自动挂起策略**- 很多团队正在努力优化他们的数据云成本，很容易削减过度而导致可靠性问题。例如，如果你将自动挂起设置得比查询负载中的任何间隙都要严格，数据仓库可能会陷入持续的自动挂起和自动恢复状态。这可能帮助你发现你需要按数据仓库大小重新组织和分类数据工作负载。或者，可能对谁有权限和权威进行这些类型的更改要更加审慎。'
- en: '**Unpublish a dashboard**- I call this the scream test. If no one says anything
    weeks after unpublishing a dashboard, chances are you can retire it. This can
    also help test your detection and communication skills across data engineering
    and analyst teams.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**取消发布仪表盘**- 我称之为尖叫测试。如果在取消发布仪表盘几周后没有人提及，可能可以考虑淘汰它。这也可以帮助测试你在数据工程和分析团队中的检测和沟通技能。'
- en: '**Simulate a connection failure with your streaming pipelines**- The Mercari
    data team [deftly fixed this issue quickly](https://www.montecarlodata.com/blog-mercari-data-reliability-engineering/)
    thanks to data monitoring alerts. They are tentatively planning to simulate similar
    issues to drill their detection, triage, and resolution processes.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模拟流处理管道的连接失败**- Mercari数据团队[迅速巧妙地解决了这个问题](https://www.montecarlodata.com/blog-mercari-data-reliability-engineering/)，得益于数据监控警报。他们暂时计划模拟类似问题，以训练他们的检测、处理和解决流程。'
- en: “The idea is we’ll roleplay an alert from a particular dataset and walk through
    the steps for triage, root cause analysis, and communicating with the business,”
    said Daniel, member of the Mercari data reliability engineering team. “By seeing
    them in action, we can better understand the recovery plans, how we prioritize
    to ensure the most essential tables are recovered first, and how we communicate
    this with a team that spans across four time zones.”
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: “我们的想法是通过角色扮演特定数据集的警报，并逐步演示事件处理、根本原因分析和与业务沟通的过程，”Mercari数据可靠性工程团队的成员Daniel说道。“通过实际演练，我们可以更好地了解恢复计划，如何优先确保最重要的表格首先恢复，以及如何与跨越四个时区的团队沟通。”
- en: Code Level
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代码层
- en: '![](../Images/2b7956036c7bc4e6b3db04b443f0fa7a.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2b7956036c7bc4e6b3db04b443f0fa7a.png)'
- en: '*What happens when you remove that block (of code) does it all come crashing
    down? Photo by* [*Michał Parzuchowski*](https://unsplash.com/@mparzuchowski?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    *on* [*Unsplash*](https://unsplash.com/s/photos/jenga?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '*当你移除那段代码块时，会发生什么？一切都会崩溃吗？照片由* [*Michał Parzuchowski*](https://unsplash.com/@mparzuchowski?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    *拍摄，发布于* [*Unsplash*](https://unsplash.com/s/photos/jenga?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)'
- en: This level is the T (transformation) in the ETL or ELT process. What happens
    when something goes wrong in your dbt models or SQL queries? Time to find out!
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这个层级是ETL或ELT过程中的T（转换）。当你的dbt模型或SQL查询出现问题时会发生什么？是时候了解一下了！
- en: '**Archive a dbt model-** Similar to the dashboard scream test or Jenga. Is
    that model really needed or does the structure hold just fine when you remove
    a block? This can help evaluate your testing and monitoring; whether there are
    unknown dependencies; and lines of ownership.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**存档一个dbt模型**- 类似于仪表板的极限测试或积木游戏。这个模型真的需要吗？还是当你移除一个块时结构仍然稳定？这有助于评估你的测试和监控；是否存在未知的依赖关系；以及所有权的划分。'
- en: '**Adjust how a key metric is calculated-**When there are multiple versions
    of truth within an organization, trust in data is inevitably undermined by conflicting
    trends. Do changes to a key metric flow to all your downstream reports? Are there
    rogue definitions floating around? This can help evaluate the organizational process
    for defining key metrics and whether you might need to invest in a [sema](https://www.getdbt.com/product/semantic-layer/)n[tic
    layer](https://www.getdbt.com/product/semantic-layer/).'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**调整关键指标的计算方式**- 当组织内存在多个“真实”版本时，相互冲突的趋势不可避免地会削弱对数据的信任。关键指标的变更是否会流动到所有下游报告中？是否存在不规范的定义？这有助于评估定义关键指标的组织流程，以及你是否需要投资于一个[语义层](https://www.getdbt.com/product/semantic-layer/)。'
- en: '**Have other domains interpret your models or SQL code**- Sure, one engineer
    or team might understand the models in a particular domain, but what happens when
    others need to understand? Is it well documented? Can others help triage incidents?'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**让其他领域解读你的模型或SQL代码**- 当然，某个工程师或团队可能理解特定领域中的模型，但当其他人需要理解时会发生什么？是否有良好的文档？其他人能否协助处理事件？'
- en: Data Level
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据层
- en: Where software engineers also deal with reliability issues at the code and system
    level, only data engineers must address potential issues at the data level. Have
    I mentioned that data is different?
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 软件工程师在代码和系统层面也处理可靠性问题，而只有数据工程师必须在数据层面解决潜在问题。我提到过数据是不同的吗？
- en: This level can’t be neglected because your Airflow jobs may be running fine,
    your data diff may check out, but the data running across them might just be complete
    garbage. Garbage in, garbage out (and maybe systems down)
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 这个层级不能被忽视，因为你的Airflow任务可能运行正常，你的数据差异可能检查通过，但运行的数据可能完全是垃圾。垃圾进，垃圾出（也许系统崩溃）
- en: '**Change the schema-** Software engineers regularly and unintentionally commit
    code that changes how the data is output in a service, breaking downstream data
    pipelines. You may need to decouple systems and, for some operational pipelines,
    require a [data contract](https://www.montecarlodata.com/blog-data-contracts/)
    architecture in place (or some other process for better engineering coordination).'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**更改架构**—软件工程师经常无意中提交更改数据输出方式的代码，从而破坏下游数据管道。你可能需要解耦系统，并且对于某些操作管道，需要一个[数据契约](https://www.montecarlodata.com/blog-data-contracts/)架构（或其他更好的工程协调流程）。'
- en: '**Create bad data-** This may reveal your models aren’t robust against spikes
    of volume, NULLs, etc in their source tables.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**生成错误数据**—这可能会暴露出你的模型对数据源表中的波动、空值等不够稳健。'
- en: '**Duplicate the data**- Does a spike in data reveal bottlenecks causing jobs
    to fail? Do you need to microbatch certain pipelines? Are your pipelines idempotent
    where they need to be?'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**复制数据**—数据的剧增是否暴露出导致作业失败的瓶颈？你是否需要对某些管道进行微批处理？你的管道在需要时是否具备幂等性？'
- en: We’re Talking About Practice
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们在谈论训练
- en: 'We started this manifesto with a point guard, perhaps it’s fitting we conclude
    with [this infamous 2002 quote](https://www.facebook.com/SportsCenter/videos/allen-iversons-practice-rant/470685314188618/)
    from shooting guard Allen Iverson as a warning for those who don’t buy into the
    “practice like you play” concept:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们以一个控球后卫开始了这个宣言，也许我们用[这句臭名昭著的2002年名言](https://www.facebook.com/SportsCenter/videos/allen-iversons-practice-rant/470685314188618/)来自由后卫艾伦·艾弗森作为对那些不相信“训练如同比赛”的警告，是合适的：
- en: '*“We’re in here talking about practice. I mean, listen, we’re talking about
    practice. Not a game! Not a game! Not a game! We’re talking about practice. Not
    a game; not the game that I go out there and die for and play every game like
    it’s my last, not the game, we’re talking about practice, man. I mean, how silly
    is that? We’re talking about practice.*'
  id: totrans-98
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*“我们在这里谈论的是训练。我是说，听着，我们在谈论训练。不是比赛！不是比赛！不是比赛！我们在谈论训练。不是比赛；不是我为之拼命并每场比赛都像是最后一场的比赛，不是比赛，我们在谈论的是训练，伙计。我的意思是，这有多荒谬？我们在谈论的是训练。*'
- en: ''
  id: totrans-99
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*I know I’m supposed to be there, I know I’m supposed to lead by example, I
    know that. And I’m not shoving it aside like it don’t mean anything. I know it’s
    important. I do. I honestly do. But we’re talking about practice, man. What are
    we talking about? Practice? We’re talking about practice, man!*'
  id: totrans-100
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*我知道我应该在这里，我知道我应该以身作则，我知道的。我并不是把它当作无关紧要的事情来推开。我知道这很重要。我知道的。我确实知道。但是我们在谈论的是训练，伙计。我们在谈论什么？训练？我们在谈论训练，伙计！*'
- en: ''
  id: totrans-101
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*We’re talking about practice! We’re talking about practice… We ain’t talking
    about the game! We’re talking about practice, man!”*'
  id: totrans-102
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*我们在谈论的是训练！我们在谈论的是训练……我们不是在谈论比赛！我们在谈论训练，伙计！”*'
- en: That year the 76ers lost in the Eastern Conference First Round of the playoffs
    to the Boston Celtics in five games. Iveson’s field goal percentage for the series
    was a tepid 38.1%.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 那一年，76人队在东部会议首轮季后赛中以五场比赛输给了波士顿凯尔特人队。艾弗森在系列赛中的投篮命中率为38.1%。
- en: '[Follow me](/@shane.murray5) on Medium for more stories on data leadership,
    applications of data science, and related topics. [Subscribe](/subscribe/@shane.murray5)
    to get my stories delivered to your inbox.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注我](/@shane.murray5) 在 Medium 上获取更多关于数据领导力、数据科学应用及相关主题的故事。 [订阅](/subscribe/@shane.murray5)
    以便将我的故事发送到你的邮箱。'
