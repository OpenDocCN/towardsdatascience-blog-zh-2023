- en: Build a Better Bar Chart with This Trick
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用这个技巧构建更好的条形图
- en: 原文：[https://towardsdatascience.com/build-a-better-bar-chart-with-this-trick-c66979cb17e1](https://towardsdatascience.com/build-a-better-bar-chart-with-this-trick-c66979cb17e1)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/build-a-better-bar-chart-with-this-trick-c66979cb17e1](https://towardsdatascience.com/build-a-better-bar-chart-with-this-trick-c66979cb17e1)
- en: (It’s really a seaborn scatter plot!)
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: （这实际上是一个 seaborn 散点图！）
- en: '[](https://medium.com/@lee_vaughan?source=post_page-----c66979cb17e1--------------------------------)[![Lee
    Vaughan](../Images/9f6b90bb76102f438ab0b9a4a62ffa3f.png)](https://medium.com/@lee_vaughan?source=post_page-----c66979cb17e1--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c66979cb17e1--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c66979cb17e1--------------------------------)
    [Lee Vaughan](https://medium.com/@lee_vaughan?source=post_page-----c66979cb17e1--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@lee_vaughan?source=post_page-----c66979cb17e1--------------------------------)[![Lee
    Vaughan](../Images/9f6b90bb76102f438ab0b9a4a62ffa3f.png)](https://medium.com/@lee_vaughan?source=post_page-----c66979cb17e1--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c66979cb17e1--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c66979cb17e1--------------------------------)
    [Lee Vaughan](https://medium.com/@lee_vaughan?source=post_page-----c66979cb17e1--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c66979cb17e1--------------------------------)
    ·7 min read·Aug 26, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c66979cb17e1--------------------------------)
    ·7 min read·2023年8月26日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/aa181f1216654de580fb8ce4d78dbe26.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/aa181f1216654de580fb8ce4d78dbe26.png)'
- en: Part of an “Age of Congress” scatter plot (all images by the author)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: “国会年龄”散点图的一部分（所有图片由作者提供）
- en: Whenever I need inspiration for effective visualizations, I browse [*The Economist*](https://www.economist.com/),
    the [*Visual Capitalist*](https://www.visualcapitalist.com/), or [*The Washington
    Post*](https://www.washingtonpost.com/). During one of these forays, I ran across
    an interesting infographic — similar to the one shown above — that plotted the
    age of each member of the US Congress against their generational cohort.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 每当我需要寻找有效的可视化灵感时，我都会浏览 [*经济学人*](https://www.economist.com/)、[*视觉资本家*](https://www.visualcapitalist.com/)
    或 [*华盛顿邮报*](https://www.washingtonpost.com/)。在其中一次探索中，我发现了一个有趣的信息图表——类似于上面展示的图表——它绘制了每个美国国会议员的年龄与他们的代际群体之间的关系。
- en: My first impression was that this was a *horizontal bar chart*, but closer inspection
    revealed that each bar was composed of multiple *markers*, making it a *scatter
    plot*. Each marker represented one member of Congress.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我的第一印象是这是一个 *水平条形图*，但仔细观察发现每个条形图由多个 *标记* 组成，使其成为一个 *散点图*。每个标记代表一个国会成员。
- en: In this *Quick Success Data Science* project, we’ll recreate this attractive
    chart using Python, pandas, and seaborn. Along the way, we’ll unlock a cornucopia
    of marker types you may not know exist.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个 *快速成功数据科学* 项目中，我们将使用 Python、pandas 和 seaborn 重建这个吸引人的图表。在这个过程中，我们将揭示一些你可能不知道存在的标记类型。
- en: Dataset
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据集
- en: Because the United States has [*Age of Candidacy*](https://en.wikipedia.org/wiki/Age_of_candidacy_laws_in_the_United_States)
    laws, the birthdays of members of Congress are part of the public record. You
    can find them in multiple places, including the [*Biographical Directory of the
    United States Congress*](https://bioguideretro.congress.gov/) and [Wikipedia](https://en.wikipedia.org/wiki/List_of_current_members_of_the_United_States_House_of_Representatives).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 由于美国有 [*候选资格年龄*](https://en.wikipedia.org/wiki/Age_of_candidacy_laws_in_the_United_States)
    法律，国会成员的生日属于公开记录。你可以在多个地方找到它们，包括 [*美国国会传记名录*](https://bioguideretro.congress.gov/)
    和 [维基百科](https://en.wikipedia.org/wiki/List_of_current_members_of_the_United_States_House_of_Representatives)。
- en: For convenience, I’ve already compiled a CSV file of the names of the current
    members of Congress, along with their birthdays, branch of government, and party,
    and stored it in this [Gist](https://gist.github.com/rlvaugh/35069885b74ca52a63aab217863440e0).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 为了方便，我已经编制了一个包含当前国会议员姓名、生日、政府分支和政党的 CSV 文件，并将其存储在这个 [Gist](https://gist.github.com/rlvaugh/35069885b74ca52a63aab217863440e0)
    中。
- en: The Code
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码
- en: The following code was written in Jupyter Lab and is described *by cell.*
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码是在 Jupyter Lab 中编写的，并且由单元格描述 *描述*。
- en: Importing Libraries
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入库
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Assigning Constants for the Generational Data
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为代际数据分配常量
- en: We’ll annotate the plot so that generational cohorts, such as *Baby Boomers*
    and *Gen X*, are highlighted. The following code calculates the current age spans
    for each cohort and includes lists for generation names and highlight colors.
    Because we want to treat these lists as *constants*, we’ll capitalize the names
    and use an underscore as a prefix.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将对图表进行标注，以突出显示诸如*婴儿潮一代*和*X世代*等代际群体。以下代码计算每个群体的当前年龄范围，并包含代际名称和突出显示颜色的列表。因为我们希望将这些列表视为*常量*，所以我们将名称大写，并使用下划线作为前缀。
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Converting Birthdays into Ages
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将生日转换为年龄
- en: To calculate each member’s age, we first must convert a reference date (8/25/2023)
    and the DataFrame’s "Birthday" column to *datetime* format using pandas’ `to_datetime()`
    method.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 为了计算每位成员的年龄，我们首先必须将参考日期（8/25/2023）和DataFrame的“Birthday”列转换为*datetime*格式，使用pandas的`to_datetime()`方法。
- en: Now that we have compatible, "date aware" formats, we can generate an "Age"
    column by subtracting the two values, extracting the number of days, and then
    converting the days to years by dividing by 365.25.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了兼容的、"日期感知"格式，我们可以通过减去这两个值，提取天数，然后将天数除以365.25来生成一个"年龄"列。
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/55d2d1c95c447e4a01fb3e4ad6b0cee5.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/55d2d1c95c447e4a01fb3e4ad6b0cee5.png)'
- en: The head of the initial DataFrame
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 初始DataFrame的头部
- en: Counting the Ages of the Members
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 计算成员的年龄
- en: We’ll ultimately want to group the members by *party* and *branch of government*.
    That means we’ll need to generate *four* separate plots. (We’ll include the 3
    independents with the Democrats, with whom they caucus).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们最终希望按*党派*和*政府分支*对成员进行分组。这意味着我们需要生成*四个*单独的图表。（我们将与民主党一起包含3位独立人士，他们与民主党一起开会）。
- en: Unlike with a simple *bar chart*, we’ll need to know more than just the *total*
    number of, say, Republican senators with an age of 57 years. Because we want to
    plot a *separate mark* for *each member* in a specific age category, we need a
    *running* total. This way, we can use (count, age) values as the (x, y) coordinates
    in our scatterplot. So, the first Republican senator with an age of 57 will be
    assigned a “1” in a *count* column, the second senator will be assigned a “2,”
    and so on.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 与简单的*条形图*不同，我们需要知道的不仅仅是，比如说，57岁共和党参议员的*总数*。由于我们想为特定年龄类别的*每个成员*绘制*单独的标记*，我们需要一个*累计*总数。这样，我们可以使用（计数，年龄）值作为散点图中的（x，y）坐标。因此，第一位57岁共和党参议员将在*计数*列中标记为“1”，第二位参议员标记为“2”，以此类推。
- en: To manage this, we’ll first set up four DataFrame columns to hold the counts,
    then make four corresponding dictionaries to record the initial counts. We’ll
    use the `collections` module's `[defaultdict()](https://docs.python.org/3/library/collections.html#defaultdict-objects)`
    container, rather than a standard dictionary, as it will provide a *default* value
    for a key that doesn't exist, rather than raising an annoying `KeyError`.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 为了管理这一点，我们将首先设置四个DataFrame列来保存计数，然后制作四个相应的字典来记录初始计数。我们将使用`collections`模块的`[defaultdict()](https://docs.python.org/3/library/collections.html#defaultdict-objects)`容器，而不是标准字典，因为它会为不存在的键提供*默认*值，而不是引发令人烦恼的`KeyError`。
- en: Next, we’ll iterate through our DataFrame, filtering on the “Branch” and “Party”
    columns. We’ll update the “Age” column each time we increment the dictionary.
    This allows us to keep a running count of matching ages.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将遍历DataFrame，按“Branch”和“Party”列进行过滤。每次我们增加字典时，我们将更新“Age”列。这使我们能够保持匹配年龄的累积计数。
- en: Note that we use *negative* values for the Democrat counts, as we want them
    to plot to the left of a central axis, while Republican values plot to the right.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们使用*负数*值来表示民主党计数，因为我们希望它们绘制在中央轴的左侧，而共和党的值绘制在右侧。
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/d954bf603d4e418129001089ef2359c8.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d954bf603d4e418129001089ef2359c8.png)'
- en: Masking Zero Counts
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 遮蔽零计数
- en: We don’t want to plot zeroes, so we’ll use a mask to convert these values to
    `NaN` (*Not-a-Number*) values in our DataFrame.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不想绘制零值，因此我们将使用掩码将这些值转换为DataFrame中的`NaN`（*非数字*）值。
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/be49d7a2b2bc26f1e92b930bd3df4639.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/be49d7a2b2bc26f1e92b930bd3df4639.png)'
- en: Defining a Function to Make the Plot
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义绘图函数
- en: As mentioned previously, we’ll make *four* plots. To avoid repeating code, we’ll
    encapsulate the plotting instructions into a reusable function.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，我们将制作*四个*图表。为了避免重复代码，我们将把绘图指令封装到一个可重用的函数中。
- en: The function will take as arguments a DataFrame, the name of a matplotlib axes
    object, the column to use as an x-coordinate, a color, and a title. we’ll turn
    *off* most of seaborn’s default settings, such as axis ticks and labels, so that
    our plot is as clean and sparse as possible.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数将接受一个DataFrame、一个matplotlib轴对象的名称、作为x坐标的列、一个颜色和一个标题作为参数。我们会关闭seaborn的大部分默认设置，比如轴刻度和标签，以便我们的图形尽可能干净和简洁。
- en: An important component of this plot is the *rectangle* used as a marker for
    each congressional member (`marker=$\u25AC$`). This marker isn't part of the standard
    matplotlib [collection](https://matplotlib.org/stable/api/markers_api.html) but
    is part of the *STIX font symbols*. You can find a listing of these alternative
    markers [here](http://mirrors.ibiblio.org/CTAN/fonts/stix/doc/stix.pdf).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这个图的一个重要组成部分是用于每个国会议员的*矩形*标记（`marker=$\u25AC$`）。这个标记不是标准matplotlib [集合](https://matplotlib.org/stable/api/markers_api.html)的一部分，而是*STIX字体符号*的一部分。你可以在[这里](http://mirrors.ibiblio.org/CTAN/fonts/stix/doc/stix.pdf)找到这些替代标记的列表。
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Plotting the Figure
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绘制图形
- en: The following code sets up the figure and calls the `make_plot()` function four
    times. It finishes by adding a supertitle and a custom legend.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码设置了图形并调用了`make_plot()`函数四次。最后添加了超级标题和自定义图例。
- en: '[PRE6]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/3f714add75e2daff6825673dbb227332.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3f714add75e2daff6825673dbb227332.png)'
- en: The final plot.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 最终的图形。
- en: Conclusion
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: The best infographics tell stories with a clean, eye-catching style. Just as
    really well-written Python code requires few to no comments, great infographics
    don’t require a lot of labels or annotations.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳信息图以干净、引人注目的风格讲述故事。正如写得很好的Python代码几乎不需要注释一样，优秀的信息图也不需要很多标签或注释。
- en: In this project, we used pandas to load and prepare the data and seaborn to
    generate a scatter plot that mimics a bar chart. A key feature of this plot was
    the use of a *STIX font symbol* for the rectangular markers.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，我们使用pandas加载和准备数据，并使用seaborn生成一个模仿条形图的散点图。这个图的一个关键特性是使用*STIX字体符号*作为矩形标记。
- en: For datasets with many low-count values, this scatter plot approach is more
    visually pleasing than a standard bar chart where many of the bars will be short
    in length. Additionally, representing each member with a distinct marker “personalizes”
    the data more than showing a single bar for multiple members.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 对于具有许多低计数值的数据集，这种散点图方法比标准条形图更具视觉吸引力，因为条形图中的许多条形会很短。此外，用不同的标记表示每个成员比为多个成员显示单一条形图更能“个性化”数据。
- en: Thanks!
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 谢谢！
- en: Thanks for reading and please follow me for more *Quick Success Data Science*
    projects in the future.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读，请关注我以获取更多*快速成功数据科学*项目。
