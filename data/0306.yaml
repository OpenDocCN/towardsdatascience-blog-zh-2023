- en: How to get started with TensorFlow using Keras API and Google Colab
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用 Keras API 和 Google Colab 开始使用 TensorFlow
- en: 原文：[https://towardsdatascience.com/how-to-set-started-with-tensorflow-using-keras-api-and-google-colab-5421e5e4ef56?source=collection_archive---------0-----------------------#2023-01-19](https://towardsdatascience.com/how-to-set-started-with-tensorflow-using-keras-api-and-google-colab-5421e5e4ef56?source=collection_archive---------0-----------------------#2023-01-19)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-set-started-with-tensorflow-using-keras-api-and-google-colab-5421e5e4ef56?source=collection_archive---------0-----------------------#2023-01-19](https://towardsdatascience.com/how-to-set-started-with-tensorflow-using-keras-api-and-google-colab-5421e5e4ef56?source=collection_archive---------0-----------------------#2023-01-19)
- en: Step-by-step tutorial to analyze human activity with neuronal networks
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 逐步教程，使用神经网络分析人类活动
- en: '[](https://medium.com/@jonas_dieckmann?source=post_page-----5421e5e4ef56--------------------------------)[![Jonas
    Dieckmann](../Images/e1f2d236e6bda6ec1e14fd5eaa9d205e.png)](https://medium.com/@jonas_dieckmann?source=post_page-----5421e5e4ef56--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5421e5e4ef56--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5421e5e4ef56--------------------------------)
    [Jonas Dieckmann](https://medium.com/@jonas_dieckmann?source=post_page-----5421e5e4ef56--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@jonas_dieckmann?source=post_page-----5421e5e4ef56--------------------------------)[![Jonas
    Dieckmann](../Images/e1f2d236e6bda6ec1e14fd5eaa9d205e.png)](https://medium.com/@jonas_dieckmann?source=post_page-----5421e5e4ef56--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5421e5e4ef56--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5421e5e4ef56--------------------------------)
    [Jonas Dieckmann](https://medium.com/@jonas_dieckmann?source=post_page-----5421e5e4ef56--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1c8d1cf684f2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-set-started-with-tensorflow-using-keras-api-and-google-colab-5421e5e4ef56&user=Jonas+Dieckmann&userId=1c8d1cf684f2&source=post_page-1c8d1cf684f2----5421e5e4ef56---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----5421e5e4ef56--------------------------------)
    ·11 min read·Jan 19, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5421e5e4ef56&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-set-started-with-tensorflow-using-keras-api-and-google-colab-5421e5e4ef56&user=Jonas+Dieckmann&userId=1c8d1cf684f2&source=-----5421e5e4ef56---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1c8d1cf684f2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-set-started-with-tensorflow-using-keras-api-and-google-colab-5421e5e4ef56&user=Jonas+Dieckmann&userId=1c8d1cf684f2&source=post_page-1c8d1cf684f2----5421e5e4ef56---------------------post_header-----------)
    发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----5421e5e4ef56--------------------------------)
    ·11分钟阅读·2023年1月19日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5421e5e4ef56&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-set-started-with-tensorflow-using-keras-api-and-google-colab-5421e5e4ef56&user=Jonas+Dieckmann&userId=1c8d1cf684f2&source=-----5421e5e4ef56---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5421e5e4ef56&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-set-started-with-tensorflow-using-keras-api-and-google-colab-5421e5e4ef56&source=-----5421e5e4ef56---------------------bookmark_footer-----------)![](../Images/353e84cb61462300012ad7c85781491c.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5421e5e4ef56&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-set-started-with-tensorflow-using-keras-api-and-google-colab-5421e5e4ef56&source=-----5421e5e4ef56---------------------bookmark_footer-----------)![](../Images/353e84cb61462300012ad7c85781491c.png)'
- en: Image by [Serghei Trofimov](https://unsplash.com/@sergeytrofimov) on [Unsplash](https://unsplash.com/)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Serghei Trofimov](https://unsplash.com/@sergeytrofimov) 提供，来源于 [Unsplash](https://unsplash.com/)
- en: 'This beginner tutorial aims to give a brief overview of the fundamentals of
    TensorFlow and to guide you through a hands-on project. The tutorial might be
    of value to you, if:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本初学者教程旨在简要概述 TensorFlow 的基本知识，并指导你完成一个实践项目。如果你符合以下条件，本教程可能对你有价值：
- en: you have built your first traditional machine learning models and now you are
    curious about how to get started with your first TensorFlow model.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你已经建立了第一个传统的机器学习模型，现在你对如何开始使用第一个 TensorFlow 模型感到好奇。
- en: you have explored the basic concepts of TensorFlow already but you are looking
    for a practical challenge to improve your skills.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你已经探讨了 TensorFlow 的基本概念，但正在寻找一个实际挑战来提升你的技能。
- en: In case you are completely new to data science or machine learning models, I
    recommend focusing on other tutorials first as it will be crucial to have a basic
    understanding first.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对数据科学或机器学习模型完全陌生，我建议你先集中关注其他教程，因为首先具备基本的理解是至关重要的。
- en: 'This article is structured into three main sections:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本文结构分为三个主要部分：
- en: '#1 Brief introduction to TensorFlow and Keras API'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '#1 TensorFlow 和 Keras API 的简要介绍'
- en: '#2 Tutorial on how to set up TensorFlow using Google Colab (for free)'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '#2 使用 Google Colab 设置 TensorFlow 的教程（免费）'
- en: '#3 Hands-on project: Human activity classification'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '#3 实践项目：人体活动分类'
- en: '#1 Brief introduction to TensorFlow and Keras API'
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '#1 TensorFlow 和 Keras API 的简要介绍'
- en: If you are completely new to TensorFlow, I recommend the following video, where
    the main concepts and different layer structures are explained in a short but
    good way. This is not a comprehensive lecture, but it gives a good introduction
    to the topic itself.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对 TensorFlow 完全陌生，我推荐以下视频，其中主要概念和不同的层结构以简短但有效的方式进行了解释。这不是一门全面的讲座，但它对主题本身提供了一个很好的介绍。
- en: While TensorFlow is the underlying Machine Learning platform, Keras on the other
    side is an API that will help you to set up your models in a fast way and reduces
    the manual coding effort.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 TensorFlow 是基础的机器学习平台，但 Keras 另一方面是一个 API，可以帮助你快速设置模型，并减少手动编码工作。
- en: Keras is a deep learning API written in Python, running on top of the machine
    learning platform TensorFlow. It was developed with a focus on enabling **fast
    experimentation**. Being able to go from idea to result as fast as possible is
    key to doing good research. [[https://keras.io/about](https://keras.io/about/)]
  id: totrans-20
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Keras 是一个用 Python 编写的深度学习 API，运行在机器学习平台 TensorFlow 之上。它的开发重点是实现**快速实验**。能够尽快从想法到结果是做出好研究的关键。[[https://keras.io/about](https://keras.io/about/)]
- en: 'The development team states that Keras is:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 开发团队表示 Keras 是：
- en: '**Simple** — but not simplistic. Keras reduces developer *cognitive load* to
    free you to focus on the parts of the problem that matter.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**简单** — 但不简单化。Keras 减少了开发者的*认知负担*，让你可以专注于问题中重要的部分。'
- en: '**Flexible** — Keras adopts the principle of *progressive disclosure of complexity*:
    simple workflows should be quick and easy, while arbitrarily advanced workflows
    should be *possible* via a clear path that builds upon what you’ve already learned.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**灵活** — Keras 采用了*逐步披露复杂性的原则*：简单的工作流程应该快速且简单，而任意高级的工作流程应该*可能*通过一个清晰的路径构建在你已经学到的东西上。'
- en: '**Powerful** — Keras provides industry-strength performance and scalability:
    it is used by organizations and companies including NASA, YouTube, and Waymo.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**强大** — Keras 提供了行业级的性能和可扩展性：包括 NASA、YouTube 和 Waymo 在内的组织和公司都在使用它。'
- en: '*[again sourced from* [*https://keras.io/about*](https://keras.io/about/)*]*'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '*[再次来源于* [*https://keras.io/about*](https://keras.io/about/)*]*'
- en: '#2 Tutorial on how to set up TensorFlow using Google Colab (for free)'
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '#2 使用 Google Colab 设置 TensorFlow 的教程（免费）'
- en: A good piece of advice to use TensorFlow is to run it on a Graphics Processing
    Unit (GPU) or Tensor Processing Unit (TPU) instead of a normal Central Processing
    Unit (CPU) accelerator. While simple models and calculations might still work
    using a CPU, you might notice that the full capability of TensorFlow can only
    be appreciated on graphical hardware.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 TensorFlow 的一个好建议是将其运行在图形处理单元（GPU）或张量处理单元（TPU）上，而不是普通的中央处理单元（CPU）加速器。虽然简单的模型和计算可能仍能在
    CPU 上运行，但你可能会注意到，TensorFlow 的全部功能只能在图形硬件上充分发挥。
- en: The easiest and most straightforward way to make use of a GPU is the usage of
    [Google Colaboratory (“Colab”)](https://colab.research.google.com/) which is somewhat
    like “*a* *free Jupyter notebook environment that requires no setup and runs entirely
    in the cloud*.” While this tutorial claims more about the simplicity and advantages
    of Colab, there are drawbacks as limited GPU hours and reduced computing power
    compared to proper cloud environments. However, I believe Colab might not be a
    bad service to make the first steps with TensorFlow.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 GPU 最简单直接的方法是使用 [Google Colaboratory (“Colab”)](https://colab.research.google.com/)，这有点像“*一个*
    *无需设置且完全在云端运行的免费 Jupyter notebook 环境*。”虽然这个教程更多地谈论了 Colab 的简单性和优势，但也有缺点，如 GPU
    小时限制和计算能力降低，与真正的云环境相比。然而，我相信 Colab 可能不是一个不好的服务，可以用来迈出 TensorFlow 的第一步。
- en: 'To set up a basic environment for TensorFlow within Colab you can follow the
    next few steps:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Colab中为TensorFlow设置基本环境，你可以按照以下几个步骤进行：
- en: Open [https://colab.research.google.com/](https://colab.research.google.com/)
    and register for a free account
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开[https://colab.research.google.com/](https://colab.research.google.com/)并注册一个免费账户
- en: Create a new *notebook* within Colab
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Colab中创建一个新的*notebook*
- en: Select *Runtime* from the menu and *Change the runtime type*
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从菜单中选择*Runtime*并*更改运行时类型*
- en: Choose *GPU* from the *Hardware accelerator* options - click *save*
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从*硬件加速器*选项中选择*GPU* - 点击*保存*
- en: '![](../Images/9b681b429296fef2ef10424b207c5d52.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9b681b429296fef2ef10424b207c5d52.png)'
- en: The screenshot was taken by the author from [Google Colab](https://colab.research.google.com/)
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这张截图由作者从[Google Colab](https://colab.research.google.com/)拍摄
- en: 'Now you can import TensorFlow and check that everything is set with the following
    few lines of code:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以导入TensorFlow，并使用以下几行代码检查一切是否设置妥当：
- en: You should see as output now a version displayed (e.g. “2.5.0”) as well as a
    physical device message that indicates GPU usage. Your Notebook is now ready to
    use TensorFlow in practice!
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你应该能看到输出中显示一个版本（例如“2.5.0”）以及一个指示GPU使用的物理设备消息。你的Notebook现在可以实际使用TensorFlow了！
- en: '#3 Hands-on project: Human activity classification'
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '#3 实践项目：人类活动分类'
- en: The following tutorial aims to analyze a dataset on human activity classification.
    The dataset consists of time series recordings from the inertial sensors of smartphones
    that are carried by people performing different activities.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 以下教程旨在分析一个关于人类活动分类的数据集。该数据集由携带不同活动的人的智能手机惯性传感器记录的时间序列组成。
- en: Background & dataset information
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 背景与数据集信息
- en: 'It is interesting to understand if simple smartphone measurements could be
    used to classify the physical activity a human is doing. The six activity classes
    are the following:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 了解简单的智能手机测量是否可以用来分类人类正在进行的身体活动是很有趣的。六种活动类别如下：
- en: Walking
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 走路
- en: Walking upstairs
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上楼
- en: Walking downstairs
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下楼
- en: Sitting
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 坐着
- en: Standing
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 站立
- en: Laying
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 躺着
- en: 'A short video describing the measurement and the different activities can be
    found here:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 描述测量和不同活动的短视频可以在这里找到：
- en: The outcome of such sensor-based classification models could be used by health
    applications or other smartphone apps to improve the user experience, to suggest
    activities based on the current recordings, or to track physical activities during
    the day.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这种基于传感器的分类模型的结果可以被健康应用程序或其他智能手机应用程序使用，以改善用户体验、根据当前记录建议活动或跟踪一天中的身体活动。
- en: 'The given dataset consists of measurements from the inertial sensors of smartphones
    that are carried by people performing different activities. In total, the dataset
    contains 10,299 entries and is split into 70% training data (7,352 entries) and
    30% test data (2,947 entries). The sensor signals (accelerometer and gyroscope)
    were pre-processed by applying noise filters and then sampled in fixed-width sliding
    windows. Each signal was recorded for the three coordinates (x, y, z) and can
    be seen as time series recording having 128 timestamps with their corresponding
    value. The target column contains the activity labels: WALKING, WALKING_UPSTAIRS,
    WALKING_DOWNSTAIRS, SITTING, STANDING, LAYING.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 给定的数据集包含来自智能手机惯性传感器的测量，这些智能手机由执行不同活动的人携带。数据集总共有10,299条记录，分为70%训练数据（7,352条记录）和30%测试数据（2,947条记录）。传感器信号（加速度计和陀螺仪）经过噪声过滤器预处理，然后在固定宽度滑动窗口中采样。每个信号记录了三个坐标（x，y，z），可以视为具有128个时间戳及其对应值的时间序列记录。目标列包含活动标签：WALKING,
    WALKING_UPSTAIRS, WALKING_DOWNSTAIRS, SITTING, STANDING, LAYING。
- en: All features of the training and test dataset are numeric (float), normalized,
    and bounded within -1 and 1\. Two example measurements along the 128 timestamps
    are present in Figure 1\. It is shown that each human activity has its characteristics
    across the three coordinates and over time. Hence, there is a chance to identify
    patterns and trends within the time series that indicates the activity class.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 训练和测试数据集的所有特征都是数字（浮点数），经过归一化处理，并限制在-1和1之间。图1中展示了沿128个时间戳的两个示例测量。显示出每个人类活动在三个坐标和时间上具有其特征。因此，有可能识别时间序列中的模式和趋势，这些模式和趋势指示活动类别。
- en: More information about the dataset and the background can be found in the readme
    file or [on this website](https://archive.ics.uci.edu/ml/datasets/human+activity+recognition+using+smartphones).
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 关于数据集和背景的更多信息可以在readme文件中找到，或[在此网站上](https://archive.ics.uci.edu/ml/datasets/human+activity+recognition+using+smartphones)。
- en: 'Step 01: Initial load of data & required libraries'
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤 01：初始数据加载和所需库
- en: 'To get started with the project, it is required to load the dataset into the
    Colab environment. Don’t worry too much about the code below, it just moves all
    the required files into your workspace:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始项目，需要将数据集加载到 Colab 环境中。不要过于担心下面的代码，它只是将所有必需的文件移动到你的工作空间：
- en: 'Not surprisingly, we need to import some required libraries to make our life
    easier. A vital library here is *of course* TensorFlow itself:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 不出所料，我们需要导入一些必需的库来简化工作。其中一个重要的库是 *当然* TensorFlow 本身：
- en: 'To simplify our tutorial, we will use only the available body data from the
    inertial signals. The dataset is already split into training (7352 entries) and
    test (2947 entries) datasets along 128-time series measurements and across 3 coordinates.
    To get proper datasets in the format of (n, 128,3), we can use the following code:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简化我们的教程，我们将仅使用来自惯性信号的可用身体数据。数据集已经分为训练集（7352 条数据）和测试集（2947 条数据），包含 128 个时间序列测量和
    3 个坐标。为了获得格式为 (n, 128, 3) 的数据集，我们可以使用以下代码：
- en: 'One last important step for preparation is the transformation of our target
    variables into a *one-hot-encoded* measurement. Instead of having a numerical
    value that indicates the categories (e.g. 0 = WALKING), we end up with having
    arrays, that contain the probability for each of the available categories (e.g.
    [1, 0, 0, 0, 0, 0] = WALKING or [0, 0, 0, 1, 0, 0] = SITTING) where there is a
    100% probability for the corresponding category in this case. This is important
    as TensorFlow will calculate the probability for each of the possible categories
    for us. Hence, we need to prepare the training data accordingly. The Keras API
    has a simple built-in function designed for that requirement. You will notice,
    that the shape of the target variable has changed from (n,) to (n, 6):'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 准备的最后一个重要步骤是将目标变量转换为 *独热编码* 测量。我们不再有表示类别的数值（例如 0 = WALKING），而是得到包含每个可用类别概率的数组（例如
    [1, 0, 0, 0, 0, 0] = WALKING 或 [0, 0, 0, 1, 0, 0] = SITTING），在这种情况下，某个类别的概率为 100%。这很重要，因为
    TensorFlow 会计算每个可能类别的概率。因此，我们需要相应地准备训练数据。Keras API 提供了一个简单的内置函数来满足这一要求。你会注意到，目标变量的形状从
    (n,) 变为 (n, 6)：
- en: 'Step 02: Plot some example time series'
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤 02：绘制一些示例时间序列
- en: In this tutorial, we will ignore a proper exploratory analysis section as we
    want to focus more on the usage of TensorFlow. However, it might make sense to
    plot some example time series at this stage, as it will give us a better understanding
    of the data that we would like to analyze for classification.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将忽略适当的探索性分析部分，因为我们想更多地关注 TensorFlow 的使用。然而，在这个阶段绘制一些示例时间序列可能是有意义的，因为这将帮助我们更好地理解我们希望用于分类的数据。
- en: 'We can now use the following code to plot some random measurements from the
    dataset. I have selected measurements 992 (walking) and 2481 (laying) to demonstrate
    the differences in the data:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以使用以下代码来绘制数据集中的一些随机测量。我选择了测量 992（走路）和 2481（躺着）来展示数据中的差异：
- en: The output can be seen below. You might identify already some differences in
    the human body measurements, depending on the underlying activity. Finally, it
    is our hope and chance to run a neuronal network model on the data that might
    predict our activity classes well. Let’s see!
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下图所示。你可能已经可以识别出人身体测量中的一些差异，取决于所进行的活动。最后，我们希望并有机会在数据上运行一个神经网络模型，该模型可能很好地预测我们的活动类别。让我们看看吧！
- en: '![](../Images/9804705a088a2015ab802c038476e947.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9804705a088a2015ab802c038476e947.png)'
- en: The screenshot was taken by the author from [Google Colab](https://colab.research.google.com/)
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 截图由作者从 [Google Colab](https://colab.research.google.com/) 获取。
- en: '![](../Images/2a39669469c55a96d9a290ec1f892ecf.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2a39669469c55a96d9a290ec1f892ecf.png)'
- en: The screenshot was taken by the author from [Google Colab](https://colab.research.google.com/)
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 截图由作者从 [Google Colab](https://colab.research.google.com/) 获取。
- en: 'Step 03: Build and train a neuronal network using Keras API'
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤 03：使用 Keras API 构建和训练神经网络
- en: To build and train neuronal networks in TensorFlow you need to split your available
    *training* data into *training and validation* subsets. TensorFlow will then use
    both to train the model and assess the progress using the validation loss and
    validation accuracy. You can vary the size of the accuracy data set but I used
    20% of the original training data in this case. The random state can be set to
    reproduce recognizable data splits at different times.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 TensorFlow 中构建和训练神经网络，你需要将可用的*训练*数据拆分为*训练和验证*子集。然后，TensorFlow 将使用这两部分来训练模型，并使用验证损失和验证准确度来评估进展。你可以调整准确度数据集的大小，但我在这种情况下使用了原始训练数据的
    20%。可以设置随机状态以在不同时间重现可识别的数据拆分。
- en: 'A best practice to monitor your model development through the training process
    is to set up *TensorBoard.* You can prepare your notebook with the following code,
    where you load the extension and create a *log writer*:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 监控模型在训练过程中的最佳实践是设置*TensorBoard*。你可以使用以下代码准备你的笔记本，其中加载扩展并创建一个*日志写入器*：
- en: 'To set up the neuronal network, you first need to decide what type of network
    you want to build. The simplest architecture is a linear stack of layers called
    a sequential model. You can create a sequential model by passing a list of layer
    instances to the constructor. To get started, you initiate your model:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置神经网络，你首先需要决定你想构建哪种类型的网络。最简单的架构是一个线性层堆栈，称为顺序模型。你可以通过将层实例的列表传递给构造函数来创建顺序模型。开始时，你可以初始化你的模型：
- en: '[PRE0]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: From this point, it is up to you to add any layers you would like to use. There
    exist good tutorials on the web that describe the different functionality of the
    layers. For this tutorial, we will only guide you through a simple working setup
    to let you run your first model successfully. Feel free to add and modify the
    architecture to beat my accuracy!
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 从这一点开始，你可以根据需要添加任何你想使用的层。网上有很多优秀的教程描述了这些层的不同功能。在本教程中，我们将仅引导你完成一个简单的工作设置，以便你成功运行第一个模型。随意添加和修改架构以提高我的准确率！
- en: 'Firstly, we add the **input layer** having the dimensions of our data set (128,3):'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们添加**输入层**，其维度为我们的数据集（128,3）：
- en: '[PRE1]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Secondly, we add a **one-dimensional convolutional layer** where we can set
    parameters for the number of filters and the kernel size. This layer will be followed
    by a **Batch Normalization layer** that will transform inputs so that they are
    standardized, meaning that they will have a mean of zero and a standard deviation
    of one
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，我们添加一个**一维卷积层**，在这里我们可以设置滤波器数量和卷积核大小。该层之后将跟随一个**批量归一化层**，它将转换输入，使其标准化，即均值为零，标准差为一。
- en: '[PRE2]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Thirdly, we add a **ReLu layer** and a **Global Average Pooling layer**. Finally,
    we need a **Dense layer** that activates our network into a six-class category
    output. Since we have a classification problem, we use the **softmax activation**
    function with six units (as we have six categories).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，我们添加一个**ReLu层**和一个**全局平均池化层**。最后，我们需要一个**Dense层**，将我们的网络激活为六类输出。由于这是一个分类问题，我们使用**softmax激活**函数，并设置六个单元（因为我们有六个类别）。
- en: '[PRE3]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: To train the model, we need to compile the model first with an appropriate optimizer.
    For our tutorial, I have selected the Adam optimizer where you can vary the learning
    rate.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 要训练模型，我们首先需要用合适的优化器编译模型。在本教程中，我选择了 Adam 优化器，你可以调整学习率。
- en: '[PRE4]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: To fit the model, we need to decide on how many epochs and on what batch size
    we want to run it. An epoch is the time step that is incremented every time it
    has gone through all the samples in the training set. The batch size is the number
    of data entries for every batch. To link our model to the TensorBoard monitoring,
    we add a callback and set the log directory.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 要训练模型，我们需要决定运行多少个周期以及每个批次的批量大小。一个周期是指每次通过所有训练集样本时的时间步长。批量大小是每个批次的数据条目数量。为了将我们的模型与
    TensorBoard 监控相链接，我们添加一个回调并设置日志目录。
- en: '[PRE5]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'When you run the code, you will see some output below your cell that gives
    you an indication of every training epoch. In TensorBoard you will be able to
    see the increasing accuracy as well as the decreasing loss for both, the training
    and the validation data. Once the training has run through all epochs it will
    stop automatically. The whole code for the model fitting is stated below:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行代码时，你会看到单元格下方的一些输出，这些输出指示每个训练周期的情况。在 TensorBoard 中，你将能够看到训练和验证数据的准确率逐渐提高以及损失逐渐减少。训练完成所有周期后，它将自动停止。以下是模型拟合的完整代码：
- en: Let us now try to understand what we have built and how the model developed
    over time during the training process. As you can see in the below screenshots,
    there is a significant improvement along the first 20 to 30 epochs and a moderate
    improvement afterward. The blue line indicates the accuracy and the loss for the
    training data set. The red line represents the validation data.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们尝试理解我们所构建的模型以及在训练过程中模型如何发展。正如下面的截图所示，在前20到30个训练周期中有显著的提升，之后的提升则较为温和。蓝线表示训练数据集的准确性和损失，红线表示验证数据集。
- en: '![](../Images/9fb8b6fdab2383445ab9fde605df3eb1.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9fb8b6fdab2383445ab9fde605df3eb1.png)'
- en: The screenshot was taken by the author from [Google Colab](https://colab.research.google.com/)
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 截图由作者从[Google Colab](https://colab.research.google.com/)中获取
- en: '![](../Images/540c177f0a4ab914878eb15fc248191b.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/540c177f0a4ab914878eb15fc248191b.png)'
- en: The screenshot was taken by the author from [Google Colab](https://colab.research.google.com/)
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 截图由作者从[Google Colab](https://colab.research.google.com/)中获取
- en: 'Overall, we did not do too badly and achieved a validation accuracy of 85.38%.
    A comparable development between training and validation loss indicates a non-overfitted
    training procedure. However, there is a chance to improve our model further. Feel
    free to explore this on your own. Some ideas are the following:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，我们做得还不错，达到了85.38%的验证准确性。训练损失和验证损失之间的可比发展表明训练过程没有过拟合。然而，仍有进一步改进模型的机会。请随意自行探索。以下是一些想法：
- en: play with the number of epochs, the batch size, and the learning rate
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试不同的训练周期、批量大小和学习率
- en: modify the amount of filter and kernel size in the Conv1D layer
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修改Conv1D层中的滤波器数量和内核大小
- en: add more layers and play around with different architectures
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加更多层并尝试不同的架构
- en: add the other data set to the model (besides the body data only)
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将其他数据集添加到模型中（除了仅有的身体数据）
- en: Finally, it is always the last step to assess the accuracy of the model on the
    test data set. So far, we trained the model using only the training and validation
    data. To apply our final model to the test data set you can use the code below.
    We calculate the probabilities for each of the six classes using our model. Afterward,
    we take the maximum probability per row and identify therefore the discrete class
    for that row.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，评估模型在测试数据集上的准确性始终是最后一步。到目前为止，我们只使用训练数据和验证数据训练了模型。要将最终模型应用于测试数据集，可以使用下面的代码。我们使用模型计算每个类别的概率。之后，我们取每行的最大概率，从而识别该行的离散类别。
- en: The test accuracy in my approach showed 84.42% and is therefore a bit lower
    than the validation accuracy, but on a similar level to the training accuracy.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我的方法中测试准确性为84.42%，因此稍低于验证准确性，但与训练准确性处于相似水平。
- en: 'Congratulations: you applied your first neuronal network using TensorFlow!'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜你：你使用TensorFlow应用了第一个神经网络！
- en: '*Please note that you will achieve different accuracy and loss values as TensorFlow
    cannot be reproduced in the same way. However, I expect your values to be around
    a range between 75% and 90%.*'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '*请注意，你将会获得不同的准确性和损失值，因为TensorFlow不能以相同的方式重现。然而，我预期你的值会在75%到90%之间。*'
- en: Summary
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: The idea of the above tutorial was to give you a practical hands-on idea to
    get started with TensorFlow and the Keras API. I am aware that it is not even
    close to a proper explanation or detailed description of the features. However,
    I hope this might *help some beginners to run their first model on their own*
    and to understand the basic pieces of the puzzle around TensorFlow.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 上述教程的目的是为你提供一个实际的入门思路，开始使用TensorFlow和Keras API。我知道这远不够详细或对特性的全面描述。然而，我希望这能*帮助一些初学者独立运行他们的第一个模型*，并理解TensorFlow周围的基本组成部分。
- en: Of course, there is so much more to explore. Try to beat our initial accuracy
    achievements and drop a comment with your achievement!
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，还有更多的内容等待探索。试着超越我们最初的准确性成就，并在评论中分享你的成果！
- en: '[](https://medium.com/@jonas_dieckmann?source=post_page-----5421e5e4ef56--------------------------------)
    [## Jonas Dieckmann - Medium'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@jonas_dieckmann?source=post_page-----5421e5e4ef56--------------------------------)
    [## Jonas Dieckmann - Medium'
- en: Read writing from Jonas Dieckmann on Medium. analytics manager & product owner
    @ philips | passionate and writing about…
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阅读Jonas Dieckmann在Medium上的文章。他是菲利普斯的分析经理和产品负责人，对…充满热情并撰写文章。
- en: medium.com](https://medium.com/@jonas_dieckmann?source=post_page-----5421e5e4ef56--------------------------------)
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '[medium.com](https://medium.com/@jonas_dieckmann?source=post_page-----5421e5e4ef56--------------------------------)'
- en: I hope you find it useful. Let me know your thoughts! And feel free to connect
    on LinkedIn [https://www.linkedin.com/in/jonas-dieckmann/](https://www.linkedin.com/in/jonas-dieckmann/)
    and/or to follow me here on medium.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你觉得有用。告诉我你的想法！也欢迎在 LinkedIn 上与我联系 [https://www.linkedin.com/in/jonas-dieckmann/](https://www.linkedin.com/in/jonas-dieckmann/)
    或在 Medium 上关注我。
- en: 'See also some of my other articles:'
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另见我其他的一些文章：
- en: '[](/case-study-applying-a-data-science-process-model-to-a-real-world-scenario-93ae57b682bf?source=post_page-----5421e5e4ef56--------------------------------)
    [## Case Study: Applying a Data Science Process Model to a Real-World Scenario'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/case-study-applying-a-data-science-process-model-to-a-real-world-scenario-93ae57b682bf?source=post_page-----5421e5e4ef56--------------------------------)
    [## 案例研究：将数据科学过程模型应用于现实世界场景'
- en: Development of a machine learning model for materials planning in the supply
    chain
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 供应链材料规划中的机器学习模型开发
- en: 'towardsdatascience.com](/case-study-applying-a-data-science-process-model-to-a-real-world-scenario-93ae57b682bf?source=post_page-----5421e5e4ef56--------------------------------)
    [](/introduction-to-ica-independent-component-analysis-b2c3c4720cd9?source=post_page-----5421e5e4ef56--------------------------------)
    [## Introduction to ICA: Independent Component Analysis'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/case-study-applying-a-data-science-process-model-to-a-real-world-scenario-93ae57b682bf?source=post_page-----5421e5e4ef56--------------------------------)
    [](/introduction-to-ica-independent-component-analysis-b2c3c4720cd9?source=post_page-----5421e5e4ef56--------------------------------)
    [## ICA简介：独立成分分析
- en: Have you ever found yourself in a situation where you were trying to analyze
    a complex and highly correlated data set…
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 你是否曾经遇到过需要分析一个复杂且高度相关的数据集的情况……
- en: towardsdatascience.com](/introduction-to-ica-independent-component-analysis-b2c3c4720cd9?source=post_page-----5421e5e4ef56--------------------------------)
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/introduction-to-ica-independent-component-analysis-b2c3c4720cd9?source=post_page-----5421e5e4ef56--------------------------------)
- en: References
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: Reyes-Ortiz,Jorge, Anguita,Davide, Ghio,Alessandro, Oneto,Luca & Parra,Xavier.
    (2012). Human Activity Recognition Using Smartphones. UCI Machine Learning Repository
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: Reyes-Ortiz, Jorge, Anguita, Davide, Ghio, Alessandro, Oneto, Luca & Parra,
    Xavier. (2012). 使用智能手机进行人类活动识别。UCI 机器学习库
- en: This used dataset is licensed under a [Creative Commons Attribution 4.0 International](https://creativecommons.org/licenses/by/4.0/legalcode)
    (CC BY 4.0) license. This allows for the sharing and adaptation of the datasets
    for any purpose, provided that the appropriate credit is given.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 本数据集使用了[知识共享署名 4.0 国际](https://creativecommons.org/licenses/by/4.0/legalcode)（CC
    BY 4.0）许可证。这允许出于任何目的共享和改编数据集，前提是给予适当的署名。
- en: For further information please visit [this site](https://archive-beta.ics.uci.edu/dataset/240/human+activity+recognition+using+smartphones).
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请访问[这个网站](https://archive-beta.ics.uci.edu/dataset/240/human+activity+recognition+using+smartphones)。
