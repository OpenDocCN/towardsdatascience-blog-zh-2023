- en: Why Your Data Pipelines Need Closed-Loop Feedback Control
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么你的数据管道需要闭环反馈控制
- en: 原文：[https://towardsdatascience.com/why-your-data-pipelines-need-closed-loop-feedback-control-76e28e3565f?source=collection_archive---------3-----------------------#2023-09-10](https://towardsdatascience.com/why-your-data-pipelines-need-closed-loop-feedback-control-76e28e3565f?source=collection_archive---------3-----------------------#2023-09-10)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/why-your-data-pipelines-need-closed-loop-feedback-control-76e28e3565f?source=collection_archive---------3-----------------------#2023-09-10](https://towardsdatascience.com/why-your-data-pipelines-need-closed-loop-feedback-control-76e28e3565f?source=collection_archive---------3-----------------------#2023-09-10)
- en: Realities of company and cloud complexities require new levels of control and
    autonomy to meet business goals at scale
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 公司和云的复杂性现实要求新的控制和自主水平，以在规模上实现业务目标
- en: '[](https://medium.com/@jeff.b.chou?source=post_page-----76e28e3565f--------------------------------)[![Jeff
    Chou](../Images/4b5b7a7f880209faf1e81806a0f9dfba.png)](https://medium.com/@jeff.b.chou?source=post_page-----76e28e3565f--------------------------------)[](https://towardsdatascience.com/?source=post_page-----76e28e3565f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----76e28e3565f--------------------------------)
    [Jeff Chou](https://medium.com/@jeff.b.chou?source=post_page-----76e28e3565f--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@jeff.b.chou?source=post_page-----76e28e3565f--------------------------------)[![Jeff
    Chou](../Images/4b5b7a7f880209faf1e81806a0f9dfba.png)](https://medium.com/@jeff.b.chou?source=post_page-----76e28e3565f--------------------------------)[](https://towardsdatascience.com/?source=post_page-----76e28e3565f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----76e28e3565f--------------------------------)
    [Jeff Chou](https://medium.com/@jeff.b.chou?source=post_page-----76e28e3565f--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F124878bdd082&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-your-data-pipelines-need-closed-loop-feedback-control-76e28e3565f&user=Jeff+Chou&userId=124878bdd082&source=post_page-124878bdd082----76e28e3565f---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----76e28e3565f--------------------------------)
    ·9 min read·Sep 10, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F76e28e3565f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-your-data-pipelines-need-closed-loop-feedback-control-76e28e3565f&user=Jeff+Chou&userId=124878bdd082&source=-----76e28e3565f---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F124878bdd082&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-your-data-pipelines-need-closed-loop-feedback-control-76e28e3565f&user=Jeff+Chou&userId=124878bdd082&source=post_page-124878bdd082----76e28e3565f---------------------post_header-----------)
    发表在[Towards Data Science](https://towardsdatascience.com/?source=post_page-----76e28e3565f--------------------------------)
    ·9分钟阅读·2023年9月10日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F76e28e3565f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-your-data-pipelines-need-closed-loop-feedback-control-76e28e3565f&user=Jeff+Chou&userId=124878bdd082&source=-----76e28e3565f---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F76e28e3565f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-your-data-pipelines-need-closed-loop-feedback-control-76e28e3565f&source=-----76e28e3565f---------------------bookmark_footer-----------)![](../Images/68dd4aa14a8847d5996f295619aad536.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F76e28e3565f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-your-data-pipelines-need-closed-loop-feedback-control-76e28e3565f&source=-----76e28e3565f---------------------bookmark_footer-----------)![](../Images/68dd4aa14a8847d5996f295619aad536.png)'
- en: Image by [**Cosmin Paduraru**](https://www.pexels.com/@padurarul/)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[**Cosmin Paduraru**](https://www.pexels.com/@padurarul/)提供
- en: '*As data teams scale up on the cloud, data platform teams need to ensure the
    workloads they are responsible for are meeting business objectives,* [*our main
    mission here at Sync*](https://www.synccomputing.com)*. At scale with dozens of
    data engineers building hundreds of production jobs, controlling their performance
    at scale is untenable for a myriad of reasons from technical to human.*'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '*随着数据团队在云上规模化，数据平台团队需要确保他们负责的工作负载达到业务目标，* [*这是我们Sync的主要任务*](https://www.synccomputing.com)*。在拥有数十名数据工程师和数百个生产作业的大规模环境下，由于技术和人为因素的种种原因，控制其性能变得不可行。*'
- en: The missing link today is the establishment of a [closed loop feedback system](https://en.wikipedia.org/wiki/Closed-loop_controller)
    that helps automatically drive pipeline infrastructure towards business goals.
    That was a mouthful, so let’s dive in and get more concrete about this problem.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 今天缺失的环节是建立一个 [闭环反馈系统](https://en.wikipedia.org/wiki/Closed-loop_controller)，它可以自动驱动管道基础设施向业务目标前进。这句话有些冗长，所以让我们深入探讨一下这个问题。
- en: '**The problem for data platform teams today**'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**今天数据平台团队面临的问题**'
- en: Data platform teams have to manage fundamentally distinct stakeholders from
    management to engineers. Oftentimes these two teams have opposing goals, and platform
    managers can be squeezed by both ends.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 数据平台团队必须管理从管理层到工程师的基本不同的利益相关者。这两组团队往往有相互对立的目标，平台经理可能会受到双方的挤压。
- en: 'Many real conversations we’ve had with platform managers and data engineers
    typically go like this:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们与平台经理和数据工程师的许多实际对话通常是这样的：
- en: '*“Our CEO wants me to lower cloud costs and make sure our SLAs are hit to keep
    our customers happy.”*'
  id: totrans-14
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*“我们的CEO希望我降低云成本，并确保我们的服务水平协议得到满足，以保持客户满意。”*'
- en: Okay, so what’s the problem?
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，那么问题是什么？
- en: '*“The problem is that I can’t actually change anything directly, I need other
    people to help and that is the bottleneck”*'
  id: totrans-16
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*“问题是我实际上不能直接更改任何东西，我需要其他人帮助，这就是瓶颈。”*'
- en: So basically, platform teams find themselves handcuffed and face enormous friction
    when trying to actually implement improvements. Let’s zoom into the reasons why.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 所以基本上，平台团队在实际实施改进时感到束手无策，面临巨大的摩擦。让我们深入探讨一下原因。
- en: '**What’s holding back the platform team?**'
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**是什么阻碍了平台团队？**'
- en: '**Data Teams are out of technical scope —** Tuning clusters or complex configurations
    (Databricks, Snowflake) is a time consuming task where data teams would rather
    be focusing on actual pipelines and SQL code. Many engineers don’t have the skillset,
    support structure, or even know what the costs are for their jobs. Identifying
    and solving root cause problems is also a daunting task that gets in the way of
    just standing up a functional pipeline.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据团队超出了技术范围 —** 调整集群或复杂配置（Databricks、Snowflake）是一项耗时的任务，数据团队更愿意集中精力在实际管道和SQL代码上。许多工程师没有相应的技能、支持结构，甚至不了解他们工作的成本。识别和解决根本原因问题也是一项令人生畏的任务，这阻碍了建立一个功能正常的管道。'
- en: '**Too many layers of abstraction —** Let’s just zoom in on one stack: Databricks
    runs their own version of Apache Spark, which runs on a cloud provider’s virtualized
    compute (AWS, Azure, GCP), with different network options, and different storage
    options (DBFS, S3, Blob), and by the way everything can be updated independently
    and randomly throughout the year. The amount of options is overwhelming and it’s
    impossible for platform folks to ensure everything is up to date and optimal.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**过多的抽象层 —** 让我们聚焦于一个堆栈：Databricks运行其自己版本的Apache Spark，该Spark运行在云提供商的虚拟计算上（AWS、Azure、GCP），配有不同的网络选项和不同的存储选项（DBFS、S3、Blob），而且所有这些都可以在一年中的任何时候独立和随机更新。选项的数量令人不堪重负，平台人员难以确保一切都是最新和最优的。'
- en: '**Legacy code —** One unfortunate reality is simply just legacy code. Oftentimes
    teams in a company can change, people come and go, and over time, the knowledge
    of any one particular job can fade away. This effect makes it even more difficult
    to tune or optimize a particular job.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**遗留代码 —** 一个不幸的现实就是遗留代码。公司内部的团队往往会发生变化，人来人往，随着时间的推移，任何一个特定工作所需的知识可能会逐渐消失。这种现象使得调整或优化特定工作变得更加困难。'
- en: '**Change is scary —** There’s an innate fear to change. If a production job
    is flowing, do we want to risk tweaking it? The old adage comes to mind: “if it
    ain’t broke, don’t fix it.” Oftentimes this fear is real, if a job is not idempotent
    or there are other downstream effects, a botched job can cause a real headache.
    This creates a psychological barrier to even trying to improve job performance.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**变化令人恐惧 —** 变革本能上是令人害怕的。如果一个生产任务正在进行，我们是否愿意冒险进行调整？老话说得好：“如果它没坏，就不要修。”这种恐惧往往是现实的，如果一个任务不是幂等的或存在其他下游影响，任务失败会带来真正的麻烦。这种心理障碍阻碍了对任务性能的改善尝试。'
- en: '**At scale there are too many jobs —** Typically platform managers oversee
    hundreds if not thousands of production jobs. Future company growth ensures this
    number will only increase. Given all of the points above, even if you had a local
    expert, going in and tweaking jobs one at a time is simply not realistic. While
    this can work for a select few high priority jobs, it leaves the bulk of a company’s
    workloads more or less uncared for.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在规模上，有太多作业 —** 通常平台经理负责监督数百甚至数千个生产作业。未来公司的增长确保这个数字只会增加。鉴于上述所有情况，即使你有一个本地专家，逐个调整作业也是不切实际的。虽然这对少数几个高优先级的作业可能有效，但它使公司的大部分工作负载或多或少被忽视了。'
- en: Clearly it’s an uphill battle for data platform teams to quickly make their
    systems more efficient at scale. We believe the solution is a paradigm shift in
    how pipelines are built. Pipelines need a closed loop control system that constantly
    drives a pipeline towards business goals without humans in the loop. Let’s dig
    in.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，对于数据平台团队来说，要快速提高系统在规模上的效率是一场艰难的战斗。我们相信解决方案在于管道构建方式的范式转变。管道需要一个闭环控制系统，它不断推动管道朝着业务目标前进，而无需人工干预。让我们深入探讨一下。
- en: '**What does closed loop feedback control for a pipeline mean?**'
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**闭环反馈控制对于管道意味着什么？**'
- en: Today’s pipelines are what is known as an “open loop” system in which jobs just
    run without any feedback. To illustrate what I’m talking about, pictured below
    shows where “Job 1” just runs every day, with a cost of $50 per run. Let’s say
    the business goal is for that job to cost $30\. Well, until somebody actually
    does something, that cost will remain at $50 for the foreseeable future — as seen
    in the cost vs. time plot.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当前的管道属于“开环”系统，即作业只是运行而没有任何反馈。为了说明我说的内容，下面的图片展示了“作业1”每天运行，每次运行的成本为$50。假设业务目标是将该作业的成本降至$30。那么，除非有人实际采取行动，否则成本将会在可预见的未来保持在$50，如成本与时间的图表所示。
- en: '![](../Images/5afa5613ac0347d3e68e56e2ec2b2ac3.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5afa5613ac0347d3e68e56e2ec2b2ac3.png)'
- en: Image by author
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: 'What if instead, we had a system that actually fed back the output statistics
    of the job so that the next day’s deployment can be improved? It would look something
    like this:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们有一个系统，实际反馈作业的输出统计数据，以便第二天的部署可以得到改进，会是什么样的呢？它可能会像这样：
- en: '![](../Images/56cb4fb26f7528c2ac4365daf93ad6a6.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/56cb4fb26f7528c2ac4365daf93ad6a6.png)'
- en: Image by author
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: What you see here is a [classic feedback loop](https://en.wikipedia.org/wiki/Control_loop#Open-loop_and_closed-loop),
    where in this case the desired “set point” is a cost of $30\. Since this job is
    run every day, we can take the feedback of the real cost and send it to an “update
    config” block that takes in the cost differential (in this case $20) and as a
    result apply a change in “Job 1’s configurations. For example, the “update config”
    block may reduce the number of nodes in the Databricks cluster.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 你看到的是一个[经典反馈循环](https://en.wikipedia.org/wiki/Control_loop#Open-loop_and_closed-loop)，在这种情况下，期望的“设定点”是$30的成本。由于这个任务每天运行，我们可以将实际成本的反馈发送到一个“更新配置”模块，该模块接收成本差异（在此例中为$20），从而对“作业1”的配置进行更改。例如，“更新配置”模块可能会减少Databricks集群中的节点数量。
- en: '**What does this look like in production?**'
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**这在生产环境中看起来是什么样的？**'
- en: In reality this doesn’t happen in a single shot. The “update config” model is
    now responsible for tweaking the infrastructure to try to get the cost down to
    $30\. As you can imagine, over time the system will improve and eventually hit
    the desired cost of $30, as shown in the image below.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，这并不是一蹴而就的。“更新配置”模型现在负责调整基础设施，尝试将成本降低到$30。正如你所想的，随着时间的推移，系统将会改进，并最终达到期望的$30成本，如下图所示。
- en: '![](../Images/1c8481d46b6ab156e9f3f1a16d6625d1.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1c8481d46b6ab156e9f3f1a16d6625d1.png)'
- en: Image by author
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: This may all sound fine and dandy, but you may be scratching your head and asking
    “what is this magical ‘update config’ block?” Well that’s where the rubber meets
    the road. That block is a mathematical model that can input a numerical goal delta,
    and output an infrastructure configuration or maybe code change.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这一切听起来可能很美好，但你可能会疑惑，“这个神奇的‘更新配置’模块是什么？”这就是问题的关键。这个模块是一个数学模型，它可以输入一个数值目标差异，并输出一个基础设施配置或代码更改。
- en: It’s not easy to make and will vary depending on the goal (e.g. costs vs. runtime
    vs. utilization). This model must fundamentally predict the impact of an infrastructure
    change on business goals — not an easy thing to do.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这不是一件容易的事情，并且会根据目标（例如成本 vs. 运行时间 vs. 利用率）而有所不同。这个模型必须基本预测基础设施变更对业务目标的影响 —— 这并不容易。
- en: '**Nobody can predict the future**'
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**没有人可以预测未来**'
- en: One subtle thing is that no “update config” model is 100% accurate. In the 4th
    blue dot, you can actually see that the cost goes UP at one point. This is because
    the model is trying to predict a change in the configurations that will lower
    costs, but because nothing can predict with 100% accuracy, sometimes it will be
    wrong locally, and as a result the cost may go up for a single run, while the
    system is “training.”
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 一个微妙的事情是，“更新配置”模型并不是100%准确的。在第四个蓝点中，您实际上可以看到成本在某一点上上升。这是因为模型试图预测一次配置变更将降低成本，但由于没有什么能够100%准确预测，有时它在局部上可能是错误的，因此成本可能在单次运行中上升，而系统正在“训练”。
- en: But, over time, we can see that the total cost does in fact go down. You can
    think of it as an intelligent trial and error process, since predicting the impact
    of configuration changes with 100% accuracy is straight up impossible.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，随着时间的推移，我们可以看到总成本实际上是在下降的。您可以将其视为一个智能的试错过程，因为以100%准确度预测配置变更的影响是完全不可能的。
- en: '**The big “so what?” — Set any goal and go**'
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**“那么，有什么关系？” — 设定任何目标并行动**'
- en: The approach above is a general strategy and not one that is limited to just
    cost savings. The “set point” above is simply a goal that a data platform person
    puts in. It can be any kind of measurable goal, for example runtime is a great
    example.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 上述方法是一种通用策略，而不仅仅是节省成本。上述的“设定点”只是数据平台人员设定的一个目标。它可以是任何可测量的目标，例如运行时间就是一个很好的例子。
- en: 'Let’s say we want a job to be under a 1 hour runtime (or SLA). We can let the
    system above tweak the configurations until the SLA is hit. Or what if it’s more
    complicated, a cost and SLA goal simultaneously? No problem at all, the system
    can optimize to hit your goals over many parameters. In addition to cost and runtime,
    other business use cases goals are:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们希望一个工作在1小时（或SLA）内完成。我们可以让上述系统调整配置，直到达到SLA。或者更复杂一点，同时考虑成本和SLA目标？完全没有问题，系统可以优化以达到您在多个参数上的目标。除了成本和运行时间外，其他业务用例目标还包括：
- en: '**Resource Utilization:** Independent of cost and runtime, am I using the resources
    I have properly?'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源利用率：** 独立于成本和运行时间，我是否正确地利用了我的资源？'
- en: '**Energy Efficiency:** Am I consuming the least amount of resources possible
    to minimize my carbon footprint?'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**能源效率：** 我是否尽可能少地消耗资源，以减少碳足迹？'
- en: '**Fault Tolerance:** Is my job actually resilient to failure? Meaning do I
    want to over-spec it just in case I get preempted or just in case there are no
    SPOT instances available?'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**容错性：** 我的工作实际上是否对故障具有弹性？这意味着我是否需要过度规格化它，以防我被抢占，或者以防没有可用的SPOT实例？'
- en: '**Scalability:** Does my job scale? What if I have a spike in input data by
    10x, will my job crash?'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可扩展性：** 我的工作是否具备可扩展性？如果输入数据增加10倍，我的工作会崩溃吗？'
- en: '**Latency:** Are my jobs hitting my latency goals? Response time goals?'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**延迟：** 我的工作是否达到了延迟目标？响应时间目标？'
- en: In theory, all a data platform person has to do is set goals, and then an automatic
    system can iteratively improve the infrastructure until the goals are hit. There
    are no humans in the loop, no engineers to get on board. The platform team just
    sets the goals they’ve received from their stakeholders. Sounds like a dream.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 理论上，一个数据平台的人只需设定目标，然后一个自动系统可以迭代地改进基础设施，直到达到目标。没有人参与其中，没有工程师需要上手。平台团队只需设定他们从利益相关者那里收到的目标。听起来像是一个梦想。
- en: 'So far we’ve been pretty abstract. Let’s dive into a some concrete use cases
    that are hopefully compelling to people:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们一直比较抽象。让我们深入探讨一些具体的使用案例，希望能够引起人们的兴趣：
- en: '**Example feature #1: Group jobs by business goals**'
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**示例功能 #1：按业务目标对作业进行分组**'
- en: Let’s say you’re a data platform manager and you oversee the operation of hundreds
    of production jobs. Right now, they all have their own cost and runtime. A simple
    graph below shows a cartoon example, where basically all of the jobs are randomly
    scattered across a cost and runtime graph.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您是一个数据平台经理，负责监督数百个生产作业的运行。目前，它们都有自己的成本和运行时间。下面的简单图表显示了一个卡通示例，基本上所有作业都随机分布在成本和运行时间图表上。
- en: What if you want to lower costs at scale? What if you want to change the runtime
    (or SLA) of many jobs at once? Right now you’d be stuck begging engineers to help
    you modify all of the jobs (good luck).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想在大规模上降低成本怎么办？如果你想一次性改变许多作业的运行时间（或SLA）怎么办？现在，你可能得请求工程师帮助你修改所有作业（祝好运）。
- en: '![](../Images/64ae8b41dd93b68a2d7171661a4fce0e.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/64ae8b41dd93b68a2d7171661a4fce0e.png)'
- en: Image by author
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: 'Now imagine if you had the closed loop control system above implemented for
    all of your jobs. All you’d have to do is set the high level business goals of
    your jobs (in this case SLA runtime requirements), and the feedback control system
    would do its best to find the infrastructure that accomplishes your goals. The
    end state will look like this:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在假设你对所有作业实施了上述闭环控制系统。你只需设定作业的高级业务目标（在此案例中为SLA运行时间要求），反馈控制系统将尽力找到实现这些目标的基础设施。最终状态将是这样的：
- en: '![](../Images/5b18e5f4f29997498e0f77b64bfe4b77.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5b18e5f4f29997498e0f77b64bfe4b77.png)'
- en: Image by author
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Here we see each job’s color represents a different business goal, as defined
    by the SLA. The closed loop feedback control system behind the scenes changed
    the cluster / warehouse size, various configurations, or even adjusted entire
    pipelines to try to hit the SLA runtime goals at the lowest cost. Typically longer
    job runtimes lead to lower cost opportunities.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们看到每个作业的颜色代表了不同的业务目标，依据SLA定义。幕后闭环反馈控制系统改变了集群/仓库的大小、各种配置，甚至调整了整个管道，以尽可能低的成本达到SLA运行时间目标。通常，较长的作业运行时间会导致更低的成本机会。
- en: '**Example feature #2: Auto-healing jobs**'
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**示例功能 #2：自愈作业**'
- en: 'As most data platform people can confirm, things are always changing in their
    data pipelines. Two very popular scenarios are: data size growing over time, and
    code changes. Both of which can cause erratic behavior when it comes to cost and
    runtime.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数数据平台的工作人员可以确认，他们的数据管道总是在变化。两个非常流行的场景是：数据规模随时间增长和代码变更。这两者都会导致成本和运行时间出现不稳定的行为。
- en: 'The illustration below shows the basic concept. Let’s walk through the example
    from left to right:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 以下插图展示了基本概念。我们从左到右走一遍示例：
- en: '**Start:** Let’s say you have a job and over time the data size grows. Normally
    your cluster stays the same and as a result both costs and runtime increases.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开始：** 假设你有一个作业，并且随着时间的推移数据规模增长。通常情况下，你的集群保持不变，因此成本和运行时间都会增加。'
- en: '**Start Feedback:** Over time the runtime approaches the SLA requirement and
    the feedback control system kicks in at the green arrow. At this point, the control
    system changes the cluster to stay below the red dashed line while minimizing
    costs.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开始反馈：** 随着时间的推移，运行时间接近SLA要求，反馈控制系统在绿色箭头处介入。此时，控制系统会调整集群，以保持在红色虚线下，同时最小化成本。'
- en: '**Code Change:** At some point a developer pushes a new update to the code
    which causes a spike in the cost and runtime. The feedback control system kicks
    in and adjusts the cluster to work better with the new code change.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码变更：** 在某个时点，开发者推送了一个新的代码更新，导致成本和运行时间的激增。反馈控制系统介入，并调整集群以更好地适应新的代码变更。'
- en: '![](../Images/b629a0c1e46d551d765d95cabbfe864a.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b629a0c1e46d551d765d95cabbfe864a.png)'
- en: Image by author
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Hopefully these two examples explain the potential benefit of how a closed loop
    control pipeline can be beneficial. Of course in reality there are many details
    that have been left out and some design principles companies will have to adhere
    to.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 希望这两个示例说明了闭环控制管道的潜在好处。当然，实际上还有许多细节被省略了，一些设计原则公司必须遵循。
- en: One big one is a way for configurations to revert back to a previous state in
    case something goes wrong. An idempotent pipeline would also be ideal here in
    case many iterations are needed.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 一个重要的方面是配置能够在出现问题时恢复到之前的状态。此时，一个幂等的管道将非常理想，以防需要许多迭代。
- en: '**Conclusion**'
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**结论**'
- en: Data pipelines are complex systems, and like any other complex system, they
    need feedback and control to ensure a stable performance. Not only does this help
    solve technical or business problems, it will dramatically help free up data platform
    and engineering teams to focus on actually building pipelines.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 数据管道是复杂的系统，像其他复杂系统一样，它们需要反馈和控制来确保稳定的性能。这不仅有助于解决技术或业务问题，还能显著释放数据平台和工程团队的精力，使他们能专注于实际构建管道。
- en: Like we mentioned before, a lot of this hinges on the performance of the “update
    config” block. This is the critical piece of intelligence that is needed to the
    success of the feedback loop. It is not trivial to build this block and is the
    main technical barrier today. It can be an algorithm or a machine learning model,
    and utilize historical data. It is the main technical component we’ve been working
    on over the past several years.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前提到的，这在很大程度上依赖于“更新配置”模块的性能。这是反馈循环成功所需的关键情报。构建这个模块并非易事，也是目前主要的技术障碍。它可以是一个算法或机器学习模型，并利用历史数据。这是我们过去几年中一直在致力于的主要技术组件。
- en: In our next post we’ll show an actual implementation of this system applied
    to Databricks Jobs, so you can believe that what we’re talking about is real!
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们下一篇文章中，我们将展示该系统在 Databricks Jobs 中的实际应用，让你相信我们讨论的内容是真实的！
- en: '*Interested in learning more about closed loop controls for your Databricks
    pipelines? Reach out to* [*Jeff Chou*](https://www.linkedin.com/in/jeffchoumit/)
    *and the rest of the* [*Sync Team*](https://synccomputing.com/)*.*'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '*对了解更多关于 Databricks 流水线的闭环控制感兴趣？请联系* [*Jeff Chou*](https://www.linkedin.com/in/jeffchoumit/)
    *和其他* [*Sync Team*](https://synccomputing.com/)*成员。*'
- en: Related Content
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关内容
- en: '[Are Databricks clusters with Photon and Graviton instances worth it?](https://synccomputing.com/databricks-photon-and-graviton-instances-worth-it/)'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Databricks 的 Photon 和 Graviton 实例值得投资吗？](https://synccomputing.com/databricks-photon-and-graviton-instances-worth-it/)'
- en: '[Is Databricks’s autoscaling cost efficient?](https://synccomputing.com/is-databrickss-autoscaling-cost-efficient/)'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Databricks 的自动扩展是否具备成本效益？](https://synccomputing.com/is-databrickss-autoscaling-cost-efficient/)'
- en: '[Introducing Gradient — Databricks optimization made easy](https://synccomputing.com/introducing-gradient-for-databricks/)'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[介绍 Gradient — 简化 Databricks 优化](https://synccomputing.com/introducing-gradient-for-databricks/)'
