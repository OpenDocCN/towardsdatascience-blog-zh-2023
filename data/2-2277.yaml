- en: Using React to Build Interactive Interfaces to Exciting Dataset
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 React 构建互动界面以展示令人兴奋的数据集
- en: 原文：[https://towardsdatascience.com/using-react-to-build-interactive-interfaces-to-exciting-dataset-c01691a5fc38](https://towardsdatascience.com/using-react-to-build-interactive-interfaces-to-exciting-dataset-c01691a5fc38)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/using-react-to-build-interactive-interfaces-to-exciting-dataset-c01691a5fc38](https://towardsdatascience.com/using-react-to-build-interactive-interfaces-to-exciting-dataset-c01691a5fc38)
- en: Data Tutorial
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据教程
- en: Creating a more dynamic data visualization experience using web development
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用网页开发创建更动态的数据可视化体验
- en: '[](https://medium.com/@oscarleo?source=post_page-----c01691a5fc38--------------------------------)[![Oscar
    Leo](../Images/7733c9147bad2875a35155fca3903aa8.png)](https://medium.com/@oscarleo?source=post_page-----c01691a5fc38--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c01691a5fc38--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c01691a5fc38--------------------------------)
    [Oscar Leo](https://medium.com/@oscarleo?source=post_page-----c01691a5fc38--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@oscarleo?source=post_page-----c01691a5fc38--------------------------------)[![Oscar
    Leo](../Images/7733c9147bad2875a35155fca3903aa8.png)](https://medium.com/@oscarleo?source=post_page-----c01691a5fc38--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c01691a5fc38--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c01691a5fc38--------------------------------)
    [Oscar Leo](https://medium.com/@oscarleo?source=post_page-----c01691a5fc38--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c01691a5fc38--------------------------------)
    ·5 min read·Sep 19, 2023
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c01691a5fc38--------------------------------)
    ·5分钟阅读·2023年9月19日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: Demo video of the interface
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 界面演示视频
- en: On the side of my full-time job as the CEO of a small machine-learning company,
    my hobby is creating beautiful data visualizations.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 除了我作为一家小型机器学习公司的首席执行官的全职工作之外，我的爱好是创建美丽的数据可视化。
- en: I usually do that using Matplotlib, but I wanted to create a more interactive
    experience this time.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我通常使用 Matplotlib，但这次我想创造一个更互动的体验。
- en: Since I enjoy web development and design, I decided to create a React application
    for the [Population Estimates And Projections](https://datacatalog.worldbank.org/search/dataset/0037655/Population-Estimates-and-Projections)
    dataset from the World Bank.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我喜欢网页开发和设计，我决定为世界银行的 [人口估计和预测](https://datacatalog.worldbank.org/search/dataset/0037655/Population-Estimates-and-Projections)
    数据集创建一个 React 应用程序。
- en: It’s a fascinating dataset where you can look at population pyramids for all
    countries and regions from 1960 to 2022, including projections to 2050\. It’s
    licensed under Creative Commons Attribution 4.0.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个令人着迷的数据集，你可以查看1960年至2022年所有国家和地区的人口金字塔，包括对2050年的预测。它的许可证是 Creative Commons
    Attribution 4.0。
- en: It’s also a dataset well suited for an interactive interface where people can
    change years and regions quickly.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常适合互动界面的数据集，人们可以快速更改年份和地区。
- en: In this story, I’ll share insights from my work and what I learned.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个故事中，我将分享我的工作见解和所学到的经验。
- en: 'If you want to test the solution, you can find it here: [https://datawonder.io/population-pyramids](https://datawonder.io/population-pyramids)'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想测试这个解决方案，你可以在这里找到：[https://datawonder.io/population-pyramids](https://datawonder.io/population-pyramids)
- en: Let’s get started.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧。
- en: 'Part 1: Preparing the data'
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1部分：准备数据
- en: I wanted to create a simple and fast backend that serves data to the front end
    without doing any time-consuming preprocessing.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我想创建一个简单而快速的后台，将数据提供给前端，而不进行任何耗时的预处理。
- en: Instead, my idea was to do all the data ahead of time and load it all into memory
    when the applications start.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，我的想法是提前处理所有数据，并在应用程序启动时将其全部加载到内存中。
- en: 'The World Bank data always have a set of indicators, and the ones I want have
    the following format:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 世界银行的数据总是有一组指标，而我需要的指标具有以下格式：
- en: Population ages <age-group>, <gender>
  id: totrans-20
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 人口年龄 <age-group>，<gender>
- en: There are 17 age groups ranging from 0–4 and 80+. Each indicator has a separate
    column for every year, like in the pandas data frame below.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 有17个年龄组，从0–4岁到80岁及以上。每个指标都有一个单独的列表示每一年，如下方的 pandas 数据框所示。
- en: '![](../Images/a27abb435cc7cdb1505d8473c232b234.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a27abb435cc7cdb1505d8473c232b234.png)'
- en: Since I knew exactly what parts of the data I needed and didn’t want to do any
    filtering or other operations on the backend.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我确切知道我需要数据的哪些部分，不想在后台进行任何过滤或其他操作。
- en: Instead, I decided to turn the DataFrame into a JSON file with the following
    format.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，我决定将 DataFrame 转换为以下格式的 JSON 文件。
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: That’s it for preparing the data.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是准备数据的全部内容。
- en: 'Part 2: Creating the backend'
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二部分：创建后端
- en: The backend is the most straightforward part of this web application and only
    serves the JSON data for the user interface.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 后端是这个 web 应用程序中最简单的部分，只提供用户界面的 JSON 数据。
- en: When the app starts, I load the preprocessed JSON into memory as a Python dictionary.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当应用程序启动时，我将预处理的 JSON 加载到内存中作为 Python 字典。
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: I decided to use FastAPI because it’s one of the viable options and makes it
    easy to create endpoints.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我决定使用 FastAPI，因为它是一个可行的选项，并且使创建端点变得容易。
- en: When the user sends a query, I can instantly access the data.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户发送查询时，我可以立即访问数据。
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: I also have an endpoint to list all available countries and areas.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我还有一个端点来列出所有可用的国家和地区。
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: That’s every single line of code I have on my backend.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我后端所有的代码。
- en: 'Part 3: Creating the user interface'
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三部分：创建用户界面
- en: Building the front end was the most time-consuming aspect of this project. I
    can’t go through every line of code in detail.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 构建前端是这个项目中最耗时的部分。我不能详细讲解每一行代码。
- en: My goal was to create a minimalistic application that’s both responsive and
    easy to use because many data interfaces are too complicated.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我的目标是创建一个简约的应用程序，它既响应迅速又易于使用，因为许多数据接口过于复杂。
- en: 'I use two primary JavaScript libraries to make my life easier: [Recharts](https://recharts.org/en-US)
    and [Chakra](https://chakra-ui.com/).'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用了两个主要的 JavaScript 库来让我的生活更轻松：[Recharts](https://recharts.org/en-US) 和 [Chakra](https://chakra-ui.com/)。
- en: I won’t go into much detail on Recharts because they have excellent [documentation](https://recharts.org/en-US/api)
    describing everything you can do.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我不会详细讲解 Recharts，因为它们有很棒的[文档](https://recharts.org/en-US/api)来描述你可以做的所有事情。
- en: In essence, they provide a React component called `ResponsiveContainer` that
    serves as the base of your charts.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 实质上，它们提供了一个叫做 `ResponsiveContainer` 的 React 组件，作为你图表的基础。
- en: You can then define things like `BarChart`, `YAxis`, `XAxis`, `Tooltip`, and
    `Legend` to create the perfect graph.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 然后你可以定义像`BarChart`、`YAxis`、`XAxis`、`Tooltip`和`Legend`这样的东西来创建完美的图表。
- en: The structure looks like this; all components have several properties to get
    the styling right.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 结构如下；所有组件都有几个属性来确保样式正确。
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: For example, I set my `BarChart` component to have a verticle layout and stack
    the bars on “sign” to make them go in opposite directions.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我将我的 `BarChart` 组件设置为垂直布局，并将条形图堆叠在“sign”上，以使它们朝相反方向延展。
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The `prepare_data()` the function takes the population data for one area and
    year and turns it into a list of objects.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '`prepare_data()` 函数将一个区域和年份的人口数据转换为对象列表。'
- en: '[PRE6]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Here’s what each chart looks like.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是每个图表的样子。
- en: '![](../Images/2499679d768a1767896735042e6f4483.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2499679d768a1767896735042e6f4483.png)'
- en: I set additional properties for other components to style the axis labels and
    grid, among other things.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我为其他组件设置了额外的属性来样式化轴标签和网格等。
- en: 'Part 4: Deploying the application'
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四部分：部署应用程序
- en: I decided to use the Digital Ocean apps platform as my deployment, but it’s
    probably not the cheapest option.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我决定使用 Digital Ocean 的应用平台作为我的部署方式，但这可能不是最便宜的选择。
- en: Their minimum backend service is way better than I require, but I plan to add
    additional endpoints for other datasets over time.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 他们的最小后端服务比我需要的要好得多，但我计划随着时间的推移添加额外的端点以支持其他数据集。
- en: Deploying the frontend
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 部署前端
- en: If you create your front end with `create-react-app`, you can point Digital
    Ocean to that repo, and it will build the application whenever you push your code
    to master.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用`create-react-app`创建前端，你可以将 Digital Ocean 指向那个仓库，它会在你将代码推送到 master 时构建应用程序。
- en: You don’t need to create a Docker container or anything like that. It’s fantastic
    for people like me who are lazy regarding DevOps.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 你无需创建 Docker 容器或其他类似的东西。这对于像我这样在 DevOps 上比较懒的人来说非常棒。
- en: It’s also perfect for this application because it doesn’t require anything fancy.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 它对于这个应用程序也很完美，因为它不需要任何花哨的东西。
- en: Conclusion
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Static data visualizations are great, but sometimes, you want a more interactive
    experience allowing users to explore patterns themselves.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 静态数据可视化很棒，但有时你会想要一种更互动的体验，让用户自己探索模式。
- en: When that’s the case, it’s surprisingly easy to build simple React web applications
    that use open-source libraries to create charts and graphics.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，构建简单的 React web 应用程序来使用开源库创建图表和图形是出奇的简单。
- en: In this tutorial, I shared some insight into how I created a user interface
    that allows users to look at age distributions for different countries and regions.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我分享了一些关于如何创建一个用户界面的见解，该界面允许用户查看不同国家和地区的年龄分布。
- en: I hope that you got some inspiration to do a similar project yourself.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望你能从中获得一些灵感，自己做一个类似的项目。
- en: Thank you for reading, and see you next time! 😊
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢你的阅读，下次见！😊
