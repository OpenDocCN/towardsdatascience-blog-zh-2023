- en: Your Data Science Visualizations Will Never Be The Same — Plotly & Dash
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你的数据科学可视化将不再相同——Plotly 和 Dash
- en: 原文：[https://towardsdatascience.com/your-data-science-visualizations-will-never-be-the-same-plotly-dash-6327d07d9efb](https://towardsdatascience.com/your-data-science-visualizations-will-never-be-the-same-plotly-dash-6327d07d9efb)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/your-data-science-visualizations-will-never-be-the-same-plotly-dash-6327d07d9efb](https://towardsdatascience.com/your-data-science-visualizations-will-never-be-the-same-plotly-dash-6327d07d9efb)
- en: Data Viz
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据可视化
- en: Using Plotly and Dash to create interactive dashboards
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Plotly 和 Dash 创建交互式仪表板
- en: '[](https://polmarin.medium.com/?source=post_page-----6327d07d9efb--------------------------------)[![Pol
    Marin](../Images/a4f69a96717d453db9791f27b8f85e86.png)](https://polmarin.medium.com/?source=post_page-----6327d07d9efb--------------------------------)[](https://towardsdatascience.com/?source=post_page-----6327d07d9efb--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----6327d07d9efb--------------------------------)
    [Pol Marin](https://polmarin.medium.com/?source=post_page-----6327d07d9efb--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://polmarin.medium.com/?source=post_page-----6327d07d9efb--------------------------------)[![Pol
    Marin](../Images/a4f69a96717d453db9791f27b8f85e86.png)](https://polmarin.medium.com/?source=post_page-----6327d07d9efb--------------------------------)[](https://towardsdatascience.com/?source=post_page-----6327d07d9efb--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----6327d07d9efb--------------------------------)
    [Pol Marin](https://polmarin.medium.com/?source=post_page-----6327d07d9efb--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----6327d07d9efb--------------------------------)
    ·14 min read·Oct 24, 2023
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----6327d07d9efb--------------------------------)
    ·14 min read·2023年10月24日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/3e1a35e12cadcbc748b7a5aa4bc77bfb.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3e1a35e12cadcbc748b7a5aa4bc77bfb.png)'
- en: Photo by [Isaac Smith](https://unsplash.com/@isaacmsmith?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 由 [Isaac Smith](https://unsplash.com/@isaacmsmith?utm_source=medium&utm_medium=referral)
    在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral) 提供的照片
- en: Not so long ago, I wrote a simple intro to four Python data visualization libraries
    where I showcased their pros and cons, and used practical examples to show what
    they are capable of.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 不久前，我写了一篇简单的介绍，介绍了四个 Python 数据可视化库，展示了它们的优缺点，并通过实际示例展示了它们的能力。
- en: 'As we’re going to get deeper into the ones that I like the most, I highly encourage
    you to check that article first, as this one will expand on what was shown there:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们深入讨论我最喜欢的那些工具时，我强烈建议你先查看那篇文章，因为这篇文章会扩展其中展示的内容：
- en: '[](/building-interactive-data-visualizations-with-python-the-art-of-storytelling-ceb43db67488?source=post_page-----6327d07d9efb--------------------------------)
    [## Building Interactive Data Visualizations with Python — The Art of Storytelling'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/building-interactive-data-visualizations-with-python-the-art-of-storytelling-ceb43db67488?source=post_page-----6327d07d9efb--------------------------------)
    [## 使用 Python 构建交互式数据可视化——讲故事的艺术'
- en: Seaborn, Bokeh, Plotly, and Dash to effectively communicate data insights
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Seaborn、Bokeh、Plotly 和 Dash 用于有效传达数据洞察
- en: towardsdatascience.com](/building-interactive-data-visualizations-with-python-the-art-of-storytelling-ceb43db67488?source=post_page-----6327d07d9efb--------------------------------)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/building-interactive-data-visualizations-with-python-the-art-of-storytelling-ceb43db67488?source=post_page-----6327d07d9efb--------------------------------)
- en: Today we’ll focus on **Plotly**[1] and **Dash**[2]. Why two? Because they go
    hand-in-hand. As I stated in the article linked above, “Dash isn’t a plotting
    library per se. It’s an amazing framework used to generate dashboards.”
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 今天我们将重点讨论**Plotly**[1]和**Dash**[2]。为什么是两个？因为它们是相辅相成的。正如我在上面链接的文章中所述，“Dash 本身不是一个绘图库。它是一个用于生成仪表板的出色框架。”
- en: So Plotly is the library we use to plot, and Dash is the framework we use to
    generate cool, interactive dashboards from those plots.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 所以 Plotly 是我们用来绘图的库，而 Dash 是我们用来从这些图中生成酷炫交互式仪表板的框架。
- en: 'Here’s the set of steps we’ll follow to build today’s dashboard:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们今天构建仪表板的步骤：
- en: Setup and installation — to get us in the proper state.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置和安装——让我们进入正确的状态。
- en: Some simple use cases — to show how Plotly works
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些简单的用例——展示 Plotly 如何工作
- en: Building a dashboard with Dash — to create the best dashboards.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Dash 构建仪表板——创建最佳仪表板。
- en: Conclusions — to wrap up the story and see the results.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结论——总结故事并查看结果。
- en: Before going deeper, we need to talk about the data. We need some sort of data
    to be able to visualize it, right? Keeping up with most of my latest Medium content,
    I’ll be focusing on sports and, more concretely, football (soccer).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入之前，我们需要讨论数据。我们需要某种数据才能进行可视化，对吧？跟上我最新的Medium内容，我将专注于体育，更具体地说，是足球（soccer）。
- en: I’ll be using Statsbomb’s free data[3] from the 2015–16 LaLiga campaign.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我将使用Statsbomb提供的2015–16赛季LaLiga的免费数据[3]。
- en: 'There’s a lot of data from that season but I want to visualize Futbol Club
    Barcelona’s players'' performance focusing mostly on attacking terms: shots, goals,
    assists…'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 那个赛季有很多数据，但我想要可视化巴萨球员的表现，主要集中在进攻方面：射门、进球、助攻……
- en: 'The purpose might differ based on the analyst’s position: are you a Real Madrid
    analyst? Then I’m sure you’ll want to decipher how your team can stop Leo Messi
    (spoiler: you can’t).'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 目的可能会根据分析师的位置有所不同：你是皇马的分析师吗？那我敢肯定你会想要解码你的球队如何阻止梅西（剧透：你做不到）。
- en: But if you work within the Barça organization, you might want to just check
    your player’s numbers and see where some players perform better than others.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 但如果你在巴萨组织工作，你可能想要检查一下你球员的数据，看看哪些球员的表现比其他球员更好。
- en: Whatever it is, always make sure you define your goals before creating any dashboard
    — there’s so much info you can visualize that you have to purposely pick the plots
    you want to look at.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 无论是什么情况，始终确保在创建任何仪表板之前定义你的目标——你可以可视化的信息太多了，你必须有目的地选择你想查看的图表。
- en: And always aim for simplicity; non-technical people will have to draw conclusions
    from your dashboards.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 始终追求简单；非技术人员需要从你的仪表板中得出结论。
- en: Setup and Installation
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置和安装
- en: 'I like to keep things ordered and structured. So the first thing we’ll do is
    create a new directory in whatever path you want your app to be hosted in. I’ll
    create it on my Desktop, for simplicity. Here are the two commands I run on a
    terminal:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢保持事物的有序和结构化。所以我们要做的第一件事是创建一个新的目录在你希望托管应用程序的路径中。为了简单起见，我将在桌面上创建它。这是我在终端上运行的两个命令：
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Now, the next natural step is to create a new Python environment within the
    new directory. I’ll use `pipenv` [4] but you can use your virtualenv management
    tool of preference (or none).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，下一步自然是创建一个新的Python环境在新的目录中。我将使用`pipenv` [4]，但你可以使用你喜欢的虚拟环境管理工具（或者不使用）。
- en: 'If you haven’t got pipenv installed in your machine, then run this command
    first:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的机器上还没有安装pipenv，那么首先运行这个命令：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Then, create the environment:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，创建环境：
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This will create a new environment and automatically activate it. Anything you
    install now from that terminal is going to be installed on the environment only.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建一个新的环境并自动激活它。你现在从那个终端安装的任何东西都会只安装在该环境中。
- en: 'So let’s start installing libraries using pip:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 所以让我们开始使用pip安装库：
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Yep, by installing these three we’ll have more than enough. They all have their
    own dependencies and we’re going to take advantage of some of them like *Plotly*
    or *NumPy*.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，安装这三个库我们会有足够的功能。它们都有自己的依赖关系，我们将利用一些像*Plotly*或*NumPy*的库。
- en: With everything set up, we’re now ready to start exploring Plotly.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 一切准备好后，我们现在可以开始探索Plotly。
- en: Visualizing Data with Plotly
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Plotly进行数据可视化
- en: 'My recommendation here is to test it from a jupyter notebook, as it will make
    your development phase more fluid. In this case, you should also install it —
    I promise it’s the last installation we run — and we’ll also open it:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我在这里的建议是从jupyter notebook进行测试，因为这将使你的开发阶段更加流畅。在这种情况下，你也应该安装它——我保证这是我们运行的最后一个安装——我们也将打开它：
- en: '[PRE4]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'As always, we’ll need to prepare the data and we’ll create a new notebook called
    **plotly.ipynb**. To avoid extremely large notebooks and files, I like to modularize
    my code. For that reason, I created a `src` directory within the project folder
    and added two new files there: `functions.py` and `classes.py`. The structure
    now looks like:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 像往常一样，我们需要准备数据，我们将创建一个新的笔记本叫做**plotly.ipynb**。为了避免极大的笔记本和文件，我喜欢将我的代码模块化。因此，我在项目文件夹中创建了一个`src`目录，并在其中添加了两个新文件：`functions.py`和`classes.py`。现在的结构如下：
- en: '[PRE5]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The first function I’ll create is going to be called `prepare_team_data()` and
    will return events, shots, and assist data from the specified team (in our case,
    Barcelona).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我将创建的第一个函数叫做`prepare_team_data()`，它将返回指定球队（在我们这个例子中是巴萨）的事件、射门和助攻数据。
- en: As the function itself is not useful for today’s purposes, because we want to
    focus on plotting and creating dashboards, I won’t put the code to the function.
    But you have the link to the whole code in the Resources section[5].
  id: totrans-47
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 由于函数本身对今天的目的并不重要，因为我们想专注于绘制和创建仪表盘，我不会放函数的代码。但你可以在资源部分[5]找到整个代码的链接。
- en: '[PRE6]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: And here’s a snapshot of what the shots DF looks like.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这是投篮DF的一个快照。
- en: '![](../Images/1dd64d3f16ff7bb0ce93711ecda41578.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1dd64d3f16ff7bb0ce93711ecda41578.png)'
- en: shots DF screenshot — image by the author
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 投篮DF屏幕截图——图像由作者提供
- en: Good, let’s start with shots then. I want to plot a player’s shot distribution,
    to see where he shoots from more and where his goals come from. To do this, I’ve
    created a `FootballPitch` class in the *classes.py* module.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，让我们从投篮开始吧。我想绘制一个球员的投篮分布图，以查看他从哪里射门以及他的进球来自哪里。为此，我在*classes.py*模块中创建了一个`FootballPitch`类。
- en: This class allows us to plot a complete football pitch, half of it (the attacking
    half, it is), or even a heatmap as we’ll be doing.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这个类允许我们绘制一个完整的足球场、它的一半（即进攻半场），或者甚至像我们将要做的那样绘制一个热图。
- en: Again, you can find the code in the GitHub link[5] in the Resources section
    at the bottom of this article. But we’re going to inspect it a little bit because
    here’s where we’ve used a lot of Plotly’s gifts.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 再次提醒，你可以在本文底部的资源部分找到GitHub链接[5]中的代码。但我们会稍微检查一下，因为这是我们使用了很多Plotly功能的地方。
- en: 'The class has basically two methods: `plot_pitch()` and `plot_heatmap`. As
    we’re first interested in displaying the player shots, let’s start with the first
    one by dividing it into little code chunks.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这个类基本上有两个方法：`plot_pitch()`和`plot_heatmap`。由于我们首先关注的是展示球员的投篮，所以我们从第一个方法开始，将其分解为小的代码块。
- en: Note that you will see some variables and class attributes that we haven’t assigned
    any value to. These are function parameters or initialized when creating the object.
  id: totrans-56
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 请注意，你会看到一些变量和类属性我们没有赋值。这些是函数参数或在创建对象时初始化的。
- en: 'First thing first: let’s declare the essential variables the function will
    use.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 首先：让我们声明函数将使用的基本变量。
- en: '[PRE7]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Now that we have the figure declared, what we’ll do over and over again is
    **add traces or shapes** into it to customize it as we want. So, for example,
    the first thing the function does is plot a rectangular shape, being it the pitch
    itself:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经声明了图形，我们将一遍又一遍地**添加轨迹或形状**以根据我们的需要进行自定义。因此，例如，函数的第一步是绘制一个矩形形状，即足球场本身：
- en: '[PRE8]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Here, we add a trace which is a scatterplot with mode `lines` — meaning we want
    a line, not a real scatter plot with independent dots. The parameters are pretty
    self-explanatory, such as the x and y (the data we want to plot), the colors…
    The hoverinfo label is used to determine what we want to show when we hover our
    mouse over these lines. As we’re building the pitch as part of the background
    and isn’t telling us anything about the data we want to analyze, I’m setting it
    to skip.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们添加了一个散点图轨迹，模式为`lines`——这意味着我们想要的是一条线，而不是一个有独立点的真正的散点图。参数是相当自解释的，例如x和y（我们想绘制的数据），颜色……hoverinfo标签用于确定当我们将鼠标悬停在这些线条上时想显示的内容。由于我们将足球场作为背景的一部分构建，并且它不会告诉我们任何关于我们想要分析的数据的信息，所以我将其设置为跳过。
- en: 'Then we set some extra configurations into the figure’s layout:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们在图的布局中设置了一些额外的配置：
- en: '[PRE9]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'That gives us the following result:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这给我们带来了以下结果：
- en: '![](../Images/38161acb7d8a81e3f6f6d87407d3ddcb.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/38161acb7d8a81e3f6f6d87407d3ddcb.png)'
- en: Football pitch (grass only) — image by the author
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 足球场（仅草地）——图像由作者提供
- en: And we now have our pitch plotted. Not really meaningful… Yet.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经绘制好了我们的足球场。还不是特别有意义……不过。
- en: 'Plotting in Plotly is really this easy! By adding some more traces and shapes
    into the plot, here’s what my pitch background ends up looking like:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在Plotly中绘图确实如此简单！通过在图中添加更多的轨迹和形状，我的足球场背景最终看起来是这样的：
- en: '![](../Images/f834d589d827f1975bf7e9a1332015ae.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f834d589d827f1975bf7e9a1332015ae.png)'
- en: Football pitch — image by the author
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 足球场——图像由作者提供
- en: Now, you might not be interested in displaying a football pitch. That’s why
    I didn’t put all the code here… But great dashboards are the result of creativity
    and skills, and plotting a pitch is a great way to display football events that
    happen on the pitch (if we’re interested in location).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可能对显示一个足球场不感兴趣。这就是为什么我没有把所有代码都放在这里……但出色的仪表盘是创造力和技能的结果，而绘制一个足球场是展示发生在场上的足球事件（如果我们对位置感兴趣）的一个很好的方式。
- en: So let’s get going and start displaying real data!
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，让我们开始展示真实数据吧！
- en: As we want to display shots — and goals — a **scatter plot** looks like a fair
    option to use. Remember that we already have the data prepared, we just have to
    filter it and display it.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们要显示射门——和进球——**散点图**似乎是一个合适的选择。记住，我们已经准备好了数据，我们只需要过滤和显示它。
- en: 'Let’s plot Leo Messi’s shots and goals:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们绘制梅西的射门和进球：
- en: '[PRE10]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The first part is self-explanatory: we just declare variables, instantiate
    the pitch, store the figure in the `fig` variable, and run a function that filters
    the `shots` data frame to return only the player ones.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 第一部分不言而喻：我们只是声明变量，实例化球场，将图形存储在`fig`变量中，并运行一个函数来过滤`shots`数据框，以返回仅玩家的射门数据。
- en: 'Then, in a 2-iteration loop, we add a scatter plot twice: one for shots that
    weren’t a goal (which will be displayed in blue) and one for shots that resulted
    in a goal. The result:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在一个2次迭代的循环中，我们添加了两次散点图：一次用于未进球的射门（将显示为蓝色），另一次用于进球的射门。结果：
- en: '![](../Images/16c050372beceaa057b939bb2607346a.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/16c050372beceaa057b939bb2607346a.png)'
- en: Leo Messi’s shot and goal distribution in 2015/16 — image by the author
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 梅西在2015/16赛季的射门和进球分布——图片由作者提供
- en: And what makes plotly amazing is that this plot is fully interactive. We can
    play around hovering our mouse to see the real shot locations, hide the non-goal
    ones to inspect just the scoring shots…
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 使plotly令人惊叹的是，这个图形是完全互动的。我们可以通过悬停鼠标来查看真实的射门位置，隐藏非进球的射门以仅检查进球射门……
- en: Let’s go ahead now and build a **line plot.** It will be interactive of course,
    and we’ll use it to inspect the player’s shots by quarter and also to compare
    it with his teammates’ and the team’s average.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们继续，构建一个**折线图**。它当然会是互动的，我们将用它来按季度检查球员的射门情况，并将其与队友和球队的平均水平进行比较。
- en: To do so, we’ll start by grouping shots in a quarterly manner (in 15-minute
    chunks) for each player. The next part will be plotting the values themselves
    and playing with line opacity to highlight the current player (Messi).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们将开始按季度（每15分钟一段）将射门分组。下一部分将是绘制这些值本身，并调整线条的不透明度，以突出当前的球员（梅西）。
- en: '[PRE11]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Now that we have all players ready, we’ll add the team’s average as a dashed
    line. The code does exactly the same as the snippet above but uses team-level
    data.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经准备好了所有球员，我们将添加球队的平均值作为虚线。代码的功能与上面的代码片段完全相同，但使用的是团队级的数据。
- en: '[PRE12]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'And we’ll end up adding some styling to the layout:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将为布局添加一些样式：
- en: '[PRE13]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The result:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 结果：
- en: '![](../Images/25baaaf3aff18214cbf50cafc0008e2e.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/25baaaf3aff18214cbf50cafc0008e2e.png)'
- en: The green, highlighted line is Leo Messi’s data (as the label shows when I hovered
    over the 60th-minute shot count). For some reason, maybe due to fatigue, Messi’s
    shots decreased during the 60-75 minutes but they increased in the last minutes
    of the game.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 绿色的高亮线是梅西的数据（当我悬停在第60分钟的射门计数上时，标签显示）。由于某些原因，也许是疲劳，梅西的射门在60到75分钟期间减少，但在比赛的最后几分钟却增加了。
- en: We see most of the team’s shots during the last 15 minutes decrease but Leo
    goes the other way. This shows a lot about his impact on the team and his desire
    to win.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到球队的大多数射门在最后15分钟减少，但梅西却走向相反的方向。这显示了他对球队的影响和他的胜利欲望。
- en: Anyway, enough for the intro. We’ve managed to plot two different plots and
    also create an amazing background for our plots. I think we’ve covered more than
    Plotly’s basics.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，介绍部分到此为止。我们已经成功绘制了两个不同的图形，并且为我们的图形创建了一个出色的背景。我认为我们已经覆盖了Plotly的基本知识。
- en: Creating the Dashboard
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建仪表板
- en: A dashboard is just a combination of plots displayed in an ordered and attractive
    way. And we already have the plots created — we did it in the last section — so
    we just need to display them.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 仪表板只是以有序和吸引人的方式显示的图形组合。我们已经创建了图形——我们在上一部分做的——所以我们只需将它们显示出来。
- en: Now, it isn’t as straightforward. We’ll have to add some changes to the code
    snippets shared above but I promise they’ll be tiny.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这并不那么简单。我们需要对上面共享的代码片段进行一些更改，但我保证这些更改会很小。
- en: To complete the dashboard, I’ll add some more plots and functionalities to make
    it fully interactive.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成仪表板，我将添加一些更多的图形和功能，使其完全互动。
- en: 'Having **Dash** already installed, I’ll create a new file called **app.py**:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了**Dash**之后，我将创建一个名为**app.py**的新文件：
- en: '[PRE14]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'And the file’s template will start being this simple:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 文件的模板将开始是这样的简单：
- en: '[PRE15]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'If you went on and executed the file (`python app.py`), you’d get a message
    in your terminal like the next one:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你继续执行文件（`python app.py`），你会在终端中看到类似以下的消息：
- en: '[PRE16]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Go ahead and navigate to [http://127.0.0.1:8050/](http://127.0.0.1:8050/). You’ll
    see a blank page, but that’s actually your dashboard.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 请访问[http://127.0.0.1:8050/](http://127.0.0.1:8050/)。你会看到一个空白页面，但这实际上是你的仪表板。
- en: Let’s start adding stuff, shall we? Take a look at the next code.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始添加内容吧？看看下一个代码。
- en: '[PRE17]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: By now, it should sound familiar. It’s exactly the same code we used to display
    Messi’s shots… But now, instead of defining the player to be Leo Messi, it’s the
    function argument.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 到现在，这应该听起来很熟悉。这正是我们用来显示梅西射门的代码… 但现在，代替定义为梅西的玩家，它是函数参数。
- en: And where does this argument come from? Just above the function declaration,
    we have the **callback decorator**. These callbacks are what make Dash’s dashboards
    interactive.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 那这个参数来自哪里？就在函数声明的上方，我们有**回调装饰器**。这些回调使Dash的仪表板具有交互性。
- en: We use them to determine the inputs and outputs of the associated app component.
    In this case, we’re saying that the function needs the `player` parameter which
    will come from the element called `player_dropdown` (which we haven’t defined
    yet).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们用它们来确定关联应用组件的输入和输出。在这种情况下，我们说明函数需要`player`参数，这个参数将来自名为`player_dropdown`的元素（我们还未定义）。
- en: As for the output, we made the function return the `fig`. Thanks to the callback
    decorator, the app knows that this will be the figure being used in the `shot_distribution`
    element from our dashboard.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 关于输出，我们让函数返回`fig`。多亏了回调装饰器，应用知道这将是我们仪表板中的`shot_distribution`元素所用的图形。
- en: You probably have too many questions right now. How do I define a dropdown or
    any interactable component? How do I actually get to plot the shot_distribution
    element?
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可能有很多问题。怎么定义一个下拉框或任何可交互组件？我如何真正绘制`shot_distribution`元素？
- en: 'Let’s start with the first question: the dropdown. Dash has its own core components
    (dcc) and the dropdown is one of them. Creating it is as simple as:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 从第一个问题开始：下拉框。Dash有自己的核心组件（dcc），下拉框就是其中之一。创建它非常简单：
- en: '[PRE18]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: This will create a dropdown using all player names as possible options, using
    `All players` as the default value. But the most important part is the **id**.
    Here’s where we get to tell Dash that this dropdown is the one associated with
    the previous function’s input callback.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建一个下拉框，使用所有玩家名称作为可能的选项，以`All players`作为默认值。但最重要的是**id**。在这里我们可以告诉Dash这个下拉框是与前一个函数的输入回调关联的。
- en: In other words, the value this dropdown has will be the player being shown on
    the shot distribution plot.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，这个下拉框的值将是射击分布图上显示的玩家。
- en: But we still need to place both of these components into our dashboard. The
    page remains blank.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 但我们仍然需要将这两个组件放入我们的仪表板中。页面依然是空白的。
- en: You’ll need some HTML knowledge now, but basic knowledge will be more than enough
    (though it can get as complex as you want).
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在需要一些HTML知识，但基本知识就足够了（尽管它可以复杂到你想要的程度）。
- en: 'We need to place these components within an HTML code. Dash, again, makes it
    extremely easy for us to do so. In the case of the dropdown, it can be done by
    simply wrapping the code with an `html.Div` component, basically placing the dropdown
    within a `<div></div>` HTML element:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要将这些组件放在HTML代码中。Dash再次使这一过程非常简单。对于下拉框，可以通过简单地用`html.Div`组件包裹代码，即将下拉框放在`<div></div>`
    HTML元素中来实现：
- en: '[PRE19]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The way this works is the `html.Div` can have many child elements (hence the
    list) and then we can set the element’s CSS style using the style attribute, which
    is a dictionary. Easy, right?
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 这个工作的方式是`html.Div`可以有许多子元素（因此是列表），然后我们可以使用style属性设置元素的CSS样式，它是一个字典。简单吧？
- en: 'In the case of the shot distribution graph, here’s the equivalent:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 对于射击分布图，等效的代码如下：
- en: '[PRE20]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Same structure, but to display graphs we use the `dcc.Graph` component and,
    as you probably guessed, the id attribute is key here too. It links this particular
    component with the output callback from the function we declared. So, whatever
    is computed there, will be displayed here.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 结构相同，但为了显示图表，我们使用`dcc.Graph`组件，并且你可能猜到了，id属性在这里也是关键。它将这个特定组件与我们声明的函数的输出回调关联起来。因此，那里计算的内容将在这里显示。
- en: 'We have now wrapped the components with HTML code. But they aren’t being displayed
    yet. We need to add them to the dashboard’s layout:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经用HTML代码包裹了这些组件。但它们还没有显示出来。我们需要将它们添加到仪表板的布局中：
- en: '[PRE21]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'No secret here; the structure is the same but on a higher level. We’re placing
    the previous `<div></div>` elements into a big one (the whole website container)
    and providing some extra styling. Now, yes, if you refresh the website or restart
    the app, you’ll see your first results:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 这里没有秘密；结构相同，但层级更高。我们将之前的`<div></div>`元素放入一个大的容器中（整个网站容器），并提供一些额外的样式。现在，如果你刷新网站或重新启动应用，你会看到你的初步结果：
- en: '![](../Images/3ab6a9949c7279620b2c8f71a8e8bb2b.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3ab6a9949c7279620b2c8f71a8e8bb2b.png)'
- en: Shot distribution plot — image by the author
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 投篮分布图 — 图片由作者提供
- en: Amazing what we’ve built already, right? This interactability is powerful.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 已经构建出的成果令人惊叹，对吧？这种互动性非常强大。
- en: 'To finish this section, let’s do the same but with the other plot we built.
    This time, I’ll paste the whole *new* code here so you can check it all at once:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成这一部分，让我们对另一个我们构建的图表做同样的处理。这一次，我会在这里粘贴整个*新*代码，以便你可以一次性查看所有内容：
- en: '[PRE22]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '![](../Images/6ffb5495ca16b142be37c2b07634e344.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6ffb5495ca16b142be37c2b07634e344.png)'
- en: Resulting dashboard with two plots — image by the author
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 结果仪表盘包含两个图表 — 图片由作者提供
- en: Now, this is functional. But it isn’t really attractive… HTML and CSS will be
    our tools making it more visually appealing (even though I’m not good at design).
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这个是功能性的。但它真的不太吸引人……HTML 和 CSS 将是使其视觉上更具吸引力的工具（尽管我在设计方面不太擅长）。
- en: However, this is outside of our scope. Our goal was to create a dashboard and
    we’ve done it. This one’s really simple but if you managed to understand everything
    we did, how the final dashboard was done I shared at the beginning and will share
    again in the next section will be no secret to you (again, the code is freely
    available at the bottom of this article)
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这超出了我们的范围。我们的目标是创建一个仪表盘，我们已经实现了。这虽然非常简单，但如果你能够理解我们做的所有内容，最终的仪表盘是如何完成的，我在开始时分享了，也将在下一节再次分享，你就不会对它感到陌生（同样，底部的代码是自由获取的）。
- en: Wrapping Up
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: Today we built a dashboard with two plots and one dropdown. But we can scale
    it as needed. For example, knowing how to place a dropdown, we know how to place
    one slider. And, what about two?
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 今天我们构建了一个包含两个图表和一个下拉框的仪表盘。但我们可以根据需要进行扩展。例如，了解如何放置一个下拉框后，我们就知道如何放置一个滑块。那两个呢？
- en: '**Everything we learned today can be applied to any data you want to visualize,**
    from economic reports to medical results or ad campaign insights. I chose to apply
    it to football because I’m deeply passionate about it, but please generalize the
    knowledge and apply it anywhere.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '**我们今天学到的所有内容都可以应用于任何你想要可视化的数据，** 从经济报告到医疗结果或广告活动洞察。我选择将其应用于足球，因为我对足球充满热情，但请将这些知识普及到其他领域。'
- en: 'Knowing how to place two plots, we can create many, many more. And different
    ones: one showing assists, another showing the player’s influence on the pitch,
    the comparison between his goals and the expected… And with all this plus a little
    bit of HTML and CSS, we get the final dashboard:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 了解如何放置两个图表后，我们可以创建更多的图表。而且是不同类型的：一个展示助攻，另一个展示球员在场上的影响，还有比较他的进球和预期进球……再加上一点 HTML
    和 CSS，我们就能得到最终的仪表盘：
- en: '![](../Images/0977fd4baf87daa88d2d500cdf6bd411.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0977fd4baf87daa88d2d500cdf6bd411.png)'
- en: Final dashboard — image by the author
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 最终仪表盘 — 图片由作者提供
- en: I really hope you can see how good this tool is.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 我真的希望你能看到这个工具的强大之处。
- en: Dash and Plotly must be in any data analyst’s skillset. They are amazing libraries
    we can use to share our data and insights in a way that’s highly customized —
    i.e. adapted to your needs — and easy to comprehend.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: Dash 和 Plotly 必须是任何数据分析师的技能库中的必备工具。它们是非常棒的库，我们可以用来以高度定制的方式分享我们的数据和见解——即根据你的需求进行调整——并且容易理解。
- en: '[PRE23]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Resources
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 资源
- en: '[1] [Plotly: Low-code Data App Development](https://plotly.com/)'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] [Plotly: 低代码数据应用开发](https://plotly.com/)'
- en: '[2] [Dash Documentation and User Guide — Plotly](https://dash.plotly.com/)'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] [Dash 文档和用户指南 — Plotly](https://dash.plotly.com/)'
- en: '[3] [Free Data | StatsBomb](https://statsbomb.com/what-we-do/hub/free-data/)'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '[3] [免费数据 | StatsBomb](https://statsbomb.com/what-we-do/hub/free-data/)'
- en: '[4] [Pipenv: Python Dev Workflow for Humans](https://pipenv.pypa.io/)'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '[4] [Pipenv: 人性化的 Python 开发工作流程](https://pipenv.pypa.io/)'
- en: '[5] [Plotly & Dash Project Code — GitHub](https://github.com/polmarin/plotly-dash)'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '[5] [Plotly & Dash 项目代码 — GitHub](https://github.com/polmarin/plotly-dash)'
