- en: Deploying SageMaker Endpoints With Terraform
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Terraform部署SageMaker端点
- en: 原文：[https://towardsdatascience.com/deploying-sagemaker-endpoints-with-terraform-3b09fb3e1d59](https://towardsdatascience.com/deploying-sagemaker-endpoints-with-terraform-3b09fb3e1d59)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/deploying-sagemaker-endpoints-with-terraform-3b09fb3e1d59](https://towardsdatascience.com/deploying-sagemaker-endpoints-with-terraform-3b09fb3e1d59)
- en: Infrastructure as Code With Terraform
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Terraform进行基础设施即代码
- en: '[](https://ram-vegiraju.medium.com/?source=post_page-----3b09fb3e1d59--------------------------------)[![Ram
    Vegiraju](../Images/07d9334e905f710d9f3c6187cf69a1a5.png)](https://ram-vegiraju.medium.com/?source=post_page-----3b09fb3e1d59--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3b09fb3e1d59--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3b09fb3e1d59--------------------------------)
    [Ram Vegiraju](https://ram-vegiraju.medium.com/?source=post_page-----3b09fb3e1d59--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://ram-vegiraju.medium.com/?source=post_page-----3b09fb3e1d59--------------------------------)[![Ram
    Vegiraju](../Images/07d9334e905f710d9f3c6187cf69a1a5.png)](https://ram-vegiraju.medium.com/?source=post_page-----3b09fb3e1d59--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3b09fb3e1d59--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3b09fb3e1d59--------------------------------)
    [Ram Vegiraju](https://ram-vegiraju.medium.com/?source=post_page-----3b09fb3e1d59--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----3b09fb3e1d59--------------------------------)
    ·7 min read·Mar 14, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----3b09fb3e1d59--------------------------------)
    ·阅读时间7分钟·2023年3月14日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/09fae694c66b87492fc2ff5f7e372912.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/09fae694c66b87492fc2ff5f7e372912.png)'
- en: Image from [Unsplash](https://unsplash.com/photos/KNZHyTpre18) by [Krishna Pandey](https://unsplash.com/@krishna2803)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自[Unsplash](https://unsplash.com/photos/KNZHyTpre18)，作者为[Krishna Pandey](https://unsplash.com/@krishna2803)
- en: '[Infrastructure as Code (IaC)](/infrastructure-as-code-with-aws-207239573de)
    is an essential concept to optimize and take your resources and infrastructure
    to production. IaC is an age old DevOps/Software practice and has a few key benefits:
    Resources are maintained centrally via code, which in turn optimizes the speed
    and collaboration required to take your architecture to production.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[基础设施即代码（IaC）](/infrastructure-as-code-with-aws-207239573de)是优化和将你的资源和基础设施推向生产的重要概念。IaC是一个古老的DevOps/软件实践，具有几个关键好处：资源通过代码集中维护，从而优化了将架构推向生产所需的速度和协作。'
- en: This software best practice like many other also applies to your Machine Learning
    tooling and infrastructure. For today’s article we’ll take a look at how we can
    utilize an IaC tool known as [Terraform](https://www.terraform.io/) to deploy
    a pre-trained SKLearn model on a SageMaker Endpoint for inference. We will explore
    how we can create a reusable template that you can adjust as you have to update
    your resources/hardware. With Terraform we can move from having standalone notebooks
    and individual Python files scattered everywhere to capturing all our necessary
    resources in one template file.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 像许多其他最佳软件实践一样，这也适用于你的机器学习工具和基础设施。在今天的文章中，我们将探讨如何利用一种被称为[Terraform](https://www.terraform.io/)的IaC工具，在SageMaker端点上部署一个预训练的SKLearn模型进行推断。我们将探索如何创建一个可重复使用的模板，你可以根据需要更新你的资源/硬件。使用Terraform，我们可以从将独立的笔记本和散落的Python文件集中到一个模板文件中来进行管理。
- en: Another option for Infrastructure as Code with SageMaker is [CloudFormation](/deploying-sagemaker-endpoints-with-cloudformation-b43f7d495640).
    You can reference this article, if that’s a preferred tool for your use-case.
    Note that **Terraform is Cloud Provider agnostic**, it spans across different
    cloud providers, whereas CloudFormation is specifically for AWS services.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 使用SageMaker进行基础设施即代码的另一种选择是[CloudFormation](/deploying-sagemaker-endpoints-with-cloudformation-b43f7d495640)。如果这是你用例的首选工具，你可以参考这篇文章。请注意，**Terraform是云服务提供商无关的**，它跨越了不同的云服务提供商，而CloudFormation专门用于AWS服务。
- en: '**NOTE**: For those of you new to AWS, make sure you make an account at the
    following [link](https://aws.amazon.com/console/) if you want to follow along.
    Make sure to also have the [AWS CLI](https://aws.amazon.com/cli/) installed to
    work with the example. This article will also assume basic knowledge of Terraform,
    take a look at this [guide](https://registry.terraform.io/providers/hashicorp/aws/latest/docs)
    if you need a starting guide and reference the following [instructions](https://developer.hashicorp.com/terraform/tutorials/aws-get-started/install-cli)
    for installation. The article also assumes an intermediate understanding of SageMaker
    Deployment, I would suggest following this [article](/deploying-a-pre-trained-sklearn-model-on-amazon-sagemaker-826a2b5ac0b6)
    for understanding Deployment/Inference more in depth, we will be using the same
    model in this article and mapping it over to Terraform.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**：如果你是 AWS 新手，确保你在以下[链接](https://aws.amazon.com/console/)注册一个账户，以便进行操作。同时，确保安装了[AWS
    CLI](https://aws.amazon.com/cli/)以便与示例配合使用。本文假设你对 Terraform 有基本了解，如果需要入门指南，请查看这个[指南](https://registry.terraform.io/providers/hashicorp/aws/latest/docs)，并参考以下[安装说明](https://developer.hashicorp.com/terraform/tutorials/aws-get-started/install-cli)。本文还假设你对
    SageMaker 部署有中级了解，我建议你阅读这篇[文章](/deploying-a-pre-trained-sklearn-model-on-amazon-sagemaker-826a2b5ac0b6)以深入理解部署/推断，我们将在本文中使用相同的模型并将其映射到
    Terraform。'
- en: Setup
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置
- en: As stated earlier we won’t really be focusing on the theory of model training
    and building. We’re going to quickly train a sample SKLearn model on the built-in
    [Boston Housing Dataset](https://www.cs.toronto.edu/~delve/data/boston/bostonDetail.html)
    that the package provides.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，我们不会真正关注模型训练和构建的理论。我们将快速在内置的[波士顿住房数据集](https://www.cs.toronto.edu/~delve/data/boston/bostonDetail.html)上训练一个示例
    SKLearn 模型，该数据集由包提供。
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Here we quickly validate that the local model performs inference as expected.
    The script also emits the **serialized model artifact** that we will provide to
    SageMaker for deployment. Next we create a [custom inference script](https://aws.plainenglish.io/adding-custom-inference-scripts-to-amazon-sagemaker-2208c3332510),
    that essentially serves as an entry point script for dealing with pre/post processing
    for SageMaker Endpoints.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们快速验证本地模型是否按预期进行推断。脚本还会生成**序列化模型工件**，我们将把它提供给 SageMaker 进行部署。接下来，我们创建一个[自定义推断脚本](https://aws.plainenglish.io/adding-custom-inference-scripts-to-amazon-sagemaker-2208c3332510)，该脚本基本上作为处理
    SageMaker 端点的预处理/后处理的入口点脚本。
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Next we wrap up both the script and the model artifact into a tarball format
    that SageMaker is compliant with. We then upload this model tarball into an S3
    Bucket, as that’s the main storage option for all artifacts that SageMaker works
    with.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将脚本和模型工件打包成 SageMaker 兼容的 tarball 格式。然后，我们将这个模型 tarball 上传到 S3 存储桶，因为这是
    SageMaker 使用的所有工件的主要存储选项。
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Terraform Variables
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Terraform 变量
- en: Within our template file (.tf) we first want to define something known as a
    [Terraform Variable](https://developer.hashicorp.com/terraform/language/values).
    With [Input Variables](https://developer.hashicorp.com/terraform/language/values/variables)
    specifically you can pass in values similar to arguments for functions/methods
    you define. Any values that you don’t want to hardcode, but also give default
    values to you can specify in the format of a variable. The variables we’ll be
    defining for a Real-Time SageMaker Endpoint are listed below.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的模板文件（.tf）中，我们首先定义一种称为[Terraform 变量](https://developer.hashicorp.com/terraform/language/values)的东西。具体来说，通过[输入变量](https://developer.hashicorp.com/terraform/language/values/variables)，你可以传递类似于函数/方法定义的参数的值。任何你不想硬编码的值，但也想赋予默认值的，可以以变量的格式指定。我们将为实时
    SageMaker 端点定义的变量如下。
- en: '**SageMaker IAM Role ARN**: This is the Role associated with the SageMaker
    service, attach all policies necessary for actions you will take with the service.
    Note, you can also define and reference a Role within Terraform itself.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SageMaker IAM 角色 ARN**：这是与 SageMaker 服务关联的角色，附加所有你将与服务进行的操作所需的策略。请注意，你也可以在
    Terraform 中定义并引用角色。'
- en: '**Container**: The [Deep Learning Container](https://aws.plainenglish.io/how-to-retrieve-amazon-sagemaker-deep-learning-images-ff4a5866299e)
    from AWS or your own [custom container](/bring-your-own-container-with-amazon-sagemaker-37211d8412f4)
    you have built to host your model.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**容器**：AWS 提供的[深度学习容器](https://aws.plainenglish.io/how-to-retrieve-amazon-sagemaker-deep-learning-images-ff4a5866299e)或你自己构建的[自定义容器](/bring-your-own-container-with-amazon-sagemaker-37211d8412f4)来托管你的模型。'
- en: '**Model Data**: The pre-trained model artifacts that we uploaded to S3, this
    can also be the trained artifacts emitted from a SageMaker Training Job.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型数据**：我们上传到 S3 的预训练模型工件，这也可以是从 SageMaker 训练作业中产生的训练工件。'
- en: '**Instance Type**: The hardware behind your real-time endpoint. You can also
    make the number of instances into a variable if you would like.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实例类型**：你实时端点背后的硬件。如果你愿意，也可以将实例数量设为变量。'
- en: 'For each variable you can define: the type, the default value, and a description.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个变量，你可以定义：类型、默认值和描述。
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: While we don’t cover it fully in depth in this article, you can also define
    variables for different hosting options within SageMaker. For example, within
    Serverless Inference you can define Memory Size and Concurrency as two variables
    that you want to set.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们在本文中不会深入探讨，但你也可以在 SageMaker 中为不同的托管选项定义变量。例如，在无服务器推理中，你可以将内存大小和并发性定义为两个你想设置的变量。
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Terraform Resources & Deployment
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Terraform 资源与部署
- en: 'The most essential Terraform building block is a [Resource](https://developer.hashicorp.com/terraform/language/resources).
    Within a Resource Block you essentially define an **infrastructure object**. For
    our use-case we specifically have three SageMaker building blocks: SageMaker Model,
    SageMaker Endpoint Configuration, and a SageMaker Endpoint. Each of these are
    linked in a chain and eventually help us create our desired endpoint.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 最基本的 Terraform 构建块是[资源](https://developer.hashicorp.com/terraform/language/resources)。在资源块中，你实际上定义了一个**基础设施对象**。对于我们的用例，我们具体有三个
    SageMaker 构建块：SageMaker 模型、SageMaker 端点配置和 SageMaker 端点。这些构建块彼此相连，最终帮助我们创建所需的端点。
- en: 'We can follow the Terraform Documentation for a [SageMaker Model](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sagemaker_model)
    to get started. First we define the resource itself which has two components:
    the terraform name for the resource and the following string is the name you define
    if you want to reference it later in the template. Another key part we notice
    here is how we can reference a variable value, using the Terraform key word **var**.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以参考 Terraform 文档中的[SageMaker 模型](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sagemaker_model)以开始。首先，我们定义资源本身，其中包含两个组件：资源的
    Terraform 名称以及你定义的用于在模板中稍后引用的名称。另一个关键部分是我们如何使用 Terraform 关键字**var**来引用变量值。
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Next for our SageMaker Model we define our container and model data that we
    defined earlier and reference those specific variables.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，对于我们的 SageMaker 模型，我们定义之前定义的容器和模型数据，并引用这些特定变量。
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Optionally within SageMaker you can also provide a [tag](https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_Tag.html)
    that you define for the specific object.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 可选地，在 SageMaker 中，你还可以为特定对象提供一个你定义的[标签](https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_Tag.html)。
- en: '[PRE7]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: We apply a similar format for our [Endpoint Configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sagemaker_endpoint_configuration),
    here we essentially define our hardware.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们对[端点配置](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sagemaker_endpoint_configuration)采用类似的格式，在这里我们实际上定义了我们的硬件。
- en: '[PRE8]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: We then reference this object in our [endpoint](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sagemaker_endpoint)
    creation.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们在[端点](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sagemaker_endpoint)创建中引用这个对象。
- en: '[PRE9]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Before we can deploy the template to provision our resources, make sure you
    have the AWS CLI configured with the following command.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们可以部署模板以配置资源之前，请确保你已经通过以下命令配置了 AWS CLI。
- en: '[PRE10]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Here we can then initialize our terraform project, with the following command.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以通过以下命令初始化我们的 Terraform 项目。
- en: '[PRE11]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: For deployment, we can then run another Terraform CLI command.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 对于部署，我们可以运行另一个 Terraform CLI 命令。
- en: '[PRE12]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![](../Images/394f374869a568053f345dd1c5d7bfa0.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/394f374869a568053f345dd1c5d7bfa0.png)'
- en: Resource Creation (Screenshot by Author)
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 资源创建（作者截图）
- en: While the endpoint is creating you can also validate this with the SageMaker
    Console.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在端点创建过程中，你也可以通过 SageMaker 控制台验证这一点。
- en: '![](../Images/3b5925f4f1900b3ae5fc9d56c8c022ae.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3b5925f4f1900b3ae5fc9d56c8c022ae.png)'
- en: Endpoint Creation SM Console (Screenshot by Author)
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 端点创建 SM 控制台（作者截图）
- en: Additional Resources & Conclusion
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 额外资源与结论
- en: '[](https://github.com/RamVegiraju/IaC-SageMaker-Deployment/tree/master/Terraform?source=post_page-----3b09fb3e1d59--------------------------------)
    [## IaC-SageMaker-Deployment/Terraform at master · RamVegiraju/IaC-SageMaker-Deployment'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://github.com/RamVegiraju/IaC-SageMaker-Deployment/tree/master/Terraform?source=post_page-----3b09fb3e1d59--------------------------------)
    [## IaC-SageMaker-Deployment/Terraform at master · RamVegiraju/IaC-SageMaker-Deployment'
- en: You can't perform that action at this time. You signed in with another tab or
    window. You signed out in another tab or…
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 你目前无法执行该操作。你在另一个标签页或窗口中已登录。你在另一个标签页或窗口中已登出…
- en: github.com](https://github.com/RamVegiraju/IaC-SageMaker-Deployment/tree/master/Terraform?source=post_page-----3b09fb3e1d59--------------------------------)
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: github.com](https://github.com/RamVegiraju/IaC-SageMaker-Deployment/tree/master/Terraform?source=post_page-----3b09fb3e1d59--------------------------------)
- en: The entire code for the example can be found in the repository above. I hope
    this article was a good introduction to Terraform in general as well as usage
    with SageMaker Inference. Infrastructure as Code is an essential practice that
    cannot be ignored in the world of MLOps when scaling to production.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 示例的整个代码可以在上述代码库中找到。希望这篇文章能为大家提供一个关于 Terraform 的总体介绍，以及与 SageMaker 推理的使用情况。基础设施即代码（Infrastructure
    as Code）是一项在 MLOps 世界中扩展到生产环境时不可忽视的关键实践。
- en: '*If you enjoyed this article feel free to connect with me on* [*LinkedIn*](https://www.linkedin.com/in/ram-vegiraju-81272b162/)
    *and subscribe to my Medium* [*Newsletter*](https://ram-vegiraju.medium.com/subscribe)*.
    If you’re new to Medium, sign up using my* [*Membership Referral*](https://ram-vegiraju.medium.com/membership)*.*'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你喜欢这篇文章，可以通过* [*LinkedIn*](https://www.linkedin.com/in/ram-vegiraju-81272b162/)
    *与我联系，并订阅我的 Medium* [*Newsletter*](https://ram-vegiraju.medium.com/subscribe)*。如果你是
    Medium 的新用户，可以通过我的* [*会员推荐链接*](https://ram-vegiraju.medium.com/membership)*进行注册。*'
