- en: Git Deep Dive for Data Scientists
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据科学家的 Git 深入探讨
- en: 原文：[https://towardsdatascience.com/git-deep-dive-for-data-scientists-1c9cc45c7612](https://towardsdatascience.com/git-deep-dive-for-data-scientists-1c9cc45c7612)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/git-deep-dive-for-data-scientists-1c9cc45c7612](https://towardsdatascience.com/git-deep-dive-for-data-scientists-1c9cc45c7612)
- en: Learn Git through Real-Life Scenarios
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过实际场景学习 Git
- en: '[](https://khuyentran1476.medium.com/?source=post_page-----1c9cc45c7612--------------------------------)[![Khuyen
    Tran](../Images/98aa66025ad29b618e875c75f1c400a5.png)](https://khuyentran1476.medium.com/?source=post_page-----1c9cc45c7612--------------------------------)[](https://towardsdatascience.com/?source=post_page-----1c9cc45c7612--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----1c9cc45c7612--------------------------------)
    [Khuyen Tran](https://khuyentran1476.medium.com/?source=post_page-----1c9cc45c7612--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://khuyentran1476.medium.com/?source=post_page-----1c9cc45c7612--------------------------------)[![Khuyen
    Tran](../Images/98aa66025ad29b618e875c75f1c400a5.png)](https://khuyentran1476.medium.com/?source=post_page-----1c9cc45c7612--------------------------------)[](https://towardsdatascience.com/?source=post_page-----1c9cc45c7612--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----1c9cc45c7612--------------------------------)
    [Khuyen Tran](https://khuyentran1476.medium.com/?source=post_page-----1c9cc45c7612--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----1c9cc45c7612--------------------------------)
    ·9 min read·Jul 1, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----1c9cc45c7612--------------------------------)
    ·阅读时间9分钟·2023年7月1日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/e30842919626704a8df3c72287b54e47.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e30842919626704a8df3c72287b54e47.png)'
- en: Image by Author
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: '*Originally published at* [*https://mathdatasimplified.com*](https://mathdatasimplified.com/2023/07/01/git-deep-dive-for-data-scientists/)
    *on July 1, 2023.*'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*最初发表于* [*https://mathdatasimplified.com*](https://mathdatasimplified.com/2023/07/01/git-deep-dive-for-data-scientists/)
    *于2023年7月1日。*'
- en: Why Choose Git for Your Data Science Project?
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么为你的数据科学项目选择 Git？
- en: Git is a version control system widely used in software development, but is
    it the right choice for your data science project? Absolutely.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Git 是一个在软件开发中广泛使用的版本控制系统，但它是否适合你的数据科学项目？绝对适合。
- en: 'Here are some reasons why Git is invaluable for data science:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 Git 对数据科学无价的几个原因：
- en: Version Control
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 版本控制
- en: '**Scenario:**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**场景：**'
- en: You replace the current data processing technique with a new approach. After
    realizing that the new approach is not producing the desired results, you want
    to revert back to a previous working version.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 你用新的数据处理方法替换了当前的方法。发现新方法没有产生预期结果后，你希望恢复到之前的有效版本。
- en: Unfortunately, without version control, it becomes a daunting task to undo multiple
    changes.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，没有版本控制，撤销多个更改会变成一项艰巨的任务。
- en: '**Solution:**'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案：**'
- en: With Git, you can track changes to your codebase, switch between different versions,
    compare changes, and roll back to a stable state if necessary.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Git，你可以跟踪代码库的更改，切换不同版本，比对变化，并在必要时恢复到稳定状态。
- en: '![](../Images/5037d5acd6ca03a0b38f322e71681c27.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5037d5acd6ca03a0b38f322e71681c27.png)'
- en: Image by Author
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Collaboration
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 协作
- en: '**Scenario:**'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**场景：**'
- en: You collaborate with other data scientists on a machine-learning project. To
    merge all changes made by team members, you need to manually exchange files and
    review each other’s code, which takes time and effort.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 你和其他数据科学家在一个机器学习项目上合作。为了合并团队成员做出的所有更改，你需要手动交换文件并审查彼此的代码，这需要时间和精力。
- en: '**Solution:**'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案：**'
- en: Git makes it easy to merge changes, resolve conflicts, and synchronize progress,
    allowing you and your team members to work more efficiently together.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Git 使得合并更改、解决冲突和同步进度变得简单，允许你和你的团队成员更高效地合作。
- en: '![](../Images/077961146c454a288fac17990734f0ef.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/077961146c454a288fac17990734f0ef.png)'
- en: Image by Author
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Branching
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分支
- en: '**Scenario:**'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**场景：**'
- en: You want to explore new approaches to enhance your model’s performance but are
    hesitant to make changes directly to the production code. Any unintended impact
    on the deployed model could have significant consequences for your company.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 你希望探索新的方法来提升模型的性能，但又不愿直接更改生产代码。对已部署模型的任何意外影响可能会对公司产生重大后果。
- en: '**Solution:**'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案：**'
- en: With Git’s branching, you can create separate branches for different features.
    This allows you to test and iterate without compromising the stability of the
    production branch.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 利用 Git 的分支功能，你可以为不同的功能创建独立的分支。这使你能够进行测试和迭代，而不会影响生产分支的稳定性。
- en: '![](../Images/30572e3b261a432ca738201afc8f2cda.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/30572e3b261a432ca738201afc8f2cda.png)'
- en: Image by Author
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图片作者
- en: Backup
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 备份
- en: '**Scenario:**'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**场景：**'
- en: A hardware failure or theft results in the loss of all your code, leaving you
    devastated and setting you back months of work.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 硬件故障或盗窃会导致你所有的代码丢失，让你感到沮丧，并使你在几个月的工作中陷入困境。
- en: '**Solution:**'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案：**'
- en: Git backs up your projects by securely storing them on remote repositories.
    Thus, even if you encounter such unfortunate events, you can restore your codebase
    from the remote repository and continue your work without losing significant progress.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Git 通过将你的项目安全地存储在远程仓库中来备份你的项目。因此，即使遇到这样的不幸事件，你也可以从远程仓库恢复代码库，继续工作而不会丧失重要进展。
- en: '![](../Images/a88960ca14142a5299b16825ee08862f.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a88960ca14142a5299b16825ee08862f.png)'
- en: Image by Author
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图片作者
- en: How to Use Git
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用 Git
- en: Now that we understand the value of Git in a data science project, let’s explore
    how we can effectively use it in different scenarios.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们了解了 Git 在数据科学项目中的价值，让我们探索如何在不同场景中有效地使用它。
- en: Initialize Git
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 初始化 Git
- en: 'To initialize Git in your current project and upload your project to a remote
    repository, follow these steps:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 要在当前项目中初始化 Git 并将项目上传到远程仓库，请按照以下步骤操作：
- en: 'First, initialize a new Git repository in the project directory:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在项目目录中初始化一个新的 Git 仓库：
- en: '[PRE0]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Next, add a remote repository to your local Git repository. To use GitHub as
    the remote repository, create a new repository on GitHub and copy its URL.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，将远程仓库添加到你的本地 Git 仓库中。要使用 GitHub 作为远程仓库，请在 GitHub 上创建一个新仓库并复制其 URL。
- en: '![](../Images/30972052e000fa20baa0cfafbfe85372.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/30972052e000fa20baa0cfafbfe85372.png)'
- en: Image by Author
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图片作者
- en: 'Then, add the URL to your local Git repository with the name “origin”:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，将 URL 添加到你的本地 Git 仓库中，命名为“origin”：
- en: '[PRE1]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Next, stage changes or new files in your Git repository:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在你的 Git 仓库中暂存更改或新文件：
- en: '[PRE2]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Review the list of changes to be committed:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 审核待提交的更改列表：
- en: '[PRE3]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Save the staged changes permanently in the repository’s history along with
    a commit message:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 将暂存的更改永久保存到仓库历史中，并附上提交消息：
- en: '[PRE4]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Once your commits are made and stored in your local repository, you can share
    your changes with others by pushing them to a remote repository.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你的提交完成并存储在本地仓库中，你可以通过将它们推送到远程仓库与他人共享你的更改。
- en: '[PRE5]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: After running this command, the “main” branch on the remote repository will
    receive the latest changes from your local repository.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 运行此命令后，远程仓库上的“main”分支将接收来自本地仓库的最新更改。
- en: '![](../Images/4fc7909d84dd1b47503388811c38ed99.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4fc7909d84dd1b47503388811c38ed99.png)'
- en: Image by Author
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图片作者
- en: Contribute to an Existing Project
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为现有项目做出贡献
- en: 'To contribute to an existing project, start by creating a local copy of the
    remote Git repository on your local machine:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 要为现有项目做出贡献，首先在本地机器上创建远程 Git 仓库的本地副本：
- en: '[PRE6]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This command will create a new repository with the same name as the remote
    repository. To access the files, navigate to the repository directory:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令将创建一个与远程仓库同名的新仓库。要访问文件，请导航到仓库目录：
- en: '[PRE7]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: It is a good practice to make changes on a separate branch rather than the “main”
    branch to avoid any impact on the main codebase.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在“main”分支之外的单独分支上进行更改是一种良好的实践，以避免对主要代码库产生任何影响。
- en: 'Create and switch to a new branch using:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令创建并切换到一个新分支：
- en: '[PRE8]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Make some changes to the new branch, then add, commit, and push the changes
    to the new branch on the remote Git repository:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 对新分支进行一些更改，然后将更改添加、提交并推送到远程 Git 仓库的新分支上：
- en: '[PRE9]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: After pushing the commit, you can create a pull request to merge the changes
    into the “main” branch.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 推送提交后，你可以创建拉取请求，将更改合并到“main”分支中。
- en: '![](../Images/15b2689a1259f114d683ef5862be9936.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/15b2689a1259f114d683ef5862be9936.png)'
- en: Image by Author
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图片作者
- en: After your colleague approves and merges your pull request, your code will be
    integrated into the “main” branch.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的同事批准并合并你的拉取请求后，你的代码将被集成到“main”分支中。
- en: Merge Local Changes with Remote Changes
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将本地更改与远程更改合并
- en: Imagine that you have created a branch called “feat-2” from the main branch.
    After making several changes to the “feat-2” branch, you discovered that the main
    branch has been updated. How do you merge the remote changes from the main branch
    into the local branch?
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你从主分支创建了一个名为“feat-2”的分支。在对“feat-2”分支进行了一些更改之后，你发现主分支已经更新。你怎么将远程更改合并到本地分支中？
- en: '![](../Images/1cb37d2b49af0bd60c18077d0fb25764.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1cb37d2b49af0bd60c18077d0fb25764.png)'
- en: Image by Author
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: First, make sure your local work is saved by staging and committing local changes.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，通过暂存和提交本地更改确保你的本地工作已保存。
- en: '[PRE10]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This prevents the remote changes from overriding your work.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以防止远程更改覆盖你的工作。
- en: 'Next, pull the changes from the main branch on the remote repository using
    `git pull`. When executing this command for the first time, you will be prompted
    to choose a strategy for reconciling the branches. Here are the available options:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用 `git pull` 从远程仓库的主分支拉取更改。第一次执行此命令时，你将被提示选择一种策略来协调分支。以下是可用的选项：
- en: '[PRE11]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Running `git pull origin main --no-rebase` will create a new merge commit in
    the "feat-2" branch that ties together the histories of the "main" branch and
    the "feat-2" branch.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 运行 `git pull origin main --no-rebase` 将在“feat-2”分支中创建一个新的合并提交，将“main”分支和“feat-2”分支的历史记录联系在一起。
- en: '![](../Images/5208931e81b49ee7deb94c2c5c84af19.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5208931e81b49ee7deb94c2c5c84af19.png)'
- en: Image by Author
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Running `git pull origin main --rebase` will perform a rebase operation, which
    places the commits from the "feat-2" branch on top of the "main" branch.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 运行 `git pull origin main --rebase` 将执行变基操作，将“feat-2”分支的提交放在“main”分支之上。
- en: '![](../Images/ad3570343292409421b509f4d58e4714.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ad3570343292409421b509f4d58e4714.png)'
- en: Image by Author
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Rebase does not create new merge commits as merge does; instead, it modifies
    the existing commits of the “feat-2” branch. This results in a cleaner commit
    history.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 变基不会像合并那样创建新的合并提交；而是修改现有的“feat-2”分支的提交记录。这会导致更干净的提交历史。
- en: However, the rebase command should be done with caution, particularly when other
    team members are actively using the same branch, such as the “feat-2” branch.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，变基命令需要谨慎使用，特别是当其他团队成员也在积极使用相同的分支，例如“feat-2”分支时。
- en: If you rebase your “feat-2” branch while others are also working on it, it can
    lead to inconsistencies in the branch history. Git may face difficulties when
    attempting to synchronize these divergent branches.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在其他人也在工作于“feat-2”分支时进行变基操作，可能会导致分支历史的不一致。Git 在尝试同步这些分支时可能会遇到困难。
- en: '![](../Images/506b53bccd53bd84d0581c82af5f769f.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/506b53bccd53bd84d0581c82af5f769f.png)'
- en: Image by Author
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: If you’re new to Git and prioritize simplicity over maintaining a clean history,
    use the merge approach as the default option as it is generally easier to understand
    and use compared to rebase.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是 Git 新手，并且更重视简单性而不是维护干净的历史，使用合并方法作为默认选项，因为它通常比变基更容易理解和使用。
- en: Revert Back to the Previous Commit
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 恢复到上一个提交
- en: 'Imagine this: After creating new commits, you realized that errors have been
    made within them and want to revert back to a specific commit. How do you do that?'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下：在创建了新的提交之后，你发现其中存在错误，并且想要恢复到某个特定的提交。你该怎么做？
- en: 'Start with identifying the commit hash of the specific commit you want to revert
    by running:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，通过运行以下命令确定要恢复的特定提交的哈希值：
- en: '[PRE12]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Let’s assume you want to revert back to “commit-1”, you can either use `git
    revert` or use `git reset`.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你想要恢复到“commit-1”，你可以使用 `git revert` 或 `git reset`。
- en: '`git revert` creates a new commit that undoes the changes made after a specified
    commit.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '`git revert` 创建一个新的提交，用于撤销在指定提交之后所做的更改。'
- en: '![](../Images/16a48a0b0058f6bc0f78ff50afcc6575.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/16a48a0b0058f6bc0f78ff50afcc6575.png)'
- en: Image by Author
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: '`git reset` modifies the commit history by changing the branch pointer to the
    specified commit.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '`git reset` 通过将分支指针更改为指定的提交来修改提交历史。'
- en: '![](../Images/599ffafd41490cfaa1e3aea22d255338.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/599ffafd41490cfaa1e3aea22d255338.png)'
- en: Image by Author
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: While `git reset` keeps the commit history clean, it is more destructive since
    it discards commits. `git revert` is a safer option as it leaves the original
    commits intact.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 `git reset` 保持了提交历史的整洁，但它更具破坏性，因为它会丢弃提交。`git revert` 是一个更安全的选择，因为它保留了原始提交。
- en: Good Practices
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 好习惯
- en: Ignore Large and Private Files
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 忽略大型和私有文件
- en: In a Git repository, it’s essential to exclude specific files or directories
    from version control to address issues like large file sizes and privacy concerns.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Git 仓库中，排除特定文件或目录以解决如文件大小过大和隐私问题等问题是至关重要的。
- en: 'In a data science project, there are certain files you should ignore, such
    as datasets and secrets, for the following reasons:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据科学项目中，你应该忽略某些文件，例如数据集和秘密，原因如下：
- en: 'Datasets: Versioning binary datasets can significantly increase the repository’s
    size.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据集：对二进制数据集进行版本控制可能会显著增加仓库的大小。
- en: 'Secrets: Data science projects often require credentials or API keys for accessing
    external services. Including these secrets in the codebase can pose a security
    risk if the repository is compromised or publicly shared.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 秘密：数据科学项目通常需要凭证或 API 密钥来访问外部服务。如果将这些秘密包含在代码库中，如果仓库被泄露或公开共享，将会存在安全风险。
- en: 'To exclude specific files or directories, you can add them to the .gitignore
    file located in the root directory of your project. Here are some examples:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 要排除特定的文件或目录，你可以将它们添加到项目根目录下的 .gitignore 文件中。以下是一些示例：
- en: '[PRE13]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Additionally, you should ignore non-essential files that can contribute to large
    file sizes or are specific to your development environment, such as dependency
    management files like “venv” or editor-specific files like “.vscode”.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你还应该忽略那些可能导致文件大小过大或特定于你的开发环境的非必要文件，例如依赖管理文件如“venv”或编辑器特定文件如“.vscode”。
- en: Find a list of useful `.gitignore` templates for your language [here](https://github.com/github/gitignore).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里可以找到适用于你的语言的有用 `.gitignore` 模板列表 [here](https://github.com/github/gitignore)。
- en: Have Small Commits
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保持小的提交
- en: Break down your changes into small, focused commits. This approach ensures that
    each commit has a clear purpose, making it easier to understand, revert changes
    if needed, and minimizes the chances of conflicts.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 将更改拆分成小而集中的提交。这种方法确保每次提交都有明确的目的，使其更容易理解、在需要时还原更改，并且减少冲突的可能性。
- en: '![](../Images/998c60a091bdb54a980e453b0af070ad.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/998c60a091bdb54a980e453b0af070ad.png)'
- en: Image by Author
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图像
- en: Have a Descriptive Branch name
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用描述性分支名称
- en: Opt for descriptive branch names that accurately reflect the task or feature
    you’re working on. Avoid vague names like “add file” or personal identifiers like
    “john-branch.” Instead, choose more descriptive names such as “change-linear-model-to-tree-model”
    or “encode-categorical-columns.”
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 选择准确反映你正在处理的任务或特性的描述性分支名称。避免使用模糊的名称如“add file”或个人标识符如“john-branch”。相反，选择更具描述性的名称，如“change-linear-model-to-tree-model”或“encode-categorical-columns”。
- en: Standardize Code Format for Easier Code Review
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标准化代码格式以便于代码审查
- en: Consistent code formatting helps reviewers focus on the logic of the code rather
    than formatting inconsistencies.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 一致的代码格式化帮助审查者将注意力集中在代码的逻辑上，而不是格式上的不一致。
- en: In the example code snippet below, it is challenging for reviewers to pinpoint
    the addition of the print statement due to irregular indentation, spacing, and
    quotation marks.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码片段示例中，由于不规则的缩进、空格和引号，审查者很难准确定位 print 语句的添加。
- en: '![](../Images/cf169ed97b77fd6a1efe2e6be2cc00c7.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cf169ed97b77fd6a1efe2e6be2cc00c7.png)'
- en: Image by Author
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图像
- en: Standardizing the code increases code readability.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 标准化代码提高了代码的可读性。
- en: '![](../Images/c19aea6fe5f409b107fcde46008f93b7.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c19aea6fe5f409b107fcde46008f93b7.png)'
- en: Image by Author
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图像
- en: 'My favorite tools to format and standardize code are:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢的格式化和标准化代码的工具有：
- en: '[Ruff](https://github.com/astral-sh/ruff): An extremely fast Python linter,
    written in Rust.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Ruff](https://github.com/astral-sh/ruff): 一个极其快速的 Python linter，使用 Rust 编写。'
- en: '[black](https://black.readthedocs.io/en/stable/): A Python code formatter that
    automatically reformats your code.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[black](https://black.readthedocs.io/en/stable/): 一个 Python 代码格式化工具，可以自动重新格式化你的代码。'
- en: Tools to Complement Git
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 补充 Git 的工具
- en: pre-commit
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: pre-commit
- en: 'Maintaining consistent code style according to style guides before every commit
    can be overwhelming. pre-commit automates this process by checking and reformatting
    your code prior to committing it. Here’s an example of how it works:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在每次提交之前，按照风格指南维护一致的代码风格可能会令人感到不堪重负。pre-commit 通过在提交之前检查和重新格式化代码来自动化这一过程。以下是其工作原理的示例：
- en: '[PRE14]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: DVC
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DVC
- en: '[DVC](https://dvc.org/doc/start) (Data Version Control) is a system for data
    version control. It is essentially like Git but is used for data. DVC allows you
    to store your original data in a separate location while keeping track of different
    versions of the data in Git.'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '[DVC](https://dvc.org/doc/start)（数据版本控制）是一个用于数据版本控制的系统。它本质上类似于 Git，但用于数据。DVC
    允许你将原始数据存储在一个独立的位置，同时在 Git 中跟踪数据的不同版本。'
- en: '![](../Images/03eaadf18d44853d31f5d8d3c6f72478.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/03eaadf18d44853d31f5d8d3c6f72478.png)'
- en: Image by Author
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Learn more about how to use DVC in [this article](https://mathdatasimplified.com/2023/02/20/introduction-to-dvc-data-version-control-tool-for-machine-learning-projects-2/).
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 了解更多关于如何在[这篇文章](https://mathdatasimplified.com/2023/02/20/introduction-to-dvc-data-version-control-tool-for-machine-learning-projects-2/)中使用
    DVC 的信息。
- en: Conclusion
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: By adopting Git and leveraging its features along with these complementary tools,
    you can increase your productivity, maintain code quality, and efficiently collaborate
    with your teammates.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 通过采用 Git 并利用其功能以及这些补充工具，你可以提高生产力，保持代码质量，并与团队成员高效协作。
- en: 'I love writing about data science concepts and playing with different data
    science tools. You can stay up-to-date with my latest posts by:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢撰写数据科学概念的文章并玩弄各种数据科学工具。你可以通过以下方式跟踪我最新的帖子：
- en: Subscribing to my newsletter on [Data Science Simplified](https://mathdatasimplified.com/subscribe/).
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 订阅我在[数据科学简化](https://mathdatasimplified.com/subscribe/)上的新闻通讯。
- en: Connect with me on [LinkedIn](https://www.linkedin.com/in/khuyen-tran-1401/)
    and [Twitter](https://twitter.com/KhuyenTran16).
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[LinkedIn](https://www.linkedin.com/in/khuyen-tran-1401/)和[Twitter](https://twitter.com/KhuyenTran16)上与我联系。
- en: Reference
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考
- en: 'Atlassian. (n.d.). *Merging vs. rebasing: Atlassian Git Tutorial*. Atlassian.
    [https://www.atlassian.com/git/tutorials/merging-vs-rebasing](https://www.atlassian.com/git/tutorials/merging-vs-rebasing)'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: Atlassian. (n.d.). *合并与变基：Atlassian Git 教程*。Atlassian. [https://www.atlassian.com/git/tutorials/merging-vs-rebasing](https://www.atlassian.com/git/tutorials/merging-vs-rebasing)
