- en: 'Back to the Future: Analyzing Time Series Data with Markov Transition Matrices'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 回到未来：使用马尔可夫转移矩阵分析时间序列数据
- en: 原文：[https://towardsdatascience.com/time-series-data-markov-transition-matrices-7060771e362b?source=collection_archive---------1-----------------------#2023-02-01](https://towardsdatascience.com/time-series-data-markov-transition-matrices-7060771e362b?source=collection_archive---------1-----------------------#2023-02-01)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/time-series-data-markov-transition-matrices-7060771e362b?source=collection_archive---------1-----------------------#2023-02-01](https://towardsdatascience.com/time-series-data-markov-transition-matrices-7060771e362b?source=collection_archive---------1-----------------------#2023-02-01)
- en: Conceptual overview and practical applications
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概念概述及实际应用
- en: '[](https://kcpub21.medium.com/?source=post_page-----7060771e362b--------------------------------)[![Chinmay
    Kakatkar](../Images/873531f24cd4ee8a927669a211d61ae8.png)](https://kcpub21.medium.com/?source=post_page-----7060771e362b--------------------------------)[](https://towardsdatascience.com/?source=post_page-----7060771e362b--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----7060771e362b--------------------------------)
    [Chinmay Kakatkar](https://kcpub21.medium.com/?source=post_page-----7060771e362b--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://kcpub21.medium.com/?source=post_page-----7060771e362b--------------------------------)[![Chinmay
    Kakatkar](../Images/873531f24cd4ee8a927669a211d61ae8.png)](https://kcpub21.medium.com/?source=post_page-----7060771e362b--------------------------------)[](https://towardsdatascience.com/?source=post_page-----7060771e362b--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----7060771e362b--------------------------------)
    [Chinmay Kakatkar](https://kcpub21.medium.com/?source=post_page-----7060771e362b--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F87ab8c40e0ed&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftime-series-data-markov-transition-matrices-7060771e362b&user=Chinmay+Kakatkar&userId=87ab8c40e0ed&source=post_page-87ab8c40e0ed----7060771e362b---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----7060771e362b--------------------------------)
    ·11 min read·Feb 1, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F7060771e362b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftime-series-data-markov-transition-matrices-7060771e362b&user=Chinmay+Kakatkar&userId=87ab8c40e0ed&source=-----7060771e362b---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F87ab8c40e0ed&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftime-series-data-markov-transition-matrices-7060771e362b&user=Chinmay+Kakatkar&userId=87ab8c40e0ed&source=post_page-87ab8c40e0ed----7060771e362b---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----7060771e362b--------------------------------)
    ·11分钟阅读·2023年2月1日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F7060771e362b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftime-series-data-markov-transition-matrices-7060771e362b&user=Chinmay+Kakatkar&userId=87ab8c40e0ed&source=-----7060771e362b---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7060771e362b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftime-series-data-markov-transition-matrices-7060771e362b&source=-----7060771e362b---------------------bookmark_footer-----------)![](../Images/6620ab2c70cc6c9e711ca7cedefb60d8.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7060771e362b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftime-series-data-markov-transition-matrices-7060771e362b&source=-----7060771e362b---------------------bookmark_footer-----------)![](../Images/6620ab2c70cc6c9e711ca7cedefb60d8.png)'
- en: 'Image by [Oto Godfrey](http://OtoGodfrey.com) and [Justin Morton](http://JMortonPhoto.com)
    from [Wikimedia Commons](https://commons.wikimedia.org/wiki/File:TeamTimeCar.com-BTTF_DeLorean_Time_Machine-OtoGodfrey.com-JMortonPhoto.com-07.jpg):
    Free to use under [CC-BY-SA-4.0](https://commons.wikimedia.org/wiki/Category:CC-BY-SA-4.0)
    license'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Oto Godfrey](http://OtoGodfrey.com) 和 [Justin Morton](http://JMortonPhoto.com)
    提供，来自 [Wikimedia Commons](https://commons.wikimedia.org/wiki/File:TeamTimeCar.com-BTTF_DeLorean_Time_Machine-OtoGodfrey.com-JMortonPhoto.com-07.jpg)：根据
    [CC-BY-SA-4.0](https://commons.wikimedia.org/wiki/Category:CC-BY-SA-4.0) 许可自由使用
- en: In this article, we will look at how reframing time series data using Markov
    transition matrices can yield interesting descriptive insights as well as elegant
    approaches for forecasting, backcasting, and the analysis of convergence. Going
    backwards and forwards in time — just like Doc’s retro-fitted DeLorean time machine
    in the sci-fi classic *Back to the Future*.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将探讨如何通过使用马尔科夫转移矩阵重新构造时间序列数据，来获得有趣的描述性洞察以及优雅的预测、回溯和收敛分析方法。就像科幻经典《回到未来》中Doc改装的DeLorean时间机器一样，前进和后退时间。
- en: '**Note:** All images of equations and diagrams in the following sections have
    been created by the author of this article.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 以下章节中的所有方程式和图示均由本文作者创建。'
- en: Basic Building Blocks
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本构建块
- en: 'Let *E* define the set of *k* unique events that make up the time series data.
    For instance, a time series may be composed of the following three basic and unique
    events that represent the types of path trajectories observed when the data is
    plotted across discrete time-steps: *down*, *flat*, and *up*. Let *S* define a
    sequence of length *n* (denoting the discrete time-steps), consisting of events
    defined in *E*, that represents some or all of the data. For example, the sequence
    [*up*, *down*, *up*, *flat*, *up*] represents five time-steps of data.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 设 *E* 定义组成时间序列数据的 *k* 个独特事件。例如，一个时间序列可能由以下三个基本且独特的事件组成，这些事件代表在离散时间步上绘制数据时观察到的路径轨迹类型：*下跌*、*平稳*
    和 *上涨*。设 *S* 定义一个长度为 *n*（表示离散时间步）的序列，包含在 *E* 中定义的事件，代表部分或全部数据。例如，序列 [*上涨*、*下跌*、*上涨*、*平稳*、*上涨*]
    代表五个时间步的数据。
- en: One can now define a Markov transition matrix *M* of dimensions *k*², such that
    each element *M(i, j)* describes the probability of transitioning from an event
    *E(i)* in time-step *t* to an event *E(j)* in time step *t+1* in the given time
    series. In other words, *M(i, j)* denotes the conditional probability of transitioning
    between the two events in consecutive time-steps. In a graph-theoretical sense,
    events *E(i)* and *E(j)* can be thought of as nodes that are connected by a directed
    edge *E(i)* → *E(j)*, if *E(i)* is followed by *E(j)* in the time series data;
    then the Markov transition matrix *M* essentially represents a normalized version
    of an adjacency matrix (or cooccurrence matrix) of the events that are depicted
    by nodes in the graph.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 现在可以定义一个维度为*k*²的马尔科夫转移矩阵 *M*，其中每个元素 *M(i, j)* 描述了从时间步 *t* 的事件 *E(i)* 转移到时间步
    *t+1* 的事件 *E(j)* 的概率。换句话说，*M(i, j)* 表示在连续时间步之间转移的条件概率。从图论的角度看，事件 *E(i)* 和 *E(j)*
    可以被视作通过有向边 *E(i)* → *E(j)* 连接的节点，如果 *E(i)* 在时间序列数据中被 *E(j)* 跟随；那么马尔科夫转移矩阵 *M*
    本质上表示了图中节点所描绘事件的邻接矩阵（或共现矩阵）的归一化版本。
- en: Next, let us see what we can do with these basic building blocks.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看这些基本构建块可以做些什么。
- en: 'Transition Matrices in Action: A Simple Example'
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 转移矩阵的应用：一个简单的例子
- en: 'Suppose we have the following raw time series data covering 11 consecutive
    time-steps: [1, 2, -2, -1, 0, 0, 2, 2, 1, 2, 3]. Using the simplified view of
    path trajectories described above, we can transform the data into the following
    sequence of 10 events that describe the transitions between adjacent time-steps:
    [*up*, *down*, *up*, *up*, *flat*, *up*, *flat*, *down*, *up*, *up*].'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们有以下涵盖 11 个连续时间步的原始时间序列数据：[1, 2, -2, -1, 0, 0, 2, 2, 1, 2, 3]。使用上述描述的路径轨迹简化视图，我们可以将数据转换为描述相邻时间步之间转移的以下
    10 个事件序列：[*上涨*、*下跌*、*上涨*、*上涨*、*平稳*、*上涨*、*平稳*、*下跌*、*上涨*、*上涨*]。
- en: 'We can now construct the following adjacency matrix that captures the pattern
    of cooccurrences in the event sequence:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以构造以下邻接矩阵，以捕捉事件序列中共现的模式：
- en: '![](../Images/bfd60f317863273123ab593a7bef8816.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bfd60f317863273123ab593a7bef8816.png)'
- en: Element *A(i, j)* denotes the number of times that an event *i* at some time-step
    *t* is followed by an event *j* at time-step *t+1* in our event sequence; *i*
    and *j* are the row and column indices, respectively. Note that the rows denote
    the events in the order *up*, *flat* and *down*, from top to bottom, and the columns
    denote the same from left to right. For example, the top-left element of *A* says
    that an *up* event was followed by another *up* event twice in the given event
    sequence. The center-right element of *A* says that a *flat* event was followed
    by a *down* event once in the event sequence. And so on.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 元素 *A(i, j)* 表示在我们的事件序列中，在某个时间步 *t* 上发生事件 *i* 后，接着发生事件 *j* 在时间步 *t+1* 的次数；*i*
    和 *j* 分别是行和列索引。请注意，行表示事件的顺序为 *up*、*flat* 和 *down*，从上到下，而列表示从左到右的顺序相同。例如，*A* 的左上角元素表示在给定的事件序列中，一个
    *up* 事件后面跟随另一个 *up* 事件的次数为两次。*A* 的中心右侧元素表示在事件序列中，一个 *flat* 事件后面跟随一个 *down* 事件的次数为一次。依此类推。
- en: 'We can normalize matrix *A* by row or by column to yield a transition matrix.
    If we were to use row-based normalization, then element *M(i, j)* would describe
    the probability of seeing event *E(j)* in time step *t+1* given event *E(i)* in
    time-step *t*. The probabilities in each row should thus sum to 1\. In our example,
    the row-normalized matrix looks as follows:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过行或列标准化矩阵 *A* 来得到转移矩阵。如果我们使用基于行的标准化，则元素 *M(i, j)* 将描述在时间步 *t* 给定事件 *E(i)*
    的情况下，在时间步 *t+1* 看到事件 *E(j)* 的概率。因此，每一行中的概率应加起来等于 1。在我们的示例中，行标准化矩阵如下所示：
- en: '![](../Images/d169d384275fcfb0feda908ffe8ba511.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d169d384275fcfb0feda908ffe8ba511.png)'
- en: 'Similarly, if we were to use column-based normalization, then element *M(i,
    j)* would describe the probability of having an event *E(i)* in time-step *t-1*
    given an event *E(j)* in time step *t*. Now the probabilities in each column should
    sum to 1\. In our example, the column-normalized matrix looks as follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，如果我们使用基于列的标准化，则元素 *M(i, j)* 将描述在时间步 *t* 给定事件 *E(j)* 的情况下，在时间步 *t-1* 发生事件
    *E(i)* 的概率。现在每一列中的概率应加起来等于 1。在我们的示例中，列标准化矩阵如下所示：
- en: '![](../Images/08eac104561338f9b91b673ba4a5881b.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/08eac104561338f9b91b673ba4a5881b.png)'
- en: Notice that conditional probabilities of row-normalization (notionally going
    forwards in time) can differ from the conditional probabilities of column-normalization
    (looking backwards in time).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，行标准化的条件概率（名义上是向前看）可能与列标准化的条件概率（向后看）不同。
- en: Example in Python Code
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python 代码示例
- en: To try out these concepts, here is some basic Python code that captures what
    is going on in the above example.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要尝试这些概念，这里有一些基本的 Python 代码，它捕捉了上述示例中的内容。
- en: 'Make sure you have the Pandas package installed first:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 首先确保你已经安装了 Pandas 包：
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Then run the following code:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 然后运行以下代码：
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This should produce the following transition matrices:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该生成以下转移矩阵：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: A neat way to visualize transition matrices is by depicting them as directed
    weighted graphs using a graphing package like [Graphviz](https://graphviz.org/)
    or [NetworkX](https://networkx.org/).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 一种很好的可视化转移矩阵的方法是将它们描绘为有向加权图，使用像 [Graphviz](https://graphviz.org/) 或 [NetworkX](https://networkx.org/)
    这样的绘图包。
- en: 'We will use Graphviz here, so you will need to have the package installed to
    follow along:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在这里使用 Graphviz，因此你需要安装该包以便跟随操作：
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: It is worth going through the short and sweet [official installation guide](https://graphviz.readthedocs.io/en/stable/manual.html#installation)
    to make sure you have the package properly set up, especially for Windows users
    that may have to perform some additional installation steps.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 值得浏览简短而精炼的 [官方安装指南](https://graphviz.readthedocs.io/en/stable/manual.html#installation)，以确保你正确安装了该包，特别是对于可能需要执行一些额外安装步骤的
    Windows 用户。
- en: 'Once Graphviz is set up, create some helper functions for graphing:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 Graphviz 设置好了，创建一些用于绘图的辅助函数：
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Now you can generate each transition matrix. By default, the outputted graph
    will be stored in you working directory.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以生成每个转移矩阵。默认情况下，输出的图形将存储在你的工作目录中。
- en: '[PRE5]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Raw co-occurrences:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 原始共现：
- en: '![](../Images/f25db0921cb6c38575e637365c7edc17.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f25db0921cb6c38575e637365c7edc17.png)'
- en: 'Row-normalized transition probabilities:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 行标准化的转移概率：
- en: '![](../Images/c5973da7968dbced303123fb0d1b6395.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c5973da7968dbced303123fb0d1b6395.png)'
- en: 'Column-normalized transition probabilities:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 列标准化的转移概率：
- en: '![](../Images/ca757e426361a367cbfc9fae62501773.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ca757e426361a367cbfc9fae62501773.png)'
- en: Practical Applications
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实际应用
- en: Descriptive Insights
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 描述性见解
- en: 'The first and most obvious thing we can do with transition matrices is gain
    descriptive insights just by inspecting the matrices and their visual graph representations.
    For instance, with the output of our example from the previous section, we can
    glean high-level insights such as the following:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以用转移矩阵做的第一件最明显的事情是通过检查矩阵及其可视化图形表示来获得描述性见解。例如，利用我们前一节的示例输出，我们可以得到如下高层次的见解：
- en: Of the 9 possible event transitions, 3 never occur in our sample (*flat* → *flat*,
    *down* → *down*, and *down* → *flat*). A low probability of consecutive flat events
    may indicate volatility in the system that the time series data is tracking.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 9 种可能的事件转移中，有 3 种在我们的样本中从未发生过（*平稳* → *平稳*、*下降* → *下降* 和 *下降* → *平稳*）。连续的平稳事件的低概率可能表明时间序列数据所跟踪的系统中的波动性。
- en: An *up* event is the only event type that has a non-zero probability (0.4) of
    occurring consecutively. In fact, this transition probability is one of the highest
    in our data, and may point to reinforcing effects in the system underlying the
    data.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*上升* 事件是唯一一个有非零概率（0.4）连续发生的事件类型。事实上，这个转移概率在我们的数据中是最高的之一，可能指向数据背后的系统中的强化效应。'
- en: Row-based and column-based normalization yield different matrices in our case,
    albeit with some overlaps. This tells us that our time series is essentially non-symmetrical
    across time, i.e., the patterns we see are somewhat different depending on whether
    we look back or look forward from a given reference point in time.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在我们的案例中，基于行和列的归一化产生了不同的矩阵，尽管有些重叠。这告诉我们我们的时间序列在时间上本质上是不对称的，即我们观察到的模式在回顾或前瞻时会有所不同。
- en: Forecasting and Backcasting
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预测与回溯
- en: By chaining together copies of the transition matrix, we can generate probabilities
    of event occurrences going forwards and backwards in time; this can be called
    *forecasting* and *backcasting*, respectively. A central assumption here is that
    “history does not matter”; regardless of what time-step *t* we take as a reference
    point, we assume that the transition matrix gives relevant probabilities for *t+1*
    (if row-normalized) and *t-1* (if column-normalized). The upshot is that we can
    use the transition matrix to forecast and backcast from any arbitrary time-step.
    In particular, we can use the row-normalized transition matrix for forecasting
    and the column-normalized transition matrix for backcasting.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将转移矩阵的副本连接起来，我们可以生成未来和过去的事件发生概率；这可以分别称为 *预测* 和 *回溯*。这里的一个核心假设是“历史无关紧要”；无论我们选择哪个时间步
    *t* 作为参考点，我们都假设转移矩阵为 *t+1*（如果是行归一化）和 *t-1*（如果是列归一化）提供相关的概率。结果是，我们可以使用转移矩阵从任何任意时间步进行预测和回溯。特别地，我们可以使用行归一化的转移矩阵进行预测，使用列归一化的转移矩阵进行回溯。
- en: 'Taking the matrices computed in the above example, suppose that we observe
    an *up* event at time-step *t* = 25, and we wish to forecast which event is most
    likely to occur at time-step *t* = 27\. By inspecting the top row of the row-normalized
    transition matrix we directly see that, at the very next time-step *t* = 26, the
    probabilities of observing an *up*, *flat* and *down* event are 0.4, 0.4 and 0.2,
    respectively. To derive similar event probabilities for time-step *t* = 27 (i.e.,
    two time-steps from our point of reference), we need to multiply the transition
    matrix by itself as follows:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 以上述示例中计算的矩阵为例，假设我们在时间步 *t* = 25 观察到一个 *上升* 事件，我们希望预测在时间步 *t* = 27 时最可能发生的事件是什么。通过检查行归一化转移矩阵的顶行，我们可以直接看到，在紧接着的时间步
    *t* = 26，观察到 *上升*、*平稳* 和 *下降* 事件的概率分别为 0.4、0.4 和 0.2。为了推导时间步 *t* = 27（即距离我们参考点两个时间步）的类似事件概率，我们需要将转移矩阵自身相乘，如下所示：
- en: '![](../Images/efbfdf13aee5b7747fb1981d5e0331e5.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/efbfdf13aee5b7747fb1981d5e0331e5.png)'
- en: Notice how the event probabilities have changed relative to our reference time-step.
    For instance, given an *up* event at *t* = 25, the probability of observing another
    *up* event is 0.4 at *t* = 26 (one step into the future), and increases to 0.56
    at *t* = 27 (two steps into the future). Meanwhile, the probability of observing
    a *flat* event is also 0.4 at t = 26, but decreases to 0.16 at t = 27\. Crucially,
    this approach of matrix multiplication supports forecasting and backcasting. In
    general, to forecast or backcast event probabilities *n* time-steps away, we can
    compute the row-normalized or column-normalized transition matrix to the *n*-th
    power, respectively.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 注意观察事件概率相对于我们的参考时间步长的变化。例如，假设在*t* = 25时出现一个*上升*事件，那么在*t* = 26时观察到另一个*上升*事件的概率为0.4（向未来进一步一步），并且在*t*
    = 27时增加到0.56（向未来两步）。与此同时，在*t* = 26时观察到*平稳*事件的概率也为0.4，但在*t* = 27时减少到0.16。关键是，矩阵乘法支持预测和回溯。通常来说，向前或向后推测事件发生的概率*n*步，我们可以分别计算该转移矩阵的n次幂的行规范化或列规范化。
- en: 'The transition matrix can also be used to predict the raw underlying time series
    data. Let us assume that an *up* or *down* event amounts to a single unit of change
    in the time series data. Now suppose the time series has gone up from 1 to 2 (an
    *up* event) at *t* = 25, and we wish to forecast the progression of the time series
    at *t* = 26 and *t* = 27\. Following an *up* event, *up* and *flat* events each
    have the highest probability of occurring (0.4) at *t* = 26\. Thus, we might predict
    that, at *t* = 26, the time series will most likely either be [1, 2, 3] or [1,
    2, 2], both of which would likely spawn two more possibilities each at t = 27:
    [1, 2, 3] leading to either [1, 2, 3, 4] or [1, 2, 3, 3] (with probabilities 0.4
    each, as before), and [1, 2, 2] leading to either [1, 2, 2, 3] or [1, 2, 2, 1]
    (with probabilities 0.5 each). In general, we would expect that the larger and
    richer the dataset that is used to generate the transition matrix, the more variance
    is captured in terms of potential chains of events, and thus the higher the stepwise
    predictive accuracy.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 转移矩阵也可以用于预测原始的基础时间序列数据。假设*上升*或*下降*事件对时间序列数据造成了一单位的变化。现在假设时间序列从1到2（一个*上升*事件）在*t*
    = 25时发生，并且我们希望预测*t* = 26和*t* = 27时时间序列的进展。在*上升*事件之后，*上升*和*平稳*事件在*t* = 26时都有最高的发生概率（0.4）。因此，我们可以预测，在*t*
    = 26时，时间序列很可能是[1, 2, 3]或[1, 2, 2]，两者都有可能在*t* = 27时产生两种更可能的情况：[1, 2, 3]可能变成[1,
    2, 3, 4]或[1, 2, 3, 3]（概率均为0.4），而[1, 2, 2]可能变成[1, 2, 2, 3]或[1, 2, 2, 1]（概率均为0.5）。一般来说，我们期望所用于生成转移矩阵的数据集越大越丰富，能够捕捉更多事件链，因此每步的预测精度越高。
- en: The multiplicative chaining of transition matrices leads to increasingly complex
    yet fully decomposable combinations of the original event transition probabilities.
    This decomposability can help us gain deeper insights about the interdependent
    nature of the events that make up the time series data (or stochastic process).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 转移矩阵的乘法链导致了越来越复杂但完全可分解的原始事件转移概率的组合。这种可分解性可以帮助我们更深入地了解构成时间序列数据（或随机过程）的事件相互之间的关系。
- en: Analysis of Convergence
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 收敛分析
- en: 'The notion of chaining together transition matrices naturally leads to an interesting
    question: *Will the probabilities of the transition matrix M ever converge?* Specifically,
    is there a stable transition matrix *M** such that *MM*=M**? If so, then *lim(n
    → ∞)⁡Mⁿ = M**, i.e., we would expect the Markov process represented by the chain
    of matrix multiplications *⁡Mⁿ* to converge to a stable state *M** at some point
    in time; in this case, the process is convergent and thus stable. Assuming our
    transition matrix is row-normalized, the element *M*(i, j)* gives us the stable
    long-term probability of event *i* being followed by event *j*. If a stable matrix
    *M** cannot be found, however, then the process is non-convergent and non-stable.'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 连接转移矩阵的概念自然地引出了一个有趣的问题：*转移矩阵M的概率会收敛吗*？具体地说，是否存在一个稳定的转移矩阵*M*使得*MM*=M*？如果是，那么*lim(n
    → ∞)⁡Mⁿ = M*，也就是说我们期望由矩阵乘法链*⁡Mⁿ*表示的马尔可夫过程在某个时间点收敛到一个稳定状态*M*；在这种情况下，该过程是收敛的并因此稳定。假设我们的转移矩阵是行规范化的，元素*M*(i,
    j)给出了事件*i*之后紧随事件*j*的稳定长期概率。然而，如果找不到稳定矩阵*M*，那么该过程就不是收敛的也不是稳定的。
- en: Using the running example from previous sections, we can briefly sketch out
    how the convergence of the Markov process might be derived analytically.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 利用之前部分的运行示例，我们可以简要描述一下马尔可夫过程的收敛是如何通过分析得出的。
- en: 'To start off, let us suppose that there is a stable transition matrix *M**
    such that *MM*=M**, and that *M* is row-normalized. Since we know what *M* looks
    like, we can write out the matrix multiplication as follows:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们假设存在一个稳定的转移矩阵*M*，使得*MM*=*M*，并且*M*是行归一化的。由于我们知道*M*的样子，我们可以把矩阵乘法写成如下形式：
- en: '![](../Images/a30457610de605c2f15446363f1cdbbb.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a30457610de605c2f15446363f1cdbbb.png)'
- en: 'Then we have the following system of linear equations:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们有下面的线性方程组：
- en: '![](../Images/04e2d2c9faf7b112f3cda4d545d929c8.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/04e2d2c9faf7b112f3cda4d545d929c8.png)'
- en: If a solution exists for this system of equations (which we can check using
    a method such as Gaussian elimination), then we can also derive a convergent and
    stable transition matrix.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这个方程组存在解（我们可以通过高斯消元等方法来检查），那么我们也可以得到一个收敛和稳定的转移矩阵。
- en: The Wrap
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 包裹
- en: Once you get the hang of it, reframing time series data using Markov transition
    matrices can become a useful part of your data science toolkit. Just as you might
    typically visualize time series data with a line chart to get a better sense of
    the overall trend, a transition matrix offers a complementary representation of
    the data that is highly compressed yet versatile in its use cases. When visualized
    as a directed graph, the transition matrix can already be useful for gaining high-level
    descriptive insights. When embedded within a larger workflow, the transition matrix
    can form the basis of more complex approaches for forecasting and backcasting.
    Moreover, while the simple example we ran through in the above sections treats
    the transition matrix as a static entity, we could derived different matrices
    for different time intervals; this can be especially useful in the analysis of
    time series data that displays pronounced trend reversals reflected by significant
    U-shaped or elbow-shaped patterns in the data. Clearly, there are several possible
    extensions to the ideas discussed above, so go ahead and try them out — they just
    might come in handy in your next data science project.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你掌握了这个技巧，使用马尔可夫转移矩阵来重构时间序列数据可以成为你数据科学工具箱中的一个有用部分。就像你通常用折线图来可视化时间序列数据以更好地把握整体趋势一样，转移矩阵提供了数据的一个互补表述，它高度压缩但在使用场景上非常多样化。当将其可视化为有向图时，转移矩阵已经可以用于获取高层次的描述性见解。当嵌入到更大的工作流程中时，转移矩阵可以成为预测和逆向预测更复杂方法的基础。此外，虽然我们在上述部分运行的简单例子将转移矩阵视为静态实体，但我们可以针对不同的时间间隔推导出不同的矩阵；这在分析显示数据中体现出明显的趋势逆转，反映在数据中具有显著U形或弯头形式模式的时间序列数据中尤为有用。显然，上面讨论的观点有几种可能的延伸，所以继续尝试吧——它们在你下一个数据科学项目中可能派上用场。
