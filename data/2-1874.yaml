- en: 'Sklearn Pipelines for the Modern ML Engineer: 9 Techniques You Can’t Ignore'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 现代 ML 工程师的 Sklearn 管道：你不能忽视的 9 种技术
- en: 原文：[https://towardsdatascience.com/sklearn-pipelines-for-the-modern-ml-engineer-9-techniques-you-cant-ignore-637788f05df5](https://towardsdatascience.com/sklearn-pipelines-for-the-modern-ml-engineer-9-techniques-you-cant-ignore-637788f05df5)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/sklearn-pipelines-for-the-modern-ml-engineer-9-techniques-you-cant-ignore-637788f05df5](https://towardsdatascience.com/sklearn-pipelines-for-the-modern-ml-engineer-9-techniques-you-cant-ignore-637788f05df5)
- en: There are so many ways you can build them…
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你可以用很多方法来构建它们……
- en: '[](https://ibexorigin.medium.com/?source=post_page-----637788f05df5--------------------------------)[![Bex
    T.](../Images/516496f32596e8ad56bf07f178a643c6.png)](https://ibexorigin.medium.com/?source=post_page-----637788f05df5--------------------------------)[](https://towardsdatascience.com/?source=post_page-----637788f05df5--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----637788f05df5--------------------------------)
    [Bex T.](https://ibexorigin.medium.com/?source=post_page-----637788f05df5--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://ibexorigin.medium.com/?source=post_page-----637788f05df5--------------------------------)[![Bex
    T.](../Images/516496f32596e8ad56bf07f178a643c6.png)](https://ibexorigin.medium.com/?source=post_page-----637788f05df5--------------------------------)[](https://towardsdatascience.com/?source=post_page-----637788f05df5--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----637788f05df5--------------------------------)
    [Bex T.](https://ibexorigin.medium.com/?source=post_page-----637788f05df5--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----637788f05df5--------------------------------)
    ·10 min read·May 29, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----637788f05df5--------------------------------)
    ·10 分钟阅读·2023年5月29日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/d48b62f54a1b0bf20e303b7d4db6b1d8.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d48b62f54a1b0bf20e303b7d4db6b1d8.png)'
- en: '**Image by me with Midjourney**'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**由我使用 Midjourney 制作的图像**'
- en: Motivation
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 动机
- en: 'Today, this is what I am selling:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，这就是我所销售的：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '`awesome_pipeline` may look just like another variable, but here is what it
    does to poor `X` and `y` under the hood:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '`awesome_pipeline` 可能看起来只是另一个变量，但它在幕后对 `X` 和 `y` 的作用如下：'
- en: Automatically isolates numerical and categorical features of `X`.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 自动隔离 `X` 的数值特征和分类特征。
- en: Imputes missing values in numeric features.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填充数值特征中的缺失值。
- en: Log-transforms skewed features while normalizing the rest.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对偏斜特征进行对数变换，同时对其余部分进行归一化。
- en: Imputes missing values in categorical features and one-hot encodes them.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填充分类特征中的缺失值，并对其进行一热编码。
- en: Normalizes the target array `y` for good measure.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对目标数组 `y` 进行归一化，以确保准确。
- en: Apart from collapsing almost 100 lines worth of unreadable code into a single
    line, `awesome_pipeline` can now be inserted into cross-validators or hyperparameter
    tuners, guarding your code from data leakage and making everything reproducible,
    modular, and headache-free.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 除了将几乎 100 行不可读的代码压缩成一行之外，`awesome_pipeline` 现在还可以插入到交叉验证器或超参数调整器中，保护你的代码免受数据泄漏，并使一切变得可重复、模块化且无头痛。
- en: Let’s see how to build the thing.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何构建它。
- en: 0\. Estimators vs transformers
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0\. 估计器 vs 变换器
- en: First, let’s get the terminology out of the way.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们了解一下术语。
- en: A transformer in Sklearn is any class or function that accepts features of a
    dataset, applies transformations, and returns them. It has `fit_transform` and
    `transform` methods.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Sklearn 中，变换器是任何接受数据集特征、应用变换并返回结果的类或函数。它具有 `fit_transform` 和 `transform` 方法。
- en: An example is the `QuantileTransformer`, which takes numeric input(s) and makes
    them normally distributed. It is especially useful for features with [outliers](/how-to-perform-outlier-detection-in-python-in-easy-steps-for-machine-learning-1-8f9a3e6c88b5).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 一个例子是 `QuantileTransformer`，它接受数值输入并将其转换为正态分布。对于具有 [异常值](/how-to-perform-outlier-detection-in-python-in-easy-steps-for-machine-learning-1-8f9a3e6c88b5)
    的特征特别有用。
- en: Transformers inherit from the `TransformerMixin` base class.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 变换器继承自 `TransformerMixin` 基类。
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: On the other hand, an estimator is any class that usually generates predictions
    on a dataset. Estimators often have names ending with words like `Regressor` or
    `Classifier`.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，估计器是任何通常会对数据集生成预测的类。估计器的名称通常以 `Regressor` 或 `Classifier` 结尾。
- en: Estimators inherit from the `BaseEstimator` class.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 估计器继承自 `BaseEstimator` 类。
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 1\. Vanilla pipeline
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. 原始管道
- en: A vanilla pipeline in Sklearn always consists of one or more transformers of
    the same type and one final estimator. It chains the transformers to perform a
    series of operations on the feature array (`X`), eliminating the need to call
    `fit_transform` for each transformer and feed the final output to the estimator.
    All of this is done in a single line of code.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Sklearn 中的基本管道始终由一个或多个相同类型的变换器和一个最终的估计器组成。它将变换器串联起来，对特征数组（`X`）执行一系列操作，避免了对每个变换器调用
    `fit_transform` 的需求，并将最终输出传递给估计器。所有这些操作都在一行代码中完成。
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: To build a vanilla pipeline, you can use the `make_pipeline` function and pass
    the transformers and the estimator. The order of the transformers matters.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建一个基本管道，你可以使用 `make_pipeline` 函数并传入变换器和估计器。变换器的顺序很重要。
- en: 'The above example showcases a **numeric pipeline**, which can only be fitted
    to a dataset with numeric features. There is also a **categorical pipeline**,
    designed for datasets with only categorical features:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 上述示例展示了一个**数字管道**，它只能应用于包含数字特征的数据集。还有一个**分类管道**，专为仅包含分类特征的数据集设计：
- en: '[PRE6]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Each item passed into `make_pipeline` is referred to as a step in the pipeline,
    as depicted in the output below:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 传入 `make_pipeline` 的每一项都被称为管道中的一个步骤，如下输出所示：
- en: '[PRE7]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The `make_pipeline` function automatically assigns names to each step in the
    pipeline, but these names can be lengthy and explicit.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '`make_pipeline` 函数会自动为管道中的每一步分配名称，但这些名称可能会很长且显式。'
- en: 'If you want to provide custom step names, you need to use the `Pipeline` class
    directly:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想提供自定义步骤名称，你需要直接使用 `Pipeline` 类：
- en: '[PRE9]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The `steps` argument accepts a list of tuples with two items:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`steps` 参数接受一个包含两个项目的元组列表：'
- en: Step name as a string.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 步骤名称，作为字符串。
- en: The transformer or the estimator for that step.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该步骤的变换器或估计器。
- en: The significance of properly naming steps will become evident in the upcoming
    sections.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 正确命名步骤的重要性将在接下来的部分中显现出来。
- en: 2\. A milkshake of transformers
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. 变换器的奶昔
- en: In practice, you will rarely use vanilla transformers on their own because real-world
    datasets often consist of a mixture of numeric and categorical features.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际应用中，你很少会单独使用基本变换器，因为现实世界的数据集通常包含数字特征和分类特征的混合。
- en: Therefore, you need a way to combine different categories of transformers into
    a single object while also specifying which transformer should be applied to which
    columns in the dataset `X`.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，你需要一种方法将不同类别的变换器组合成一个对象，同时指定哪些变换器应应用于数据集 `X` 的哪些列。
- en: This functionality is elegantly implemented in the `ColumnTransformer` class.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这一功能在 `ColumnTransformer` 类中得到了优雅的实现。
- en: 'In step 0, you need to define the numeric and categorical features separately:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在第 0 步中，你需要分别定义数字特征和分类特征：
- en: '[PRE10]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'In step 1, define two transformer-only pipelines for both numeric and categorical
    features:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在第 1 步中，为数字特征和分类特征分别定义两个仅包含变换器的管道：
- en: '[PRE11]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Then, you can create an instance of a `ColumnTransformer` class:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你可以创建一个 `ColumnTransformer` 类的实例：
- en: '[PRE12]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The `transformers` argument of `ColumnTransformer` accepts a list of three-item
    tuples:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '`ColumnTransformer` 的 `transformers` 参数接受一个包含三项元组的列表：'
- en: The name of the step.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 步骤的名称。
- en: The transformer or a pipeline of transformers.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 变换器或变换器的管道。
- en: The name of the columns to which the transformers should be applied.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应应用变换器的列名称。
- en: When you use the `transformers` object, it will apply two types of operations
    on both numeric and categorical features independently and then combine the results
    to return a single matrix.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用 `transformers` 对象时，它会对数字特征和分类特征分别应用两种类型的操作，然后将结果合并以返回一个单一的矩阵。
- en: Therefore, a `ColumnTransformer` represents a more complex pipeline that does
    not include a final estimator. To complete the pipeline, let's add one.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，`ColumnTransformer` 代表了一个更复杂的管道，它不包括最终的估计器。要完成管道，我们需要添加一个。
- en: 3\. A milkshake with a watermelon on top
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. 顶部有西瓜的奶昔
- en: 'Right now, our semi-pipeline only *transforms* the dataset `X`:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，我们的半成品管道仅*转换*数据集 `X`：
- en: '[PRE13]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The only thing missing from it is an estimator. This is easily fixable:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一缺少的是一个估计器。这很容易解决：
- en: '[PRE14]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Depending on the machine learning task, you need to chain either a Regressor
    or a Classifier estimator as the final step in the pipeline. The resulting pipeline
    will have both a `fit` and a `predict` method, depending on the task at hand.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 根据机器学习任务的不同，你需要将回归器或分类器估计器串联为管道中的最终步骤。生成的管道将具有 `fit` 和 `predict` 方法，具体取决于任务。
- en: '[PRE15]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 4\. Choosing columns with style
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4\. 选择风格化的列
- en: While defining the `ColumnTransformer`, we specified the numeric and categorical
    features manually, one by one. Like a caveman.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在定义 `ColumnTransformer` 时，我们逐一手动指定了数值和分类特征。就像一个原始人一样。
- en: But fear not! Sklearn provides a cool way of doing it more efficiently.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 但不用担心！Sklearn 提供了一种更高效的方法来实现这一点。
- en: '[PRE16]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '`make_column_selector` is a handy function that allows you to automatically
    isolate columns from dataframes in various ways. In the example above, we used
    it to filter columns based on their data type. However, you can also utilize the
    `pattern` parameter to specify a regular expression (RegEx) pattern for filtering
    column names.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '`make_column_selector` 是一个方便的函数，它允许你以各种方式从数据框中自动隔离列。在上面的示例中，我们使用它根据数据类型过滤列。然而，你也可以利用
    `pattern` 参数来指定用于过滤列名的正则表达式（RegEx）模式。'
- en: 'Here is an example:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个示例：
- en: '[PRE17]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The provided example captures columns that start with either `word1` or `word2`.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 提供的示例捕获了以 `word1` 或 `word2` 开头的列。
- en: This function is particularly useful when constructing `ColumnTransformer` objects.
    It eliminates the need to manually list down each and every column name, which
    can become challenging, if not impossible, when dealing with datasets containing
    numerous columns.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这个功能在构建 `ColumnTransformer` 对象时特别有用。它消除了手动列出每一个列名的需求，这在处理包含大量列的数据集时可能变得具有挑战性，甚至是不可能的。
- en: '[PRE18]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The `make_column_transformer` function is a shorthand function, similar to `make_pipeline`,
    that allows you to build `ColumnTransformer` objects without explicitly specifying
    step names. By combining it with `make_column_selector`, you can significantly
    shorten your code.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '`make_column_transformer` 函数是一个简写函数，类似于 `make_pipeline`，它允许你构建 `ColumnTransformer`
    对象而无需明确指定步骤名称。通过将其与 `make_column_selector` 结合使用，你可以显著缩短代码。'
- en: 5\. Visual pipelines
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5\. 视觉管道
- en: When you print a complex pipeline, such as `full_pipeline_clf`, the output can
    become an unreadable mess in your Jupyter notebook.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 当你打印一个复杂的管道，例如 `full_pipeline_clf`，输出可能在你的 Jupyter notebook 中变成难以阅读的混乱。
- en: 'To address this issue, you can set the `display` option to `diagram` using
    the `set_config` function:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，你可以使用 `set_config` 函数将 `display` 选项设置为 `diagram`：
- en: '[PRE19]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Now, when you print or return the pipeline, an HTML diagram will be displayed,
    providing a visual representation of the pipeline:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当你打印或返回管道时，将显示一个 HTML 图示，提供管道的视觉表示：
- en: '![](../Images/a29f80ad9a88d5961d7854e2d8e1eb0f.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a29f80ad9a88d5961d7854e2d8e1eb0f.png)'
- en: This visual representation is extremely helpful for debugging and diagnostics.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这种视觉表示对于调试和诊断极为有用。
- en: Please note that the HTML representation is the default in the latest versions
    of Sklearn (1.0.0 onwards).
  id: totrans-87
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 请注意，HTML 表示是最新版本 Sklearn（1.0.0 及以后版本）的默认设置。
- en: 6\. Pipeline cache
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6\. 管道缓存
- en: Once your pipeline is ready, you’ll likely want to run it 24/7\. However, since
    the pipeline includes multiple transformers that manipulate the data, rerunning
    the same operations can be time-consuming.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你的管道准备好，你可能会想让它全天候运行。然而，由于管道包含多个转换器来处理数据，重新运行相同的操作可能会耗时。
- en: 'To address this issue, Sklearn provides a `memory` argument that allows you
    to cache the output of transformers within the pipeline. This caching mechanism
    helps avoid unnecessary recomputation of transformer outputs. Here''s how you
    can use it:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，Sklearn 提供了一个 `memory` 参数，允许你缓存管道内转换器的输出。这个缓存机制有助于避免不必要的重新计算转换器的输出。以下是使用方法：
- en: '[PRE20]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: To enable caching, you need to create a temporary directory using the `mkdtemp`
    function. Then, you can pass this directory path to the `memory` argument of the
    `Pipeline` object.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用缓存，你需要使用 `mkdtemp` 函数创建一个临时目录。然后，你可以将该目录路径传递给 `Pipeline` 对象的 `memory` 参数。
- en: Finally, make sure to include `rmtree(cache_dir)` at the end of your script
    or notebook to remove the cache directory and its contents.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，确保在脚本或 notebook 的末尾包含 `rmtree(cache_dir)` 以删除缓存目录及其内容。
- en: However, there are some caveats to using the cache (although nothing serious).
    You can read more about them [here](https://scikit-learn.org/stable/modules/compose.html#caching-transformers-avoid-repeated-computation).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，使用缓存有一些注意事项（虽然不严重）。你可以在[这里](https://scikit-learn.org/stable/modules/compose.html#caching-transformers-avoid-repeated-computation)阅读更多关于它们的内容。
- en: 7\. Inside other objects
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 7\. 在其他对象中
- en: 'Even though a pipeline contains a variety of transformers, at the end of the
    day, it is an estimator:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管管道包含各种转换器，但归根结底，它仍然是一个估计器：
- en: '[PRE21]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'This means it can be used anywhere a typical stand-alone estimator could be
    used. For example, pipelines are often inserted into cross-validators to guard
    the machine learning model from data leakage:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着它可以在任何典型的独立估计器可以使用的地方使用。例如，管道通常被插入到交叉验证器中，以保护机器学习模型免受数据泄漏：
- en: '[PRE23]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Or into hyperparameter tuners such as `[HalvingGridSearch](/11-times-faster-hyperparameter-tuning-with-halvinggridsearch-232ed0160155)`
    (for the same reasons):'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 或者用于超参数调优器，例如`[HalvingGridSearch](/11-times-faster-hyperparameter-tuning-with-halvinggridsearch-232ed0160155)`（出于相同的原因）：
- en: '[PRE24]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'At this point, I want to draw your attention to the definition of the parameter
    grid. Take a look at how it is defined:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，我想引起你对参数网格定义的注意。看看它是如何定义的：
- en: '[PRE25]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The first parameter, `with_mean`, of `StandardScaler` serves as an example
    of a nested parameter. It is preceded by two specifiers: `preprocessor` and `numeric`,
    separated by double underscores.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '`StandardScaler`的第一个参数`with_mean`作为嵌套参数的一个例子。它前面有两个说明符：`preprocessor`和`numeric`，由双下划线分隔。'
- en: Nested parameters follow the `<step_name>__<parameter>` syntax. In this case,
    `with_mean` is a parameter of a transformer that is two levels deep. The inner
    pipeline's name is `numeric`, and the outer one's name is `preprocessor`, resulting
    in `preprocessor__numeric__with_mean`.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌套参数遵循`<step_name>__<parameter>`语法。在这种情况下，`with_mean`是一个变换器的参数，它深度为两层。内部管道的名称是`numeric`，外部管道的名称是`preprocessor`，结果是`preprocessor__numeric__with_mean`。
- en: By writing nested parameters in this syntax, you can optimize not only for the
    parameters of the model but also for the parameters of the inner transformers
    themselves.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用这种语法编写嵌套参数，你不仅可以优化模型的参数，还可以优化内部变换器本身的参数。
- en: 8\. Custom transformers
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8\. 自定义变换器
- en: What if you want to perform a custom transformation on the data that is not
    implemented in the `sklearn.preprocessing` module? Do you have to abandon Sklearn
    pipelines and all the benefits they bring?
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想对数据进行自定义变换，而这些变换在`sklearn.preprocessing`模块中没有实现怎么办？你必须放弃 Sklearn 管道及其带来的所有好处吗？
- en: 'Absolutely not! With the `FunctionTransformer` class, you can transform any
    Python function into a transformer that can be integrated into pipelines. For
    instance, consider the following function that adds a column representing the
    number of missing values in each row of a DataFrame:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 绝对不是！使用`FunctionTransformer`类，你可以将任何 Python 函数转换为一个可以集成到管道中的变换器。例如，考虑以下函数，它在
    DataFrame 的每一行中添加一个表示缺失值数量的列：
- en: '[PRE26]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'To convert it into a transformer, you just have to wrap it with `FunctionTransformer`
    and pass it into pipelines:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 要将其转换为变换器，你只需用`FunctionTransformer`包装它，并将其传递到管道中：
- en: '[PRE27]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'There may also be cases where simple functions are not sufficient to create
    custom transformations. In such cases, you can create your own classes that inherit
    from the `TransformerMixin` class. I won''t go into the details here, but I recommend
    checking out a comprehensive article I wrote on the topic last year:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 也有可能简单的函数不足以创建自定义变换。在这种情况下，你可以创建自己的类，继承自`TransformerMixin`类。我不会在这里详细说明，但我建议你查看我去年写的一篇关于该主题的综合文章：
- en: '[](https://ibexorigin.medium.com/in-depth-guide-to-building-custom-sklearn-transformers-for-any-data-preprocessing-scenario-33450f8b35ff?source=post_page-----637788f05df5--------------------------------)
    [## In-Depth Guide to Building Custom Sklearn Transformers for any Data Preprocessing
    Scenario'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 深入指南：为任何数据预处理场景构建自定义 Sklearn 变换器](https://ibexorigin.medium.com/in-depth-guide-to-building-custom-sklearn-transformers-for-any-data-preprocessing-scenario-33450f8b35ff?source=post_page-----637788f05df5--------------------------------)'
- en: Edit description
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编辑描述
- en: ibexorigin.medium.com](https://ibexorigin.medium.com/in-depth-guide-to-building-custom-sklearn-transformers-for-any-data-preprocessing-scenario-33450f8b35ff?source=post_page-----637788f05df5--------------------------------)
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '[ibexorigin.medium.com](https://ibexorigin.medium.com/in-depth-guide-to-building-custom-sklearn-transformers-for-any-data-preprocessing-scenario-33450f8b35ff?source=post_page-----637788f05df5--------------------------------)'
- en: 9\. Target transformations with a pipeline
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9\. 使用管道进行目标变换
- en: For the most part, the transformers in your pipeline focus on the feature array
    `X`. However, there are cases where the target array `y` requires some preprocessing
    as well.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数情况下，你管道中的变换器专注于特征数组`X`。然而，也有一些情况需要对目标数组`y`进行一些预处理。
- en: A common scenario in regression is to make the target normally distributed to
    improve the fit of linear models. If you perform the normalization outside a pipeline,
    there is a chance you might introduce data leakage to your training set.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 回归中的一个常见场景是使目标变量符合正态分布，以提高线性模型的拟合效果。如果你在管道外进行标准化，有可能会导致训练集数据泄漏。
- en: To address this issue and simplify the process, Sklearn provides the `TransformedTargetRegressor`
    class. With this class, you can include target array transformations directly
    in your pipeline, ensuring data integrity and reducing boilerplate code.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题并简化流程，Sklearn 提供了`TransformedTargetRegressor`类。通过这个类，你可以在管道中直接包含目标数组的变换，确保数据完整性并减少冗余代码。
- en: '[PRE28]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: After defining the pipeline that ends with a regression model like `LinearRegression`,
    you can pass it into the `regressor` argument of the `TransformedTargetRegressor`
    class. Additionally, you need to specify the transformer for the target array
    `y` using the `transformer` argument.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在定义了一个以回归模型如`LinearRegression`结尾的管道后，你可以将其传递给`TransformedTargetRegressor`类的`regressor`参数。此外，你还需要使用`transformer`参数指定目标数组`y`的变换器。
- en: For more information about this class and its usage, you can refer to the [Sklearn
    documentation](https://scikit-learn.org/stable/modules/generated/sklearn.compose.TransformedTargetRegressor.html#sklearn.compose.TransformedTargetRegressor).
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 有关这个类及其使用的更多信息，你可以参考[Sklearn 文档](https://scikit-learn.org/stable/modules/generated/sklearn.compose.TransformedTargetRegressor.html#sklearn.compose.TransformedTargetRegressor)。
- en: Conclusion
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: 'I believe this article is one of my most detailed yet on Sklearn, unless you
    count maybe these two:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信这篇文章是我关于 Sklearn 的最详细的一篇，除非你可能还算上这两篇：
- en: '[](/19-hidden-sklearn-features-you-were-supposed-to-learn-the-hard-way-5293e6ff149?source=post_page-----637788f05df5--------------------------------)
    [## 19 Hidden Sklearn Features You Were Supposed to Learn The Hard Way'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/19-hidden-sklearn-features-you-were-supposed-to-learn-the-hard-way-5293e6ff149?source=post_page-----637788f05df5--------------------------------)
    [## 19 个你本该艰难学习的隐藏 Sklearn 特性'
- en: Edit description
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编辑描述
- en: towardsdatascience.com](/19-hidden-sklearn-features-you-were-supposed-to-learn-the-hard-way-5293e6ff149?source=post_page-----637788f05df5--------------------------------)
    [](/10-sklearn-gems-buried-in-the-docs-waiting-to-be-found-ad95a8fabdfd?source=post_page-----637788f05df5--------------------------------)
    [## 10 Sklearn Gems Buried In the Docs Waiting To Be Found
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/19-hidden-sklearn-features-you-were-supposed-to-learn-the-hard-way-5293e6ff149?source=post_page-----637788f05df5--------------------------------)
    [](/10-sklearn-gems-buried-in-the-docs-waiting-to-be-found-ad95a8fabdfd?source=post_page-----637788f05df5--------------------------------)
    [## 文档中埋藏的 10 个 Sklearn 珍品，等待被发现
- en: Edit description
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编辑描述
- en: towardsdatascience.com](/10-sklearn-gems-buried-in-the-docs-waiting-to-be-found-ad95a8fabdfd?source=post_page-----637788f05df5--------------------------------)
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/10-sklearn-gems-buried-in-the-docs-waiting-to-be-found-ad95a8fabdfd?source=post_page-----637788f05df5--------------------------------)
- en: Anyway, Sklearn pipelines are one of the primary reasons why I keep coming back
    to this favorite library of mine. They bring harmony to the chaotic world of machine
    learning workflows, turning raw data into gold with elegance and efficiency.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，Sklearn 管道是我不断回到这个最爱库的主要原因之一。它们为混乱的机器学习工作流带来了和谐，以优雅和高效将原始数据转化为黄金。
- en: With pipelines, you can orchestrate a symphony of transformers, estimators,
    and column transformers, effortlessly taming even the wildest datasets.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 使用管道，你可以协调变换器、估算器和列变换器的交响乐，轻松驯服最复杂的数据集。
- en: Thank you for reading!
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读！
- en: Loved this article and, let’s face it, its bizarre writing style? Imagine having
    access to dozens more just like it, all written by a brilliant, charming, witty
    author (that’s me, by the way :).
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 喜欢这篇文章以及它那奇特的写作风格？想象一下，能够访问到数十篇类似的文章，所有文章都由一位才华横溢、迷人风趣的作者撰写（顺便说一句，那就是我 :）。
- en: For only 4.99$ membership, you will get access to not just my stories, but a
    treasure trove of knowledge from the best and brightest minds on Medium. And if
    you use [my referral link](https://ibexorigin.medium.com/membership), you will
    earn my supernova of gratitude and a virtual high-five for supporting my work.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 只需 4.99 美元的会员费，你将不仅可以访问我的故事，还可以获取 Medium 上最佳和最聪明的头脑提供的知识宝库。如果你使用[我的推荐链接](https://ibexorigin.medium.com/membership)，你将获得我超级感激的心和虚拟的高五，以支持我的工作。
- en: '[](https://ibexorigin.medium.com/membership?source=post_page-----637788f05df5--------------------------------)
    [## Join Medium with my referral link - Bex T.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://ibexorigin.medium.com/membership?source=post_page-----637788f05df5--------------------------------)
    [## 使用我的推荐链接加入 Medium - Bex T.'
- en: Get exclusive access to all my ⚡premium⚡ content and all over Medium without
    limits. Support my work by buying me a…
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 获得对我所有⚡优质⚡内容的独家访问权限，畅享Medium上的所有内容。通过购买来支持我的工作…
- en: ibexorigin.medium.com](https://ibexorigin.medium.com/membership?source=post_page-----637788f05df5--------------------------------)
    ![](../Images/ecb20212397d966ec82b2333cf9ec8f5.png)
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '[ibexorigin.medium.com](https://ibexorigin.medium.com/membership?source=post_page-----637788f05df5--------------------------------)
    ![](../Images/ecb20212397d966ec82b2333cf9ec8f5.png)'
- en: Image by me with Midjourney
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由我使用Midjourney制作
