- en: How to Generate Interactive Maps with Folium
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用 Folium 生成交互式地图
- en: 原文：[https://towardsdatascience.com/how-to-generate-interactive-maps-with-folium-b232778758c4](https://towardsdatascience.com/how-to-generate-interactive-maps-with-folium-b232778758c4)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-generate-interactive-maps-with-folium-b232778758c4](https://towardsdatascience.com/how-to-generate-interactive-maps-with-folium-b232778758c4)
- en: Using this Python library to create map visualizations
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用这个 Python 库来创建地图可视化
- en: '[](https://amolmavuduru.medium.com/?source=post_page-----b232778758c4--------------------------------)[![Amol
    Mavuduru](../Images/56b4ae74cac10dd7c70d41d9192ce181.png)](https://amolmavuduru.medium.com/?source=post_page-----b232778758c4--------------------------------)[](https://towardsdatascience.com/?source=post_page-----b232778758c4--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----b232778758c4--------------------------------)
    [Amol Mavuduru](https://amolmavuduru.medium.com/?source=post_page-----b232778758c4--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://amolmavuduru.medium.com/?source=post_page-----b232778758c4--------------------------------)[![Amol
    Mavuduru](../Images/56b4ae74cac10dd7c70d41d9192ce181.png)](https://amolmavuduru.medium.com/?source=post_page-----b232778758c4--------------------------------)[](https://towardsdatascience.com/?source=post_page-----b232778758c4--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----b232778758c4--------------------------------)
    [Amol Mavuduru](https://amolmavuduru.medium.com/?source=post_page-----b232778758c4--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----b232778758c4--------------------------------)
    ·5 min read·Jun 26, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----b232778758c4--------------------------------)
    ·阅读时间 5 分钟·2023年6月26日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/80d43456ecb3cb56f0af209bf1515127.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/80d43456ecb3cb56f0af209bf1515127.png)'
- en: Map of Tampa, Florida. Image created using Folium and Open Street Map data.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 佛罗里达州坦帕市地图。图片使用 Folium 和 Open Street Map 数据创建。
- en: Data visualization is one of the most overlooked areas of data science. Machine
    learning and statistical analysis are important, but being able to visualize data,
    especially different types of data, is a key aspect of data storytelling. While
    many introductory data science bootcamps and courses will cover how to create
    basic plots with matplotlib and seaborn, several of them do not cover how to visualize
    geographic data on maps.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 数据可视化是数据科学中最被忽视的领域之一。机器学习和统计分析固然重要，但能够可视化数据，尤其是不同类型的数据，是数据讲述的关键方面。虽然许多入门数据科学的培训课程和课程会介绍如何使用
    matplotlib 和 seaborn 创建基本图表，但其中许多并未涉及如何在地图上可视化地理数据。
- en: Folium is a Python library that uses Leaflet.js and Open Street Map data to
    create high-quality map visualizations. **In this article, I will demonstrate
    how you can use Folium to generate interactive map visualizations.**
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Folium 是一个 Python 库，它使用 Leaflet.js 和 Open Street Map 数据来创建高质量的地图可视化。**在这篇文章中，我将演示如何使用
    Folium 生成交互式地图可视化。**
- en: Installation
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装
- en: We can easily install Folium using pip as demonstrated below.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过以下演示，轻松地使用 pip 安装 Folium。
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Import Libraries
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入库
- en: As usual, I will import some Folium and some other libraries that we may need
    before getting started. Keep in mind you can find all of the code for this tutorial
    on [GitHub](https://github.com/AmolMavuduru/FoliumTutorial).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 像往常一样，在开始之前，我将导入一些 Folium 和其他可能需要的库。请记住，您可以在 [GitHub](https://github.com/AmolMavuduru/FoliumTutorial)
    上找到本教程的所有代码。
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Plotting a Default World Map
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 绘制默认的世界地图
- en: Folium comes with a Map function that we can call with no arguments to generate
    a default world map.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Folium 提供了一个 Map 函数，我们可以调用该函数而不带任何参数，以生成默认的世界地图。
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/0ea1e10bef1726e4791613f5d9ab6b22.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0ea1e10bef1726e4791613f5d9ab6b22.png)'
- en: Default world map projection. Image created using Folium and Open Street Map
    data.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的世界地图投影。图片使用 Folium 和 Open Street Map 数据创建。
- en: Notice how the default map is a projection and contains zoom controls on the
    top left corner so that we can interact with the map and focus on a specific region
    if needed.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到默认地图是一个投影图，并且在左上角包含了缩放控件，这样我们可以与地图互动，并在需要时聚焦于特定区域。
- en: Plotting Locations by Coordinates
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 按坐标绘制位置
- en: We can create a map centered around a specific location by adding a list of
    coordinates to the location parameter in the Map function. Using the code below,
    we can generate a Map centered around Tampa, Florida.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过在 Map 函数的 location 参数中添加一组坐标，来创建一个围绕特定位置的地图。使用下面的代码，我们可以生成一个以佛罗里达州坦帕市为中心的地图。
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/80d43456ecb3cb56f0af209bf1515127.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/80d43456ecb3cb56f0af209bf1515127.png)'
- en: Map of Tampa, Florida. Image created using Folium and Open Street Map data.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 坦帕佛罗里达地图。图像使用 Folium 和 Open Street Map 数据创建。
- en: Changing the Map Tiles
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改地图瓦片
- en: We can also change the map tiles to create maps that look different with the
    “tiles” argument. We can use the Stamen Toner tiles described in detail [here](http://maps.stamen.com/#watercolor/12/37.7706/-122.3782).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以通过“tiles”参数更改地图瓦片，以创建不同样式的地图。我们可以使用详细描述的 Stamen Toner 瓦片 [这里](http://maps.stamen.com/#watercolor/12/37.7706/-122.3782)。
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/eea22cf6d5b28c700984e9fa6fc6a331.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/eea22cf6d5b28c700984e9fa6fc6a331.png)'
- en: Map with Stamen Toner tiles. Image created using Folium and Open Street Map
    data.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Stamen Toner 瓦片的地图。图像使用 Folium 和 Open Street Map 数据创建。
- en: Notice how the same map of Tampa is now black and white. We can also create
    terrain maps as demonstrated below.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 注意同一张坦帕地图现在是黑白色的。我们还可以创建地形图，如下所示。
- en: '[PRE5]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/160b978843e803430857df131b378d4b.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/160b978843e803430857df131b378d4b.png)'
- en: Map with Stamen Terrain tiles. Image created using Folium and Open Street Map
    data.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Stamen Terrain 瓦片的地图。图像使用 Folium 和 Open Street Map 数据创建。
- en: We can also create a beautiful watercolor map with Stamen tiles as shown in
    the code below.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用 Stamen 瓦片创建一张美丽的水彩地图，如下方代码所示。
- en: '[PRE6]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/1c0942d003e87614c5f0b784fcac8c2d.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1c0942d003e87614c5f0b784fcac8c2d.png)'
- en: Watercolor map of Tampa. Image created using Folium and Open Street Map data.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 坦帕水彩地图。图像使用 Folium 和 Open Street Map 数据创建。
- en: Adding Map Markers
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加地图标记
- en: If we want to add markers to a map we can use the Marker class from Folium to
    create marker objects and add them to the map as demonstrated below. As expected,
    we can specify the location of a marker using coordinates.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想在地图上添加标记，可以使用 Folium 的 Marker 类创建标记对象，并将其添加到地图中，如下所示。正如预期的那样，我们可以使用坐标指定标记的位置。
- en: '[PRE7]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../Images/b8b4ac97f4a4ae5f67dd33d2567ad6dc.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b8b4ac97f4a4ae5f67dd33d2567ad6dc.png)'
- en: Map of Tampa with markers. Image created using Folium and Open Street Map data.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 带有标记的坦帕地图。图像使用 Folium 和 Open Street Map 数据创建。
- en: Notice how I have created markers on the map above on Clearwater and Saint Petersburg.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 注意我在上面的地图中在 Clearwater 和 Saint Petersburg 创建了标记。
- en: Creating a Choropleth Map
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建分级填色图
- en: While creating maps is a useful feature, being able to plot and visualize data
    and trends on maps is even better. Folium gives us the ability to create choropleth
    maps as well. In this section, I will demonstrate how to create a choropleth map
    with U.S. unemployment data.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然创建地图是一个有用的功能，但能够在地图上绘制和可视化数据及趋势更为重要。Folium 还提供了创建分级填色图的功能。在这一部分，我将演示如何使用美国失业数据创建分级填色图。
- en: Reading the Data
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 读取数据
- en: The dataset we will be using is available in the examples directory on the Folium
    GitHub repo. We will read both a CSV file with unemployment statistics for each
    state in October 2012 as well as a GeoJSON file for generating the map.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用的数据集可以在 Folium GitHub 仓库的 examples 目录中找到。我们将读取一个包含 2012 年 10 月各州失业统计数据的
    CSV 文件，以及一个用于生成地图的 GeoJSON 文件。
- en: '[PRE8]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](../Images/90e6750598cc3e212691cb9e55246836.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/90e6750598cc3e212691cb9e55246836.png)'
- en: State unemployment data.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 各州失业数据。
- en: The image above shows the first ten rows of the state unemployment data displayed
    using the pandas head function.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 上图显示了使用 pandas head 函数展示的前十行各州失业数据。
- en: Generating the Map
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生成地图
- en: 'Now that we have the unemployment data, we can generate a choropleth map. We
    will supply the following arguments to the Choropleth constructor:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了失业数据，可以生成分级填色图。我们将向 Choropleth 构造函数提供以下参数：
- en: '**geo_data:** a path to a file with GeoJSON data for generating the map.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**geo_data:** 用于生成地图的 GeoJSON 数据文件路径。'
- en: '**name**: the name of the map'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**name**: 地图的名称'
- en: '**data**: the actual data that will be used to generate colors in choropleth
    map.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**data**: 用于生成分级填色图颜色的实际数据。'
- en: '**columns**: the columns of the data that will be used.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**columns**: 将使用的数据列。'
- en: '**key_on**: the variable in the GeoJSON file to bind the data to (must start
    with feature, ie. feature.id)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**key_on**: 在 GeoJSON 文件中将数据绑定到的变量（必须以 feature 开头，例如 feature.id）'
- en: '**fill_color**: the color scheme to use for the choropleth map'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**fill_color**: 用于分级填色图的颜色方案'
- en: '**fill_opacity**: the opacity of the color fill.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**fill_opacity**: 填充颜色的透明度。'
- en: '**line_opacity**: the opacity of the lines in map.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**line_opacity**: 地图中线条的透明度。'
- en: '**legend_name**: the name of the legend in the map.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**legend_name**: 地图中图例的名称。'
- en: '[PRE9]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](../Images/56fb1f56934271de2d545694e6f797cb.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/56fb1f56934271de2d545694e6f797cb.png)'
- en: Choropleth map showing U.S. unemployment.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 显示美国失业情况的分级填色图。
- en: As you can see above, we were able to generate a choropleth map that visualizes
    the unemployment rate in each U.S. state.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 正如上面所示，我们能够生成一个可视化每个美国州失业率的分级地图。
- en: Saving the Map as an HTML File
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将地图保存为 HTML 文件
- en: We can also save maps as HTML files, which is helpful for embedding Folium maps
    in web applications.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以将地图保存为 HTML 文件，这对将 Folium 地图嵌入到 web 应用程序中非常有帮助。
- en: '[PRE10]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Summary
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Folium is a useful Python library for visualizing geographic data. It allows
    us to create interactive map visualizations that can also be saved as HTML files
    and embedded in web applications. I have only covered some of the basic features
    of Folium in this article and you can find a more detailed list of features on
    the [Folium documentation page](https://python-visualization.github.io/folium/index.html).
    You can also find all the code used in this article on [GitHub](https://github.com/AmolMavuduru/FoliumTutorial).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Folium 是一个用于可视化地理数据的有用 Python 库。它允许我们创建互动式地图可视化，还可以将其保存为 HTML 文件，并嵌入到 web 应用程序中。我在这篇文章中仅覆盖了
    Folium 的一些基本功能，你可以在 [Folium 文档页面](https://python-visualization.github.io/folium/index.html)
    上找到更详细的功能列表。你还可以在 [GitHub](https://github.com/AmolMavuduru/FoliumTutorial) 上找到本文使用的所有代码。
- en: Join my Mailing List
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加入我的邮件列表
- en: Join my [mailing list](https://mailchi.mp/e8dd82679724/amols-data-science-blog)
    to get updates on my data science content. You’ll also get my free **Step-By-Step
    Guide to Solving Machine Learning Problems** when you [sign up](https://mailchi.mp/e8dd82679724/amols-data-science-blog)!
    You can also follow me on [Twitter](https://twitter.com/amolmavuduru1) for content
    updates.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 加入我的 [邮件列表](https://mailchi.mp/e8dd82679724/amols-data-science-blog)，获取我数据科学内容的更新。当你
    [注册](https://mailchi.mp/e8dd82679724/amols-data-science-blog) 时，还会收到我免费的 **逐步解决机器学习问题指南**。你也可以在
    [Twitter](https://twitter.com/amolmavuduru1) 上关注我，获取内容更新。
- en: And while you’re at it, consider [joining the Medium community](https://amolmavuduru.medium.com/membership)
    to read articles from thousands of other writers as well.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在此期间，考虑 [加入 Medium 社区](https://amolmavuduru.medium.com/membership)，阅读来自成千上万其他作者的文章。
- en: Sources
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 来源
- en: Rob Story, [Folium 0.14.0 documention](https://python-visualization.github.io/folium/index.html),
    (2013), GitHub.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Rob Story, [Folium 0.14.0 文档](https://python-visualization.github.io/folium/index.html)，（2013），GitHub。
