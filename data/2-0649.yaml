- en: 'Data Modeling for Mere Mortals — Part 2: Dimensional Modeling Fundamentals'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据建模入门 — 第2部分：维度建模基础
- en: 原文：[https://towardsdatascience.com/data-modeling-for-mere-mortals-part-2-dimensional-modeling-fundamentals-ae2f53622321](https://towardsdatascience.com/data-modeling-for-mere-mortals-part-2-dimensional-modeling-fundamentals-ae2f53622321)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/data-modeling-for-mere-mortals-part-2-dimensional-modeling-fundamentals-ae2f53622321](https://towardsdatascience.com/data-modeling-for-mere-mortals-part-2-dimensional-modeling-fundamentals-ae2f53622321)
- en: Introducing a four-step dimensional-modeling design approach
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍四步维度建模设计方法
- en: '[](https://datamozart.medium.com/?source=post_page-----ae2f53622321--------------------------------)[![Nikola
    Ilic](../Images/9fab894b9696c0dfd80c5173188b720b.png)](https://datamozart.medium.com/?source=post_page-----ae2f53622321--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ae2f53622321--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ae2f53622321--------------------------------)
    [Nikola Ilic](https://datamozart.medium.com/?source=post_page-----ae2f53622321--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://datamozart.medium.com/?source=post_page-----ae2f53622321--------------------------------)[![Nikola
    Ilic](../Images/9fab894b9696c0dfd80c5173188b720b.png)](https://datamozart.medium.com/?source=post_page-----ae2f53622321--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ae2f53622321--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ae2f53622321--------------------------------)
    [Nikola Ilic](https://datamozart.medium.com/?source=post_page-----ae2f53622321--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ae2f53622321--------------------------------)
    ·9 min read·Sep 1, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----ae2f53622321--------------------------------)
    ·阅读时间9分钟·2023年9月1日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: Do you know what is *probably* the best data model in the Business Intelligence
    world? Curious to learn the 4-step dimensional design process? This article will
    provide you with all the fundamentals of dimensional modeling
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 你知道在商业智能领域中*可能*是最好的数据模型是什么吗？想了解4步维度设计过程吗？这篇文章将为你提供维度建模的所有基础知识。
- en: '![](../Images/bdfd954c7e43aaf7a89e8a58a5890b31.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bdfd954c7e43aaf7a89e8a58a5890b31.png)'
- en: '[Photo by **徐 at Pexels**](https://www.pexels.com/de-de/foto/flachfokus-fotografie-von-gelben-sternlaternen-980859/)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[**徐 at Pexels** 的照片](https://www.pexels.com/de-de/foto/flachfokus-fotografie-von-gelben-sternlaternen-980859/)'
- en: In the [previous article](https://data-mozart.com/data-modeling-for-mere-mortals-part-1-what-is-data-modeling/),
    you learned the general principles of data modeling. Now, it’s time to narrow
    down our learning journey and master data modeling concepts and techniques that
    are specifically relevant to business intelligence scenarios. And, whenever we’re
    talking about data modeling for business intelligence, dimensional modeling is
    definitely the number one concept.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在[上一篇文章](https://data-mozart.com/data-modeling-for-mere-mortals-part-1-what-is-data-modeling/)中，你了解了数据建模的一般原则。现在，是时候缩小我们的学习范围，掌握专门适用于商业智能场景的数据建模概念和技术了。而每当我们谈论商业智能的数据建模时，维度建模无疑是最重要的概念。
- en: History Lessons — Ralph Kimball
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 历史回顾 — Ralph Kimball
- en: Before we come up to explain why dimensional modeling is named like that — dimensional—let’s
    first take a brief tour through some history lessons. In 1996, a man called [Ralph
    Kimball](https://www.kimballgroup.com/data-warehouse-business-intelligence-resources/books/kimball-reader/)
    published a book, “The Data Warehouse Toolkit,” which is still considered a dimensional
    modeling “Bible”. In his book, Kimball introduced a completely new approach to
    modeling data for analytical workloads, the so-called “bottom-up” approach. The
    focus is on identifying key business processes within the organization and modeling
    these first, before introducing additional business processes.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们解释为什么称之为“维度建模”之前，先来简要回顾一下历史。在1996年，一位名叫[Ralph Kimball](https://www.kimballgroup.com/data-warehouse-business-intelligence-resources/books/kimball-reader/)的人出版了一本书，《数据仓库工具包》，这本书至今仍被视为维度建模的“圣经”。在他的书中，Kimball介绍了一种全新的数据建模方法，即所谓的“自下而上”方法。重点是识别组织内的关键业务流程，并首先对这些流程进行建模，然后再引入其他业务流程。
- en: 4-Step Dimensional Design Process
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4步维度设计过程
- en: Kimball’s approach is fairly simple and consists of 4 steps, also known as the
    “4-Step Dimensional Design process”. Each step is based on a decision.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Kimball的方法相当简单，由4个步骤组成，也称为“4步维度设计过程”。每个步骤都基于一个决策。
- en: It starts with ***selecting the business process***. To be consistent, let’s
    use the same example as in the previous article and imagine that selling a ticket
    for an event is the business process we are interested in
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这从***选择业务过程***开始。为了保持一致，让我们使用与上一篇文章相同的例子，假设销售事件的票是我们感兴趣的业务过程。
- en: '![](../Images/e869fbfe8ba584863996842139a82e80.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e869fbfe8ba584863996842139a82e80.png)'
- en: Illustration by author
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 作者插图
- en: 2\. The next step is to ***declare the grain***. Grain? What on Earth is grain?
    Simply said, that is the lowest level of detail captured by the business process.
    In our example, the lowest level of detail is the individual ticket sale. We will
    come up later to explain why choosing the right grain is of paramount importance
    in dimensional modeling. At this moment, it’s just important to remember that
    grain refers to the lowest level of detail captured by the business process
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 第二步是***声明粒度***。粒度？粒度到底是什么？简单来说，就是业务过程捕获的最低详细级别。在我们的例子中，最低的详细级别是单个票据销售。稍后我们会解释为什么选择正确的粒度在维度建模中至关重要。目前，只需要记住，粒度指的是业务过程捕获的最低详细级别。
- en: '3\. Once you declare the grain, the next step is to ***identify the dimensions***.
    Let’s forget about this name dimension for a second…And try to explain what “dimension”
    really is…It’s a special type of table that I like to think of as a lookup table.
    You know, if you need more descriptive information about a certain object — that’s
    what you’ll find in the lookup table. Oops, I mean, in the dimension table. Think
    of a person and its description. How would you describe a specific person? By
    name, for sure. Then, by gender, age, physical and email address, and probably
    phone number too. Or product? The product probably has a name, belongs to a specific
    category, and has a specific color or size. ***Dimension tables usually answer
    the questions starting with “W”: Who, What, When, Where, Why***. Back to our example:
    **When** did we sell the ticket? **Where** did we sell the ticket? **What** type
    of ticket did we sell? And so on…'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 第三步，一旦你声明了粒度，接下来的步骤是***确定维度***。让我们暂时抛开这个名称维度……尝试解释一下“维度”真正的含义……它是一种特殊类型的表，我喜欢把它当作查找表来思考。你知道，如果你需要关于某个对象的更多描述性信息——这就是你在查找表中会找到的内容。哎呀，我的意思是，在维度表中。想想一个人及其描述。你会如何描述一个特定的人？当然是按名字。然后是性别、年龄、身体特征、电子邮件地址，可能还有电话号码。或者产品呢？产品可能有名字，属于特定类别，还有特定的颜色或尺寸。***维度表通常回答以“W”开头的问题：谁、什么、何时、哪里、为什么***。回到我们的例子：**我们**什么时候卖出了票？**我们**在哪里卖出了票？**我们**卖了什么类型的票？等等……
- en: 4\. The last step in this 4-step dimensional design process is ***identifying
    the facts.*** If we think of a dimension as a lookup table, a fact table is a
    table that stores the data about events — something that happened as a result
    of the business process. In most cases, but not always, these events are represented
    with numeric values — **How many** tickets did we sell? **How much** revenue did
    we make?
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 第四步是***识别事实。*** 如果我们将维度视为查找表，那么事实表就是一个存储事件数据的表——这些事件是业务过程的结果。大多数情况下，但并非总是，这些事件用数字值来表示——**我们卖出了多少**张票？**我们赚了多少**收入？
- en: Why Dimensional Modeling?
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么选择维度建模？
- en: 'Before we move on to explain different physical implementations of dimensional
    modeling, let’s quickly reiterate the key benefits of building a dimensional model
    for business intelligence scenarios:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续解释维度建模的不同物理实现之前，让我们快速重申一下为商业智能场景构建维度模型的关键好处：
- en: '***User-friendly data navigation*** — as users, we often get it easier when
    thinking about the business process in terms of the subjects that are part of
    the process. Which event sold the most tickets in the 2nd quarter of the last
    year? How many tickets were bought by female customers for the Champions League
    final game? Which employee in the USA sold the most VIP tickets for the Super
    Bowl in 2022? And, many more of course…'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***用户友好的数据导航*** — 作为用户，我们往往更容易将业务过程视作过程中的主题。哪个事件在去年第二季度售出的票最多？女性顾客为冠军联赛决赛购买了多少张票？哪位美国员工在2022年超级碗中售出了最多的VIP票？当然，还有很多其他问题……'
- en: '***Performance*** — As you’ve already learned, OLAP systems are designed to
    support quick and efficient data read operations, which usually means fewer joins
    between tables. That’s exactly what dimensional modeling provides through Star-schema
    design — and we’ll go into more detail about it in the next section'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***性能***——正如你已经了解的那样，OLAP系统被设计用来支持快速和高效的数据读取操作，这通常意味着表之间的连接更少。这正是维度建模通过星型模式设计提供的——我们将在下一部分中详细介绍。'
- en: '***Flexibility*** — this is one of the key advantages of a dimensional model.
    Did your customer change the address? Did your employee change position within
    the organization? No worries, as all these challenges can be easily handled within
    the model, by using a technique called “slowly changing dimension”. But, more
    on that later in the article'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***灵活性***——这是维度模型的关键优势之一。你的客户更改了地址？你的员工在组织中调动了职位？没关系，因为所有这些挑战都可以通过一种称为“慢变维度”的技术在模型中轻松处理。不过，更多细节将在本文后续部分介绍。'
- en: Data Modeler or Astrologist? Understanding Star vs Snowflake schema
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据建模师还是占星师？理解星型与雪花型模式
- en: If you find yourself surrounded by experienced data modelers, you’ll probably
    hear them talking about stars and snowflakes. Don’t worry, they haven’t become
    astrologists or nature researchers all of a sudden. Star and snowflake schema
    are probably the most influential concepts in the world of dimensional modeling.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你发现自己被经验丰富的数据建模师包围，你可能会听到他们谈论星型和雪花型模式。别担心，他们突然变成了占星师或自然研究者。星型和雪花型模式可能是维度建模领域中最具影响力的概念。
- en: Let’s first try to explain the star schema. Don’t forget, according to Kimball,
    each piece of data should be classified either as “what, when, where, who, why”,
    or as “how much”, or “how many”. So, in a well-designed dimensional model, you
    should have a central table containing all the measurements and events — this
    is a fact table — surrounded by lookup tables, which we refer to as dimensions.
    The fact table and dimension tables are connected via relationships established
    between the primary key from the dimension table and the foreign key from the
    fact table. If you take a look at the following illustration, you’ll understand
    why this data modeling design pattern is called star schema.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先尝试解释星型模式。别忘了，根据Kimball的说法，每一条数据应该被分类为“什么、何时、在哪里、谁、为什么”，或“多少”或“多少”。因此，在一个设计良好的维度模型中，你应该有一个包含所有测量和事件的中央表——这就是事实表——被查找表围绕，我们称之为维度表。事实表和维度表通过维度表的主键和事实表的外键建立的关系连接在一起。如果你查看下图，你将理解为什么这个数据建模设计模式被称为星型模式。
- en: '![](../Images/ade5e1f0c605859272d4c5066ce0c7c9.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ade5e1f0c605859272d4c5066ce0c7c9.png)'
- en: Illustration by author
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 插图来自作者
- en: '***Star schema is a de-facto standard for modeling data in enterprise data
    warehousing systems***, because it enables efficient querying of huge amounts
    of data, fast aggregations and intuitive data filtering.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '***星型模式是企业数据仓库系统中数据建模的事实标准***，因为它能够高效地查询大量数据，快速汇总并直观地过滤数据。'
- en: Although there are many ongoing debates questioning the star schema relevance
    for modern data platform solutions because of its “age”, it is fair to say that
    this concept is still absolutely relevant and definitely most widely adopted when
    it comes to designing efficient and scalable business intelligence systems.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管由于“年代问题”存在许多关于星型模式在现代数据平台解决方案中相关性的争论，但可以公平地说，这一概念在设计高效且可扩展的商业智能系统时仍然绝对相关，并且是最广泛采用的。
- en: '*Snowflake schema is very similar to star schema!* Conceptually, there is no
    difference between the star and snowflake — in both cases, you’ll place your “who,
    what, when, where and why” into dimension tables, while keeping your “how much”
    and “how many” in the fact table. The only difference is that in the snowflake
    schema, ***dimensions are normalized and broken down into sub-dimensions***, as
    you may see in the following illustration, which is why it resembles a snowflake.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '*雪花型模式与星型模式非常相似！* 从概念上讲，星型和雪花型没有区别——在这两种情况下，你会将“谁、什么、何时、在哪里和为什么”放入维度表中，同时将“多少”和“多少”保留在事实表中。唯一的区别是，在雪花型模式中，***维度被规范化并分解成子维度***，正如你在下图中看到的那样，这就是它类似雪花的原因。'
- en: '![](../Images/001073d31b8d974d5dbde49a9eacb8c5.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/001073d31b8d974d5dbde49a9eacb8c5.png)'
- en: Illustration by author
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 插图来自作者
- en: 'The main motivation for normalizing dimensions is to remove the data redundancy
    from the dimension table. Although this might sound like a desirable approach,
    normalizing dimensions comes with some serious considerations:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 规范化维度的主要动机是消除维度表中的数据冗余。尽管这听起来像是一种理想的方法，但规范化维度带来了一些严重的考虑：
- en: The overall data model structure becomes more complex
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整体数据模型结构变得更复杂
- en: Performance may suffer, because of the joins between normalized dimension tables
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 性能可能会受到影响，因为规范化维度表之间的连接
- en: Of course, there are specific use cases where dimension normalization may be
    a more viable choice, especially in regard to reducing the data model size. However,
    keep in mind that snowflake schema should be an exception rather than a rule when
    modeling your data for business intelligence workloads.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，存在特定的用例，其中维度规范化可能是更可行的选择，尤其是在减少数据模型大小方面。然而，请记住，雪花架构在为商业智能工作负载建模时应当是例外而非规则。
- en: Star schema should always be a default choice!
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 星型架构应始终作为默认选择！
- en: 'To wrap up this topic on the Star schema relevance, I like to use an analogy
    to a marketing message created by Carlsberg Brewery, which says:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 为了总结关于星型架构相关性的这个话题，我喜欢用一个由Carlsberg Brewery创建的市场营销信息的类比，它说：
- en: '***“Carlsberg — Probably the best beer in the world…”***'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '***“Carlsberg — 可能是世界上最好的啤酒…”***'
- en: 'Translated to data modeling world:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 翻译到数据建模世界：
- en: The Star schema is PROBABLY the best data model in the business intelligence
    world…
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 星型架构可能是商业智能世界中最好的数据模型…
- en: 3 Things to Know About Fact Tables
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 事实表的3个要点
- en: There are a dozen of wonderful books (like the aforementioned “The Data Warehouse
    Toolkit”, then [“The Star schema — Complete Reference” by Christopher Adamson](https://www.amazon.com/Schema-Complete-Reference-Christopher-Adamson/dp/0071744320)),
    which I strongly encourage you to read and learn all the details about dimensional
    modeling and the star schema in particular.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多精彩的书籍（如前述的《数据仓库工具包》，以及[Christopher Adamson的《星型架构 — 完整参考》](https://www.amazon.com/Schema-Complete-Reference-Christopher-Adamson/dp/0071744320)），我强烈建议你阅读并了解关于维度建模和星型架构的所有细节。
- en: Therefore, thinking that reading this, or any other single article, will make
    you a “master of dimensional modeling” would be absolutely wrong and pretentious.
    However, I would like to emphasize 3 key concepts relevant to fact tables in the
    dimensional model.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，认为阅读这篇文章或任何其他单一文章会使你成为“维度建模大师”将是绝对错误和自大的。然而，我想强调3个与维度模型中的事实表相关的关键概念。
- en: '**Disclaimer:** these are 3 concepts that ***I personally*** find most important
    and that doesn’t necessarily mean that you should not consider some other concepts
    more relevant.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**免责声明：** 这些是我***个人***认为最重要的3个概念，这并不意味着你不应该考虑其他概念更为相关。'
- en: '![](../Images/6e431c5ff48c21b38693e530ff0affb5.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6e431c5ff48c21b38693e530ff0affb5.png)'
- en: A typical fact table structure — Image by author
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的事实表结构 — 作者提供的图像
- en: '***Fact table structure*** — In most cases, a fact table will consist of the
    numeric values produced by measuring the event from the real world, and a bunch
    of foreign keys of related dimension tables. At the lowest grain, a fact table
    row corresponds to a real-world event. Thus the fact table design is entirely
    based on this event and is not inﬂuenced by the eventual future reports that may
    be produced. Fact tables are **usually** narrow and long (huge number of rows
    and less number of columns)'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '***事实表结构*** — 在大多数情况下，事实表将包含通过测量现实世界事件产生的数值，以及一堆相关维度表的外键。在最低粒度下，事实表的一行对应于一个现实世界事件。因此，事实表的设计完全基于这个事件，而不受未来可能生成的报告的影响。事实表**通常**是窄而长的（行数多，列数少）'
- en: '***Additive, Semi-additive and Non-additive measures*** — Numeric values that
    we store in a fact table are not always the same “nature”. ***Additive*** measures
    are the most flexible and can be summed across any of the dimensions associated
    with the fact table. ***Semi-additive***measures can be summed across some dimensions,
    but not all. A typical example is balance amounts which are additive across all
    dimensions except time. Finally, some measures are completely ***non-additive***,
    like ratios for example'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '***加法、半加法和非加法度量*** — 我们在事实表中存储的数值并不总是具有相同的“性质”。***加法***度量是最灵活的，可以在与事实表相关的任何维度上进行汇总。***半加法***度量可以在某些维度上进行汇总，但不是全部。一个典型的例子是余额金额，它在除时间之外的所有维度上都是加法的。最后，一些度量完全是***非加法的***，例如比率。'
- en: '***NULLs in fact tables*** — The key thing to keep in mind here: not every
    NULL value behaves nicely in the fact table! While it’s completely fine to have
    a NULL for the measurement, using NULLs as foreign keys in the fact table should
    be avoided at all costs, because this will cause referential integrity violation.
    This can be solved by introducing a special default row in the dimension table
    for the “Unknown” or “Undefined” record'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '***事实表中的 NULLs***——这里需要记住的关键点是：并非每个 NULL 值在事实表中表现良好！虽然测量值为 NULL 是完全可以接受的，但在事实表中使用
    NULL 作为外键应该尽量避免，因为这会导致参照完整性违反。这可以通过在维度表中引入一个用于“未知”或“未定义”记录的特殊默认行来解决'
- en: 3 Things to Know About Dimension Tables
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于维度表的3个要点
- en: '![](../Images/b2890a22ebd8e3602d22295135324606.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b2890a22ebd8e3602d22295135324606.png)'
- en: A typical dimension table structure — Image by author
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的维度表结构——作者提供的图像
- en: '***Dimension table structure*** — A dimension table should always contain a
    single primary key column, which is used as a foreign key in a related fact table.
    Dimension tables are usually wide and short (many columns, less number of rows,
    although there are dimensions with multimillion rows). Dimension tables are denormalized,
    containing usually text attributes and descriptions'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '***维度表结构***——维度表应始终包含一个主键列，该列在相关的事实表中用作外键。维度表通常较宽而短（列多，行数少，尽管有些维度表有多百万行）。维度表是非规范化的，通常包含文本属性和描述'
- en: '***Slowly changing dimension (SCD)*** — This is one of the key concepts for
    handling data changes over time. Don’t let this “slowly” word confuse you:)…It’s
    not about “slow” or “fast”, the emphasis is on the word “changing”. There are
    multiple techniques to handle modifications of the dimension attributes (think
    of changing the physical address, or phone number of the person), and Kimball
    lists no less than 8 different SCD types! However, the most commonly used type
    is Type 2, where you’d add a new row in the dimension table and update the row
    validity attribute'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '***慢变化维度 (SCD)***——这是处理数据随时间变化的关键概念之一。不要被“慢”这个词搞混:)… 这并不是关于“慢”或“快”，重点是“变化”这个词。处理维度属性修改的技术有多种（考虑更改个人的实际地址或电话号码），Kimball
    列出了不少于8种不同的 SCD 类型！然而，最常用的是类型2，你会在维度表中添加一行新数据并更新行的有效性属性'
- en: '***Role-playing dimensions*** — I’ve already written a [whole article on this
    topic](https://data-mozart.com/welcome-to-powerbi-thetare-role-playing-dimensions/)
    and explained how this concept can be applied within Microsoft Power BI'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '***角色扮演维度***——我已经写了一篇[关于这个主题的完整文章](https://data-mozart.com/welcome-to-powerbi-thetare-role-playing-dimensions/)，并解释了如何在
    Microsoft Power BI 中应用这个概念'
- en: As I mentioned, these are just a few concepts relevant to dimension tables,
    and I strongly advise reading Kimball’s or Adamson’s book to understand other
    important concepts and techniques.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如我所提到的，这些只是与维度表相关的一些概念，我强烈建议阅读 Kimball 或 Adamson 的书，以了解其他重要的概念和技术。
- en: Conclusion
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: By learning about various data model types (conceptual, logical, and physical),
    we’ve built a solid foundation for understanding the importance of the data modeling
    process in general. Dimensional modeling, though only a subset of data modeling,
    is one of the concepts that are of key importance in implementing efficient and
    scalable real-life business intelligence solutions.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 通过了解各种数据模型类型（概念模型、逻辑模型和物理模型），我们建立了理解数据建模过程重要性的坚实基础。尽管维度建模仅是数据建模的一个子集，但它在实现高效且可扩展的实际商业智能解决方案中具有关键重要性。
- en: 'To conclude, the biggest advantage of dimensional models is their flexibility
    and adaptability. Here is the list of the changes that can be applied without
    violating any existing business intelligence query or application:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，维度模型最大的优势是其灵活性和适应性。以下是可以在不违反任何现有商业智能查询或应用的情况下应用的更改列表：
- en: If you want to add new facts to the existing fact table, it’s as simple as creating
    a new column (assuming that “new” facts are of the same grain as the existing
    ones)
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你想向现有事实表添加新事实，只需创建一个新列（假设“新”事实与现有事实的粒度相同）
- en: If you need to add new lookup attributes to the existing fact table, it’s as
    simple as adding a new column with the foreign key to a new dimension table
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你需要向现有事实表添加新的查找属性，只需添加一个新的列，将外键指向一个新的维度表即可。
- en: Whenever you need to extend the existing dimension table with new attributes,
    it’s as simple as adding a new column to the respective dimension table
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每当你需要用新属性扩展现有维度表时，只需像向相应维度表添加新列一样简单。
- en: Thanks for reading!
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读！
- en: '[Become a member and support thousands of authors on Medium!](https://datamozart.medium.com/membership)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '[成为会员，支持 Medium 上的成千上万位作者！](https://datamozart.medium.com/membership)'
