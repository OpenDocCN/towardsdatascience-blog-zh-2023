- en: Two Advanced SQL Techniques That Can Drastically Improve Your Queries
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 两种可以显著提升你的查询的高级 SQL 技巧
- en: 原文：[https://towardsdatascience.com/two-advanced-sql-techniques-that-can-drastically-improve-your-queries-81a97c92ddd0](https://towardsdatascience.com/two-advanced-sql-techniques-that-can-drastically-improve-your-queries-81a97c92ddd0)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/two-advanced-sql-techniques-that-can-drastically-improve-your-queries-81a97c92ddd0](https://towardsdatascience.com/two-advanced-sql-techniques-that-can-drastically-improve-your-queries-81a97c92ddd0)
- en: Learn about Common Table Expression (CTE) and Window Functions
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解公用表表达式（CTE）和窗口函数
- en: '[](https://chongjason.medium.com/?source=post_page-----81a97c92ddd0--------------------------------)[![Jason
    Chong](../Images/af940189f50be491653b6469eef6fb46.png)](https://chongjason.medium.com/?source=post_page-----81a97c92ddd0--------------------------------)[](https://towardsdatascience.com/?source=post_page-----81a97c92ddd0--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----81a97c92ddd0--------------------------------)
    [Jason Chong](https://chongjason.medium.com/?source=post_page-----81a97c92ddd0--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://chongjason.medium.com/?source=post_page-----81a97c92ddd0--------------------------------)[![Jason
    Chong](../Images/af940189f50be491653b6469eef6fb46.png)](https://chongjason.medium.com/?source=post_page-----81a97c92ddd0--------------------------------)[](https://towardsdatascience.com/?source=post_page-----81a97c92ddd0--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----81a97c92ddd0--------------------------------)
    [Jason Chong](https://chongjason.medium.com/?source=post_page-----81a97c92ddd0--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----81a97c92ddd0--------------------------------)
    ·11 min read·Jun 30, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----81a97c92ddd0--------------------------------)
    ·11分钟阅读·2023年6月30日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/b1f706d22404a4cbcab78d47197c01d4.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b1f706d22404a4cbcab78d47197c01d4.png)'
- en: Photo by [Karina Szczurek](https://unsplash.com/@karinaszczurek?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[Karina Szczurek](https://unsplash.com/@karinaszczurek?utm_source=medium&utm_medium=referral)提供，来源于[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: SQL is the bread and butter of every data professional. It doesn’t matter if
    you are a data analyst, data scientist, or data engineer, you need to have a solid
    understanding of how to write clean and efficient SQL queries.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: SQL 是每个数据专业人员的必备技能。无论你是数据分析师、数据科学家还是数据工程师，你都需要对如何编写干净高效的 SQL 查询有一个扎实的理解。
- en: This is because behind any rigorous data analysis or any sophisticated machine
    learning model is the underlying data itself, and this data has to come from somewhere.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为任何严谨的数据分析或复杂的机器学习模型背后都依赖于数据本身，而这些数据必须来自某个地方。
- en: Hopefully after reading my introductory [blog post](https://medium.com/towards-data-science/10-most-important-sql-commands-every-data-analyst-needs-to-know-f0f568914b98)
    to SQL, you would have already learned that SQL stands for Structured Query Language
    and it is a language that is used to retrieve data from a relational database.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 希望在阅读了我关于 SQL 的[博客文章](https://medium.com/towards-data-science/10-most-important-sql-commands-every-data-analyst-needs-to-know-f0f568914b98)后，你已经了解到
    SQL 代表结构化查询语言，它是一种用于从关系数据库中检索数据的语言。
- en: In that blog post, we went over some fundamental SQL commands such as `SELECT`,
    `FROM`, and `WHERE` which should cover most of the basic queries you will come
    across when using SQL.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在那篇博客文章中，我们讨论了一些基本的 SQL 命令，如 `SELECT`、`FROM` 和 `WHERE`，这些命令涵盖了你在使用 SQL 时可能遇到的大多数基础查询。
- en: But what happens if those simple commands are simply not enough? What happens
    if the data you want demands a more robust approach to query?
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 但如果这些简单的命令不够用怎么办？如果你想查询的数据需要更强大的查询方法怎么办？
- en: Well, look no further because today, we will go over two new SQL techniques
    that you can add to your toolkit that will take your queries to the next level.
    These techniques are called Common Table Expression (CTE) and Window Functions.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 好了，今天我们将介绍两种新的 SQL 技巧，你可以将它们添加到你的工具包中，从而将你的查询提升到一个新的水平。这些技巧被称为公用表表达式（CTE）和窗口函数。
- en: To help us learn these techniques, we will be using an online SQL editor called
    [DB Fiddle](https://www.db-fiddle.com/) (set to SQLite v3.39) and the taxi trip
    duration [dataset](https://console.cloud.google.com/marketplace/product/city-of-new-york/nyc-tlc-trips)
    sourced from Google Cloud (NYC Open Data license).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助我们学习这些技巧，我们将使用一个名为[DB Fiddle](https://www.db-fiddle.com/)的在线SQL编辑器（设置为SQLite
    v3.39）和来自Google Cloud的出租车行程[数据集](https://console.cloud.google.com/marketplace/product/city-of-new-york/nyc-tlc-trips)（NYC
    Open Data许可证）。
- en: Data Preparation
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据准备
- en: If you are not interested to learn how I prepared the dataset, feel free to
    skip past this section and paste the following code onto DB fiddle to generate
    the schema.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对我如何准备数据集不感兴趣，可以跳过这一部分，直接将以下代码粘贴到DB Fiddle中以生成模式。
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: After running `SELECT * from taxi`, you should get a resulting table that looks
    like this.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`SELECT * from taxi`后，你应该会得到一个类似于下面的表格。
- en: '![](../Images/29b801eda17e78c1b17bd2c347af3dab.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/29b801eda17e78c1b17bd2c347af3dab.png)'
- en: Image by Author.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: For the keen beans who are wondering how this table actually came about, I filtered
    the data to the first 30 rows and only kept the columns that you see above. As
    for the distance field, I computed the orthodromic distance between the pick-up
    and drop-off coordinates (latitude and longitude).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些想了解这个表格是如何来的朋友，我将数据过滤到了前30行，只保留了你上面看到的列。至于距离字段，我计算了取车点和放车点之间的正距距离（纬度和经度）。
- en: The orthodromic distance is the shortest distance between two points on a sphere,
    so this actually turns out to be an underestimate of the real distance travelled
    by the taxi. However, for the purpose of what we are doing today, we can ignore
    this for now.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 正距距离是球面上两点之间的最短距离，因此这实际上会低估出租车实际行驶的距离。然而，出于今天的目的，我们可以暂时忽略这一点。
- en: The formula to calculate the orthodromic distance can be found [here](https://www.geeksforgeeks.org/program-distance-two-points-earth/).
    Now, back to SQL.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 计算正距距离的公式可以在[这里](https://www.geeksforgeeks.org/program-distance-two-points-earth/)找到。现在，回到SQL。
- en: Common Table Expression (CTE)
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 公共表表达式（CTE）
- en: A common table expression (CTE) is a temporary table that you return within
    a query. You can think of it as a query within a query. They help to not only
    split your queries into more readable chunks but you can write new queries based
    on a CTE that has been defined.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 公共表表达式（CTE）是你在查询中返回的临时表。你可以将它视为一个查询中的查询。它们不仅帮助你将查询拆分为更易读的块，还可以基于已定义的CTE编写新查询。
- en: To demonstrate this, suppose we want to analyze taxi trips split by the hour
    of the day and filter to trips that took place between the months of January and
    March 2016.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示这个，我们假设我们想分析按小时划分的出租车行程，并过滤2016年1月至3月之间发生的行程。
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/7ff5550cf10bc0445f34b8a731862c38.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7ff5550cf10bc0445f34b8a731862c38.png)'
- en: Image by Author.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: Straightforward enough; let’s take this one step further.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 够直接了；让我们更进一步。
- en: Suppose now we want to compute the number of trips and the average speed for
    each of these hours. This is where we can utilize a CTE to first obtain a temporary
    table like the one we observe above, followed by a subsequent query to count the
    number of trips and compute the average speed group by hour of the day.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们现在想计算每个小时的行程数量和平均速度。这时我们可以利用CTE首先获取一个类似于上面观察到的临时表，然后执行后续查询以按小时统计行程数量并计算平均速度。
- en: The way you would define a CTE is by using the `WITH` and `AS` statements.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 定义CTE的方式是使用`WITH`和`AS`语句。
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/da91ec35bb9d2861c917f72385b3fea1.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/da91ec35bb9d2861c917f72385b3fea1.png)'
- en: Image by Author.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: An alternative to using a CTE is simply wrapping the temporary table within
    a `FROM` statement (see code below), which would give you the same result. However,
    this is not advisable from a code readability standpoint. Moreover, imagine if
    we wanted to create more than just one temporary table.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 使用CTE的替代方法是简单地将临时表包裹在`FROM`语句中（见下方代码），这会给你相同的结果。然而，从代码可读性的角度来看，这并不推荐。此外，想象一下如果我们需要创建多个临时表的话。
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Bonus: an interesting insight we can pull from this exercise is that taxis
    tend to move slower (lower average speed) during peak hours most likely due to
    heavier traffic as people travel to and back from work.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 额外信息：从这个练习中我们可以得到一个有趣的见解，那就是出租车在高峰时段的移动速度较慢（平均速度较低），这很可能是由于人们上下班的交通拥堵造成的。
- en: Window Functions
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 窗口函数
- en: Window functions perform aggregate operations on groups of rows but they produce
    a result for each row in the original table.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 窗口函数对行组执行聚合操作，但它为原始表中的每一行生成一个结果。
- en: To fully understand how window functions work, it is helpful to first do a quick
    recap of aggregation via `GROUP BY`.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 要完全理解窗口函数的工作原理，首先快速回顾一下通过`GROUP BY`进行的聚合会有所帮助。
- en: Let’s say we wish to compute a list of summary statistics by month using the
    taxi dataset.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们希望使用出租车数据集计算按月份汇总的统计数据。
- en: '[PRE4]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/3ce3585ede9a5ff9d1de73d20b3cd600.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3ce3585ede9a5ff9d1de73d20b3cd600.png)'
- en: Image by Author.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: In the example above, we have computed the count, sum, average, minimum, and
    maximum distance travelled for each individual month in the dataset. Notice how
    our original taxi table with 30 rows has now been collapsed into six rows, one
    for each individual month.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的示例中，我们计算了数据集中每个月的计数、总和、平均值、最小值和最大值。请注意，我们原本有30行的出租车表现在已经压缩为每个月一行，共六行。
- en: So, what is actually happening behind the scenes? Firstly, SQL grouped all 30
    rows in the original table based on their months. It then applied the relevant
    calculations based on the values in these individual groups.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，实际在幕后发生了什么？首先，SQL根据月份对原始表中的30行进行了分组。然后，它根据这些分组中的值应用了相关的计算。
- en: Let’s take January as an example. There are two trips in the dataset that took
    place in the month of January, with distance travelled of 3.97 and 0.68 respectively.
    SQL then calculated the count, sum, average, minimum, and maximum based on these
    two values. The process then repeats for the other months until eventually we
    get an output that looks like the one above.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 以一月份为例。数据集中有两次发生在一月份的旅行，分别行程为3.97和0.68。SQL根据这两个值计算了计数、总和、平均值、最小值和最大值。这个过程会重复进行，直到所有月份的数据处理完成，最终得到的输出类似于上述结果。
- en: 'Now, hold this thought as we begin to explore how window functions work. There
    are three broad categories of window functions: aggregate functions, ranking functions,
    and navigation functions. We will look at examples of each one of them.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，请记住这个想法，我们开始探讨窗口函数的工作原理。窗口函数主要有三大类：聚合函数、排名函数和导航函数。我们将分别查看每一类的示例。
- en: Aggregate functions
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 聚合函数
- en: We have already seen aggregate functions at play in our previous example. Aggregate
    functions include functions like count, sum, average, minimum, and, maximum.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在之前的示例中已经见过聚合函数的作用。聚合函数包括计数、求和、平均值、最小值和最大值等函数。
- en: But where window functions differ from `GROUP BY` is the number of rows in the
    final output. Specifically, we saw that after aggregating by months, our output
    table is left with only six rows (one row for each distinct month).
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 但窗口函数与`GROUP BY`的不同之处在于最终输出的行数。具体来说，我们看到在按月份聚合后，我们的输出表只剩下六行（每个月一行）。
- en: Window functions, on the other hand, will not summarise the table by the aggregate
    field, but simply output the result in a new column for each row. The number of
    rows in the output table will not change. In other words, the output table will
    always have the same number of rows as the original table.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 窗口函数与聚合字段不同，它不会对表进行汇总，而是简单地在每一行中输出结果到一个新列。输出表中的行数不会改变。换句话说，输出表的行数总是与原始表相同。
- en: The syntax to perform a window function is `OVER(PARTITION BY ...)`. You can
    think of this as the `GROUP BY` statement in our previous example.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 执行窗口函数的语法是`OVER(PARTITION BY ...)`。你可以将其视为我们之前示例中的`GROUP BY`语句。
- en: Let’s see how this works in practice.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看实际情况是如何运作的。
- en: '[PRE5]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/01f02b04940f7bda25ec3b06f6491c2d.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/01f02b04940f7bda25ec3b06f6491c2d.png)'
- en: Image by Author.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: Here, we want the same output as last time, but rather than collapsing the table,
    we want the output displayed as individual rows in a new column.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们希望得到与上次相同的输出，但不是压缩表，而是希望在新列中将结果显示为单独的行。
- en: You would notice the values after the aggregation did not change but rather,
    they are simply displayed as repeated rows in the table. For example, the first
    two rows (January) have the same values for trip count, total month distance,
    average month distance, minimum month distance, and maximum month distance as
    before. The same applies to the other months.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 你会发现聚合后的值没有改变，而是简单地以重复的行显示在表中。例如，前两行（一月）的旅行计数、总月度距离、平均月度距离、最小月度距离和最大月度距离与之前相同。其他月份也是如此。
- en: In case you are wondering how window functions are useful, it helps us compare
    each row value with the aggregated value. In this instance, we can easily compare
    the distance travelled in each row with the monthly average, minimum and maximum,
    and so on.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想知道窗口函数的作用，它帮助我们将每一行的值与聚合值进行比较。在这种情况下，我们可以轻松比较每一行的行驶距离与每月的平均值、最小值和最大值等等。
- en: Ranking functions
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 排名函数
- en: Another type of window function is the ranking function. As the name suggests,
    this ranks a group of rows based on an aggregate field.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种窗口函数是排名函数。顾名思义，这种函数基于聚合字段对一组行进行排名。
- en: '[PRE6]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/44466b91bfa220f0b28a79bb17cce64c.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/44466b91bfa220f0b28a79bb17cce64c.png)'
- en: Image by Author.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: 'In the example above, we have two ranking columns: one for the overall rank
    (from 1–30) and one for the monthly rank, both in descending order.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的例子中，我们有两个排名列：一个是整体排名（从1到30），另一个是按月排名，两者均为降序排列。
- en: To specify the order when ranking, you will need to use `ORDER BY` within the
    `OVER` statement.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 要指定排名的顺序，你需要在`OVER`语句中使用`ORDER BY`。
- en: The way you would interpret the results for the first row is that it has the
    third-longest distance travelled in the whole dataset and the longest distance
    travelled for the month of January.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 对于第一行的结果，你会解释为它在整个数据集中具有第三长的行驶距离，并且在一月份的行驶距离最长。
- en: Navigation functions
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导航函数
- en: Last but not least, we have navigation functions.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 最后但同样重要的是，我们还有导航函数。
- en: A navigation function assigns a value based on the value in a different row
    than the current row. Some common navigation functions include `FIRST_VALUE`,
    `LAST_VALUE`, `LEAD`, and `LAG`.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 导航函数根据不同于当前行的行的值分配一个值。一些常见的导航函数包括`FIRST_VALUE`、`LAST_VALUE`、`LEAD`和`LAG`。
- en: '[PRE7]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../Images/e1f596fc156b146298bec77ec2e36a87.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e1f596fc156b146298bec77ec2e36a87.png)'
- en: Lag returns the value of the preceding row. Image by Author.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Lag 返回前一行的值。图片由作者提供。
- en: '![](../Images/f26330310a14beb3cf07f90323086639.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f26330310a14beb3cf07f90323086639.png)'
- en: Lead returns the value of the subsequent row. Image by Author.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: Lead 返回下一行的值。图片由作者提供。
- en: In the example above, we used the `LAG` function to return the value of the
    preceding row and the `LEAD` function to return the value of the subsequent row.
    Notice how the first row of the lag column is null whereas the last row of the
    lead column is null.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的例子中，我们使用了`LAG`函数返回前一行的值，使用`LEAD`函数返回下一行的值。请注意，滞后列的第一行是空的，而前导列的最后一行是空的。
- en: '[PRE8]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](../Images/40d639f6d0c0d4e01886d46c68a1ba08.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/40d639f6d0c0d4e01886d46c68a1ba08.png)'
- en: The first two rows are null when lag offset is set to 2\. Image by Author.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 当滞后偏移设置为2时，前两行是空的。图片由作者提供。
- en: '![](../Images/d1da567ad9b3f6e64095fb4f572c7748.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d1da567ad9b3f6e64095fb4f572c7748.png)'
- en: The last two rows are null when lead offset is set to 2\. Image by Author.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 当前导偏移设置为2时，最后两行是空的。图片由作者提供。
- en: On a similar note, we can also offset the `LEAD` and `LAG` functions, i.e. to
    start from a particular index or position. When the offset is set to two, you
    can see that the first two rows of the lag column are null and the last two rows
    of the lead column are null.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们还可以对`LEAD`和`LAG`函数进行偏移，即从特定的索引或位置开始。当偏移设置为二时，你会发现滞后列的前两行是空的，而前导列的最后两行是空的。
- en: I hope this blog post has helped introduce you to the concepts of Common Table
    Expression (CTE) and Window Functions.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望这篇博客文章能帮助你了解**公共表表达式**（CTE）和窗口函数的概念。
- en: To summarise, a CTE is a temporary table or a query within a query. They are
    used to split queries into more readable chunks and you can write new queries
    against a CTE that has been defined. Window functions, on the other hand, perform
    aggregation on groups of rows and return the results for each row in the original
    table.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，CTE 是一个临时表或查询中的查询。它们用于将查询拆分成更易读的块，你可以对已定义的CTE写新查询。另一方面，窗口函数在一组行上执行聚合，并返回原始表中每行的结果。
- en: If you wish to improve on these techniques, I highly encourage you to start
    implementing them in your SQL queries either at work, solving interview problems,
    or just playing around with random datasets. Practice makes perfect, am I right?
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望改进这些技术，我强烈鼓励你在工作中、解决面试问题时，或是随意操作随机数据集时开始在SQL查询中实现它们。练习才能达到**完美**，对吧？
- en: Support me and other amazing writers by signing up for a Medium membership using
    the link below. Happy learning!
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 支持我和其他出色的作者，请使用下面的链接注册Medium会员。祝学习愉快！
- en: '[](https://chongjason.medium.com/membership?source=post_page-----81a97c92ddd0--------------------------------)
    [## Join Medium with my referral link - Jason Chong'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://chongjason.medium.com/membership?source=post_page-----81a97c92ddd0--------------------------------)
    [## 使用我的推荐链接加入Medium - Jason Chong'
- en: As a Medium member, a portion of your membership fee goes to writers you read,
    and you get full access to every story…
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 作为Medium会员，你的会员费用的一部分将用于支持你阅读的作者，并且你可以完全访问每一个故事……
- en: chongjason.medium.com](https://chongjason.medium.com/membership?source=post_page-----81a97c92ddd0--------------------------------)
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: chongjason.medium.com](https://chongjason.medium.com/membership?source=post_page-----81a97c92ddd0--------------------------------)
- en: Don’t know what to read next? Here are some suggestions.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 不知道接下来读什么？以下是一些建议。
- en: '[](/10-most-important-sql-commands-every-data-analyst-needs-to-know-f0f568914b98?source=post_page-----81a97c92ddd0--------------------------------)
    [## 10 Most Important SQL Commands Every Data Analyst Needs to Know'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/10-most-important-sql-commands-every-data-analyst-needs-to-know-f0f568914b98?source=post_page-----81a97c92ddd0--------------------------------)
    [## 每个数据分析师都需要知道的10个最重要的SQL命令'
- en: Querying data from a database doesn’t need to be complicated
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从数据库查询数据不需要复杂。
- en: towardsdatascience.com](/10-most-important-sql-commands-every-data-analyst-needs-to-know-f0f568914b98?source=post_page-----81a97c92ddd0--------------------------------)
    [](/regular-expressions-clearly-explained-with-examples-822d76b037b4?source=post_page-----81a97c92ddd0--------------------------------)
    [## Regular Expressions Clearly Explained with Examples
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/10-most-important-sql-commands-every-data-analyst-needs-to-know-f0f568914b98?source=post_page-----81a97c92ddd0--------------------------------)
    [](/regular-expressions-clearly-explained-with-examples-822d76b037b4?source=post_page-----81a97c92ddd0--------------------------------)
    [## 正则表达式清晰解释及示例
- en: One of the most underrated skills any data analyst should have when working
    with strings
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 每个数据分析师在处理字符串时应该具备的一项被低估的技能。
- en: towardsdatascience.com](/regular-expressions-clearly-explained-with-examples-822d76b037b4?source=post_page-----81a97c92ddd0--------------------------------)
    [](/common-issues-that-will-make-or-break-your-data-science-project-64e976c21a14?source=post_page-----81a97c92ddd0--------------------------------)
    [## Common Issues that Will Make or Break Your Data Science Project
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/regular-expressions-clearly-explained-with-examples-822d76b037b4?source=post_page-----81a97c92ddd0--------------------------------)
    [](/common-issues-that-will-make-or-break-your-data-science-project-64e976c21a14?source=post_page-----81a97c92ddd0--------------------------------)
    [## 可能影响或决定你数据科学项目成败的常见问题
- en: A helpful guide on spotting data problems, why they can be detrimental, and
    how to properly address them
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一份有用的指南，介绍如何发现数据问题、这些问题为何可能会带来不利影响，以及如何妥善解决它们。
- en: towardsdatascience.com](/common-issues-that-will-make-or-break-your-data-science-project-64e976c21a14?source=post_page-----81a97c92ddd0--------------------------------)
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/common-issues-that-will-make-or-break-your-data-science-project-64e976c21a14?source=post_page-----81a97c92ddd0--------------------------------)
