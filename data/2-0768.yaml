- en: Dynamic Conformal Intervals for any Time Series Model
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 任何时间序列模型的动态符合区间
- en: 原文：[https://towardsdatascience.com/dynamic-conformal-intervals-for-any-time-series-model-d1638aa48527](https://towardsdatascience.com/dynamic-conformal-intervals-for-any-time-series-model-d1638aa48527)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/dynamic-conformal-intervals-for-any-time-series-model-d1638aa48527](https://towardsdatascience.com/dynamic-conformal-intervals-for-any-time-series-model-d1638aa48527)
- en: Apply and dynamically expand an interval using backtesting
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用回测应用和动态扩展一个区间
- en: '[](https://mikekeith52.medium.com/?source=post_page-----d1638aa48527--------------------------------)[![Michael
    Keith](../Images/4ebd39b25a1faae3586eb25ec83d3e91.png)](https://mikekeith52.medium.com/?source=post_page-----d1638aa48527--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d1638aa48527--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d1638aa48527--------------------------------)
    [Michael Keith](https://mikekeith52.medium.com/?source=post_page-----d1638aa48527--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://mikekeith52.medium.com/?source=post_page-----d1638aa48527--------------------------------)[![Michael
    Keith](../Images/4ebd39b25a1faae3586eb25ec83d3e91.png)](https://mikekeith52.medium.com/?source=post_page-----d1638aa48527--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d1638aa48527--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d1638aa48527--------------------------------)
    [Michael Keith](https://mikekeith52.medium.com/?source=post_page-----d1638aa48527--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d1638aa48527--------------------------------)
    ·8 min read·Apr 17, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d1638aa48527--------------------------------)
    ·8 分钟阅读·2023年4月17日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/c0838f13c2dd273cf20f2025a6148207.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c0838f13c2dd273cf20f2025a6148207.png)'
- en: Photo by [Léonard Cotte](https://unsplash.com/@ettocl?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Léonard Cotte](https://unsplash.com/@ettocl?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Depending on the purpose of generating a forecast, evaluating accurate confidence
    intervals can be a crucial task. Most classic econometric models, built upon assumptions
    about distributions of predictions and residuals, have a way to do this built
    in. When moving to machine learning to do time series, such as with XGBoost or
    recurrent neural networks, it can be more complicated. A popular technique is
    conformal intervals — a method of quantifying uncertainty that makes no assumptions
    about prediction distributions.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 根据生成预测的目的，评估准确的置信区间可能是一个关键任务。大多数经典计量经济模型基于对预测和残差分布的假设，内置了这样的机制。当转向机器学习进行时间序列分析时，例如使用
    XGBoost 或递归神经网络，情况可能会更复杂。一种流行的技术是符合区间——一种量化不确定性的无假设预测分布的方法。
- en: Naive Conformal Interval
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简单的符合区间
- en: The simplest implementation of this method is to train a model and hold out
    a test set. If this test set is at least 20 observations (assuming we want 95%
    certainty), we can build an interval by placing a plus/minus value on any point
    prediction that represents the 95th percentile of the test-set residual absolute
    values. We then refit the model on the entire series and apply this plus/minus
    to all point predictions over the unknown horizon. This can be thought of as a
    naive conformal interval.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法的最简单实现是训练一个模型并保留一个测试集。如果这个测试集至少有20个观察值（假设我们希望95%的确定性），我们可以通过在任何点预测上添加一个正负值来构建一个区间，该正负值代表测试集残差绝对值的第95百分位数。然后，我们在整个序列上重新拟合模型，并将这个正负值应用于未知范围内的所有点预测。这可以被看作是一个简单的符合区间。
- en: '[Scalecast](https://github.com/mikekeith52/scalecast) is a forecasting library
    in Python that works well if you want to transform a series before applying an
    optimized machine or deep learning model on the time series, then easily revert
    the results. While other libraries offer flexible and dynamic intervals for ML
    models, I’m not sure they are built to effectively handle data that needs to be
    transformed and then reverted, especially with differencing. Please correct me
    if I’m wrong.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[Scalecast](https://github.com/mikekeith52/scalecast) 是一个 Python 预测库，如果你想在应用优化的机器学习或深度学习模型之前对序列进行转换，然后轻松恢复结果，它表现良好。虽然其他库为
    ML 模型提供了灵活和动态的区间，我不确定它们是否能够有效处理需要转换然后恢复的数据，特别是涉及差分的情况。如果我错了，请纠正我。'
- en: I made scalecast specifically for this purpose. Transforming and reverting series
    is ridiculously easy with the package, including options to use [cross validation
    to find optimal transformation combinations](https://scalecast-examples.readthedocs.io/en/latest/transforming/medium_code.html#Function-to-Automatically-Find-Optimal-Transformation).
    However, applying a confidence interval, any interval, at a differenced level
    becomes complicated to map onto the series’ original level. If you simply undifference
    the interval the same way you would the point predictions, it will more-than-likely
    be unrealistically wide. A suggestion to avoid this is to use models that don’t
    require stationary data — ARIMA, exponential smoothing, and others. But that’s
    no fun if you really want to compare ML models and your data is not stationary.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我专门为这个目的创建了 scalecast。使用该包变换和逆变换系列非常简单，包括使用[交叉验证来寻找最佳变换组合的选项](https://scalecast-examples.readthedocs.io/en/latest/transforming/medium_code.html#Function-to-Automatically-Find-Optimal-Transformation)。然而，在差分水平上应用置信区间（任何区间）在映射到系列的原始水平时变得复杂。如果你只是以与点预测相同的方式逆差分区间，它很可能会过于宽泛。避免这种情况的建议是使用不需要平稳数据的模型——如
    ARIMA、指数平滑等。但如果你真的想比较 ML 模型，而你的数据不是平稳的，那就没那么有趣了。
- en: The solution around this that scalecast uses is the naive conformal interval
    described above. If a series first, second, or seasonal difference is taken and
    then reverted, re-calculating test-set residuals and applying percentile functions
    on them is simple. I evaluated the efficacy of this interval using a measure called
    MSIS in a [past post](https://medium.com/towards-data-science/easy-distribution-free-conformal-intervals-for-time-series-665137e4d907).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Scalecast 使用的解决方案是上述简单一致性区间。如果对系列进行第一次、第二次或季节性差分，然后进行逆操作，再计算测试集残差并在其上应用百分位函数是很简单的。我使用一种称为
    MSIS 的度量评估了该区间的有效性，详细信息见[过去的帖子](https://medium.com/towards-data-science/easy-distribution-free-conformal-intervals-for-time-series-665137e4d907)。
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: But, this could be better. In time series, it is intuitive to believe that an
    interval will expand further out for a point prediction that is further away temporally
    from a baseline truth, once errors accumulate. It is easier to predict what I
    will do tomorrow than it is a month from now. That intuitive concept is built
    into econometric methods but absent from the naive interval.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 但这还可以更好。在时间序列中，当误差积累时，人们直观地认为，对于一个在时间上远离基准真实值的点预测，其区间将进一步扩展。预测我明天会做什么比预测一个月后的事情更容易。这种直观的概念已被纳入计量经济学方法中，但在简单区间中却不存在。
- en: We could try to reconcile this problem in several ways, one of them being [conformalized
    quantile regression](https://arxiv.org/abs/1905.03222), such as utilized by [Neural
    Prophet](https://neuralprophet.com/code/forecaster.html). That may make its way
    to scalecast one day. But the method I will overview here involves using backtesting
    and applying percentiles depending on residuals from each backtest iteration.
    As opposed to employing assumptions, the method grounds everything in some observed,
    empirical truth — a true relationship between the implemented model and the time
    series it is being implemented on.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过几种方式来解决这个问题，其中之一是[一致性分位数回归](https://arxiv.org/abs/1905.03222)，例如由[Neural
    Prophet](https://neuralprophet.com/code/forecaster.html)使用。这种方法可能有一天会被纳入 scalecast。但我将在这里概述的方法涉及使用回溯测试和根据每次回溯测试的残差应用百分位数。与采用假设不同，该方法将一切基于一些观察到的经验真相——实施模型与其实施的时间序列之间的真实关系。
- en: Backtested Conformal Interval
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 回溯一致性区间
- en: To do this, we need to split our data into several training and test sets. Each
    test set will need to be the same length as our desired forecast horizon and the
    number of splits should equal at least one divided by alpha, where alpha is one
    minus the desired confidence level. Again, this would come out to 20 iterations
    for intervals of 95% certainty. Considering we need to iterate through the entire
    length of our forecast horizon 20 or more times, shorter series may run out of
    observations before this process finishes. A way to mitigate this is if we allow
    test sets to overlap. As long as test sets are at least one observation different
    from one another and no data leaks from any of the training sets, it should be
    okay. This may bias the interval towards more recent observations, but the option
    can be left open to add more space between training sets if the series contains
    enough observations to do so. The process I explained is referred to as backtesting,
    but it can also be thought of as modified time-series cross validation, which
    is a common way to facilitate more accurate conformal intervals. Scalecast makes
    the process of obtaining this interval easy through pipelines and three utility
    functions.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们需要将数据拆分成多个训练集和测试集。每个测试集需要与我们期望的预测范围长度相同，分割的数量应至少等于1除以alpha，其中alpha是1减去期望的置信水平。同样，这将导致95%置信度区间的20次迭代。考虑到我们需要通过整个预测范围的长度迭代20次或更多次，较短的序列可能在此过程完成之前就用尽观测值。一个缓解的方法是允许测试集重叠。只要测试集之间至少有一个观测值的差异，并且没有数据从任何训练集中泄漏，这样应该是可以的。这可能会使区间偏向于较新的观测值，但如果序列包含足够的观测值，可以选择在训练集之间增加更多空间。我解释的过程称为回测，但也可以视为修改版时间序列交叉验证，这是一种常见的方式来促进更准确的符合区间。Scalecast通过管道和三个实用函数使获得这个区间的过程变得简单。
- en: Build Full Model Pipeline
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建完整模型管道
- en: 'First we build a pipeline. Assuming we want differenced data and to forecast
    with the XGBoost model, the pipeline can be:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 首先我们构建一个管道。假设我们需要差分数据并使用XGBoost模型进行预测，管道可以是：
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: It is important to note that this framework can also be applied to deep learning
    models, classic econometric models, RNNs, and even naive models. For any model
    you want to apply on time series, this will work.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要注意，这个框架也可以应用于深度学习模型、经典计量经济模型、RNN，甚至是简单模型。对于你想要应用于时间序列的任何模型，这都适用。
- en: 'Next, we `fit_predict()` the pipeline, generating 24 future observations:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们使用`fit_predict()`方法生成24个未来观测值：
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Backtest Pipeline and Build Residual Matrix
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 回测管道并构建残差矩阵
- en: Now, we do the backtest. For 95% intervals, this means at least 20 train/test
    splits iteratively moving backward through the most recent observations. This
    is the most computationally expensive part of the process, depending on how many
    models we want to send through our pipeline (we can place more by expanding the
    `forecaster()` function), if we want to optimize each model’s hyperparameters,
    and if we want to use multivariate processes, it can take a while. On my Macbook,
    this simple pipeline takes a little over a minute to backtest with 20 iterations.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们进行回测。对于95%区间，这意味着至少需要20次训练/测试分割，迭代地向后移动通过最新观测。这是过程中的计算最昂贵部分，具体取决于我们想通过管道发送多少模型（我们可以通过扩展`forecaster()`函数来增加更多），是否想优化每个模型的超参数，以及是否使用多变量过程，可能会花费一些时间。在我的Macbook上，这个简单的管道在20次迭代下回测时间略超过一分钟。
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The backtest results from this function can be multipurpose. We can use them
    to report average errors from our model(s), we can use them to glean insight about
    many out-of-sample predictions, or we can use them to generate intervals. To generate
    intervals, we do:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个函数得到的回测结果可以用于多种目的。我们可以用它们来报告模型的平均误差，或者从中获取许多样本外预测的见解，或者用它们来生成区间。要生成区间，我们需要：
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This creates one matrix for each evaluated model with a row that represents
    each backtest iteration and a column for each forecast step. The value in each
    cell is a prediction error (residual).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这会为每个评估的模型创建一个矩阵，其中一行代表每次回测迭代，一列代表每个预测步骤。每个单元格中的值是预测误差（残差）。
- en: '![](../Images/a22a4e7061ab75241cb885dea3f1b280.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a22a4e7061ab75241cb885dea3f1b280.png)'
- en: Image by author
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Applying a column-wise percentile function, we can generate plus/minus values
    to find the 95th percentile of the absolute residuals along each forecast step.
    On average, this should be a larger value the further out the forecast goes. In
    our example, the plus/minus is 15 for step 1, 16 for step 4, and 46 for step 24
    (the last step). Not all values are progressively larger than the last, but they
    generally are.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 通过应用列级百分位函数，我们可以生成上下值，以找到每个预测步骤的绝对残差的第95百分位数。平均来说，随着预测的延伸，这个值应该更大。在我们的例子中，第1步的上下值为15，第4步为16，第24步（最后一步）为46。并非所有值都比上一个值大，但通常是的。
- en: '![](../Images/f36e78cbb17f5d8e6f3e79be8587c894.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f36e78cbb17f5d8e6f3e79be8587c894.png)'
- en: Image by author
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Construct Backtested Intervals
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建回测区间
- en: We then overwrite the stale naive intervals with the new dynamic ones.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们用新的动态区间覆盖了过时的简单区间。
- en: '[PRE5]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Voila! We have an assumption-free and dynamic conformal interval built for our
    time series model.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 看！我们为时间序列模型构建了一个无需假设的动态拟合区间。
- en: 'How much better is this interval than the default? Using [MSIS](https://scalecast.readthedocs.io/en/latest/Forecaster/Util.html#src.scalecast.util.metrics.msis),
    a measure not many know about or use, we can score each obtained interval before
    and after this process. We can also use the coverage rate from each interval (the
    percent of actual observations fell within the interval). We’ve set aside a separate
    slice of the data, which overlaps with none of our previously evaluated test sets,
    for just this purpose. The naive interval looks like:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这个区间比默认区间好多少？使用[MSIS](https://scalecast.readthedocs.io/en/latest/Forecaster/Util.html#src.scalecast.util.metrics.msis)，一种不为很多人所知或使用的度量方法，我们可以评估每个获得的区间在此过程前后的效果。我们还可以使用每个区间的覆盖率（实际观察值落在区间内的百分比）。我们为此目的预留了一部分与之前评估的测试集不重叠的数据。简单区间如下：
- en: '![](../Images/d81ab6dba30729ab44037cc203d4eefc.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d81ab6dba30729ab44037cc203d4eefc.png)'
- en: Image by author
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: 'This ended up being an accurate forecast with a tight interval. It contained
    100% of the actual observations and scored an MSIS of 4.03\. From my limited usage
    of MSIS, I think anything under 5 is usually pretty good. We apply the dynamic
    interval and get the following:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是一个准确的预测，具有紧凑的区间。它包含了100%的实际观察值，MSIS得分为4.03。从我对MSIS的有限使用经验来看，低于5通常是相当不错的。我们应用动态区间，得到如下结果：
- en: '![](../Images/e60be2eb6b1348a93c817e6902295b27.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e60be2eb6b1348a93c817e6902295b27.png)'
- en: Image by author
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: 'This is good. We have an expanding interval that is tighter on average than
    the default interval. The MSIS score improved slightly to 3.92\. The bad news:
    3 out of the 24 test-set observations fall out of this new interval’s range for
    a coverage score of 87.5%. For a 95% interval, that may not be ideal.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这很好。我们有一个扩展的区间，其平均值比默认区间更紧凑。MSIS得分略微提高至3.92。坏消息是：24个测试集观察值中有3个超出了这个新区间的范围，覆盖率为87.5%。对于95%的区间来说，这可能并不理想。
- en: Conclusion
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Of course, this is just one example so we should be careful about drawing too
    broad conclusions. I do feel confident that the backtested interval will almost
    always expand out, which makes it more intuitive than the default interval. It
    probably on average is more accurate as well. It just costs more computational
    power to obtain.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这只是一个例子，我们应谨慎得出过于宽泛的结论。我相信回测区间几乎总会扩展，这使得它比默认区间更直观。它可能在平均上也更准确，只是获得它需要更多的计算能力。
- en: 'In addition to gaining new intervals, we also obtained backtest information.
    Over 20 iterations, we observed the following error metrics:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 除了获得新的区间，我们还获得了回测信息。在20次迭代中，我们观察到了以下误差指标：
- en: '![](../Images/456f04d77caf1d852be5e3aae2b0f3e9.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/456f04d77caf1d852be5e3aae2b0f3e9.png)'
- en: Image by author
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: We can feel better about reporting these than the errors from just one test
    set.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 相比仅使用一个测试集的误差，我们对报告这些结果感到更有信心。
- en: Thank you for following along! If you like this content, it would mean a lot
    to me if you gave [scalecast](https://github.com/mikekeith52/scalecast) a star
    on GitHub and check out the [full notebook](https://scalecast-examples.readthedocs.io/en/latest/misc/cis-bt/cis-bt.html)
    that accompanies this article. The data used is publicly available through [FRED](https://fred.stlouisfed.org/series/HOUSTNSA).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢您的关注！如果您喜欢这些内容，请在 GitHub 上为[scalecast](https://github.com/mikekeith52/scalecast)点个赞，并查看与本文相关的[完整笔记本](https://scalecast-examples.readthedocs.io/en/latest/misc/cis-bt/cis-bt.html)。使用的数据可以通过[FRED](https://fred.stlouisfed.org/series/HOUSTNSA)公开获取。
- en: '[](https://github.com/mikekeith52/scalecast?source=post_page-----d1638aa48527--------------------------------)
    [## GitHub - mikekeith52/scalecast: The practitioner''s forecasting library'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '[## GitHub - mikekeith52/scalecast: 实践者的预测库](https://github.com/mikekeith52/scalecast?source=post_page-----d1638aa48527--------------------------------)'
- en: 'Scalecast helps you forecast time series. Here is how to initiate its main
    object: Uniform ML modeling (with models…'
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Scalecast 帮助你预测时间序列。以下是如何初始化其主要对象：Uniform ML建模（包括模型…
- en: github.com](https://github.com/mikekeith52/scalecast?source=post_page-----d1638aa48527--------------------------------)
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '[github.com](https://github.com/mikekeith52/scalecast?source=post_page-----d1638aa48527--------------------------------)'
