- en: The Easiest Guideline on Image Blending (CV-03)
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图像融合的最简明指南 (CV-03)
- en: 原文：[https://towardsdatascience.com/blend-images-and-create-watermark-with-opencv-d24381b81bd0](https://towardsdatascience.com/blend-images-and-create-watermark-with-opencv-d24381b81bd0)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/blend-images-and-create-watermark-with-opencv-d24381b81bd0](https://towardsdatascience.com/blend-images-and-create-watermark-with-opencv-d24381b81bd0)
- en: Easiest Guideline on Blending and Pasting Image for Computer Vision
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 计算机视觉中的图像融合与粘贴的最简明指南
- en: '[](https://zubairhossain.medium.com/?source=post_page-----d24381b81bd0--------------------------------)[![Md.
    Zubair](../Images/1b983a23226ce7561796fa5b28c00d65.png)](https://zubairhossain.medium.com/?source=post_page-----d24381b81bd0--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d24381b81bd0--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d24381b81bd0--------------------------------)
    [Md. Zubair](https://zubairhossain.medium.com/?source=post_page-----d24381b81bd0--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://zubairhossain.medium.com/?source=post_page-----d24381b81bd0--------------------------------)[![Md.
    Zubair](../Images/1b983a23226ce7561796fa5b28c00d65.png)](https://zubairhossain.medium.com/?source=post_page-----d24381b81bd0--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d24381b81bd0--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d24381b81bd0--------------------------------)
    [Md. Zubair](https://zubairhossain.medium.com/?source=post_page-----d24381b81bd0--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d24381b81bd0--------------------------------)
    ·6 min read·Apr 13, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d24381b81bd0--------------------------------)
    ·阅读时间 6 分钟 ·2023年4月13日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/7f1dc89435fe6445f3f3eeb371da65f2.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7f1dc89435fe6445f3f3eeb371da65f2.png)'
- en: Kaptai Lake in Bangladesh (Image By Author)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 孟加拉国的卡普泰湖（图片由作者提供）
- en: Motivation
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 动机
- en: In the modern world, there are thousands of tools by which we can easily perform
    edit, resize, alter, add different effects, etc. operations on an image. But we
    hardly care about how it works in the backend. This article will discuss one of
    the important image processing techniques called ***blending and pasting*** images.
    This knowledge is essential both for image processing and computer vision. Though
    the techniques are simple, it is one of the core basics of computer vision.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在现代世界中，有成千上万的工具可以轻松地对图像进行编辑、调整大小、修改、添加不同效果等操作。但我们很少关心这些操作如何在后台工作。本文将讨论一种重要的图像处理技术，称为***图像融合和粘贴***。这种知识对图像处理和计算机视觉都至关重要。尽管这些技术很简单，但它们是计算机视觉的核心基础之一。
- en: If you are a beginner in image processing and computer vision, this article
    might be helpful for you.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是图像处理和计算机视觉的初学者，本文可能对你有帮助。
- en: '`[N.B. This article is part of my computer vision series. You may also read
    my previous articles on [*NumPy and OpenCV basic*](https://medium.com/towards-data-science/getting-started-with-numpy-and-opencv-for-computer-vision-555f88536f68)
    and [*Color representation*](https://medium.com/towards-data-science/how-color-is-represented-and-viewed-in-computer-vision-b1cc97681b68)
    as well.]`'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '`[注意：本文是我计算机视觉系列文章的一部分。你还可以阅读我之前的文章，分别是[**NumPy 和 OpenCV 基础**](https://medium.com/towards-data-science/getting-started-with-numpy-and-opencv-for-computer-vision-555f88536f68)和[**颜色表示**](https://medium.com/towards-data-science/how-color-is-represented-and-viewed-in-computer-vision-b1cc97681b68)。]`'
- en: Table of Content
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 目录
- en: '`[**What is image blending?**](#303b)`'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`[**什么是图像融合？**](#303b)`'
- en: '`[**When blending is important?**](#55fd)`'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`[**什么时候图像融合很重要？**](#55fd)`'
- en: '`[**Step by step implementation with OpenCv**](#72c8)`'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`[**逐步实施 OpenCV**](#72c8)`'
- en: What is image blending and pasting?
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是图像融合和粘贴？
- en: According to the oxford dictionary, ***‘blend’***means ***“a mixture of different
    substances or other things.”*** The word is also used for similar meanings in
    image processing and computer vision.It’s a technique of combining two or more
    images to create a new one. The output image holds the elements of the input images.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 根据牛津词典，***‘blend’*** 意味着 ***“不同物质或其他事物的混合。”*** 这个词在图像处理和计算机视觉中也有类似的意思。它是一种将两张或更多图像结合起来以创建新图像的技术。输出图像包含输入图像的元素。
- en: '![](../Images/61076af5452109b60573d14adaa4bacb.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/61076af5452109b60573d14adaa4bacb.png)'
- en: Image Blending (Image By Author)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 图像融合（图片由作者提供）
- en: '***Blending is possible when the image size is the same or different.*** Both
    of the methods will be discussed in the implementation section.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '***无论图像大小相同还是不同，融合都是可能的。*** 两种方法将在实施部分中讨论。'
- en: '***Pasting*** an image means copying the pixels of an image to another image.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '***粘贴***一张图像意味着将图像的像素复制到另一张图像上。'
- en: When blending is important?
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么时候混合很重要？
- en: We often need the process of combining two or more images. Generally, we can
    do it with image editing software. In computer vision, we need to develop an automated
    image-blending process. In that case, manual editing is not possible. So, hands-on
    knowledge is required in this case.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通常需要将两张或多张图像合成一张。一般来说，我们可以使用图像编辑软件来完成。在计算机视觉中，我们需要开发自动化的图像混合过程。在这种情况下，手动编辑是不可能的。因此，这种情况下需要实践知识。
- en: Step by Step Implementation with OpenCV
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 OpenCV 的逐步实现
- en: We can blend image when —
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当——我们可以混合图像
- en: '`***Blended image size is same***`'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`***混合后图像大小相同***`'
- en: '`***Image size is different***`'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`***图像大小不同***`'
- en: '*Let’s import the necessary libraries.*'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '*让我们导入必要的库。*'
- en: It’s time to read the images with **OpenCV**. `cv2.imread()` function helps
    us to read the images.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是使用**OpenCV**读取图像的时候了。`cv2.imread()`函数帮助我们读取图像。
- en: Visualize the first image.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 先查看第一张图像。
- en: Before visualization, I converted the color channel from `BGR to RGB` because
    `OpenCV` read the image in `BGR` format. On the other hand, matplotlib works in
    `RGB` format. So, I have converted the color channel with `c2.COLOR_BGR2RGB`.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在可视化之前，我将颜色通道从`BGR到RGB`进行了转换，因为`OpenCV`以`BGR`格式读取图像。另一方面，matplotlib以`RGB`格式工作。因此，我通过`c2.COLOR_BGR2RGB`进行了颜色通道的转换。
- en: Now, visualize the second image.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，查看第二张图像。
- en: We will combine these two images to create a watermark on the first image.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将这两张图像结合起来，在第一张图像上创建水印。
- en: '**For Same Image Size**'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**对于相同的图像大小**'
- en: In the case of blending the images with the same size, the shape of the images
    must be equal. Let’s find the shape of our images.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在混合相同大小的图像时，图像的形状必须相等。让我们找出图像的形状。
- en: The shape of the two images is different. Now, we need to reshape the images
    to reform these images.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 两张图像的形状不同。现在，我们需要重新塑造图像以重塑这些图像。
- en: We have transformed the two images into equal sizes successfully.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们成功地将这两张图像调整为相同的大小。
- en: '***We are at the final step to blend the images.***'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '***我们已到达最后一步来混合图像。***'
- en: 'In image blending, we use a mathematical formula to combine the pixel values
    of two or more images to create a new image. The formula used for blending is:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在图像混合中，我们使用数学公式将两张或多张图像的像素值组合成一张新图像。用于混合的公式是：
- en: '![](../Images/12518f890f11ff066477ec0eb9405187.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/12518f890f11ff066477ec0eb9405187.png)'
- en: Here, `image_1` and `image_2` are the two images that we want to blend. **Alpha**
    and **beta** are blending weights that determine the contribution of each image
    to the final output. **Gamma** is a scalar value added to create noise in the
    output image.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`image_1`和`image_2`是我们要混合的两张图像。**Alpha**和**beta**是混合权重，用于确定每张图像对最终输出的贡献。**Gamma**是一个标量值，添加到结果中以在输出图像中创建噪声。
- en: The **alpha, beta, and gamma** values can be adjusted to control the appearance
    of the output image. For example, increasing the **alpha** valuewill increase
    the contribution of `image_1` to the output, resulting in a final image that looks
    more likely to `image_1`. Similarly, increasing the **beta** valuewill increase
    the contribution of `image_2` to the output, resulting in a final image that looks
    more likely to `image_2`.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**alpha、beta 和 gamma**值可以调整以控制输出图像的外观。例如，增加**alpha**值将增加`image_1`对输出的贡献，从而使最终图像更接近于`image_1`。类似地，增加**beta**值将增加`image_2`对输出的贡献，使最终图像更接近于`image_2`。'
- en: '*The following piece of code can do the job.*'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '*下面的代码可以完成这个任务。*'
- en: We have used the `cv2.addWeighted()` function to blend the images using the
    blending formula. We set the values of **alpha 0.4 and beta 0.6**, which means
    that the second image contributes more than the first image to the final output.
    We set the value of gamma to 0, which means that no scalar value is added to the
    result.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了`cv2.addWeighted()`函数来按照混合公式混合图像。我们将**alpha 0.4 和 beta 0.6**的值设置为，这意味着第二张图像对最终结果的贡献大于第一张图像。我们将gamma的值设置为0，这意味着结果中没有添加标量值。
- en: Finally, we display the output image using the `plt.imshow()` function. We have
    found that image two is more visible than image one. As we have used, **the beta**
    value is more than the **alpha** value.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们使用`plt.imshow()`函数显示输出图像。我们发现图像二比图像一更为明显。正如我们使用的，**beta**值大于**alpha**值。
- en: We have successfully blended the images with equal sizes.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们成功地混合了大小相同的图像。
- en: Most often, we need to blend different size images. There is no straightforward
    way to do this. We need to follow some tricks and processes to do so. In the next
    section, I will show the implementation.
  id: totrans-47
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我们通常需要混合不同大小的图像。没有直接的方法来做到这一点。我们需要遵循一些技巧和过程来实现。在下一节中，我将展示具体实现。
- en: '**Image blending with different sizes**'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**不同大小图像的混合**'
- en: After importing the libraries and images, we will resize the two images for
    the simplicity of the implementation.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 导入库和图像后，我们将调整这两张图像的大小，以简化实现。
- en: '**Create a Region of Interest (ROI)**'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**创建感兴趣区域（ROI）**'
- en: A region of interest (ROI) is part of an image you want to select and process
    separately from the rest of the image. ROIs can be defined using coordinates or
    shapes like rectangles or polygons. For instance, in face detection in an image,
    an ROI can be selected around the expected location of faces, leading to improved
    accuracy and efficiency of the algorithm. The following graphical representation
    shows how it works.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 感兴趣区域（ROI）是图像的一部分，你希望单独选择和处理，而不是图像的其余部分。ROI 可以使用坐标或矩形、 polygons 等形状来定义。例如，在图像中的人脸检测中，可以在预期的人脸位置周围选择
    ROI，从而提高算法的准确性和效率。以下图形表示展示了其工作原理。
- en: '![](../Images/fcbf2a87636949be13f3d9c9cc4c4764.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fcbf2a87636949be13f3d9c9cc4c4764.png)'
- en: Region of Interest (Image By Author)
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 感兴趣区域（作者提供的图像）
- en: In the above figure, we want to cut a small white portion of width and height
    (100,300) from the large image (400, 700). We have done the same thing for our
    task.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在上图中，我们想从大图像（400, 700）中切出一个宽度和高度为（100,300）的小白色区域。我们为任务做了同样的操作。
- en: We have first selected the portion of the large image, which is equal to the
    shape of the small images, to the bottom right corner.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先选择了一个大图像的部分，其形状与小图像相等，并将其放置在右下角。
- en: These lines of code define **x_off and y_off** as the horizontal and vertical
    offsets for creating **ROI** from the image. The first image has a width of *2400*
    pixels and a height of *2000* pixels; the second image has a width and height
    of *1400* pixels. We want to create ROI in the bottom right corner of the first
    image as we want to paste the second image onto the bottom-right corner of the
    first image.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这些代码行定义了 **x_off 和 y_off** 作为从图像创建 **ROI** 的水平和垂直偏移量。第一张图像的宽度为 *2400* 像素，高度为
    *2000* 像素；第二张图像的宽度和高度为 *1400* 像素。我们希望在第一张图像的右下角创建 ROI，因为我们想将第二张图像粘贴到第一张图像的右下角。
- en: The above image is the extracted region where we will paste the second image.
    It’s time to paste the second image (copyright) on top of the extracted region.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的图像是我们将粘贴第二张图像的提取区域。现在是将第二张图像（版权图像）粘贴到提取区域上的时候了。
- en: '**Create a Mask Image to Put Watermark**'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**创建一个掩模图像以添加水印**'
- en: Image masking is the technique of selecting the important part of an image hiding
    rest. For our case, we just want to extract the letters of the following copyright
    image.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图像掩模技术是选择图像的重要部分并隐藏其余部分。在我们的例子中，我们只想提取以下版权图像中的字母。
- en: '![](../Images/80ddf04ebf6bbe17ac12af4989522b2b.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/80ddf04ebf6bbe17ac12af4989522b2b.png)'
- en: Image By Author
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: It’s an image with three color channels. Let’s convert it to a grayscale image;
    otherwise, it will be difficult for us to operate further operations.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一张有三种颜色通道的图像。让我们将其转换为灰度图像；否则我们将很难进行进一步的操作。
- en: Here, we see the text ***‘Capture By Zubair,’*** which is black. We need to
    keep this portion unchanged and change the other portion.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们看到文本 ***‘Capture By Zubair,’*** 是黑色的。我们需要保持这部分不变，而改变其他部分。
- en: We need to create a **mask** to separate the foreground and background of an
    image. In blending images, we need to create a mask that represents the shape
    of the foreground object so that we can isolate it and blend it with the background
    image.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要创建一个 **掩模** 来分隔图像的前景和背景。在混合图像时，我们需要创建一个表示前景物体形状的掩模，以便我们可以将其隔离并与背景图像混合。
- en: '*Let’s inverse the image pixels to transform white into black and black into
    white.*'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '*让我们反转图像像素，将白色变成黑色，将黑色变成白色。*'
- en: Now, we will perform a bitwise **OR** operation on the inversed masked image
    to extract the main color of the masked region.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将对反转后的掩模图像执行按位 **OR** 操作，以提取掩模区域的主要颜色。
- en: '`[N.B. If you want to know more about bitwise OR operation of OpenCV, read
    the [article](https://dontrepeatyourself.org/post/bitwise-operations-and-image-masking-opencv/).
    ]`'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '`[注意：如果你想了解更多关于 OpenCV 的按位 OR 操作，请阅读 [这篇文章](https://dontrepeatyourself.org/post/bitwise-operations-and-image-masking-opencv/)。]`'
- en: We have successfully extracted the color of the copyright image into the masked
    region. Again, we will run a bitwise OR operation on the extracted [***ROI image***](#458f).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经成功将版权图像的颜色提取到遮罩区域。接下来，我们将对提取的[***ROI图像***](#458f)执行按位或操作。
- en: Let’s join the full background image to the above image.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将完整的背景图像与上述图像合并。
- en: We have just replaced the background image pixels with the masked ROI image.
    Finally, we formulated our final image with a watermark.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚用被遮罩的ROI图像替换了背景图像的像素。最后，我们在最终图像上添加了水印。
- en: Conclusion
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: I have tried my best to represent the process of blending in the easiest possible
    way. This knowledge is one of the fundamentals of computer vision.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我尽力以最简单的方式展示了混合过程。这些知识是计算机视觉的基础之一。
- en: '*I have selected some of the articles for you.*'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '*我为你挑选了一些文章。*'
- en: '[](/getting-started-with-numpy-and-opencv-for-computer-vision-555f88536f68?source=post_page-----d24381b81bd0--------------------------------)
    [## Getting Started with NumPy and OpenCV for Computer Vision'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 使用NumPy和OpenCV开始计算机视觉](https://towardsdatascience.com/how-color-is-represented-and-viewed-in-computer-vision-b1cc97681b68?source=post_page-----d24381b81bd0--------------------------------)'
- en: Start Your Coding for Computer vision with Python
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Python开始你的计算机视觉编程
- en: towardsdatascience.com](/getting-started-with-numpy-and-opencv-for-computer-vision-555f88536f68?source=post_page-----d24381b81bd0--------------------------------)
    [](/how-color-is-represented-and-viewed-in-computer-vision-b1cc97681b68?source=post_page-----d24381b81bd0--------------------------------)
    [## A Comprehensive Guide on Color Representation in Computer Vision
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 计算机视觉中的颜色表示综合指南](https://towardsdatascience.com/getting-started-with-numpy-and-opencv-for-computer-vision-555f88536f68?source=post_page-----d24381b81bd0--------------------------------)
    [](/how-color-is-represented-and-viewed-in-computer-vision-b1cc97681b68?source=post_page-----d24381b81bd0--------------------------------)'
- en: A Detail Explanation of Color Space and Color Model
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 颜色空间和颜色模型详细解释
- en: towardsdatascience.com](/how-color-is-represented-and-viewed-in-computer-vision-b1cc97681b68?source=post_page-----d24381b81bd0--------------------------------)
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 如何在计算机视觉中表示和查看颜色](https://towardsdatascience.com/how-color-is-represented-and-viewed-in-computer-vision-b1cc97681b68?source=post_page-----d24381b81bd0--------------------------------)'
