- en: 'Recommender System: Collaborative Filtering with Matrix Factorization'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 推荐系统：基于矩阵分解的协同过滤
- en: 原文：[https://towardsdatascience.com/recommendation-system-with-matrix-factorization-ebc4736869e4](https://towardsdatascience.com/recommendation-system-with-matrix-factorization-ebc4736869e4)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/recommendation-system-with-matrix-factorization-ebc4736869e4](https://towardsdatascience.com/recommendation-system-with-matrix-factorization-ebc4736869e4)
- en: Explanation of Recommendations through Matrix Factorization
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过矩阵分解解释推荐
- en: '[](https://medium.com/@christienatashia?source=post_page-----ebc4736869e4--------------------------------)[![Christie
    Natashia](../Images/168aa61f8495c7f3a3eccb880c8a023c.png)](https://medium.com/@christienatashia?source=post_page-----ebc4736869e4--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ebc4736869e4--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ebc4736869e4--------------------------------)
    [Christie Natashia](https://medium.com/@christienatashia?source=post_page-----ebc4736869e4--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@christienatashia?source=post_page-----ebc4736869e4--------------------------------)[![Christie
    Natashia](../Images/168aa61f8495c7f3a3eccb880c8a023c.png)](https://medium.com/@christienatashia?source=post_page-----ebc4736869e4--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ebc4736869e4--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ebc4736869e4--------------------------------)
    [Christie Natashia](https://medium.com/@christienatashia?source=post_page-----ebc4736869e4--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ebc4736869e4--------------------------------)
    ·8 min read·Apr 26, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ebc4736869e4--------------------------------)
    ·阅读时间8分钟·2023年4月26日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/59da938334bfc2021061170bbcb4c9df.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/59da938334bfc2021061170bbcb4c9df.png)'
- en: Photo by [freestocks](https://unsplash.com/es/@freestocks?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[freestocks](https://unsplash.com/es/@freestocks?utm_source=medium&utm_medium=referral)
    于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Netflix is ​​a popular online streaming platform that offers its subscribers
    a wide range of movies, documentaries, and TV shows. To improve users’ experience,
    Netflix has developed a sophisticated recommendation system that suggests movies
    based on your past viewing history, ratings, and preferences.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Netflix 是一个受欢迎的在线流媒体平台，为其订阅者提供了各种电影、纪录片和电视节目。为了提升用户体验，Netflix 开发了一个复杂的推荐系统，根据你的观看历史、评分和偏好来推荐电影。
- en: The recommender system uses complex algorithms that analyze vast amounts of
    data to predict what users will most likely enjoy. With over 200 million subscribers
    worldwide, Netflix’s recommendation system is a key factor in its success and
    sets the standard for the streaming industry. Following is the source on how Netflix
    achieved 80% stream time through personalization [link](https://www.youtube.com/watch?v=f8OK1HBEgn0).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐系统使用复杂的算法分析大量数据，以预测用户最可能喜欢的内容。Netflix 的推荐系统是其成功的关键因素之一，并为流媒体行业设立了标准，全球拥有超过2亿用户。以下是Netflix如何通过个性化实现80%观看时间的来源
    [link](https://www.youtube.com/watch?v=f8OK1HBEgn0)。
- en: So, What is Recommendation System?
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 那么，什么是推荐系统？
- en: A **recommender** system is one of unsupervised learning that uses information
    filtering to suggest products, or content to users based on their preferences,
    interests, and behavior. These systems are widely used in e-commerce and online
    streaming settings, and other applications to help discover new products and content
    that may be of interest to users.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**推荐**系统是一种无监督学习，通过信息过滤向用户推荐产品或内容，基于他们的偏好、兴趣和行为。这些系统广泛应用于电子商务和在线流媒体设置，以及其他应用程序中，以帮助发现可能感兴趣的新产品和内容。'
- en: Recommender systems are trained to understand **user** **and** **product** preferences,
    **past** **decisions**, and characteristics using data **collected** about **user-product**
    interactions.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐系统经过训练，以了解**用户** **和** **产品**的偏好、**过去**的**决策**和特征，使用关于**用户-产品**互动的数据**收集**。
- en: 'There are two types of recommendation systems as follows:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐系统有两种类型，如下：
- en: Content-based Filtering
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于内容的过滤
- en: The recommendation is based on the user or item attribute as the input to the
    algorithm. The contents of the shared attribute space are then used to create
    user and item profiles.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐是基于用户或物品属性作为算法的输入。然后，使用共享属性空间的内容来创建用户和物品档案。
- en: 'For instance, **Spider-Man: No Way Home** and **Ant-Man and the Wasp: Quantumania**
    have similar attributes as both movies are under the Action/Adventure genre. Not
    only that, both are part of Marvel. Therefore, if Alice watched Spider-Man movie,
    a content-based recommendation system may recommend movies with similar attributes
    like action/Marvel movies.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，**蜘蛛侠：英雄无归** 和 **蚁人和黄蜂女：量子狂潮** 有类似的属性，因为这两部电影都属于动作/冒险类型。不仅如此，它们都是漫威的一部分。因此，如果爱丽丝观看了蜘蛛侠电影，基于内容的推荐系统可能会推荐具有类似属性的电影，比如动作/漫威电影。
- en: Collaborative Filtering
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 协同过滤
- en: Based on several users who have similar past interactions. The key idea of this
    approach is leveraging the concept of collaboration to produce a new recommendation.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 基于多个具有类似历史互动的用户。这种方法的关键思想是利用协作概念来生成新的推荐。
- en: For instance, Alice and Bob have similar interests in particular movies genre.
    A collaborative filtering recommendation system may recommend items to Alice that
    Bob has watched previously which is new to Alice since both of them have pretty
    similar preferences. And the reverse is true for Bob as well.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，爱丽丝和鲍勃对特定电影类型有类似兴趣。协同过滤推荐系统可能会向爱丽丝推荐鲍勃之前看过但爱丽丝没看过的项目，因为他们的偏好非常相似。鲍勃也适用相同的情况。
- en: More on Collaborative Filtering
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多关于协同过滤的信息
- en: There is a wide scope of Recommender System model types as shown in the figure
    below, but today this article will focus on collaborative filtering (CF) with
    Matrix Factorization
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐系统模型类型范围广泛，如下图所示，但今天本文将重点讨论协同过滤 (CF) 与矩阵分解。
- en: '![](../Images/859ea7896af801238264c22da09b5291.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/859ea7896af801238264c22da09b5291.png)'
- en: '**Type of Recommender System** -Image Illustrated by Author'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**推荐系统类型** - 作者插图'
- en: Collaborative Filtering with Matrix Factorization
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于矩阵分解的协同过滤
- en: Put simply, Matrix Factorization is a mathematical process that transforms a
    complicated matrix into a lower-dimensional space. One of the most popular matrix
    factorization techniques used in recommender systems is Singular Value Decomposition
    (SVD), Non-negative Matrix Factorization (NMF), and Probabilistic Matrix Factorization
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 简言之，矩阵分解是一种数学过程，将复杂的矩阵转换为低维空间。在推荐系统中，最流行的矩阵分解技术包括奇异值分解 (SVD)、非负矩阵分解 (NMF) 和概率矩阵分解。
- en: Following is the illustration of how the matrix factorization concept is capable
    of predicting the user-movie rating
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是矩阵分解概念如何预测用户-电影评分的示意图
- en: '![](../Images/ba1390f52378752d88d39d3e214f6e18.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ba1390f52378752d88d39d3e214f6e18.png)'
- en: Image Illustrated by Author
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 作者插图
- en: '**Stage 1:** Matrix Factorization will randomly initialize the number, and
    the number of factors (K) is set. In this sample, we will set K = 5'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**阶段 1：** 矩阵分解会随机初始化数字，并设置因子数量 (K)。在此示例中，我们将 K 设为 5。'
- en: User Matrix (green box) represents the association between each user and the
    features
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户矩阵（绿色框）表示每个用户与特征之间的关联
- en: Item Matrix (orange box) represents the association between each item and the
    features
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目矩阵（橙色框）表示每个项目与特征之间的关联
- en: 'Here, for instance, we are creating 5 features (k=5) to represent the character
    of **m_1** movie: *comedy* as 2.10, *horror* as 0.88, *action* as 0.04, parent-guide
    as 0.02, and family-friendly as 0.04\. And the reverse is true for user_matrix.
    User_matrix represents the character of user such as prefered actors or directors,
    favorite movie production and many more'
  id: totrans-32
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在这里，例如，我们创建了 5 个特征 (k=5) 来表示 **m_1** 电影的特性：*喜剧* 为 2.10，*恐怖* 为 0.88，*动作* 为 0.04，家长指南为
    0.02，适合家庭观看为 0.04。用户矩阵的情况也是类似的。用户矩阵表示用户的特征，如喜欢的演员或导演、最喜欢的电影制作等。
- en: '**Stage 2:** Rating Prediction is calculated from the dot product of *User
    Matrix* and *Item Matrix*'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**阶段 2：** 评分预测是通过 *用户矩阵* 和 *项目矩阵* 的点积计算的。'
- en: '![](../Images/2b4864b7bb0ebea8fca2d49b30d0b1f7.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2b4864b7bb0ebea8fca2d49b30d0b1f7.png)'
- en: where R as true rating, P as User Matrix, Q as Item Matrix, resulted R’ as predicted
    rating.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 R 为真实评分，P 为用户矩阵，Q 为项目矩阵，结果 R’ 为预测评分。
- en: '![](../Images/614f9e0d91f3157fef6b371ff3fd72d8.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/614f9e0d91f3157fef6b371ff3fd72d8.png)'
- en: Image Illustrated by Author
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 作者插图
- en: 'In better mathematical notation, the **predicted rating R’** can be represented
    in the equation as follows:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在更好的数学符号表示中，**预测评分 R’** 可以在以下方程中表示：
- en: '![](../Images/c10f09641f5faa238b13959c5faa39c1.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c10f09641f5faa238b13959c5faa39c1.png)'
- en: '**Stage 3:** The squared error is used to calculate the difference between
    true rating and prediction rating'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**阶段3：** 使用平方误差来计算真实评分与预测评分之间的差异'
- en: '![](../Images/a36b90b6354f337c30957f0ac8889f8c.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a36b90b6354f337c30957f0ac8889f8c.png)'
- en: Once we have these steps in place, we can optimize our parameters, using stochastic
    gradient descent. It will then compute the derivative of this value
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦这些步骤到位，我们可以使用随机梯度下降来优化我们的参数。它将计算此值的导数。
- en: '![](../Images/b08894df6b9063b3da129f4d25963a8d.png)![](../Images/303f94e143ceed35f2835ebcde52ef6f.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b08894df6b9063b3da129f4d25963a8d.png)![](../Images/303f94e143ceed35f2835ebcde52ef6f.png)'
- en: At each iteration, the optimizer will compute the match between each movie and
    each user by multiplying them using the dot product, then compare it to the actual
    rating that the user gave the movie. It will then compute the derivative of this
    value and update the weights by multiplying it by the learning rate ⍺. As we repeat
    this process many times, the loss will improve, leading to better recommendations.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在每次迭代中，优化器将通过使用点积计算每部电影和每个用户之间的匹配，然后将其与用户给出的实际评分进行比较。然后，它将计算此值的导数，并通过将其乘以学习率⍺来更新权重。随着我们多次重复这一过程，损失将得到改善，从而提供更好的推荐。
- en: '![](../Images/eaa6b0e0151596fc165e672bdd7a2148.png)![](../Images/cceac4a18fd80e0817f927ca7c74478e.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/eaa6b0e0151596fc165e672bdd7a2148.png)![](../Images/cceac4a18fd80e0817f927ca7c74478e.png)'
- en: One of matrix factorization models that have been widely used in recommendation
    systems is known as [Singular Value Decomposition](https://en.wikipedia.org/wiki/Singular_value_decomposition)
    (SVD). SVD itself has broad applications, including image compression, and noise
    reduction in signal processing. Additionally, SVD is commonly employed in recommender
    systems, where it is adept at addressing the sparsity issue inherent in large
    user-item matrices.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 广泛用于推荐系统的矩阵分解模型之一是[奇异值分解](https://en.wikipedia.org/wiki/Singular_value_decomposition)（SVD）。SVD本身具有广泛的应用，包括图像压缩和信号处理中的噪声减少。此外，SVD通常用于推荐系统，因为它擅长解决大型用户-项目矩阵中固有的稀疏性问题。
- en: This article will also provide **an overview** of SVD implementation using the
    Surprise Package.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 本文还将提供**SVD实现的概述**，使用Surprise包。
- en: So let’s get our hands dirty with **the implementation**!!
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 所以让我们开始**实现**吧！！
- en: Implementation Contents
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实现内容
- en: Data Import
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据导入
- en: Data Pre-Processing
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据预处理
- en: 'Implementation #1: Matrix Factorization in Python from Scratch'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现#1：从头开始用Python实现矩阵分解
- en: 'Implementation #2: Matrix Factorization with Surprise Package'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现#2：使用Surprise包的矩阵分解
- en: The complete notebook on Matrix Factorization implementation is available [here](https://github.com/christienatashiaarchie/Recommendation-System-with-Matrix-Factorization/blob/main/Recomender_Systems_Final.ipynb).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的矩阵分解实现笔记本可以在[这里](https://github.com/christienatashiaarchie/Recommendation-System-with-Matrix-Factorization/blob/main/Recomender_Systems_Final.ipynb)找到。
- en: Data Import
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据导入
- en: Since we are developing a recommendation system like Netflix, but we may not
    have access to their big data, we are going to use a great dataset from [MovieLens](https://grouplens.org/datasets/movielens/)
    for this practice [1] *with permission*. Besides, you can read and review their
    [README](https://files.grouplens.org/datasets/movielens/ml-latest-small-README.html)
    files for the usage licenses and other details. This dataset comprises millions
    of movies, users, and users’ past-interacting ranking.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们正在开发一个类似于Netflix的推荐系统，但可能没有访问其大数据的权限，我们将使用来自[MovieLens](https://grouplens.org/datasets/movielens/)的优秀数据集进行实践[1]*已获许可*。此外，你可以阅读并查看他们的[README](https://files.grouplens.org/datasets/movielens/ml-latest-small-README.html)文件以了解使用许可和其他细节。该数据集包含数百万部电影、用户和用户过去的互动评分。
- en: 'After extracting the zip file, there will be 4 csv given as follows:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 提取zip文件后，将会提供4个csv文件，如下所示：
- en: '![](../Images/5f46ab66484f7721e6bb05de5adb11b4.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5f46ab66484f7721e6bb05de5adb11b4.png)'
- en: '**Snapshot of data** -Image by Author'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据快照** - 作者提供的图片'
- en: Data Pre-Processing
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据预处理
- en: Btw, Collaborative Filtering has a problem with *user cold-start.* The cold-start
    problem refers to a situation in which a system or algorithm could not make accurate
    predictions or recommendations for new users, items, or entities that has no prior
    information. This can happen when there is little or no historical data available
    for the new users or items, making it difficult for the system to understand their
    preferences or characteristics.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便提一下，协同过滤有 *用户冷启动* 的问题。冷启动问题指的是系统或算法无法对没有先前信息的新用户、项目或实体做出准确的预测或推荐。这可能发生在对新用户或项目几乎没有历史数据时，使得系统难以了解他们的偏好或特征。
- en: The cold-start problem is a common challenge in recommendation systems, where
    the system needs to provide personalized recommendations for users with limited
    or no interaction history.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 冷启动问题是推荐系统中的一个常见挑战，系统需要为与用户交互历史有限或没有交互历史的用户提供个性化推荐。
- en: In this stage, we are going to select users who have at least interacted with
    2000 movies and movies who have been rated by 1000 users (this can be a good way
    to reduce the size of data and ofc with less null data. Besides, my RAM could
    never handle massive table)
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，我们将选择与至少 2000 部电影互动过的用户以及被 1000 用户评分的电影（这可以是减少数据规模和空数据的一种好方法。此外，我的 RAM
    无法处理大规模表格）
- en: '![](../Images/c0124bbab3a4dc9407abd39ec077b27a.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c0124bbab3a4dc9407abd39ec077b27a.png)'
- en: '**My RAM condition** -Source: KC Green’s 2013 webcomic'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**我的 RAM 状况** - 来源：KC Green 的 2013 年网页漫画'
- en: Actually, you can also use the small subset of 100k ratings which is provided
    by [MovieLens](https://grouplens.org/datasets/movielens/). I just want to optimize
    my computer resources as much as I can with less null data.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，你也可以使用 [MovieLens](https://grouplens.org/datasets/movielens/) 提供的 100k 评分的小子集。我只是想尽可能优化我的计算机资源，减少空数据。
- en: '![](../Images/468fd0c2202ad3502bd9855c36312c46.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/468fd0c2202ad3502bd9855c36312c46.png)'
- en: '**Data output after data pre-processing** -Image by Author'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据预处理后的输出** - 作者图片'
- en: 'As is customary, we will divide the data into two groups: a training set and
    a testing set — by utilizing the train_test_split method.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 按照惯例，我们将数据分为两组：训练集和测试集——通过使用 train_test_split 方法。
- en: While the information we require is present, it is not presented in a way that
    is beneficial for humans to comprehend. However, I have created a table that presents
    the same data in a format that is easier for humans to understand.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们需要的信息存在，但它的呈现方式并不利于人类理解。不过，我创建了一个表格，以一种更容易理解的格式呈现相同的数据。
- en: '![](../Images/6a82c2a86c08125a249e407bc5a60768.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6a82c2a86c08125a249e407bc5a60768.png)'
- en: '**Raw data** -Image by Author'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**原始数据** - 作者图片'
- en: '**Implementation #1: Matrix Factorization in Python from Scratch**'
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**实现 #1：从头开始用 Python 实现矩阵分解**'
- en: 'Here is the Python snippet for implementing Matrix Factorization with the gradient
    descent. The `matrix_factorization` function returns 2 matrices: **nP (user matrix)**
    and **nQ (item matrix)**.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是实现矩阵分解与梯度下降的 Python 代码片段。`matrix_factorization` 函数返回两个矩阵：**nP (用户矩阵)** 和
    **nQ (项目矩阵)**。
- en: Then, fit the training dataset to the model and here I set n_factor K = 5\.
    Following that, predictions can be computed by **multiplying nP and the transpose
    of nQ** using the dot product method, as illustrated in the code snippet below.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，将训练数据集拟合到模型中，这里我设置了 n_factor K = 5。接下来，可以通过 **使用点积方法将 nP 与 nQ 的转置相乘** 来计算预测，如下代码片段所示。
- en: As a result, here is the final prediction that the matrix_factorization produce
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是，矩阵分解产生了最终的预测
- en: '![](../Images/19ecdbd9071c12adcefe9f0e90dd2455.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/19ecdbd9071c12adcefe9f0e90dd2455.png)'
- en: '**New predicted rating in train set**-Image form Author'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练集中的新预测评分** - 作者图片'
- en: '**Prediction on the Test Set**'
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**测试集上的预测**'
- en: The following snippet leverages the given **nP (user matrix)** and **nQ (movie
    matrix)** to make a prediction on the test set
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段利用给定的 **nP (用户矩阵)** 和 **nQ (电影矩阵)** 对测试集进行预测
- en: '![](../Images/33a111296f31e0934c781ff59eefd67d.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/33a111296f31e0934c781ff59eefd67d.png)'
- en: '**The rating and pred_rating output of test set-**Image from Author'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**测试集的评分和预测评分输出** - 作者图片'
- en: Evaluating The Prediction Performance
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 评估预测性能
- en: Although there are various evaluation metrics for Recommender Systems, such
    as Precision@K, Recall@K, MAP@K, and the list goes on. For this exercise, I will
    employ a basic accuracy metric namely RMSE. I probably will write other evaluation
    metrics in greater detail in the subsequent article.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管推荐系统有多种评估指标，如Precision@K、Recall@K、MAP@K等，但在这个练习中，我将使用一个基本的准确度指标，即RMSE。我可能会在后续的文章中更详细地描述其他评估指标。
- en: As the result, the RMSE on the test set is **0.829**, which is pretty decent
    even before the hyper-tuning is implemented. Definitely, we can tune several parameters
    like learning rate, n_factor, epochs steps for better outcomes.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 结果显示，测试集上的RMSE为**0.829**，即使在超参数调整之前也相当不错。显然，我们可以调整一些参数，如学习率、n_factor、epochs步数，以获得更好的结果。
- en: 'Implementation #2: Matrix Factorization with Surprise Package'
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '实现 #2: 使用Surprise包的矩阵分解'
- en: In this segment, we opted for the Python library namely the **surprise package.**
    A [surprise package](https://surprise.readthedocs.io/en/latest/getting_started.html)
    is a Python library for building and evaluating recommendation systems. It provides
    a simple and easy-to-use interface for loading and processing datasets, as well
    as implementing and evaluating different recommendation algorithms.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们选择了名为**surprise package**的Python库。一个[surprise package](https://surprise.readthedocs.io/en/latest/getting_started.html)是用于构建和评估推荐系统的Python库。它提供了一个简单易用的接口，用于加载和处理数据集，以及实现和评估不同的推荐算法。
- en: '**Data Import and Model Training**'
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**数据导入和模型训练**'
- en: '![](../Images/15e0724819ac38d4e467ed8e992b8a9c.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/15e0724819ac38d4e467ed8e992b8a9c.png)'
- en: '**Top-N recommendation generator**'
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**Top-N推荐生成器**'
- en: 'for UserId: `231832` following is the top 10 movie recommendation list:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '对于UserId: `231832`，以下是前10个电影推荐列表：'
- en: '*m_912, m_260, m_1198, m_110, m_60069, m_1172, m_919, m_2324, m_1204, m_3095*'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '*m_912, m_260, m_1198, m_110, m_60069, m_1172, m_919, m_2324, m_1204, m_3095*'
- en: '![](../Images/5eff3d00f5ad43907716d617fb1353d0.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5eff3d00f5ad43907716d617fb1353d0.png)'
- en: '**Top 10 recommendation output** -Image by Author'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**前10推荐结果** - 图片由作者提供'
- en: Summary
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: The utilization of Matrix Factorization in modern entertainment like Netflix
    helps to understand user preferences. This information is then used to recommend
    the most relevant item/product/movie to the end user.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在现代娱乐如Netflix中使用矩阵分解有助于理解用户偏好。这些信息随后用于向最终用户推荐最相关的项目/产品/电影。
- en: Here is a summary of the Matrix Factorization illustration that I created, in
    case I need to explain it to my grandkids one day….
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我创建的矩阵分解示例的总结，以备将来需要向我的孙子们解释时使用……
- en: '![](../Images/9ab406b9fbe6b4150e3475003c8ab9f8.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9ab406b9fbe6b4150e3475003c8ab9f8.png)'
- en: Image Illustrated by Author
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Reference
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考
- en: '[1] *Maxwell Harper and Joseph A. Konstan. 2015\. The MovieLens Datasets: History
    and Context. ACM Transactions on Interactive Intelligent Systems (TiiS) 5, 4:
    19:1–19:19\.* [*https://doi.org/10.1145/2827872*](https://doi.org/10.1145/2827872)'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] *Maxwell Harper 和 Joseph A. Konstan. 2015\. The MovieLens Datasets: History
    and Context. ACM Transactions on Interactive Intelligent Systems (TiiS) 5, 4:
    19:1–19:19\.* [*https://doi.org/10.1145/2827872*](https://doi.org/10.1145/2827872)'
- en: '[](https://www.kaggle.com/code/jhoward/collaborative-filtering-deep-dive/notebook?source=post_page-----ebc4736869e4--------------------------------)
    [## Collaborative Filtering Deep Dive'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '[## Collaborative Filtering Deep Dive](https://www.kaggle.com/code/jhoward/collaborative-filtering-deep-dive/notebook?source=post_page-----ebc4736869e4--------------------------------)'
- en: Explore and run machine learning code with Kaggle Notebooks | Using data from
    No attached data sources
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Kaggle Notebooks探索和运行机器学习代码 | 无附加数据源
- en: www.kaggle.com](https://www.kaggle.com/code/jhoward/collaborative-filtering-deep-dive/notebook?source=post_page-----ebc4736869e4--------------------------------)
    [](https://www.kaggle.com/code/gspmoreira/recommender-systems-in-python-101?source=post_page-----ebc4736869e4--------------------------------)
    [## Recommender Systems in Python 101
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '[## Recommender Systems in Python 101](https://www.kaggle.com/code/jhoward/collaborative-filtering-deep-dive/notebook?source=post_page-----ebc4736869e4--------------------------------)
    [](https://www.kaggle.com/code/gspmoreira/recommender-systems-in-python-101?source=post_page-----ebc4736869e4--------------------------------)'
- en: Explore and run machine learning code with Kaggle Notebooks | Using data from
    Articles sharing and reading from CI&T…
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Kaggle Notebooks探索和运行机器学习代码 | 使用来自CI&T的文章分享和阅读数据……
- en: 'www.kaggle.com](https://www.kaggle.com/code/gspmoreira/recommender-systems-in-python-101?source=post_page-----ebc4736869e4--------------------------------)  [##
    Matrix Factorization: A Simple Tutorial and Implementation in Python'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '[矩阵分解：Python中的简单教程和实现](https://www.kaggle.com/code/gspmoreira/recommender-systems-in-python-101?source=post_page-----ebc4736869e4--------------------------------) '
- en: There is probably no need to say that there is too much information on the Web
    nowadays. Search engines help us a…
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 现在的网络上信息量过大，这点可能无需多言。搜索引擎帮助我们获取…
- en: www.quuxlabs.com](http://www.quuxlabs.com/blog/2010/09/matrix-factorization-a-simple-tutorial-and-implementation-in-python/?source=post_page-----ebc4736869e4--------------------------------)
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '[www.quuxlabs.com](http://www.quuxlabs.com/blog/2010/09/matrix-factorization-a-simple-tutorial-and-implementation-in-python/?source=post_page-----ebc4736869e4--------------------------------)'
