- en: 'Pytest Tutorial: An Introduction To Unit Testing'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Pytest 教程：单元测试简介
- en: 原文：[https://towardsdatascience.com/debugging-made-easy-use-pytest-to-track-down-and-fix-python-code-ecbad62057b8](https://towardsdatascience.com/debugging-made-easy-use-pytest-to-track-down-and-fix-python-code-ecbad62057b8)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/debugging-made-easy-use-pytest-to-track-down-and-fix-python-code-ecbad62057b8](https://towardsdatascience.com/debugging-made-easy-use-pytest-to-track-down-and-fix-python-code-ecbad62057b8)
- en: How to use Pytest fixtures and mock for unit testing
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何使用 Pytest fixtures 和 mock 进行单元测试
- en: '[](https://medium.com/@egorhowell?source=post_page-----ecbad62057b8--------------------------------)[![Egor
    Howell](../Images/1f796e828f1625440467d01dcc3e40cd.png)](https://medium.com/@egorhowell?source=post_page-----ecbad62057b8--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ecbad62057b8--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ecbad62057b8--------------------------------)
    [Egor Howell](https://medium.com/@egorhowell?source=post_page-----ecbad62057b8--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@egorhowell?source=post_page-----ecbad62057b8--------------------------------)[![Egor
    Howell](../Images/1f796e828f1625440467d01dcc3e40cd.png)](https://medium.com/@egorhowell?source=post_page-----ecbad62057b8--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ecbad62057b8--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ecbad62057b8--------------------------------)
    [Egor Howell](https://medium.com/@egorhowell?source=post_page-----ecbad62057b8--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ecbad62057b8--------------------------------)
    ·7 min read·Apr 18, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ecbad62057b8--------------------------------)
    ·7 min read·2023年4月18日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/12f3276752687f82177f69cdb4779e62.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/12f3276752687f82177f69cdb4779e62.png)'
- en: Photo by [Yancy Min](https://unsplash.com/@yancymin?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Yancy Min](https://unsplash.com/@yancymin?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Background
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 背景
- en: 'Imagine you are a data scientist who has just developed some awesome new model
    that is going to bring the company a lot of money. The next step is to send it
    to production. You spend some days making the code [***PEP***](https://peps.python.org/pep-0008/)
    compliant, applying [***linting***](https://en.wikipedia.org/wiki/Lint_%28software%29),
    etc. Finally, you create a [***pull request***](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)
    on GitHub excited about your new release. Then, a Software Engineer asks: ‘*I
    don’t see any tests here?’*'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，你是一名数据科学家，刚刚开发了一个出色的新模型，这将为公司带来丰厚的利润。接下来的步骤是将其投入生产。你花了几天时间将代码调整为 [***PEP***](https://peps.python.org/pep-0008/)
    标准，应用 [***linting***](https://en.wikipedia.org/wiki/Lint_%28software%29) 等等。最后，你在
    GitHub 上创建了一个 [***pull request***](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)，对你的新发布感到兴奋。然后，一位软件工程师问道：‘*我看不到任何测试？*’
- en: This scenario has happened to me and is quite frequent with junior Data Scientists.
    [***Testing***](https://realpython.com/python-testing/) is an essential part of
    any software project and Data Science is no different. Therefore, it is an important
    concept and tool to nail down as it will be invaluable in your career. In this
    post, I dive into the need for testing and how we can easily carry them out by
    using [***Pytest***](https://docs.pytest.org/en/7.3.x/).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这种情况发生在我身上，并且在初级数据科学家中相当频繁。[***测试***](https://realpython.com/python-testing/)
    是任何软件项目的核心部分，数据科学也不例外。因此，掌握这个重要概念和工具将对你的职业生涯非常宝贵。在这篇文章中，我深入探讨了测试的必要性以及如何通过使用 [***Pytest***](https://docs.pytest.org/en/7.3.x/)
    来轻松进行测试。
- en: What are Tests?
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是测试？
- en: Testing is something we do naturally by simply inferring if the output is what
    we have expected which is called [***exploratory testing***](https://www.guru99.com/exploratory-testing.html).
    However, this is not ideal especially when you have a large codebase with numerous
    steps, as it would be hard to detect where the problem is occurring.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 测试是我们自然进行的，通过简单地推断输出是否符合预期，这被称为 [***exploratory testing***](https://www.guru99.com/exploratory-testing.html)。然而，这并不理想，尤其是当你有一个大型代码库和众多步骤时，因为很难检测问题发生的具体位置。
- en: Therefore, it is common to practice having written tests for your code. You
    would have some input and expected output. This [***automates***](https://en.wikipedia.org/wiki/Test_automation)
    the testing process and speeds up the debugging process.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，通常会编写代码测试。你会有一些输入和预期输出。这[***自动化***](https://en.wikipedia.org/wiki/Test_automation)测试过程，并加快调试过程。
- en: The most common and frequent written tests are [***unit tests***](https://en.wikipedia.org/wiki/Unit_testing).
    These are tests that test small blocks of code, typically functions and classes,
    to verify the block is doing what it should.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 最常见和频繁编写的测试是[***单元测试***](https://en.wikipedia.org/wiki/Unit_testing)。这些是测试小块代码的测试，通常是函数和类，以验证该块代码是否按预期工作。
- en: 'The general advantages of unit tests are:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 单元测试的一般优点包括：
- en: '*Speeds up debugging and finding the issues*'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*加快调试和发现问题的速度*'
- en: '*Identifying bugs earlier*'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*更早识别错误*'
- en: '*More robust and maintainable code*'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*代码更健壮且易于维护*'
- en: '*Leads to better code design with less complexity*'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*导致更好的代码设计，复杂度更低*'
- en: Unit tests are the foundational tests in the testing period with [***integration***](https://en.wikipedia.org/wiki/Integration_testing)
    and [***system***](https://en.wikipedia.org/wiki/System_testing) testing following.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 单元测试是测试周期中的基础测试，随后是[***集成测试***](https://en.wikipedia.org/wiki/Integration_testing)和[***系统测试***](https://en.wikipedia.org/wiki/System_testing)。
- en: '![](../Images/38a0ee599a849209446e9dd49dc66442.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/38a0ee599a849209446e9dd49dc66442.png)'
- en: Software testing pyramind. Diagram by author.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 软件测试金字塔。图示由作者提供。
- en: What is Pytest?
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Pytest是什么？
- en: 'Pytest is an easy-to-use python package to carry out unit testing. It is the
    most popular testing package alongside Python’s native [***unit test***](https://docs.python.org/3/library/unittest.html)
    framework. Pytest has several advantages over other testing frameworks:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Pytest是一个易于使用的Python包，用于进行单元测试。它是最受欢迎的测试包之一，与Python原生的[***单元测试***](https://docs.python.org/3/library/unittest.html)框架并列。Pytest相对于其他测试框架有几个优点：
- en: '*Open source*'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*开源*'
- en: '*Skip and label tests*'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*跳过并标记测试*'
- en: '*Parallelized test execution*'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*并行测试执行*'
- en: '*Very easy and intuitive to use*'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用起来非常简单直观*'
- en: Now let’s begin some testing!
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们开始测试吧！
- en: Installation and Setup
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和设置
- en: 'You can install `pytest` through [pip](https://pypi.org/project/pytest/) by
    simply writing:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过[粗体pip](https://pypi.org/project/pytest/)安装`pytest`，只需输入：
- en: '[PRE0]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In your terminal or command line. If you want a certain version:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的终端或命令行中。如果你需要特定版本：
- en: '[PRE1]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You can verify it is installed on your machine through:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过以下命令验证它是否已安装在你的机器上：
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The best practice is to have the tests in a separate directory, such as `tests/`,
    to the main code. Another requirement is that all test files are prefixed with
    `test_*.py` or suffixed `*_test.py` using [***snake case***](https://en.wikipedia.org/wiki/Snake_case).
    Similarly, all test functions and classes should start with `test_` or `Test`
    ([***camel case***](https://en.wikipedia.org/wiki/Camel_case)) respectively. This
    ensures that `pytest` knows which functions, classes, and files are tests.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳实践是将测试放在与主要代码分开的目录中，例如`tests/`。另一个要求是所有测试文件都以`test_*.py`为前缀或以`*_test.py`为后缀，使用[***蛇形命名法***](https://en.wikipedia.org/wiki/Snake_case)。类似地，所有测试函数和类应以`test_`或`Test`（[***驼峰命名法***](https://en.wikipedia.org/wiki/Camel_case)）开头。这确保了`pytest`知道哪些函数、类和文件是测试。
- en: Basic Example
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本示例
- en: Let’s go through a very simple example.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一个非常简单的例子。
- en: 'First, we will create a new directory `pytest-example/` containing two files:
    `calculations.py` and `test_calculations.py`. In the `calculations.py` file, we
    will code the following function:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将创建一个新的目录`pytest-example/`，其中包含两个文件：`calculations.py`和`test_calculations.py`。在`calculations.py`文件中，我们将编写以下函数：
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'And in the `test_calculations.py` file, we write its corresponding unit test:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在`test_calculations.py`文件中，我们编写相应的单元测试：
- en: '[PRE4]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This test can be run by executing either of these commands:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这个测试可以通过执行以下任意一个命令来运行：
- en: '[PRE5]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'And the output looks like this:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![](../Images/f85b8d2ba3956d1b76b041e136ddd988.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f85b8d2ba3956d1b76b041e136ddd988.png)'
- en: Image from author.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自作者。
- en: '*Good news, our test passed!*'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '*好消息，我们的测试通过了！*'
- en: 'However, if our `assert` is incorrect:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果我们的`assert`不正确：
- en: '[PRE6]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The output would be:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将是：
- en: '![](../Images/7f048012cc2feccd580db1b7d2c6df88.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7f048012cc2feccd580db1b7d2c6df88.png)'
- en: Image from author.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自作者。
- en: Several Tests
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 若干测试
- en: 'It is possible to have several tests for different functions. For example,
    let’s add another function to `calculations.py` :'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 对于不同的函数，可以有几个测试。例如，让我们在`calculations.py`中添加另一个函数：
- en: '[PRE7]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'And then add the test for the `multiply` function in `test_calculations.py`:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 然后在 `test_calculations.py` 中添加 `multiply` 函数的测试：
- en: '[PRE8]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Executing `pytest`:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 执行 `pytest`：
- en: '![](../Images/d545a21ad0f07a1db41ff9ee71ccd1db.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d545a21ad0f07a1db41ff9ee71ccd1db.png)'
- en: Image from author.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自作者。
- en: '*The two tests have passed!*'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '*两个测试都通过了！*'
- en: 'However, what if you wanted, say, to just run the `test_multiply` function?
    Well, all you need to do is pass that function name as an argument when executing
    `pytest`:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果你只想运行 `test_multiply` 函数呢？你只需在执行 `pytest` 时将该函数名作为参数传递即可：
- en: '[PRE9]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](../Images/fd54ab0cc0bb163f9c786d869fe69fe1.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fd54ab0cc0bb163f9c786d869fe69fe1.png)'
- en: Image from author.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自作者。
- en: As we can see, `pytest` only ran `test_multiply` as we wanted!
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所见，`pytest` 只运行了 `test_multiply`，这正是我们所期望的！
- en: 'If we wanted to now add a `divide` function, it would be best practise to now
    turn them into classes:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们现在想添加一个 `divide` 函数，最好将它们转换为类：
- en: '[PRE10]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Pytest Fixtures
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Pytest Fixtures
- en: 'In the above `TestCalculations` class, notice that we initialise the `Calculations`
    class several times. This is not optimal and luckily `pytest` has [***fixtures***](https://docs.pytest.org/en/6.2.x/fixture.html)
    to address this exact scenario:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的 `TestCalculations` 类中，注意到我们多次初始化了 `Calculations` 类。这并不是最优的，幸运的是，`pytest`
    有 [***fixtures***](https://docs.pytest.org/en/6.2.x/fixture.html) 来解决这种情况：
- en: '[PRE12]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Instead of initialising `Calculations` multiple times, we can attach the fixture
    as a [***decorator***](https://realpython.com/primer-on-python-decorators/) to
    contain the information on the input data.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 与其多次初始化`Calculations`，我们可以将 fixture 作为一个 [***装饰器***](https://realpython.com/primer-on-python-decorators/)
    附加，以包含输入数据的信息。
- en: Pytest Parametrize
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Pytest 参数化
- en: 'Up to this point, we have only passed one test case for each test function.
    However, there may be multiple edge cases you want to test and verify. Pytest
    makes this process very easy through the [***parametriz***](https://docs.pytest.org/en/6.2.x/parametrize.html)***e***
    decorator:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们只为每个测试函数通过了一个测试用例。然而，可能有多个边缘情况你想要测试和验证。Pytest 通过 [***parametrize***](https://docs.pytest.org/en/6.2.x/parametrize.html)
    装饰器使这一过程变得非常简单：
- en: '[PRE13]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Where we have used the `pytest.mark.parametrize` decorator to test several
    inputs for the `sum` function. The output looks like this:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了 `pytest.mark.parametrize` 装饰器来测试 `sum` 函数的多个输入。输出结果如下：
- en: '![](../Images/8838d5d7ea298b7ca2d2e99e81d4dabe.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8838d5d7ea298b7ca2d2e99e81d4dabe.png)'
- en: Image from author.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自作者。
- en: Notice that we have 5 test passing instead of 3, this is because we are passing
    two extra tests to the `sum` function.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到我们有 5 个测试通过而不是 3 个，这是因为我们对 `sum` 函数传递了两个额外的测试。
- en: Summary & Further Thoughts
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结与进一步思考
- en: Testing, particularly unit testing, is an essential skill to learn and understand
    as Data Scientist as it helps prevents bugs and speeds up development time. The
    most common testing package, in Python, is Pytest. This is an easy-to-use framework
    with an intuitive testing procedure. In this article, we have shown how you can
    use Pytest making use of its *fixtures* and *parametrize* features.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 测试，特别是单元测试，是数据科学家必须学习和理解的重要技能，因为它有助于防止 bug 并加快开发速度。在 Python 中，最常见的测试包是 Pytest。这是一个易于使用的框架，具有直观的测试过程。在本文中，我们展示了如何使用
    Pytest 的 *fixtures* 和 *parametrize* 功能。
- en: 'The full code used in this article is available here:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 本文中使用的完整代码可以在这里找到：
- en: '[](https://github.com/egorhowell/Medium-Articles/tree/main/Software%20Engineering%20/pytest-example?source=post_page-----ecbad62057b8--------------------------------)
    [## Medium-Articles/Software Engineering /pytest-example at main · egorhowell/Medium-Articles'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://github.com/egorhowell/Medium-Articles/tree/main/Software%20Engineering%20/pytest-example?source=post_page-----ecbad62057b8--------------------------------)
    [## Medium-Articles/Software Engineering /pytest-example at main · egorhowell/Medium-Articles'
- en: You can't perform that action at this time. You signed in with another tab or
    window. You signed out in another tab or…
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 目前你无法执行该操作。你在另一个标签页或窗口中已登录。你在另一个标签页或窗口中已登出…
- en: github.com](https://github.com/egorhowell/Medium-Articles/tree/main/Software%20Engineering%20/pytest-example?source=post_page-----ecbad62057b8--------------------------------)
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[github.com](https://github.com/egorhowell/Medium-Articles/tree/main/Software%20Engineering%20/pytest-example?source=post_page-----ecbad62057b8--------------------------------)'
- en: Another Thing!
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另外的事情！
- en: I have a free newsletter, [**Dishing the Data**](https://dishingthedata.substack.com/),
    where I share weekly tips for becoming a better Data Scientist.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我有一个免费的新闻通讯，[**Dishing the Data**](https://dishingthedata.substack.com/)，在其中我分享成为更好数据科学家的每周技巧。
- en: '[](https://newsletter.egorhowell.com/?source=post_page-----ecbad62057b8--------------------------------)
    [## Dishing The Data | Egor Howell | Substack'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://newsletter.egorhowell.com/?source=post_page-----ecbad62057b8--------------------------------)
    [## 数据分享 | Egor Howell | Substack'
- en: How To Become A Better Data Scientist. Click to read Dishing The Data, by Egor
    Howell, a Substack publication with…
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何成为更好的数据科学家。点击阅读由Egor Howell发布的Substack刊物《数据分享》…
- en: newsletter.egorhowell.com](https://newsletter.egorhowell.com/?source=post_page-----ecbad62057b8--------------------------------)
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: newsletter.egorhowell.com](https://newsletter.egorhowell.com/?source=post_page-----ecbad62057b8--------------------------------)
- en: Connect With Me!
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我！
- en: '[**YouTube**](https://www.youtube.com/@egorhowell)'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**YouTube**](https://www.youtube.com/@egorhowell)'
- en: '[**LinkedIn**](https://www.linkedin.com/in/egor-howell-092a721b3/)'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**LinkedIn**](https://www.linkedin.com/in/egor-howell-092a721b3/)'
- en: '[**Twitter**](https://twitter.com/EgorHowell)'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**Twitter**](https://twitter.com/EgorHowell)'
- en: '[**GitHub**](https://github.com/egorhowell)'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**GitHub**](https://github.com/egorhowell)'
- en: References & Further Reading
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献及进一步阅读
- en: '[https://www.tutorialspoint.com/pytest/index.htm](https://www.tutorialspoint.com/pytest/index.htm)'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.tutorialspoint.com/pytest/index.htm](https://www.tutorialspoint.com/pytest/index.htm)'
- en: '[https://docs.pytest.org/en/7.3.x/](https://docs.pytest.org/en/7.3.x/)'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.pytest.org/en/7.3.x/](https://docs.pytest.org/en/7.3.x/)'
- en: '[https://machinelearningmastery.com/a-gentle-introduction-to-unit-testing-in-python/](https://machinelearningmastery.com/a-gentle-introduction-to-unit-testing-in-python/)'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://machinelearningmastery.com/a-gentle-introduction-to-unit-testing-in-python/](https://machinelearningmastery.com/a-gentle-introduction-to-unit-testing-in-python/)'
- en: '[https://www.datacamp.com/tutorial/pytest-tutorial-a-hands-on-guide-to-unit-testing](https://www.datacamp.com/tutorial/pytest-tutorial-a-hands-on-guide-to-unit-testing)'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.datacamp.com/tutorial/pytest-tutorial-a-hands-on-guide-to-unit-testing](https://www.datacamp.com/tutorial/pytest-tutorial-a-hands-on-guide-to-unit-testing)'
