- en: Introduction to asyncio
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: asyncio 介绍
- en: 原文：[https://towardsdatascience.com/introduction-to-asyncio-57a5a1290ce0?source=collection_archive---------8-----------------------#2023-03-24](https://towardsdatascience.com/introduction-to-asyncio-57a5a1290ce0?source=collection_archive---------8-----------------------#2023-03-24)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/introduction-to-asyncio-57a5a1290ce0?source=collection_archive---------8-----------------------#2023-03-24](https://towardsdatascience.com/introduction-to-asyncio-57a5a1290ce0?source=collection_archive---------8-----------------------#2023-03-24)
- en: Managing I/O bound concurrency with Python
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理 I/O 密集型并发的 Python
- en: '[](https://medium.com/@hrmnmichaels?source=post_page-----57a5a1290ce0--------------------------------)[![Oliver
    S](../Images/b5ee0fa2d5fb115f62e2e9dfcb92afdd.png)](https://medium.com/@hrmnmichaels?source=post_page-----57a5a1290ce0--------------------------------)[](https://towardsdatascience.com/?source=post_page-----57a5a1290ce0--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----57a5a1290ce0--------------------------------)
    [Oliver S](https://medium.com/@hrmnmichaels?source=post_page-----57a5a1290ce0--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@hrmnmichaels?source=post_page-----57a5a1290ce0--------------------------------)[![Oliver
    S](../Images/b5ee0fa2d5fb115f62e2e9dfcb92afdd.png)](https://medium.com/@hrmnmichaels?source=post_page-----57a5a1290ce0--------------------------------)[](https://towardsdatascience.com/?source=post_page-----57a5a1290ce0--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----57a5a1290ce0--------------------------------)
    [Oliver S](https://medium.com/@hrmnmichaels?source=post_page-----57a5a1290ce0--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff2daf6260cca&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-asyncio-57a5a1290ce0&user=Oliver+S&userId=f2daf6260cca&source=post_page-f2daf6260cca----57a5a1290ce0---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----57a5a1290ce0--------------------------------)
    ·6 min read·Mar 24, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F57a5a1290ce0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-asyncio-57a5a1290ce0&user=Oliver+S&userId=f2daf6260cca&source=-----57a5a1290ce0---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff2daf6260cca&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-asyncio-57a5a1290ce0&user=Oliver+S&userId=f2daf6260cca&source=post_page-f2daf6260cca----57a5a1290ce0---------------------post_header-----------)
    发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----57a5a1290ce0--------------------------------)
    ·6分钟阅读·2023年3月24日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F57a5a1290ce0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-asyncio-57a5a1290ce0&user=Oliver+S&userId=f2daf6260cca&source=-----57a5a1290ce0---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F57a5a1290ce0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-asyncio-57a5a1290ce0&source=-----57a5a1290ce0---------------------bookmark_footer-----------)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F57a5a1290ce0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-asyncio-57a5a1290ce0&source=-----57a5a1290ce0---------------------bookmark_footer-----------)'
- en: Concurrency and parallelism denote a program’s or computer’s capability to run
    multiple operations in parallel. One commonly distinguishes multi-processing (parallelism)
    and multi-threading (concurrency)— with the former describing running multiple
    processes, whereas the second denotes spawning multiple threads within the same
    process. In Python, due to the [Global Interpreter Lock](https://realpython.com/python-gil/)
    (GIL), only one thread can be executed at once, causing any multi-threaded application
    to be single core effectively. Still, e.g. for I/O bound programs (programs, in
    which more time is spent waiting for inputs — i.e. this is the bottleneck and
    not compute), also in Python multi-threading makes sense. In this post we will
    introduce [asyncio](https://docs.python.org/3/library/asyncio.html), which is
    an elegant and easy way of doing so.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 并发和并行性表示程序或计算机同时运行多个操作的能力。通常区分多进程（并行性）和多线程（并发性）——前者指的是运行多个进程，而后者则指在同一进程内生成多个线程。在
    Python 中，由于 [全局解释器锁](https://realpython.com/python-gil/)（GIL），一次只能执行一个线程，这使得任何多线程应用实际上都是单核的。然而，例如对于
    I/O 密集型程序（程序在等待输入时花费了更多时间——即这是瓶颈而非计算），即使在 Python 中，多线程也是有意义的。在这篇文章中，我们将介绍 [asyncio](https://docs.python.org/3/library/asyncio.html)，它是一种优雅且简单的实现方式。
- en: '![](../Images/56706dacea79f62fb82537889418d6a7.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/56706dacea79f62fb82537889418d6a7.png)'
- en: Photo by [Gabriel Gusmao](https://unsplash.com/@gcsgpp?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/pMmw3ynuXHw?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Gabriel Gusmao](https://unsplash.com/@gcsgpp?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    拍摄，来源于 [Unsplash](https://unsplash.com/photos/pMmw3ynuXHw?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
- en: Why asyncio?
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么使用 asyncio？
- en: We will designate a future post for the differences between multi-processing
    and multi-threading, and how asyncio plays into this. Still we want to motivate
    its usage here. As hinted above, multi-threading is particularly useful for I/O
    bound, i.e. non-CPU bound, applications. And asyncio is one way of doing so, which
    is preferred for some use cases by many developers.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将为多进程与多线程之间的差异以及 asyncio 在其中的作用指定一个未来的帖子。尽管如此，我们仍然希望在这里激励其使用。如上所示，多线程特别适用于
    I/O 密集型，即非 CPU 密集型 应用程序。而 asyncio 是实现这一目标的一种方式，许多开发者在某些用例中偏好这种方式。
- en: asyncio excels for I/O bound programs, for which we want to write easy, clearly
    structured, and…
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: asyncio 对于 I/O 密集型程序表现出色，我们希望编写简单、结构清晰的代码，以及……
