- en: How to Do Fuzzy String Matching in Pandas Dataframes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何在Pandas数据框中进行模糊字符串匹配
- en: 原文：[https://towardsdatascience.com/fuzzy-string-matching-in-pandas-2c185a24617f](https://towardsdatascience.com/fuzzy-string-matching-in-pandas-2c185a24617f)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/fuzzy-string-matching-in-pandas-2c185a24617f](https://towardsdatascience.com/fuzzy-string-matching-in-pandas-2c185a24617f)
- en: Matching text where there’s no perfect match
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 匹配没有完美匹配的文本
- en: '[](https://thuwarakesh.medium.com/?source=post_page-----2c185a24617f--------------------------------)[![Thuwarakesh
    Murallie](../Images/44f1a14a899426592bbd8c7f73ce169d.png)](https://thuwarakesh.medium.com/?source=post_page-----2c185a24617f--------------------------------)[](https://towardsdatascience.com/?source=post_page-----2c185a24617f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----2c185a24617f--------------------------------)
    [Thuwarakesh Murallie](https://thuwarakesh.medium.com/?source=post_page-----2c185a24617f--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://thuwarakesh.medium.com/?source=post_page-----2c185a24617f--------------------------------)[![Thuwarakesh
    Murallie](../Images/44f1a14a899426592bbd8c7f73ce169d.png)](https://thuwarakesh.medium.com/?source=post_page-----2c185a24617f--------------------------------)[](https://towardsdatascience.com/?source=post_page-----2c185a24617f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----2c185a24617f--------------------------------)
    [Thuwarakesh Murallie](https://thuwarakesh.medium.com/?source=post_page-----2c185a24617f--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----2c185a24617f--------------------------------)
    ·6 min read·Apr 17, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----2c185a24617f--------------------------------)
    ·阅读时间6分钟·2023年4月17日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/0e2257b146dc3409abf7ce5b742d7da1.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0e2257b146dc3409abf7ce5b742d7da1.png)'
- en: Photo by [Lucas Santos](https://unsplash.com/@_staticvoid?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[Lucas Santos](https://unsplash.com/@_staticvoid?utm_source=medium&utm_medium=referral)提供，[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: The real world is not perfect.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 现实世界是不完美的。
- en: People use different forms of the same piece of information. Even well-established
    systems use different standards. You’d have seen city names misspelled, like “Santana”
    instead of “Santa Ana” or “St. Louie” instead of “St. Louis.”
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 人们使用相同信息的不同形式。即便是成熟的系统也使用不同的标准。你可能会见过城市名称拼写错误的情况，比如“Santana”而不是“Santa Ana”或“St.
    Louie”而不是“St. Louis”。
- en: When working with real-world data, this is inevitable. Thus we must ensure that
    the data we take to the next steps in our pipeline are standardized.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理现实世界的数据时，这是不可避免的。因此，我们必须确保我们在管道的下一步中使用的数据是标准化的。
- en: We can tackle this problem with Fuzzy string matching. This, too, is not perfect,
    yet very helpful.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过模糊字符串匹配来解决这个问题。这也不完美，但非常有用。
- en: '[](/python-decorators-for-data-science-6913f717669a?source=post_page-----2c185a24617f--------------------------------)
    [## 5 Python Decorators I Use in Almost All My Data Science Projects'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/python-decorators-for-data-science-6913f717669a?source=post_page-----2c185a24617f--------------------------------)
    [## 我在几乎所有数据科学项目中使用的5个Python装饰器'
- en: Decorators provide a new and convenient way for everything from caching to sending
    notifications
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 装饰器提供了一种新的便利方式，从缓存到发送通知都有应用
- en: towardsdatascience.com](/python-decorators-for-data-science-6913f717669a?source=post_page-----2c185a24617f--------------------------------)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/python-decorators-for-data-science-6913f717669a?source=post_page-----2c185a24617f--------------------------------)
- en: Fuzzy String Matching in Python
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python中的模糊字符串匹配
- en: You’d probably use Pandas dataframes for wrangling if you're a Python programmer.
    Along with pandas, you could use “thefuzz” to do fuzzy string matching.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是Python程序员，你可能会使用Pandas数据框来处理数据。除了pandas，你还可以使用“thefuzz”来进行模糊字符串匹配。
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[TheFuzz](https://github.com/seatgeek/thefuzz) is an open-source Python package
    formally known as “FuzzyWuzzy.” It uses the **Levenshtein edit distance** to calculate
    the similarity string similarity.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[TheFuzz](https://github.com/seatgeek/thefuzz)是一个开源Python包，正式名称为“FuzzyWuzzy”。它使用**Levenshtein编辑距离**来计算字符串相似度。'
- en: 'Here’s the basic usage of it:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这是它的基本用法：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[](/sql-on-pandas-usign-duckdb-f7cd238a0a5a?source=post_page-----2c185a24617f--------------------------------)
    [## SQL on Pandas — My New Favorite for 10X Speed.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/sql-on-pandas-usign-duckdb-f7cd238a0a5a?source=post_page-----2c185a24617f--------------------------------)
    [## SQL在Pandas上 — 我新宠，速度提升10倍。'
- en: Bringing the best of both worlds together
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将两者的最佳之处结合起来
- en: towardsdatascience.com](/sql-on-pandas-usign-duckdb-f7cd238a0a5a?source=post_page-----2c185a24617f--------------------------------)
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/sql-on-pandas-usign-duckdb-f7cd238a0a5a?source=post_page-----2c185a24617f--------------------------------)'
- en: How text similarity is measured?
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何测量文本相似度？
- en: The Levenshtein distance, also known as edit distance, is a metric used to measure
    the difference or similarity between two strings. It calculates the minimum number
    of operations (insertions, deletions, or substitutions) required to transform
    one string into another.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Levenshtein距离，也称为编辑距离，是一种用于测量两个字符串之间差异或相似度的度量。它计算将一个字符串转换为另一个字符串所需的最小操作数（插入、删除或替换）。
- en: The smaller the Levenshtein distance between two strings, the more similar they
    are.
  id: totrans-26
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Levenshtein距离越小，两个字符串越相似。
- en: For example, consider the two strings “chat” and “chart”. The Levenshtein distance
    between them is 1 because the only operation needed to transform “chat” into “chart”
    is to replace the letter “a” with “r”.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，考虑两个字符串“chat”和“chart”。它们之间的Levenshtein距离是1，因为将“chat”转换为“chart”所需的唯一操作是将字母“a”替换为“r”。
- en: 'Now Consider the strings “intention” and “execution”. The Levenshtein distance
    between them is 5\. The following is one of the possible ways to transform “intention”
    into “execution” with a minimum number of operations:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在考虑字符串“intention”和“execution”。它们之间的Levenshtein距离是5。以下是将“intention”转换为“execution”的一种可能方式，所需的操作最少：
- en: 'Replace ‘i’ with ‘e’: entention'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将‘i’替换为‘e’：entention
- en: 'Replace ’n’ with ‘x’: extention'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将’n’替换为‘x’：extention
- en: 'Delete ‘t’: exention'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除‘t’：exention
- en: 'Replace ‘n’ with ‘u’: exection'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将’n’替换为‘u’：exection
- en: 'Insert ‘u’: execution'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 插入‘u’：execution
- en: The total cost of these operations is 5, which is the Levenshtein distance between
    the two strings.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这些操作的总成本是5，这也是两个字符串之间的Levenshtein距离。
- en: Generally, the smaller the Levenshtein distance between two strings, the more
    similar they are. For instance, if two strings have a Levenshtein distance of
    0, then they are identical. Conversely, if the distance is large, it indicates
    that the strings are significantly different.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，两个字符串之间的Levenshtein距离越小，它们越相似。例如，如果两个字符串的Levenshtein距离为0，则它们是完全相同的。相反，如果距离较大，则表示字符串之间有显著差异。
- en: Please refer to the [Educative article on Levenshtein distance](https://www.educative.io/answers/the-levenshtein-distance-algorithm),
    as it’s not the scope of this post.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅[Educative 关于Levenshtein距离的文章](https://www.educative.io/answers/the-levenshtein-distance-algorithm)，因为这不是本文的重点。
- en: But here’s a short example of how we can get a similarity score for two strings
    in Python.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 但这里有一个简单的示例，展示了如何在Python中为两个字符串获取相似度评分。
- en: '[PRE2]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[](/black-with-git-hub-actions-4ffc5c61b5fe?source=post_page-----2c185a24617f--------------------------------)
    [## Maintain Clean Python Code With Black and GitHub Actions.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '[链接](/black-with-git-hub-actions-4ffc5c61b5fe?source=post_page-----2c185a24617f--------------------------------)
    [## 使用Black和GitHub Actions保持Python代码的整洁。'
- en: Nobody wants a messy codebase; few have the patience to clean it.
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 没有人愿意面对混乱的代码库；很少有人有耐心去清理它。
- en: towardsdatascience.com](/black-with-git-hub-actions-4ffc5c61b5fe?source=post_page-----2c185a24617f--------------------------------)
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '[链接](/black-with-git-hub-actions-4ffc5c61b5fe?source=post_page-----2c185a24617f--------------------------------)'
- en: Using Fuzzy string matches to remove duplicates in Pandas dataframes
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用模糊字符串匹配来删除Pandas数据框中的重复项
- en: One of the common challenges when working with user-created data is to remove
    duplicates. But the task becomes challenging when the duplicates aren’t exact
    matches.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理用户创建的数据时，常见的挑战之一是删除重复项。但当重复项不是完全匹配时，这个任务会变得更加困难。
- en: 'We can write a little function to check string similarity and remove duplicates.
    Here’s an example:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以编写一个小函数来检查字符串相似度并删除重复项。以下是一个示例：
- en: '[PRE3]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Our original dataset had similar names — John Smith and Jon Smith, James Johnson,
    and James Johnsan. But we were able to get rid of these duplicates.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的原始数据集包含了类似的名字——John Smith和Jon Smith，James Johnson和James Johnsan。但我们能够去除这些重复项。
- en: '[](/python-code-like-natural-english-ff5cb09e97b9?source=post_page-----2c185a24617f--------------------------------)
    [## How My Python Scripts Sound More Like a Natural Conversation'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[链接](/python-code-like-natural-english-ff5cb09e97b9?source=post_page-----2c185a24617f--------------------------------)
    [## 我的Python脚本如何更像自然对话'
- en: Pipes are an incredibly fantastic technique for more human-friendly coding
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 管道是更人性化编码的极佳技巧
- en: towardsdatascience.com](/python-code-like-natural-english-ff5cb09e97b9?source=post_page-----2c185a24617f--------------------------------)
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/python-code-like-natural-english-ff5cb09e97b9?source=post_page-----2c185a24617f--------------------------------)'
- en: Standardizing fuzzy duplicates in a Pandas dataframe
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Pandas 数据框中标准化模糊重复项
- en: 'Here’s an implementation of a function that replaces duplicate rows in the
    “Name” column with the first occurrence of that row, based on a similarity score
    threshold using thefuzz package:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个实现函数的示例，基于相似度评分阈值，使用 thefuzz 包将“Name”列中的重复行替换为该行的第一次出现：
- en: '[PRE4]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: We can remove the Jon Smiths with John Smiths in our dataset using this function.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用这个函数将数据集中所有的 Jon Smith 替换为 John Smith。
- en: '[PRE5]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Conclusion
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: Fuzzy string matching is a must for real-life data. Unless you autogenerate
    data, you almost always expect non-standard values in your dataset. Even among
    autogenerated systems, the conventions may vary.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 对于现实世界的数据，模糊字符串匹配是必不可少的。除非你自动生成数据，否则几乎总是期望数据集中存在非标准值。即使在自动生成的系统中，约定也可能有所不同。
- en: When text data involved, I often see we stuck at some point where there are
    fuzzy matching is required.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到文本数据时，我经常看到我们在某些点上卡住了，这时需要模糊匹配。
- en: In such situations, we can use the techniques highlighted in this post. We’ve
    used the Python package “thefuzz” to match strings using Levenshtein’s distance
    and removed duplicates from Pandas dataframes. We can replace them with one proper
    value if needed instead of removing them.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们可以使用本文中强调的技术。我们使用了 Python 包“thefuzz”来使用 Levenshtein 距离匹配字符串，并从 Pandas
    数据框中删除了重复项。如果需要，我们可以将它们替换为一个合适的值，而不是简单地删除。
- en: But fuzzy string matching is not perfect. For instance, in the last example
    of replacing duplicates, our script has replaced all “James Johnson” with “James
    Johnsan.” If Johnson is what we prefer, our script hasn’t done a good job.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 但模糊字符串匹配并不完美。例如，在替换重复项的最后一个示例中，我们的脚本将所有的“James Johnson”替换为“James Johnsan”。如果我们更喜欢
    Johnson，我们的脚本就没有做好。
- en: Thus, we need to use fuzzy matching as a last resort. Or a helpful guide. But
    relying on them too much is not advisable.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们需要把模糊匹配作为最后的手段，或作为一个有用的指南。但是过度依赖它们是不明智的。
- en: I hope this helps.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 希望这对你有帮助。
- en: Thanks for reading, friend! Say Hi to me on [**LinkedIn**](https://www.linkedin.com/in/thuwarakesh/),
    [**Twitter**](https://twitter.com/Thuwarakesh), and [**Medium**](https://thuwarakesh.medium.com/).
  id: totrans-62
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 感谢阅读，朋友！在 [**LinkedIn**](https://www.linkedin.com/in/thuwarakesh/)，[**Twitter**](https://twitter.com/Thuwarakesh)，和
    [**Medium**](https://thuwarakesh.medium.com/) 上跟我打个招呼吧。
- en: ''
  id: totrans-63
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Not a Medium member yet? Please use this link to [**become a member**](https://thuwarakesh.medium.com/membership)
    because, at no extra cost for you, I earn a small commission for referring you.
  id: totrans-64
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 还不是 Medium 会员？请使用这个链接 [**成为会员**](https://thuwarakesh.medium.com/membership)，因为对你没有额外费用，我通过推荐你赚取少量佣金。
