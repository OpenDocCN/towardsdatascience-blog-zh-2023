- en: Understanding Independence and Why It Is Critical in Causal Inference and Causal
    Validation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解独立性及其在因果推断和因果验证中的重要性
- en: 原文：[https://towardsdatascience.com/understanding-independence-and-why-it-is-critical-in-causal-inference-and-causal-validation-dfdd26c29739](https://towardsdatascience.com/understanding-independence-and-why-it-is-critical-in-causal-inference-and-causal-validation-dfdd26c29739)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/understanding-independence-and-why-it-is-critical-in-causal-inference-and-causal-validation-dfdd26c29739](https://towardsdatascience.com/understanding-independence-and-why-it-is-critical-in-causal-inference-and-causal-validation-dfdd26c29739)
- en: A step-by-step guide to understanding the concept of independence and how to
    apply it to validate directed acyclic graphs in causal validation using Python
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解独立性的逐步指南以及如何应用它来验证使用 Python 的有向无环图（DAG）在因果验证中的有效性
- en: '[](https://grahamharrison-86487.medium.com/?source=post_page-----dfdd26c29739--------------------------------)[![Graham
    Harrison](../Images/c6bfe00c6e0cfcdf3bd042c7fdc03554.png)](https://grahamharrison-86487.medium.com/?source=post_page-----dfdd26c29739--------------------------------)[](https://towardsdatascience.com/?source=post_page-----dfdd26c29739--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----dfdd26c29739--------------------------------)
    [Graham Harrison](https://grahamharrison-86487.medium.com/?source=post_page-----dfdd26c29739--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://grahamharrison-86487.medium.com/?source=post_page-----dfdd26c29739--------------------------------)[![Graham
    Harrison](../Images/c6bfe00c6e0cfcdf3bd042c7fdc03554.png)](https://grahamharrison-86487.medium.com/?source=post_page-----dfdd26c29739--------------------------------)[](https://towardsdatascience.com/?source=post_page-----dfdd26c29739--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----dfdd26c29739--------------------------------)
    [Graham Harrison](https://grahamharrison-86487.medium.com/?source=post_page-----dfdd26c29739--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----dfdd26c29739--------------------------------)
    ·23 min read·Dec 7, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----dfdd26c29739--------------------------------)
    ·23分钟阅读·2023年12月7日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/2a1aaf170dbbf7c9485d0cd5023662a6.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2a1aaf170dbbf7c9485d0cd5023662a6.png)'
- en: Photo by [Towfiqu barbhuiya](https://unsplash.com/@towfiqu999999?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)
    on [Unsplash](https://unsplash.com/photos/a-blue-question-mark-on-a-pink-background-oZuBNC-6E2s?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[Towfiqu barbhuiya](https://unsplash.com/@towfiqu999999?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)提供，来源于[Unsplash](https://unsplash.com/photos/a-blue-question-mark-on-a-pink-background-oZuBNC-6E2s?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)
- en: Background
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 背景
- en: In a recent article the author explored and explained how [the concept of dependence](/demystifying-dependence-and-why-it-is-important-in-causal-inference-and-causal-validation-4263b18d5f04)
    can be used to validate a proposed Directed Acyclic Graph (DAG) against a dataset
    to identify spurious edges in the graph i.e. causal links suggested by the DAG
    that do not exist in the data.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在最近的一篇文章中，作者探讨并解释了如何使用[依赖性概念](/demystifying-dependence-and-why-it-is-important-in-causal-inference-and-causal-validation-4263b18d5f04)来验证提出的有向无环图（DAG）是否符合数据集，以识别图中的虚假边，即DAG中建议的因果链接在数据中不存在。
- en: In this second instalment, the opposite (but equally critical) concept will
    be applied i.e. how to use independence to identify missing edges. These are causal
    links that do not appear in the proposed DAG but do actually exist in the data
    that must be added back into the DAG to make it complete and correct.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二部分中，将应用相反的（但同样关键的）概念，即如何利用独立性来识别缺失的边。这些是提议的DAG中未出现但实际上存在于数据中的因果链接，必须将这些链接添加回DAG中，以使其完整且正确。
- en: Introduction
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: Causal Inference is an emergent branch of data science concerned with determining
    the cause-and-effect relationship between events and outcomes and it has the potential
    to significantly add to the value that machine learning can generate for organisations.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 因果推断是数据科学的一个新兴分支，关注于确定事件和结果之间的因果关系，并且它有潜力显著提高机器学习为组织创造的价值。
- en: For example a traditional machine learning algorithm can predict which loan
    customers are likely to default thereby enabling proactive intervention with customers.
    However, although this algorithm will be useful to reduce loan defaults it will
    have no concept of why they occurred and whilst pro-active intervention is useful,
    knowing the reasons for defaults would enable the underlying cause to be addressed.
    In this world pro-active intervention may no longer be necessary because the factors
    that led to defaulting have been permanently cured.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，传统的机器学习算法可以预测哪些贷款客户可能会违约，从而使客户能够进行主动干预。然而，尽管这个算法对于减少贷款违约有用，但它并不了解违约发生的原因，虽然主动干预是有用的，但了解违约的原因将有助于解决根本原因。在这种情况下，主动干预可能不再必要，因为导致违约的因素已被永久治愈。
- en: This is the promise of Causal Inference and why it has the potential to deliver
    significant impact and outcomes to those organisations that can harness that potential.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是因果推断的承诺，它有可能对能够利用这种潜力的组织产生重大影响和结果。
- en: There are a number of different approaches but the most common approach typically
    starts by augmenting the data with a “Directed Acyclic Graph” (DAG) which encapsulates
    and visualises the causal relationships in the data and then uses causal inference
    techniques to ask “what-if” type questions.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 有多种不同的方法，但最常见的方法通常从用“有向无环图”（DAG）来增强数据开始，这种图形封装和可视化数据中的因果关系，然后使用因果推断技术来提出“如果”类型的问题。
- en: The Problem
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: A DAG that encapsulates the causal relationships in the data is typically constructed
    manually (or semi-manually) by data scientists and domain experts working together.
    Hence the DAG could be wrong which would invalidate any causal calculations leading
    to flawed conclusions and potentially incorrect decisions.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 封装数据中的因果关系的 DAG 通常由数据科学家和领域专家手动（或半手动）构建。因此，DAG 可能是错误的，这会使任何因果计算失效，从而导致错误的结论和潜在的不正确决策。
- en: The Opportunity
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机会
- en: A range of techniques exist for “Causal Validation” (the process of validating
    the DAG against the data) and if these techniques work they can minimise or eliminate
    errors in the DAG thereby ensuring that the calculations and conclusions are error-free.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 存在一系列的“因果验证”技术（验证 DAG 是否符合数据的过程），如果这些技术有效，它们可以最小化或消除 DAG 中的错误，从而确保计算和结论是无误的。
- en: The Way Forward
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前进的道路
- en: The statistical concept of independence between random variables can be used
    to ascertain whether a relationship that does not exist in the DAG does exist
    in the data. If this situation is encountered it is likely that the causal relationship
    that is missing in the DAG needs to be added to it to make it complete and correct.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 随机变量之间的独立性统计概念可以用来确定 DAG 中不存在的关系是否在数据中存在。如果遇到这种情况，则很可能 DAG 中缺失的因果关系需要添加到 DAG
    中，以使其完整和正确。
- en: Getting Started
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始
- en: We are going to need an example DAG to work through the problem which has enough
    nodes and links to provide a good example with which to explore the problem …
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要一个示例 DAG 来解决问题，这个 DAG 需要有足够的节点和链接，以提供一个好的示例来探索问题 …
- en: '![](../Images/62397b5d07af2ce29ceb59fa4144503a.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/62397b5d07af2ce29ceb59fa4144503a.png)'
- en: DAG used throughout the article — Image by Author
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 文章中使用的 DAG — 作者图片
- en: The DAG is entirely fictitious so the letters on the nodes do not have any meaning,
    but to note that “X” is the treatment, “Y” is the outcome and the other nodes
    represent factors that are affecting the outcome with the potential to hide or
    skew the true effect of X on Y.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: DAG 完全是虚构的，所以节点上的字母没有任何意义，但需要注意的是，“X”是治疗，“Y”是结果，其他节点代表影响结果的因素，有可能隐藏或扭曲 X 对 Y
    的真实效果。
- en: To better understand the DAG, if this were a real-world problem it could represent
    the following …
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解 DAG，如果这是一个现实世界的问题，它可能代表以下情况 …
- en: X represents the regularity with which a drug is taken.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: X 代表药物服用的规律性。
- en: W represents the effect of the drug on blood pressure.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: W 代表药物对血压的影响。
- en: Y represents the improvement on patient recovery and outcome.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Y 代表对患者恢复和结果的改善。
- en: Z1, Z2, and Z3 represent other factors (for example maybe Z1 represents healthy
    lifestyle and Z3 represents fitness level etc.)
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Z1、Z2 和 Z3 代表其他因素（例如，也许 Z1 代表健康的生活方式，Z3 代表健身水平等）
- en: The arrows in a DAG then represent the causal effect of one factor on another,
    for example …
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: DAG 中的箭头表示一个因素对另一个因素的因果影响，例如 …
- en: Taking the drug (represented by “X”) has a causal effect on blood pressure (represented
    by “W”) which in turn has a causal effect on patient recovery (“Y”).
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用药物（用“X”表示）对血压（用“W”表示）有因果影响，而血压又对患者恢复（“Y”）有因果影响。
- en: We will also need some data that matches the DAG. The dataset below is entirely
    synthetic and has been generated by the author; it exactly encapsulates and matches
    the structure suggested by the DAG and contains no erroneous or faulty relationships
    …
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要一些与DAG匹配的数据。下面的数据集完全是合成的，由作者生成；它准确地封装并匹配了DAG建议的结构，并且没有错误或虚假的关系…
- en: '![](../Images/14c239ce462cc25b48f7c62b47cdcbe4.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/14c239ce462cc25b48f7c62b47cdcbe4.png)'
- en: Dataset used throughout the article — Image by Author
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 全文使用的数据集 — 作者提供的图像
- en: The next sections will begin to unpack the DAG and the data and use them to
    explain how statistical independence can be used to identify causal links that
    have been missed or omitted from the DAG.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的部分将开始解读DAG和数据，并利用它们解释如何利用统计独立性来识别DAG中遗漏或忽视的因果关系。
- en: Understanding Independence
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解独立性
- en: One definition of independence is as follows —
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 独立性的一个定义如下 —
- en: “Independence between two random variables refers to a fundamental concept where
    the occurrence or value of one random variable does not influence or provide any
    information about the occurrence or value of the other random variable”.
  id: totrans-40
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “两个随机变量之间的独立性是指一个随机变量的发生或值不会影响或提供关于另一个随机变量发生或值的任何信息的基本概念。”
- en: Let’s take another look at our DAG and consider nodes Z1 and Z2 …
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们再看看我们的DAG，并考虑节点Z1和Z2 …
- en: '![](../Images/022365171e6a2f664478b385088ec7b2.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/022365171e6a2f664478b385088ec7b2.png)'
- en: DAG with nodes Z1 and Z2 highlighted — Image by Author
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 突出显示的Z1和Z2节点的DAG — 作者提供的图像
- en: We can see that nodes Z1 and Z2 (representing some causal factors affecting
    the treatment and outcome) have no direct or indirect connection and their are
    no paths through the DAG that link them so Z1 can be said to be independent of
    Z2 (and vice versa).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，节点Z1和Z2（代表影响治疗和结果的一些因果因素）没有直接或间接的连接，DAG中没有通过它们的路径，因此可以说Z1与Z2是独立的（反之亦然）。
- en: To illustrate the point further we can also see that although X (the treatment)
    and Y (the outcome) are not directly connected they are in fact dependent because
    there are several paths through the DAG that connect them …
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步说明这一点，我们还可以看到，尽管X（治疗）和Y（结果）没有直接连接，但它们实际上是依赖的，因为DAG中有几条路径将它们连接起来 …
- en: '![](../Images/469b8ff3593a28ce0f21f7f168b9e17f.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/469b8ff3593a28ce0f21f7f168b9e17f.png)'
- en: All paths between node X and node Y — Image by Author
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 节点X和节点Y之间的所有路径 — 作者提供的图像
- en: What these two examples show is that if the value if Z1 changes it will not
    influence or change the value of Z2 but if the value of X changes it will change
    the value of Y.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个例子表明，如果Z1的值发生变化，它不会影响或改变Z2的值，但如果X的值发生变化，它会改变Y的值。
- en: This explanation can be expanded by taking another look at the dataset that
    the DAG is modelling …
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这个解释可以通过再看看DAG建模的数据集来扩展 …
- en: '![](../Images/14c239ce462cc25b48f7c62b47cdcbe4.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/14c239ce462cc25b48f7c62b47cdcbe4.png)'
- en: Review of the dataset — Image by Author
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集审查 — 作者提供的图像
- en: In a real-world causal inference problem the data would be the starting point
    and the DAG would be developed by consulting with the domain experts but to facilitate
    the article the author needed a dataset that was guaranteed to match the DAG.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在现实世界的因果推断问题中，数据将是起点，DAG将通过与领域专家咨询来开发，但为了方便文章，作者需要一个保证与DAG匹配的数据集。
- en: Hence the dataset above was generated by applying the following formulae to
    create 1000 rows of data …
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，上述数据集是通过应用以下公式生成的1000行数据 …
- en: '![](../Images/622b646be82955250013e6658419d71b.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/622b646be82955250013e6658419d71b.png)'
- en: Structural equations used to create the dataset — Image by Author
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 用于创建数据集的结构方程 — 作者提供的图像
- en: This can be read and understood as follows -
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 可以按如下方式阅读和理解 -
- en: Z1 is an exogenous variable (i.e. it has no inputs) that is normally distributed
    with a mean of 4.37 and a standard deviation of 1.95
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Z1是一个外生变量（即没有输入），呈正态分布，均值为4.37，标准差为1.95。
- en: Z1 is an exogenous variable that is normally distributed with a mean of 1.28
    and a standard deviation of 1.94
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Z1是一个外生变量，呈正态分布，均值为1.28，标准差为1.94。
- en: Z3 = -1.5 X Z1–1.5 x Z2 + an error term
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Z3 = -1.5 X Z1–1.5 x Z2 + 一个误差项
- en: X = -1.5 x Z1 + 1.5 x Z3 + an error term
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: X = -1.5 x Z1 + 1.5 x Z3 + 一个误差项
- en: W = -3 x XZ + an error term
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: W = -3 x XZ + 一个误差项
- en: Y = -2.5 x W + -3 x Z2 + -3 x Z3 + an error term
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Y = -2.5 x W + -3 x Z2 + -3 x Z3 + 误差项
- en: The formulae that were used to create the data clearly show that Z1 is independent
    of Z2 because they are both completely separate normal distributions but that
    X and Y are not independent because changing X will change W and changing W will
    change Y.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 用于创建数据的公式清楚地表明 Z1 独立于 Z2，因为它们都是完全分开的正态分布，但 X 和 Y 并不独立，因为改变 X 会改变 W，改变 W 会改变
    Y。
- en: There is yet another way of representing this, by using mathematical notation
    to show the dependence …
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 还有另一种表示方式，通过数学符号显示依赖关系……
- en: '![](../Images/4c45fcc133c1680bfa8d5cec342f0d29.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4c45fcc133c1680bfa8d5cec342f0d29.png)'
- en: Independence and dependence notation — Image by Author
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 独立性和依赖性符号 — 作者提供的图片
- en: The ⫫ symbol is called a “double up-tack” and means “is independent of”. The
    ⫫̸ symbol does not have a widely accepted name so I have adopted “slashed double
    up-tack” through personal preference and means “is dependent on” so the formulae
    above read as “Z1 is independent of Z2” and separately “Y is dependent on X”.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: ⫫ 符号被称为“双向叉”，意思是“独立于”。⫫̸ 符号没有被广泛接受的名称，因此我个人偏好使用“斜线双向叉”，意思是“依赖于”，因此上述公式可解读为“Z1
    独立于 Z2”，以及“Y 依赖于 X”。
- en: In concluding this section we will bring this knowledge back to its importance
    in the context of causal validation.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节结束时，我们将把这些知识带回到因果验证的背景下。
- en: In a causal inference problem the data will have been collected and the DAG
    will have been constructed separately, usually by consulting domain experts who
    could potentially have made mistakes or whose knowledge could have been incomplete.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在因果推断问题中，数据已经被收集，有向无环图通常由领域专家单独构建，他们可能犯了错误或知识可能不完整。
- en: Causal validation then is the process of proving or disproving that the DAG
    is a valid causal representation of the data.
  id: totrans-70
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 因果验证则是证明或反驳有向无环图是否有效地表示数据因果关系的过程。
- en: Independence has a critical role to play in this process because if the dependencies
    and independencies represented in the DAG can all be matched and detected in the
    data then it can be inferred that the DAG is valid.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 独立性在这个过程中起着关键作用，因为如果有向无环图中的依赖关系和独立性在数据中都能被匹配和检测到，那么可以推断有向无环图是有效的。
- en: This can be represented using the following formulae ..
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以用以下公式表示……
- en: '![](../Images/25d47fe820458ca0d20c3c620fc12676.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/25d47fe820458ca0d20c3c620fc12676.png)'
- en: Formulae inferring the DAG and data are equivalent for nodes Z1 and Y — Image
    by Author
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 推断 DAG 和数据等效的公式 — 作者提供的图片
- en: These formulae look scary but are actually very straightforward.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这些公式看起来很吓人，但实际上非常简单。
- en: The first says that if Z1 is independent of Z2 in the graph (DAG) then Z1 should
    also be independent of Z2 in the data.
  id: totrans-76
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 第一条说，如果图（DAG）中的 Z1 独立于 Z2，那么 Z1 在数据中也应该独立于 Z2。
- en: ''
  id: totrans-77
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The second says that if Y is dependent on X in the graph (DAG) then Y should
    also be dependent on Y in the data.
  id: totrans-78
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 第二条说，如果图（DAG）中的 Y 依赖于 X，则 Y 在数据中也应该依赖于 X。
- en: Using Independence to Identify Missing Causal Links
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用独立性来识别缺失的因果链接
- en: In a previous article I explained how independence can be used to detect spurious
    links i.e. causal relationships that appear in the DAG that do not appear in the
    data …
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一篇文章中，我解释了如何使用独立性来检测虚假链接，即在有向无环图中出现但在数据中未出现的因果关系……
- en: '[](/demystifying-dependence-and-why-it-is-important-in-causal-inference-and-causal-validation-4263b18d5f04?source=post_page-----dfdd26c29739--------------------------------)
    [## Demystifying Dependence and Why it is Important in Causal Inference and Causal
    Validation'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/demystifying-dependence-and-why-it-is-important-in-causal-inference-and-causal-validation-4263b18d5f04?source=post_page-----dfdd26c29739--------------------------------)
    [## 解析依赖性及其在因果推断和因果验证中的重要性'
- en: A step-by-step guide in understanding the concept of dependence and how to apply
    it to validate directed acyclic graphs…
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 理解依赖性概念及其如何应用于验证有向无环图的逐步指南…
- en: towardsdatascience.com](/demystifying-dependence-and-why-it-is-important-in-causal-inference-and-causal-validation-4263b18d5f04?source=post_page-----dfdd26c29739--------------------------------)
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/demystifying-dependence-and-why-it-is-important-in-causal-inference-and-causal-validation-4263b18d5f04?source=post_page-----dfdd26c29739--------------------------------)
- en: … and in the remainder of this article I will explore how dependence can be
    used to identify missing links i.e. causal relationships that do not appear in
    the DAG that do appear in the data.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: … 在这篇文章的其余部分，我将深入探讨如何利用依赖性来识别缺失的链接，即在数据中出现但在DAG中未出现的因果关系。
- en: It follows that if missing links can be identified using independence they can
    then be added back into an invalid DAG to make it valid.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果可以使用独立性来识别缺失的链接，那么这些链接可以重新添加到无效的DAG中，使其变为有效。
- en: The approach proposed in this article has its basis in the many works and published
    papers of Judea Pearl who is recognised as a global authority on causal inference.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 本文提出的方法基于Judea Pearl的多项工作和已发表的论文，他被公认为因果推断领域的全球权威。
- en: In “Causal Inference in Statistics” (Pearl, Glymour, Jewell, 2019) Pearl explores
    the idea of using d-separation to identify missing links but it is a partial example
    and does not provide enough explanation to implement an algorithm in Python.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在《统计中的因果推断》（Pearl, Glymour, Jewell, 2019）中，Pearl探讨了使用d-分离来识别缺失链接的想法，但这是一个部分示例，未提供足够的解释来实现Python中的算法。
- en: '[](https://www.amazon.co.uk/Causal-Inference-Statistics-Judea-Pearl/dp/1119186846/ref=asc_df_1119186846&amp;mcid=19d06a4904073cf985acfb21fe45ebbb?tag=grahamharri04-21&amp%3BlinkCode=df0&amp%3Bhvadid=80676723059500&amp%3Bhvnetw=o&amp%3Bhvqmt=e&amp%3Bhvbmt=be&amp%3Bhvdev=c&amp%3Bhvlocint=&amp%3Bhvlocphy=&amp%3Bhvtargid=pla-4584276297438266&amp%3Bpsc=1&_encoding=UTF8&linkCode=ur2&linkId=7f120490d4ac7cabf046e73a4cd1c14b&camp=1634&creative=6738&source=post_page-----dfdd26c29739--------------------------------)
    [## Causal Inference in Statistics: A Primer'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://www.amazon.co.uk/Causal-Inference-Statistics-Judea-Pearl/dp/1119186846/ref=asc_df_1119186846&amp;mcid=19d06a4904073cf985acfb21fe45ebbb?tag=grahamharri04-21&amp%3BlinkCode=df0&amp%3Bhvadid=80676723059500&amp%3Bhvnetw=o&amp%3Bhvqmt=e&amp%3Bhvbmt=be&amp%3Bhvdev=c&amp%3Bhvlocint=&amp%3Bhvlocphy=&amp%3Bhvtargid=pla-4584276297438266&amp%3Bpsc=1&_encoding=UTF8&linkCode=ur2&linkId=7f120490d4ac7cabf046e73a4cd1c14b&camp=1634&creative=6738&source=post_page-----dfdd26c29739--------------------------------)
    [## 统计中的因果推断：入门]'
- en: 'Buy Causal Inference in Statistics: A Primer 1 by Pearl, Judea, Glymour, Madelyn,
    Jewell, Nicholas P. (ISBN…'
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 购买《统计中的因果推断：入门》1 由Pearl, Judea, Glymour, Madelyn, Jewell, Nicholas P.（ISBN…）
- en: www.amazon.co.uk](https://www.amazon.co.uk/Causal-Inference-Statistics-Judea-Pearl/dp/1119186846/ref=asc_df_1119186846&amp;mcid=19d06a4904073cf985acfb21fe45ebbb?tag=grahamharri04-21&amp%3BlinkCode=df0&amp%3Bhvadid=80676723059500&amp%3Bhvnetw=o&amp%3Bhvqmt=e&amp%3Bhvbmt=be&amp%3Bhvdev=c&amp%3Bhvlocint=&amp%3Bhvlocphy=&amp%3Bhvtargid=pla-4584276297438266&amp%3Bpsc=1&_encoding=UTF8&linkCode=ur2&linkId=7f120490d4ac7cabf046e73a4cd1c14b&camp=1634&creative=6738&source=post_page-----dfdd26c29739--------------------------------)
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '[www.amazon.co.uk](https://www.amazon.co.uk/Causal-Inference-Statistics-Judea-Pearl/dp/1119186846/ref=asc_df_1119186846&amp;mcid=19d06a4904073cf985acfb21fe45ebbb?tag=grahamharri04-21&amp%3BlinkCode=df0&amp%3Bhvadid=80676723059500&amp%3Bhvnetw=o&amp%3Bhvqmt=e&amp%3Bhvbmt=be&amp%3Bhvdev=c&amp%3Bhvlocint=&amp%3Bhvlocphy=&amp%3Bhvtargid=pla-4584276297438266&amp%3Bpsc=1&_encoding=UTF8&linkCode=ur2&linkId=7f120490d4ac7cabf046e73a4cd1c14b&camp=1634&creative=6738&source=post_page-----dfdd26c29739--------------------------------)'
- en: 'Note: the link above is an amazon affiliate link. If you use the link to purchase
    the book a small finders fee will be paid to the author of this article at no
    additional cost to the purchaser.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：上面的链接是亚马逊的附属链接。如果你通过这个链接购买书籍，作者会获得小额的推荐费，而对购买者没有额外费用。
- en: The exploration below aims to provide sufficient explanation and examples such
    that a solution can be implemented in Python that will reliably identify causal
    links that are missing from the DAG but that exist in the data.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 以下探讨旨在提供足够的解释和示例，以便可以在Python中实现一个可靠识别DAG中缺失但数据中存在的因果链接的解决方案。
- en: This is the rule which must be implemented to reach that goal …
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这是实现目标的规则 …
- en: “Within a DAG any node N should be independent of its non-descendants given
    its parents”
  id: totrans-94
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “在DAG中，任何节点N在给定其父节点的情况下应与其非后代节点独立”
- en: (authors own words)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: （作者原话）
- en: That sounds complicated and it is difficult to understand in isolation but with
    examples it can be made clearer.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 听起来很复杂，单独理解确实困难，但通过示例可以使其更清晰。
- en: Every node in the DAG can be tested separately against that rule. Here is the
    rule applied to node “W” …
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: DAG中的每个节点都可以单独测试该规则。这里是应用于节点“W”的规则 …
- en: '![](../Images/ab78b611dc2fd225080859c530d02164.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ab78b611dc2fd225080859c530d02164.png)'
- en: Independence rule for node W — Image by Author
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 节点W的独立性规则 — 作者提供的图像
- en: … which can be read as — “W is independent of its non-descendants given (when
    conditioned on) its parents”.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: … 这可以理解为 — “W在给定（条件为）其父节点时与其非后代节点独立”。
- en: So what does this mean and how can it be applied to identify missing causal
    relationships in the DAG?
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 那么这是什么意思，以及如何应用它来识别 DAG 中缺失的因果关系呢？
- en: To start with we will need to fully understand what is meant by “parents” and
    what is meant by “non-descendants”.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要完全理解“父节点”是什么意思以及“非后代”是什么意思。
- en: 'To note: the following diagrams are coloured-coded as follows …'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：以下图示的颜色编码如下……
- en: 'Pink: The node of interest'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 粉色：感兴趣的节点
- en: 'Red: Parents'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 红色：父节点
- en: 'Green: Descendants'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 绿色：后代
- en: 'Yellow: Non-descendants'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 黄色：非后代
- en: 'Blue: All other nodes'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 蓝色：所有其他节点
- en: The parents of a node are easy to visualise; they are the nodes in the DAG that
    have a causal link with an arrow pointing into that node and we can visualise
    that by considering the charts representing the parents of node W and separately
    the parents of node X …
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 节点的父节点易于可视化；它们是 DAG 中有箭头指向该节点的因果链接的节点，我们可以通过考虑表示节点 W 的父节点和节点 X 的父节点的图表来可视化这一点……
- en: '![](../Images/f626729fd04a02e299cf0028c7a4d76b.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f626729fd04a02e299cf0028c7a4d76b.png)'
- en: Parents of node W and parents of node X — Image by Author
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 节点 W 的父节点和节点 X 的父节点 — 作者图片
- en: We can see that node W has a single parent — X and node X has two parents —
    Z1 and Z3 and we can also see that different nodes can have zero, 1 or more parents.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到节点 W 有一个父节点 — X，而节点 X 有两个父节点 — Z1 和 Z3，我们也可以看到不同的节点可以有零个、一个或多个父节点。
- en: Non-descendants are slightly harder to visualise as they are subtly different
    from ancestors. My definition of non-descendants of a node is as follows …
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 非后代略难以可视化，因为它们与祖先有细微的不同。我对节点的非后代的定义如下……
- en: “Non-descendants of a node are all nodes that are not descendants and also not
    direct parents”
  id: totrans-114
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “节点的非后代是所有不是后代且也不是直接父节点的节点”
- en: To illustrate this, let’s first visualise all of the descendants of node W,
    and separately node X …
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明这一点，让我们首先可视化节点 W 的所有后代，以及节点 X 的所有后代……
- en: '![](../Images/8c5b542eb9269198a2bfbfaea77b0edc.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8c5b542eb9269198a2bfbfaea77b0edc.png)'
- en: Non-descendants of node W and non-descendants of node X — Image by Author
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 节点 W 的非后代和节点 X 的非后代 — 作者图片
- en: And finally, here it is all together — a diagram for node W and a separate diagram
    for node X that highlights their parents in red and their non-descendants in yellow
    …
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，这里是整合在一起的 — 一个节点 W 的图示和一个节点 X 的单独图示，突出显示它们的父节点为红色，非后代为黄色……
- en: '![](../Images/12856406bc17871876347c9bff91f6f3.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/12856406bc17871876347c9bff91f6f3.png)'
- en: Parents and non-descendants of node “ and parents and non-descendants of node
    X — Image by Author
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 节点“的父节点和非后代及节点 X 的父节点和非后代 — 作者图片
- en: You may be wondering two things at this point …
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 此时你可能在想两件事……
- en: '**Why do non-descendants exclude direct parents?**'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '**为什么非后代排除直接父节点？**'
- en: The answer to this question that this is a definition of “non-descendants” that
    broadly follows the solutions proposed in the books of Judea Pearl to discover
    missing links and if you include parents then the following formula will not work
    …
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 对这个问题的回答是，这是一种“非后代”的定义，广泛遵循了 Judea Pearl 的书中提出的发现缺失链接的解决方案。如果你包括父节点，那么以下公式将不起作用……
- en: '![](../Images/ab78b611dc2fd225080859c530d02164.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ab78b611dc2fd225080859c530d02164.png)'
- en: Formula for independence of node W — Image by Author
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 节点 W 的独立性公式 — 作者图片
- en: … because the parents would appear on both sides if the “given” symbol (|).
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: ……因为如果使用“给定”符号（|），父节点将出现在两侧。
- en: '**What does all this have to do with causal validation?**'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '**这些与因果验证有什么关系？**'
- en: The answer to this question will be revealed in the next section …
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题的答案将在下一节揭示……
- en: Using Independence, Non-Descendants and Parents to Identify Missing Links in
    the DAG
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用独立性、非后代和父节点来识别 DAG 中缺失的链接
- en: So far we have defined what independence is i.e. if A is independent of B then
    changing the value of A has no effect on B. We have also explored and understood
    what is meant by “parents” and “non-descendants” and we have a formula inferred
    and consolidated from the literature that can identify missing links (𝑁 ⫫ 𝑛𝑜𝑛−𝑑𝑒𝑠𝑐𝑒𝑛𝑑𝑎𝑛𝑡𝑠
    | 𝑝𝑎𝑟𝑒𝑛𝑡𝑠).
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经定义了什么是独立性，即如果 A 对 B 是独立的，那么改变 A 的值对 B 没有影响。我们还探讨和理解了“父节点”和“非后代”的含义，并且我们从文献中推导和整合了一个可以识别缺失链接的公式（𝑁
    ⫫ 𝑛𝑜𝑛−𝑑𝑒𝑠𝑐𝑒𝑛𝑑𝑎𝑛𝑡𝑠 | 𝑝𝑎𝑟𝑒𝑛𝑡𝑠）。
- en: All that remains now is to put it all together — simple! Well maybe not simple,
    so let’s start by re-visiting the final diagram for node W and adding some additional
    paths …
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 现在只剩下把所有这些整合在一起 — 简单！好吧，也许不简单，所以让我们重新查看节点 W 的最终图示并添加一些额外的路径……
- en: '![](../Images/20efb622c05f51b47806f39cb0b6cc39.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/20efb622c05f51b47806f39cb0b6cc39.png)'
- en: DAG highlighting possible missing paths from the non-descendants of node W to
    node W — Image by Author
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: DAG 强调了节点 W 的非后代到节点 W 的可能缺失路径 — 图片由作者提供
- en: The bright pink paths between nodes Z1, Z3, Z2 and Y should not exist in the
    data because they do not exist in the DAG. It therefore follows that if any of
    these dependencies can be detected in the data then the DAG must be wrong and
    not only that, we will know exactly where it is wrong! A missing link on the DAG
    will have been identified rendering the current DAG invalid which can then be
    corrected by adding the missing link back in.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 节点 Z1、Z3、Z2 和 Y 之间的亮粉色路径在数据中不应该存在，因为它们在 DAG 中不存在。因此，如果在数据中检测到这些依赖关系，则 DAG 必定是错误的，不仅如此，我们将确切知道哪里出错了！一个在
    DAG 上缺失的链接将被识别，使当前 DAG 无效，然后可以通过添加缺失的链接来修正。
- en: This is an amazing possibility! Let’s start by looking at this expressed as
    a mathematical formula for node W …
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个令人惊叹的可能性！让我们先从将其表示为节点 W 的数学公式开始……
- en: '![](../Images/356eee060db8a7bb6ff90f51efd11027.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/356eee060db8a7bb6ff90f51efd11027.png)'
- en: Formula for the independence of Node W in the DAG and in the data — Image by
    Author
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 DAG 中节点 W 的独立性的公式和数据中的独立性 — 图片由作者提供
- en: It looks scary, but all it is saying is that if W is independent of Z1, Z2 and
    Z3 given X in the graph (DAG) then W should be independent of Z1, Z2 and Z3 given
    X in the data as well.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 这看起来很吓人，但它只是说如果在图（DAG）中 W 在给定 X 的情况下独立于 Z1、Z2 和 Z3，那么在数据中 W 也应该在给定 X 的情况下独立于
    Z1、Z2 和 Z3。
- en: If you would like a refresher on what “given” means in the context of conditioning
    in a DAG, this article provides an in-depth, step-by-step explanation …
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要复习在 DAG 中条件下的“给定”是什么意思，这篇文章提供了深入的逐步解释……
- en: '[](/unlock-the-secrets-of-causal-inference-with-a-master-class-in-directed-acyclic-graphs-f2d3b40738e?source=post_page-----dfdd26c29739--------------------------------)
    [## Unlock the Secrets of Causal Inference with a Master Class in Directed Acyclic
    Graphs'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/unlock-the-secrets-of-causal-inference-with-a-master-class-in-directed-acyclic-graphs-f2d3b40738e?source=post_page-----dfdd26c29739--------------------------------)
    [## 解锁有向无环图中的因果推断秘密的精英课程'
- en: A step-by-step explanation of Directed Acyclic Graphs from the basics through
    to more advanced aspects
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从基础到更高级的方面，逐步解释有向无环图
- en: towardsdatascience.com](/unlock-the-secrets-of-causal-inference-with-a-master-class-in-directed-acyclic-graphs-f2d3b40738e?source=post_page-----dfdd26c29739--------------------------------)
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/unlock-the-secrets-of-causal-inference-with-a-master-class-in-directed-acyclic-graphs-f2d3b40738e?source=post_page-----dfdd26c29739--------------------------------)
- en: As it turns out, it is relatively easy to run this test and to see if it is
    true (i.e. does the data matches the DAG or not). Let’s have a go …
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 结果发现，运行这个测试并查看其是否成立（即数据是否与 DAG 匹配）相对容易。让我们试试……
- en: To implement the test for W on the right hand side of the formula we can perform
    a regression on all 4 variables on the left hand side — Z1, Z2, Z3 and X. Some
    of the text books and sources talk about Z1, Z2 and Z3 “vanishing”.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在公式右侧对 W 进行测试，我们可以对左侧的所有 4 个变量进行回归 — Z1、Z2、Z3 和 X。一些教科书和来源提到 Z1、Z2 和 Z3 的“消失”。
- en: What this means is that if the regression is performed on the parent and non-descendant
    variables then all the non-descendants should have either a zero co-efficient
    or one that is close to zero so let’s start by visualising these relationships
    in the data …
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着如果在父变量和非后代变量上进行回归，那么所有非后代变量的系数应该为零或接近零，因此让我们从可视化这些数据关系开始……
- en: '![](../Images/683904ed56e4a2a52b7abbd6374ad575.png)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/683904ed56e4a2a52b7abbd6374ad575.png)'
- en: Graphical representation of the Coefficients of X, Z1, Z2 and Z3 when regressed
    against W — Image by Author
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 回归 W 时 X、Z1、Z2 和 Z3 的系数的图形表示 — 图片由作者提供
- en: We can see from this visualisation that Z1, Z2 and Z3 do indeed have a flat
    (or “vanishing”) co-efficient. If we represent the relationships mathematically
    they look like this …
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个可视化中我们可以看到 Z1、Z2 和 Z3 确实有一个平坦（或“消失”）的系数。如果我们用数学表示这些关系，它们看起来像这样……
- en: '![](../Images/611e5ba961baaeb4f2d2887583a482a5.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/611e5ba961baaeb4f2d2887583a482a5.png)'
- en: Mathematical representation of the Coefficients of X, Z1, Z2 and Z3 when regressed
    against W — Image by Author
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 回归 W 时 X、Z1、Z2 和 Z3 的系数的数学表示 — 图片由作者提供
- en: This is all looking good so far, so how can we implement this test and extract
    the results in Python code using an ordinary least squares (OLS) regression?
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止一切看起来都不错，那么我们如何在Python代码中使用普通最小二乘（OLS）回归来实现这一测试并提取结果？
- en: Here is the source code that does exactly that using the synthetic dataset from
    earlier in the article …
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是使用本文早些时候的合成数据集来完成这一点的源代码……
- en: '![](../Images/dd91e49cea4c11ff495b8e9860f53343.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dd91e49cea4c11ff495b8e9860f53343.png)'
- en: OLS results summary — Image by Author
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: OLS结果汇总 — 作者提供的图像
- en: The key aspects are the `coef` column (co-efficient or slope) and the `P>|t|`
    column (p-value) in the penultimate table of the results summary.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 关键方面是结果汇总倒数第二个表格中的`coef`列（系数或斜率）和`P>|t|`列（p值）。
- en: We can easily see that the coefficients (or slopes in the graph) are small but
    not zero (i.e. completely flat) for Z1, Z2 and Z3 so how can we reach a conclusion
    that they are “vanishing”?
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以很容易地看到Z1、Z2和Z3的系数（或图中的斜率）很小但不为零（即完全平坦），那么我们如何得出它们是“消失”的结论？
- en: As it turns out there is no definition for a “vanishing” co-efficient in any
    of the texts or articles I have read so I have come up with my own method based
    on trial-and-error and a lot of testing …
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 事实证明，在我阅读的所有文本或文章中，没有关于“消失”系数的定义，因此我基于试验和大量测试提出了自己的方法……
- en: '[PRE0]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The test I have chosen based on many hours of testing is a combination of looking
    at both the p-value and the coefficient in the OLS results summary.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 我选择的测试是基于多小时的测试结果，是同时查看OLS结果汇总中的p值和系数的组合。
- en: In theory the p-value should be enough on its own. For each variable there is
    a null hypothesis that there is no relationship between the independent variable
    (say Z1) and the dependent variable (W).
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 理论上，p值本身应该足够。对于每个变量，有一个原假设，即独立变量（例如Z1）与因变量（W）之间没有关系。
- en: If the p-value is less than the alpha value (usually 0.05 is chosen) then the
    null hypothesis is rejected and the conclusion is that there is a relationship.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 如果p值小于α值（通常选择0.05），则拒绝原假设，结论是存在某种关系。
- en: If we look at the results for variable Z1 we can see that the p-value is 0.473
    which is much higher than 0.05 so we cannot reject the null hypothesis and the
    conclusion is that there is no relationship between Z1 and X. This also holds
    for Z2 with a p-value of 0.176 and Z3 which has a p-value of 0.518\. X however
    has a p-value of 0.000 so the null hypothesis cannot be rejected and this all
    matches back to the graph of the slopes above.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们查看变量Z1的结果，可以看到p值为0.473，远高于0.05，因此我们不能拒绝原假设，结论是Z1与X之间没有关系。这同样适用于p值为0.176的Z2和p值为0.518的Z3。然而，X的p值为0.000，因此不能拒绝原假设，这一切与上面的斜率图一致。
- en: So in this case the independence of Z1, Z2 and Z3 from W and the dependence
    of X on W could all have been established by looking at the p-value in isolation
    however in my observations from extensive testing this is not always the case
    and the best results are obtained by defining a “vanishing” co-efficient that
    indicates independence as follows …
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在这种情况下，Z1、Z2和Z3与W的独立性以及X对W的依赖性可以通过仅查看p值来确定，但在我从广泛测试中观察到的情况是，情况并非总是如此，通过定义一个“消失”系数来指示独立性，可以获得最佳结果，如下所示……
- en: “For each variable if the p-value is greater than 0.05 and the co-efficient
    is less than or equal to 1 then that variable is independent (or “vanishing”)”
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: “对于每个变量，如果p值大于0.05且系数小于或等于1，那么该变量是独立的（或称为‘消失’）”
- en: I have found that if the co-efficient checked is performed in addition to the
    p-value check that the accuracy over a large number of randomly chosen tests increases
    significantly, hence this is the definition I have developed and chosen to implement
    in Python code to perform the check as accurately as possible.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 我发现如果在进行p值检验的同时检查系数，那么在大量随机选择的测试中，准确性会显著提高，因此这是我开发并选择在Python代码中实现的定义，以尽可能准确地执行检验。
- en: Identifying a Missing Causal Link in an Invalid DAG
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 识别无效DAG中的缺失因果链接
- en: At this point we have considered a DAG and a dataset knowing that the DAG was
    an accurate representation of the causal relationships in the data because the
    author created the dataset to reflect the DAG and not the other way around (which
    is the way it works in the real world).
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，我们考虑了一个DAG和一个数据集，知道DAG是数据因果关系的准确表示，因为作者创建数据集以反映DAG，而不是反过来（这在现实世界中是实际情况）。
- en: A method has been proposed for testing the validity of a DAG against a set of
    data that involves testing the independence of non-descendants for each node in
    the DAG and if independence cannot be identified to assume that a link is missing.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 已提出一种方法来测试DAG相对于一组数据的有效性，该方法涉及测试DAG中每个节点的非后代的独立性，如果不能确定独立性，则假定存在缺失链接。
- en: That method has been implemented in Python and tested against a case where the
    DAG matches the data and it has proved that the DAG is valid.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 该方法已经在Python中实现，并在DAG与数据匹配的情况下进行了测试，证明了DAG是有效的。
- en: This is just the start though. Testing a matching DAG for validity is one thing
    but the more important case is — where the DAG is invalid and has missing links
    that DO exist in the dataset, will this method detect them?
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 但这只是开始。测试匹配DAG的有效性是一回事，更重要的是 — 当DAG无效且存在数据集中确实存在的缺失链接时，这种方法能否检测到这些链接？
- en: Consider this variation on our DAG …
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑一下我们DAG的这个变体……
- en: '![](../Images/a9f9b3e4a9e182ebda4165ee712f8c82.png)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a9f9b3e4a9e182ebda4165ee712f8c82.png)'
- en: A variation on the DAG with an additional link from node Z1 to node W — Image
    by Author
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 带有从节点Z1到节点W附加链接的DAG变体 — 图片由作者提供
- en: A new causal link has been added between node Z1 and node W and here is a new
    synthetic dataset that includes all of the causal relationship including the new
    one …
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在节点Z1和节点W之间添加了一个新的因果链接，这里是一个包含所有因果关系（包括新关系）的新的合成数据集……
- en: '![](../Images/aa5fda082cddf2f58f5a1bccdef02c00.png)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/aa5fda082cddf2f58f5a1bccdef02c00.png)'
- en: New dataset including the new link from Z1 to W — Image by Author
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 包含从Z1到W的新链接的新数据集 — 图片由作者提供
- en: '![](../Images/3b212efabdb548c60ec850ca5813a3c6.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3b212efabdb548c60ec850ca5813a3c6.png)'
- en: Structural equations that define and describe the new dataset — Image by Author
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 定义和描述新数据集的结构方程 — 图片由作者提供
- en: Now let’s assume that our fictitious domain experts were unaware of the causal
    link between Z1 and W and created this DAG based on their domain knowledge when
    consulted by the data scientists …
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 现在假设我们的虚构领域专家不知道Z1和W之间的因果链接，并根据他们的领域知识创建了这个DAG，而这些知识是数据科学家咨询他们时提供的……
- en: '![](../Images/8b1ef295b5473bf02b4710d401015d1c.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8b1ef295b5473bf02b4710d401015d1c.png)'
- en: DAG containing an error (the new link is missing) — Image by Author
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 包含错误的DAG（缺少新链接） — 图片由作者提供
- en: At this point the proposed DAG does not match the dataset. The acid test now
    is to see if our method accurately detects the missing link.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，所提出的DAG与数据集不匹配。现在的关键测试是看我们的方法是否准确检测到缺失的链接。
- en: The chart below shows the results of the ordinary least squares regression from
    implementing the dependence test “W ⫫ Z1, Z2, Z3 | X” …
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的图表显示了从实施依赖性测试“W ⫫ Z1, Z2, Z3 | X”得到的普通最小二乘回归结果……
- en: '![](../Images/3f884933e19e0f13fe3ab801dac38993.png)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3f884933e19e0f13fe3ab801dac38993.png)'
- en: Coefficients of the new data (that contains the new link) — Image by Author
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 新数据的系数（包含新链接） — 图片由作者提供
- en: '[PRE1]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: When the causal relationship Z1 -> W exists in the data but not in the DAG it
    is correctly identified as missing from the DAG. Hence we know not only that the
    DAG is invalid but also how to fix it. Simply add (“Z1”, “W”) to the DAG as an
    additional edge and it becomes valid!
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 当数据中存在因果关系Z1 -> W但DAG中没有时，它被正确地识别为DAG中缺失。因此，我们不仅知道DAG无效，还知道如何修复它。只需将（“Z1”，“W”）作为附加边添加到DAG中，它就变得有效！
- en: When I first ran this test successfully I was staggered by the implications.
    I was no longer dependent (no pun intended!) on domain experts being infallible.
    If their were gaps in their knowledge or if they made some mistakes this validation
    technique could find causal links they had missed and produce a correct and valid
    DAG!
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 当我第一次成功运行这个测试时，我对其影响感到震惊。我不再依赖（无意冒犯！）领域专家的绝对可靠。如果他们的知识存在漏洞或犯了错误，这种验证技术可以发现他们遗漏的因果链接，并生成一个正确有效的DAG！
- en: At this point we have successfully tested a single node in a valid DAG against
    a dateset and we have successfully identified a missing link from a single node
    in an invalid DAG.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经成功测试了有效DAG中的单个节点，并成功识别了无效DAG中的缺失链接。
- en: The next step is to expand our single-node test to identify and execute all
    validation tests for an entire DAG …
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是将我们的单节点测试扩展到识别和执行整个DAG的所有验证测试……
- en: From Testing a Single Node to Validating and Entire DAG
  id: totrans-191
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从测试单个节点到验证整个DAG
- en: We now move from testing node “W” to validating the entire DAG and as it turns
    out this is very straight-forward. Simply iterate around every node executing
    this algorithm …
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在从测试节点“W”转向验证整个DAG，结果发现这非常简单。只需在每个节点周围迭代，执行这个算法……
- en: '![](../Images/074f0d4ed153fc4b32405114890ae368.png)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/074f0d4ed153fc4b32405114890ae368.png)'
- en: 'Mathematical representation of: for every node that node should be independent
    of its non-descendents given its parents — Image by Author'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 数学表示：对于每个节点，该节点在给定其父节点的情况下应该与其非后代独立 — 图像由作者提供
- en: For any validation failures add the identified missing link(s) to an overall
    list of missing links and the end result is an identification of all missing links
    in the DAG.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何验证失败，将识别出的缺失链接添加到整体缺失链接列表中，最终结果是识别DAG中的所有缺失链接。
- en: Note that if a node has no parents it should still be tested but if a node has
    no non-descendants it should not and cannot be tested.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果一个节点没有父节点，它仍然应该被测试，但如果一个节点没有非后代，它就不应该也无法被测试。
- en: Hence node Z3 is omitted from the tests below as it does not have any non-descendants
    (recalling that parents are excluded from non-descendants).
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，节点 Z3 被从下面的测试中省略，因为它没有任何非后代（回忆一下，父节点被排除在非后代之外）。
- en: The collection of validation tests required to test the entire DAG can be represented
    visually in the diagrams below (in each dag the node being tested is pink, its
    parents are red, its non-descendants are yellow and all remaining nodes are blue)
    …
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 测试整个DAG所需的验证测试集合可以在下面的图示中直观地表示（在每个DAG中，正在测试的节点为粉色，其父节点为红色，其非后代为黄色，所有剩余节点为蓝色）……
- en: '![](../Images/064d30c4245c129c23171a177d3dbd2b.png)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/064d30c4245c129c23171a177d3dbd2b.png)'
- en: Graphical representation of all tests required to fully validate the DAG for
    all missing links — Image by Author
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 图形表示所有测试所需的验证DAG以涵盖所有缺失链接 — 图像由作者提供
- en: Here are the tests represented in the equivalent mathematical notation …
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是以等效数学符号表示的测试……
- en: '![](../Images/40fe930f22cc7be93d358393bfeebff4.png)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/40fe930f22cc7be93d358393bfeebff4.png)'
- en: Mathematical representation of all tests required to fully validate the DAG
    for all missing links — Image by Author
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 数学表示所有测试所需的验证DAG以涵盖所有缺失链接 — 图像由作者提供
- en: If these 5 independence tests are executed against the data and the non-descendants
    “vanish” in each test then there is a good level of confidence that the DAG is
    a valid causal representation of the data and that there are no causal links missing
    from the DAG.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 如果对数据执行这5个独立性测试，并且在每个测试中非后代“消失”，那么可以有较高的信心认为DAG是数据的有效因果表示，并且DAG中没有缺失的因果链接。
- en: However, there is one more optimisation and improvement that can be made. The
    available texts, notably the Pearlean literature — for example “Causal Inference
    in Statistics” (Pearl, Glymour, Jewell, 2019) — describe a smaller set of tests
    than those represented above although I have never managed to find an explanation
    as to how they have been minimised.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，还有一种优化和改进可以进行。现有文献，特别是Pearl的著作 — 例如《统计学中的因果推断》（Pearl, Glymour, Jewell, 2019）—
    描述了一组比上述表示的测试要小的测试集，尽管我从未找到关于如何进行最小化的解释。
- en: Further research and trial-and-error have led to the discovery that some independence
    tests are equivalent, for example …
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 进一步的研究和反复试验发现，一些独立性测试是等效的，例如……
- en: '![](../Images/6f0fdf8a6ed895b783722cc5934a2bca.png)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6f0fdf8a6ed895b783722cc5934a2bca.png)'
- en: Identifying equivalent tests — Image by Author
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 确定等效测试 — 图像由作者提供
- en: This means that in test A ⫫ B | P1, P2, … , Pn is equivalent to B ⫫ A | P1,
    P2, … , Pn and one of them can be dropped as there is no point testing for exactly
    the same thing twice.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着在测试 A ⫫ B | P1, P2, … , Pn 与 B ⫫ A | P1, P2, … , Pn 等效，并且其中一个可以被省略，因为没有必要重复测试完全相同的内容。
- en: It therefore follows that the optimised tests for proving or disproving the
    validity of our example DAG are as follows …
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，优化后的测试用于证明或反驳我们示例DAG的有效性如下……
- en: '![](../Images/b7d40e034c015e5d1ff7d908063cf95e.png)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b7d40e034c015e5d1ff7d908063cf95e.png)'
- en: Optimised missing link tests for our DAG with equivalent tests removed — Image
    by Author
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 针对我们的DAG的优化缺失链接测试，去除了等效测试 — 图像由作者提供
- en: i.e. Z2 ⫫ Z1 has been removed because it is equivalent to Z1 ⫫ Z2 and tests
    do not need to be repeated.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 即 Z2 ⫫ Z1 已被移除，因为它等同于 Z1 ⫫ Z2，测试不需要重复进行。
- en: Let’s finish this section off by taking a look at the graphs that are produced
    when implementing the OLS regression test for each of our 4 independence statements
    …
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过查看实施 OLS 回归测试时生成的图表来结束本节……
- en: '![](../Images/03b976f44ea940797193da83880198d8.png)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/03b976f44ea940797193da83880198d8.png)'
- en: Visualising the coefficients for all 4 missing link tests for the DAG — Image
    by Author
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化所有 4 个缺失链接测试的系数 — 图片由作者提供
- en: This result is exactly what we were hoping for! For each node being tested the
    graph shows that the coefficients for the non-descendants are very small i.e.
    they are vanishing i.e. they are independent i.e. there are no missing links.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 这个结果正是我们所期望的！对于每个测试的节点，图表显示非后代的系数非常小，即它们正在消失，即它们是独立的，即没有缺失的链接。
- en: The obvious next question to ask is “just how reliable is this technique and
    can it always be relied on to identify missing causal links and correct an invalid
    DAG?”
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个明显的问题是“这种技术的可靠性如何？它是否总能被依赖于识别缺失的因果链接并纠正无效的 DAG？”
- en: This is a very important question to ask and answer, made doubly so because
    none of the literature (books, blogs and articles etc.) that I have read addresses
    this critical question. Where causal validation is explored at all it tends to
    be incomplete, poorly explained and with too much statistical jargon and not enough
    Python code, but crucially I have only ever found examples where the DAG and the
    data match with no exploration of what happens when they do not.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常重要的问题，需要问清楚并回答，因为我读过的文献（书籍、博客和文章等）都没有涉及这个关键问题。即使有探讨因果验证的内容，也往往是不完整、解释不充分，统计术语过多，Python
    代码不足，但关键的是我只找到 DAG 和数据匹配的例子，没有探讨它们不匹配时会发生什么。
- en: The following sections develop this thought beyond anything I have ever found
    in the literature using approaches that I have conceived of and experimented with
    in Python code to see how these algorithms perform in life-like scenarios …
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分将这一思想拓展到我在文献中未曾发现的领域，使用了我在 Python 代码中构思和实验的各种方法，以观察这些算法在现实场景中的表现……
- en: Testing the Proposed Algorithm to Destruction
  id: totrans-221
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 彻底测试提出的算法
- en: To test the algorithm proposed in this article to destruction, the following
    approach was taken …
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 为了彻底测试本文提出的算法，采取了以下方法……
- en: Identify every edge (causal relationship) in the dag
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确定 DAG 中的每条边（因果关系）
- en: Run 100 tests as follows …
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按如下方式运行 100 次测试……
- en: Generate a valid set of test data for the DAG.
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为 DAG 生成一组有效的测试数据。
- en: Pick one of the missing edges at random and delete it.
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随机挑选一条缺失的边并删除它。
- en: See if the proposed algorithm correctly identifies the missing edge.
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看提出的算法是否正确识别了缺失的边。
- en: In evaluating success two factors were considered …
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 在评估成功时考虑了两个因素……
- en: Did the proposed algorithm find the deleted / missing edge(s) exactly?
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提出的算法是否准确找到了删除/缺失的边？
- en: Did the algorithm find the deleted / missing edges but in addition to that identify
    additional missing edges in error?
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 算法是否找到了删除/缺失的边，同时还错误识别了其他缺失的边？
- en: The results were as follows …
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下……
- en: '![](../Images/8690de7bbfdfc172f1ded399957f8278.png)'
  id: totrans-232
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8690de7bbfdfc172f1ded399957f8278.png)'
- en: Visualising the testing of all possible combinations of a single missing link
    — Image by Author
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化单个缺失链接的所有可能组合的测试 — 图片由作者提供
- en: The missing edge is correctly identified in 100/100 tests but in 13 of those
    tests the algorithm also identifies some other edge(s) that are in fact not missing.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 缺失的边在 100/100 次测试中均被正确识别，但在其中 13 次测试中，算法还识别出一些实际上并不存在的其他边。
- en: The next obvious question is “what if two edges / causal links are missing?”
    …
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个明显的问题是“如果缺少两条边/因果链接会怎样？”……
- en: '![](../Images/d4fa9b472be259ec22d63d49403f399b.png)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d4fa9b472be259ec22d63d49403f399b.png)'
- en: Visualising the testing of all possible combinations of a two missing link s—
    Image by Author
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化所有可能组合的两个缺失链接的测试 — 图片由作者提供
- en: The accuracy drops when two edges are deleted. The algorithm correctly finds
    the two missing edges in 68/100 of tests but in 14 of those it over-identifies
    and finds some edges it thinks are missing which in fact are not.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 当删除两条边时，准确率下降。算法在 68/100 次测试中正确找到了缺失的两条边，但在其中 14 次测试中，它错误地识别了一些实际上并不存在的缺失边。
- en: Further tests can be carried out to evaluate the algorithm performance for a
    much more complicated, life-like DAG …
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 可以进一步测试以评估算法在更复杂、更现实的 DAG 中的性能……
- en: '![](../Images/1b0a9732ef8f01f31fea3336c84519d9.png)'
  id: totrans-240
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1b0a9732ef8f01f31fea3336c84519d9.png)'
- en: Visualising the testing of all possible combinations of a single missing link
    in a complex DAG — Image by Author
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化测试单个缺失链接所有可能组合的情况 — 作者提供的图像
- en: In this case the algorithm correctly identifies the missing causal link in 74/100
    tests including 18 tests where additional links are identified as missing that
    actually are not.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，算法在74/100的测试中正确识别了缺失的因果链接，其中包括18次测试中额外识别为缺失的链接，但实际上并不存在。
- en: To complete the testing, here is the test for a complex DAG with 2 valid links
    taken out …
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成测试，这里是针对一个去掉2个有效链接的复杂DAG的测试 …
- en: '![](../Images/03a64de8d88d9fdc694df8f9be7d4dfe.png)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/03a64de8d88d9fdc694df8f9be7d4dfe.png)'
- en: Visualising the testing of all possible combinations of two missing links in
    a complex DAG — Image by Author
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化测试所有可能的两个缺失链接组合的情况 — 作者提供的图像
- en: This time the accuracy starts to slip. The algorithm correctly identifies the
    missing causal links in 50/100 tests but that includes 20 where the algorithm
    incorrectly identified additional links that it thought were missing.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 这一次准确率开始下降。算法在50/100的测试中正确识别了缺失的因果链接，但其中包括20次测试中算法错误地识别了额外的链接以为它们是缺失的。
- en: 'Bonus Section: Optimising Missing Links'
  id: totrans-247
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 奖励部分：优化缺失链接
- en: You may have been wondering why the test results have included the number of
    tests where the identified missing links matched exactly with another figure quoted
    for the tests that over-identified i.e. the deleted link(s) were found but so
    were some others that were incorrectly identified.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会疑惑为什么测试结果包括了那些识别出的缺失链接与测试中提到的其他数字完全匹配的测试次数，即被删除的链接被发现了，但也有一些被错误识别的链接。
- en: The reason is that in the case of over-identification the links identified as
    missing that were not actually missing can be easily fixed.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 原因在于，在过度识别的情况下，识别为缺失的但实际上并不存在的链接可以很容易地被修正。
- en: In a recent article I explored the mirror image of the validation explained
    here which is where dependence is used to identify spurious links (as opposed
    to using independence to identify missing links).
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 在最近的一篇文章中，我探讨了这里解释的验证的镜像，即使用依赖性来识别伪链接（与使用独立性来识别缺失链接相对）。
- en: '[](/demystifying-dependence-and-why-it-is-important-in-causal-inference-and-causal-validation-4263b18d5f04?source=post_page-----dfdd26c29739--------------------------------)
    [## Demystifying Dependence and Why it is Important in Causal Inference and Causal
    Validation'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/demystifying-dependence-and-why-it-is-important-in-causal-inference-and-causal-validation-4263b18d5f04?source=post_page-----dfdd26c29739--------------------------------)
    [## 揭示依赖关系及其在因果推断和因果验证中的重要性]'
- en: A step-by-step guide in understanding the concept of dependence and how to apply
    it to validate directed acyclic graphs…
  id: totrans-252
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 逐步指南，帮助理解依赖关系的概念以及如何将其应用于验证有向无环图…
- en: towardsdatascience.com](/demystifying-dependence-and-why-it-is-important-in-causal-inference-and-causal-validation-4263b18d5f04?source=post_page-----dfdd26c29739--------------------------------)
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/demystifying-dependence-and-why-it-is-important-in-causal-inference-and-causal-validation-4263b18d5f04?source=post_page-----dfdd26c29739--------------------------------)
- en: The “spurious links” algorithm is amazingly accurate and identifies nearly all
    spurious links correctly, even where there are 2 or more and even in a complex
    DAG.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: “伪链接”算法非常准确，几乎能正确识别所有伪链接，即使在有两个或更多伪链接的复杂DAG中也能如此。
- en: That means that an algorithm that finds a missing link(s) but also over-identifies
    some that are not actually missing can be optimised and improved as follows …
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着，一个找到缺失链接但也错误识别了一些实际上并不存在的链接的算法，可以通过以下方式进行优化和改进 …
- en: Run the dependence / spurious link algorithm to identify and correct any genuine
    **spurious links**.
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行依赖性/伪链接算法，以识别并纠正任何真正的**伪链接**。
- en: Run the independence / missing link algorithm proposed in this article to identify
    and correct any **missing links**.
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行本文提出的独立性/缺失链接算法，以识别并纠正任何**缺失链接**。
- en: As step 2 may have over-identified, re-run the dependence / spurious link algorithm
    which will find and remove any links step 2 thought were missing but actually
    were not.
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于步骤2可能过度识别，再次运行依赖性/伪链接算法，这将找到并删除步骤2认为是缺失但实际上并不存在的任何链接。
- en: If this advanced algorithm were implemented it would increase the accuracy to
    the higher of the two numbers quoted for each test in the sections above, i.e.
    …
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 如果实现了这一高级算法，它将使每个测试中两个数字的较高值变为准确值，即 …
- en: '1 missing link in a simple DAG: 100% accuracy'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单DAG中的1个缺失链接：100%准确率
- en: '2 missing links in a simple DAG: 68% accuracy'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单DAG中的2个缺失链接：68%准确率
- en: '1 missing link in a complex DAG: 74% accuracy'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复杂 DAG 中的 1 个缺失链接：74% 准确率
- en: '2 missing links in a complex DAG: 50% accuracy'
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复杂 DAG 中的 2 个缺失链接：50% 准确率
- en: Whilst these results are not perfect they are certainly good enough to be extremely
    useful.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这些结果并不完美，但足够好，可以极其有用。
- en: It should also be noted that the algorithm proposed in this article has close
    to 100% accuracy when the DAG actually matches the data so in the case of a validation
    failure an alternative approach would be to modify the DAG through brute-force
    trial-and-error until the validation checks pass (or the errors are minimised).
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 还应注意，本文提出的算法在 DAG 实际与数据匹配时的准确率接近 100%，因此在验证失败的情况下，一种替代方法是通过强力的试错法修改 DAG 直到验证检查通过（或错误最小化）。
- en: These are complex techniques which will be fully explored in future articles
    but the theory is sound and it offers the tantalising potential to produce highly
    effective algorithms for implementing causal validation.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是复杂的技术，将在未来的文章中全面探讨，但理论是可靠的，并提供了实现因果验证的极具潜力的高效算法。
- en: Conclusion
  id: totrans-267
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Causal inference offers the promise of a new set of techniques to extend the
    organisational impact and outcomes offered by established machine learning.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 因果推断承诺提供一套新的技术，扩展已建立的机器学习所带来的组织影响力和成果。
- en: However, in order to start that causal journey the Directed Acyclic Graph (DAG)
    that captures the causal relationships must be constructed using domain expertise
    which can be flawed.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，为了开始这段因果之旅，必须使用领域专业知识构建捕捉因果关系的有向无环图（DAG），而这些专业知识可能存在缺陷。
- en: Unless the DAG accurately captures the causal relationships any subsequent analysis
    could contain errors but causal validation offers the potential to correct and
    fix inaccurate DAGs to ensure the conclusions of causal inference approaches are
    correct.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 除非 DAG 准确捕捉因果关系，否则任何后续分析可能包含错误，但因果验证提供了修正和纠正不准确 DAG 的潜力，以确保因果推断方法的结论是正确的。
- en: A previous article explored how to use dependence to identify and remove spurious
    causal links from the DAG whilst this article explored how to use independence
    to identify and add missing causal links.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的文章探讨了如何利用依赖关系来识别和去除 DAG 中的虚假因果链接，而这篇文章则探讨了如何利用独立性来识别和添加缺失的因果链接。
- en: Future articles will explore how to use v-structures to identify and correct
    reversed causal links (where the causal arrow is in the wrong direction) and also
    how to combine spurious, missing and reversed link tests into a coherent whole
    that offers the promise of highly effective causal validation algorithms leading
    to improved organisational impact and outcomes arising from the optimal application
    of causal inference techniques.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 未来的文章将探讨如何使用 v-结构来识别和修正反向因果链接（即因果箭头方向错误），以及如何将虚假、缺失和反向链接测试整合成一个一致的整体，这将有助于提供极具有效性的因果验证算法，从而提高组织影响力和成果，优化因果推断技术的应用。
- en: Connect and Get in Touch …
  id: totrans-273
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接并保持联系 …
- en: If you enjoyed this article, you can get unlimited access to thousands more
    by becoming a Medium member for just $5 a month by [clicking on my referral link](https://grahamharrison-86487.medium.com/membership)
    (I will receive a proportion of the fees if you sign up using this link at no
    extra cost to you).
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您喜欢这篇文章，您可以通过每月仅需 5 美元成为 Medium 会员，获取无限访问更多故事，您可以 [点击我的推荐链接](https://grahamharrison-86487.medium.com/membership)（如果您使用此链接注册，我将获得部分费用，您无需额外支付费用）。
- en: '[](https://grahamharrison-86487.medium.com/membership?source=post_page-----dfdd26c29739--------------------------------)
    [## Join Medium with my referral link - Graham Harrison'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://grahamharrison-86487.medium.com/membership?source=post_page-----dfdd26c29739--------------------------------)
    [## 通过我的推荐链接加入 Medium - Graham Harrison'
- en: As a Medium member, a portion of your membership fee goes to writers you read,
    and you get full access to every story…
  id: totrans-276
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 作为 Medium 会员，您的会员费用的一部分将用于支持您阅读的作者，您可以全面访问所有故事……
- en: grahamharrison-86487.medium.com](https://grahamharrison-86487.medium.com/membership?source=post_page-----dfdd26c29739--------------------------------)
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: grahamharrison-86487.medium.com](https://grahamharrison-86487.medium.com/membership?source=post_page-----dfdd26c29739--------------------------------)
- en: … or connect by …
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: …或通过以下方式连接 …
- en: '[Subscribing to a free e-mail whenever I publish a new story](https://grahamharrison-86487.medium.com/subscribe).'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '[每当我发布新故事时，订阅我的免费电子邮件](https://grahamharrison-86487.medium.com/subscribe)。'
- en: '[Taking a quick look at my previous articles](https://grahamharrison-86487.medium.com/).'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '[快速查看我之前的文章](https://grahamharrison-86487.medium.com/)。'
- en: '[Downloading my free strategic data-driven decision making framework](https://relentless-originator-3199.ck.page/5f4857fd12).'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '[下载我的免费战略数据驱动决策框架](https://relentless-originator-3199.ck.page/5f4857fd12)。'
- en: Visiting my data science website — [The Data Blog](https://www.the-data-blog.co.uk/).
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 访问我的数据科学网站 — [数据博客](https://www.the-data-blog.co.uk/)。
