- en: Improving Retrieval Performance in RAG Pipelines with Hybrid Search
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 RAG 管道中通过混合搜索提升检索性能
- en: 原文：[https://towardsdatascience.com/improving-retrieval-performance-in-rag-pipelines-with-hybrid-search-c75203c2f2f5?source=collection_archive---------1-----------------------#2023-11-28](https://towardsdatascience.com/improving-retrieval-performance-in-rag-pipelines-with-hybrid-search-c75203c2f2f5?source=collection_archive---------1-----------------------#2023-11-28)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/improving-retrieval-performance-in-rag-pipelines-with-hybrid-search-c75203c2f2f5?source=collection_archive---------1-----------------------#2023-11-28](https://towardsdatascience.com/improving-retrieval-performance-in-rag-pipelines-with-hybrid-search-c75203c2f2f5?source=collection_archive---------1-----------------------#2023-11-28)
- en: How to find more relevant search results by combining traditional keyword-based
    search with modern vector search
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何通过将传统的基于关键词的搜索与现代的向量搜索相结合来找到更相关的搜索结果
- en: '[](https://medium.com/@iamleonie?source=post_page-----c75203c2f2f5--------------------------------)[![Leonie
    Monigatti](../Images/4044b1685ada53a30160b03dc78f9626.png)](https://medium.com/@iamleonie?source=post_page-----c75203c2f2f5--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c75203c2f2f5--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c75203c2f2f5--------------------------------)
    [Leonie Monigatti](https://medium.com/@iamleonie?source=post_page-----c75203c2f2f5--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@iamleonie?source=post_page-----c75203c2f2f5--------------------------------)[![Leonie
    Monigatti](../Images/4044b1685ada53a30160b03dc78f9626.png)](https://medium.com/@iamleonie?source=post_page-----c75203c2f2f5--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c75203c2f2f5--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c75203c2f2f5--------------------------------)
    [Leonie Monigatti](https://medium.com/@iamleonie?source=post_page-----c75203c2f2f5--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F3a38da70d8dc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimproving-retrieval-performance-in-rag-pipelines-with-hybrid-search-c75203c2f2f5&user=Leonie+Monigatti&userId=3a38da70d8dc&source=post_page-3a38da70d8dc----c75203c2f2f5---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c75203c2f2f5--------------------------------)
    ·8 min read·Nov 28, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc75203c2f2f5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimproving-retrieval-performance-in-rag-pipelines-with-hybrid-search-c75203c2f2f5&user=Leonie+Monigatti&userId=3a38da70d8dc&source=-----c75203c2f2f5---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F3a38da70d8dc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimproving-retrieval-performance-in-rag-pipelines-with-hybrid-search-c75203c2f2f5&user=Leonie+Monigatti&userId=3a38da70d8dc&source=post_page-3a38da70d8dc----c75203c2f2f5---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c75203c2f2f5--------------------------------)
    · 8分钟阅读 · 2023年11月28日 [](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc75203c2f2f5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimproving-retrieval-performance-in-rag-pipelines-with-hybrid-search-c75203c2f2f5&user=Leonie+Monigatti&userId=3a38da70d8dc&source=-----c75203c2f2f5---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc75203c2f2f5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimproving-retrieval-performance-in-rag-pipelines-with-hybrid-search-c75203c2f2f5&source=-----c75203c2f2f5---------------------bookmark_footer-----------)![](../Images/3e36eecd3bc19f0e4e6666378bfedc71.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc75203c2f2f5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimproving-retrieval-performance-in-rag-pipelines-with-hybrid-search-c75203c2f2f5&source=-----c75203c2f2f5---------------------bookmark_footer-----------)![](../Images/3e36eecd3bc19f0e4e6666378bfedc71.png)'
- en: Search bar with hybrid search capabilities
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 具有混合搜索功能的搜索栏
- en: With the recent interest in [Retrieval-Augmented Generation](https://medium.com/p/4e9bd5f6a4f2)
    (RAG) pipelines, developers have started discussing challenges in building RAG
    pipelines with production-ready performance. Just like in many aspects of life,
    the Pareto Principle also comes into play with RAG pipelines, where achieving
    the initial 80% is relatively straightforward, but attaining the remaining 20%
    for production readiness proves challenging.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 随着对 [检索增强生成](https://medium.com/p/4e9bd5f6a4f2)（RAG）管道的兴趣增加，开发者们开始讨论在构建具有生产就绪性能的RAG管道时面临的挑战。正如生活中的许多方面一样，帕累托原则也在RAG管道中发挥作用，其中实现最初的80%相对简单，但要达到剩下的20%以实现生产就绪则证明具有挑战性。
- en: One commonly repeated theme is to improve the retrieval component of a RAG pipeline
    with hybrid search.
  id: totrans-10
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一个经常重复的主题是通过混合搜索来改善RAG管道的检索组件。
- en: Developers who have already gained experience building RAG pipelines have [started
    sharing their insights](https://medium.com/towards-data-science/the-untold-side-of-rag-addressing-its-challenges-in-domain-specific-searches-808956e3ecc8).
    One commonly repeated theme is to improve the retrieval component of a RAG pipeline
    with hybrid search.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 已经获得经验的开发者们 [开始分享他们的见解](https://medium.com/towards-data-science/the-untold-side-of-rag-addressing-its-challenges-in-domain-specific-searches-808956e3ecc8)。一个经常重复的主题是通过混合搜索来改善RAG管道的检索组件。
- en: This article introduces you to the concept of hybrid search, how it can help
    you improve your RAG pipeline performance by retrieving more relevant results,
    and when to use it.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本文介绍了混合搜索的概念，如何通过检索更相关的结果来提高你的RAG管道性能，以及何时使用它。
- en: '[What is Hybrid Search](#f7da)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[什么是混合搜索](#f7da)'
- en: '[How Does Hybrid Search Work?](#fd67)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[混合搜索如何工作？](#fd67)'
- en: '[How Can Hybrid Search Improve the Performance of Your RAG Pipeline?](#6b8c)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[混合搜索如何提高你RAG管道的性能？](#6b8c)'
- en: '[When Would You Use Hybrid Search?](#6244)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[你什么时候会使用混合搜索？](#6244)'
- en: '[Summary](#dec5)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[总结](#dec5)'
- en: What is Hybrid Search
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是混合搜索
- en: Hybrid search is a search technique that combines two or more search algorithms
    to improve the relevance of search results. Although it is not defined which algorithms
    are combined, hybrid search most commonly refers to the combination of traditional
    keyword-based search and modern vector search.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 混合搜索是一种结合两种或更多搜索算法的搜索技术，以提高搜索结果的相关性。尽管没有定义具体结合了哪些算法，但混合搜索最常指的是传统基于关键词的搜索与现代向量搜索的结合。
- en: 'Traditionally, keyword-based search was the obvious choice for search engines.
    But with the advent of Machine Learning (ML) algorithms, vector embeddings enabled
    a new search technique — called vector or semantic search — that allowed us to
    search across data semantically. However, both search techniques have essential
    tradeoffs to consider:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 传统上，基于关键词的搜索是搜索引擎的明显选择。然而，随着机器学习（ML）算法的出现，向量嵌入启用了一个新的搜索技术——称为向量或语义搜索——使我们能够在语义上进行数据搜索。然而，这两种搜索技术都有必须考虑的重要权衡：
- en: '**Keyword-based search:** While its exact keyword-matching capabilities are
    beneficial for specific terms, such as product names or industry jargon, it is
    sensitive to typos and synonyms, which lead it to miss important context.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于关键词的搜索：** 尽管其精确的关键词匹配能力对特定术语（如产品名称或行业术语）有益，但对拼写错误和同义词敏感，这会导致它遗漏重要的上下文。'
- en: '**Vector or semantic search:** While its semantic search capabilities allow
    multi-lingual and multi-modal search based on the data’s semantic meaning and
    make it robust to typos, it can miss essential keywords. Additionally, it depends
    on the quality of the generated vector embeddings and is sensitive to out-of-domain
    terms.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**向量或语义搜索：** 尽管它的语义搜索功能基于数据的语义意义进行多语言和多模态搜索，并使其对拼写错误具有鲁棒性，但可能会遗漏重要的关键词。此外，它依赖于生成的向量嵌入的质量，并对领域外的术语敏感。'
- en: Combining keyword-based and vector searches into a hybrid search allows you
    to leverage the advantages of both search techniques to improve search results'
    relevance, especially for text-search use cases.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 将基于关键词的搜索与向量搜索结合成混合搜索，使你能够利用这两种搜索技术的优点，从而提高搜索结果的相关性，特别是在文本搜索的使用场景中。
- en: For example, consider the search query “How to merge two Pandas DataFrames with
    `.concat()`?”. The keyword search would help find relevant results for the method
    `.concat()`. However, since the word “merge” has synonyms such as “combine”, “join”,
    and “concatenate”, it would be helpful if we could leverage the context awareness
    of semantic search (see more details in [When Would You Use Hybrid Search](#6244)).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，考虑搜索查询“如何使用`.concat()`合并两个Pandas DataFrames？”关键词搜索会帮助找到与方法`.concat()`相关的结果。然而，由于“merge”这个词有诸如“combine”、“join”和“concatenate”等同义词，如果我们能利用语义搜索的上下文感知能力，将会更有帮助（有关更多细节，请参见[何时使用混合搜索](#6244)）。
- en: If you are interested, you can play around with the different keyword-based,
    semantic, and hybrid search queries to search for movies in this live [demo](https://awesome-moviate.weaviate.io/)
    (its implementation is detailed in [this article](/recreating-andrej-karpathys-weekend-project-a-movie-search-engine-9b270d7a92e4)).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你感兴趣，可以在这个实时[演示](https://awesome-moviate.weaviate.io/)中尝试不同的基于关键词的、语义的和混合搜索查询（其实现细节见[这篇文章](/recreating-andrej-karpathys-weekend-project-a-movie-search-engine-9b270d7a92e4)）。
- en: How Does Hybrid Search Work?
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 混合搜索是如何工作的？
- en: Hybrid search combines keyword-based and vector search techniques by fusing
    their search results and reranking them.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 混合搜索通过融合关键词基础和向量搜索技术的搜索结果并对其进行重新排序来实现。
- en: Keyword-based search
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于关键词的搜索
- en: Keyword-based search in the context of hybrid search often uses a representation
    called sparse embeddings, which is why it is also referred to as sparse vector
    search. Sparse embeddings are vectors with mostly zero values with only a few
    non-zero values, as shown below.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在混合搜索的背景下，基于关键词的搜索通常使用一种称为稀疏嵌入的表示，这就是为什么它也被称为稀疏向量搜索。稀疏嵌入是大多数值为零且只有少数非零值的向量，如下所示。
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Sparse embeddings can be generated with different algorithms. The most commonly
    used algorithm for sparse embeddings is [BM25](https://en.wikipedia.org/wiki/Okapi_BM25)
    (Best match 25), which builds upon the TF-IDF (Term Frequency-Inverse Document
    Frequency) approach and refines it. In simple terms, BM25 emphasizes the importance
    of terms based on their frequency in a document relative to their frequency across
    all documents.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 稀疏嵌入可以通过不同的算法生成。生成稀疏嵌入的最常用算法是[BM25](https://en.wikipedia.org/wiki/Okapi_BM25)（最佳匹配25），它建立在TF-IDF（词频-逆文档频率）方法之上并对其进行了改进。简单来说，BM25根据词汇在文档中的频率相对于其在所有文档中的频率来强调术语的重要性。
- en: Vector search
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向量搜索
- en: Vector search is a modern search technique that has emerged with the advances
    in ML. Modern ML algorithms, such as [Transformers](https://huggingface.co/docs/transformers/index),
    can generate a numerical representation of data objects in various modalities
    (text, images, etc.) called vector embeddings.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 向量搜索是一种现代搜索技术，随着机器学习的进步而出现。现代机器学习算法，如[Transformers](https://huggingface.co/docs/transformers/index)，可以生成各种模态（文本、图像等）的数据对象的数值表示，称为向量嵌入。
- en: These vector embeddings are usually densely packed with information and mostly
    comprised of non-zero values (dense vectors), as shown below. This is why vector
    search is also known as dense vector search.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这些向量嵌入通常信息密集且大多由非零值组成（密集向量），如下所示。这也是为什么向量搜索也被称为密集向量搜索。
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: A search query is embedded into the same vector space as the data objects. Then,
    its vector embedding is used to calculate the closest data objects based on a
    specified similarity metric, such as cosine distance. The returned search results
    list the closest data objects ranked by their similarity to the search query.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索查询被嵌入到与数据对象相同的向量空间中。然后，其向量嵌入用于根据指定的相似性度量（例如余弦距离）计算最接近的数据对象。返回的搜索结果列出了与搜索查询相似度排名最高的数据对象。
- en: Fusion of keyword-based and vector search results
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关键词基础与向量搜索结果的融合
- en: Both the keyword-based search and the vector search return a separate set of
    results, usually a list of search results sorted by their calculated relevance.
    These separate sets of search results must be combined.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 基于关键词的搜索和向量搜索返回的是一组独立的结果，通常是按计算的相关性排序的搜索结果列表。这些独立的搜索结果集必须被合并。
- en: There are many different strategies to combine the ranked results of two lists
    into one single ranking, as outlined in a paper by [Benham and Culpepper](https://rodgerbenham.github.io/bc17-adcs.pdf)
    [1].
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多不同的策略可以将两个列表的排名结果合并为一个单一的排名，正如[Benham和Culpepper](https://rodgerbenham.github.io/bc17-adcs.pdf)
    [1]的论文中所述。
- en: Generally speaking, the search results are usually first **scored**. These scores
    can be calculated based on a specified metric, such as cosine distance, or simply
    just the rank in the search results list.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，搜索结果通常首先会被**评分**。这些分数可以基于指定的度量计算，如余弦距离，或者仅仅是搜索结果列表中的排名。
- en: Then, the calculated scores are weighted with a parameter `alpha`, which dictates
    each algorithm's weighting and impacts the results' re-ranking.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，计算出的分数会与参数`alpha`一起加权，这决定了每种算法的加权并影响结果的重新排名。
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Usually, `alpha` takes a value between 0 and 1, with
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，`alpha`的值在0到1之间，具体取值为
- en: '`alpha = 1`: Pure vector search'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`alpha = 1`：纯向量搜索'
- en: '`alpha = 0`: Pure keyword search'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`alpha = 0`：纯关键词搜索'
- en: Below, you can see a minimal example of the fusion between keyword and vector
    search with scoring based on the rank and an `alpha = 0.5`.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 下面，你可以看到一个基于排名和`alpha = 0.5`评分的关键词与向量搜索融合的最小示例。
- en: '![](../Images/bb4ab0d1d032859830964568f7f2fa1d.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bb4ab0d1d032859830964568f7f2fa1d.png)'
- en: Minimal example of how keyword and vector search results can be fused in hybrid
    search with scoring based on ranking and an alpha of 0.5 (Image by the author,
    inspired by [Hybrid search explained](https://weaviate.io/blog/hybrid-search-explained))
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个关于如何在混合搜索中融合关键词和向量搜索结果的最小示例，评分基于排名和`alpha = 0.5`（图像由作者提供，灵感来自[混合搜索解释](https://weaviate.io/blog/hybrid-search-explained)）。
- en: How Can Hybrid Search Improve the Performance of Your RAG Pipeline?
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 混合搜索如何提高你的RAG管道性能？
- en: A [RAG pipeline](https://medium.com/p/4e9bd5f6a4f2) has many knobs you can tune
    to improve its performance. One of these knobs is to improve the relevance of
    the retrieved context that is then fed into the LLM because if the retrieved context
    is not relevant for answering a given question, the LLM won’t be able to generate
    a relevant answer either.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 一个[RAG管道](https://medium.com/p/4e9bd5f6a4f2)有许多可以调整的参数来提高其性能。其中之一是提高检索到的上下文的相关性，这些上下文会被输入到LLM中，因为如果检索到的上下文与回答特定问题不相关，LLM也无法生成相关的答案。
- en: Depending on your context type and query, you have to determine which of the
    three search techniques is most beneficial for your RAG application. Thus, **the
    parameter** `**alpha**`**, which controls the weighting between keyword-based
    and semantic search, can be viewed as a hyperparameter that needs to be tuned.**
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你的上下文类型和查询，你需要确定三种搜索技术中哪一种对你的RAG应用最有利。因此，**参数** `**alpha**`**，用于控制关键词搜索和语义搜索之间的加权，可以视为需要调整的超参数。**
- en: 'In a common [RAG pipeline using LangChain](https://medium.com/p/4e9bd5f6a4f2),
    you would define the retriever component by setting the used `vectorstore` component
    as the retriever with the `.as_retriever()` method as follows:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个常见的[使用LangChain的RAG管道](https://medium.com/p/4e9bd5f6a4f2)中，你会通过以下方式设置检索器组件，将使用的`vectorstore`组件设置为检索器，方法是`.as_retriever()`：
- en: '[PRE3]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'However, this method only enables semantic search. If you want to enable hybrid
    search in LangChain, you will need to define a specific `[retriever](https://python.langchain.com/docs/integrations/retrievers)`
    [component](https://python.langchain.com/docs/integrations/retrievers) with hybrid
    search capabilities, such as the `[WeaviateHybridSearchRetriever](https://python.langchain.com/docs/integrations/retrievers)`:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这种方法只启用了语义搜索。如果你想在LangChain中启用混合搜索，你需要定义一个具有混合搜索功能的特定`[retriever](https://python.langchain.com/docs/integrations/retrievers)`
    [组件](https://python.langchain.com/docs/integrations/retrievers)，例如`[WeaviateHybridSearchRetriever](https://python.langchain.com/docs/integrations/retrievers)`：
- en: '[PRE4]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The rest of the vanilla [RAG pipeline](https://medium.com/p/4e9bd5f6a4f2) will
    stay the same.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 其余的[标准RAG管道](https://medium.com/p/4e9bd5f6a4f2)将保持不变。
- en: This small code change allows you to experiment with different weighting between
    keyword-based and vector searches. Note that setting `alpha = 1` equals a fully
    semantic search as is the equivalent of defining the retriever from the `vectorstore`
    component directly (`retriever = vectorstore.as_retriever()`).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这个小的代码更改允许你在关键词搜索和向量搜索之间尝试不同的加权。注意，设置`alpha = 1`等于完全的语义搜索，相当于直接从`vectorstore`组件定义检索器（`retriever
    = vectorstore.as_retriever()`）。
- en: When Would You Use Hybrid Search (Hybrid Search Use Cases)
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你何时会使用混合搜索（混合搜索用例）
- en: Hybrid search is ideal for use cases where you want to enable semantic search
    capabilities for a more human-like search experience but also require exact phrase
    matching for specific terms, such as product names or serial numbers.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 混合搜索非常适用于需要启用语义搜索功能以获得更人性化的搜索体验，但也需要对特定术语（如产品名称或序列号）进行精确匹配的用例。
- en: An excellent example is the platform Stack Overflow, which has recently extended
    its search capabilities with semantic search by using hybrid search.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 一个很好的例子是平台 Stack Overflow，它最近通过使用混合搜索扩展了其搜索功能。
- en: '[](https://stackoverflow.blog/2023/07/31/ask-like-a-human-implementing-semantic-search-on-stack-overflow/?source=post_page-----c75203c2f2f5--------------------------------)
    [## Ask like a human: Implementing semantic search on Stack Overflow'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 像人一样提问：在 Stack Overflow 上实现语义搜索](https://stackoverflow.blog/2023/07/31/ask-like-a-human-implementing-semantic-search-on-stack-overflow/?source=post_page-----c75203c2f2f5--------------------------------)'
- en: Semantic search allows users to search using natural language instead of a rigid
    syntax of keyword manipulation. Search…
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 语义搜索允许用户使用自然语言进行搜索，而不是依赖于关键字操作的僵化语法。搜索……
- en: stackoverflow.blog](https://stackoverflow.blog/2023/07/31/ask-like-a-human-implementing-semantic-search-on-stack-overflow/?source=post_page-----c75203c2f2f5--------------------------------)
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '[stackoverflow.blog](https://stackoverflow.blog/2023/07/31/ask-like-a-human-implementing-semantic-search-on-stack-overflow/?source=post_page-----c75203c2f2f5--------------------------------)'
- en: Initially, Stack Overflow used TF-IDF to match keywords to documents [2]. However,
    describing the coding problem you are trying to solve can be difficult. It may
    lead to different results based on the words you use to describe your problem
    (e.g., combining two Pandas DataFrames can be done in different methods such as
    merging, joining, and concatenating). Thus, a more context-aware search method,
    such as semantic search, would be more beneficial for these cases.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 最初，Stack Overflow 使用 TF-IDF 将关键字匹配到文档中[2]。然而，描述你试图解决的编码问题可能会很困难。这可能导致基于你用来描述问题的词语不同而得到不同的结果（例如，组合两个
    Pandas DataFrames 可以通过不同的方法实现，如合并、连接和拼接）。因此，更加上下文感知的搜索方法，如语义搜索，将对这些案例更有益。
- en: However, on the other hand, a common use case of Stack Overflow is to copy-paste
    error messages. For this case, exact keyword matching is the preferred search
    method. Also, you will want exact keyword-matching capabilities for method and
    argument names (e.g., `.read_csv()` in Pandas).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，另一方面，Stack Overflow 的一个常见用例是复制粘贴错误信息。对于这种情况，精确的关键字匹配是首选的搜索方法。此外，你还需要精确的关键字匹配能力来处理方法和参数名称（例如，Pandas
    中的 `.read_csv()`）。
- en: As you can guess, many similar real-world use cases benefit from context-aware
    semantic searches but still rely on exact keyword matching. These use cases can
    strongly benefit from implementing a hybrid search retriever component.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所猜测的，许多类似的现实世界使用案例受益于上下文感知的语义搜索，但仍然依赖于精确的关键字匹配。这些使用案例可以通过实现混合搜索检索器组件得到显著的提升。
- en: Summary
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: This article introduced the context of hybrid search as a combination of keyword-based
    and vector searches. Hybrid search merges the search results of the separate search
    algorithms and re-ranks the search results accordingly.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这篇文章介绍了混合搜索的背景，作为基于关键字搜索和向量搜索的组合。混合搜索将单独搜索算法的搜索结果合并并相应地重新排序搜索结果。
- en: In hybrid search, the parameter `alpha` controls the weighting between keyword-based
    and semantic searches. This parameter `alpha` can be viewed as a hyperparameter
    to tune in RAG pipelines to improve the accuracy of search results.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在混合搜索中，参数 `alpha` 控制基于关键字的搜索和语义搜索之间的加权。这个参数 `alpha` 可以视为 RAG 管道中的一个超参数，用于调节以提高搜索结果的准确性。
- en: Using the Stack Overflow [2] case study, we showcased how hybrid search can
    be useful for use cases where semantic search can improve the search experience.
    However, exact keyword matching is still important when specific terms are frequent.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Stack Overflow [2] 案例研究，我们展示了混合搜索如何对语义搜索可以改善搜索体验的使用案例有帮助。然而，当特定术语频繁出现时，精确的关键字匹配仍然很重要。
- en: Enjoyed This Story?
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 享受这个故事吗？
- en: '[*Subscribe for free*](https://medium.com/subscribe/@iamleonie) *to get notified
    when I publish a new story.*'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '[*免费订阅*](https://medium.com/subscribe/@iamleonie) *以便在我发布新故事时获得通知。*'
- en: '[](https://medium.com/@iamleonie/subscribe?source=post_page-----c75203c2f2f5--------------------------------)
    [## Get an email whenever Leonie Monigatti publishes.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 订阅以便每当 Leonie Monigatti 发布内容时，你会收到电子邮件。](https://medium.com/@iamleonie/subscribe?source=post_page-----c75203c2f2f5--------------------------------)'
- en: Get an email whenever Leonie Monigatti publishes. By signing up, you will create
    a Medium account if you don’t already…
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 订阅以便每当 Leonie Monigatti 发布内容时，你会收到电子邮件。通过注册，如果你还没有 Medium 账户，将会创建一个 Medium 账户……
- en: medium.com](https://medium.com/@iamleonie/subscribe?source=post_page-----c75203c2f2f5--------------------------------)
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '[medium.com](https://medium.com/@iamleonie/subscribe?source=post_page-----c75203c2f2f5--------------------------------)'
- en: '*Find me on* [*LinkedIn*](https://www.linkedin.com/in/804250ab/),[*Twitter*](https://twitter.com/helloiamleonie)*,
    and* [*Kaggle*](https://www.kaggle.com/iamleonie)*!*'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '*在* [*LinkedIn*](https://www.linkedin.com/in/804250ab/)，[*Twitter*](https://twitter.com/helloiamleonie)*和*
    [*Kaggle*](https://www.kaggle.com/iamleonie)*上找到我！*'
- en: Disclaimer
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 免责声明
- en: I am a Developer Advocate at Weaviate, an open source vector database, at the
    time of this writing.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，我是Weaviate的开发者倡导者，Weaviate是一个开源向量数据库。
- en: References
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: Literature
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文献
- en: '[1] Benham, R., & Culpepper, J. S. (2017). [Risk-reward trade-offs in rank
    fusion](https://rodgerbenham.github.io/bc17-adcs.pdf). In *Proceedings of the
    22nd Australasian Document Computing Symposium* (pp. 1–8).'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] Benham, R., & Culpepper, J. S. (2017). [排名融合中的风险-收益权衡](https://rodgerbenham.github.io/bc17-adcs.pdf)。发表于*第22届澳大利亚文档计算研讨会*（第1–8页）。'
- en: '[2] Haney, D. & Gibson, D. in Stack Overflow Blog. [Ask like a human: Implementing
    semantic search on Stack Overflow](https://stackoverflow.blog/2023/07/31/ask-like-a-human-implementing-semantic-search-on-stack-overflow/)
    (accessed Nov 24, 2023).'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] Haney, D. & Gibson, D. 在 Stack Overflow 博客中。[像人类一样提问：在 Stack Overflow 上实现语义搜索](https://stackoverflow.blog/2023/07/31/ask-like-a-human-implementing-semantic-search-on-stack-overflow/)（访问于2023年11月24日）。'
- en: Images
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图片
- en: If not otherwise stated, all images are created by the author.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 除非另有说明，否则所有图片均由作者创建。
