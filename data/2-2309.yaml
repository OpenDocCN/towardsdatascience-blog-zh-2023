- en: 'Voronoi Grids: A Practical Application'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Voronoi网格：一种实际应用
- en: 原文：[https://towardsdatascience.com/voronoi-grids-a-practical-application-7e6ee3b1daf0](https://towardsdatascience.com/voronoi-grids-a-practical-application-7e6ee3b1daf0)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/voronoi-grids-a-practical-application-7e6ee3b1daf0](https://towardsdatascience.com/voronoi-grids-a-practical-application-7e6ee3b1daf0)
- en: Quick Success Data Science
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 快速成功数据科学
- en: Mapping school zones in Melbourne, Australia
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在墨尔本，澳大利亚，绘制学校区域
- en: '[](https://medium.com/@lee_vaughan?source=post_page-----7e6ee3b1daf0--------------------------------)[![Lee
    Vaughan](../Images/9f6b90bb76102f438ab0b9a4a62ffa3f.png)](https://medium.com/@lee_vaughan?source=post_page-----7e6ee3b1daf0--------------------------------)[](https://towardsdatascience.com/?source=post_page-----7e6ee3b1daf0--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----7e6ee3b1daf0--------------------------------)
    [Lee Vaughan](https://medium.com/@lee_vaughan?source=post_page-----7e6ee3b1daf0--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@lee_vaughan?source=post_page-----7e6ee3b1daf0--------------------------------)[![李·沃恩](../Images/9f6b90bb76102f438ab0b9a4a62ffa3f.png)](https://medium.com/@lee_vaughan?source=post_page-----7e6ee3b1daf0--------------------------------)[](https://towardsdatascience.com/?source=post_page-----7e6ee3b1daf0--------------------------------)[![走向数据科学](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----7e6ee3b1daf0--------------------------------)
    [李·沃恩](https://medium.com/@lee_vaughan?source=post_page-----7e6ee3b1daf0--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----7e6ee3b1daf0--------------------------------)
    ·10 min read·Nov 28, 2023
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [走向数据科学](https://towardsdatascience.com/?source=post_page-----7e6ee3b1daf0--------------------------------)
    ·10分钟阅读·2023年11月28日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/749f1c178903f8991aec8a771abd436e.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/749f1c178903f8991aec8a771abd436e.png)'
- en: Melbourne as a stained-glass window envisioned by Leonardo.ai DreamShaper v7
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 被Leonardo.ai DreamShaper v7设想为彩绘玻璃窗的墨尔本
- en: '*Voronoi grids*, also called Voronoi *diagrams*, are used to partition a plane
    into discrete regions around a given set of *seed points*. For each seed, there
    is a corresponding region, called a Voronoi *cell*, within which all points on
    the plane are closer to *that* seed than to any other.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '*Voronoi网格*，也称为Voronoi *图*，用于将平面划分为围绕一组给定*种子点*的离散区域。对于每个种子点，都有一个对应的区域，称为Voronoi
    *单元*，其中平面上的所有点都比其他点更接近*该*种子点。'
- en: Voronoi diagrams have applications in many fields, including computer science,
    geography, biology, and urban planning. A particularly important application is
    to map the nearest airfields for planes needing to make an emergency landing.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Voronoi图在许多领域都有应用，包括计算机科学、地理学、生物学和城市规划。一个特别重要的应用是绘制需要紧急降落的飞机的最近机场。
- en: The government of Melbourne, Australia uses this tool to produce *school catchment*
    maps. “Catchment” refers to those students who reside in a particular area and
    are guaranteed a position in specific schools. Because students are eligible to
    attend the *nearest* primary or high school to where they live — as measured by
    Euclidian distance — the map of school zones is by default a Voronoi diagram.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 澳大利亚墨尔本政府使用该工具制作*学校学区*地图。“学区”指的是那些居住在特定区域内并且被保证入读特定学校的学生。由于学生有资格就读*离家最近*的小学或中学——以欧几里得距离为标准——学校区域地图默认是一个Voronoi图。
- en: '![](../Images/64a322ea08319cfba5b42537ad497b98.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/64a322ea08319cfba5b42537ad497b98.png)'
- en: Melbourne School Catchment map ([Victoria Dept. of Education](https://www.findmyschool.vic.gov.au/),
    CC-BY 4.0)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 墨尔本学校学区地图 ([维多利亚州教育部](https://www.findmyschool.vic.gov.au/)，CC-BY 4.0)
- en: In this *Quick Success Data Science* project, we’ll explore the concept of Voronoi
    diagrams by making our own version of the Melbourne catchment map. We’ll use a
    subset of primary schools in the metropolitan area and grid them with the SciPy
    library’s `Voronoi` class. We'll then use the Folium library to overlay the Voronoi
    diagram on a street map of Melbourne.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个*快速成功数据科学*项目中，我们将通过制作自己版本的墨尔本学区地图来深入了解Voronoi图的概念。我们将使用大都市区的小学子集，并用SciPy库的`Voronoi`类对其进行网格化。然后，我们将使用Folium库将Voronoi图叠加在墨尔本的街道地图上。
- en: The Dataset
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据集
- en: To produce the dataset, I used the Victoria government’s [*Find My School*](https://www.findmyschool.vic.gov.au/#school=1283701)
    website to look up the addresses for 109 primary schools in the Melbourne metropolitan
    area. I then used [LatLong.net](https://www.latlong.net/convert-address-to-lat-long.html)
    to convert the addresses to decimal latitude and longitude and stored the results
    in a CSV file in this [Gist](https://gist.github.com/rlvaugh/7a59c99c41bc6d6b10cd5047a109453b).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 为了生成数据集，我使用了维多利亚政府的[*Find My School*](https://www.findmyschool.vic.gov.au/#school=1283701)网站查找墨尔本大都市区109所小学的地址。然后使用[LatLong.net](https://www.latlong.net/convert-address-to-lat-long.html)将地址转换为十进制度数，并将结果存储在这个[GitHub
    Gist](https://gist.github.com/rlvaugh/7a59c99c41bc6d6b10cd5047a109453b)的CSV文件中。
- en: '![](../Images/5f9a3ddadd720b429e64e9ac3cec7ffc.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5f9a3ddadd720b429e64e9ac3cec7ffc.png)'
- en: Melbourne-area primary school locations used in this project (by the author)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 该项目使用的墨尔本地区小学位置（由作者提供）
- en: The SciPy Voronoi Implementation
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SciPy Voronoi实现
- en: Python’s *SciPy* scientific library is designed for mathematics, science, and
    engineering, and addresses many standard problem domains in scientific computing.
    It’s built on and supplements *Numerical Python* ([*NumPy*](https://numpy.org/))
    and provides many user-friendly and efficient numerical routines.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Python的*SciPy*科学库旨在数学、科学和工程领域，解决科学计算中的许多标准问题。它基于并补充了*Numerical Python* ([*NumPy*](https://numpy.org/))，并提供了许多用户友好且高效的数值例程。
- en: For making Voronoi diagrams, SciPy provides the `scipy.spatial.voronoi()` class,
    which uses the [Qhull library](http://www.qhull.org/) to compute the Voronoi grid.
    As mentioned previously, all the locations within a grid cell should be closer
    to the seed point used to generate that cell than to any other seed point.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 为了制作Voronoi图，SciPy提供了`scipy.spatial.voronoi()`类，该类使用[Qhull库](http://www.qhull.org/)来计算Voronoi网格。如前所述，网格单元内的所有位置应该比其他种子点更接近生成该单元的种子点。
- en: In the diagram below, taken from the SciPy docs, the seed points are arranged
    orthogonally, leading to a straightforward grid pattern with the seed points in
    the *centers* of the cells.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 下图取自SciPy文档，种子点按正交方式排列，形成了一个简单的网格模式，其中种子点位于单元格的*中心*。
- en: '![](../Images/8d82d5fdd39eb4f9a69da577995b164c.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8d82d5fdd39eb4f9a69da577995b164c.png)'
- en: An orthogonal Voronoi grid (from the SciPy docs)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 正交Voronoi网格（来自SciPy文档）
- en: The seed points are shown in blue. The *vertices*, where lines in the diagram
    meet, are colored in orange. The *ridges* (lines) between the seed points are
    drawn in black. These form the boundaries of the Voronoi cells.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 种子点显示为蓝色。图中线条交汇的*顶点*为橙色。种子点之间的*脊*（线条）为黑色，这些脊构成了Voronoi单元的边界。
- en: Because most of the seed points in the previous diagram are along the *edge*
    of the map, only the center seed point is associated with a *finite* cell or region,
    and thus is surrounded on all sides by *finite* ridges. The other ridges are dashed
    as they extend to infinity and thus bound *infinite* cells that never “close,”
    as there are no outer seed points from which to compute an intervening ridge.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 由于前图中的大多数种子点位于地图的*边缘*，只有中心种子点与*有限*的单元或区域相关联，因此它被*有限*的脊包围。其他脊为虚线，因为它们延伸到无穷大，从而界定了*无限*的单元，这些单元永远不会“闭合”，因为没有外部种子点来计算插入的脊。
- en: The diagram below, also from the docs, was built from a *non-orthogonal* arrangement
    of seed points and consequently has more complex cells. Note how some of the ridges
    are drawn with solid lines and some with dashed.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 下图也来自文档，由*非正交*排列的种子点构建，因此单元格更为复杂。请注意，一些脊用实线绘制，另一些则用虚线绘制。
- en: '![](../Images/ba7f2aaed929a1ef0a3f39b84dd7b51b.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ba7f2aaed929a1ef0a3f39b84dd7b51b.png)'
- en: A non-orthogonal Voronoi grid (from the SciPy docs)
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 非正交Voronoi网格（来自SciPy文档）
- en: The ridges drawn with solid lines converge and meet *somewhere*, creating a
    closed and finite region. The dashed lines are divergent and never intersect,
    so their cells have infinite area. In practice, these infinite cells are generally
    disregarded or artificially bounded, such as with a map-edge polygon.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 实线绘制的脊在*某处*汇聚，形成一个封闭且有限的区域。虚线是发散的，永不相交，因此它们的单元具有无限的面积。在实际应用中，这些无限单元通常被忽略或人为地限制，比如使用地图边缘多边形。
- en: We can access lists of the regions (cells), and the coordinates used to define
    the regions, with attributes such as `voronoi.regions`, `voronoi.vertices`, `voronoi.ridge_vertices`,
    and `voronoi.ridge_points`. We’ll use these later to create plottable polygons
    for the Voronoi cells.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过 `voronoi.regions`、`voronoi.vertices`、`voronoi.ridge_vertices` 和 `voronoi.ridge_points`
    等属性访问区域（单元格）的列表和用于定义这些区域的坐标。我们稍后会用这些来创建可以绘制的 Voronoi 单元格多边形。
- en: The Code
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码
- en: 'The code below, written in JupyterLab, follows these steps:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码在 JupyterLab 中编写，遵循以下步骤：
- en: Load the CSV file of school names and locations.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载学校名称和位置的 CSV 文件。
- en: Use the school locations to create a Voronoi grid.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用学校位置创建 Voronoi 网格。
- en: Transform the Voronoi grid into plottable polygons.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 Voronoi 网格转换为可以绘制的多边形。
- en: Truncate the edge cells with a square bounding box.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用方形边界框截断边缘单元格。
- en: Plot the schools and Voronoi grid on a street map of Melbourne.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在墨尔本的街道地图上绘制学校和 Voronoi 网格。
- en: Importing Libraries and Preparing the Data
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入库和准备数据
- en: To accomplish our task we’ll need pandas, geopandas, shapely (bundled with geopandas),
    Folium, and SciPy. The pandas and geopandas libraries permit the loading and processing
    of the data, shapely creates plottable polygons, Folium permits mapping, and SciPy
    provides the algorithm for building the Voronoi grid.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成任务，我们需要 pandas、geopandas、shapely（与 geopandas 捆绑）、Folium 和 SciPy。pandas 和
    geopandas 库允许数据的加载和处理，shapely 创建可绘制的多边形，Folium 允许映射，SciPy 提供构建 Voronoi 网格的算法。
- en: If you’re not familiar with it, [*GeoPandas*](https://geopandas.org/en/stable/docs.html)
    is an open-source, third-party library designed to support geospatial mapping
    in Python. It extends the datatypes used by the [pandas](https://pandas.pydata.org/docs/)
    library and makes working with geospatial vector data similar to working with
    tabular data. It also enables operations in Python that would otherwise require
    a dedicated geospatial database, such as Post GIS.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不熟悉，[*GeoPandas*](https://geopandas.org/en/stable/docs.html) 是一个开源的第三方库，旨在支持
    Python 中的地理空间映射。它扩展了 [pandas](https://pandas.pydata.org/docs/) 库使用的数据类型，使地理空间矢量数据的处理类似于表格数据的处理。它还使
    Python 中的操作成为可能，而这些操作通常需要专用的地理空间数据库，如 Post GIS。
- en: '[PRE0]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: After making the imports, we use pandas to read the CSV file and geopandas to
    turn the schools’ coordinates into *point geometries*.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 导入必要库后，我们使用 pandas 读取 CSV 文件，并使用 geopandas 将学校坐标转换为 *点几何*。
- en: A *GeoDataFrame* is a pandas DataFrame with a special “geometry” column for
    location data. This column bundles together the type of geometric object (such
    as a point, line string, polygon, etc.) and the coordinates (longitude and latitude)
    needed to draw it.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '*GeoDataFrame* 是一个 pandas DataFrame，具有一个特殊的“几何”列用于位置数据。此列将几何对象类型（如点、线串、多边形等）与绘制它所需的坐标（经度和纬度）捆绑在一起。'
- en: '![](../Images/abced138554483fe9f3484ebcf1e97f7.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/abced138554483fe9f3484ebcf1e97f7.png)'
- en: Example “geometry” column (boxed) of a GeoDataFrame (from [Python Tools for
    Scientists](https://a.co/d/eUoO01X) by author)
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 示例“几何”列（框选）来自 GeoDataFrame（作者的 [Python Tools for Scientists](https://a.co/d/eUoO01X)）。
- en: Notice that when making the GeoDataFrame we have to provide a *coordinate reference
    system* using the argument `crs=EPSG:4326`. “EPSG” stands for “European Petroleum
    Survey Group” dataset and the 4326 code is used by the *Global Positioning System*
    (*GPS*). This system projects the latitude and longitude coordinates from our
    3D planet onto the flat surface of a map. You can read more about it [here](https://en.wikipedia.org/wiki/EPSG_Geodetic_Parameter_Dataset).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，在创建 GeoDataFrame 时，我们需要使用 `crs=EPSG:4326` 参数提供 *坐标参考系统*。“EPSG” 代表 “欧洲石油勘探组”
    数据集，4326 代码由 *全球定位系统*（*GPS*）使用。该系统将我们 3D 行星上的纬度和经度坐标投影到地图的平面表面上。你可以在 [这里](https://en.wikipedia.org/wiki/EPSG_Geodetic_Parameter_Dataset)
    阅读更多信息。
- en: Creating the Voronoi Grid
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建 Voronoi 网格
- en: The next step is to create the Voronoi grid by passing the GeoDataFrame’s “Longitude”
    and “Latitude” columns to the SciPy library’s `Voronoi()` class.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是通过将 GeoDataFrame 的“经度”和“纬度”列传递给 SciPy 库的 `Voronoi()` 类来创建 Voronoi 网格。
- en: '[PRE1]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Next, we make a list of the Voronoi polygons and remove empty regions and regions
    that extend to infinity. This requires using the `regions` attribute of the `vor`
    object returned by the `Voronoi()` class. If this attribute starts with -1, then
    we know that the region never closes. As part of the process, we pass the `vertices`
    attribute to shapely’s `Polygon()` class, which generates plottable polygons that
    we add to a new GeoDataFrame.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们制作一个 Voronoi 多边形的列表，并删除空区域和延伸到无穷远的区域。这需要使用 `Voronoi()` 类返回的 `vor` 对象的
    `regions` 属性。如果该属性以 -1 开头，那么我们知道该区域永远不会关闭。作为过程的一部分，我们将 `vertices` 属性传递给 shapely
    的 `Polygon()` 类，该类生成可绘制的多边形，我们将其添加到新的 GeoDataFrame 中。
- en: Truncating the Voronoi Cells
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 截断 Voronoi 单元
- en: Because we’re not using all the primary schools in the area, many edge cells
    will be unconstrained and may extend for ridiculously long distances. To handle
    these, we’ll create a bounding box and use it to truncate any Voronoi cells (polygons)
    that extend beyond it.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我们没有使用该区域内的所有小学，许多边缘单元将没有约束，可能会延伸到极其远的距离。为了处理这些情况，我们将创建一个边界框，并使用它来截断任何超出其范围的
    Voronoi 单元（多边形）。
- en: '![](../Images/0235962b84a0ba808579748bae93010f.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0235962b84a0ba808579748bae93010f.png)'
- en: The unbounded grid. Yikes! (by the author)
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 无约束的网格。天哪！（由作者提供）
- en: '[PRE2]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We first define the lat-lon limits of the bounding box, using values slightly
    larger than those found in the CSV file. We then call `Polygon()` again to create
    the plottable polygon, then use list comprehension and the shapely `Polygon` `intersection()`
    method to truncate each polygon in the GeoDataFrame. Note how we use the special
    `geometry` column (`gdf_voronoi.geometry`) for this. We finish by creating a new
    GeoDataFrame to hold the truncated polygons.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先定义边界框的经纬度限制，使用比 CSV 文件中找到的值略大的值。然后再次调用 `Polygon()` 创建可绘制的多边形，然后使用列表推导式和
    shapely 的 `Polygon` `intersection()` 方法来截断 GeoDataFrame 中的每个多边形。注意我们如何使用特殊的 `geometry`
    列（`gdf_voronoi.geometry`）。最后，我们创建一个新的 GeoDataFrame 来保存截断后的多边形。
- en: Plotting the Map
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绘制地图
- en: The Voronoi diagram is useless without a way to relate it to the real world.
    So, we’ll use Folium to draw it over a street map of the city (by choosing `OpenStreetMap`
    as the `tiles` argument).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有将其与现实世界关联的方式，Voronoi 图是无用的。因此，我们将使用 Folium 将其绘制在城市的街道地图上（通过选择 `OpenStreetMap`
    作为 `tiles` 参数）。
- en: We’ll also need the school locations and related information. This requires
    looping through the GeoDataFrame and adding each marker to the map. We can control
    the icon *inside* the marker by setting the `icon` argument to the “home” symbol.
    You can find a list of icons like this on the [Glyphicons page](https://getbootstrap.com/docs/3.3/components/).
    You can also create custom icons, as described in this [article](/create-tailor-made-tourist-maps-with-folium-954706cc04e8).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要学校的位置和相关信息。这需要遍历 GeoDataFrame 并将每个标记添加到地图中。我们可以通过将 `icon` 参数设置为“家”符号来控制标记*内部*的图标。你可以在
    [Glyphicons 页面](https://getbootstrap.com/docs/3.3/components/) 上找到类似的图标列表。你也可以创建自定义图标，如
    [这篇文章](/create-tailor-made-tourist-maps-with-folium-954706cc04e8) 中所述。
- en: '[PRE3]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Here’s the resulting map, which permits zooming and panning.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这是结果地图，允许缩放和平移。
- en: '![](../Images/cb099b9fa1849f417a0489b2d1a08aa9.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cb099b9fa1849f417a0489b2d1a08aa9.png)'
- en: The final map (by the author)
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 最终地图（由作者提供）
- en: Some schools at the edge of the diagram are not in colored cells as their “ridges”
    extend to infinity without converging. These can be “fixed” by merging the Voronoi
    cell with another polygon. We’ll discuss this option shortly.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图示边缘的一些学校没有被着色，因为它们的“山脊”延伸到无穷远而没有收敛。这些可以通过将 Voronoi 单元与其他多边形合并来“修复”。我们稍后会讨论这个选项。
- en: Clicking on the markers launches a pop-up window with the school’s name and
    address.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 点击标记会弹出一个包含学校名称和地址的窗口。
- en: '![](../Images/59bd3f47270f9231ac25fb6480dc7c55.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/59bd3f47270f9231ac25fb6480dc7c55.png)'
- en: The pop-up window with school information (by the author)
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 带有学校信息的弹出窗口（由作者提供）
- en: To turn off the blue fill color for the polygons, just modify the `style_function`
    parameter when creating the `folium.GeoJson` object, as shown below.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 要关闭多边形的蓝色填充颜色，只需在创建 `folium.GeoJson` 对象时修改 `style_function` 参数，如下所示。
- en: '[PRE4]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Now all you’ll see are the cell boundaries.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你只会看到单元边界。
- en: '![](../Images/756429eddc848ddc56ee912141138923.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/756429eddc848ddc56ee912141138923.png)'
- en: The final map with the fill color set to “none” (by the author)
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 设置填充颜色为“无”的最终地图（由作者提供）
- en: Incorporating a Municipal Polygon
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 合并市政多边形
- en: You can view the actual Melbourne catchment map at the beginning of this article,
    at the [*Find My School*](https://www.findmyschool.vic.gov.au/) site (click on
    a school icon to activate the grid), or at [mangomap.com](https://mangomap.com/schoolcatchment/maps/56116/schoolcatchment.com.au-Victoria--Melbourne-Primary-School-Zone-Map?#).
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在本文开头查看实际的墨尔本集水区地图，访问[*Find My School*](https://www.findmyschool.vic.gov.au/)网站（点击学校图标以激活网格），或在[mangomap.com](https://mangomap.com/schoolcatchment/maps/56116/schoolcatchment.com.au-Victoria--Melbourne-Primary-School-Zone-Map?#)上查看。
- en: Unlike our map, the real school zones *blend* the Voronoi polygons with *other
    boundaries*, such as the coastline along Port Philip Bay. Incorporating all these
    additional boundaries is beyond the scope of this article, but we can see how
    it’s done by using the City of Melbourne’s *municipal boundary polygon*.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 与我们的地图不同，真实的学校区域*融合*了Voronoi多边形与*其他边界*，例如Port Philip湾沿岸线。将所有这些附加边界纳入超出了本文的范围，但我们可以通过使用墨尔本市的*市政边界多边形*来了解其实现方法。
- en: The city provides this polygon as a *shapefile*. A shapefile is a geospatial
    vector data format for geographic information system (GIS) software. Despite its
    name, a “shapefile” isn’t a single file but a *collection* of files in a single
    folder. You can read more about them [here](https://medium.com/python-in-plain-english/shape-up-your-maps-with-shapefiles-8fb3d9403e16).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 城市提供了一个*shapefile*格式的多边形。Shapefile是一种地理空间矢量数据格式，用于地理信息系统（GIS）软件。尽管它的名字是“shapefile”，但它不是一个单一的文件，而是一个*文件集合*，位于一个文件夹中。你可以在[这里](https://medium.com/python-in-plain-english/shape-up-your-maps-with-shapefiles-8fb3d9403e16)了解更多信息。
- en: To download the shapefile, first navigate to the *Municipal Boundary* page of
    the [*City of Melbourne’s Open Data* *site*](https://data.melbourne.vic.gov.au/explore/dataset/municipal-boundary/export/)
    and then export the shapefile (as “whole dataset”). This data is shared under
    a *CC Attribution 4.0 International license*.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载shapefile，首先访问[*City of Melbourne’s Open Data* *site*](https://data.melbourne.vic.gov.au/explore/dataset/municipal-boundary/export/)的*市政边界*页面，然后导出shapefile（作为“完整数据集”）。这些数据在*CC
    Attribution 4.0 International license*下共享。
- en: Store the zipped folder in the same folder as your Python script or notebook,
    so you can use the code provided below. ***Do not unzip the folder.***
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 将压缩文件夹存放在与你的Python脚本或笔记本相同的文件夹中，以便使用下面提供的代码。***请勿解压缩文件夹。***
- en: '![](../Images/dafbe41a696551860f20d1e657db2e9f.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dafbe41a696551860f20d1e657db2e9f.png)'
- en: The municipal boundary folder
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 市政边界文件夹
- en: Here’s the code for truncating and merging the existing polygons with the municipal
    boundary. It’s similar to the truncation process used for the bounding box and
    assumes that you’ve already run the previous code (for those running the code
    in a notebook).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这是剪裁并将现有多边形与市政边界合并的代码。它类似于用于边界框的剪裁过程，并假设你已经运行了之前的代码（针对在笔记本中运行代码的用户）。
- en: '[PRE5]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The new map, shown below, contains only the Voronoi cells *within* the Melbourne
    city limits. Many cell boundaries now conform to non-Voronoi-related features
    such as the Yarra River, the docks, and major roads.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 新地图，如下所示，只包含**墨尔本市界**内的Voronoi单元。许多单元边界现在符合与Voronoi无关的特征，如Yarra河、码头和主要道路。
- en: '![](../Images/2564d24c07548f65adb70ceecff52d13.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2564d24c07548f65adb70ceecff52d13.png)'
- en: The Voronoi polygons truncated to the Melbourne Municipal Boundary (by the author)
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 剪裁到墨尔本市政边界的Voronoi多边形（作者提供）
- en: Some cells are isolated from their respective schools. This is because the Melbourne
    municipal polygon isn’t actually used to define the school zones. We’re using
    it here to *demonstrate* how the final map could be created once you have a collection
    of all the correct polygons. As you saw, it’s a simple process.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 一些单元与其各自的学校隔离。这是因为墨尔本市政多边形实际上并未用于定义学校区域。我们在这里使用它来*演示*如何在你拥有所有正确的多边形集合后创建最终地图。如你所见，这是一个简单的过程。
- en: Summary
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: A Voronoi diagram is a nearest-neighbor mapping that lets you subdivide a plane
    with *n* generating points into *n* convex polygons. Each polygon contains one
    generating point and every location in a given polygon is closer to its generating
    point than to any other generating point.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: Voronoi图是一种最近邻映射，让你将平面用*n*个生成点划分为*n*个凸多边形。每个多边形包含一个生成点，并且每个位置在给定的多边形中距离其生成点比距离其他任何生成点都近。
- en: In this example, we used a Voronoi diagram to partition a map of Melbourne,
    Australia into school catchment areas. Students in each zone are closer to the
    associated primary school than to any other primary school in the city. This map
    differs from the real thing as we didn’t use all the schools or incorporate all
    the modifying polygons, such as for rivers and coastlines.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们使用Voronoi图将澳大利亚墨尔本的地图划分为学校招生区域。每个区域的学生离关联的主要学校比其他任何城市中的主要学校都要近。由于我们没有使用所有学校或包含所有修改多边形（如河流和海岸线），因此这张地图与实际情况有所不同。
- en: Python’s SciPy library contains built-in functionality for generating Voronoi
    grids. With the help of additional third-party libraries like geopandas and Folium,
    you can project these grids onto maps for real-world applications.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: Python的SciPy库包含生成Voronoi网格的内置功能。借助额外的第三方库，如geopandas和Folium，你可以将这些网格投影到地图上，用于实际应用。
- en: Further Reading
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: If you want to learn more about Voronoi diagrams, check out this informative
    article by Francesco Bellilli.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多关于Voronoi图的信息，可以查看Francesco Bellilli的这篇信息丰富的文章。
- en: '[](/the-fascinating-world-of-voronoi-diagrams-da8fc700fa1b?source=post_page-----7e6ee3b1daf0--------------------------------)
    [## The fascinating world of Voronoi diagrams'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '[对Voronoi图的迷人世界](https://towardsdatascience.com/the-fascinating-world-of-voronoi-diagrams-da8fc700fa1b?source=post_page-----7e6ee3b1daf0--------------------------------)
    [## Voronoi图的迷人世界'
- en: A brief introduction about this ubiquitous pattern and its applications
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关于这个普遍模式及其应用的简要介绍
- en: towardsdatascience.com](/the-fascinating-world-of-voronoi-diagrams-da8fc700fa1b?source=post_page-----7e6ee3b1daf0--------------------------------)
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '[对Voronoi图的迷人世界](https://towardsdatascience.com/the-fascinating-world-of-voronoi-diagrams-da8fc700fa1b?source=post_page-----7e6ee3b1daf0--------------------------------)'
- en: Thanks!
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 谢谢！
- en: Thanks for reading and please follow me for more *Quick Success Data Science*
    projects in the future.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读，请关注我，了解未来更多*快速成功的数据科学*项目。
