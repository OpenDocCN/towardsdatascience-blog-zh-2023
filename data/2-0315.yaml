- en: Ant Colony Optimization in Action
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 蚁群优化算法的实际应用
- en: 原文：[https://towardsdatascience.com/ant-colony-optimization-in-action-6d9106de60af](https://towardsdatascience.com/ant-colony-optimization-in-action-6d9106de60af)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/ant-colony-optimization-in-action-6d9106de60af](https://towardsdatascience.com/ant-colony-optimization-in-action-6d9106de60af)
- en: '![](../Images/a404a01ac29f0af038d7f4bdf990bd20.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a404a01ac29f0af038d7f4bdf990bd20.png)'
- en: A skiing ant. Image created with Dall·E by the author.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 一只滑雪的蚂蚁。图片由作者使用Dall·E创建。
- en: Solving optimization problems and enhancing results with ACO in Python
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用ACO在Python中解决优化问题并提升结果
- en: '[](https://hennie-de-harder.medium.com/?source=post_page-----6d9106de60af--------------------------------)[![Hennie
    de Harder](../Images/3e4f2cccd6cb976ca3f8bf15597daea8.png)](https://hennie-de-harder.medium.com/?source=post_page-----6d9106de60af--------------------------------)[](https://towardsdatascience.com/?source=post_page-----6d9106de60af--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----6d9106de60af--------------------------------)
    [Hennie de Harder](https://hennie-de-harder.medium.com/?source=post_page-----6d9106de60af--------------------------------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://hennie-de-harder.medium.com/?source=post_page-----6d9106de60af--------------------------------)[![Hennie
    de Harder](../Images/3e4f2cccd6cb976ca3f8bf15597daea8.png)](https://hennie-de-harder.medium.com/?source=post_page-----6d9106de60af--------------------------------)[](https://towardsdatascience.com/?source=post_page-----6d9106de60af--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----6d9106de60af--------------------------------)
    [Hennie de Harder](https://hennie-de-harder.medium.com/?source=post_page-----6d9106de60af--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----6d9106de60af--------------------------------)
    ·10 min read·Sep 20, 2023
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----6d9106de60af--------------------------------)
    ·10分钟阅读·2023年9月20日
- en: --
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '**Welcome back! In my** [**previous post**](/meta-heuristics-explained-ant-colony-optimization-d016fe925108)**,
    I introduced the fundamentals of Ant Colony Optimization (ACO). In this installment,
    we’ll delve into implementing the ACO algorithm from scratch to tackle two distinct
    problem types.**'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**欢迎回来！在我的** [**上一篇文章**](/meta-heuristics-explained-ant-colony-optimization-d016fe925108)**中，我介绍了蚁群优化（ACO）的基本原理。在这一部分，我们将深入探讨如何从头开始实现ACO算法，以解决两种不同类型的问题。**'
- en: The problems we’ll be addressing are the Traveling Salesman Problem (TSP) and
    the Quadratic Assignment Problem (QAP). Why these two? Well, the TSP is a classic
    challenge, and ACO happens to be an effective algorithm for finding the most cost-efficient
    path through a graph. On the other hand, the Quadratic Assignment Problem represents
    a different class of problems related to optimizing the arrangement of items,
    and in this post, I aim to demonstrate that ACO can be a valuable tool for solving
    such assignment-related problems as well. This versatility makes the ACO algorithm
    applicable to a wide range of problems. Finally, I’ll share some tips for achieving
    improved solutions more rapidly.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要解决的问题是旅行商问题（TSP）和二次分配问题（QAP）。为什么是这两个问题？因为TSP是一个经典挑战，而ACO恰好是一种有效的算法，用于找到图中最具成本效益的路径。另一方面，二次分配问题代表了与优化物品排列相关的不同问题类别，在这篇文章中，我旨在展示ACO也可以成为解决此类分配相关问题的有价值工具。这种多功能性使得ACO算法适用于广泛的问题。最后，我将分享一些更快速获得改进解决方案的技巧。
- en: Traveling Salesman Problem
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 旅行商问题
- en: 'TSP is straightforward to describe but can pose a significant challenge in
    finding a solution. Here’s the basic definition: you’re tasked with discovering
    the shortest route that visits all nodes in a graph. This problem falls into the
    category of [NP-hard problems](https://medium.com/towards-data-science/np-what-complexity-types-of-optimization-problems-explained-558d43276044),
    which implies that if you attempt to explore all possible routes, it can take
    an impractical amount of time to find the solution. Instead, a more effective
    approach is to seek a high-quality solution within a reasonable timeframe, and
    that’s precisely what we’ll accomplish using ACO.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: TSP（旅行商问题）描述起来很简单，但在寻找解决方案时可能会面临重大挑战。基本定义是：你的任务是发现一条访问图中所有节点的最短路径。这个问题属于[NP难题](https://medium.com/towards-data-science/np-what-complexity-types-of-optimization-problems-explained-558d43276044)的范畴，这意味着如果你尝试探索所有可能的路径，找到解决方案可能需要不切实际的时间。相反，更有效的方法是寻求在合理时间内的高质量解决方案，这正是我们通过ACO（蚁群优化算法）要实现的目标。
- en: Problem Definition
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题定义
- en: 'With the following code, we can create a TSP instance with a given number of
    nodes:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下代码，我们可以创建一个具有给定节点数量的TSP实例：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The TSP example we will use for demonstrating ACO is the following (default
    settings):'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将用来演示ACO的TSP示例是以下的（默认设置）：
- en: '![](../Images/787d3843040210ad149e99c98c79184a.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/787d3843040210ad149e99c98c79184a.png)'
- en: Visit all nodes and return back to the start node. Image by author.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 访问所有节点并返回起始节点。图片由作者提供。
- en: 'The optimal solution for this problem (calculated with [mixed integer programming](/how-to-handle-optimization-problems-daf97b3c248c))
    looks like this:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个问题的**最优解**（用[混合整数规划](/how-to-handle-optimization-problems-daf97b3c248c)计算）如下：
- en: '![](../Images/20b510a5325964c37e3c89136353326c.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/20b510a5325964c37e3c89136353326c.png)'
- en: Optimal solution for the traveling salesman problem. Image by author.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 旅行推销员问题的**最优解**。图片由作者提供。
- en: The distance of this path is 4897.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这条路径的距离是4897。
- en: Solving TSP with ACO
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用ACO解决TSP
- en: The next step is to solve this problem with ant colony optimization to see how
    close we can get to the optimal solution. If you are unfamiliar with ACO and you
    want to learn how the algorithm works, you can [read my previous post](/meta-heuristics-explained-ant-colony-optimization-d016fe925108).
    Then you can return here to see ACO in action.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是用蚁群优化解决这个问题，看看我们能接近**最优解**到什么程度。如果你不熟悉ACO，想了解算法如何工作，可以[阅读我之前的文章](/meta-heuristics-explained-ant-colony-optimization-d016fe925108)。然后，你可以回到这里查看ACO的实际应用。
- en: 'The code for ACO:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: ACO的代码：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Let’s break down the crucial parts of the code step by step:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们一步步分析代码中的关键部分：
- en: The first step is initialization `__init__`. We define the problem, which, in
    this case, is a TSP instance, and optionally provide hyperparameters if needed.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一步是初始化`__init__`。我们定义问题，这里是一个TSP实例，并根据需要提供超参数。
- en: The `ant_colony_optimization` section contains the core execution. Over a specified
    number of iterations `k_max`, the algorithm strives to enhance the current best
    solution. It involves deploying multiple ants `m`, and each ant traverses the
    graph.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ant_colony_optimization`部分包含核心执行。在指定的迭代次数`k_max`内，算法致力于提升当前的最佳解。它涉及部署多个蚂蚁`m`，每只蚂蚁在图中移动。'
- en: The `ant_walk` provides the simulation of the journey of a single ant. In the
    while loop, the ant’s path is constructed by choosing the next edge based on its
    attractiveness `A`. The edge attractiveness is computed using the `edge_attractiveness`
    method, which takes into account factors like the pheromone matrix `tau`, alpha,
    the distance matrix, and beta. The pheromone matrix is updated after each ant’s
    walk.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ant_walk`提供了单只蚂蚁旅程的模拟。在while循环中，蚂蚁的路径通过选择基于其吸引力`A`的下一条边来构建。边的吸引力使用`edge_attractiveness`方法计算，考虑了信息素矩阵`tau`、alpha、距离矩阵和beta。每只蚂蚁走完后，信息素矩阵会更新。'
- en: 'To run the algorithm for a problem instance, all you have to do is the following:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 运行算法以处理问题实例，只需执行以下操作：
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now, how does ACO perform compared to the optimal solution? You can visualize
    the progress with a GIF that displays the evolving solution. Each image in the
    GIF shows the current best route, allowing you to observe the improvement over
    time.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，ACO与**最优解**相比表现如何？你可以通过GIF可视化进展，GIF中的每个图像显示当前的最佳路径，让你观察到随时间的改进。
- en: '![](../Images/8510da8a471b8d5b652e2bff352c7721.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8510da8a471b8d5b652e2bff352c7721.png)'
- en: Improvement of the route. Gif by author.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 路径的改进。GIF由作者提供。
- en: 'The score of the final solution is equal to 4944, really close to the optimal
    solution (the gap is less than 1%)! It’s also interesting to take a look at the
    solving process:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 最终解决方案的得分是4944，非常接近**最优解**（误差小于1%）！观察解决过程也很有趣：
- en: '![](../Images/7ace6f53e7b43891bc769613aeeeaae3.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7ace6f53e7b43891bc769613aeeeaae3.png)'
- en: Solution process. Every dot represents one ant walk. Image by author.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 解决过程。每个点表示一次蚂蚁行走。图片由作者提供。
- en: In this graph, the x-axis represents the ant number, while the y-axis indicates
    the distance covered during the ant’s journey. The horizontal red line shows the
    score of the optimal solution, and the red dots symbolize instances where ants
    have found a new, improved solution. It’s worth noting that it often takes several
    ants to discover a better solution. However, the last red dot is remarkably close
    to the optimal solution. There are strategies available to enhance the performance
    of ACO, which I’ll elaborate on in the following section.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个图表中，x 轴表示蚂蚁的数量，而 y 轴表示蚂蚁旅程中覆盖的距离。水平红线表示最优解决方案的分数，红点象征蚂蚁发现了新的改进解决方案。值得注意的是，通常需要几只蚂蚁才能发现更好的解决方案。然而，最后一个红点非常接近最优解决方案。还有一些策略可以提高
    ACO 的性能，我将在接下来的部分中详细说明。
- en: Assignment Problems
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分配问题
- en: TSP is a routing problem, and ACO was originally designed to address routing
    problems. That’s already a long time ago, and in the meantime people found ways
    to solve different types of challenges using ACO. One such example worth highlighting
    is its application to assignment problems.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: TSP 是一个路径规划问题，而 ACO 最初是为了应对路径规划问题而设计的。虽然这已经是很久以前的事了，但在此期间，人们发现了使用 ACO 解决不同类型挑战的方法。其中一个值得强调的例子是其在分配问题中的应用。
- en: 'Assignment problems are problems in which you assign ‘something’ to ‘something
    else’. One example is the *quadratic assignment problem* (QAP). Imagine you have
    a set of locations, and you want to assign a set of facilities to these locations.
    The goal is to determine the best assignment that minimizes the total cost. The
    cost of assigning facility *f* to location *l* is determined by:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 分配问题是将“某物”分配到“其他物”的问题。一个例子是*二次分配问题*（QAP）。假设你有一组位置，并且你想将一组设施分配到这些位置。目标是确定最佳分配，以最小化总成本。将设施*f*分配到位置*l*的成本由以下公式决定：
- en: 'The flow between facilities: Facilities have a certain flow or interaction
    between them. This represents how much “stuff” or “activity” is transferred between
    facilities.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设施之间的流量：设施之间有一定的流量或互动。这表示在设施之间转移了多少“物品”或“活动”。
- en: 'The distance between locations: Each pair of locations has a corresponding
    distance, which represents the cost or effort required to transport or operate
    between those locations.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 位置之间的距离：每对位置都有一个对应的距离，代表在这些位置之间运输或操作所需的成本或努力。
- en: The cost of assigning a particular facility to a specific location is determined
    by the flow between facilities and the distance between locations. Specifically,
    the cost for a pair of facilities is computed as the product of their flow and
    the distance between the locations to which they are assigned.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 将特定设施分配到特定位置的成本由设施之间的流量和位置之间的距离决定。具体来说，计算一对设施的成本是将它们的流量与它们被分配到的地点之间的距离相乘。
- en: To find the total cost of a particular assignment, you sum up the pairwise costs
    for all possible pairs of facilities based on their assignments to locations.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 要找到特定分配的总成本，你需要将所有可能的设施对的成本加总，这些成本基于它们的位置信息。
- en: '![](../Images/c7698c67956a5043e5cf862832edbd12.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c7698c67956a5043e5cf862832edbd12.png)'
- en: Example of an optimal solution for 5 facilities placed on 5 locations. Flows
    in blue. Click to enlarge. Image by author.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 一个五个设施放置在五个位置上的最优解决方案的示例。蓝色表示流量。点击放大。图片由作者提供。
- en: How does the problem formulation changes when you want to apply ACO to an assignment
    problem instead of a routing problem? I’ll leave the coding up to you, but I will
    provide an intuitive understanding of the difference between a routing and an
    assignment problem, looking at it from an ant perspective.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 当你想将 ACO 应用于分配问题而不是路径规划问题时，问题的表述会发生怎样的变化？我会把编码留给你，但我将从蚂蚁的视角提供对路径规划问题和分配问题之间差异的直观理解。
- en: The TSP is all about finding the optimal sequence in which to visit various
    locations. On the other hand, the QAP shifts the focus to deciding where to place
    items or facilities. In ACO for TSP, the ants learn to favor specific visitation
    sequences over others. In contrast, when tackling the QAP, the ants lean towards
    selecting particular facilities for specific locations. In this scenario, the
    pheromone trails represent how desirable it is to assign a facility to a specific
    location.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: TSP（旅行商问题）主要是找到访问各个地点的最佳顺序。另一方面，QAP（设施布局问题）则将焦点转向决定物品或设施的放置位置。在TSP的ACO（蚁群优化）中，蚂蚁学会偏向于特定的访问序列。相比之下，在处理QAP时，蚂蚁则倾向于选择特定的设施放置于特定的位置。在这种情况下，信息素轨迹表示将设施分配到特定位置的期望程度。
- en: 'You can imagine it like this: each ant has a list of available places (locations
    in QAP) where they can allocate items (facilities in QAP). The ants proceed through
    these steps repeatedly until they’ve determined the optimal arrangement of all
    items.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以这样想象：每只蚂蚁都有一个可用位置（QAP中的位置）列表，在这些位置上分配物品（QAP中的设施）。蚂蚁不断重复这些步骤，直到确定所有物品的最佳安排。
- en: In simpler terms, think of it as ants collaboratively determining the most efficient
    way to allocate items, drawing from the knowledge they’ve acquired about what
    works best in terms of item-to-location assignments.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，可以将其视为蚂蚁协作确定最有效的物品分配方式，依据他们所获得的关于物品到位置分配的最佳效果的知识。
- en: Improve Solution Quality
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提高解决方案质量
- en: 'There are several strategies to achieve better solutions in a shorter timeframe.
    Here are three valuable tips that can significantly impact your results:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种策略可以在更短的时间内获得更好的解决方案。以下是三条宝贵的建议，它们可以显著影响你的结果：
- en: Hyperparameter Search
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 超参数搜索
- en: If you’re dealing with multiple problems of the same type, it’s highly advisable
    to conduct a hyperparameter search. Parameters such as the number of iterations,
    the quantity of ants, alpha, beta, rho, and Q can exert a substantial influence
    on algorithm performance.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你处理的是多个相同类型的问题，强烈建议进行超参数搜索。诸如迭代次数、蚂蚁数量、alpha、beta、rho和Q等参数可以对算法性能产生重大影响。
- en: Let’s examine an example. In the plot below, we test two different values of
    alpha, while the other parameters stay the same. The line plots depict the moving
    average over 100 ant runs, while the dots represent the best solution found for
    a certain run.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个例子。在下面的图表中，我们测试了两个不同的alpha值，而其他参数保持不变。线形图显示了100次蚂蚁运行的移动平均值，而点表示某次运行找到的最佳解决方案。
- en: '![](../Images/e8a42b6f94a2eaf556217bfd50c04ddb.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e8a42b6f94a2eaf556217bfd50c04ddb.png)'
- en: The algorithm with the orange settings (alpha = 2) not only discovers a superior
    solution (indicated by the orange dot) but also accomplishes this more rapidly
    compared to the algorithm with the blue settings (alpha = 1).
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 使用橙色设置（alpha = 2）的算法不仅发现了一个优越的解决方案（由橙点表示），而且比使用蓝色设置（alpha = 1）的算法更快速地完成了这一任务。
- en: To emphasize the impact of hyperparameter tuning further, consider a TSP problem
    with 100 nodes. If we conduct a random search (10 iterations) across the hyperparameters
    and plot the moving average, we observe significant variations in performance.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步强调超参数调整的影响，考虑一个包含100个节点的TSP问题。如果我们在超参数上进行随机搜索（10次迭代）并绘制移动平均图，我们会观察到性能的显著变化。
- en: '![](../Images/e4ad6c2532bd5f1e1d46f2736abf4ad0.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e4ad6c2532bd5f1e1d46f2736abf4ad0.png)'
- en: At the top, the orange and yellow lines yield suboptimal results, while others
    come remarkably close to the optimal solution. For context, it’s worth noting
    that the OR tools solver took 5 minutes to find the optimum, whereas the ACO algorithms
    completed their runs in a maximum of 5 seconds.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在顶部，橙色和黄色线条产生了次优结果，而其他线条则接近于最佳解决方案。作为背景，需要指出的是，OR工具求解器花费了5分钟找到最优解，而ACO算法则在最多5秒内完成运行。
- en: Warm Up Procedure
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预热程序
- en: Before setting the ants in motion, you have the option to initiate a *warm-up*
    for the pheromone matrix. This preparatory step often reduces the number of iterations
    needed to find the best solution. In [this paper](https://www.mdpi.com/1999-4893/14/10/295),
    a warm-up procedure is proposed and its effects are compared.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在让蚂蚁开始之前，你可以选择对信息素矩阵进行*预热*。这个准备步骤通常减少了找到最佳解决方案所需的迭代次数。在[这篇论文](https://www.mdpi.com/1999-4893/14/10/295)中，提出了一种预热程序，并比较了其效果。
- en: Exploration and Exploitation
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索与开发
- en: Similar to many algorithms, they can encounter stagnation if they don’t explore
    sufficiently. To address this, you can use the [Max-Min Ant System](https://www.sciencedirect.com/science/article/abs/pii/S0167739X00000431).
    MMAS encourages ants to venture into unexplored paths by assigning a high pheromone
    value to these paths. When stagnation occurs, the trails are reset to this elevated
    value. An additional advantage of MMAS over the original algorithm is that only
    the global best tour or the iteration’s best tour are permitted to enhance their
    trails with pheromone. These adjustments promote a more effective balance between
    exploration and exploitation.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于许多算法，如果它们的探索不够充分，可能会遇到停滞。为了解决这个问题，你可以使用[最大-最小蚂蚁系统](https://www.sciencedirect.com/science/article/abs/pii/S0167739X00000431)。MMAS通过将高信息素值分配给未探索的路径，鼓励蚂蚁探索这些路径。当停滞发生时，这些路径的轨迹会被重置为这个较高的值。与原始算法相比，MMAS的一个额外优势是只有全局最佳路径或迭代中的最佳路径才能增强其信息素轨迹。这些调整有助于在探索和利用之间实现更有效的平衡。
- en: '![](../Images/49cf5f5fb375e39a075c6ce8717a3a35.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/49cf5f5fb375e39a075c6ce8717a3a35.png)'
- en: Photo by [Shardar Tarikul Islam](https://unsplash.com/@tarikul_islam?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由[Shardar Tarikul Islam](https://unsplash.com/@tarikul_islam?utm_source=medium&utm_medium=referral)提供，来自[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Conclusion
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Ant colony optimization is a fun algorithm to play around with. It can find
    high quality solutions to routing and assignment problems, even if the problem
    size increases. This makes it a powerful algorithm.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 蚁群优化算法是一个有趣的算法，它能够在问题规模增加的情况下仍然找到高质量的解决方案。这使它成为一个强大的算法。
- en: To further enhance the algorithm’s performance and uncover superior solutions,
    consider incorporating essential strategies such as hyperparameter search, a warm-up
    procedure, and techniques for balancing exploration and exploitation. These adjustments
    can lead to significant improvements in your results.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步提升算法的性能并发现更优解，考虑融入一些关键策略，如超参数搜索、预热过程以及平衡探索和利用的技术。这些调整可以显著改善你的结果。
- en: If you became curious and want to read more on ACO, I can recommend [this work](https://ds.amu.edu.et/xmlui/bitstream/handle/123456789/10303/ant%20colony%20optimization%20%282004%29.pdf?sequence=1&isAllowed=y).
    One of the authors is the one who proposed ACO in 1992\. It offers valuable insights
    and a comprehensive understanding of this remarkable optimization technique.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对ACO产生了兴趣并想进一步阅读，我推荐[这篇文章](https://ds.amu.edu.et/xmlui/bitstream/handle/123456789/10303/ant%20colony%20optimization%20%282004%29.pdf?sequence=1&isAllowed=y)。其中一位作者是1992年提出ACO的人。它提供了对这一卓越优化技术的宝贵见解和全面理解。
- en: Related
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关内容
- en: '[](/optimizing-connections-mathematical-optimization-within-graphs-7364e082a984?source=post_page-----6d9106de60af--------------------------------)
    [## Optimizing Connections: Mathematical Optimization within Graphs'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 优化连接：图中的数学优化](https://towardsdatascience.com/optimizing-connections-mathematical-optimization-within-graphs-7364e082a984?source=post_page-----6d9106de60af--------------------------------)'
- en: An introduction to graph theory and its applications
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 图论及其应用简介
- en: 'towardsdatascience.com](/optimizing-connections-mathematical-optimization-within-graphs-7364e082a984?source=post_page-----6d9106de60af--------------------------------)
    [](/an-introduction-to-a-powerful-optimization-technique-simulated-annealing-87fd1e3676dd?source=post_page-----6d9106de60af--------------------------------)
    [## An Introduction to a Powerful Optimization Technique: Simulated Annealing'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 介绍一种强大的优化技术：模拟退火](https://towardsdatascience.com/optimizing-connections-mathematical-optimization-within-graphs-7364e082a984?source=post_page-----6d9106de60af--------------------------------)'
- en: Explanation, parameters, strengths, weaknesses and use cases
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解释、参数、优点、缺点及使用案例
- en: 'towardsdatascience.com](/an-introduction-to-a-powerful-optimization-technique-simulated-annealing-87fd1e3676dd?source=post_page-----6d9106de60af--------------------------------)
    [](/meta-heuristics-explained-ant-colony-optimization-d016fe925108?source=post_page-----6d9106de60af--------------------------------)
    [## Meta-Heuristics Explained: Ant Colony Optimization'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 元启发式算法解释：蚁群优化](https://towardsdatascience.com/an-introduction-to-a-powerful-optimization-technique-simulated-annealing-87fd1e3676dd?source=post_page-----6d9106de60af--------------------------------)'
- en: An introduction to a lesser-known heuristic based on the behavior of ants
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基于蚂蚁行为的较少为人知的启发式算法简介
- en: towardsdatascience.com](/meta-heuristics-explained-ant-colony-optimization-d016fe925108?source=post_page-----6d9106de60af--------------------------------)
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/meta-heuristics-explained-ant-colony-optimization-d016fe925108?source=post_page-----6d9106de60af--------------------------------)'
