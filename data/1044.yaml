- en: Demystifying Curvelets
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解密 Curvelets
- en: 原文：[https://towardsdatascience.com/desmystifying-curvelets-c6d88faba0bf?source=collection_archive---------1-----------------------#2023-03-22](https://towardsdatascience.com/desmystifying-curvelets-c6d88faba0bf?source=collection_archive---------1-----------------------#2023-03-22)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/desmystifying-curvelets-c6d88faba0bf?source=collection_archive---------1-----------------------#2023-03-22](https://towardsdatascience.com/desmystifying-curvelets-c6d88faba0bf?source=collection_archive---------1-----------------------#2023-03-22)
- en: Signal-processing deep dive
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 信号处理深入分析
- en: Learn what curvelets are, how they are built and what they can be used for
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解什么是 Curvelets，它们是如何构建的，以及它们可以用于什么
- en: '[](https://medium.com/@cdacostaf?source=post_page-----c6d88faba0bf--------------------------------)[![Carlos
    Costa, Ph.D.](../Images/fc5e03e455f11b963086355fe0ccc077.png)](https://medium.com/@cdacostaf?source=post_page-----c6d88faba0bf--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c6d88faba0bf--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c6d88faba0bf--------------------------------)
    [Carlos Costa, Ph.D.](https://medium.com/@cdacostaf?source=post_page-----c6d88faba0bf--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@cdacostaf?source=post_page-----c6d88faba0bf--------------------------------)[![卡洛斯·科斯塔博士](../Images/fc5e03e455f11b963086355fe0ccc077.png)](https://medium.com/@cdacostaf?source=post_page-----c6d88faba0bf--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c6d88faba0bf--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c6d88faba0bf--------------------------------)
    [卡洛斯·科斯塔博士](https://medium.com/@cdacostaf?source=post_page-----c6d88faba0bf--------------------------------)'
- en: ·
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fc1d045b63ee9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesmystifying-curvelets-c6d88faba0bf&user=Carlos+Costa%2C+Ph.D.&userId=c1d045b63ee9&source=post_page-c1d045b63ee9----c6d88faba0bf---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c6d88faba0bf--------------------------------)
    ·13 min read·Mar 22, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc6d88faba0bf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesmystifying-curvelets-c6d88faba0bf&user=Carlos+Costa%2C+Ph.D.&userId=c1d045b63ee9&source=-----c6d88faba0bf---------------------clap_footer-----------)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fc1d045b63ee9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesmystifying-curvelets-c6d88faba0bf&user=Carlos+Costa%2C+Ph.D.&userId=c1d045b63ee9&source=post_page-c1d045b63ee9----c6d88faba0bf---------------------post_header-----------)
    发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c6d88faba0bf--------------------------------)
    · 13分钟阅读 · 2023年3月22日 [](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc6d88faba0bf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesmystifying-curvelets-c6d88faba0bf&user=Carlos+Costa%2C+Ph.D.&userId=c1d045b63ee9&source=-----c6d88faba0bf---------------------clap_footer-----------)'
- en: --
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc6d88faba0bf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesmystifying-curvelets-c6d88faba0bf&source=-----c6d88faba0bf---------------------bookmark_footer-----------)![](../Images/cadc2b13524972ae84b9e39e26c97165.png)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc6d88faba0bf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesmystifying-curvelets-c6d88faba0bf&source=-----c6d88faba0bf---------------------bookmark_footer-----------)![](../Images/cadc2b13524972ae84b9e39e26c97165.png)'
- en: Edifício Niemeyer, Belo Horizonte. Photo by [Matheus Frade](https://unsplash.com/fr/@matheusfrade?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 尼迈耶大厦，贝洛奥里藏特。照片由 [Matheus Frade](https://unsplash.com/fr/@matheusfrade?utm_source=medium&utm_medium=referral)
    提供，来自 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)。
- en: '**Introduction**'
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**介绍**'
- en: Curvelets are multiscale, oriented, non-adaptive representations of images and
    multi-dimensional signals. If some of these words didn't make sense, you're in
    the right place.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Curvelets 是图像和多维信号的多尺度、有方向、非自适应表示。如果这些词中的一些你不太理解，你来对地方了。
- en: Developed in the early 2000s by Emmanuel Candès and David Donoho [1] in the
    flurry of wavelet-transform related signal processing boom, curvelets were designed
    to solve certain issues that plagued previous alternatives. Wavelets generalize
    the 1D Fourier transform by using arbitrary — but especially crafted — functions
    instead of complex exponentials. Like the Fourier transform, they can be readily
    extended to 2D by simply repeatedly applying the transform over multiples axes.
    Constructing 2D wavelets with this naïve approach runs into issues when representing
    edges that are not exactly horizontal or exactly vertical. In practice, transforms
    that have trouble with edges can cause “blocky” artifacts in strongly compressed
    images. Many transforms suffer from the same fate, including the discrete cosine
    transform (DCT) which powers the ubiquitous JPEG format (see Figure 1). JPEG2000
    which relies on the wavelet transform to improve on JPEG, still suffers from the
    same blocky artifacts.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 曲波变换是在2000年代初期由Emmanuel Candès和David Donoho [1] 开发的，旨在解决之前替代方法存在的一些问题。小波变换通过使用任意的——但特别设计的——函数来推广一维傅里叶变换，而不是复杂的指数函数。像傅里叶变换一样，它们可以通过简单地在多个轴上重复应用变换来扩展到二维。用这种幼稚的方法构造二维小波时，在表示不完全水平或不完全垂直的边缘时会遇到问题。实际上，处理边缘有困难的变换可能会在强压缩图像中造成“块状”伪影。许多变换都遭遇了相同的问题，包括离散余弦变换（DCT），它是广泛使用的JPEG格式的核心（见图1）。依赖小波变换改进JPEG的JPEG2000，仍然遭遇相同的块状伪影问题。
- en: '![](../Images/c8d4817a73e9c1be9da9c787906f5422.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c8d4817a73e9c1be9da9c787906f5422.png)'
- en: 'Figure 1\. "Blocky" artifacts appearing in strongly compressed JPEG images
    for both 50x and 100x resampling. Credit to: [Shlomi Tal (CC BY-SA 3.0)](https://commons.wikimedia.org/wiki/File:JPEG_2000_Artifacts_Demonstration.png).'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1\. "块状"伪影出现在50倍和100倍重采样的强压缩JPEG图像中。致谢：[Shlomi Tal (CC BY-SA 3.0)](https://commons.wikimedia.org/wiki/File:JPEG_2000_Artifacts_Demonstration.png)。
- en: Curvelets don't have these issues — *they can preserve any kind of edges*. They
    also exhibit some nice properties, such as being the optimal representation of
    wave-like phenomena, energy conservation, unitarity (having its adjoint/transpose
    be the same as its inverse), among others.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 曲波变换没有这些问题 —— *它们能够保持任何类型的边缘*。它们还展现出一些良好的特性，例如是波动现象的最佳表示、能量守恒、单位性（其伴随/转置与其逆相同）等。
- en: Today, curvelets are used in a variety of image-processing tasks including denoising,
    compression, inpainting, smoothing, etc. In the geophysical community, it has
    become a powerful workhorse for several tasks including adaptive subtraction,
    image matching, preconditioning, among others. In the medical community, it has
    been used for segmentation, diagnosis, etc.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，曲波变换在各种图像处理任务中得到了应用，包括去噪、压缩、修补、平滑等。在地球物理学界，它已经成为处理若干任务（包括自适应减法、图像匹配、预处理等）的强大工具。在医学界，它也被用于分割、诊断等。
- en: While it is true that deep learning has quickly displaced classical algorithms
    for many of these tasks, curvelets (and other wavelet transforms) still have their
    use. Whereas deep learning offers the possibility to create *adaptive*, multiscale
    representations of signals, curvelets already offer that predictably, without
    requiring training, and optimally for many types of signals. One may use curvelets
    directly as a substitute when no training data is available, or even employing
    them alongside deep learning methods, thereby reducing model complexity and data
    requirements.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管深度学习在许多任务中迅速取代了经典算法，但曲波变换（以及其他小波变换）仍然有其用途。深度学习提供了创建*自适应*、多尺度信号表示的可能性，而曲波变换已经能够在许多类型的信号中以可预测的方式实现这一点，无需训练，并且效果最佳。当没有训练数据可用时，可以直接使用曲波变换作为替代，甚至可以将其与深度学习方法一起使用，从而降低模型复杂性和数据需求。
- en: In this deep dive, we will go over the building blocks of the curvelet transform,
    focusing on the intuition behind it. The goal is to provide a starting point for
    users interested in developing new applications which use curvelets. Find all
    the code for this tutorial in the [Curvelops repository](https://github.com/PyLops/curvelops/blob/main/notebooks/Desmystifying_Curvelets.ipynb).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在本次深入探讨中，我们将讲解曲波变换的构建块，重点介绍其直觉。目标是为有兴趣开发使用曲波变换的新应用的用户提供一个起点。可以在[Curvelops 仓库](https://github.com/PyLops/curvelops/blob/main/notebooks/Desmystifying_Curvelets.ipynb)中找到本教程的所有代码。
- en: 'Before Curvelets: the Fourier Transform'
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 曲波变换之前：傅里叶变换
- en: To understand the curvelet transform, we need to first understand the Fourier
    transform. The 2D FFT (Fast Fourier Transform) tells us what kind of spatial frequencies
    an image has. The more energy on the larger (away from the origin) wavenumbers
    (spatial frequencies), the faster the image varies along a certain direction.
    In this section we will understand how to find this direction, as well as how
    to quantify “fast”.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要理解曲波变换，我们首先需要理解傅里叶变换。2D FFT（快速傅里叶变换）告诉我们图像具有哪种空间频率。较大的（远离原点的）波数（空间频率）上的能量越多，图像沿某个方向变化得越快。在这一部分，我们将理解如何找到这个方向，以及如何量化“快”。
- en: Let’s start by creating images which vary rapidly in the one particular direction,
    but not at all in the perpendicular direction. These will be helpful in understanding
    what the 𝑘-space spectrum (another name for Fourier domain, the transform domain
    after applying FFT) is telling us. We will do so by modulating a cosine in the
    direction normal to a vector 𝑣 = (sin 𝜃, cos 𝜃).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始创建在某一特定方向上快速变化，但在垂直方向上完全不变化的图像。这将有助于理解𝑘空间谱（傅里叶域的另一名称，即应用FFT后的变换域）告诉我们什么。我们将通过在一个垂直于向量𝑣
    = (sin 𝜃, cos 𝜃)的方向上调制一个余弦来做到这一点。
- en: '![](../Images/66f3df3f1554dc1c44d22d8acb0b7b23.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/66f3df3f1554dc1c44d22d8acb0b7b23.png)'
- en: 'Figure 2\. 2D monochromatic images, with direction of change in each image
    denoted by the red arrow. Credit: own work.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图2\. 2D单色图像，每张图像中的变化方向由红色箭头表示。致谢：自制。
- en: Each plot in this image has an arrow pointing towards the direction of maximum
    variation 𝑣. Along the direction perpendicular to it, the signal does not vary
    at all.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这张图片中的每个图都用箭头指向最大变化的方向𝑣。在与之垂直的方向上，信号完全没有变化。
- en: This won’t always happen, signals can vary in more than one direction at once.
    The question is, which directions? And how do we find out? Cue the FFT transform.
    Let’s take one of these images, say the one at 45°, and apply the 2D FFT.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不总是发生，信号可能同时在多个方向上变化。问题是，哪些方向？我们如何找出？用到FFT变换。我们来处理其中一张图像，比如45°的那张，应用2D FFT。
- en: '![](../Images/c553d81ac79ab14a5d997286b756d336.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c553d81ac79ab14a5d997286b756d336.png)'
- en: 'Figure 3\. 2D FFT of the monochromatic signal which varies most at the 45°
    direction. Credit: own work.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 图3\. 2D FFT的单色信号在45°方向上变化最明显。致谢：自制。
- en: In the Fourier domain, we can see that our signal has two peaks. A property
    of the 2D Fourier transform for real input signals, is that its Fourier spectrum
    symmetric about the origin. In the above plot, the top-left quadrant carries the
    same information as the bottom-right quadrant; the top-right carries the same
    information as the bottom-left quadrant. So we can safely “ignore” the negative
    frequencies for one axis. One convention is to choose the “fastest” axis, in this
    case the vertical (𝑧) axis.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在傅里叶域中，我们可以看到信号有两个峰值。对于实数输入信号的2D傅里叶变换的一个属性是其傅里叶谱关于原点对称。在上述图中，左上象限携带的信息与右下象限相同；右上象限携带的信息与左下象限相同。因此，我们可以安全地“忽略”一个轴上的负频率。一个惯例是选择“最快”的轴，在这种情况下是垂直（𝑧）轴。
- en: 'WARNING: This is not true for complex signals! But it doesn’t change the math
    much, just the visual interpretation. We will only use real signals here.'
  id: totrans-29
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 警告：这对于复杂信号并不适用！但这不会改变数学内容，只是视觉解释有所不同。我们在这里只使用实数信号。
- en: 'So we can scan the (positive 𝑘𝑧) 𝑘-space to identify a single peak. Its corresponding
    𝑘𝑥 and 𝑘𝑧 coordinates are given by: `[6.931, 6.931]`. Not particulaly interesting,
    until we normalize this vector to `[0.707, 0.707]` and compare it with the original
    direction of maximum variation: `[0.707, 0.707]`. Up to a constant, the vectors
    are the same! Let’s try this for all images create above.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们可以扫描（正𝑘𝑧）𝑘空间以识别单个峰值。其对应的𝑘𝑥和𝑘𝑧坐标为：`[6.931, 6.931]`。这并不特别有趣，直到我们将该向量归一化为`[0.707,
    0.707]`并与最大变化的原始方向`[0.707, 0.707]`进行比较。到一个常数，向量是一样的！让我们对所有上述创建的图像尝试一下。
- en: Compute the 2D FFT
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算2D FFT
- en: Find the maximum amplitude location in *k*-space
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到 *k* 空间中最大幅度的位置
- en: (𝑘𝑥-max, 𝑘𝑧-max) is the direction of maximum variability of the input
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: (𝑘𝑥-max, 𝑘𝑧-max) 是输入最大变化的方向
- en: '![](../Images/63475a16e701e47b1bec3e33dd2c770f.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/63475a16e701e47b1bec3e33dd2c770f.png)'
- en: 'Figure 4\. 2D FFT of the monochromatic signals in Figure 2\. Credit: own work.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图4\. 图2中的单色信号的2D FFT。致谢：自制。
- en: 'Notice how these follow exactly the direction of maximum change in the data.
    Indeed, if we overlay these normalized vector onto the data-space images, we get:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到这些向量确实完全遵循数据中最大变化的方向。实际上，如果我们将这些归一化向量叠加到数据空间图像上，我们会得到：
- en: '![](../Images/8f31dc5e52674719863bcde9173bf92b.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8f31dc5e52674719863bcde9173bf92b.png)'
- en: 'Figure 5\. Monochromatic signals in Figure 2\. Red arrow: direction of maximum
    variability. Yellow arrows: direction of maximum variability estimated from 2D
    FFT. Credit: own work.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图5\. 图2中的单色信号。红箭头：最大变异方向。黄色箭头：从2D FFT估计出的最大变异方向。来源：自制。
- en: 'Looks good! What does this have to do with the curvelet transform? Well, imagine
    we try applying the same method to the following signal:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来不错！这和曲波变换有什么关系呢？好吧，想象一下我们尝试将相同的方法应用于以下信号：
- en: '![](../Images/7770d97a4d381ab90be2ef8993f4e10d.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7770d97a4d381ab90be2ef8993f4e10d.png)'
- en: 'Figure 5\. Bichromatic signal in spatial (left) and Fourier (right) domains.
    Credit: own work.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图5\. 空间域（左）和傅里叶域（右）中的双色信号。来源：自制。
- en: We can see that there is a low-frequency signal in the background, corresponding
    to the -15° component. Atop it, there is a high frequency component in another
    direction (15°). If we apply our 𝑘-max algorithm, because the low-frequency signal
    is weaker, it won’t get picked up. We will think that our signal’s only direction
    is 15°. But the FFT spectrum has all the information, so what can we do with it?
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到背景中有一个低频信号，对应于-15°的分量。在其上面，还有一个在另一个方向（15°）的高频分量。如果我们应用我们的𝑘-max算法，由于低频信号较弱，它不会被选中。我们会认为我们信号的唯一方向是15°。但是FFT谱包含了所有的信息，我们能用它做什么呢？
- en: Building the Curvelet Transform
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建曲波变换
- en: Separating scales
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分离尺度
- en: 'The curvelet transform handles this wealth of information by separating the
    signal at different *scales*, which are defined as concentric regions in the 𝑘-space
    domain. These regions will encompass frequencies that are similar. Let’s apply
    this concept to the example above:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 曲波变换通过在不同的*尺度*上分离信号来处理这些丰富的信息，这些尺度定义为𝑘空间域中的同心区域。这些区域将包含相似的频率。让我们将这一概念应用于上述示例：
- en: '![](../Images/f03c682439afe59ef59ad037efeb8cd9.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f03c682439afe59ef59ad037efeb8cd9.png)'
- en: 'Figure 6\. Original bichromatic signal (left column). Low-passed signal (center
    column). High-passed signal (right column). Spatial domain (top row). Fourier
    domain (middle row). Masks in Fourier domain which generate the signals in the
    top row (bottom row). Deep purple denotes zero value, crimson corresponds to unity.
    Credit: own work.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图6\. 原始双色信号（左列）。低通信号（中列）。高通信号（右列）。空间域（顶行）。傅里叶域（中行）。傅里叶域中生成顶行信号的掩膜（底行）。深紫色表示零值，猩红色表示单位值。来源：自制。
- en: The top-left signal is the original input signal. The image below it (second
    row) is its the Fourier spectrum. The image below that (third row) is the “mask”
    applied to the Fourier spectrum to reconstruct the original signal. It is entirely
    red, representing ones, that is, no change to the spectrum.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 左上角的信号是原始输入信号。下方的图像（第二行）是其傅里叶谱。下方的图像（第三行）是应用于傅里叶谱以重建原始信号的“掩膜”。它完全是红色的，表示为1，即谱没有变化。
- en: The second column, depicts signals from the first region, constructed by a low-pass
    filter defined by its mask (third row, middle column). Where it zeroes the signal,
    the mask is purple. Finally, the third column depicts the second region, constructed
    by a high-pass filter which is `1 - lowpass`.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 第二列描绘了来自第一个区域的信号，这些信号是由其掩膜（第三行，中列）定义的低通滤波器构造的。在其将信号置零的地方，掩膜是紫色的。最后，第三列描绘了第二个区域，由一个高通滤波器构造，该滤波器是`1
    - lowpass`。
- en: In the curvelet transform, the number of scales is the first parameter. A choice
    of scales = 2 would create a division very similar to the one above (but with
    a different, special type of smoothing). The more scales there are, the more precisely
    the curvelet transform coefficients will be able to separate signals with different
    frequencies.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在曲波变换中，尺度的数量是第一个参数。选择尺度 = 2 会创建一个与上述非常相似的划分（但具有不同的特殊平滑类型）。尺度越多，曲波变换系数越能精确分离具有不同频率的信号。
- en: And what will these coefficients be? In this case, something very similar to
    the inverse transform of the low-pass and high-pass filters, that is, the two
    rightmost panels in the top row. The only caveat (in addition to the smoothing)
    is that the lower frequency scale does not require the same sampling as the original
    signal. Indeed, the Nyquist frequency (highest frequency that a certain sampling
    can represent) of the lowpass signal is *half* of the original Nyquist frequency.
    This is clear from the fact that the lowpass signal removes all frequencies above
    Nyquist/2\. Therefore we could actually *double* the sampling of lowpass component
    compared to that of the original signal. This is a general rule, and we will see
    that the coarsest scale (scale = 0) can be sampled at 2*ᵐ* times the original
    sampling, where *m* is equal to the number of scales minus 1.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 那么这些系数会是什么呢？在这种情况下，类似于低通和高通滤波器的逆变换，即最上排的两个最右面板。唯一的警告（除了平滑）是较低频率尺度不需要与原始信号相同的采样。确实，低通信号的奈奎斯特频率（特定采样可以表示的最高频率）是原始奈奎斯特频率的*一半*。这一点从低通信号去除奈奎斯特/2
    以上所有频率的事实中可以清楚地看出。因此，我们实际上可以将低通分量的采样提高到原始信号的两倍。这是一个通用规则，我们将看到最粗糙的尺度（尺度 = 0）可以以原始采样的
    2*ᵐ* 倍进行采样，其中 *m* 等于尺度数减去 1。
- en: The finest scale (in this example, scale = 1) cannot be treated the same way,
    as its highest frequency remains the frequency of the original signal.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 最细的尺度（在这个示例中为尺度 = 1）不能以相同的方式处理，因为它的最高频率仍然是原始信号的频率。
- en: For visualization’s sake, we can apply this resampling to the lower frequency
    scale to get an idea of what the curvelet coefficients would look like for a scales
    = 2 and no additional subdivisions (more about this soon).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 为了可视化的目的，我们可以将这种重采样应用到较低的频率尺度，以了解曲线系数在尺度 = 2 且没有额外细分的情况下的样子（稍后会详细说明）。
- en: '![](../Images/c407c94c34a7bb05df70d7e46d048889.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c407c94c34a7bb05df70d7e46d048889.png)'
- en: 'Figure 7\. Original signal (left column). Coarsest curvelet scale using scales
    = 2 (center column). Finest curvelet scale (right column). All other panels like
    Figure 6\. Note: this curvelet transform has a wavelet at the finest scale. Credit:
    own work.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7\. 原始信号（左列）。最粗糙的曲线变换尺度使用尺度 = 2（中列）。最细的曲线变换尺度（右列）。所有其他面板类似于图 6\. 注意：该曲线变换在最细尺度上有一个小波。致谢：自制。
- en: Comparing this plot to the original plot without resampling, we notice that
    the signal is accurately represented in both, but the strength of the resampled
    signal is larger. This is because the Fourier transform used to “return” to the
    spatial domain now has a normalization factor which is smaller than the original.
    Therefore the signal will be twice as strong (2 = √2 × √2, one square root per
    dimension, in this case two). This is also a general rule of the curvelet transform
    and Fourier transforms.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 将这个图与未重采样的原始图进行比较，我们可以注意到信号在两者中都被准确表示，但重采样信号的强度更大。这是因为用于“返回”到空间域的傅里叶变换现在具有一个比原始变换小的归一化因子。因此，信号将是原来的两倍强（2
    = √2 × √2，每个维度一个平方根，在这种情况下为两个）。这也是曲线变换和傅里叶变换的一般规则。
- en: Let’s apply this decomposition to another example.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将这种分解应用于另一个示例。
- en: '![](../Images/fc5a9faa1f6d452622e58bf94244af48.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fc5a9faa1f6d452622e58bf94244af48.png)'
- en: 'Figure 8\. Tetrachromatic signal composed of four signals: two spatial frequencies
    at -30° and 30° orientations. Panels like Figure 7\. Credit: own work.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8\. 四种信号组成的四色信号：-30° 和 30° 方向的两个空间频率。像图 7\. 这样的面板。致谢：自制。
- en: Separating Dips
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分离倾角
- en: While we have separated in *scale*, we still are not able to distinguish the
    two separate events, one at -30° and one at 30°. We need another type subdivision,
    one which splits a signal (of similar frequencies) further, into “subsignals”
    of similar *direction* (or *dip*, in geophysical lingo). Starting with the second
    scale (the one after the coarsest), we will further split it scale into *wedges*.
    These are approximately angular sectors in the 𝑘-space domain. The coarsest scale
    (scale = 0) is exempt from this splitting because the origin can’t be assigned
    to any particular wedge.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们已经在*尺度*上进行了分离，但我们仍然无法区分两个单独的事件，一个在 -30°，一个在 30°。我们需要另一种类型的细分，将信号（具有类似频率）进一步分割成具有类似*方向*（或在地球物理学术语中为*倾角*）的“子信号”。从第二个尺度开始（即最粗糙的尺度之后），我们将进一步将其尺度细分为*楔形*。这些大致是
    𝑘-空间域中的角度区域。最粗糙的尺度（尺度 = 0）不进行这种细分，因为原点无法分配到任何特定的楔形区域。
- en: '![](../Images/b3143a7c6b209b17881966b2a0469030.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b3143a7c6b209b17881966b2a0469030.png)'
- en: 'Figure 9\. Original tetrachromatic signal (leftmost column). Signal separated
    by "wedges" *in the Fourier domain (center-left to rightmost columns). Rows like
    Figures 6, 7 and 8\. Credit: own work.*'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9\. 原始四色信号（最左侧列）。信号通过“锥形”在傅里叶域中分离（从中心左侧到最右侧列）。行如图 6、7 和 8\. 来源：自制。
- en: We can see that we have been able to separate the signal into its two constituent
    components. For this signal, two of the wedges are identically zero. The signals
    in the first row, starting from the second column, are essentially what the curvelet
    coefficients would look like if we applied the curvelet transform with the parameters
    scales = 2 and wedges = 8.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到我们已经能够将信号分离为两个组成部分。对于这个信号，两个锥形完全为零。从第二列开始的第一行中的信号，本质上就是如果我们使用参数 scales
    = 2 和 wedges = 8 进行曲线小波变换时曲线小波系数的样子。
- en: One small caveat is that we are actually only showing **four wedges**. This
    is again because of the symmetry of the Fourier domain for real signals. For complex
    signals, we would have to treat each wedge (without its symmetrical counterpart)
    separately.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 一个小的警告是我们实际上只展示了**四个锥形**。这再次是由于实际信号傅里叶域的对称性。对于复杂信号，我们需要分别处理每个锥形（没有对称的对应物）。
- en: Fast Discrete Curvelet Transform
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 快速离散曲线小波变换
- en: 'We now have all ingredients to understand how Curvelet Transforms are implemented
    in practice. For example, we still have some kinks to iron out. One of them is
    the tapering: if we sum every wedge mask, we don’t get an exact value of 1.0 at
    every grid point in the 𝑘-space domain. This means that we may “lose” or “create”
    signal. A more pressing issue is performance: the wedges were transformed back
    to the spatial domain in a non-optimal way: we used a full-sized FFT transform
    to transform a small sliver of the 𝑘-space domain. This results in curvelet coefficients
    all shaped the same shape as our input image (in that example, 101 × 101).'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在拥有了理解如何在实践中实现曲线小波变换的所有要素。例如，我们仍然有一些问题需要解决。其中之一是锥形遮罩：如果我们将每个锥形遮罩相加，我们不会在𝑘-空间域的每个网格点上得到精确的1.0。这意味着我们可能会“丢失”或“产生”信号。更紧迫的问题是性能：这些锥形遮罩被以非最优的方式转换回空间域：我们使用了全尺寸的FFT变换来转换𝑘-空间域中的一小片区域。这导致了曲线小波系数与我们的输入图像（在这个例子中为101
    × 101）形状相同。
- en: Moreover, an important property of the continuous curvelet transform is that
    performing the steps backward to generate an output image *from* curvelet coefficients,
    should give you the exact same image that was used to obtain these coefficients
    in the first place. Mathematically, the transformation is unitary, that is, its
    adjoint is equal to its inverse. Our implementation does not respect this property.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，连续曲线小波变换的一个重要属性是，从曲线小波系数生成输出图像的步骤，应该给出与最初用于获得这些系数的图像完全相同的图像。在数学上，这个变换是单位的，即它的伴随等于其逆。我们的实现没有遵循这一属性。
- en: 'All these issues can be fixed. One construction which solves all these problems
    is the Fast Discrete Curvelet Transforms, developed by Emmanuel Candès, Laurent
    Demanet, David Donoho and Lexing Ying. Its most famous implementation is provided
    by the [CurveLab package](http://www.curvelet.org/software.html), which the [Curvelops](https://pylops.github.io/curvelops/)
    package wraps via Python (disclaimer: I developed Curvelops). Curvelops thereby
    provides a linear operator interface relying on [PyLops](https://pylops.readthedocs.io/)
    (disclaimer: I am one of the core devs of this library).'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些问题都可以解决。一个解决所有这些问题的构造是快速离散曲线小波变换，由 Emmanuel Candès、Laurent Demanet、David
    Donoho 和 Lexing Ying 开发。它最著名的实现由[CurveLab 包](http://www.curvelet.org/software.html)提供，[Curvelops](https://pylops.github.io/curvelops/)
    包通过 Python 封装了它（免责声明：我开发了 Curvelops）。Curvelops 因此提供了一个依赖于[PyLops](https://pylops.readthedocs.io/)的线性算子接口（免责声明：我是这个库的核心开发者之一）。
- en: Let’s explore the FDCT by applying it to the signal at hand, and compare the
    curvelet coefficients with what we generated before.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过将 FDCT 应用于当前信号，并将曲线小波系数与之前生成的进行比较。
- en: '![](../Images/9ae9e8ac86bd0ad9a7dc3eb3b43e5185.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9ae9e8ac86bd0ad9a7dc3eb3b43e5185.png)'
- en: 'Figure 10\. (Real) curvelet coefficients of the tetrachromatic signal. Credit:
    own work.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10\. （实际）曲线小波系数的四色信号。来源：自制。
- en: These look very similar to what we obtained before, with a few differences.
    First, as mentioned before, the algorithm actually outputted 8 wedges in the second
    scale; we merged them due to the symmetry of the Fourier space for real input
    signals. Second, we can see that the shapes are not the same as the input signal.
    The coarsest scale is about ⅔ of the input signal. On the second scale, not only
    the shapes are different, but the aspect ratio is also different. This is because
    different directions require different sampling. The FDCT handles all these issues
    for us, in a way that is performant and that respects the unitary nature of the
    continuous transform.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这些看起来与我们之前得到的非常相似，有一些区别。首先，如前所述，算法实际上在第二个尺度上输出了8个楔形；由于实际输入信号的傅里叶空间对称性，我们将它们合并了。其次，我们可以看到形状与输入信号不同。最粗尺度的大小约为输入信号的⅔。在第二个尺度上，不仅形状不同，纵横比也不同。这是因为不同的方向需要不同的采样。FDCT以高效的方式处理所有这些问题，并且尊重连续变换的单位性质。
- en: 'Now we are ready to understand the parameters of the FDCT:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们准备好理解FDCT的参数了：
- en: '**nbscales** (no default, minimum 2): Number of scales. The more scales, the
    finer the details the curvelet transform will capture. The downsides to more scales
    are performance and tapering issues. Both of these issues can be mitigated by
    setting `allcurvelets=False`.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**nbscales**（无默认值，最小值：2）：尺度数量。尺度越多，曲线小波变换捕获的细节越精细。更多尺度的缺点包括性能和渐缩问题。通过设置`allcurvelets=False`可以缓解这两个问题。'
- en: '**nbangles_coarse** (default: 16, minimum 8, must be a multiple of 4): Number
    of angles/wedges at the second coarsest scale. Remember that the coarsest scale
    is never subdivided. This value is only specified for the second scale because
    it will double every two scales (counting as if the first had `nbangles_coarse`
    wedges). So by setting a `nbscales=5` and `nbangles_coarse=8`, the second scale
    will have 8 wedges, the third 16 (as we have seen 2 scales by now), the fourth
    also 16, the fourth and last, 32 (as we have seen four scales so far). Downsides
    to increasing this parameter is also performance and tapering issues. Mitigate
    them also with `allcurvelets=False`.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**nbangles_coarse**（默认值：16，最小值：8，必须是4的倍数）：第二个最粗尺度的角度/楔形数量。请记住，最粗尺度从未被细分。此值仅在第二个尺度中指定，因为它每两个尺度会翻倍（假设第一个尺度有`nbangles_coarse`个楔形）。因此，通过设置`nbscales=5`和`nbangles_coarse=8`，第二个尺度将有8个楔形，第三个尺度有16个（如我们目前看到的两个尺度），第四个尺度也有16个，最后一个尺度有32个（如我们目前看到的四个尺度）。增加此参数的缺点还包括性能和渐缩问题。也可以通过设置`allcurvelets=False`来缓解这些问题。'
- en: '**allcurvelets** (default: True, boolean): Controls whether we perform wedge
    subdivision on the finest (last) scale. We did this in the latter example, but
    not in the one before that. From a practical point of view, despite defaulting
    to True, you should set this options to False unless there is a strong reason
    not to.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**allcurvelets**（默认值：True，布尔值）：控制是否对最细（最后一个）尺度进行楔形细分。我们在后面的示例中这样做了，但在前面的示例中没有。从实际的角度来看，尽管默认值为True，但除非有强烈的理由，否则应该将此选项设置为False。'
- en: Examples of the Fast Discrete Curvelet Transform
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 快速离散曲线小波变换示例
- en: Now that we understand these parameters, let’s have a look at the some curvelet
    coefficients from different parameters.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们理解了这些参数，让我们看看来自不同参数的一些曲线小波系数。
- en: '![](../Images/b35be09a962f8c89d04c3c4dd43b7b98.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b35be09a962f8c89d04c3c4dd43b7b98.png)'
- en: 'Figure 11\. Python "two-snakes" Logo. Credit: [Python Software Foundation](https://www.python.org/community/logos/).'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图11\. Python "two-snakes" Logo。来源：[Python Software Foundation](https://www.python.org/community/logos/)。
- en: '![](../Images/bf357ca1a486da0b56d75948c508ff3e.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bf357ca1a486da0b56d75948c508ff3e.png)'
- en: 'Figure 12\. Curvelet coefficients (`nbscales=4, nbangles_coarse=8, allcurvelets=False)`
    of the Python logo in Figure 11\. Credit: own work.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图12\. Python徽标的曲线小波系数（`nbscales=4, nbangles_coarse=8, allcurvelets=False`）。来源：自制。
- en: '![](../Images/e484815f7751bbfcb3bc8ae94c094d27.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e484815f7751bbfcb3bc8ae94c094d27.png)'
- en: 'Figure 13\. Curvelet coefficients (`nbscales=3, nbangles_coarse=8, allcurvelets=True)`
    of the Python logo in Figure 11\. Credit: own work.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图13\. Python徽标的曲线小波系数（`nbscales=3, nbangles_coarse=8, allcurvelets=True`）。来源：自制。
- en: It is interesting to notice that the “color” of the image is only in the coarsest
    scale because this scale contains the zero frequency aka the DC-component. All
    other scales add only variations on top of that initial image.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，图像的“颜色”仅存在于最粗尺度中，因为该尺度包含零频率，也就是DC分量。所有其他尺度仅在初始图像的基础上添加了变化。
- en: Another interesting aspect of the curvelet transform is that it is very easy
    to interpret its coefficients. They are essentially a “piece” of the original
    image which varies along certain preferential directions.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 曲波变换的另一个有趣的方面是，它的系数很容易解释。它们本质上是原始图像的“片段”，沿某些优选方向变化。
- en: But visualizing all of these coefficients can quickly become overwhelming. One
    way to overcome that is to extract features from a single wedge. In the following
    example we will subdivide each wedge into rows/cols, of which we will compute
    the energy. These energies will be mapped to disks in the Fourier domain. We will
    see below how this visualization can help us identify the preferential directions
    of events in an image in each scale.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，视觉化这些系数可能会很快变得令人不知所措。一种克服这种情况的方法是从单个楔形中提取特征。在接下来的示例中，我们将每个楔形划分为行/列，并计算其能量。这些能量将映射到傅里叶域中的盘中。我们将看到这种可视化如何帮助我们识别图像中每个尺度的事件的优选方向。
- en: '![](../Images/40a86e1ec80383592951466d4ca507f7.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/40a86e1ec80383592951466d4ca507f7.png)'
- en: 'Figure 14\. Sigmoid seismic model with curvelet strength disks overlain. Strength
    of disks should be largest perpendicular to the local dip. Credit: own work.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 图14。曲波强度盘叠加在 sigmoid 地震模型上的效果。盘的强度应该在局部凹陷方向上最大。来源：自己的工作。
- en: 'Here we are plotting, overlain on the original input signal (sigmoid seismic
    model) the strength of the curvelet coefficients at certain window in each scale/wedge.
    These disks mimic the wedge division we discussed above: the closest to the center,
    the lower the scale; the angular wedges map to the same place in the 𝑘-space domain,
    in a polar projection.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们在原始输入信号（sigmoid 地震模型）上绘制了每个尺度/楔形窗口中曲波系数的强度。这些盘模拟了我们上面讨论的楔形划分：离中心越近，尺度越小；角度楔形映射到𝑘-空间域中的同一位置，以极坐标投影呈现。
- en: Consequently, similar to our visualization of the 𝑘-max vectors, we should see
    that the strongest energy lies *perpendicular* to the preferential local dips.
    As a reminder, this happens because the strongest points in the 𝑘-space are those
    where the image varies the most in that direction. So, perpendicularly to where
    it varies the least. We can identify this behavior in the image especially near
    the top of the image, where the structure is regular.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，与我们对𝑘-max 向量的可视化类似，我们应该看到最强的能量方向*垂直*于优选的局部凹陷。作为提醒，这种情况发生是因为在𝑘-空间中，最强的点是图像在该方向上变化最大的位置。因此，最小变化的方向就是垂直方向。我们可以在图像中识别到这种行为，尤其是在图像的顶部，结构较为规则的地方。
- en: However, these disks give us even more information than the preferential dip
    at any arbitrary location. They also can give us an idea of the anisotropy of
    the image. For example, when there is no preferential direction, or many preferential
    directions, the image is more isotropic. And this information is provided not
    only locally in *space*, but also separated by *scales* (spatial frequencies).
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这些盘提供的信息不仅是任意位置的优选凹陷，还能给我们图像的各向异性的一些信息。例如，当没有优选方向或有多个优选方向时，图像更为各向同性。而且，这些信息不仅在*空间*上局部提供，还按*尺度*（空间频率）分开提供。
- en: Of course, even the disks are a aggregate of the full information that the curvelet
    transform contains, which attests to its power and versatility!
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，即使这些盘也是曲波变换所包含的完整信息的聚合，这也证明了它的强大和多功能性！
- en: These are just some examples of the curvelet transform. In upcoming articles,
    we will explore how they can be used for other tasks!
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这些只是曲波变换的一些示例。在即将到来的文章中，我们将探讨它们如何用于其他任务！
- en: Key Takeaways
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关键要点
- en: The **Fourier transform** of images give us an idea of the **preferential directions
    of change**
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像的**傅里叶变换**给我们提供了**优选变化方向的概念**。
- en: The **curvelet transform** goes a step beyond that, telling us how the image
    is **varies at each location, in which direction and with which spatial frequency**.
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**曲波变换**更进一步，告诉我们图像在每个位置如何**变化，变化的方向以及空间频率**。'
- en: The curvelet transform is traditionally performed with the FDCT (**Fast Discrete
    Curvelet Transform**) provided in **Python by curvelops and CurveLab**
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 曲波变换通常通过**Python中的 curvelops 和 CurveLab 提供的 FDCT（**快速离散曲波变换**）**来完成。
- en: The FDCT can be used in many areas such as **signal processing and deep learning**
    (see TorchOperator in PyLops).
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FDCT 可用于许多领域，如**信号处理和深度学习**（参见 PyLops 中的 TorchOperator）。
- en: Further Reading
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: '[1] Candès, E., Demanet, L., Donoho, D., & Ying, L. (2006). Fast Discrete Curvelet
    Transforms. *Multiscale Modeling & Simulation*, *5*(3), 861–899.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] Candès, E., Demanet, L., Donoho, D., & Ying, L. (2006). 快速离散曲线波变换。*多尺度建模与仿真*，*5*(3)，861–899。'
- en: '[2] Ma, J., & Plonka, G. (2010). The Curvelet Transform. *IEEE Signal Processing
    Magazine*, *27*(2), 118–133.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] Ma, J., & Plonka, G. (2010). 曲线波变换。*IEEE信号处理杂志*，*27*(2)，118–133。'
