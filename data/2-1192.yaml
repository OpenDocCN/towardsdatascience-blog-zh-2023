- en: How to Get the Most Out of Your Quantum Bit
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何充分利用你的量子比特
- en: 原文：[https://towardsdatascience.com/how-to-get-the-most-out-of-your-quantum-bit-56d4dc535aa6](https://towardsdatascience.com/how-to-get-the-most-out-of-your-quantum-bit-56d4dc535aa6)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-get-the-most-out-of-your-quantum-bit-56d4dc535aa6](https://towardsdatascience.com/how-to-get-the-most-out-of-your-quantum-bit-56d4dc535aa6)
- en: There’s more in a qubit than 0 and 1
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 量子比特的内容远不止0和1
- en: '[](https://pyqml.medium.com/?source=post_page-----56d4dc535aa6--------------------------------)[![Frank
    Zickert | Quantum Machine Learning](../Images/ae361c0d68d13dac21bb86c7496d2917.png)](https://pyqml.medium.com/?source=post_page-----56d4dc535aa6--------------------------------)[](https://towardsdatascience.com/?source=post_page-----56d4dc535aa6--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----56d4dc535aa6--------------------------------)
    [Frank Zickert | Quantum Machine Learning](https://pyqml.medium.com/?source=post_page-----56d4dc535aa6--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://pyqml.medium.com/?source=post_page-----56d4dc535aa6--------------------------------)[![Frank
    Zickert | Quantum Machine Learning](../Images/ae361c0d68d13dac21bb86c7496d2917.png)](https://pyqml.medium.com/?source=post_page-----56d4dc535aa6--------------------------------)[](https://towardsdatascience.com/?source=post_page-----56d4dc535aa6--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----56d4dc535aa6--------------------------------)
    [Frank Zickert | Quantum Machine Learning](https://pyqml.medium.com/?source=post_page-----56d4dc535aa6--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----56d4dc535aa6--------------------------------)
    ·7 min read·Jan 11, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----56d4dc535aa6--------------------------------)
    ·阅读时间7分钟·2023年1月11日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: Do you want to get started with Quantum Machine Learning? Have a look at [**Hands-On
    Quantum Machine Learning With Python**](https://www.pyqml.com/volume1?provider=medium&origin=mostofqubit)**.**
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 想开始学习量子机器学习吗？看看[**使用Python进行量子机器学习实操**](https://www.pyqml.com/volume1?provider=medium&origin=mostofqubit)**。**
- en: Quantum computers are one of the most promising technologies of the 21st century.
    However, we are still in the early stages of research to figure out how to build
    reliable quantum computers on a large scale.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 量子计算机是21世纪最有前景的技术之一。然而，我们仍处于研究早期阶段，以搞清楚如何大规模地构建可靠的量子计算机。
- en: But quantum computers are no science fiction anymore. IBM, Google, Microsoft,
    Amazon, and many more companies have started initiatives to tap the potential
    of available quantum computers commercially.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 但量子计算机不再是科幻小说。IBM、谷歌、微软、亚马逊以及许多其他公司已经开始了利用现有量子计算机潜力的商业化倡议。
- en: Yet, the major challenge is the tiny number of quantum bits (qubits) of the
    current devices. While we can’t simply increase that number, we can change how
    we use the qubits.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，主要挑战在于当前设备的量子比特（qubit）数量极少。虽然我们不能简单地增加这个数量，但我们可以改变使用量子比特的方式。
- en: This post proposes a new way to increase the amount of information we store
    in a qubit.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本文提出了一种增加量子比特中存储信息量的新方法。
- en: The qubit is in a state of superposition. This is a complex (as in complex numbers)
    linear relationship between its two basis states.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 量子比特处于叠加状态。这是一种复杂（即复数）的线性关系，存在于其两个基态之间。
- en: '![](../Images/404e41a8830212ae0356bdc1219619d1.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/404e41a8830212ae0356bdc1219619d1.png)'
- en: Image by author
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图像
- en: It is not discrete but continuous. It has two dimensions, the real amplitude,
    and the phase. With a theoretically infinite accuracy, one could store an unlimited
    amount of data.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 量子比特不是离散的，而是连续的。它有两个维度，即实际幅度和相位。理论上具有无限精度，可以存储无限量的数据。
- en: As soon as you measure it, it is either 0 or 1\. The qubit loses its magic.
    It collapses to one of only two values.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你对其进行测量，它的状态要么是0，要么是1。量子比特失去了它的魔力。它会坍缩到仅有的两个值之一。
- en: This is a problem because when we ask a quantum for a solution, there can only
    be two possible answers. 0 or 1\. Yes or No. This limits the possibility of asking
    complicated questions.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个问题，因为当我们请求量子计算机提供一个解决方案时，它只能有两个可能的答案。0或1。是或否。这限制了提问复杂问题的可能性。
- en: For example, when we aim to solve an optimization problem, we expect the system’s
    configuration that leads to the lowest cost as an answer. Therefore, we need a
    qubit for each part of the system configuration. But with the 27-qubit processors
    we can currently access, we can’t solve any problem that classical computers can’t
    solve.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，当我们旨在解决一个优化问题时，我们期望系统配置的答案是导致最低成本的配置。因此，我们需要为系统配置的每个部分配备一个量子比特。但使用我们目前可以访问的27量子比特处理器，我们无法解决任何经典计算机无法解决的问题。
- en: When we look at the Traveling Salesman Problem, which requires n²
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们研究需要n²的旅行商问题时
- en: qubits and where n is the number of locations to visit, even the current 433-Osprey
    could only solve a problem with 21 locations.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 量子比特和n是需要访问的地点数量，甚至当前的433-Osprey也只能解决21个地点的问题。
- en: If we are to take advantage of quantum computing in the foreseeable future,
    we need to make more of our qubits. We must not be so wasteful with the few qubits
    we have.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们希望在可预见的未来利用量子计算，我们需要更充分地利用我们的量子比特。我们不能对现有的少量量子比特浪费。
- en: It wasn’t long ago that we had very few classical bits. So few that we stored
    the year of date with only two digits, which eventually caused the Y2K problem.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 不久前，我们的经典比特非常少。少到我们用只有两位数字来存储年份，这最终导致了Y2K问题。
- en: Of course, being sparse with qubits may have downsides, but we’re not in a position
    where we have an abundance of qubits like we have with classical bits. So it’s
    time to recover scarcity awareness.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，量子比特稀缺可能有不利影响，但我们现在并不处于像经典比特那样充裕的状态。因此，是时候恢复稀缺意识了。
- en: 'We need to extract more information from a qubit than just zero or one. In
    fact, a quantum computing technique recovers the invisible state: quantum state
    tomography.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要从量子比特中提取比零或一更多的信息。事实上，一种量子计算技术恢复了不可见的状态：量子态层析。
- en: Suppose we measure a qubit under different observables, one for each of its
    three dimensions, and calculate the expectation value for each dimension. It allows
    us to create a density matrix that describes a complete picture of the system’s
    quantum state.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们在不同的可观察量下测量一个量子比特，每个维度一个，并计算每个维度的期望值。这使我们能够创建一个描述系统量子状态完整图景的密度矩阵。
- en: The problem with state tomography is that the number of observables grows exponentially
    with the number of qubits. Since we have to run the circuit separately for each
    observable, this increases complexity exponentially. But avoiding such a scenario
    is the whole purpose of using a quantum computer in the first place.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 状态层析的问题在于，随着量子比特数量的增加，可观察量的数量呈指数增长。由于我们必须为每个可观察量单独运行电路，这增加了复杂性。但是，避免这种情况是使用量子计算机的主要目的。
- en: Fortunately, there’s some light at the end of the tunnel.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，隧道的尽头有一线曙光。
- en: We run our quantum circuits a few thousand times anyway because qubits are probabilistic.
    In this way, we want to find the most probable solution. However, as a by-product
    of these calculations, we get many answers that we do not use. However, looking
    only at the most likely result and ignoring the rest is a waste of resources.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们无论如何都会运行几千次量子电路，因为量子比特具有概率性。通过这种方式，我们希望找到最可能的解决方案。然而，作为这些计算的副产品，我们得到许多未使用的答案。然而，仅查看最可能的结果而忽略其余部分是资源的浪费。
- en: This is especially true if we consider that the repeated execution of a circuit
    reveals much more information about the underlying quantum state. It allows us
    to calculate the expectation value. Even though this is still only a fraction
    of the entire quantum state, the expectation value is more detailed than the binary
    measurement yielding zero or one.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 尤其是当我们考虑到重复执行电路会揭示更多关于基础量子状态的信息时。这使我们能够计算期望值。尽管这仍然只是整个量子状态的一部分，期望值比二进制测量（零或一）更为详细。
- en: So if we look at the expectation value, we get a floating point between 0 and
    1\. The accuracy depends on the number of repetitions in the experiment. The more
    often we run the circuit, the more accurately we can give the number.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果我们查看期望值，我们会得到一个介于0和1之间的浮点数。准确度取决于实验中的重复次数。我们运行电路的次数越多，给出数字的准确度就越高。
- en: For example, the following circuit yields one with a probability of 72.4%. Therefore,
    the expectation value is 0.724 (if we weigh the measurements). This is much more
    information than interpreting the result as “probably one.”
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以下电路以72.4%的概率产生1。因此，期望值是0.724（如果我们对测量结果进行加权）。这比将结果解释为“可能是1”提供了更多信息。
- en: '[PRE0]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](../Images/aa07334cf7f35ea76c5c15dbd6a14bf7.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/aa07334cf7f35ea76c5c15dbd6a14bf7.png)'
- en: Image by author
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: The caveat of this experiment is that we used the state vector simulator. This
    simulator calculates the exact quantum state. So there is no randomness at all.
    Unfortunately, we can only do this for very few qubits, and it does not apply
    to the results we would get with a real quantum computer.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这个实验的警告是我们使用了状态矢量模拟器。这个模拟器计算精确的量子态。因此，完全没有随机性。不幸的是，我们只能对极少数量子比特进行这种操作，并且它不适用于我们在真实量子计算机上得到的结果。
- en: The following example shows the same experiment using the QASM simulator.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例展示了使用QASM模拟器进行的相同实验。
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/85a11261e6696b4c3deaf5d1f84898ce.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/85a11261e6696b4c3deaf5d1f84898ce.png)'
- en: Image by author
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: The `qasm_simulator` determines the measured values empirically. So the result
    is not entirely accurate. The higher the number of repetitions (specified by the
    shots parameter), the more precise the result becomes.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '`qasm_simulator`通过经验确定测量值。因此，结果并不是完全准确的。重复次数（由shots参数指定）越多，结果就越精确。'
- en: However, increasing the precision comes at the cost of executing the circuit
    more often. So, retrieving information using the expectation value is no free
    lunch.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，提高精度的代价是需要更频繁地执行电路。因此，使用期望值检索信息并不是免费的午餐。
- en: Even worse, the qubits of a real quantum computer are prone to errors. The errors
    further blur the measurements. The following example adds such noise to the simulation.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 更糟的是，真实量子计算机的量子比特容易出错。这些错误进一步模糊了测量结果。以下示例在模拟中加入了这种噪声。
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/7ba4e0eaece564391f48016b5ad34b57.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7ba4e0eaece564391f48016b5ad34b57.png)'
- en: Image by author
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: When noise is present, the result deviates even further from the perfect result.
    And we haven’t even started working with the qubit yet. The more we work with
    the qubit, the more it is exposed to noise.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 当噪声存在时，结果会进一步偏离完美结果。而且我们甚至还没有开始处理量子比特。我们与量子比特的互动越多，它就越容易受到噪声的影响。
- en: This inevitably leads to a loss of precision. However, in many cases, we do
    not need high accuracy for an answer. Coarse values are often sufficient. So we
    don’t need to know that the expected value is precisely 0.724, but it is good
    enough to see that it is around 0.7.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这不可避免地导致精度损失。然而，在许多情况下，我们不需要对答案有很高的准确度。粗略的值通常就足够了。因此，我们不需要知道期望值精确为0.724，但看到它在0.7左右就足够了。
- en: But what if we are not interested in a floating point but looking for a discrete
    answer?
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 但如果我们对浮点数不感兴趣，而是寻找一个离散的答案怎么办？
- en: Why don’t we interpret different expectation values as different discrete numbers?
    For example, we might interpret expectation values below 0.25 as 0, expectation
    values between 0.25 and 0.5 as 1, between 0.5 and 0.75 as 2, and above 0.75 as
    3\. So we would encode four discrete values in one qubit.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么我们不将不同的期望值解释为不同的离散数字呢？例如，我们可以将低于0.25的期望值解释为0，将0.25到0.5之间的期望值解释为1，将0.5到0.75之间的期望值解释为2，将0.75以上的期望值解释为3。这样，我们将在一个量子比特中编码四个离散值。
- en: The following code shows how such a discretization works.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码展示了这种离散化是如何工作的。
- en: '[PRE3]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In addition to the number of measurements, the discretization function also
    takes the number of blocks as a parameter. This indicates the number of different
    values as which the expected value is to be interpreted. Of course, we can choose
    any number of blocks. But the more numbers we encode in a qubit, the more prone
    it becomes to inaccuracies and noise.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 除了测量次数，离散化函数还将块数作为参数。这表示期望值被解释为不同值的数量。当然，我们可以选择任意数量的块。但我们在一个量子比特中编码的数字越多，它对不准确性和噪声的敏感度就越高。
- en: Conclusion
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: I believe it is worthwhile to encode more than just two values in a qubit, especially
    when we are facing an extreme scarcity of qubits.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为，在面对量子比特极度稀缺的情况时，将超过两个值编码到一个量子比特中是值得的。
- en: Unfortunately, the few qubits we have are also prone to noise. Moreover, when
    we encode more than two values in a qubit, we rely even more on the correctness
    of the qubits. So the idea presented here is certainly a compromise.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，我们拥有的少量量子比特也容易受到噪声的影响。此外，当我们在一个量子比特中编码多个值时，我们对量子比特的准确性依赖更大。因此，这里提出的想法确实是一个折衷。
- en: Still, noise is something we can work with. It’s not easy, but we can get a
    handle on it. But we can only work with the available qubits. If that number is
    too small to represent a meaningful real-world problem, we simply cannot solve
    such problems.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，噪声是我们可以应对的。虽然这不容易，但我们可以掌握它。然而，我们只能使用可用的量子比特。如果这个数量太小以至于无法代表一个有意义的现实问题，我们就无法解决这些问题。
- en: So if we want to solve real-world problems, we have to make sure we have enough
    qubits, whatever tradeoff might be necessary.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，如果我们想解决现实世界中的问题，我们必须确保有足够的量子比特，无论需要什么权衡。
- en: '[](https://pyqml.medium.com/membership?source=post_page-----56d4dc535aa6--------------------------------)
    [## Join Medium with my referral link - Frank Zickert | Quantum Machine Learning'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://pyqml.medium.com/membership?source=post_page-----56d4dc535aa6--------------------------------)
    [## 通过我的推荐链接加入 Medium - Frank Zickert | 量子机器学习'
- en: Get Started With Quantum Machine Learning (and get full access to every story
    on Medium) Get full access to all the…
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 开始学习量子机器学习（并获得 Medium 上每篇文章的完整访问权限）获取所有内容的完整访问权限…
- en: pyqml.medium.com](https://pyqml.medium.com/membership?source=post_page-----56d4dc535aa6--------------------------------)
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: pyqml.medium.com](https://pyqml.medium.com/membership?source=post_page-----56d4dc535aa6--------------------------------)
- en: Don’t miss the next episode, and subscribe to my [Substack channel](https://pyqml.substack.com/).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 不要错过下一集，订阅我的 [Substack 频道](https://pyqml.substack.com/)。
- en: Do you want to get started with Quantum Machine Learning? Have a look at [**Hands-On
    Quantum Machine Learning With Python**](https://www.pyqml.com/page?ref=medium_getmost&dest=%2F)**.**
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 想要开始量子机器学习吗？看看 [**用 Python 实践量子机器学习**](https://www.pyqml.com/page?ref=medium_getmost&dest=%2F)**。**
- en: '![](../Images/c3892c668b9d47f57e47f1e6d80af7b6.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c3892c668b9d47f57e47f1e6d80af7b6.png)'
- en: Get the first three chapters for free [here](https://www.pyqml.com/page?ref=medium_getmost&dest=%2F).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 免费获取前三章 [这里](https://www.pyqml.com/page?ref=medium_getmost&dest=%2F)。
