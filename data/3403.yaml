- en: Type-Hinting DataFrames for Static Analysis and Runtime Validation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 类型提示数据框用于静态分析和运行时验证
- en: 原文：[https://towardsdatascience.com/type-hinting-dataframes-for-static-analysis-and-runtime-validation-3dedd2df481d?source=collection_archive---------3-----------------------#2023-11-16](https://towardsdatascience.com/type-hinting-dataframes-for-static-analysis-and-runtime-validation-3dedd2df481d?source=collection_archive---------3-----------------------#2023-11-16)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/type-hinting-dataframes-for-static-analysis-and-runtime-validation-3dedd2df481d?source=collection_archive---------3-----------------------#2023-11-16](https://towardsdatascience.com/type-hinting-dataframes-for-static-analysis-and-runtime-validation-3dedd2df481d?source=collection_archive---------3-----------------------#2023-11-16)
- en: How StaticFrame Enables Comprehensive DataFrame Type Hints
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: StaticFrame如何实现全面的数据框类型提示
- en: '[](https://medium.com/@flexatone?source=post_page-----3dedd2df481d--------------------------------)[![Christopher
    Ariza](../Images/35208ace15080724e4cd6690e43d6502.png)](https://medium.com/@flexatone?source=post_page-----3dedd2df481d--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3dedd2df481d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3dedd2df481d--------------------------------)
    [Christopher Ariza](https://medium.com/@flexatone?source=post_page-----3dedd2df481d--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@flexatone?source=post_page-----3dedd2df481d--------------------------------)[![Christopher
    Ariza](../Images/35208ace15080724e4cd6690e43d6502.png)](https://medium.com/@flexatone?source=post_page-----3dedd2df481d--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3dedd2df481d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3dedd2df481d--------------------------------)
    [Christopher Ariza](https://medium.com/@flexatone?source=post_page-----3dedd2df481d--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6a4f500b1e4f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftype-hinting-dataframes-for-static-analysis-and-runtime-validation-3dedd2df481d&user=Christopher+Ariza&userId=6a4f500b1e4f&source=post_page-6a4f500b1e4f----3dedd2df481d---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----3dedd2df481d--------------------------------)
    ·9 min read·Nov 16, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F3dedd2df481d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftype-hinting-dataframes-for-static-analysis-and-runtime-validation-3dedd2df481d&user=Christopher+Ariza&userId=6a4f500b1e4f&source=-----3dedd2df481d---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6a4f500b1e4f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftype-hinting-dataframes-for-static-analysis-and-runtime-validation-3dedd2df481d&user=Christopher+Ariza&userId=6a4f500b1e4f&source=post_page-6a4f500b1e4f----3dedd2df481d---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----3dedd2df481d--------------------------------)
    · 9分钟阅读 · 2023年11月16日'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3dedd2df481d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftype-hinting-dataframes-for-static-analysis-and-runtime-validation-3dedd2df481d&source=-----3dedd2df481d---------------------bookmark_footer-----------)![](../Images/fcedb934dd797193272db95f8b6f913b.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3dedd2df481d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftype-hinting-dataframes-for-static-analysis-and-runtime-validation-3dedd2df481d&source=-----3dedd2df481d---------------------bookmark_footer-----------)![](../Images/fcedb934dd797193272db95f8b6f913b.png)'
- en: Photo by Author
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 作者照片
- en: 'Since the advent of type hints in Python 3.5, statically typing a DataFrame
    has generally been limited to specifying just the type:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 自从Python 3.5引入类型提示以来，静态类型数据框通常只限于指定类型：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This is inadequate, as it ignores the types contained within the container.
    A DataFrame might have string column labels and three columns of integer, string,
    and floating-point values; these characteristics define the type. A function argument
    with such type hints provides developers, static analyzers, and runtime checkers
    with all the information needed to understand the expectations of the interface.
    [StaticFrame](https://github.com/static-frame/static-frame) 2 (an open-source
    project of which I am lead developer) now permits this:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这是不足的，因为它忽略了容器中包含的类型。一个 DataFrame 可能具有字符串列标签和三列整数、字符串和浮点值；这些特征定义了类型。具有此类类型提示的函数参数为开发人员、静态分析器和运行时检查器提供了理解接口期望的所有信息。
    [StaticFrame](https://github.com/static-frame/static-frame) 2（我是该开源项目的主要开发者）现在允许这样做：
- en: '[PRE1]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: All core StaticFrame containers now support generic specifications. While statically
    checkable, a new decorator, `[@CallGuard](http://twitter.com/CallGuard).check`,
    permits runtime validation of these type hints on function interfaces. Further,
    using `Annotated` generics, the new `Require` class defines a family of powerful
    runtime validators, permitting per-column or per-row data checks. Finally, each
    container exposes a new `via_type_clinic` interface to derive and validate type
    hints. Together, these tools offer a cohesive approach to type-hinting and validating
    DataFrames.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 所有核心的 StaticFrame 容器现在都支持泛型规范。虽然可以静态检查，但一个新的装饰器 `[@CallGuard](http://twitter.com/CallGuard).check`
    允许在函数接口上对这些类型提示进行运行时验证。此外，使用 `Annotated` 泛型，新的 `Require` 类定义了一系列强大的运行时验证器，允许按列或按行数据进行检查。最后，每个容器都暴露了一个新的
    `via_type_clinic` 接口，用于推导和验证类型提示。这些工具共同提供了一种完整的类型提示和验证 DataFrame 的方法。
- en: Requirements of a Generic DataFrame
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 泛型 DataFrame 的要求
- en: Python’s built-in generic types (e.g., `tuple` or `dict`) require specification
    of component types (e.g., `tuple[int, str, bool]` or `dict[str, int]`). Defining
    component types permits more accurate static analysis. While the same is true
    for DataFrames, there have been few attempts to define comprehensive type hints
    for DataFrames.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Python 的内置泛型类型（例如 `tuple` 或 `dict`）需要指定组件类型（例如 `tuple[int, str, bool]` 或 `dict[str,
    int]`）。定义组件类型可以更准确地进行静态分析。尽管对于 DataFrame 也是如此，但很少有人尝试定义全面的 DataFrame 类型提示。
- en: Pandas, even with the `pandas-stubs` package, does not permit specifying the
    types of a DataFrame’s components. The Pandas DataFrame, permitting extensive
    in-place mutation, may not be sensible to type statically. Fortunately, immutable
    DataFrames are available in StaticFrame.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 即使使用 `pandas-stubs` 包，Pandas 也不允许指定 DataFrame 组件的类型。Pandas DataFrame 允许广泛的原地变异，可能不适合进行静态类型化。幸运的是，StaticFrame
    中提供了不可变的 DataFrame。
- en: Further, Python’s tools for defining generics, until recently, have not been
    well-suited for DataFrames. That a DataFrame has a variable number of heterogeneous
    columnar types poses a challenge for generic specification. Typing such a structure
    became easier with the new `TypeVarTuple`, introduced in Python 3.11 (and back-ported
    in the `typing_extensions` package).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，直到最近，Python 用于定义泛型的工具并不适合 DataFrame。一个 DataFrame 具有可变数量的异构列类型对于泛型规范是一个挑战。使用在
    Python 3.11 中引入的新的 `TypeVarTuple`（并在 `typing_extensions` 包中进行了回溯）更容易地对这种结构进行类型化。
- en: A `TypeVarTuple` permits defining generics that accept a variable number of
    types. (See [PEP 646](https://peps.python.org/pep-0646) for details.) With this
    new type variable, StaticFrame can define a generic `Frame` with a `TypeVar` for
    the index, a `TypeVar` for the columns, and a `TypeVarTuple` for zero or more
    columnar types.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '`TypeVarTuple` 允许定义可以接受多个类型的泛型。 (详见 [PEP 646](https://peps.python.org/pep-0646))。借助这种新的类型变量，StaticFrame
    可以定义一个通用的 `Frame`，它具有用于索引的 `TypeVar`、用于列的 `TypeVar`，以及用于零个或多个列类型的 `TypeVarTuple`。'
- en: A generic `Series` is defined with a `TypeVar` for the index and a `TypeVar`
    for the values. The StaticFrame `Index` and `IndexHierarchy` are also generic,
    the latter again taking advantage of `TypeVarTuple` to define a variable number
    of component `Index` for each depth level.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 泛型 `Series` 定义了一个用于索引的 `TypeVar` 和一个用于值的 `TypeVar`。StaticFrame 的 `Index` 和 `IndexHierarchy`
    也是泛型的，后者再次利用 `TypeVarTuple` 来定义每个深度级别的可变数量的组件 `Index`。
- en: StaticFrame uses NumPy types to define the columnar types of a `Frame`, or the
    values of a `Series` or `Index`. This permits narrowly specifying sized numerical
    types, such as `np.uint8` or `np.complex128`; or broadly specifying categories
    of types, such as `np.integer` or `np.inexact`. As StaticFrame supports all NumPy
    types, the correspondence is direct.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: StaticFrame使用NumPy类型定义`Frame`的列类型，或者`Series`或`Index`的值类型。这允许严格指定大小的数值类型，如`np.uint8`或`np.complex128`；或广泛指定类型的类别，如`np.integer`或`np.inexact`。由于StaticFrame支持所有NumPy类型，因此对应关系是直接的。
- en: Interfaces Defined with Generic DataFrames
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用泛型数据框定义接口
- en: Extending the example above, the function interface below shows a `Frame` with
    three columns transformed into a dictionary of `Series`. With so much more information
    provided by component type hints, the function’s purpose is almost obvious.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述示例的基础上，以下函数接口显示了将三列`Frame`转换为`Series`字典。通过组件类型提示提供了更多信息，函数的目的几乎显而易见。
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This function processes a signal table from an [Open Source Asset Pricing](https://www.openassetpricing.com)
    (OSAP) dataset (Firm Level Characteristics / Individual / Predictors). Each table
    has three columns: security identifier (labeled “permno”), year and month (labeled
    “yyyymm”), and the signal (with a name specific to the signal).'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数处理来自[开源资产定价](https://www.openassetpricing.com)（OSAP）数据集（公司级特征/个体/预测器）的信号表。每个表具有三列：安全标识符（标记为“permno”）、年和月（标记为“yyyymm”）以及信号（具有特定信号的名称）。
- en: 'The function ignores the index of the provided `Frame` (typed as `Any`) and
    creates groups defined by the first column “permno” `np.int_` values. A dictionary
    keyed by “permno” is returned, where each value is a `Series` of `np.float64`
    values for that “permno”; the index is an `IndexYearMonth` created from the `np.str_`
    “yyyymm” column. (StaticFrame uses NumPy `datetime64` values to define unit-typed
    indices: `IndexYearMonth` stores `datetime64[M]` labels.)'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数忽略所提供`Frame`的索引（类型为`Any`），并创建由第一列“permno” `np.int_`值定义的组。返回以“permno”为键的字典，其中每个值是该“permno”的`np.float64`值的`Series`；索引是从`np.str_`“yyyymm”列创建的`IndexYearMonth`。（StaticFrame使用NumPy
    `datetime64`值来定义单位类型的索引：`IndexYearMonth`存储`datetime64[M]`标签。）
- en: Rather than returning a `dict`, the function below returns a `Series` with a
    hierarchical index. The `IndexHierarchy` generic specifies a component `Index`
    for each depth level; here, the outer depth is an `Index[np.int_]` (derived from
    the “permno” column), the inner depth an `IndexYearMonth` (derived from the “yyyymm”
    column).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 以下函数不返回`dict`，而是返回具有分层索引的`Series`。`IndexHierarchy`泛型指定了每个深度级别的组件`Index`；在此处，外部深度是从“permno”列派生的`Index[np.int_]`，内部深度是从“yyyymm”列派生的`IndexYearMonth`。
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Rich type hints provide a self-documenting interface that makes functionality
    explicit. Even better, these type hints can be used for static analysis with Pyright
    (now) and Mypy (pending full `TypeVarTuple` support). For example, calling this
    function with a `Frame` of two columns of `np.float64` will fail a static analysis
    type check or deliver a warning in an editor.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 丰富的类型提示提供了一个自描述的接口，使功能明确。更好的是，这些类型提示可以用于与Pyright（现在）和Mypy（待完全支持`TypeVarTuple`）的静态分析。例如，使用两列`np.float64`的`Frame`调用此函数将在编辑器中失败静态分析类型检查或提供警告。
- en: Runtime Type Validation
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行时类型验证
- en: 'Static type checking may not be enough: runtime evaluation provides even stronger
    constraints, particularly for dynamic or incompletely (or incorrectly) type-hinted
    values.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 静态类型检查可能不足够：运行时评估提供了更强的约束，特别是对于动态或未完全（或错误地）类型提示的值。
- en: Building on a new runtime type checker named `TypeClinic`, StaticFrame 2 introduces
    `[@CallGuard](http://twitter.com/CallGuard).check`, a decorator for runtime validation
    of type-hinted interfaces. All StaticFrame and NumPy generics are supported, and
    most built-in Python types are supported, even when deeply nested. The function
    below adds the `[@CallGuard](http://twitter.com/CallGuard).check` decorator.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 基于名为`TypeClinic`的新运行时类型检查器，StaticFrame 2引入了`[@CallGuard](http://twitter.com/CallGuard).check`，一个用于类型提示接口运行时验证的装饰器。支持所有StaticFrame和NumPy泛型，并支持大多数内置Python类型，即使嵌套深度很深。以下函数添加了`[@CallGuard](http://twitter.com/CallGuard).check`装饰器。
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Now decorated with `[@CallGuard](http://twitter.com/CallGuard).check`, if the
    function above is called with an unlabelled `Frame` of two columns of `np.float64`,
    a `ClinicError` exception will be raised, illustrating that, where three columns
    were expected, two were provided, and where string column labels were expected,
    integer labels were provided. (To issue warnings instead of raising exceptions,
    use the `[@CallGuard](http://twitter.com/CallGuard).warn` decorator.)
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在使用 `[@CallGuard](http://twitter.com/CallGuard).check` 装饰，如果上述函数用于未标记的 `np.float64`
    两列的 `Frame`，则会引发 `ClinicError` 异常，说明预期有三列，但只提供了两列，并且预期字符串列标签，但提供了整数标签。（要发出警告而不是引发异常，请使用
    `[@CallGuard](http://twitter.com/CallGuard).warn` 装饰。）
- en: '[PRE5]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Runtime Data Validation
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行时数据验证
- en: Other characteristics can be validated at runtime. For example, the `shape`
    or `name` attributes, or the sequence of labels on the index or columns. The StaticFrame
    `Require` class provides a family of configurable validators.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 其他特性可以在运行时进行验证。例如，`shape` 或 `name` 属性，或者索引或列上的标签顺序。StaticFrame 的 `Require` 类提供了一系列可配置的验证器。
- en: '`Require.Name`: Validate the ``name`` attribute of the container.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Require.Name`: 验证容器的 `name` 属性。'
- en: '`Require.Len`: Validate the length of the container.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Require.Len`: 验证容器的长度。'
- en: '`Require.Shape`: Validate the ``shape`` attribute of the container.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Require.Shape`: 验证容器的 `shape` 属性。'
- en: '`Require.LabelsOrder`: Validate the ordering of the labels.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Require.LabelsOrder`: 验证标签的顺序。'
- en: '`Require.LabelsMatch`: Validate inclusion of labels independent of order.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Require.LabelsMatch`: 验证包含标签而不考虑顺序。'
- en: '`Require.Apply`: Apply a Boolean-returning function to the container.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Require.Apply`: 将返回布尔值的函数应用于容器。'
- en: Aligning with a growing trend, these objects are provided within type hints
    as one or more additional arguments to an `Annotated` generic. (See [PEP 593](https://peps.python.org/pep-0593)
    for details.) The type referenced by the first `Annotated` argument is the target
    of subsequent-argument validators. For example, if a `Index[np.str_]` type hint
    is replaced with an `Annotated[Index[np.str_], Require.Len(20)]` type hint, the
    runtime length validation is applied to the index associated with the first argument.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 符合增长趋势，这些对象作为一个或多个额外参数提供给 `Annotated` 泛型的类型提示。 （有关详细信息，请参阅 [PEP 593](https://peps.python.org/pep-0593)。）第一个
    `Annotated` 参数引用的类型是后续参数验证器的目标。例如，如果将 `Index[np.str_]` 类型提示替换为 `Annotated[Index[np.str_],
    Require.Len(20)]` 类型提示，则会对与第一个参数关联的索引应用运行时长度验证。
- en: 'Extending the example of processing an OSAP signal table, we might validate
    our expectation of column labels. The `Require.LabelsOrder` validator can define
    a sequence of labels, optionally using `…` for contiguous regions of zero or more
    unspecified labels. To specify that the first two columns of the table are labeled
    “permno” and “yyyymm”, while the third label is variable (depending on the signal),
    the following `Require.LabelsOrder` can be defined within an `Annotated` generic:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展处理 OSAP 信号表的示例，我们可以验证列标签的期望。`Require.LabelsOrder` 验证器可以定义一系列标签，可选地使用 `…` 表示零个或多个未指定的标签。为了指定表的前两列标签为
    “permno” 和 “yyyymm”，而第三个标签是可变的（取决于信号），可以在 `Annotated` 泛型内定义以下 `Require.LabelsOrder`：
- en: '[PRE6]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'If the interface expects a small collection of OSAP signal tables, we can validate
    the third column with the `Require.LabelsMatch` validator. This validator can
    specify required labels, sets of labels (from which at least one must match),
    and regular expression patterns. If tables from only three files are expected
    (i.e., “Mom12m.csv”, “Mom6m.csv”, and “LRreversal.csv”), we can validate the labels
    of the third column by defining `Require.LabelsMatch` with a set:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果接口期望小集合的 OSAP 信号表，我们可以使用 `Require.LabelsMatch` 验证器验证第三列。该验证器可以指定必需的标签、标签集合（其中至少一个必须匹配）和正则表达式模式。如果只期望来自三个文件的表（即
    “Mom12m.csv”、“Mom6m.csv” 和 “LRreversal.csv”），我们可以通过定义 `Require.LabelsMatch` 与集合来验证第三列的标签：
- en: '[PRE7]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Both `Require.LabelsOrder` and `Require.LabelsMatch` can associate functions
    with label specifiers to validate data values. If the validator is applied to
    column labels, a `Series` of column values will be provided to the function; if
    the validator is applied to index labels, a `Series` of row values will be provided
    to the function.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '`Require.LabelsOrder` 和 `Require.LabelsMatch` 都可以将函数与标签说明符关联，以验证数据值。如果验证器应用于列标签，则将一系列列值提供给函数；如果验证器应用于索引标签，则将一系列行值提供给函数。'
- en: Similar to the usage of `Annotated`, the label specifier is replaced with a
    list, where the first item is the label specifier, and the remaining items are
    row- or column-processing functions that return a Boolean.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于`Annotated`的用法，标签说明符被替换为一个列表，其中第一个项目是标签说明符，其余项目是返回布尔值的行或列处理函数。
- en: To extend the example above, we might validate that all “permno” values are
    greater than zero and that all signal values (“Mom12m”, “Mom6m”, “LRreversal”)
    are greater than or equal to -1.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 为了扩展上述示例，我们可能需要验证所有“permno”值是否大于零，以及所有信号值（“Mom12m”、“Mom6m”、“LRreversal”）是否大于或等于-1。
- en: '[PRE8]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'If a validation fails, `[@CallGuard](http://twitter.com/CallGuard).check` will
    raise an exception. For example, if the above function is called with a `Frame`
    that has an unexpected third-column label, the following exception will be raised:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果验证失败，`[@CallGuard](http://twitter.com/CallGuard).check`将引发异常。例如，如果调用上述函数时遇到意外的第三列标签，将引发以下异常：
- en: '[PRE9]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The Expressive Power of `TypeVarTuple`
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`TypeVarTuple`的表达能力'
- en: 'As shown above, `TypeVarTuple` permits specifying `Frame` with zero or more
    heterogeneous columnar types. For example, we can provide type hints for a `Frame`
    of two float or six mixed types:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所示，`TypeVarTuple`允许指定具有零个或多个异构列类型的`Frame`。例如，我们可以为两个浮点数或六种混合类型的`Frame`提供类型提示：
- en: '[PRE10]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'While this accommodates diverse DataFrames, type-hinting wide DataFrames, such
    as those with hundreds of columns, would be unwieldy. Python 3.11 introduces a
    new syntax to provide a variable range of types in `TypeVarTuple` generics: star
    expressions of `tuple` generic aliases. For example, to type-hint a `Frame` with
    a date index, string column labels, and any configuration of columnar types, we
    can star-unpack a `tuple` of zero or more `All`:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这适用于各种DataFrame，但对宽型DataFrame（例如具有数百列的DataFrame）的类型提示可能会显得笨拙。Python 3.11引入了一种新的语法，通过`TypeVarTuple`泛型提供可变范围的类型：`tuple`泛型别名的星号表达式。例如，要对具有日期索引、字符串列标签和任意列类型配置的`Frame`进行类型提示，我们可以星号解包零个或多个`All`的`tuple`。
- en: '[PRE11]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The `tuple` star expression can go anywhere in a list of types, but there can
    be only one. For example, the type hint below defines a `Frame` that must start
    with Boolean and string columns but has a flexible specification for any number
    of subsequent `np.float64` columns.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '`tuple`星号表达式可以出现在类型列表中的任何位置，但只能有一个。例如，下面的类型提示定义了一个必须以布尔值和字符串列开始的`Frame`，但对后续的`np.float64`列数量有灵活的规定。'
- en: '[PRE12]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Utilities for Type Hinting
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 类型提示工具
- en: Working with such detailed type hints can be challenging. To aid users, StaticFrame
    provides convenient utilities for runtime type hinting and checking. All StaticFrame
    2 containers now feature a `via_type_clinic` interface, permitting access to `TypeClinic`
    functionality.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 使用如此详细的类型提示可能会很具挑战性。为了帮助用户，StaticFrame提供了便捷的运行时类型提示和检查工具。所有StaticFrame 2容器现在都具备`via_type_clinic`接口，允许访问`TypeClinic`功能。
- en: First, utilities are provided to translate a container, such as a complete `Frame`,
    into a type hint. The string representation of the `via_type_clinic` interface
    provides a string representation of the container’s type hint; alternatively,
    the `to_hint()` method returns a complete generic alias object.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，提供了将容器（例如完整的`Frame`）转换为类型提示的工具。`via_type_clinic`接口的字符串表示提供了容器类型提示的字符串表示；另外，`to_hint()`方法返回一个完整的泛型别名对象。
- en: '[PRE13]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Second, utilities are provided for runtime-type-hint testing. The `via_type_clinic.check()`
    function permits validating the container against a provided type hint.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，提供了用于运行时类型提示测试的工具。`via_type_clinic.check()`函数允许根据提供的类型提示验证容器。
- en: '[PRE14]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: To support gradual typing, StaticFrame defines several generic aliases configured
    with `Any` for every component type. For example, `TFrameAny` can be used for
    any `Frame`, and `TSeriesAny` for any `Series`. As expected, `TFrameAny` will
    validate the `Frame` created above.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 为支持渐进类型，StaticFrame定义了几个配置为每种组件类型的`Any`的泛型别名。例如，`TFrameAny`可用于任何`Frame`，而`TSeriesAny`用于任何`Series`。如预期的那样，`TFrameAny`将验证上面创建的`Frame`。
- en: '[PRE15]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Conclusion
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: Better type hinting for DataFrames is overdue. With modern Python typing tools
    and a DataFrame built on an immutable data model, StaticFrame 2 meets this need,
    providing powerful resources for engineers prioritizing maintainability and verifiability.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 更好的DataFrame类型提示早已迫切需要。凭借现代Python类型工具和基于不可变数据模型构建的DataFrame，StaticFrame 2满足了这一需求，为优先考虑可维护性和可验证性的工程师提供了强大的资源。
