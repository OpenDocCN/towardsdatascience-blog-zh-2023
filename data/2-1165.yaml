- en: How to Develop a Streamlit Data Analytics Web App in 3 Steps
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何在3个步骤中开发Streamlit数据分析Web应用
- en: 原文：[https://towardsdatascience.com/how-to-develop-a-data-analytics-web-app-in-3-steps-92cd5e901c52](https://towardsdatascience.com/how-to-develop-a-data-analytics-web-app-in-3-steps-92cd5e901c52)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-develop-a-data-analytics-web-app-in-3-steps-92cd5e901c52](https://towardsdatascience.com/how-to-develop-a-data-analytics-web-app-in-3-steps-92cd5e901c52)
- en: Step-by-Step Guide to Build Your First YouTube Analytics App
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建你的第一个YouTube分析应用的逐步指南
- en: '[](https://destingong.medium.com/?source=post_page-----92cd5e901c52--------------------------------)[![Destin
    Gong](../Images/c93d4341a928c36bc47031f02e23ebbf.png)](https://destingong.medium.com/?source=post_page-----92cd5e901c52--------------------------------)[](https://towardsdatascience.com/?source=post_page-----92cd5e901c52--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----92cd5e901c52--------------------------------)
    [Destin Gong](https://destingong.medium.com/?source=post_page-----92cd5e901c52--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://destingong.medium.com/?source=post_page-----92cd5e901c52--------------------------------)[![Destin
    Gong](../Images/c93d4341a928c36bc47031f02e23ebbf.png)](https://destingong.medium.com/?source=post_page-----92cd5e901c52--------------------------------)[](https://towardsdatascience.com/?source=post_page-----92cd5e901c52--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----92cd5e901c52--------------------------------)
    [Destin Gong](https://destingong.medium.com/?source=post_page-----92cd5e901c52--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----92cd5e901c52--------------------------------)
    ·8 min read·Feb 25, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----92cd5e901c52--------------------------------)
    ·8分钟阅读·2023年2月25日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/2033b5a816b904b2e5d44e11dcbc8159.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2033b5a816b904b2e5d44e11dcbc8159.png)'
- en: Photo by [Tran Mau Tri Tam](https://unsplash.com/@tranmautritam?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Tran Mau Tri Tam](https://unsplash.com/@tranmautritam?utm_source=medium&utm_medium=referral)
    在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: 'For the majority of the time, data science/data analytics projects end up as
    delivering a static report or dashboard, which tremendously downgrades the efforts
    and thoughts being put into the process. Alternatively, web app is a great way
    to demonstrate your data analytics work, which can be further expanded as a service
    on self-served and interactive platforms. However, as data scientists or data
    analysts, we are not trained for developing softwares or websites. In this article,
    I would like to introduce tools like Streamlit and Plotly that allows us to easily
    develop and serve your data analytics projects through a web app, with the following
    three steps:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数情况下，数据科学/数据分析项目最终会交付一个静态报告或仪表板，这大大降低了投入过程中的努力和思考。另一方面，Web应用是展示你的数据分析工作的绝佳方式，之后可以进一步扩展为自服务和互动平台上的服务。然而，作为数据科学家或数据分析师，我们没有开发软件或网站的训练。在这篇文章中，我将介绍像Streamlit和Plotly这样的工具，这些工具使我们能够通过Web应用轻松开发和服务你的数据分析项目，步骤如下：
- en: '![](../Images/4a8bbd1139b13a7381239bbf0f585642.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4a8bbd1139b13a7381239bbf0f585642.png)'
- en: Develop Data Analytic Web App in 3 Steps (image from author’s [website](https://www.visual-design.net/))
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在3个步骤中开发数据分析Web应用（图像来自作者的 [网站](https://www.visual-design.net/)）
- en: Extract Data and Build Database
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提取数据并建立数据库
- en: Define Data Analytics Process as Functions
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据分析过程定义为函数
- en: Construct Web App Interface
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建Web应用界面
- en: 'Afterwards, we will be able to create a simple web app like this:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们将能够创建一个像这样的简单Web应用：
- en: '![](../Images/4257b12e6861996a382075406fc59159.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4257b12e6861996a382075406fc59159.png)'
- en: Web App Demo (image by author)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Web应用演示（图像由作者提供）
- en: Step 1\. Extract and Build Database
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一步：提取数据并建立数据库
- en: '![](../Images/51b83b830a3cadf53e06eba1f6e5d885.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/51b83b830a3cadf53e06eba1f6e5d885.png)'
- en: Step 1 in Developing Data Analytics Web App (image by author)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 开发数据分析Web应用的第一步（图像由作者提供）
- en: We will use YouTube Data as an example here, since it is relevant to our daily
    life. YouTube Data API allows us to get public YouTube data, such as video statistics
    (e.g. number of likes, views) or content details (e.g. tags, title, comments).
    To set up the YouTube API, it is required to sign up a Google Developer account
    and set up an API key. Here are some resources I found helpful to get myself started
    on using YouTube API.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在这里使用 YouTube 数据作为示例，因为它与我们的日常生活相关。YouTube 数据 API 允许我们获取公共 YouTube 数据，例如视频统计数据（如点赞数、观看次数）或内容详细信息（如标签、标题、评论）。要设置
    YouTube API，需要注册 Google 开发者账户并设置 API 密钥。以下是一些对我开始使用 YouTube API 很有帮助的资源。
- en: '[Python YouTube API Tutorial: Getting Started — Creating an API Key and Querying
    the API](https://www.youtube.com/watch?v=th5_9woFJmk&t=1036s&ab_channel=CoreySchafer)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python YouTube API 教程：入门 — 创建 API 密钥和查询 API](https://www.youtube.com/watch?v=th5_9woFJmk&t=1036s&ab_channel=CoreySchafer)'
- en: '[YouTube Data API Documentation](https://developers.google.com/youtube/v3/docs)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[YouTube 数据 API 文档](https://developers.google.com/youtube/v3/docs)'
- en: '[Google API Python Client](https://github.com/googleapis/google-api-python-client/blob/main/docs/start.md)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Google API Python 客户端](https://github.com/googleapis/google-api-python-client/blob/main/docs/start.md)'
- en: 'These resources takes us through how to create a YouTube API key and install
    required library (e.g. googleapiclient.discovery). After these dependencies have
    been resolved, we set up the connection to the API using Python and your own API
    key, using the following command:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这些资源带我们了解如何创建 YouTube API 密钥和安装所需的库（例如 googleapiclient.discovery）。解决这些依赖关系后，我们使用
    Python 和自己的 API 密钥设置与 API 的连接，使用以下命令：
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: After establishing the connection, it’s time to explore what data is available
    for your data science projects. To do this, take a look at the [YouTube Data API
    documentation](https://developers.google.com/youtube/v3/docs), which provides
    an overview of the different kinds of data that can be accessed.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 建立连接后，是时候探索你的数据科学项目可以使用的数据了。为此，请查看 [YouTube 数据 API 文档](https://developers.google.com/youtube/v3/docs)，它提供了可以访问的不同类型数据的概述。
- en: '![](../Images/f6466744fc067222b4005141934d56ff.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f6466744fc067222b4005141934d56ff.png)'
- en: YouTube Data API reference list (screenshot by author)
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: YouTube 数据 API 参考列表（截图由作者提供）
- en: We will use “[Videos](https://developers.google.com/youtube/v3/docs/videos/list)”
    as an example for this project and the `list()`method allows us to request the
    “[Video Resource](https://developers.google.com/youtube/v3/docs/videos#resource)”
    by passing the *part* parameter and several *filters*. *part* parameter specifies
    which components from the Video Resource you would like to fetch and here I am
    getting *snippet, statistics, and contentDetails*. Have a look at this [documentation](https://developers.google.com/youtube/v3/docs/videos#resource)
    which details all fields you can get from `videos().list()` method. And we specify
    the following *filter* parameters to limit the results returned from this request.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 “[Videos](https://developers.google.com/youtube/v3/docs/videos/list)”
    作为此项目的示例，`list()` 方法允许我们通过传递 *part* 参数和几个 *filters* 请求 “[Video Resource](https://developers.google.com/youtube/v3/docs/videos#resource)”。*part*
    参数指定要从视频资源中提取哪些组件，这里我选择了 *snippet, statistics, and contentDetails*。请查看这份 [文档](https://developers.google.com/youtube/v3/docs/videos#resource)，它详细列出了你可以从
    `videos().list()` 方法中获取的所有字段。我们还指定了以下 *filter* 参数来限制此请求返回的结果。
- en: '`chart=’mostPopular’`: get the most popular videos'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`chart=''mostPopular''`：获取最受欢迎的视频'
- en: '`regionCode=''US’`: videos from US'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`regionCode=''US''`：来自美国的视频'
- en: '`videoCategoryId=1`: get the videos from a specific video category (e.g. 1
    is for Film & Animation), which can be found in this catalog of [video category
    ID](https://gist.github.com/dgp/1b24bf2961521bd75d6c).'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`videoCategoryId=1`：从特定视频类别获取视频（例如，1 代表电影和动画），可以在 [视频类别 ID](https://gist.github.com/dgp/1b24bf2961521bd75d6c)
    目录中找到。'
- en: '`maxResults=20`: return a maximum number of 20 videos'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`maxResults=20`：返回最多 20 个视频'
- en: '[PRE1]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: We then execute the request using `video_request.execute()` and the response
    will be returned as JSON format, which typically looks like the snapshot below.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们使用 `video_request.execute()` 执行请求，响应将以 JSON 格式返回，通常如下图所示。
- en: '![](../Images/03d92e26c4f93c4f31e4b9781bc78d94.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/03d92e26c4f93c4f31e4b9781bc78d94.png)'
- en: response in JSON format (image by author)
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: JSON 格式的响应（图像由作者提供）
- en: All information are stored in the “items” in the response. Then we extract the
    ‘items’ key and create the dataframe `video_df` by normalizing the JSON format.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 所有信息都存储在响应中的 “items” 中。然后，我们提取 ‘items’ 键，并通过标准化 JSON 格式创建数据框 `video_df`。
- en: '[PRE2]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: As the result, we manage to tidy up the output into a structure that is easier
    to manipulate.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是，我们成功将输出整理成更易于操作的结构。
- en: '![](../Images/bf7949e9ab159ba5b639d529ccf5f745.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bf7949e9ab159ba5b639d529ccf5f745.png)'
- en: video_df (image by author)
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: video_df（图像来源：作者）
- en: To take a step further of working with JSON using Python, I recommend reading
    the article “[How to Best Work with JSON in Python](/how-to-best-work-with-json-in-python-2c8989ff0390)”.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更进一步地使用 Python 处理 JSON，我推荐阅读文章 “[如何在 Python 中最好地处理 JSON](/how-to-best-work-with-json-in-python-2c8989ff0390)”。
- en: Step 2\. Define Data Analytics Process as Function
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 2 步。将数据分析过程定义为函数
- en: '![](../Images/38cde526632a5c69c48572a27c7bc047.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/38cde526632a5c69c48572a27c7bc047.png)'
- en: Step 2 in Developing Data Analytics Web App (image by author)
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 开发数据分析 Web 应用的第 2 步（图像来源：作者）
- en: We can package multiple lines of code statements into one function, so that
    it can be iteratively executed and easily embedded with other web app components
    at the later stage.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将多行代码语句打包成一个函数，以便它可以被迭代执行，并且在后续阶段容易与其他 Web 应用组件嵌入。
- en: Define extractYouTubeData()
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义 extractYouTubeData()
- en: 'For instance, we can encapsulate the data extraction process above into a function:
    `extractYouTubeData(youtube, categoryId)`*,* which allows us to pass a `categoryId`
    variable and output the top 20 popular videos under that category as `video_df`.
    In this way, we can get user’s input on which category they would like to select,
    then feed the input into this function and get the corresponding top 20 videos.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以将上述数据提取过程封装到一个函数中：`extractYouTubeData(youtube, categoryId)`，这允许我们传递一个
    `categoryId` 变量，并输出该类别下的前 20 个热门视频作为 `video_df`。这样，我们可以获取用户选择的类别，然后将输入传递给该函数，获得相应的前
    20 个视频。
- en: '[PRE3]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We can use `video_df.info()`to get all fields in this dataframe.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 `video_df.info()` 来获取该数据框中的所有字段。
- en: '![](../Images/c5d2a3dd36d1e11b66f68a5ab54fa742.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c5d2a3dd36d1e11b66f68a5ab54fa742.png)'
- en: fields in video_df (image by author)
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: video_df 中的字段（图像来源：作者）
- en: With this valuable dataset we can carry out a large variety of analysis, such
    as exploratory data analysis, sentiment analysis, topic modeling etc.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 利用这个宝贵的数据集，我们可以进行各种分析，如探索性数据分析、情感分析、主题建模等。
- en: I would like to start with designing the app for some exploratory data analysis
    on these most popular YouTube videos
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我想从设计一个用于对这些最热门的 YouTube 视频进行探索性数据分析的应用开始。
- en: video duration vs. the number of likes
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 视频时长与点赞数
- en: the most frequently occurred tags
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最常出现的标签
- en: In the future articles, I will explore more techniques such as topic modeling
    and natural language processing to analyze the video title and comments. Therefore,
    if you would like to read more of my articles on Medium, I would really appreciate
    your support by signing up [Medium membership](https://destingong.medium.com/membership)
    ☕.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在未来的文章中，我将探索更多技术，如主题建模和自然语言处理，以分析视频标题和评论。因此，如果你希望阅读我在 Medium 上的更多文章，非常感谢你通过注册
    [Medium 会员](https://destingong.medium.com/membership) ☕ 来支持我。
- en: Define plotVideoDurationStats()
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义 plotVideoDurationStats()
- en: I would like to know whether video duration has some correlation with the number
    of likes for these popular videos. To achieve this, we firstly need to transform
    the `contentDetails.duration` from ISO datetime format into numeric values using
    `isodate.parse_duration().total_seconds()`. Then we can use scatter plot to visualize
    the video duration against the likes count. This is carried out using Plotly which
    allows more interactive experience for end users. The code snippet below returns
    the Plotly figure which will be embedded into our web app.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我想了解视频时长是否与这些热门视频的点赞数有相关性。为此，我们首先需要将 `contentDetails.duration` 从 ISO 日期时间格式转换为数值，使用
    `isodate.parse_duration().total_seconds()`。然后，我们可以使用散点图来可视化视频时长与点赞数的关系。这是通过 Plotly
    完成的，它为最终用户提供了更互动的体验。下面的代码片段返回 Plotly 图形，这将被嵌入到我们的 Web 应用中。
- en: '[PRE4]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/d13cb64b207ed51793603911430fb2c6.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d13cb64b207ed51793603911430fb2c6.png)'
- en: figure output from plotVideoDurationStats (image by author)
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: plotVideoDurationStats 生成的图像（图像来源：作者）
- en: 'To explore more tutorials based on Plotly, check out these blogs below:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 若要探索更多基于 Plotly 的教程，请查看下面这些博客：
- en: '[](/an-interactive-guide-to-hypothesis-testing-in-python-979f4d62d85?source=post_page-----92cd5e901c52--------------------------------)
    [## An Interactive Guide to Hypothesis Testing in Python'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/an-interactive-guide-to-hypothesis-testing-in-python-979f4d62d85?source=post_page-----92cd5e901c52--------------------------------)
    [## Python 中假设检验的互动指南'
- en: T-Test, ANOVA, Chi-Squared Test with Examples
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: T 检验、ANOVA、卡方检验示例
- en: towardsdatascience.com](/an-interactive-guide-to-hypothesis-testing-in-python-979f4d62d85?source=post_page-----92cd5e901c52--------------------------------)
    [](/dynamic-eda-for-qatar-world-cup-teams-8945970f16be?source=post_page-----92cd5e901c52--------------------------------)
    [## How to Use Plotly for More Insightful and Interactive Data Explorations
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/an-interactive-guide-to-hypothesis-testing-in-python-979f4d62d85?source=post_page-----92cd5e901c52--------------------------------)
    [](/dynamic-eda-for-qatar-world-cup-teams-8945970f16be?source=post_page-----92cd5e901c52--------------------------------)
    [## 如何使用 Plotly 进行更深入和互动的数据探索
- en: 'Case Study: Dynamic EDA for Qatar World Cup Teams'
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 案例研究：卡塔尔世界杯队伍的动态EDA
- en: towardsdatascience.com](/dynamic-eda-for-qatar-world-cup-teams-8945970f16be?source=post_page-----92cd5e901c52--------------------------------)
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/dynamic-eda-for-qatar-world-cup-teams-8945970f16be?source=post_page-----92cd5e901c52--------------------------------)
- en: Define plotTopNTags()
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义 plotTopNTags()
- en: This function creates the figure of top N tags of a certain video category.
    Firstly, we iterate through all `snippet.tags` and collect all tags into a tag
    list. We then create the `tags_freq_df` that describe the counts of top N most
    frequent tags. Lastly, we use `px.bar()` to display the chart.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数创建某一视频类别的前 N 个标签的图形。首先，我们遍历所有 `snippet.tags` 并将所有标签收集到标签列表中。然后我们创建描述前 N 个最常见标签计数的
    `tags_freq_df`。最后，我们使用 `px.bar()` 显示图表。
- en: '[PRE5]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/291e58bf3ac37a0fd98625d759a0a630.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/291e58bf3ac37a0fd98625d759a0a630.png)'
- en: figure output from plotTopNTags() (image by author)
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: plotTopNTags() 生成的图形（作者提供的图片）
- en: Step 3\. Construct Web App Interface
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 3 步：构建 Web 应用界面
- en: '![](../Images/2737a712fc8b4a25e307bc2a341fd362.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2737a712fc8b4a25e307bc2a341fd362.png)'
- en: Step 3 in Developing Data Analytics Web App (image by author)
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 开发数据分析 Web 应用的第 3 步（作者提供的图片）
- en: We will use [Streamlit](https://docs.streamlit.io/library/get-started) to develop
    the web app interface. It is the easiest tool I found so far for web app development
    running on top of Python. It saves us the hassle to handle the HTTP request, define
    routes, or write HTML and CSS code.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 [Streamlit](https://docs.streamlit.io/library/get-started) 来开发 Web 应用界面。这是我迄今为止发现的最简单的
    Web 应用开发工具，它运行在 Python 之上，省去了处理 HTTP 请求、定义路由或编写 HTML 和 CSS 代码的麻烦。
- en: Run `!pip install streamlit` to install Streamlit to your machine, or use this
    [documentation](https://docs.streamlit.io/library/get-started/installation) to
    install Streamlit in your preferred development environment.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 运行 `!pip install streamlit` 将 Streamlit 安装到你的计算机上，或使用此 [文档](https://docs.streamlit.io/library/get-started/installation)
    在你首选的开发环境中安装 Streamlit。
- en: 'Creating a web app component is very easy using Streamlit. For example displaying
    a title is as simple as below:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Streamlit 创建 Web 应用组件非常简单。例如，显示标题如下所示：
- en: '[PRE6]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Here we need several components to build the web app.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们需要几个组件来构建 Web 应用。
- en: '**1) input: a dropdown menu for users to select video category**'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**1) 输入：一个下拉菜单供用户选择视频类别**'
- en: '![](../Images/9d88cc9050890409711893c7234d837e.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9d88cc9050890409711893c7234d837e.png)'
- en: dropdown menu (image by author)
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 下拉菜单（作者提供的图片）
- en: This code snippet allows us to create a dropdown menu with the prompt “Select
    YouTube Video Category” and options to choose from ‘Film & Animation’, ‘Music’,
    ‘Sports’, ‘Pets & Animals’.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码片段允许我们创建一个下拉菜单，提示“选择 YouTube 视频类别”，并提供‘电影与动画’、‘音乐’、‘体育’、‘宠物与动物’等选项。
- en: '[PRE7]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '**2) input: a slider for users choose the number of tags**'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**2) 输入：一个滑块供用户选择标签数量**'
- en: '![](../Images/4101f558717cca51f484ebf894bed640.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4101f558717cca51f484ebf894bed640.png)'
- en: slider (image by author)
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 滑块（作者提供的图片）
- en: This defines the slider and specifies the slider range from 0 to 20.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这定义了滑块并指定了滑块范围从 0 到 20。
- en: '[PRE8]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**3) output: a figure that displays the video duration vs. number of likes**'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**3) 输出：一个显示视频时长与点赞数的图形**'
- en: '![](../Images/80ca9c10df29411897cd2b0867e72c79.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/80ca9c10df29411897cd2b0867e72c79.png)'
- en: video duration vs. number of likes (image by author)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 视频时长与点赞数（作者提供的图片）
- en: We firstly create the `videoCategoryDict`to convert the category name into `categoryId`,
    then pass the `categoryId` through the `extractYouTubeData()`function that we
    defined previously. Check out this [page](https://gist.github.com/dgp/1b24bf2961521bd75d6c)
    for a full list of the video category their corresponding categoryId**.**
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先创建 `videoCategoryDict` 将类别名称转换为 `categoryId`，然后通过我们之前定义的 `extractYouTubeData()`
    函数传递 `categoryId`。请查看此 [页面](https://gist.github.com/dgp/1b24bf2961521bd75d6c)
    获取视频类别及其对应的 categoryId**。**
- en: We then call the `plotVideoDuration()` function and display the plotly chart
    using `st.plotly_chart()`.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们调用 `plotVideoDuration()` 函数，并使用 `st.plotly_chart()` 显示 plotly 图表。
- en: '[PRE9]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '**4) output: a figure that displays the top tags in that video category**'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '**4) 输出：一个显示该视频类别中热门标签的图形**'
- en: '![](../Images/e053b00481cf4dd69026bf6804d1525f.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e053b00481cf4dd69026bf6804d1525f.png)'
- en: top tags in the video category (image by author)
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 视频类别中的热门标签（作者提供的图片）
- en: The last component requires us to feed user’s input of number of tags to the
    function `plotTopNTags()`*,* and create the plot by calling the function.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个组件要求我们将用户输入的标签数量传递给函数`plotTopNTags()`，并通过调用该函数来创建图表。
- en: '[PRE10]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: These code statements can be all contained in a single Python file python (e.g.
    YoutTubeDataApp.py). Then we navigate to the command line and use `!streamlit
    run YouTubeDataApp.py`to run the app in a web browser.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这些代码语句可以包含在一个Python文件中（例如YoutTubeDataApp.py）。然后我们导航到命令行，使用`!streamlit run YouTubeDataApp.py`在网络浏览器中运行应用程序。
- en: Take-Home Message
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重点信息
- en: 'Building a web app may seem intimidating for data analysts and data scientists.
    This post covers following three steps to get your hands on building your first
    web app and extend your data analytics projects to a self-served platform:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 对于数据分析师和数据科学家来说，构建一个网络应用程序可能看起来令人望而生畏。本文涵盖了三个步骤，帮助你开始构建你的第一个网络应用程序，并将数据分析项目扩展到自助服务平台：
- en: Extract Data and Build Database
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提取数据并构建数据库
- en: Define Data Analytics Process as Functions
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将数据分析过程定义为函数
- en: Construct Web App Interface
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建网络应用程序界面
- en: More Resources Like This
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多类似资源
- en: '![Destin Gong](../Images/dcd4375055f8aa7602b1433a60ad5ca3.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![Destin Gong](../Images/dcd4375055f8aa7602b1433a60ad5ca3.png)'
- en: '[Destin Gong](https://destingong.medium.com/?source=post_page-----92cd5e901c52--------------------------------)'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '[Destin Gong](https://destingong.medium.com/?source=post_page-----92cd5e901c52--------------------------------)'
- en: Get Started in Data Science
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据科学入门
- en: '[View list](https://destingong.medium.com/list/get-started-in-data-science-8006bb4ba3ad?source=post_page-----92cd5e901c52--------------------------------)9
    stories![](../Images/164870467df6c40201a5ba8519473403.png)![](../Images/d302bbd526df8af0e847419971dc535a.png)![Statistical
    Tests in Python](../Images/2ff8d4b6d8bd95fde596b31de22ef09e.png)![Destin Gong](../Images/dcd4375055f8aa7602b1433a60ad5ca3.png)'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '[查看列表](https://destingong.medium.com/list/get-started-in-data-science-8006bb4ba3ad?source=post_page-----92cd5e901c52--------------------------------)9个故事![](../Images/164870467df6c40201a5ba8519473403.png)![](../Images/d302bbd526df8af0e847419971dc535a.png)![Python中的统计测试](../Images/2ff8d4b6d8bd95fde596b31de22ef09e.png)![Destin
    Gong](../Images/dcd4375055f8aa7602b1433a60ad5ca3.png)'
- en: '[Destin Gong](https://destingong.medium.com/?source=post_page-----92cd5e901c52--------------------------------)'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '[Destin Gong](https://destingong.medium.com/?source=post_page-----92cd5e901c52--------------------------------)'
- en: EDA and Feature Engineering Techniques
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: EDA和特征工程技术
- en: '[View list](https://destingong.medium.com/list/eda-and-feature-engineering-techniques-e0696974ed54?source=post_page-----92cd5e901c52--------------------------------)9
    stories![](../Images/7fc2bdc73b7b052566cf26034941c232.png)![](../Images/a7c4110e9a854cf9e9eba83dfa46e7d3.png)![](../Images/3ac6d4f7832c8daa758f71b1e479406c.png)[](/dynamic-eda-for-qatar-world-cup-teams-8945970f16be?source=post_page-----92cd5e901c52--------------------------------)
    [## How to Use Plotly for More Insightful and Interactive Data Explorations'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '[查看列表](https://destingong.medium.com/list/eda-and-feature-engineering-techniques-e0696974ed54?source=post_page-----92cd5e901c52--------------------------------)9个故事![](../Images/7fc2bdc73b7b052566cf26034941c232.png)![](../Images/a7c4110e9a854cf9e9eba83dfa46e7d3.png)![](../Images/3ac6d4f7832c8daa758f71b1e479406c.png)[](/dynamic-eda-for-qatar-world-cup-teams-8945970f16be?source=post_page-----92cd5e901c52--------------------------------)
    [## 如何使用Plotly进行更深入和互动的数据探索'
- en: 'Case Study: Dynamic EDA for Qatar World Cup Teams'
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 案例研究：卡塔尔世界杯队伍的动态EDA
- en: towardsdatascience.com](/dynamic-eda-for-qatar-world-cup-teams-8945970f16be?source=post_page-----92cd5e901c52--------------------------------)
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/dynamic-eda-for-qatar-world-cup-teams-8945970f16be?source=post_page-----92cd5e901c52--------------------------------)
- en: '*Originally published at* [*https://www.visual-design.net*](https://www.visual-design.net/post/semi-automated-exploratory-data-analysis-process-in-python)
    *on Feb 23rd, 2023.*'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '*最初发表于* [*https://www.visual-design.net*](https://www.visual-design.net/post/semi-automated-exploratory-data-analysis-process-in-python)
    *于2023年2月23日。*'
