- en: Training a Deep Learning Model to Detect DoS Attacks on Microcontrollers
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 训练深度学习模型以检测微控制器上的DoS攻击
- en: 原文：[https://towardsdatascience.com/training-a-deep-learning-model-to-detect-dos-attacks-on-microcontrollers-with-the-help-of-chatgpt-e548a56ff062?source=collection_archive---------8-----------------------#2023-04-11](https://towardsdatascience.com/training-a-deep-learning-model-to-detect-dos-attacks-on-microcontrollers-with-the-help-of-chatgpt-e548a56ff062?source=collection_archive---------8-----------------------#2023-04-11)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/training-a-deep-learning-model-to-detect-dos-attacks-on-microcontrollers-with-the-help-of-chatgpt-e548a56ff062?source=collection_archive---------8-----------------------#2023-04-11](https://towardsdatascience.com/training-a-deep-learning-model-to-detect-dos-attacks-on-microcontrollers-with-the-help-of-chatgpt-e548a56ff062?source=collection_archive---------8-----------------------#2023-04-11)
- en: An end-to-end project walkthrough, including some helpful assists from ChatGPT
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一个端到端的项目演练，包括一些来自ChatGPT的有用帮助
- en: '[](https://medium.com/@dehhmesquita?source=post_page-----e548a56ff062--------------------------------)[![Déborah
    Mesquita](../Images/3b77b7eb569e24f2679875429173daf1.png)](https://medium.com/@dehhmesquita?source=post_page-----e548a56ff062--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e548a56ff062--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e548a56ff062--------------------------------)
    [Déborah Mesquita](https://medium.com/@dehhmesquita?source=post_page-----e548a56ff062--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@dehhmesquita?source=post_page-----e548a56ff062--------------------------------)[![Déborah
    Mesquita](../Images/3b77b7eb569e24f2679875429173daf1.png)](https://medium.com/@dehhmesquita?source=post_page-----e548a56ff062--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e548a56ff062--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e548a56ff062--------------------------------)
    [Déborah Mesquita](https://medium.com/@dehhmesquita?source=post_page-----e548a56ff062--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fdd9e06a0a640&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftraining-a-deep-learning-model-to-detect-dos-attacks-on-microcontrollers-with-the-help-of-chatgpt-e548a56ff062&user=D%C3%A9borah+Mesquita&userId=dd9e06a0a640&source=post_page-dd9e06a0a640----e548a56ff062---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e548a56ff062--------------------------------)
    ·10 min read·Apr 11, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe548a56ff062&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftraining-a-deep-learning-model-to-detect-dos-attacks-on-microcontrollers-with-the-help-of-chatgpt-e548a56ff062&user=D%C3%A9borah+Mesquita&userId=dd9e06a0a640&source=-----e548a56ff062---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fdd9e06a0a640&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftraining-a-deep-learning-model-to-detect-dos-attacks-on-microcontrollers-with-the-help-of-chatgpt-e548a56ff062&user=D%C3%A9borah+Mesquita&userId=dd9e06a0a640&source=post_page-dd9e06a0a640----e548a56ff062---------------------post_header-----------)
    发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e548a56ff062--------------------------------)
    ·10分钟阅读·2023年4月11日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe548a56ff062&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftraining-a-deep-learning-model-to-detect-dos-attacks-on-microcontrollers-with-the-help-of-chatgpt-e548a56ff062&user=D%C3%A9borah+Mesquita&userId=dd9e06a0a640&source=-----e548a56ff062---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe548a56ff062&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftraining-a-deep-learning-model-to-detect-dos-attacks-on-microcontrollers-with-the-help-of-chatgpt-e548a56ff062&source=-----e548a56ff062---------------------bookmark_footer-----------)![](../Images/26325e98716c0af37c25e6d9ab7e7e07.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe548a56ff062&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftraining-a-deep-learning-model-to-detect-dos-attacks-on-microcontrollers-with-the-help-of-chatgpt-e548a56ff062&source=-----e548a56ff062---------------------bookmark_footer-----------)![](../Images/26325e98716c0af37c25e6d9ab7e7e07.png)'
- en: Thanks [Hamed](https://unsplash.com/pt-br/@hamedtaha) for the pic!
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢 [Hamed](https://unsplash.com/pt-br/@hamedtaha) 提供的图片！
- en: The ESP32 is an MCU (microcontroller unit) widely used in IoT projects due to
    its low cost and ESP-IDF (Espressif IoT Development Framework), its development
    framework. The board has a dual-core 32 bits processor, single-chip Wi-Fi and
    Bluetooth connectivity and is widely used in IoT, home automation, and robotics
    projects.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: ESP32是一款广泛用于物联网项目的MCU（微控制器单元），因其低成本和ESP-IDF（Espressif物联网开发框架）而受到青睐。该开发板配备了双核32位处理器、单芯片Wi-Fi和蓝牙连接，广泛用于物联网、家居自动化和机器人项目。
- en: IoT applications can solve problems in every industry, including agriculture,
    home controllers and smart cities. The sad thing is that I don’t see IoT projects
    in our lives yet, mainly here in Brazil. When I think of IoT projects the first
    thought that comes to mind is that it’s something very technological and that
    we wouldn’t be able to implement without lots of money. Fortunately, that’s not
    true now that we have boards like the ESP32 because with about $3 we can conceive
    and experiment with IoT project ideas.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 物联网应用可以解决各行各业的问题，包括农业、家庭控制和智慧城市。令人遗憾的是，我还没有在我们生活中看到物联网项目，主要是在巴西。当我想到物联网项目时，第一个想到的就是它非常技术化，我们无法在没有大量资金的情况下实现。幸运的是，这种情况不再成立，因为我们现在拥有像ESP32这样的开发板，只需大约3美元，我们就可以构思和实验物联网项目的想法。
- en: After hearing about the ESP32 my goal was to find a way to insert myself into
    this IoT world. LACNIC is an international organization responsible for assigning
    and managing Internet number resources and contributing to regional Internet development
    of Latin American and Caribbean. An [area of research work of the organization](https://www.lacnic.net/innovaportal/file/4883/1/cartera-tematica-2022_lineas-ejes-investigacion_en.pdf)
    is Cryptography, Security and Resilience. I was missing the feeling of being part
    of a research project, so I submitted a proposal for a technical paper with emphasis
    on IoT and network security as part of their [IT Women Mentoring Program](https://www.lacnic.net/4883/2/lacnic/it-women-mentoring-program).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解到ESP32之后，我的目标是找到一种方式来融入这个物联网世界。LACNIC是一个国际组织，负责分配和管理互联网编号资源，并推动拉丁美洲和加勒比地区的互联网发展。该组织的[研究领域之一](https://www.lacnic.net/innovaportal/file/4883/1/cartera-tematica-2022_lineas-ejes-investigacion_en.pdf)是密码学、安全性和弹性。我一直缺乏参与研究项目的感觉，于是我提交了一份技术论文提案，重点关注物联网和网络安全，作为他们的[IT女性指导计划](https://www.lacnic.net/4883/2/lacnic/it-women-mentoring-program)的一部分。
- en: 'The main reference for my project was T800: Firewall tool and benchmark for
    IoT [1], a project from Brazilian researchers that creates a packet filter for
    the ESP32 for scanning attacks. They made [all their code available on Github](https://github.com/c2dc/T800).
    Since this is the first time I’m working with the ESP32 and the lwIP stack (more
    on that later) I would be completely lost without this reference.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我项目的主要参考是T800：物联网的防火墙工具和基准测试[1]，这是一个由巴西研究人员创建的项目，为ESP32创建了一个数据包过滤器以扫描攻击。他们在Github上[公开了所有代码](https://github.com/c2dc/T800)。由于这是我第一次使用ESP32和lwIP协议栈（稍后会详细介绍），如果没有这个参考，我将完全迷失。
- en: Cool, but what is my project anyways? Security should be an essential part of
    the development of IoT systems, and these devices are easy targets for cyberattacks
    mainly because of the poor cycles of updates and maintenance [1]. My work focuses
    on detecting volumetric attacks, more specifically on detecting DoS (Denial of
    Service) attacks. In volumetric attacks, the attacker’s goal is to send many network
    packets to a device in a short period of time, aiming to interrupt the operation
    of the system.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 很酷，但我的项目到底是什么呢？安全性应该是物联网系统开发的一个重要部分，这些设备因更新和维护周期较差而成为网络攻击的易受攻击目标[1]。我的工作重点是检测流量攻击，特别是检测DoS（服务拒绝）攻击。在流量攻击中，攻击者的目标是在短时间内向设备发送大量网络数据包，旨在中断系统的操作。
- en: The main task was then to train a machine learning model to detect DoS attacks
    and deploy it on the ESP32\. Most of the models trained to detect DoS and DDoS
    attacks use volumetric and statistical features, like “average duration of aggregated
    records” and “source-to-destination packet count”. My quest was to figure out
    if we could create a model trained on **raw packet features**, like tcp.window_size
    and udp.length. It was quite a journey and today we’ll talk more about the main
    roadblocks and how ChatGPT came to my rescue in some of them.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 然后主要任务是训练一个机器学习模型来检测 DoS 攻击并将其部署到 ESP32 上。大多数用于检测 DoS 和 DDoS 攻击的模型使用体积和统计特征，如“聚合记录的平均持续时间”和“源到目的地的数据包计数”。我的目标是弄清楚是否可以创建一个基于**原始数据包特征**的模型，如
    tcp.window_size 和 udp.length。这是一次相当艰难的旅程，今天我们将深入讨论主要的障碍以及 ChatGPT 如何在其中帮助我。
- en: Challenge 1 — Do the features of my training dataset match the features in production?
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 挑战 1 — 我的训练数据集的特征是否与生产中的特征匹配？
- en: The dataset I’m using is the [CIC IoT Dataset 2022](https://www.unb.ca/cic/datasets/iotdataset-2022.html),
    created by the Canadian Institute for Cybersecurity (CIC) with the goal of a generating
    state-of-the-art dataset for profiling, behavioral analysis and vulnerability
    testing of different IoT devices [2]. They used wireshark as the network protocol
    analyzer, capturing and saving the packets of the network in pcap files.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用的数据集是[CIC IoT Dataset 2022](https://www.unb.ca/cic/datasets/iotdataset-2022.html)，由加拿大网络安全研究所
    (CIC) 创建，旨在生成用于不同 IoT 设备的状态-of-the-art 数据集，用于分析、行为分析和漏洞测试 [2]。他们使用 wireshark 作为网络协议分析器，捕获并保存网络数据包到
    pcap 文件中。
- en: 'For the modeling part my main reference was DeepDefense: Identifying DDoS Attack
    via Deep Learning [3]. They designed a recurrent deep neural network to learn
    patterns from sequences of network traffic by using only 20 network traffic fields.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '在建模部分，我的主要参考是 DeepDefense: Identifying DDoS Attack via Deep Learning [3]。他们设计了一种递归深度神经网络，通过使用仅20个网络流量字段来学习网络流量序列中的模式。'
- en: To communicate with other network devices the ESP32 needs support for the TCP/IP
    protocols. For that it uses lwIP (lightweight IP), an open-source stack of TCP/IP
    protocols designed to work in embedded systems with low memory and low computational
    power. My first task was to figure out which features are available in the lwIP
    implementation of ESP32 and find how to extract them from the pcaps.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 为了与其他网络设备通信，ESP32 需要支持 TCP/IP 协议。为此，它使用 lwIP（轻量级 IP），这是一个为低内存和低计算能力的嵌入式系统设计的开源
    TCP/IP 协议栈。我的第一个任务是弄清楚 ESP32 的 lwIP 实现中有哪些特性，并找出如何从 pcap 文件中提取它们。
- en: 'In the beggining I was reading the [wireshark docs](https://www.wireshark.org/docs/dfref/f/frame.html)
    and reading the [esp-lwip code](https://github.com/espressif/esp-lwip/blob/2c9c531f0a7e0ee536db9de4f9dc54e453712087/src/include/lwip/prot/ip4.h#L103)
    to try to find the correspondent features, but then I thought “what if I ask chatGPT”?
    Turns out the LLM was super useful for that:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 起初我在阅读[wireshark 文档](https://www.wireshark.org/docs/dfref/f/frame.html)和[esp-lwip
    代码](https://github.com/espressif/esp-lwip/blob/2c9c531f0a7e0ee536db9de4f9dc54e453712087/src/include/lwip/prot/ip4.h#L103)以尝试找到对应的特征，但后来我想“如果问
    chatGPT 呢”？结果发现大模型非常有用：
- en: '![](../Images/cea64e837fd08ff76d181693adb134b9.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cea64e837fd08ff76d181693adb134b9.png)'
- en: Using chatGPT to get “ip.ttl” inside the ESP32 code
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 chatGPT 获取 ESP32 代码中的“ip.ttl”
- en: Of course I had to do some tweaks and the code from [1] was my main guide, but
    I saved a lot of time by using the model to help me get the name and the variables
    with the features I wanted.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我必须做一些调整，[1] 的代码是我的主要指南，但我通过使用模型帮助我获取所需特征的名称和变量，节省了很多时间。
- en: Challenge 2— How do I do the split of training and test data?
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 挑战 2— 我如何进行训练和测试数据的拆分？
- en: The dataset has 3 pcap with Flood attacks for each IoT device. The attacks were
    carried out based on HTTP, UDP and TCP protocols. I thought “ok, I could use 2
    attacks for training/validation and 1 for testing”, but the main problem was **how
    to merge the malicious traffic with the legitimate one to create the data splits**.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集中包含3个包含洪水攻击的 pcap 文件，针对每个 IoT 设备。攻击是基于 HTTP、UDP 和 TCP 协议进行的。我想“好吧，我可以用2个攻击进行训练/验证，用1个进行测试”，但主要问题是**如何将恶意流量与合法流量合并以创建数据拆分**。
- en: '![](../Images/89706eed4452002e8f57e89f644584cf.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/89706eed4452002e8f57e89f644584cf.png)'
- en: pcaps for the attacks on one device, each pcap is has only malicious traffic
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 每个设备的攻击 pcap 文件，每个 pcap 文件只有恶意流量
- en: The legitimate traffic of the dataset was captured day by day, so we have a
    pcap for each day (there are 30 days in total). My first plan was the use a recurrent
    deep neural network like in [3], and since this kind of neural network would be
    learning patterns from **sequences of network traffic**, taking random sample
    packets for each bucket (legitimate vs. malicious) would not work well. To make
    things worse all the papers I’ve read only say they’ve used 80/20 splits but don’t
    explain how they’ve done it.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集的合法流量是按天捕获的，因此我们有一个每天的 pcap（总共 30 天）。我最初的计划是使用类似于 [3] 的递归深度神经网络，因为这种神经网络会从
    **网络流量序列**中学习模式，随机取样每个桶（合法与恶意）将效果不好。更糟糕的是，我读过的所有论文只提到他们使用了 80/20 切分，但没有解释他们是怎么做的。
- en: 'My goal was to make the train and the test datasets as close as a real-world
    scenario. After a lot of thinking and back and forth I came to a solution that
    I’m not sure if totally accomplishes that goal but that is something. The strategy
    was to use the _ws.col.Time feauture of the pcaps to insert random attacks at
    different times. The algorithm goes like this:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我的目标是使训练数据集和测试数据集尽可能接近真实场景。经过大量的思考和反复试验，我找到了一种解决方案，虽然不确定是否完全实现了这个目标，但这也是一种进展。策略是使用
    pcap 的 _ws.col.Time 特性在不同时间插入随机攻击。算法如下：
- en: Take a day full of legitimate packets as the starting point.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以一天满是合法数据包的数据作为起点。
- en: For each attack pcap, insert some attack packets (50000 to 70000) at random
    places in the full day-packets, adjusting the _ws.col.Time of the attack packets
    and sorting the dataset every time.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于每个攻击 pcap，在全天数据包的随机位置插入一些攻击数据包（50000到70000个），调整攻击数据包的 _ws.col.Time 并每次对数据集进行排序。
- en: Repeat step 2 for each device pcap, using the first 2 attack pcaps for each
    device (the third pcaps will be used in the test dataset).
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对每个设备 pcap 重复第 2 步，使用每个设备的前 2 个攻击 pcap（第三个 pcap 将用于测试数据集）。
- en: For the test dataset I do the same thing (starting with another full day of
    legitimate packets) but instead of only taking 50000 to 70000 attack packets I
    use all the packets of the attacks. This makes the test dataset very unbalanced
    but it’s what would happen in real life.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 对于测试数据集，我做了相同的操作（从另一整天的合法数据包开始），但不是仅取 50000 到 70000 个攻击数据包，而是使用所有的攻击数据包。这使得测试数据集非常不平衡，但这正是现实中的情况。
- en: Challenge 3 — Learning C++ on the go
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 挑战 3 — 随时学习 C++
- en: To program for the ESP32 we use C++. Besides some basic C classes in college
    I had no experience with it, but I thought “I’ve been programming with Python
    for a long time, I’ll only have to deal with some changes in the syntax, I’ll
    be fine”. Indeed I was fine most of the time, but for some things it was hard
    to find the right query to search exactly what I was looking for and thus chatGPT
    became very handy.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 用于编程 ESP32，我们使用 C++。除了大学里学过的一些基本 C 类别，我没有相关经验，但我想“我已经用 Python 编程很长时间了，只需处理一些语法上的变化就好了，我会没问题的”。确实大多数时候我都没问题，但对于一些事情，很难找到准确的查询来搜索我所需的信息，因此
    chatGPT 变得非常有用。
- en: One example was with the `&` operator. If you’re a Python programmer and never
    programmed in C++, what do you think the next line code does?
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 一个例子是 `&` 操作符。如果你是一个 Python 程序员，从未用过 C++，你认为下一行代码会做什么？
- en: '`(TCPH_FLAGS(tcphdr) & TCP_SYN)`'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`(TCPH_FLAGS(tcphdr) & TCP_SYN)`'
- en: Returns 0 or 1 whether they’re the same or not, right? WRONG!
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 0 或 1 无论它们是否相同，对吧？错了！
- en: '![](../Images/3ecc114a9d01d92e4dc4283ef3425cba.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3ecc114a9d01d92e4dc4283ef3425cba.png)'
- en: chatGPT helping us figure out what the code does
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: chatGPT 帮助我们搞清楚代码的作用
- en: 'In the training dataset the values for tcp.flags.syn are 0 and 1, so to get
    the same when we deploy the model on the ESP32 we need to do this:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在训练数据集中，tcp.flags.syn 的值是 0 和 1，因此为了在 ESP32 上部署模型时得到相同的结果，我们需要这样做：
- en: '`input->data.f[7] = (TCPH_FLAGS(tcphdr) & TCP_SYN) ? 1 : 0;`'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '`input->data.f[7] = (TCPH_FLAGS(tcphdr) & TCP_SYN) ? 1 : 0;`'
- en: This simple question to chatGPT saved me a lot of potential debugging time.
    Thanks chatGPT.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这个简单的问题让 chatGPT 帮我节省了大量的调试时间。谢谢 chatGPT。
- en: Nice, but does the model work?
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 很好，但模型有效吗？
- en: 'The model uses 10 features and the architecture is very simple:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 模型使用了 10 个特征，架构非常简单：
- en: '[PRE0]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The accuracy was 97% for the test dataset.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 测试数据集的准确率为 97%。
- en: '![](../Images/e7c3bec79bb6f6b1bfbd11cd0dc6c680.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e7c3bec79bb6f6b1bfbd11cd0dc6c680.png)'
- en: Results for the test dataset
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 测试数据集的结果
- en: When I started the research I wondered why we don’t just use a threshold to
    packets per second or something, since DoS attackers send many network packets
    to the device in a short period of time. This doesn’t work because there are different
    volumetric attacks with different characteristics. A machine learning model is
    then the best choice because they’re more robust and can potentially detect suspicious
    traffic regardless of the traffic rate.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 当我开始研究时，我想知道为什么我们不直接使用每秒数据包的阈值或其他方法，因为 DoS 攻击者会在短时间内向设备发送大量网络数据包。这不起作用，因为存在不同特征的体积攻击。机器学习模型是最佳选择，因为它们更稳健，能够检测到潜在的可疑流量，无论流量速率如何。
- en: But the answer to whether the model works well or not also depends on the application
    and the IoT system in place. I wanted to get a glimpse of the model performance
    on an IoT system, so I’ve tested it with a simple UDP server application running
    on the ESP32.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 但模型是否有效也取决于应用程序和物联网系统。我想了解模型在物联网系统中的表现，因此我在 ESP32 上用一个简单的 UDP 服务器应用程序进行了测试。
- en: 'I’ve used a Python script to create the legitimate traffic and another Python
    script as the attacker. These were the results:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用了一个 Python 脚本来生成合法流量，另一个 Python 脚本作为攻击者。结果如下：
- en: '[PRE1]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The attacks ran for 60 seconds and the real traffic ran for 80 seconds. The
    total processed packets include all packets (legitimate and malicious) and the
    total legitimate packets include only the packets that came from my simulated
    real sensor data. The firewall exhibited a considerable reduction of 72.44% in
    processing malicious packets, while not disrupting the legitimate traffic. The
    recall for malicious packets was 0.789, which is significantly lower than the
    outcomes for the test dataset. It is important to note that the results of the
    UDP server experiment are preliminary in nature, as they are based on a single
    execution.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击运行了 60 秒，真实流量运行了 80 秒。总处理的数据包包括所有数据包（合法和恶意），而总合法数据包仅包括来自我模拟的真实传感器数据的数据包。防火墙在处理恶意数据包方面减少了
    72.44%，同时没有干扰合法流量。恶意数据包的召回率为 0.789，这明显低于测试数据集的结果。需要注意的是，UDP 服务器实验的结果是初步的，因为它们基于单次执行。
- en: 'If you’re curious this was the code I’ve used to simulate the real traffic
    (and yes, I’ve asked chatGPT for that as well):'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你感兴趣，这是我用来模拟真实流量的代码（是的，我也向 chatGPT 请求了这段代码）：
- en: '[PRE2]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: I think that the main next step would be to research how to create training
    and test datasets that really resemble real network traffic. On the test dataset
    we got 99% of recall and in my “real scenario” test a lot of attack packets were
    still classified as legitimate. Maybe the characteristics of my Python script
    attacks were very different from the attacks of the training dataset? Did the
    model overfit? These would be nice research questions to continue the research.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为下一步主要是研究如何创建真正类似于真实网络流量的训练和测试数据集。在测试数据集中，我们获得了 99% 的召回率，而在我的“真实场景”测试中，很多攻击数据包仍被分类为合法。也许我的
    Python 脚本攻击的特征与训练数据集中的攻击特征非常不同？模型是否过拟合？这些都是继续研究的有趣问题。
- en: Final thoughts
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最后的想法
- en: 'This project got me totally out of my zone since I had to work with a lot of
    new things:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目完全让我走出了舒适区，因为我不得不处理许多新的事物：
- en: The TCP/IP protocol (computer networks)
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TCP/IP 协议（计算机网络）
- en: DoS attacks (cybersecurity)
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DoS 攻击（网络安全）
- en: The TPC/IP protocol implementation used in the ESP32 (embedded devices)
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ESP32 上使用的 TPC/IP 协议实现（嵌入式设备）
- en: Understand how to use TensorFlow Lite to embed the model in the ESP32 (embedded
    devices + data science)
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解如何使用 TensorFlow Lite 将模型嵌入 ESP32（嵌入式设备 + 数据科学）
- en: By far the hardest part was working with the TCP/IP stack on the ESP32, mainly
    because there is not much study material about it. Fortunately, the authors of
    [1] made their code available and I got on track based on their work. This is
    one of the reasons why I love the open-source community ❤.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，最困难的部分是处理 ESP32 上的 TCP/IP 栈，主要因为关于它的学习资料不多。幸运的是，[1] 的作者公开了他们的代码，我也根据他们的工作顺利上了轨道。这也是我喜欢开源社区的原因之一
    ❤。
- en: To my surprise, chatGPT also helped me a lot. I was skeptical if it would be
    able to explain to me some lwIP methods and variables but it did a really good
    job. It felt like I had a lwIP expert I could ask questions and discuss ideas.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 令我惊讶的是，chatGPT 也帮了我很多。我原本对它是否能解释一些 lwIP 方法和变量持怀疑态度，但它做得非常好。感觉就像我有一个 lwIP 专家可以提问和讨论想法。
- en: There is a lot of debate about whether LLM will replace us and blablabla but
    we also need to talk about how they are game changers. They are very powerful
    in increasing our capacity of learning new things and making knowledge more accessible
    to everyone.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 关于大型语言模型是否会取代我们以及各种争论有很多，但我们也需要讨论它们如何改变游戏规则。它们在提高我们学习新事物的能力和使知识对每个人更易获取方面非常强大。
- en: 'Of course you can check the code of everything we’ve talked about today here:
    [https://github.com/dmesquita/dosguard32](https://github.com/dmesquita/dosguard32)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，你可以在这里查看我们今天讨论过的所有代码：[https://github.com/dmesquita/dosguard32](https://github.com/dmesquita/dosguard32)
- en: And if you got to here thank you very much for reading! :D
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你读到这里，非常感谢你的阅读！ :D
- en: References
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[1] Fernandes, Gabriel Victor C., et al. “Implementaçao de um filtro de pacotes
    inteligente para dispositivos de Internet das Coisas.” *Anais do XL Simpósio Brasileiro
    de Redes de Computadores e Sistemas Distribuídos*. SBC, 2022.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] Fernandes, Gabriel Victor C., 等。“为物联网设备实现智能包过滤器。” *XL巴西计算机网络与分布式系统研讨会论文集*。SBC，2022。'
- en: '[2] Sajjad Dadkhah, Hassan Mahdikhani, Priscilla Kyei Danso, Alireza Zohourian,
    Kevin Anh Truong, Ali A. Ghorbani, “[*Towards the development of a realistic multidimensional
    IoT profiling dataset*](https://ieeexplore.ieee.org/document/9851966)”, Submitted
    to: The 19th Annual International Conference on Privacy, Security & Trust (PST2022)
    August 22–24, 2022, Fredericton, Canada.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] Sajjad Dadkhah、Hassan Mahdikhani、Priscilla Kyei Danso、Alireza Zohourian、Kevin
    Anh Truong、Ali A. Ghorbani，“[*朝着开发现实的多维物联网分析数据集*](https://ieeexplore.ieee.org/document/9851966)”，提交至：第19届国际隐私、安全与信任年会（PST2022），2022年8月22–24日，加拿大弗雷德里克顿。'
- en: '[3] Yuan, Xiaoyong, Chuanhuang Li, and Xiaolin Li. “DeepDefense: identifying
    DDoS attack via deep learning.” 2017 IEEE international conference on smart computing
    (SMARTCOMP). IEEE, 2017.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '[3] 袁小勇、李传煌、李晓林。 “DeepDefense：通过深度学习识别DDoS攻击。” 2017 IEEE国际智能计算会议（SMARTCOMP）。IEEE，2017。'
- en: '[4] Hamza, Ayyoob, Hassan Habibi Gharakheili, and Vijay Sivaraman. “IoT network
    security: requirements, threats, and countermeasures.” arXiv preprint arXiv:2008.09339
    (2020).'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '[4] Hamza, Ayyoob、Hassan Habibi Gharakheili 和 Vijay Sivaraman。“物联网网络安全：需求、威胁和对策。”
    arXiv预印本 arXiv:2008.09339（2020）。'
