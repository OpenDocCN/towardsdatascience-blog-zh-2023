- en: Fraud Detection with Entity Resolution and Graph Neural Networks
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用实体解析和图神经网络进行欺诈检测
- en: 原文：[https://towardsdatascience.com/fraud-detection-with-entity-resolution-and-graph-neural-networks-c70f43b9e1f2?source=collection_archive---------12-----------------------#2023-08-24](https://towardsdatascience.com/fraud-detection-with-entity-resolution-and-graph-neural-networks-c70f43b9e1f2?source=collection_archive---------12-----------------------#2023-08-24)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/fraud-detection-with-entity-resolution-and-graph-neural-networks-c70f43b9e1f2?source=collection_archive---------12-----------------------#2023-08-24](https://towardsdatascience.com/fraud-detection-with-entity-resolution-and-graph-neural-networks-c70f43b9e1f2?source=collection_archive---------12-----------------------#2023-08-24)
- en: A practical guide to how entity resolution improves machine learning to detect
    fraud
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一本关于如何利用实体解析提升机器学习检测欺诈的实用指南
- en: '[](https://medium.com/@stefan.berkner?source=post_page-----c70f43b9e1f2--------------------------------)[![Stefan
    Berkner](../Images/a84ebfb24744984c0de8f2e77c2070e6.png)](https://medium.com/@stefan.berkner?source=post_page-----c70f43b9e1f2--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c70f43b9e1f2--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c70f43b9e1f2--------------------------------)
    [Stefan Berkner](https://medium.com/@stefan.berkner?source=post_page-----c70f43b9e1f2--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@stefan.berkner?source=post_page-----c70f43b9e1f2--------------------------------)[![Stefan
    Berkner](../Images/a84ebfb24744984c0de8f2e77c2070e6.png)](https://medium.com/@stefan.berkner?source=post_page-----c70f43b9e1f2--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c70f43b9e1f2--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c70f43b9e1f2--------------------------------)
    [Stefan Berkner](https://medium.com/@stefan.berkner?source=post_page-----c70f43b9e1f2--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F704fdfc8efaa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffraud-detection-with-entity-resolution-and-graph-neural-networks-c70f43b9e1f2&user=Stefan+Berkner&userId=704fdfc8efaa&source=post_page-704fdfc8efaa----c70f43b9e1f2---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c70f43b9e1f2--------------------------------)
    ·7 min read·Aug 24, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc70f43b9e1f2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffraud-detection-with-entity-resolution-and-graph-neural-networks-c70f43b9e1f2&user=Stefan+Berkner&userId=704fdfc8efaa&source=-----c70f43b9e1f2---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F704fdfc8efaa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffraud-detection-with-entity-resolution-and-graph-neural-networks-c70f43b9e1f2&user=Stefan+Berkner&userId=704fdfc8efaa&source=post_page-704fdfc8efaa----c70f43b9e1f2---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c70f43b9e1f2--------------------------------)
    ·7 分钟阅读·2023 年 8 月 24 日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc70f43b9e1f2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffraud-detection-with-entity-resolution-and-graph-neural-networks-c70f43b9e1f2&user=Stefan+Berkner&userId=704fdfc8efaa&source=-----c70f43b9e1f2---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc70f43b9e1f2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffraud-detection-with-entity-resolution-and-graph-neural-networks-c70f43b9e1f2&source=-----c70f43b9e1f2---------------------bookmark_footer-----------)![](../Images/e57d32077ac975a1f0e648b92dcf4e75.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc70f43b9e1f2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffraud-detection-with-entity-resolution-and-graph-neural-networks-c70f43b9e1f2&source=-----c70f43b9e1f2---------------------bookmark_footer-----------)![](../Images/e57d32077ac975a1f0e648b92dcf4e75.png)'
- en: Representation of a Graph Neural Network (Image generated by the Author using
    Bing Image Creator)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 由作者使用 Bing Image Creator 生成的图神经网络的表示
- en: Online fraud is an ever-growing issue for finance, e-commerce and other related
    industries. In response to this threat, organizations use fraud detection mechanisms
    based on machine learning and behavioral analytics. These technologies enable
    the detection of unusual patterns, abnormal behaviors, and fraudulent activities
    in real time.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在线欺诈对金融、电子商务及其他相关行业是一个不断增长的问题。为了应对这一威胁，组织利用基于机器学习和行为分析的欺诈检测机制。这些技术能够实时检测到异常模式、异常行为和欺诈活动。
- en: Unfortunately, often only the current transaction, e.g. an order, is taken into
    consideration, or the process is based solely on historic data from the customer’s
    profile, which is identified by a customer id. However, professional fraudsters
    may create customer profiles using low value transactions to build up a positive
    image of their profile. Additionally, they might create multiple similar profiles
    at the same time. It is only after the fraud took place that the attacked company
    realizes that these customer profiles were related to each other.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，通常只考虑当前交易，例如一个订单，或者流程仅基于客户档案中的历史数据，该档案通过客户 ID 进行识别。然而，专业的欺诈者可能会使用低价值的交易来创建客户档案，从而建立其档案的正面形象。此外，他们可能会同时创建多个类似的档案。只有在欺诈发生后，受攻击的公司才会意识到这些客户档案彼此之间的关系。
- en: Using entity resolution it is possible to easily combine different customer
    profiles into a single 360° customer view, allowing one to see the full picture
    of all historic transactions. While using this data in machine learning, e.g.
    using a neural network or even a simple linear regression, would already provide
    additional value for the resulting model, the real value arises from also looking
    at how the individual transactions are connected to each other. This is where
    graph neural networks (GNN) come into play. Beside looking at features extracted
    from the transactional records, they offer also the possibility to look at features
    generated from the graph edges (how transactions are linked with each other) or
    even just the general layout of the entity graph.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 使用实体解析可以轻松地将不同的客户档案合并为一个 360° 客户视图，从而看到所有历史交易的完整情况。在机器学习中使用这些数据，例如使用神经网络或简单的线性回归，已经可以为最终模型提供额外的价值，而真正的价值在于还要查看各个交易之间是如何相互连接的。这就是图神经网络（GNN）发挥作用的地方。除了查看从交易记录中提取的特征外，它们还提供了查看从图边生成的特征（交易如何相互链接）或仅仅是实体图的一般布局的可能性。
- en: Example Data
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 示例数据
- en: 'Before we dive deeper into the details, I have one disclaimer to put here:
    I am a developer and entity resolution expert and not a data scientist or ML expert.
    While I think the general approach is correct, I might not be following best practices,
    nor can I explain certain aspects such as the number of hidden nodes. Use this
    article as an inspiration and draw upon your own experience when it comes to the
    GNN layout or configuration.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入细节之前，我有一个声明要在这里说明：我是一名开发者和实体解析专家，而不是数据科学家或 ML 专家。虽然我认为总体方法是正确的，但我可能没有遵循最佳实践，也不能解释某些方面，例如隐藏节点的数量。请将本文作为灵感来源，并根据自己的经验来考虑
    GNN 的布局或配置。
- en: 'For the purposes of this article I want to focus on the insights gained from
    the entity graph’s layout. For this purpose I created a small Golang script that
    generates entities. Each entity is labeled as either fraudulent or non-fraudulent
    and consists of records (orders) and edges (how those orders are linked). See
    the following example of a single entity:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本文旨在聚焦于从实体图布局中获得的见解。为此，我创建了一个小型 Golang 脚本，用于生成实体。每个实体被标记为欺诈或非欺诈，并由记录（订单）和边（这些订单如何链接）组成。请参见以下单个实体的示例：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Each record has two (potential) features, the total value and the number of
    items purchased. However, the generation script completely randomized these values,
    hence they should not provide value when it comes to guessing the fraud label.
    Each edge also comes with two features R1 and R2\. These could e.g. represent
    whether the two records A and B are linked via a similar name and address (R1)
    or the via a similar email address (R2). Furthermore I intentionally left out
    all the attributes that are not relevant for this example (name, address, email,
    phone number, etc.), but are usually relevant for the entity resolution process
    beforehand. As R1 and R2 are also randomized, they also don’t provide value for
    the GNN. However, based on the fraud label, the edges are laid out in two possible
    ways: a star-like layout (fraud=0) or a random layout (fraud=1).'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 每条记录有两个（潜在的）特征，总值和购买的项目数量。然而，生成脚本完全随机化了这些值，因此它们在猜测欺诈标签时不会提供价值。每条边还包含两个特征 R1
    和 R2。例如，这些特征可能表示记录 A 和 B 是否通过类似的姓名和地址（R1）或通过类似的电子邮件地址（R2）进行链接。此外，我故意省略了所有与本示例无关的属性（如姓名、地址、电子邮件、电话号码等），这些属性通常在实体解析过程之前是相关的。由于
    R1 和 R2 也是随机化的，它们也不会为 GNN 提供价值。然而，根据欺诈标签，边的布局有两种可能方式：星形布局（fraud=0）或随机布局（fraud=1）。
- en: The idea is that a non-fraudulent customer is more likely to provide accurate
    matching relevant data, usually the same address and same name, with only a few
    spelling errors here and there. Hence new transactions may get [recognized as
    a duplicate](https://tilores.io/data-deduplication-software).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这个想法是非欺诈客户更可能提供准确匹配的相关数据，通常是相同的地址和名字，仅有少量拼写错误。因此，新交易可能会被[识别为重复](https://tilores.io/data-deduplication-software)。
- en: '![](../Images/3dcf16149f9257f18987e730f5cbbe08.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3dcf16149f9257f18987e730f5cbbe08.png)'
- en: Deduplicated Entity (Image by the Author)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 去重实体（图片由作者提供）
- en: A fraudulent customer might want to hide the fact that they are still the same
    person behind the computer, using various names and addresses. However, entity
    resolution tools may still recognize the similarity (e.g. geographical and temporal
    similarity, recurring patterns in the email address, device IDs etc.), but the
    entity graph may look more complex.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 欺诈客户可能会想掩盖他们仍然是计算机背后的同一个人，使用各种名字和地址。然而，实体解析工具仍然可能识别出相似性（例如地理和时间相似性、电子邮件地址中的重复模式、设备ID等），但实体图可能看起来更复杂。
- en: '![](../Images/bfeca362a7a7664ad1c8a7dae83a857a.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bfeca362a7a7664ad1c8a7dae83a857a.png)'
- en: Complex, Possibly Fraudulent Entity (Image by the Author)
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 复杂的、可能是欺诈性的实体（图片由作者提供）
- en: To make it a little less trivial, the generation script also has a 5% error
    rate, meaning that entities are labeled as fraudulent when they have a star-like
    layout and labeled as non-fraudulent for the random layout. Also there are some
    cases where the data is insufficient to determine the actual layout (e.g. only
    one or two records).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让它不那么简单，生成脚本还具有5%的错误率，这意味着当实体具有星形布局时，会被标记为欺诈，而随机布局则被标记为非欺诈。此外，还有一些情况下数据不足以确定实际布局（例如只有一两条记录）。
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In reality you most likely would gain valuable insights from all three kinds
    of features (record attributes, edge attributes and edge layout). The following
    code examples will consider this, but the generated data does not.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，你很可能会从所有三种特征（记录属性、边属性和边布局）中获得有价值的见解。以下代码示例将考虑这一点，但生成的数据则没有。
- en: Creating the Dataset
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建数据集
- en: The example uses python (except for the data generation) and [DGL](https://www.dgl.ai)
    with a [pytorch backend](https://pytorch.org). You can find the full jupyter notebook,
    the data and the generation script on [github](https://gist.github.com/stefan-berkner-tilotech/06a9ebaa4e4e52282785e8d5f2b6429c#file-er-and-gnn-ipynb).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 示例使用了python（数据生成除外）和[DGL](https://www.dgl.ai)，并且使用了[pytorch后台](https://pytorch.org)。你可以在[github](https://gist.github.com/stefan-berkner-tilotech/06a9ebaa4e4e52282785e8d5f2b6429c#file-er-and-gnn-ipynb)上找到完整的jupyter笔记本、数据和生成脚本。
- en: 'Let’s start with importing the dataset:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从导入数据集开始：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This processes the entities file, which is a JSON-line file, where each row
    represents a single entity. While iterating over each entity, it generates the
    edge features (long tensor with shape [e, 2], e=number of edges) and the node
    features (long tensor with shape [n, 2], n=number of nodes). It then proceeds
    to build the graph based on a and b (long tensors each with shape [e, 1]) and
    assigns the edge and graph features to that graph. All resulting graphs are then
    added to the dataset.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这处理了实体文件，这是一个JSON行文件，每行表示一个实体。在迭代每个实体时，它生成边特征（形状为[e, 2]的长张量，e=边数）和节点特征（形状为[n,
    2]的长张量，n=节点数）。然后，它根据a和b（每个形状为[e, 1]的长张量）构建图，并将边和图特征分配给该图。所有生成的图都被添加到数据集中。
- en: Model Architecture
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模型架构
- en: 'Now that we have the data ready, we need to think about the architecture of
    our GNN. This is what I came up with, but probably can be adjusted much more to
    the actual needs:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经准备好数据了，我们需要考虑GNN的架构。这是我想到的，但可能需要根据实际需求进行更多调整：
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The constructor takes the number of node features, number of edge features,
    number of hidden nodes and the number of labels (classes). It then creates two
    layers: a [NNConv layer](https://docs.dgl.ai/en/latest/generated/dgl.nn.pytorch.conv.NNConv.html)
    which calculates the hidden nodes based on the edge and node features, and then
    a [GraphSAGE layer](https://docs.dgl.ai/en/latest/generated/dgl.nn.pytorch.conv.SAGEConv.html)
    that calculates the resulting label based on the hidden nodes.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 构造函数接受节点特征的数量、边特征的数量、隐藏节点的数量和标签（类别）的数量。然后创建两个层次：[NNConv层](https://docs.dgl.ai/en/latest/generated/dgl.nn.pytorch.conv.NNConv.html)，根据边和节点特征计算隐藏节点，然后是[GraphSAGE层](https://docs.dgl.ai/en/latest/generated/dgl.nn.pytorch.conv.SAGEConv.html)，根据隐藏节点计算结果标签。
- en: Training and Testing
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 训练和测试
- en: Almost there. Next we prepare the data for training and testing.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 快完成了。接下来我们准备数据进行训练和测试。
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: We split with a 80/20 ratio using random sampling and create a data loader for
    each of the samples.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用80/20的比例进行随机抽样，并为每个样本创建数据加载器。
- en: The last step is to initialize the model with our data, run the training and
    afterwards test the result.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是用我们的数据初始化模型，进行训练，然后测试结果。
- en: '[PRE5]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: We initialize the model by providing the feature sizes for nodes and edges (both
    2 in our case), the hidden nodes (64) and the amount of labels (2 because it’s
    either fraud or not). The optimizer is then initialized with a learning rate of
    0.01\. Afterwards we run a total of 50 training iterations. Once the training
    is done, we test the results using the test data loader and print the resulting
    accuracy.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过提供节点和边缘的特征大小（在我们的例子中均为2），隐藏节点（64）以及标签数量（2，因为只有欺诈或非欺诈）来初始化模型。然后，优化器以0.01的学习率初始化。之后我们运行总共50次训练迭代。一旦训练完成，我们使用测试数据加载器测试结果，并打印出结果准确率。
- en: For various runs, I had a typical accuracy in the range of 70 to 85%. However,
    with a few exceptions going down to something like 55%.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 对于各种运行，我的典型准确率在70%到85%之间。然而，也有一些例外情况，准确率降到大约55%。
- en: Conclusion
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Given that the only usable information from our example dataset is the explanation
    of how the nodes are connected, the initial results look very promising and suggest
    that higher accuracy rates would be possible with real-world data and more training.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于我们示例数据集中唯一可用的信息是节点如何连接的解释，初步结果看起来非常有前景，并且建议使用真实世界数据和更多训练可能会实现更高的准确率。
- en: Obviously when working with real data, the layout is not that consistent and
    does not provide an obvious correlation between the layout and fraudulent behavior.
    Hence, you should also take the edge and node features into consideration. The
    key takeaway from this article should be that entity resolution provides the ideal
    data for fraud detection using graph neural networks and should be considered
    part of a fraud detection engineer’s arsenal of tools.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，在处理真实数据时，布局并不那么一致，也没有明显的布局与欺诈行为之间的关联。因此，你还应该考虑边缘和节点的特征。本文的关键要点应是实体解析提供了使用图神经网络进行欺诈检测的理想数据，并且应视为欺诈检测工程师工具库的一部分。
- en: '*Originally published at* [*https://tilores.io*](https://tilores.io/content/Fraud-Detection-with-Entity-Resolution-and-Graph-Neural-Networks)*.*'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '*最初发布于* [*https://tilores.io*](https://tilores.io/content/Fraud-Detection-with-Entity-Resolution-and-Graph-Neural-Networks)*.*'
