- en: 'Getting Started with Great Expectations: A Guide to Data Validation in Python'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 入门Great Expectations：Python中的数据验证指南。
- en: 原文：[https://towardsdatascience.com/getting-started-with-great-expectations-a-guide-to-data-validation-in-python-95a8ffc2b747](https://towardsdatascience.com/getting-started-with-great-expectations-a-guide-to-data-validation-in-python-95a8ffc2b747)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/getting-started-with-great-expectations-a-guide-to-data-validation-in-python-95a8ffc2b747](https://towardsdatascience.com/getting-started-with-great-expectations-a-guide-to-data-validation-in-python-95a8ffc2b747)
- en: Learn how to prevent data quality issues with a few lines of code in Python
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 学习如何用几行Python代码防止数据质量问题。
- en: '[](https://eugenia-anello.medium.com/?source=post_page-----95a8ffc2b747--------------------------------)[![Eugenia
    Anello](../Images/537f444252cdc60709e7a19e37734c7b.png)](https://eugenia-anello.medium.com/?source=post_page-----95a8ffc2b747--------------------------------)[](https://towardsdatascience.com/?source=post_page-----95a8ffc2b747--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----95a8ffc2b747--------------------------------)
    [Eugenia Anello](https://eugenia-anello.medium.com/?source=post_page-----95a8ffc2b747--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://eugenia-anello.medium.com/?source=post_page-----95a8ffc2b747--------------------------------)[![Eugenia
    Anello](../Images/537f444252cdc60709e7a19e37734c7b.png)](https://eugenia-anello.medium.com/?source=post_page-----95a8ffc2b747--------------------------------)[](https://towardsdatascience.com/?source=post_page-----95a8ffc2b747--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----95a8ffc2b747--------------------------------)
    [Eugenia Anello](https://eugenia-anello.medium.com/?source=post_page-----95a8ffc2b747--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----95a8ffc2b747--------------------------------)
    ·5 min read·Jul 12, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----95a8ffc2b747--------------------------------)
    ·阅读时间5分钟·2023年7月12日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/b44619fb1e276911bf755eb0cda452a6.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b44619fb1e276911bf755eb0cda452a6.png)'
- en: Photo by [Link Hoang](https://unsplash.com/@linkhoang) on [Unsplash](https://unsplash.com/photos/UoqAR2pOxMo)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 照片来源：[Link Hoang](https://unsplash.com/@linkhoang) 在 [Unsplash](https://unsplash.com/photos/UoqAR2pOxMo)
- en: When you work on a data science project with a company, you usually don’t have
    a unique test set, unlike university and research, but you keep receiving newly
    updated samples from the client.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 当你与公司合作进行数据科学项目时，通常没有唯一的测试集，不像大学和研究那样，而是不断从客户那里收到更新的样本。
- en: Before applying the machine learning model to the new sample, you need to verify
    its data quality, such as the column names, the column types, and the distribution
    of the fields, which should match the training and old test set.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在将机器学习模型应用于新样本之前，你需要验证其数据质量，例如列名、列类型以及字段分布，这些应该与训练集和旧测试集相匹配。
- en: Manually analyzing the data can be time-consuming when the data is dirty and
    presents more than 100 features. Luckily, there is a life-saving Python library,
    called **Great Expectations**. Did I intrigue you? Let’s get started!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 手动分析数据可能非常耗时，尤其是当数据很脏且具有超过100个特征时。幸运的是，有一个救命的Python库，叫做**Great Expectations**。这是否引起了你的兴趣？让我们开始吧！
- en: What is Great Expectations?
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是Great Expectations？
- en: '![](../Images/12c18fd03279efe713c48475f0618327.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/12c18fd03279efe713c48475f0618327.png)'
- en: 'Illustration by Author. Source: [flaticon](https://www.flaticon.com/free-icon/detective_695877?term=sherlock+holmes&page=1&position=4&origin=search&related_id=695877).'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 作者插图。来源：[flaticon](https://www.flaticon.com/free-icon/detective_695877?term=sherlock+holmes&page=1&position=4&origin=search&related_id=695877)。
- en: 'Great Expectations is an open-source Python library that is specialized in
    solving three important aspects to manage data:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Great Expectations是一个开源Python库，专门解决管理数据的三个重要方面：
- en: '**validating data** by verifying if it respects some important conditions or
    expectations'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**验证数据**是否符合一些重要条件或期望。'
- en: '**automating data profiling** to test your data fastly without the need of
    starting from scratch'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动化数据分析**，快速测试数据而无需从头开始。'
- en: '**formatted documents**, that contain the results of the expectations and validations.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**格式化文档**，包含期望和验证结果。'
- en: In this tutorial, we are going to focus on validating data, which is one of
    the main issues when dealing with real-world data.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将专注于验证数据，这在处理实际数据时是主要问题之一。
- en: Airbnb listings in Amsterdam
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 阿姆斯特丹的Airbnb房源
- en: We are going to analyze the Airbnb listings provided by [Inside Airbnb](http://insideairbnb.com/get-the-data/).
    We are going to work with data from [Amsterdam](http://data.insideairbnb.com/the-netherlands/north-holland/amsterdam/2023-06-05/visualisations/reviews.csv).
    The dataset is already split into training and test sets. As you may guess from
    the name of the dataset, the goal is to predict listing prices. If we just keep
    attention to the number of reviews, we can notice that the number of reviews on
    the test data has more variability than the ones of the training set.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将分析由 [Inside Airbnb](http://insideairbnb.com/get-the-data/) 提供的 Airbnb 列表数据。我们将使用来自
    [阿姆斯特丹](http://data.insideairbnb.com/the-netherlands/north-holland/amsterdam/2023-06-05/visualisations/reviews.csv)
    的数据集。数据集已经分为训练集和测试集。正如你从数据集的名称中可能猜到的那样，目标是预测房源价格。如果我们仅关注评论数量，我们可以注意到测试数据的评论数量变异性大于训练集的评论数量。
- en: '![](../Images/0c4665fcd1b8224d2dbcb6e8e46d2d9a.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0c4665fcd1b8224d2dbcb6e8e46d2d9a.png)'
- en: Illustration by Author
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 作者插图
- en: The question that we should ask ourselves is “What other differences did we
    miss? Let’s get started with the library!
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该问自己一个问题：“我们还遗漏了哪些差异？让我们开始使用这个库吧！
- en: '**Table of contents:**'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**目录：**'
- en: '**Requirements**'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**需求**'
- en: '**Load file**'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**加载文件**'
- en: '**Create Expectations**'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**创建期望**'
- en: Requirements
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 需求
- en: 'Before installing the library, it’s recommended to [install Python 3 and create
    a virtual environment](https://www.digitalocean.com/community/tutorial-collections/how-to-install-python-3-and-set-up-a-programming-environment).
    After you have activated the environment, we can install the Python library:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装库之前，建议 [安装 Python 3 并创建虚拟环境](https://www.digitalocean.com/community/tutorial-collections/how-to-install-python-3-and-set-up-a-programming-environment)。在激活环境后，我们可以安装
    Python 库：
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You also need to download the data from [Kaggle](https://www.kaggle.com/datasets/samuelcortinhas/house-price-prediction-seattle)
    to follow the tutorial. The files should be contained inside the folder “data”.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 你还需要从 [Kaggle](https://www.kaggle.com/datasets/samuelcortinhas/house-price-prediction-seattle)
    下载数据以跟随教程。文件应包含在“data”文件夹中。
- en: Load file
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加载文件
- en: 'Like in Pandas, the great expectations library has the equivalent method to
    import the CSV file:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 就像在 Pandas 中一样，great expectations 库也有相应的方法来导入 CSV 文件：
- en: '[PRE1]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In case you have other types of data, like JSON, parquet and XLSX, you can just
    wrap the Pandas methods.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有其他类型的数据，比如 JSON、parquet 和 XLSX，你可以直接使用 Pandas 方法。
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/690dfb9035b1a9ae37953988ef86b07f.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/690dfb9035b1a9ae37953988ef86b07f.png)'
- en: Illustration by Author
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 作者插图
- en: This is a fast overview of our test data and the variables we are going to analyze
    in the next steps.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这是对我们测试数据和我们将在下一步分析的变量的快速概述。
- en: Create expectations
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建期望
- en: In this library, [expectations](https://legacy.docs.greatexpectations.io/en/latest/reference/core_concepts/expectations/expectations.html#expectations)
    consist in several tests that verify the quality of your data. The beauty of the
    library is that you don’t need to check manually, but there are already more than
    300 implemented expectations with intuitive names.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个库中，[期望值](https://legacy.docs.greatexpectations.io/en/latest/reference/core_concepts/expectations/expectations.html#expectations)
    由几个测试组成，验证你的数据质量。这个库的优点是你不需要手动检查，因为已经实现了 300 多个具有直观名称的期望值。
- en: '**Check if there are the same columns as before**'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**检查列名是否与之前相同**'
- en: 'Let’s suppose that the client has sent us a new sample and we want to check
    if it contains the same columns as in the training set. There are a lot of ways
    to do it in pandas if you ask ChatGPT, but there is a more intuitive method to
    do it with great expectations:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 假设客户给我们发送了一个新样本，我们想检查它是否包含与训练集相同的列名。如果你问 ChatGPT，Pandas 中有很多方法可以做到这一点，但使用 great
    expectations 有一种更直观的方法：
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Output:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '[PRE6]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: From the result, we can see that the method found most of the columns, except
    for the fields id and neighbourhood. Since the condition isn’t respected completely,
    the key “success” is valued as false.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 从结果中，我们可以看到该方法找到了大部分列，除了 id 和 neighbourhood 字段。由于条件没有完全满足，"success" 键的值为 false。
- en: '**2\. Check if there are no null values in last_review**'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**2\. 检查 last_review 中是否没有空值**'
- en: 'The missing values are one of the main problems when working with real-world
    data:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 缺失值是处理真实数据时的主要问题之一：
- en: '[PRE7]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Output:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '[PRE8]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: From this test, we can see that we have 143 missing values in that column.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个测试中，我们可以看到该列中有 143 个缺失值。
- en: '**3\. Check if the type of minimum_nights is an integer**'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**3\. 检查 minimum_nights 的类型是否为整数**'
- en: 'It may seem banal, but you may find errors because the model was trained on
    a column with a different type. So, this expectation is useful for avoiding waste
    of time:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能看起来平淡无奇，但你可能会发现错误，因为模型是在不同类型的列上训练的。因此，这个期望对于避免浪费时间是有用的：
- en: '[PRE9]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Output:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '[PRE10]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The expectation is respected, highlighted by `"success":true`.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 期望得到了遵守，突出显示为`"success":true`。
- en: '**4\. Check if the maximum price is within a specific interval**'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**4\. 检查最大价格是否在特定区间内**'
- en: 'Before we have seen that the price has different distribution in training and
    test sets. We try to investigate if the maximum price is between 413 e 12000,
    which corresponds respectively to the 90th percentile and the maximum of the training
    set:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前已经看到价格在训练集和测试集中的分布不同。我们尝试调查最大价格是否在413和12000之间，这分别对应训练集的第90百分位数和最大值：
- en: '[PRE11]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Output:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '[PRE12]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The output tells us that the maximum price is 7900 and is within that interval.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 输出结果告诉我们，最大价格为7900，并且在该区间内。
- en: 'Final thoughts:'
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 最后的思考：
- en: 'I just provided an overview of the Great Expectations to introduce the main
    functionality: the expectations. You can explore other declarative statements,
    or expectations, from the [official website](https://greatexpectations.io/expectations/?filterType=undefined&gotoPage=undefined&showFilters=undefined&viewType=undefined).
    In the next article, I am going to cover the automation of data profiling and
    visualization of all the expectations in a unique document. You can find the GitHub
    code [here](https://github.com/eugeniaring/Medium-Articles/blob/main/MLOps/great_expectation_start.ipynb).
    Thanks for reading! Have a nice day!'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我刚刚介绍了Great Expectations的概述，以介绍其主要功能：期望。你可以从[官方网站](https://greatexpectations.io/expectations/?filterType=undefined&gotoPage=undefined&showFilters=undefined&viewType=undefined)探索其他声明性语句或期望。在下一篇文章中，我将介绍数据分析和所有期望的可视化自动化，并汇集在一个文档中。你可以在[这里](https://github.com/eugeniaring/Medium-Articles/blob/main/MLOps/great_expectation_start.ipynb)找到GitHub代码。感谢阅读！祝你有美好的一天！
- en: '*Disclaimer: This data set is licensed under Attribution 4.0 International
    (CC BY 4.0)*'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '*免责声明：该数据集的许可为 4.0 国际 (CC BY 4.0)*'
- en: 'Useful Resources:'
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 有用的资源：
- en: '[Documentation of Great Expectations](https://legacy.docs.greatexpectations.io/en/latest/guides/tutorials/explore_expectations_in_a_notebook.html)'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Great Expectations 的文档](https://legacy.docs.greatexpectations.io/en/latest/guides/tutorials/explore_expectations_in_a_notebook.html)'
- en: '[GitHub page of Great Expectations](https://github.com/great-expectations/great_expectations)'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Great Expectations 的 GitHub 页面](https://github.com/great-expectations/great_expectations)'
