- en: How Python Enumerations Make Data Configuration Elegant
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python枚举如何使数据配置优雅
- en: 原文：[https://towardsdatascience.com/how-python-enumerations-make-data-configuration-elegant-a7d8356657bd](https://towardsdatascience.com/how-python-enumerations-make-data-configuration-elegant-a7d8356657bd)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-python-enumerations-make-data-configuration-elegant-a7d8356657bd](https://towardsdatascience.com/how-python-enumerations-make-data-configuration-elegant-a7d8356657bd)
- en: An introduction to using Enums in Python for ML projects
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python中用于机器学习项目的枚举简介
- en: '[](https://medium.com/@ebbeberge?source=post_page-----a7d8356657bd--------------------------------)[![Eirik
    Berge, PhD](../Images/7507374e75980fd0c1056af3cd299eaa.png)](https://medium.com/@ebbeberge?source=post_page-----a7d8356657bd--------------------------------)[](https://towardsdatascience.com/?source=post_page-----a7d8356657bd--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----a7d8356657bd--------------------------------)
    [Eirik Berge, PhD](https://medium.com/@ebbeberge?source=post_page-----a7d8356657bd--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@ebbeberge?source=post_page-----a7d8356657bd--------------------------------)[![Eirik
    Berge, PhD](../Images/7507374e75980fd0c1056af3cd299eaa.png)](https://medium.com/@ebbeberge?source=post_page-----a7d8356657bd--------------------------------)[](https://towardsdatascience.com/?source=post_page-----a7d8356657bd--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----a7d8356657bd--------------------------------)
    [Eirik Berge, PhD](https://medium.com/@ebbeberge?source=post_page-----a7d8356657bd--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----a7d8356657bd--------------------------------)
    ·7 min read·May 28, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----a7d8356657bd--------------------------------)
    ·阅读时间7分钟·2023年5月28日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/f50c10b5f705134f0d6b76ef93de6254.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f50c10b5f705134f0d6b76ef93de6254.png)'
- en: Photo by [Joshua Woroniecki](https://unsplash.com/@joshua_j_woroniecki?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Joshua Woroniecki](https://unsplash.com/@joshua_j_woroniecki?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Overview of Your Journey
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你的旅程概述
- en: '[Introduction](#a6cb)'
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[简介](#a6cb)'
- en: '[A Naive Approach](#8f4f)'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[一种天真的方法](#8f4f)'
- en: '[Enums to the Rescue!](#7cf7)'
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[枚举的救援！](#7cf7)'
- en: '[Wrapping Up](#c801)'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[总结](#c801)'
- en: 1 — Introduction
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1 — 简介
- en: 'When writing Python code in machine learning projects, there is almost always
    a need for **configuration code**. This is code that keeps track of information
    that is used to configure other components of your code. While this definition
    probably helps no one that does not already know what this means, a few examples
    really help:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在机器学习项目中编写 Python 代码时，几乎总是需要**配置代码**。这段代码跟踪用于配置其他代码组件的信息。虽然这个定义可能对那些不明白的人没有帮助，但几个例子会非常有用：
- en: '**Hyperparameters:** In machine learning, hyperparameters are used to train
    multiple models with slight variations. The hyperparameter might be the number
    of trees in a random forest. Another example is the relaxation parameter for Ridge
    or Lasso regression.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**超参数：** 在机器学习中，超参数用于训练多个略有不同的模型。超参数可能是随机森林中的树木数量。另一个例子是 Ridge 或 Lasso 回归的松弛参数。'
- en: '**Access information:** When connecting to a database or a cloud-hosted storage
    account, there is a need for access information. This includes the name, password,
    and other additional properties of the storage system. Similarly, say you are
    subscribing to a pub/sub-system like Kafka or an MQTT broker. Then the name of
    the topic, a password, and port numbers are necessary configuration code.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**访问信息：** 在连接到数据库或云托管存储账户时，需要访问信息。这包括存储系统的名称、密码以及其他附加属性。类似地，假设你订阅了像 Kafka 或
    MQTT 经纪人这样的发布/订阅系统。那么主题名称、密码和端口号就是必要的配置代码。'
- en: '**Pipeline information:** When building a data engineering pipeline, there
    is a need for configuration code. This can be ratios for splitting testing and
    training sets, or a CRON expression for when to run the pipeline.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**管道信息：** 在构建数据工程管道时，需要配置代码。这可能包括用于拆分测试集和训练集的比例，或用于运行管道的 CRON 表达式。'
- en: In summary, configuration code can in some cases help to access outside systems
    like databases and pub/sub-systems. In other cases, it can help to configure internal
    systems like machine learning models and data engineering pipelines.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，在某些情况下，配置代码可以帮助访问外部系统，如数据库和发布/订阅系统。在其他情况下，它可以帮助配置内部系统，如机器学习模型和数据工程管道。
- en: It often makes sense to store configuration code in separate files (in formats
    like `.env`, `.yaml`, or `.json`). Nevertheless, this configuration code still
    needs to be accessed within the Python code. There are many ways to organize the
    configuration code in your Python scripts 😕
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 将配置代码存储在单独的文件中（如`.env`、`.yaml`或`.json`格式）通常是有意义的。然而，这些配置代码仍需要在Python代码中访问。有许多方法可以在你的Python脚本中组织配置代码
    😕
- en: 'In this blog post, I will show you why **Python enumerations** are a better
    choice than some of the more obvious ways of doing this. I’ve previously made
    a YouTube video on enumerations in Python. You can check that one out if you prefer
    a video version of more or less the same content:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇博客文章中，我将向你展示为什么**Python 枚举**比一些更明显的方法更好。我之前制作了一个关于Python枚举的YouTube视频。如果你更喜欢视频版本，可以查看那个：
- en: 2 — A Naive Approach
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2 — 一个简单的方法
- en: 'Before we dive into how Python Enums can make configuration code more readable,
    let’s first take a look at a naive approach that is often used. One common way
    to store configuration information is to use global variables. Let’s say you have
    a machine-learning model that uses `[RandomForestClassifier](https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html)`
    from `[scikit-learn](https://scikit-learn.org/stable/index.html)`. You want to
    store the number of trees in a global variable called `N_ESTIMATORS`. This is
    in conjunction with the parameter name that `RandomForestClassifier` takes. You
    could define this variable at the top of our script like so:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入了解Python枚举如何使配置代码更具可读性之前，先来看一种常用的简单方法。存储配置信息的一种常见方法是使用全局变量。假设你有一个使用`[RandomForestClassifier](https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html)`来自`[scikit-learn](https://scikit-learn.org/stable/index.html)`的机器学习模型。你想将树的数量存储在一个名为`N_ESTIMATORS`的全局变量中。这是与`RandomForestClassifier`所需的参数名称配合使用的。你可以在脚本的顶部定义这个变量：
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'With only a single configuration parameter, this is no problem. However, let‘s
    introduce a few more:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 只有一个配置参数时，这没有问题。然而，让我们引入更多参数：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The first minor problem is that there is *no way for Python to understand that
    these global variables are related*. They are simply distinct global variables.
    Hence you can not iterate over them or collectively perform safety checks on them
    without introducing more code.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个小问题是*Python 无法理解这些全局变量之间的关系*。它们只是不同的全局变量。因此，除非引入更多代码，否则无法对它们进行迭代或集体执行安全检查。
- en: 'A more serious problem arises when you try to work with another model in the
    script as well. Let’s say that you want to try to use the `[AdaBoostClassifier](https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.AdaBoostClassifier.html)`
    as well. Then you might write:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 当你尝试在脚本中使用另一个模型时，会出现更严重的问题。假设你想尝试使用`[AdaBoostClassifier](https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.AdaBoostClassifier.html)`。那么你可能会写：
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Do you see what has happened? *You’ve accidentally overwritten the* `*N_ESTIMATORS*`
    *global variable!* While this is simple to spot here, imagine that the Python
    script was 500 lines long and written by someone else. Maybe this would have slipped
    you by. Python would probably give no indication that something was wrong. It’s
    not like setting `N_ESTIMATORS = 50` for the `RandomForestClassifier` gives a
    syntax error 😧
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 你看到发生了什么了吗？*你不小心覆盖了*`*N_ESTIMATORS*`*全局变量！*虽然这里很容易发现，但假设Python脚本有500行，由其他人编写。也许你会忽略这个问题。Python可能不会给出任何错误提示。设置`N_ESTIMATORS
    = 50`对于`RandomForestClassifier`并不会导致语法错误 😧
- en: 'How would you solve this? You could introduce a prolonged name indicating which
    model the `N_ESTIMATORS` global variable belongs to:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 你如何解决这个问题？你可以引入一个延长的名称来表示`N_ESTIMATORS`全局变量属于哪个模型：
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now it looks like the `LEARNING_RATE` global variable is not related to `AdaBoostClassifier`
    anymore. Might as well add the suffix to all the variables then to avoid confusion:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在看起来`LEARNING_RATE`全局变量与`AdaBoostClassifier`不再相关。那么，不妨为所有变量添加后缀以避免混淆：
- en: '[PRE4]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In addition to overly long variable names, you can start to see what kind of
    subtle issues you run into with configuration code. These issues quickly create
    hard-to-understand bugs at worst, and poor variable names at best.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 除了变量名过长，你会开始看到配置代码中遇到的细微问题。这些问题很快会造成难以理解的错误，最糟糕的情况下是难以理解的错误，最好的情况下是糟糕的变量名。
- en: For database calls, it's also very common to make calls to multiple databases
    within a single script. *Do you really want to end up with variable names like*
    `*PRODUCTION_DATABASE_INGESTION_ACCESS_KEY*`*?*
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 对于数据库调用，通常在一个脚本中调用多个数据库也是很常见的。*你真的想要以像* `*PRODUCTION_DATABASE_INGESTION_ACCESS_KEY*`
    *这样的变量名结束吗？*
- en: Is there not a better way to deal with configuration code in Python?
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 是否有更好的方法来处理 Python 中的配置代码？
- en: 3 — Enums to the Rescue!
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3 — 枚举来拯救！
- en: '![](../Images/b9774578a46a637bbf2e28120ddbd426.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b9774578a46a637bbf2e28120ddbd426.png)'
- en: Photo by [Zac Durant](https://unsplash.com/ja/@zacdurant?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '[Zac Durant](https://unsplash.com/ja/@zacdurant?utm_source=medium&utm_medium=referral)
    拍摄的照片，来自 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)。'
- en: '[Python Enums](https://docs.python.org/3/library/enum.html) provide a more
    elegant solution for storing configuration information. Enums (short for enumerations)
    are essentially a way to define a set of named constants. The best way to understand
    Enums quickly is to adapt the machine learning configuration code from the previous
    section. The previous code you had was:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[Python 枚举](https://docs.python.org/3/library/enum.html) 提供了一种更优雅的解决方案来存储配置信息。枚举（枚举的缩写）本质上是一种定义命名常量集合的方式。快速理解枚举的最佳方式是调整前一节的机器学习配置代码。你之前的代码是：'
- en: '[PRE5]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'It can now be written as:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在可以这样写：
- en: '[PRE6]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Some Advantages
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一些优点
- en: 'Let‘s quickly see what advantages Python Enums give us:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速看看 Python 枚举给我们带来了什么优势：
- en: Each parameter (e.g., `MAX_DEPTH`) is now stored hierarchically within the model
    they are used for. This makes sure that nothing is overwritten when more configuration
    code is introduced. Hence there is also no need for overly long variable names.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个参数（例如，`MAX_DEPTH`）现在按层次结构存储在它们所使用的模型中。这确保了在引入更多配置代码时不会被覆盖。因此，也不需要过长的变量名。
- en: The different parameters used in `RandomForestClassifier` are now grouped in
    the `RandomForest` Enum. Thus they can be iterated over and collectively analyzed
    for type safety.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RandomForestClassifier` 中使用的不同参数现在被分组到 `RandomForest` 枚举中。因此，它们可以被迭代，并且可以集体分析以确保类型安全。'
- en: Since Enums are classes, they can have **docstrings** as I have illustrated
    above. While this might not be strictly needed for this example, in other examples
    this might clarify what the enumeration is referring to. Having this as a docstring
    that is coupled with the class rather than a free-flowing comment is a lot better.
    For one thing, automatic documentation software will now pick up that the docstring
    belongs to the enumeration. For the free-flowing comment, this would probably
    just be lost.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于枚举是类，它们可以像我上面所示那样拥有**文档字符串**。虽然对于这个示例来说可能不严格需要，但在其他示例中，这可能会澄清枚举所指的内容。将其作为与类相关联的文档字符串，而不是自由流动的注释，效果要好得多。一方面，自动文档生成软件现在会检测到文档字符串属于枚举。对于自由流动的注释，这可能会被忽略。
- en: 'If you now want to access the configuration code further down in the script,
    you can simply write:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你现在想在脚本中进一步访问配置代码，可以简单地写：
- en: '[PRE7]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This looks clean and is easy to read 😍
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这看起来很干净，易于阅读 😍
- en: Some Python features of Enums
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一些 Python 枚举的功能
- en: 'Let’s illustrate some simple features of Python enumerations by looking at
    the toy example:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过查看这个玩具示例来说明 Python 枚举的一些简单功能：
- en: '[PRE8]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Clearly, the information contained within the enumeration is related; they
    are all about HTTP(s) status codes. Given this, you can now use the following
    simple code to extract the names and values:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，枚举中的信息是相关的；它们都关于 HTTP(s) 状态码。鉴于此，你现在可以使用以下简单代码来提取名称和值：
- en: '[PRE9]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Python Enums also allow you to go backward: Given that a status code value
    is `404`, you can find the status code name by simply writing:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Python 枚举还允许你向后查找：给定状态码值为 `404`，你可以通过简单地写来找到状态码名称：
- en: '[PRE10]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'You can collectively work with the names/values pairs in an Enum by e.g., using
    the list constructor `list()`:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过例如使用列表构造函数 `list()` 来集体处理枚举中的名称/值对：
- en: '[PRE11]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Finally, you can pickle and unpickle enumerations in Python. To do this, simply
    use the `pickle` model as you would with other familiar objects in Python:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你可以在 Python 中对枚举进行序列化和反序列化。为此，只需像使用 Python 中的其他熟悉对象一样使用 `pickle` 模块：
- en: '[PRE12]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: This is especially important for configuration code for machine learning models.
    In that case, there are also well-known libraries like [MLflow](https://mlflow.org/)
    that saves configuration code elegantly for you.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这对于机器学习模型的配置代码尤为重要。在这种情况下，也有像 [MLflow](https://mlflow.org/) 这样的知名库可以优雅地为你保存配置代码。
- en: Sensitive Configuration Code
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 敏感配置代码
- en: When using sensitive configuration code (like passwords or access keys), *you
    should NEVER write them explicitly in the code*. They should be in a separate
    file that is ignored by the version control system you are using, and imported
    into the script.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 使用敏感配置代码（如密码或访问密钥）时，*你绝不应该在代码中明文书写它们*。它们应该存放在一个被版本控制系统忽略的单独文件中，并导入到脚本中。
- en: 'That does not mean that they can not be stored in Enums within the code. Enums
    are about the organization, and even censored information can be organized. As
    an example, here is an enumeration representing the connection to a [storage account
    in Microsoft Azure](https://learn.microsoft.com/en-us/azure/storage/common/storage-account-overview):'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不意味着它们不能存储在代码中的枚举（Enums）里。枚举是关于组织的，即使是被审查过的信息也可以被组织。例如，这里有一个表示连接到[Microsoft
    Azure存储账户](https://learn.microsoft.com/en-us/azure/storage/common/storage-account-overview)的枚举：
- en: '[PRE13]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Here the `StorageAccount` enumeration is fetching the `ACCESS_KEY` from an environment
    variable. This can be set in e.g., a `.env` file. Notice that within the Python
    script, no sensitive information is revealed. Nevertheless, all the information
    about the storage account is neatly organized into an enumeration.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`StorageAccount`枚举从环境变量中获取`ACCESS_KEY`。这可以设置在例如`.env`文件中。请注意，在Python脚本中没有泄露敏感信息。然而，所有关于存储账户的信息都被整齐地组织成一个枚举。
- en: 4— Wrapping Up
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4— 总结
- en: '![](../Images/4a06c775ef80f575c5d7cdfe36d7a151.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4a06c775ef80f575c5d7cdfe36d7a151.png)'
- en: Photo by [Spencer Bergen](https://unsplash.com/@spencerbergen?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[Spencer Bergen](https://unsplash.com/@spencerbergen?utm_source=medium&utm_medium=referral)拍摄，[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: In this blog post, we’ve seen how Python Enums can make configuration code readable,
    self-documenting, and less error-prone. If you want to learn more about enumerations,
    then I recommend the official [Enum HOWTO guide](https://docs.python.org/3/howto/enum.html#pickling)
    and the blog post [Build Enumerations of Constants With Python’s Enum](https://realpython.com/python-enum/).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇博客文章中，我们已经看到Python枚举如何使配置代码变得易读、自我文档化，并且减少错误。如果你想了解更多关于枚举的内容，我推荐官方的[Enum
    HOWTO指南](https://docs.python.org/3/howto/enum.html#pickling)和博客文章[用Python的Enum构建常量枚举](https://realpython.com/python-enum/)。
- en: If you are interested in data science, programming, or anything in between,
    then feel free to add me on [LinkedIn](https://www.linkedin.com/in/eirik-berge/)
    and say hi ✋
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对数据科学、编程或两者之间的任何内容感兴趣，可以随时在[LinkedIn](https://www.linkedin.com/in/eirik-berge/)上添加我，并打个招呼✋
- en: '**Like my writing?** Check out some of my other posts for more Python content:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**喜欢我的写作吗？** 查看我其他的一些帖子，获取更多Python内容：'
- en: '[Modernize Your Sinful Python Code with Beautiful Type Hints](/modernize-your-sinful-python-code-with-beautiful-type-hints-4e72e98f6bf1)'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用漂亮的类型提示现代化你的罪恶Python代码](/modernize-your-sinful-python-code-with-beautiful-type-hints-4e72e98f6bf1)'
- en: '[Visualizing Missing Values in Python is Shockingly Easy](/visualizing-missing-values-in-python-is-shockingly-easy-56ed5bc2e7ea)'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在Python中可视化缺失值是令人震惊的简单](/visualizing-missing-values-in-python-is-shockingly-easy-56ed5bc2e7ea)'
- en: '[Introducing Anomaly/Outlier Detection in Python with PyOD 🔥](/introducing-anomaly-outlier-detection-in-python-with-pyod-40afcccee9ff)'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用PyOD在Python中引入异常/离群点检测 🔥](/introducing-anomaly-outlier-detection-in-python-with-pyod-40afcccee9ff)'
- en: '[5 Awesome NumPy Functions That Can Save You in a Pinch](/5-awesome-numpy-functions-that-can-save-you-in-a-pinch-ba349af5ac47)'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[5个超棒的NumPy函数，能在关键时刻救你一命](/5-awesome-numpy-functions-that-can-save-you-in-a-pinch-ba349af5ac47)'
- en: '[5 Expert Tips to Skyrocket Your Dictionary Skills in Python 🚀](/5-expert-tips-to-skyrocket-your-dictionary-skills-in-python-1cf54b7d920d)'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[5个专家技巧，让你的Python字典技能飞跃 🚀](/5-expert-tips-to-skyrocket-your-dictionary-skills-in-python-1cf54b7d920d)'
