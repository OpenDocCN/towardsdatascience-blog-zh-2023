- en: What is pyproject.toml in Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 Python 中的 pyproject.toml
- en: 原文：[https://towardsdatascience.com/pyproject-python-9df8cc092f61?source=collection_archive---------4-----------------------#2023-05-09](https://towardsdatascience.com/pyproject-python-9df8cc092f61?source=collection_archive---------4-----------------------#2023-05-09)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/pyproject-python-9df8cc092f61?source=collection_archive---------4-----------------------#2023-05-09](https://towardsdatascience.com/pyproject-python-9df8cc092f61?source=collection_archive---------4-----------------------#2023-05-09)
- en: Managing Python project dependencies in pyproject.toml files
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 pyproject.toml 文件中管理 Python 项目依赖
- en: '[](https://gmyrianthous.medium.com/?source=post_page-----9df8cc092f61--------------------------------)[![Giorgos
    Myrianthous](../Images/ff4b116e4fb9a095ce45eb064fde5af3.png)](https://gmyrianthous.medium.com/?source=post_page-----9df8cc092f61--------------------------------)[](https://towardsdatascience.com/?source=post_page-----9df8cc092f61--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----9df8cc092f61--------------------------------)
    [Giorgos Myrianthous](https://gmyrianthous.medium.com/?source=post_page-----9df8cc092f61--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://gmyrianthous.medium.com/?source=post_page-----9df8cc092f61--------------------------------)[![Giorgos
    Myrianthous](../Images/ff4b116e4fb9a095ce45eb064fde5af3.png)](https://gmyrianthous.medium.com/?source=post_page-----9df8cc092f61--------------------------------)[](https://towardsdatascience.com/?source=post_page-----9df8cc092f61--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----9df8cc092f61--------------------------------)
    [Giorgos Myrianthous](https://gmyrianthous.medium.com/?source=post_page-----9df8cc092f61--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F76c21e75463a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpyproject-python-9df8cc092f61&user=Giorgos+Myrianthous&userId=76c21e75463a&source=post_page-76c21e75463a----9df8cc092f61---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----9df8cc092f61--------------------------------)
    ·5 min read·May 9, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F9df8cc092f61&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpyproject-python-9df8cc092f61&user=Giorgos+Myrianthous&userId=76c21e75463a&source=-----9df8cc092f61---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F76c21e75463a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpyproject-python-9df8cc092f61&user=Giorgos+Myrianthous&userId=76c21e75463a&source=post_page-76c21e75463a----9df8cc092f61---------------------post_header-----------)
    发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----9df8cc092f61--------------------------------)
    ·5 分钟阅读·2023年5月9日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F9df8cc092f61&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpyproject-python-9df8cc092f61&user=Giorgos+Myrianthous&userId=76c21e75463a&source=-----9df8cc092f61---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9df8cc092f61&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpyproject-python-9df8cc092f61&source=-----9df8cc092f61---------------------bookmark_footer-----------)![](../Images/f52d5d1a92753c16cb2f548c0ac9aecd.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9df8cc092f61&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpyproject-python-9df8cc092f61&source=-----9df8cc092f61---------------------bookmark_footer-----------)![](../Images/f52d5d1a92753c16cb2f548c0ac9aecd.png)'
- en: Photo by [Fré Sonneveld](https://unsplash.com/@fresonneveld?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/s/photos/chain?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[Fré Sonneveld](https://unsplash.com/@fresonneveld?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)拍摄的照片，来源于[Unsplash](https://unsplash.com/s/photos/chain?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)'
- en: Dependency management in Python is tricky, and sometimes frustrating work. Newcomers,
    are usually tempted to install any dependency (i.e. package) they may find useful,
    even in a single virtual enviroment. Therefore, this approach increases the chances
    of having conflicting package dependencies and ending up in the so-called **dependency
    hell**.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 中进行依赖管理是复杂且有时令人沮丧的工作。新手通常倾向于安装他们认为有用的任何依赖（即包），即使是在一个虚拟环境中。因此，这种方法增加了包依赖冲突的可能性，从而陷入所谓的**依赖地狱**。
- en: In a couple of my previous articles, we covered a few different methods for
    handling dependencies in Python projects, using `setup.py`, `setup.cfg` and `requirements.txt`
    files. However, as of Python 3.6, a new standard configuration file called `pyproject.toml`
    was introduced, and aims to simplify the way users manage dependencies and metadata
    definitions.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在我之前的几篇文章中，我们讨论了几种不同的方法来处理 Python 项目的依赖，使用了 `setup.py`、`setup.cfg` 和 `requirements.txt`
    文件。然而，从 Python 3.6 开始，推出了一种新的标准配置文件 `pyproject.toml`，旨在简化用户管理依赖和元数据定义的方式。
- en: Over the last few years, the `pyproject.toml` file has become the standard (and
    most popular) way for managing depdendeices in Python projects. In the next few
    sections we will explore how dependency management can be achieved using this
    file. Furthermore, we will also demonstrate how to install a Project with `pyproject.toml`
    specification in editable mode.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去几年中，`pyproject.toml` 文件已成为管理 Python 项目依赖的标准（也是最流行）方法。在接下来的几节中，我们将深入探讨如何使用此文件实现依赖管理。此外，我们还将演示如何以可编辑模式安装带有
    `pyproject.toml` 规范的项目。
- en: '[**Subscribe to Data Pipeline**](https://thedatapipeline.substack.com/welcome)**,
    a newsletter dedicated to Data Engineering**'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[**订阅数据管道**](https://thedatapipeline.substack.com/welcome)**，这是一个专注于数据工程的新闻通讯**'
- en: Dependency management prior to pyproject.toml
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: pyproject.toml 之前的依赖管理
