- en: 'Designing Operations Research Solutions: A User-friendly Routing Application
    with Streamlit'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计运筹学解决方案：一个用户友好的 Streamlit 路由应用
- en: 原文：[https://towardsdatascience.com/designing-operations-research-solutions-a-user-friendly-routing-application-with-streamlit-17212553861d?source=collection_archive---------2-----------------------#2023-09-30](https://towardsdatascience.com/designing-operations-research-solutions-a-user-friendly-routing-application-with-streamlit-17212553861d?source=collection_archive---------2-----------------------#2023-09-30)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/designing-operations-research-solutions-a-user-friendly-routing-application-with-streamlit-17212553861d?source=collection_archive---------2-----------------------#2023-09-30](https://towardsdatascience.com/designing-operations-research-solutions-a-user-friendly-routing-application-with-streamlit-17212553861d?source=collection_archive---------2-----------------------#2023-09-30)
- en: From mathematical models to software engineering in Python
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从数学模型到 Python 软件工程
- en: '[](https://medium.com/@bruscalia12?source=post_page-----17212553861d--------------------------------)[![Bruno
    Scalia C. F. Leite](../Images/1042cd04be047c0811fef79ecd04e69c.png)](https://medium.com/@bruscalia12?source=post_page-----17212553861d--------------------------------)[](https://towardsdatascience.com/?source=post_page-----17212553861d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----17212553861d--------------------------------)
    [Bruno Scalia C. F. Leite](https://medium.com/@bruscalia12?source=post_page-----17212553861d--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@bruscalia12?source=post_page-----17212553861d--------------------------------)[![Bruno
    Scalia C. F. Leite](../Images/1042cd04be047c0811fef79ecd04e69c.png)](https://medium.com/@bruscalia12?source=post_page-----17212553861d--------------------------------)[](https://towardsdatascience.com/?source=post_page-----17212553861d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----17212553861d--------------------------------)
    [Bruno Scalia C. F. Leite](https://medium.com/@bruscalia12?source=post_page-----17212553861d--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F3ce9b7482ef0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-operations-research-solutions-a-user-friendly-routing-application-with-streamlit-17212553861d&user=Bruno+Scalia+C.+F.+Leite&userId=3ce9b7482ef0&source=post_page-3ce9b7482ef0----17212553861d---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----17212553861d--------------------------------)
    ·12 min read·Sep 30, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F17212553861d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-operations-research-solutions-a-user-friendly-routing-application-with-streamlit-17212553861d&user=Bruno+Scalia+C.+F.+Leite&userId=3ce9b7482ef0&source=-----17212553861d---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F3ce9b7482ef0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-operations-research-solutions-a-user-friendly-routing-application-with-streamlit-17212553861d&user=Bruno+Scalia+C.+F.+Leite&userId=3ce9b7482ef0&source=post_page-3ce9b7482ef0----17212553861d---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----17212553861d--------------------------------)
    · 12分钟阅读 · 2023年9月30日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F17212553861d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-operations-research-solutions-a-user-friendly-routing-application-with-streamlit-17212553861d&user=Bruno+Scalia+C.+F.+Leite&userId=3ce9b7482ef0&source=-----17212553861d---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F17212553861d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-operations-research-solutions-a-user-friendly-routing-application-with-streamlit-17212553861d&source=-----17212553861d---------------------bookmark_footer-----------)![](../Images/6f8bc76917461608408820ef00925fab.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F17212553861d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-operations-research-solutions-a-user-friendly-routing-application-with-streamlit-17212553861d&source=-----17212553861d---------------------bookmark_footer-----------)![](../Images/6f8bc76917461608408820ef00925fab.png)'
- en: Photo by [Caspar Camille Rubin](https://unsplash.com/@casparrubin?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Caspar Camille Rubin](https://unsplash.com/@casparrubin?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Bridging the gap between theory and applications is essential in Operations
    Research and Data Science. Whereas theoretical foundations form the core of optimization
    solutions as they provide the means to solving complex problems, we should also
    be concerned with how to make these concepts accessible and actionable for practical
    use.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在运筹学和数据科学中，弥合理论与应用之间的差距至关重要。虽然理论基础形成了优化解决方案的核心，因为它们提供了解决复杂问题的方法，但我们也应关注如何使这些概念变得可访问并且可用于实际应用。
- en: The traveling salesman problem (TSP) is undoubtedly the most extensively studied
    problem in combinatorial optimization (Rego et al., 2011). It is easy to describe
    (verbally at least) and can be used to show some possible components of modern
    routing APIs. Therefore, I just could not think of a better alternative to use
    in this story.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 旅行商问题（TSP）无疑是组合优化中研究最广泛的问题（Rego et al., 2011）。它的描述很简单（至少口头上），并且可以用来展示一些现代路由API的可能组件。因此，我实在无法想到一个更好的替代方案来在这个故事中使用。
- en: In this tutorial, you’ll learn how to use the Python library *Streamlit* to
    build a web application to solve the TSP based on user-provided input data. As
    we are concerned with real-world applications, the solution goes beyond just Euclidean
    distances. It should be able to extract actual road driving distances between
    points using their coordinates and incorporate these distances into the optimization
    process. To do so the OpenStreetMap API will be used.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，你将学习如何使用Python库*Streamlit*构建一个基于用户提供输入数据来解决TSP的Web应用程序。由于我们关注实际应用，因此解决方案不仅限于欧几里得距离。它应该能够使用坐标提取实际的道路行驶距离，并将这些距离纳入优化过程。为此，将使用OpenStreetMap
    API。
- en: If you are interested in understanding better theoretical aspects of numerical
    optimization, you might want to check my stories on [*Linear Programming*](/linear-programming-theory-and-applications-c67600591612)
    and the [*Vehicle Routing Problem*](https://medium.com/towards-data-science/the-vehicle-routing-problem-exact-and-heuristic-solutions-c411c0f4d734)
    (which is a generalization of the TSP).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对深入了解数值优化的理论方面感兴趣，你可能会想查看我关于[*线性规划*](/linear-programming-theory-and-applications-c67600591612)和[*车辆路径问题*](https://medium.com/towards-data-science/the-vehicle-routing-problem-exact-and-heuristic-solutions-c411c0f4d734)（这是TSP的一个推广）的文章。
- en: Are you ready for some hands-on? Have a glimpse at our final results…
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 你准备好动手了吗？来看看我们的最终结果吧……
- en: '![](../Images/32127326f034bc751079e6edc3782952.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/32127326f034bc751079e6edc3782952.png)'
- en: Screen capture of the final application. (Animation by the author).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 最终应用程序的屏幕截图。（动画由作者制作）。
- en: As the entire code might be too long to include in this story, part was just
    referenced but omitted. You can check the complete code in [this repository](https://github.com/bruscalia/tsp-app/tree/main)
    though.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 由于整个代码可能过长，未能在此故事中全部包含，部分代码已引用但省略。不过，你可以在[这个库](https://github.com/bruscalia/tsp-app/tree/main)中查看完整代码。
- en: The Traveling Salesman Problem
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 旅行商问题
- en: The TSP consists of finding the shortest tour connecting *N* points. As the
    number of points considered increases, due to the combinatorial nature of the
    problem, finding an optimal or near-optimal solution can become very challenging.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: TSP的目标是找到连接*N*个点的最短路径。随着考虑的点数增加，由于问题的组合性质，找到一个最佳或近似最佳的解决方案可能变得非常具有挑战性。
- en: '![](../Images/4c59efcdeda1e2ef5f4f28f99e63ac43.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4c59efcdeda1e2ef5f4f28f99e63ac43.png)'
- en: Good quality solution for TSP with 1000 locations obtained using custom heuristics.
    (Image by the author).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 使用自定义启发式算法获得的1000个地点的TSP优质解决方案。（图片由作者提供）。
- en: 'From exact methods to heuristics and meta-heuristics, the techniques to solve
    the TSP must consider pairwise distances between elements to obtain a solution.
    Although, in this article, I will not dive into details of solution methods, consider
    a generic function to solve the TSP has the following signature:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 从精确方法到启发式和元启发式，解决TSP的技术必须考虑元素之间的成对距离以获得解决方案。虽然在这篇文章中，我不会深入讨论解决方法的细节，但可以考虑一个通用函数来解决TSP，其签名如下：
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You can find how to implement some solution strategies in the original [code
    repository](https://github.com/bruscalia/tsp-app). Here, however, we will focus
    on how something like `solve_tsp` can be seen as a component in software development.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在原始[代码库](https://github.com/bruscalia/tsp-app)中找到一些解决方案策略的实现方法。然而，在这里，我们将重点讨论如何将类似于`solve_tsp`的组件视为软件开发中的一个组成部分。
- en: Repository folder structure
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 库文件夹结构
- en: 'Throughout this tutorial, a simple flat folder structure will be adopted with
    the following elements:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，将采用一个简单的扁平文件夹结构，其中包含以下元素：
- en: '*.streamlit*: This folder is where general Streamlit settings will be placed.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*.streamlit*: 这个文件夹是存放一般 Streamlit 设置的地方。'
- en: '*data*: The folder that stores datasets used throughout development and that
    might be regular examples.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*data*: 存储在开发过程中使用的数据集的文件夹，可能包含常规示例。'
- en: '*assets*: This folder stores elements referenced in the main app script, such
    as images, logos, etc.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*assets*: 这个文件夹存储在主应用脚本中引用的元素，如图像、徽标等。'
- en: '*optimizer*: An internal Python package used in the app.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*optimizer*: 应用程序中使用的内部 Python 包。'
- en: '*app.py*: The main Streamlit script.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*app.py*: 主要的 Streamlit 脚本。'
- en: '*Dockerfile*: The instructions to build a Docker image for the application.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Dockerfile*: 构建应用程序 Docker 镜像的说明。'
- en: '*requirements.txt*: Python dependencies to run the application.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*requirements.txt*: 运行应用程序所需的 Python 依赖项。'
- en: '*README.md*: Project description.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*README.md*: 项目描述。'
- en: '*.dockerignore* and *.gitignore*: As their names suggest, files ignored by
    Docker build and by Git respectively.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*.dockerignore* 和 *.gitignore*: 顾名思义，分别是 Docker 构建和 Git 忽略的文件。'
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: More complex applications might create a separate package for utility functions
    of the Streamlit interface itself.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 更复杂的应用程序可能会为 Streamlit 界面的实用函数创建一个单独的包。
- en: '[PRE2]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Just be careful and ensure that you define paths in your project based on their
    relative position to the directory from where you run the script or launch the
    application.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 只需小心并确保在项目中定义路径时，以从运行脚本或启动应用程序的目录的相对位置为准。
- en: First, make sure you have all your dependencies installed in your Python environment.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，确保你在 Python 环境中安装了所有的依赖项。
- en: '[PRE3]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In the case of the TSP app, we might face some dependency conflicts, so I suggest
    you install ortools separately with the `--no-deps` option.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在 TSP 应用程序的情况下，我们可能会遇到一些依赖冲突，因此建议你单独使用 `--no-deps` 选项安装 ortools。
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Using the flat structure proposed, you can run the application from the root
    of the directory by running the following command line:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 使用所提议的扁平结构，你可以通过运行以下命令行从目录的根目录运行应用程序：
- en: '[PRE5]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Or you can build a docker image using the [Dockerfile](https://github.com/bruscalia/tsp-app/blob/main/Dockerfile)
    provided in my code repository using the following command.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你可以使用以下命令，利用我的代码库中提供的 [Dockerfile](https://github.com/bruscalia/tsp-app/blob/main/Dockerfile)
    来构建一个 docker 镜像。
- en: '[PRE6]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: You can replace `tsp_app` by any repository name you would like and `latest`
    by any version.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将 `tsp_app` 替换为你想要的任何仓库名称，将 `latest` 替换为任何版本。
- en: Then you can execute your app by running
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 然后你可以通过运行以下命令来执行你的应用程序
- en: '[PRE7]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Let us understand better how to use the `app.py` file.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更好地理解如何使用 `app.py` 文件。
- en: General structure
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一般结构
- en: 'A general structure of the `app.py` script can be summarized by the following
    pseudocode:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '`app.py` 脚本的一般结构可以通过以下伪代码总结：'
- en: '[PRE8]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Although it might look simple, some points of this pseudocode are crucial:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管看起来很简单，但这个伪代码的一些点是关键的：
- en: 'When pressing a *button*, Streamlit runs the code conditioned to it and resets
    its state. So follow *Streamlit* guidelines andavoid keeping these elements inside
    the conditions of a button:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 当按下一个 *button* 时，Streamlit 运行与之相关的代码并重置其状态。因此，请遵循 *Streamlit* 指南，并避免将这些元素保留在按钮的条件内部：
- en: Displayed items that should persist as the user continues.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示的项目应在用户继续操作时保持不变。
- en: Other widgets which cause the script to rerun when used.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他会导致脚本重新运行的控件。
- en: Processes that neither modify session state nor write to a file/database.*
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不修改会话状态或写入文件/数据库的进程。
- en: And that’s why we will explore as much as possible `session_state` attributes.
    After finishing the optimization, we want to keep exploring the map even if we
    press the download button or change some configuration without pressing the “execute”
    button. Therefore, displaying the solution is conditional only to its existence
    in session_state, not to the “execute” button.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么我们将尽可能多地探索 `session_state` 属性。优化完成后，即使我们按下下载按钮或更改一些配置而不按“执行”按钮，我们也希望继续探索地图。因此，显示解决方案的条件仅限于其在
    session_state 中的存在，而不是“执行”按钮。
- en: 'Furthermore, some operations might be expensive, and it is useful to cache
    their results to avoid wasting time with re-runs. Remember: *Streamlit runs your
    script from top to bottom at every user interaction or code change.*'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，一些操作可能会很昂贵，缓存其结果以避免浪费时间进行重新运行是有用的。记住：*Streamlit 每次用户交互或代码更改时都会从上到下运行你的脚本*。
- en: Basic configuration
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本配置
- en: As previously described, we can define general Streamlit settings in the `config.toml`
    file inside the `.streamlit` folder. In the TSP example, I used it to define colors
    and font. This is kind of a light purple layout, but you can try different colors.
    Just make sure to define them in [Hex color codes](https://htmlcolorcodes.com/).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，我们可以在`.streamlit`文件夹中的`config.toml`文件中定义一般的Streamlit设置。在TSP示例中，我使用它来定义颜色和字体。这是一种浅紫色布局，但你可以尝试不同的颜色。只需确保在[Hex颜色代码](https://htmlcolorcodes.com/)中定义它们。
- en: '[PRE9]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Let us start filling the content of `app.py` with the Python imports. The package
    *os* will be used to manage file paths in our operating system; *BytesIO* will
    be used to emulate an output downloadable file kept in memory instead of disk;
    *json* will be used to serialize our output solution; *List* is just a typehint.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始用Python导入填充`app.py`的内容。将使用*os*包来管理我们操作系统中的文件路径；*BytesIO*将用于模拟一个保存在内存中的可下载输出文件，而不是磁盘；*json*将用于序列化我们的输出解决方案；*List*只是一个类型提示。
- en: To work with dataframes, *pandas* will be used; the solver *Highs* is imported
    from *pyomo* to solve our problem (in case of a MIP); *streamlit* is the base
    of the interface; and *streamlit_folium* will be used to insert a *folium* Map
    into the app. Additional custom functions defined in the internal package are
    also imported.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 处理数据框时，将使用*pandas*；求解器*Highs*从*pyomo*导入以解决我们的任务（如果是MIP）；*streamlit*是界面的基础；*streamlit_folium*将用于将*folium*地图插入到应用程序中。还导入了在内部包中定义的附加自定义函数。
- en: '[PRE10]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The `session_state` attributes will store the *tour* of a current solution,
    the *pandas* dataframe of a given input file, the value of that solution, and
    the route coordinate path (obtained from OpenStreetMap).
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '`session_state`属性将存储当前解决方案的*tour*、给定输入文件的*pandas*数据框、该解决方案的值以及路线坐标路径（从OpenStreetMap获取）。'
- en: '[PRE11]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Some of the utility functions used are:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 使用的一些实用函数包括：
- en: 'driving_distances: To obtain the distance matrix from OpenStreetMap provided
    a dataframe (important to cache results here).'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'driving_distances: 从OpenStreetMap获取距离矩阵，提供一个数据框（在此处缓存结果非常重要）。'
- en: 'upload_callback: Resets `session_state` attributes when a new input file is
    loaded.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'upload_callback: 在加载新输入文件时重置`session_state`属性。'
- en: 'update_path: Given a tour, obtain map coordinates of the correspoinding driving
    path to plot results.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'update_path: 给定一个旅行路线，获取相应的驾驶路径的地图坐标以绘制结果。'
- en: '[PRE12]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: And then let us configure the page layout. In the following script, we include
    an icon and a title for the web page; then we include the same icon on the sidebar
    and write an introduction in markdown style. I suggest you run `streamlit run
    app.py` and check the results so far.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 然后让我们配置页面布局。在以下脚本中，我们为网页包含一个图标和一个标题；然后我们在侧边栏中包含相同的图标，并用Markdown样式写一个介绍。我建议你运行`streamlit
    run app.py`并检查到目前为止的结果。
- en: '[PRE13]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: One of the utility functions I defined reads content from the `README.md` file
    and display this content if the user selects this option. As I want to keep the
    conditional to display the content independent of a possible re-run, I used a
    *selectbox* instead of a *button* to do so.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我定义的一个实用函数读取`README.md`文件中的内容，并在用户选择此选项时显示这些内容。由于我希望将显示内容的条件保持独立于可能的重新运行，因此我使用了*selectbox*而不是*button*来实现。
- en: '[PRE14]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: And then let us define solver parameters and upload an input file…
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 然后让我们定义求解器参数并上传一个输入文件……
- en: Input data and solver parameters
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 输入数据和求解器参数
- en: 'In this example I included two options for input type:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我包括了两种输入类型的选项：
- en: '‘xy’: Uses euclidean distances, and input data must have columns ‘x’ and ‘y’.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '‘xy’: 使用欧几里得距离，输入数据必须具有‘x’和‘y’列。'
- en: '‘lat-long’: Uses road driving distances, and input data must have columns ‘lat’
    and ‘long’.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '‘lat-long’: 使用道路驾驶距离，输入数据必须具有‘lat’和‘long’列。'
- en: 'I also included two solver options:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我还包括了两个求解器选项：
- en: '‘MIP’: Uses models created with *pyomo* and solved with HiGHS.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '‘MIP’: 使用*pyomo*创建的模型，并用HiGHS求解。'
- en: '‘Heuristic’: Uses Google OR-Tools routing algorithms based on constructive
    + local search heuristics with multi-start.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '‘Heuristic’: 使用Google OR-Tools路由算法，基于构造性 + 局部搜索启发式与多次启动。'
- en: 'These parameters as well as a solver time limit will be placed on the app sidebar
    by the following code:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这些参数以及求解时间限制将通过以下代码放置在应用程序侧边栏中：
- en: '[PRE15]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: To upload the file, the `file_uploader` function will be used. Notice that our
    function to reset `session_state` attributes is called on change of input.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 为了上传文件，将使用`file_uploader`函数。注意，我们用于重置`session_state`属性的函数会在输入更改时被调用。
- en: '[PRE16]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: In case the input file is not empty (None), we should read it and prepare the
    distance matrix to be ready for the optimization…
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 如果输入文件不为空（None），我们应该读取它并准备距离矩阵以待优化…
- en: '[PRE17]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Notice that previously `FORMATS` had been defined as a dictionary with functions
    that return a distance matrix given a dataframe and a problem type. These functions
    were defined in the internal module and imported into the app.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，之前`FORMATS`被定义为一个字典，字典中的函数返回一个给定数据框和问题类型的距离矩阵。这些函数在内部模块中定义并导入到应用程序中。
- en: '[PRE18]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Execution
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行
- en: Now the execution relies on pressing the “Execute” button. This is the case
    of a once-per-click process. Based on this condition, the optimizer will be executed,
    and the results will be stored in `session_state` attributes.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在执行依赖于点击“执行”按钮。这是一个每次点击一次的过程。根据这个条件，优化器将被执行，结果将存储在`session_state`属性中。
- en: '[PRE19]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: You can include additional widgets during these function calls. For instance,
    a *spinner* or a *progress bar* might look well during execution.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在这些函数调用中包含额外的小部件。例如，一个*spinner*或*progress bar*可能在执行过程中看起来不错。
- en: And then, outside the execution conditional to the button, we can make our output
    available depending only on its own existence.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在按钮的执行条件之外，我们可以根据其存在性来提供我们的输出。
- en: '[PRE20]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'In this simple example, we are making available a *json* file with the sequence
    of points visited in the tour. If we were supposed to write a more complex output,
    such as an Excel file, *BytesIO* could have been an interesting alternative. Suppose
    you want to create a download button that makes available a dictionary of *pandas*
    dataframes. You could use something like:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个简单的例子中，我们提供了一个包含旅游过程中访问点序列的*json*文件。如果我们需要生成更复杂的输出，如Excel文件，*BytesIO*可能是一个有趣的替代方案。假设你想创建一个下载按钮，使得一个*
    pandas* 数据框字典可用。你可以使用如下内容：
- en: '[PRE21]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Detailed routes with OpenStreetMap
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用OpenStreetMap的详细路线
- en: 'Earlier in the app, we used the function `request_matrix` defined in the internal
    package to obtain the distance matrix of the problem using OpenStreetMap API and
    the *Python* library *requests*. In this function, behind the scenes, we are doing
    a request like:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用程序的早期，我们使用了在内部包中定义的`request_matrix`函数，通过OpenStreetMap API和*Python*库*requests*来获取问题的距离矩阵。在这个函数中，后台执行的请求类似于：
- en: '[PRE22]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'In which:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 其中：
- en: 'points: A string joining pairs of *longitude* and *latitude* separating coordinates
    of the same pair using “,” and different pairs using “;”.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: points：一个字符串，连接*longitude*和*latitude*的对，用“，”分隔同一对的坐标，用“;”分隔不同的对。
- en: 'sources: A list of integers corresponding to sources (from) nodes.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: sources：一个整数列表，对应于来源（from）节点。
- en: 'destinations: Analogous to sources, but with destinations (to) nodes.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: destinations：类似于sources，但包含目的地（to）节点。
- en: 'annotations: ‘distance’, ‘duration’, or ‘duration,distance’.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: annotations：‘distance’，‘duration’或‘duration,distance’。
- en: Now we want to obtain the detailed coordinates of the solution tour to visualize
    results. To do so, we will use a different request. Consider two functions that
    receive as an input a dataframe of elements from the tour already ordered. From
    the outputs retrieved by the API, we will create a list of tuples *latitude*,
    *longitude* and it will be passed to *folium* to create the map.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们想获取解决方案路线的详细坐标以可视化结果。为此，我们将使用不同的请求。考虑两个函数，它们接收作为输入的已排序的旅游元素数据框。通过API获取的输出，我们将创建一个包含*latitude*、*longitude*的元组列表，并将其传递给*folium*以创建地图。
- en: '[PRE23]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Plotting results with Folium
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Folium绘制结果
- en: Now consider we have the list of tuples previously obtained by our function
    `get_coord_path`. We now must use it to create our *folium* map.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 现在考虑我们有通过函数`get_coord_path`获得的元组列表。我们现在必须使用它来创建我们的*folium*地图。
- en: '[PRE24]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: And finally, we can combine this map with the *streamlit_folium* library to
    create an amazing visualization of results.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以将这个地图与*streamlit_folium*库结合起来，创建一个令人惊叹的结果可视化。
- en: '[PRE25]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Using the input file available in my [code repository](https://github.com/bruscalia/tsp-app)
    you can find and visualize the shortest driving route passing in all US continental
    state capitals.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 使用我在[代码仓库](https://github.com/bruscalia/tsp-app)中提供的输入文件，你可以找到并可视化经过所有美国大陆州首府的最短驾驶路线。
- en: '![](../Images/fc16f439b8452dc192af6ad452477f04.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fc16f439b8452dc192af6ad452477f04.png)'
- en: Shortest driving tour between all continental US state capitals. (Image by the
    author).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有大陆美国州首府之间的最短驾驶路线。（作者提供的图像）。
- en: Deploy
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署
- en: So far, our solution runs smoothly on local execution. However, it is probable
    that you would like to share your applications with a wider audience. This is
    where deployment becomes crucial. You can access the deployed TSP app [HERE](https://tsp-app-p7zrnpfj5q-uc.a.run.app).
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们的解决方案在本地执行时运行顺利。然而，你可能希望将应用程序分享给更广泛的受众。这时部署变得至关重要。你可以访问已部署的 TSP 应用程序
    [这里](https://tsp-app-p7zrnpfj5q-uc.a.run.app)。
- en: For this project, I chose to deploy the app using [Google Cloud Run](https://cloud.google.com/run),
    as my idea was to deploy a containerized application (using Docker) and I was
    familiar with the enviroment. A concise yet useful tutorial to do similarly is
    available in this [other story](https://medium.com/google-cloud/deploying-containers-to-cloud-run-in-5mins-b03f1d8d4a64).
    Streamlit also offers a quick guide on this topic “[How to deploy Streamlit using
    Docke](https://docs.streamlit.io/knowledge-base/tutorials/deploy/docker)r”.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个项目，我选择使用 [Google Cloud Run](https://cloud.google.com/run) 部署应用程序，因为我的想法是部署一个容器化应用程序（使用
    Docker），并且我对该环境比较熟悉。类似的简洁而有用的教程可以在这个 [其他故事](https://medium.com/google-cloud/deploying-containers-to-cloud-run-in-5mins-b03f1d8d4a64)
    中找到。Streamlit 还提供了一个关于这个主题的快速指南 “[如何使用 Docker 部署 Streamlit](https://docs.streamlit.io/knowledge-base/tutorials/deploy/docker)”。
- en: For the TSP app, I addressed the dependency conflict between `ortools` and `streamlit`
    within the Dockerfile. Other deployment methods lean heavily on the `requirements.txt`
    file, which might make it harder for this specific case. However, it is worth
    checking these “[3 Easy Ways to Deploy your Streamlit Web App Online](/3-easy-ways-to-deploy-your-streamlit-web-app-online-7c88bb1024b1)”.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 TSP 应用程序，我在 Dockerfile 中解决了 `ortools` 和 `streamlit` 之间的依赖冲突。其他部署方法严重依赖 `requirements.txt`
    文件，这可能使得这种特定情况变得更加困难。然而，值得检查这些“[3 种简单的方法来在线部署你的 Streamlit Web 应用](/3-easy-ways-to-deploy-your-streamlit-web-app-online-7c88bb1024b1)”。
- en: I wish you all the best on your journey deploying your own Operations Research
    solutions!
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 祝你在部署你自己的运筹学解决方案的旅程中一切顺利！
- en: Further reading
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: Unlike my previous Medium stories, this one emphasizes optimization and operations
    research as components in software development, exploring how they can be integrated
    with other tools to create straightforward yet impactful applications. For those
    eager to go deeper into the mechanics of numerical optimization, I recommend exploring
    my comprehensive list about it, where you can find several classical problems,
    modeling strategies, use of solvers, and theoretical aspects.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 与我之前的 Medium 故事不同，这篇文章强调了优化和运筹学作为软件开发中的组成部分，探讨了它们如何与其他工具集成，以创建简单而有影响力的应用程序。对于那些渴望深入了解数值优化机制的人，我推荐探索我关于它的综合列表，你可以在其中找到几个经典问题、建模策略、求解器的使用和理论方面的内容。
- en: '![Bruno Scalia C. F. Leite](../Images/0c7396e41d4b598be2349eaea982c984.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![布鲁诺·斯卡利亚 C. F. 莱特](../Images/0c7396e41d4b598be2349eaea982c984.png)'
- en: '[Bruno Scalia C. F. Leite](https://medium.com/@bruscalia12?source=post_page-----17212553861d--------------------------------)'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '[布鲁诺·斯卡利亚 C. F. 莱特](https://medium.com/@bruscalia12?source=post_page-----17212553861d--------------------------------)'
- en: Tales of the Optimization Age
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 优化时代的故事
- en: '[View list](https://medium.com/@bruscalia12/list/tales-of-the-optimization-age-c15faf64a6ca?source=post_page-----17212553861d--------------------------------)15
    stories![](../Images/848ca03a7d7366b8a040f720f5d51f5c.png)![](../Images/b79fd62ce301f6295199d983f7633588.png)![](../Images/a6e8cbe0e088f4e7b1edcf27c524b072.png)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '[查看列表](https://medium.com/@bruscalia12/list/tales-of-the-optimization-age-c15faf64a6ca?source=post_page-----17212553861d--------------------------------)15
    个故事![](../Images/848ca03a7d7366b8a040f720f5d51f5c.png)![](../Images/b79fd62ce301f6295199d983f7633588.png)![](../Images/a6e8cbe0e088f4e7b1edcf27c524b072.png)'
- en: Conclusions
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In this story, the convergence of optimization and software development was
    explored using the simple yet effective web development framework *Streamlit*
    and the open-source routing API *OpenStreetMap*. By combining the core concepts
    of operations research with the ease of use of a web application, it is possible
    to create amazing tools to guide decision-making processes.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个故事中，探索了优化与软件开发的结合，使用了简单而有效的网页开发框架*Streamlit*和开源路由 API *OpenStreetMap*。通过将运筹学的核心概念与网页应用的易用性相结合，可以创建出引导决策过程的惊人工具。
- en: Reference
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: 'Rego, C., Gamboa, D., Glover, F., & Osterman, C., 2011\. Traveling salesman
    problem heuristics: Leading methods, implementations and latest advances. *European
    Journal of Operational Research*, *211*(3), 427–441.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: Rego, C., Gamboa, D., Glover, F., & Osterman, C., 2011\. 旅行商问题启发式算法：主要方法、实现和最新进展。*欧洲运筹学杂志*，*211*(3)，427–441。
