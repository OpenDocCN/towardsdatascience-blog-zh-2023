- en: 'Coupon Collector’s Problem: A Probability Masterpiece'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 优惠券收集者问题：一个概率杰作
- en: 原文：[https://towardsdatascience.com/coupon-collectors-problem-a-probability-masterpiece-1d5aed4af439?source=collection_archive---------0-----------------------#2023-03-04](https://towardsdatascience.com/coupon-collectors-problem-a-probability-masterpiece-1d5aed4af439?source=collection_archive---------0-----------------------#2023-03-04)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/coupon-collectors-problem-a-probability-masterpiece-1d5aed4af439?source=collection_archive---------0-----------------------#2023-03-04](https://towardsdatascience.com/coupon-collectors-problem-a-probability-masterpiece-1d5aed4af439?source=collection_archive---------0-----------------------#2023-03-04)
- en: Unpacking the intricacies of a classic probability puzzle
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 揭开经典概率难题的复杂性
- en: '[](https://namanagr03.medium.com/?source=post_page-----1d5aed4af439--------------------------------)[![Naman
    Agrawal](../Images/6bb885397aec17f5029cfac7f01edad9.png)](https://namanagr03.medium.com/?source=post_page-----1d5aed4af439--------------------------------)[](https://towardsdatascience.com/?source=post_page-----1d5aed4af439--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----1d5aed4af439--------------------------------)
    [Naman Agrawal](https://namanagr03.medium.com/?source=post_page-----1d5aed4af439--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://namanagr03.medium.com/?source=post_page-----1d5aed4af439--------------------------------)[![Naman
    Agrawal](../Images/6bb885397aec17f5029cfac7f01edad9.png)](https://namanagr03.medium.com/?source=post_page-----1d5aed4af439--------------------------------)[](https://towardsdatascience.com/?source=post_page-----1d5aed4af439--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----1d5aed4af439--------------------------------)
    [Naman Agrawal](https://namanagr03.medium.com/?source=post_page-----1d5aed4af439--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5bbb90aa727&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcoupon-collectors-problem-a-probability-masterpiece-1d5aed4af439&user=Naman+Agrawal&userId=5bbb90aa727&source=post_page-5bbb90aa727----1d5aed4af439---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----1d5aed4af439--------------------------------)
    ·14 min read·Mar 4, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1d5aed4af439&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcoupon-collectors-problem-a-probability-masterpiece-1d5aed4af439&user=Naman+Agrawal&userId=5bbb90aa727&source=-----1d5aed4af439---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5bbb90aa727&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcoupon-collectors-problem-a-probability-masterpiece-1d5aed4af439&user=Naman+Agrawal&userId=5bbb90aa727&source=post_page-5bbb90aa727----1d5aed4af439---------------------post_header-----------)
    发布在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----1d5aed4af439--------------------------------)
    · 14分钟阅读 · 2023年3月4日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1d5aed4af439&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcoupon-collectors-problem-a-probability-masterpiece-1d5aed4af439&user=Naman+Agrawal&userId=5bbb90aa727&source=-----1d5aed4af439---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1d5aed4af439&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcoupon-collectors-problem-a-probability-masterpiece-1d5aed4af439&source=-----1d5aed4af439---------------------bookmark_footer-----------)![](../Images/4840aa084a7273d88ae0ef0d2ac9ec94.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1d5aed4af439&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcoupon-collectors-problem-a-probability-masterpiece-1d5aed4af439&source=-----1d5aed4af439---------------------bookmark_footer-----------)![](../Images/4840aa084a7273d88ae0ef0d2ac9ec94.png)'
- en: Photo by [Tamanna Rumee](https://unsplash.com/@tamanna_rumee?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/9ROY8fXmTto?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Tamanna Rumee](https://unsplash.com/@tamanna_rumee?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    提供，来源于 [Unsplash](https://unsplash.com/photos/9ROY8fXmTto?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
- en: 'The world of mathematics is full of fascinating puzzles and paradoxes that
    challenge our understanding of the world around us. The coupon collector problem
    is one such puzzle, an age-old problem that has intrigued mathematicians and statisticians
    for generations. The coupon collector problem is as follows:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 数学的世界充满了迷人的难题和悖论，它们挑战我们对周围世界的理解。优惠券收集者问题就是这样一个难题，这个古老的问题让数学家和统计学家们几代人以来都为之着迷。优惠券收集者问题如下：
- en: Consider a contest involving collecting n unique coupons. It is given that every
    cereal box, contains one coupon, with every coupon being equally likely to be
    present in a given box. How many boxes do you need to open before you have at
    least one coupon of each type? This seemingly simple question has a surprisingly
    complex answer that has applications in fields ranging from computer science to
    finance. In this article, we will delve into the Coupon Collector’s Problem, explore
    its framework, and discuss its many fascinating implications.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑一个涉及收集 n 种独特优惠券的竞赛。每个谷物盒子里都有一张优惠券，每张优惠券在给定盒子中出现的概率相同。在你打开多少个盒子之前，你能确保每种类型的优惠券至少有一张？这个看似简单的问题有一个复杂的答案，并且在从计算机科学到金融等领域中都有应用。在本文中，我们将**深入探讨**优惠券收集者问题，探索其框架，并讨论其许多迷人的含义。
- en: 'Digression: Geometric Random Variables'
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 离题：几何随机变量
- en: 'Before solving this problem, let’s revisit some of the properties of the geometric
    random variable. This will provide an efficient mechanism to compute various parameters
    describing the architecture of the solution to the problem. Definition: A random
    variable X is said to follow a geometric distribution with parameter p if its
    probability mass function is given as follows:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在解决这个问题之前，让我们重新回顾一下几何随机变量的一些性质。这将提供一个有效的机制来计算描述问题解决方案架构的各种参数。定义：如果随机变量 X 的概率质量函数如下所示，则称
    X 遵循参数为 p 的几何分布：
- en: '![](../Images/0f1f94a5c238f353c131cde80a761b24.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0f1f94a5c238f353c131cde80a761b24.png)'
- en: 'Intuitively, a geometric random variable gives the distribution of the number
    of independent trials required to achieve success, under the assumption that the
    probability of success remains constant i.e., p. So, finding P(X = k) is equivalent
    to finding the probability that k trials are required to achieve a success i.e.,
    there are k — 1 failures before the first success. The required probability is
    thus:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 直观上，几何随机变量表示为获得成功所需的独立试验次数的分布，假设成功的概率保持不变，即 p。因此，找到 P(X = k) 等同于找到需要 k 次试验才能获得成功的概率，即在第一次成功之前有
    k — 1 次失败。因此，所需的概率为：
- en: '![](../Images/1ec5afde8f65d7f376d95a3e699f5ba5.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1ec5afde8f65d7f376d95a3e699f5ba5.png)'
- en: 'Geometric random variables have many applications in real-world problems, such
    as modeling the number of attempts needed to win a game or the number of calls
    required to reach a customer at a call center. The Coupon Collectors problem can
    also be modeled effectively using geometric random variables (specifically a sum
    of independent, nonidentically distributed geometric variables, which we’ll be
    seeing later). A geometric random variable has the following properties:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 几何随机变量在现实世界问题中有许多应用，例如建模赢得游戏所需的尝试次数或在呼叫中心联系客户所需的电话次数。优惠券收集者问题也可以有效地使用几何随机变量建模（具体来说，是一组独立的、不完全相同分布的几何变量的总和，我们稍后会看到）。几何随机变量具有以下性质：
- en: '![](../Images/d44463ab16e714edc050d614b05a8ea3.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d44463ab16e714edc050d614b05a8ea3.png)'
- en: '**Optional Proof:** First, we will determine the expected value of a geometric
    random variable. Recall that the expected value of a random variable is like a
    weighted average of its values, with the weights given by its probability mass
    function. It can be shown that the expected value of a geometric random variable
    is the reciprocal of its parameter p i.e., the probability of success. The proof
    is as follows:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**可选证明：** 首先，我们将确定几何随机变量的期望值。回顾一下，随机变量的期望值类似于其值的加权平均值，加权由其概率质量函数给出。可以证明，几何随机变量的期望值是其参数
    p 的倒数，即成功的概率。证明如下：'
- en: '![](../Images/f716135247b66e3424415dc0e32deb08.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f716135247b66e3424415dc0e32deb08.png)'
- en: To evaluate the above expression, we use a small trick. It is known that p is
    a continuous parameter with values bounded between 0 and 1 (as it’s a measure
    of probability). Finding the sum of an infinite series can become very easy if
    we can model it as a geometric series with a constant common ratio r. Then,
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要评估上述表达式，我们使用了一个小技巧。已知 p 是一个连续参数，其值在 0 和 1 之间（因为它是概率的度量）。如果我们可以将其建模为一个常数公比 r
    的几何级数，那么求和一个无限级数就会变得非常简单。然后，
- en: '![](../Images/0f81d09676c448555703c52706226a0a.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0f81d09676c448555703c52706226a0a.png)'
- en: 'We need to find a way to convert the given infinite series sum into a geometric
    series that can be easily evaluated using the above expression. To do so, we recall
    that the derivative of x^i is i*x^(i−1), something very similar to the form above,
    provided we replace x with 1 — p. Thus, we have:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要找到一种方法，将给定的无限级数和转换为可以使用上述表达式轻松评估的几何级数。为此，我们回顾一下 x^i 的导数是 i*x^(i−1)，这与上述形式非常相似，只需将
    x 替换为 1 — p。因此，我们得到：
- en: '![](../Images/4c3630fe574ea5e5d9bc8b10609fe690.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4c3630fe574ea5e5d9bc8b10609fe690.png)'
- en: We can take the derivative outside the sum as the sum of derivatives is equal
    to the derivative of the sum. Thus,
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将导数移出求和，因为导数的和等于和的导数。因此，
- en: '![](../Images/737ea0046d554257807e5f6d0279d34e.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/737ea0046d554257807e5f6d0279d34e.png)'
- en: 'We may now use the infinite geometric series sum to obtain:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以使用无限几何级数和来得到：
- en: '![](../Images/dac0eb15cbd02bce68992a0509b300ed.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dac0eb15cbd02bce68992a0509b300ed.png)'
- en: The above result is standard in most probability textbooks. For this article,
    understanding how to use the above result is more important than understanding
    how the result is derived. Thus, we’ve shown that the expected value of a geometric
    random variable is the reciprocal of its parameter p. Now, we proceed to find
    the variance of the geometric random variable. The math is slightly complicated,
    you may choose to skip over it if you’re simply interested in solving the given
    problem.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 上述结果在大多数概率教材中是标准的。对于本文而言，理解如何使用上述结果比理解结果的推导过程更为重要。因此，我们已经证明几何随机变量的期望值是其参数 p
    的倒数。现在，我们继续找出几何随机变量的方差。数学稍微复杂，如果你只是对解决给定问题感兴趣，可以选择跳过这一部分。
- en: 'Calculating the variance of the geometric distribution: We use the following
    formula for variance:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 计算几何分布的方差：我们使用以下方差公式：
- en: '![](../Images/ea89193768ed2c7ed596ac34d538bdc5.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ea89193768ed2c7ed596ac34d538bdc5.png)'
- en: 'We now proceed to calculate E(X(X − 1)):'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在继续计算 E(X(X − 1))：
- en: '![](../Images/3dc8773e60158fbf95961937fd3cfac9.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3dc8773e60158fbf95961937fd3cfac9.png)'
- en: 'Just as before, we observe that the second derivative of x^i with respect to
    x is i*(i − 1)*x^(i−2) Thus:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 就像之前一样，我们观察到 x^i 对 x 的二阶导数是 i*(i − 1)*x^(i−2) 因此：
- en: '![](../Images/1ebd8d1010b05af9f161b68666cdfbcd.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1ebd8d1010b05af9f161b68666cdfbcd.png)'
- en: Thus,
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，
- en: '![](../Images/149d80243ed33a97ac5280d49674bfe5.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/149d80243ed33a97ac5280d49674bfe5.png)'
- en: Therefore, we have obtained the variance and expectation of the geometric distribution.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们已经得到了几何分布的方差和期望。
- en: 'Back to the Problem: Modeling'
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 回到问题：建模
- en: To solve the problem at hand, we need to first model it, which involves identifying
    its parameters, assumptions, and relevant variables.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 要解决当前问题，我们首先需要对其进行建模，这包括识别其参数、假设和相关变量。
- en: 'PARAMETERS: The problem provides us with one parameter, which is n, the total
    number of unique coupons.'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 参数：问题给出了一个参数，即 n，总独特优惠券的数量。
- en: 'ASSUMPTIONS: We assume that each coupon has an equal probability of being present
    in a given box. Another subtle assumption is that we have infinite boxes to open
    i.e., there is no restriction on how many boxes we can open.'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设：我们假设每个优惠券在给定盒子中出现的概率相等。另一个微妙的假设是我们有无限的盒子可以打开，即我们没有打开盒子的数量限制。
- en: 'VARIABLES: To find the solution to the problem, we need to determine the number
    of boxes that must be opened before we have at least one coupon of each type.
    This requires us to define appropriate variables that encapsulate the elements
    necessary for the solution. The nature and properties of these variables depend
    upon the field from which the problem derives its essence. Since the Coupon Collector’s
    Problem is rooted in the fields of statistics and probability, the nature of the
    variables will be stochastic or random. Thus, we define the random variable T
    to refer to the minimum number of boxes that need to be opened to collect all
    n unique coupons. We use a random variable for this problem because it is not
    guaranteed that T will take a certain value. In practice, T could be any value
    from n to infinity. The only questions we can answer are:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 变量：为了找到问题的解决方案，我们需要确定在获得每种类型的至少一个优惠券之前必须打开的盒子数量。这要求我们定义适当的变量，以封装解决方案所需的元素。这些变量的性质和属性取决于问题所源自的领域。由于优惠券收集者问题根植于统计学和概率论领域，因此这些变量的性质将是随机的。因此，我们定义随机变量T，表示收集所有n种独特优惠券所需打开的最小盒子数量。我们使用随机变量来解决这个问题，因为T的值不一定是确定的。实际上，T的值可以是从n到无限大的任何值。我们能回答的唯一问题是：
- en: • What is the expected (or average) value of T?
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: • T的期望（或平均）值是多少？
- en: • What is the variance (or average spread in the value) of T?
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: • T的方差（或值的平均分布）是多少？
- en: • What is the probability that more than c boxes need to be opened? In other
    words, what is the probability that T > c?
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: • 打开超过c个盒子的概率是多少？换句话说，T > c的概率是多少？
- en: After modeling the various elements of the problem, we have a clear understanding
    of its settings, scope, and expectation. We now proceed to work on its solution.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在对问题的各个元素进行建模之后，我们对其设置、范围和期望有了清晰的了解。现在我们继续解决方案的工作。
- en: Coming up with a Solution
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提出解决方案
- en: Let’s start by analyzing the distribution of T. However, one will soon observe
    that the distribution of T is rather complex, and cannot be ascribed to any of
    the well-known probability distributions. This is because even though, by assumption,
    each coupon has an equal probability of being present in a given box, the probability
    of finding a new coupon decays as we collect more and more coupons. Consider the
    scenario where we are required to collect 100 unique coupons. When we open the
    first box, we are guaranteed to find a new coupon since we don’t have any coupons
    yet i.e.,
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先分析T的分布。然而，很快会发现T的分布相当复杂，不能归入任何已知的概率分布。这是因为即使假设每个优惠券在给定盒子中出现的概率相等，但随着我们收集更多优惠券，找到新优惠券的概率会逐渐减少。考虑一个场景，我们需要收集100个独特的优惠券。当我们打开第一个盒子时，由于我们还没有任何优惠券，因此可以保证找到一个新优惠券，即：
- en: '![](../Images/f3135868275c5f8028f63ac55607c6af.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f3135868275c5f8028f63ac55607c6af.png)'
- en: However, when we open the second box, the probability of finding a new coupon
    is slightly reduced as there is a chance (1/100) that we might find the same coupon
    that we found in the first box.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当我们打开第二个盒子时，找到新优惠券的概率会略微降低，因为有（1/100）的机会我们可能会找到在第一个盒子中已经找到的相同优惠券。
- en: '![](../Images/08a959c1729985e006457b146645e3f5.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/08a959c1729985e006457b146645e3f5.png)'
- en: 'As we continue opening more boxes, the probability of finding a new coupon
    keeps decreasing (not strictly) since there are fewer unique coupons left to collect.
    Thus, the presence of non-constant probability values makes it rather difficult
    to assign a common probability distribution to T. Thus, we resort to the method
    of divide and conquer, a very popular strategy to solve probability problems.
    This involves breaking down a problem into smaller chunks of reduced complexity
    and approaching each chunk independently. Since T measures the time or the number
    of boxes that need to be opened to collect n unique coupons, we break it down
    by proposing Tᵢ to measure the time or the number of boxes that need to be opened
    to collect the ith coupon. We can express T as a sum of all Ti :'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们继续打开更多盒子，找到新优惠券的概率持续减少（不是严格减少），因为剩下的独特优惠券越来越少。因此，不恒定的概率值使得将T分配到一个共同的概率分布变得相当困难。因此，我们采用了分治法，这是一种非常流行的解决概率问题的策略。这涉及将问题分解为复杂性较小的更小部分，并独立处理每个部分。由于T测量了收集n个独特优惠券所需的时间或盒子数量，我们通过提出Tᵢ来测量收集第i个优惠券所需的时间或盒子数量，从而将其分解。我们可以将T表示为所有Ti的总和：
- en: '![](../Images/8f228facd8eb9c258037252266a179b3.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8f228facd8eb9c258037252266a179b3.png)'
- en: What’s the benefit? Well, the distribution of Tᵢ (unlike the distribution of
    T) is parameterized by a constant probability value. Let’s understand what this
    means.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这有什么好处？好吧，Tᵢ的分布（与T的分布不同）是由一个常数概率值参数化的。让我们理解这意味着什么。
- en: 'We can think of each box opening as a trial in a sequence of Bernoulli trials,
    where success means finding a new, previously unseen coupon. (Recall that Bernoulli
    trials are a type of random experiment with only two possible outcomes: success
    and failure. For example, flipping a coin is a Bernoulli trial, where success
    might be defined as getting heads, and 3 4 failure as getting tails.) At the start,
    we have not collected any coupons, so the probability of success on the first
    trial is n/n, or simply 1.0:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将每次开盒子视为一系列伯努利试验中的一次试验，其中成功意味着找到一个新的、以前未见过的优惠券。（回忆一下，伯努利试验是一种随机实验，只有两种可能的结果：成功和失败。例如，抛硬币就是一个伯努利试验，其中成功可能定义为正面，失败则定义为反面。）在开始时，我们还没有收集任何优惠券，因此第一次试验的成功概率是n/n，即1.0：
- en: '![](../Images/3117f71ce474e6e7d29ce28cc9c6d58d.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3117f71ce474e6e7d29ce28cc9c6d58d.png)'
- en: On the second trial, there are n-1 unique coupons left to collect, out of a
    total of n coupons, so the probability of success is (n-1)/n. This is because
    there is only one coupon that would result in failure (i.e., a repeat of the coupon
    collected in the first trial), and n-1 coupons that would result in success (i.e.,
    a new coupon that has not yet been collected).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二次尝试时，还剩下n-1个独特优惠券要收集，总共有n个优惠券，因此成功的概率是(n-1)/n。这是因为只有一个优惠券会导致失败（即，重复了第一次尝试中收集到的优惠券），而n-1个优惠券会导致成功（即，一个还未被收集的新优惠券）。
- en: '![](../Images/420d691a430b4281642a6cd623969a5d.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/420d691a430b4281642a6cd623969a5d.png)'
- en: On the third trial, there are n-2 unique coupons left to collect, out of a total
    of n coupons, so the probability of success is (n-2)/n.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在第三次尝试时，还剩下n-2个独特优惠券要收集，总共有n个优惠券，因此成功的概率是(n-2)/n。
- en: '![](../Images/7c436df32680a3bee9f1091fb9e3fa48.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7c436df32680a3bee9f1091fb9e3fa48.png)'
- en: 'Similarly, on the fourth trial, the probability of success is (n-3)/n, and
    so on. We can extrapolate the formula to find the probability of collecting the
    ith unique coupon (i.e., the probability of finding a unique coupon on opening
    a box given that we have already collected i — 1 unique coupons):'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 同样地，在第四次尝试时，成功的概率是(n-3)/n，依此类推。我们可以推导出公式，以找出收集第i个独特优惠券的概率（即，已经收集了i-1个独特优惠券的情况下，打开一个盒子找到一个新优惠券的概率）：
- en: '![](../Images/7156f7a841186b754a6486f08f67e975.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7156f7a841186b754a6486f08f67e975.png)'
- en: Recall that Tᵢ measures the number of independent trials to collect the ith
    unique coupon. This sounds familiar; yes it’s the geometric random variable! Each
    of these trials corresponds to a Bernoulli trial where success means finding a
    new, previously unseen coupon given that i — 1 unique coupons have been collected.
    Thus,
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 回忆一下，Tᵢ测量了收集第i个独特优惠券所需的独立试验次数。这听起来很熟悉；是的，它就是几何随机变量！这些试验中的每一个都对应于一个伯努利试验，其中成功意味着在收集了i-1个独特优惠券的情况下，找到一个新的、以前未见过的优惠券。因此，
- en: '![](../Images/dcdcb97a5565691bb020c437d69334ce.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dcdcb97a5565691bb020c437d69334ce.png)'
- en: 'Therefore, we can see T as a sum of non-identical geometric distributions:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们可以将T视为非同质几何分布的总和：
- en: '![](../Images/ea8294c95751dc812fc5522d1c81c1ee.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ea8294c95751dc812fc5522d1c81c1ee.png)'
- en: We can now proceed to answer the questions proposed earlier.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以继续回答之前提出的问题。
- en: What is the expected value of T?
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: T的期望值是多少？
- en: 'To find the expected value of T, we use the property that the expected value
    of a sum of random variables is the sum of their expected values:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 为了找出T的期望值，我们使用随机变量之和的期望值等于其期望值之和的性质：
- en: '![](../Images/b0ff900024c672e547898458b29d8e59.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b0ff900024c672e547898458b29d8e59.png)'
- en: 'Since Tᵢ is a geometric random variable:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Tᵢ是一个几何随机变量：
- en: '![](../Images/373712e95663827d05feaed0426a5e99.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/373712e95663827d05feaed0426a5e99.png)'
- en: Thus,
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，
- en: '![](../Images/08c2dbae56219436bc98f0227c5a963f.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/08c2dbae56219436bc98f0227c5a963f.png)'
- en: 'where H(n) refers to the nth harmonic number:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 其中H(n)指的是第n个调和数：
- en: '![](../Images/51224b3d2742bb002d6af6b081051ef5.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/51224b3d2742bb002d6af6b081051ef5.png)'
- en: 'It can be asymptotically approximated (for large values of n) as:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 对于大值的n，它可以渐近地被近似为：
- en: '![](../Images/ccefbbdc6acf0a294a2895eb0984df30.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ccefbbdc6acf0a294a2895eb0984df30.png)'
- en: 'where γ ≈ 0.577215665 is the Euler–Mascheroni constant. We can think of it
    as an estimate of the average number of boxes one would need to open to collect
    all n coupons if one repeated the coupon collection process many times. For example,
    suppose you wanted to collect all 100 unique coupons from a set of promotional
    cereal boxes, and you plan to buy one box at a time until you have collected them
    all. The formula n * H(n) would estimate the average number of boxes you would
    need to buy to complete your collection, assuming that each box has an equal chance
    of containing any of the 100 coupons. The following python code allows us to calculate
    this value:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 γ ≈ 0.577215665 是欧拉-马歇罗尼常数。我们可以把它看作是一个估计值，即在多次重复收集优惠券的过程中，收集所有 n 张优惠券所需打开的盒子的平均数量。例如，假设你想从一组促销谷物盒中收集所有
    100 种独特的优惠券，并且你计划每次买一个盒子，直到你收集齐全。公式 n * H(n) 将估计为完成收集所需购买的平均盒子数量，假设每个盒子有同等的机会包含任意一种
    100 种优惠券。以下 python 代码可以帮助我们计算这个值：
- en: '[PRE0]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Of course, in reality, the actual number of boxes you would need to buy to collect
    all 100 coupons would vary from trial to trial, depending on the specific coupons
    you get in each box. However, the formula n * H(n) gives us an idea of what to
    expect on average, and it can be a useful tool for planning and budgeting.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，实际上，为了收集所有 100 种优惠券，你所需购买的实际盒子数量会因试验而异，具体取决于每个盒子中获取的特定优惠券。然而，公式 n * H(n)
    给了我们一个对平均情况的预期，这可以成为规划和预算的有用工具。
- en: For larger values of n, the formula predicts that more boxes will need to be
    opened to collect all n unique coupons. This is because the probability of finding
    a new coupon decreases as the number of coupons already collected increases. The
    harmonic number H(n) grows logarithmically with n, so the expected number of boxes
    grows roughly proportional to n ln n. This implies that collecting a large number
    of unique coupons can be a challenging and time-consuming task, which matches
    our intuition.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 对于较大的 n 值，该公式预测需要打开更多的盒子以收集所有 n 种独特的优惠券。这是因为找到新优惠券的概率随着已收集优惠券数量的增加而下降。调和数 H(n)
    随着 n 对数增长，因此预期的盒子数量大致与 n ln n 成正比。这意味着收集大量独特的优惠券可能是一项具有挑战性且耗时的任务，这与我们的直觉相符。
- en: '![](../Images/3133add6709c42ca2c2fb084d987b18c.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3133add6709c42ca2c2fb084d987b18c.png)'
- en: Line plot of E(T) against n [Image by Author]
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: E(T) 关于 n 的线性图 [作者图片]
- en: What is the variance of T?
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: T 的方差是多少？
- en: Next, we try to calculate the variance of T to have an idea of how the number
    of boxes we need to collect varies from trial to trial. Since all trials are independent
    (by the assumption that each coupon has an equal probability of being present
    in a given box), the random variables Tᵢ, Tⱼ; i != j are also independent. Thus,
    the variance of their sum is the sum of their variances. Thus,
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们尝试计算 T 的方差，以便了解收集所需的盒子数量在不同试验中的变化情况。由于所有试验都是独立的（假设每种优惠券在特定盒子中出现的概率相等），随机变量
    Tᵢ, Tⱼ; i != j 也是独立的。因此，其和的方差是其方差之和。因此，
- en: '![](../Images/2c471c964292b8239eb12c9bde21a3f8.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2c471c964292b8239eb12c9bde21a3f8.png)'
- en: 'Since Tᵢ is a geometric random variable:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Tᵢ 是一个几何随机变量：
- en: '![](../Images/0f28082bfa6209bff8ee9c3a75ef2835.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0f28082bfa6209bff8ee9c3a75ef2835.png)'
- en: Thus,
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，
- en: '![](../Images/f67f84252311653c463321620862ccc6.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f67f84252311653c463321620862ccc6.png)'
- en: 'Where we have used Euler’s approach to the Basel problem:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里我们使用了欧拉对巴塞尔问题的方法：
- en: '![](../Images/edbe9eb72fbf20961f650fb899dcc5a1.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/edbe9eb72fbf20961f650fb899dcc5a1.png)'
- en: For example, suppose you wanted to collect all 100 unique coupons, and you repeated
    the process many times. The variance would give you an estimate of how much the
    number of boxes required varies from trial to trial. If the variance is small,
    then you can expect to need a similar number of boxes in each trial. If the variance
    is large, then the number of boxes required could vary widely from trial to trial.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设你想收集所有 100 种独特的优惠券，并且你多次重复这个过程。方差将给你一个估计，说明所需的盒子数量在不同试验中变化的程度。如果方差很小，则可以期待每次试验所需的盒子数量相似。如果方差很大，则所需的盒子数量可能在不同试验中变化很大。
- en: '[PRE1]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The variance is proportional to n^2, so for larger values of n, the variance
    grows much faster than the expected number of boxes required. This implies that
    as n gets larger, the number of boxes required to collect all n coupons becomes
    more and more unpredictable, and it becomes increasingly difficult to estimate
    how many boxes you will need to buy on average.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 方差与 n^2 成正比，因此对于较大的 n 值，方差增长的速度远快于所需的期望盒子数量。这意味着随着 n 的增大，收集所有 n 个优惠券所需的盒子数量变得越来越不可预测，估计你需要购买多少盒子会变得越来越困难。
- en: '![](../Images/a68517ffefbafedba312d3e25aa7f857.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a68517ffefbafedba312d3e25aa7f857.png)'
- en: 'Line plot of Var(T) against n: Comparison of orders of growth of E(T) and Var(T)
    [Image by Author]'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Var(T) 与 n 的线图：E(T) 和 Var(T) 的增长订单比较 [作者图片]
- en: What is the probability that more than c boxes need to be opened?
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 打开超过 c 个盒子的概率是多少？
- en: Finally, we try to calculate (or at least bound) the probability that the number
    of boxes that need to be opened to collect all n unique coupons exceeds (or equals)
    c i.e., the probability that T takes a value more than or equal to c. Since the
    distribution of T is rather complex, it’s difficult to find the exact value of
    such a probability. However, statistics provides us with many useful inequalities
    that can help us bound the value of the probability. Specifically, we shall use
    the Markov inequality to upper bound the probability that T takes a value more
    than or equal to c.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们尝试计算（或至少界定）需要打开的盒子数量超过（或等于）c 的概率，即 T 取值大于或等于 c 的概率。由于 T 的分布相当复杂，找到这种概率的确切值非常困难。然而，统计学为我们提供了许多有用的不等式，帮助我们界定概率的值。具体来说，我们将使用马尔可夫不等式来上界
    T 取值大于或等于 c 的概率。
- en: 'Markov’s inequality is a powerful tool in probability theory that allows us
    to make general statements about the probability of a random variable exceeding
    a certain value. The inequality is named after the Russian mathematician Andrey
    Markov, who first introduced it in the late 19th century. The Markov inequality
    states that for any non-negative random variable X and any positive number a,
    the probability that X is greater than or equal to a is less than or equal to
    the expected value of X divided by a. In mathematical notation, this can be written
    as:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 马尔可夫不等式是概率理论中的一种强大工具，它允许我们对随机变量超出某一值的概率做出一般性陈述。这个不等式以俄罗斯数学家安德烈·马尔可夫的名字命名，他在19世纪末首次引入了它。马尔可夫不等式表示，对于任何非负随机变量
    X 和任何正数 a，X 大于或等于 a 的概率小于或等于 X 的期望值除以 a。在数学符号中，这可以写作：
- en: '![](../Images/cf1c397af764f14142e33139bbb9e4e4.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cf1c397af764f14142e33139bbb9e4e4.png)'
- en: Intuitively, the Markov inequality says that if we want to know how likely it
    is for a random variable to take on a value greater than or equal to a, we can
    bound this probability by dividing the expected value of the random variable by
    a. This bound is often a very loose one, but it can be useful in situations where
    we have limited information about the distribution of the random variable.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 直观上，马尔可夫不等式表示，如果我们想知道随机变量取值大于或等于 a 的可能性，我们可以通过将随机变量的期望值除以 a 来界定这个概率。这个界限通常比较松，但在我们对随机变量的分布信息有限的情况下，它可能会很有用。
- en: 'Since T is non-negative (the number of boxes cannot be negative), we can use
    the Markov inequality:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 T 是非负的（盒子数量不能为负），我们可以使用马尔可夫不等式：
- en: '![](../Images/738ed285af0857884605b71848caa044.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/738ed285af0857884605b71848caa044.png)'
- en: 'The above approximation can be useful for estimating the probability when the
    value of n is very large. For example, suppose we want to estimate the probability
    that we need to open more than 1000 boxes to collect all 100 unique coupons. We
    can use the inequality to obtain an upper bound on this probability as:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 上述近似对于当 n 的值非常大时估计概率可能会很有用。例如，假设我们想估计需要打开超过 1000 个盒子才能收集到所有 100 个独特的优惠券的概率。我们可以利用不等式来获得这个概率的上界，如下：
- en: '[PRE2]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Therefore, if we know the values of n and c, we can use this bound to estimate
    the probability that we need to open more than c boxes to collect all n unique
    coupons.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果我们知道 n 和 c 的值，我们可以利用这个界限来估计我们需要打开超过 c 个盒子才能收集到所有 n 个独特的优惠券的概率。
- en: Conclusion
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In conclusion, the coupon collector’s problem is a classic problem in probability
    theory that has a wide range of practical applications. The problem involves collecting
    a set of N unique coupons, where each coupon is equally likely to be found in
    a given box. We have discussed various aspects of this problem, including the
    expected value and variance of the time it takes to collect all n unique coupons
    as well as the probability that more than a given number of boxes are needed to
    collect all n unique coupons.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，优惠券收集者问题是概率理论中的经典问题，具有广泛的实际应用。这个问题涉及收集一组N个独特的优惠券，其中每个优惠券在给定盒子中被找到的概率是相等的。我们讨论了这个问题的各种方面，包括收集所有n个独特优惠券所需时间的期望值和方差，以及收集所有n个独特优惠券所需的盒子数量超过给定值的概率。
- en: The coupon collector’s problem is a fascinating problem with many interesting
    properties and applications. It is an important tool for understanding probability
    and statistics, and its solutions have a wide range of real-world applications,
    from designing surveys and collecting data to analyzing customer behavior and
    predicting market trends. By understanding the coupon collector’s problem, we
    can gain valuable insights into the behavior of complex systems and make more
    informed decisions in a variety of contexts.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 优惠券收集者问题是一个引人入胜的问题，具有许多有趣的特性和应用。它是理解概率和统计的重要工具，其解决方案在许多实际应用中具有广泛的用途，从设计调查和收集数据到分析客户行为和预测市场趋势。通过理解优惠券收集者问题，我们可以获得对复杂系统行为的宝贵洞察，并在各种情境中做出更明智的决策。
- en: Thanks for reading! Hope you enjoyed this article!
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读！希望你喜欢这篇文章！
