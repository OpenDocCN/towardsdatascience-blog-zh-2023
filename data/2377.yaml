- en: 'Python Exception Testing: Clean and Effective Methods'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python异常测试：清晰而有效的方法
- en: 原文：[https://towardsdatascience.com/python-exception-testing-clean-and-effective-methods-86799da86b90?source=collection_archive---------5-----------------------#2023-07-24](https://towardsdatascience.com/python-exception-testing-clean-and-effective-methods-86799da86b90?source=collection_archive---------5-----------------------#2023-07-24)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/python-exception-testing-clean-and-effective-methods-86799da86b90?source=collection_archive---------5-----------------------#2023-07-24](https://towardsdatascience.com/python-exception-testing-clean-and-effective-methods-86799da86b90?source=collection_archive---------5-----------------------#2023-07-24)
- en: 'Beyond Basics: Advanced Python Exception Testing for Pytest and Unittest'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 超越基础：针对Pytest和Unittest的高级Python异常测试
- en: '[](https://naomikriger.medium.com/?source=post_page-----86799da86b90--------------------------------)[![Naomi
    Kriger](../Images/14839f859e1375965c046912f00df5b9.png)](https://naomikriger.medium.com/?source=post_page-----86799da86b90--------------------------------)[](https://towardsdatascience.com/?source=post_page-----86799da86b90--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----86799da86b90--------------------------------)
    [Naomi Kriger](https://naomikriger.medium.com/?source=post_page-----86799da86b90--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://naomikriger.medium.com/?source=post_page-----86799da86b90--------------------------------)[![Naomi
    Kriger](../Images/14839f859e1375965c046912f00df5b9.png)](https://naomikriger.medium.com/?source=post_page-----86799da86b90--------------------------------)[](https://towardsdatascience.com/?source=post_page-----86799da86b90--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----86799da86b90--------------------------------)
    [Naomi Kriger](https://naomikriger.medium.com/?source=post_page-----86799da86b90--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fce7969d594d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-exception-testing-clean-and-effective-methods-86799da86b90&user=Naomi+Kriger&userId=ce7969d594d&source=post_page-ce7969d594d----86799da86b90---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----86799da86b90--------------------------------)
    ·4 min read·Jul 24, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F86799da86b90&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-exception-testing-clean-and-effective-methods-86799da86b90&user=Naomi+Kriger&userId=ce7969d594d&source=-----86799da86b90---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fce7969d594d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-exception-testing-clean-and-effective-methods-86799da86b90&user=Naomi+Kriger&userId=ce7969d594d&source=post_page-ce7969d594d----86799da86b90---------------------post_header-----------)
    发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----86799da86b90--------------------------------)
    ·4 min read·Jul 24, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F86799da86b90&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-exception-testing-clean-and-effective-methods-86799da86b90&user=Naomi+Kriger&userId=ce7969d594d&source=-----86799da86b90---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F86799da86b90&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-exception-testing-clean-and-effective-methods-86799da86b90&source=-----86799da86b90---------------------bookmark_footer-----------)![](../Images/57f35113c2a900546ce0274ca735c8b0.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F86799da86b90&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-exception-testing-clean-and-effective-methods-86799da86b90&source=-----86799da86b90---------------------bookmark_footer-----------)![](../Images/57f35113c2a900546ce0274ca735c8b0.png)'
- en: '[image](https://pixabay.com/illustrations/woman-computer-work-working-5576945/)
    by [chenspec](https://pixabay.com/users/chenspec-7784448/) on [pixabay](http://pixabay.com)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[图片](https://pixabay.com/illustrations/woman-computer-work-working-5576945/)
    由 [chenspec](https://pixabay.com/users/chenspec-7784448/) 在 [pixabay](http://pixabay.com)
    上提供'
- en: Testing exceptions is more than just a formality - it’s an essential part of
    writing reliable code. In this tutorial, we will explore practical and effective
    methods to test Python code that raises and does not raise exceptions, verifying
    the accuracy of the exception messages, and covering both `pytest` and `unittest`,
    with and without parameterized tests for each framework.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 测试异常不仅仅是一种形式 - 它是编写可靠代码的关键部分。在本教程中，我们将探讨测试Python代码的方法，这些方法包括处理和不处理异常，验证异常消息的准确性，涵盖`pytest`和`unittest`，并为每个框架提供带有和不带参数化的测试。
- en: By the end of this tutorial, you will have a solid understanding of how to write
    clean, efficient, and informative exception tests for your code.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程结束时，你将对如何为代码编写干净、高效和有用的异常测试有一个扎实的理解。
- en: 'Let’s look into the following example:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们查看以下示例：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: There are several flows we can test for the function above — happy flow, a zero
    denominator, and a non-digit input.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以为上述函数测试几种情况——正常流、零分母和非数字输入。
- en: 'Now, let’s see what such tests would look like, using `pytest`:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看这样的测试在使用`pytest`时会是什么样子：
- en: pytest
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pytest
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We can also perform a sanity check to see what happens when we test an invalid
    flow against the wrong exception type or when we attempt to check for a raised
    exception in a happy flow. In these cases, the tests will fail:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以进行一个合理性检查，看看当我们测试无效流时，错误的异常类型或尝试检查在正常流中抛出的异常时会发生什么。在这些情况下，测试将失败：
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: So, why did the tests above fail? The `with` context catches the specific type
    of exception requested and verifies that the exception type is indeed the one
    we asked for.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，上面的测试为什么会失败呢？`with`上下文捕获请求的特定类型异常，并验证异常类型是否确实是我们要求的。
- en: In `test_wrong_exception_check`, an exception (`ZeroDivisionError`) was thrown,
    but it wasn’t caught by `TypeError.` Therefore, in the stack trace, we’ll see
    `ZeroDivisionError` was thrown and wasn’t caught by the `TypeError` context.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在`test_wrong_exception_check`中，抛出了一个异常（`ZeroDivisionError`），但未被`TypeError`捕获。因此，在堆栈跟踪中，我们会看到`ZeroDivisionError`被抛出但未被`TypeError`上下文捕获。
- en: 'In `test_redundant_exception_context` our `with pytest.raises` context attempted
    to validate the requested exception type (we provided `Exception` in this case)
    but since no exception was thrown — the test failed with the message `Failed:
    DID NOT RAISE <class ‘Exception’>`.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '在`test_redundant_exception_context`中，我们的`with pytest.raises`上下文尝试验证请求的异常类型（在这种情况下我们提供了`Exception`），但由于没有异常被抛出——测试失败，并显示`Failed:
    DID NOT RAISE <class ‘Exception’>`。'
- en: Now, moving on to the next stage, let’s explore how we can make our tests much
    more concise and cleaner by using `parametrize`.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，进入下一个阶段，让我们探索如何通过使用`parametrize`使我们的测试更加简洁和清晰。
- en: Parametrize
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参数化
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The `ids` parameter changes the test-case name displayed on the IDE’s test-bar
    view. In the screenshot below we can see it in action: with `ids` on the left,
    and without `ids` on the right.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '`ids`参数更改显示在IDE测试栏视图中的测试用例名称。在下面的截图中，我们可以看到它的实际效果：左侧有`ids`，右侧没有`ids`。'
- en: '![](../Images/fdc3abb6e70438e37f387e7ad923862e.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fdc3abb6e70438e37f387e7ad923862e.png)'
- en: screenshot by author
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截图
- en: Now that we’ve covered `pytest` framework, let’s see how to write the same tests
    using `unittest`.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经覆盖了`pytest`框架，让我们看看如何使用`unittest`编写相同的测试。
- en: unittest
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: unittest
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If we want to use `parameterized` with `unittest` we need to install the package.
    Let’s see parametrized tests in `unittest` would look like:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想在`unittest`中使用`parameterized`，我们需要安装该包。让我们看看在`unittest`中参数化的测试会是什么样的：
- en: Parametrized
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参数化
- en: '[PRE5]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: In `unittest`, we also modified the test case names, similar to the `pytest`
    example above. However, to achieve this, we utilized the `name_func` parameter
    along with a custom function.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在`unittest`中，我们也修改了测试用例名称，类似于上面的`pytest`示例。然而，为了实现这一点，我们使用了`name_func`参数以及一个自定义函数。
- en: In conclusion, today we explored effective methods for testing Python exceptions.
    We learned about recognizing when an exception is thrown as expected and verifying
    that the exception message matches our expectations. We examined various ways
    to test a `divide` function, including the traditional approach using `pytest`
    and a cleaner approach with `parametrize`. We also explored the `unittest` equivalent
    with `parameterized`, which required installing the library, as well as without
    it. The use of `ids` and custom test names provided a cleaner and more informative
    view in the IDE's test bar, making it easier to understand and navigate the test
    cases. By using these techniques, we can improve our unit tests and ensure that
    our code handles exceptions appropriately.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，今天我们探讨了测试Python异常的有效方法。我们学会了如何识别预期的异常是否被抛出，并验证异常消息是否符合我们的期望。我们检查了多种测试`divide`函数的方法，包括使用`pytest`的传统方法和使用`parametrize`的更清晰方法。我们还探索了`unittest`等效的`parameterized`，它需要安装该库，以及不使用它的情况。使用`ids`和自定义测试名称在IDE的测试栏中提供了更清晰和更有信息量的视图，使我们更容易理解和导航测试用例。通过使用这些技术，我们可以改进单元测试，确保代码适当地处理异常。
- en: Happy testing!
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 祝测试愉快！
- en: '![](../Images/24b04dbae0eb55fa6f00e1992c4ff086.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/24b04dbae0eb55fa6f00e1992c4ff086.png)'
- en: '[image](https://pixabay.com/photos/code-program-software-digital-7198654/)
    by [jakob5200](https://pixabay.com/users/jakob5200-10067216/) on [pixabay](http://pixabay.com)'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[图片](https://pixabay.com/photos/code-program-software-digital-7198654/) 来自
    [jakob5200](https://pixabay.com/users/jakob5200-10067216/) 在 [pixabay](http://pixabay.com)'
