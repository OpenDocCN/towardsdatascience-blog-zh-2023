- en: Building a Recommender System using Machine Learning
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用机器学习构建推荐系统
- en: 原文：[https://towardsdatascience.com/building-a-recommender-system-using-machine-learning-2eefba9a692e](https://towardsdatascience.com/building-a-recommender-system-using-machine-learning-2eefba9a692e)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/building-a-recommender-system-using-machine-learning-2eefba9a692e](https://towardsdatascience.com/building-a-recommender-system-using-machine-learning-2eefba9a692e)
- en: '[The Kaggle Blueprints](/the-kaggle-blueprints-unlocking-winning-approaches-to-data-science-competitions-24d7416ef5fd)'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[Kaggle蓝图](/the-kaggle-blueprints-unlocking-winning-approaches-to-data-science-competitions-24d7416ef5fd)'
- en: “Candidate rerank” approach with co-visitation matrix and GBDT ranker model
    in Python
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Python中使用共访矩阵和GBDT排名模型的“候选项重排序”方法
- en: '[](https://medium.com/@iamleonie?source=post_page-----2eefba9a692e--------------------------------)[![Leonie
    Monigatti](../Images/4044b1685ada53a30160b03dc78f9626.png)](https://medium.com/@iamleonie?source=post_page-----2eefba9a692e--------------------------------)[](https://towardsdatascience.com/?source=post_page-----2eefba9a692e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----2eefba9a692e--------------------------------)
    [Leonie Monigatti](https://medium.com/@iamleonie?source=post_page-----2eefba9a692e--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[![Leonie Monigatti](../Images/4044b1685ada53a30160b03dc78f9626.png)](https://medium.com/@iamleonie?source=post_page-----2eefba9a692e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----2eefba9a692e--------------------------------)
    [Leonie Monigatti](https://medium.com/@iamleonie?source=post_page-----2eefba9a692e--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----2eefba9a692e--------------------------------)
    ·6 min read·Mar 1, 2023
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----2eefba9a692e--------------------------------)
    ·阅读时长6分钟·2023年3月1日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/812a9ad1d2c667c59f32b0b97872a32d.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/812a9ad1d2c667c59f32b0b97872a32d.png)'
- en: “An excellent choice, madam! Our burger pairs perfectly with a side and a drink.
    May I suggest some options?” (Image by the author)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: “一个绝佳的选择，女士！我们的汉堡非常适合配菜和饮料。我可以推荐一些选项吗？”（作者提供的图像）
- en: Welcome to the first edition of a new article series called “[The Kaggle Blueprints](/the-kaggle-blueprints-unlocking-winning-approaches-to-data-science-competitions-24d7416ef5fd)”,
    where we will analyze [Kaggle](https://www.kaggle.com/) competitions’ top solutions
    for lessons we can apply to our own data science projects.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到新文章系列的第一版，称为[“Kaggle蓝图”](/the-kaggle-blueprints-unlocking-winning-approaches-to-data-science-competitions-24d7416ef5fd)，在这里我们将分析[Kaggle](https://www.kaggle.com/)比赛的顶级解决方案，以便提取可以应用于我们自己数据科学项目的经验教训。
- en: This first edition will review the techniques and approaches from the [“OTTO
    — Multi-Objective Recommender System”](https://www.kaggle.com/competitions/otto-recommender-system/)
    competition, which ended at the end of January, 2023.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本期内容将回顾[“OTTO — 多目标推荐系统”](https://www.kaggle.com/competitions/otto-recommender-system/)比赛中的技术和方法，该比赛于2023年1月底结束。
- en: 'Problem Statement: Multi-Objective Recommender System'
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题陈述：多目标推荐系统
- en: The goal of the [“OTTO — Multi-Objective Recommender System”](https://www.kaggle.com/competitions/otto-recommender-system/)
    competition was to build **a multi-objective recommender system (RecSys) based
    on a large dataset of implicit user data**.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[“OTTO — 多目标推荐系统”](https://www.kaggle.com/competitions/otto-recommender-system/)比赛的目标是构建**基于大量隐式用户数据的多目标推荐系统（RecSys）**。'
- en: 'Specifically, in the e-commerce use case, competitors were dealing with the
    following details:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 具体来说，在电子商务的使用案例中，竞争者们处理了以下细节：
- en: 'multi-objective: clicks, cart additions, and orders'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多目标：点击、购物车添加和订单
- en: 'large dataset: over 200 million events for about 1,8 million items'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大型数据集：超过2亿个事件，涉及约180万项
- en: 'implicit user data: previous events in a user session'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隐式用户数据：用户会话中的先前事件
- en: '[](https://www.kaggle.com/competitions/otto-recommender-system/?source=post_page-----2eefba9a692e--------------------------------)
    [## OTTO — Multi-Objective Recommender System'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[## OTTO — 多目标推荐系统](https://www.kaggle.com/competitions/otto-recommender-system/?source=post_page-----2eefba9a692e--------------------------------)'
- en: Build a recommender system based on real-world e-commerce sessions
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基于真实世界电子商务会话构建推荐系统
- en: www.kaggle.com](https://www.kaggle.com/competitions/otto-recommender-system/?source=post_page-----2eefba9a692e--------------------------------)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[www.kaggle.com](https://www.kaggle.com/competitions/otto-recommender-system/?source=post_page-----2eefba9a692e--------------------------------)'
- en: How to Approach a RecSys for a Large Database of Items
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何处理大量项目的推荐系统
- en: One of the main challenges of this competition was the large number of items
    to choose from. Feeding all of the available information into a complex model
    would require the availability of extensive amounts of computational resources.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这次比赛的主要挑战之一是选择项目的数量众多。将所有可用的信息输入复杂模型需要大量计算资源。
- en: 'Thus, the general baseline most competitors of this challenge followed is the
    **two-stage** [**candidate generation/rerank technique**](https://www.kaggle.com/competitions/otto-recommender-system/discussion/364721)
    [3]:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，大多数竞争者遵循的通用基线是**两阶段**[**候选生成/重新排序技术**](https://www.kaggle.com/competitions/otto-recommender-system/discussion/364721)[3]：
- en: 'Stage: candidate generation — This step reduces the number of potential recommendations
    (candidates) for each user from millions to about 50 to 200 [2]. To handle the
    amount of data, a simple model is usually used for this step.'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 阶段：候选生成——这一步将每个用户的潜在推荐（候选项）数量从数百万减少到大约50到200个[2]。为了处理数据量，通常使用简单模型。
- en: 'Stage: reranking — You can use a more complex model for this step, such as
    an Machine Learning (ML) model. Once you have ranked your reduced candidates,
    you can select the highest-ranked items as recommendations.'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 阶段：重新排序——你可以在这一步使用更复杂的模型，例如机器学习（ML）模型。一旦你对减少后的候选项进行排名，你可以选择排名最高的项目作为推荐。
- en: '![](../Images/82df295cf697c47b3073a9a090dca88d.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/82df295cf697c47b3073a9a090dca88d.png)'
- en: Two-stage recommender candidate generation/rerank technique (Image by author,
    inspired by [3])
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 两阶段推荐候选生成/重新排序技术（图像来源于作者，灵感来自[3]）
- en: 'Stage 1: Candidate Generation with Co-Visitation Matrix'
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一阶段：使用共访矩阵生成候选项
- en: The first step of the two-stage approach is to reduce the number of potential
    recommendations (candidates) from millions to about 50 to 200 [2]. To deal with
    the large number of items, the first model should be simple [5].
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 两阶段方法的第一步是将潜在推荐（候选项）的数量从数百万减少到大约50到200个[2]。为了处理大量项目，第一阶段的模型应保持简单[5]。
- en: 'You can choose and combine different strategies to reduce the number of items
    [3]:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以选择和结合不同的策略来减少项目数量[3]：
- en: by user history
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过用户历史
- en: by popularity — this strategy can also serve as a strong baseline [5]
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过流行度——这种策略也可以作为一个强有力的基线[5]
- en: by co-occurrence based on a co-visitation matrix
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过基于共访矩阵的共现
- en: 'The most straightforward approach to generate candidates is to use the **user
    history**: If a user has viewed an item, they are likely to purchase it as well.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 生成候选项的最直接方法是利用**用户历史**：如果用户查看过某个项目，他们很可能也会购买它。
- en: However, if the user has viewed fewer items (e.g., five items) than the number
    of candidates we want to generate per user (e.g., 50 to 200), we can populate
    the list of candidates by item popularity or co-occurrence [7]. Since selection
    by popularity is straightforward, we will focus on candidate generation by co-occurrence
    in this section.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果用户查看的项目数（例如五个项目）少于我们希望为每个用户生成的候选项数量（例如50到200），我们可以通过项目流行度或共现来填充候选项列表[7]。由于基于流行度的选择较为直接，我们将在本节中重点关注基于共现的候选项生成。
- en: The **candidate generation by the co-occurrence** of two items can be approached
    with a **co-visitation matrix:** If `user_1` bought `item_a` and shortly after
    `item_b` , we store this information [6, 7].
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**通过共现**生成的候选项可以通过**共访矩阵**进行处理：如果`user_1`购买了`item_a`，并且在不久后购买了`item_b`，我们会存储这些信息[6,
    7]。'
- en: '![](../Images/f3cf5b02ecbc91c76fa5618dfe2bb75e.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f3cf5b02ecbc91c76fa5618dfe2bb75e.png)'
- en: Minimal example of users’ buying behavior for recommender system (Image by the
    author)
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐系统的用户购买行为的最小示例（图像来源于作者）
- en: For each item, count the occurrences of every other item within a specified
    time frame.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于每个项目，计算在指定时间框架内每个其他项目的出现次数。
- en: '![](../Images/e833b62001f5679e722ad8cca715a36b.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e833b62001f5679e722ad8cca715a36b.png)'
- en: Minimal example of co-visitation matrix (Image by the author)
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 共访矩阵的最小示例（图像来源于作者）
- en: 2\. For each item, find the 50 to 200 most frequent items visited after this
    item.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 对于每个项目，找到在该项目之后最常访问的50到200个项目。
- en: As you can see from the image above, a co-visitation matrix is not necessarily
    symmetrical. For example, someone who bought a burger is also likely to buy a
    drink — but the opposite may not be true.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如上图所示，共访矩阵不一定是对称的。例如，购买了汉堡的人也很可能会购买饮料——但相反的情况可能不成立。
- en: You can also assign weights to the co-visitation matrix based on proximity.
    For example, items bought together in the same session could have a higher weight
    than items a user bought across different shopping sessions.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以根据接近度为共访矩阵分配权重。例如，同一会话中一起购买的项目可能比用户在不同购物会话中购买的项目有更高的权重。
- en: The co-visitation matrix resembles doing **matrix factorization by counting**
    [6]. Matrix factorization is a popular technique for recommender systems. Specifically,
    it is a collaborative filtering method that finds the relationship between items
    and users.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 共访矩阵类似于通过计数进行的**矩阵分解** [6]。矩阵分解是推荐系统的常用技术。具体来说，它是一种协同过滤方法，用于发现项目和用户之间的关系。
- en: '[](/recommendation-system-matrix-factorization-d61978660b4b?source=post_page-----2eefba9a692e--------------------------------)
    [## Recommendation System — Matrix Factorization'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/recommendation-system-matrix-factorization-d61978660b4b?source=post_page-----2eefba9a692e--------------------------------)
    [## 推荐系统 — 矩阵分解'
- en: Walk Through Recommender System of Matrix Factorization
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 矩阵分解推荐系统的步骤
- en: towardsdatascience.com](/recommendation-system-matrix-factorization-d61978660b4b?source=post_page-----2eefba9a692e--------------------------------)
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/recommendation-system-matrix-factorization-d61978660b4b?source=post_page-----2eefba9a692e--------------------------------)
- en: 'Stage 2: Reranking with GBDT Model'
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 阶段 2：使用 GBDT 模型重新排序
- en: The second step is **reranking**. While you can achieve a good performance with
    handcrafted rules [1], in theory, using an ML model should work better [5].
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 第二步是**重新排序**。虽然你可以通过手工规则 [1] 达到良好的效果，但理论上使用 ML 模型应该更有效 [5]。
- en: You can use different Gradient Boosted Decision Tree (GBDT) rankers like [XGBRanker](https://medium.com/predictly-on-tech/learning-to-rank-using-xgboost-83de0166229d)
    or [LGBMRanker](https://lightgbm.readthedocs.io/en/latest/pythonapi/lightgbm.LGBMRanker.html)
    [2, 3, 4].
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用不同的梯度提升决策树（GBDT）排名器，如 [XGBRanker](https://medium.com/predictly-on-tech/learning-to-rank-using-xgboost-83de0166229d)
    或 [LGBMRanker](https://lightgbm.readthedocs.io/en/latest/pythonapi/lightgbm.LGBMRanker.html)
    [2, 3, 4]。
- en: Preparation of training data and feature engineering
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 训练数据和特征工程的准备
- en: 'The training data for the GBDT ranker model should contain the following column
    categories [2]:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: GBDT 排名模型的训练数据应包含以下列类别 [2]：
- en: '**User and item pairs from candidate generation** — The base for the dataframe
    will be the list of candidates generated in the first stage. For each user, you
    should end up with `N_CANDIDATES` , and thus, the starting point should be a dataframe
    of shape `(N_USERS * N_CANDIDATES, 2)`'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**来自候选生成的用户和项目对** — 数据框的基础将是第一阶段生成的候选列表。对于每个用户，你应该得到 `N_CANDIDATES` 个项目，因此起点应该是形状为
    `(N_USERS * N_CANDIDATES, 2)` 的数据框。'
- en: '**User features** —counts, aggregation features, ratio features, etc.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户特征** — 计数、聚合特征、比例特征等。'
- en: '**Item features** —counts, aggregation features, ratio features, etc.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**项目特征** — 计数、聚合特征、比例特征等。'
- en: '**User-item features** (optional)— You can create user-item interfaction features,
    such as ‘item clicked’'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户-项目特征**（可选）— 你可以创建用户-项目互动特征，如‘点击的项目’'
- en: '**Labels** — For each user-item pair, merge the labels (e.g., ‘bought’ or ‘not
    bought’).'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标签** — 对于每个用户-项目对，合并标签（例如，‘购买’或‘未购买’）。'
- en: The resulting training dataframe should look something like this.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的训练数据框应如下所示。
- en: '![](../Images/691247efebae3db620835736534b158b.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/691247efebae3db620835736534b158b.png)'
- en: Training data structure for training a GDBT ranker model for a recommender system
    (Image by the author)
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 用于训练推荐系统 GDBT 排名模型的训练数据结构（作者提供的图片）
- en: GBDT ranker models
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GBDT 排名模型
- en: This step aims to train a GBDT ranker model to select the `top_N` recommendations.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 此步骤旨在训练 GBDT 排名模型以选择 `top_N` 推荐。
- en: 'The GBDT ranker will take three inputs:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: GBDT 排名器将接受三个输入：
- en: '`X_train`, `X_val`: training and validation data frames containing `FEATURES`'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`X_train`，`X_val`：包含 `FEATURES` 的训练和验证数据框'
- en: '`y_train`, `y_val`: training and validation data frames containing `LABELS`'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`y_train`，`y_val`：包含 `LABELS` 的训练和验证数据框'
- en: '`group` : Note that the `FEATURES` **don’t contain** `user`, `item` columns
    [2]. Thus, the model needs the information on within which group to rank the items:
    `group = [N_CANDIDATES] * (len(train_df) // N_CANDIDATES)`'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`group` ：注意 `FEATURES` **不包含** `user`，`item` 列 [2]。因此，模型需要知道在何种组内对项目进行排名：`group
    = [N_CANDIDATES] * (len(train_df) // N_CANDIDATES)`'
- en: Below you can find the sample code with [XGBRanker](https://medium.com/predictly-on-tech/learning-to-rank-using-xgboost-83de0166229d)
    [2].
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是使用 [XGBRanker](https://medium.com/predictly-on-tech/learning-to-rank-using-xgboost-83de0166229d)
    [2] 的示例代码。
- en: '[PRE0]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Below you can find the sample code with [LGBMRanker](https://lightgbm.readthedocs.io/en/latest/pythonapi/lightgbm.LGBMRanker.html)
    [4]:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是带有[LGBMRanker](https://lightgbm.readthedocs.io/en/latest/pythonapi/lightgbm.LGBMRanker.html)的示例代码[4]：
- en: '[PRE1]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The GBDT ranking model will rank the items within the specified group. To retrieve
    the `top_N` recommendations, you only need to group the output by the user and
    sort by the item’s ranking.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: GBDT排名模型将对指定组内的项目进行排序。要检索`top_N`推荐项，您只需按用户对输出进行分组，并按项目的排名排序即可。
- en: Summary
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: There are many more lessons to be learned from reviewing the learning resources
    Kagglers have created during the course of the [“OTTO — Multi-Objective Recommender
    System”](https://www.kaggle.com/competitions/otto-recommender-system/) competition.
    There are also many different solutions for this type of problem statement.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 从回顾Kagglers在[“OTTO——多目标推荐系统”](https://www.kaggle.com/competitions/otto-recommender-system/)比赛过程中创建的学习资源中，还可以学到更多的课程。对于这种类型的问题陈述，还有许多不同的解决方案。
- en: 'In this article, we focused on the general approach that was popular among
    many competitors: **Candidate generation with a co-visitation matrix to reduce
    the number of potential items to recommend, followed by a GBDT reranker.**'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们集中讨论了在许多竞争者中流行的一般方法：**通过协同访问矩阵进行候选生成，以减少潜在推荐项目的数量，然后进行GBDT重排序。**
- en: Enjoyed This Story?
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 享受这个故事了吗？
- en: '[*Subscribe for free*](https://medium.com/subscribe/@iamleonie) *to get notified
    when I publish a new story.*'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '[*免费订阅*](https://medium.com/subscribe/@iamleonie) *以在我发布新故事时获得通知。*'
- en: '[](https://medium.com/@iamleonie/subscribe?source=post_page-----2eefba9a692e--------------------------------)
    [## Get an email whenever Leonie Monigatti publishes.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@iamleonie/subscribe?source=post_page-----2eefba9a692e--------------------------------)
    [## 当Leonie Monigatti发布新内容时，获取电子邮件通知。'
- en: Get an email whenever Leonie Monigatti publishes. By signing up, you will create
    a Medium account if you don’t already…
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 当Leonie Monigatti发布新内容时，您将收到电子邮件通知。通过注册，您将创建一个Medium账户（如果您还没有的话）……
- en: medium.com](https://medium.com/@iamleonie/subscribe?source=post_page-----2eefba9a692e--------------------------------)
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: medium.com](https://medium.com/@iamleonie/subscribe?source=post_page-----2eefba9a692e--------------------------------)
- en: '*Find me on* [*LinkedIn*](https://www.linkedin.com/in/804250ab/),[*Twitter*](https://twitter.com/helloiamleonie)*,
    and* [*Kaggle*](https://www.kaggle.com/iamleonie)*!*'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '*在* [*LinkedIn*](https://www.linkedin.com/in/804250ab/)、[*Twitter*](https://twitter.com/helloiamleonie)*和*
    [*Kaggle*](https://www.kaggle.com/iamleonie)*上找到我！*'
- en: References
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[1] Chris Deotte (2022). [“Candidate ReRank Model — [LB 0.575]”](https://www.kaggle.com/code/cdeotte/candidate-rerank-model-lb-0-575)
    in Kaggle Notebooks. (accessed 26\. February 2023)'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] Chris Deotte (2022). [“候选重排序模型——[LB 0.575]”](https://www.kaggle.com/code/cdeotte/candidate-rerank-model-lb-0-575)在Kaggle笔记本中。（访问日期：2023年2月26日）'
- en: '[2] Chris Deotte (2022). “[How To Build a GBT Ranker Model](https://www.kaggle.com/competitions/otto-recommender-system/discussion/370210)”
    in Kaggle Discussions. (accessed 21\. February 2023)'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] Chris Deotte (2022). “[如何构建GBT排序模型](https://www.kaggle.com/competitions/otto-recommender-system/discussion/370210)”在Kaggle讨论中。（访问日期：2023年2月21日）'
- en: '[3] Ravi Shah (2022). “[Recommendation Systems for Large Datasets](https://www.kaggle.com/competitions/otto-recommender-system/discussion/364721)”
    in Kaggle Discussions. (accessed 21\. February 2023)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '[3] Ravi Shah (2022). “[大型数据集的推荐系统](https://www.kaggle.com/competitions/otto-recommender-system/discussion/364721)”在Kaggle讨论中。（访问日期：2023年2月21日）'
- en: '[4] Radek Osmulski (2022). [“[polars] Proof of concept: LGBM Ranker”](https://www.kaggle.com/code/radek1/polars-proof-of-concept-lgbm-ranker)
    in Kaggle Notebooks. (accessed 26\. February 2023)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '[4] Radek Osmulski (2022). [“[polars] 概念验证：LGBM Ranker”](https://www.kaggle.com/code/radek1/polars-proof-of-concept-lgbm-ranker)在Kaggle笔记本中。（访问日期：2023年2月26日）'
- en: '[5] Radek Osmulski (2022). [“ Introduction to the OTTO competition on Kaggle
    (RecSys)”](https://youtu.be/gtPEX_eRAVo) on YouTube. (accessed 21\. February 2023)'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '[5] Radek Osmulski (2022). [“在Kaggle上的OTTO比赛介绍（RecSys）”](https://youtu.be/gtPEX_eRAVo)在YouTube上。（访问日期：2023年2月21日）'
- en: '[6] Radek Osmulski (2022). [“What is the co-visitation matrix, really?”](https://www.kaggle.com/competitions/otto-recommender-system/discussion/365358)
    in Kaggle Discussions. (accessed 21\. February 2023)'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[6] Radek Osmulski (2022). [“协同访问矩阵究竟是什么？”](https://www.kaggle.com/competitions/otto-recommender-system/discussion/365358)在Kaggle讨论中。（访问日期：2023年2月21日）'
- en: '[7] Vladimir Slaykovskiy (2022). [“Co-visitation Matrix”](https://www.kaggle.com/code/vslaykovsky/co-visitation-matrix)
    in Kaggle Notebooks. (accessed 21\. February 2023)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[7] Vladimir Slaykovskiy (2022). [“协同访问矩阵”](https://www.kaggle.com/code/vslaykovsky/co-visitation-matrix)在Kaggle笔记本中。（访问日期：2023年2月21日）'
