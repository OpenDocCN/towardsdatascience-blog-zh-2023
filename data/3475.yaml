- en: Managing Your Cloud-Based Data Storage with Rclone
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Rclone 管理你的云数据存储
- en: 原文：[https://towardsdatascience.com/managing-your-cloud-based-data-storage-with-rclone-32fff991e0b3?source=collection_archive---------10-----------------------#2023-11-22](https://towardsdatascience.com/managing-your-cloud-based-data-storage-with-rclone-32fff991e0b3?source=collection_archive---------10-----------------------#2023-11-22)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/managing-your-cloud-based-data-storage-with-rclone-32fff991e0b3?source=collection_archive---------10-----------------------#2023-11-22](https://towardsdatascience.com/managing-your-cloud-based-data-storage-with-rclone-32fff991e0b3?source=collection_archive---------10-----------------------#2023-11-22)
- en: How to optimize data transfer across multiple object storage systems
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何优化多个对象存储系统之间的数据传输
- en: '[](https://chaimrand.medium.com/?source=post_page-----32fff991e0b3--------------------------------)[![Chaim
    Rand](../Images/c52659c389f167ad5d6dc139940e7955.png)](https://chaimrand.medium.com/?source=post_page-----32fff991e0b3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----32fff991e0b3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----32fff991e0b3--------------------------------)
    [Chaim Rand](https://chaimrand.medium.com/?source=post_page-----32fff991e0b3--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://chaimrand.medium.com/?source=post_page-----32fff991e0b3--------------------------------)[![Chaim
    Rand](../Images/c52659c389f167ad5d6dc139940e7955.png)](https://chaimrand.medium.com/?source=post_page-----32fff991e0b3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----32fff991e0b3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----32fff991e0b3--------------------------------)
    [Chaim Rand](https://chaimrand.medium.com/?source=post_page-----32fff991e0b3--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F9440b37e27fe&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmanaging-your-cloud-based-data-storage-with-rclone-32fff991e0b3&user=Chaim+Rand&userId=9440b37e27fe&source=post_page-9440b37e27fe----32fff991e0b3---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----32fff991e0b3--------------------------------)
    ·7 min read·Nov 22, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F32fff991e0b3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmanaging-your-cloud-based-data-storage-with-rclone-32fff991e0b3&user=Chaim+Rand&userId=9440b37e27fe&source=-----32fff991e0b3---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F9440b37e27fe&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmanaging-your-cloud-based-data-storage-with-rclone-32fff991e0b3&user=Chaim+Rand&userId=9440b37e27fe&source=post_page-9440b37e27fe----32fff991e0b3---------------------post_header-----------)
    发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----32fff991e0b3--------------------------------)
    ·7分钟阅读·2023年11月22日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F32fff991e0b3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmanaging-your-cloud-based-data-storage-with-rclone-32fff991e0b3&user=Chaim+Rand&userId=9440b37e27fe&source=-----32fff991e0b3---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F32fff991e0b3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmanaging-your-cloud-based-data-storage-with-rclone-32fff991e0b3&source=-----32fff991e0b3---------------------bookmark_footer-----------)![](../Images/31058489fd9aa402449e5f9e7e07f343.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F32fff991e0b3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmanaging-your-cloud-based-data-storage-with-rclone-32fff991e0b3&source=-----32fff991e0b3---------------------bookmark_footer-----------)![](../Images/31058489fd9aa402449e5f9e7e07f343.png)'
- en: Photo by [Tom Podmore](https://unsplash.com/@tompodmore86?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Tom Podmore](https://unsplash.com/@tompodmore86?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: As companies become more and more dependent on cloud-based storage solutions,
    it is imperative that they have the appropriate tools and techniques for effective
    management of their [big data](https://en.wikipedia.org/wiki/Big_data). In previous
    posts (e.g., [here](https://medium.com/towards-data-science/streaming-big-data-files-from-cloud-storage-634e54818e75)
    and [here](/training-from-cloud-storage-with-s5cmd-5c8fb5c06056)) we have explored
    several different methods for retrieving data from cloud storage and demonstrated
    their effectiveness at different types of tasks. We found that the most optimal
    tool can vary based on the specific task at hand (e.g., file format, size of data
    files, data access pattern) and the metrics that we wish to optimize (e.g., latency,
    speed, or cost). In this post, we explore yet another popular tool for cloud-based
    storage management — sometimes [referred to](https://rclone.org/) as “*the Swiss
    army knife of cloud storage”* — the [rclone](https://rclone.org/) command-line
    utility. Supporting more than [70 storage service providers](https://rclone.org/#providers),
    rclone supports similar functionality to vendor-specific storage management applications
    such as AWS CLI (for Amazon S3) and [gsutil](https://cloud.google.com/storage/docs/gsutil)
    (for Google Storage). But does it perform well enough to constitute a viable alternative?
    Are there situations in which rclone would be the tool of choice? In the following
    sections we will demonstrate rclone’s usage, assess its performance, and **highlight
    its value in a particular use-case — transferring data across different object
    storage systems**.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 随着公司越来越依赖基于云的存储解决方案，拥有合适的工具和技术以有效管理其[大数据](https://en.wikipedia.org/wiki/Big_data)变得至关重要。在之前的文章中（例如，[这里](https://medium.com/towards-data-science/streaming-big-data-files-from-cloud-storage-634e54818e75)和[这里](/training-from-cloud-storage-with-s5cmd-5c8fb5c06056)），我们探讨了几种从云存储中检索数据的方法，并展示了它们在不同任务中的有效性。我们发现，最优的工具可能会根据具体任务（例如文件格式、数据文件的大小、数据访问模式）以及我们希望优化的指标（例如延迟、速度或成本）而有所不同。在这篇文章中，我们探讨了另一个流行的云存储管理工具——有时被[称为](https://rclone.org/)“*云存储的瑞士军刀*”——[rclone](https://rclone.org/)命令行工具。rclone支持超过[70种存储服务提供商](https://rclone.org/#providers)，具备类似于供应商特定存储管理应用程序（如AWS
    CLI（用于Amazon S3）和[gsutil](https://cloud.google.com/storage/docs/gsutil)（用于Google
    Storage））的功能。但它是否足够出色以构成一个可行的替代方案？在什么情况下rclone会是首选工具？在接下来的章节中，我们将展示rclone的使用，评估其性能，并**突出其在特定用例中的价值——在不同对象存储系统之间转移数据**。
- en: Disclaimers
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 免责声明
- en: This post is not, by any means, intended to replace the official [rclone documentation](https://rclone.org/).
    Nor is it intended to be an endorsement of the use of rclone or any of the other
    tools we should mention. The best choice for your cloud-based data management
    will greatly depend on the details of your project and should be made following
    thorough, use-case specific testing. Please be sure to re-evaluate the statements
    we make against the most up to date tools available at the time you are reading
    this.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本文绝不是为了取代官方的[rclone文档](https://rclone.org/)。也不意图为使用rclone或我们提到的其他工具提供认可。您在进行云数据管理时的最佳选择将大大依赖于项目的详细信息，并应根据详细的、特定用例的测试来做出。请确保在阅读时重新评估我们所做的陈述，并对照您手头的最新工具。
- en: Data Retrieval from Cloud Storage with Rclone
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从云存储中检索数据与 Rclone
- en: The following command line uses [rclone sync](https://rclone.org/commands/rclone_sync/)
    in order to sync the contents of a cloud-based object-storage path with a local
    directory. This example demonstrates the use of the [Amazon S3](https://rclone.org/s3/)
    storage service but could just as easily have used a different cloud storage service.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令行使用[rclone sync](https://rclone.org/commands/rclone_sync/)来同步云对象存储路径与本地目录的内容。这个例子演示了[Amazon
    S3](https://rclone.org/s3/)存储服务的使用，但同样可以使用其他云存储服务。
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The rclone command has dozens of [flags](https://rclone.org/docs/) for programming
    its behavior. The *-P* flag outputs the progress of the data transfer including
    the transfer rate and overall time. In the command above we included two (of the
    many) controls that can impact rclone’s runtime performance: The [*transfers*](https://rclone.org/flags/#performance)flag
    determines the maximum number of files to download concurrently and [*multi-thread-streams*](https://rclone.org/docs/#multi-thread-streams-n)
    determines the maximum number of threads to use to transfer a single file. Here
    we have left both at their default values (4).'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: rclone 命令有数十个 [标志](https://rclone.org/docs/) 用于编程其行为。* -P * 标志输出数据传输的进度，包括传输速率和总体时间。在上述命令中，我们包含了两个（众多）可能影响
    rclone 运行时性能的控制：[*transfers*](https://rclone.org/flags/#performance) 标志确定要并发下载的最大文件数，而
    [*multi-thread-streams*](https://rclone.org/docs/#multi-thread-streams-n) 确定用于传输单个文件的最大线程数。这里我们将两者都保留在默认值（4）。
- en: Rclone’s functionality relies on the appropriate definition of the [rclone configuration
    file](https://rclone.org/commands/rclone_config/). Below we demonstrate the definition
    of the remote *S3store* object storage location used in the command line above.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: rclone 的功能依赖于对 [rclone 配置文件](https://rclone.org/commands/rclone_config/) 的适当定义。下面我们演示了上面命令行中使用的远程
    *S3store* 对象存储位置的定义。
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now that we have seen rclone in action, the question that arises is whether
    it provides any value over the other cloud storage management tools that are out
    there such as the popular [AWS CLI](https://aws.amazon.com/cli/). In the next
    two sections we will evaluate the performance of rclone compared to some of its
    alternatives in two scenarios that we have explored in detail in our previous
    posts: 1) downloading a 2 GB file and 2) downloading hundreds of 1 MB files.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经看到 rclone 的实际操作，接下来的问题是它是否相较于其他云存储管理工具（例如流行的 [AWS CLI](https://aws.amazon.com/cli/)）提供了任何额外的价值。在接下来的两个部分中，我们将评估
    rclone 相比于其一些替代品在我们之前帖子中详细探讨的两个场景中的性能：1) 下载一个 2 GB 文件和 2) 下载数百个 1 MB 文件。
- en: 'Use Case 1: Downloading a Large File'
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用例 1：下载大文件
- en: The command line below uses the [AWS CLI](https://docs.aws.amazon.com/cli/latest/)
    to download a 2 GB file from Amazon S3\. This is just one of the many of methods
    we evaluated in [a previous post](/streaming-big-data-files-from-cloud-storage-634e54818e75).
    We use the linux *time* command to measure the performance.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令行使用 [AWS CLI](https://docs.aws.amazon.com/cli/latest/) 从 Amazon S3 下载一个
    2 GB 文件。这只是我们在 [之前的帖子](/streaming-big-data-files-from-cloud-storage-634e54818e75)
    中评估的众多方法之一。我们使用 linux 的 *time* 命令来测量性能。
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The reported download time amounted to roughly 26 seconds (i.e., ~79 MB/s).
    Keep in mind that this value was calculated on our own local PC and can vary greatly
    from one runtime environment to another. The equivalent [rclone copy](https://rclone.org/commands/rclone_copy/)
    command appears below:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 报告的下载时间约为 26 秒（即 ~79 MB/s）。请注意，该值是在我们自己本地 PC 上计算的，可能会因运行时环境的不同而有很大差异。等效的 [rclone
    copy](https://rclone.org/commands/rclone_copy/) 命令如下：
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In our setup, we found the rclone download time to be more than two times slower
    than the standard AWS CLI. It is highly likely that this could be improved significantly
    through appropriate tuning of the rclone control flags.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的设置中，我们发现 rclone 的下载时间比标准的 AWS CLI 慢两倍多。通过适当调整 rclone 控制标志，这一性能有可能得到显著改善。
- en: 'Use Case 2: Downloading a Large Number of Small Files'
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用例 2：下载大量小文件
- en: 'In this use case we evaluate the runtime performance of downloading *800* relatively
    small files of size 1 MB each. In a [previous blog post](/training-from-cloud-storage-with-s5cmd-5c8fb5c06056)
    we discussed this use case in the context of streaming data samples to a deep-learning
    training workload and demonstrated the superior performance of [s5cmd](https://github.com/peak/s5cmd)
    [*beast*](https://github.com/peak/s5cmd#beast-mode-s5cmd) mode. In *beast* mode
    we create a file with a list of object-file operations which s5cmd performs in
    using [multiple parallel workers](https://github.com/peak/s5cmd#numworkers) (256
    by default). The s5cmd beast mode option is demonstrated below:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个用例中，我们评估了下载 *800* 个相对较小的 1 MB 文件的运行时性能。在 [之前的博客文章](/training-from-cloud-storage-with-s5cmd-5c8fb5c06056)
    中，我们讨论了在将数据样本流式传输到深度学习训练工作负载的背景下的这个用例，并展示了 [s5cmd](https://github.com/peak/s5cmd)
    [*beast*](https://github.com/peak/s5cmd#beast-mode-s5cmd) 模式的优越性能。在 *beast* 模式下，我们创建一个包含对象文件操作列表的文件，s5cmd
    使用 [多个并行工作线程](https://github.com/peak/s5cmd#numworkers)（默认值为 256）来执行这些操作。下面展示了
    s5cmd beast 模式选项：
- en: '[PRE4]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The *cmds.txt* file contains a list of *800* lines of the form:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '*cmds.txt* 文件包含 *800* 行，格式如下：'
- en: '[PRE5]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The s5cmd command took an average time of 9.3 seconds (averaged over ten trials).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: s5cmd 命令平均耗时 9.3 秒（十次试验的平均值）。
- en: Rclone supports a functionality similar to s5cmd’s beast mode with the *files-from*
    command line option. Below we run rclone copy on our *800* files with the *transfers*
    value set to *256* to match the default [concurrency](https://github.com/peak/s5cmd#configuring-concurrency)
    settings of s5cmd.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Rclone 支持类似于 s5cmd 的 beast mode 的功能，通过 *files-from* 命令行选项实现。下面我们使用 *transfers*
    值设置为 *256* 在我们的 *800* 个文件上运行 rclone copy，以匹配 s5cmd 的默认 [并发设置](https://github.com/peak/s5cmd#configuring-concurrency)。
- en: '[PRE6]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The *files.txt* file contains *800* lines of the form:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '*files.txt* 文件包含 *800* 行，格式如下：'
- en: '[PRE7]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The rclone copy of our *800* files took an average of 8.5 seconds, slightly
    less than s5cmd (averaged over ten trials).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的 *800* 个文件的 rclone copy 平均耗时 8.5 秒，比 s5cmd 略少（十次试验的平均值）。
- en: We acknowledge that the results demonstrated thus far may not be enough to convince
    you to prefer rclone over your existing tools. In the next section we will describe
    a use case that highlights one of the potential advantages of rclone.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们承认目前展示的结果可能不足以说服您选择 rclone 而非现有工具。在下一节中，我们将描述一个用例，突出 rclone 的潜在优势。
- en: Data Transfer Between Object Storage Systems
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对象存储系统之间的数据传输
- en: These days it is not uncommon for development teams to maintain their data in
    more than one object store. The motivation behind this could be the need to protect
    against the possibility of a storage failure or the decision to use data-processing
    offerings from multiple cloud service providers. For example, your solution for
    AI development might rely on training your models in the AWS using data in Amazon
    S3 and running data analytics in Microsoft Azure using the same data stored in
    Azure Storage. Additionally, you may want to maintain a copy of your data in a
    local storage infrastructure such as [FlashBlade](https://www.purestorage.com/products/unstructured-data-storage/flashblade-s.html),
    [Cloudian](https://cloudian.com/), or [VAST](https://vastdata.com/). These circumstances
    require the ability to transfer and synchronize your data between multiple object
    stores in a secure, reliable, and timely fashion.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现如今，开发团队维护多个对象存储并不罕见。这可能是为了防范存储故障的风险，或是决定使用多个云服务提供商的数据处理服务。例如，您可能会在 AWS 中使用存储在
    Amazon S3 中的数据进行 AI 模型训练，同时在 Microsoft Azure 中运行数据分析，分析的数据存储在 Azure Storage 中。此外，您可能还希望在
    [FlashBlade](https://www.purestorage.com/products/unstructured-data-storage/flashblade-s.html)、[Cloudian](https://cloudian.com/)
    或 [VAST](https://vastdata.com/) 等本地存储基础设施中保持数据的备份。这些情况需要在安全、可靠和及时的方式下，在多个对象存储之间传输和同步数据的能力。
- en: Some cloud service providers offer dedicated services for such purposes. However,
    these do not always address the precise needs of your project or may not enable
    you the level of control you desire. For example, [Google Storage Transfer](https://cloud.google.com/storage-transfer/docs/overview)
    excels at speedy migration of *all of the data* within a specified storage folder,
    but does not (as of the time of this writing) support transferring a specific
    subset of files from within it.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 一些云服务提供商提供专门用于此类目的的服务。然而，这些服务并不总是满足您项目的具体需求，或者可能无法提供您所期望的控制级别。例如，[Google Storage
    Transfer](https://cloud.google.com/storage-transfer/docs/overview) 在指定存储文件夹内的
    *所有数据* 迁移方面表现出色，但（截至本文撰写时）不支持从其中传输特定子集的文件。
- en: 'Another option we could consider would be to apply our existing data management
    towards this purpose. The problem with this is that tools such as AWS CLI and
    s5cmd do not (as of the time of this writing) support specifying different [access
    settings](https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-endpoints.html)
    and [security-credentials](https://docs.aws.amazon.com/IAM/latest/UserGuide/security-creds.html)
    for the source and target storage systems. Thus, migrating data between storage
    locations requires transferring it to an intermediate (temporary) location. In
    the command below we combine the use of s5cmd and AWS CLI to copy a file from
    Amazon S3 to Google Storage via system memory and using Linux piping:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以考虑的另一个选项是将现有的数据管理方案应用于这个目的。问题在于，像 AWS CLI 和 s5cmd 这样的工具（截至目前）不支持为源存储系统和目标存储系统指定不同的[访问设置](https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-endpoints.html)和[安全凭证](https://docs.aws.amazon.com/IAM/latest/UserGuide/security-creds.html)。因此，在存储位置之间迁移数据需要将数据转移到一个中间（临时）位置。下面的命令中，我们结合使用了
    s5cmd 和 AWS CLI，通过系统内存和 Linux 管道将文件从 Amazon S3 复制到 Google Storage：
- en: '[PRE8]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: While this is a legitimate, albeit clumsy way of transferring a *single* file,
    in practice, we may need the ability to transfer many millions of files. To support
    this, we would need to add an additional layer for spawning and managing multiple
    parallel workers/processors. Things could get ugly pretty quickly.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这是一种合法的、尽管笨拙的传输*单个*文件的方式，但在实际操作中，我们可能需要能够传输数百万个文件。为了支持这一点，我们需要添加一个额外的层来启动和管理多个并行的工作进程/处理器。事情可能会迅速变得棘手。
- en: Data Transfer with Rclone
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Rclone 进行数据传输
- en: Contrary to tools like AWS CLI and s5cmd, rclone enables us to specify different
    access settings for the source and target. In the following rclone config file
    we add settings for [Google Cloud Storage](https://rclone.org/googlecloudstorage/)
    (GCS) access. (Here we treat GCS as an S3 provider. See [here](https://rclone.org/googlecloudstorage/)
    for other configuration options.)
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 与 AWS CLI 和 s5cmd 等工具不同，rclone 使我们能够为源和目标指定不同的访问设置。在以下的 rclone 配置文件中，我们添加了 [Google
    Cloud Storage](https://rclone.org/googlecloudstorage/) (GCS) 访问设置。（在这里，我们将 GCS
    视为 S3 提供商。请查看[这里](https://rclone.org/googlecloudstorage/)了解其他配置选项。）
- en: '[PRE9]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Transferring a single file between storage systems has the same format as copying
    it to a local directory:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在存储系统之间传输单个文件的格式与复制到本地目录相同：
- en: '[PRE10]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'However, the real power of rclone comes from combining this feature with the
    *files-from* option described above. Rather than having to orchestrate a custom
    solution for parallelizing the data migration, we can transfer a long list of
    files using a single command:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，rclone 的真正力量来自于将上述的*files-from*选项与这个功能结合。我们无需为数据迁移的并行化设计自定义解决方案，只需用一个命令就能传输一长串文件：
- en: '[PRE11]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: In practice, we can further accelerate the data migration by parsing the list
    of object files into smaller lists (e.g., with 10,000 files each) and running
    each list on a separate compute resource. While the precise impact of this kind
    of solution will vary from project to project, it can provide a significant boost
    to the speed and efficiency of your development.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，我们可以通过将对象文件列表解析为较小的列表（例如，每个列表包含 10,000 个文件）并在单独的计算资源上运行每个列表，从而进一步加速数据迁移。虽然这种解决方案的具体影响因项目而异，但它可以显著提高开发的速度和效率。
- en: Summary
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this post we have explored cloud-based storage management using rclone and
    demonstrated its application to the challenge of maintaining and synchronizing
    data across multiple storage systems. There are undoubtedly many alternative solutions
    for data transfer. But there is no questioning the convenience and elegance of
    the rclone-based method.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们探讨了使用 rclone 进行基于云的存储管理，并展示了它在维护和同步多个存储系统数据方面的应用。数据传输确实有许多替代解决方案，但rclone
    基于的方法的便利性和优雅性无可置疑。
- en: This is just one of many posts that we have written on the topic of maximizing
    the efficiency of cloud-based storage solutions. Be sure to check out some of
    [our other posts](https://chaimrand.medium.com/) on this important topic.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是我们在最大化基于云的存储解决方案效率方面撰写的众多文章之一。请务必查看一些[我们的其他文章](https://chaimrand.medium.com/)以了解这一重要话题。
