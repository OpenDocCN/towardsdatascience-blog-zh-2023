- en: Bash Processing Speed Matters
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Bash处理速度很重要
- en: 原文：[https://towardsdatascience.com/bash-processing-speed-matters-d83e4c5adf32](https://towardsdatascience.com/bash-processing-speed-matters-d83e4c5adf32)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/bash-processing-speed-matters-d83e4c5adf32](https://towardsdatascience.com/bash-processing-speed-matters-d83e4c5adf32)
- en: I sped up the execution of a bash command line >500x to make it a breeze to
    use
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我将bash命令行的执行速度提高了500倍以上，使其变得非常方便使用
- en: '[](https://medium.com/@mattiadigangi?source=post_page-----d83e4c5adf32--------------------------------)[![Mattia
    Di Gangi](../Images/ccd89021df6724797d45cc3c655a38a5.png)](https://medium.com/@mattiadigangi?source=post_page-----d83e4c5adf32--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d83e4c5adf32--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d83e4c5adf32--------------------------------)
    [Mattia Di Gangi](https://medium.com/@mattiadigangi?source=post_page-----d83e4c5adf32--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@mattiadigangi?source=post_page-----d83e4c5adf32--------------------------------)[![Mattia
    Di Gangi](../Images/ccd89021df6724797d45cc3c655a38a5.png)](https://medium.com/@mattiadigangi?source=post_page-----d83e4c5adf32--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d83e4c5adf32--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d83e4c5adf32--------------------------------)
    [Mattia Di Gangi](https://medium.com/@mattiadigangi?source=post_page-----d83e4c5adf32--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d83e4c5adf32--------------------------------)
    ·5 min read·Mar 30, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----d83e4c5adf32--------------------------------)
    ·阅读时间5分钟·2023年3月30日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/3c5892a7dbb49c0b78ff636aafe30db5.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3c5892a7dbb49c0b78ff636aafe30db5.png)'
- en: Photo by [Chris Liverani](https://unsplash.com/@chrisliverani?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 由[Chris Liverani](https://unsplash.com/@chrisliverani?utm_source=medium&utm_medium=referral)拍摄，发布在[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: When you have to process data in textual or tabular forms, one of the long-time
    favorites is surely [GNU Bash](https://www.gnu.org/software/bash/), the Linux
    flagship shell with “batteries included”. If you have never used it, you are missing
    out a lot and should definitely give it a try.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 当你需要处理文本或表格形式的数据时，长期以来的一个受欢迎选择肯定是[GNU Bash](https://www.gnu.org/software/bash/)，这是具有“内置功能”的Linux旗舰shell。如果你从未使用过它，你错过了很多，绝对应该尝试一下。
- en: The tools coming with Bash follow the Unix philosophy of “do only one thing
    and do it well”, and are super-optimized for many different tasks. [Find](https://linux.die.net/man/1/find),
    [grep](https://linux.die.net/man/1/grep), [sed](https://www.gnu.org/software/sed/manual/sed.html),
    and [awk](https://www.gnu.org/software/gawk/manual/gawk.html) are only some among
    the powerful tools that can interoperate thanks to the Bash’s [pipes and filters
    architecture](https://dev.to/desi109/architectural-styles-by-examples-387b) for
    text files processing.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Bash附带的工具遵循Unix哲学“只做一件事，并做好它”，并且对许多不同的任务进行了超级优化。[Find](https://linux.die.net/man/1/find)、[grep](https://linux.die.net/man/1/grep)、[sed](https://www.gnu.org/software/sed/manual/sed.html)和[awk](https://www.gnu.org/software/gawk/manual/gawk.html)只是一些能够通过Bash的[管道和过滤器架构](https://dev.to/desi109/architectural-styles-by-examples-387b)进行互操作的强大工具，用于文本文件处理。
- en: Recently, I had to perform simple text processing for which bash makes perfect
    sense. I have an input file containing an absolute file path per line, and I have
    to generate an output file where each line is the basename of the corresponding
    path in the input file, with a different extension. In practice, the two files
    are needed as an input to another program that will convert the files mentioned
    in the input file (in wav format) into the files listed in the output file (in
    mp4 format, by adding some video).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，我需要执行简单的文本处理，bash非常适合这个任务。我有一个输入文件，每行包含一个绝对文件路径，我需要生成一个输出文件，每行是输入文件中对应路径的基本名称，并有不同的扩展名。实际上，这两个文件作为输入传递给另一个程序，该程序将把输入文件中提到的文件（wav格式）转换为输出文件中列出的文件（mp4格式，通过添加一些视频）。
- en: 'I could have done it in Python, but bash just look much more practical for
    this task. However, at the end of this story I will show a Python implementation
    for comparison. Then, I rushed to my keyboard and produced the following:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我本可以用Python完成这项任务，但对于这个任务来说，bash看起来更实用。不过，在这个故事的最后，我会展示一个Python实现以供比较。然后，我急忙走到键盘前，完成了以下内容：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The code is correct, but extremely slow. My file was 3 Millions lines long and
    this command would have taken 1 hour to complete. Just to get an idea of the lines
    per second, let me run it on a file with 10000 lines and measure its runtime.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 代码是正确的，但极其慢。我的文件有 300 万行，这个命令需要 1 小时才能完成。为了了解每秒处理的行数，让我在一个包含 10000 行的文件上运行它并测量其运行时间。
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Some clear inefficiencies are the use of cat to start the command, and the
    double use of echo (with nested command calls). They are both IO-heavy operations
    and are then very slow. They can be easily replaced, and since we know that all
    paths in the input file have the same extension, we can also remove `sed` and
    remove the extension using `basename`itself. Then, we run the new command with
    the same file of 10000 lines:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 一些明显的低效之处包括使用 `cat` 启动命令，以及 `echo` 的双重使用（带有嵌套的命令调用）。它们都是 I/O 密集型操作，因此非常慢。它们可以被轻松替换，而且由于我们知道输入文件中的所有路径都具有相同的扩展名，我们还可以去掉
    `sed`，直接使用 `basename` 进行扩展名的移除。然后，我们用相同的 10000 行的文件运行新命令：
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We have some serious improvement here. Removing `cat`only, we get a real time
    right below 13s (relative improvement ~2%), and the rest is done by replacing
    sed and the second echo with simply basename. Unfortunately, it is still quite
    slow. With approximately 1500 lines/s, it would take 2000 seconds, or about 30
    minutes, to complete 3,000,000 lines. Fortunately, we can get a serious boost
    by replacing read. [Read](https://linuxize.com/post/bash-read/) reads a line from
    the standard input and assigns its content to one or multiple variables (it can
    be used easily with tabular data), but it is not needed in our case, since working
    line by line is what any bash command does anyway.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里我们有了显著的改进。仅去掉 `cat`，我们得到了不到 13 秒的实际时间（相对改进 ~2%），其余的通过用 `basename` 替换 `sed`
    和第二个 `echo` 完成。不幸的是，它仍然相当慢。以大约 1500 行/秒的速度完成 3,000,000 行需要 2000 秒，即大约 30 分钟。幸运的是，我们可以通过替换
    `read` 获得显著的提升。[Read](https://linuxize.com/post/bash-read/) 从标准输入读取一行并将其内容分配给一个或多个变量（它可以很容易地与表格数据一起使用），但在我们的情况下并不需要，因为逐行处理是任何
    bash 命令都在做的事情。
- en: Unfortunately, we have to give up the handy basename to extract only the file
    name, but we can replace it with [cut](https://linux.die.net/man/1/cut), which
    can remove pieces of texts according to delimiters, and [rev](https://linux.die.net/man/1/cut),
    which just reverses the character sequence — this is a common trick to extract
    the last field with cut, which is not possible by default.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，我们不得不放弃方便的 `basename` 以仅提取文件名，但我们可以用 [cut](https://linux.die.net/man/1/cut)
    替代它，`cut` 可以根据分隔符删除文本片段，以及 [rev](https://linux.die.net/man/1/cut) ，它只是反转字符序列——这是用
    `cut` 提取最后一个字段的常用技巧，默认情况下这是不可行的。
- en: 'The number of operations performed looks higher than before, but we finally
    get a huge speed-up as we can see from our example toy file:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 执行的操作数看起来比之前更多，但我们最终获得了巨大的加速，如我们在示例玩具文件中看到的：
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: With this new speed of ~910 Klines/second we can process 3,000,000 lines in
    3.3 SECONDS, and corresponds to a speed-up of 606x.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 以 ~910 Klines/秒的新速度，我们可以在 3.3 秒内处理 3,000,000 行，相当于 606 倍的加速。
- en: Most importantly, while the actual numbers depend on the hardware where the
    commands are executed, the relative improvement will be constant among different
    pieces of hardware.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 最重要的是，虽然实际的数字取决于执行命令的硬件，但不同硬件之间的相对改进将保持一致。
- en: A Python Implementation
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python 实现
- en: 'Here we can see an equivalent python implementation for comparison’s sake:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们可以看到一个等效的 Python 实现以供比较：
- en: '[PRE4]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'and now we can measure its time:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以测量它的时间：
- en: '[PRE5]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: And the time is about double the best time we get with bash. It requires writing
    more code but also this code is super fast and probably more easily modifiable
    for many.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 而且这个实现的时间大约是我们用 bash 得到的最佳时间的两倍。它需要编写更多的代码，但这些代码非常快速，而且可能更容易为许多人进行修改。
- en: Conclusion
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Bash comes very in handy for a many data processing tasks when working with
    textual files. It comes with many tools very optimized, but still some are faster
    than others to achieve the same result. The difference may not matter when working
    with short files, but in this article I show that it starts to matter with hundreds
    of thousands, or millions of lines.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Bash 在处理文本文件的许多数据处理任务时非常方便。它配备了许多经过高度优化的工具，但仍有些工具在实现相同结果时比其他工具更快。当处理短文件时，这种差异可能不重要，但在这篇文章中，我展示了当文件有成千上万行或数百万行时，这种差异开始变得重要。
- en: Knowing the performance implications of using our favorite programs can save
    us hours of waiting for our jobs, with huge gains for our productivity. Also,
    we saw that a Python implementation is also very fast for our use case despite
    Python’s fame of being slow. It surely requires more coding but also more flexibility.
    I would surely reach for python for the cases that are too complicated to solve
    with bash.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 了解我们喜欢的程序的性能影响可以节省我们等待工作的时间，并显著提高生产力。此外，我们看到尽管 Python 以慢著称，但在我们的用例中，Python 实现也非常快速。它确实需要更多的编码，但也更灵活。我肯定会选择
    Python 来处理那些用 bash 解决起来过于复杂的情况。
- en: Thanks for reading so far, and happy scripting!
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢你阅读到这里，祝你编程愉快！
- en: More from me
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多我的内容
- en: '[](/without-further-ado-automate-dev-environments-and-build-f2f9bcaaae1e?source=post_page-----d83e4c5adf32--------------------------------)
    [## Without Further Ado: Automate Dev Environments and Build'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 不再拖延：自动化开发环境和构建](https://towardsdatascience.com/without-further-ado-automate-dev-environments-and-build-f2f9bcaaae1e?source=post_page-----d83e4c5adf32--------------------------------)'
- en: Bring joy to your fellow developers by making your software easy to use through
    environment and build automation. With…
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过环境和构建自动化使你的软件易于使用，给你的同事带来快乐。与…
- en: towardsdatascience.com](/without-further-ado-automate-dev-environments-and-build-f2f9bcaaae1e?source=post_page-----d83e4c5adf32--------------------------------)
    [](/data-processing-automation-with-inotifywait-663aba0c560a?source=post_page-----d83e4c5adf32--------------------------------)
    [## Data Processing Automation with inotifywait
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 数据处理自动化与 inotifywait](https://towardsdatascience.com/data-processing-automation-with-inotifywait-663aba0c560a?source=post_page-----d83e4c5adf32--------------------------------)'
- en: How to automate before having a production-ready MLOps platfotm
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何在拥有一个生产就绪的 MLOps 平台之前进行自动化
- en: towardsdatascience.com](/data-processing-automation-with-inotifywait-663aba0c560a?source=post_page-----d83e4c5adf32--------------------------------)
    [](/dynamically-add-arguments-to-argparse-python-patterns-a439121abc39?source=post_page-----d83e4c5adf32--------------------------------)
    [## Dynamically Add Arguments to Argparse | Python Patterns
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 动态添加参数到 Argparse | Python Patterns](https://towardsdatascience.com/data-processing-automation-with-inotifywait-663aba0c560a?source=post_page-----d83e4c5adf32--------------------------------)
    [## 语音增强介绍：第二部分 — 信号表示](https://towardsdatascience.com/introduction-to-speech-enhancement-part-2-signal-representation-ab1deca2fa74?source=post_page-----d83e4c5adf32--------------------------------)'
- en: How to specify different arguments according to the user input using argparse.ArgumentParser.
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何使用 `argparse.ArgumentParser` 根据用户输入指定不同的参数。
- en: 'towardsdatascience.com](/dynamically-add-arguments-to-argparse-python-patterns-a439121abc39?source=post_page-----d83e4c5adf32--------------------------------)
    [](/introduction-to-speech-enhancement-part-2-signal-representation-ab1deca2fa74?source=post_page-----d83e4c5adf32--------------------------------)
    [## Introduction to Speech Enhancement: Part 2 — Signal Representation'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 数据处理自动化与 inotifywait](https://towardsdatascience.com/dynamically-add-arguments-to-argparse-python-patterns-a439121abc39?source=post_page-----d83e4c5adf32--------------------------------)
    [## 语音增强介绍：第二部分 — 信号表示](https://towardsdatascience.com/introduction-to-speech-enhancement-part-2-signal-representation-ab1deca2fa74?source=post_page-----d83e4c5adf32--------------------------------)'
- en: Let’s dive deep into signal representation, Fourier transform, spectra and harmonics.
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 让我们深入探讨信号表示、傅里叶变换、频谱和谐波。
- en: towardsdatascience.com](/introduction-to-speech-enhancement-part-2-signal-representation-ab1deca2fa74?source=post_page-----d83e4c5adf32--------------------------------)
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 语音增强介绍：第二部分 — 信号表示](https://towardsdatascience.com/introduction-to-speech-enhancement-part-2-signal-representation-ab1deca2fa74?source=post_page-----d83e4c5adf32--------------------------------)'
- en: Medium Membership
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Medium 会员
- en: Do you like my writing and are considering subscribing for a Medium Membership
    for having unlimited access to the articles?
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 你喜欢我的写作，并考虑订阅 Medium 会员以获得无限访问文章的权限吗？
- en: If you subscribe through this link you will support me through your subscription
    with no additional cost for you [https://medium.com/@mattiadigangi/membership](https://medium.com/@mattiadigangi/membership)
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你通过这个链接订阅，你将以不增加额外费用的方式支持我 [https://medium.com/@mattiadigangi/membership](https://medium.com/@mattiadigangi/membership)
