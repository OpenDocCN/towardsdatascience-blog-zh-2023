- en: 'Geospatial Data Engineering: Spatial Indexing'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 地理空间数据工程：空间索引
- en: 原文：[https://towardsdatascience.com/geospatial-data-engineering-spatial-indexing-18200ef9160b?source=collection_archive---------0-----------------------#2023-08-31](https://towardsdatascience.com/geospatial-data-engineering-spatial-indexing-18200ef9160b?source=collection_archive---------0-----------------------#2023-08-31)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/geospatial-data-engineering-spatial-indexing-18200ef9160b?source=collection_archive---------0-----------------------#2023-08-31](https://towardsdatascience.com/geospatial-data-engineering-spatial-indexing-18200ef9160b?source=collection_archive---------0-----------------------#2023-08-31)
- en: Optimizing queries, improving runtimes, and geospatial data science applications
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 优化查询、提高运行时间和地理空间数据科学应用
- en: '[](https://deabardhoshi.medium.com/?source=post_page-----18200ef9160b--------------------------------)[![Dea
    Bardhoshi](../Images/14ce0986fc2a4a192797a52ed9908d1e.png)](https://deabardhoshi.medium.com/?source=post_page-----18200ef9160b--------------------------------)[](https://towardsdatascience.com/?source=post_page-----18200ef9160b--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----18200ef9160b--------------------------------)
    [Dea Bardhoshi](https://deabardhoshi.medium.com/?source=post_page-----18200ef9160b--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://deabardhoshi.medium.com/?source=post_page-----18200ef9160b--------------------------------)[![Dea
    Bardhoshi](../Images/14ce0986fc2a4a192797a52ed9908d1e.png)](https://deabardhoshi.medium.com/?source=post_page-----18200ef9160b--------------------------------)[](https://towardsdatascience.com/?source=post_page-----18200ef9160b--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----18200ef9160b--------------------------------)
    [Dea Bardhoshi](https://deabardhoshi.medium.com/?source=post_page-----18200ef9160b--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd61c58ba988e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgeospatial-data-engineering-spatial-indexing-18200ef9160b&user=Dea+Bardhoshi&userId=d61c58ba988e&source=post_page-d61c58ba988e----18200ef9160b---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----18200ef9160b--------------------------------)
    ·6 min read·Aug 31, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F18200ef9160b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgeospatial-data-engineering-spatial-indexing-18200ef9160b&user=Dea+Bardhoshi&userId=d61c58ba988e&source=-----18200ef9160b---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd61c58ba988e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgeospatial-data-engineering-spatial-indexing-18200ef9160b&user=Dea+Bardhoshi&userId=d61c58ba988e&source=post_page-d61c58ba988e----18200ef9160b---------------------post_header-----------)
    在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----18200ef9160b--------------------------------)
    ·6分钟阅读·2023年8月31日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F18200ef9160b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgeospatial-data-engineering-spatial-indexing-18200ef9160b&user=Dea+Bardhoshi&userId=d61c58ba988e&source=-----18200ef9160b---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F18200ef9160b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgeospatial-data-engineering-spatial-indexing-18200ef9160b&source=-----18200ef9160b---------------------bookmark_footer-----------)![](../Images/29fefc0d1aca68839035e1184d404196.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F18200ef9160b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgeospatial-data-engineering-spatial-indexing-18200ef9160b&source=-----18200ef9160b---------------------bookmark_footer-----------)![](../Images/29fefc0d1aca68839035e1184d404196.png)'
- en: Photo by [Tamas Tuzes-Katai](https://unsplash.com/@tamas_tuzeskatai?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Tamas Tuzes-Katai](https://unsplash.com/@tamas_tuzeskatai?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: '**Intro: why is a spatial index useful?**'
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**介绍：空间索引为何有用？**'
- en: In doing geospatial data science work, it is very important to think about optimizing
    the code you are writing. How can you make datasets with hundreds of millions
    of rows aggregate or join faster? This is where concepts such as spatial indices
    come in. In this post, I will talk about how a spatial index gets implemented,
    what its benefits and limitations are, and take a look at Uber’s open source H3
    indexing library for some cool spatial data science applications. Let’s get started!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行地理空间数据科学工作时，优化你编写的代码是非常重要的。如何让拥有数亿行的数据库集合或联接更快？这就是空间索引等概念发挥作用的地方。在这篇文章中，我将讨论空间索引的实现方式，它的好处和局限性，并看看
    Uber 的开源 H3 索引库在一些有趣的空间数据科学应用中的表现。我们开始吧！
- en: 🗺 What’s a spatial index?
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 🗺 什么是空间索引？
- en: 'A regular index is the kind of thing you might find at the end of a book: a
    list of words and where they have shown up in the text. This helps you quickly
    look up any reference to a word you’re interested in within a certain text. Without
    this handy tool, you would need to manually look through every page of your book,
    searching for that one mention you wanted to read about.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 常规索引就像你在书籍末尾找到的内容：一个单词的列表以及这些单词在文本中出现的位置。这帮助你快速查找在特定文本中你感兴趣的单词的任何参考。如果没有这个方便的工具，你将需要手动翻阅书中的每一页，寻找你想阅读的那一个提及。
- en: 'In modern databases, this issue of querying and searching is also very pertinent.
    Indexing often makes looking up data faster than filtering, and you can create
    indices based on a column of interest. For geospatial data in particular, engineers
    often need to look at operations like “intersection” or “is nearby to”. How can
    we make a spatial index so that these operations are as fast as possible? First,
    let’s take a look at some of this geospatial data:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在现代数据库中，查询和搜索的问题也非常相关。索引通常比过滤更快地查找数据，你可以基于感兴趣的列创建索引。对于地理空间数据，工程师们通常需要考虑诸如“交集”或“附近”的操作。我们如何制作一个空间索引，使这些操作尽可能快速？首先，让我们看看一些地理空间数据：
- en: '![](../Images/c982cddb36a9445d0b96d1be3fa1e2a2.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c982cddb36a9445d0b96d1be3fa1e2a2.png)'
- en: Two non-intersecting features (image by author)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 两个不相交的特征（图片来源：作者）
- en: 'Let’s say that we want to run a query to determine if these two shapes are
    intersecting. By construction, spatial databases create their index out of a bounding
    box that contains the geometry:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们想运行一个查询来确定这两个形状是否相交。根据构造，空间数据库创建的索引是由包含几何图形的边界框组成的：
- en: '![](../Images/44bf89146e3a9b186681beea21640257.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/44bf89146e3a9b186681beea21640257.png)'
- en: Making a large bounding box (image by author)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 制作一个大的边界框（图片来源：作者）
- en: 'For answering whether these two features intersect, the database will compare
    whether the two bounding boxes have any area in common. As you can see, this can
    quickly lead to false positives. To fix this issue, spatial databases like PostGIS
    typically partition these large bounding boxes into smaller and smaller ones:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 为了回答这两个特征是否相交，数据库将比较两个边界框是否有任何公共区域。如你所见，这可能会迅速导致假阳性。为了解决这个问题，像 PostGIS 这样的空间数据库通常会将这些大的边界框划分成越来越小的部分：
- en: '![](../Images/7ef73239cf2fb2f4667a8165ed474620.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7ef73239cf2fb2f4667a8165ed474620.png)'
- en: 'Going smaller: making child bounding boxes (image by author)'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 更小的尺寸：制作子边界框（图片来源：作者）
- en: 'These partitions are stored in R-trees. R-trees are a hierarchical data structure:
    they keep track of the large “parent” bounding box, its children, its children’s
    children and so on. Every parent’s bounding box contains its children’s bounding
    boxes:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这些分区存储在 R 树中。R 树是一种层次数据结构：它跟踪大的“父”边界框、它的子节点、子节点的子节点，等等。每个父节点的边界框包含它子节点的边界框：
- en: '![](../Images/a1d9e21d516843ed561c8c5e9e0b2245.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a1d9e21d516843ed561c8c5e9e0b2245.png)'
- en: R-tree visualized (image by author)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: R 树可视化（图片来源：作者）
- en: The operation “intersect” is one of the key operations that benefits from this
    structure. While querying an interesection, the database looks down this tree
    asking “does the current bounding box intersect the feature of interest?”. If
    yes, it looks at that bounding box’s children and asks the same question. As it
    does so, it is able to quickly traverse the tree, skipping the branches that do
    not have an intersection and thus improve the query’s performance. In the end,
    it returns the intersecting geometry as desired.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 操作“交集”是从这种结构中受益的关键操作之一。在查询交集时，数据库会沿着这棵树向下查询，问“当前的边界框是否与感兴趣的特征相交？”。如果是，它会查看该边界框的子节点，并提出相同的问题。通过这种方式，它能够快速遍历树，跳过没有交集的分支，从而提高查询性能。最后，它会返回所需的交集几何图形。
- en: '🧰 In Practice: trying out a spatial index with GeoPandas'
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 🧰 实践中：尝试使用 GeoPandas 的空间索引
- en: Let’s now take a concrete look at what using a regular row-wise procedure vs
    a spatial index looks like. I’ll be using 2 datasets representing NYC’s Census
    Tracts as well as City Facilities (both licensed through Open Data, and available
    [here](https://data.cityofnewyork.us/City-Government/2010-Census-Tracts/fxpq-c8ku)
    and [here](https://data.cityofnewyork.us/City-Government/Facilities-Database-Shapefile/2fpa-bnsx)).
    First, let’s try out the “intersection” operation in GeoPandas on one of the Census
    Tract geometries. ‘Intersection’ in GeoPandas is a row-wise function checking
    each row of the column of interest against our geometry and looking at whether
    they intersect or not.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们具体看看使用常规行级过程与空间索引的不同。我将使用代表纽约市人口普查区和市设施的两个数据集（均通过开放数据许可提供，可在[这里](https://data.cityofnewyork.us/City-Government/2010-Census-Tracts/fxpq-c8ku)和[这里](https://data.cityofnewyork.us/City-Government/Facilities-Database-Shapefile/2fpa-bnsx)获得）。首先，让我们在
    GeoPandas 中尝试对一个人口普查区几何图形进行“交集”操作。在 GeoPandas 中，“交集”是一个逐行函数，检查每一行的列是否与我们的几何图形相交。
- en: 'GeoPandas also offers a spatial index operation that uses R-trees and allows
    us to perform intersections as well. Here is a runtime comparison of the two methods
    over 100 runs of the intersection operation (note: because the default intersection
    function is slow, I only selected around 100 geometries from the original dataset):'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: GeoPandas 还提供了一种使用 R 树的空间索引操作，允许我们执行交集操作。以下是对这两种方法在 100 次交集操作中的运行时比较（注意：由于默认的交集函数较慢，我只选择了原始数据集中的大约
    100 个几何图形）：
- en: '![](../Images/0569dd39053e6799e0c77a2d9b3c0b72.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0569dd39053e6799e0c77a2d9b3c0b72.png)'
- en: 💨 How much faster is a spatial index? (image by author)
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 💨 空间索引快了多少？（图片由作者提供）
- en: 'As you can see, the spatial index approach offered much improved performance
    over the vanilla intersection method. In fact, here are the 95% confidence intervals
    for the runtimes of each:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，空间索引方法相比普通的交集方法提供了显著的性能提升。实际上，这里是每种方法运行时间的 95% 置信区间：
- en: '![](../Images/c2db49b0dc45f54338391bf7ce0cb757.png)![](../Images/5376d53925f26a635b891b3d8d775adb.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c2db49b0dc45f54338391bf7ce0cb757.png)![](../Images/5376d53925f26a635b891b3d8d775adb.png)'
- en: Great! Then, why would we ever not want to use a spatial indexing? Are there
    cases when it offers no benefits? Well, yes. Some of these limitations are due
    to the way spatial indexing stores the leaves in the data. It turns out that the
    way the raw data is distributed affects how bounding boxes are placed into the
    R-tree. Specifically, if a large chunk of the data is concentrated in the same
    geographic space, they will tend to share the same parents and thus be grouped
    together in the same branches. This can lead to skewed trees that don’t offer
    much optimization when querying.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 太好了！那么，为什么我们有时不想使用空间索引呢？是否有些情况下它没有任何好处？确实有。这些限制中的一些是由于空间索引存储数据叶子的方式。结果表明，原始数据的分布方式会影响边界框在
    R 树中的位置。具体来说，如果大量数据集中在同一地理空间，它们往往会共享相同的父节点，从而被分组在同一分支中。这可能导致树的不均衡，从而在查询时无法提供太多优化。
- en: 💻 What do other spatial indices look like?
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 💻 其他空间索引是什么样的？
- en: Other companies have also adapted their own spatial indices. Uber uses H3, a
    hexagonal hierarchical indexing system that partitions the world into equal-area
    hexagons. Hexagons have many benefits when modeling people’s movement around a
    city or for problems like calculating a radius. Geospatial data is bucketed into
    these hexagons, which serve as the company’s main unit of analysis. The grid is
    constructed by overlaying 122 hexagonal cells onto an icosahedron-map projection,
    and it supports a wide range of functions including aggregation, joining and machine
    learning applications.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 其他公司也适应了自己的空间索引。Uber 使用 H3，这是一个将世界划分为等面积六边形的分层索引系统。六边形在建模人们在城市中的移动或解决如计算半径等问题时具有许多优点。地理空间数据被划分到这些六边形中，作为公司的主要分析单位。网格是通过将
    122 个六边形单元覆盖到二十面体地图投影上来构建的，支持包括聚合、连接和机器学习应用在内的广泛功能。
- en: 'This system as well as a lot of its functionality is open-source and available
    on GitHub for analysis. One of the functions of the H3 API is converting latitude
    and longitude points into strings representing a unique Hexagon, according to
    the specified resolution. Let’s do this operation over the entire Facilities Database
    and also convert the hexagon strings into polygons:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这个系统以及它的许多功能是开源的，可以在 GitHub 上进行分析。H3 API 的一个功能是将经纬度点转换为表示唯一六边形的字符串，根据指定的分辨率。我们来对整个设施数据库进行这个操作，并将六边形字符串转换为多边形：
- en: 'One question that often comes up in these spatial data analysis projects is
    how many projects in the hexagons are categorized by some column, say “agency”.
    Luckily, this is very easy to calculate and visualize now that we have the data
    bucketed into H3 hexagons:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些空间数据分析项目中，一个常见的问题是六边形中的项目有多少被某个列，比如“机构”所分类。幸运的是，现在我们已经将数据划分到 H3 六边形中，这很容易计算和可视化：
- en: '![](../Images/a45b3cfe9d8f6df4a64ed5e9983db703.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a45b3cfe9d8f6df4a64ed5e9983db703.png)'
- en: Which agencies have the most facilities? (image by author)
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 哪些机构有最多的设施？（图片来源于作者）
- en: In this case, you can see the DCAS (Department of Citywide Administrative Services)
    and PARKS (Department of Parks and Recreation) are the two agencies with the most
    facilities per each hexagon. This likely makes sense as these two agencies would
    have more physical facilities (think admin buildings or recreational areas like
    parks).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，你可以看到 DCAS（城市行政服务部）和 PARKS（公园与娱乐部）是每个六边形中设施最多的两个机构。这很有道理，因为这两个机构通常会有更多的实体设施（比如行政建筑或像公园这样的休闲区域）。
- en: Conclusion
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: 'Spatial indices, as you saw, are very useful optimization tools for geospatial
    data science and analysis. In the case of a simple intersection query, using a
    spatial index dramatically improved the performance of the query compared to the
    standard GeoPandas intersection function. There were many nuances to how this
    index is implemented, as well as its implications, like having huge branches of
    clustered data. As we saw, companies have developed their own solutions: one example
    is Uber’s H3 open-source index, which allows us to answer various spatial analysis
    questions. While I demonstrated an agency-based facilities count operation, H3
    provides a baseline for other more complex machine learning applications.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，空间索引是地理空间数据科学和分析中非常有用的优化工具。在简单的交集查询中，使用空间索引显著提高了查询性能，相比于标准的 GeoPandas 交集函数。这种索引的实现和它的影响有许多细微之处，比如拥有巨大的数据集群分支。如我们所见，各公司已经开发了自己的解决方案：一个例子是
    Uber 的 H3 开源索引，它允许我们回答各种空间分析问题。虽然我演示了基于机构的设施计数操作，但 H3 为其他更复杂的机器学习应用提供了基准。
- en: If you like this kind of content but want to learn about urban planning tech
    more broadly, I also write a newsletter called [“The Zoned Out Chronicles”](https://deabardhoshi.substack.com).
    I encourage you to check it out!
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢这类内容，但想要更广泛地了解城市规划技术，我也写了一份名为[“The Zoned Out Chronicles”](https://deabardhoshi.substack.com)的通讯。我鼓励你去看看！
- en: Thanks for reading!
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读！
