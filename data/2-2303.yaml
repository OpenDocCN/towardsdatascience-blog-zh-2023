- en: Visualizing Geospatial Network Graphs using Basemap and mplleaflet
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Basemap 和 mplleaflet 可视化地理空间网络图
- en: 原文：[https://towardsdatascience.com/visualizing-geospatial-network-graphs-using-basemap-and-mplleaflet-76a7f3d0c923](https://towardsdatascience.com/visualizing-geospatial-network-graphs-using-basemap-and-mplleaflet-76a7f3d0c923)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/visualizing-geospatial-network-graphs-using-basemap-and-mplleaflet-76a7f3d0c923](https://towardsdatascience.com/visualizing-geospatial-network-graphs-using-basemap-and-mplleaflet-76a7f3d0c923)
- en: Learn how to plot network graphs on maps
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 学习如何在地图上绘制网络图
- en: '[](https://weimenglee.medium.com/?source=post_page-----76a7f3d0c923--------------------------------)[![Wei-Meng
    Lee](../Images/10fc13e8a6858502d6a7b89fcaad7a10.png)](https://weimenglee.medium.com/?source=post_page-----76a7f3d0c923--------------------------------)[](https://towardsdatascience.com/?source=post_page-----76a7f3d0c923--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----76a7f3d0c923--------------------------------)
    [Wei-Meng Lee](https://weimenglee.medium.com/?source=post_page-----76a7f3d0c923--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[![Wei-Meng Lee](../Images/10fc13e8a6858502d6a7b89fcaad7a10.png)](https://weimenglee.medium.com/?source=post_page-----76a7f3d0c923--------------------------------)
    [![Towards Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----76a7f3d0c923--------------------------------)
    [Wei-Meng Lee](https://weimenglee.medium.com/?source=post_page-----76a7f3d0c923--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----76a7f3d0c923--------------------------------)
    ·9 min read·Mar 6, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----76a7f3d0c923--------------------------------)
    ·阅读时间 9 分钟·2023年3月6日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/2faf32825e4db3335fc9b1f3723c3e48.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2faf32825e4db3335fc9b1f3723c3e48.png)'
- en: Photo by [Z](https://unsplash.com/@dead____artist?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Z](https://unsplash.com/@dead____artist?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: In my previous articles on network graphs, I showed you the basics of plotting
    directed and undirected graphs using the NetworkX and pyvis packages. In this
    article, I will use the flights delay dataset to visualize the flight paths between
    the different airports, and specifically show you how to visualize them using
    a geospatial network graph.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在我之前关于网络图的文章中，我展示了如何使用 NetworkX 和 pyvis 包绘制有向图和无向图。在本文中，我将使用航班延误数据集来可视化不同机场之间的航线，特别是展示如何使用地理空间网络图来进行可视化。
- en: '[](/plotting-network-graphs-using-python-bc62f0d93b3f?source=post_page-----76a7f3d0c923--------------------------------)
    [## Plotting Network Graphs using Python'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 使用 Python 绘制网络图](https://towardsdatascience.com/plotting-network-graphs-using-python-bc62f0d93b3f?source=post_page-----76a7f3d0c923--------------------------------)'
- en: Learn how to use the NetworkX package to visualize complex networks
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 学习如何使用 NetworkX 包来可视化复杂的网络
- en: towardsdatascience.com](/plotting-network-graphs-using-python-bc62f0d93b3f?source=post_page-----76a7f3d0c923--------------------------------)
    [](/building-interactive-network-graphs-using-pyvis-5b8e6e25cf64?source=post_page-----76a7f3d0c923--------------------------------)
    [## Building Interactive Network Graphs using pyvis
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 使用 pyvis 构建互动网络图](https://towardsdatascience.com/plotting-network-graphs-using-python-bc62f0d93b3f?source=post_page-----76a7f3d0c923--------------------------------)'
- en: Learn how to make your network graphs come to life
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 学习如何让你的网络图生动起来
- en: towardsdatascience.com](/building-interactive-network-graphs-using-pyvis-5b8e6e25cf64?source=post_page-----76a7f3d0c923--------------------------------)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 使用 pyvis 构建互动网络图](https://towardsdatascience.com/building-interactive-network-graphs-using-pyvis-5b8e6e25cf64?source=post_page-----76a7f3d0c923--------------------------------)'
- en: Using the Flights Delay Dataset
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用航班延误数据集
- en: As usual, I am going to use the **2015 Flights Delay** dataset.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 像往常一样，我将使用 **2015 年航班延误** 数据集。
- en: '**2015 Flights Delay Dataset** (*airports.csv*). *Source*: [https://www.kaggle.com/datasets/usdot/flight-delays](https://www.kaggle.com/datasets/usdot/flight-delays).
    *Licensing* — [CC0: Public Domain](https://creativecommons.org/publicdomain/zero/1.0/)'
  id: totrans-16
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**2015 年航班延误数据集**（*airports.csv*）。*来源*：[https://www.kaggle.com/datasets/usdot/flight-delays](https://www.kaggle.com/datasets/usdot/flight-delays)。*许可证*
    — [CC0: 公共领域](https://creativecommons.org/publicdomain/zero/1.0/)'
- en: 'There are two files from this dataset that I will be using:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我将使用这个数据集中的两个文件：
- en: '**flights.csv**'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**flights.csv**'
- en: '**airports.csv**'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**airports.csv**'
- en: 'First, let’s load the **flights.csv** file into a Pandas DataFrame:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们将 **flights.csv** 文件加载到 Pandas DataFrame 中：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We don’t have to load all the columns in this file (it is a large file!) —
    three columns are sufficient for this article. You should see the dataframe as
    follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不需要加载文件中的所有列（文件很大！）——三列足够用于这篇文章。你应该能看到如下的数据框：
- en: '![](../Images/0d492d9b649d1b369fe5f4b92144d786.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0d492d9b649d1b369fe5f4b92144d786.png)'
- en: All images by author
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 所有图片均由作者提供
- en: 'Once the dataframe is loaded, I will go ahead and count the numbers of flights
    from one airport to another:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦数据框加载完毕，我将继续统计从一个机场到另一个机场的航班数量：
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The resultant output is as shown:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 结果输出如图所示：
- en: '![](../Images/82fa5f26956bd5de93a25db1b84c5cf7.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/82fa5f26956bd5de93a25db1b84c5cf7.png)'
- en: 'As there are more than 4500 combinations of flights, let’s only select the
    top 800 combinations:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 由于航班组合超过4500个，让我们只选择前800个组合：
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/96b9460325109e7d654f7afb49f7d2e2.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/96b9460325109e7d654f7afb49f7d2e2.png)'
- en: Creating the Graph
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建图形
- en: 'The NetworkX package has a function called `from_pandas_edgelist()` that you
    can use to create an edge list from a Pandas DataFrame. It returns a graph object:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: NetworkX包有一个叫做 `from_pandas_edgelist()` 的函数，你可以用来从Pandas DataFrame创建一个边列表。它返回一个图对象：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In the above statement, `G` is a directed graph (`networkx.classes.digraph.DiGraph`).
    If you want to create an undirected graph (`networkx.classes.graph.Graph`), simply
    leave out the `creating_using` parameter.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述语句中，`G` 是一个有向图（`networkx.classes.digraph.DiGraph`）。如果你想创建一个无向图（`networkx.classes.graph.Graph`），只需省略
    `creating_using` 参数。
- en: The graph now contains all the nodes and edges which it derives from the supplied
    dataframe. In our case, the nodes are all the airports from the **ORIGIN_AIRPORT**
    and **DESTINATION_AIRPORT** columns.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在图包含了从提供的数据框中得出的所有节点和边。在我们的案例中，节点是来自**ORIGIN_AIRPORT**和**DESTINATION_AIRPORT**列的所有机场。
- en: 'You can now examine the nodes in the graph:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以检查图中的节点：
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You should see the following:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该能看到如下内容：
- en: '[PRE5]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Likewise, you can examine the edges:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，你可以检查边：
- en: '[PRE6]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Here is a partial list of edges returned:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这是返回的部分边列表：
- en: '[PRE7]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Plotting the Graph
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 绘制图形
- en: 'You can now plot the network graph showing the top 800 flights between airports:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以绘制显示前800个机场之间航班的网络图：
- en: '[PRE8]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The network graph looks like this:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 网络图看起来是这样的：
- en: '![](../Images/4f004e88cde7387275ea7012484302ce.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4f004e88cde7387275ea7012484302ce.png)'
- en: 'Argh! Obviously we had too many airports and this makes the network graph really
    messy. Let’s reduce the number of airports by changing the number of rows we fetch
    from the dataframe to 140:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 哎呀！显然我们有太多机场，这让网络图变得非常混乱。让我们通过将从数据框中提取的行数减少到140来减少机场数量：
- en: '[PRE9]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The network graph now looks like this:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在网络图看起来是这样的：
- en: '![](../Images/913523479496b1ff644ddd7a9de14105.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/913523479496b1ff644ddd7a9de14105.png)'
- en: This is now a much cleaner graph!
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这现在是一个更干净的图！
- en: Geospatial Mapping
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 地理空间映射
- en: Our dataset contains geospatial data and it would not do justice to our dataset
    if we do not map the data onto a map!
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的数据集包含地理空间数据，如果不把数据映射到地图上，就无法充分利用我们的数据集！
- en: 'In this section, I will show how you can plot the network graph onto a map.
    I will be using the following packages:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我将展示如何将网络图绘制到地图上。我将使用以下包：
- en: '**basemap**'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**basemap**'
- en: '**mplleaflet**'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**mplleaflet**'
- en: Installing basemap
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装basemap
- en: The first map that I will be using is **basemap**.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我将使用的第一个地图是**basemap**。
- en: Basemap is a matplotlib extension that is very useful for creating maps in Python.
  id: totrans-62
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Basemap 是一个非常有用的 matplotlib 扩展，适用于在 Python 中创建地图。
- en: 'To install basemap, use the `pip` command:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装basemap，请使用 `pip` 命令：
- en: '[PRE10]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'If you are using Windows, the installation should be uneventful. However, on
    the Mac, you may get some error messages regarding missing **geos** library. To
    fix this, perform the following steps:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是Windows，安装应该不会有问题。然而，在Mac上，你可能会收到一些关于缺失**geos**库的错误信息。要解决这个问题，请执行以下步骤：
- en: '[PRE11]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Go to [https://brew.sh/](https://brew.sh/) if you do not have Homebrew installed.
  id: totrans-67
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果你还没有安装Homebrew，请访问 [https://brew.sh/](https://brew.sh/)。
- en: 'Observe where **geos** is installed in. For my machine, **geos** is installed
    in **/opt/homebrew/Cellar/geos/3.11.1**. Next, type the following command in Terminal
    and set the directory to point to where **geos** is installed in:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 观察**geos**的安装位置。对于我的机器，**geos**安装在**/opt/homebrew/Cellar/geos/3.11.1**。接下来，在终端中输入以下命令，将目录指向**geos**的安装位置：
- en: '[PRE12]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Finally, restart your Jupyter Notebook. Basemap should now be installed correctly.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，重新启动你的 Jupyter Notebook。Basemap 应该现在已正确安装。
- en: Loading the airport locations
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加载机场位置
- en: 'In order to plot the locations of the airports on a map, you need the latitude
    and longitude of each airport. Fortunately, this is already available in the **airports.csv**
    file:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在地图上绘制机场的位置，你需要每个机场的纬度和经度。幸运的是，这已经在**airports.csv**文件中提供：
- en: '[PRE13]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'This CSV file contains the IATA_CODE of all the airports and their corresponding
    latitudes and longitudes:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这个CSV文件包含了所有机场的IATA_CODE以及它们对应的纬度和经度：
- en: '![](../Images/2b5da65f6690445627e30801d021f8f4.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2b5da65f6690445627e30801d021f8f4.png)'
- en: 'However, there is one thing you need to be careful here. There are three airports
    that have no location information. You can verify this using the following statements:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，有一件事需要注意。还有三个机场没有位置信息。你可以通过以下语句验证这一点：
- en: '[PRE14]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'You can now see that the following airports have no location details — **ECP**,
    **PBG**, and **UST**:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以看到以下机场没有位置信息——**ECP**、**PBG**和**UST**：
- en: '![](../Images/92e22ec74a19927976408cea11f45428.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/92e22ec74a19927976408cea11f45428.png)'
- en: 'There are two ways to solve this:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种解决办法：
- en: Delete all the airports with no location information, or
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除所有没有位置信息的机场，或者
- en: Supply the location information for the three airports
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为这三个机场提供位置信息
- en: 'We shall do the latter by filling in the missing location information:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过填写缺失的位置信息来完成后者：
- en: '[PRE15]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Plotting the base map
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绘制基础地图
- en: 'We are now ready to plot the basemap:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在准备绘制基础地图：
- en: '[PRE16]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The above code snippet displays the basemap using the Mercator projection (`merc`).
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码片段使用墨卡托投影（`merc`）显示基础地图。
- en: 'For more details of configuring basemap, see: [https://basemaptutorial.readthedocs.io/en/latest/](https://basemaptutorial.readthedocs.io/en/latest/)'
  id: totrans-89
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 有关配置基础地图的更多详细信息，请参见：[https://basemaptutorial.readthedocs.io/en/latest/](https://basemaptutorial.readthedocs.io/en/latest/)
- en: 'In order to display the airports location on basemap, you need to convert the
    latitute, longitude into x and y map-projection coordinates:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在基础地图上显示机场位置，你需要将纬度、经度转换为x和y地图投影坐标：
- en: '[PRE17]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Next, we need to create a dictionary in the following format: `{IATA_CODE:
    (x,y)}`. You can do so using the following statements:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '接下来，我们需要创建一个如下格式的字典：`{IATA_CODE: (x,y)}`。你可以使用以下语句来完成：'
- en: '[PRE18]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The `pos` variable now looks like this:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '`pos`变量现在看起来是这样的：'
- en: '[PRE19]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Drawing the nodes, labels, and edges
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绘制节点、标签和边缘
- en: 'With the x and y map-projection coordinates obtained, you can now start to
    plot the network graph onto the basemap:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 获取到x和y地图投影坐标后，你现在可以开始将网络图绘制到基础地图上：
- en: '[PRE20]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The above code snippet draws the nodes, labels, and edges onto the basemap:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码片段将节点、标签和边缘绘制到基础地图上：
- en: '![](../Images/2abc5a20a8b8788448f4db0b1318e038.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2abc5a20a8b8788448f4db0b1318e038.png)'
- en: 'If you try to plot the map using the Orthographic (`ortho`) projection:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你尝试使用正射投影（`ortho`）绘制地图：
- en: '[PRE21]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The map will now look like this:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 地图现在看起来是这样的：
- en: '![](../Images/4db07d46e47c137c47cadc48575ff279.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4db07d46e47c137c47cadc48575ff279.png)'
- en: Cool, isn’t it!
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 很酷，对吧！
- en: Plotting using mplleaflet
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用mplleaflet进行绘制
- en: While you can plot the network graph using basemap, the greatest drawback is
    that you can’t really interact with it. It would be useful to be able to pan the
    map to examine each airport in more details. This is where **mplleaftlet** comes
    in.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然你可以使用基础地图绘制网络图，但最大的缺点是你无法真正与其互动。能够平移地图以更详细地检查每个机场将是很有用的。这就是**mplleaflet**的用武之地。
- en: mplleaflet is a Python library that converts a matplotlib plot into a webpage
    containing a pannable, zoomable Leaflet map. You can embed the Leaflet map in
    your Jupyter Notebook.
  id: totrans-108
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: mplleaflet是一个Python库，它将matplotlib图转换为包含可平移、缩放的Leaflet地图的网页。你可以在Jupyter Notebook中嵌入Leaflet地图。
- en: 'Let’s first prepare the locations for each airport by converting all the locations
    into a dictionary:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先通过将所有位置转换为字典来准备每个机场的位置：
- en: '[PRE22]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The `pos` variable is now a dictionary of the following format: `{ IATA_CODE:
    [LONGITUDE, LATITUDE]}`:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '`pos`变量现在是如下格式的字典：`{ IATA_CODE: [LONGITUDE, LATITUDE]}`：'
- en: '[PRE23]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'You can now draw the nodes and edges on the `mplleaflet` map:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以在`mplleaflet`地图上绘制节点和边缘：
- en: '[PRE24]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The size of each node is proportional to the number of flights arriving at
    the airport. The map now shows the network graph:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 每个节点的大小与到达机场的航班数量成比例。地图现在显示了网络图：
- en: '![](../Images/c6c3da89c77984416a18f0f72563f33e.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c6c3da89c77984416a18f0f72563f33e.png)'
- en: 'If you get an error like “AttributeError: ‘XAxis’ object has no attribute ‘_gridOnMajor’”,
    you may need to downgrade the version of matplotlib by using the `pip` command:
    `pip install matplotlib==3.3.2`.'
  id: totrans-117
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '如果你遇到像“AttributeError: ‘XAxis’ object has no attribute ‘_gridOnMajor’”这样的错误，你可能需要使用`pip`命令降级matplotlib版本：`pip
    install matplotlib==3.3.2`。'
- en: 'You can zoom into the map as well as pan it:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以缩放地图以及平移地图：
- en: '![](../Images/5ec1ef521dfec58613dbe29aa1c8e1e0.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5ec1ef521dfec58613dbe29aa1c8e1e0.png)'
- en: 'If you remove the earlier part of the code where we selected only the top 140
    flights combination:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你删除代码的早期部分，其中我们仅选择了前140个航班组合：
- en: '[PRE25]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'This is how the map will look like with all the airports displayed:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是显示所有机场后的地图样子：
- en: '![](../Images/b7b8c2fea00b82884e5c2df57d2ccb34.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b7b8c2fea00b82884e5c2df57d2ccb34.png)'
- en: '**If you like reading my articles and that it helped your career/study, please
    consider signing up as a Medium member. It is $5 a month, and it gives you unlimited
    access to all the articles (including mine) on Medium. If you sign up using the
    following link, I will earn a small commission (at no additional cost to you).
    Your support means that I will be able to devote more time on writing articles
    like this.**'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果你喜欢阅读我的文章，并且这些文章对你的职业/学习有所帮助，请考虑注册成为Medium会员。每月费用为5美元，它可以让你无限制地访问Medium上的所有文章（包括我的文章）。如果你通过以下链接注册，我将获得一小笔佣金（对你没有额外费用）。你的支持意味着我可以花更多时间写像这样的文章。**'
- en: '[](https://weimenglee.medium.com/membership?source=post_page-----76a7f3d0c923--------------------------------)
    [## Join Medium with my referral link — Wei-Meng Lee'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://weimenglee.medium.com/membership?source=post_page-----76a7f3d0c923--------------------------------)
    [## 使用我的推荐链接加入Medium — Wei-Meng Lee'
- en: Read every story from Wei-Meng Lee (and thousands of other writers on Medium).
    Your membership fee directly supports…
  id: totrans-126
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阅读Wei-Meng Lee（以及Medium上成千上万的其他作者）的每一篇故事。你的会员费用直接支持…
- en: weimenglee.medium.com](https://weimenglee.medium.com/membership?source=post_page-----76a7f3d0c923--------------------------------)
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: weimenglee.medium.com](https://weimenglee.medium.com/membership?source=post_page-----76a7f3d0c923--------------------------------)
- en: Summary
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: I hope you have enjoyed trying out the code in this article! For drawing the
    network graph on the **basemap**, the main thing you need to do is to convert
    the latitude and longitude into a dictionary of map-projection coordinates, while
    for the **mplleaflet** map, you need to put the latitudes and longitudes into
    a dictionary. The **basemap** allows you to experiment with the different types
    of projections (such as Mercator, Orthographic, and more), but the main drawback
    is that it is not interactive. On the other hand, **mplleaflet** allows you to
    interact with the map, but it does not support projections like **basemap** does.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你在尝试本文中的代码时感到愉快！为了在**basemap**上绘制网络图，你需要做的主要工作是将纬度和经度转换为地图投影坐标的字典，而对于**mplleaflet**地图，你需要将纬度和经度放入字典中。**basemap**允许你尝试不同类型的投影（如墨卡托投影、正射投影等），但主要的缺点是它不具备交互性。另一方面，**mplleaflet**允许你与地图进行交互，但它不支持像**basemap**那样的投影。
