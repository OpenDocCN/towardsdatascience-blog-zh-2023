- en: How Apollo 8 Won the Moon Race
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 《阿波罗8号如何赢得月球竞赛》
- en: 原文：[https://towardsdatascience.com/how-apollo-8-won-the-moon-race-829f14b4b6e1](https://towardsdatascience.com/how-apollo-8-won-the-moon-race-829f14b4b6e1)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-apollo-8-won-the-moon-race-829f14b4b6e1](https://towardsdatascience.com/how-apollo-8-won-the-moon-race-829f14b4b6e1)
- en: Quick Success Data Science
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 快速成功的数据科学
- en: Simulating the free-return trajectory with Python
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Python模拟自由返回轨迹
- en: '[](https://medium.com/@lee_vaughan?source=post_page-----829f14b4b6e1--------------------------------)[![Lee
    Vaughan](../Images/9f6b90bb76102f438ab0b9a4a62ffa3f.png)](https://medium.com/@lee_vaughan?source=post_page-----829f14b4b6e1--------------------------------)[](https://towardsdatascience.com/?source=post_page-----829f14b4b6e1--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----829f14b4b6e1--------------------------------)
    [Lee Vaughan](https://medium.com/@lee_vaughan?source=post_page-----829f14b4b6e1--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@lee_vaughan?source=post_page-----829f14b4b6e1--------------------------------)[![李·沃恩](../Images/9f6b90bb76102f438ab0b9a4a62ffa3f.png)](https://medium.com/@lee_vaughan?source=post_page-----829f14b4b6e1--------------------------------)[](https://towardsdatascience.com/?source=post_page-----829f14b4b6e1--------------------------------)[![走向数据科学](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----829f14b4b6e1--------------------------------)
    [李·沃恩](https://medium.com/@lee_vaughan?source=post_page-----829f14b4b6e1--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----829f14b4b6e1--------------------------------)
    ·10 min read·Nov 21, 2023
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [走向数据科学](https://towardsdatascience.com/?source=post_page-----829f14b4b6e1--------------------------------)
    ·阅读时长10分钟·2023年11月21日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/5af2feeda610a3cfed8107e9bd3afaa8.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5af2feeda610a3cfed8107e9bd3afaa8.png)'
- en: “Earthrise” by Apollo 8 astronaut Bill Anders (NASA)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: “地球升起”由阿波罗8号宇航员比尔·安德斯（NASA）拍摄
- en: Fifty-five years ago this December, the Apollo 8 crew became the first humans
    to leave Earth’s sphere of influence and travel to another celestial body. This
    month, Frank Boorman, the commander of that mission, passed away at age 95\. To
    remember this historic event and its distinguished crew, I’ll review a computer
    simulation of the Apollo 8 flight path. Simulations like this are useful for mission
    planning, as teaching aids, and for consumption by the press and general public.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 五十五年前的今年12月，阿波罗8号的机组人员成为首批离开地球引力范围、前往其他天体的人。本月，那次任务的指挥官弗兰克·博曼在95岁时去世。为了纪念这一历史事件及其杰出的机组人员，我将回顾阿波罗8号飞行路径的计算机模拟。这样的模拟对于任务规划、教学辅助手段以及媒体和公众的传播都是非常有用的。
- en: Why was Apollo 8 so Important?
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么阿波罗8号如此重要？
- en: In the summer of 1968, America was losing the space race. The Soviet Zond spacecraft
    appeared moon-ready, the CIA had photographed a giant Soviet N-1 rocket sitting
    on its launch pad, and the Americans’ troubled Apollo program still needed three
    more test flights.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在1968年夏季，美国在太空竞赛中处于劣势。苏联的Zond飞船看起来已准备好前往月球，CIA拍到了停在发射台上的巨大苏联N-1火箭，而美国陷入困境的阿波罗计划仍需进行三次测试飞行。
- en: But in August of that year, NASA manager George Low had an audacious idea. *Let’s
    go to the moon now*. Instead of more tests in Earth’s orbit, circle the moon in
    December and let *that* be the test!
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 但在那年的8月，NASA的经理乔治·洛提出了一个大胆的想法。*现在就去月球*。与其在地球轨道上进行更多测试，不如在12月绕月飞行，让*这*成为测试！
- en: At that moment, the space race was essentially over. Less than a year later,
    the Soviets had capitulated, and Neil Armstrong had taken his great leap for all
    mankind.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在那个时刻，太空竞赛实际上已经结束。不到一年后，苏联就已经投降，尼尔·阿姆斯特朗完成了他对全人类的伟大飞跃。
- en: The decision to take the Apollo 8 spacecraft to the moon was hardly trivial.
    In 1967, three men had died in the Apollo 1 capsule, and multiple unmanned missions
    had blown up or otherwise failed.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 决定将阿波罗8号飞船送上月球并非易事。1967年，阿波罗1号的舱内三名宇航员遇难，多次无人驾驶任务也发生了爆炸或其他失败。
- en: Against this backdrop and with so much at stake, everything hinged on the concept
    of the *free return trajectory*. The mission was designed so that if the service
    module engine failed to fire, the ship would simply swing around the moon and
    return to the Earth like a boomerang. The elegant beauty of this concept was even
    incorporated into the official mission patch.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种背景下，且事关重大，一切都取决于*自由返回轨迹*的概念。任务设计如此，以便如果服务模块引擎未能点火，飞船将简单地绕月球一圈，像回旋镖一样返回地球。这个概念的优雅之美甚至被融入了官方任务徽章中。
- en: '![](../Images/68968930ebc9d71d6ac6d60cb636cd72.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/68968930ebc9d71d6ac6d60cb636cd72.png)'
- en: Apollo 8 Mission Patch (NASA, CC BY-SA 4.0, via Wikimedia Commons)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 阿波罗8号任务徽章（NASA，CC BY-SA 4.0，来自维基媒体共享资源）
- en: In this article, we’ll explore the free-return trajectory using a computer simulation
    built with the Python programming language. Although not necessary, if you want
    to play along with the simulation as you read, you can download the source code
    and supporting files from this [GitHub repository](https://github.com/rlvaugh/Real_World_Python/tree/master/Chapter_6).
    You’ll need the files *apollo_8_free_return.py*, *earth_100x100.gif*, and *moon_27x27.gif*.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将使用用Python编程语言构建的计算机模拟来探讨自由返回轨道。虽然不是必需的，如果你想在阅读过程中参与模拟，可以从这个[GitHub 仓库](https://github.com/rlvaugh/Real_World_Python/tree/master/Chapter_6)下载源代码和支持文件。你将需要文件*apollo_8_free_return.py*、*earth_100x100.gif*和*moon_27x27.gif*。
- en: Understanding the Apollo 8 Mission
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解阿波罗8号任务
- en: The goal of the Apollo 8 mission was merely to *circle* the moon, so there was
    no need to take a lunar lander component. The astronauts traveled in the command
    and service modules, collectively known as the CSM.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 阿波罗8号任务的目标仅仅是*绕月*，因此不需要带上登月舱组件。宇航员们乘坐的是指令舱和服务舱，这两个部分合称为CSM。
- en: '![](../Images/b7648ecb5d3fbccabe4ba5c0be772a99.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b7648ecb5d3fbccabe4ba5c0be772a99.png)'
- en: 'The Apollo command and service modules (Source: Real-world Python)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 阿波罗指令舱和服务舱（来源：Real-world Python）
- en: In the fall of 1968, the CSM engine had been tested in the earth’s orbit only,
    and there were legitimate concerns about its reliability. To orbit the moon, the
    engine would have to fire twice, once to slow the spacecraft to enter lunar orbit
    and then again to leave orbit.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在1968年秋季，CSM引擎仅在地球轨道中经过测试，对其可靠性存在合理的担忧。要绕月球运行，引擎必须点火两次，一次是减速使航天器进入月球轨道，再一次是离开轨道。
- en: With the free-return trajectory, if the first maneuver failed, the astronauts
    could still coast home. As it turned out, the engine fired perfectly both times,
    and Apollo 8 orbited the moon 10 times. (The ill-fated Apollo 13, however, made
    great use of its free-return trajectory!)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 通过自由返回轨道，如果第一次机动失败，宇航员仍然可以顺利返回家园。事实证明，引擎在两次点火时都表现完美，阿波罗8号绕月球运行了10圈。（不过，命运多舛的阿波罗13号却充分利用了其自由返回轨道！）
- en: The Free Return Trajectory
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自由返回轨道
- en: While calculating a free-return trajectory requires a lot of intense mathematics
    (it *is* rocket science, after all), you can still use a few simplified parameters
    to diagram one in two dimensions, as shown below.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管计算自由返回轨道需要大量复杂的数学运算（毕竟*这是*火箭科学），但你仍然可以使用一些简化的参数在二维图中绘制，如下所示。
- en: '![](../Images/3152073545a3d188139dffbb0d2eb12f.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3152073545a3d188139dffbb0d2eb12f.png)'
- en: 'The free-return trajectory (not to scale) (Source: Real-world Python)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 自由返回轨道（不按比例缩放）（来源：Real-world Python）
- en: 'To simulate the free return in 2D we need a few key values: the starting position
    of the CSM (R₀), the velocity and orientation of the CSM (V₀), and the phase angle
    between the CSM and the moon (gamma₀). The phase angle, also called the *lead*
    angle, is the change in the orbital time position of the CSM required to get from
    a starting position to a final position.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在二维中模拟自由返回，我们需要几个关键值：CSM的起始位置（R₀）、CSM的速度和方向（V₀），以及CSM与月球之间的相位角（gamma₀）。相位角，也称为*引导*角，是从起始位置到最终位置所需的CSM轨道时间位置的变化。
- en: The translunar injection velocity (V₀) is a propulsive maneuver used to set
    the CSM on a trajectory to the moon. It’s achieved from a parking orbit around
    the earth, where the spacecraft performs internal checks and waits until the phase
    angle with the moon is optimal. At this point, the third stage of the Saturn V
    rocket fires and falls away, leaving the CSM to coast to the moon.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 跨月注入速度（V₀）是一种推进机动，用于将CSM设置为前往月球的轨道。这是在地球的停泊轨道上完成的，在此过程中，航天器进行内部检查，并等待与月球的相位角达到最佳时机。此时，土星五号火箭的第三级点火并脱落，留下CSM前往月球。
- en: Because the moon is moving, you have to predict its future position or *lead
    it*, like shooting skeet with a shotgun. This requires knowing the phase angle
    (gamma₀) at the time of translunar injection.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 由于月球在移动，你必须预测它的未来位置或*引导*它，就像用猎枪打飞碟一样。这需要知道在跨月注入时的相位角（gamma₀）。
- en: 'Leading the moon is a little different from shooting a shotgun, however, as
    space is *curved*, and you need to factor in the gravity of the earth and the
    moon. The tug of these two bodies on the spacecraft creates perturbations that
    are difficult to calculate. So difficult, in fact, that the calculation has earned
    its own special name in the field of physics: *the three-body problem*.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 引导月球与射击霰弹枪有所不同，因为太空是*弯曲的*，你需要考虑地球和月球的引力。这两个天体对航天器的牵引力会产生难以计算的扰动。实际上如此困难，以至于计算在物理学领域获得了一个特殊的名称：*三体问题*。
- en: The Three-Body Problem
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 三体问题
- en: The three-body problem is the challenge of predicting the behavior of three
    interacting bodies. Isaac Newton’s gravity equations work great for predicting
    the behavior of *two* orbiting bodies, such as the earth and the moon, but add
    one more body to the mix, whether a spacecraft, comet, moon, or so on, and things
    get complicated. Newton was never able to encapsulate the behavior of three or
    more bodies into a simple equation. For 275 years — even with kings offering prizes
    for a solution — the world’s greatest mathematicians worked the problem in vain.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 三体问题是预测三个相互作用的天体行为的挑战。艾萨克·牛顿的引力方程对于预测*两个*天体的行为（如地球和月球）效果很好，但如果再加入一个天体，无论是航天器、彗星、卫星等，情况就会变得复杂。牛顿从未能将三个或更多天体的行为简化为一个简单的方程。275年来——即使国王提供奖金以寻找解决方案——世界上最伟大的数学家们也徒劳无功。
- en: '![](../Images/bb4182799484b4f68ae64d1211ad569b.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bb4182799484b4f68ae64d1211ad569b.png)'
- en: The three-body problem (Mgolden96, CC BY-SA 4.0, via Wikimedia Commons)
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 三体问题（Mgolden96, CC BY-SA 4.0, via Wikimedia Commons）
- en: The issue is that the three-body problem can’t be solved using simple algebraic
    expressions or integrals. Calculating the impact of multiple gravitational fields
    requires numerical iteration on a scale that’s impractical without a high-speed
    computer, such as your laptop.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 问题在于三体问题不能使用简单的代数表达式或积分来解决。计算多个引力场的影响需要在不使用高速计算机的情况下进行数值迭代，这在没有高速计算机的情况下是不可行的，例如你的笔记本电脑。
- en: In 1961, Michael Minovitch, a summer intern at the Jet Propulsion Laboratory,
    found the first numerical solution using an IBM 7090 mainframe, at the time the
    fastest computer in the world. He discovered that mathematicians could reduce
    the number of computations needed to solve a restricted three-body problem, like
    our earth-moon-CSM problem, by using a *patched conic method*.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 1961年，迈克尔·米诺维奇（Michael Minovitch），一位在喷气推进实验室的暑期实习生，利用当时世界上最快的计算机 IBM 7090 找到了第一个数值解。他发现，数学家们可以通过使用*修正圆锥方法*来减少求解限制性三体问题（如我们的地月-CSM
    问题）所需的计算次数。
- en: The Patched Conic Method
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修正圆锥方法
- en: The patched conic method is an analytical approximation that assumes you’re
    working with a simple two-body problem while the spacecraft is in the earth’s
    gravitational sphere of influence and another when you’re within the moon’s sphere
    of influence. It’s a rough, “back-of-the-envelope” calculation that provides reasonable
    estimates of departure and arrival conditions, reducing the number of choices
    for initial velocity and position vectors. All that’s left is to refine the flight
    path with repeated computer simulations.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 修正圆锥方法是一种分析性近似方法，它假设你在地球引力影响范围内处理一个简单的两体问题，而在月球引力影响范围内处理另一个问题。这是一种粗略的“简便计算”，提供合理的出发和到达条件估计，减少了初始速度和位置向量的选择。剩下的就是通过反复的计算机模拟来优化飞行路径。
- en: Because researchers have already found and documented the Apollo 8 mission’s
    patched conic solution, we don’t need to calculate it. I’ve already adapted it
    to the 2D simulation we’ll be viewing here.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 因为研究人员已经找到了并记录了阿波罗8号任务的修正圆锥解，我们不需要再计算它。我已经将其调整到我们将要查看的2D模拟中。
- en: If you download the source code, you can experiment with alternative solutions
    by varying parameters such as R₀ and V₀.
  id: totrans-42
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果你下载源代码，你可以通过调整参数如 R₀ 和 V₀ 来实验不同的解决方案。
- en: The Simulation
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模拟
- en: The free-return trajectory simulation will capture the fundamentals of the flight
    path while making several approximations for “viewing pleasure.” These involve
    running the simulation in 2D, ignoring Apollo 8’s ten orbits of the moon, and
    distorting both the time and distance scales. As a simplification, neither the
    Earth nor the moon rotates.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 自由返回轨迹模拟将捕捉飞行路径的基本要素，同时为了“观赏效果”做出若干近似。这些近似包括在2D环境中运行模拟，忽略阿波罗8号的十次月球轨道，并扭曲时间和距离的尺度。作为简化处理，地球和月球都不旋转。
- en: Time Scale Distortions
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 时间尺度失真
- en: In 1968, a round-trip to the moon took about *six days*. No one wants to watch
    this in *real* time, so the simulation increments the time unit by 0.001 with
    each loop. This means that, when running the simulation for 4,100 loops, each
    time step represents about *two minutes* of time in the real world. The longer
    the time step, the faster the simulation but the less accurate the results, as
    small errors compound over time.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在 1968 年，往返月球大约需要 *六天*。没有人愿意实时观看这个过程，所以模拟每次循环将时间单位增加 0.001。这意味着，当运行 4,100 次循环的模拟时，每个时间步代表现实世界中约
    *两分钟* 的时间。时间步长越长，模拟速度越快，但结果的准确性越低，因为小错误会随着时间积累。
- en: You can optimize the time step in flight plan simulations by first running a
    small step for maximum accuracy and then using the results to find the largest
    time step that yields a similar result.
  id: totrans-47
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可以通过首先运行一个小时间步以获得最大准确性，然后使用结果找到产生类似结果的最大时间步，来优化飞行计划模拟中的时间步。
- en: Distance Scale Distortions
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 距离尺度失真
- en: The simulation is not to scale. Although the Earth and Moon images will have
    the correct *relative sizes*, the distance between the two is *smaller* than the
    actual distance, so the phase angle has to be adjusted accordingly. I’ve reduced
    the distance in the model because outer space is big. *Really big*. If you want
    to show the simulation to scale and fit it all on your computer monitor, then
    you must settle for a ridiculously tiny earth and moon.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟不是按比例的。虽然地球和月球的图像将具有正确的 *相对尺寸*，但它们之间的距离比实际距离 *更小*，因此需要相应调整相位角。我在模型中减少了距离，因为外太空很大。*真的很大*。如果你想按比例显示模拟并将其全部放在计算机显示器上，那么你必须接受一个荒谬的小地球和月球。
- en: '![](../Images/a0ae401098bb78923c426eb0d61b8f7d.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a0ae401098bb78923c426eb0d61b8f7d.png)'
- en: Earth and Moon system at closest approach, or perigee, shown to scale (image
    by author)
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 地球和月球系统在最近距离，或近地点，按比例显示（作者图像）
- en: To keep the two bodies recognizable, the simulation uses larger, properly scaled
    images with the distance between them reduced. This configuration will be more
    relatable to the viewer while still permitting replication of the free-return
    trajectory.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保持两个天体的可识别性，模拟使用了更大的、适当缩放的图像，并减少了它们之间的距离。这种配置将更容易让观众理解，同时仍然可以复现自由返回轨迹。
- en: '![](../Images/eade0181769047f74b7104b0a18d2860.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/eade0181769047f74b7104b0a18d2860.png)'
- en: The earth and moon system in the simulation, with only the body sizes properly
    scaled (Real-world Python)
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟中的地球和月球系统，仅按比例缩放了天体大小（真实世界 Python）
- en: Because the earth and the moon are closer together in the simulation, the moon’s
    orbital velocity will be faster than in real life, as per Kepler’s second law
    of planetary motion. To compensate for this, the moon’s starting position is designed
    to reduce the phase angle appropriately.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 由于在模拟中地球和月球距离较近，月球的轨道速度将比实际生活中更快，这符合开普勒第二定律。为了补偿这一点，月球的起始位置被设计为适当减少相位角。
- en: As a final nod to viewability, the size of the CSM is drastically increased.
    At scale, it would be smaller than a pixel.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 为了最终提高可视性，CSM 的大小被大幅增加。按比例显示时，它会比一个像素还小。
- en: Running the Simulation
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行模拟
- en: The simulation tracks Apollo 8 from the moment the Saturn V rocket’s third stage
    stops firing for translunar injection until the splashdown of the command module
    in the Pacific Ocean. The initial acceleration represents the only time the spacecraft
    needs to fire its thrusters during a free return maneuver.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟追踪了阿波罗 8 从土星五号火箭的第三阶段停止点火进行月球注入直到指令模块在太平洋溅落的整个过程。初始加速代表了飞船在自由返回机动期间需要点燃推进器的唯一时间。
- en: 'NOTE: The animation below is a GIF, as required by Medium. Image quality is
    better when running the program directly from the Python script.'
  id: totrans-59
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意：下面的动画是 GIF 格式，根据 Medium 的要求。直接从 Python 脚本运行程序时，图像质量更好。
- en: '![](../Images/54b17f88e4c47401ba6f9ff09594c8b6.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/54b17f88e4c47401ba6f9ff09594c8b6.png)'
- en: The free return trajectory simulation (by author)
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 自由返回轨迹模拟（作者）
- en: If you uncomment the `self.pendown()` option in the Python script you can trace
    the journey by drawing a line behind the CSM and moon. The “figure 8” pattern
    of the free-return trajectory is clearly visible, as well as the spacecraft’s
    close approach to the moon, at an altitude of only 69 miles (110 km).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在 Python 脚本中取消注释 `self.pendown()` 选项，你可以通过在 CSM 和月球后面绘制一条线来追踪旅程。自由返回轨迹的“8”字形模式非常清晰可见，以及飞船接近月球时的情况，距离仅为
    69 英里（110 公里）。
- en: '![](../Images/6a92dca9c7a0e9d0d68d06aaceab1a95.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6a92dca9c7a0e9d0d68d06aaceab1a95.png)'
- en: The simulation in slow motion and with the path recorded (by author)
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟慢动作并记录路径（作者）
- en: If you play around with the simulation inputs, you’ll find that the slightest
    tweaks to the parameters can cause the mission to go awry. Negative outcomes include
    crashing into the moon, entering Earth’s atmosphere too steeply, or continuing
    off into space forever.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你调整模拟输入，你会发现对参数的最小调整可能会导致任务出现偏差。负面结果包括撞击月球、以过陡的角度进入地球大气层，或是永远飞向太空。
- en: To simulate a moon crash, change the `Vo_X` variable, representing the V₀ translunar
    injection velocity, from its initial value of 485 to 475.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 要模拟月球撞击，将代表V₀月球注入速度的`Vo_X`变量从其初始值485更改为475。
- en: '![](../Images/c394af77ffc8c824821d6251293d4767.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c394af77ffc8c824821d6251293d4767.png)'
- en: Changing the Vo_X velocity variable from 485 to 475 crashes the CSM (by author)
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 将Vo_X速度变量从485更改为475会导致CSM坠毁（作者）
- en: While this sensitivity is partly a function of the limited degrees of freedom
    in the small simulation, the same issues persist in the real world. At critical
    moments, space travel becomes a game of seconds and centimeters, which is why
    computers are required to fire thrusters for important maneuvers like orbital
    insertion burns.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这种敏感性部分是由于小型模拟的自由度有限，但现实世界中也存在相同的问题。在关键时刻，太空旅行变成了秒和厘米的游戏，这也是为什么在轨道插入点燃等重要机动中需要计算机来控制推进器的原因。
- en: Simulating Gravity Propulsion
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模拟重力推进
- en: 'Michael Minovitch’s solution to the three-body problem led him to another significant
    discovery: *gravity propulsion*. Known also as the *gravity assist* and the *slingshot
    maneuver*, this technique involves using the gravity field of a large planet to
    either accelerate or decelerate a spacecraft into a different orbit. It was most
    famously used in the 1970s to send the Voyager spacecraft on their grand tours
    of the solar system.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 迈克尔·米诺维奇解决三体问题的方案引领他发现了另一个重要的发现：*重力推进*。也称为*重力助推*和*弹弓机动*，该技术涉及利用大型行星的重力场来加速或减速航天器，使其进入不同的轨道。最著名的应用是在1970年代，将旅行者号航天器送往太阳系的壮丽旅行。
- en: You can simulate gravity propulsion by setting the `Vo_X` variable to a value
    between 520 and 540\. This will cause the CSM to pass *behind* the moon and steal
    some of its momentum, increasing the ship’s velocity and deflecting its flight
    path.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过将`Vo_X`变量设置为520到540之间的值来模拟重力推进。这会导致CSM*在*月球后方通过，并偷取一些月球的动量，从而增加飞船的速度并改变其飞行轨迹。
- en: '![](../Images/cbb3755bc88dec10791931178cceabc8.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cbb3755bc88dec10791931178cceabc8.png)'
- en: Simulating the gravity propulsion concept. Bye-bye Apollo 8! (by author)
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟重力推进概念。再见，阿波罗8号！（作者）
- en: Interestingly, accelerating the CSM in this way will *slow down* the moon in
    its orbit, as the laws of physics dictate that energy must be conserved. The effect
    on the moon is negligible, however, due to the tremendous differences in the mass
    of the two objects.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，以这种方式加速CSM将*减缓*月球在其轨道上的速度，因为物理法则要求能量必须守恒。然而，由于两者质量的巨大差异，对月球的影响微不足道。
- en: Summary
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: The Python simulation referenced in this article lets you experiment with the
    famous free-return trajectory that convinced NASA to gamble and go to the moon
    earlier than planned. The nice thing about simulations is that, if you fail, you
    can live to try again. NASA runs countless simulations for all its proposed missions.
    The results help NASA choose between competing flight plans, find the most efficient
    routes, decide what to do if things go wrong, and much more.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 本文提到的Python模拟允许你尝试著名的自由返回轨道，这一轨道使NASA决定冒险提前登月。模拟的好处在于，如果失败了，你还能活着再试。NASA为所有拟议任务运行无数次模拟，结果帮助NASA在竞争的飞行计划之间做出选择，找到最有效的路线，决定在出现问题时该如何处理，等等。
- en: Simulations are especially important for outer solar system exploration, where
    great distances make real-time communications impossible. The timing of key events,
    such as firing thrusters, taking photographs, or dropping probes, are all preprogrammed
    based on meticulous simulations.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟对于外太阳系探索尤其重要，因为巨大的距离使实时通信变得不可能。关键事件的时机，如点燃推进器、拍摄照片或释放探测器，都是基于详细的模拟预编程的。
- en: References and Further Reading
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献及进一步阅读
- en: '[*Real-world Python: A Hacker’s Guide to Solving Problems with Code*](https://a.co/d/9R11swV)
    (No Starch Press, 2020) by Lee Vaughan, dedicates a chapter to a detailed explanation
    of the free-return simulation code.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[*现实世界的Python: 黑客解决问题的代码指南*](https://a.co/d/9R11swV)（无淀粉出版社，2020）由李·沃恩编著，专门用一章详细解释自由返回模拟代码。'
- en: '[*Apollo 8: The Thrilling Story of the First Mission to the Moon*](https://a.co/d/4P52WFk)
    (Henry Holt and Co., 2017), by Jeffrey Kluger, covers the historic Apollo 8 mission
    from its unlikely beginning to its “unimaginable triumph.”'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[*阿波罗8号: 第一次登月任务的惊险故事*](https://a.co/d/4P52WFk)（亨利·霍尔特公司，2017），由杰弗里·克卢格编著，涵盖了阿波罗8号历史性任务的从不太可能的开始到“不可思议的胜利”。'
- en: '[*PBS Nova How Apollo 8 Left Earth Orbit*](https://www.pbs.org/wgbh/nova/video/how-nasas-apollo-8-left-earths-orbit/)
    is a short video clip on the Apollo 8 translunar injection maneuver, marking the
    first time that humans left the earth’s orbit and traveled to another celestial
    body.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '[*PBS Nova 阿波罗8号如何离开地球轨道*](https://www.pbs.org/wgbh/nova/video/how-nasas-apollo-8-left-earths-orbit/)
    是一个关于阿波罗8号转月注入机动的短视频剪辑，标志着人类首次离开地球轨道，前往另一个天体。'
- en: '[*NASA Voyager 1 & 2 Owner’s Workshop Manual*](https://a.co/d/bMEY9um) (Haynes,
    2015), by Christopher Riley, Richard Corfield, and Philip Dolling, provides interesting
    background on the three-body problem and Michael Minovitch’s many contributions
    to space travel.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '[*NASA Voyager 1 & 2 维修手册*](https://a.co/d/bMEY9um)（海恩斯，2015），由克里斯托弗·赖利、理查德·科菲尔德和菲利普·道林撰写，提供了关于三体问题以及迈克尔·米诺维奇对太空旅行众多贡献的有趣背景。'
- en: The Wikipedia [*Gravity Assist*](https://en.wikipedia.org/wiki/Gravity_assist)
    page contains lots of interesting animations of various gravity-assist maneuvers
    and historic planetary flybys that you can reproduce with the Apollo 8 simulation
    referenced in this article.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 维基百科的[*引力助推*](https://en.wikipedia.org/wiki/Gravity_assist)页面包含了许多有趣的引力助推机动和历史行星掠过的动画，这些动画可以通过本文提到的阿波罗8号模拟器来重现。
- en: '[*Chasing New Horizons: Inside the Epic First Mission to Pluto*](https://a.co/d/7PcNznK)
    (Picador, 2018), by Alan Stern and David Grinspoon, documents the importance —
    and ubiquity — of simulations in NASA missions.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '[*追逐新视野: 探索首个冥王星任务的史诗*](https://a.co/d/7PcNznK)（皮卡多出版社，2018），由艾伦·斯特恩和大卫·格林斯普恩编著，记录了模拟在NASA任务中的重要性和普遍性。'
- en: Thanks
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 谢谢
- en: Thanks for reading and please follow me for more *Quick Success Data Science*
    articles in the future.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读，请关注我以获取更多未来的*快速成功数据科学*文章。
