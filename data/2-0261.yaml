- en: Advanced GUI interface with Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python 进行高级 GUI 界面设计
- en: 原文：[https://towardsdatascience.com/advanced-gui-interface-with-python-cb04ef2e29b9](https://towardsdatascience.com/advanced-gui-interface-with-python-cb04ef2e29b9)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/advanced-gui-interface-with-python-cb04ef2e29b9](https://towardsdatascience.com/advanced-gui-interface-with-python-cb04ef2e29b9)
- en: Getting started with more modern development interfaces with Python for your
    projects
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开始使用更现代的开发界面来实现你的 Python 项目
- en: '[](https://bharath-k1297.medium.com/?source=post_page-----cb04ef2e29b9--------------------------------)[![Bharath
    K](../Images/b6f215f28132a953bcae80842301e303.png)](https://bharath-k1297.medium.com/?source=post_page-----cb04ef2e29b9--------------------------------)[](https://towardsdatascience.com/?source=post_page-----cb04ef2e29b9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----cb04ef2e29b9--------------------------------)
    [Bharath K](https://bharath-k1297.medium.com/?source=post_page-----cb04ef2e29b9--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://bharath-k1297.medium.com/?source=post_page-----cb04ef2e29b9--------------------------------)[![Bharath
    K](../Images/b6f215f28132a953bcae80842301e303.png)](https://bharath-k1297.medium.com/?source=post_page-----cb04ef2e29b9--------------------------------)[](https://towardsdatascience.com/?source=post_page-----cb04ef2e29b9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----cb04ef2e29b9--------------------------------)
    [Bharath K](https://bharath-k1297.medium.com/?source=post_page-----cb04ef2e29b9--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----cb04ef2e29b9--------------------------------)
    ·8 min read·Mar 9, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----cb04ef2e29b9--------------------------------)
    ·阅读时间 8 分钟·2023年3月9日。
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/c4bee57c2e59995debe5d5b15775f6fc.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c4bee57c2e59995debe5d5b15775f6fc.png)'
- en: Photo by [Slava Keyzman](https://unsplash.com/@slavasfotos?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[Slava Keyzman](https://unsplash.com/@slavasfotos?utm_source=medium&utm_medium=referral)
    的照片，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)。'
- en: Almost every software that we use on the computer screen is a GUI interface
    of some sort. Most GUI applications provide a platform for friendly interaction
    with the software product. Notepad and the common calculator found in most windows
    systems are some simple examples of a GUI interface made accessible to all users.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在计算机屏幕上使用的几乎所有软件都是某种形式的 GUI 界面。大多数 GUI 应用程序提供了一个与软件产品友好互动的平台。记事本和大多数 Windows
    系统中的普通计算器就是一些简单的 GUI 界面的例子，方便所有用户使用。
- en: Most programming languages allow us to develop a user interface through which
    a human-computer interaction can take place, including Python. With the help of
    Python and its different types of libraries available for GUI development, such
    as Tkinter, Kivy, PyQt5, and other similar tools, programmers can easily develop
    GUI interfaces.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数编程语言允许我们开发用户界面，从而实现人与计算机的互动，包括 Python。借助 Python 及其各种用于 GUI 开发的库，如 Tkinter、Kivy、PyQt5
    以及其他类似工具，程序员可以轻松地开发 GUI 界面。
- en: All these development tools provide a straightforward starting point for constructing
    almost any type of interface for performing numerous tasks. For interested viewers,
    I recommend checking out one of my previous articles on the seven best tools for
    developing UI graphics with starter codes to get started for each of the mentioned
    libraries.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些开发工具都提供了一个直接的起点，用于构建几乎任何类型的界面以执行多种任务。对于感兴趣的读者，我建议查看我以前的一篇文章，其中介绍了开发 UI 图形的七种最佳工具以及每个提到的库的入门代码。
- en: '[](/7-best-ui-graphics-tools-for-python-developers-with-starter-codes-2e46c248b47c?source=post_page-----cb04ef2e29b9--------------------------------)
    [## 7 Best UI Graphics Tools For Python Developers With Starter Codes'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/7-best-ui-graphics-tools-for-python-developers-with-starter-codes-2e46c248b47c?source=post_page-----cb04ef2e29b9--------------------------------)
    [## Python 开发者的 7 款最佳 UI 图形工具及其入门代码'
- en: The seven best UI graphics tools available in Python for developing cool user
    interface technologies
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Python 中用于开发酷炫用户界面技术的七款最佳 UI 图形工具。
- en: towardsdatascience.com](/7-best-ui-graphics-tools-for-python-developers-with-starter-codes-2e46c248b47c?source=post_page-----cb04ef2e29b9--------------------------------)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/7-best-ui-graphics-tools-for-python-developers-with-starter-codes-2e46c248b47c?source=post_page-----cb04ef2e29b9--------------------------------)
- en: However, most of these interfaces look a little bland in terms of their design
    structure. For more aesthetically impressive and modern-looking design layouts,
    it is better to use a more oriented and advanced GUI interface to make the overall
    look of the software developed more engaging and appealing.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这些界面在设计结构上看起来有些平淡。为了获得更具美感和现代化的设计布局，最好使用更具导向性和高级的GUI界面，以使开发的软件整体外观更具吸引力。
- en: In this article, we will focus on developing a slightly more modern development
    environment that has a better user interface with an overall design improvement
    for accessing and utilizing its features. For viewers interested in similar projects,
    I recommend checking out one of my previous articles on developing a calendar
    to track significant dates with Python programming.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将专注于开发一个稍微现代化的开发环境，该环境具有更好的用户界面，并在整体设计上有所改进，以访问和利用其功能。对于对类似项目感兴趣的读者，我建议查看我以前关于使用Python编程开发日历以跟踪重要日期的文章。
- en: '[](/develop-your-own-calendar-to-track-important-dates-with-python-c1af9e98ffc3?source=post_page-----cb04ef2e29b9--------------------------------)
    [## Develop Your Own Calendar To Track Important Dates with Python'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/develop-your-own-calendar-to-track-important-dates-with-python-c1af9e98ffc3?source=post_page-----cb04ef2e29b9--------------------------------)
    [## 使用Python开发自己的日历以跟踪重要日期'
- en: Developing a calendar GUI interface to regulate your plans for 2022 and beyond
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 开发一个日历GUI界面来调整2022年及以后的计划
- en: towardsdatascience.com](/develop-your-own-calendar-to-track-important-dates-with-python-c1af9e98ffc3?source=post_page-----cb04ef2e29b9--------------------------------)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/develop-your-own-calendar-to-track-important-dates-with-python-c1af9e98ffc3?source=post_page-----cb04ef2e29b9--------------------------------)
- en: 'Modern GUI interface to load images:'
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 现代GUI界面以加载图像：
- en: '![](../Images/3cbfe29387d1d52a8fcb4bcd70dedf6f.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3cbfe29387d1d52a8fcb4bcd70dedf6f.png)'
- en: Photo by [Brendan Beale](https://unsplash.com/@theophilus318?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由[布伦丹·比尔](https://unsplash.com/@theophilus318?utm_source=medium&utm_medium=referral)提供，来源于[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: In this project, we will construct a modern-looking GUI development interface
    with a button for loading images randomly from the working directory. We will
    utilize the custom tkinter library as our primary UI development user interface
    to create the workflow, including the button, labels, images, and other objects
    necessary for the project.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，我们将构建一个现代化的GUI开发界面，带有一个按钮，可以从工作目录中随机加载图像。我们将使用自定义tkinter库作为主要的UI开发界面，创建包括按钮、标签、图像和项目所需的其他对象的工作流。
- en: The following package can be installed with a simple pip command as shown below.
    The custom tkinter library is available on the Python Package Index website, which
    you can check out from the link [here](https://pypi.org/project/customtkinter/).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 以下包可以通过一个简单的pip命令安装，如下所示。自定义tkinter库可以在Python包索引网站上找到，你可以从[这里](https://pypi.org/project/customtkinter/)查看。
- en: pip install customtkinter
  id: totrans-24
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: pip install customtkinter
- en: Once you have installed the above library, we can proceed to the next step of
    importing the required libraries for developing the interface. It is important
    to note that it is also a good idea to also install the tkinter library if you
    haven’t already installed it, as these two libraries are interchangeably usable
    for specific tasks.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你安装了上述库，我们可以继续进行下一步，即导入开发界面所需的库。值得注意的是，如果你还没有安装tkinter库，建议也安装它，因为这两个库在特定任务中可以互换使用。
- en: 'Importing the necessary libraries:'
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入必要的库：
- en: In the first step, we will import all the essential libraries that we will utilize
    for constructing our advanced GUI interface. We will make use of the custom tkinter
    library that we recently installed via the pip command. We can also utilize the
    tkinter library simultaneously with the custom tkinter module, as some of the
    functions are derivative of each other.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一步中，我们将导入所有必要的库，这些库将用于构建我们的高级GUI界面。我们将使用最近通过pip命令安装的自定义tkinter库。我们还可以同时使用tkinter库和自定义tkinter模块，因为一些函数是相互衍生的。
- en: Finally, we will import the Pillow library, which is one of the best libraries
    in Python for handling different types of tasks related to images. We will import
    the ImageTk and Image classes for the Pillow library, which will enable us to
    handle tasks inside the GUI interface. Below is the code block for all the required
    library module imports.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将导入 Pillow 库，这是 Python 中处理不同类型图像任务的最佳库之一。我们将导入 Pillow 库的 ImageTk 和 Image
    类，这将使我们能够在 GUI 界面中处理任务。以下是所有所需库模块导入的代码块。
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Setting the themes and creating the background interface:'
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置主题和创建背景界面：
- en: Once we finish importing all the necessary libraries, the next essential step
    is to set the appearance and the theme modes for the development interface. For
    appearance, the custom tkinter library offers options, such as dark and light
    modes, whereas it allows blue, dark blue, and green as the options for the default
    color theme.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦完成所有必要库的导入，下一步是设置开发界面的外观和主题模式。在外观方面，自定义 tkinter 库提供了深色模式和浅色模式的选项，而默认颜色主题的选项则包括蓝色、深蓝色和绿色。
- en: Once we set the appearance and default color themes, we can define the custom
    tkinter function as the root object to complete our functions. We will also set
    the geometry of the interface where we will perform our desired operations. Note
    that the dimensions can vary for specific purposes, and the size of the images
    used might have to be adjusted to perform the required task.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们设置了外观和默认颜色主题，就可以定义自定义 tkinter 函数作为根对象以完成我们的功能。我们还将设置界面的几何形状，以便进行所需操作。请注意，尺寸可能因特定目的而异，使用的图像大小可能需要调整以完成所需任务。
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Creating the button function:'
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建按钮功能：
- en: In the next step, we will code a function that will enable us to display our
    image within the graphic window (either the entire screen or the respective frame).
    The photo image function in the ImageTk class allows us to display the desired
    image. We also use a custom Tkinter library where the images are displayed within.
    The code snippet for programming the same is provided below.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一步中，我们将编码一个函数，使我们能够在图形窗口（整个屏幕或相应框架）内显示图像。ImageTk 类中的照片图像函数允许我们显示所需的图像。我们还使用了一个自定义的
    Tkinter 库，其中显示了图像。下方提供了相应的代码片段。
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Creating the frame and interfacing the button:'
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建框架和按钮接口：
- en: In the final step of this section, we will create a frame in which the image
    will be displayed. We will pack the frame within the working graphic window. Once
    we have created the frame for displaying the image with the click of a button,
    we will create the actual button that will operate on the previously defined functionality.
    We will provide a central alignment to the button and pack the function. Finally,
    we will loop the working root function for the process. The code for the snippet
    is provided below.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节的最后一步，我们将创建一个用于显示图像的框架。我们将把框架放置在工作图形窗口中。创建了显示图像的框架并用按钮点击后，我们将创建实际的按钮来操作之前定义的功能。我们将为按钮提供中心对齐并打包该功能。最后，我们将循环运行根函数以完成过程。下方提供了代码片段。
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Once you have completed coding the project, you can run the Python application.
    We notice a graphic window with a frame and a “Display Image” button within the
    frame. Once you click the following button, the image will be displayed within
    the frame. The working screenshot of the following project is provided below.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 完成项目编码后，你可以运行 Python 应用程序。我们会看到一个图形窗口，窗口内有一个“显示图像”按钮。点击以下按钮，图像将在框架内显示。下面提供了项目的工作截图。
- en: '![](../Images/36c814bc9e536b604e8502fc62f5d3b3.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/36c814bc9e536b604e8502fc62f5d3b3.png)'
- en: Screenshot by Author
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截图
- en: The complexity of this project is barely noticeable. It can be developed in
    a few lines of code with the correct libraries. However, the next section will
    cover a slightly more advanced version of this project, where we will implement
    an additional layer of functionality to make the project more creative.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目的复杂性几乎不可察觉。只需正确的库，就可以用几行代码开发出来。然而，下一部分将介绍这个项目的一个稍微高级的版本，我们将实现一个额外的功能层，使项目更加富有创意。
- en: 'Advanced improvement to load multiple images:'
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加载多个图像的高级改进：
- en: '![](../Images/3453fb37ce0eaaa178a4eaa9f6a1da98.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3453fb37ce0eaaa178a4eaa9f6a1da98.png)'
- en: Photo by [NASA](https://unsplash.com/fr/@nasa?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [NASA](https://unsplash.com/fr/@nasa?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: In this section, we will cover a slightly more advanced variation of the above
    project where we will display a randomized image each time we display the image
    and clear it. We will utilize the random library, which will enable us to interpret
    a random selection of an image each time the image is cleared with the “Delete
    Image” button and when the “Display Image” button is clicked right after. I have
    used the three images in this article for the generation of images. I have saved
    these three images as “Trees.jfif”, “Maps.jfif”, and “Books.jfif” in the working
    project directory.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍上述项目的一个稍微高级的变体，我们将在每次显示和清除图像时显示一张随机图像。我们将利用随机库，这将使我们能够在每次用“删除图像”按钮清除图像时以及点击“显示图像”按钮后立即解释随机选择的图像。我在这篇文章中使用了三张图像来生成图像。我将这三张图像保存为“Trees.jfif”、“Maps.jfif”和“Books.jfif”在工作项目目录中。
- en: The other additional function we are defining is the clear frame function, which
    will delete all the previous widgets assembled in the frame. For this reason,
    we will place the “Delete Image” and “Display Image” buttons outside the frame
    in the graphic window. The remaining process is the same for displaying the buttons
    in the graphical window and running the software. The code block for the entire
    project is provided below for ease of access to the developers.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们定义的另一个附加功能是清除框架功能，该功能将删除框架中组装的所有先前小部件。因此，我们将“删除图像”和“显示图像”按钮放置在图形窗口的框架之外。其余过程在图形窗口中显示按钮和运行软件的方式相同。为了方便开发者访问，下面提供了整个项目的代码块。
- en: '[PRE4]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: For interested readers and developer enthusiasts, there are further additional
    improvements can be made to the above project as well. We can combine the display
    image and delete image button into a single entity as to avoid the pressing of
    two buttons each time an image needs to be displayed. A lot more unique features
    can also be made to the project by improvising the code and adding more necessary
    elements.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 对于感兴趣的读者和开发者爱好者来说，以上项目还有进一步改进的空间。我们可以将显示图像和删除图像的按钮合并为一个实体，以避免每次需要显示图像时按两个按钮。通过改进代码和添加更多必要元素，还可以为项目添加更多独特功能。
- en: 'Conclusion:'
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论：
- en: '![](../Images/a5fbbaa4f0cc0a444287aaea97531117.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a5fbbaa4f0cc0a444287aaea97531117.png)'
- en: Photo by [freestocks](https://unsplash.com/ko/@freestocks?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [freestocks](https://unsplash.com/ko/@freestocks?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: “The next big thing is the one that makes the last big thing usable.”
  id: totrans-54
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “下一个重大突破是让最后一个重大突破变得可用的那个。”
- en: — ***Blake Ross***
  id: totrans-55
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: — ***布莱克·罗斯***
- en: Graphics and Graphic User Interfaces play a critical role in most software development
    projects. It is essential to have a more modern approach to emerging trends allowing
    us to create and develop innovative and creative working interfaces. Better human-computer
    interaction is guaranteed through a high-quality graphics interface.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图形和图形用户界面在大多数软件开发项目中发挥着关键作用。采用现代化的方式来适应新兴趋势是至关重要的，这使我们能够创建和开发创新且富有创意的工作界面。高质量的图形界面能保证更好的人与计算机的互动。
- en: In this article, we learned how to use custom tkinter to develop a more modern
    and advanced GUI interface with Python programming. We constructed our project
    to firstly display an image within the frame of the graphic window once the button
    is clicked. In the upcoming section, we covered a slight more sophisticated approach
    to the project for generating random images upon the click of the button.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们学习了如何使用自定义 tkinter 开发更现代和高级的 GUI 界面。我们构建了项目，使其在点击按钮时首先在图形窗口的框架内显示图像。在接下来的部分中，我们介绍了一种稍微复杂的方法，通过点击按钮生成随机图像。
- en: I highly recommend trying out more advanced modifications and building multiple
    projects to get more familiar with the different functions and classes available
    in the custom tkinter library. If you want to get notified about my articles as
    soon as they go up, check out the following [link](https://bharath-k1297.medium.com/subscribe)
    to subscribe for email recommendations. If you wish to support other authors and
    me, then subscribe to the below link.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我强烈推荐尝试更多高级修改，并构建多个项目，以便更熟悉自定义 tkinter 库中不同的功能和类。如果你希望在我的文章发布时立即获得通知，请查看以下[链接](https://bharath-k1297.medium.com/subscribe)进行订阅。如果你想支持其他作者和我，请订阅以下链接。
- en: '[](https://bharath-k1297.medium.com/membership?source=post_page-----cb04ef2e29b9--------------------------------)
    [## Join Medium with my referral link - Bharath K'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[初学者指南：使用 Streamlit 部署数据科学项目](https://towardsdatascience.com/beginners-guide-to-streamlit-for-deploying-your-data-science-projects-9c9fce488831?source=post_page-----cb04ef2e29b9--------------------------------)'
- en: Read every story from Bharath K (and thousands of other writers on Medium).
    Your membership fee directly supports…
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阅读 Bharath K（以及 Medium 上的其他成千上万位作者）的每一个故事。你的会员费将直接支持…
- en: bharath-k1297.medium.com](https://bharath-k1297.medium.com/membership?source=post_page-----cb04ef2e29b9--------------------------------)
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '[加入我的 Medium 会员](https://bharath-k1297.medium.com/membership?source=post_page-----cb04ef2e29b9--------------------------------)'
- en: If you have any queries related to the various points stated in this article,
    then feel free to let me know in the comments below. I will try to get back to
    you with a response as soon as possible.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对本文中提到的各种点有任何疑问，请随时在评论中告诉我。我会尽快回复你。
- en: Check out some of my other articles in relation to the topic covered in this
    piece that you might also enjoy reading!
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 查看我关于这一话题的其他一些文章，你也许会喜欢阅读！
- en: '[](/image-filters-with-python-3dc223a12624?source=post_page-----cb04ef2e29b9--------------------------------)
    [## Image Filters with Python'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '[使用 Python 进行图像滤镜](https://towardsdatascience.com/image-filters-with-python-3dc223a12624?source=post_page-----cb04ef2e29b9--------------------------------)'
- en: A concise computer vision project for building image filters using Python
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 Python 构建图像滤镜的简明计算机视觉项目
- en: towardsdatascience.com](/image-filters-with-python-3dc223a12624?source=post_page-----cb04ef2e29b9--------------------------------)
    [](/develop-your-own-spelling-check-toolkit-with-python-740bf84a865d?source=post_page-----cb04ef2e29b9--------------------------------)
    [## Develop Your Own Spelling Check Toolkit with Python
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '[开发自己的拼写检查工具包与 Python](https://towardsdatascience.com/image-filters-with-python-3dc223a12624?source=post_page-----cb04ef2e29b9--------------------------------) '
- en: Creating an application to verify your spellings effectively with Python
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建一个有效验证拼写的 Python 应用
- en: towardsdatascience.com](/develop-your-own-spelling-check-toolkit-with-python-740bf84a865d?source=post_page-----cb04ef2e29b9--------------------------------)
    [](/beginners-guide-to-streamlit-for-deploying-your-data-science-projects-9c9fce488831?source=post_page-----cb04ef2e29b9--------------------------------)
    [## Beginners Guide to Streamlit for Deploying your Data Science Projects
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '[开发自己的拼写检查工具包与 Python](https://towardsdatascience.com/develop-your-own-spelling-check-toolkit-with-python-740bf84a865d?source=post_page-----cb04ef2e29b9--------------------------------)'
- en: Deploy your machine learning and data science projects as web apps with ease
    using streamlit
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 轻松使用 streamlit 部署你的机器学习和数据科学项目作为 web 应用
- en: towardsdatascience.com](/beginners-guide-to-streamlit-for-deploying-your-data-science-projects-9c9fce488831?source=post_page-----cb04ef2e29b9--------------------------------)
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '[初学者指南：使用 Streamlit 部署数据科学项目](https://towardsdatascience.com/beginners-guide-to-streamlit-for-deploying-your-data-science-projects-9c9fce488831?source=post_page-----cb04ef2e29b9--------------------------------)'
- en: Thank you all for sticking on till the end. I hope all of you enjoyed reading
    the article. Wish you all a wonderful day!
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢大家坚持看到最后。希望你们喜欢阅读这篇文章。祝大家有个美好的一天！
