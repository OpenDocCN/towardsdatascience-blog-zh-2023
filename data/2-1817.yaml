- en: 'Seaborn 0.12: An Insightful Guide to the Objects Interface and Declarative
    Graphics'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Seaborn 0.12：对象接口和声明式图形的深度指南
- en: 原文：[https://towardsdatascience.com/seaborn-0-12-an-insightful-guide-to-the-objects-interface-and-declarative-graphics-65fa7a4e6577](https://towardsdatascience.com/seaborn-0-12-an-insightful-guide-to-the-objects-interface-and-declarative-graphics-65fa7a4e6577)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/seaborn-0-12-an-insightful-guide-to-the-objects-interface-and-declarative-graphics-65fa7a4e6577](https://towardsdatascience.com/seaborn-0-12-an-insightful-guide-to-the-objects-interface-and-declarative-graphics-65fa7a4e6577)
- en: '[PYTHON TOOLBOX](https://medium.com/@qtalen/list/python-toolbox-4289824c6407)'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[PYTHON 工具箱](https://medium.com/@qtalen/list/python-toolbox-4289824c6407)'
- en: Streamlining your data visualization journey with Python’s popular library
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 利用 Python 的流行库简化数据可视化之旅
- en: '[](https://qtalen.medium.com/?source=post_page-----65fa7a4e6577--------------------------------)[![Peng
    Qian](../Images/9ce9aeb381ec6b017c1ee5d4714937e2.png)](https://qtalen.medium.com/?source=post_page-----65fa7a4e6577--------------------------------)[](https://towardsdatascience.com/?source=post_page-----65fa7a4e6577--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----65fa7a4e6577--------------------------------)
    [Peng Qian](https://qtalen.medium.com/?source=post_page-----65fa7a4e6577--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://qtalen.medium.com/?source=post_page-----65fa7a4e6577--------------------------------)[![Peng
    Qian](../Images/9ce9aeb381ec6b017c1ee5d4714937e2.png)](https://qtalen.medium.com/?source=post_page-----65fa7a4e6577--------------------------------)[](https://towardsdatascience.com/?source=post_page-----65fa7a4e6577--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----65fa7a4e6577--------------------------------)
    [Peng Qian](https://qtalen.medium.com/?source=post_page-----65fa7a4e6577--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----65fa7a4e6577--------------------------------)
    ·14 min read·Aug 24, 2023
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----65fa7a4e6577--------------------------------)
    ·14 分钟阅读·2023年8月24日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/d930c9fdcb0a9730a8836e89e069c8c6.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d930c9fdcb0a9730a8836e89e069c8c6.png)'
- en: 'Photo Credit: Created by Author, [Canva](https://www.canva.com/)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者创作，[Canva](https://www.canva.com/)
- en: This article aims to introduce the objects interface feature in Seaborn 0.12,
    including the concept of declarative graphic syntax, and a practical visualization
    project to showcase the usage of the objects interface.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本文旨在介绍 Seaborn 0.12 中的对象接口功能，包括声明式图形语法的概念，并通过一个实用的可视化项目展示对象接口的用法。
- en: By the end of this article, you’ll have a clear understanding of the advantages
    and limitations of Seaborn’s object interface API. And you will be able to use
    Seaborn for data analysis projects more easily.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文结束时，你将清楚了解 Seaborn 对象接口 API 的优点和局限性。你将能够更轻松地使用 Seaborn 进行数据分析项目。
- en: Introduction
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: Imagine you’re creating a data visualization chart using Python.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，你正在使用 Python 创建数据可视化图表。
- en: 'You have to instruct the computer every step of the way: select a dataset,
    create a figure, set the color, add labels, adjust the size, etc…'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 你必须逐步指示计算机：选择数据集、创建图形、设置颜色、添加标签、调整大小等等……
- en: Then you realize your code is getting longer and more complex, and all you wanted
    was to quickly visualize your data.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 然后你会发现你的代码越来越长，越来越复杂，而你只想快速可视化你的数据。
- en: It’s like going to the grocery store and having to specify every item’s location,
    color, size, and shape, instead of just telling the shop assistant what you need.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这就像去超市时，你不得不指定每个物品的地点、颜色、大小和形状，而不是直接告诉店员你需要什么。
- en: Not only is this time-consuming, but it can also feel tiring.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这不仅费时，还可能让人感到疲惫。
- en: However, Seaborn 0.12’s new feature — the objects interface — and its use of
    declarative graphic syntax is like having a shop assistant who understands you.
    You just need to tell it what you need to do, and it will find everything for
    you.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，Seaborn 0.12 的新功能——对象接口——以及其声明式图形语法的使用，就像有一个理解你的店员。你只需告诉它你需要做什么，它会为你找到一切。
- en: You no longer need to instruct it every step of the way. You just need to tell
    it what kind of result you want.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 你不再需要逐步指示它。你只需告诉它你想要什么样的结果。
- en: In this article, I’ll guide you through using the objects interface, this new
    feature that makes your data visualization process more effortless, flexible,
    and enjoyable. Let’s get started!
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我将指导你如何使用对象接口，这一新功能使得你的数据可视化过程更加轻松、灵活且愉悦。让我们开始吧！
- en: 'Seaborn API: Then and Now'
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Seaborn API：过去与现在
- en: Before diving into the objects interface API, let’s systematically look at the
    differences between the Seaborn API of earlier versions and the 0.12 version.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入了解对象接口 API 之前，让我们系统地查看 Seaborn 早期版本和 0.12 版本之间的区别。
- en: The original API
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 原始 API
- en: Many readers might have been intimidated by Matplotlib’s complex API documentation
    when learning Python data visualization.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 许多读者在学习 Python 数据可视化时可能会被 Matplotlib 复杂的 API 文档吓到。
- en: Seaborn simplifies this by wrapping and streamlining Matplotlib’s API, making
    the learning curve gentler.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Seaborn 通过封装和简化 Matplotlib 的 API 来简化这一过程，使学习曲线变得更平缓。
- en: Seaborn doesn’t just offer high-level encapsulation of Matplotlib; it also categorizes
    all charts into relational, distributional, and categorical scenarios.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Seaborn 不仅提供了对 Matplotlib 的高级封装，还将所有图表分类为关系图、分布图和类别图。
- en: '![](../Images/b0613dd60f527fe38d6b1ecb4e48af2f.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b0613dd60f527fe38d6b1ecb4e48af2f.png)'
- en: Overview of Seaborn’s original API design. Image by Author
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Seaborn 原始 API 设计概述。图片作者提供
- en: You should comprehensively understand Seaborn’s API through this diagram and
    know when to use which chart.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该通过这个图表全面理解 Seaborn 的 API，并知道何时使用哪种图表。
- en: For example, a `histplot` representing data distribution would fall under the
    distribution chart category.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，一个表示数据分布的`histplot`将归入分布图类别。
- en: In contrast, a `violinplot` representing data features by category would be
    classified as a categorical chart.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 相比之下，一个按类别表示数据特征的`violinplot`将被归类为类别图。
- en: 'Aside from vertical categorization, Seaborn also performs horizontal categorization:
    `Figure-level` and `axes-level`.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 除了垂直分类，Seaborn 还进行水平分类：`Figure-level` 和 `axes-level`。
- en: According to the [official website](https://seaborn.pydata.org/tutorial/function_overview.html?ref=dataleadsfuture.com#figure-level-vs-axes-level-functions),
    `axes-level` charts are drawn on `matplotlib.pyplot.axes` and can only draw one
    figure.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 根据[官方网站](https://seaborn.pydata.org/tutorial/function_overview.html?ref=dataleadsfuture.com#figure-level-vs-axes-level-functions)，`axes-level`
    图表绘制在 `matplotlib.pyplot.axes` 上，只能绘制一个图形。
- en: In contrast, `Figure-level` charts use Matplotlib's `FacetGrid` to draw multiple
    charts in one figure, facilitating easy comparison of similar data dimensions.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 相比之下，`Figure-level` 图表使用 Matplotlib 的 `FacetGrid` 在一个图形中绘制多个图表，便于轻松比较相似的数据维度。
- en: However, even though Seaborn’s API significantly simplifies chart drawing through
    encapsulating Matplotlib, creating an individual-specific chart still requires
    complex configurations.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，即使 Seaborn 的 API 通过封装 Matplotlib 显著简化了图表绘制，创建特定的图表仍然需要复杂的配置。
- en: 'For example, if I use Seaborn’s built-in `penguins` dataset to draw a `histplot`,
    the code is as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我使用 Seaborn 内置的 `penguins` 数据集绘制 `histplot`，代码如下：
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](../Images/99fa47414e9ad030e4014d41520544de.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/99fa47414e9ad030e4014d41520544de.png)'
- en: The original way of drawing a histplot. Image by Author
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 原来的绘制 histplot 的方式。图片作者提供
- en: 'And when I use the same dataset to draw a `kdeplot`, the code is as follows:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 当我使用相同的数据集绘制`kdeplot`时，代码如下：
- en: '[PRE1]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/ce9c2bfcf427ed4228dcd1a4e867be4b.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ce9c2bfcf427ed4228dcd1a4e867be4b.png)'
- en: The original way of drawing a kdeplot. Image by Author
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 原来的绘制 kdeplot 的方式。图片作者提供
- en: Except for the chart API, the rest of the configurations are identical.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 除了图表 API，其余的配置都是相同的。
- en: This is like telling the chef I want to use lamb chops and onions to make a
    lamb soup and specifying the cooking steps. When I want to use these ingredients
    to make a roasted lamb chop, I have to tell the chef about the ingredients and
    the cooking steps all over again.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这就像告诉厨师我想用羊排和洋葱做一锅羊肉汤，并且指定烹饪步骤。当我想用这些食材做烤羊排时，我必须重新告诉厨师所有的食材和烹饪步骤。
- en: Not only is it inefficient, but it also needs more flexibility.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这样不仅效率低下，还需要更多的灵活性。
- en: That’s why Seaborn introduced the objects interface API in its 0.12 version.
    This declarative graphic syntax dramatically improves the process of creating
    a chart.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么 Seaborn 在 0.12 版本中引入了对象接口 API。这种声明性图形语法显著改善了图表创建过程。
- en: The objects Interface API
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对象接口 API
- en: Before we start with the objects interface API, let’s take a high-level look
    at it to better understand the drawing process.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始使用对象接口 API 之前，让我们先从高层次了解一下它，以便更好地理解绘图过程。
- en: Unlike the original Seaborn API, which organizes the drawing API by classification,
    the objects interface API collects the API by a drawing pipeline.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 与按分类组织绘图 API 的原始 Seaborn API 不同，对象接口 API 按绘图流程收集 API。
- en: The objects interface API divides the drawing into multiple stages, such as
    data binding, layout, presentation, customization, etc.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 对象接口API将绘图分为多个阶段，如数据绑定、布局、展示、定制等。
- en: '![](../Images/e9a6a8234d10e055f5e1ba1d39eea83a.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e9a6a8234d10e055f5e1ba1d39eea83a.png)'
- en: Overview of Seaborn’s objects interface API design. Image by Author
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Seaborn对象接口API设计概述。图像由作者提供
- en: The data binding and presentation stages are necessary, while other stages are
    optional.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 数据绑定和展示阶段是必要的，而其他阶段是可选的。
- en: 'Also, since the stages are independent, each stage can be reused. Following
    the previous example of the hist and kde plots:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，由于各个阶段是独立的，每个阶段都可以被重用。继续之前的hist和kde图的例子：
- en: 'To use the objects interface to draw, we first need to bind the data:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用对象接口绘图，我们首先需要绑定数据：
- en: '[PRE2]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: From this line of code, we can see that the objects interface uses the `so.Plot`
    class for data binding.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 从这行代码中，我们可以看到对象接口使用`so.Plot`类进行数据绑定。
- en: Also, compared to the original API that uses the incomprehensible `hue` parameter,
    it uses the `color` parameter to bind the `species` dimension directly to the
    chart color, making the configuration more intuitive.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，相较于使用难以理解的`hue`参数的原始API，它使用`color`参数将`species`维度直接绑定到图表颜色，使配置更直观。
- en: Finally, this line of code returns a `p` instance that can be reused to draw
    a chart.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，这行代码返回一个可以重用以绘制图表的`p`实例。
- en: 'Next, let’s draw a `histplot`:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们绘制一个`histplot`：
- en: '[PRE3]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/4f9f6ead980a48f039a81dec19b1a9fc.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4f9f6ead980a48f039a81dec19b1a9fc.png)'
- en: Use objects interface API to draw a histplot. Image by Author
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 使用对象接口API绘制histplot。图像由作者提供
- en: 'This line of code shows that the drawing stage does not need to rebind the
    data. We just need to tell the `add` method what to draw: `so.Bars()`, and how
    to calculate it: `so.Hist()`.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这行代码表明绘图阶段不需要重新绑定数据。我们只需告诉`add`方法绘制什么：`so.Bars()`，以及如何计算：`so.Hist()`。
- en: The `add` method also returns a copy of the `Plot` instance, so any adjustments
    in the `add` method will not affect the original data binding. The `p` instance
    can still be reused.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '`add`方法还返回`Plot`实例的副本，因此`add`方法中的任何调整不会影响原始数据绑定。`p`实例仍然可以重用。'
- en: 'Therefore, we continue to call the `p.add()` method to draw a `kdeplot`:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们继续调用`p.add()`方法来绘制一个`kdeplot`：
- en: '[PRE4]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/14137c191e25355e9ee14696fbf11866.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/14137c191e25355e9ee14696fbf11866.png)'
- en: Use objects interface API to draw a kdeplot. Image by Author
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 使用对象接口API绘制kdeplot。图像由作者提供
- en: Since `KDE` is a way of statistic, `so.KDE()` is called on the `stat` parameter
    here. And since the `kdeplot` itself is an area plot, `so.Area()` is used for
    drawing.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 由于`KDE`是一种统计方法，这里在`stat`参数上调用了`so.KDE()`。而且由于`kdeplot`本身是一个区域图，因此使用`so.Area()`进行绘制。
- en: We reused the `p` instance bound to the data, so there is no need to tell the
    chef how to cook each dish, but to directly say what we want. Isn't it much more
    concise and flexible?
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们重用了绑定到数据的`p`实例，所以不需要告诉厨师如何烹饪每道菜，而是直接说我们想要什么。这样不是更加简洁和灵活吗？
- en: Unpacking the Objects Interface with Examples
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用示例解构对象接口
- en: Next, see how some common charts are written using the original Seaborn API
    and the objects interface API.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，看看如何使用原始Seaborn API和对象接口API编写一些常见的图表。
- en: 'Before we start, we need to import the necessary libraries:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，我们需要导入必要的库：
- en: '[PRE5]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Bar chart
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 条形图
- en: 'In the original API, to draw a bar chart, the code is as follows:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在原始API中，绘制条形图的代码如下：
- en: '[PRE6]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/d16e4abd660cfb2cccefee6a81f28990.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d16e4abd660cfb2cccefee6a81f28990.png)'
- en: The original way of drawing a bar chart. Image by Author
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 原始的条形图绘制方式。图像由作者提供
- en: 'In the objects interface, to draw a bar chart, the code is as follows:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在对象接口中，绘制条形图的代码如下：
- en: '[PRE7]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../Images/3ce53f3575c57d6aa684c9f9b1bce1b5.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3ce53f3575c57d6aa684c9f9b1bce1b5.png)'
- en: Use objects interface to draw a bar chart. Image by Author
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 使用对象接口绘制条形图。图像由作者提供
- en: Scatter plot
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 散点图
- en: 'In the original API, to draw a scatter plot, the code is as follows:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在原始API中，绘制散点图的代码如下：
- en: '[PRE8]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](../Images/9e7217563e8f3b81a81ee5e5a3a5067c.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9e7217563e8f3b81a81ee5e5a3a5067c.png)'
- en: In the original way, we use relplot to draw a scatter plot. Image by Author
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在原始方式中，我们使用relplot绘制散点图。图像由作者提供
- en: 'In the objects interface, to draw a scatter plot, the code is as follows:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在对象接口中，绘制散点图的代码如下：
- en: '[PRE9]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](../Images/5c6083c06f7af66107f1c15b0141c04b.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5c6083c06f7af66107f1c15b0141c04b.png)'
- en: When using objects interface, we use so.Dots to draw a scatter plot. Image by
    Author
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 使用对象接口时，我们使用so.Dots绘制散点图。图像由作者提供
- en: You may think that after comparing the drawing of the two APIs, it doesn’t seem
    like the objects interface is too special either.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会觉得在比较了两个 API 的绘图后，对象接口似乎也没有特别之处。
- en: Don’t worry. Let’s take a look at the advanced usage of the objects interface.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 不用担心。让我们看看对象接口的高级用法。
- en: Advanced usage
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 高级用法
- en: Suppose we use Seaborn’s `tips` dataset.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们使用 Seaborn 的 `tips` 数据集。
- en: '[PRE10]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: I want to use a bar chart to see the average tip for different dates and mark
    the values on the chart.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我想使用条形图来查看不同日期的平均小费，并在图表上标记这些值。
- en: 'The chart I want is shown below:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我想要的图表如下所示：
- en: '![](../Images/fc50e7959f39167f59840dbcc27ef8cc.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fc50e7959f39167f59840dbcc27ef8cc.png)'
- en: A bar chart with text to show the values. Image by Author
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 一个带有文本的条形图以显示这些值。图像由作者提供
- en: Before we start drawing, we need to process the `tips` dataset to calculate
    the average value for each day.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始绘图之前，需要处理 `tips` 数据集，以计算每一天的平均值。
- en: '[PRE11]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Then, we can use the objects interface to draw:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以使用对象接口绘制：
- en: '[PRE12]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'We use two tricks here:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里使用了两个技巧：
- en: First, we call the `pipe` method on the `dataframe` to enable chain code calls.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们在 `dataframe` 上调用 `pipe` 方法，以启用链式代码调用。
- en: Second, we can reuse the instance of `so.Plot`, and only bind the data once
    to draw multiple graphs.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，我们可以重用 `so.Plot` 的实例，只需绑定数据一次即可绘制多个图形。
- en: 'Then, let’s see how the code would be written using the original API:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们看看使用原始 API 编写的代码是怎样的：
- en: '[PRE13]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'As you can see, the original code is much more complex:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，原始代码复杂得多：
- en: First, draw a horizontal bar chart.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，绘制一个水平条形图。
- en: Then use iteration to draw the corresponding values on each bar.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 然后使用迭代在每个条形上绘制相应的值。
- en: In comparison, doesn’t the objects interface seem simpler and more flexible?
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 相比之下，对象接口是不是显得更简单和灵活？
- en: Applying the Objects Interface to Real-World Data
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将对象接口应用于实际数据
- en: Next, to help everyone deepen their memory and master the usage of the objects
    interface systematically, I plan to lead everyone to practice in an actual data
    visualization project.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，为了帮助大家加深记忆并系统掌握对象接口的用法，我计划带领大家在实际的数据可视化项目中进行练习。
- en: In this project, I plan to visually explore the data of New York City’s shared
    bicycle system to understand the usage of the city’s shared bicycles and help
    enterprises operate better.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，我计划直观地探索纽约市共享自行车系统的数据，以了解该市共享自行车的使用情况，并帮助企业更好地运营。
- en: Data source
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据来源
- en: We will use the Citi Bike Sharing dataset from Citibikenyc in this project.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在这个项目中使用 Citibikenyc 的 Citi Bike Sharing 数据集。
- en: 'You can find the dataset here: [https://citibikenyc.com/system-data](https://citibikenyc.com/system-data)'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在这里找到数据集：[https://citibikenyc.com/system-data](https://citibikenyc.com/system-data)
- en: The license of this dataset is [here](https://ride.citibikenyc.com/data-sharing-policy).
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这个数据集的许可证可以在 [这里](https://ride.citibikenyc.com/data-sharing-policy) 找到。
- en: To facilitate the following coding process, I cleaned and merged the data in
    this dataset and finally synthesized one data set.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 为了方便后续编码过程，我清理并合并了数据集中的数据，最终合成了一个数据集。
- en: Data preprocessing
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据预处理
- en: 'Before we begin, we should understand the fields included in this dataset,
    which can be achieved by executing the following code:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始之前，我们应当了解数据集中包含的字段，这可以通过执行以下代码来实现：
- en: '[PRE14]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: This dataset contains 15 fields, and since our goal is to understand the usage
    of shared bicycles in the city, all 15 fields will be helpful for us.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这个数据集包含 15 个字段，由于我们的目标是了解城市共享自行车的使用情况，所以所有 15 个字段对我们都很有帮助。
- en: 'Also, to facilitate the analysis of the use of shared bicycles in different
    months of each year, as well as on weekdays and non-working days of each week,
    I need to generate two fields for the dataset: `Start Month` and `Day Of Week`:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，为了便于分析每年不同月份以及每周工作日和非工作日的共享自行车使用情况，我需要为数据集生成两个字段：`Start Month` 和 `Day Of
    Week`：
- en: '[PRE16]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'To facilitate display, I will convert the `Gender` field into text gender,
    convert the `Birth Year` into `Decade`, and change `Trip Duration` from seconds
    to minutes:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 为了方便展示，我将 `Gender` 字段转换为文本性别，将 `Birth Year` 转换为 `Decade`，并将 `Trip Duration`
    从秒转换为分钟：
- en: '[PRE17]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Finally, since the original dataset is large, we only need to find out the
    distribution of the data, so I will sample the dataset for easier and faster drawing:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，由于原始数据集很大，我们只需找出数据的分布，因此我将对数据集进行抽样，以便更快更轻松地绘图：
- en: '[PRE18]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Visual analysis
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可视化分析
- en: '**Remember, the purpose of data visualization is not just to display data,
    but to excavate the story behind the data.**'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '**记住，数据可视化的目的不仅仅是展示数据，而是挖掘数据背后的故事。**'
- en: In this project, I expect to understand under what circumstances users will
    use shared bicycles, to facilitate the distribution of bicycles or carry out corresponding
    promotions.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，我期望了解用户在什么情况下会使用共享自行车，以便优化自行车分布或进行相应的推广。
- en: First, I want to see in which season people are more inclined to use shared
    bicycles.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我想了解在不同季节，人们更倾向于使用共享自行车。
- en: Since I want to see the total amount of data by month, I directly use the original
    dataset for drawing.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我想查看按月的数据总量，我直接使用原始数据集进行绘图。
- en: But to speed up the drawing, I aggregate the data in the `dataframe` and then
    call the pipeline using the `pipe` method.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 为了加快绘图速度，我在`dataframe`中汇总数据，然后使用`pipe`方法调用管道。
- en: '[PRE19]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '![](../Images/f233f521a535ff1456aaf691993dfb66.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f233f521a535ff1456aaf691993dfb66.png)'
- en: View shared bike usage by month. Image by Author
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 按月查看共享自行车使用情况。图片来源：作者
- en: The chart shows that bicycles have more uses in March and October of each year.
    This indicates that people are more willing to ride bikes in a mild climate.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 图表显示，每年的三月和十月自行车的使用次数更多。这表明人们在气候温和的时候更愿意骑自行车。
- en: Next, I want to see which days of the week people use shared bicycles more.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我想了解人们在一周中的哪些天使用共享自行车更多。
- en: Since we only need to see a proportion here, I use the sampled dataset and set
    a `proportion` in `so.Hist()`.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们这里只需要查看比例，我使用了采样数据集，并在`so.Hist()`中设置了一个`proportion`。
- en: '[PRE20]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '![](../Images/1d10a475bc814621af62ba0ad91bc3bc.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1d10a475bc814621af62ba0ad91bc3bc.png)'
- en: Which days of the week do people use shared bicycles more? Image by Author
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 一周中的哪些天人们使用共享自行车更多？图片来源：作者
- en: Both males and females use shared bicycles more on weekdays, probably for commuting
    to work.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 男性和女性在工作日使用共享自行车的频率更高，这可能是为了通勤。
- en: But we also found that users with ‘Unknown’ gender use shared bicycles more
    on weekends.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 但我们也发现‘未知’性别的用户在周末使用共享自行车的频率更高。
- en: Why is this the case? We can continue to explore.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么会这样？我们可以继续探讨。
- en: Next, I want to see the proportion of cycling duration in different gender situations.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我想了解在不同性别情况下骑行时长的比例。
- en: Here I will draw a histogram for each gender separately and use `facet` for
    layout.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我将为每个性别分别绘制直方图，并使用`facet`进行布局。
- en: To eliminate the interference generated by anomalous data, I only took data
    within one standard deviation of the average riding time for reference.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 为了消除异常数据带来的干扰，我只参考了平均骑行时间一个标准差内的数据。
- en: '[PRE21]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '![](../Images/3e30b6da446ee41ca4a1230e1d5eca22.png)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3e30b6da446ee41ca4a1230e1d5eca22.png)'
- en: A histogram for each gender separately to show the proportion of cycling duration.
    Image by Author
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 分别为每个性别绘制直方图以显示骑行时长的比例。图片来源：作者
- en: The chart shows that the cycling duration of males and females conforms to our
    cognition.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 图表显示，男性和女性的骑行时长符合我们的认知。
- en: Still, the cycling duration of users with the ‘Unknown’ gender seems more evenly
    distributed, indicating that cycling is more casual and lacks purpose.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，‘未知’性别用户的骑行时长似乎分布更均匀，这表明骑行更随意且缺乏目的。
- en: 'Fourth, I want to understand the proportion of cycling duration by membership
    category:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 第四步，我想了解按会员类别划分的骑行时长比例：
- en: '[PRE22]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '![](../Images/e83102fd04064ce8d6d8c968746ba08a.png)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e83102fd04064ce8d6d8c968746ba08a.png)'
- en: The proportion of cycling duration by membership category. Image by Author
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 按会员类别划分的骑行时长比例。图片来源：作者
- en: From the chart, we can see that for member users, regardless of gender, the
    distribution of cycling duration is more purposeful, tending to short-term cycling
    to quickly reach their destination.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 从图表中可以看出，对于会员用户，不论性别，骑行时长的分布更有目的性，倾向于短时间骑行以快速到达目的地。
- en: For ordinary users, users with ‘Unknown’ gender have a more casual cycling duration
    and longer cycling times.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 对于普通用户，‘未知’性别的用户骑行时长更随意，骑行时间也较长。
- en: It seems that these users are there to temporarily get on their bikes and see
    the scenery?
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 看来这些用户是为了暂时骑上自行车欣赏风景？
- en: Therefore, in the fifth step, I want to see the distribution of bicycle usage
    times between stations to verify my guess.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在第五步中，我想查看站点之间自行车使用时间的分布，以验证我的猜想。
- en: Since displaying so many stations on the chart can’t be done, I first aggregate
    the sampled data by `Start Station ID` and `End Station ID` count.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 由于图表中显示如此多的站点是不可能的，我首先按`Start Station ID`和`End Station ID`的计数对采样数据进行汇总。
- en: '[PRE23]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Also, to avoid too many data points interfering with our analysis, I only took
    the data with the top 20% count for drawing.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，为了避免过多的数据点干扰我们的分析，我只取了前 20% 的数据进行绘图。
- en: '[PRE24]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Then use a scatter plot to plot the data and use the size of the point to represent
    the count size.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 然后使用散点图绘制数据，并用点的大小表示计数大小。
- en: '[PRE25]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '![](../Images/04ee29ec4ff0ed06003f30b9decb71b4.png)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/04ee29ec4ff0ed06003f30b9decb71b4.png)'
- en: Distribution of rides between stations. Image by Author
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 车站之间的骑行分布。图片来源：作者
- en: The chart shows that the number of rides is mainly distributed between stations
    with ID values of 3180 and 3220.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 图表显示，骑行数量主要分布在 ID 值为 3180 和 3220 的车站之间。
- en: Compared with the table data, this area is concentrated for office workers.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 与表格数据相比，这个区域主要集中在办公室工作人员。
- en: There is also a lot of data distribution in the Station ID between 3260 and
    3280.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在 3260 到 3280 的车站 ID 之间还有大量数据分布。
- en: By comparing the table data, we can see many parks and tourist attractions in
    this area.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 通过比较表格数据，我们可以看到这个区域有许多公园和旅游景点。
- en: 'This confirms our guess: in addition to office workers who tend to ride shared
    bicycles on weekdays, many tourists are willing to use shared bikes to go out
    and see the scenery on weekends.'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 这证实了我们的猜测：除了平日倾向于骑共享单车的办公室工作人员外，许多游客愿意在周末骑共享单车出门游览风景。
- en: Therefore, for this city’s shared bicycle operation department, the operation
    strategy can not only discount on weekdays to attract members to ride more.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，对于这个城市的共享单车运营部门，运营策略不仅要在工作日打折吸引会员多骑行。
- en: They can also use new user registration gifts or promote more attractions in
    the app on weekends to encourage tourists or temporary users to become member
    users.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 他们还可以利用新的用户注册礼物或在周末推广更多应用内的景点，鼓励游客或临时用户成为会员用户。
- en: 'Room for Growth: Current Limitations of Objects Interface'
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发展空间：对象接口的当前局限性
- en: After demonstrating how the Seaborn objects interface helps us quickly perform
    data analysis in actual projects, I would like to discuss some improvements the
    objects interface needs to make based on my experience.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在展示 Seaborn 对象接口如何帮助我们在实际项目中快速进行数据分析后，我想基于我的经验讨论一些对象接口需要改进的地方。
- en: First, there needs to be more performance in the drawing.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，绘图性能需要提升。
- en: As shown in the above project, when I use the original dataset to draw, the
    speed is languid, and Seaborn doesn’t use the calculation ability of `Numpy` or
    `Python Arrow`.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 如上面项目所示，当我使用原始数据集绘图时，速度缓慢，Seaborn 没有利用 `Numpy` 或 `Python Arrow` 的计算能力。
- en: Second, there needs to be more documentation.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，需要更多的文档。
- en: So many APIs I can not find the specific use of the introduction, and I can
    only slowly fumble.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 许多 API 的具体用法我找不到介绍，只能慢慢摸索。
- en: And the API design doesn’t feel very mature to me yet.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 而且 API 设计目前给我的感觉还不够成熟。
- en: For example, I believe `so.Stat` and `so.Move` should be placed in the Data
    Mapping phase, but currently, they are placed in the Presentation phase through
    the add method, which needs to be revised.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我认为 `so.Stat` 和 `so.Move` 应该放在数据映射阶段，但目前通过 add 方法放在了展示阶段，这需要修订。
- en: Finally, the selection of charts needs to be more rich.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，图表的选择需要更丰富。
- en: I initially planned to use pie charts and map charts in the city bike-sharing
    project, but I couldn’t find them.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 我最初计划在城市共享单车项目中使用饼图和地图图表，但我找不到它们。
- en: Although I could write an extension myself, that’s a different story.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我可以自己编写扩展，但那是另一回事。
- en: Also, when I want to layout the charts more complexly, I need to use Matplotlib’s
    `subplots` API and integrate it with the `on` method, which still needs to be
    fully encapsulated.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，当我想更复杂地布局图表时，我需要使用 Matplotlib 的 `subplots` API 并将其与 `on` 方法集成，这仍然需要完全封装。
- en: Despite these shortcomings, I am confident about the future of Seaborn.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管存在这些不足，我对 Seaborn 的未来充满信心。
- en: I think the team’s choice of declarative graphical syntax has made Seaborn easier
    and more flexible to use.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为团队选择声明式图形语法使得 Seaborn 更易用且更灵活。
- en: I hope the Seaborn community will become more active in the near future.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望 Seaborn 社区在不久的将来变得更加活跃。
- en: Conclusion
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In this article, I introduced the objects interface feature in Seaborn 0.12.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我介绍了 Seaborn 0.12 中的对象接口功能。
- en: By introducing the benefits of declarative graphic syntax, I let you understand
    why the Seaborn team chose to evolve in this way.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 通过引入声明式图形语法的好处，我让你理解为什么 Seaborn 团队选择以这种方式发展。
- en: Also, to cater to readers who need to become more familiar with Seaborn, I introduced
    the differences and similarities in API design philosophy between the original
    Seaborn and the objects interface version.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，为了迎合那些需要进一步熟悉Seaborn的读者，我介绍了原始Seaborn与对象接口版本在API设计哲学上的异同。
- en: By taking you through an actual project analysis of city bike-sharing usage,
    you’ve seen first-hand how the objects interface API is used and my expectations
    for it.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 通过实际项目分析城市共享单车的使用情况，你亲眼见证了对象接口API的使用方式及我的期望。
- en: Always remember, the goal of data visualization is not just to display data,
    but to uncover the stories behind the data.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 永远记住，数据可视化的目标不仅仅是展示数据，而是揭示数据背后的故事。
- en: I hope you found this article helpful. Feel free to comment and participate
    in the discussion if you have any questions or new ideas. I’m more than happy
    to answer your questions.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你觉得这篇文章对你有帮助。如果你有任何问题或新想法，欢迎评论和参与讨论。我很乐意回答你的问题。
- en: 'Dataset Usage Permission:'
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据集使用权限：
- en: The “penguins” and “tips” datasets used in the article are example datasets
    included in the seaborn source code. Seaborn is an open-source software that adheres
    to the [BSD 3-Clause “New” or “Revised” License](https://github.com/mwaskom/seaborn/blob/master/LICENSE.md),
    which allows for commercial purposes.
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 文章中使用的“企鹅”和“提示”数据集是包含在seaborn源代码中的示例数据集。Seaborn是一个遵循[BSD 3-Clause “New”或“Revised”许可证](https://github.com/mwaskom/seaborn/blob/master/LICENSE.md)的开源软件，允许用于商业目的。
- en: 'You can download the Citi Bike trip history data from here: [https://citibikenyc.com/system-data](https://citibikenyc.com/system-data)
    and the license [https://ride.citibikenyc.com/data-sharing-policy](https://ride.citibikenyc.com/data-sharing-policy)
    allow me to use it in my article too.'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以从这里下载Citi Bike旅行历史数据：[https://citibikenyc.com/system-data](https://citibikenyc.com/system-data)，并且许可证[https://ride.citibikenyc.com/data-sharing-policy](https://ride.citibikenyc.com/data-sharing-policy)允许我在文章中使用这些数据。
- en: 'Besides improving code execution speed and performance, using various tools
    to improve work efficiency is also a performance enhancement:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 除了提高代码执行速度和性能外，使用各种工具提高工作效率也是一种性能提升：
- en: '![Peng Qian](../Images/fa6bd24b4781f623be8ea40c4e6bdb78.png)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
  zh: '![Peng Qian](../Images/fa6bd24b4781f623be8ea40c4e6bdb78.png)'
- en: '[Peng Qian](https://qtalen.medium.com/?source=post_page-----65fa7a4e6577--------------------------------)'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '[Peng Qian](https://qtalen.medium.com/?source=post_page-----65fa7a4e6577--------------------------------)'
- en: Python Toolbox
  id: totrans-212
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python 工具箱
- en: '[View list](https://qtalen.medium.com/list/python-toolbox-4289824c6407?source=post_page-----65fa7a4e6577--------------------------------)6
    stories![Seaborn 0.12: An Insightful Guide to the Objects Interface and Declarative
    Graphics](../Images/6c1f4ca8d7b82c288cb229b73f560c04.png)![Supercharge Your Python
    Asyncio With Aiomultiprocess: A Comprehensive Guide](../Images/9c366de04067cd0ec1b30d9ce223011b.png)![Conquer
    Retries in Python Using Tenacity: An In-depth Tutorial](../Images/e636d5546f5826d60865c6a95f976fa8.png)'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '[查看列表](https://qtalen.medium.com/list/python-toolbox-4289824c6407?source=post_page-----65fa7a4e6577--------------------------------)6
    个故事！[Seaborn 0.12: 透视对象接口和声明性图形的指南](../Images/6c1f4ca8d7b82c288cb229b73f560c04.png)![用
    Aiomultiprocess 提升你的 Python Asyncio 性能：全面指南](../Images/9c366de04067cd0ec1b30d9ce223011b.png)![用
    Tenacity 征服 Python 中的重试：深入教程](../Images/e636d5546f5826d60865c6a95f976fa8.png)'
- en: Thank you for reading my stories.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读我的故事。
- en: You can [**subscribe**](https://www.dataleadsfuture.com/#/portal) to get the
    latest data science stories from me.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以[**订阅**](https://www.dataleadsfuture.com/#/portal)以获取我最新的数据科学故事。
- en: Find me on [LinkedIn](https://www.linkedin.com/in/qtalen/) or [Twitter(X)](https://twitter.com/qtalen)
    if you have any questions.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有任何问题，可以在[LinkedIn](https://www.linkedin.com/in/qtalen/)或[Twitter(X)](https://twitter.com/qtalen)上找到我。
- en: This article was originally published on [Data Leads Future](https://www.dataleadsfuture.com/seaborn-0-12-an-insightful-guide-to-the-objects-interface-and-declarative-graphics/#/portal).
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 本文最初发布在[数据引领未来](https://www.dataleadsfuture.com/seaborn-0-12-an-insightful-guide-to-the-objects-interface-and-declarative-graphics/#/portal)。
