- en: 'Tabyl: A Frequency Table for the Modern R User'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/tabyl-a-frequency-table-for-the-modern-r-user-e061cd48baef?source=collection_archive---------4-----------------------#2023-05-20](https://towardsdatascience.com/tabyl-a-frequency-table-for-the-modern-r-user-e061cd48baef?source=collection_archive---------4-----------------------#2023-05-20)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Out with the old, in with the new!
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@zvonimir.boban.mef?source=post_page-----e061cd48baef--------------------------------)[![Zvonimir
    Boban](../Images/cbad06b7e1f5d021ce9b2dc31b8a6a65.png)](https://medium.com/@zvonimir.boban.mef?source=post_page-----e061cd48baef--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e061cd48baef--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e061cd48baef--------------------------------)
    [Zvonimir Boban](https://medium.com/@zvonimir.boban.mef?source=post_page-----e061cd48baef--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe31978768a4e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftabyl-a-frequency-table-for-the-modern-r-user-e061cd48baef&user=Zvonimir+Boban&userId=e31978768a4e&source=post_page-e31978768a4e----e061cd48baef---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e061cd48baef--------------------------------)
    ·6 min read·May 20, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe061cd48baef&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftabyl-a-frequency-table-for-the-modern-r-user-e061cd48baef&user=Zvonimir+Boban&userId=e31978768a4e&source=-----e061cd48baef---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe061cd48baef&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftabyl-a-frequency-table-for-the-modern-r-user-e061cd48baef&source=-----e061cd48baef---------------------bookmark_footer-----------)![](../Images/d48ea5e85a16b163c6b27c381d3e8e90.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Image created using Canva Image Generator
  prefs: []
  type: TYPE_NORMAL
- en: Anyone who has worked with categorical data eventually came across a need to
    calculate the absolute number and proportion of a certain class. This article
    introduces the `tabyl` function for creating frequency tables through a series
    of hands-on examples.
  prefs: []
  type: TYPE_NORMAL
- en: What does tabyl bring to the table (no pun intended :D)?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `tabyl` function is a feature of the `janitor` package in R. It’s a very
    convenient tool for creating contingency tables, otherwise known as frequency
    tables or cross-tabulations. Here are some of the benefits of using `tabyl`:'
  prefs: []
  type: TYPE_NORMAL
- en: '1\. Easy syntax: `tabyl` has an easy-to-use syntax. It can take one, two, or
    three variables, and it automatically returns a data frame that includes counts
    and proportions.'
  prefs: []
  type: TYPE_NORMAL
- en: '2\. Flexibility: `tabyl` can generate one-way (single variable), two-way (two
    variables), and three-way (three variables) contingency tables. This flexibility
    makes it suitable for a wide range of applications.'
  prefs: []
  type: TYPE_NORMAL
- en: '3\. Automatic calculation of proportions: `tabyl` automatically calculates
    the proportions (percentages) for one-way contingency tables. For two and three-way
    tables, the same result can be accomplished in combination with the `adorn_percentages`
    function from the same package.'
  prefs: []
  type: TYPE_NORMAL
- en: '4\. Compatibility with `dplyr`: The output of `tabyl` is a data frame (or tibble),
    which makes it fully compatible with `dply` functions and the tidyverse ecosystem.
    This means you can easily pipe `%>%` the output into further data wrangling or
    visualization functions.'
  prefs: []
  type: TYPE_NORMAL
- en: '5\. Neat and informative output: `tabyl` provides neat and informative output,
    which includes the variable names as row names and column names, making it easier
    to interpret the results.'
  prefs: []
  type: TYPE_NORMAL
- en: For all these reasons, `tabyl` is a great choice when you want to create frequency
    tables in R. It simplifies many steps and integrates well with the tidyverse approach
    to data analysis.
  prefs: []
  type: TYPE_NORMAL
- en: The dataset
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/52c15143fee6d189481988be0cd4dfdb.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Hans Veth](https://unsplash.com/@hans_veth?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/s/photos/mushroom?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: This post will demonstrate the benefits of the `tabyl` function from the `janitor`
    package using the data on the edibility of different types of mushrooms depending
    on their odor. Here, I will be using a tidied dataset under the name mushrooms,
    but you can access the [original data](https://www.kaggle.com/datasets/uciml/mushroom-classification?resource=download)
    on Kaggle. Below is the code used for cleaning the data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: If you are unfamiliar with the above syntax, please check out a hands-on guide
    to using the tidyverse in one of my earlier articles.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/diving-into-the-tidyverse-using-the-titanic-data-83f54295d5df?source=post_page-----e061cd48baef--------------------------------)
    [## Diving into the tidyverse using the Titanic data'
  prefs: []
  type: TYPE_NORMAL
- en: towardsdatascience.com](/diving-into-the-tidyverse-using-the-titanic-data-83f54295d5df?source=post_page-----e061cd48baef--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: The old
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In order to better understand which advantages `tabyl` offers, let’s first make
    a frequency table using the base R `table` function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Unsurprisingly, it turns out that odor is a great predictor of mushroom edibility,
    with anything “funny-smelling” probably being poisonous. Thank you evolution!
    Also, there seem to be many more poisonous mushrooms, so it’s always important
    to be cautious when picking mushrooms on your own.
  prefs: []
  type: TYPE_NORMAL
- en: If we want to be able to use the variable names directly without specifying
    the `$` operator, we would need to use the `with` command to make the dataset
    available to the `table` function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Unfortunately, if we want to upgrade to proportions instead of absolute numbers,
    we can not use the same function but another one instead — `prop.table` .
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: By default, this gives us a column-wise proportion table. If we want row-wise
    proportions, we can specify the `margin` argument (1 for row-wise and 2 for column-wise).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: All these special functions can feel cumbersome and hard to remember, so a single
    function which contains all the above funcionality would be nice to have.
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, if we check the type of the created object using the `class(mush_table)`
    command, we see that it is of a class `table`.
  prefs: []
  type: TYPE_NORMAL
- en: This creates a compatibility problem, since nowadays R users are mostly using
    the tidyverse ecosystem which is centered around applying functions to `data.frame`
    type objects and stringing the results together using the pipe (`%>%`) operator.
  prefs: []
  type: TYPE_NORMAL
- en: The new
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let’s do the same things with the `tabyl` function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Compared to the corresponding `table` output, the resulting tables aretidier
    using the `tabyl` function, with variable names (class) being explicitly stated.
    Moreover, for the one-way table, aside from numbers, the percentages are automatically
    generated as well.
  prefs: []
  type: TYPE_NORMAL
- en: We can also notice that we didn’t have to use the which functio to be able to
    specify the variable names directly. Additionally, running `class(mush_tabyl)`
    tells us that the resulting object is of a `data.frame` class which ensures tidyverse
    compatibility!
  prefs: []
  type: TYPE_NORMAL
- en: The adorned janitor
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/2cc78ca4b68b0faf12ec63349517fdd7.png)'
  prefs: []
  type: TYPE_IMG
- en: Image created using Canva Image Generator
  prefs: []
  type: TYPE_NORMAL
- en: For additional `tabyl` functionalities, the `janitor` package also contains
    a series of `adorn` functions. To get the percentages, we simply pipe the resulting
    frequency table to the `adorn_percentages` function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: If we want the column-wise percentages, we can specify the `denominator` argument
    as “col”.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: The `tabyl` — `adorn` combo even enables us to easily combine both the number
    and percentage in a same table cell…
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: … or add the totals to the rows and columns.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `tabyl()` function from the `janitor` package in R offers a user-friendly
    and flexible solution for creating one-way, two-way, or three-way contingency
    tables. It excels in automatically computing proportions and producing tidy data
    frames that integrate seamlessly with the tidyverse ecosystem, especially `dplyr`.
    Its outputs are well-structured and easy to interpret, and it can be further enhanced
    with adorn functions, simplifying the overall process of generating informative
    frequency tables. This makes `tabyl()` a highly beneficial tool in data analysis
    in R.
  prefs: []
  type: TYPE_NORMAL
