- en: Software Engineering Best Practices for Writing Maintainable ML Code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/software-engineering-best-practices-for-writing-maintainable-ml-code-717934bd5590?source=collection_archive---------2-----------------------#2023-08-06](https://towardsdatascience.com/software-engineering-best-practices-for-writing-maintainable-ml-code-717934bd5590?source=collection_archive---------2-----------------------#2023-08-06)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/1d59ed9c7fdba6ad95f054d4357d2f46.png)'
  prefs: []
  type: TYPE_IMG
- en: A data scientist who is lost in a forest full of code. Related to the second
    and last tip. Image created with [Midjourney](https://www.midjourney.com) by the
    author.
  prefs: []
  type: TYPE_NORMAL
- en: Advanced coding tips for data scientists
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://hennie-de-harder.medium.com/?source=post_page-----717934bd5590--------------------------------)[![Hennie
    de Harder](../Images/3e4f2cccd6cb976ca3f8bf15597daea8.png)](https://hennie-de-harder.medium.com/?source=post_page-----717934bd5590--------------------------------)[](https://towardsdatascience.com/?source=post_page-----717934bd5590--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----717934bd5590--------------------------------)
    [Hennie de Harder](https://hennie-de-harder.medium.com/?source=post_page-----717934bd5590--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ffb96be98b7b9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsoftware-engineering-best-practices-for-writing-maintainable-ml-code-717934bd5590&user=Hennie+de+Harder&userId=fb96be98b7b9&source=post_page-fb96be98b7b9----717934bd5590---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----717934bd5590--------------------------------)
    ·11 min read·Aug 6, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F717934bd5590&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsoftware-engineering-best-practices-for-writing-maintainable-ml-code-717934bd5590&user=Hennie+de+Harder&userId=fb96be98b7b9&source=-----717934bd5590---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F717934bd5590&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsoftware-engineering-best-practices-for-writing-maintainable-ml-code-717934bd5590&source=-----717934bd5590---------------------bookmark_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Unlike traditional software engineering projects, ML codebases tend to lag
    behind in code quality due to their complex and evolving nature, leading to increased
    technical debt and difficulties in collaboration. Prioritizing maintainability
    is important to create robust ML solutions that can adapt, scale, and deliver
    value over time.**'
  prefs: []
  type: TYPE_NORMAL
- en: In recent years, machine learning has taken the world by storm, transforming
    industries from healthcare to finance and more. As more organizations jump on
    the ML bandwagon to discover new possibilities and insights, the significance
    of writing maintainable and robust ML code becomes crucial. By crafting ML code
    that’s easy to work with and stands the test of time, teams can collaborate better
    and guarantee success as models and projects grow and adapt. The following section
    will show common examples from ML codebases and explain how to handle those properly.
  prefs: []
  type: TYPE_NORMAL
- en: Don’t Create Monoliths
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This tip is probably irrelevant for you, but it’s written for the single person
    who is not aware of this (until now)!
  prefs: []
  type: TYPE_NORMAL
- en: Monolithic scripts, a.k.a. a single script for the whole project, may arise
    when you reuse your experimental code in…
  prefs: []
  type: TYPE_NORMAL
