["```py\n# Import the required packages\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom scipy import io\n```", "```py\n# Read a Mat file using scipy.io\nmat = io.loadmat('ver.mat')\n# Exract the electrical signals\nver = mat['ver']\n```", "```py\n# The size of variable \"ver\"\nprint(ver.shape)\n```", "```py\n(100, 500)\n```", "```py\n# Calculate the sampling rate\nsampling_rate = 200.0\n# Calculate the duration of the recordings\nduration = ver.shape[1]/sampling_rate\n# Generate the time axis of the recordings\ntime_axis = np.arange(0, duration, 1/sampling_rate)\n```", "```py\n# Subplot figure with 10 rows and one column\nfig, axs = plt.subplots(10, figsize=(10,5), sharex=True)\n\n# Plot the first 10 recordings\nfor i in range(10):\n    axs[i].plot(time_axis, ver[i,:])\n    # Hide the values of y-axis\n    axs[i].set_yticks([])\n    # Fit the x-axis along the signal\n    axs[i].set_xlim([time_axis[0], time_axis[-1]])\n\n# Set a title and xlabel\naxs[0].set_title('The first 10 Signals')\naxs[9].set_xlabel('Time [Sec]')\nplt.show()\n```", "```py\n# Apply the ensamble averaging method on the Recordings.\nver_signal = np.mean(ver, axis=0)\n# Extract the actual VER from the Mat file\nactual_ver = np.reshape(mat['actual_ver'], [500])\n\n# Plot the ensambled EEG recordings and the actual VER\nplt.plot(time_axis, ver_signal, color='green', label='Ensamble Averaging')\nplt.plot(time_axis, actual_ver, color='red', label='Actual VER')\nplt.xlim([time_axis[0], time_axis[-1]])\nplt.xlabel('Time [sec]')\nplt.ylabel('Average')\nplt.title('Visual Evoked Response')\nplt.legend()\nplt.show()\n```"]