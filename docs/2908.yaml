- en: Ant Colony Optimization in Action
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/ant-colony-optimization-in-action-6d9106de60af?source=collection_archive---------4-----------------------#2023-09-20](https://towardsdatascience.com/ant-colony-optimization-in-action-6d9106de60af?source=collection_archive---------4-----------------------#2023-09-20)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/a404a01ac29f0af038d7f4bdf990bd20.png)'
  prefs: []
  type: TYPE_IMG
- en: A skiing ant. Image created with Dall·E by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Solving optimization problems and enhancing results with ACO in Python
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://hennie-de-harder.medium.com/?source=post_page-----6d9106de60af--------------------------------)[![Hennie
    de Harder](../Images/3e4f2cccd6cb976ca3f8bf15597daea8.png)](https://hennie-de-harder.medium.com/?source=post_page-----6d9106de60af--------------------------------)[](https://towardsdatascience.com/?source=post_page-----6d9106de60af--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----6d9106de60af--------------------------------)
    [Hennie de Harder](https://hennie-de-harder.medium.com/?source=post_page-----6d9106de60af--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ffb96be98b7b9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fant-colony-optimization-in-action-6d9106de60af&user=Hennie+de+Harder&userId=fb96be98b7b9&source=post_page-fb96be98b7b9----6d9106de60af---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----6d9106de60af--------------------------------)
    ·10 min read·Sep 20, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F6d9106de60af&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fant-colony-optimization-in-action-6d9106de60af&user=Hennie+de+Harder&userId=fb96be98b7b9&source=-----6d9106de60af---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F6d9106de60af&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fant-colony-optimization-in-action-6d9106de60af&source=-----6d9106de60af---------------------bookmark_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Welcome back! In my** [**previous post**](/meta-heuristics-explained-ant-colony-optimization-d016fe925108)**,
    I introduced the fundamentals of Ant Colony Optimization (ACO). In this installment,
    we’ll delve into implementing the ACO algorithm from scratch to tackle two distinct
    problem types.**'
  prefs: []
  type: TYPE_NORMAL
- en: The problems we’ll be addressing are the Traveling Salesman Problem (TSP) and
    the Quadratic Assignment Problem (QAP). Why these two? Well, the TSP is a classic
    challenge, and ACO happens to be an effective algorithm for finding the most cost-efficient
    path through a graph. On the other hand, the Quadratic Assignment Problem represents
    a different class of problems related to optimizing the arrangement of items,
    and in this post, I aim to demonstrate that ACO can be a valuable tool for solving
    such assignment-related problems as well. This versatility makes the ACO algorithm
    applicable to a wide range of problems. Finally, I’ll share some tips for achieving
    improved solutions more rapidly.
  prefs: []
  type: TYPE_NORMAL
- en: Traveling Salesman Problem
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'TSP is straightforward to describe but can pose a significant challenge in
    finding a solution. Here’s the basic definition: you’re tasked with discovering
    the shortest route that visits all nodes in a graph. This problem falls into the
    category of…'
  prefs: []
  type: TYPE_NORMAL
