["```py\n{\n    \"name\": \"show_screen\",\n    \"description\": \"Determine which screen the user wants to see\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"screen_to_show\": {\n                \"description\": \"type of screen to show. Either \n                    'account': 'all personal data of the user', \n                    'settings': 'if the user wants to change the settings of \n                                the app'\",\n                \"enum\": [\n                    \"account\",\n                    \"settings\"\n                ],\n                \"type\": \"string\"\n            }\n        },\n        \"required\": [\n            \"screen_to_show\"\n        ]\n    }\n},\n```", "```py\n\"messages\": [\n        {\n            \"role\": \"system\",\n            \"content\": \"The current date and time is 2023-07-13T08:21:16+02:00.\n                       Be very presumptive when guessing the values of \n                       function parameters.\"\n        },\n```", "```py\n\"trip_date_time\": {\n      \"description\": \"Requested DateTime for the departure or arrival of the \n                      trip in 'YYYY-MM-DDTHH:MM:SS+02:00' format.\n                      The user will use a time in a 12 hour system, make an \n                      intelligent guess about what the user is most likely to \n                      mean in terms of a 24 hour system, e.g. not planning \n                      for the past.\",\n                      \"type\": \"string\"\n                  },\n```", "```py\n\"explicit_day_part_reference\": {\n          \"description\": \"Always prefer None! None if the request refers to \n                        the current day, otherwise the part of the day the \n                        request refers to.\"\n          \"enum\": [\"none\", \"morning\", \"afternoon\", \"evening\", \"night\"], \n                           }\n```", "```py\n\"function_call\": {\n                    \"name\": \"outings\",\n                    \"arguments\": \"{\\n  \\\"area\\\": \\\"Amsterdam\\\"\\n}\"\n                }\n```", "```py\nnavController.navigate(\"outings/?area=Amsterdam\")\n```", "```py\nNavigator.pushNamed(\n      context,\n      '/outings',\n      arguments: ScreenArguments(\n        area: 'Amsterdam',\n      ),\n    );\n```", "```py\nNavigationStack(path: $router.path) {\n            ...\n}\n```", "```py\nrouter.path.append(\"outing?area=Amsterdam\")\n```"]