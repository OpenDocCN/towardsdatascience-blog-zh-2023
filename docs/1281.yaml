- en: Why Taskgroup and Timeout Are so Crucial in Python 3.11 Asyncio
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/why-taskgroup-and-timeout-are-so-crucial-in-python-3-11-asyncio-c424bcc88b89?source=collection_archive---------5-----------------------#2023-04-12](https://towardsdatascience.com/why-taskgroup-and-timeout-are-so-crucial-in-python-3-11-asyncio-c424bcc88b89?source=collection_archive---------5-----------------------#2023-04-12)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PYTHON CONCURRENCY](https://medium.com/@qtalen/list/python-concurrency-2c979347da3b)'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Embracing Structured Concurrency in Python 3.11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://qtalen.medium.com/?source=post_page-----c424bcc88b89--------------------------------)[![Peng
    Qian](../Images/9ce9aeb381ec6b017c1ee5d4714937e2.png)](https://qtalen.medium.com/?source=post_page-----c424bcc88b89--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c424bcc88b89--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c424bcc88b89--------------------------------)
    [Peng Qian](https://qtalen.medium.com/?source=post_page-----c424bcc88b89--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F8e2fe735546d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-taskgroup-and-timeout-are-so-crucial-in-python-3-11-asyncio-c424bcc88b89&user=Peng+Qian&userId=8e2fe735546d&source=post_page-8e2fe735546d----c424bcc88b89---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c424bcc88b89--------------------------------)
    ·6 min read·Apr 12, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc424bcc88b89&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-taskgroup-and-timeout-are-so-crucial-in-python-3-11-asyncio-c424bcc88b89&user=Peng+Qian&userId=8e2fe735546d&source=-----c424bcc88b89---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc424bcc88b89&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-taskgroup-and-timeout-are-so-crucial-in-python-3-11-asyncio-c424bcc88b89&source=-----c424bcc88b89---------------------bookmark_footer-----------)![](../Images/d2c98fe735728660298181954df9a9cc.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Brett Jordan](https://unsplash.com/@brett_jordan?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: '**New features of the Python 3.11 asyncio package**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**1\. Introduction**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In last year’s Python 3.11 release, the asyncio package added the`TaskGroup`
    and `timeout`APIs. These two APIs introduced the official Structured Concurrency
    feature to help us better manage the life cycle of concurrent tasks. Today, I’ll
    introduce you to using these two APIs and the significant improvements Python
    has brought to our concurrent programming with the introduction of Structured
    Concurrency.
  prefs: []
  type: TYPE_NORMAL
- en: '**2\. TaskGroup**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`TaskGroup` is created using an asynchronous context manager, and concurrent
    tasks can be added to the group by the method `create_task`, with the following
    code example:'
  prefs: []
  type: TYPE_NORMAL
- en: When the context manager exits, it waits for all tasks in the group to complete.
    While waiting, we can still add new tasks to…
  prefs: []
  type: TYPE_NORMAL
