["```py\nimport inspect\nimport logging\nimport os\n\nimport pandas as pd\nimport requests\nfrom vdk.api.job_input import IJobInput\n\ndef run(job_input: IJobInput):\n    \"\"\"\n    Download datasets required by the scenario and put them in the data lake.\n    \"\"\"\n    log.info(f\"Starting job step {__name__}\")\n\n    api_key = job_input.get_property(\"api_key\")\n\n    start = 1\n    rows = 100\n    basic_url = f\"https://api.europeana.eu/record/v2/search.json?wskey={api_key}&query=who:%22Vincent%20Van%20Gogh%22\"\n    url = f\"{basic_url}&rows={rows}&start={start}\"\n\n    response = requests.get(url)\n    response.raise_for_status()\n    payload = response.json()\n    n_items = int(payload[\"totalResults\"])\n\n    while start < n_items:\n        if start > n_items - rows:\n            rows = n_items - start + 1\n\n        url = f\"{basic_url}&rows={rows}&start={start}\"\n        response = requests.get(url)\n        response.raise_for_status()\n        payload = response.json()[\"items\"]\n\n        df = pd.DataFrame(payload)\n        job_input.send_tabular_data_for_ingestion(\n            df.itertuples(index=False),\n            destination_table=\"assets\",\n            column_names=df.columns.tolist(),\n        )\n        start = start + rows\n```", "```py\nCREATE TABLE cleaned_assets AS (\n    SELECT\n        SUBSTRING(country, 3, LENGTH(country)-4) AS country,\n        SUBSTRING(edmPreview, 3, LENGTH(edmPreview)-4) AS edmPreview,\n        SUBSTRING(provider, 3, LENGTH(provider)-4) AS provider,\n        SUBSTRING(title, 3, LENGTH(title)-4) AS title,\n        SUBSTRING(rights, 3, LENGTH(rights)-4) AS rights\n    FROM assets\n)\n```"]