- en: 'Clearing the Confusion Once And For All: args, kwargs, And Asterisks in Python'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/clearing-the-confusion-once-and-for-all-args-kwargs-and-asterisks-in-python-a905c36467a2?source=collection_archive---------4-----------------------#2023-05-30](https://towardsdatascience.com/clearing-the-confusion-once-and-for-all-args-kwargs-and-asterisks-in-python-a905c36467a2?source=collection_archive---------4-----------------------#2023-05-30)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: and living happily ever after
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://ibexorigin.medium.com/?source=post_page-----a905c36467a2--------------------------------)[![Bex
    T.](../Images/516496f32596e8ad56bf07f178a643c6.png)](https://ibexorigin.medium.com/?source=post_page-----a905c36467a2--------------------------------)[](https://towardsdatascience.com/?source=post_page-----a905c36467a2--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----a905c36467a2--------------------------------)
    [Bex T.](https://ibexorigin.medium.com/?source=post_page-----a905c36467a2--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F39db050c2ac2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fclearing-the-confusion-once-and-for-all-args-kwargs-and-asterisks-in-python-a905c36467a2&user=Bex+T.&userId=39db050c2ac2&source=post_page-39db050c2ac2----a905c36467a2---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----a905c36467a2--------------------------------)
    ·9 min read·May 30, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fa905c36467a2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fclearing-the-confusion-once-and-for-all-args-kwargs-and-asterisks-in-python-a905c36467a2&user=Bex+T.&userId=39db050c2ac2&source=-----a905c36467a2---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa905c36467a2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fclearing-the-confusion-once-and-for-all-args-kwargs-and-asterisks-in-python-a905c36467a2&source=-----a905c36467a2---------------------bookmark_footer-----------)![](../Images/49a1db551c8f925a358bd20c9e9f7d04.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Image by me with Midjourney
  prefs: []
  type: TYPE_NORMAL
- en: Motivation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: I’ve always felt annoyed when I saw someone using `*args`, `**kwargs` in functions
    or the asterisk operator for any other purpose than multiplication. I mean, couldn't
    they stop being arrogant for just a second and use something readable to everyone
    else?
  prefs: []
  type: TYPE_NORMAL
- en: But after learning what they were, I realized that the use of `*args`, `**kwargs`
    and the prefix asterisk comes from a desire for flexibility and elegance. Even
    though it may feel like a slap in [the Zen of Python](https://peps.python.org/pep-0020/)'s
    face, which says "Readability counts", they are powerful tools for beautiful code.
  prefs: []
  type: TYPE_NORMAL
- en: So, in this article, I intend to clear any and all confusion surrounding these
    cryptic keywords and starry expressions and show you almost all the scenarios
    you can use them.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s get started.
  prefs: []
  type: TYPE_NORMAL
- en: Unpacking iterables
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When the asterisk is used between two variables or Python objects, it is usually
    for multiplication or exponentiation. But, when used *before* variables or iterable
    objects, it turns into a totally different beast.
  prefs: []
  type: TYPE_NORMAL
- en: An iterable is a Python object that you can iterate over, such as a string,
    tuple, list, dictionary…
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
