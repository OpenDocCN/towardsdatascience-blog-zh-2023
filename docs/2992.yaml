- en: 16, 8, and 4-bit Floating Point Formats — How Does it Work?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/16-8-and-4-bit-floating-point-formats-how-does-it-work-d157a31ef2ef?source=collection_archive---------0-----------------------#2023-09-30](https://towardsdatascience.com/16-8-and-4-bit-floating-point-formats-how-does-it-work-d157a31ef2ef?source=collection_archive---------0-----------------------#2023-09-30)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Let’s go into bits and bytes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://dmitryelj.medium.com/?source=post_page-----d157a31ef2ef--------------------------------)[![Dmitrii
    Eliuseev](../Images/7c48f0c016930ead59ddb785eaf3e0e6.png)](https://dmitryelj.medium.com/?source=post_page-----d157a31ef2ef--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d157a31ef2ef--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d157a31ef2ef--------------------------------)
    [Dmitrii Eliuseev](https://dmitryelj.medium.com/?source=post_page-----d157a31ef2ef--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F65c1f6ba75db&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F16-8-and-4-bit-floating-point-formats-how-does-it-work-d157a31ef2ef&user=Dmitrii+Eliuseev&userId=65c1f6ba75db&source=post_page-65c1f6ba75db----d157a31ef2ef---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d157a31ef2ef--------------------------------)
    ·13 min read·Sep 30, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd157a31ef2ef&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F16-8-and-4-bit-floating-point-formats-how-does-it-work-d157a31ef2ef&user=Dmitrii+Eliuseev&userId=65c1f6ba75db&source=-----d157a31ef2ef---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd157a31ef2ef&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F16-8-and-4-bit-floating-point-formats-how-does-it-work-d157a31ef2ef&source=-----d157a31ef2ef---------------------bookmark_footer-----------)![](../Images/476c842d2b1c3c19c59cc3d6b6898aa1.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Image by Adrien Converse on [Unsplash](https://unsplash.com/@adrienconverse)
  prefs: []
  type: TYPE_NORMAL
- en: For 50 years, from the time of Kernighan, Ritchie, and their 1st edition of
    the C Language book, it was known that a single-precision “float” type has a 32-bit
    size and a double-precision type has 64 bits. There was also an 80-bit “long double”
    type with extended precision, and all these types covered almost all the needs
    for floating-point data processing. However, during the last few years, the advent
    of large neural network models required developers to move into another part of
    the spectrum and to shrink floating point types as much as possible.
  prefs: []
  type: TYPE_NORMAL
- en: Honestly, I was surprised when I discovered that the 4-bit floating-point format
    exists. How on Earth can it be possible? The best way to know is to test it on
    our own. In this article, we will discover the most popular floating point formats,
    make a simple neural network, and see how it works.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s get started.
  prefs: []
  type: TYPE_NORMAL
- en: A “Standard” 32-bit Floating point
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Before going into “extreme” formats, let’s recall a standard one. An [IEEE
    754](https://en.wikipedia.org/wiki/IEEE_754) standard for floating-point arithmetic
    was established in 1985 by the Institute of Electrical and Electronics Engineers
    (IEEE). A typical number in a 32-float type looks like this:'
  prefs: []
  type: TYPE_NORMAL
