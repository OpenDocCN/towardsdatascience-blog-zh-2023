- en: 'Conquer Retries in Python Using Tenacity: An End-to-End Tutorial'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/conquer-retries-in-python-using-tenacity-an-in-depth-tutorial-3c98b216d798?source=collection_archive---------5-----------------------#2023-07-01](https://towardsdatascience.com/conquer-retries-in-python-using-tenacity-an-in-depth-tutorial-3c98b216d798?source=collection_archive---------5-----------------------#2023-07-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PYTHON TOOLBOX](https://medium.com/@qtalen/list/python-toolbox-4289824c6407)'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Enhancing your Python projects with robust retry mechanisms and error-handling
    techniques
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://qtalen.medium.com/?source=post_page-----3c98b216d798--------------------------------)[![Peng
    Qian](../Images/9ce9aeb381ec6b017c1ee5d4714937e2.png)](https://qtalen.medium.com/?source=post_page-----3c98b216d798--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3c98b216d798--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3c98b216d798--------------------------------)
    [Peng Qian](https://qtalen.medium.com/?source=post_page-----3c98b216d798--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F8e2fe735546d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconquer-retries-in-python-using-tenacity-an-in-depth-tutorial-3c98b216d798&user=Peng+Qian&userId=8e2fe735546d&source=post_page-8e2fe735546d----3c98b216d798---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----3c98b216d798--------------------------------)
    ·5 min read·Jul 1, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F3c98b216d798&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconquer-retries-in-python-using-tenacity-an-in-depth-tutorial-3c98b216d798&user=Peng+Qian&userId=8e2fe735546d&source=-----3c98b216d798---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3c98b216d798&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconquer-retries-in-python-using-tenacity-an-in-depth-tutorial-3c98b216d798&source=-----3c98b216d798---------------------bookmark_footer-----------)![](../Images/7d3089c27ffefc03c909a68dcb0d46b3.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Often, trying one more time leads to success. Photo Credit: Created by Author,
    [Canva](https://www.canva.com/)'
  prefs: []
  type: TYPE_NORMAL
- en: This article will discuss Tenacity’s basic usage and customization capabilities.
  prefs: []
  type: TYPE_NORMAL
- en: This instrumental Python library provides a retry mechanism. We will also explore
    Tenacity’s retry and exception-handling capabilities through a practical example.
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Imagine you’re managing hundreds of web services, some located overseas (with
    high latency) and others pretty old (and not very stable). How would you feel?
  prefs: []
  type: TYPE_NORMAL
- en: 'My colleague Wang is in such a predicament. He told me that he was pretty frustrated:'
  prefs: []
  type: TYPE_NORMAL
- en: Every day, he needs to check the invocation status of these remote services,
    and he often encounters timeout issues or other anomalies. Troubleshooting is
    particularly challenging.
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, much of the client-side code was written by his predecessors, making
    it challenging to perform substantial refactoring. So, the services have to continue
    running as they are.
  prefs: []
  type: TYPE_NORMAL
- en: It would be great if there was a way to automatically reconnect these remote
    calls after an exception…
  prefs: []
  type: TYPE_NORMAL
