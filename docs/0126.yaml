- en: MLOps — Understanding Data Drift
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/mlops-understanding-data-drift-69f9bf8a2e46?source=collection_archive---------5-----------------------#2023-01-09](https://towardsdatascience.com/mlops-understanding-data-drift-69f9bf8a2e46?source=collection_archive---------5-----------------------#2023-01-09)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/4f77b75cf6eb39741c29f3e73fdc4883.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Joshua Sortino](https://unsplash.com/@sortino?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://esenthil.medium.com/?source=post_page-----69f9bf8a2e46--------------------------------)[![Senthil
    E](../Images/8750e1769db1d2fe3a3f739e95c60e4b.png)](https://esenthil.medium.com/?source=post_page-----69f9bf8a2e46--------------------------------)[](https://towardsdatascience.com/?source=post_page-----69f9bf8a2e46--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----69f9bf8a2e46--------------------------------)
    [Senthil E](https://esenthil.medium.com/?source=post_page-----69f9bf8a2e46--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1d8fcdc16d73&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmlops-understanding-data-drift-69f9bf8a2e46&user=Senthil+E&userId=1d8fcdc16d73&source=post_page-1d8fcdc16d73----69f9bf8a2e46---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----69f9bf8a2e46--------------------------------)
    ·18 min read·Jan 9, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F69f9bf8a2e46&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmlops-understanding-data-drift-69f9bf8a2e46&user=Senthil+E&userId=1d8fcdc16d73&source=-----69f9bf8a2e46---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F69f9bf8a2e46&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmlops-understanding-data-drift-69f9bf8a2e46&source=-----69f9bf8a2e46---------------------bookmark_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Introduction:'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the important functions of MLOps engineers is to monitor the model performance.
    Data drift causes degradation in the model performance over a period of time.
    Let's discuss data drift and the steps we can take to detect it in detail.
  prefs: []
  type: TYPE_NORMAL
- en: Data drift refers to changes in the data distribution over a period of time.
    This can occur due to changes in the
  prefs: []
  type: TYPE_NORMAL
- en: '***data collection process,***'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***changes in the data source,***'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***or changes in the business needs or goals.***'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data drift can lead to poor model performance, because the model is being applied
    to data that is different from the data it was trained on. There are several types
    of data drift, including concept drift, covariate drift, prior probability shift,
    and virtual drift.
  prefs: []
  type: TYPE_NORMAL
- en: I have used chatgpt3, excalidraw, GitMind, and carbon.now.sh tools for this
    article.
  prefs: []
  type: TYPE_NORMAL
- en: 'Contents:'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '***Types of Data Drifts.***'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '***Covariate Shift or Feature Drift or Input Drift.***'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '***Label Drift or Target Drift or Output Drift.***'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '***Prediction Drift or Model Drift***'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '***Concept Drift or Task Drift.***'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '***Create Alert and Notify.***'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '***Python Packages for drift detection.***'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '***Conclusion.***'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Types of Data Drifts:'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](../Images/d92808eba3142a8c1682a65f774fc4eb.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by the author
  prefs: []
  type: TYPE_NORMAL
- en: 'Covariate Shift or Feature Drift or Input Drift:'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feature drift is the changes in the input variables or features used to train
    the model.
  prefs: []
  type: TYPE_NORMAL
- en: Feature drift can occur due to the
  prefs: []
  type: TYPE_NORMAL
- en: '***changes in the data collection process***'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***changes in the data sources which provide the inputs***'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***changes in the business needs.***'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Feature drift can lead to poor model performance because the model is being
    used to make predictions based on features that have changed and may no longer
    be relevant or accurate.
  prefs: []
  type: TYPE_NORMAL
- en: Let's consider the following.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s say we have a model that is trained to predict the output variable Y
    based on the input variables X. We can represent the probability distribution
    of the input variables (p(X)) and the probability distribution of the output variables
    (p(Y)) as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**p(X):** This is the probability distribution of the input variables. It describes
    the likelihood of different values of X occurring in the data.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**p(Y)**: This is the probability distribution of the output variables. It
    describes the likelihood of different values of Y occurring in the data.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'If there is feature drift in the data, this means that the distribution of
    the input variables has changed over time. This can be represented mathematically
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**p(X1)**: This is the probability distribution of the input variables at time
    t1\. It describes the likelihood of different values of X occurring in the data
    at time t1.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**p(X2)**: This is the probability distribution of the input variables at time
    t2\. It describes the likelihood of different values of X occurring in the data
    at time t2.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If **p(X1)** and **p(X2)** are significantly different, this could indicate
    that there is feature drift in the data. This can lead to poor model performance
    because the model is being applied to data with different features than it was
    trained on.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b4a5bbd92dc29fdd79950ee83d47c25d.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by the author
  prefs: []
  type: TYPE_NORMAL
- en: 'Actions Needed to Monitor Feature drift:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/869b5e16bdbe0912252135383905e021.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by the author
  prefs: []
  type: TYPE_NORMAL
- en: '**Monitor the input data:** Regularly monitor the input data to detect changes
    in the distribution of the features. This can help you identify when feature drift
    has occurred, so you can take action to correct it.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Retrain the model**: If you detect feature drift, you may need to retrain
    the model on updated data to correct for the drift. This will ensure that the
    model is able to make accurate predictions based on the current distribution of
    the features.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Use a drift-detection method:** There are several methods available for detecting
    feature drift, such as the Jensen-Shannon divergence or the Kolmogorov-Smirnov
    test. These methods can help you detect when the distribution of the features
    has changed, so you can take action to correct it.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Use domain knowledge:** Utilize your domain knowledge to understand why the
    feature drift occurred and what steps you can take to correct it. For example,
    if you know that the data collection process has changed, you may need to adjust
    the way you collect and preprocess the data.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Use a robust model:** Consider using a model that is more robust to feature
    drift, such as a random forest or a gradient-boosting model. These models are
    less sensitive to changes in the input data, so they may be less affected by feature
    drift.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Methods Available to detect Feature Drift:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'There are several methods available for detecting feature drift in machine
    learning:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Visual inspection**: One simple method is to visually inspect the input data
    over time to see if there are any noticeable changes in the distribution of the
    features. This can be done by plotting histograms or scatter plots of the data
    at different times and comparing them.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Statistical tests**: Statistical tests such as the Jensen-Shannon divergence
    or the Kolmogorov-Smirnov test can be used to compare the input data distribution
    at different times and detect significant differences. These tests can provide
    a quantitative measure of the degree of drift in the data.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Drift detection algorithms**: There are also specialized algorithms that
    are designed specifically for detecting drift in data. These algorithms can be
    used to automatically detect changes in the distribution of the features and trigger
    an alert or action when drift is detected.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Model performance monitoring:** Another approach is to monitor the performance
    of the model over time and look for significant changes in accuracy or other performance
    metrics. If the model’s performance begins to degrade, this could indicate that
    there is a drift in the data.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Data quality checks**: Regularly checking the quality of the input data can
    also help detect feature drift. For example, if there are sudden changes in the
    range or variance of the features, this could indicate that there is a drift in
    the data.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We can monitor the following to detect the feature drift:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Numeric Features**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/86230a7ac75c29137b6ed815d76bdcb0.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by the author
  prefs: []
  type: TYPE_NORMAL
- en: Image by the author
  prefs: []
  type: TYPE_NORMAL
- en: This function computes a variety of summary statistics for each feature in the
    training and test data, including the mean, median, variance, missing value count,
    maximum value, and minimum value. It then compares these statistics between the
    training and test data and returns `**True**` if any of the differences are above
    a certain threshold. This could be used to detect numeric feature drift, as significant
    differences in the summary statistics between the training and test data could
    indicate that there is drift in the data.
  prefs: []
  type: TYPE_NORMAL
- en: '**Statistical Tests:**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0db1cada35bba8f1da6b470c4577030d.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by the author
  prefs: []
  type: TYPE_NORMAL
- en: '**Jensen-Shannon:**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Jensen-Shannon divergence is a measure of the similarity between two probability
    distributions. It is defined as the average of the Kullback-Leibler divergences
    between the two distributions and a third distribution that is the average of
    the two. The Jensen-Shannon divergence is always non-negative and takes on a value
    of zero if and only if the two distributions are identical.
  prefs: []
  type: TYPE_NORMAL
- en: In the context of feature drift detection, the Jensen-Shannon divergence can
    be used to compare the distribution of the features in the training set to the
    distribution of the features in the test set. If the Jensen-Shannon divergence
    between these two distributions is above a certain threshold, this could indicate
    that there is drift in the data.
  prefs: []
  type: TYPE_NORMAL
- en: Image by the author
  prefs: []
  type: TYPE_NORMAL
- en: This function computes the Jensen-Shannon divergence between the feature distributions
    in the training and test data using the `jensen_shannon_divergence()` function.
    The Jensen-Shannon divergence is a measure of the similarity between two probability
    distributions, with a lower divergence indicating a higher degree of similarity.
    If the divergence is above a certain threshold, this could indicate that there
    is a drift in the data.
  prefs: []
  type: TYPE_NORMAL
- en: '**Two-Sample Kolmogorov-Smirnov (KS), Mann-Whitney, or Wilcoxon tests:**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Kolmogorov-Smirnov (KS) test is a non-parametric test that can be used to
    detect feature drift in machine learning. It is based on the idea of comparing
    the distribution of two samples to see if they come from the same population.
  prefs: []
  type: TYPE_NORMAL
- en: 'To use the KS test for feature drift detection, you would first split your
    data into two sets: a training set and a test set. The training set is used to
    train the model, while the test set is used to evaluate the model’s performance.
    You can then use the KS test to compare the distribution of the features in the
    training set to the distribution of the features in the test set. If the p-value
    of the test is below a certain threshold, this could indicate that there is a
    drift in the data.'
  prefs: []
  type: TYPE_NORMAL
- en: Image by the author
  prefs: []
  type: TYPE_NORMAL
- en: This function computes the p-value of the two-sample KS test between the feature
    distributions in the training and test data using the `ks_2samp()` function from
    the `scipy.stats` module. The KS test is a non-parametric test that compares the
    distribution of two samples to see if they come from the same population. If the
    p-value is below a certain threshold, this could indicate that there is a drift
    in the data. Usually this threshold, or alpha level, is 0.05.
  prefs: []
  type: TYPE_NORMAL
- en: 'Wasserstein Distance:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Image by the author
  prefs: []
  type: TYPE_NORMAL
- en: This function computes the Wasserstein distance between the feature distributions
    in the training and test data using the `wasserstein_distance()` function from
    the `scipy.stats` module. The Wasserstein distance is a measure of the distance
    between two probability distributions, with a higher distance indicating a greater
    degree of difference between the distributions. If the distance is above a certain
    threshold, this could indicate that there is a drift in the data.
  prefs: []
  type: TYPE_NORMAL
- en: It is important to note that the Wasserstein distance requires the input data
    to be one-dimensional and non-negative. If your data does not meet these requirements,
    you may need to transform it or use a different method for detecting feature drift.
  prefs: []
  type: TYPE_NORMAL
- en: '**Kullback–Leibler divergence:**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Image by the author
  prefs: []
  type: TYPE_NORMAL
- en: This function computes the Kullback-Leibler divergence between the feature distributions
    in the training and test data using the `entropy()` function from the `scipy.stats`
    module. The Kullback-Leibler divergence is a measure of the difference between
    two probability distributions, with a higher divergence indicating a greater degree
    of difference between the distributions. If the divergence is above a certain
    threshold, this could indicate that there is a drift in the data.
  prefs: []
  type: TYPE_NORMAL
- en: '**Categorical Features**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Summary Statistics**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Mode, Number of unique values, Number of missing values:**'
  prefs: []
  type: TYPE_NORMAL
- en: Image by the author
  prefs: []
  type: TYPE_NORMAL
- en: This function computes the mode, number of unique values, and number of missing
    values in the training and test data and compares them to see if there are significant
    differences. If the mode or number of unique values has changed significantly,
    or if the number of missing values has increased significantly, this could indicate
    that there is a drift in the data.
  prefs: []
  type: TYPE_NORMAL
- en: It is important to note that this method for detecting feature drift in categorical
    data is based on the assumption that the distribution of the features has not
    changed significantly between the training and test data. If this assumption is
    not valid, this method may not be effective at detecting drift. You may need to
    use a different method or a combination of methods depending on the characteristics
    of your data.
  prefs: []
  type: TYPE_NORMAL
- en: '**Statistical Tests:**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'One-way Chi-Squared Test:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The one-way Chi Squared Contingency Test is a statistical test that can be used
    to detect feature drift in categorical data. It is based on the idea of comparing
    the observed frequencies of the different categories in the training and test
    data to the expected frequencies that would be observed if the categories were
    independent.
  prefs: []
  type: TYPE_NORMAL
- en: Image by the author
  prefs: []
  type: TYPE_NORMAL
- en: This function computes the Chi Squared statistic and p-value of the test using
    the `chi2_contingency()` function from the `scipy.stats` module. The Chi Squared
    statistic is a measure of the difference between the observed and expected frequencies
    of the categories in the data, and the p-value is a measure of the probability
    of observing the observed frequencies if the categories are independent. If the
    p-value is below a certain threshold, this could indicate that there is drift
    in the data.
  prefs: []
  type: TYPE_NORMAL
- en: 'Two Chi-Squared Contingency Test:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The two-way Chi Squared Contingency Test is a statistical test that can be used
    to detect feature drift in categorical data. It is based on the idea of comparing
    the observed frequencies of the different categories in the training and test
    data to the expected frequencies that would be observed if the categories were
    independent.
  prefs: []
  type: TYPE_NORMAL
- en: Image by the author
  prefs: []
  type: TYPE_NORMAL
- en: This function computes the Chi Squared statistic and p-value of the test using
    the `chi2_contingency()` function from the `scipy.stats` module. The Chi Squared
    statistic is a measure of the difference between the observed and expected frequencies
    of the categories in the data, and the p-value is a measure of the probability
    of observing the observed frequencies if the categories are independent. If the
    p-value is below a certain threshold, this could indicate that there is a drift
    in the data.
  prefs: []
  type: TYPE_NORMAL
- en: 'Fisher’s Exact Test:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Fisher Exact Test is a statistical test that can be used to detect feature
    drift in categorical data. It is based on the idea of comparing the observed frequencies
    of the different categories in the training and test data to the expected frequencies
    that would be observed if the categories were independent.
  prefs: []
  type: TYPE_NORMAL
- en: Image by the author
  prefs: []
  type: TYPE_NORMAL
- en: This function computes the p-value of the Fisher Exact Test using the `fisher_exact()`
    function from the `scipy.stats` module. The p-value is a measure of the probability
    of observing the observed frequencies if the categories are independent. If the
    p-value is below a certain threshold, this could indicate that there is drift
    in the data.
  prefs: []
  type: TYPE_NORMAL
- en: It is important to note that the Fisher Exact Test is a more powerful alternative
    to the Chi Squared Contingency Test when the expected frequencies are small, but
    it is generally less powerful when the expected frequencies are large. Additionally,
    the test requires the data to be frequency counts rather than proportions or percentages.
    If your data is in a different form, you may need to adjust it before running
    the test.
  prefs: []
  type: TYPE_NORMAL
- en: 'Class-MonitorDrift:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Combine all the above and create a class called MonitorDrift:'
  prefs: []
  type: TYPE_NORMAL
- en: Image by the author
  prefs: []
  type: TYPE_NORMAL
- en: 'This class has five methods: `feature_drift_fisher()`, `feature_drift_chi2()`,
    `feature_drift_chi2_one_way()`, `feature_drift_jensen_shannon()`, and `feature_drift_wasserstein()`.
    Each method takes a single argument, `feature`, which is the name of the feature
    for which you want to calculate feature drift.'
  prefs: []
  type: TYPE_NORMAL
- en: The `feature_drift_fisher()` method uses the `fisher_exact()` function from
    the `scipy.stats` module to compute the p-value of the Fisher Exact Test for the
    specified feature. The `feature_drift_chi2()` method uses the `chi2_contingency()`
    function to compute the Chi Squared statistic and p-value of the two-way Chi Squared
    test for the specified feature. The `feature_drift_chi2_one_way()` method is similar,
    but it uses the one-way Chi Squared test instead.
  prefs: []
  type: TYPE_NORMAL
- en: The `feature_drift_jensen_shannon()` method uses the `jensenshannon()` function
    from the `scipy.spatial.distance` module to compute the Jensen Shannon distance
    between
  prefs: []
  type: TYPE_NORMAL
- en: 'Label Drift or Target Drift :'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Label drift, also known as annotation drift, is a problem that can occur when
    the labels or categories associated with a dataset change over time. This can
    happen for a variety of reasons, such as changes in human judgment, the introduction
    of new categories, or the merging or splitting of existing categories.
  prefs: []
  type: TYPE_NORMAL
- en: '***Change in the distribution of the label in the data***'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***Change in P(Y)***'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s say we have a dataset with feature vectors `x` and corresponding labels
    `y`. The probability distribution of the data is denoted as `p(x)`, and the probability
    distribution of the labels is denoted as `p(y)`.
  prefs: []
  type: TYPE_NORMAL
- en: In the absence of label drift, we would expect `p(x)` and `p(y)` to be stable
    over time, meaning that the probability of seeing a particular feature vector
    or label does not change significantly over time. However, when label drift occurs,
    `p(y)` changes over time, meaning that the probability of seeing a particular
    label may change significantly. This can be caused by changes in the definitions
    of the labels, changes in the way the labels are assigned, or other factors.
  prefs: []
  type: TYPE_NORMAL
- en: 'Actions Needed to Monitor Label drift:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Regularly review and update the labels in your dataset.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Use active learning or self-learning algorithms.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Monitor the performance of your model.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Use a drift detection method to identify a label drift.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Monitor the data collection process.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Methods Available to detect Label Drift:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Here are some of the methods available to detect Label drift.
  prefs: []
  type: TYPE_NORMAL
- en: '*The Page-Hinkley test.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*ADWIN (Adaptive Windowing) .*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*DDM (Drift Detection Method).*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*The Two-Way Chi-Squared Contingency Test.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*The One-Way Chi-Squared Contingency Test.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Fischer exact test.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Examples of Label Drift:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Here are some examples of label drift.
  prefs: []
  type: TYPE_NORMAL
- en: For example, consider a dataset of medical records, where the labels indicate
    the diagnosis of a patient. If the definitions of the medical conditions change
    over time (e.g. due to new research or updates to clinical guidelines), then the
    labels in the dataset may change, causing label drift.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Customer sentiment analysis based on customer reviews. If the criteria for determining
    whether a review is positive or negative changes, then it causes label drift.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Page-Hinkley test:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Image by the author
  prefs: []
  type: TYPE_NORMAL
- en: Image by the author
  prefs: []
  type: TYPE_NORMAL
- en: 'Prediction Drift or Output Drift:'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Prediction drift, also known as output drift, occurs when the accuracy of a
    machine-learning model decreases over time.
  prefs: []
  type: TYPE_NORMAL
- en: The reasons for prediction drift are
  prefs: []
  type: TYPE_NORMAL
- en: Changes in the data distribution.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changes in the model’s performance.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changes in the real-world phenomena being predicted. For example, consider a
    model that is trained to predict the weather. If the weather patterns change significantly
    over time (e.g. due to climate change), this could cause the model’s predictions
    to become less accurate.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Change in the distribution of the predicted label given by the model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Change in P(\hat{Y}| X)*P*(*Y*^∣*X*)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the context of a classification model, we can represent the predicted class
    (y) and the true class (x) using probability distributions. Prediction drift occurs
    if the difference between these probability distributions increases over time.
  prefs: []
  type: TYPE_NORMAL
- en: 'Methods Available to detect Prediction or Output Drift:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Monitor model accuracy.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Use cross-validation.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Use data splits.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using PaheHinkley method to detect prediction drift.
  prefs: []
  type: TYPE_NORMAL
- en: Image by the author
  prefs: []
  type: TYPE_NORMAL
- en: 'Some examples of prediction drift:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Stock price prediction** — changes to the economy or company’s performance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Fraud detection model**-if the patterns of fraudulent activity change over
    time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Customer churn prediction**: if the customer’s behavior or needs change over
    time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Healthcare model**: if the patient’s health status or risk factors change
    over time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Concept Drift:'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Concept drift refers to a change in the underlying data distribution that is
    being learned by a machine-learning model.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Concept drift can occur over time as the data that is being collected changes,
    or it can be a result of changes in the real-world phenomena being modeled.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Concept drift can make machine learning models less accurate, as they may no
    longer be able to accurately recognize patterns and relationships in the data.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Concept drift is the change in the relationship between input variables and
    labels. Concept drift refers to a change in the probability distribution of the
    input data (p(X)) or the output data (p(Y)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Concept drift is the change in the distribution of P(Y| X)P(Y∣X)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Concept drift results in a current invalid model.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'COVID-19 → Concept Drift:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For example, covid has caused the following
  prefs: []
  type: TYPE_NORMAL
- en: '**Changes in consumer behavior**: People have altered their purchasing patterns
    in response to lockdowns, economic uncertainty, and other factors. This has caused
    concept drift in industries that rely on consumer data, such as retail, e-commerce,
    and advertising.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Changes in economic data:** For example, the unemployment rate and consumer
    spending patterns have changed significantly as a result of the pandemic, leading
    to concept drift in economic forecasting models.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Changes in social data:** People’s behavior and attitudes have changed in
    response to lockdowns, social distancing, and other measures. This has caused
    concept drift in social media and other online platforms, as well as in marketing
    and public opinion research.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Changes in education patterns:** Schools and universities have closed or
    moved to online learning. This has caused concept drift in education data and
    algorithms that are used to predict student outcomes.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Changes in work patterns:** Covid has caused significant changes in work
    patterns, as many people have shifted to remote work or experienced changes in
    their work schedules. This has caused concept drift in data and algorithms that
    are used to predict workforce productivity and employee outcomes.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Changes in travel patterns:** People have altered their travel plans in response
    to lockdowns and other restrictions. This has affected algorithms that are used
    to predict travel demand and patterns.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Methods Available to detect Concept Drift:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Monitor model performance.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Use data splits.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Use statistical tests.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Use drift detection algorithms.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Use human input.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Here is the code to monitor model performance constantly.
  prefs: []
  type: TYPE_NORMAL
- en: Image by the author
  prefs: []
  type: TYPE_NORMAL
- en: The above code regularly evaluates the model on the test set and stores the
    accuracy in a list. If the mean accuracy over the past N evaluation intervals
    falls below a certain threshold, it could be an indication of concept drift, and
    the model is retrained on fresh data. If the mean accuracy is still above the
    threshold, the loop continues and the model is evaluated again after a certain
    interval.
  prefs: []
  type: TYPE_NORMAL
- en: Check out the below articles on the real-world concept drift.
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://insidebigdata.com/2021/12/13/the-500mm-debacle-at-zillow-offers-what-went-wrong-with-the-ai-models/?source=post_page-----69f9bf8a2e46--------------------------------)
    [## The $500mm+ Debacle at Zillow Offers - What Went Wrong with the AI Models?
    - insideBIGDATA'
  prefs: []
  type: TYPE_NORMAL
- en: In this contributed article, Anupam Datta, Co-Founder, President, and Chief
    Scientist of TruEra, discusses Zillow and…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: insidebigdata.com](https://insidebigdata.com/2021/12/13/the-500mm-debacle-at-zillow-offers-what-went-wrong-with-the-ai-models/?source=post_page-----69f9bf8a2e46--------------------------------)
    [](https://www.forbes.com/sites/aparnadhinakaran/2022/06/06/when-ai-attacks-earnings/?sh=7f20aa0d7fb6&source=post_page-----69f9bf8a2e46--------------------------------)
    [## When AI Attacks Earnings
  prefs: []
  type: TYPE_NORMAL
- en: AI can power phenomenal revenue growth - until it doesn't. That lesson is being
    learned the hard way at a growing…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'www.forbes.com](https://www.forbes.com/sites/aparnadhinakaran/2022/06/06/when-ai-attacks-earnings/?sh=7f20aa0d7fb6&source=post_page-----69f9bf8a2e46--------------------------------)
    [](https://www.aporia.com/blog/unity-software-ml-fault-causes-stock-drop/?source=post_page-----69f9bf8a2e46--------------------------------)
    [## The Curious case of Unity: Where ML & Wall Street Meet'
  prefs: []
  type: TYPE_NORMAL
- en: Understand why Unity Software's faults in their ML Models in production impacted
    their earnings report, and…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: www.aporia.com](https://www.aporia.com/blog/unity-software-ml-fault-causes-stock-drop/?source=post_page-----69f9bf8a2e46--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: 'Create Alert and Notify:'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To notify the machine learning drift do the following.
  prefs: []
  type: TYPE_NORMAL
- en: For example
  prefs: []
  type: TYPE_NORMAL
- en: '*Send an email*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Send a message to a slack channel*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Send a message to a MS teams -Teams*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Image by the author
  prefs: []
  type: TYPE_NORMAL
- en: 'This code defines three functions: `**send_email**`, `**send_slack_message**`,
    and `**send_teams_message**`, which can be used to send a message to an email
    address, Slack channel, or Microsoft Teams channel, respectively.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To use these functions, you will need to configure your email server (if sending
    emails), Slack API client, or Microsoft Teams API client with the appropriate
    credentials and API keys.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For example, you could call `**send_email**` to send an email to a designated
    recipient, or `**send_slack_message**` to send a message to a Slack channel.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Python Packages available to detect drifts:'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Some of the packages available to detect drift are
  prefs: []
  type: TYPE_NORMAL
- en: '`[**skmultiflow:**](https://scikit-multiflow.github.io/)`One of the key features
    of `skmultiflow` is its ability to handle concept drift, which is the change in
    the underlying distribution of the data over time. It includes algorithms for
    detecting concept drift and adapting the machine learning model in real-time to
    account for the changes in the data. This makes it an ideal tool for building
    machine learning models that can adapt and continue to perform well as the data
    changes over time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`[**evidently:**](https://www.evidentlyai.com/blog/evidently-001-open-source-tool-to-analyze-data-drift)`Open-Source
    Tool To Analyze Data Drift. Evidently is an open-source Python library for data
    scientists and ML engineers. It helps evaluate, test, and monitor the performance
    of ML models from validation to production.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**Tensorflow data Validation**](https://www.tensorflow.org/tfx/data_validation/get_started)**:**
    Tensorflow Data Validation (TFDV) can analyze training and serving data to compute
    descriptive statistics, infer a schema, and detect data anomalies. The core API
    supports each piece of functionality, with convenience methods that build on top
    and can be called in the context of notebooks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**Deepchecks**](https://docs.deepchecks.com/stable/getting-started/welcome.html)**:**
    Deepchecks Open Source is a python library for data scientists and ML engineers.
    The package includes extensive test suites for machine learning models and data,
    built in a way that’s flexible, extendable, and editable.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**drift_detection**](https://pypi.org/project/data-drift-detector/)**:** This
    package contains some developmental tools to detect and compare statistical differences
    between 2 structurally similar pandas dataframes. The intended purpose is to detect
    data drift — where the statistical properties of an input variable change over
    time. It provides a class DataDriftDetector which takes in 2 pandas dataframes
    and provides a few useful methods to compare and analyze the differences between
    the 2 datasets.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'MLOps companies Specialize in drift detection:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Here are some important key players.
  prefs: []
  type: TYPE_NORMAL
- en: '***Datadog***'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***DataRobot***'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***H2O.ai***'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***Anodot***'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***Arize AI***'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***Superwise.ai***'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***Whylabs.ai***'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***ModelOp***'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***Domino Data Lab***'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***Algorithmia***'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***Databricks***'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***Fiddler***'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***Seldon***'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Major Cloud Providers Drift Detection:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Azure:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://learn.microsoft.com/en-us/training/modules/monitor-data-drift-with-azure-machine-learning/?source=post_page-----69f9bf8a2e46--------------------------------)
    [## Monitor data drift with Azure Machine Learning - Training'
  prefs: []
  type: TYPE_NORMAL
- en: Monitor data drift with Azure Machine Learning
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '- Training Monitor data drift with Azure Machine Learninglearn.microsoft.com](https://learn.microsoft.com/en-us/training/modules/monitor-data-drift-with-azure-machine-learning/?source=post_page-----69f9bf8a2e46--------------------------------)
    [](https://learn.microsoft.com/en-us/azure/machine-learning/v1/concept-model-management-and-deployment?source=post_page-----69f9bf8a2e46--------------------------------)
    [## MLOps: ML model management v1 - Azure Machine Learning'
  prefs: []
  type: TYPE_NORMAL
- en: 'APPLIES TO: Azure CLI ml extension v1 Python SDK azureml v1 In this article,
    learn about how do Machine Learning…'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: learn.microsoft.com](https://learn.microsoft.com/en-us/azure/machine-learning/v1/concept-model-management-and-deployment?source=post_page-----69f9bf8a2e46--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: '**GCP:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://cloud.google.com/vertex-ai/docs/model-monitoring/using-model-monitoring?source=post_page-----69f9bf8a2e46--------------------------------)
    [## Monitor feature skew and drift | Vertex AI | Google Cloud'
  prefs: []
  type: TYPE_NORMAL
- en: Whether your business is early in its journey or well on its way to digital
    transformation, Google Cloud can help solve…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'cloud.google.com](https://cloud.google.com/vertex-ai/docs/model-monitoring/using-model-monitoring?source=post_page-----69f9bf8a2e46--------------------------------)
    [](https://cloud.google.com/architecture/mlops-continuous-delivery-and-automation-pipelines-in-machine-learning?source=post_page-----69f9bf8a2e46--------------------------------)
    [## MLOps: Continuous delivery and automation pipelines in machine learning |
    Cloud Architecture Center…'
  prefs: []
  type: TYPE_NORMAL
- en: This document discusses techniques for implementing and automating continuous
    integration (CI), continuous delivery…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: cloud.google.com](https://cloud.google.com/architecture/mlops-continuous-delivery-and-automation-pipelines-in-machine-learning?source=post_page-----69f9bf8a2e46--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: '**AWS:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://aws.amazon.com/blogs/architecture/detecting-data-drift-using-amazon-sagemaker/?source=post_page-----69f9bf8a2e46--------------------------------)
    [## Detecting data drift using Amazon SageMaker | Amazon Web Services'
  prefs: []
  type: TYPE_NORMAL
- en: As companies continue to embrace the cloud and digital transformation, they
    use historical data in order to identify…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: aws.amazon.com](https://aws.amazon.com/blogs/architecture/detecting-data-drift-using-amazon-sagemaker/?source=post_page-----69f9bf8a2e46--------------------------------)
    [](https://aws.amazon.com/sagemaker/model-monitor/?source=post_page-----69f9bf8a2e46--------------------------------)
    [## Amazon SageMaker Model Monitor | ML Model Accuracy | Amazon Web Services
  prefs: []
  type: TYPE_NORMAL
- en: Automatically detect model and data drift and receive alerts on inaccurate predictions
    so you can take corrective…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: aws.amazon.com](https://aws.amazon.com/sagemaker/model-monitor/?source=post_page-----69f9bf8a2e46--------------------------------)
    [](https://aws.amazon.com/blogs/machine-learning/detect-nlp-data-drift-using-custom-amazon-sagemaker-model-monitor/?source=post_page-----69f9bf8a2e46--------------------------------)
    [## Detect NLP data drift using custom Amazon SageMaker Model Monitor | Amazon
    Web Services
  prefs: []
  type: TYPE_NORMAL
- en: Natural language understanding is applied in a wide range of use cases, from
    chatbots and virtual assistants, to…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: aws.amazon.com](https://aws.amazon.com/blogs/machine-learning/detect-nlp-data-drift-using-custom-amazon-sagemaker-model-monitor/?source=post_page-----69f9bf8a2e46--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Check this Twitter thread.
  prefs: []
  type: TYPE_NORMAL
- en: '[Check this white paper for more info on statistical tests.](https://arize.com/wp-content/uploads/2021/09/Statistical-Distances-for-Machine-Learning.pdf)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Conclusion:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Data drift is a common and potentially serious problem in machine learning.
    It occurs when the distribution or characteristics of the data that a model was
    trained on differ from the distribution or characteristics of the data that the
    model is being applied to. This can lead to reduced model accuracy, biased predictions,
    and other problems that can have serious consequences in a production environment.
    It is critical to monitor for data drift and take action to correct it when it
    occurs. This can help ensure that the model continues to perform accurately and
    effectively, preventing costly errors or failures in a production environment.
  prefs: []
  type: TYPE_NORMAL
- en: 'References:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Databricks-ML in Production-[https://github.com/databricks-academy/ml-in-production-english](https://github.com/databricks-academy/ml-in-production-english)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Evidently AI-[https://www.youtube.com/watch?v=HGIgUH11nVo](https://www.youtube.com/watch?v=HGIgUH11nVo)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'AWS re:Invent 2020: Detect machine learning (ML) model drift in production-[https://www.youtube.com/watch?v=J9T0X9Jxl_w](https://www.youtube.com/watch?v=J9T0X9Jxl_w)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Databricks — [https://www.youtube.com/watch?v=tGckE83S-4s](https://www.youtube.com/watch?v=tGckE83S-4s)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Technically Speaking (E15): Machine learning model drift & MLOps pipelines-[https://www.youtube.com/watch?v=aW11vOkSScA](https://www.youtube.com/watch?v=aW11vOkSScA)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'ML Drift — How to Identify Issues Before They Become Problems // Amy Hodler
    // MLOps Meetup #89-[https://www.youtube.com/watch?v=--KcBoInuqw&t=363s](https://www.youtube.com/watch?v=--KcBoInuqw&t=363s)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Deployment and Monitoring-[https://fullstackdeeplearning.com/spring2021/lecture-11/](https://fullstackdeeplearning.com/spring2021/lecture-11/)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choosing the Right Monitoring Tools for a Full-Stack Solution-[https://devops.com/choosing-the-right-monitoring-tools-for-a-full-stack-solution/](https://devops.com/choosing-the-right-monitoring-tools-for-a-full-stack-solution/)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 9.Aparna dinakaran articles-[https://aparnadhinak.medium.com/](https://aparnadhinak.medium.com/)
  prefs: []
  type: TYPE_NORMAL
