- en: Data Science Soft Skills
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/great-applied-data-science-work-5739daf13dd3?source=collection_archive---------4-----------------------#2023-08-23](https://towardsdatascience.com/great-applied-data-science-work-5739daf13dd3?source=collection_archive---------4-----------------------#2023-08-23)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: What helps solve real-life problems end-to-end, from business requirements to
    convincing presentation of results
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@lars.roemheld?source=post_page-----5739daf13dd3--------------------------------)[![Lars
    Roemheld](../Images/4618e720c12abfb7c1523e9462eb185b.png)](https://medium.com/@lars.roemheld?source=post_page-----5739daf13dd3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5739daf13dd3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5739daf13dd3--------------------------------)
    [Lars Roemheld](https://medium.com/@lars.roemheld?source=post_page-----5739daf13dd3--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fea4059de5473&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgreat-applied-data-science-work-5739daf13dd3&user=Lars+Roemheld&userId=ea4059de5473&source=post_page-ea4059de5473----5739daf13dd3---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----5739daf13dd3--------------------------------)
    ·14 min read·Aug 23, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5739daf13dd3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgreat-applied-data-science-work-5739daf13dd3&user=Lars+Roemheld&userId=ea4059de5473&source=-----5739daf13dd3---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5739daf13dd3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgreat-applied-data-science-work-5739daf13dd3&source=-----5739daf13dd3---------------------bookmark_footer-----------)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: Advanced data science work in industry is sometimes also known as “applied science,”
    reflecting the reality that it’s about more than just data and that many former
    academics work in the field. I find that “applied science” has different expectations
    than research science. So I wrote up what, in my experience, helps produce great
    applied science work. I use this as a “definition of done” for data science work,
    but many points will also benefit analysts, engineers, and other technical roles.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: 'The Goal: What is successful applied science work?'
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Great applied scientists solve valuable real-world problems end-to-end, by finding
    clever uses of data and models. Sometimes, the first step to this is discovering
    the most impactful business problem which is likely to afford feasible scientific
    solutions; sometimes, the business problem is well-understood, and scientific
    work begins at the formulation of a well-defined technical problem statement.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: In either case, successful scientific work begins with understanding a real-world
    problem. Scientists need to understand complex business challenges well enough
    to translate them into technical formulations that can be solved in finite time.
    They cut through ambiguity and create appropriate structural assumptions to enable
    solutions.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: 'Successful scientific work then finds technically appropriate and pragmatic
    solutions: this can mean state-of-the-art deep learning, but very senior scientific
    work can also consist of a few clever SQL queries. Great scientists know how to
    choose the right tool for the job.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: 'Great scientists understand that it is easy to get stuck on bad technical approaches.
    To avoid this, they structure their work incrementally: they are able to break
    a large problem into smaller sub-problems; they validate individual approaches
    through the production of intermediate results, and they actively elicit feedback
    from peers.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: Great science work incorporates feedback, because good inductive biases dramatically
    speed up learning. But great scientists also know to spot an empirical question
    when they see one, and to insist on using data to answer it.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: Great scientific work means documenting the required steps to reproduce a solution,
    and presenting the results in an audience-appropriate manner. And it includes
    seeing to it that results are used — whether that’s a change in software, a strategic
    decision, or a published paper. Because only then the valuable real-world problem
    has been solved, end-to-end.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: 'Summary: 4 Principles'
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following four principles underpin these recommendations for applied science
    work in industry:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: 'Ownership: Our job is to solve ambiguous problems end-to-end.'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Efficient curiosity: We like to learn. Ideally more efficiently than through
    brute-force experimentation.'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Measure twice, cut once: In exploratory work, explicit planning prevents getting
    lost.'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Iterative results: Frequent feedback reduces ambiguity.'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The Path: What makes science work more successful?'
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The following sections offer concrete suggestions that in my experience improve
    scientific work, structured along the scientific process.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: 1\. The role of Applied Science
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Applied science work is inherently social. To produce great work, applied scientists
    need to work well in teams.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: Working with People
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A lot of science work requires collaborating with others; understanding previous
    work, finding relevant datasets, asking for explanations, communicating progress
    to your stakeholders, convincing your teammates to support your project. Ultimately
    you are responsible for delivering a result — managing the collaboration is part
    of the job. This may mean that you need to convince a teammate to review your
    Pull Request, and it may mean that you need to find a way to prioritize your data
    engineering needs into another team’s backlog. When this process gets stuck, you
    can escalate and your lead can help clarify priorities — but you are responsible
    for doing this.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: Follow-through
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As a part of science work, teams often brainstorm ideas in group settings or
    one-on-one. These sessions can be extremely valuable and help to produce much
    higher quality work than any one individual could do on their own. But if the
    brainstorming sessions are not directly connected to follow-up work, they are
    often a waste of time. You’ll want to avoid the latter — that means following
    up pro-actively on discussed ideas and tasks: if the team agreed that something
    should be done, do it (and communicate results). If it’s too much to be done immediately,
    write a ticket for the ideas (and communicate the ticket). It is often very helpful
    in brainstorming sessions to proactively ask what the concrete take-aways are,
    and who is responsible for next steps — and anyone can do this, and share their
    notes with the team.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: Transparency and trust
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Not everything goes according to plan, and the nature of scientific work is
    that most experiments fail. It is expected that plans do not work out as hoped.
    This makes scientific work a high-variance activity: even if you can accurately
    predict the “expected value” of your work, surprises are likely to happen.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: 'When something doesn’t go as planned, be fully transparent. Most importantly,
    inform your team immediately when something is amiss. This allows more efficient
    coordination of roadmaps and deliverables. In return, expect trust: failed experiments
    are part of our daily work.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: 'The most annoying of experimental outcomes is the “inconclusive” result: An
    experiment didn’t exactly fail, but it didn’t succeed, either. Those, too, are
    part of scientific work, and they, too, deserve presentation and sharing: can
    we hypothesize why the scientific problem couldn’t be solved? If we were to start
    over again, what would we do differently?'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: 'When working in teams, it is natural not to understand everything in a presentation,
    a conversation, or a ticket. It is problematic, however, to “nod along” — when
    others assume you have understood something that you didn’t, this will likely
    lead to misunderstandings and misalignment in work outcomes. As scientists, “why”
    should be our favorite question: when something is unclear, keep asking until
    you feel there is mutual understanding. If in doubt, rephrasing something in your
    own words is a powerful tool to check you really understood the right thing.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Understand the business problem
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Properly understanding business problems is often “messier” than pure research
    science: concepts aren’t well-defined, quantities aren’t measurable, stakeholder
    objectives are misaligned. But misunderstanding the problem to be solved leads
    to disappointment, and diminishes the value of applied science work — no scientific
    sophistication can later save this.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: Keep asking questions until you fully understand the business problem. In some
    cases, your questions may lead to a sharpening or even shift of the business problem
    formulation.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: 'When formulating a business problem in technical terms, we often need to make
    some base assumptions: we need to choose a specific definition of a certain concept,
    we ignore edge cases, we need to decide what potential side-effects are out-of-scope.
    Take note of these assumptions so that you can revisit them later.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: As a result of making assumptions, you may end up solving the wrong problem,
    because a plausible assumption turned out to be inaccurate. The most effective
    way to prevent this is to work incrementally and to frequently verify that increments
    are moving in the right direction. Taking this to an extreme, building a mockup
    solution (e.g. a quick spreadsheet) can often help generate valuable business
    feedback.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: Before starting deep modeling work, double-check that your approach will solve
    the right business problem. But don’t forget to repeatedly verify this again along
    the way. If in doubt, go for frequent, smaller iterations.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Research roadmaps are hypothesis trees
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once you start digging into data and models, it’s easy to get lost. Writing
    down a clear research roadmap helps avoid this. Experienced scientists often consciously
    or unconsciously follow a clear structure of hypotheses in their work, breaking
    an ambiguous problem into sequentially solvable sub-problems. I recommend writing
    a full draft of the hypothesis structure, and getting feedback on it, before writing
    the first line of code.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: 'The important thing is that you write down some form of plan, and that you
    orient yourself in it as you make progress. One format I’ve found helpful are
    mind-maps or bullet-points that impose a hypothesis tree structure explicitly.
    This is a rough “algorithm” for creating one:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: 'Brainstorm a few different approaches to your problem; don’t forget to look
    for existing solutions from other teams, in open source, and in published material.
    Write them down as “candidates.” The idea here is breadth-first: collect many
    rough ideas.'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Roughly estimate the effort needed to “validate” an approach: this is not the
    effort needed to solve the problem using a given approach, but the effort needed
    to find out whether an approach will very likely work or not.'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Order your approaches by estimated validation effort.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Starting at the lowest validation effort approach, brainstorm how to validate
    the approach, and to ultimately solve your (sub-)problem using it. Recursively
    continue down your tree (i.e. for every sub-problem, re-start at 1). Repeat this
    for the levels of the tree as necessary.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Using this method, you ideally end up with a well-structured, prioritized plan
    for what to try first, and what to do when an idea works (follow that branch)
    and when it doesn’t (continue work on the next branch below the current one).
    The “leaves” of your tree should ideally be relatively easy-to-test, answerable-by-data
    questions. The structure of your plan should also make it easier to describe progress,
    and to get feedback on interim results.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Incremental work benefits from great intuition
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The most elusive advice of all: great scientists have an uncanny intuition
    about what approaches might work, and which ones do not even warrant closer consideration.
    This sometimes leads to the impression that certain people “just make everything
    work” — it is often more accurate to say that these people know what not to try
    out, and that they spend the majority of their time on productive ideas in the
    first place. Of course, building this level of intuition is difficult and a life-long
    career. Good intuition means you spend most of your time on productive hypotheses
    — this is important because the universe of potential hypotheses and ideas to
    follow is massive, and intuition reduces the search space in your hypothesis tree.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: Intuition is social
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When you find someone whose intuition you trust, ask them for advice on what
    approaches to follow. Ask them to justify that advice. Try to understand how they
    reason about problem-solution-mappings, beyond the immediate technical question.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: 'Building intuition especially benefits from interactive learning: consider
    pair-programming days with your peers, and explain concepts to each other. Try
    to meet in person and not just remotely: At least I haven’t yet found a full replacement
    for a whiteboard or two and being in the same room.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: Strong fundamentals help
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Invest in understanding the fundamentals: you should build mental models of
    how things work. These need to be “correct enough,” yet simple enough to be applicable
    to real-world situations. You should be able to switch between “black box thinking”
    at the architecture level, and to understand the inner workings of the black boxes
    when it gets to details. To make this more concrete: when dealing with image or
    text data, the idea of using “embeddings” is a good intuition that allows you
    to quickly build a mental architecture of potential models. But to accurately
    judge the feasibility of such approaches, you should fully understand how embeddings
    are trained, and what the resulting encoding of information is.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: Curiosity
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Be curious about similar, but different, problems. Think about *how* they are
    similar, and *how* they are different. Think about how the solutions to your problem
    may or may not apply to these similar problems. Some examples: experimentation
    on substitutable products relates to experimentation on social networks (“spillover
    effects”). Fashion pricing relates to airline pricing (“perishable goods”). Product/entity
    matching relates to music copyright enforcement (“coarse + precise matching steps”).'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: 'Reflect on your previous work: when you had to try something out, because you
    didn’t have a strong intuition, what can you learn from your experiment? Are there
    general truths to be learned from the experiment that can help you improve your
    intuition?'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: 'Actively seek criticism of your approaches: whether as part of a “Research
    Roadmap Review,” or as part of your reflection of a finished project, dissenting
    opinions can help you sharpen your intuitions and uncover blind spots.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: 5\. Solve the problem in clean code
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Clean code is a special challenge when applied to exploratory/experimental
    work that is so typical for applied science. But it is similarly important: clean
    code avoids mistakes, partially because it forces hygiene, partially because readers
    of your code will be more able to spot errors, and partially because it makes
    it easier for yourself to iterate on ideas when the first experiments inevitably
    fail. Variable names are *so much more* important than most university courses
    suggest. Encapsulation in functions, classes, and modules can help navigate varying
    levels of details and abstraction.'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: 'Premature “productionization,” however, can also slow you down: until the solution
    is clear, it should be easy to replace parts of your approach.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: Write code with a reader in mind
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When you’re writing analysis notebooks, write them *for a reader*, not just
    for yourself. Explain what you are doing. Use good variable names. Clean up plots.
    Markup cells were [invented for a reason](https://en.wikipedia.org/wiki/Literate_programming).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: Think about [DRY code](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself).
    This is especially challenging when doing exploratory work typical of applied
    science. When you catch yourself copy/pasting code from previous investigations,
    it’s probably a good time to refactor.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 思考[DRY 代码](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself)。当你发现自己从以前的调查中复制/粘贴代码时，这通常是一个重新构造的好时机。
- en: When exploratory work is performed with a reader in mind, it can be reviewed
    as a Pull Request much like any other piece of code. In fact, all necessary steps
    for the final analytical answer should be reviewed by a second pair of eyes. Do
    your reviewers a favor and remove (or clearly mark) purely exploratory code before
    submitting for a review.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 当进行探索性工作时，考虑到读者的需求，可以像处理其他代码一样将其作为 Pull Request 进行审查。实际上，最终分析答案所需的所有步骤都应该经过第二双眼的审查。请为你的审阅者提供方便，在提交审查之前，移除（或明确标记）纯粹的探索性代码。
- en: Documentation
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文档
- en: 'Organizing and updating a central knowledge base is one of the most ubiquitous
    problems in tech organizations that I know of. I am not aware of simple solutions.
    But I know that investments in good documentation pay off in the long run. For
    central knowledge, there should be one (and only one!) central source. This document
    should be the source of truth: if the code doesn’t do what the documentation says,
    the code is wrong (*not* the documentation). This requires frequent and easy updating
    of documentation: badly-written, but correct and complete documentation is infinitely
    better than well-written, but outdated documentation. Investing in documentation
    is promotable work, and I believe in its impact.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 组织和更新中央知识库是我所知技术组织中最普遍的问题之一。我不知道简单的解决方案。但我知道，投资于良好的文档从长远来看是值得的。对于中央知识，应该有一个（而且只有一个！）中央来源。这个文档应该是真相的来源：如果代码与文档不符，代码是错的（*而不是*文档）。这需要频繁且便捷地更新文档：写得差，但正确且完整的文档远胜于写得好但过时的文档。投资文档是值得推广的工作，我相信它的影响。
- en: 6\. Present, not just show, results
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 6\. 展示，而不仅仅是展示，结果
- en: Presentations are an opportunity to take a big step back from your work and
    to reflect on what it means in the grand scheme of things. This is true for a
    final presentation of results, but perhaps even more true for presentations of
    interim results.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 演讲是一个大步后退，反思你工作在宏观层面上意义的机会。这对于最终结果的展示是正确的，但对于中期结果的展示可能更为适用。
- en: 'Every time you present results, think about your audience’s expectations. For
    every point you make (for every slide; for every section in a text), you should
    answer an implicit “so what?” for the audience. Different audiences will have
    different expectations here: A senior business leader may be most interested in
    a straightforward narrative that captures the essence of your findings and can
    easily be shared with other senior leaders. Your manager may be most interested
    in understanding how a given problem will be solved, and when. A colleague may
    be most interested in what they can learn for their own work from your approach.
    A stakeholder or customer will want to know what new decisions or actions your
    work enables them to make.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 每次你展示结果时，都要考虑观众的期望。对于你提出的每一点（每一张幻灯片；每一节文本），你应该回答观众心中的隐含“那又怎样？”不同的观众在这里会有不同的期望：高级业务领导可能对一个直接叙述最感兴趣，这个叙述捕捉了你的发现的精髓，并且可以轻松地与其他高级领导共享。你的经理可能最关心的是了解如何解决一个特定问题以及何时解决。一个同事可能最感兴趣的是他们可以从你的方法中学到什么，以便用于自己的工作。一个利益相关者或客户将想知道你的工作使他们能够做出哪些新的决策或采取哪些行动。
- en: 'I find that many scientists are tempted to follow their discovery process in
    their presentation, starting at the first experiment. I strongly advise against
    this, because it often leads to losing people’s attention before you even get
    to the interesting part: instead, start with the original business question you’re
    trying to answer, and with your best answer to the original question. Then describe
    your high-level approach, and explain why you think your answer is the best one
    you can give. Anticipate what questions your presentation raises, and have answers
    prepared for them. Most importantly, answer the question “so what?” for each point
    you make.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: Interesting experiments that did not ultimately contribute to your answer belong
    in an appendix — they may help an in-depth discussion, but are not required for
    the main presentation.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: 'Corollary: preparing materials for presentations often feels like busywork.
    I have found that, on the contrary, frequent production of presentable interim
    results helps maintain focus and mental clarity, because you force yourself to
    take several steps back. The production of clear plots and narratives for presentation
    is extremely helpful to remain focused on the end-goal, and to reach clear conclusions;
    but optimizing slide layouts is not. Therefore, for interim results, form follows
    function. It is important to have clear take-away messages clearly communicated.
    It is not important that the design is perfect. For example, it is perfectly acceptable
    to hand-draw a figure on paper and present a photo of this.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: Clear visualization
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: All plots should be self-explanatory, and have a clear message. I strongly recommend
    following a few basic things even in plots you create just for yourself.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: 'Label your axes with self-explanatory descriptions: use words, not just letters.'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use clear chart titles that explain what is shown *and* *the main message* (again,
    “so what?”).
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Reduce the data you show to the necessary: e.g. the data may contain a “Dummy”
    category, which is clearly not intended to be useful. Don’t let this clutter visual
    space in your plots.'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When displaying many series of data differentiated only by color, make sure
    that the color legend is clearly differentiated (bonus points for color-blind-friendly).
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Visualization helps understand patterns in data. If a plot merely shows a chaotic
    cloud of points, it can probably be removed (unless you want to prove that particular
    point).
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Log-scales can often help clean up plots of (positive) count data.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Clear numeric results
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Whenever presenting numeric results (e.g. in tables):'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: 'Optimize for, and present, an appropriate success metric. Many applied scientists
    spend too little time on this: know the difference of when to use RMSE/MAPE/MAE,
    log-scales, F1 versus ROC versus Area under the Precision-Recall curve.'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Almost all real-world problems are about *weighted* success metrics, yet most
    ML courses hardly cover the topic: a sales-forecast success metric, for example,
    may need to be weighted by prices, inventory-value, or package dimensions, depending
    on the use case.'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If success means estimating counterfactuals (“what if” analysis), make that
    explicit and find a clear reasoning how your success metric captures such counterfactuals.
    (Natural) experiments are a popular choice.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Provide reasonable benchmarks for any number you present. Often, identifying
    the “right” benchmark requires hard thinking — but it’s always worth it. You fit
    a fancy ML model? How much better is it than linear regression? You built a forecast
    for next week? How much better is it than assuming that next week is equal to
    this week? You are presenting A/B-test results? How much is the uplift relative
    to our monthly revenue, or relative to the last improvement?
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Clear language
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Putting ideas into words can be harder than it sounds, and doing it well is
    a real superpower for technical people. Communication style is also subjective
    and cultural, so you’ll have to find a style that works for you. In any case,
    I recommend to be conscious about improving communication skills: pay attention
    to how others do it; define what you like; critique and have others critique your
    existing communication; edit your own writing; write out how to explain a complicated
    idea to prepare for the actual explanation in a presentation; record yourself
    explaining an idea and listen to it; ask for stylistic feedback. We communicate
    all the time: there are plenty of opportunities to practice, if you take them.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: 'Thank you for reading this far! I’d love to hear your feedback: What resonated?
    Where does your experience differ? And what else helps solve valuable real-world
    problems end-to-end?'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: Resources
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The following are resources for further reading that I found inspiring. Most
    of them are “timeless”, but some technical resources may be out-of-date by the
    time you read this. Please share your own recommendations in the comments!
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: Culture
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Dan Na: [“Push through friction with optimism and kindness, because this is
    the job.”](https://www.youtube.com/watch?v=8bxZuzDKoI0) (30min video)'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Netflix manifesto: [“we’re a pro sports team, not a family,” and many other
    ideas for high-performing teams](https://www.slideshare.net/reed2001/culture-1798664)'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A very consulting-informed [explanation of “so what” and hypothesis trees](/the-key-question-for-all-data-scientists-so-what-25139fb352c6)
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A vision for [more empowered problem-solver engineers](https://blog.pragmaticengineer.com/what-silicon-valley-gets-right-on-software-engineers/)
    (versus “doing what’s in the ticket”)
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[A very similar blog post from Amazon Science](https://www.amazon.science/working-at-amazon/what-makes-a-great-scientist)'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Science and Engineering:'
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Great summary of relevant ideas from ML, stats, economics — highly recommended!
    [Matt Taddy’s Business Data Science](https://www.amazon.com/Business-Data-Science-Combining-Accelerate/dp/1260452778)
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Quirky modern stats refresher: [Statistical Rethinking 2022](https://www.youtube.com/playlist?list=PLDcUM9US4XdMROZ57-OIRtIK0aOynbgZN)'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In defense of iterative work, an idea originally from software engineering:
    [“tracer bullets”](https://flylib.com/books/en/1.315.1.25/1/) (from The Pragmatic
    Programmer book, linked below)'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Lisa Muth’s approachable [data visualization tutorials](https://blog.datawrapper.de/category/datavis-dos-and-donts/)
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Modern pandas](https://tomaugspurger.github.io/modern-1-intro.html) (and/or
    go straight to [Wes McKinney’s Book](https://wesmckinney.com/book/))'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Hypermodern python](https://cjolowicz.github.io/posts/hypermodern-python-01-setup/):
    data science meets good engineering practices'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Cosmic python](https://www.cosmicpython.com/book/preface.html): software architecture
    and development processes'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Be a [pragmatic programmer](https://pragprog.com/titles/tpp20/the-pragmatic-programmer-20th-anniversary-edition/)
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Communication
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Dan Luu on Writing](https://danluu.com/writing-non-advice/) — an engineering
    perspective on effective writing.'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Ciechanowski’s blog](https://ciechanow.ski/) — Over-the-top-beautiful technical
    writing and illustrations'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../Images/daf1dc9132e71214c8ca31b1ab3d504d.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
- en: Photo by [NASA](https://unsplash.com/@nasa?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
