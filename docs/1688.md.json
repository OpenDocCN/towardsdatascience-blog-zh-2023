["```py\nFrom 763104351884.dkr.ecr.us-east-1.amazonaws.com/pytorch-training:1.13.1-gpu-py39-cu117-ubuntu20.04-sagemaker\n\n# install nsys\nADD  https://developer.download.nvidia.com/devtools/repos/ubuntu2004/amd64/NsightSystems-linux-cli-public-2023.1.1.127-3236574.deb ./\nRUN apt install -y ./NsightSystems-linux-cli-public-2023.1.1.127-3236574.deb\n\n# install s5cm\nRUN conda install -y s5cmd\n\n# install opencv\nRUN pip install opencv-python==4.7.0.72\n```", "```py\nfrom sagemaker.pytorch import PyTorch\n\n# define the training job\nestimator = PyTorch(\n    entry_point='train.py',\n    source_dir='./source_dir',\n    role='<arn role>',\n    image_uri = '<account-number>.dkr.ecr.us-east-1.amazonaws.com/<tag>'\n    job_name='demo',\n    instance_type='ml.g5.xlarge',\n    instance_count=1\n)\n```", "```py\nFROM user_defined_docker_image\n\nRUN echo \"conda activate user_defined_conda_env\" >> ~/.bashrc\nSHELL [\"/bin/bash\", \"--login\", \"-c\"]\n\nENV SAGEMAKER_TRAINING_MODULE=sagemaker_pytorch_container.training:main\nRUN conda activate user_defined_conda_env \\\n  && pip install --no-cache-dir -U sagemaker-pytorch-training sagemaker-training\n\n# sagemaker uses jq to compile executable\nRUN apt-get update \\\n && apt-get -y upgrade --only-upgrade systemd \\\n && apt-get install -y --allow-change-held-packages --no-install-recommends \\\n jq\n\n# SageMaker assumes conda environment is in Path\nENV PATH /opt/conda/envs/user_defined_conda_env/bin:$PATH\n\n# delete entry point and args if provided by parent Dockerfile\nENTRYPOINT []\nCMD []\n```", "```py\nfrom sagemaker.session import Session\n\n# customized session class that supports adding container entrypoint settings\nclass SessionEx(Session):\n  def __init__(self, **kwargs):\n    self.user_entrypoint = kwargs.pop('entrypoint', None)\n    self.user_arguments = kwargs.pop('arguments', None)\n    super(SessionEx, self).__init__(**kwargs)\n\n  def _get_train_request(self, **kwargs):\n    train_request = super(SessionEx, self)._get_train_request(**kwargs)\n    if self.user_entrypoint:\n      train_request[\"AlgorithmSpecification\"][\"ContainerEntrypoint\"] =\\\n           [self.user_entrypoint]\n    if self.user_arguments:\n      train_request[\"AlgorithmSpecification\"][\"ContainerArguments\"] =\\\n           self.user_arguments\n    return train_request\n\nfrom sagemaker.pytorch import PyTorch\n\n# create session with user defined entrypoint and arguments\n# SageMaker will run 'docker run --entrypoint python <user image> path2file.py\nsm_session = SessionEx(user_entrypoint='python', \n                       user_arguments=['path2file.py'])\n\n# define the training job\nestimator = PyTorch(\n    entry_point='train.py',\n    source_dir='./source_dir',\n    role='<arn role>',\n    image_uri='<account-number>.dkr.ecr.us-east-1.amazonaws.com/<tag>'\n    job_name='demo',\n    instance_type='ml.g5.xlarge',\n    instance_count=1,\n    sagemaker_session=sm_session\n) \n```"]