- en: The Good, The Bad, and the Ugly of Pd.Get_Dummies
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[https://towardsdatascience.com/the-good-the-bad-and-the-ugly-of-pd-get-dummies-75c87e2aadc9?source=collection_archive---------11-----------------------#2023-07-26](https://towardsdatascience.com/the-good-the-bad-and-the-ugly-of-pd-get-dummies-75c87e2aadc9?source=collection_archive---------11-----------------------#2023-07-26)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This is for the pd.get_dummies diehards
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://adamrossnelson.medium.com/?source=post_page-----75c87e2aadc9--------------------------------)[![Adam
    Ross Nelson](../Images/030b86a8c8bbd40c6acf60d1e387950c.png)](https://adamrossnelson.medium.com/?source=post_page-----75c87e2aadc9--------------------------------)[](https://towardsdatascience.com/?source=post_page-----75c87e2aadc9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----75c87e2aadc9--------------------------------)
    [Adam Ross Nelson](https://adamrossnelson.medium.com/?source=post_page-----75c87e2aadc9--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ¬∑
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4c558804d1cf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-good-the-bad-and-the-ugly-of-pd-get-dummies-75c87e2aadc9&user=Adam+Ross+Nelson&userId=4c558804d1cf&source=post_page-4c558804d1cf----75c87e2aadc9---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----75c87e2aadc9--------------------------------)
    ¬∑5 min read¬∑Jul 26, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F75c87e2aadc9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-good-the-bad-and-the-ugly-of-pd-get-dummies-75c87e2aadc9&user=Adam+Ross+Nelson&userId=4c558804d1cf&source=-----75c87e2aadc9---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F75c87e2aadc9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-good-the-bad-and-the-ugly-of-pd-get-dummies-75c87e2aadc9&source=-----75c87e2aadc9---------------------bookmark_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: Howdy folks ü§†
  prefs: []
  type: TYPE_NORMAL
- en: Okay, I get it. One of the easiest ways to convert a categorial to an array
    of dummies in Python is with the Pandas `pd.get_dummies()`. Why would you take
    the time to import `OneHotEncoder`from sklearn, execute a `.fit_transform()` etc,
    etc, etc? Talk about tedious!
  prefs: []
  type: TYPE_NORMAL
- en: This article will first introduce a simple data set for demonstration purposes
    that consists of a testing set that contains categoricals not found in the training
    set. Then, it will demonstrate how using `pd.get_dummies()` can lead to problems
    with the demonstration data. And, finally show how to avoid that problem with
    sklearn‚Äôs `OneHotEncoder`.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fa8e91379f5a2edc4d962a235f228a29.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Image Credit: Author‚Äôs illustration using text to image in Canva. Prompted:
    ‚ÄúThree panda bears dressed as country western cowboys.‚Äù'
  prefs: []
  type: TYPE_NORMAL
- en: A simple dataset for demonstration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Here we have a simple dataset that includes a categorical feature called OS.
    The OS column lists computer operating systems. We will use this fictional data
    for purposes of demonstration. In `train_df` will be fictional demonstration training
    data. While in `test_df` we have fictional demonstration testing data.
  prefs: []
  type: TYPE_NORMAL
- en: In our fictional demonstration case, the testing set contains categorical values
    not present in the training set. This mis-match will cause problems.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
