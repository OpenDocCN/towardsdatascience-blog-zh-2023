- en: How to Make a Spider Chart in R Using ggplot2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-to-make-a-spider-chart-in-r-using-ggplot2-85a4f1898cab?source=collection_archive---------4-----------------------#2023-01-11](https://towardsdatascience.com/how-to-make-a-spider-chart-in-r-using-ggplot2-85a4f1898cab?source=collection_archive---------4-----------------------#2023-01-11)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A step-by-step construction of a spider/radar chart
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@zvonimir.boban.mef?source=post_page-----85a4f1898cab--------------------------------)[![Zvonimir
    Boban](../Images/cbad06b7e1f5d021ce9b2dc31b8a6a65.png)](https://medium.com/@zvonimir.boban.mef?source=post_page-----85a4f1898cab--------------------------------)[](https://towardsdatascience.com/?source=post_page-----85a4f1898cab--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----85a4f1898cab--------------------------------)
    [Zvonimir Boban](https://medium.com/@zvonimir.boban.mef?source=post_page-----85a4f1898cab--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe31978768a4e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-a-spider-chart-in-r-using-ggplot2-85a4f1898cab&user=Zvonimir+Boban&userId=e31978768a4e&source=post_page-e31978768a4e----85a4f1898cab---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----85a4f1898cab--------------------------------)
    ·8 min read·Jan 11, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F85a4f1898cab&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-a-spider-chart-in-r-using-ggplot2-85a4f1898cab&user=Zvonimir+Boban&userId=e31978768a4e&source=-----85a4f1898cab---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F85a4f1898cab&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-a-spider-chart-in-r-using-ggplot2-85a4f1898cab&source=-----85a4f1898cab---------------------bookmark_footer-----------)![](../Images/2e02b586b9718222b48b5dc07953d702.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Divyadarshi Acharya](https://unsplash.com/@lincon_street?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/Qbs6liSxjr8?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: 'Knowing that a radar chart can make for a compelling visualization, I tried
    finding a suitable R library. I was surprised when my search yielded practically
    no results **(EDIT: Shortly after writing this post, I created the** `**ggvanced**`
    **package with the** `**ggspider**` **function dealing with this issue. You can
    read more about it in a** [**separate post**](https://medium.com/towards-data-science/ggvanced-a-package-for-generating-advanced-data-visualizations-on-top-of-the-ggplot2-package-2a935763a4b)**).**
    The only package I found was `ggradar` which is not on CRAN, but can only be installed
    from GitHub.'
  prefs: []
  type: TYPE_NORMAL
- en: I decided to give it a try using the data on the Titanic crash from the `titanic`
    package. In order to calculate the data summaries I wanted and get the data to
    the shape needed for plotting, I used the `dplyr` , `tidyr`, `tibble`, `purr`
    and `scales` packages. If you are unfamiliar with these, check out my earlier
    article on data wrangling with R.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/diving-into-the-tidyverse-using-the-titanic-data-83f54295d5df?source=post_page-----85a4f1898cab--------------------------------)
    [## Diving into the tidyverse using the Titanic data'
  prefs: []
  type: TYPE_NORMAL
- en: towardsdatascience.com](/diving-into-the-tidyverse-using-the-titanic-data-83f54295d5df?source=post_page-----85a4f1898cab--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: After installing and loading the `ggradar`package and rescaling the data to
    a (0, 1) interval, we can create the radar chart by invoking the `ggradar` function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/bd97307c40ee231d0ddd41ab8393fbe4.png)'
  prefs: []
  type: TYPE_IMG
- en: A radar chart made using the ggradar package. Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Even though the obtained chart was neat and visually appealing, I wanted to
    have separate axis for each of the variables. Although radar and spider chart
    names are used as synonyms, I think a spider chart is more appropriate for the
    latter situation in which every variable has its own axis, and radar chart for
    the former like in the above image. Unfortunately, as I was more interested in
    creating a spider chart, and no such option was available using this package,
    I was left to my own devices.
  prefs: []
  type: TYPE_NORMAL
- en: Enter ggplot2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The beauty of `ggplot2` is the underlying grammar of graphics, allowing for
    creation of graphs by stacking multiple layers on top of one another. This powerful
    concept lets us create essentially any visualization, as long as we know how to
    code it. I’ll be using it to construct a spider chart from scratch.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/992eda624e642669ca3b9a544b039ad6.png)'
  prefs: []
  type: TYPE_IMG
- en: The philosophy behind chart construction with the ggplot2 package. Image by
    Author
  prefs: []
  type: TYPE_NORMAL
- en: The layered approach calls for separate construction of different aspects of
    the graph. First we will create the chart outline. Since spider charts deal with
    polar coordinates, I made a function which calculates the coordinates of the polygon
    tips depending on the number of variables in the dataset.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/a3d4e7b0dd37bac49009f832767d0b53.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Step 1: Creating the background for the chart. Image by Author'
  prefs: []
  type: TYPE_NORMAL
- en: Next, we have to calculate the coordinates for the axes and add them to the
    chart.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/c1ef71da69a702b39d209578affbc4a4.png)'
  prefs: []
  type: TYPE_IMG
- en: Addition of axes for each of the variables in the dataset. Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Now we can add the textual labels and names of the axes.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/05cc506da2d39f174bdea9b2c4ebb726.png)'
  prefs: []
  type: TYPE_IMG
- en: Addition of axes names and labels. Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: The only thing left to do is overlaying of the data points.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/7428bdc8d6654d1e33fdb75877a62f63.png)'
  prefs: []
  type: TYPE_IMG
- en: Overlaying the chart with the data points. Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: And some final aesthetic touches…
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/f4a55edeb8d0ed2816b32e37d0ef5c39.png)'
  prefs: []
  type: TYPE_IMG
- en: The final spider chart. Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Ta-daa, our work here is done. Let’s just take a moment more to comment on the
    numbers displayed. The 1st class passengers were the oldest and the wealthiest
    of the three. The 3rd class passengers had the highest number of both male and
    female passengers and were the youngest group — probably mostly young people and
    families in search for better life abroad. However, the 1st class passengers had
    the highest survival rate, and the 3rd the lowest. This is probably partly due
    to the 1st class quarters being closer to the boat deck and partly due to the
    higher proportion of women in that class (since woman and children were rescued
    first).
  prefs: []
  type: TYPE_NORMAL
- en: Bonus points
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To make the plots easier to reproduce, I made a function from the above code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Now, we can easily test the function on some different data, such as the `mtcars`
    dataset built into R.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/5a4ecf3ed11f8a25aa702c802dcc15f2.png)'
  prefs: []
  type: TYPE_IMG
- en: Spider chart of the mtcars dataset. Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This article shows how to construct a spider chart from scratch in R. Although
    no R package I know of currently supports this kind of chart, utilizing the layered
    grammar of graphics approach from the `ggplot2` package provided me with the tools
    to create one myself. Of course, there is still room for progress, especially
    with regard to the aesthetical aspect of the chart, but that is a topic for some
    other article.
  prefs: []
  type: TYPE_NORMAL
- en: That’s all folks. I hope you found the article useful and will use it to make
    many more neat spider charts in the future. Enjoy!
  prefs: []
  type: TYPE_NORMAL
- en: P.S. If you liked the post, please clap and follow for more similar content
    in the future. Also, feel free to make suggestions about other interesting visualizations
    you think deserve to be implemented in R.
  prefs: []
  type: TYPE_NORMAL
