- en: Ranking Diamonds with PCA in PySpark
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/ranking-diamonds-with-pca-in-pyspark-a59cab7f4f1a?source=collection_archive---------11-----------------------#2023-12-22](https://towardsdatascience.com/ranking-diamonds-with-pca-in-pyspark-a59cab7f4f1a?source=collection_archive---------11-----------------------#2023-12-22)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The challenges of running Principal Component Analysis in PySpark
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://gustavorsantos.medium.com/?source=post_page-----a59cab7f4f1a--------------------------------)[![Gustavo
    Santos](../Images/a19a9f4525cdeb6e7a76cd05246aa622.png)](https://gustavorsantos.medium.com/?source=post_page-----a59cab7f4f1a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----a59cab7f4f1a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----a59cab7f4f1a--------------------------------)
    [Gustavo Santos](https://gustavorsantos.medium.com/?source=post_page-----a59cab7f4f1a--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4429d99b1245&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Franking-diamonds-with-pca-in-pyspark-a59cab7f4f1a&user=Gustavo+Santos&userId=4429d99b1245&source=post_page-4429d99b1245----a59cab7f4f1a---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----a59cab7f4f1a--------------------------------)
    ·8 min read·Dec 22, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fa59cab7f4f1a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Franking-diamonds-with-pca-in-pyspark-a59cab7f4f1a&user=Gustavo+Santos&userId=4429d99b1245&source=-----a59cab7f4f1a---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa59cab7f4f1a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Franking-diamonds-with-pca-in-pyspark-a59cab7f4f1a&source=-----a59cab7f4f1a---------------------bookmark_footer-----------)![](../Images/829083190a338cf53e34959cadcae252.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Edgar Soto](https://unsplash.com/@edgardo1987?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)
    on [Unsplash](https://unsplash.com/photos/two-diamond-studded-silver-rings-gb0BZGae1Nk?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Here we go for another post about PySpark. I have been enjoying writing about
    this subject, as it feels to me that we are lacking of good blog posts about PySpark,
    especially when we talk about Machine Learning in MLlib — by the way, that is
    Spark’s **M**achine **L**earning **Lib**rary, designed to work with Big Data in
    a parallelized environment.
  prefs: []
  type: TYPE_NORMAL
- en: I can tell that the Spark Documentation is excellent. It is super organized
    and easy to follow the examples. But working with machine learning in Spark is
    not the most friendly thing to do.
  prefs: []
  type: TYPE_NORMAL
- en: In this post, I work on a PCA model to help me creating a ranking of diamonds,
    and I had to face a couple of challenges that we will go over in the next lines.
  prefs: []
  type: TYPE_NORMAL
- en: I have already [written about PCA before](https://medium.com/towards-data-science/pca-beyond-the-dimensionality-reduction-e352eb0bdf52)
    and how it’s useful for dimensionality reduction, as well as for [creating rankings](https://medium.com/towards-data-science/creating-scores-and-rankings-with-pca-c2c3081fdb26).
    However, this is the first time I do this using Spark, aiming to reproduce the
    technique on a Big Data environment.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s see the result.
  prefs: []
  type: TYPE_NORMAL
- en: Coding
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let’s start our coding with the modules to import.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
