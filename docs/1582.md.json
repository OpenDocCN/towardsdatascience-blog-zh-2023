["```py\nssh-keygen -t rsa -b 4096 -C \"My SSH key\"\n```", "```py\ncat ~/.ssh/id_rsa.pub\n```", "```py\n## Train Model\nfrom sklearn.linear_model import LinearRegression\nmodel = LinearRegression().fit(x, y)\n\n## Define Prediction function\ndef Linear_Model(input_x):\n\n    if isinstance(input_x, (int, float)):    ## check input type\n        return model.predict([[input_x]])[0] ## prediction\n\n    else:\n        return None\n\n## Deploy it\nimport modelbit\nmb = modelbit.login() ## authenticate the notebook here.\nmb.deploy(Linear_Model)\n```", "```py\nmodelbit clone my_linear_model\n```", "```py\nmy_linear_models\n├── bin\n├── datasets\n├── endpoints\n└── deployments\n    └── Linear_Model\n        ├── source.py ## source code\n        └── data\n            └── model.pkl ## model pickle\n```", "```py\nmy_linear_models\n├── bin\n├── datasets\n├── endpoints\n└── deployments\n    └── Linear_Model\n        ├── source.py ## source code\n        ├── dummy_data.csv ## added locally\n        └── data\n            └── model.pkl ## model pickle\n```", "```py\ngit add deployments/Linear_Model/git dummy_data.csv\n```", "```py\ngit commit -m \"Add dummy data csv\"\n```", "```py\ngit push\n```", "```py\n## notebook.ipynb\n\nmb.switch_branch(\"another_branch\")\n```"]