- en: 'BigQuery Optimization Strategies 3: Table Flattening'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/bigquery-optimization-strategies-3-table-flattening-373d34c08cea?source=collection_archive---------7-----------------------#2023-02-01](https://towardsdatascience.com/bigquery-optimization-strategies-3-table-flattening-373d34c08cea?source=collection_archive---------7-----------------------#2023-02-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: About Exploding Tables and Imploding Arrays
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@martin.weitzmann?source=post_page-----373d34c08cea--------------------------------)[![Martin
    Weitzmann](../Images/c1d8ddc6db774465126c9aff1eab7ae2.png)](https://medium.com/@martin.weitzmann?source=post_page-----373d34c08cea--------------------------------)[](https://towardsdatascience.com/?source=post_page-----373d34c08cea--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----373d34c08cea--------------------------------)
    [Martin Weitzmann](https://medium.com/@martin.weitzmann?source=post_page-----373d34c08cea--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F25d277ee60df&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbigquery-optimization-strategies-3-table-flattening-373d34c08cea&user=Martin+Weitzmann&userId=25d277ee60df&source=post_page-25d277ee60df----373d34c08cea---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----373d34c08cea--------------------------------)
    ·9 min read·Feb 1, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F373d34c08cea&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbigquery-optimization-strategies-3-table-flattening-373d34c08cea&user=Martin+Weitzmann&userId=25d277ee60df&source=-----373d34c08cea---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F373d34c08cea&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbigquery-optimization-strategies-3-table-flattening-373d34c08cea&source=-----373d34c08cea---------------------bookmark_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: Arrays are one of the coolest features for an analytics databases you can think
    of, because it can store additional information right at the place and time it
    happened. Let’s explore some basic examples and then have a look at arrays in
    Google Analytics 4.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/076ff3f2da5c8b766f6edf93ed5c02e2.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Torsten Dederichs](https://unsplash.com/@tdederichs?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: For storing sales history, for example, we can just store the products bought
    in an array together with the purchase event and not in a separate table — it’s
    better to save all the SQL join hassle later in the analyses.
  prefs: []
  type: TYPE_NORMAL
- en: And while arrays are not super intuitive, I would argue that SQL joins are worse
    (mostly because people [use the wrong mental model to explain them](https://medium.com/towards-data-science/explain-sql-joins-the-right-way-f6ea784b568b)).
  prefs: []
  type: TYPE_NORMAL
- en: 'In terms of query optimization, there is a simple rule for dealing with arrays
    in SQL:'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you can aggregate the array — do it!**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let me explain — when you need information from an array you have two choices:'
  prefs: []
  type: TYPE_NORMAL
- en: '*aggregate* the array / reduce it to one value'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*lateral join* the array to the table / “flatten” the table'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you need only *one value*, then aggregate — if you really need *multiple*
    *values* then filter, filter and filter again, then do the expensive lateral join.
  prefs: []
  type: TYPE_NORMAL
