- en: 'XGBoost: The Definitive Guide (Part 2)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/xgboost-the-definitive-guide-part-2-c38ef02f74d0?source=collection_archive---------6-----------------------#2023-08-15](https://towardsdatascience.com/xgboost-the-definitive-guide-part-2-c38ef02f74d0?source=collection_archive---------6-----------------------#2023-08-15)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Implementation of the XGBoost algorithm in Python from scratch
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@roiyeho?source=post_page-----c38ef02f74d0--------------------------------)[![Dr.
    Roi Yehoshua](../Images/905a512ffc8879069403a87dbcbeb4db.png)](https://medium.com/@roiyeho?source=post_page-----c38ef02f74d0--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c38ef02f74d0--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c38ef02f74d0--------------------------------)
    [Dr. Roi Yehoshua](https://medium.com/@roiyeho?source=post_page-----c38ef02f74d0--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F3886620c5cf9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxgboost-the-definitive-guide-part-2-c38ef02f74d0&user=Dr.+Roi+Yehoshua&userId=3886620c5cf9&source=post_page-3886620c5cf9----c38ef02f74d0---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c38ef02f74d0--------------------------------)
    ·14 min read·Aug 15, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc38ef02f74d0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxgboost-the-definitive-guide-part-2-c38ef02f74d0&user=Dr.+Roi+Yehoshua&userId=3886620c5cf9&source=-----c38ef02f74d0---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc38ef02f74d0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxgboost-the-definitive-guide-part-2-c38ef02f74d0&source=-----c38ef02f74d0---------------------bookmark_footer-----------)![](../Images/798f47ae83cd1fe10d15404d5b3ca636.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Image by [StockSnap](https://pixabay.com/users/stocksnap-894430/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=2557468)
    from [Pixabay](https://pixabay.com//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=2557468)
  prefs: []
  type: TYPE_NORMAL
- en: In the [previous article](https://medium.com/towards-data-science/xgboost-the-definitive-guide-part-1-cc24d2dcd87a)
    we discussed the XGBoost algorithm and showed its implementation in pseudocode.
    In this article we are going to implement the algorithm in Python from scratch.
  prefs: []
  type: TYPE_NORMAL
- en: 'The provided code is a concise and lightweight implementation of the XGBoost
    algorithm (with only about 300 lines of code), intended to demonstrate its core
    functionality. As such, it is not optimized for speed or memory usage, and does
    not include the full spectrum of options provided by the XGBoost library (see
    [https://xgboost.readthedocs.io/](https://xgboost.readthedocs.io/) for more details
    on the features of the library). More specifically:'
  prefs: []
  type: TYPE_NORMAL
- en: The code is written in pure Python, whereas the core of the XGBoost library
    is written in C++ (its Python classes are only thin wrappers over the C++ implementation).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: It does not include various optimizations that allow XGBoost to deal with huge
    amounts of data, such as weighted quantile sketch, out-of-core tree learning,
    and parallel and distributed processing of the data. These optimizations will
    be discussed in more detail in the next article in the series.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The implementation currently supports only regression and binary classification
    tasks, whereas the XGBoost library also supports…
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
