["```py\n# Load libraries\nlibrary(palmerpenguins)\nlibrary(tidyverse)\n\n# Load in data\ndata(package = 'palmerpenguins')\n# Write penguins to a `df` variable.\n# I'm doing this simply because it's easier to type `df` than `penguins` each time.\ndf <- penguins\n```", "```py\n# Create a summary table to calculate the median body mass by species and year\nsummary <- df %>% \n  group_by(species, year) %>%\n  summarise(median_body_mass = median(body_mass_g, na.rm =T))\n\n# Create a Plotly bar chart for the median bass of the Adelie penguins\nplot_ly(\n  data= {summary %>% filter(species == \"Adelie\")},\n  x = ~year,\n  y = ~median_body_mass,\n  color = ~year,\n  type = \"bar\",\n  showlegend = FALSE) %>%\n  layout(\n    yaxis = list(title = 'Median Body Mass (g)'),\n    xaxis = list(title = 'Year',tickvals = list(2007, 2008, 2009)),\n    title = \"Median Body Mass for Adelie Penguins\") %>%\n  hide_colorbar() %>%\n  suppressWarnings()\n```", "```py\nplot_fx <- function(species_name){\n  plot_ly(\n    data= {summary %>% filter(species == species_name)},\n    x = ~year,\n    y = ~median_body_mass,\n    color = ~year,\n    type = \"bar\",\n    showlegend = FALSE) %>%\n    layout(\n      yaxis = list(title = 'Median Body Mass (g)'),\n      xaxis = list(title = 'Year',tickvals = list(2007, 2008, 2009)),\n      title = paste(\"Median Body Mass for\", species_name, \"Penguins\")) %>%\n    hide_colorbar() %>%\n    suppressWarnings()\n  }\n```", "```py\n# Run function for species name \"Chinstrap\"\nplot_fx(\"Chinstrap\")\n```", "```py\n# Create an empty list for all your plots\nplot_list = list() \n```", "```py\n# Run the plotting function for all the species\nfor (i in unique(summary$species)){\n    plot_list[[i]] = plot_fx(i)\n}\n\n# Now you have a list of three plots - one for each species. \n# You can see the plots by changing the value within the square brackes from 1 to 3\nplot_list[[1]]\n```", "```py\n# Plot all three visuals in one grid\nsubplot(plot_list, nrows = 3, shareX = TRUE, shareY = FALSE) \n```", "```py\n# Create a list of annotations\n# The x value is where it lies on the entire subplot grid\n# The y value is where it lies on the entire subplot grid \n\nmy_annotations = list(\n  list(\n    x = 0.1, \n    y = 0.978, \n    font = list(size = 16), \n    text = unique(summary$species)[[1]], \n    xref = \"paper\", \n    yref = \"paper\", \n    xanchor = \"center\", \n    yanchor = \"bottom\", \n    showarrow = FALSE\n  ), \n  list(\n    x = 0.1, \n    y = 0.615, \n    font = list(size = 16), \n    text = unique(summary$species)[[2]], \n    xref = \"paper\", \n    yref = \"paper\", \n    xanchor = \"center\", \n    yanchor = \"bottom\", \n    showarrow = FALSE\n  ), \n  list(\n    x = 0.1, \n    y = 0.285, \n    font = list(size = 16), \n    text = unique(summary$species)[[3]], \n    xref = \"paper\", \n    yref = \"paper\", \n    xanchor = \"center\", \n    yanchor = \"bottom\", \n    showarrow = FALSE\n  ))\n```", "```py\n# Run the subpot line including a layout\nsubplot(plot_list, nrows = 3, shareX = TRUE, shareY = FALSE) %>%\n  layout(annotations = my_annotations,\n         title = \"Median Body Mass for Palmer Penguins\",\n         xaxis = list(tickvals = list(2007, 2008, 2009)),\n         xaxis2 = list(tickvals = list(2007, 2008, 2009)),\n         xaxis3 = list(tickvals = list(2007, 2008, 2009)))\n```"]