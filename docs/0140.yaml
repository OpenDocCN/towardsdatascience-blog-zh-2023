- en: How to write reproducible TensorFlow input pipelines
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-to-write-reproducible-tensorflow-input-pipelines-72d5e4b66932?source=collection_archive---------19-----------------------#2023-01-09](https://towardsdatascience.com/how-to-write-reproducible-tensorflow-input-pipelines-72d5e4b66932?source=collection_archive---------19-----------------------#2023-01-09)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Fix the input ordering by using seeds
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://pascaljanetzky.medium.com/?source=post_page-----72d5e4b66932--------------------------------)[![Pascal
    Janetzky](../Images/43d68509b63c5f9b3fc9cef3cbfc1a88.png)](https://pascaljanetzky.medium.com/?source=post_page-----72d5e4b66932--------------------------------)[](https://towardsdatascience.com/?source=post_page-----72d5e4b66932--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----72d5e4b66932--------------------------------)
    [Pascal Janetzky](https://pascaljanetzky.medium.com/?source=post_page-----72d5e4b66932--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F672b95fdf976&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-write-reproducible-tensorflow-input-pipelines-72d5e4b66932&user=Pascal+Janetzky&userId=672b95fdf976&source=post_page-672b95fdf976----72d5e4b66932---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----72d5e4b66932--------------------------------)
    ·6 min read·Jan 9, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F72d5e4b66932&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-write-reproducible-tensorflow-input-pipelines-72d5e4b66932&user=Pascal+Janetzky&userId=672b95fdf976&source=-----72d5e4b66932---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F72d5e4b66932&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-write-reproducible-tensorflow-input-pipelines-72d5e4b66932&source=-----72d5e4b66932---------------------bookmark_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: When preparing machine learning experiments, the input pipeline plays a critical
    role in data preparation. While they are often straightforward to construct —
    the machine learning frameworks make this relatively easy —, they lack reproducibility.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9f8ae83ad000df4f9014a188dab704b4.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Quinten de Graaf](https://unsplash.com/@quinten149?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: 'This is by default: randomness in the input data, such as applying shuffling
    after each epoch, has been shown to play an important role in neural network training.
    As such, it’s an obvious choice to “enable” randomness by default. However, when
    we want to gain a deeper understanding of our training, we want to keep as many
    influences/parameters fixed as possible. The input order is one of them.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Does fixing the input ordering mean we must forgo altogether shuffling or other
    randomization operations? No, thankfully not. Let me explain why. When dealing
    with randomness, we have one choice that we can make: setting the seed of the
    randomness-inducing operation. The machine learning frameworks deduce any other
    operations and their orders from this seed, usually an integer number such as
    42, 111, or 1337.'
  prefs: []
  type: TYPE_NORMAL
- en: Here, think about randomly selecting a number from a list. When this operation
    is not seeded, we will draw a different number every time we run the drawing.
    However, if we were…
  prefs: []
  type: TYPE_NORMAL
