- en: How to write reproducible TensorFlow input pipelines
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何编写可重复的 TensorFlow 输入管道
- en: 原文：[https://towardsdatascience.com/how-to-write-reproducible-tensorflow-input-pipelines-72d5e4b66932?source=collection_archive---------19-----------------------#2023-01-09](https://towardsdatascience.com/how-to-write-reproducible-tensorflow-input-pipelines-72d5e4b66932?source=collection_archive---------19-----------------------#2023-01-09)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-write-reproducible-tensorflow-input-pipelines-72d5e4b66932?source=collection_archive---------19-----------------------#2023-01-09](https://towardsdatascience.com/how-to-write-reproducible-tensorflow-input-pipelines-72d5e4b66932?source=collection_archive---------19-----------------------#2023-01-09)
- en: Fix the input ordering by using seeds
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过使用种子修复输入顺序
- en: '[](https://pascaljanetzky.medium.com/?source=post_page-----72d5e4b66932--------------------------------)[![Pascal
    Janetzky](../Images/43d68509b63c5f9b3fc9cef3cbfc1a88.png)](https://pascaljanetzky.medium.com/?source=post_page-----72d5e4b66932--------------------------------)[](https://towardsdatascience.com/?source=post_page-----72d5e4b66932--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----72d5e4b66932--------------------------------)
    [Pascal Janetzky](https://pascaljanetzky.medium.com/?source=post_page-----72d5e4b66932--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://pascaljanetzky.medium.com/?source=post_page-----72d5e4b66932--------------------------------)[![Pascal
    Janetzky](../Images/43d68509b63c5f9b3fc9cef3cbfc1a88.png)](https://pascaljanetzky.medium.com/?source=post_page-----72d5e4b66932--------------------------------)[](https://towardsdatascience.com/?source=post_page-----72d5e4b66932--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----72d5e4b66932--------------------------------)
    [Pascal Janetzky](https://pascaljanetzky.medium.com/?source=post_page-----72d5e4b66932--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F672b95fdf976&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-write-reproducible-tensorflow-input-pipelines-72d5e4b66932&user=Pascal+Janetzky&userId=672b95fdf976&source=post_page-672b95fdf976----72d5e4b66932---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----72d5e4b66932--------------------------------)
    ·6 min read·Jan 9, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F72d5e4b66932&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-write-reproducible-tensorflow-input-pipelines-72d5e4b66932&user=Pascal+Janetzky&userId=672b95fdf976&source=-----72d5e4b66932---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F672b95fdf976&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-write-reproducible-tensorflow-input-pipelines-72d5e4b66932&user=Pascal+Janetzky&userId=672b95fdf976&source=post_page-672b95fdf976----72d5e4b66932---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----72d5e4b66932--------------------------------)
    ·6分钟阅读·2023年1月9日 [](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F72d5e4b66932&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-write-reproducible-tensorflow-input-pipelines-72d5e4b66932&user=Pascal+Janetzky&userId=672b95fdf976&source=-----72d5e4b66932---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F72d5e4b66932&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-write-reproducible-tensorflow-input-pipelines-72d5e4b66932&source=-----72d5e4b66932---------------------bookmark_footer-----------)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F72d5e4b66932&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-write-reproducible-tensorflow-input-pipelines-72d5e4b66932&source=-----72d5e4b66932---------------------bookmark_footer-----------)'
- en: When preparing machine learning experiments, the input pipeline plays a critical
    role in data preparation. While they are often straightforward to construct —
    the machine learning frameworks make this relatively easy —, they lack reproducibility.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在准备机器学习实验时，输入管道在数据准备中扮演了关键角色。尽管它们通常比较简单——机器学习框架使这一过程相对容易——，但它们缺乏可重复性。
- en: '![](../Images/9f8ae83ad000df4f9014a188dab704b4.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9f8ae83ad000df4f9014a188dab704b4.png)'
- en: Photo by [Quinten de Graaf](https://unsplash.com/@quinten149?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Quinten de Graaf](https://unsplash.com/@quinten149?utm_source=medium&utm_medium=referral)
    在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: 'This is by default: randomness in the input data, such as applying shuffling
    after each epoch, has been shown to play an important role in neural network training.
    As such, it’s an obvious choice to “enable” randomness by default. However, when
    we want to gain a deeper understanding of our training, we want to keep as many
    influences/parameters fixed as possible. The input order is one of them.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这是默认情况：输入数据中的随机性，例如在每个周期后应用洗牌，已被证明在神经网络训练中发挥着重要作用。因此，默认情况下“启用”随机性是显而易见的选择。然而，当我们希望更深入地理解我们的训练时，我们希望尽可能固定更多的影响因素/参数。输入顺序就是其中之一。
- en: 'Does fixing the input ordering mean we must forgo altogether shuffling or other
    randomization operations? No, thankfully not. Let me explain why. When dealing
    with randomness, we have one choice that we can make: setting the seed of the
    randomness-inducing operation. The machine learning frameworks deduce any other
    operations and their orders from this seed, usually an integer number such as
    42, 111, or 1337.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 固定输入顺序是否意味着我们必须完全放弃洗牌或其他随机化操作？不，幸运的是，不能这样做。我来解释一下原因。在处理随机性时，我们可以做出一个选择：设置随机性操作的种子。机器学习框架从这个种子推导出任何其他操作及其顺序，通常是一个整数，比如42、111或1337。
- en: Here, think about randomly selecting a number from a list. When this operation
    is not seeded, we will draw a different number every time we run the drawing.
    However, if we were…
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，考虑从列表中随机选择一个数字。当这个操作没有种子时，我们每次进行抽取时都会得到不同的数字。然而，如果我们…
