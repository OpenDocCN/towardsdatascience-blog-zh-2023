- en: 'Time Travel Made Easy: A Comprehensive Guide to Python Datetime'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 时间旅行轻松掌握：Python Datetime 的全面指南
- en: 原文：[https://towardsdatascience.com/time-travel-made-easy-a-comprehensive-guide-to-python-datetime-326dd1c57391?source=collection_archive---------2-----------------------#2023-05-04](https://towardsdatascience.com/time-travel-made-easy-a-comprehensive-guide-to-python-datetime-326dd1c57391?source=collection_archive---------2-----------------------#2023-05-04)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/time-travel-made-easy-a-comprehensive-guide-to-python-datetime-326dd1c57391?source=collection_archive---------2-----------------------#2023-05-04](https://towardsdatascience.com/time-travel-made-easy-a-comprehensive-guide-to-python-datetime-326dd1c57391?source=collection_archive---------2-----------------------#2023-05-04)
- en: Probably all you ever need for Python Datetime [⌛](https://emojiterra.com/time/)
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可能是你对 Python Datetime 所需的一切 [⌛](https://emojiterra.com/time/)
- en: '[](https://medium.com/@andreas030503?source=post_page-----326dd1c57391--------------------------------)[![Andreas
    Lukita](../Images/8660ca1fea5da34ce3475281c1f52152.png)](https://medium.com/@andreas030503?source=post_page-----326dd1c57391--------------------------------)[](https://towardsdatascience.com/?source=post_page-----326dd1c57391--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----326dd1c57391--------------------------------)
    [Andreas Lukita](https://medium.com/@andreas030503?source=post_page-----326dd1c57391--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@andreas030503?source=post_page-----326dd1c57391--------------------------------)[![安德烈亚斯·卢基塔](../Images/8660ca1fea5da34ce3475281c1f52152.png)](https://medium.com/@andreas030503?source=post_page-----326dd1c57391--------------------------------)[](https://towardsdatascience.com/?source=post_page-----326dd1c57391--------------------------------)[![面向数据科学](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----326dd1c57391--------------------------------)
    [安德烈亚斯·卢基塔](https://medium.com/@andreas030503?source=post_page-----326dd1c57391--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F955ef38ea7b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftime-travel-made-easy-a-comprehensive-guide-to-python-datetime-326dd1c57391&user=Andreas+Lukita&userId=955ef38ea7b&source=post_page-955ef38ea7b----326dd1c57391---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----326dd1c57391--------------------------------)
    ·11 min read·May 4, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F326dd1c57391&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftime-travel-made-easy-a-comprehensive-guide-to-python-datetime-326dd1c57391&user=Andreas+Lukita&userId=955ef38ea7b&source=-----326dd1c57391---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F955ef38ea7b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftime-travel-made-easy-a-comprehensive-guide-to-python-datetime-326dd1c57391&user=Andreas+Lukita&userId=955ef38ea7b&source=post_page-955ef38ea7b----326dd1c57391---------------------post_header-----------)
    发表在 [面向数据科学](https://towardsdatascience.com/?source=post_page-----326dd1c57391--------------------------------)
    · 11 分钟阅读 · 2023年5月4日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F326dd1c57391&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftime-travel-made-easy-a-comprehensive-guide-to-python-datetime-326dd1c57391&user=Andreas+Lukita&userId=955ef38ea7b&source=-----326dd1c57391---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F326dd1c57391&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftime-travel-made-easy-a-comprehensive-guide-to-python-datetime-326dd1c57391&source=-----326dd1c57391---------------------bookmark_footer-----------)![](../Images/6ee934bfa819f8d3081f3b0aa36d2e4d.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/6ee934bfa819f8d3081f3b0aa36d2e4d.png)'
- en: Photo by [Zulfa Nazer](https://unsplash.com/@zul_naz?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Zulfa Nazer](https://unsplash.com/@zul_naz?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Working with data that has dates and times can be easily overwhelming, especially
    if you are not quite familiar with the ins and outs of `datetime` manipulation.
    Many terms such as `DatetimeIndex`, `Timestamp`, `Timedelta`, `Timezone`, and
    `Offset`, might be confusing to grasp and remember, even for intermediate-level
    analysts. This guide will help you master `datetime` manipulation and unlock powerful
    insights from your data. Let’s get started!
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 处理具有日期和时间的数据可能会令人感到难以应对，尤其是当你不太熟悉`datetime`操作的细节时。许多术语，如`DatetimeIndex`、`Timestamp`、`Timedelta`、`Timezone`和`Offset`，可能会让中级分析师感到困惑，难以理解和记忆。本指南将帮助你掌握`datetime`操作，并从数据中解锁强大的洞察。让我们开始吧！
- en: The `**datetime**` module in Python’s standard library provides classes that
    can work with dates, times, and time intervals[¹](#ac6d). This module is particularly
    important in data analysis because dates and times are often key components of
    data, and manipulating them accurately is essential for projects such as time
    series analysis and financial modeling. With the use of `datetime`, analysts can
    gain a better understanding of time-based trends and patterns in data, which can
    lead to more accurate insights and predictions from the dataset. The 6 classes
    under the `**datetime**` module include `**date**`, `**time**`, `**datetime**`,
    `**timedelta**`, `**tzinfo**`, and `**timezone**`
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Python标准库中的`**datetime**`模块提供了可以处理日期、时间和时间间隔的类[¹](#ac6d)。该模块在数据分析中尤其重要，因为日期和时间通常是数据的关键组成部分，而准确地操作它们对于时间序列分析和金融建模等项目至关重要。通过使用`datetime`，分析师可以更好地理解数据中的时间趋势和模式，从而从数据集中获得更准确的洞察和预测。`**datetime**`模块下的6个类包括`**date**`、`**time**`、`**datetime**`、`**timedelta**`、`**tzinfo**`和`**timezone**`。
- en: '**Table of Content**'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**内容目录**'
- en: '[Aware vs Naive](#9ae9) `[**datetime**](#9ae9)` [objects](#9ae9)'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[带时区与无时区](#9ae9) `[**datetime**](#9ae9)` [对象](#9ae9)'
- en: '[Coordinated Universal Time (UTC), Time, Timezone, Offset](#3387)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[协调世界时间 (UTC)，时间，时区，偏移量](#3387)'
- en: '[Attributes and methods to](#15c7) `[**datetime**](#15c7)` [objects, ISO 8601
    Standard](#15c7)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[属性和方法](#15c7) `[**datetime**](#15c7)` [对象，ISO 8601 标准](#15c7)'
- en: '[Formatting](#b3e8) `[**datetime**](#b3e8)` [objects using](#b3e8) `[**strftime**(format)](#b3e8)`
    [and Parsing strings to](#b3e8) `[datetime](#b3e8)` [objects using](#b3e8) `[**strptime**(format)](#b3e8)`'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[格式化](#b3e8) `[**datetime**](#b3e8)` [对象，使用](#b3e8) `[**strftime**(format)](#b3e8)`
    [和将字符串解析为](#b3e8) `[datetime](#b3e8)` [对象，使用](#b3e8) `[**strptime**(format)](#b3e8)`'
- en: '`[**timedelta**](#18df)` [objects](#18df)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[**timedelta**](#18df)` [对象](#18df)'
- en: '[POSIX Timestamp](#0d93)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[POSIX 时间戳](#0d93)'
- en: '[Pandas,](#18ee) `[**.dt**](#18ee)` [accessor and](#18ee) `[**datetime64[ns]**](#18ee)`'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Pandas,](#18ee) `[**.dt**](#18ee)` [访问器和](#18ee) `[**datetime64[ns]**](#18ee)`'
- en: '[Date as Index, the](#e9d4) `[**.resample(), .agg(), .transform()**](#e9d4)`[method](#e9d4)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将日期作为索引，](#e9d4) `[**.resample(), .agg(), .transform()**](#e9d4)`[方法](#e9d4)'
- en: Aware vs Naive `datetime` objects
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 带时区与无时区`datetime`对象
- en: In simple terms, an **aware datetime object** contains timezone information,
    making it unambiguous about the timezone for a specific date and time[¹](#ac6d).
    To create an aware datetime object, a timezone object needs to be attached to
    the datetime object with the help of `**pytz**` module.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 简单来说，一个**带时区的日期时间对象**包含时区信息，使得特定日期和时间的时区变得明确[¹](#ac6d)。要创建一个带时区的日期时间对象，需要借助`**pytz**`模块将时区对象附加到日期时间对象上。
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This creates an aware `datetime` object representing May 4, 2023, at 10:30 AM
    Singapore Time. The `tzinfo` argument specifies the timezone for the `datetime`
    object. Printing `dt` out will give us the following information `datetime.datetime(2023,
    5, 4, 10, 30, **tzinfo**=<DstTzInfo ‘Asia/Singapore’ LMT+6:55:00 STD>)`.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建一个表示2023年5月4日新加坡时间上午10:30的带时区`datetime`对象。`tzinfo`参数指定了`datetime`对象的时区。打印`dt`将给出以下信息`datetime.datetime(2023,
    5, 4, 10, 30, **tzinfo**=<DstTzInfo ‘Asia/Singapore’ LMT+6:55:00 STD>)`。
- en: On the other hand, a **naïve datetime object** does not contain timezone information.
    It does represents date and time, but it is not clear what timezone that date
    and time refer to[¹](#ac6d).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，一个**无时区的日期时间对象**不包含时区信息。它确实表示日期和时间，但不清楚这些日期和时间指的是哪个时区[¹](#ac6d)。
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Calling the attribute `dt.tzinfo` and `dt.utcoffset`produces `**None**`.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 调用属性`dt.tzinfo`和`dt.utcoffset`将返回`**None**`。
- en: It is worth noting that aware `**datetime**` objects are always in UTC time
    internally, and they are adjusted to the specified timezone when displayed or
    used in calculations. This implies that you can compare aware `**datetime**` objects
    from different timezones directly since they are both internally represented in
    UTC time. More often than not, it is better to use aware `**datetime**` objects
    wherever possible, especially in applications that deal with data from various
    timezones.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，感知的`**datetime**`对象内部始终是 UTC 时间，并在显示或用于计算时调整到指定的时区。这意味着你可以直接比较来自不同时区的感知`**datetime**`对象，因为它们内部都是以
    UTC 时间表示的。通常情况下，最好在可能的情况下使用感知的`**datetime**`对象，特别是在处理来自不同时区的数据的应用中。
- en: Coordinated Universal Time (UTC), Time, Timezone, and Offset
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 协调世界时（UTC）、时间、时区和偏移量
- en: '**UTC, or Universal Coordinated Time**, is the main time standard used worldwide
    to regulate clocks and time. Prior to 1972, it is known as Greenwich Mean Time
    (GMT)[²](#7fc1). UTC is a time standard that is globally recognized and coordinated,
    making it essential for international communication, navigation, and scientific
    research. It is worth noting that UTC is not affected by daylight saving time,
    making it a stable reference point for time-related activities. Instead, it is
    based on atomic clocks and is adjusted as needed to stay synchronized with the
    Earth’s rotation by adding or subtracting leap seconds[³](#cd28). As a result,
    UTC time is consistent worldwide, regardless of the local time in different time
    zones.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**协调世界时（UTC）**是全球用于调节时钟和时间的主要时间标准。1972年之前，它被称为格林威治标准时间（GMT）[²](#7fc1)。UTC 是一个全球公认且协调的时间标准，对于国际通信、导航和科学研究至关重要。值得注意的是，UTC
    不受夏令时的影响，使其成为时间相关活动的稳定参考点。相反，UTC 基于原子钟，并根据需要通过添加或减去闰秒来与地球的自转保持同步[³](#cd28)。因此，UTC
    时间在全球范围内保持一致，无论不同时间区的本地时间如何。'
- en: '**UTC Time is unambiguous, it does not repeat.**'
  id: totrans-30
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**UTC 时间是明确的，不会重复。**'
- en: '**Timezone:** A timezone refers to a region on the globe where all clocks have
    the same offset from Coordinated Universal Time (UTC). It is significant because
    it impacts the local time in various parts of the world.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**时区：**时区指的是地球上的一个区域，在该区域内所有时钟的偏移量与协调世界时（UTC）相同。它很重要，因为它影响世界各地的本地时间。'
- en: '**Offset:** An offset refers to a certain duration of time that is either added
    or subtracted from Coordinated Universal Time (UTC) to obtain the local time in
    a specific timezone. This is important because it affects the local time in different
    parts of the world. We can create an offset using the `**timedelta**` class from
    the `**datetime**` module'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**偏移量：**偏移量指的是从协调世界时（UTC）中加上或减去的一段时间，以获得特定时区的本地时间。这一点很重要，因为它影响不同地区的本地时间。我们可以使用`**timedelta**`类从`**datetime**`模块来创建偏移量。'
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Printing `dt2` out will give the following information `datetime.datetime(2023,
    5, 4, **11**, 30, **tzinfo**=<DstTzInfo ‘Asia/Singapore’ LMT+6:55:00 STD>)`. Notice
    that the hour attribute changes from 10 to 1 after the addition of the offset.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 打印 `dt2` 会给出以下信息 `datetime.datetime(2023, 5, 4, **11**, 30, **tzinfo**=<DstTzInfo
    ‘Asia/Singapore’ LMT+6:55:00 STD>)`。注意，在添加偏移量后，小时属性从 10 变为 1。
- en: The interplay of time, timezone, and offset are crucial in manipulating `datetime`
    in Python as they determine the true time in a specific timezone, including any
    adjustments for daylight saving time.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 时间、时区和偏移量的相互作用在操控 Python 中的`datetime`时至关重要，因为它们决定了特定时区中的真实时间，包括夏令时的调整。
- en: Attributes and methods to datetime objects, ISO 8601 Standard
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '`datetime` 对象的属性和方法，ISO 8601 标准'
- en: The `datetime` class has several essential **attributes** that are commonly
    used in `datetime` manipulation. They are `year` , `month` , `day` , `hour` ,
    `minute` , `second` , `microsecond` `tzinfo`. From our example above,
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '`datetime` 类有几个常用的**属性**，它们在 `datetime` 操作中非常重要。这些属性包括 `year` 、`month` 、`day`
    、`hour` 、`minute` 、`second` 、`microsecond` 和 `tzinfo`。从我们上面的例子中，'
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Some of the essential methods include `date()` , `time()` , `replace()` , `isoformat()`
    , `isocalendar()` , `strftime(format)`. Hold, what is ISO format anyway?
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 一些基本的方法包括 `date()` 、`time()` 、`replace()` 、`isoformat()` 、`isocalendar()` 、`strftime(format)`。等等，ISO
    格式到底是什么？
- en: The **ISO calendar format** is a standard used globally to represent dates and
    times in a format that is easy to read by computer programs[⁴](#055e). The format
    consists of a specific syntax, where dates are represented using four digits for
    the year, two digits for the month, and two digits for the day (YYYY-MM-DD). For
    example, January 1st, 2023 would be represented as “2023–01–01”. Moreover, it
    can also take on more complicated information such as time, and timezone as illustrated
    in the code below.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**ISO日历格式**是一种全球使用的标准，旨在以易于计算机程序读取的格式表示日期和时间[⁴](#055e)。该格式包含特定的语法，日期使用四位数字表示年份，两位数字表示月份，两位数字表示日期（YYYY-MM-DD）。例如，2023年1月1日表示为“2023–01–01”。此外，它还可以包含更复杂的信息，如时间和时区，如下面的代码所示。'
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Let’s delve into the last line of code further.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进一步**深入**最后一行代码。
- en: '`2011-11-04`: The date component, represents November 4th, 2011.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`2011-11-04`：日期组件，表示2011年11月4日。'
- en: '`T`: A separator character indicating the start of the time component.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`T`：一个分隔符字符，表示时间组件的开始。'
- en: '`00:05:23`: The time component, representing 12:05:23am.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`00:05:23`：时间组件，表示12:05:23am。'
- en: '`+04:00`: The timezone offset component, indicating a 4-hour time difference
    from Coordinated Universal Time (UTC) in the positive direction (ahead of UTC).'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`+04:00`：时区偏移量组件，表示与协调世界时（UTC）相差4小时，方向为正（比UTC早）。'
- en: Formatting datetime objects using `strftime(format) and` Parsing strings to
    datetime objects using `**strptime**(format)`
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`strftime(format)`格式化`datetime`对象，以及使用`**strptime**(format)`解析字符串为`datetime`对象。
- en: In Python, you can use the `**strftime(format)**` method to turn ***datetime
    objects into strings***. You just need to give it a string that tells it how you
    want the string to look. Conversely, you can also parse ***strings into a datetime
    object*** using the `**strptime(input_string, input_format)**` method.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在Python中，你可以使用`**strftime(format)**`方法将***datetime对象转换为字符串***。你只需提供一个字符串，告诉它你希望字符串的格式。相反，你也可以使用`**strptime(input_string,
    input_format)**`方法将***字符串解析为datetime对象***。
- en: The format string can contain a combination of **format codes** and **literal
    characters**. Format codes are special character sequences (denoted by the symbol
    **%**) that are replaced with corresponding values from the `datetime` object.
    Literal characters are included in the resulting string as-is. Here is a list
    of common format codes from the Python User Guide[¹](#ac6d).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 格式字符串可以包含**格式代码**和**文字字符**的组合。格式代码是由符号**%**表示的特殊字符序列，替换为`datetime`对象中的相应值。文字字符按原样包含在结果字符串中。以下是Python用户指南中常见格式代码的列表[¹](#ac6d)。
- en: '`%Y`: The year as a four-digit number.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%Y`：四位数字表示的年份。'
- en: '`%m`: The month as a zero-padded decimal number (01-12).'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%m`：零填充的十进制数字表示的月份（01-12）。'
- en: '`%d`: The day of the month as a zero-padded decimal number (01-31).'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%d`：零填充的十进制数字表示的日期（01-31）。'
- en: '`%H`: The hour as a zero-padded decimal number (00-23).'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%H`：零填充的十进制数字表示的小时（00-23）。'
- en: '`%M`: The minute as a zero-padded decimal number (00-59).'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%M`：零填充的十进制数字表示的分钟（00-59）。'
- en: '`%S`: The second as a zero-padded decimal number (00-59).'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%S`：零填充的十进制数字表示的秒（00-59）。'
- en: '`%a`: The abbreviated weekday name (Sun, Mon, Tue, etc.).'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%a`：缩写的星期几名称（周日、周一、周二等）。'
- en: '`%A`: The full weekday name (Sunday, Monday, Tuesday, etc.).'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%A`：完整的星期几名称（星期日、星期一、星期二等）。'
- en: '`%b`: The abbreviated month name (Jan, Feb, Mar, etc.).'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%b`：缩写的月份名称（1月、2月、3月等）。'
- en: '`%B`: The full month name (January, February, March, etc.).'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%B`：完整的月份名称（1月、2月、3月等）。'
- en: '`%p`: The AM/PM designation (AM or PM).'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%p`：AM/PM标识（AM或PM）。'
- en: '[PRE5]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '`timedelta` objects'
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '`timedelta`对象'
- en: A `**timedelta**` object in Python represents the **duration or difference**
    between two dates or times. It can be used to perform arithmetic with `datetime`
    objects, such as adding or subtracting time intervals, or calculating the difference
    between two `datetime` objects[¹](#ac6d).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在Python中，`**timedelta**`对象表示**两个日期或时间之间的持续时间或差异**。它可以用于与`datetime`对象进行算术运算，例如加减时间间隔，或计算两个`datetime`对象之间的差异[¹](#ac6d)。
- en: To create a `**timedelta**` object, you can use the `**datetime.timedelta()**`
    constructor, which takes one or more arguments to specify the duration. The arguments
    can be integers or floats, representing the **number of days, seconds, microseconds**,
    or a combination thereof. For example, `**timedelta(days=1, hours=3)**` creates
    a `**timedelta**` object that represents one day and three hours. You can perform
    arithmetic operations such as addition, subtraction, multiplication, and division
    with `**timedelta**` objects, and they can also be compared using comparison operators.
    For example,
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个 `**timedelta**` 对象，可以使用 `**datetime.timedelta()**` 构造函数，该函数接受一个或多个参数来指定持续时间。这些参数可以是整数或浮点数，表示**天数、秒数、微秒数**，或者它们的组合。例如，`**timedelta(days=1,
    hours=3)**` 创建了一个 `**timedelta**` 对象，表示一天和三小时。你可以对 `**timedelta**` 对象执行加法、减法、乘法和除法等算术操作，也可以使用比较运算符进行比较。例如，
- en: '[PRE6]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: POSIX Timestamp
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: POSIX 时间戳
- en: A POSIX timestamp, also called a Unix timestamp or Epoch timestamp, is a way
    of representing time as a single integer value that can be easily compared and
    manipulated[⁵](#8ebd). It is widely used in computer systems and programming languages
    like Python. It represents ***a point in time as the number of seconds*** since
    January 1, 1970, 00:00:00 UTC, which is known as the Unix epoch time. It is useful
    for storing and manipulating dates and times in computer systems because it is
    not affected by time zones and daylight saving time (DST).
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: POSIX 时间戳，也称为 Unix 时间戳或纪元时间戳，是一种以单一整数值表示时间的方法，这种方法便于比较和操作[⁵](#8ebd)。它在计算机系统和编程语言（如
    Python）中被广泛使用。它表示***从 1970 年 1 月 1 日 00:00:00 UTC 起的秒数***，这被称为 Unix 纪元时间。由于它不受时区和夏令时
    (DST) 的影响，因此在计算机系统中存储和操作日期和时间时非常有用。
- en: '[PRE7]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Note that the difference between the timestamp is 3600 seconds, which is equal
    to a one-hour interval.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，时间戳之间的差异为 3600 秒，相当于一个小时的间隔。
- en: Similarly, we can also convert POSIX Timestamp to a `datetime` object.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，我们也可以将 POSIX 时间戳转换为 `datetime` 对象。
- en: '[PRE8]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Pandas, .dt accessor and `datetime64[ns]`
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Pandas，.dt 访问器和 `datetime64[ns]`
- en: The `**datetime64[ns]**` data type is a type of data that represents date and
    time with precision up to nanoseconds. It is part of the NumPy library in Python
    and is similar to the `datetime` module, but works better with large sets of date
    and time data. This makes it more efficient when working with large datasets,
    especially when combined with other NumPy functions for handling arrays and matrices.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '`**datetime64[ns]**` 数据类型是一种表示日期和时间的类型，其精度高达纳秒。它是 Python 中 NumPy 库的一部分，类似于
    `datetime` 模块，但在处理大量日期和时间数据时表现更佳。这使得在处理大型数据集时更加高效，特别是与其他 NumPy 函数结合使用时，用于处理数组和矩阵。'
- en: When working with the Pandas Library, `datetime64[ns]` is such a great data
    type to work with as it allows us to access the powerful `dt` attribute for working
    with the `datetime` object. Note that this attribute is not available to the `pd.Timestamp`
    object, thus it is recommended to convert your data type to `datetime64[ns]` for
    ease of manipulating the `datetime` object. Let’s get started. We will import
    a random timestamp with 2 cities (Bangkok / Singapore) of 500 records from a CSV
    file. By default, the data type would be `**str**`. This section and coding style
    here is inspired by the book Effective Pandas[⁶](#bb43).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 Pandas 库时，`datetime64[ns]` 是一个非常好的数据类型，因为它允许我们访问强大的 `dt` 属性来处理 `datetime`
    对象。注意，这个属性在 `pd.Timestamp` 对象中不可用，因此建议将数据类型转换为 `datetime64[ns]`，以便更方便地操作 `datetime`
    对象。让我们开始吧。我们将从 CSV 文件中导入包含 500 条记录的随机时间戳（包括两个城市：曼谷/新加坡）。默认情况下，数据类型将是 `**str**`。这一部分和代码风格受到《有效
    Pandas》一书的启发[⁶](#bb43)。
- en: '[PRE9]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](../Images/ed6fa968f921e7af508fabff8fe6e09a.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ed6fa968f921e7af508fabff8fe6e09a.png)'
- en: FYI, the offset time for Bangkok is GMT+7 whereas the offset time for Singapore
    is GMT+8\. Our aim is to convert all the time into Singapore time. Working with
    `datetime` object in Pandas…
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 供参考，曼谷的时间偏移为 GMT+7，而新加坡的时间偏移为 GMT+8。我们的目标是将所有时间转换为新加坡时间。处理 Pandas 中的 `datetime`
    对象…
- en: '[PRE10]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'If you are confused with the last method operation, here’s the breakdown: First,
    the `datetime` series or index is assumed to be timezone-naive, i.e., it does
    not have any timezone information attached to it.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对上一个方法的操作感到困惑，下面是详细说明：首先，`datetime` 系列或索引被假设为没有时区信息，即它不附加任何时区信息。
- en: The `.dt.tz_localize()` method is used to attach a timezone to the `datetime`
    series or index, which effectively makes it timezone-aware.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`.dt.tz_localize()` 方法用于将时区附加到 `datetime` 系列或索引，这样它就会变成具有时区感知的。'
- en: The method takes a single argument, which is the timezone to which the `datetime`
    series or index should be localized.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该方法接受一个参数，即 `datetime` 系列或索引应该本地化到的时区。
- en: Once the timezone is attached to the `datetime` series or index, you can perform
    `datetime` operations that require timezone information such as converting the
    column to a specific timezone (i.e. Singapore).
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦时区附加到 `datetime` 系列或索引上，你可以执行需要时区信息的 `datetime` 操作，例如将列转换为特定时区（即新加坡）。
- en: '![](../Images/6b0a3733c97f2a400a4011e22c7a8533.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6b0a3733c97f2a400a4011e22c7a8533.png)'
- en: 'Left vs Right Output: Without vs With converting to a specific Timezone'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '左侧 vs 右侧输出: 未转换 vs 转换为特定时区'
- en: '`.dt` accessor allows us to retrieve `datetime` information just like the following'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '`.dt` 访问器允许我们检索 `datetime` 信息，如下所示'
- en: '[PRE11]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![](../Images/cf6c396319e7c7199587226da31cb290.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cf6c396319e7c7199587226da31cb290.png)'
- en: Date as Index, the `.resample(), .agg(), .transform()` method
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 作为索引的日期，`.resample(), .agg(), .transform()` 方法
- en: This section and coding style here is inspired by the book Effective Pandas[⁶](#bb43).
    Imagine we have a dataset of temperature at several points in time of the day
    such as the following.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 本节和编码风格受到《Effective Pandas[⁶](#bb43)》一书的启发。假设我们有一个数据集，记录了一天中多个时间点的温度，如下所示。
- en: '![](../Images/87b070d842b5d13e3f6a4d64bcde01bb.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/87b070d842b5d13e3f6a4d64bcde01bb.png)'
- en: We would want to perform aggregation of the data to find out the minimum, maximum
    and mean temperature of the day. We can achieve this by setting the index of the
    DataFrame to the column containing the `**datetime**` object, then using the `**resample**`
    method and specifying the frequency of aggregation.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望对数据进行聚合，以找出一天中的最低、最高和平均温度。我们可以通过将 DataFrame 的索引设置为包含 `**datetime**` 对象的列，然后使用
    `**resample**` 方法并指定聚合的频率来实现这一点。
- en: '[PRE12]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![](../Images/ad82f8f9a3efdc0f24e9fa4082847d96.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ad82f8f9a3efdc0f24e9fa4082847d96.png)'
- en: .agg() summarises and shrinks the records of the DataFrame
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '`.agg()` 总结并缩减 DataFrame 的记录'
- en: If we would like to retain the number of rows instead of shrinking it into 7
    days, we can use the method `transform()` instead of `agg()`. However, note that
    `transform()` cannot take in a list of aggregation methods but is limited to only
    one aggregation method at a time.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们希望保留行数而不是将其缩减为 7 天，我们可以使用方法 `transform()` 而不是 `agg()`。但是，请注意 `transform()`
    不能接受一个聚合方法列表，而是限制为一次只能使用一个聚合方法。
- en: '[PRE13]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![](../Images/92117da88e31189289a06fb0b4e3538c.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/92117da88e31189289a06fb0b4e3538c.png)'
- en: .transform() retains all the records of the DataFrame
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '`.transform()` 保留了 DataFrame 的所有记录'
- en: Afterword
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 后记
- en: Understanding and manipulating `datetime` objects is a crucial skill for any
    data analyst or scientist. By mastering the various classes and methods available,
    you can unlock powerful insights from your data and make informed decisions. Promise
    me, next time when you encounter a dataset with dates and times, don’t shy away
    from it — embrace it and let the `**datetime**` magic begins!
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 理解和操作 `datetime` 对象是任何数据分析师或科学家的关键技能。通过掌握各种类和方法，你可以从数据中解锁强大的洞察，并做出明智的决策。答应我，下次当你遇到带有日期和时间的数据集时，不要退缩——拥抱它，让
    `**datetime**` 的魔力开始吧！
- en: If you pick up something useful from this article, do consider giving me a [***Follow***](https://medium.com/@andreas030503)
    on Medium. Easy, 1 article a week to keep yourself updated and stay ahead of the
    curve!
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你从这篇文章中获得了一些有用的信息，请考虑在 Medium 上给我一个 [***关注***](https://medium.com/@andreas030503)。很简单，每周一篇文章，让你保持更新并保持领先！
- en: '***You can connect with me on LinkedIn:*** [***https://www.linkedin.com/in/andreaslukita7/***](https://www.linkedin.com/in/andreaslukita7/)'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '***你可以在 LinkedIn 上与我联系:*** [***https://www.linkedin.com/in/andreaslukita7/***](https://www.linkedin.com/in/andreaslukita7/)'
- en: '***References:***'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '***参考资料:***'
- en: 'Python Docs: [https://docs.python.org/3/library/datetime.html#timezone-objects](https://docs.python.org/3/library/datetime.html#timezone-objects)'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Python 文档: [https://docs.python.org/3/library/datetime.html#timezone-objects](https://docs.python.org/3/library/datetime.html#timezone-objects)'
- en: National Hurricane Center and Central Pacific Hurricane Center. *What is UTC
    or GMT Time?* [https://www.nhc.noaa.gov/aboututc.shtml#:~:text=Prior%20to%201972%2C%20this%20time,%22%20or%20%22Zulu%20Time%22](https://www.nhc.noaa.gov/aboututc.shtml#:~:text=Prior%20to%201972%2C%20this%20time,%22%20or%20%22Zulu%20Time%22).
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 国家飓风中心和中太平洋飓风中心。*什么是 UTC 或 GMT 时间？* [https://www.nhc.noaa.gov/aboututc.shtml#:~:text=Prior%20to%201972%2C%20this%20time,%22%20or%20%22Zulu%20Time%22](https://www.nhc.noaa.gov/aboututc.shtml#:~:text=Prior%20to%201972%2C%20this%20time,%22%20or%20%22Zulu%20Time%22).
- en: National Institute of Standards and Technology. *What is USNO time or UTC(USNO)?*
    [https://www.nist.gov/pml/time-and-frequency-division/nist-time-frequently-asked-questions-faq#:~:text=USNO%20has%20an%20ensemble%20of,scale%20called%20UTC(USNO).](https://www.nist.gov/pml/time-and-frequency-division/nist-time-frequently-asked-questions-faq#:~:text=USNO%20has%20an%20ensemble%20of,scale%20called%20UTC(USNO).)
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 国家标准与技术研究院。*什么是 USNO 时间或 UTC(USNO)?* [https://www.nist.gov/pml/time-and-frequency-division/nist-time-frequently-asked-questions-faq#:~:text=USNO%20has%20an%20ensemble%20of,scale%20called%20UTC(USNO).](https://www.nist.gov/pml/time-and-frequency-division/nist-time-frequently-asked-questions-faq#:~:text=USNO%20has%20an%20ensemble%20of,scale%20called%20UTC(USNO).)
- en: International Organization for Standardization. *ISO 8601 Date and Time Format.*
    [https://www.iso.org/iso-8601-date-and-time-format.html](https://www.iso.org/iso-8601-date-and-time-format.html)
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 国际标准化组织。*ISO 8601 日期和时间格式。* [https://www.iso.org/iso-8601-date-and-time-format.html](https://www.iso.org/iso-8601-date-and-time-format.html)
- en: UNIX Time. [https://unixtime.org/](https://unixtime.org/)
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: UNIX 时间。 [https://unixtime.org/](https://unixtime.org/)
- en: 'Effective Pandas by Matt Harrison: [https://store.metasnake.com/effective-pandas-book](https://store.metasnake.com/effective-pandas-book)'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Matt Harrison 的《有效 Pandas》: [https://store.metasnake.com/effective-pandas-book](https://store.metasnake.com/effective-pandas-book)'
