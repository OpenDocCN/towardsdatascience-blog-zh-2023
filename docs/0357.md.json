["```py\nSELECT \n    * \nFROM\n    (\n    SELECT\n    (\n        (cs-uri-query LIKE '%cmd=read%'\n        OR cs-uri-query LIKE '%connect&target%'\n        OR cs-uri-query LIKE '%cmd=connect%'\n        OR cs-uri-query LIKE '%cmd=disconnect%'\n        OR cs-uri-query LIKE '%cmd=forward%')\n        AND (cs-referer IS NULL\n        AND cs-USER-agent IS NULL\n        AND cs-METHOD LIKE 'POST')) \n AS web_webshell_regeorg,\n       *\n   FROM\n    test_webserver_logs\n   )\nWHERE \n     web_webshell_regeorg = TRUE\n```", "```py\ndetection:\n    selection:\n        EventID: 5156\n        DestPort:\n        - 3268\n        - 3269\n    timeframe: 1h\n    condition: selection | count() by SourceAddress > 2000\n```", "```py\n# current time in milliseconds\nts = int(time.time() * 1000)\n# create a streaming dataframe for an iceberg table\nstreamingDf = (\n    spark.readStream\n    .format(\"iceberg\")\n    .option(\"stream-from-timestamp\", ts)\n    .option(\"streaming-skip-delete-snapshots\", True)\n    .load(\"icebergcatalog.dev.events_table\")\n)\n\n# alias the dataframe to a table named \"events\"\nstreamingDf.createOrReplaceTempView(\"events\")\n```", "```py\nSELECT\n    (cs-uri-query LIKE '%cmd=read%'\n    OR cs-uri-query LIKE '%connect&target%'\n    OR cs-uri-query LIKE '%cmd=connect%'\n    OR cs-uri-query LIKE '%cmd=disconnect%'\n    OR cs-uri-query LIKE '%cmd=forward%')\n    AND (cs-referer IS NULL\n    AND cs-USER-agent IS NULL\n    AND cs-METHOD LIKE 'POST')) \n    AS web_webshell_regeorg,\n    -- another detection here\n    cs-uri-query LIKE '%something%'\n    AS detection2\n    *\nFROM\n    events\n```", "```py\n# load auto-generated SQL statement\nwith open('./generated_sql_statement.sql', 'r') as f:\n    detections_sql = f.read()\n\nhitsDf = spark.sql(detections_sql)\n```", "```py\n# start a streaming query printing results to the console\nquery = (\n    hitsDf.writeStream\n    .outputMode(\"append\")\n    .format(\"console\")\n    .trigger(processingTime=\"1 minute\")\n    .start()\n)\n```", "```py\ndetection:\n    selection:\n        Image|endswith: '\\rundll32.exe'\n    filter_empty:\n        CommandLine: null\n    filter:\n        - CommandLine|contains: '.dll'\n        - CommandLine: ''\n    filter_iexplorer:\n        ParentImage|endswith: ':\\Program Files\\Internet Explorer\\iexplore.exe'\n        CommandLine|contains: '.cpl'\n    filter_msiexec_syswow64:\n        ParentImage|endswith: ':\\Windows\\SysWOW64\\msiexec.exe'\n        ParentCommandLine|startswith: 'C:\\Windows\\syswow64\\MsiExec.exe -Embedding'\n    filter_msiexec_system32:\n        ParentImage|endswith: ':\\Windows\\System32\\msiexec.exe'\n        ParentCommandLine|startswith: 'C:\\Windows\\system32\\MsiExec.exe -Embedding'\n    filter_splunk_ufw:\n        ParentImage|endswith: ':\\Windows\\System32\\cmd.exe'\n        ParentCommandLine|contains: ' C:\\Program Files\\SplunkUniversalForwarder\\'\n    filter_localserver_fp:\n        CommandLine|contains: ' -localserver '\n    condition: selection and not 1 of filter*\n```", "```py\n %%sparksql --view current --output skip\nselect\n    *,\n    ID,\n    CommandLine,\n    ImagePath,\n    -- rule 1\n    ImagePath ilike '%\\\\\\\\rundll32.exe' as cr1_selection,\n    Commandline is null as cr1_filter_empty,\n    Commandline ilike '%.dll%' OR Commandline = '' as cr1_filter,\n    Commandline ilike '% -localserver %' as cr1_filter_localserver_fp\nfrom\n    events\n```", "```py\n%%sparksql --output skip --view parents_of_interest\n\nselect\n    *\nfrom (\n    select\n        host_id as parent_host_id,\n        ID as parent_id,\n        ImagePath as parent_imagepath,\n        CommandLine as parent_commandline,\n\n        -- rule 1\n        (ImagePath ilike '%:\\Program Files\\Internet Explorer\\iexplore.exe'\n            AND CommandLine ilike '%.cpl%')\n        as pr1_filter_iexplorer,\n        (ImagePath ilike '%:\\Windows\\SysWOW64\\msiexec.exe'\n            AND CommandLine ilike 'C:\\Windows\\syswow64\\MsiExec.exe -Embedding%')\n        as pr1_filter_msiexec_syswow64,\n        (ImagePath ilike '%:\\Windows\\System32\\msiexec.exe' AND\n            CommandLine ilike 'C:\\Windows\\system32\\MsiExec.exe -Embedding%')\n        as pr1_filter_msiexec_system32\n    from\n        events\n)\nwhere\n    pr1_filter_iexplorer\n    OR pr1_filter_msiexec_syswow64\n    OR pr1_filter_msiexec_system32 \n```", "```py\ncoalesce(pr3_selection_atexec, FALSE)\n```", "```py\nselection_atexec:\n        ParentCommandLine|contains:\n            - 'svchost.exe -k netsvcs' \n            - 'taskeng.exe'\n        CommandLine|contains|all:\n            - 'cmd.exe'\n            - '/C'\n            - 'Windows\\Temp\\'\n            - '&1'\n```", "```py\ncr3_selection_atexec AND coalesce(pr3_selection_atexec, FALSE) \nas r3_selection_atexec,\n```", "```py\n%%sparksql --view joined --output skip\n\nselect\n    --rule1\n    cr1_selection as r1_selection,\n    cr1_filter_empty as r1_filter_empty,\n    cr1_filter as r1_filter,\n    cr1_filter_localserver_fp as r1_filter_localserver_fp,\n    coalesce(pr1_filter_iexplorer, FALSE) as r1_filter_iexplorer,\n    coalesce(pr1_filter_msiexec_syswow64, FALSE) as r1_filter_msiexec_syswow64,\n    coalesce(pr1_filter_msiexec_system32, FALSE) as r1_filter_msiexec_system32,\n    parent_host_id,\n    parent_id,\n    parent_imagepath,\n    parent_commandline\nfrom\n    current as c\n    left join parents_of_interest as p\n    on c.ParentProcessID = p.parent_id\n```", "```py\ncondition: selection and not 1 of filter*\n```", "```py\nr1_selection AND NOT (r1_filter_empty \n                              OR r1_filter\n                              OR r1_filter_localserver_fp\n                              OR r1_filter_iexplorer\n                              OR r1_filter_msiexec_syswow64\n                              OR r1_filter_msiexec_system32)\n        as rule1,\n```", "```py\n%%sparksql --output json\nselect\n    *\nfrom (\n    select\n        *,\n\n        -- rule 1 -> condition: selection and not 1 of filter*\n        r1_selection AND NOT (r1_filter_empty \n                              OR r1_filter\n                              OR r1_filter_localserver_fp\n                              OR r1_filter_iexplorer\n                              OR r1_filter_msiexec_syswow64\n                              OR r1_filter_msiexec_system32)\n        as rule1,\n    from\n        joined\n    )\nwhere\n    rule1 = TRUE\n```"]