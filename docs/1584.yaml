- en: 'Python Inheritance: Should You Inherit From dict or UserDict?'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/python-inheritance-should-you-inherit-from-dict-or-userdict-9b4450830cbb?source=collection_archive---------10-----------------------#2023-05-10](https://towardsdatascience.com/python-inheritance-should-you-inherit-from-dict-or-userdict-9b4450830cbb?source=collection_archive---------10-----------------------#2023-05-10)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: PYTHON PROGRAMMING
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: They say you shouldn’t inherit from dict but UserDict. Is this true indeed?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@nyggus?source=post_page-----9b4450830cbb--------------------------------)[![Marcin
    Kozak](../Images/d7faf62e48ed81dab5d8ad92819fff54.png)](https://medium.com/@nyggus?source=post_page-----9b4450830cbb--------------------------------)[](https://towardsdatascience.com/?source=post_page-----9b4450830cbb--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----9b4450830cbb--------------------------------)
    [Marcin Kozak](https://medium.com/@nyggus?source=post_page-----9b4450830cbb--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4762f0cff9b2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-inheritance-should-you-inherit-from-dict-or-userdict-9b4450830cbb&user=Marcin+Kozak&userId=4762f0cff9b2&source=post_page-4762f0cff9b2----9b4450830cbb---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----9b4450830cbb--------------------------------)
    ·15 min read·May 10, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F9b4450830cbb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-inheritance-should-you-inherit-from-dict-or-userdict-9b4450830cbb&user=Marcin+Kozak&userId=4762f0cff9b2&source=-----9b4450830cbb---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9b4450830cbb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-inheritance-should-you-inherit-from-dict-or-userdict-9b4450830cbb&source=-----9b4450830cbb---------------------bookmark_footer-----------)![](../Images/c72ec52580061eee2cab00288f3dddbf.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Dictionaries are among the basic Python data types. Photo by [Waldemar](https://unsplash.com/@waldemarbrandt67w?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Inheriting from `dict` is usually not the best idea — not only because they
    say so, but because the overloaded methods will not work. Instead, you’re supposed
    to subclass `collections.UserDict`. But what if you do not want to overload `dict`
    methods, just to add new ones? In this article, we will discuss when and how to
    inherit from the `dict` and `collections.UserDict` classes.
  prefs: []
  type: TYPE_NORMAL
- en: 'In his fantastic book *Fluent Python. 2nd ed.*, Luciano Ramalho explains why
    you should not create custom classes inheriting from `dict`. The reason behind
    this rule, strange at the first glance, is simple but critical: `dict` is a highly
    optimized type implemented in C, and it wouldn’t call the methods you overload
    in your subclass of `dict`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'That would be a nasty surprise, wouldn’t it? Let’s see this in an example.
    Imagine you want to create a dictionary-like class in which the provided values
    will be converted to their string representation. Let’s try to do this by subclassing
    the `dict` built-in type:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
