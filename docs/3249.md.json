["```py\naz login\n```", "```py\naz ad sp create-for-rbac \\\n      --name \"your-app-name\" \\\n      --role Owner \\\n      --scopes /subscriptions/<your-subscription-id>/resourceGroups/<your-resource-group-name> \\\n      --sdk-auth\n```", "```py\nenv:\n  RESOURCEGROUP_NAME: my-rg\n  REGISTRY_NAME: my-cr\n  SHORT_NAME: mycr\n  ACI_NAME: my-ci-test\n  KV_NAME: my-kv\n  ENVIRONMENT: test\n  CPU: 1\n  MEMORY: 1.5\n```", "```py\n vars:\n    runs-on: ubuntu-latest\n    outputs:\n      resource_group: ${{ env.RESOURCEGROUP_NAME }}\n      acr_name: ${{ env.REGISTRY_NAME }}\n      short_name: ${{ env.SHORT_NAME }}\n      aci_name: ${{ env.ACI_NAME }}\n      kv_name: ${{ env.KV_NAME }}\n      environment: ${{ env.ENVIRONMENT }}\n      cpu: ${{ env.CPU }}\n      memory: ${{ env.MEMORY }}\n    steps:\n      - run: echo \"Exposing env vars\"\n```", "```py\n deploy-acr:\n    needs: vars\n    uses: ./.github/workflows/deploy_acr.yml\n    if: github.ref == 'refs/heads/main'\n    with:\n      environment: ${{ needs.vars.outputs.environment }}\n      resource_group: ${{ needs.vars.outputs.resource_group }}\n      acr_name: ${{ needs.vars.outputs.acr_name }}\n    secrets:\n      azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}\n```", "```py\non: \n  workflow_call:\n    inputs:\n      environment:\n        required: true\n        type: string\n      resource_group:\n        required: true\n        type: string\n      acr_name:\n        required: true\n        type: string\n\n    secrets:\n      azure_credentials:\n        required: true\n```", "```py\njobs:\n  deploy-acr:\n    name: Deploy ACR\n    runs-on: ubuntu-latest\n    environment: ${{ inputs.environment }}\n    steps:\n      - uses: actions/checkout@v2\n      - uses: azure/login@v1\n        with:\n          creds: ${{ secrets.azure_credentials }}\n      - name: Deploy bicep\n        uses: azure/arm-deploy@v1\n        with:\n          resourceGroupName: ${{ inputs.resource_group }}\n          template: bicep/acr.bicep\n          parameters:\n            acrName=${{ inputs.acr_name }}\n            acrSku=Basic\n          failOnStdErr: false\n```", "```py\non: \n  push:\n    branches: \n      - main\n  workflow_dispatch:\n```"]