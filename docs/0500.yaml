- en: Fine-Tuning Sentence Transformers with MNR Loss
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/fine-tuning-sentence-transformers-with-mnr-loss-cd6a26685b81?source=collection_archive---------5-----------------------#2023-02-03](https://towardsdatascience.com/fine-tuning-sentence-transformers-with-mnr-loss-cd6a26685b81?source=collection_archive---------5-----------------------#2023-02-03)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[NLP For Semantic Search](https://jamescalam.medium.com/list/nlp-for-semantic-search-d3a4b96a52fe)'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Next-Gen Sentence Embeddings with Multiple Negatives Ranking Loss
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://jamescalam.medium.com/?source=post_page-----cd6a26685b81--------------------------------)[![James
    Briggs](../Images/cb34b7011748e4d8607b7ff4a8510a93.png)](https://jamescalam.medium.com/?source=post_page-----cd6a26685b81--------------------------------)[](https://towardsdatascience.com/?source=post_page-----cd6a26685b81--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----cd6a26685b81--------------------------------)
    [James Briggs](https://jamescalam.medium.com/?source=post_page-----cd6a26685b81--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb9d77a4ca1d1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffine-tuning-sentence-transformers-with-mnr-loss-cd6a26685b81&user=James+Briggs&userId=b9d77a4ca1d1&source=post_page-b9d77a4ca1d1----cd6a26685b81---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----cd6a26685b81--------------------------------)
    ·8 min read·Feb 3, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fcd6a26685b81&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffine-tuning-sentence-transformers-with-mnr-loss-cd6a26685b81&user=James+Briggs&userId=b9d77a4ca1d1&source=-----cd6a26685b81---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fcd6a26685b81&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffine-tuning-sentence-transformers-with-mnr-loss-cd6a26685b81&source=-----cd6a26685b81---------------------bookmark_footer-----------)![](../Images/1281f41ecb283e0989e5a4230b2c20f6.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Lars Kienle](https://unsplash.com/@larskienle?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral). [Article
    originally published on pinecone.io](https://www.pinecone.io/learn/fine-tune-sentence-transformers-mnr/)
    where the author is employed.
  prefs: []
  type: TYPE_NORMAL
- en: Transformer-produced sentence embeddings have come a long way in a very short
    time. Starting with the slow but accurate similarity prediction of BERT cross-encoders,
    the world of [sentence embeddings](https://apps-showcase--optimistic-curran-b817a8.netlify.app/learn/sentence-embeddings/)
    was ignited with the introduction of SBERT in 2019 [1]. Since then, many more
    sentence transformers have been introduced. These models quickly made the original
    SBERT obsolete.
  prefs: []
  type: TYPE_NORMAL
- en: How did these newer sentence transformers manage to outperform SBERT so quickly?
    The answer is *multiple negatives ranking (MNR) loss*.
  prefs: []
  type: TYPE_NORMAL
- en: This article will cover what MNR loss is, the data it requires, and how to implement
    it to fine-tune our own high-quality sentence transformers.
  prefs: []
  type: TYPE_NORMAL
- en: Implementation will cover two training approaches. The first is more involved
    and outlines the exact steps to fine-tune the model. The second approach makes
    use of the `sentence-transformers` library’s excellent utilities for fine-tuning.
  prefs: []
  type: TYPE_NORMAL
