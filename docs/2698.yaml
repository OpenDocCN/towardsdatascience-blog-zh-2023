- en: 'Prompt Engineering: How to Trick AI into Solving Your Problems'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/prompt-engineering-how-to-trick-ai-into-solving-your-problems-7ce1ed3b553f?source=collection_archive---------1-----------------------#2023-08-25](https://towardsdatascience.com/prompt-engineering-how-to-trick-ai-into-solving-your-problems-7ce1ed3b553f?source=collection_archive---------1-----------------------#2023-08-25)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 7 prompting tricks, LangChain, and Python example code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://shawhin.medium.com/?source=post_page-----7ce1ed3b553f--------------------------------)[![Shaw
    Talebi](../Images/1449cc7c08890e2078f9e5d07897e3df.png)](https://shawhin.medium.com/?source=post_page-----7ce1ed3b553f--------------------------------)[](https://towardsdatascience.com/?source=post_page-----7ce1ed3b553f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----7ce1ed3b553f--------------------------------)
    [Shaw Talebi](https://shawhin.medium.com/?source=post_page-----7ce1ed3b553f--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff3998e1cd186&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fprompt-engineering-how-to-trick-ai-into-solving-your-problems-7ce1ed3b553f&user=Shaw+Talebi&userId=f3998e1cd186&source=post_page-f3998e1cd186----7ce1ed3b553f---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----7ce1ed3b553f--------------------------------)
    ·14 min read·Aug 25, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F7ce1ed3b553f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fprompt-engineering-how-to-trick-ai-into-solving-your-problems-7ce1ed3b553f&user=Shaw+Talebi&userId=f3998e1cd186&source=-----7ce1ed3b553f---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7ce1ed3b553f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fprompt-engineering-how-to-trick-ai-into-solving-your-problems-7ce1ed3b553f&source=-----7ce1ed3b553f---------------------bookmark_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: This is the fourth article in a [series on using large language models](/a-practical-introduction-to-llms-65194dda1148)
    (LLMs) in practice. Here, I will discuss prompt engineering (PE) and how to use
    it to build LLM-enabled applications. I start by reviewing key PE techniques and
    then walk through Python example code of using LangChain to build an LLM-based
    application.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/51cee05215f7e6b279687f028ed20dcc.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Jason Leung](https://unsplash.com/@ninjason?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: When first hearing about prompt engineering, many technical people (including
    myself) tend to scoff at the idea. We might think, “*Prompt engineering? Psssh,
    that’s lame. Tell me how to build an LLM from scratch.*”
  prefs: []
  type: TYPE_NORMAL
- en: However, after diving into it more deeply, I’d caution developers against writing
    off prompt engineering automatically. I’ll go even further and say that **prompt
    engineering can realize 80% of the value** of most LLM use cases with (relatively)
    very low effort.
  prefs: []
  type: TYPE_NORMAL
- en: My goal with this article is to convey this point via a practical review of
    prompt engineering and illustrative examples. While there are surely gaps in what
    prompt engineering can do, it opens the door to discovering simple and clever
    solutions to our problems.
  prefs: []
  type: TYPE_NORMAL
