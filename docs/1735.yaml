- en: Concurrency in Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/concurrency-in-python-fe8b39edfba5?source=collection_archive---------16-----------------------#2023-05-24](https://towardsdatascience.com/concurrency-in-python-fe8b39edfba5?source=collection_archive---------16-----------------------#2023-05-24)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: PYTHON | PROGRAMMING | CONCURRENCY
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A beginners guide to exploiting the power of concurrent execution and improving
    the performance of your Python programs.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://david-farrugia.medium.com/?source=post_page-----fe8b39edfba5--------------------------------)[![David
    Farrugia](../Images/082ed61e24c7c26a4ae1c77343a87824.png)](https://david-farrugia.medium.com/?source=post_page-----fe8b39edfba5--------------------------------)[](https://towardsdatascience.com/?source=post_page-----fe8b39edfba5--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----fe8b39edfba5--------------------------------)
    [David Farrugia](https://david-farrugia.medium.com/?source=post_page-----fe8b39edfba5--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F3916826092a6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconcurrency-in-python-fe8b39edfba5&user=David+Farrugia&userId=3916826092a6&source=post_page-3916826092a6----fe8b39edfba5---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----fe8b39edfba5--------------------------------)
    ·9 min read·May 24, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ffe8b39edfba5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconcurrency-in-python-fe8b39edfba5&user=David+Farrugia&userId=3916826092a6&source=-----fe8b39edfba5---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffe8b39edfba5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconcurrency-in-python-fe8b39edfba5&source=-----fe8b39edfba5---------------------bookmark_footer-----------)![](../Images/57451a5ca6eab778ff5fdac8cb157ce8.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [fabio](https://unsplash.com/@fabioha?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Gordon Moore, in 1965, made a prediction that has since become known as Moore’s
    Law. He stated that the number of transistors on microchips would double every
    two years. Additionally, Moore’s Law stipulates that the cost of computing hardware
    will also halve during the same period.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/92294572c71c119617ed7d82e13185d4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [https://commons.wikimedia.org/wiki/File:Moore%27s_Law_Transistor_Count_1970-2020.png](https://commons.wikimedia.org/wiki/File:Moore%27s_Law_Transistor_Count_1970-2020.png)'
  prefs: []
  type: TYPE_NORMAL
- en: In today’s technological landscape, it is common for computer devices to come
    equipped with multi-core CPUs or multiple processors. As developers, it is important
    for us to write code that takes advantage of this hardware capability in order
    to deliver the most optimised and efficient solution for our users.
  prefs: []
  type: TYPE_NORMAL
- en: What is Concurrency?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '***Concurrency is the execution of multiple instruction sequences simultaneously.***'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Suppose that our system has a 2 core CPU. Running non-concurrent code would
    result in our script utilising only one core for task execution, leaving the other
    core…
  prefs: []
  type: TYPE_NORMAL
