- en: 'Machine learning on multioutput datasets: a quick guide'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/machine-learning-on-multioutput-datasets-a-quick-guide-ebeba81b97d1?source=collection_archive---------2-----------------------#2023-03-10](https://towardsdatascience.com/machine-learning-on-multioutput-datasets-a-quick-guide-ebeba81b97d1?source=collection_archive---------2-----------------------#2023-03-10)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: How to train and validate ML models on multioutput datasets with minimal coding
    effort
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://tvdboom.medium.com/?source=post_page-----ebeba81b97d1--------------------------------)[![Marco
    vd Boom](../Images/3fc053efda1c23dd84a6418ded2603ca.png)](https://tvdboom.medium.com/?source=post_page-----ebeba81b97d1--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ebeba81b97d1--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ebeba81b97d1--------------------------------)
    [Marco vd Boom](https://tvdboom.medium.com/?source=post_page-----ebeba81b97d1--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe2091b627921&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-on-multioutput-datasets-a-quick-guide-ebeba81b97d1&user=Marco+vd+Boom&userId=e2091b627921&source=post_page-e2091b627921----ebeba81b97d1---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ebeba81b97d1--------------------------------)
    ·6 min read·Mar 10, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Febeba81b97d1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-on-multioutput-datasets-a-quick-guide-ebeba81b97d1&user=Marco+vd+Boom&userId=e2091b627921&source=-----ebeba81b97d1---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Febeba81b97d1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-on-multioutput-datasets-a-quick-guide-ebeba81b97d1&source=-----ebeba81b97d1---------------------bookmark_footer-----------)![](../Images/c406c9a0eb9fcb1e0cbb132ad550c8e4.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Victor Barrios](https://unsplash.com/@thevictorbarrios?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The standard machine learning tasks everyone is familiar with are classification
    (binary and multiclass) and regression. In these cases, there is one target column
    that we are trying to predict. In the multioutput case, there is more than one
    target column, and we want to train a model capable of predicting every one of
    them at the same time. We recognize three types of multioutput tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Multilabel: Multilabel is a classification task, labeling each sample with
    *m* labels from *n_classes* possible classes, where *m* can be 0 to *n_classes*
    inclusive. This can be thought of as predicting properties of a sample that are
    not mutually exclusive. For example, prediction of the topics relevant to a text
    document. The document may be about one of religion, politics, finance or education,
    several of the topic classes or all of the topic classes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Multiclass-multioutput: Multiclass-multioutput (also known as multitask classification)
    is a classification task which labels each sample with a set of non-binary properties.
    Both the number of properties and the number of classes per property is greater
    than 2\. This is both a generalization of the multilabel classification task,
    which only considers binary attributes, as well as a generalization of the multiclass
    classification task, where only one property is considered. For example, classification
    of the properties “type of fruit” and “colour” for a set of images of fruit. The
    property “type of fruit” has the possible classes: apple, pear and orange. The
    property “colour” has the possible classes: green, red, yellow and orange. Each
    sample is an image of a fruit, a label is output for both properties and each
    label is one of the possible classes of the corresponding property.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Multioutput regression: Multioutput regression predicts multiple numerical
    properties for each sample. Each property is a numerical variable and the number
    of properties to be predicted for each sample is >= 2\. For example, prediction
    of both wind speed and wind direction, in degrees, using data obtained at a certain
    location. Each sample would be data obtained at one location and both wind speed
    and direction would be output for each sample.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this story, we’ll explain how the [ATOM](https://github.com/tvdboom/ATOM)
    library can help you fasten your pipelines on multioutput datasets. From data
    preprocessing, to model training, validation and results analysis. ATOM is an
    open-source Python package designed to help data scientists with the exploration
    of machine learning pipelines.
  prefs: []
  type: TYPE_NORMAL
- en: '**Note**: This story focuses on using ATOM for multioutput datasets. Teaching
    the basics of the library lies outside the scope of this story. Read [this other
    story](/atom-a-python-package-for-fast-exploration-of-machine-learning-pipelines-653956a16e7b)
    if you want a gentle introduction to the library.'
  prefs: []
  type: TYPE_NORMAL
- en: Data preprocessing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Initializing a multioutput dataset in *atom* works much the same as every other
    task, with one remark: you **must** specify the target columns using the keyword
    argument `y` .'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Not providing `y=` makes atom think the second argument is the test set, as
    if you were initializing with arguments `atom = ATOMClassifier(train, test)` ,
    and will result in a column mismatch exception.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also provide a sequence of column names or positions to specify the
    target columns in `X`. For example, to specify the last 3 columns as the target,
    use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: In all cases, printing `self.y` now returns the target of type `DataFrame`,
    instead of type `Series`.
  prefs: []
  type: TYPE_NORMAL
- en: For multilabel tasks, the target column could look like this.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: A model can not directly ingest a variable amount of target classes. Use
  prefs: []
  type: TYPE_NORMAL
- en: the [*clean*](https://tvdboom.github.io/ATOM/latest/API/ATOM/atomclassifier/#atomclassifier-clean)
    method to assign a binary output to each class, for every sample. Positive classes
    are indicated with 1 and negative classes with 0\. It is thus comparable to running
    *n_classes* binary classification tasks.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'In our example, the target (`atom.y` ) is converted to:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Model training and validation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Some models have native support for multioutput tasks. This means that
  prefs: []
  type: TYPE_NORMAL
- en: the original estimator is used to make predictions directly on all the
  prefs: []
  type: TYPE_NORMAL
- en: target columns.
  prefs: []
  type: TYPE_NORMAL
- en: The majority of the models, however, don’t have integrated support for multioutput
    tasks. ATOM makes it still possible to use them, wrapping the estimators in a
    meta-estimator capable of handling multiple target columns. This is done automatically,
    without any additional code nor prior knowledge from the user.
  prefs: []
  type: TYPE_NORMAL
- en: 'For multilabel tasks, the default meta-estimator used is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[ClassifierChain](https://scikit-learn.org/stable/modules/generated/sklearn.multioutput.ClassifierChain.html#sklearn.multioutput.ClassifierChain)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For multiclass-multioutput and multioutput regression tasks, the
  prefs: []
  type: TYPE_NORMAL
- en: 'default meta-estimators are respectively:'
  prefs: []
  type: TYPE_NORMAL
- en: '[MultioutputClassifier](https://scikit-learn.org/stable/modules/generated/sklearn.multioutput.MultiOutputClassifier.html#sklearn.multioutput.MultiOutputClassifier)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[MultioutputRegressor](https://scikit-learn.org/stable/modules/generated/sklearn.multioutput.MultiOutputRegressor.html#sklearn.multioutput.MultiOutputRegressor)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `multioutput` attribute contains the meta-estimator object. Change the
  prefs: []
  type: TYPE_NORMAL
- en: attribute’s value to use a custom object. Both classes or instances where the
  prefs: []
  type: TYPE_NORMAL
- en: 'underlying estimator is the first parameter are accepted. For example, to change
    the meta-estimator for regression models use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'To check which models have native support for multioutput datasets and which
    don’t, use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/fea209a08b54666c72874ae0a8d8bc55.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, you can train the models normally.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: And inspect the estimators.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/846e5e36b68b1deea8a8369dbe73c3ac.png)'
  prefs: []
  type: TYPE_IMG
- en: Some models, such as the [MultiLayer Perceptron](https://tvdboom.github.io/ATOM/latest/API/models/mlp/),
    have native support for multilabel, but not for multiclass-multioutput tasks.
    For that reason, their `native_multioutput` tag is False, but those models don't
    necessarily need a multioutput meta-estimator if you have a multilabel task. In
    such cases, use *atom's* `multioutput` attribute to tell atom not to use any multioutput
    wrapper.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/bd1b477e3db5d9cd05bf7da82849e8e3.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Note:** sklearn metrics do not support multiclass-multioutput classification
    tasks. ATOM calculates the metric for such tasks taking the mean of the score
    over every target column.'
  prefs: []
  type: TYPE_NORMAL
- en: Results analysis
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Models with multioutput estimators can be called normally for analysis methods
    and plots. Use the `target` parameter in plots to specify which target column
    to use.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: When the target parameter also specifies the class, use format (column, class).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We have shown how easy it is to use the ATOM package in order to quickly explore
    machine learning pipelines on multioutput datasets. Click [here](https://tvdboom.github.io/ATOM/latest/examples/multioutput_regression/)
    to see a full example for a multioutput regression task, and [here](https://tvdboom.github.io/ATOM/latest/examples/multilabel_classification/)
    for a multilabel classification example.
  prefs: []
  type: TYPE_NORMAL
- en: For further information about ATOM, have a look at the package’s [documentation](https://tvdboom.github.io/ATOM/).
    For bugs or feature requests, don’t hesitate to open an issue on [GitHub](https://github.com/tvdboom/ATOM)
    or send me an email.
  prefs: []
  type: TYPE_NORMAL
- en: 'Related stories:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://towardsdatascience.com/atom-a-python-package-for-fast-exploration-of-machine-learning-pipelines-653956a16e7b](/atom-a-python-package-for-fast-exploration-of-machine-learning-pipelines-653956a16e7b)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://towardsdatascience.com/how-to-test-multiple-machine-learning-pipelines-with-just-a-few-lines-of-python-1a16cb4686d](/how-to-test-multiple-machine-learning-pipelines-with-just-a-few-lines-of-python-1a16cb4686d)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://towardsdatascience.com/from-raw-data-to-web-app-deployment-with-atom-and-streamlit-d8df381aa19f](/from-raw-data-to-web-app-deployment-with-atom-and-streamlit-d8df381aa19f)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://towardsdatascience.com/exploration-of-deep-learning-pipelines-made-easy-e1cf649892bc](/exploration-of-deep-learning-pipelines-made-easy-e1cf649892bc)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://towardsdatascience.com/deep-feature-synthesis-vs-genetic-feature-generation-6ba4d05a6ca5](/deep-feature-synthesis-vs-genetic-feature-generation-6ba4d05a6ca5)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://towardsdatascience.com/from-raw-text-to-model-prediction-in-under-30-lines-of-python-32133d853407](/from-raw-text-to-model-prediction-in-under-30-lines-of-python-32133d853407)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://towardsdatascience.com/how-to-make-40-interactive-plots-to-analyze-your-machine-learning-pipeline-ee718afd7bc2](/how-to-make-40-interactive-plots-to-analyze-your-machine-learning-pipeline-ee718afd7bc2)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'References:'
  prefs: []
  type: TYPE_NORMAL
- en: All plots in this story are created by the author.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
