- en: Practical MLOps using Azure ML
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Azure ML 实现实用的 MLOps
- en: 原文：[https://towardsdatascience.com/practical-mlops-using-azure-ml-c6a3cb201d2b?source=collection_archive---------6-----------------------#2023-02-20](https://towardsdatascience.com/practical-mlops-using-azure-ml-c6a3cb201d2b?source=collection_archive---------6-----------------------#2023-02-20)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/practical-mlops-using-azure-ml-c6a3cb201d2b?source=collection_archive---------6-----------------------#2023-02-20](https://towardsdatascience.com/practical-mlops-using-azure-ml-c6a3cb201d2b?source=collection_archive---------6-----------------------#2023-02-20)
- en: '![](../Images/d17a49bdf391f5a3923daaeab5cddd78.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d17a49bdf391f5a3923daaeab5cddd78.png)'
- en: Photo by [Luca Bravo](https://unsplash.com/@lucabravo?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Luca Bravo](https://unsplash.com/@lucabravo?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Automating ML pipelines using Azure ML CLI(v2) & github actions
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Azure ML CLI(v2) 和 github actions 自动化 ML 流程
- en: '[](https://shiftcoder-95.medium.com/?source=post_page-----c6a3cb201d2b--------------------------------)[![Anupam
    Misra](../Images/0190c11f017cabb390797ed1ae524512.png)](https://shiftcoder-95.medium.com/?source=post_page-----c6a3cb201d2b--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c6a3cb201d2b--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c6a3cb201d2b--------------------------------)
    [Anupam Misra](https://shiftcoder-95.medium.com/?source=post_page-----c6a3cb201d2b--------------------------------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://shiftcoder-95.medium.com/?source=post_page-----c6a3cb201d2b--------------------------------)[![Anupam
    Misra](../Images/0190c11f017cabb390797ed1ae524512.png)](https://shiftcoder-95.medium.com/?source=post_page-----c6a3cb201d2b--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c6a3cb201d2b--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c6a3cb201d2b--------------------------------)
    [Anupam Misra](https://shiftcoder-95.medium.com/?source=post_page-----c6a3cb201d2b--------------------------------)'
- en: ·
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F2ebdcaf49014&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpractical-mlops-using-azure-ml-c6a3cb201d2b&user=Anupam+Misra&userId=2ebdcaf49014&source=post_page-2ebdcaf49014----c6a3cb201d2b---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c6a3cb201d2b--------------------------------)
    ·10 min read·Feb 20, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc6a3cb201d2b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpractical-mlops-using-azure-ml-c6a3cb201d2b&user=Anupam+Misra&userId=2ebdcaf49014&source=-----c6a3cb201d2b---------------------clap_footer-----------)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F2ebdcaf49014&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpractical-mlops-using-azure-ml-c6a3cb201d2b&user=Anupam+Misra&userId=2ebdcaf49014&source=post_page-2ebdcaf49014----c6a3cb201d2b---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c6a3cb201d2b--------------------------------)
    · 10 分钟阅读 · 2023年2月20日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc6a3cb201d2b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpractical-mlops-using-azure-ml-c6a3cb201d2b&user=Anupam+Misra&userId=2ebdcaf49014&source=-----c6a3cb201d2b---------------------clap_footer-----------)'
- en: --
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc6a3cb201d2b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpractical-mlops-using-azure-ml-c6a3cb201d2b&source=-----c6a3cb201d2b---------------------bookmark_footer-----------)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc6a3cb201d2b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpractical-mlops-using-azure-ml-c6a3cb201d2b&source=-----c6a3cb201d2b---------------------bookmark_footer-----------)'
- en: Introduction
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: Machine learning models affect our interaction with the world as much as software
    products we use on a regular basis. Just like DevOps is required for seamless
    CI/CD, MLOps has become imperative for continuously building up-to-date models
    and utilising their predictions.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习模型像我们日常使用的软件产品一样，影响着我们与世界的互动。正如 DevOps 对于无缝的 CI/CD 是必要的，MLOps 也变得至关重要，以不断构建最新的模型并利用其预测结果。
- en: In this article, we are going to build end-end MLOps using Azure ML CLI(v2)
    and Github Actions. This article hopes to serve as the starting point for your
    next MLOps project!
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将使用 Azure ML CLI(v2) 和 Github Actions 构建端到端的 MLOps。本文希望能成为你下一个 MLOps
    项目的起点！
- en: 'This article will help you simulate this scenario:'
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本文将帮助你模拟以下场景：
- en: Data drifts frequently and is available through an API. Hence there is a need
    to retrain the model and re-deploy it to the online-endpoint at a defined frequency.
  id: totrans-14
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 数据经常发生漂移并通过 API 提供。因此需要在规定的频率下重新训练模型并重新部署到在线端点。
- en: 'This is achieved via weekly cron jobs through the following steps :'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 通过以下步骤实现每周的定时任务：
- en: Download the data using an API and register it as an Azure dataset.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 API 下载数据并将其注册为 Azure 数据集。
- en: Compute management and triggering model training jobs in Azure ML Studio.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算管理及触发 Azure ML Studio 中的模型训练任务。
- en: Register the model created in the latest job.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注册在最新任务中创建的模型。
- en: Deploy the new model to an online endpoint.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将新模型部署到在线端点。
- en: 'There are two options to automate your ML pipelines in Azure ML:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Azure ML 中自动化 ML 流水线有两个选项：
- en: 1\. Azure DevOps
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. Azure DevOps
- en: 2\. Github actions
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. Github Actions
- en: You can read about them [here](https://medium.com/objectsharp/azure-pipelines-vs-github-actions-key-differences-45390ab132ee).
    I chose GitHub Actions for its ease of use.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[这里](https://medium.com/objectsharp/azure-pipelines-vs-github-actions-key-differences-45390ab132ee)阅读相关内容。我选择了
    GitHub Actions 因为它的使用方便。
- en: A quick recap about MLOps
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于 MLOps 的快速回顾
- en: 'The need for MLOps and the steps to achieve it:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: MLOps 的需求及实现步骤：
- en: 'Quality control via consistency and change tracking:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过一致性和变更跟踪进行质量控制：
- en: a. Initial setup for entire project — IDE, workspace, permissions
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 整个项目的初始设置 — IDE、工作区、权限
- en: b. Environment versioning
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 环境版本控制
- en: c. Data versioning
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 数据版本控制
- en: d. Code versioning
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. 代码版本控制
- en: e. Versioning of other components
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: e. 其他组件的版本控制
- en: 'Fast experimentation with models:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 模型的快速实验：
- en: a. Tracking model hyperparameters
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 跟踪模型超参数
- en: b. Tracking model metrics, bias, fairness and explainability on different slices
    of data
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 跟踪不同数据切片上的模型指标、偏差、公平性和可解释性
- en: c. Maintaining track of links between changing parts of the ML pipeline
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 维护 ML 流水线中变更部分之间的链接
- en: 'Seamless model deployment and comprehensive model monitoring:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 无缝的模型部署和全面的模型监控：
- en: a. Fast model deployment into production environment
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 快速将模型部署到生产环境
- en: b. Staged rollout, blue-green or other deployment strategy
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 分阶段推出、蓝绿或其他部署策略
- en: c. Tracking model efficacy to trigger retraining
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 跟踪模型效果以触发重新训练
- en: d. Tracking data drift to trigger retraining
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. 跟踪数据漂移以触发重新训练
- en: Scope
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 范围
- en: 'I have structured the entire ML project into three different pipelines to achieve
    the aforementioned MLOps goals:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我将整个 ML 项目结构化为三个不同的流水线，以实现上述 MLOps 目标：
- en: Build pipeline
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建流水线
- en: Training pipeline
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 训练流水线
- en: Deployment pipeline
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 部署流水线
- en: After discussing about these pipelines, we will look into the code implementation.
  id: totrans-46
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在讨论这些流水线后，我们将深入探讨代码实现。
- en: 1\. Build pipeline
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 构建流水线
- en: 1.1 Initial setup
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.1 初始设置
- en: '**Step 1: Setting up Azure ML Studio:**'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤 1：设置 Azure ML Studio：**'
- en: 'We will be doing our data versioning, model training and deployment using MS
    Azure. Please follow the below steps to create your Azure ML workspace:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 MS Azure 进行数据版本控制、模型训练和部署。请按照以下步骤创建你的 Azure ML 工作区：
- en: Login into your Azure account or get a free Azure subscription from [here](https://azure.microsoft.com/en-in/free/search/?ef_id=Cj0KCQiAorKfBhC0ARIsAHDzsluF2Bwn4cqowJoVMFYFEUDP8Q3p-ZbXASpPhkARnhfUKPErWNlomJ0aAv-KEALw_wcB%3AG%3As&OCID=AIDcmmf1elj9v5_SEM_Cj0KCQiAorKfBhC0ARIsAHDzsluF2Bwn4cqowJoVMFYFEUDP8Q3p-ZbXASpPhkARnhfUKPErWNlomJ0aAv-KEALw_wcB%3AG%3As).
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到你的 Azure 帐户，或从[这里](https://azure.microsoft.com/en-in/free/search/?ef_id=Cj0KCQiAorKfBhC0ARIsAHDzsluF2Bwn4cqowJoVMFYFEUDP8Q3p-ZbXASpPhkARnhfUKPErWNlomJ0aAv-KEALw_wcB%3AG%3As&OCID=AIDcmmf1elj9v5_SEM_Cj0KCQiAorKfBhC0ARIsAHDzsluF2Bwn4cqowJoVMFYFEUDP8Q3p-ZbXASpPhkARnhfUKPErWNlomJ0aAv-KEALw_wcB%3AG%3As)获取免费的
    Azure 订阅。
- en: Create a Resource group ([ref](https://learn.microsoft.com/en-us/azure/azure-resource-manager/management/manage-resource-groups-portal)).
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建资源组（[参考](https://learn.microsoft.com/en-us/azure/azure-resource-manager/management/manage-resource-groups-portal)）。
- en: Create a ML workspace - Navigate to [ml.azure.com](http://ml.azure.com) and
    click on *Create Workspace* and follow the on screen instructions.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 ML 工作区 - 访问 [ml.azure.com](http://ml.azure.com)，点击 *创建工作区* 并按照屏幕上的指示操作。
- en: 'When your Azure ML workspace is created, you should be able to see a screen
    like this:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的 Azure ML 工作区创建完成后，你应该能看到如下界面：
- en: '![](../Images/6392191e004d7a69a14a455dfa06e963.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6392191e004d7a69a14a455dfa06e963.png)'
- en: Azure ML workspace via ml.azure.com
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 ml.azure.com 访问 Azure ML 工作区
- en: You would not be able to see these jobs, don’t worry!
  id: totrans-57
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你暂时无法看到这些任务，不用担心！
- en: '**Step 2: Linking GitHub Actions with Azure ML Studio:**'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤 2：将 GitHub Actions 与 Azure ML Studio 链接：**'
- en: Initialise a repository in GitHub and go to Settings> Secrets and variables>
    Actions>New repository secret
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在 GitHub 中初始化一个仓库并转到设置 > 秘密和变量 > Actions > 新建仓库秘密
- en: Open a new browser tab to create a Service principal for accessing your ML workspace.([ref](https://learn.microsoft.com/en-us/azure/machine-learning/how-to-setup-authentication?tabs=sdk#configure-a-service-principal))
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个新的浏览器标签页以创建一个服务主体以访问你的 ML 工作区。([ref](https://learn.microsoft.com/en-us/azure/machine-learning/how-to-setup-authentication?tabs=sdk#configure-a-service-principal))
- en: Save the generated JSON as AZURE_CREDENTIALS in your repository secrets.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 将生成的 JSON 保存为 AZURE_CREDENTIALS 并存储在你的仓库秘密中。
- en: '![](../Images/37f1b9f485e8ae45987d542cc91275e1.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/37f1b9f485e8ae45987d542cc91275e1.png)'
- en: GitHub actions secrets in the repository
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 仓库中的 GitHub Actions 密钥
- en: '**Step 3: Generating a personal access token(PAT)**'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**第 3 步：生成个人访问令牌 (PAT)**'
- en: Using the normal GITHUB_TOKEN, you cannot edit workflow files(files in .github/workflows),
    you would need to add a PAT. You would need to edit workflow files in order to
    version the training runs, model versions etc. automatically.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 使用普通的 GITHUB_TOKEN，你无法编辑工作流文件（.github/workflows 中的文件），你需要添加 PAT。你需要编辑工作流文件以自动化版本控制训练运行、模型版本等。
- en: In GitHub, generate the PAT from Settings>Developer settings>Personal access
    tokens.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在 GitHub 中，从设置 > 开发者设置 > 个人访问令牌 生成 PAT。
- en: '![](../Images/197d96360ceb08cba34ef221581e0f36.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/197d96360ceb08cba34ef221581e0f36.png)'
- en: Personal access token for editing workflow
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 用于编辑工作流的个人访问令牌
- en: 'Save the PAT to your repository secrets with below repository permissions:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 将 PAT 保存到你的仓库秘密中，并设置以下仓库权限：
- en: '![](../Images/1e2f3d02c89776335ef0750c36dc2165.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1e2f3d02c89776335ef0750c36dc2165.png)'
- en: Repository permissions for PAT
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: PAT 的仓库权限
- en: 1.2 Environment versioning
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.2 环境版本控制
- en: 'There are two environments needed:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 需要两个环境：
- en: Training environment — For model training dependencies
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 训练环境 — 用于模型训练依赖
- en: Deployment environment — For model serving dependencies
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 部署环境 — 用于模型服务依赖
- en: You could also keep them as the same environment for smaller projects.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 对于较小的项目，你也可以将它们保存在相同的环境中。
- en: 1.3 Data versioning
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.3 数据版本控制
- en: In our example, data is downloaded every week and is registered in Azure datastore
    as a dataset. Data versioning is important to track lineage of models. In our
    example, it is done by *jobs/data_download.save_to_data_upload(…)*
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的例子中，数据每周下载一次，并在 Azure 数据存储中注册为数据集。数据版本控制对于跟踪模型的血统非常重要。在我们的例子中，这是通过*jobs/data_download.save_to_data_upload(…)*
- en: 1.4 Code versioning
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.4 代码版本控制
- en: Code versioning is done through GitHub.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 代码版本控制通过 GitHub 完成。
- en: 1.5 Versioning of other components
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.5 其他组件的版本控制
- en: You would also need to version *runs, models* and other components. To automate
    their naming, you would have to edit them in a previous cron job. In our example,
    it is done by *jobs/update_training_yamls.py.*
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 你还需要版本控制 *runs, models* 和其他组件。为了自动化它们的命名，你需要在之前的 cron 作业中编辑它们。在我们的例子中，这是通过 *jobs/update_training_yamls.py*
    完成的。
- en: 1.6 Automated testing
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.6 自动化测试
- en: To automatically test the python files we can use pytests and also track code
    coverage.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 为了自动测试 Python 文件，我们可以使用 pytest 并跟踪代码覆盖率。
- en: 2\. Training pipeline
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2. 训练管道
- en: 2.1 Tracking model hyperparameters
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.1 模型超参数跟踪
- en: 'In our example, we have used [mlflow for pytorch](https://mlflow.org/docs/latest/python_api/mlflow.pytorch.html)
    to log the following details:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的例子中，我们使用了 [mlflow for pytorch](https://mlflow.org/docs/latest/python_api/mlflow.pytorch.html)
    来记录以下详细信息：
- en: 'Metrics:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 指标：
- en: '![](../Images/9f0df5264e9bdee328897fbd9f7bccf8.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9f0df5264e9bdee328897fbd9f7bccf8.png)'
- en: Metrics captured during each training job
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 每次训练任务中捕获的指标
- en: 'Runtime model parameters:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 运行时模型参数：
- en: '![](../Images/fd264a1c2d1677d117e8372deea0d1db.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fd264a1c2d1677d117e8372deea0d1db.png)'
- en: Parameters versioned during each run
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 每次运行时版本控制的参数
- en: 2.2 Tracking model metrics, bias, fairness and explainability on different slices
    of data
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.2 在不同数据切片上跟踪模型指标、偏差、公平性和解释性
- en: Since I have used stock data to simulate constantly changing data, I have skipped
    this part. However, in most ML use cases, these are very important metrics to
    judge the model performance.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我使用了股票数据来模拟不断变化的数据，我跳过了这部分。然而，在大多数机器学习用例中，这些是判断模型性能的重要指标。
- en: 2.3 Maintaining links between changing parts of the ML pipeline
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.3 维护机器学习管道中变化部分之间的链接
- en: Azure ML studio automatically links everything.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: Azure ML studio 自动链接所有内容。
- en: 'Example lineage tracking during model training:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 训练模型时的示例血统跟踪：
- en: '![](../Images/d0de23fe0891284a2a28c6e9964ebb11.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d0de23fe0891284a2a28c6e9964ebb11.png)'
- en: Training job snapshot
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 训练任务快照
- en: Similarly data and models are also automatically versioned and their lineage
    is tracked.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，数据和模型也会自动版本化并跟踪它们的历史。
- en: 3\. Deployment pipeline
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 部署流水线
- en: 3.1 Fast model deployment into production
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.1 快速模型部署到生产环境
- en: Initially creating the end-point and deploying the first model takes some time.
    After that, newly registered models can be used to update endpoints in much lesser
    time.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 最初创建端点并部署第一个模型需要一些时间。之后，新注册的模型可以在更短的时间内用于更新端点。
- en: 3.2 Staged rollout, blue-green or different deployment strategy
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.2 分阶段推出、蓝绿部署或不同的部署策略
- en: Different deployment strategies can be used. In our case we override the previously
    deployed model. However through Azure ML, blue-green deployment can be very easily
    achieved during deployment.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用不同的部署策略。在我们的案例中，我们覆盖了之前部署的模型。然而，通过 Azure ML，蓝绿部署在部署过程中可以非常轻松地实现。
- en: 3.3 Tracking model efficacy to trigger retraining
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.3 追踪模型效果以触发重新训练
- en: Post model deployment, we need to track model performance against known labels.
    This will help us identify in which data strata our model performs poorly. This
    will help us identify whether we need to collect more data or undertake other
    measures during next model re-training.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 模型部署后，我们需要跟踪模型对已知标签的性能。这将帮助我们识别模型在哪些数据层次上表现不佳。这将帮助我们确定是否需要收集更多数据或在下一次模型重新训练期间采取其他措施。
- en: 3.4 Tracking data drift to trigger retraining
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.4 追踪数据漂移以触发重新训练
- en: 'There are two schools of thought to model re-training:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 对于模型重新训练，有两种思路：
- en: 1\. Schedule based
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 基于计划
- en: 2\. Drift based
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 基于漂移
- en: There are advantages and disadvantages to both options. In this example I follow
    schedule based model re-training. Hence I have not implemented any data drift
    monitors. However Azure has tools to monitor data drift.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 两种选项各有优缺点。在这个例子中，我遵循基于计划的模型重新训练。因此，我没有实现任何数据漂移监控。然而，Azure 提供了监控数据漂移的工具。
- en: Code
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码
- en: As engineers, it becomes much clearer when we code something from ground up.
    So here you go!
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 作为工程师，从头开始编写代码时会变得更加清晰。所以，尽情使用吧！
- en: '**Code repository:** [**coderkol95/MLOps_stock_prediction**](https://github.com/coderkol95/MLOps_stock_prediction)'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码库：** [**coderkol95/MLOps_stock_prediction**](https://github.com/coderkol95/MLOps_stock_prediction)'
- en: 'Project folder structure:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 项目文件夹结构：
- en: '![](../Images/b16aca6ac49230e3ab74f5503205421c.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b16aca6ac49230e3ab74f5503205421c.png)'
- en: 'Brief information about the folders and files:'
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文件夹和文件的简要信息：
- en: '**.github/workflows/**'
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**.github/workflows/**'
- en: The yml files for pipeline control are placed here. These trigger data download/upload,
    model training, registration and deployment via cron jobs.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 控制流水线的 yml 文件放在这里。这些文件通过 cron 作业触发数据下载/上传、模型训练、注册和部署。
- en: 'data_pipeline.yml: Frequency - Every Monday at 1:01 am'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: data_pipeline.yml：频率 - 每周一凌晨 1:01
- en: '- download ticker data and update yml file'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '- 下载股票数据并更新 yml 文件'
- en: Data download via API to a csv file and update the data-upload.yml file with
    dataset tags, version and path.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 API 下载数据到 csv 文件，并更新 data-upload.yml 文件，添加数据集标签、版本和路径。
- en: '- edit yaml files'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '- 编辑 yaml 文件'
- en: Update version of other components in yml files, like job_name, model version
    etc. which will be used during the run
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 更新 yml 文件中其他组件的版本，如 job_name、模型版本等，这些将在运行期间使用。
- en: '- push files to github'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '- 将文件推送到 github'
- en: Push the updated yml files and downloaded csv to repository
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 将更新的 yml 文件和下载的 csv 文件推送到代码库
- en: -upload to azure
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '- 上传到 azure'
- en: Dataset registration in Azure datastore
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Azure 数据存储中注册数据集
- en: '[PRE0]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'model_pipeline.yml: Frequency - Every Monday at 2:01 am'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: model_pipeline.yml：频率 - 每周一凌晨 2:01
- en: '* train-job'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '* 训练作业'
- en: Compute creation and model training on the latest dataset.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在最新的数据集上计算创建和模型训练。
- en: The dataset preparation and model training is done via pytorch lightning. All
    the logging is done via MLFlow. For code details, please refer to my [repository](https://github.com/coderkol95/MLOps_stock_prediction).
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集准备和模型训练通过 pytorch lightning 完成。所有日志记录通过 MLFlow 进行。有关代码的详细信息，请参阅我的 [代码库](https://github.com/coderkol95/MLOps_stock_prediction)。
- en: '* register-job'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '* 注册作业'
- en: Registration of the model from the latest run.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 从最新运行中注册模型。
- en: '* delete-compute'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '* 删除计算'
- en: Compute deletion after training has completed.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 训练完成后计算删除。
- en: '[PRE1]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'deployment_pipeline.yml: Frequency - Every Monday at 3:01 am'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: deployment_pipeline.yml：频率 - 每周一凌晨 3:01
- en: '* Endpoint & deployment creation(if its the first time)'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '* 端点和部署创建（如果是第一次）'
- en: '* Updating online deployment with latest model (shown below)'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '* 使用最新模型更新在线部署（如下所示）'
- en: '[PRE2]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: I have kept the cron jobs’ execution 1 hour apart as it completes within 1 hour,
    you may keep a longer duration if required. You may also set flags to capture
    job completion.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 我将 cron 作业的执行时间间隔设置为 1 小时，因为它在 1 小时内完成，你可以根据需要设置更长的间隔。你也可以设置标志来捕捉作业完成状态。
- en: '**cli/**'
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**cli/**'
- en: setup.sh:Configures the VM on which the code runs, for Azure ML
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 'setup.sh: 配置运行代码的虚拟机，适用于 Azure ML。'
- en: '[PRE3]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**jobs/**'
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**jobs/**'
- en: Azure specific YAML files are kept here along with python scripts for individual
    pipeline step execution.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 这里保存了特定于 Azure 的 YAML 文件以及用于单个管道步骤执行的 Python 脚本。
- en: '**data_download.py** get_ticker_data(…)'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '**data_download.py** get_ticker_data(…)'
- en: Download the data via API call and save it to a csv file. I have downloaded
    the data using Yahoo Finance API.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 API 调用下载数据并保存到 CSV 文件。我使用 Yahoo Finance API 下载了数据。
- en: get_dataset_tags(…)
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: get_dataset_tags(…)
- en: Versioning the data and adding tags.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 版本控制数据并添加标签。
- en: '![](../Images/287918fd613e7b674d00d7e943155647.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/287918fd613e7b674d00d7e943155647.png)'
- en: Dataset tags generated before uploading it to Azure
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在上传到 Azure 之前生成的数据集标签。
- en: save_to_data_upload(…)
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: save_to_data_upload(…)
- en: Write out the dataset specifications to the Azure yml file for uploading to
    Azure datastore.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 将数据集规格写入 Azure yml 文件，以便上传到 Azure 数据存储。
- en: For the code, you may refer to my [repository](https://github.com/coderkol95/MLOps_stock_prediction).
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 对于代码，你可以参考我的[代码库](https://github.com/coderkol95/MLOps_stock_prediction)。
- en: '**data_upload.yml**'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '**data_upload.yml**'
- en: This yml file is updated by *jobs/data_download.save_to_data_upload(…)* This
    yml file uploads the dataset in Azure.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 yml 文件由*jobs/data_download.save_to_data_upload(…)* 更新。这个 yml 文件将数据集上传到 Azure。
- en: '[PRE4]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**deploy.yml**'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '**deploy.yml**'
- en: This yml file is updated by jobs/*update_training_yamls.py* before each cron
    job.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 yml 文件在每次 cron 作业前由*jobs/update_training_yamls.py* 更新。
- en: '[PRE5]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**deployment.py**'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '**deployment.py**'
- en: The script used at the endpoint to generate online predictions. For the code,
    you may refer to my [repository](https://github.com/coderkol95/MLOps_stock_prediction).
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在端点使用的脚本来生成在线预测。有关代码，你可以参考我的[代码库](https://github.com/coderkol95/MLOps_stock_prediction)。
- en: init()
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: init()
- en: Initializes the model and the datamodule used by pytorch lightning.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 初始化模型和 PyTorch Lightning 使用的数据模块。
- en: run()
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: run()
- en: Used to serve online predictions from the model.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 用于提供来自模型的在线预测。
- en: '**train.py**'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '**train.py**'
- en: Model training scipt using pytorch lightning and mlflow. For the code you may
    refer to my [repository](https://github.com/coderkol95/MLOps_stock_prediction).
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 PyTorch Lightning 和 MLflow 的模型训练脚本。有关代码，你可以参考我的[代码库](https://github.com/coderkol95/MLOps_stock_prediction)。
- en: '**train.yml** This yml file is updated by *jobs/update_training_yamls.py* before
    each cron job.'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '**train.yml** 这个 yml 文件在每次 cron 作业前由*jobs/update_training_yamls.py* 更新。'
- en: '[PRE6]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**update_training_yamls.py**'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '**update_training_yamls.py**'
- en: Updates several components’ version which need to be updated before every run,
    like run ID, model version to be registered, model to be deployed. For the code
    you may refer to my [repository](https://github.com/coderkol95/MLOps_stock_prediction).
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 更新在每次运行前需要更新的多个组件的版本，如运行 ID、待注册的模型版本、待部署的模型。有关代码，你可以参考我的[代码库](https://github.com/coderkol95/MLOps_stock_prediction)。
- en: Conclusion
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: I hope you now have an idea on how to implement automated end-end MLOps project
    using MS Azure. For detailed code implementation you may refer to my [repository](https://github.com/coderkol95/MLOps_stock_prediction).
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望你现在对如何使用 MS Azure 实现自动化端到端的 MLOps 项目有了了解。有关详细的代码实现，你可以参考我的[代码库](https://github.com/coderkol95/MLOps_stock_prediction)。
