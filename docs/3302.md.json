["```py\n# contactid\ncustom_expectation_suite.add_expectation(\nExpectationConfiguration(\nexpectation_type = \"expect_column_values_to_not_be_null\", \nkwargs = {'column':'contactid'}, \nmeta = {'reason':'contactid is the unique ID for D365 contacts, \nthis should not be null'})\n)\n```", "```py\n%sql\nDELETE FROM data WHERE email = 'customer@exampledomain.com';\nVACUUM data;\n```", "```py\n# count nulls\ndf_nulls_counted = df.withColumn('numNulls', sum(df[col].isNull().cast('int') for col in df.columns)*-1)\n\n# flag most complete\ndf_most_complete = df_nulls_counted.withColumn(\"row_number\",f.row_number()\\\n.over(Window.partitionBy(df_nulls_counted.cluster_id)\\\n.orderBy(df_nulls_counted.numNulls.desc()))).cache()\\\n.withColumn('most_complete', f.when(f.col(\"row_number\")==1, 1).otherwise(0)).drop(\"row_number\")\n\n# flag most recent\ndf_most_complete_most_recent = df_most_complete.withColumn(\"row_number\",f.row_number()\\\n.over(Window.partitionBy(df_most_complete.cluster_id)\\\n.orderBy(df_most_complete.createdon_timestamp.desc()))).cache()\\\n.withColumn('most_recent', f.when(f.col(\"row_number\")==1, 1).otherwise(0)).drop(\"row_number\")\n\n# order by number of nulls\ndf_golden = df_most_complete_most_recent.withColumn(\"row_number\",f.row_number()\\\n.over(Window.partitionBy(df_most_complete_most_recent.cluster_id)\\\n.orderBy(*[f.desc(c) for c in [\"numNulls\",\"createdon_timestamp\"]]))).cache()\\\n.withColumn('golden_record', f.when(f.col(\"row_number\")==1, 1).otherwise(0)).drop(\"row_number\")\n\n# add splink duplicate flag\ndf_golden = df_golden.select('*', f.count('cluster_id')\\\n.over(Window.partitionBy('cluster_id')).alias('dupeCount'))\\\n.withColumn('splink_duplicate', f.when(f.col('dupeCount') > 1, 1).otherwise(0))\n```"]