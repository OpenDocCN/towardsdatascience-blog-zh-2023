- en: Python Assertions, or Checking If a Cat Is a Dog
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/python-assertions-or-checking-if-a-cat-is-a-dog-ce11c55d143?source=collection_archive---------6-----------------------#2023-03-02](https://towardsdatascience.com/python-assertions-or-checking-if-a-cat-is-a-dog-ce11c55d143?source=collection_archive---------6-----------------------#2023-03-02)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: PYTHON PROGRAMMING
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Learn the rules of using assertions in Python — and those of not using them
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@nyggus?source=post_page-----ce11c55d143--------------------------------)[![Marcin
    Kozak](../Images/d7faf62e48ed81dab5d8ad92819fff54.png)](https://medium.com/@nyggus?source=post_page-----ce11c55d143--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ce11c55d143--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ce11c55d143--------------------------------)
    [Marcin Kozak](https://medium.com/@nyggus?source=post_page-----ce11c55d143--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4762f0cff9b2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-assertions-or-checking-if-a-cat-is-a-dog-ce11c55d143&user=Marcin+Kozak&userId=4762f0cff9b2&source=post_page-4762f0cff9b2----ce11c55d143---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ce11c55d143--------------------------------)
    ·13 min read·Mar 2, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fce11c55d143&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-assertions-or-checking-if-a-cat-is-a-dog-ce11c55d143&user=Marcin+Kozak&userId=4762f0cff9b2&source=-----ce11c55d143---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fce11c55d143&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-assertions-or-checking-if-a-cat-is-a-dog-ce11c55d143&source=-----ce11c55d143---------------------bookmark_footer-----------)![](../Images/84e60e7f48e20b9ca7e0acd560d557f3.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'A false assertion should stop you: something is wrong! Photo by [Jose Aragones](https://unsplash.com/@jodaarba?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)'
  prefs: []
  type: TYPE_NORMAL
- en: An assertion is a statement you can use to test an assumption about your program.
    This short definition is, on the one hand, clear. On the other hand, it’s far
    from explaining when you should use assertions.
  prefs: []
  type: TYPE_NORMAL
- en: The `assert` statement, which is the main assertion tool in Python, is strictly
    related to the built-in `__debug__` object. At some point of my Python learning,
    I was unaware of this object, and so I guess many data scientists and Python developers
    are not aware of it, either. After reading this article, you will know how to
    use `__debug__` and assertions — and how *not* to use them.
  prefs: []
  type: TYPE_NORMAL
- en: 'The main locations in which you will find assertions are tests. Whichever testing
    framework you use, it uses assertions. While `unittest` uses dedicated methods
    for assertions of specific types (like `.AssertTrue()`, `.AssertFalse()`, `.AssertEqual()`),
    `pytest` prefers the bare `assert` statement. Personally, I like the simplicity
    of the latter. If you want to assert that, say, `x` is 10, you can do it in this
    simple way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When you want to assert that `x` is an integer, you can do it as follows:'
  prefs: []
  type: TYPE_NORMAL
