- en: Python Assertions, or Checking If a Cat Is a Dog
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/python-assertions-or-checking-if-a-cat-is-a-dog-ce11c55d143?source=collection_archive---------6-----------------------#2023-03-02](https://towardsdatascience.com/python-assertions-or-checking-if-a-cat-is-a-dog-ce11c55d143?source=collection_archive---------6-----------------------#2023-03-02)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: PYTHON PROGRAMMING
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Learn the rules of using assertions in Python — and those of not using them
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@nyggus?source=post_page-----ce11c55d143--------------------------------)[![Marcin
    Kozak](../Images/d7faf62e48ed81dab5d8ad92819fff54.png)](https://medium.com/@nyggus?source=post_page-----ce11c55d143--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ce11c55d143--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ce11c55d143--------------------------------)
    [Marcin Kozak](https://medium.com/@nyggus?source=post_page-----ce11c55d143--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: ·
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4762f0cff9b2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-assertions-or-checking-if-a-cat-is-a-dog-ce11c55d143&user=Marcin+Kozak&userId=4762f0cff9b2&source=post_page-4762f0cff9b2----ce11c55d143---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ce11c55d143--------------------------------)
    ·13 min read·Mar 2, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fce11c55d143&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-assertions-or-checking-if-a-cat-is-a-dog-ce11c55d143&user=Marcin+Kozak&userId=4762f0cff9b2&source=-----ce11c55d143---------------------clap_footer-----------)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fce11c55d143&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-assertions-or-checking-if-a-cat-is-a-dog-ce11c55d143&source=-----ce11c55d143---------------------bookmark_footer-----------)![](../Images/84e60e7f48e20b9ca7e0acd560d557f3.png)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: 'A false assertion should stop you: something is wrong! Photo by [Jose Aragones](https://unsplash.com/@jodaarba?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: An assertion is a statement you can use to test an assumption about your program.
    This short definition is, on the one hand, clear. On the other hand, it’s far
    from explaining when you should use assertions.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: The `assert` statement, which is the main assertion tool in Python, is strictly
    related to the built-in `__debug__` object. At some point of my Python learning,
    I was unaware of this object, and so I guess many data scientists and Python developers
    are not aware of it, either. After reading this article, you will know how to
    use `__debug__` and assertions — and how *not* to use them.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '`assert` 语句是 Python 中主要的断言工具，它与内置的 `__debug__` 对象紧密相关。在我学习 Python 的某个阶段，我对这个对象并不知情，所以我猜许多数据科学家和
    Python 开发者也不知道它。在阅读完这篇文章后，你将知道如何使用 `__debug__` 和断言——以及如何 *不* 使用它们。'
- en: 'The main locations in which you will find assertions are tests. Whichever testing
    framework you use, it uses assertions. While `unittest` uses dedicated methods
    for assertions of specific types (like `.AssertTrue()`, `.AssertFalse()`, `.AssertEqual()`),
    `pytest` prefers the bare `assert` statement. Personally, I like the simplicity
    of the latter. If you want to assert that, say, `x` is 10, you can do it in this
    simple way:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 你会在测试中找到主要的断言位置。无论你使用什么测试框架，它都使用断言。虽然 `unittest` 使用专门的方法来进行特定类型的断言（如 `.AssertTrue()`、`.AssertFalse()`、`.AssertEqual()`），`pytest`
    更倾向于使用裸 `assert` 语句。我个人喜欢后者的简单性。如果你想断言 `x` 是 10，你可以用这种简单的方法来实现：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When you want to assert that `x` is an integer, you can do it as follows:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当你想断言 `x` 是一个整数时，可以如下进行：
