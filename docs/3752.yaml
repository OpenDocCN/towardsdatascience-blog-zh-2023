- en: 'AI in Logistics: Optimizing Container Fill Rate with Computer Vision'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/ai-in-logistics-optimizing-container-fill-rate-with-computer-vision-192b89eea242?source=collection_archive---------4-----------------------#2023-12-24](https://towardsdatascience.com/ai-in-logistics-optimizing-container-fill-rate-with-computer-vision-192b89eea242?source=collection_archive---------4-----------------------#2023-12-24)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Leveraging AI for smarter logistics and data-driven perspective on container
    utilization, maximizing efficiency and ROI
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://jonathanlawhh.medium.com/?source=post_page-----192b89eea242--------------------------------)[![Jonathan
    Law](../Images/e9f002ac15340f9d85cbb31de928ba4b.png)](https://jonathanlawhh.medium.com/?source=post_page-----192b89eea242--------------------------------)[](https://towardsdatascience.com/?source=post_page-----192b89eea242--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----192b89eea242--------------------------------)
    [Jonathan Law](https://jonathanlawhh.medium.com/?source=post_page-----192b89eea242--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F8d14b4b30a02&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fai-in-logistics-optimizing-container-fill-rate-with-computer-vision-192b89eea242&user=Jonathan+Law&userId=8d14b4b30a02&source=post_page-8d14b4b30a02----192b89eea242---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----192b89eea242--------------------------------)
    ·8 min read·Dec 24, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F192b89eea242&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fai-in-logistics-optimizing-container-fill-rate-with-computer-vision-192b89eea242&user=Jonathan+Law&userId=8d14b4b30a02&source=-----192b89eea242---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F192b89eea242&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fai-in-logistics-optimizing-container-fill-rate-with-computer-vision-192b89eea242&source=-----192b89eea242---------------------bookmark_footer-----------)![](../Images/b5865de2b801a60553df6fdf12f60ead.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Elevate](https://unsplash.com/@elevatebeer?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: One of the most glaring inefficiencies in logistics is the problem of empty
    space. Shipping containers, the lifeblood of global trade, often sail partially
    filled, wasting precious space and resources. This inefficiency translates to
    an increase in operating costs and damage to the sustainability of business and
    the environment.
  prefs: []
  type: TYPE_NORMAL
- en: '**Higher transportation costs**'
  prefs: []
  type: TYPE_NORMAL
- en: Carriers base their charges on the container size, not the amount of cargo it
    holds. This means that even a partially filled container costs the same as a fully
    packed one. To put it in perspective, A.P. Moller — Maersk, as reported by [Statista](https://www.statista.com/statistics/1314913/ap-moeller-maersk-container-freight-rates/)
    (2018–2023), saw a significant increase in freight rates during the Covid-19 pandemic.
    So, shipping partially filled containers essentially boils down to paying for
    empty space instead of valuable cargo, impacting your return on investment.
  prefs: []
  type: TYPE_NORMAL
- en: '**Increased carbon footprint across the supply chain**'
  prefs: []
  type: TYPE_NORMAL
- en: Splitting the same load which could be fit into a single container means double
    the transportation means.
  prefs: []
  type: TYPE_NORMAL
- en: '**Increased cargo goods damage**'
  prefs: []
  type: TYPE_NORMAL
- en: With more space, cargo isn’t as tightly packed. This allows boxes, pallets,
    and goods to move around more freely during transit, particularly due to vibrations
    and sudden stops.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9df918eaf448d0a4b7b496aa1950cd0c.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: To help identify this at its root before the container is sealed and shipped,
    a [container fill rate analyzer](https://github.com/jonathanlawhh/container-fill-rate-ai)
    that uses computer vision and artificial intelligence (AI) to understand the fill
    rate of each layer of pallet loaded into the container was developed. The fill
    rate of a shipping container is the percentage of available space occupied by
    cargo.
  prefs: []
  type: TYPE_NORMAL
- en: Using computer vision with the help of AI, the manual task of judging the fill
    rate of each image by a person could be eliminated and focus could be put into
    solving the actual issue.
  prefs: []
  type: TYPE_NORMAL
- en: '[Container Fill Rate AI Github code](https://github.com/jonathanlawhh/container-fill-rate-ai)'
  prefs: []
  type: TYPE_NORMAL
- en: Portal
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Approach](#1325)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SAM Automatic Mask Generation](#516f)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Prompt-based segmentation](#ed13)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Results](#476d)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Limitations](#fd50)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Closing](#bff5)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Approach
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are many approaches to this challenge. One could use a [Single Shot Detector](https://www.tensorflow.org/lite/examples/object_detection/overview)
    (SSD) or [You Only Look Once](https://pjreddie.com/darknet/yolo/) (YOLO) model
    to detect pallets, and then calculate the fill rate from there. Arcgic explains
    how SSD works in detail on its documentation page [here](https://developers.arcgis.com/python/guide/how-ssd-works/).
  prefs: []
  type: TYPE_NORMAL
- en: However, the idea was to test out the Meta [Segment Anything Model](https://github.com/facebookresearch/segment-anything/tree/main)
    (SAM) for this specific use case. In the Meta AI blog [here](https://ai.meta.com/blog/segment-anything-foundation-model-image-segmentation/),
    Meta shared a demo playground and a general overview of what SAM is capable of.
    This method is of course not domain-specific compared to training a model for
    this specific task, but generalized models has come a long way and it is worth
    testing the feasibility of such a task.
  prefs: []
  type: TYPE_NORMAL
- en: SAM is very versatile and comes with 2 detection methods, one being the automatic
    mask generation where it will segment everything on an image, and the other being
    prompt-based, where a coordinate on the image guides the segmentation. Meta shared
    a very detailed post on how SAM was built [here](https://ai.meta.com/blog/segment-anything-foundation-model-image-segmentation/).
  prefs: []
  type: TYPE_NORMAL
- en: SAM Automatic Mask Generation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: This method works great and it is easy to set up with just 2 lines of Python
    code, and everything will be segmented in the image without any instructions.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a703b3472b7e20b4c1e15703c4b13ddd.png)'
  prefs: []
  type: TYPE_IMG
- en: Foreign object segmented (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: However, the challenge comes when deciding if the odd size of pallets or foreign
    objects is part of the layer. In the above image, the airbag, some filling wrappers
    and cardboard are segmented, looking like a pallet.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5efda3aae966a96f34594d0dbf5a000d.png)'
  prefs: []
  type: TYPE_IMG
- en: Multiple segmentation (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: Occasionally, due to straps or loose wrappers, that gets segmented separately
    as well as shown above.
  prefs: []
  type: TYPE_NORMAL
- en: Prompt-based segmentation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Prompt-based segmentation requires hints to guide SAM in knowing where and how
    the focus area should be. Testing against the Automatic Mask Generation method,
    the prompt-based segmentation method is more viable for this project.
  prefs: []
  type: TYPE_NORMAL
- en: Below is the pseudocode and code snippet of the program execution flow.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: In this case, the coordinates of each label on the pallet can be passed into
    SAM to segment. Label extraction can be accomplished using computer vision techniques,
    such as defining the region of interest, color filtering, and contour. This process
    is business domain-specific, but generally, most labels are close to white.
  prefs: []
  type: TYPE_NORMAL
- en: The more accurate way to detect labels is by scanning the [Serial Shipping Container
    Code](https://www.gs1us.org/resources/data-hub-help-center/about-the-serial-shipping-container-code-sscc#:~:text=The%20Serial%20Shipping%20Container%20Code%20%28SSCC%29%20is%20an%2018%2D,units%20through%20the%20supply%20chain.)
    (SSCC) barcode, however, the image quality is insufficient to detect barcodes.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: A color filter between 150 to 255 is applied to the input image as shown in
    the Python code above, and the masks are extracted from the input image.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0e26515c33c999cb8801a3b1a5030dac.png)'
  prefs: []
  type: TYPE_IMG
- en: Output for res_final of selected labels (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: Prompting the labels position will SAM produce a more domain-focused result.
    Despite the labels extracted are not exact in size, an estimation is sufficient
    in allowing the prompt to segment the necessary.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/cc9422c6db0d3385aef4f675cf2c09d8.png)'
  prefs: []
  type: TYPE_IMG
- en: SAM output of another image (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: The segmented output is shown in the image above. A simple method was used to
    calculate the boundaries of the container, illustrated by the red box. The image
    is later than converted into black and white for the fill rate calculation.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/474cd0c8c49e2c772591a06906d4b13f.png)'
  prefs: []
  type: TYPE_IMG
- en: Output for fill_rate_used (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: The estimated fill rate would be the occupied colored space compared to the
    unoccupied space, which is black pixels in the container boundary. Few morphological
    operations can be applied such as dilation to fill up the gaps between boxes.
  prefs: []
  type: TYPE_NORMAL
- en: Results
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](../Images/c6eaeee3c008796cb5db9c0460a8513e.png)'
  prefs: []
  type: TYPE_IMG
- en: Sample result (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: With the current test cases in hand based on a personal environment, the results
    are close to reality. This significantly reduces the manual workload of analyzing
    each container fill rate, and a more consistent judgment of fill rate percentage
    is in place. Odd-shaped pallets are taken into account as the label will be detected,
    and unwanted segmentations are reduced due to the prompting of labels coordinate.
  prefs: []
  type: TYPE_NORMAL
- en: With this result for every layer loaded in a container, companies are now able
    to analyze the cause of partial loads and decide if there is a gap in the operational
    or planning process. Operationally, the decision to seal a container before shipping
    could also use the fill rate indicator as a factor.
  prefs: []
  type: TYPE_NORMAL
- en: By tracking results over time, a visible trend could be built to visualize if
    there are any improvements in the loading process.
  prefs: []
  type: TYPE_NORMAL
- en: Limitations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Pallets Layer**'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6003e476e6262c9a6f025de634283684.png)'
  prefs: []
  type: TYPE_IMG
- en: Layered detection (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: One of the limitations would be the pallets behind are occasionally segmented
    with the pallets in front if the colors match too closely. This causes a false
    calculation of the fill rate as the compartment is considered empty in reality.
    To overcome such limitations, using prompt-based segmentation may not be ideal,
    but a combination of automatic mask generation and label detection.
  prefs: []
  type: TYPE_NORMAL
- en: '**Foreign Object**'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ef6c5ae237d830e67b97d5046b977bcc.png)'
  prefs: []
  type: TYPE_IMG
- en: Airbags false detection (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: Another challenge comes with the segmentation of the airbags. In some cases,
    the airbags camouflaged with the pallets, causing the segmentation to be grouped.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/18c7ad37bb7276b8b517d2a545cbc211.png)'
  prefs: []
  type: TYPE_IMG
- en: Closest box detection (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: One option to overcome such limitation is to draw a box wherever possible, removing
    odd-shaped segmentations. However, this again brings another challenge for odd-shaped
    pallets, think of a pallet of non-foldable chairs.
  prefs: []
  type: TYPE_NORMAL
- en: Closing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With the use of computer vision, teams and co-workers in a company can make
    data-driven decisions without the hassle of manually analyzing individual images.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are many ways this project can be extended. Some of them includes:'
  prefs: []
  type: TYPE_NORMAL
- en: Loading trucks and even small vans (Last mile delivery)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Real-time estimation/End of shipment loading analyzing from video
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Translating fill rate into monetary value and potential cubic meter (m3) lost
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calculating the probability of cargo goods damage based on the fill rate threshold
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The biggest contributor to securing a good output is to have a consistent and
    standardized input image or stream. This will greatly improve the container height
    estimation and pallet placement detection. The optimal way would be to detect
    the SSCC barcodes and use the barcode position to prompt the segmentation, however,
    that would come at the cost of more expensive cameras.
  prefs: []
  type: TYPE_NORMAL
- en: Everyone is free to adapt the project code from [container-fill-rate-ai Github](https://github.com/jonathanlawhh/container-fill-rate-ai),
    with respect to [Meta SAM Apache License](https://github.com/facebookresearch/segment-anything/blob/main/LICENSE).
    This project is not perfect, and there is always many room for enhancement.
  prefs: []
  type: TYPE_NORMAL
- en: Extending this project for your own business/use case may require understanding
    the code and tweaking the parameters in the Python file. More importantly, domain
    knowledge of the business process is essential before jumping into the code. This
    would help you understand how you can adapt the code to the business.
  prefs: []
  type: TYPE_NORMAL
- en: 'To understand more about this project, feel free to reach out to:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Website: [https://jonathanlawhh.com/](https://jonathanlawhh.com/)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Email: [jon_law98@hotmail.com](mailto:jon_law98@hotmail.com)'
  prefs: []
  type: TYPE_NORMAL
