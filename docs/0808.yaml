- en: Having Trouble Understanding Quantum Machine Learning?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/having-trouble-understanding-quantum-machine-learning-ce8a941d8c70?source=collection_archive---------4-----------------------#2023-03-02](https://towardsdatascience.com/having-trouble-understanding-quantum-machine-learning-ce8a941d8c70?source=collection_archive---------4-----------------------#2023-03-02)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Implementing the Quantum Approximate Optimization Algorithm using functional
    programming
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://pyqml.medium.com/?source=post_page-----ce8a941d8c70--------------------------------)[![Frank
    Zickert | Quantum Machine Learning](../Images/ae361c0d68d13dac21bb86c7496d2917.png)](https://pyqml.medium.com/?source=post_page-----ce8a941d8c70--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ce8a941d8c70--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ce8a941d8c70--------------------------------)
    [Frank Zickert | Quantum Machine Learning](https://pyqml.medium.com/?source=post_page-----ce8a941d8c70--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Feebfab42a2c4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhaving-trouble-understanding-quantum-machine-learning-ce8a941d8c70&user=Frank+Zickert+%7C+Quantum+Machine+Learning&userId=eebfab42a2c4&source=post_page-eebfab42a2c4----ce8a941d8c70---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ce8a941d8c70--------------------------------)
    ·7 min read·Mar 2, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fce8a941d8c70&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhaving-trouble-understanding-quantum-machine-learning-ce8a941d8c70&user=Frank+Zickert+%7C+Quantum+Machine+Learning&userId=eebfab42a2c4&source=-----ce8a941d8c70---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fce8a941d8c70&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhaving-trouble-understanding-quantum-machine-learning-ce8a941d8c70&source=-----ce8a941d8c70---------------------bookmark_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: Do you want to get started with Quantum Machine Learning? Have a look at [**Hands-On
    Quantum Machine Learning With Python**](https://www.pyqml.com/volume1?provider=medium&origin=troubleunderstanding)**.**
  prefs: []
  type: TYPE_NORMAL
- en: This article will explain the most important parts of the Quantum Approximate
    Optimization Algorithm (QAOA). QAOA is a machine learning algorithm that you can
    use to solve combinatorial optimization problems.
  prefs: []
  type: TYPE_NORMAL
- en: The special thing is this algorithm caters to the specificities of quantum computers
    — a new kind of computer that promises exponential speedups in problem-solving.
  prefs: []
  type: TYPE_NORMAL
- en: Even though quantum machine learning (QML) — that is, using quantum computing
    to solve machine learning algorithms — is one of the most promising technologies,
    **it is as challenging!**
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, this article aims to explain the concepts underlying QAOA in an accessible
    way.
  prefs: []
  type: TYPE_NORMAL
- en: Quantum computing, optimization, and machine learning rely heavily on mathematics.
    Unless you’re a mathematician, it will be a daunting endeavor.
  prefs: []
  type: TYPE_NORMAL
- en: Fortunately, some QML libraries, such as IBM Qiskit, solve this problem. They
    provide easy-to-use interfaces and hide all the complexity from you.
  prefs: []
  type: TYPE_NORMAL
- en: As I showed in [my previous post](https://medium.com/@pyqml/quantum-wildfire-fighting-e828497b7b89),
    they even take care of the problem formulation.
  prefs: []
  type: TYPE_NORMAL
