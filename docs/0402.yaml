- en: Dates and Subqueries in SQL
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/dates-and-subqueries-in-sql-eaf58a3c6cf9?source=collection_archive---------3-----------------------#2023-01-27](https://towardsdatascience.com/dates-and-subqueries-in-sql-eaf58a3c6cf9?source=collection_archive---------3-----------------------#2023-01-27)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Working with dates in SQL
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://mgcodesandstats.medium.com/?source=post_page-----eaf58a3c6cf9--------------------------------)[![Michael
    Grogan](../Images/af9ce19e2f61efb07664124e664c7e81.png)](https://mgcodesandstats.medium.com/?source=post_page-----eaf58a3c6cf9--------------------------------)[](https://towardsdatascience.com/?source=post_page-----eaf58a3c6cf9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----eaf58a3c6cf9--------------------------------)
    [Michael Grogan](https://mgcodesandstats.medium.com/?source=post_page-----eaf58a3c6cf9--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Feec017a8b178&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdates-and-subqueries-in-sql-eaf58a3c6cf9&user=Michael+Grogan&userId=eec017a8b178&source=post_page-eec017a8b178----eaf58a3c6cf9---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----eaf58a3c6cf9--------------------------------)
    ·4 min read·Jan 27, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Feaf58a3c6cf9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdates-and-subqueries-in-sql-eaf58a3c6cf9&user=Michael+Grogan&userId=eec017a8b178&source=-----eaf58a3c6cf9---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Feaf58a3c6cf9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdates-and-subqueries-in-sql-eaf58a3c6cf9&source=-----eaf58a3c6cf9---------------------bookmark_footer-----------)![](../Images/cb2b6541ac41db27d9f3485efa264d94.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Source: Photo by [webandi](https://pixabay.com/users/webandi-1460261/) from
    [Pixabay](https://pixabay.com/photos/calendar-dates-schedule-days-1990453/)'
  prefs: []
  type: TYPE_NORMAL
- en: It is often the case that when working with a SQL database, one typically has
    to work with tables that contain a date column showing the date for each relevant
    record.
  prefs: []
  type: TYPE_NORMAL
- en: However, the ability of SQL to work with dates and yield valuable insights from
    such data types is often not well understood.
  prefs: []
  type: TYPE_NORMAL
- en: Weather Data Example
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let us consider the following example. Suppose there exists a weather database
    with recorded dates and relevant weather information in a table. Here is a snippet
    of the data:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/efbed3572df7cc1824766dab42d85521.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: Table (and data) created by author using PostgreSQL. Table displayed
    in pgAdmin4.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Also, let us suppose that a month variable has been defined in the table and
    the relevant values have been extracted from the table as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Now, for the purposes of ensuring that we have sufficient temperature records
    for each month and do not have too long a lag between records — let us assume
    that we would like to calculate the **average duration** between each consecutive
    record in the table, and group them by month.
  prefs: []
  type: TYPE_NORMAL
