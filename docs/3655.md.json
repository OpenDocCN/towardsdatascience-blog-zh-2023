["```py\n#Reading data\nfmri_img = nib.load('/Users/rodrigo/Medium/GLM_Orcutt/Stroop.nii')\ncong = np.loadtxt('/Users/rodrigo/Medium/GLM_Orcutt/congruent.txt')\nincong = np.loadtxt('/Users/rodrigo/Medium/GLM_Orcutt/incongruent.txt')\n\n#Get the series from each voxel\nfmri_data = fmri_img.get_fdata()\n\n#HRF function\nHRF = glover(.5)\n\n#Convolution of task data with HRF\nconv_cong = np.convolve(cong.ravel(), HRF.ravel(), mode='same')\nconv_incong = np.convolve(incong.ravel(), HRF.ravel(), mode='same')\n```", "```py\nimport statsmodels.api as sm\n\n#Selecting one voxel (time series)\ny = fmri_data[20,30,30]\nx = np.array([conv_incong, conv_cong]).T\n\n#add constant to predictor variables\nx = sm.add_constant(x)\n\n#fit linear regression model\nmodel = sm.OLS(y,x).fit()\n\n#view model summary\nprint(model.summary())\nparams = model.params\n```", "```py\n# LAG 0\nyt = y[2:180]\n# LAG 1\nyt1 = y[1:179]\n\n# calculate correlation coef. for lag 1\nrho= np.corrcoef(yt,yt1)[0,1]\n\n# Cochrane-Orcutt equation\nY2= yt - rho*yt1\nX2 = x[2:180,1:] - rho*x[1:179,1:]\n```", "```py\nimport statsmodels.api as sm\n\n#add constant to predictor variables\nX2 = sm.add_constant(X2)\n\n#fit linear regression model\nmodel = sm.OLS(Y2,X2).fit()\n\n#view model summary\nprint(model.summary())\nparams = model.params\n```"]