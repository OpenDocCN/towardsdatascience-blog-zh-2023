- en: Grouped Barplot With Error Bars in R
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 带误差条的分组条形图（R语言）
- en: 原文：[https://towardsdatascience.com/grouped-barplot-with-error-bars-in-r-ee87b112204d?source=collection_archive---------4-----------------------#2023-11-01](https://towardsdatascience.com/grouped-barplot-with-error-bars-in-r-ee87b112204d?source=collection_archive---------4-----------------------#2023-11-01)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/grouped-barplot-with-error-bars-in-r-ee87b112204d?source=collection_archive---------4-----------------------#2023-11-01](https://towardsdatascience.com/grouped-barplot-with-error-bars-in-r-ee87b112204d?source=collection_archive---------4-----------------------#2023-11-01)
- en: A comprehensive guide to data preparation and visualization
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据准备和可视化的全面指南
- en: '[](https://medium.com/@bhaskartigp?source=post_page-----ee87b112204d--------------------------------)[![Bhaskara
    Govinal Badiger](../Images/7c14288687e96546a7a5a3974c110dc8.png)](https://medium.com/@bhaskartigp?source=post_page-----ee87b112204d--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ee87b112204d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ee87b112204d--------------------------------)
    [Bhaskara Govinal Badiger](https://medium.com/@bhaskartigp?source=post_page-----ee87b112204d--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@bhaskartigp?source=post_page-----ee87b112204d--------------------------------)[![Bhaskara
    Govinal Badiger](../Images/7c14288687e96546a7a5a3974c110dc8.png)](https://medium.com/@bhaskartigp?source=post_page-----ee87b112204d--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ee87b112204d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ee87b112204d--------------------------------)
    [Bhaskara Govinal Badiger](https://medium.com/@bhaskartigp?source=post_page-----ee87b112204d--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fc2084c3fd87&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgrouped-barplot-with-error-bars-in-r-ee87b112204d&user=Bhaskara+Govinal+Badiger&userId=c2084c3fd87&source=post_page-c2084c3fd87----ee87b112204d---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ee87b112204d--------------------------------)
    ·10 min read·Nov 1, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fee87b112204d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgrouped-barplot-with-error-bars-in-r-ee87b112204d&user=Bhaskara+Govinal+Badiger&userId=c2084c3fd87&source=-----ee87b112204d---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fc2084c3fd87&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgrouped-barplot-with-error-bars-in-r-ee87b112204d&user=Bhaskara+Govinal+Badiger&userId=c2084c3fd87&source=post_page-c2084c3fd87----ee87b112204d---------------------post_header-----------)
    发表在[Towards Data Science](https://towardsdatascience.com/?source=post_page-----ee87b112204d--------------------------------)
    · 10分钟阅读 · 2023年11月1日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fee87b112204d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgrouped-barplot-with-error-bars-in-r-ee87b112204d&user=Bhaskara+Govinal+Badiger&userId=c2084c3fd87&source=-----ee87b112204d---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fee87b112204d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgrouped-barplot-with-error-bars-in-r-ee87b112204d&source=-----ee87b112204d---------------------bookmark_footer-----------)![](../Images/79cc7d6144d1b3e1aba099cd52a6b3ce.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fee87b112204d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgrouped-barplot-with-error-bars-in-r-ee87b112204d&source=-----ee87b112204d---------------------bookmark_footer-----------)![](../Images/79cc7d6144d1b3e1aba099cd52a6b3ce.png)'
- en: Photo by [Paulius Dragunas](https://unsplash.com/@paulius005?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[Paulius Dragunas](https://unsplash.com/@paulius005?utm_source=medium&utm_medium=referral)提供，来源于[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Barplots are an essential and widely used visualization tool for several reasons.
    They are excellent choices for visualizing the relationship between *numeric*
    and *categorical* variables, making it easy to understand the differences between
    categories or groups. They can represent counts, frequencies, proportions, and
    percentages, making them versatile for various data types.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 条形图因多种原因成为一个重要且广泛使用的可视化工具。它们非常适合可视化*数值*和*分类*变量之间的关系，使得理解类别或组之间的差异变得简单。条形图可以表示计数、频率、比例和百分比，使其在各种数据类型中都具有很大的灵活性。
- en: In R, we have the ability to analyze categorical data and represent it through
    barplots. Nevertheless, beginners venturing into R programming often encounter
    challenges when it comes to estimating means, standard errors, and creating grouped
    barplots with error bars. To counter these challenges one must have a basic understanding
    of data types, data structures, and the operations required for data analysis.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在 R 中，我们能够分析分类数据并通过条形图表示它。然而，初学者在进入 R 编程时，常常在估计均值、标准误差和创建带有误差条的分组条形图方面遇到挑战。为了应对这些挑战，必须对数据类型、数据结构和数据分析所需的操作有基本的了解。
- en: In this tutorial, we start by creating a simple dataset to understand different
    kinds of data types and how to convert them into suitable formats for data analysis.
    Then, we will delve into the process of estimating means and standard errors.
    Subsequently, we will proceed to create a grouped barplot with error bars. To
    assist beginners, I will meticulously dissect the code, step by step, to ensure
    a thorough understanding of the programming process.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们从创建一个简单的数据集开始，以理解不同类型的数据以及如何将它们转换为适合数据分析的格式。然后，我们将深入探讨估计均值和标准误差的过程。随后，我们将创建一个带有误差条的分组条形图。为了帮助初学者，我会逐步剖析代码，以确保对编程过程有透彻的理解。
- en: I assume our readers are familiar with the process of installing and loading
    R packages. If not, please refer to [**STHDA**](http://www.sthda.com/english/wiki/installing-and-using-r-packages)for
    guidance.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我假设我们的读者已经熟悉安装和加载 R 包的过程。如果不熟悉，请参阅 [**STHDA**](http://www.sthda.com/english/wiki/installing-and-using-r-packages)
    获取指导。
- en: Let’s jump right into creating the dataset, modifying it, and visualizing it.
    Begin by loading the necessary libraries as demonstrated below.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们直接开始创建数据集、修改它并进行可视化。首先加载所需的库，如下所示。
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The [**tidyverse**](https://brianward1428.medium.com/introduction-to-tidyverse-7b3dbf2337d5)
    is a core collection of R packages, which includes `[**dplyr**](https://r4ds.hadley.nz/data-transform.html)`
    for data manipulation and analysis, and`[**ggplot2**](https://r4ds.hadley.nz/data-visualize)`
    for data visualization. The [**ggthemes**](https://ggplot2.tidyverse.org/reference/ggtheme.html)provides
    alternative themes and theme components to style ggplot2 plots. The [**ggpubr**](https://rpkgs.datanovia.com/ggpubr/)
    offers `**ggsave()**` to save plots with customizable dimensions, resolution,
    and file formats. To explore these packages further, simply click on the hyperlinks
    provided.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[**tidyverse**](https://brianward1428.medium.com/introduction-to-tidyverse-7b3dbf2337d5)
    是一个核心的 R 包集合，包括 `[**dplyr**](https://r4ds.hadley.nz/data-transform.html)` 用于数据操作和分析，以及
    `[**ggplot2**](https://r4ds.hadley.nz/data-visualize)` 用于数据可视化。 [**ggthemes**](https://ggplot2.tidyverse.org/reference/ggtheme.html)
    提供了替代主题和主题组件，以样式化 ggplot2 图表。[**ggpubr**](https://rpkgs.datanovia.com/ggpubr/)
    提供 `**ggsave()**` 用于以可自定义的尺寸、分辨率和文件格式保存图表。要进一步探索这些包，只需点击提供的超链接即可。'
- en: Creating a D**ataframe:**
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个**数据框**：
- en: 'In the code below `**data.frame()**` function initiates a dataframe named `**df**`
    with three columns: `**Animals**`, `**Category**`, and `**Counts**`.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码中，`**data.frame()**` 函数初始化了一个名为 `**df**` 的数据框，其中包含三列：`**Animals**`、`**Category**`
    和 `**Counts**`。
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 💡 *Alternatively create the dataframe in Excel and import the file to R.*
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 💡 *或者在 Excel 中创建数据框并将文件导入到 R 中。*
- en: Let’s view the dataframe `**df**` using `**view(**`) function.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 `**view(**`) 函数查看数据框 `**df**`。
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/91bfb3b436eacb1b445e852b6dbe356b.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/91bfb3b436eacb1b445e852b6dbe356b.png)'
- en: 'The `**Animals**` column contains names of different kinds of animals. There
    are three unique animals in this column: “cats”, “dogs”, and “cows”. We sampled
    each kind of animal four times, resulting in a total of 12 rows. The `**Category**`
    column classifies the animals as either “Domestic” or “Stray”. There are six “Domestic”
    and six “Strays”. The `**Counts**`column represents the counts of each animal
    in the given ‘Category’ and ‘Animals’ columns.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`**Animals**` 列包含不同种类动物的名称。该列中有三种独特的动物： “cats”、 “dogs”和“cows”。我们对每种动物进行了四次采样，共得到12行数据。`**Category**`
    列将动物分类为“Domestic”或“Stray”。其中有六个“Domestic”和六个“Strays”。`**Counts**` 列表示在给定的‘Category’和‘Animals’列中每种动物的计数。'
- en: Data types and data manipulation
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据类型和数据操作
- en: In R, it’s crucial to understand the [**data type**](https://rpubs.com/STEMResearch/data-types-in-r)of
    the columns (variables) in the dataframe, because different operations and functions
    may be applied to different kinds of data types. In the `**df**` dataframe, `**Animals**`
    and`**Category**` columns have a **Character** data type and the `**Counts**`column
    has a **numeric** data type. Character data types are essential for working with
    text data, such as names, labels, descriptions, and textual information. Numeric
    data types represent numeric values, including integers and real numbers (floating-point
    values).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在R中，了解数据框中列（变量）的[**数据类型**](https://rpubs.com/STEMResearch/data-types-in-r)至关重要，因为不同的数据类型可能适用于不同的操作和函数。在`**df**`数据框中，`**Animals**`和`**Category**`列具有**字符**数据类型，而`**Counts**`列具有**数值**数据类型。字符数据类型对于处理文本数据（如名称、标签、描述和文本信息）非常重要。数值数据类型表示数值，包括整数和实数（浮点值）。
- en: Let's get the summary of the dataframe using `**glimpse()**` function to know
    the data type of the variables in the dataframe `**df**`.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`**glimpse()**`函数获取数据框的摘要，以了解数据框`**df**`中变量的数据类型。
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: We can observe that the `**df**` dataframe consists of 12 rows (observations),
    and 3 columns (variables). Notably, the `**Animals**` and `**Category**` variables
    are identified as character data type, denoted as `**<chr>**.` The values within
    these variables are enclosed in double quotes, rendering them as character strings.
    However, it is interesting to note that the `**Counts**` variable is also identified
    as a character data type. This is unexpected since the values within this variable
    are, in fact, numerical, not character strings. This misclassification of data
    types could potentially lead to complications when conducting numerical operations.
    To address this issue and facilitate numerical operations, we must take the necessary
    step of converting the `**Counts**` variable into a numeric data type.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以观察到`**df**`数据框包含12行（观测值）和3列（变量）。值得注意的是，`**Animals**`和`**Category**`变量被识别为字符数据类型，标记为`**<chr>**`。这些变量中的值被双引号括起来，使其成为字符字符串。然而，值得注意的是，`**Counts**`变量也被识别为字符数据类型。这是意外的，因为该变量中的值实际上是数字，而不是字符字符串。这种数据类型的误分类可能会在进行数值操作时引发问题。为了解决这个问题并便于数值操作，我们必须采取必要步骤将`**Counts**`变量转换为数字数据类型。
- en: You may have noticed that when I initially created the dataframe `**df**`, I
    intentionally enclosed the numeric values in double quotes, rendering the `**Counts**`
    variable as a character data type. Now that we have a clear understanding of the
    dataframe’s structure, let’s move forward and resolve this issue. We will do so
    by converting the `**Counts**` variable within the `**df**` dataframe from its
    current character data type to a numeric data type.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能注意到，当我最初创建数据框`**df**`时，我故意将数值用双引号括起来，从而将`**Counts**`变量设为字符数据类型。现在我们已经清楚了解数据框的结构，让我们继续解决这个问题。我们将通过将`**df**`数据框中的`**Counts**`变量从当前的字符数据类型转换为数字数据类型来完成这项任务。
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '`**df$Counts**` selects the `**Counts**`column in the `**df**` data frame.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '`**df$Counts**`选择`**df**`数据框中的`**Counts**`列。'
- en: '`**as.numeric()**` converts the input to a numeric data type.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`**as.numeric()**`将输入转换为数字数据类型。'
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Now the `**Counts**` variable is identified as numeric data type, denoted by
    `**<dbl>**` , often referred to simply as a “double”. The values within this variable
    are not enclosed in quotes indicating they are numerical, not character strings.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在`**Counts**`变量被识别为数值数据类型，标记为`**<dbl>**`，通常简称为“双精度”。该变量中的值没有用引号括起来，表明它们是数值，而非字符字符串。
- en: '`**<dbl>**` *stands for a "double-precision floating-point number. It is a
    numerical data type used to store real numbers and perform arithmetic operations
    on real numbers, including decimals.*'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '`**<dbl>**` *代表“双精度浮点数”。这是一种用于存储实数并对实数（包括小数）执行算术运算的数值数据类型。*'
- en: Estimating mean and standard error
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 估算均值和标准误差
- en: The code below creates a new dataframe named `**mean_df**` by performing data
    summarization and aggregation on an existing dataframe `**df**`.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码通过对现有数据框`**df**`执行数据汇总和聚合，创建了一个名为`**mean_df**`的新数据框。
- en: '[PRE8]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Let’s break down the code step by step:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们一步步解析代码：
- en: The pipe (`**%>%**`) operator takes the existing dataframe `**df**` and passes
    it to the next part of the code. It sets `**df**` as the input for subsequent
    operations. *In R, the* `**%>%**` *operator takes the result of one function on
    the left and passes it as the first argument to the next function on the right,
    allowing us to chain together a series of operations in a clear and sequential
    manner.*
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 管道 (`**%>%**`) 操作符将现有的数据框 `**df**` 传递给代码的下一部分。它将 `**df**` 设为后续操作的输入。*在 R 中，`**%>%**`
    操作符将左侧一个函数的结果传递给右侧下一个函数的第一个参数，从而以清晰和顺序的方式将一系列操作连接在一起。*
- en: The `**group_by()**` function groups the dataframe by the `**Animals**` and
    `**Category**` columns, creating subgroups within the dataframe based on the unique
    combinations of these two variables.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`**group_by()**` 函数根据 `**Animals**` 和 `**Category**` 列对数据框进行分组，在数据框内创建基于这两个变量的唯一组合的子组。'
- en: The `**summarise()**` function estimates the mean and standard error and assigns
    them to new variables :`**mean**` and `**se**` respectively.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`**summarise()**` 函数估算均值和标准误差，并将其分别分配给新变量：`**mean**` 和 `**se**`。'
- en: The `**mean()**` function computes the mean (average) of the `**Counts**` column
    for each subgroup created by the `**group_by()**` operation.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**mean()**` 函数计算由 `**group_by()**` 操作创建的每个子组的 `**Counts**` 列的均值 (平均值)。'
- en: The `**sd()**` function calculates the standard error (se) of the `**Counts**`
    column for each subgroup. The standard error is calculated by dividing the standard
    deviation (`**sd()**`) of the `Counts` column by the square root of the sample
    size (`**sqrt(n())**`).
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**sd()**` 函数计算每个子组的 `**Counts**` 列的标准误差 (se)。标准误差通过将 `Counts` 列的标准偏差 (`**sd()**`)
    除以样本大小的平方根 (`**sqrt(n())**`) 来计算。'
- en: Let’s take a look at the summary of the data frame `**mean_df**`
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们查看数据框 `**mean_df**` 的摘要
- en: '[PRE9]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: All set! we now have four columns or variables, including two new variables,
    `**mean**` and `**se**` calculated for the `**Counts**` column based on our grouping
    criteria. Let’s proceed with data visualization using this new dataframe `**mean_df**`.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 一切准备就绪！我们现在有四列或变量，包括两个新变量，基于我们的分组标准为 `**Counts**` 列计算的 `**mean**` 和 `**se**`。让我们使用这个新的数据框
    `**mean_df**` 进行数据可视化。
- en: Visualizing the data
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可视化数据
- en: The code below takes the data frame `**mean_df**` and passes it to `**ggplot2**`
    using `**%>%**` operator to create a grouped barplot assigned to the object “**barplot**”
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码将数据框 `**mean_df**` 传递给 `**ggplot2**`，使用 `**%>%**` 操作符创建一个分组条形图，并将其分配给对象
    “**barplot**”。
- en: '[PRE11]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 💡*Note that while the pipe operator (****%>%****) is useful for chaining together
    multiple operations in data manipulation and analysis, it cannot be used for adding
    layers within the ggplot2 function during the data visualization process. Instead,
    we use the* ***‘+’*** *symbol as demonstrated above.*
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 💡*请注意，尽管管道操作符 (****%>%****) 对于在数据操作和分析中连接多个操作非常有用，但在数据可视化过程中，它不能用于在 ggplot2
    函数中添加层。相反，我们使用* ***‘+’*** *符号，如上所示。*
- en: 'Let’s break down the code step by step:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐步解析代码：
- en: The `**aes()**` function, short for *‘aesthetic’* is to specify how the variables
    in the dataset are mapped to visual aesthetics in the plot. In this case, it specifies
    that the x-axis should represent the `**Animals**` variable, the y-axis should
    represent the `**mean**` variable, and fill bar colors based on the `**Category**`
    variable.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`**aes()**` 函数，缩写自 *‘aesthetic’*，用于指定数据集中的变量如何映射到图中的视觉美学。在这种情况下，它指定 x 轴应表示
    `**Animals**` 变量，y 轴应表示 `**mean**` 变量，并根据 `**Category**` 变量填充条形颜色。'
- en: The `**geom_col()**`calculates the height of each bar based on the values in
    the `**mean**` column.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`**geom_col()**` 根据 `**mean**` 列中的值计算每个条形的高度。'
- en: 'Here is the breakdown of the parameters used in the `**geom_col()**` function:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是 `**geom_col()**` 函数中使用的参数的详细说明：
- en: '`**position = "dodge"**`: It specifies that the bars should be grouped side
    by side (dodged) based on the `**Category**` variable. This is what creates a
    grouped barplot.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**position = "dodge"**`：它指定条形应根据 `**Category**` 变量并排分组（dodged）。这就是创建分组条形图的方式。'
- en: '`**width = 0.5**`: It determines the width of the bars. In this case, the bars
    have a width of 0.5.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**width = 0.5**`：它决定条形的宽度。在这种情况下，条形的宽度为 0.5。'
- en: '`**alpha = 0.5**`: It controls the transparency of the bars. An alpha value
    of 0.5 makes the bars somewhat transparent.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**alpha = 0.5**`：它控制条形的透明度。alpha 值为 0.5 使条形略显透明。'
- en: '`**color = "black"**`: It sets the border color of the bars to black.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**color = "black"**`：它将条形的边框颜色设置为黑色。'
- en: '`**size = 0.1**`: It specifies the size of the border around the bars. In this
    case, the borders will be relatively thin.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**size = 0.1**`：它指定了条形图边框的大小。在这种情况下，边框将相对较细。'
- en: The combination of these parameters customizes the appearance of the bars in
    the barplot, making them thinner, somewhat transparent, with black borders, and
    arranged side by side for different categories, which can enhance the visual representation
    of the data.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这些参数的组合自定义了条形图的外观，使其变得更细、略微透明、带有黑色边框，并且不同类别的条形图并排排列，这可以增强数据的视觉表现。
- en: 'Let’s look at the plot:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下图表：
- en: '[PRE12]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![](../Images/1b2f9e27c78e668980507a77b0e47f06.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1b2f9e27c78e668980507a77b0e47f06.png)'
- en: Great! We’ve successfully created a barplot, but the bars currently lack standard
    errors. Let’s incorporate standard errors into the plot.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 太好了！我们已经成功创建了一个条形图，但目前条形图缺少标准误差。让我们将标准误差加入到图表中。
- en: '**Adding standard errors to the bars and customizing bar colors**'
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**将标准误差添加到条形图并自定义条形图颜色**'
- en: First copy and paste the above code and then add `**geom_errorbar()**` function
    to it using ‘**+**’ symbol as shown below.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 首先复制并粘贴上述代码，然后使用 `**+**` 符号将 `**geom_errorbar()**` 函数添加到其中，如下所示。
- en: '[PRE13]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Let’s break down the components used in the `**geom_errorbar()**` function:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们详细拆解 `**geom_errorbar()**` 函数中使用的组件：
- en: '`**ymin**` and `**ymax**` defines the lower and upper values of the error bars
    based on the calculated mean and standard error.'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`**ymin**` 和 `**ymax**` 定义了基于计算的均值和标准误差的误差条的下限和上限值。'
- en: '`**position**` argument is set to `**position_dodge()**` for placing error
    bars side by side (dodged) and `**width = 0.5**` to set the dodge width. Play
    around with the width parameter to notice the changes in the bar position.'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`**position**` 参数设置为 `**position_dodge()**`，用于将误差条并排放置（dodged），而 `**width =
    0.5**` 设置了 dodge 的宽度。可以调整宽度参数，以注意条形图位置的变化。'
- en: '`**width = 0.2**` sets the width of the error bars. In this case, the error
    bars will have a width of 0.2'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`**width = 0.2**` 设置了误差条的宽度。在这种情况下，误差条的宽度将为 0.2。'
- en: 'Let''s look at the plot:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下图表：
- en: '[PRE14]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![](../Images/2a40329b930210349e1dfdcc06e3e564.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2a40329b930210349e1dfdcc06e3e564.png)'
- en: Great! We now created a grouped barplot with errorbars. This graph is nearly
    publication-ready, but a few minor adjustments can greatly enhance its appearance.
    For instance, you may have noticed a gap between the bars and the x-axis labels.
    Let’s remove it. Additionally, changing the bar colors, placing the figure legend
    inside the graph, and providing a predefined theme for clean and simple visuals
    will improve its overall presentation.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 太好了！我们现在创建了一个带有误差条的分组条形图。这个图表几乎准备好发表了，但一些小的调整可以大大改善其外观。例如，你可能已经注意到条形图和 x 轴标签之间有一个间隙。让我们将其去除。此外，改变条形图颜色、将图例放置在图表内部以及提供预定义的主题以获得简洁的视觉效果，将改善其整体表现。
- en: Creating publication-quality graph
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建出版质量的图表
- en: Let’s start by copying the above code and then adding additional layers to it
    using ‘**+**’ as shown below.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始复制上述代码，然后使用 `**+**` 添加额外的图层，如下所示。
- en: '[PRE15]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Here we incorporated `**scale_y_continuous()**` **,** `**scale_fill_manual()**`
    **,** `**theme_par()**` **,** `**theme()**`functions that are part of the `**ggplot2**`
    package to the existing code.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将 `**scale_y_continuous()**` **,** `**scale_fill_manual()**` **,** `**theme_par()**`
    **,** `**theme()**` 函数，这些函数都是 `**ggplot2**` 包的一部分，融入到了现有的代码中。
- en: Here is the breakdown of the parameters used within these functions.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是这些函数中使用的参数的详细说明。
- en: The `scale_y_continuous` allows us to modify various aspects of the y-axis,
    such as the range, breaks, labels, and more. In the above code the `**expand**`
    argument of `**scale_y_continuous()**` is set to expansion(0) to remove any padding
    around the y-axis limits, and the `**limits**` argument is set to `**c(0,100)**`
    to set the y-axis limits from 0 to 100.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`scale_y_continuous` 允许我们修改 y 轴的各个方面，例如范围、刻度、标签等。在上述代码中，`**scale_y_continuous()**`
    的 `**expand**` 参数设置为 expansion(0)，以去除 y 轴限制周围的任何填充，而 `**limits**` 参数设置为 `**c(0,100)**`，以将
    y 轴限制设置为 0 到 100。'
- en: The `**scale_fill_manual()**` allows us to manually specify the colors we want
    to use for filling different categories or levels of variables. Note that the
    fill aesthetic in the 2nd line of the code was set to `**fill = Category**`**.**
    Therefore, in this case, the argument`**values = c("blue", "gray")**`fills the
    colors of the bars based on the values within the `**Category**` **:** blue for
    `**"Domestic"**` and gray for `**"Stray”**`.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`**scale_fill_manual()**` 允许我们手动指定填充不同类别或变量水平的颜色。注意，在代码的第2行中，填充美学设置为`**fill
    = Category**`**。** 因此，在这种情况下，参数`**values = c("blue", "gray")**`根据`**Category**`中的值填充条的颜色：`**"Domestic"**`的条为蓝色，`**"Stray"**`的条为灰色。'
- en: The `**theme_par()**` allows us to customize the theme for the plot, which provides
    a clean white background and compact graphics. It has its own pros and cons.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`**theme_par()**` 允许我们自定义图的主题，提供了干净的白色背景和紧凑的图形。它有其自身的优缺点。'
- en: The `**legend.position**` argument `**theme()**` was set to `**c(0.2, 0.80)**`
    to specify the position of the legend within the plot. Play with these values
    to understand this argument better.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`**legend.position**`参数`**theme()**`被设置为`**c(0.2, 0.80)**`以指定图例在图中的位置。尝试这些值以更好地理解这个参数。'
- en: 💡 *The predefined themes such as* `**theme_par()**` *will override theme components
    applied afterward. We have added* `**theme(legend.position)**` *after the* `**theme_par()**`
    *function to address this issue.*
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 💡 *如* `**theme_par()**` *等预定义主题将覆盖其后应用的主题组件。我们在* `**theme_par()**` *函数之后添加了*
    `**theme(legend.position)**` *来解决这个问题。*
- en: 'Let''s look at the plot:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看图：
- en: '[PRE16]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![](../Images/bf6f3406a8e29a9853798f51fc52f15f.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bf6f3406a8e29a9853798f51fc52f15f.png)'
- en: Here is a visually appealing and publication-ready barplot with error bars.
    The graph effectively illustrates the variations in animal populations. In the
    ‘Stray’ category, dogs outnumber cats and cows, while in the ‘Domestic’ category,
    cows clearly outnumber cats and dogs.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个视觉上吸引人并适合发表的带误差条的条形图。该图有效地展示了动物种群的变化。在“流浪”类别中，狗的数量超过了猫和牛，而在“家庭”类别中，牛的数量明显超过了猫和狗。
- en: Saving plot for publication
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保存图以用于发表
- en: The code below utilizes the `**ggsave()**` function from the `**ggpubr**` library.
    To save a plot as an image, we need to specify the object to be saved (in this
    case, “**barplot**”) and define the desired filename with the chosen graphic format.
    In this case, we have selected the filename “**barplot_animals.tiff”,** which
    will save the plot as a TIFF image. Additionally, we have set the dimensions for
    `**width**` and `**height**` in inches, along with the resolution specified as
    `**dpi**` (dots per inch).
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码利用了`**ggsave()**`函数来自`**ggpubr**`库。为了将图保存为图像，我们需要指定要保存的对象（在这种情况下是“**barplot**”）并定义所需的文件名及所选的图形格式。在本例中，我们选择了文件名“**barplot_animals.tiff**”，这将把图保存为TIFF图像。此外，我们设置了以英寸为单位的`**width**`和`**height**`的尺寸，以及指定为`**dpi**`（每英寸点数）的分辨率。
- en: '[PRE17]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Now you are all set to create publication-ready barplots with standard error
    bars. Enjoy the creative process and have a blast plotting your data! 🎉✨
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已准备好创建适合发表的条形图，并带有标准误差条。享受创造的过程，尽情绘制你的数据吧！🎉✨
