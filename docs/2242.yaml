- en: Map, Filter, and CombinePerKey Transforms in Writing Apache Beam Pipelines with
    Examples
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/map-filter-and-combineperkey-transforms-in-writing-apache-beam-pipelines-with-examples-e06926124a02?source=collection_archive---------12-----------------------#2023-07-12](https://towardsdatascience.com/map-filter-and-combineperkey-transforms-in-writing-apache-beam-pipelines-with-examples-e06926124a02?source=collection_archive---------12-----------------------#2023-07-12)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/3c0bc71612c5632ec1b351c55f68aa03.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [JJ Ying](https://unsplash.com/@jjying?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Let’s Practice with Some Real Data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://rashida00.medium.com/?source=post_page-----e06926124a02--------------------------------)[![Rashida
    Nasrin Sucky](../Images/42bd057e8eca255907c43c29a498f2ca.png)](https://rashida00.medium.com/?source=post_page-----e06926124a02--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e06926124a02--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e06926124a02--------------------------------)
    [Rashida Nasrin Sucky](https://rashida00.medium.com/?source=post_page-----e06926124a02--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F8a36b941a136&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmap-filter-and-combineperkey-transforms-in-writing-apache-beam-pipelines-with-examples-e06926124a02&user=Rashida+Nasrin+Sucky&userId=8a36b941a136&source=post_page-8a36b941a136----e06926124a02---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e06926124a02--------------------------------)
    ·8 min read·Jul 12, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe06926124a02&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmap-filter-and-combineperkey-transforms-in-writing-apache-beam-pipelines-with-examples-e06926124a02&user=Rashida+Nasrin+Sucky&userId=8a36b941a136&source=-----e06926124a02---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe06926124a02&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmap-filter-and-combineperkey-transforms-in-writing-apache-beam-pipelines-with-examples-e06926124a02&source=-----e06926124a02---------------------bookmark_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Apache Beam is getting popularity as the unified programming model for efficient
    and portable big data processing pipelines. It can deal with both batch and streaming
    data. That’s how the name comes from. Beam is combination of the words Batch and
    Stream:'
  prefs: []
  type: TYPE_NORMAL
- en: B(from **B**atch) + eam(from str**eam**)= Beam
  prefs: []
  type: TYPE_NORMAL
- en: The portability also is a great feature. You just need to focus on running the
    pipeline and it can be run from anywhere such as Spark, Flink, Apex, or Cloud
    Dataflow. You don’t need to change the logic or syntax for that.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, we will focus on learning to write some ETL Pipelines using
    examples. We will try some transform operations using a good dataset and hopefully
    you will find all this transform operations useful in your work as well.
  prefs: []
  type: TYPE_NORMAL
- en: 'Please feel free to download this [public dataset](https://creativecommons.org/publicdomain/zero/1.0/)
    and follow along:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Sample Sales Data | Kaggle](https://www.kaggle.com/datasets/kyanyoga/sample-sales-data)'
  prefs: []
  type: TYPE_NORMAL
- en: 'A Google Colab notebook is used for this exercise. So, installation is very
    easy. Just use this line of code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
