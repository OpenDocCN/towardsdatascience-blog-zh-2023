- en: 'Python Quirks: Understand How a Variable Can Be Modified by a Function That
    Doesn’t Return Anything'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/python-quirks-understand-how-a-variable-can-be-modified-by-a-function-that-doesnt-return-anything-343a40cc6923?source=collection_archive---------8-----------------------#2023-04-13](https://towardsdatascience.com/python-quirks-understand-how-a-variable-can-be-modified-by-a-function-that-doesnt-return-anything-343a40cc6923?source=collection_archive---------8-----------------------#2023-04-13)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A deep dive into how Python passes arguments and mutability to prevent unexpected
    bugs
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://mikehuls.medium.com/?source=post_page-----343a40cc6923--------------------------------)[![Mike
    Huls](../Images/8f9f55a0d25db00799c5d37383b7f5b6.png)](https://mikehuls.medium.com/?source=post_page-----343a40cc6923--------------------------------)[](https://towardsdatascience.com/?source=post_page-----343a40cc6923--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----343a40cc6923--------------------------------)
    [Mike Huls](https://mikehuls.medium.com/?source=post_page-----343a40cc6923--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7ffb62c607ee&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-quirks-understand-how-a-variable-can-be-modified-by-a-function-that-doesnt-return-anything-343a40cc6923&user=Mike+Huls&userId=7ffb62c607ee&source=post_page-7ffb62c607ee----343a40cc6923---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----343a40cc6923--------------------------------)
    ·8 min read·Apr 13, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F343a40cc6923&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-quirks-understand-how-a-variable-can-be-modified-by-a-function-that-doesnt-return-anything-343a40cc6923&user=Mike+Huls&userId=7ffb62c607ee&source=-----343a40cc6923---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F343a40cc6923&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-quirks-understand-how-a-variable-can-be-modified-by-a-function-that-doesnt-return-anything-343a40cc6923&source=-----343a40cc6923---------------------bookmark_footer-----------)![](../Images/66a1b3b46f16c0c485439cbce8fc83b8.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Tracking down the unexpected bugs (image by [cottonbro studio](https://www.pexels.com/@cottonbro/)
    on [Pexels](https://www.pexels.com/photo/photo-of-person-taking-down-notes-7319070/))
  prefs: []
  type: TYPE_NORMAL
- en: 'In this article we’ll put on our detective hat and solve a “*Python Mystery*”.
    In this episode we’ll find out how **a function that doesn’t return a value can
    alter a variable**. (see below for example). This is not all: **it only ‘works’
    on some types of variables**. Additionally it’s pretty easy to fall into the trap
    of this behaviour so it’s important to know what causes it.'
  prefs: []
  type: TYPE_NORMAL
- en: We’ll focus on understanding the mechanics beneath the mystery. Not only will
    a better understanding of Python make you a **better developer**, it will also
    **save you a lot of frustration** trying to solve incomprehensible bugs. Let’s
    code!
  prefs: []
  type: TYPE_NORMAL
- en: The mystery — an example
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let’s first analyze our “*Python Mystery*” a bit more: suppose we have two
    functions that:'
  prefs: []
  type: TYPE_NORMAL
- en: '***accept*** a variable'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***modify*** that variable'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***don’t return*** the variable'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
