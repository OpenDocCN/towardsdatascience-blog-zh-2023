- en: Using Server-less Functions to Govern and Monitor Cloud-Based Training Experiments
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/using-server-less-functions-to-govern-and-monitor-cloud-based-training-experiments-755c43fba26b?source=collection_archive---------4-----------------------#2023-12-17](https://towardsdatascience.com/using-server-less-functions-to-govern-and-monitor-cloud-based-training-experiments-755c43fba26b?source=collection_archive---------4-----------------------#2023-12-17)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A simple routine that can save you loads of money
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://chaimrand.medium.com/?source=post_page-----755c43fba26b--------------------------------)[![Chaim
    Rand](../Images/c52659c389f167ad5d6dc139940e7955.png)](https://chaimrand.medium.com/?source=post_page-----755c43fba26b--------------------------------)[](https://towardsdatascience.com/?source=post_page-----755c43fba26b--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----755c43fba26b--------------------------------)
    [Chaim Rand](https://chaimrand.medium.com/?source=post_page-----755c43fba26b--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F9440b37e27fe&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-server-less-functions-to-govern-and-monitor-cloud-based-training-experiments-755c43fba26b&user=Chaim+Rand&userId=9440b37e27fe&source=post_page-9440b37e27fe----755c43fba26b---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----755c43fba26b--------------------------------)
    ·11 min read·Dec 17, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F755c43fba26b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-server-less-functions-to-govern-and-monitor-cloud-based-training-experiments-755c43fba26b&user=Chaim+Rand&userId=9440b37e27fe&source=-----755c43fba26b---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F755c43fba26b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-server-less-functions-to-govern-and-monitor-cloud-based-training-experiments-755c43fba26b&source=-----755c43fba26b---------------------bookmark_footer-----------)![](../Images/da83f9c1fe760e7679aaa950ae6c5b1c.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Ziyou Zhang](https://unsplash.com/@teadrinker42?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: This blog post was co-authored with my colleague [Shay Margalit](https://www.linkedin.com/in/shay-margalit-40581668/?originalSubdomain=il).
    It summarizes his research into how [AWS Lambda](https://aws.amazon.com/lambda/)
    functions can be used to increase the control over the usage and **costs** of
    the [Amazon SageMaker](https://aws.amazon.com/sagemaker/) training service. Interested?
    Please read on :).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这篇博客文章是与我的同事[Shay Margalit](https://www.linkedin.com/in/shay-margalit-40581668/?originalSubdomain=il)共同撰写的。它总结了他关于如何利用[AWS
    Lambda](https://aws.amazon.com/lambda/)函数来提高对[Amazon SageMaker](https://aws.amazon.com/sagemaker/)训练服务的使用控制和**成本**的研究。感兴趣吗？请继续阅读
    :).
- en: We are fortunate (or very unfortunate — [depending on who you ask](https://www.bbc.co.uk/news/uk-65746524))
    to be sharing a front row seat to an AI revolution that is expected by many to
    change the world as we know it. Powered by advances in hardware development and
    access to enormous amounts of data, this revolution is likely to impact many aspects
    of our daily lives — although precisely how, no one can say for sure. To support
    the growing appetite for artificial intelligence, the sizes of the underlying
    machine learning models are increasing rapidly as are the resources that are required
    to train them. The bottom line is that staying relevant in the AI development
    playing field requires a sizable investment into heavy, and expensive, machinery.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们很幸运（或者说非常不幸——[这要看你问谁](https://www.bbc.co.uk/news/uk-65746524)）能亲历这场被许多人预期会改变我们所知世界的人工智能革命。得益于硬件开发的进步和对大量数据的获取，这场革命很可能会影响我们日常生活的许多方面——虽然具体如何，没有人能确定。为了满足对人工智能日益增长的需求，基础的机器学习模型规模迅速扩大，训练这些模型所需的资源也在增加。总而言之，要在人工智能开发领域保持相关性，就需要对昂贵的重型设备进行大规模投资。
- en: Cloud-based managed training services, such as Amazon SageMaker, Google Vertex
    AI, and Microsoft Azure ML, have lowered the entry barrier to AI development by
    enabling developers to train on machines that they could otherwise not afford.
    Although such services reduce the upfront costs of AI and enable you to pay **only**
    for the time you spend training, the potential for the variable costs to add up
    warrants careful planning of how the training services will be used and how they
    will contribute to your overall training expense. However, inevitably, things
    don’t always go according to plan. To paraphrase an old Yiddish proverb “developers
    plan and the programming gods laugh”. When the stakes are high, as when training
    AI models — where an errant experiment can result in hundreds or thousands of
    dollars worth of wasted compute time, it is wise to institute multiple lines of
    defense.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 基于云的托管训练服务，例如Amazon SageMaker、Google Vertex AI和Microsoft Azure ML，通过使开发者能够在他们原本负担不起的机器上进行训练，降低了人工智能开发的门槛。虽然这些服务减少了人工智能的前期成本，并使你**仅**为训练时间付费，但变量成本的潜在累积需要对如何使用训练服务以及它们如何贡献于整体训练费用进行仔细规划。然而，不可避免的是，事情并不总是按计划进行。借用一句古老的意第绪谚语“开发者计划，编程之神笑”。当涉及到高风险时，比如训练人工智能模型——一个错误的实验可能导致数百或数千美元的计算时间浪费，因此明智之举是建立多个防线。
- en: First Line of Defense — Encourage Healthy Development Habits
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 防线第一步——鼓励健康的发展习惯
- en: 'The first line of defense should address the development practices of the ML
    algorithm engineers. Here are examples of some [guiding principles](/cloud-ml-performance-checklist-caa51e798002)
    you might consider:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 第一防线应关注机器学习算法工程师的开发实践。以下是一些你可能会考虑的[指导原则](/cloud-ml-performance-checklist-caa51e798002)：
- en: Encourage appropriate and cost-optimal use of the hardware resources used for
    training (e.g., see [here](/instance-selection-for-deep-learning-7463d774cff0)).
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 鼓励对用于训练的硬件资源进行适当且成本优化的使用（例如，参见[这里](/instance-selection-for-deep-learning-7463d774cff0)）。
- en: Identify and terminate failing experiments early.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 及早识别并终止失败的实验。
- en: Increase price performance by regularly analyzing and optimizing runtime performance
    (e.g., see [here](https://medium.com/towards-data-science/pytorch-model-performance-analysis-and-optimization-10c3c5822869)).
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过定期分析和优化运行时性能来提高性价比（例如，参见[这里](https://medium.com/towards-data-science/pytorch-model-performance-analysis-and-optimization-10c3c5822869)）。
- en: While formulating and adapting AI development principles such as the ones above
    are likely to increase your productivity and reduce waste, they do not offer full
    protection against all possible failures. For example, a dedicated failure detection
    runtime process may not help address a situation in which a training experiment
    stalls (e.g., due to a deadlock in the training application’s processes) but the
    training job remains active until it is actively stopped or times out.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: Second Line of Defense — Deploy Cross-project Guardrails
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this post we propose instituting a second line of defense that monitors all
    of the training activities in the project (or organization), verifies their compliance
    with a predetermined set of rules, and takes appropriate action in the case that
    errant training experiments are identified. One way to do this is to use dedicated
    **server-less functions** that are triggered at different stages of a training
    job and programmed to evaluate the job’s state and optionally stop or restart
    it (possibly with changes to the job settings), accordingly. In the next sections
    we will demonstrate a few examples of how to use AWS Lambda as a second line of
    defense against errant Amazon SageMaker training experiments.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: Disclaimers
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have chosen Amazon SageMaker and AWS Lambda for our demonstrations,
    the contents of the post are just as relevant to other services and similar functionality
    can be implemented for them. Please do not interpret our choice of these services
    as an endorsement of their use over their alternatives. There are multiple options
    available for cloud-based training each with their own advantages and disadvantages.
    The best choice for you will greatly depend on the details of your project.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: While we will share a few Python examples of server-less code, we will not go
    into the details of how to create and deploy them as AWS Lambda functions. There
    are many ways of interacting with AWS Lambda. We refer the reader to the [official
    AWS documentation](https://docs.aws.amazon.com/lambda/latest/dg/python-tracing.html)
    to learn more about them.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: The examples below were created for demonstrative purposes. They will likely
    require modification to suit the specific needs of your project. Be sure to fully
    understand all of the details of the code and the associated service costs before
    adapting the type of solution we propose. Importantly, the code we will share
    has not undergone rigorous testing. Any solution that includes creation and invocation
    of multiple Lambda functions and [Amazon CloudWatch alarms](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html)
    (as described here) requires appropriate validation to prevent the accumulation
    of redundant/orphan artifacts.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: We highly advise that you verify the details of this post against the most up-to-date
    AWS Lambda documentation and most up-to-date versions of the supporting libraries.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: Enforcing Developer Compliance
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'While [cloud governance](https://www.redhat.com/en/topics/automation/what-is-cloud-governance)
    is often vital for successful and efficient use of cloud services, its enforcement
    can sometimes be challenging. For example: Amazon SageMaker includes an API for
    appending [tags](https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_Tag.html)
    to training jobs. These can be used to include metadata associated with the SageMaker
    job such as the name of the training project, the stage of development, the goal
    of the current trial, the name of the development group or user running the job,
    etc. This metadata can be used to collect statistics such as the cost of development
    per project or group. In the code block below, we demonstrate the application
    of several tags to a SageMaker training job:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然[**云治理**](https://www.redhat.com/en/topics/automation/what-is-cloud-governance)对于成功和高效地使用云服务通常是至关重要的，但其实施有时可能具有挑战性。例如：Amazon
    SageMaker包含一个用于向训练作业添加[**标签**](https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_Tag.html)的API。这些标签可以用来包含与SageMaker作业相关的元数据，比如训练项目的名称、开发阶段、当前试验的目标、运行作业的开发组或用户的名称等等。这些元数据可以用来收集统计信息，比如每个项目或组的开发成本。在下面的代码块中，我们展示了如何将多个标签应用于SageMaker训练作业：
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Naturally, these tags are only helpful if we can enforce their application.
    This is where [AWS Lambda](https://aws.amazon.com/lambda/) comes to the rescue.
    Using [Amazon EventBridge](https://docs.aws.amazon.com/sagemaker/latest/dg/automating-sagemaker-with-eventbridge.html)
    we can monitor changes in the status of a SageMaker training jobs and register
    a function that will be triggered on every change. In the code block below, we
    propose a Python routine that will verify the presence of specific SageMaker tags
    every time a job is started. In case a tag is missing the job is automatically
    terminated. The structure of the event is documented [here](https://docs.aws.amazon.com/sagemaker/latest/dg/automating-sagemaker-with-eventbridge.html#eventbridge-training).
    Note the use of (the more detailed) [*SecondaryStatus*](https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DescribeTrainingJob.html)field
    to poll the status of the training job (rather than *TrainingJobStatus*).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 自然，这些标签只有在我们能够强制执行其应用时才有用。这就是[**AWS Lambda**](https://aws.amazon.com/lambda/)的作用。使用[**Amazon
    EventBridge**](https://docs.aws.amazon.com/sagemaker/latest/dg/automating-sagemaker-with-eventbridge.html)，我们可以监控SageMaker训练作业状态的变化，并注册一个在每次变化时被触发的函数。在下面的代码块中，我们提出了一个Python例程，每次作业启动时都会验证特定的SageMaker标签。如果缺少某个标签，作业将被自动终止。事件的结构可以在[这里](https://docs.aws.amazon.com/sagemaker/latest/dg/automating-sagemaker-with-eventbridge.html#eventbridge-training)找到。请注意使用（更详细的）[*SecondaryStatus*](https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DescribeTrainingJob.html)字段来轮询训练作业的状态（而不是*TrainingJobStatus*）。
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: AWS offers multiple ways for creating a Lambda function. Please see the [AWS
    Lambda](https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html)
    documentation for details. Once created, make sure to set the function as the
    target of the [EventBridge rule](https://docs.aws.amazon.com/sagemaker/latest/dg/automating-sagemaker-with-eventbridge.html#eventbridge-model).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: AWS提供了多种创建Lambda函数的方法。有关详细信息，请参见[**AWS Lambda**](https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html)文档。创建后，请确保将该函数设置为[**EventBridge规则**](https://docs.aws.amazon.com/sagemaker/latest/dg/automating-sagemaker-with-eventbridge.html#eventbridge-model)的目标。
- en: 'The same function can be used to enforce additional development rules that
    are aimed at controlling cost such as: the types of instances that can be used,
    the maximum number of instances per job, the maximum runtime of a job, and more.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 同样的功能可以用来强制执行额外的开发规则，这些规则旨在控制成本，比如：可以使用的实例类型、每个作业的最大实例数量、作业的最大运行时间等等。
- en: Stopping Stalled Experiments
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 停止停滞的实验
- en: 'Imagine the following scenario: You have planned a large cloud-based training
    job that will run on eight $30-an-hour ML compute instances for a period of three
    days. For the purpose of this task, you have secured a budget of $17,280 (8 instances
    x $30 an hour x 24 hours x 3 days). You start up the training job just before
    heading out for a three-day holiday weekend. When you return from your holiday
    weekend, you discover that an hour into the job, the training process stalled
    causing the expensive machinery to essentially remain completely idle for three
    long days. Not only have you wasted $17,280 (good luck explaining that to your
    boss) but your development has now been pushed back by three days!!'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下以下场景：你计划了一个大型的云端训练作业，将在八台每小时 $30 的 ML 计算实例上运行三天。为了完成这个任务，你已确保了 $17,280 的预算（8
    个实例 x 每小时 $30 x 24 小时 x 3 天）。你在出发去度假三天的周末前启动了训练作业。当你从假期回来时，发现作业开始后一小时内，训练过程停滞，导致昂贵的设备实际上在三天内完全闲置。你不仅浪费了
    $17,280（祝你好运向老板解释这一点），而且你的开发进度现在也被推迟了三天！！
- en: One way to protect yourself against this type of occurrence, is to monitor the
    utilization of the underlying training job resources. For example, if the GPU
    utilization your training instances remains below a certain threshold for an extended
    period of time, this is likely to be a sign that something has gone wrong and
    that the training job should be stopped immediately.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 保护自己免受这种情况的一种方法是监控底层训练作业资源的使用情况。例如，如果你的训练实例的 GPU 使用率在较长时间内低于某个阈值，这很可能是一个信号，表明出现了问题，需要立即停止训练作业。
- en: 'We will do this by defining an [Amazon CloudWatch alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html)
    that monitors the GPU utilization of one of the training instances of each SageMaker
    job and invokes an AWS Lambda function that terminates the job if the alarm is
    triggered. Setting this up requires three components: an [Amazon CloudWatch alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html)
    (one per training job), an [AWS Lambda](https://aws.amazon.com/lambda/) function,
    and an [Amazon Simple Notification Service (SNS) topic](https://docs.aws.amazon.com/sns/)
    that is used to link the Lambda function to the CloudWatch alarms.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过定义一个 [Amazon CloudWatch 警报](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html)
    来实现这一点，该警报监控每个 SageMaker 作业的一个训练实例的 GPU 使用情况，并在警报触发时调用一个 AWS Lambda 函数来终止该作业。设置这一功能需要三个组件：一个
    [Amazon CloudWatch 警报](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html)（每个训练作业一个），一个
    [AWS Lambda](https://aws.amazon.com/lambda/) 函数，以及一个 [Amazon Simple Notification
    Service (SNS) 主题](https://docs.aws.amazon.com/sns/)，用于将 Lambda 函数与 CloudWatch
    警报连接起来。
- en: 'First, we create an SNS topic. This can be done via the Amazon SNS Console
    or in Python, as shown below:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们创建一个 SNS 主题。这可以通过 Amazon SNS 控制台完成，也可以通过 Python 实现，如下所示：
- en: '[PRE2]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Next, we extend the *sagemaker_event_handler* function we defined above to create
    a unique alarm each time a training job is started. We program the alarm to measure
    the average GPU utilization over five-minute periods and to alert our SNS topic
    when there are three consecutive measurements below 1%. The alarm is deleted when
    the job is completed.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们扩展了上面定义的 *sagemaker_event_handler* 函数，每次启动训练作业时创建一个独特的警报。我们编程设置警报以测量五分钟周期内的平均
    GPU 使用率，并在连续三次测量低于 1% 时提醒我们的 SNS 主题。训练作业完成时，警报将被删除。
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Last, we define a second Python AWS Lambda function that [parses messages received
    from the SNS topic](https://docs.aws.amazon.com/lambda/latest/dg/with-sns-create-package.html#with-sns-example-deployment-pkg-python)
    and terminates the training job associated with the alarm.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们定义一个第二个 Python AWS Lambda 函数，该函数 [解析从 SNS 主题接收到的消息](https://docs.aws.amazon.com/lambda/latest/dg/with-sns-create-package.html#with-sns-example-deployment-pkg-python)，并终止与警报关联的训练作业。
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: AWS offers multiple mechanisms for subscribing a Lambda function to an SNS topic
    including the [AWS Console](https://docs.aws.amazon.com/sns/latest/dg/lambda-console.html),
    [AWS CLI](https://docs.aws.amazon.com/lambda/latest/dg/with-sns-example.html),
    and [the AWS Serverless Application Model (AWS SAM)](https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 提供了多种机制来订阅 Lambda 函数到 SNS 主题，包括 [AWS 控制台](https://docs.aws.amazon.com/sns/latest/dg/lambda-console.html)、[AWS
    CLI](https://docs.aws.amazon.com/lambda/latest/dg/with-sns-example.html) 和 [AWS
    无服务器应用程序模型 (AWS SAM)](https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html)。
- en: 'The solution we described is summarized in the following diagram:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们描述的解决方案总结在下图中：
- en: '![](../Images/129dedc3d99a0d37b85e084f33a18beb.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/129dedc3d99a0d37b85e084f33a18beb.png)'
- en: AWS Architecture Diagram (by Author)
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 架构图（作者提供）
- en: Note that the same architecture can be used to enforce a minimum level of GPU
    utilization of your ML training projects. GPUs are typically the most expensive
    resource in your training infrastructure and your goal should be to maximize the
    utilization of all of your training workloads. By dictating a minimum level of
    utilization (e.g. 80%) you can ensure that all developers [optimize their workloads
    appropriately](/cloud-ml-performance-checklist-caa51e798002).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，相同的架构也可以用于强制执行你机器学习训练项目的最低 GPU 利用率。GPU 通常是训练基础设施中最昂贵的资源，你的目标应是最大化所有训练工作负载的利用率。通过规定最低利用率（例如
    80%），你可以确保所有开发者[适当优化他们的工作负载](/cloud-ml-performance-checklist-caa51e798002)。
- en: Ensuring Continuity of Development
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 确保开发的连续性
- en: In our previous example, we demonstrated how to identify and stop a stalled
    experiment. In the large training job scenario that we described, this helped
    save a lot of money, but it did not address the three day delay to development.
    Obviously, if the source of the stall is in your code, it makes sense to postpone
    resuming training until the problem is fixed. However, we often encounter training
    interruptions that are not caused by our code but rather by sporadic failures
    in the service environment. In such scenarios, your priority may be to ensure
    training continuity rather than having to wait for someone to manually resume
    the training job (using the most recent [training checkpoint](https://pytorch.org/tutorials/recipes/recipes/saving_and_loading_a_general_checkpoint.html)).
    In the code block below, we use the [boto3](https://boto3.amazonaws.com/v1/documentation/api/latest/index.html)
    [*create_training_job*](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/sagemaker/client/create_training_job.html)API
    to extend our *sagemaker_event_handler* function to (naively) resume any training
    job that has failed after running for at least two hours.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们之前的示例中，我们演示了如何识别并停止一个停滞的实验。在我们描述的大型训练任务场景中，这有助于节省大量资金，但并没有解决开发的三天延迟。显然，如果停滞的源头在你的代码中，那么推迟恢复训练直到问题解决是有意义的。然而，我们经常遇到的训练中断并不是由于我们的代码造成的，而是由于服务环境中的偶发故障。在这种情况下，你的优先任务可能是确保训练的连续性，而不是等待有人手动恢复训练任务（使用最新的[训练检查点](https://pytorch.org/tutorials/recipes/recipes/saving_and_loading_a_general_checkpoint.html)）。在下面的代码块中，我们使用[boto3](https://boto3.amazonaws.com/v1/documentation/api/latest/index.html)的[*create_training_job*](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/sagemaker/client/create_training_job.html)
    API 来扩展我们的*sagemaker_event_handler*函数，以（简单地）恢复任何运行至少两小时后失败的训练任务。
- en: '[PRE5]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The function above automatically resumes any job that fails after two hours.
    A more practical solution might attempt to diagnose the type of error to determine
    whether resuming the job would be appropriate. One way to do this is to parse
    the failure description message and/or the CloudWatch logs associated with the
    failing job.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 上述函数会自动恢复任何在两小时后失败的任务。一个更实用的解决方案可能会尝试诊断错误类型，以确定恢复任务是否合适。一种方法是解析失败描述消息和/或与失败任务相关的
    CloudWatch 日志。
- en: Advanced Spot-instance Utilization
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高级 Spot 实例利用
- en: One of the compelling features of Amazon SageMaker is its support for [managed
    spot training](https://docs.aws.amazon.com/sagemaker/latest/dg/model-managed-spot-training.html).
    [Amazon EC2 Spot Instances](https://aws.amazon.com/ec2/spot/) allow you to take
    advantage of unused EC2 capacity at discounted prices. The catch is that these
    instances can be taken away (“interrupted”) in the middle of their use. Thus,
    Spot instances should be used only for fault-tolerant workloads. SageMaker makes
    it easy to take advantage of Spot instances by identifying Spot interruptions
    on your behalf and automatically restarting jobs when new Spot instances become
    available. While [managed spot](https://docs.aws.amazon.com/sagemaker/latest/dg/model-managed-spot-training.html)
    instances can be used to reduce cost of training, sometimes this strategy can
    backfire. For example, when there is low spot capacity your training jobs might
    time out before starting. Alternatively, the job might experience frequent interruptions
    that prevent it from making any meaningful progress. Both occurrences can interfere
    with development and reduce productivity. These types of situations can be monitored
    and addressed using AWS Lambda. In the code block below, we extend our *sagemaker_event_handler*
    function to identify a training job that has been interrupted more than three
    times and replace it with a cloned job in which the managed spot training is disabled.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SageMaker 的一个吸引人的特点是其对[托管抢占式训练](https://docs.aws.amazon.com/sagemaker/latest/dg/model-managed-spot-training.html)的支持。[Amazon
    EC2 Spot 实例](https://aws.amazon.com/ec2/spot/)允许你利用未使用的 EC2 容量，并以折扣价格购买。这些实例的一个问题是它们在使用过程中可能会被收回（“中断”）。因此，Spot
    实例应仅用于容错工作负载。SageMaker 通过代表你识别 Spot 中断，并在新的 Spot 实例可用时自动重新启动作业，使利用 Spot 实例变得简单。尽管[托管抢占式](https://docs.aws.amazon.com/sagemaker/latest/dg/model-managed-spot-training.html)
    实例可以用来降低训练成本，但有时这一策略可能会适得其反。例如，当 Spot 容量不足时，你的训练作业可能会在开始之前超时。或者，作业可能会经历频繁的中断，这使得它无法取得任何有意义的进展。这两种情况都可能干扰开发并降低生产力。这些类型的情况可以使用
    AWS Lambda 进行监控和处理。在下面的代码块中，我们扩展了我们的*sagemaker_event_handler* 函数，以识别一个被中断超过三次的训练作业，并用一个禁用了托管抢占式训练的克隆作业替换它。
- en: '[PRE6]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The implementation above determined the spot usage strategy based solely on
    the number of interruptions of the training job in question. A more elaborate
    solution might take into account other jobs (that use the same instance types),
    the duration of time across which the interruptions occurred, the amount of active
    training time, and/or the number of recent jobs that timed out due to low Spot
    instance capacity.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 上述实现仅根据训练作业的中断次数确定了 Spot 使用策略。一个更复杂的解决方案可能还会考虑其他作业（使用相同实例类型）、中断发生的时间段、活跃训练时间的数量和/或由于
    Spot 实例容量不足而超时的最近作业数量。
- en: Summary
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Effective AI model development requires the definition of a creative and detailed
    training infrastructure architecture in order to minimize cost and maximize productivity.
    In this post we have demonstrated how serverless AWS Lambda functions can be used
    to augment Amazon SageMaker’s managed training service in order to address some
    common issues that can occur during training. Naturally, the precise manner in
    which you might apply these kinds of techniques will depend greatly on the specifics
    of your project.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 有效的 AI 模型开发需要定义一个创意且详细的训练基础设施架构，以最小化成本并最大化生产力。在这篇文章中，我们展示了如何使用无服务器的 AWS Lambda
    函数来增强 Amazon SageMaker 的托管训练服务，以解决训练过程中可能出现的一些常见问题。当然，具体应用这些技术的方式将很大程度上取决于你项目的具体情况。
- en: Please feel free to reach out with questions, comments, and corrections. Be
    sure to check out our [other posts](https://chaimrand.medium.com/) on the topic
    of DL training optimization.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有任何问题、意见或修正，请随时联系。务必查看我们关于 DL 训练优化的[其他文章](https://chaimrand.medium.com/)。
