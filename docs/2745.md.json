["```py\nimport numpy as np\nimport racplusplus\nfrom sklearn.cluster import AgglomerativeClustering\nimport time\n\npoints = [1000, 2000, 4000, 6000, 10000, 14000, 18000, 22000, 26000, 32000, 64000]\nfor point_no in points:\n  X = np.random.random((point_no, 25))\n  distance_threshold = .17\n  knn = kneighbors_graph(X, 30, include_self=False)\n  # Matrix must be symmetric - done internally in scikit-learn\n  symmetric = knn + knn.T\n  start = time.time()\n  model = AgglomerativeClustering(\n    linkage=\"average\",\n    connectivity=knn,\n    n_clusters=None,\n    distance_threshold=distance_threshold,\n    metric='cosine'\n    )\nsklearn_times.append(time.time() - start)\nstart = time.time()\nrac_labels = racplusplus.rac(\n  X, distance_threshold, symmetric,\n  batch_size=1000, no_cores=8, metric=\"cosine\"\n  )\nrac_times.append(time.time() - start)\n```", "```py\n+ — — — — — — -+ — — — — — +\n| Data points | Seconds |\n+ - - - - - - -+ - - - - - +\n| 2000 | 0.051 |\n| 4000 | 0.125 |\n| 6000 | 0.245 |\n| 10000 | 0.560 |\n| 14000 | 1.013 |\n| 18000 | 1.842 |\n| 22000 | 2.800 |\n| 26000 | 3.687 |\n| 32000 | 5.590 |\n| 64000 | 22.499 |\n+ - - - - - - -+ - - - - - +\n```"]