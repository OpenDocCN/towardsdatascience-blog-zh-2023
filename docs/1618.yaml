- en: Modeling the Traveling Salesman Problem from first principles
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从基本原理建模旅行推销员问题
- en: 原文：[https://towardsdatascience.com/modeling-the-traveling-salesman-problem-from-first-principles-bd6530c9c07?source=collection_archive---------1-----------------------#2023-05-14](https://towardsdatascience.com/modeling-the-traveling-salesman-problem-from-first-principles-bd6530c9c07?source=collection_archive---------1-----------------------#2023-05-14)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/modeling-the-traveling-salesman-problem-from-first-principles-bd6530c9c07?source=collection_archive---------1-----------------------#2023-05-14](https://towardsdatascience.com/modeling-the-traveling-salesman-problem-from-first-principles-bd6530c9c07?source=collection_archive---------1-----------------------#2023-05-14)
- en: A concepts-first, math-second approach to modeling the most well-known routing
    problem in Operations Research
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一种概念优先、数学其次的建模方法，应用于运营研究中最著名的路线问题
- en: '[](https://medium.com/@carlosjuribe?source=post_page-----bd6530c9c07--------------------------------)[![Carlos
    J. Uribe](../Images/902c5f4ac5d404dd99916f145be6756c.png)](https://medium.com/@carlosjuribe?source=post_page-----bd6530c9c07--------------------------------)[](https://towardsdatascience.com/?source=post_page-----bd6530c9c07--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----bd6530c9c07--------------------------------)
    [Carlos J. Uribe](https://medium.com/@carlosjuribe?source=post_page-----bd6530c9c07--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@carlosjuribe?source=post_page-----bd6530c9c07--------------------------------)[![Carlos
    J. Uribe](../Images/902c5f4ac5d404dd99916f145be6756c.png)](https://medium.com/@carlosjuribe?source=post_page-----bd6530c9c07--------------------------------)[](https://towardsdatascience.com/?source=post_page-----bd6530c9c07--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----bd6530c9c07--------------------------------)
    [Carlos J. Uribe](https://medium.com/@carlosjuribe?source=post_page-----bd6530c9c07--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4337eddb94ed&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmodeling-the-traveling-salesman-problem-from-first-principles-bd6530c9c07&user=Carlos+J.+Uribe&userId=4337eddb94ed&source=post_page-4337eddb94ed----bd6530c9c07---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----bd6530c9c07--------------------------------)
    ·15 min read·May 14, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fbd6530c9c07&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmodeling-the-traveling-salesman-problem-from-first-principles-bd6530c9c07&user=Carlos+J.+Uribe&userId=4337eddb94ed&source=-----bd6530c9c07---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4337eddb94ed&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmodeling-the-traveling-salesman-problem-from-first-principles-bd6530c9c07&user=Carlos+J.+Uribe&userId=4337eddb94ed&source=post_page-4337eddb94ed----bd6530c9c07---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----bd6530c9c07--------------------------------)
    ·15分钟阅读·2023年5月14日'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbd6530c9c07&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmodeling-the-traveling-salesman-problem-from-first-principles-bd6530c9c07&source=-----bd6530c9c07---------------------bookmark_footer-----------)![](../Images/eb338d2b5f2eb31841f667fa8c183c65.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbd6530c9c07&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmodeling-the-traveling-salesman-problem-from-first-principles-bd6530c9c07&source=-----bd6530c9c07---------------------bookmark_footer-----------)![](../Images/eb338d2b5f2eb31841f667fa8c183c65.png)'
- en: 'Image generated by DALL·E 3 with author’s prompt: “a map displaying the typical
    tourist route in Paris with equations scattered throughout”'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 由 DALL·E 3 根据作者的提示生成的图像：“一张展示巴黎典型旅游路线的地图，方程式散布其间”
- en: '*👁️* **This is article #2 of the series covering the project “**[**An Intelligent
    Decision Support System for Tourism in Python**](https://medium.com/@carlosjuribe/list/an-intelligent-decision-support-system-for-tourism-in-python-b6ba165b4236)**”.**
    I encourage you to check it out to get a general overview of the whole project.
    If you’re only interested in how to model the TSP, you’re still at the right place,
    as this article is self-contained. **If you’re** **also interested in solving
    the problem**, not just modeling it, you’ll love the next 5 articles of the series.
    Trust me, they’ll provide you with what you need and what you didn’t know you
    needed *😉*'
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*👁️* **这是系列文章的第2篇，涵盖了项目“**[**Python中的智能决策支持系统**](https://medium.com/@carlosjuribe/list/an-intelligent-decision-support-system-for-tourism-in-python-b6ba165b4236)**”。**
    我鼓励你查看它，以获得整个项目的一般概述。如果你只对如何建模TSP感兴趣，你仍然在正确的地方，因为这篇文章是独立的。**如果你** **也对解决问题感兴趣**，而不仅仅是建模它，你会喜欢系列的接下来5篇文章。相信我，它们会提供你需要的和你不知道你需要的*😉*'
- en: Table of contents
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 目录
- en: '[**1\. Motivation and purpose**](#e5c2)'
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[**1\. 动机和目的**](#e5c2)'
- en: '[**2\. Understanding the data**](#e164)'
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[**2\. 理解数据**](#e164)'
- en: '[**3\. Defining a conceptual model from the problem description**](#9b59)'
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[**3\. 从问题描述中定义概念模型**](#9b59)'
- en: '[**4\. Building a mathematical model from the conceptual model**](#d2ba)'
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[**4\. 从概念模型构建数学模型**](#d2ba)'
- en: '[4.1\. Putting the data in Sets and Parameters](#94fd)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[4.1\. 将数据放入集合和参数](#94fd)'
- en: '[4.2\. Encoding decisions in Variables](#b192)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[4.2\. 在变量中编码决策](#b192)'
- en: '[4.3\. Defining the Objective](#8d7b)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[4.3\. 定义目标](#8d7b)'
- en: '[4.4\. Creating the Constraints](#6582)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[4.4\. 创建约束条件](#6582)'
- en: 1\. Motivation and purpose
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 动机和目的
- en: This article continues right where [the article for sprint 1](https://medium.com/@carlosjuribe/plan-an-optimal-trip-for-your-next-holidays-with-the-help-of-operations-research-and-python-481b1ea38fef)
    left off. You don’t need to have read it to understand what we’ll do here, but
    let me give you a quick recap (feel free to jump to section 2 if you did read
    the previous article). In a nutshell, we laid out the common problems that tourists
    face when planning a trip, and we set out to build a system that can *help us
    plan trips more effectively*, speeding up decision-making, or even fully automating
    the schedule for any given trip. We observed that stated like that, the problem
    is too complex, so we decomposed it and arrived at its essential version, and
    we called it the **minimum valuable problem**. In the end, we concluded that it
    took the form of the [Traveling Salesman Problem](https://en.wikipedia.org/wiki/Travelling_salesman_problem)
    (TSP), where the “cities” that the proverbial salesman must visit correspond,
    in our version, to the “sites of interest” in a city that a tourist desires to
    visit.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '-   本文接着[第一阶段文章](https://medium.com/@carlosjuribe/plan-an-optimal-trip-for-your-next-holidays-with-the-help-of-operations-research-and-python-481b1ea38fef)的内容。你不需要阅读它来理解我们将要做的事情，但让我给你一个快速回顾（如果你读过上一篇文章，可以跳到第2节）。简而言之，我们列出了游客在规划旅行时面临的常见问题，并着手建立一个可以*帮助我们更有效地规划旅行*的系统，加快决策过程，甚至完全自动化任何给定旅行的日程安排。我们观察到这样表述的问题过于复杂，因此我们将其拆解，并得出了其本质版本，称之为**最小可行问题**。最后，我们得出结论，它的形式是[旅行商问题](https://en.wikipedia.org/wiki/Travelling_salesman_problem)（TSP），其中“城市”对应于我们版本中的“景点”，即游客希望参观的城市中的“景点”。'
- en: So, as a kickstarter, we must first formulate and solve the TSP, and once that’s
    done, we’ll be on firm grounds to progress toward a more sophisticated and general
    solution to our trip planning problem. We chose this approach because **this article
    series aims to teach an agile approach to modeling in Operations Research (OR)**,
    so many of the lessons, tips, and tricks you’ll find here are *applicable to any
    kind of problem* you may face in OR in general.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '-   因此，作为一个启动步骤，我们必须首先制定并解决旅行商问题（TSP），一旦完成，我们就可以在更加稳固的基础上，向着更复杂和更通用的旅行规划解决方案迈进。我们选择这种方法是因为**这篇文章系列旨在教授一种灵活的运筹学（OR）建模方法**，所以你在这里找到的许多课程、技巧和窍门都是*适用于你可能遇到的任何问题*。'
- en: 'Returning to our business, we have the problem **description** of the TSP:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '-   返回到我们的业务中，我们有TSP的**描述**：'
- en: '**Goal**: walk as little distance as possible'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**目标**：尽可能少走距离'
- en: '**Requirements**: visit each site only once, and return to the original departure
    site (in our case, the hotel).'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**要求**：每个景点只访问一次，并返回到原始出发点（在我们的情况下是酒店）。'
- en: 'What we need is **a *model* of the problem**, **not a *solution* to the problem**.
    I know it’s tempting to focus on getting solutions, but think about it: if we
    obtained a *direct solution* to the TSP, say, with some kind of [heuristic algorithm](https://en.wikipedia.org/wiki/Heuristic_(computer_science))
    that finds *some* solution — even if it’s optimal—, it would still be insufficient
    for us because *the TSP is not our actual problem, but a simple approximation
    to it that we’ll need to expand to make it* ***approximate*** *our real-life problem.*
    The moment we change the problem description (which we’ll do), any [solution algorithm](https://youtu.be/GiDsjIBOVoA?si=sY8LGNiehLoAXFtV)
    tailored for the TSP will become obsolete, and we’d have to start from scratch.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要的是**问题的*模型***，**而不是*问题的解决方案***。我知道专注于获得解决方案很有诱惑力，但想一想：如果我们得到了 TSP 的*直接解决方案*，比如用某种
    [启发式算法](https://en.wikipedia.org/wiki/Heuristic_(computer_science)) 找到*某个*解决方案——即使它是最优的——也对我们来说是不够的，因为*TSP
    并不是我们实际的问题，而是一个简单的近似，我们需要扩展它以使其* ***近似*** *我们的实际问题。* 当我们更改问题描述（我们会这样做）时，任何针对 TSP
    的 [解决算法](https://youtu.be/GiDsjIBOVoA?si=sY8LGNiehLoAXFtV) 都会变得过时，我们必须从头开始。
- en: Models can be augmented, tweaked and refined to adapt to your problem and its
    changing requirements. Solution algorithms, however, tend to be customized to
    specific problems, and are very hard to modify when the problem changes.
  id: totrans-26
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 模型可以被扩展、调整和优化以适应你的问题及其变化的需求。然而，解决算法往往是针对特定问题定制的，当问题发生变化时，很难修改。
- en: Hence, our goal is to **build a model of the TSP.** Once you learn how to reason
    your way into such a model, you will have a good understanding to go and read
    [the next sprint’s article](https://medium.com/@carlosjuribe/plan-optimal-trips-automatically-with-python-and-operations-research-models-part-2-fc7ee8198b6c),
    where we will **implement the model in Python:**
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们的目标是**建立一个 TSP 模型**。一旦你学会了如何推理出这样的模型，你将会对接下来阅读 [下一篇文章](https://medium.com/@carlosjuribe/plan-optimal-trips-automatically-with-python-and-operations-research-models-part-2-fc7ee8198b6c)有很好的理解，在这篇文章中，我们将**在
    Python 中实现该模型：**
- en: '[](/plan-optimal-trips-automatically-with-python-and-operations-research-models-part-2-fc7ee8198b6c?source=post_page-----bd6530c9c07--------------------------------)
    [## Implementing, solving and visualizing the Traveling Salesman Problem with
    Python'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/plan-optimal-trips-automatically-with-python-and-operations-research-models-part-2-fc7ee8198b6c?source=post_page-----bd6530c9c07--------------------------------)
    [## 使用 Python 实现、求解和可视化旅行商问题'
- en: Learn how to translate an optimization model from Math to Python, optimize it,
    and visualize the solution to gain quick…
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 学习如何将优化模型从数学翻译到 Python，优化它，并可视化解决方案以快速获得…
- en: towardsdatascience.com](/plan-optimal-trips-automatically-with-python-and-operations-research-models-part-2-fc7ee8198b6c?source=post_page-----bd6530c9c07--------------------------------)
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/plan-optimal-trips-automatically-with-python-and-operations-research-models-part-2-fc7ee8198b6c?source=post_page-----bd6530c9c07--------------------------------)
- en: 2\. Understanding the data
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2. 理解数据
- en: 'If you recall from [our last sprint](https://medium.com/@carlosjuribe/plan-an-optimal-trip-for-your-next-holidays-with-the-help-of-operations-research-and-python-481b1ea38fef),
    the *basic input* for the TSP is just a list of sites that we want to visit in
    a single day. In this proof-of-concept, we’re using Paris, so I’ve chosen these
    eight famous, must-visit places:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你记得 [我们上一次的文章](https://medium.com/@carlosjuribe/plan-an-optimal-trip-for-your-next-holidays-with-the-help-of-operations-research-and-python-481b1ea38fef)，TSP
    的*基本输入*只是我们想在一天内访问的地点列表。在这个概念验证中，我们使用的是巴黎，因此我选择了这八个著名的必游之地：
- en: Sacre Coeur
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 圣心大教堂
- en: Louvre
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 卢浮宫
- en: Montmartre
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 蒙马特
- en: Port de Suffren
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 叠加码头
- en: Arc de Triomphe
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 凯旋门
- en: Av. Champs Élysées
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 香榭丽舍大街
- en: Notre Dame
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 巴黎圣母院
- en: Tour Eiffel
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 埃菲尔铁塔
- en: 'Since the problem consists of finding a tour of minimal *distance*, the actual
    data we need is *distance data,* whichdepends on the sites and their relative
    geographic positions. How to compute distance data from geographic locations will
    be covered in [sprint 4](https://medium.com/@carlosjuribe/compute-the-distance-matrix-of-a-set-of-sites-from-their-coordinates-in-python-d5fc92a0ba9e),
    since covering it now would entail a *de-tour* (pun intended) that would distract
    you from the main focus here: model building.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 由于问题在于寻找最小*距离*的旅行，因此我们实际需要的数据是*距离数据*，这取决于地点及其相对地理位置。如何从地理位置计算距离数据将在 [第 4 篇文章](https://medium.com/@carlosjuribe/compute-the-distance-matrix-of-a-set-of-sites-from-their-coordinates-in-python-d5fc92a0ba9e)中讲解，因为现在讲解这个会导致一个*绕道*（双关）的内容，使你从这里的主要焦点——模型构建——分心。
- en: 'So, for now, consider you’re given the distances between all possible pairs.
    They will be given as a CSV file in the [next sprint](https://medium.com/@carlosjuribe/plan-optimal-trips-automatically-with-python-and-operations-research-models-part-2-fc7ee8198b6c)
    when we implement the model in Python. The data looks like this:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，现在假设你已获得所有可能对之间的距离。这些距离将在[下一个迭代](https://medium.com/@carlosjuribe/plan-optimal-trips-automatically-with-python-and-operations-research-models-part-2-fc7ee8198b6c)中作为CSV文件提供，当我们用Python实现模型时。数据如下所示：
- en: '![](../Images/18f610b518e1fed4161c761c29896bb7.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/18f610b518e1fed4161c761c29896bb7.png)'
- en: '**Figure 2.1.** Distance data for a sample set of Paris sites, needed for the
    TSP. (Image by author)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 2.1.** 一组巴黎站点的距离数据，TSP所需。（图片由作者提供）'
- en: We’ll call this table the **distance matrix**. Note that, although not particularly
    postcard-worthy, the hotel is included in the matrix too, as it counts as another
    site that needs to be in the final tour. For this MVP, we keep things simple and
    use a **symmetric distance matrix**, which is a fancy way of saying that the distance
    from 𝐴 to 𝐵 is the same as the distance from 𝐵 to 𝐴, for any A and B. In more
    advanced settings, this need not be the case to a relevant degree, making this
    approximation ineffective.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们称这个表为**距离矩阵**。请注意，虽然这个酒店并不特别值得明信片上的风景，但它也包含在矩阵中，因为它被视为最终旅行中的另一个站点。对于这个MVP，我们保持简单，使用**对称距离矩阵**，这是说从𝐴到𝐵的距离与从𝐵到𝐴的距离相同，对于任何A和B来说。在更高级的设置中，这种情况不一定成立，使得这种近似变得无效。
- en: 3\. Defining a conceptual model from the problem description
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 从问题描述中定义概念模型
- en: 'Now we’re at the stage represented as the green block in the flowchart below:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们处于下图流程图中表示为绿色块的阶段：
- en: '![](../Images/9fa991cd58851a35926426135bddd4b2.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9fa991cd58851a35926426135bddd4b2.png)'
- en: '**Figure 2.2.** Minimalist workflow to problem-solving in OR. 2nd stage: **conceptual
    model** (Image by author)'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 2.2.** OR中问题解决的简约工作流程。第2阶段：**概念模型**（图片由作者提供）'
- en: 'The purpose of the conceptual model is to state the problem using words, but
    in a **standardized format**, so that the **mapping between “sentences” and “mathematical
    objects” becomes clear** later in the subsequent phase (mathematical model formulation).
    We can postulate our **conceptual model** like this:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 概念模型的目的是用语言陈述问题，但采用**标准化格式**，以便**“句子”和“数学对象”之间的映射在随后的阶段（数学模型制定）中变得清晰**。我们可以这样推测我们的**概念模型**：
- en: (Knowing)
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: （知道）
- en: '**Data (sets and parameters)**:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据（集合和参数）**：'
- en: The list of sites to visit
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要访问的站点列表
- en: The distance between any pair of sites
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何一对站点之间的距离
- en: (We need to decide)
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: （我们需要决定）
- en: '**Decisions**: In which order to visit the sites'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**决策**：以什么顺序访问站点'
- en: (In a way that we)
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: （以这样的方式）
- en: '**Objective**: Minimize the total distance traveled'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**目标**：最小化总旅行距离'
- en: (Such that)
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: （使得）
- en: '**Constraints**:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**约束条件**：'
- en: All sites are visited
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有站点都被访问
- en: Each site is visited just once
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个站点只访问一次
- en: The last site visited is the site we started from (we do a closed tour)
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后访问的站点是我们出发的站点（我们进行封闭旅行）
- en: '***👁️ Follow good practices and, in practice, goodness will follow you***'
  id: totrans-64
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '***👁️ 遵循良好实践，实践中，优秀将随之而来***'
- en: ''
  id: totrans-65
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: You may have thought that the conceptual model looks quite trivial and not very
    different from the “simple” problem statement we started the article with. And
    you would be right. For small problems like this one, it can be a repetitive step.
    **But for bigger problems, this stage is indispensable, and attempting to build
    a mathematical model without having a conceptual model first usually translates
    into mayhem** (unclear or vague requirements, bad formulations, buggy code, infeasible
    models, etc.) Thus, it is paramount that we build the discipline now and go through
    this stage here too, even if the marginal value in our simple case is very low.
    Focus on good habits, and good results will follow.
  id: totrans-66
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可能认为概念模型看起来相当平凡，与我们开始文章时的“简单”问题声明并没有太大区别。你是对的。对于像这样的简单问题，它可能是一个重复的步骤。**但对于更大的问题，这个阶段是不可或缺的，通常在没有首先建立概念模型的情况下构建数学模型会导致混乱**（不清晰或模糊的需求、糟糕的公式、错误的代码、不可行的模型等）。因此，现在我们需要建立这种纪律，即使在我们简单的案例中边际价值很低，也要通过这一阶段。专注于良好的习惯，良好的结果将随之而来。
- en: 4\. Building a mathematical model from the conceptual model
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 从概念模型建立数学模型
- en: We just reached “stage 3” of the workflow, in green below. The “**mathematical
    model** stage”, probably the most challenging stage of all, is where *natural*
    *language becomes mathematics.*
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚达到了工作流程的“第3阶段”，在下图中用绿色标出。**数学模型**阶段，可能是所有阶段中最具挑战性的阶段，是*自然* *语言变为数学*的地方。
- en: '![](../Images/59a610c78053af6bbc78697cbfb9e844.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/59a610c78053af6bbc78697cbfb9e844.png)'
- en: '**Figure 2.3.** Minimalist workflow to problem-solving in OR. 3rd stage: **mathematical
    model** (Image by author)'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 2.3.** 运筹学中的极简工作流程。第3阶段：**数学模型**（图像由作者提供）'
- en: It is at this stage where not even the least amount of ambiguity is permitted.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一阶段，任何一点模糊性都是不被允许的。
- en: A well defined mathematical model is worth a hundred clarifications
  id: totrans-72
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一个定义良好的数学模型胜过一百个解释
- en: In this stage of our workflow, we build a *pure* model for the TSP, and in the
    next phase (covered in “[sprint 3](https://medium.com/@carlosjuribe/plan-optimal-trips-automatically-with-python-and-operations-research-models-part-2-fc7ee8198b6c)”)
    we will construct a **model instance** out of the CSV dataset we explained earlier,
    with the help of Python.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们工作流程的这一阶段，我们为TSP构建了一个*纯粹的*模型，在下一个阶段（见“[冲刺 3](https://medium.com/@carlosjuribe/plan-optimal-trips-automatically-with-python-and-operations-research-models-part-2-fc7ee8198b6c)”）我们将使用Python从之前解释过的CSV数据集中构建一个**模型实例**。
- en: '*📝* ***Theory refresher: “*abstract model” *vs “*model instance”**'
  id: totrans-74
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*📝* ***理论回顾：“*抽象模型*”与“*模型实例*”***'
- en: ''
  id: totrans-75
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Mathematical models (in OR) are made of “**components**”. These are **all the
    elements** (equations, data, etc.) **that collectively represent a problem** of
    a certain structure. **What truly defines a model is its structure, *i.e.*, how
    its components relate to each other**, regardless of the particular numerical
    values that these components take in any given example.
  id: totrans-76
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 数学模型（在运筹学中）由“**组件**”构成。这些是**所有元素**（方程、数据等），**它们共同表示一个特定结构的问题**。**真正定义一个模型的是它的结构，*即*其组件之间的关系**，无论这些组件在任何给定示例中取什么具体的数值。
- en: ''
  id: totrans-77
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A **model instance** is a specific “materialization” of an “abstract model”
    with **concrete data**. Thus, we normally define abstract models, then populate
    them with data of particular scenarios, which yields **model instances**. It is
    those model instances that we optimize to get **concrete results.**
  id: totrans-78
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**模型实例**是“抽象模型”的一个具体“实现”，包含**具体数据**。因此，我们通常定义抽象模型，然后用特定场景的数据填充它们，进而得到**模型实例**。我们优化的就是这些模型实例，以获得**具体结果**。'
- en: In the subsections below, I will briefly touch on the components that make up
    a model, and their purposes, while I’m defining them. Feel free to skip these
    explanations, and jump directly to the mathematical definitions, if you are not
    a beginner and already know the functions of the model components.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的小节中，我将简要介绍构成模型的组件及其目的，同时对它们进行定义。如果你不是初学者，已经了解模型组件的功能，可以跳过这些解释，直接进入数学定义部分。
- en: 4.1\. Putting the data in Sets and Parameters
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.1\. 将数据放入集合和参数中
- en: All the data we need resides in the dataframe displayed in Figure 2.1\. We *could*
    keep the data *only* there, fetching all the numbers from that dataframe when
    creating the constraints and objective of the model. In fact many people do that,
    but **it’s a bad habit that doesn’t scale well with the size of the model**. As
    the model complexity grows, this approach necessitates of ever growing [glue code](https://en.wikipedia.org/wiki/Glue_code)
    (to deal with dataframe operations) that could be avoided if the data were kept
    organized in other data structures more geared towards the building of optimization
    models. These data structures are the **sets** and **parameters** of a model.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们所需的所有数据都位于图 2.1\. 中显示的数据框中。我们*可以*只将数据*保留*在这里，在创建模型的约束和目标时从该数据框中提取所有数字。事实上，许多人这样做，但**这是一个不良习惯，随着模型的规模增大，它无法良好扩展**。随着模型复杂性的增加，这种方法需要不断增加的[胶水代码](https://en.wikipedia.org/wiki/Glue_code)（用于处理数据框操作），如果数据保持在更适合优化模型构建的其他数据结构中，这些代码是可以避免的。这些数据结构就是模型的**集合**和**参数**。
- en: '*💡* ***Different data structures to serve different needs***'
  id: totrans-82
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*💡* ***不同的数据结构以满足不同的需求***'
- en: ''
  id: totrans-83
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'In case you were wondering **“Why create sets and parameters, when we already
    have the data we need in a table?”**, the short answer is: because doing so makes
    the model building easier, more general, and less error-prone.'
  id: totrans-84
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果你在想**“为什么要创建集合和参数，而我们已经在表格中有了所需的数据？”**，简短的回答是：因为这样做可以使模型构建更容易、更通用，且更少出错。
- en: ''
  id: totrans-85
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '“***Sets***” are the model components used to **store the main “entities”,**
    or “elements”, of a problem, whereas “***parameters*” are used to store the**
    **numerical properties** **of those entities, or of their *relationships***. In
    our example, the sites are the main “entities”, so they will be stored in a **set**,
    and the distances between pairs of sites are the “numerical properties” of their
    relationships, so they will be stored as **parameters**. At the “implementation
    level”, it is also very useful to make this categorization because **each component
    serves a different function** that will make model building easier:'
  id: totrans-86
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “***集合***”是用于**存储问题的主要“实体”**或“元素”的模型组件，而“***参数***”则用于存储这些实体或它们*关系*的**数值属性**。在我们的例子中，访问地点是主要的“实体”，所以它们会被存储在一个**集合**中，而地点对之间的距离是它们关系的“数值属性”，所以它们会被存储为**参数**。在“实现层面”，进行这种分类也是非常有用的，因为**每个组件都有不同的功能**，这将使得模型构建更加容易：
- en: ''
  id: totrans-87
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: • The function of **sets** is the **convenient storage and manipulation of indices**.
    These indices are the IDs or names that represent the different “entities” of
    the problem, and they are used **to *index* parameters in *convenient* ways**
    for the creation of constraints and objectives.
  id: totrans-88
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**集合**的作用是**方便地存储和操作索引**。这些索引是代表问题中不同“实体”的ID或名称，它们被用来**以*方便*的方式*索引*参数**，用于约束和目标的创建。'
- en: ''
  id: totrans-89
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: • The function of **parameters** is the **convenient storage and manipulation
    of numerical properties of the “entities” they are indexed by**, and these are
    the numbers that **actually appear** in the constraints and objectives.
  id: totrans-90
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**参数**的作用是**方便地存储和操作由它们所索引的“实体”的数值属性**，这些就是在约束和目标中**实际出现的**数字。'
- en: 'From our conceptual model, we have:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 从我们的概念模型中，我们有：
- en: 'The list of sites to visit, which we define as the **set** 𝕊:'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们定义的访问地点列表是**集合**𝕊：
- en: '![](../Images/395f8548dbc2fa320bc17034897f5338.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/395f8548dbc2fa320bc17034897f5338.png)'
- en: '**Expression 2.1.** The set of all sites to visit on the trip (displaying just
    2 for brevity).'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**表达式 2.1.** 是旅行中所有访问地点的集合（为了简洁起见，只显示两个）。'
- en: The phrase “indexed by 𝑖, 𝑗” is placed next to the set definition to signal
    that whenever the indices 𝑖 or 𝑗 are used in the model, they represent members
    of 𝕊. That way, when we have several sets, and thus multiple indices in use, it’s
    easier to remember what each index means.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: “由𝑖, 𝑗索引”这一短语放在集合定义旁边，以表示每当在模型中使用索引𝑖或𝑗时，它们代表集合𝕊中的成员。这样，当我们有多个集合，从而使用多个索引时，更容易记住每个索引的含义。
- en: 'The distance between any pair of sites, which we define as the *indexed* **parameter**
    𝐷ᵢⱼ:'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任意一对地点之间的距离，我们定义为*索引的* **参数** 𝐷ᵢⱼ：
- en: '![](../Images/ede4dd301fb2d100773d9a5b77baac7f.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ede4dd301fb2d100773d9a5b77baac7f.png)'
- en: The parameter is called “**indexed**” simply to indicate that it is not a scalar
    parameter (*i.e.*, a single number), but a 2-D matrix of numbers. To retrieve
    a number from this *indexed parameter* you need to specify two indices, 𝑖 and
    𝑗, which in turn will be taken from the set 𝕊.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 参数之所以称为“**索引的**”，仅仅是为了表明它不是一个标量参数（*即*，单个数字），而是一个二维数字矩阵。要从这个*索引参数*中检索一个数字，你需要指定两个索引𝑖和𝑗，这两个索引会从集合𝕊中取出。
- en: 𝕊 and 𝐷ᵢⱼ are the only “data components” present in the conceptual model. But
    that shouldn’t limit our ability to come up with other sets or parameters that
    *prove useful when building a model*.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 𝕊和𝐷ᵢⱼ是概念模型中唯一的“数据组件”。但这不应该限制我们提出其他集合或参数的能力，*它们在构建模型时可能会很有用*。
- en: As an illustration, note that the indices of 𝐷ᵢⱼ, 𝑖 and 𝑗, are members of 𝕊
    but *cannot coincide*. If they did, the distance would be zero, which is a trivial
    datum. Besides, we would never go from one place to itself again, so it is useless
    to consider pairs (𝑖, 𝑖) at all. Thus, it’s useful to limit the combinations that
    pairs (𝑖, 𝑗) can take, **so that modeling becomes easier (and *errors less likely*).**
    To that end, we now create another set, 𝔸, **derived** from 𝕊, that contains all
    pairs (𝑖, 𝑗) of *different sites*. Each pair represents an **arc** connecting
    site 𝑖 to site 𝑗, hence the symbol 𝔸.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，请注意𝐷ᵢⱼ的索引𝑖和𝑗是𝕊的成员，但*不能重合*。如果它们重合，距离将为零，这是一个平凡的数据。此外，我们不会从一个地方再次回到自己，因此完全没有必要考虑对（𝑖,
    𝑖）。因此，限制对（𝑖, 𝑗）的组合是有用的，**以便建模变得更容易（并且*错误可能性更小*）**。为此，我们现在创建另一个集合𝔸，**源自**𝕊，包含所有*不同地点*的对（𝑖,
    𝑗）。每对表示一个**弧**，连接地点𝑖到地点𝑗，因此符号是𝔸。
- en: '*📝* **An arc is just a “directed link”** between two nodes of a “network”.
    Just think of an arc (𝑖, 𝑗) as a vector starting at 𝑖 and ending at 𝑗. **When
    the “link” between two nodes is not directed** (i.e., the direction is irrelevant)
    **the word “edge” is used**, as saying “undirected arc” all the time would be
    too wordy. People in Graph Theory like to be efficient too.'
  id: totrans-101
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*📝* **弧只是两个节点之间的“有向连接”**。只需将弧（𝑖, 𝑗）视为一个从𝑖开始并在𝑗处结束的向量。**当两个节点之间的“连接”没有方向**（即方向无关紧要）**时，使用“边”这个词**，因为一直说“无向弧”会太啰嗦。图论中的人们也喜欢高效。'
- en: A nice property of 𝔸 is that it is the **domain over which** 𝐷ᵢⱼ **is defined**,
    and as we will see when implementing the model in Python, defining such a domain
    explicitly makes it *reusable* for other model components, and that’s also convenient.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 𝔸的一个好属性是它是**定义𝐷ᵢⱼ的域**，正如我们在用Python实现模型时所看到的，显式地定义这样的域使其*可重用*于其他模型组件，这也是很方便的。
- en: 'Set of possible arcs between different sites:'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不同站点之间可能的弧集：
- en: '![](../Images/d715b2ebc97925fc3acc15991d0d540e.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d715b2ebc97925fc3acc15991d0d540e.png)'
- en: '**Expression 2.2.** (Derived) set of possible arcs of the tour (site-to-site
    paths).'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '**表达式2.2.**（导出的）巡回路径（站点到站点路径）可能的弧集。'
- en: 4.2\. Encoding decisions in variables
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.2\. 将决策编码为变量
- en: Since we are building a model so it can tell us what actions we should take,
    and these prescribed actions are *unknown* to us before the model is optimized,
    we must encode into variables all the **potential actions we could take**.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们正在构建一个模型，以便它可以告诉我们应该采取哪些行动，并且这些规定的行动在模型优化之前对我们来说是*未知的*，我们必须将所有**我们可以采取的潜在行动**编码为变量。
- en: But how do we define such potential actions? From our conceptual model, the
    generic “decision” we need to make is the “order in which to visit the sites”.
    This “order” refers to one path among all possible paths we could follow when
    doing a tour. The key idea is that a *path is made of a sequence of arcs connecting
    individual nodes (i.e., sites)*. Therefore, **deciding to do a particular path
    is actually deciding to traverse a particular sequence of arcs.** **These “atomic
    decisions” about *whether or not* to traverse a particular arc connecting two
    sites** are the decisions we want to encode as variables.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 但我们如何定义这些潜在的行动呢？根据我们的概念模型，我们需要做出的通用“决策”是“访问各个站点的顺序”。这个“顺序”指的是在进行巡回时我们可以遵循的所有可能路径中的一条。关键思想是*路径由连接单个节点（即站点）的弧的序列组成*。因此，**决定采取特定路径实际上是决定穿越特定的弧序列**。**这些关于*是否*穿越连接两个站点的特定弧的“原子决策”**就是我们希望作为变量进行编码的决策。
- en: '*“Whether or not* to go from site A to site B” is clearly a **binary decision**:
    either I go, or I don’t. Because of this nature, the decision variables need to
    be binary (*i.e.*, taking only 0 or 1 as values) and are defined only for valid
    arcs (for which the derived 𝔸 comes in handy now). In mathematical terms:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '*“是否*从站点A前往站点B”显然是一个**二元决策**：要么去，要么不去。由于这种特性，决策变量需要是二元的（*即*，只取0或1作为值），并且仅对有效的弧定义（因此导出的𝔸现在派上用场）。用数学术语表示：'
- en: '![](../Images/991fc19df0913c668de95e6e5728825e.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/991fc19df0913c668de95e6e5728825e.png)'
- en: '**Expression 2.3.** Binary (go/no-go) decision variables, defined over possible
    arcs only.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '**表达式2.3.** 仅定义在可能的弧上的二元（去/不去）决策变量。'
- en: '**There is a unique decision variable for each possible arc (𝑖, 𝑗)**, but when
    the model is optimized, we will only be interested in **the variables that take
    the value 1, for they indicate what arcs should be traversed.** For example, if
    the variable 𝛿ᵢⱼ, with 𝑖=*hotel*, and 𝑗=*Louvre*, takes the value 1, it means
    we should go from the hotel to the Louvre as part of our tour.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '**每个可能的弧（𝑖, 𝑗）都有一个唯一的决策变量**，但当模型优化时，我们只关心**取值为1的变量，因为它们指示了应穿越哪些弧**。例如，如果变量𝛿ᵢⱼ，其中𝑖=*hotel*，𝑗=*Louvre*，取值为1，则意味着我们应该从酒店到卢浮宫作为我们巡回的一部分。'
- en: 4.3\. Defining the objective
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.3\. 定义目标
- en: 'Imagine we have 4 points, 𝑎, 𝑏, 𝑐, 𝑑, and we follow the path 𝑎 → 𝑏 → 𝑐, in
    which point 𝑑 is not visited. Its total distance is the sum of the distances of
    its arcs: 𝐷ᵃᵇ + 𝐷ᵇᶜ. But, if we don’t know in advance what path we will follow,
    **how do we represent the total distance of this unknown path?**'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 想象我们有4个点，𝑎, 𝑏, 𝑐, 𝑑，且我们遵循路径𝑎 → 𝑏 → 𝑐，其中点𝑑未被访问。它的总距离是其弧的距离之和：𝐷ᵃᵇ + 𝐷ᵇᶜ。但是，如果我们事先不知道将遵循什么路径，**我们如何表示这条未知路径的总距离？**
- en: '*💡* Precisely because the optimal path is unknown, **we need an expression
    that covers all possible paths**, but that reduces to the distance of the “best
    path” when the model is optimized.'
  id: totrans-115
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*💡* 正因为最优路径未知，**我们需要一个覆盖所有可能路径的表达式**，但当模型优化时，它会简化为“最佳路径”的距离。'
- en: By exploiting the fact that any *traversed* arc (𝑖, 𝑗) will have 𝛿ᵢⱼ = 1, and
    any *untraversed* arc (𝑖′,𝑗′) will have 𝛿ᵢᑊⱼᑊ = 0, we can create an expression
    that, once the variables have been decided, will **reduce to the total distance
    of the traversed path**. The way to do that is to **“add up all potentialities”**,
    *i.e.*, to do the summation over all possible arc distances 𝐷ᵢⱼ weighted by their
    binary “arc variables” 𝛿ᵢⱼ, and let the 0’s and 1’s that those variables will
    take decide which distances remain (𝐷ᵢⱼ × 1 = 𝐷ᵢⱼ) and which vanish (𝐷ᵢⱼ × 0 =
    0), in the expression for the total distance. This “summation of potentialities”
    represents the total distance the final tour will take, so it will be our objective
    (called 𝑍) to be *minimized*.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 通过利用任何*遍历*弧（𝑖, 𝑗）将有𝛿ᵢⱼ = 1，而任何*未遍历*弧（𝑖′,𝑗′）将有𝛿ᵢᑊⱼᑊ = 0，我们可以创建一个表达式，一旦变量被决定，它将**简化为遍历路径的总距离**。方法是**“累加所有可能性”**，*即*对所有可能的弧距离𝐷ᵢⱼ进行加权求和，权重为其二进制“弧变量”𝛿ᵢⱼ，让这些变量取的0和1决定哪些距离保留（𝐷ᵢⱼ
    × 1 = 𝐷ᵢⱼ）哪些消失（𝐷ᵢⱼ × 0 = 0），在总距离的表达式中。这种“可能性的求和”代表了最终巡回将行走的总距离，因此它将是我们的目标（称为𝑍）需要*最小化*。
- en: 'Mathematically, this is expressed as:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在数学上，这表示为：
- en: '![](../Images/83034bc0bd4482a82054bf782181fd43.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/83034bc0bd4482a82054bf782181fd43.png)'
- en: '**Expression 2.4.** Definition of the objective function in its raw version,
    using the primitive set 𝕊 only (left); and its simplified version, using the derived
    set 𝔸 (right).'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '**表达式 2.4.** 目标函数的原始版本定义，使用原始集𝕊（左）；以及其简化版本，使用派生集𝔸（右）。'
- en: Note how the summation at the right has become simpler to read (and implement)
    thanks to the use of 𝔸, the domain (set of indices) for both 𝐷ᵢⱼ and 𝛿ᵢⱼ.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 注意右侧的求和因为使用了𝔸（即𝐷ᵢⱼ和𝛿ᵢⱼ的域（索引集合））变得更易读（和实现）。
- en: Also, note that **the objective constitutes our definition of goodness**. Since
    we want to minimize it, a lower value is **better** than a higher value, so obviously,
    the minimum value is the **best** value. The values of the decision variables
    𝛿ᵢⱼ that correspond to this “best” value of the objective constitute the (optimal)
    solution to the problem, and they will be found by the optimization process.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，注意到**目标构成了我们对优良性的定义**。由于我们希望最小化目标，因此较低的值是**更好**的，而显然，最小值是**最佳**值。与这一“最佳”目标值相对应的决策变量𝛿ᵢⱼ的值构成了问题的（最优）解，它们将通过优化过程找到。
- en: 4.4\. Creating the constraints
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.4. 创建约束
- en: 'From our conceptual model, we have:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 从我们的概念模型中，我们得到：
- en: All sites are visited.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有站点都被访问。
- en: Each site is visited just once
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每个站点仅被访问一次
- en: The last site visited is the site we started from (we do a closed tour)
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后访问的站点是我们开始的站点（我们进行一个闭合巡回）
- en: We realize that requirement (1) is already “included” in requirement (2), for
    if *each* site is visited just once, that entails each site is visited, and thus
    *all sites* are visited. So we dismiss the need for a separate constraint for
    requirement (1) and focus on how to model requirement (2) as a constraint.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我们意识到要求（1）已包含在要求（2）中，因为如果*每个*站点仅被访问一次，这意味着每个站点都被访问了，因此*所有站点*都被访问了。因此我们不再需要单独的约束来满足要求（1），而是专注于如何将要求（2）建模为约束。
- en: 'To say that “each site is visited just once” is the same as to say that “each
    site is *entered* and *exited* just once”. And that phrase, in turn, is equivalent
    to these two phrases together: “each site is *entered* just once” **and** “each
    site is *exited* just once”. Let’s model the “phrases” separately:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 说“每个站点仅被访问一次”与说“每个站点仅被*进入*和*退出*一次”是一样的。这个短语又等同于这两个短语的结合：“每个站点仅被*进入*一次”**和**“每个站点仅被*退出*一次”。我们来分别建模这些“短语”：
- en: '**Each site is *entered* just once**:'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每个站点仅*进入*一次**：'
- en: '![](../Images/b77de8c8305e21df5c734eb15e98d8b5.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b77de8c8305e21df5c734eb15e98d8b5.png)'
- en: '**Expression 2.5.** Constraint set enforcing that each site is “entered” just
    once.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '**表达式 2.5.** 约束集要求每个站点仅被“进入”一次。'
- en: 'It’s useful to *read* the whole expression from right to left. If you first
    see over which indices the constraint is defined, interpreting the meaning of
    the constraint definition on the left side will be easier. I would read this constraint
    aloud as:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '*从右到左*阅读整个表达式是有用的。如果你首先看到约束定义的指标，解释左侧约束定义的含义会更容易。我会这样大声读出这个约束：'
- en: '*for each site 𝑗 belonging to the set of all sites 𝕊, the sum of all potential
    arcs 𝛿*ᵢⱼ**arriving at *𝑗*** *must be equal to 1, meaning that* only one***incoming******arc***
    *must happen at 𝑗. Or, more colloquially: each site must be* visited from *only
    one other site.*'
  id: totrans-133
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*对于属于所有站点集合𝕊的每个站点𝑗，所有潜在弧 𝛿*ᵢⱼ**到达*𝑗***的总和*必须等于1，这意味着*仅有一个***入弧*** *必须发生在𝑗。或者，更通俗地说：每个站点必须*从*仅有的一个其他站点*访问。*'
- en: '**Each site is *exited* just once**:'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每个站点*离开*一次**：'
- en: '![](../Images/19605aa22a16c154824f63abdd7e883e.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/19605aa22a16c154824f63abdd7e883e.png)'
- en: '**Expression 2.6.** Constraint set enforcing that each site is “exited” just
    once.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '**表达式 2.6。** 约束集强制每个站点“离开”一次。'
- en: 'I would read this constraint as:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 我会这样阅读这个约束：
- en: '*for each site 𝑖 belonging to the set of all sites 𝕊, the sum of all potential
    arcs 𝛿*ᵢⱼ**departing from *𝑖*** *must be equal to 1, meaning that* only one***outgoing******arc***
    *must happen at 𝑖. Or, more colloquially: each site must* departure to *only one
    other site.*'
  id: totrans-138
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*对于属于所有站点集合𝕊的每个站点𝑖，所有潜在弧 𝛿*ᵢⱼ**从*𝑖***的总和*必须等于1，这意味着*仅有一个***出弧*** *必须发生在𝑖。或者，更通俗地说：每个站点必须*离开到*仅有的一个其他站点。*'
- en: 'We’re left with only requirement (3). It states that the optimal path must
    finish at the same site it started from, or equivalently, that the path must be
    a tour (a closed loop). Here’s a possible line of reasoning one can have at first
    sight: “Because we have already created constraints to enforce that each site
    is **both *entered* and *exited* once**, this implies that the resulting path
    must be closed, since it is impossible for any site to be a “sink” (*i.e., a*
    site has one incoming arc but *no outgoing arcs*) or to be a “source” (*i.e.,*
    a site has an outgoing arc but *no incoming arcs*). Therefore, the previous two
    constraints, *presumably*, **force the final trajectory to be a closed loop”.**'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只剩下要求 (3)。它规定最佳路径必须从起点返回到起点，或者等效地，路径必须是一个回路（一个闭合的环）。这里有一种初步的推理方式：“因为我们已经设置了约束来确保每个站点**被*进入*和*离开*一次**，这意味着结果路径必须是闭合的，因为任何站点都不可能是“汇点”（*即，*一个站点有一个入弧但*没有出弧*）或者是“源点”（*即，*一个站点有一个出弧但*没有入弧*）。因此，前两个约束，*大概*，**强制最终轨迹成为一个闭合回路**。”
- en: '**Is that line of reasoning correct?** Let’s take an experimental approach.
    Let’s assume this reasoning is correct, and try to solve the model as is now.
    When we look at the solution, we will see if it looks right or if something’s
    wrong. **If the results are wrong (or don’t make sense in any way), we can always
    go back and revise our logic** (something which in real-life projects happens
    all the time). **The implementation, solution, and “experimental validation”**
    is what it’s covered in our “[next sprint](https://medium.com/@carlosjuribe/plan-optimal-trips-automatically-with-python-and-operations-research-models-part-2-fc7ee8198b6c)”,
    where a Python model is created, solved, inspected, and re-formulated based on
    the results we get.'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '**这种推理是否正确？** 我们采用实验方法。假设这种推理是正确的，然后尝试按现有模型解决。当我们查看解决方案时，我们将看到它是否正确或是否有问题。**如果结果错误（或以任何方式不合逻辑），我们可以随时返回并修正逻辑**（这在现实项目中时常发生）。**实现、解决和“实验验证”**是我们在“[下一个冲刺](https://medium.com/@carlosjuribe/plan-optimal-trips-automatically-with-python-and-operations-research-models-part-2-fc7ee8198b6c)”中涵盖的内容，在那里创建了一个Python模型，并根据得到的结果进行解决、检查和重新制定。'
- en: 'Thus, we conclude here (*tentatively*) the “mathematical model formulation”
    stage. Next stop: the “**computer model** implementation”, carried out in [Implementing,
    solving, and visualizing the Traveling Salesman Problem with Python](https://medium.com/@carlosjuribe/plan-optimal-trips-automatically-with-python-and-operations-research-models-part-2-fc7ee8198b6c):'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们在此（*暂时*）结束“数学模型制定”阶段。下一站是“**计算机模型**实施”，见[用Python实现、解决和可视化旅行商问题](https://medium.com/@carlosjuribe/plan-optimal-trips-automatically-with-python-and-operations-research-models-part-2-fc7ee8198b6c)：
- en: '[](/plan-optimal-trips-automatically-with-python-and-operations-research-models-part-2-fc7ee8198b6c?source=post_page-----bd6530c9c07--------------------------------)
    [## Implementing, solving and visualizing the Traveling Salesman Problem with
    Python'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/plan-optimal-trips-automatically-with-python-and-operations-research-models-part-2-fc7ee8198b6c?source=post_page-----bd6530c9c07--------------------------------)
    [## 使用 Python 实现、求解和可视化旅行商问题'
- en: Learn how to translate an optimization model from Math to Python, optimize it,
    and visualize the solution to gain quick…
  id: totrans-143
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 学习如何将优化模型从数学转化为 Python，优化它，并可视化解决方案以获得快速结果……
- en: towardsdatascience.com](/plan-optimal-trips-automatically-with-python-and-operations-research-models-part-2-fc7ee8198b6c?source=post_page-----bd6530c9c07--------------------------------)
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/plan-optimal-trips-automatically-with-python-and-operations-research-models-part-2-fc7ee8198b6c?source=post_page-----bd6530c9c07--------------------------------)
- en: There will be more articles of more “sprints” coming out, so if you’re eager
    to be my companion on this journey, stay tuned and **check the project timeline
    in section 3 of the** [**first article in this series**](https://medium.com/@carlosjuribe/plan-an-optimal-trip-for-your-next-holidays-with-the-help-of-operations-research-and-python-481b1ea38fef),
    to navigate to your desired sprint and follow the work being done there.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 将会有更多“冲刺”的文章发布，如果你渴望成为我在这段旅程中的伙伴，请保持关注，并**查看第 3 节中的项目时间表** [**本系列的第一篇文章**](https://medium.com/@carlosjuribe/plan-an-optimal-trip-for-your-next-holidays-with-the-help-of-operations-research-and-python-481b1ea38fef)，以导航到你感兴趣的冲刺并跟踪那里的工作进展。
- en: Also, feel free to follow me, ask me questions in the comments, **give me feedback**,
    or contact me on [LinkedIn](https://www.linkedin.com/in/carlosjuribe/).
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，欢迎关注我，在评论中向我提问，**给我反馈**，或通过[LinkedIn](https://www.linkedin.com/in/carlosjuribe/)与我联系。
- en: Thanks for reading, and see you in the [next one](https://medium.com/@carlosjuribe/plan-optimal-trips-automatically-with-python-and-operations-research-models-part-2-fc7ee8198b6c)!
    📈😊
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读，期待在[下一篇文章](https://medium.com/@carlosjuribe/plan-optimal-trips-automatically-with-python-and-operations-research-models-part-2-fc7ee8198b6c)中见到你！📈😊
