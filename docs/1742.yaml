- en: Leveraging Operations Research for Call Center Efficiency
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/leveraging-operations-research-for-call-center-efficiency-c625f062c34d?source=collection_archive---------5-----------------------#2023-05-25](https://towardsdatascience.com/leveraging-operations-research-for-call-center-efficiency-c625f062c34d?source=collection_archive---------5-----------------------#2023-05-25)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Harnessing the power of efficient workforce optimization to drive organizational
    excellence
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://saifalikheraj.medium.com/?source=post_page-----c625f062c34d--------------------------------)[![Saif
    Ali Kheraj](../Images/7b4fbd0444f5945ec7385b82a8276f27.png)](https://saifalikheraj.medium.com/?source=post_page-----c625f062c34d--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c625f062c34d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c625f062c34d--------------------------------)
    [Saif Ali Kheraj](https://saifalikheraj.medium.com/?source=post_page-----c625f062c34d--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F9feeca234e74&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fleveraging-operations-research-for-call-center-efficiency-c625f062c34d&user=Saif+Ali+Kheraj&userId=9feeca234e74&source=post_page-9feeca234e74----c625f062c34d---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c625f062c34d--------------------------------)
    ·11 min read·May 25, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc625f062c34d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fleveraging-operations-research-for-call-center-efficiency-c625f062c34d&user=Saif+Ali+Kheraj&userId=9feeca234e74&source=-----c625f062c34d---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc625f062c34d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fleveraging-operations-research-for-call-center-efficiency-c625f062c34d&source=-----c625f062c34d---------------------bookmark_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: In today’s data-driven world, organizations can efficiently allocate resources,
    reduce costs, and provide exceptional customer experiences by leveraging the power
    of data and applying advanced optimization models.
  prefs: []
  type: TYPE_NORMAL
- en: When predictive analytics is combined with prescriptive analytics, it enables
    managers to make crucial decisions within the company. We will observe this by
    utilizing the output of predictive analytics — demand of call center service representatives
    at each hour — to efficiently allocate customer service representatives by performing
    optimization, which will ultimately result in increased customer satisfaction
    and reduced expenses for the business as a whole.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6c6e3804b9868f5b1ce3447df1f133f6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1: Analytics Pyramid and the importance of Prescriptive Analytics (Figure
    by Author)'
  prefs: []
  type: TYPE_NORMAL
- en: '**General Overview**'
  prefs: []
  type: TYPE_NORMAL
- en: One of the key challenges faced by call center companies is low call answering
    rates, which can result in customer dissatisfaction and potentially lead to customer
    churn. For example, if a call center company has a call answering rate of only
    70%, this means that 30% of customers are not able to get through to the company,
    which can lead to frustration and dissatisfaction.
  prefs: []
  type: TYPE_NORMAL
- en: In this post, we will solve an optimization problem for better call center scheduling
    using an example scenario with equations and problem solving in Pyomo. This will
    help you understand everything in great detail. We will apply some constraints
    while optimizing by minimizing the shortage of call center service representative
    on each day and hour. Then you can go deeper to come up with more interesting
    soft constraints related to increasing motivation among agents, such as possible
    vacations after some weeks, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/09a49e26fec7acbda8352e2e1a8ccdf6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2: [Freepik](https://www.freepik.com/free-vector/call-center-agent-concept-flat-style_3148705.htm#page=2&query=call%20centre&position=42&from_view=search&track=ais)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Example Scenario:'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We have ten call center agents who must be assigned to a specific shift each
    day.
  prefs: []
  type: TYPE_NORMAL
- en: '**Shifts and Schedule Types**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There could be several shifts in a day, with breaks in between. Let us see how
    the company’s management has designed the various possible shifts.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/34a62b6c106f316e073941f6c3ef5a05.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3 — Conceptual Model 1 : Shift Matrix Designed with pre-defined breaks
    and working hours (By Author)'
  prefs: []
  type: TYPE_NORMAL
- en: So we have a total of 16 shifts made by the company’s management. For example,
    if a call center agent is assigned shift 5, the agent will work essentially from
    4 to 12 with one defined break in between. So there are a total of 9 hours with
    one break in between for the agent to rest.
  prefs: []
  type: TYPE_NORMAL
- en: In this case, we define shift with variable K and hour with variable T.
  prefs: []
  type: TYPE_NORMAL
- en: Let A be shift matrix and Akt is 1 if shift k covers period t and 0 otherwise.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f637e7ba46721c85a5457c668815a1b4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Equation 1: Shift Matrix Assignment (By Author)'
  prefs: []
  type: TYPE_NORMAL
- en: We want to assign one customer service representative (CSR) to only one shift
    per day. These shifts will essentially tell when an employee should come, leave,
    and take a break after optimization. This is essentially the first component of
    our model.
  prefs: []
  type: TYPE_NORMAL
- en: '**Shift Assignment Matrix (Decision Variable)**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/85d39297a4329dfb3f22a875a43ddcb5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4— Conceptual Model 2: Shift Assignment Matrix — whether CSR is assigned
    to particular shift (By Author)'
  prefs: []
  type: TYPE_NORMAL
- en: Then there’s the Shift Assignment Matrix, where we can denote customer service
    representatives as I and J as days. K is already defined as shift, and we have
    a total of 16 shifts as defined in previous section.
  prefs: []
  type: TYPE_NORMAL
- en: This matrix simply indicates whether Customer Representative I is assigned to
    day J at a specific shift K. This is essentially our decision variable in which
    we are interested in assigning CSR to right shift in order to minimize shortage
    at each hour.
  prefs: []
  type: TYPE_NORMAL
- en: '**Decision variable (Math Notation)**'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3f931556a12a917206dc39620b063ae5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Equation 2: Shift Matrix Assignment (By Author)'
  prefs: []
  type: TYPE_NORMAL
- en: Shortage
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let us now work out on the conceptual notion of shortage.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/56a67e3d9b0e3579086923f77241b389.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5— Conceptual Model 3: Getting Total Assigned, Demand and Shortage (By
    Author)'
  prefs: []
  type: TYPE_NORMAL
- en: Demand has already been provided to us through predictive model, and we can
    calculate Total assigned representatives once we have total assigned customer
    service representatives at each hour. Once we’ve defined the shift assignment
    matrix(*Figure 4 — Conceptual Model 2* ) and shift schedule matrix(*Figure 3—
    Conceptual Model 1*), we can quickly construct this table. We can simply do dot
    product of 10 x 16(*Conceptual Model 2*) and 16 x 24(*Conceptual Model 1*) to
    get 10 x 24 where 10 is the total number of call center service representative
    and 24 is number of hours. Thus, with each CSR assignment to each hour, we can
    easily achieve what we have above(*Figure 5 —* *Conceptual Model 3*). This allows
    us to easily calculate the total assigned CSRs for each day and hour. For the
    sake of simplicity, we assume a constant demand of three, but in the real world,
    this would come from a predictive model based on historical data.
  prefs: []
  type: TYPE_NORMAL
- en: Predictive model would be based on different factors and variables like historical
    call volume, customer demographics, seasonality, product/service trends.
  prefs: []
  type: TYPE_NORMAL
- en: Once we have total assignment and demand, we can easily calculate shortage,
    which is what we need to minimize and will be the basis for our objective function.
    This concludes our third conceptual table.
  prefs: []
  type: TYPE_NORMAL
- en: '**Objective Function**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let us now define the notion of shortage, as we need to minimize it. Let y[j,t]
    represent the shortage of CSRs during day j’s time period t. The objective is
    to minimize the total shortage of CSRs across all time periods and days, as shown
    in the equation 3 below.
  prefs: []
  type: TYPE_NORMAL
- en: y[j,t] is a derived decision variable because it is calculated based on other
    decision variables and parameters in the shift scheduling optimization model.
  prefs: []
  type: TYPE_NORMAL
- en: You can simply think shortage as summing up red highlighted in *conceptual model
    table 3* (above) for all the day.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0bd52f799c852334c9aec3f6b5145db3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Equation 3: Objective Function to minimize shortage (Figure by Author)'
  prefs: []
  type: TYPE_NORMAL
- en: We will see in our constraints part the notion of shortage further.
  prefs: []
  type: TYPE_NORMAL
- en: Constraints
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Hard Constraints:**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For each day and time, the shortage should be greater than or equal to zero.
    The shortage is calculated as the difference between the demand and the number
    of assigned CSRs(Supply). If the assigned CSRs exceed the demand, the shortage
    is considered as zero. We must be able to express demand and supply in order to
    define shortage. Djt (Demand of CSR required in day j’s period t). Let us define
    D[j,t] as the demand for CSR in the period t of day j.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We could simply use a shift schedule matrix(*Figure 3 — Conceptual Model 1 figure*)
    and a shift assignment matrix(*Figure 4— Conceptual Model 2 figure*) to calculate
    supply or total assigned CSRs at a specific hour on each day. Let me demonstrate
    by calculating the number of CSRs assigned at hour 0.
  prefs: []
  type: TYPE_NORMAL
- en: Let us choose the first column (hour 0) of our shift matrix(*Figure 3 — Conceptual
    Model 1*) and the first row (CSR 1) of the shift assignment matrix(*Figure 4—
    Conceptual Model 2*).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5dfe65fd108d749e5b64e76781ef0eff.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6— Dot Product Operation to calculate total assigned CSRs at hour 0 (By
    Author)
  prefs: []
  type: TYPE_NORMAL
- en: 'This is a straightforward dot product operation. We’ve chosen hour 0 on a specific
    day (Monday) as an example. We are taking the dot product of the shift matrix(Figure
    3 at hour 0) and the shift assignment (Figure 4 of CSR 1). Because CSR 1 is assigned
    to shift # 5, which does not have hour 0 as a working hour, the result will be
    zero. We will calculate the product of the shift matrix at hour 0 with all of
    the CSR 1–16 and sum it to get the total assigned CSRs at hour 0\. We can simply
    sum this across all shift K of each CSR(I), and we would do this for all I and
    J. This is the intuitive understanding, and the equation below corresponds to
    what I described.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d05ead274b017945fc55ca6161e68721.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Equation 4: Defining Shortage — Non Linear Function (Figure by Author)'
  prefs: []
  type: TYPE_NORMAL
- en: To calculate shortage, simply take the difference between demand and supply
    (demand — supply), and if the value is negative, indicating oversupply, we would
    take that as 0\. This would be accomplished by using the max function. However,
    this will no longer be a linear program. We want to be able to convert this equation
    to a linear form so that we can solve it with linear programming. Let us define
    linear equation now for this.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7d07319b5ab83f126c616913eb7e2077.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Equation 5: Defining Shortage — Linear Function (Figure by Author)'
  prefs: []
  type: TYPE_NORMAL
- en: Thus, here we have managed to convert non linear equation into linear equation.
  prefs: []
  type: TYPE_NORMAL
- en: '2\. One Shift per Day Constraint: Each CSR can only be assigned to work in
    one shift per day to prevent excessive workload.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c175e2abee7f5954b40f8b36c2fcf93b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Equation 6: Person should take exactly one shift each day (Figure by Author)'
  prefs: []
  type: TYPE_NORMAL
- en: For each CSR I in each day J, person should take exactly one shift so here we
    are just summing accross shift K for that CSR on day J. Intuitively, you can think
    this as summing for a particular CSR in shift assignment matrix and making sure
    it is less than equals to 1\. In other words, particular row (CSR) for a particular
    day in shift assignment matrix must be less than equals to 1.
  prefs: []
  type: TYPE_NORMAL
- en: If the person is taking a day off, he should take shift 0 which you can define
    yourself.
  prefs: []
  type: TYPE_NORMAL
- en: '**Soft Constraints**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Maximum Extra CSR Constraint to control the number of extra on-duty CSRs by
    setting a maximum limit. This is to reduce burden and to ensure active backlogs.
    We won’t be implementing this part but let us discuss the equation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../Images/f0022aca104162f3ef5dbb332ba9fb02.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Equation 7: Maximum number of extra CSRs on duty — Optional (Figure by Author)'
  prefs: []
  type: TYPE_NORMAL
- en: The soft constraint relates to the maximum number of extra CSRs on duty, which
    means the additional CSRs beyond the minimum required to meet customer demand.
    We want to minimize the number of extra CSRs, but ensure that the objective function
    value, denoted as W1, is greater than or equal to the total number of extra CSRs
    for each time period of each day.
  prefs: []
  type: TYPE_NORMAL
- en: To achieve this, we introduce a soft constraint that imposes an upper limit
    on the extra CSRs. This constraint ensures that the number of extra CSRs, obtained
    by subtracting the demand for CSRs from the supply, does not exceed a specified
    maximum value.
  prefs: []
  type: TYPE_NORMAL
- en: To include this soft constraint, we would need to modify our objective function
    a bit by adding weighted component q.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f3107fd72fd2345189b37eb175fa78e4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Equation 8: Modified Objective Function — Optional (Figure by Author)'
  prefs: []
  type: TYPE_NORMAL
- en: This is out of scope for now but this is just for the sake of understanding.
  prefs: []
  type: TYPE_NORMAL
- en: Final Equations before Implementation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](../Images/d8756fc5ddbe3b094942f617d19c7848.png)'
  prefs: []
  type: TYPE_IMG
- en: Final Equations 9 (Figure by Author)
  prefs: []
  type: TYPE_NORMAL
- en: Implemention in Python (Pyomo Package)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Lets pick the same scenario that we discussed with 10 CSRs, 16 shifts in a day,
    24 hours, 1 day.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Output:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/60f0fc88bbd09688f1b845a46d742c1c.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7— Assigned CSRs on a specific day at each hour (Output by Author)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/e350f6bd4242f69456e023a82e99b6fc.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9— Assigned shifts to each CSR (Output by Author)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/2864712d57e441abeb2f39c0f0438342.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10— Total Shortage after optimizing (Output by Author)
  prefs: []
  type: TYPE_NORMAL
- en: As we can see that we still have a shortage of 4 but this is what is optimized
    and we may need to hire additional CSRs. Thus, this also guides on hiring decision
    processes and we may save up cost to hire extra csrs.
  prefs: []
  type: TYPE_NORMAL
- en: 'Conclusion:'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In conclusion, while the code for call center scheduling may appear simple,
    it is crucial to have a solid conceptual model and thoughtful consideration of
    various factors before implementing an optimization model. By incorporating the
    soft constraints, such as considering the maximum number of extra on-duty CSRs
    and addressing the issue of shortage, we can effectively tackle the challenges
    associated with call center scheduling.
  prefs: []
  type: TYPE_NORMAL
- en: Whether it’s healthcare staffing, retail workforce management, or logistics
    planning, the application of data science and optimization can help address similar
    challenges of resource allocation and shortage. By leveraging these approaches,
    organizations can optimize their operations, improve efficiency, and enhance customer
    satisfaction. The COVID-19 pandemic has highlighted the criticality of efficient
    resource management across industries. The demand for services and the need for
    effective scheduling have become more prominent than ever.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[1] Market Research — [https://www.reportlinker.com/p087286/World-Call-Centers-Markets.html](https://www.reportlinker.com/p087286/World-Call-Centers-Markets.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '[2] A Hybrid Personnel Scheduling Model for Staff Rostering Problems — [https://www.mdpi.com/2227-7390/8/10/1702](https://www.mdpi.com/2227-7390/8/10/1702)'
  prefs: []
  type: TYPE_NORMAL
- en: '[3] Personnel Scheduling: [https://www.coursera.org/learn/operations-research-modeling](https://www.coursera.org/learn/operations-research-modeling)'
  prefs: []
  type: TYPE_NORMAL
