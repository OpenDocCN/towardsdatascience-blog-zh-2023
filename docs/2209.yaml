- en: 'Plotly and Pandas: Combining Forces for Effective Data Visualization'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Plotly 和 Pandas：结合力量实现有效的数据可视化
- en: 原文：[https://towardsdatascience.com/plotly-and-pandas-combining-forces-for-effective-data-visualization-2e2caad52de9?source=collection_archive---------1-----------------------#2023-07-10](https://towardsdatascience.com/plotly-and-pandas-combining-forces-for-effective-data-visualization-2e2caad52de9?source=collection_archive---------1-----------------------#2023-07-10)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/plotly-and-pandas-combining-forces-for-effective-data-visualization-2e2caad52de9?source=collection_archive---------1-----------------------#2023-07-10](https://towardsdatascience.com/plotly-and-pandas-combining-forces-for-effective-data-visualization-2e2caad52de9?source=collection_archive---------1-----------------------#2023-07-10)
- en: A quick guide inspired by Storytelling with Data
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一份受《数据讲故事》启发的快速指南
- en: '[](https://medium.com/@andreas030503?source=post_page-----2e2caad52de9--------------------------------)[![Andreas
    Lukita](../Images/8660ca1fea5da34ce3475281c1f52152.png)](https://medium.com/@andreas030503?source=post_page-----2e2caad52de9--------------------------------)[](https://towardsdatascience.com/?source=post_page-----2e2caad52de9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----2e2caad52de9--------------------------------)
    [Andreas Lukita](https://medium.com/@andreas030503?source=post_page-----2e2caad52de9--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@andreas030503?source=post_page-----2e2caad52de9--------------------------------)[![Andreas
    Lukita](../Images/8660ca1fea5da34ce3475281c1f52152.png)](https://medium.com/@andreas030503?source=post_page-----2e2caad52de9--------------------------------)[](https://towardsdatascience.com/?source=post_page-----2e2caad52de9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----2e2caad52de9--------------------------------)
    [安德烈亚斯·卢基塔](https://medium.com/@andreas030503?source=post_page-----2e2caad52de9--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F955ef38ea7b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplotly-and-pandas-combining-forces-for-effective-data-visualization-2e2caad52de9&user=Andreas+Lukita&userId=955ef38ea7b&source=post_page-955ef38ea7b----2e2caad52de9---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----2e2caad52de9--------------------------------)
    ·13 min read·Jul 10, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2e2caad52de9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplotly-and-pandas-combining-forces-for-effective-data-visualization-2e2caad52de9&user=Andreas+Lukita&userId=955ef38ea7b&source=-----2e2caad52de9---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F955ef38ea7b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplotly-and-pandas-combining-forces-for-effective-data-visualization-2e2caad52de9&user=Andreas+Lukita&userId=955ef38ea7b&source=post_page-955ef38ea7b----2e2caad52de9---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----2e2caad52de9--------------------------------)
    ·13 min read·2023年7月10日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2e2caad52de9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplotly-and-pandas-combining-forces-for-effective-data-visualization-2e2caad52de9&user=Andreas+Lukita&userId=955ef38ea7b&source=-----2e2caad52de9---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2e2caad52de9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplotly-and-pandas-combining-forces-for-effective-data-visualization-2e2caad52de9&source=-----2e2caad52de9---------------------bookmark_footer-----------)![](../Images/ebf4113c2f0c2035c54b29e283f48bba.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2e2caad52de9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplotly-and-pandas-combining-forces-for-effective-data-visualization-2e2caad52de9&source=-----2e2caad52de9---------------------bookmark_footer-----------)![](../Images/ebf4113c2f0c2035c54b29e283f48bba.png)'
- en: Photo by [Luke Chesser](https://unsplash.com/@lukechesser?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [卢克·切瑟](https://unsplash.com/@lukechesser?utm_source=medium&utm_medium=referral)
    在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral) 上提供
- en: “My data visualization skill sucks. My audiences seemed unimpressed with my
    work, and worse, they are not convinced.”
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “我的数据可视化技能很糟糕。我的观众似乎对我的工作不感兴趣，更糟的是，他们没有被说服。”
- en: There was once upon a time many of us bumped into this issue. Unless you are
    gifted or happened to take up a design course before, it could be quite challenging
    and time-consuming to produce visually aesthetic charts that are intuitive to
    the audiences at the same time.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 曾经有很多人遇到过这个问题。除非你有天赋或之前上过设计课程，否则制作视觉美观且对观众直观的图表可能非常具有挑战性和耗时。
- en: 'Here is what crosses my mind back then: I want to be more intentional in crafting
    my charts such that it conveys information to my audience intuitively. By that,
    I mean not expending their brainpower and consuming their time excessively just
    to make sense of what is happening.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 当时我想到的是：我希望在制作图表时更加用心，以便它能直观地传达信息给我的观众。我的意思是，不要过度消耗他们的脑力和时间来理解发生了什么。
- en: I used to think that switching from Matplotlib to Seaborn and finally to Plotly
    solve the aesthetics concern. Indeed, I was wrong. Visualization is not simply
    about aesthetics. Below are two visualizations I attempted to replicate from [**Storytelling
    with Data**](https://www.storytellingwithdata.com/books)[¹](#c0da) by Cole Nussbaumer
    Knaflic that really inspire me to change my approach to visualization. They look
    clean, elegant, and purposeful. We are going to attempt to replicate these charts
    in this article!
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我曾经认为从 Matplotlib 切换到 Seaborn，再到 Plotly 可以解决美学问题。事实上，我错了。可视化不仅仅是关于美学的。以下是我尝试复制的两个可视化图表，灵感来自[**《数据讲故事》**](https://www.storytellingwithdata.com/books)[¹](#c0da)由
    Cole Nussbaumer Knaflic 编写，这些图表真正激励我改变了我的可视化方法。它们看起来干净、优雅且有目的。我们将在本文中尝试复制这些图表！
- en: '![](../Images/e0c7078ff69b9e985ca570ea007dd7fc.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e0c7078ff69b9e985ca570ea007dd7fc.png)'
- en: Image by Author
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图像
- en: Here is the takeaway of this post. If you are looking for an in-depth explanation
    of the concepts behind great visualization, check out [**Storytelling with Data**](https://www.storytellingwithdata.com/books)[¹](#c0da),
    every page is a gem worth your time. If you are looking for tool-specific and
    practical advice, you are at the right place. Cole mentioned at the start of her
    book that the advice she presented is universal and tool-agnostic, although she
    admitted that she created the examples in the book using Excel. Some people, myself
    included, are not fans of Excel and drag-and-drop tools for many reasons. Some
    prefer creating visualizations using Python, R, and some other programming languages.
    If you are part of this segment and use Python as your primary tool, then this
    article is for you.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这篇文章的要点是。如果你在寻找关于优秀可视化背后概念的深入解释，查看[**《数据讲故事》**](https://www.storytellingwithdata.com/books)[¹](#c0da)，每一页都是值得你花时间阅读的宝贵内容。如果你在寻找工具特定的实用建议，你来对地方了。Cole
    在她的书开头提到，她提供的建议是普遍适用的，与工具无关，尽管她承认她在书中的示例是使用 Excel 创建的。有些人，包括我自己，出于许多原因并不喜欢 Excel
    和拖放工具。有些人更喜欢使用 Python、R 及其他一些编程语言来创建可视化。如果你属于这一类，并且将 Python 作为主要工具，那么这篇文章就是为你准备的。
- en: '**Table of Contents**'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**目录**'
- en: '[Chaining—Pandas Plot](#1692)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[链式调用—Pandas 绘图](#1692)'
- en: '[Horizontal Bar Chart](#3a5b)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[水平条形图](#3a5b)'
- en: '[Line Chart](#c7c0)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[折线图](#c7c0)'
- en: '[Bonus: Number Chart](#f9bd)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[附录：数字图表](#f9bd)'
- en: Chaining—Pandas Plot
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 链式调用—Pandas 绘图
- en: If you are somewhat of an expert or a seasoned player in using Pandas for data
    wrangling, you might encounter or even adopt the idea of “Chaining” yourself.
    In short, chaining allows your code to be a lot more readable, easier to debug,
    and production ready. Here is a simple example of what I am referring to. You
    don’t have to read line by line, just take a quick look to get the idea behind
    “Chaining”. Every step is clear and easy to explain, and the code is well organized
    with no unnecessary intermediary variables.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对使用 Pandas 进行数据整理颇有经验，你可能会遇到或甚至自己采用“链式调用”的概念。简而言之，链式调用可以让你的代码更具可读性、更易于调试，并且更适合生产。以下是我所指的一个简单示例。你不必逐行阅读，只需快速浏览即可理解“链式调用”的概念。每一步都清晰易懂，代码组织良好，没有不必要的中间变量。
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This is great, but did you know that you can continue the chaining process to
    create basic visualization charts as well? Pandas Plot, by default, uses Matplotlib
    backend for this purpose. Let’s see how it works and reproduce some of the examples
    Cole created in her book.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这很好，但你是否知道你可以继续链式调用以创建基本的可视化图表？Pandas Plot 默认使用 Matplotlib 后端来实现这一点。让我们看看它是如何工作的，并复制
    Cole 在她的书中创建的一些示例。
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: We have a DataFrame that looks like this.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有一个看起来像这样的 DataFrame。
- en: '![](../Images/84a2c24ea3bb89a4b19802d54d897513.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/84a2c24ea3bb89a4b19802d54d897513.png)'
- en: Image by Author
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图像
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This is the fastest way to generate a basic visualization chart. By chaining
    the `**.plot**` attribute and `**.line**` method directly from a DataFrame, we
    obtain the plot below.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这是生成基本可视化图表的最快方法。通过将`**.plot**`属性和`**.line**`方法直接链式调用到 DataFrame，我们获得了下面的图表。
- en: '![](../Images/81d8240aa16cfed92f5331d1a743cfb9.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/81d8240aa16cfed92f5331d1a743cfb9.png)'
- en: Image by Author
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Hold your reaction and judgment if you think the plot above does not pass the
    aesthetic check. Indeed, it looks ugly, to say the least. Let’s spice this up
    and do better. Here’s the trick, switch your Pandas plotting backend from Matplotlib
    to Plotly for the magic that is about to unravel.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你认为上面的图表没有通过美学检查，请暂时按捺住你的反应和判断。确实，它看起来至少有些难看。让我们改进一下，让它更好。诀窍是，将 Pandas 绘图后端从
    Matplotlib 切换到 Plotly，这样即将揭示的魔法就会显现。
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: You might be questioning, “Why do I change it to Plotly? Isn’t Matplotlib capable
    of doing the same thing?” Well, here’s the difference.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会问，“为什么要换成 Plotly？难道 Matplotlib 不也能做到同样的事情吗？”好吧，这就是区别所在。
- en: If we use the Matplotlib backend in Pandas, it returns an Axes object, try verifying
    yourself using the built-in `**type()**` method. This is great because the axes
    object allows us to access methods to further modify our chart. Check out [**this
    documentation**](https://matplotlib.org/stable/api/axes_api.html)[²](#6c79) for
    the possible methods to perform on Axes object. Let’s pick one to illustrate quickly.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们在 Pandas 中使用 Matplotlib 后端，它返回一个 Axes 对象，尝试使用内置的`**type()**`方法自行验证。这很好，因为
    axes 对象允许我们访问方法以进一步修改图表。查看[**这份文档**](https://matplotlib.org/stable/api/axes_api.html)[²](#6c79)以了解对
    Axes 对象执行的可能方法。我们来选择一个快速演示一下。
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/b2a6718bfd604c840e5a68ec55bb6f37.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b2a6718bfd604c840e5a68ec55bb6f37.png)'
- en: Image by Author
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: We successfully set the x-axis label to “concerns per 1,000”, but in doing so,
    we return a **Text object** and lost our precious Axis object that allows us access
    to precious methods to further modify our chart. Too bad!
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们成功地将 x 轴标签设置为“每千个关注点”，但这样做的结果是，我们返回了一个**Text 对象**，失去了珍贵的 Axis 对象，而这个对象让我们可以访问进一步修改图表的宝贵方法。真可惜！
- en: Here is an alternative to get around the limitation above,
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是绕过上述限制的另一种方法，
- en: '[PRE5]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/5475ec8625e7a2707f686231452167a6.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5475ec8625e7a2707f686231452167a6.png)'
- en: Image by Author
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: However, we are still unable to do extensive modification as the integration
    is quite limited by the Pandas' implementation [here](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.plot.line.html).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，由于 Pandas 实现的限制，我们仍然无法进行广泛的修改，具体请参考[这里](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.plot.line.html)。
- en: Plotly, on the other hand, does not return an Axes object. It returns a `**go.Figure**`
    object. The difference here is that the methods responsible for updating the charts
    also return you a `**go.Figure**` object, which allows you to continue chaining
    your method to further update your chart. Let’s try that out!
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，Plotly 不返回一个 Axes 对象。它返回一个`**go.Figure**`对象。这里的区别在于，负责更新图表的方法也会返回一个`**go.Figure**`对象，这样你可以继续链式调用方法，以进一步更新图表。我们来试试吧！
- en: By the way, in case you are wondering how I get the combinations of methods
    and arguments below, they are all available on the official documentation [**here**](https://plotly.com/python/reference/)[³](#d230).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便说一下，如果你想知道我如何获得下面的方法和参数组合，它们都可以在官方文档中找到，[**在这里**](https://plotly.com/python/reference/)[³](#d230)。
- en: Here are some important methods to get you started — `**.update_traces**`, `**.add_traces**`,
    `**.update_layout**`, `**.update_xaxes**`, `**.update_yaxes**`, `**.add_annotation**`,
    `**.update_annotations**`.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一些重要的方法，帮助你入门——`**.update_traces**`，`**.add_traces**`，`**.update_layout**`，`**.update_xaxes**`，`**.update_yaxes**`，`**.add_annotation**`，`**.update_annotations**`。
- en: Horizontal Bar Chart
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 横向条形图
- en: Let’s define a set of color palettes for our visualization below.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们为下面的可视化定义一组颜色调色板。
- en: '[PRE6]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/db264fa9ec19163a32fc86bbe4ce0dab.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/db264fa9ec19163a32fc86bbe4ce0dab.png)'
- en: Image by Author
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Here, we want to highlight the concerns that are equal to and above 10 percent
    by defining a separate color.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们希望通过定义不同的颜色来突出显示等于或高于 10% 的关注点。
- en: '[PRE7]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: We then **create the plot** right from the DataFrame.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们**从 DataFrame 创建图表**。
- en: '[PRE8]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](../Images/3fe7427a696bcc9dd0e45f64757d7497.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3fe7427a696bcc9dd0e45f64757d7497.png)'
- en: Image by Author
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: '**Updating the layout** yields the following. Here, we specify the template,
    add a title and margin to our plot, and specify the size of our figure object.
    Let’s comment on the annotations for the moment.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](../Images/9f9e680c298b446f2bd4438dba507fd6.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: '**Updating the x and y-axis** properties yields the following.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![](../Images/1992c43a88c549ad73cf1f20a019f1cf.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: Last but not least, we will **add some annotations** to our chart. Here, we
    have a few annotations — adding data labels to the horizontal bar chart and footnote.
    Let’s do this together. First, we define the annotations on a separate cell.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![](../Images/a14eac1ad8462b42654b67619b3bcab2.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: Isn’t this a much better chart relative to the initial default version? Let’s
    continue to explore another popular chart — The Line Chart.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: Just a heads up that the example below is more complicated than the one above.
    Nevertheless, the idea remains the same.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: Line Chart
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let’s take a quick look at the default Matplotlib plotting backend for Line
    Chart.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![](../Images/0a0535be21136b6eb98f29a3ac248407.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: Let’s switch our plotting backend to Plotly!
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: After switching the Pandas plotting backend to Plotly, the code above gives
    us the following. Here, we start by plotting only the **Received** Series.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a2b3d92eac1425f37494883be862ff3f.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: Let’s **update the line property** by further chaining the method above. Here,
    we modify the color, width and placing markers at the data points.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![](../Images/48c6617d8704caf6700058f913a29429.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: Let’s add the **Processed** Series to the chart!
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![](../Images/220c575f88cc0b5d4184fa3c871352cd.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: Let’s **add a vertical line** at index May in order to show the point at which
    the two lines start to diverge.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![](../Images/e0323738cfa1025cc3dc542a4d29a2ff.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: Next, let’s **update the overall layout** by changing the background to white,
    and adding the title, margin, and some other elements. For annotations, we will
    comment out at the moment.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '![](../Images/14a916f53e579673243c1abd15721a3c.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: Next, we will perform an **update to both the x and y-axes**.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '![](../Images/7888dc10f6998595f2f293c84187902c.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: Last but not least, we will **add some annotations** to our chart. Here, we
    have a few annotations—adding labels to the line chart (Received, Processed),
    as well as adding labels to scatter points, which could be a little complicated.
    Let’s do this together. First, we define the annotations on a separate cell.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: After we define the annotations, we just need to **put the annotation variable
    inside the chaining method** like the following.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '![](../Images/78e372fbe94aef457708aac29d14b017.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: 'Bonus: Number Chart'
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Congratulations on getting to this part of the article! Here is an additional
    plot for you to take away! Here we are creating a chart to aesthetically present
    a number by itself. In short, this is what I am referring to.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜你阅读到文章的这一部分！这是一个额外的图表，供你参考！我们在这里创建了一个图表，以美观的方式呈现一个数字。简而言之，这就是我所指的。
- en: '![](../Images/2e565f6866894e1b6380310ee9f3bafd.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2e565f6866894e1b6380310ee9f3bafd.png)'
- en: Image by Author
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: Since this is not a result of a DataFrame, we can start off by creating an empty
    `**go.Figure**` object from scratch, then gradually add on the annotations. We
    then end off by updating the layout accordingly.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这不是 DataFrame 的结果，我们可以从头开始创建一个空的 `**go.Figure**` 对象，然后逐步添加注释。最后，通过相应地更新布局来结束。
- en: '[PRE22]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Afterword
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 后记
- en: There you have it! The key is to update and refine your plot step by step until
    you achieve a desirable result. Of course, every technique comes with its own
    limitations. If your chart is getting way too complicated to produce, it might
    be beneficial to refer to Plotly Express or even build everything from scratch
    using Plotly Graph Objects. It may seem difficult and unfamiliar to adopt this
    technique at first, but keep practicing and soon you will create beautiful visualization
    that makes sense!
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 就这些了！关键是逐步更新和完善你的图表，直到获得理想的结果。当然，每种技术都有其局限性。如果你的图表变得过于复杂，可能有必要参考 Plotly Express，甚至使用
    Plotly Graph Objects 从头开始构建。刚开始采用这种技术可能会显得困难和陌生，但坚持练习，你很快就能创建出有意义且美观的可视化！
- en: If you pick up something useful from this article, do consider giving me a [***Follow***](https://medium.com/@andreas030503)
    on Medium. Easy, 1 article a week to keep yourself updated and stay ahead of the
    curve!
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你从这篇文章中获得了一些有用的内容，请考虑在 Medium 上给我一个 [***关注***](https://medium.com/@andreas030503)。很简单，每周一篇文章，让自己保持更新，走在前沿！
- en: Connect With Me!
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与我联系！
- en: '[*LinkedIn*](https://www.linkedin.com/in/andreaslukita7/)👔'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*LinkedIn*](https://www.linkedin.com/in/andreaslukita7/)👔'
- en: '[*Twitter*](https://twitter.com/andreaslukita7)🖊'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*Twitter*](https://twitter.com/andreaslukita7)🖊'
- en: References
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: Storytelling with Data by Cole Nussbaumer Knaflic. [https://www.storytellingwithdata.com/books](https://www.storytellingwithdata.com/books)
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 《用数据讲故事》由 Cole Nussbaumer Knaflic 编著。 [https://www.storytellingwithdata.com/books](https://www.storytellingwithdata.com/books)
- en: Matplotlib Axes API. [https://matplotlib.org/stable/api/axes_api.html](https://matplotlib.org/stable/api/axes_api.html)
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Matplotlib Axes API. [https://matplotlib.org/stable/api/axes_api.html](https://matplotlib.org/stable/api/axes_api.html)
- en: Plotly Graphing Libraries. [https://plotly.com/python/reference/](https://plotly.com/python/reference/)
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Plotly 图形库。 [https://plotly.com/python/reference/](https://plotly.com/python/reference/)
