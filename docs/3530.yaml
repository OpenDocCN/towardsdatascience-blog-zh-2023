- en: Python Type Hinting with Literal
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/python-type-hinting-with-literal-03c60ce42750?source=collection_archive---------8-----------------------#2023-11-28](https://towardsdatascience.com/python-type-hinting-with-literal-03c60ce42750?source=collection_archive---------8-----------------------#2023-11-28)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: PYTHON PROGRAMMING
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'More powerful than it seems: use typing.Literal to create literal types'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@nyggus?source=post_page-----03c60ce42750--------------------------------)[![Marcin
    Kozak](../Images/d7faf62e48ed81dab5d8ad92819fff54.png)](https://medium.com/@nyggus?source=post_page-----03c60ce42750--------------------------------)[](https://towardsdatascience.com/?source=post_page-----03c60ce42750--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----03c60ce42750--------------------------------)
    [Marcin Kozak](https://medium.com/@nyggus?source=post_page-----03c60ce42750--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4762f0cff9b2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-type-hinting-with-literal-03c60ce42750&user=Marcin+Kozak&userId=4762f0cff9b2&source=post_page-4762f0cff9b2----03c60ce42750---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----03c60ce42750--------------------------------)
    ·15 min read·Nov 28, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F03c60ce42750&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-type-hinting-with-literal-03c60ce42750&user=Marcin+Kozak&userId=4762f0cff9b2&source=-----03c60ce42750---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F03c60ce42750&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-type-hinting-with-literal-03c60ce42750&source=-----03c60ce42750---------------------bookmark_footer-----------)![](../Images/0bdd431c39d954c0d9226fc02679e589.png)'
  prefs: []
  type: TYPE_NORMAL
- en: typing.Literal creates a type with selected choices. Photo by [Caleb Jones](https://unsplash.com/@gcalebjones?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: 'I’ll admit it: I wasn’t always a fan of `typing.Literal`, a form of creating
    literal types in Python. In fact, I not only undervalued literal types, but I
    completely ignored them, refusing to use them at all. For some reason, which remains
    unclear to me even today, I couldn’t find much practical value in literal types.'
  prefs: []
  type: TYPE_NORMAL
- en: How wrong I was. I was blind to the power of this simple tool, and my code suffered
    as a result. If you’ve been ignoring literal types like I did, I urge you to read
    this article. I hope to convince you that despite its simplicity, `typing.Literal`
    can be a very useful tool in your Python coding arsenal.
  prefs: []
  type: TYPE_NORMAL
- en: Even if you’ve already recognized the value of literal types, don’t stop reading.
    While we won’t delve into all the intricacies of `typing.Literal`, this article
    will provide a more comprehensive introduction than the official Python documentation,
    without getting as bogged down in details as [PEP 586](https://peps.python.org/pep-0586/).
  prefs: []
  type: TYPE_NORMAL
- en: Literal types are so straightforward that they can make code clearer and more
    readable than code without them. This simplicity is their both a strength and
    a weakness of `typing.Literal`, as it doesn’t offer any additional…
  prefs: []
  type: TYPE_NORMAL
