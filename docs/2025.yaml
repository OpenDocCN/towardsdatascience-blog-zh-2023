- en: Developing Interactive and Insightful Dashboards with Spark and Plotly Dash
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Spark 和 Plotly Dash 开发互动且富有洞察力的仪表板
- en: 原文：[https://towardsdatascience.com/developing-interactive-and-insightful-dashboards-with-spark-and-plotly-dash-5c0805341922?source=collection_archive---------1-----------------------#2023-06-21](https://towardsdatascience.com/developing-interactive-and-insightful-dashboards-with-spark-and-plotly-dash-5c0805341922?source=collection_archive---------1-----------------------#2023-06-21)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/developing-interactive-and-insightful-dashboards-with-spark-and-plotly-dash-5c0805341922?source=collection_archive---------1-----------------------#2023-06-21](https://towardsdatascience.com/developing-interactive-and-insightful-dashboards-with-spark-and-plotly-dash-5c0805341922?source=collection_archive---------1-----------------------#2023-06-21)
- en: Interactive Large-Scale Data Visualization for Web applications in Python
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用于 Python Web 应用的互动大型数据可视化
- en: '[](https://medium.com/@jadezhang244?source=post_page-----5c0805341922--------------------------------)[![Yu
    Huang, M.D., M.S. in CS](../Images/081af4b9fb5d1062b3e41b4cf54b2211.png)](https://medium.com/@jadezhang244?source=post_page-----5c0805341922--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5c0805341922--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5c0805341922--------------------------------)
    [Yu Huang, M.D., M.S. in CS](https://medium.com/@jadezhang244?source=post_page-----5c0805341922--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@jadezhang244?source=post_page-----5c0805341922--------------------------------)[![余黄，医学博士，计算机科学硕士](../Images/081af4b9fb5d1062b3e41b4cf54b2211.png)](https://medium.com/@jadezhang244?source=post_page-----5c0805341922--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5c0805341922--------------------------------)[![数据科学的未来](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5c0805341922--------------------------------)
    [余黄，医学博士，计算机科学硕士](https://medium.com/@jadezhang244?source=post_page-----5c0805341922--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F759013c23ad5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeveloping-interactive-and-insightful-dashboards-with-spark-and-plotly-dash-5c0805341922&user=Yu+Huang%2C+M.D.%2C+M.S.+in+CS&userId=759013c23ad5&source=post_page-759013c23ad5----5c0805341922---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----5c0805341922--------------------------------)
    ·11 min read·Jun 21, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5c0805341922&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeveloping-interactive-and-insightful-dashboards-with-spark-and-plotly-dash-5c0805341922&user=Yu+Huang%2C+M.D.%2C+M.S.+in+CS&userId=759013c23ad5&source=-----5c0805341922---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F759013c23ad5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeveloping-interactive-and-insightful-dashboards-with-spark-and-plotly-dash-5c0805341922&user=Yu+Huang%2C+M.D.%2C+M.S.+in+CS&userId=759013c23ad5&source=post_page-759013c23ad5----5c0805341922---------------------post_header-----------)
    发布于 [数据科学的未来](https://towardsdatascience.com/?source=post_page-----5c0805341922--------------------------------)
    ·11 分钟阅读·2023年6月21日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5c0805341922&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeveloping-interactive-and-insightful-dashboards-with-spark-and-plotly-dash-5c0805341922&user=Yu+Huang%2C+M.D.%2C+M.S.+in+CS&userId=759013c23ad5&source=-----5c0805341922---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5c0805341922&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeveloping-interactive-and-insightful-dashboards-with-spark-and-plotly-dash-5c0805341922&source=-----5c0805341922---------------------bookmark_footer-----------)![](../Images/a84741208d0c9d75f3aebf2c0c5744d0.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5c0805341922&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeveloping-interactive-and-insightful-dashboards-with-spark-and-plotly-dash-5c0805341922&source=-----5c0805341922---------------------bookmark_footer-----------)![](../Images/a84741208d0c9d75f3aebf2c0c5744d0.png)'
- en: Photo by Author
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 作者照片
- en: 1\. Introduction
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1. 介绍
- en: Cloud data lake is widely adopted by enterprise organizations as a scalable
    and low cost repository of all types (structured and unstructured) of data. There
    are many challenges in analyzing a large-scale dataset from data lake efficiently
    to gain meaningful insights for data-driven decision-making. One challenge is
    that the dataset size tends to be too big to fit in one single machine. A cluster
    of servers are typically required for handling a big dataset. Another challenge
    is how to share the results of data analysis on servers with related customers/share
    holders anywhere easily and cost effectively.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: This paper uses the same open source dataset as used in [1] to present an open-source
    based Web application framework for the development of interactive and insightful
    dashboards using Spark [2][3] and Plotly Dash[4]. This framework allows us to
    analyze and visualize large-scale dataset on servers and share the results of
    data analysis and visualization as dashboards anywhere.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: 'As shown in the Figure 1, the new Web application framework consists of three
    major components:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: Spark SQL service (e.g., DataFrame) for distributed data processing (see Section
    2)
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotly graphing service for creating data visualization graphs as dashboards
    (see Section 3)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dash Web service for interaction between server-side Plotly graphing service
    and the dashboard clients (see Section 4)
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/5ccf6f48b19b6c81bf5967746c48a31d.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
- en: '**Figure 1:** High-level application framework architecture.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Spark SQL Service for Distributed Data Processing
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As described in [2], PySpark (Python API for Spark) can be easily used to read
    *csv* files from Cloud data lake such as AWS S3\. For simplicity, it’s assumed
    in this paper that a dataset *csv* file *train_data.csv* [1] is available on local
    machine without loss of generality.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: 'The following code is to load the *csv* file into memory as a Spark SQL DataFrame:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: After loading data, a global temporary view can be created as follows for the
    convenience of dynamic data query.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Once the dataset view is created, we can use Spark SQL to query data like common
    data query from a database. As an example, the following code queries all of the
    rows from *dataset_view* where the age of people falls into the range of [21,
    30].
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In order to use Plotly to create data visualization graphs from a Spark DataFrame
    *sdf*, we must convert it into a Pandas DataFrame *pdf* because Plotly does not
    support Spark DataFrame directly.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 3\. Plotly for Creating Data Visualization Graphs
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Plotly supports generation of many different types of graphs. Some of them are
    suitable for creating graphs from continuous numeric features, while others are
    suitable for creating graphs from discrete categorical features.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: This paper uses Plotly Express library to create the following common diagrams
    for demonstration purpose.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: '**Graphs for numeric features:** scatter plot, histogram chart, and line chart'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Graphs for categorical features:** bar chart, histogram chart, line chart,
    and pie chart'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**3.1 Graphs for Numeric Features**'
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As described before, three of common graphs for numeric features are:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: scatter plot
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: histogram chart
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: line chart
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Given a pair of numeric features, scatter plot uses each pair of feature values
    as coordinates to draw a point on a 2D plane. As example, the following figure
    shows a scatter plot of two numeric features *Patient ID* and *Admission Deposit*
    for people from 21 to 30 years old. The feature *Type of Admission* is used for
    color coding.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b63e887e909c2f054cd2bac453813e63.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
- en: '**Figure 2:** Sample scatter plot for a pair of numeric features.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: Assuming that a dashboard user has selected age range [21, 30], a pair of numeric
    features *x* = *patientid* and *y* = *Admission_Deposit*, and *color* coding feature
    = *Type of Admission*, the following statement creates the above scatter plot.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Similarly, the following statement is to create a histogram of the same data:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/289d029f2adbe6cd802f307ab96fcf91.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
- en: '**Figure 3:** Sample histogram for a pair of numeric features.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: To be complete, the following statement is used to create a line chart.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/c2345109444641bd822b1efb276cdef2.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
- en: '**Figure 4:** Sample line chart for a pair of numeric features.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: Even though we can easily create a line chart, but a line chart like the one
    above does not reveal useful insights. A good use of line chart is to apply it
    to a dataset that is sorted in a meaningful way such as a time-ordered sequence
    of data or a list of feature values sorted by counts as shown in Section 3.2.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: '**3.2 Graphs for Categorical Features**'
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This subsection shows four of the common graphs for categorical features:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: bar chart
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: histogram chart
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: line chart
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pie chart
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Assuming that a dashboard user has selected *age* = [*21–30*], categorical *feature*
    = *Stay*, *color* = *purple*, *graph style* = *bar*, the following code can be
    used to generate the bar chart below.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: I noticed that a histogram chart has the same result as a bar chart for categorical
    feature value counts.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1b3fbc600a2ac8c2e18d2e98ec56c4e3.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
- en: '**Figure 5:** Sample bar chart for value counts of a categorical feature.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: 'We can create a line chart as follows by selecting *graph style* = *line*:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](../Images/af328602ed38d039677b2fdfe01445b3.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
- en: '**Figure 6:** Sample line chart for value counts of a categorical feature.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: As mentioned before, line chart is suitable for visualizing value counts of
    a categorical feature.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: The code below is to create a pie chart for the value counts of the same categorical
    feature of *Stay*.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This pie chart uses automatic color coding rather than the selected color *purple*.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/aaf6658b472f925ccc723375a2561dd5.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
- en: '**Figure 7:** Sample pie chart for value counts of a categorical feature.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Dash for Interactive Data Visualization
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The previous section describes how to create dashboards with different types
    of graphs using Plotly Express library on a cluster of Spark servers. This section
    shows how to use Dash to share dashboards with Web application clients and allow
    clients to use the dashboards to visualize data in various ways interactively.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: 'The following procedure can be followed to develop a one page dashboard of
    a Web application:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 1: import Dash library modules'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Step 2: create a Dash application object'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Step 3: define a dashboard layout of HTML page'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Step 4: define callback functions (Web service end points)'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Step 5: start server'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 4.1 Import Dash Library Modules
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As the first step, the Plotly Dash library modules are imported as follows for
    the purpose of demonstration in this paper.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 4.2 Create Dash Application Object
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'After importing library modules, the next step is to create a Dash application
    object:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 4.3 Define Dashboard Layout
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once a Dash application object is created, we need to define a dashboard layout
    as a HTML page.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: 'The dashboard HTML page is divided into two parts in this paper:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: 'Part 1: visualization of numeric features'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Part 2: visualization of categorical features'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Part 1 of the dashboard layout is defined as follows:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Figures 2, 3, and 4 are created by using Part 1 of the dashboard layout.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: 'Part 2 of the dashboard layout is defined as follows:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Figures 5, 6, and 7 are created by using Part 2 of the dashboard layout.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: 4.4 Define Callback Functions
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The dashboard layout only creates a static HTML page of a dashboard. Callback
    functions (i.e., Web service end points) must be defined so that a dashboard user’s
    action can be sent to a server-side callback function as a Web service request.
    In other words, callback functions enable interaction between dashboard users
    and server-side dashboard Web services such as creating a new graph upon user
    request (e.g., select a dropdown choice).
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: There are two callback functions defined in this paper for the two parts of
    the dashboard layout.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: 'The callback function for Part 1 of the dashboard layout is defined as follows:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The callback function for Part 2 of the dashboard layout is defined as follows:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Each callback function is associated with an annotation @*callback*. The annotation
    associated with a callback function controls which HTML components (e.g., dropdown)
    provide inputs to the callback function upon users’ request, and which HTML component
    (e.g., a graph within a *div* tag) receives the output of the callback function.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: 4.5 Start Server
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The final step of a Dash Web application is to start a Web service server as
    below:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The following diagram shows one scenario of the dashboard when a dashboard
    user has selected the following choices in the dashboard:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: '*age* from 21 to 30'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pair of numeric features *patientid* and *Admission_Deposit*
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: categorical feature *Type of Admission* for color coding of numeric features
    visualization
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*scatter* plot for numeric features visualization'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Categorical feature *Stay* for calculating featue value counts
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分类特征*停留时间*用于计算特征值计数
- en: Color *blue* for bar, histogram, and line chart
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 条形图、直方图和折线图的颜色为*蓝色*
- en: '*pie* graph with automatic color coding for visualization of categorical feature
    value counts'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*饼*图带有自动颜色编码，用于可视化分类特征值计数'
- en: '![](../Images/1efd5dc30411f2bb345f600955dd786a.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1efd5dc30411f2bb345f600955dd786a.png)'
- en: '**Figure 8:** One view of overall dashboard.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '**图8：** 总体仪表板的一个视图。'
- en: 'As an example of gaining possible useful insights, the above dashboard scenario
    reveals the following insights:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 作为获得可能有用见解的一个示例，上述仪表板场景揭示了以下见解：
- en: the majority of patients between 21–30 years old had a deposit between $3,000
    and $6,000 no matter how long they stayed in hospital
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大多数21-30岁的患者无论住院时间多长，其押金均在$3,000至$6,000之间
- en: the majority of patients between 21–30 years old stayed in hospital for 11–30
    days (27.6%) or 21–30 days (27.9%)
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大多数21-30岁患者的住院时间为11-30天（27.6%）或21-30天（27.9%）
- en: 'The figure below shows another scenario of the dashboard when a dashboard user
    has selected the following choices in the dashboard:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了当仪表板用户在仪表板中选择以下选项时的另一种场景：
- en: age from 21 to 30
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 年龄从21到30岁
- en: pair of numeric features *patientid* and *Admission_Deposit*
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数字特征对*patientid* 和 *Admission_Deposit*
- en: categorical feature *Type of Admission* for color coding of numeric features
    visualization
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于数字特征可视化的分类特征*入院类型*的颜色编码
- en: histogram for numeric features visualization
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数字特征的直方图可视化
- en: Categorical feature *Type of Admission*
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分类特征*入院类型*
- en: Color *green* for bar, histogram, and line chart
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 条形图、直方图和折线图的颜色为*绿色*
- en: bar chart for visualization of categorical feature value counts
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于可视化分类特征值计数的条形图
- en: '![](../Images/cce81db3eb4bc5e9c8a3b42564d3fa03.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cce81db3eb4bc5e9c8a3b42564d3fa03.png)'
- en: '**Figure 9:** Another view of the overall dashboard.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '**图9：** 总体仪表板的另一种视图。'
- en: 'As another example of gaining possible useful insights, the above dashboard
    scenario reveals the following insights:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 作为获得可能有用见解的另一个示例，上述仪表板场景揭示了以下见解：
- en: the patients in urgent care had a higher total deposit than patients in other
    types of admission
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 急诊患者的总押金高于其他入院类型的患者
- en: the majority of patients were admitted as trauma
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大多数患者是作为创伤患者入院的
- en: 'In summary, the dashboard allows a user to visualize data in flexible ways
    to gain various useful insights interactively, including:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，仪表板允许用户以灵活的方式互动式地可视化数据，获得各种有用的见解，包括：
- en: visualizing both numeric and categorical features in a given range of age such
    as 0–10, 11–20, …, etc.
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在给定年龄范围（如0-10岁、11-20岁等）中可视化数字和分类特征
- en: visualizing any pair of numeric features in scatter plots, histogram, and/or
    line chart
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在散点图、直方图和/或折线图中可视化任意一对数字特征
- en: using any categorical feature values for color coding for numeric features visualization
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用任何分类特征值进行数字特征可视化的颜色编码
- en: visualizing value counts of any categorical features as bar/histogram chart,
    line plot, and/or pie chart with different color coding
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将任何分类特征的值计数可视化为条形图/直方图、折线图和/或饼图，并进行不同的颜色编码
- en: 5\. Conclusion
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5. 结论
- en: This paper presented an open-source based Web application framework in Python
    for the development of interactive and insightful dashboards using Spark [3] and
    Plotly Dash[4]. This framework allows us to analyze large-scale dataset from Cloud
    data lake, create interactive dashboards on Spark servers, and allow users to
    interact with the dashboards anywhere to visualize data in flexible ways to gain
    various useful insights.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 本文介绍了一个基于开源的Python Web应用框架，用于开发使用Spark [3] 和Plotly Dash[4] 的互动式和洞察性的仪表板。该框架允许我们分析来自云数据湖的大规模数据集，在Spark服务器上创建互动式仪表板，并允许用户随时与仪表板互动，以灵活的方式可视化数据，获得各种有用的见解。
- en: References
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[1] Yu Huang, [Predicting Hospitalized Time of Covid-19 Patients](/predicting-hospitalized-time-of-covid-19-patients-f4e70456db9b)'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] Yu Huang, [预测Covid-19患者住院时间](/predicting-hospitalized-time-of-covid-19-patients-f4e70456db9b)'
- en: '[2] [PySpark AWS S3 Read Write Operations](https://towardsai.net/p/programming/pyspark-aws-s3-read-write-operations)'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] [PySpark AWS S3读写操作](https://towardsai.net/p/programming/pyspark-aws-s3-read-write-operations)'
- en: '[3] [Apache Spark examples](https://spark.apache.org/examples.html)'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '[3] [Apache Spark示例](https://spark.apache.org/examples.html)'
- en: '[4] [Dash Python User Guide](https://dash.plotly.com/?_gl=1*1wl0w5v*_ga*MTQ5MTkwNjIwMi4xNjg3MTkzNTM0*_ga_6G7EE0JNSC*MTY4NzIxNTgwOC4yLjAuMTY4NzIxNTgwOC4wLjAuMA..)'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
