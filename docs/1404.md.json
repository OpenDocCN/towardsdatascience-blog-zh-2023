["```py\nuse std::hint::black_box;\n\nfn fibonacci(n: u64) -> u64 {\n    match n {\n        1 | 0 => n,\n        _ => fibonacci(n - 1) + fibonacci(n - 2),\n    }\n}\n\nfn main() {\n    let mut total: f64 = 0.0;\n    for _ in 1..=20 {\n        let start = std::time::Instant::now();\n        black_box(fibonacci(black_box(40)));\n        let elapsed = start.elapsed().as_secs_f64();\n        total += elapsed;\n    }\n    let avg_time = total / 20.0;\n    println!(\"Average time taken: {} s\", avg_time);\n}\n\n// Average time taken: 0.3688494305 s\n```", "```py\n>>> import timeit\n>>> def fibonacci(n):\n… if n < 2:\n… return n\n… return fibonacci(n-1) + fibonacci(n-2)\n… \n>>> timeit.Timer(\"fibonacci(40)\", \"from __main__ import fibonacci\").timeit(number=1)\n22.262923367998155\n```", "```py\nfn add_numbers(a: i32, b: i32) -> i32 {\n    a + b\n}\n\nfn main() {\n    let a = 1;\n    let b = \"2\";\n    let sum = add_numbers(a, b); // Compile error:  expected `i32`, found `&str\n    println!(\"{} + {} = {}\", a, b, sum);\n}\n```", "```py\nfn main() {\n    let mut v = vec![1, 2, 3];\n    let first = v.get(0); // Compile error: immutable borrow occurs here\n    v.push(4); // Compile error: mutable borrow occurs here\n    println!(\"{:?}\", first); // Compile error: immutable borrow later used here\n}\n```", "```py\nuse std::thread;\n\nfn main() {\n    let mut handles = vec![];\n    let mut x = 0;\n    for i in 0..10 {\n        handles.push(thread::spawn(move || {\n            x += 1;\n            println!(\"Hello from thread {} with x = {}\", i, x);\n        }));\n    }\n    for handle in handles {\n        handle.join().unwrap();\n    }\n}\n\n// Output\n\n// Hello from thread 0 with x = 1\n// Hello from thread 1 with x = 1\n// Hello from thread 2 with x = 1\n// Hello from thread 4 with x = 1\n// Hello from thread 3 with x = 1\n// Hello from thread 5 with x = 1\n// Hello from thread 6 with x = 1\n// Hello from thread 7 with x = 1\n// Hello from thread 8 with x = 1\n// Hello from thread 9 with x = 1\n```", "```py\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain nightly\n```", "```py\ncargo install evcxr_jupyter\nevcxr_jupyter --install\n```", "```py\njupyter notebook\n```", "```py\n:dep polars = {version = \"0.28.0\"}\n```", "```py\nuse polars::prelude::*;\nuse polars::frame::DataFrame;\nuse std::path::Path;\n```", "```py\nfn read_data_frame_from_csv(\n    csv_file_path: &Path,\n) -> DataFrame {\n    CsvReader::from_path(csv_file_path)\n        .expect(\"Cannot open file.\")\n        .has_header(true)\n        .finish()\n        .unwrap()\n}\n\nlet iris_file_path: &Path = Path::new(\"dataset/Iris.csv\");\nlet iris_df: DataFrame = read_data_frame_from_csv(iris_file_path);\n```", "```py\nprintln!(\"{}\", iris_df.shape());\n```", "```py\n(150, 6)\n```", "```py\n iris_df.head(Some(5)) \n```", "```py\nshape: (5, 6)\n┌─────┬───────────────┬──────────────┬───────────────┬──────────────┬─────────────┐\n│ Id  ┆ SepalLengthCm ┆ SepalWidthCm ┆ PetalLengthCm ┆ PetalWidthCm ┆ Species     │\n│ --- ┆ ---           ┆ ---          ┆ ---           ┆ ---          ┆ ---         │\n│ i64 ┆ f64           ┆ f64          ┆ f64           ┆ f64          ┆ str         │\n╞═════╪═══════════════╪══════════════╪═══════════════╪══════════════╪═════════════╡\n│ 1   ┆ 5.1           ┆ 3.5          ┆ 1.4           ┆ 0.2          ┆ Iris-setosa │\n│ 2   ┆ 4.9           ┆ 3.0          ┆ 1.4           ┆ 0.2          ┆ Iris-setosa │\n│ 3   ┆ 4.7           ┆ 3.2          ┆ 1.3           ┆ 0.2          ┆ Iris-setosa │\n│ 4   ┆ 4.6           ┆ 3.1          ┆ 1.5           ┆ 0.2          ┆ Iris-setosa │\n│ 5   ┆ 5.0           ┆ 3.6          ┆ 1.4           ┆ 0.2          ┆ Iris-setosa │\n└─────┴───────────────┴──────────────┴───────────────┴──────────────┴─────────────┘\n```", "```py\niris_df.tail(Some(5));\n```", "```py\nshape: (5, 6)\n┌─────┬───────────────┬──────────────┬───────────────┬──────────────┬────────────────┐\n│ Id  ┆ SepalLengthCm ┆ SepalWidthCm ┆ PetalLengthCm ┆ PetalWidthCm ┆ Species        │\n│ --- ┆ ---           ┆ ---          ┆ ---           ┆ ---          ┆ ---            │\n│ i64 ┆ f64           ┆ f64          ┆ f64           ┆ f64          ┆ str            │\n╞═════╪═══════════════╪══════════════╪═══════════════╪══════════════╪════════════════╡\n│ 146 ┆ 6.7           ┆ 3.0          ┆ 5.2           ┆ 2.3          ┆ Iris-virginica │\n│ 147 ┆ 6.3           ┆ 2.5          ┆ 5.0           ┆ 1.9          ┆ Iris-virginica │\n│ 148 ┆ 6.5           ┆ 3.0          ┆ 5.2           ┆ 2.0          ┆ Iris-virginica │\n│ 149 ┆ 6.2           ┆ 3.4          ┆ 5.4           ┆ 2.3          ┆ Iris-virginica │\n│ 150 ┆ 5.9           ┆ 3.0          ┆ 5.1           ┆ 1.8          ┆ Iris-virginica │\n└─────┴───────────────┴──────────────┴───────────────┴──────────────┴────────────────┘\n```", "```py\niris_df.describe(None)\n```", "```py\nOk(shape: (9, 7)\n┌────────────┬───────────┬────────────┬───────────────┬──────────────┬──────────────┬──────────────┐\n│ describe   ┆ Id        ┆ SepalLengt ┆ SepalWidthCm  ┆ PetalLengthC ┆ PetalWidthCm ┆ Species      │\n│ ---        ┆ ---       ┆ hCm        ┆ ---           ┆ m            ┆ ---          ┆ ---          │\n│ str        ┆ f64       ┆ ---        ┆ f64           ┆ ---          ┆ f64          ┆ str          │\n│            ┆           ┆ f64        ┆               ┆ f64          ┆              ┆              │\n╞════════════╪═══════════╪════════════╪═══════════════╪══════════════╪══════════════╪══════════════╡\n│ count      ┆ 150.0     ┆ 150.0      ┆ 150.0         ┆ 150.0        ┆ 150.0        ┆ 150          │\n│ null_count ┆ 0.0       ┆ 0.0        ┆ 0.0           ┆ 0.0          ┆ 0.0          ┆ 0            │\n│ mean       ┆ 75.5      ┆ 5.843333   ┆ 3.054         ┆ 3.758667     ┆ 1.198667     ┆ null         │\n│ std        ┆ 43.445368 ┆ 0.828066   ┆ 0.433594      ┆ 1.76442      ┆ 0.763161     ┆ null         │\n│ …          ┆ …         ┆ …          ┆ …             ┆ …            ┆ …            ┆ …            │\n│ 25%        ┆ 38.25     ┆ 5.1        ┆ 2.8           ┆ 1.6          ┆ 0.3          ┆ null         │\n│ 50%        ┆ 75.5      ┆ 5.8        ┆ 3.0           ┆ 4.35         ┆ 1.3          ┆ null         │\n│ 75%        ┆ 112.75    ┆ 6.4        ┆ 3.3           ┆ 5.1          ┆ 1.8          ┆ null         │\n│ max        ┆ 150.0     ┆ 7.9        ┆ 4.4           ┆ 6.9          ┆ 2.5          ┆ Iris-virgini │\n│            ┆           ┆            ┆               ┆              ┆              ┆ ca           │\n└────────────┴───────────┴────────────┴───────────────┴──────────────┴──────────────┴──────────────┘\n```", "```py\nlet column_names = iris_df.get_column_names(); \n\n{\n    column_names\n}\n```", "```py\n[\"Id\", \"SepalLengthCm\", \"SepalWidthCm\", \"PetalLengthCm\", \"PetalWidthCm\", \"Species\"]\n```", "```py\nprintln!(\"{}\", numeric_iris_df.mean());\n```", "```py\nshape: (1, 5)\n┌──────┬───────────────┬──────────────┬───────────────┬──────────────┐\n│ Id   ┆ SepalLengthCm ┆ SepalWidthCm ┆ PetalLengthCm ┆ PetalWidthCm │\n│ ---  ┆ ---           ┆ ---          ┆ ---           ┆ ---          │\n│ f64  ┆ f64           ┆ f64          ┆ f64           ┆ f64          │\n╞══════╪═══════════════╪══════════════╪═══════════════╪══════════════╡\n│ 75.5 ┆ 5.843333      ┆ 3.054        ┆ 3.758667      ┆ 1.198667     │\n└──────┴───────────────┴──────────────┴───────────────┴──────────────┘\n```", "```py\nprintln!(\"{}\", numeric_iris_df.max());\n```", "```py\nshape: (1, 5)\n┌─────┬───────────────┬──────────────┬───────────────┬──────────────┐\n│ Id  ┆ SepalLengthCm ┆ SepalWidthCm ┆ PetalLengthCm ┆ PetalWidthCm │\n│ --- ┆ ---           ┆ ---          ┆ ---           ┆ ---          │\n│ i64 ┆ f64           ┆ f64          ┆ f64           ┆ f64          │\n╞═════╪═══════════════╪══════════════╪═══════════════╪══════════════╡\n│ 150 ┆ 7.9           ┆ 4.4          ┆ 6.9           ┆ 2.5          │\n└─────┴───────────────┴──────────────┴───────────────┴──────────────┘\n```", "```py\nlet numeric_iris_ndarray: ArrayBase<_, _> = numeric_iris_df.to_ndarray::<Float64Type>().unwrap();\nnumeric_iris_ndarray\n```", "```py\n[[1.0, 5.1, 3.5, 1.4, 0.2],\n [2.0, 4.9, 3.0, 1.4, 0.2],\n [3.0, 4.7, 3.2, 1.3, 0.2],\n [4.0, 4.6, 3.1, 1.5, 0.2],\n [5.0, 5.0, 3.6, 1.4, 0.2],\n ...,\n [146.0, 6.7, 3.0, 5.2, 2.3],\n [147.0, 6.3, 2.5, 5.0, 1.9],\n [148.0, 6.5, 3.0, 5.2, 2.0],\n [149.0, 6.2, 3.4, 5.4, 2.3],\n [150.0, 5.9, 3.0, 5.1, 1.8]], shape=[150, 5], strides=[1, 150], layout=Ff (0xa), const ndim=2\n```", "```py\narray![[1.,2.,3.], [4.,5.,6.]]\n// or\narr2(&[[1.,2.,3.], [4.,5.,6.]])\n```", "```py\nArray::range(0., 10., 0.5) //  0.0, 0.5, 1.5 ... 9.5\n```", "```py\nArray::linspace(0., 10., 11)\n```", "```py\nArray::ones((3, 4, 5))\n```", "```py\nArray::zeros((3, 4, 5))\n```", "```py\nArray::eye(3)\n```", "```py\narr[arr.len() - 1]\n```", "```py\narr[[1, 4]]\n```", "```py\narr.slice(s![0..5, ..])\n// or\narr.slice(s![..5, ..])\n// or\narr.slice_axis(Axis(0), Slice::from(0..5))\n```", "```py\narr.slice(s![-5.., ..])\n// or\narr.slice_axis(Axis(0), Slice::from(-5..))\n```", "```py\narr.sum()\n```", "```py\n// first axis\narr.sum_axis(Axis(0))\n// second axis\narr.sum_axis(Axis(1))\n```", "```py\narr.mean().unwrap()\n```", "```py\narr.t()\n// or\narr.reversed_axes()\n```", "```py\nmat1.dot(&mat2)\n```", "```py\ndata_2D.mapv(f32::sqrt)\n```", "```py\n&a + 1.0\n&mat1 + &mat2\n&mat1_2D + &mat2_1D\n```", "```py\n:dep plotters = { version = \"^0.3.0\", default_features = false, features = [\"evcxr\", \"all_series\"] }\n```", "```py\ndefault_features = false, features = [\"evcxr\", \"all_series\"]\n```", "```py\nlet sepal_samples:Vec<(f64,f64)> = {\n    let sepal_length_cm: DataFrame = iris_df.select(vec![\"SepalLengthCm\"]).unwrap();\n    let mut sepal_length = sepal_length_cm.to_ndarray::<Float64Type>().unwrap().into_raw_vec().into_iter();\n    let sepal_width_cm: DataFrame = iris_df.select(vec![\"SepalWidthCm\"]).unwrap();\n    let mut sepal_width = sepal_width_cm.to_ndarray::<Float64Type>().unwrap().into_raw_vec().into_iter();\n    sepal_width.zip(sepal_length).collect()\n};\n```", "```py\nevcxr_figure((640, 480), |root| {\n    let mut chart = ChartBuilder::on(&root)\n        .caption(\"Iris Dataset\", (\"Arial\", 30).into_font())\n        .x_label_area_size(40)\n        .y_label_area_size(40)\n        .build_cartesian_2d(1f64..5f64, 3f64..9f64)?;\n\n    chart.configure_mesh()\n        .x_desc(\"Sepal Length (cm)\")\n        .y_desc(\"Sepal Width (cm)\")\n        .draw()?;\n\n    chart.draw_series(sepal_samples.iter().map(|(x, y)| Circle::new((*x,*y), 3, BLUE.filled())));\n\n    Ok(())\n}).style(\"width:60%\")\n```"]