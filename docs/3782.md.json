["```py\n# ----- see appendix for package imports\ndf = pd.read_csv(\"https://osf.io/6mx3e/download\")  # download data\n```", "```py\n+------+-------------+--------------+--------------+------------+-----------+\n| Year | Decimal DOY | NW dew/frost | SW dew/frost | NW precip  | SW precip |\n+------+-------------+--------------+--------------+------------+-----------+\n| 2019 | 59.73958    | 0            | 0            | 0          | 0         |\n| 2019 | 59.74999    | 0            | 0            | 0.06159032 | 0         |\n| 2019 | 59.76041    | 0            | 0            | 0          | 0         |\n| 2019 | 59.77083    | 0            | 0            | 0.05895544 | 0.0813772 |\n| 2019 | 59.78124    | 0            | 0            | 0.05236824 | 0.0757349 |\n+ ...  +     ...     +      ...     +      ...     +     ...    +    ...    +\n```", "```py\nnwls = \"NW Lysimeter\\n(35.18817624째N, -102.09791째W)\"\nswls = \"SW Lysimeter\\n(35.18613985째N, -102.0979187째W)\"\ndf[nwls], df[swls] = df[\"NW precip in mm\"], df[\"SW precip in mm\"]\n\n# filter down to just data from March 2019\nmarch_df = df[np.clip(df[\"Decimal DOY\"], 59, 90) == df[\"Decimal DOY\"]]\n```", "```py\ngrid = otst.OutsetGrid(  # initialize axes grid manager\n    data=[\n        # (x0, y0, x1, y1) regions to outset\n        (71.6, 0, 72.2, 2),  # little shower around day 72\n        (59, 0, 90, 0.2),  # all light precipitation events\n        (81.3, 0, 82.2, 16),  # big rainstorm around day 82\n    ],\n    x=\"Time\",  # axes label\n    y=\"Precipitation (mm)\",  # axes label\n    aspect=2,  # make subplots wide\n    col_wrap=2,  # wrap subplots into a 2x2 grid\n    # styling for zoom indicator annotations, discussed later\n    marqueeplot_kws={\"frame_outer_pad\": 0, \"mark_glyph_kws\": {\"zorder\": 11}},\n    marqueeplot_source_kws={\"zorder\": 10, \"frame_face_kws\": {\"zorder\": 10}},\n)\n```", "```py\n# draw semi-transparent filled lineplot on all axes for each lysimeter\nfor y, color in zip([nwls, swls], [\"fuchsia\", \"aquamarine\"]):\n    grid.broadcast(\n        plt.stackplot,  # plotter\n        march_df[\"Decimal DOY\"],  # all kwargs below forwarded to plotter...\n        march_df[y],\n        colors=[color],\n        labels=[y],\n        lw=2,\n        edgecolor=color,\n        alpha=0.4,  # set to 60% transparent (alpha 1.0 is non-transparent)\n        zorder=10,\n    )\n```", "```py\ngrid.broadcast(\n    plt.stackplot,  # plotter\n    march_df[\"Decimal DOY\"],  # all kwargs below forwarded to plotter...\n    np.maximum(march_df[\"SW precip in mm\"], march_df[\"NW precip in mm\"]),\n    colors=[\"white\"],\n    lw=20,  # thick line width causes protrusion of white border\n    edgecolor=\"white\",\n    zorder=9,  # note lower zorder positions underlay below stackplots\n)\n```", "```py\n# draw \"marquee' zoom indicators showing correspondences between main plot\n# and outset plots\ngrid.marqueeplot(equalize_aspect=False)  # allow axes aspect ratios to vary\n```", "```py\ngrid.source_axes.legend(  # add legend to primary axes\n    loc=\"upper left\",\n    bbox_to_anchor=(0.02, 1.0),  # legend positioning\n    frameon=True,  # styling: turn on legend frame\n)\n\n# ----- see appendix for code to relabel axes ticks with timestamps\n```", "```py\notst.inset_outsets(\n    grid,\n    insets=otst_util.layout_corner_insets(\n        3,  # three insets\n        \"NW\",  # arrange in upper-left corner\n        inset_margin_size=(0.02, 0),  # allow closer to main axes bounds\n        inset_grid_size=(0.67, 0.9),  # grow to take up available space\n    ),\n    equalize_aspect=False,\n)\nsns.move_legend(  # move legend centered above figure\n    grid.source_axes, \"lower center\", bbox_to_anchor=(0.5, 1.1), ncol=2\n)\n```", "```py\npython3 -m pip install \\\n    matplotlib `# ==3.8.2`\\\n    numpy `# ==1.26.2` \\\n    outset `# ==0.1.6` \\\n    opytional `# ==0.1.0` \\\n    pandas `# ==2.1.3` \\\n    seaborn `# ==0.13.0`\n```"]