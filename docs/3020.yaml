- en: What to Bring? — Item Suggestions with Collaborative Filtering
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/what-to-bring-item-suggestions-with-collaborative-filtering-6cd260984330?source=collection_archive---------11-----------------------#2023-10-03](https://towardsdatascience.com/what-to-bring-item-suggestions-with-collaborative-filtering-6cd260984330?source=collection_archive---------11-----------------------#2023-10-03)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Personalized item suggestions with actual data for a real case
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@malte.?source=post_page-----6cd260984330--------------------------------)[![Malte
    Bleeker](../Images/50489a35621cf1fac7a9876c3241c028.png)](https://medium.com/@malte.?source=post_page-----6cd260984330--------------------------------)[](https://towardsdatascience.com/?source=post_page-----6cd260984330--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----6cd260984330--------------------------------)
    [Malte Bleeker](https://medium.com/@malte.?source=post_page-----6cd260984330--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb3f789fe994b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-to-bring-item-suggestions-with-collaborative-filtering-6cd260984330&user=Malte+Bleeker&userId=b3f789fe994b&source=post_page-b3f789fe994b----6cd260984330---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----6cd260984330--------------------------------)
    ·7 min read·Oct 3, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F6cd260984330&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-to-bring-item-suggestions-with-collaborative-filtering-6cd260984330&user=Malte+Bleeker&userId=b3f789fe994b&source=-----6cd260984330---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F6cd260984330&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-to-bring-item-suggestions-with-collaborative-filtering-6cd260984330&source=-----6cd260984330---------------------bookmark_footer-----------)![](../Images/7d455fc9e6391b6223cad05d9e566cba.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: Item Suggestions (image by author)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: 'A birthday party, a trip together, or the summer gathering with one’s local
    sports club - events like these are great until one''s own contribution to the
    preparation is required. It often starts with a highly devoted person who takes
    the initiative and gets things started, but sooner or later, and with the number
    of items that have already been committed continuously increasing, one also has
    to ask the question: What will I bring to the table?'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: Lists of items that are commonly brought to any type of such events have been
    created in abundance and still, it is always a struggle to come up with a suitable
    idea that relieves yourself at least of the social obligation (most commonly by
    defaulting on the silver bullet, a bottle of wine). Thanks to the availability
    of hundreds of thousands of such lists due to a web application of ours, we were
    able to tackle this challenge by turning it into the quest of suggesting promising
    items to users, based on the already existing items in a list.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 各种类型的活动中常见的物品列表已被大量创建，但总是很难想到一个合适的主意来至少免除你一定的社交义务（通常通过默认的“灵丹妙药”，一瓶酒）。由于我们的网络应用提供了数以万计的此类列表，我们能够通过将其转化为基于已存在列表中的项目来建议有前景的项目，从而应对这一挑战。
- en: We approached the challenge by utilizing similarities between the ~100k lists
    in our database and the current list of interest to a user. The utilization of
    such list-to-list similarities and the subsequent recommendation/suggestion of
    suitable items is also called collaborative filtering, given that the goal is
    to filter the list of a gazillion different items in the database that could be
    suggested, to just a few most suitable (okay, actually its just about 100k different
    items in our case). The analogous case that can be often found for e.g. book or
    movie recommendation systems is pursuing a similar goal by utilizing the similarity
    between what users have watched (in our case, which items have been added to a
    list) to suggest movies a user might have missed out on so far and that have been
    watched by similar users (in our case items that have commonly been added to similar
    lists).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过利用数据库中约10万份列表与用户当前感兴趣的列表之间的相似性来应对这个挑战。利用这种列表与列表之间的相似性，进而推荐合适的项目，也被称为协同过滤，因为目标是将数据库中可能推荐的海量不同项目过滤成仅几个最合适的（实际上在我们的情况下大约是10万种不同的项目）。类似的情况通常可以在如书籍或电影推荐系统中找到，通过利用用户已经观看的内容（在我们的例子中是已添加到列表中的项目）来推荐用户可能错过的电影，这些电影被类似用户观看过（在我们的例子中是已被添加到类似列表中的项目）。
- en: '**How does it work? — A simple explanation**'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**它是如何工作的？ — 一个简单的解释**'
- en: The first step is to create a table with the lists (IDs) as the rows and all
    item names as columns. When all our lists would contain only 20 unique words,
    we would therefore only need 20 columns and the number of rows would equal the
    number of lists. Whenever a word is contained in a list, we add the value “1”
    in the corresponding column and row, and if a word is not contained in a list
    a “0” (in text analysis this is also known as Bag of Words). We do the same for
    the list we would like to make suggestions for.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是创建一个表格，行是列表（ID），列是所有项目名称。当我们的所有列表仅包含20个唯一单词时，我们只需要20列，行数等于列表的数量。每当一个单词出现在列表中时，我们就在相应的列和行中添加值“1”，如果一个单词不在列表中则添加“0”（在文本分析中也称为词袋模型）。我们对要进行建议的列表做相同的操作。
- en: '![](../Images/d441ee6f4c06e5a33309828270691aea.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d441ee6f4c06e5a33309828270691aea.png)'
- en: A simple illustration of the list-item matrix (image by author)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 列表-项目矩阵的简单示意图（作者提供的图片）
- en: '*For movie or book recommendations, the same procedure would be applied, but
    the columns would contain the different movies or books in the database, the rows
    would contain the different users (IDs), and the values could indicate whether
    a book has been read or if and how it has been rated.*'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '*对于电影或书籍推荐，采用相同的程序，但列会包含数据库中不同的电影或书籍，行会包含不同的用户（ID），值可以指示一本书是否已被阅读，或者它是否以及如何被评分。*'
- en: 'Optional: Corresponding Python Code (Step 1)'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 可选：相应的 Python 代码（步骤 1）
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This brings our data in a suitable format, ready for the second step — the calculation
    of the similarity between the lists in our database and the list we would like
    to suggest some items for. One of the most commonly applied methods to measure
    the similarity between two rows (vectors) is the “Cosine Distance” or “Cosine
    Similarity”. It’s calculated with the dot product of both rows, divided by the
    regular product of the magnitude of both vectors. The graphic below should make
    this calculation more understandable, but the focus here is on an intuitive understanding
    of the cosine distance and I refer you to [this article](https://cmry.github.io/notes/euclidean-v-cosine)
    for any mathematical subtleties. Please also consider the code chunks below as
    an optional, but supplementary side dish.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/70f70af134873cccb4714241bb4566c6.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
- en: Calculation of the cosine similarity between two lists/vectors (image by author)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: 'If for example, two lists would be exactly similar, they would have a cosine
    similarity of 1, lists that have no words in common a similarity of 0, and with
    at least some words in common a similarity of 0 < x < 1. **The higher the cosine
    similarity value, the more similar the list in the database to our list of interest.**
    With this in mind, we can calculate the similarity of our list with all other
    lists in the table, getting a similarity score for each row. Next, we sort these
    rows and extract the most similar rows, either based on a predefined number (e.g.
    most similar 50 lists) or on a similarity threshold (e.g. > 0.6). In our case,
    the similarity scores varied a lot depending on the number of items in the list
    of interest and its specific use case, so we resorted to the utilization of the
    hundred most similar lists for simplicity (A rule of thumb: The more lists we
    select here, the more stable, but also generic will our suggestions be). We can
    now create a copy of our original list-word table, containing only the 100 most
    similar lists inside.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: 'Optional: Corresponding Python Code (Step 2)'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Once this is done, it’s time to identify the most promising items in these similar
    lists. First, we check the already existing items in our list of interest and
    delete the corresponding items (columns) from the table (we assume in this case
    that the user wouldn’t like to get an already included item suggested). Next,
    the simplest approach would have been to check which words occur the most in these
    similar lists and suggest those in decreasing order. This however would have given
    the same weight to a word in the 99th most similar list as is given to the most
    similar list. To adjust for this the rows are multiplied with the corresponding
    similarity score that was calculated before. As a result, the values in the rows
    (now between 0 and 1) are significantly smaller for the 99th most similar row
    compared to the most similar row. Based upon this, the weighted sum of each column
    (item) can be calculated and the item with the highest score can be suggested.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，接下来是识别这些相似列表中最有前景的条目。首先，我们检查感兴趣列表中已存在的条目，并从表格中删除相应的条目（列）（我们假设在这种情况下用户不希望得到已包含的条目建议）。接下来，最简单的方法是检查这些相似列表中出现频率最高的词，并按降序建议这些词。然而，这样做会对第99个最相似列表中的词和最相似列表中的词给予相同的权重。为了解决这个问题，行会乘以之前计算的相似度分数。因此，第99个最相似行的值（现在介于0和1之间）相比最相似行显著较小。基于此，可以计算每列（条目）的加权总和，并建议得分最高的条目。
- en: 'Optional: Corresponding Python Code (Step 3)'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 可选：对应的 Python 代码（步骤 3）
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: That’s already it – enough data in combination with just a simple, but powerful
    calculation like the Cosine Similarity can enable us to generate suitable personalized
    suggestions and recommendations. In the following, I´d like to show you the results
    of three suggestion simulations, with only a few items in the lists yet (items
    and lists are mostly translated from German … so please apologize if some item
    picks might feel weird to you).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样了——结合少量数据和简单而强大的计算，如余弦相似度，可以生成合适的个性化建议和推荐。接下来，我将向你展示三次建议模拟的结果，列表中条目还很少（条目和列表大多是从德语翻译过来的……如果有些条目选择对你来说感觉怪异，请见谅）。
- en: '![](../Images/4f3fb56fcb0bda9e91018b62211b0e9a.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4f3fb56fcb0bda9e91018b62211b0e9a.png)'
- en: Simulation of personalized item suggestions for three lists (author by image)
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 三个列表的个性化条目建议模拟（图片作者）
- en: As can be seen, just a few items are enough to generate personalized item suggestions
    that reflect the underlying theme of the list — suggestions that get even more
    specific once the most common items for a specific type of event are taken care
    of.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，几个条目就足以生成反映列表基础主题的个性化建议——一旦处理了特定事件类型的最常见条目，建议会变得更加具体。
- en: 'Some additional notes: To prevent the recommendation of item names that are
    very specific or possibly even contain any personal information we only included
    items (columns) that occurred at least across 20 different lists. We also excluded
    lists that contained less than 3 items. The list suggestion feature is not deployed
    in a production environment but has so far only been simulated and tested with
    the actual data in a Jupyter Notebook as described and tested within this article.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 一些额外说明：为了防止推荐非常具体的条目名称或可能包含个人信息的条目，我们仅包括在至少20个不同列表中出现的条目（列）。我们还排除了包含少于3个条目的列表。列表建议功能尚未部署到生产环境中，而只是模拟并在本文描述和测试的
    Jupyter Notebook 中测试过。
- en: Thank you for your interest in this article and I highly appreciate all types
    of feedback — I wish you all the best and stay curious.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢你对这篇文章的关注，我非常感激所有类型的反馈——祝你一切顺利，保持好奇。
