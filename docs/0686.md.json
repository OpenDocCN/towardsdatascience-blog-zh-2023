["```py\nname: data upload to azure\n\nenv:\n  ticker: WIPRO.NS\n  start: 366\n  end: 1\n\non:\n  schedule:\n    - cron: \"1 1 * * 1\"\n\njobs:\n  datawork:\n    runs-on: ubuntu-latest\n    steps:\n    - name: checkout repository\n      uses: actions/checkout@v2\n      with:\n        token: ${{ secrets.PAT }}\n        repository: 'coderkol95/MLOps_stock_prediction'\n    - name: setup python 3.9\n      uses: actions/setup-python@v4\n      with: \n        python-version: \"3.9\"\n    - name: install python packages\n      run: |\n        python -m pip install --upgrade pip\n        pip install -r requirements.txt\n    - name: download ticker data and update yml file\n      run: python data_download.py --ticker $ticker --start $start --end $end\n      id: data\n      working-directory: jobs\n    - name: edit yaml files\n      run: python update_training_yamls.py\n      working-directory: jobs\n    - name: push files to github\n      run: |\n        git config --local user.email \"action@github.com\"\n        git config --local user.name \"GitHub Action\"\n        git add -A\n        git commit -m \"Ticker data for $ticker downloaded and YAML file updated.\" || exit 0\n        git push @github.com/${GITHUB_REPOSITORY}.git\">https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git HEAD\n      env:\n        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n    - name: azure login\n      uses: azure/login@v1\n      with:\n        creds: ${{secrets.AZURE_CREDENTIALS}}\n    - name: setup\n      run: bash setup.sh\n      working-directory: cli\n      continue-on-error: true\n    - name: upload to azure\n      run: az ml data create -f jobs/data_upload.yml\n```", "```py\nname: training and registering model\n\nenv:\n  job_name: ga-run-10\n  compute_name: computer456\n  registered_model_name: GA_model\n\non:\n    schedule:\n    - cron: \"1 2 * * 1\"\n\njobs:\n  train-job:\n    runs-on: ubuntu-latest\n    steps:\n    - name: check out repo\n      uses: actions/checkout@v2\n    - name: azure login\n      uses: azure/login@v1\n      with:\n        creds: ${{secrets.AZURE_CREDENTIALS}}\n    - name: setup\n      run: bash setup.sh\n      working-directory: cli\n      continue-on-error: true\n    - name: create-compute\n      run: az ml compute create --name $compute_name --size STANDARD_DS11_v2 --min-instances 1 --max-instances 2 --type AmlCompute\n    - name: train-job\n      working-directory: jobs\n      run: az ml job create --file train.yml --debug --stream # --stream causes the step to go on, as long as the model trains.\n# If training is expected to take a long time, registration can be scheduled in a separate cron job, triggered later.\n  register-job:\n    needs: [train-job]\n    runs-on: ubuntu-latest\n    steps:\n    - name: check out repo\n      uses: actions/checkout@v2\n    - name: azure login\n      uses: azure/login@v1\n      with:\n        creds: ${{secrets.AZURE_CREDENTIALS}}\n    - name: setup\n      run: bash setup.sh\n      working-directory: cli\n      continue-on-error: true\n    - name: register-model\n      run: az ml model create\n        --name $registered_model_name \n        --version 10\n        --path azureml://jobs/ga-run-10/outputs/artifacts/paths/outputs/\n        --type custom_model\n\n  delete-compute:\n    needs: [train-job]\n    runs-on: ubuntu-latest\n    steps:\n    - name: check out repo\n      uses: actions/checkout@v2\n    - name: azure login\n      uses: azure/login@v1\n      with:\n        creds: ${{secrets.AZURE_CREDENTIALS}}\n    - name: setup\n      run: bash setup.sh\n      working-directory: cli\n      continue-on-error: true\n    - name: delete-step\n      run: az ml compute delete --name $compute_name --yes\n```", "```py\nname: model deployment\non:\n  schedule:\n    - cron: \"1 3 * * 1\"\njobs:\n  # compare-job:\n  #  Compare if the model is good enough\n  #  Profile the model\n  #  If it is good enough, proceed to next step \n  deployment-job:\n    runs-on: ubuntu-latest\n    steps:\n    - name: check out repo\n      uses: actions/checkout@v2\n    - name: azure login\n      uses: azure/login@v1\n      with:\n        creds: ${{secrets.AZURE_CREDENTIALS}}\n    - name: setup\n      run: bash setup.sh\n      working-directory: cli\n      continue-on-error: true\n    # Commenting out as endpoint creation is only needed during the first run\n    # - name: create-endpoint\n    #   run: az ml online-endpoint create --name ga-deployment\n    - name: deployment-step\n      run: az ml online-deployment update -f deploy.yml #--all-traffic # First time it'll be az ml ... create --all-traffic\n      working-directory: jobs\n```", "```py\nGROUP=\"RG\"\nLOCATION=\"eastus\"\nWORKSPACE=\"AzureMLWorkspace\"\n\naz configure --defaults group=$GROUP workspace=$WORKSPACE location=$LOCATION\n\naz extension remove -n ml\naz extension add -n ml\n```", "```py\n$schema: https://azuremlschemas.azureedge.net/latest/data.schema.json\n\ntype: uri_file\nname: 'WIPRO'\ndescription: Stock data for WIPRO.NS during 2022-02-14:2023-02-13 in 1d interval.\npath: '../data/WIPRO.NS.csv'\ntags: {'Length': 249, 'Start': '2022-02-14', 'End': '2023-02-13', 'Median': 413.7, 'SD': 69.09}\nversion: 20230215\n```", "```py\n$schema: https://azuremlschemas.azureedge.net/latest/managedOnlineDeployment.schema.json\nname: green\nendpoint_name: ga-deployment\nmodel: azureml:GA_model:10\ncode_configuration:\n  code: ../jobs\n  scoring_script: deployment.py\nenvironment: azureml:stock-pricing:5\ninstance_type: Standard_DS1_v2\ninstance_count: 1\n```", "```py\n$schema: https://azuremlschemas.azureedge.net/latest/commandJob.schema.json\nname: ga-run-10\ntags:\n    modeltype: pytorch\ncode: ../jobs\ncommand: >-\n  python train.py \n  --data ${{inputs.data}}\ninputs:\n  data:\n    type: uri_file\n    path: azureml:WIPRO@latest\nenvironment: azureml:stock-pricing:4\ncompute: azureml:computer456\ndisplay_name: stock\nexperiment_name: ga_train_job\ndescription: Training job via Github actions\n```"]