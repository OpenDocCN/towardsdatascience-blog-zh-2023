["```py\n Satisfaction  Time_spent  Country\n0      2.140440    1.585295        0\n1      2.053545    0.636235        0\n2      1.589258    1.468033        1\n3      1.853545    0.968651        2\n4      1.449286    0.967104        2\n.      .            .              .\n.      .            .              .\n.      .            .              .\n```", "```py\nimport statsmodels.api as sm\nresult = sm.OLS(df[\"Satisfaction\"], sm.add_constant(df[\"Time_spent\"])).fit()\nprint(result.params)\n```", "```py\nconst         3.229412\nTime_spent   -0.655470\n```", "```py\nimport statsmodels.formula.api as smf\n\nresult = smf.mixedlm(\"Satisfaction ~ Time_spent\", data=df, groups=df[\"Country\"], re_formula=\"Time_spent\").fit()\nprint(result.fe_params)\nprint(result.random_effects)\n```", "```py\n Fixed effects\n  Intercept     2.286638\n  Time_spent    0.497657\nRandom Effects\n  {0: Group -0.958805, Time_spent -0.018178,\n   1: Group 0.155233,  Time_spent 0.274222,\n   2: Group 0.803572,  Time_spent -0.256044}\n```", "```py\nsatisfaction_0 = (2.286638 - 0.958805) + (0.497657 - 0.018178) * time_spent = 1.327833 + 0.479479 * time_spent\nsatisfaction_1 = (2.286638 + 0.155233) + (0.497657 + 0.274222) * time_spent = 2.441871 + 0.771879 * time_spent\nsatisfaction_2 = (2.286638 + 0.803572) + (0.497657 - 0.256044) * time_spent = 3.090210 + 0.241613 * time_spent\n```", "```py\nimport numpy as np\nimport pandas as pd\ngroup_1_x = np.random.uniform(0.5, 1.8, 25)\ngroup_1_y = (1 + 0.3 * group_1_x) + np.random.rand(len(group_1_x))\n\n#start_2, end_2, step_2 = 0.3, 1.3, 0.04\ngroup_2_x = np.random.uniform(0.3, 1.3, 22)\ngroup_2_y = (2 + 0.7*group_2_x) + np.random.rand(len(group_2_x))\n\n#start_3, end_3, step_3 = 0, 1, 0.04\ngroup_3_x = np.random.uniform(0, 1, 32)\ngroup_3_y = (2.5 + 0.3*group_3_x) + np.random.rand(len(group_3_x))\n\nall_x = np.concatenate([group_1_x, group_2_x, group_3_x])\nall_y = np.concatenate([group_1_y, group_2_y, group_3_y])\ndf = pd.DataFrame({\"Satisfaction\": all_y, \"Time_spent\":all_x, \"Country\":[0]*len(group_1_x) + [1]*len(group_2_x) + [2]*len(group_3_x)})\n```"]