- en: Don’t Forget That Python Is Dynamic!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/dont-forget-that-python-is-dynamic-e298e2a30118?source=collection_archive---------14-----------------------#2023-06-13](https://towardsdatascience.com/dont-forget-that-python-is-dynamic-e298e2a30118?source=collection_archive---------14-----------------------#2023-06-13)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: PYTHON PROGRAMMING
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: More and more static and dynamic checks… Is it where we want Python to head?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@nyggus?source=post_page-----e298e2a30118--------------------------------)[![Marcin
    Kozak](../Images/d7faf62e48ed81dab5d8ad92819fff54.png)](https://medium.com/@nyggus?source=post_page-----e298e2a30118--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e298e2a30118--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e298e2a30118--------------------------------)
    [Marcin Kozak](https://medium.com/@nyggus?source=post_page-----e298e2a30118--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4762f0cff9b2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdont-forget-that-python-is-dynamic-e298e2a30118&user=Marcin+Kozak&userId=4762f0cff9b2&source=post_page-4762f0cff9b2----e298e2a30118---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e298e2a30118--------------------------------)
    ·8 min read·Jun 13, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe298e2a30118&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdont-forget-that-python-is-dynamic-e298e2a30118&user=Marcin+Kozak&userId=4762f0cff9b2&source=-----e298e2a30118---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe298e2a30118&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdont-forget-that-python-is-dynamic-e298e2a30118&source=-----e298e2a30118---------------------bookmark_footer-----------)![](../Images/6da0e0a508c5e05c453414dadb108c73.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Where does Python head to? Photo by [Jamie Templeton](https://unsplash.com/@jamietempleton?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Python is a dynamic language. Over recent years, however, more and more focus
    has been paid to static type checking. This, in turn, leads to an increased interest
    in runtime type checking. How far will we go with that? In this article, we will
    recall why Python was, not that long ago, considered a powerful dynamically typed
    programming language.
  prefs: []
  type: TYPE_NORMAL
- en: Is it still?
  prefs: []
  type: TYPE_NORMAL
- en: 'Python’s strength has always lied in its simplicity, which, at least partially,
    resulted from dynamic typing, not only because we can write Python code in REPL,
    but also for the following reasons:'
  prefs: []
  type: TYPE_NORMAL
- en: You can easily change a variable’s type throughout a program.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You do not have to define the type of a variable.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code is (or can be) easy to read and understand.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sometimes, you can use a couple of lines of code in order to implement even
    quite a complex algorithm. A statically typed language usually needs much more
    — or at least more — lines of code.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sure, dynamic typing does not come without cost. The first one is decreased
    performance, something we all know. This decrease…
  prefs: []
  type: TYPE_NORMAL
