- en: Don’t Forget That Python Is Dynamic!
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 别忘了 Python 是动态的！
- en: 原文：[https://towardsdatascience.com/dont-forget-that-python-is-dynamic-e298e2a30118?source=collection_archive---------14-----------------------#2023-06-13](https://towardsdatascience.com/dont-forget-that-python-is-dynamic-e298e2a30118?source=collection_archive---------14-----------------------#2023-06-13)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/dont-forget-that-python-is-dynamic-e298e2a30118?source=collection_archive---------14-----------------------#2023-06-13](https://towardsdatascience.com/dont-forget-that-python-is-dynamic-e298e2a30118?source=collection_archive---------14-----------------------#2023-06-13)
- en: PYTHON PROGRAMMING
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PYTHON 编程
- en: More and more static and dynamic checks… Is it where we want Python to head?
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 越来越多的静态和动态检查……这是我们希望 Python 发展的方向吗？
- en: '[](https://medium.com/@nyggus?source=post_page-----e298e2a30118--------------------------------)[![Marcin
    Kozak](../Images/d7faf62e48ed81dab5d8ad92819fff54.png)](https://medium.com/@nyggus?source=post_page-----e298e2a30118--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e298e2a30118--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e298e2a30118--------------------------------)
    [Marcin Kozak](https://medium.com/@nyggus?source=post_page-----e298e2a30118--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@nyggus?source=post_page-----e298e2a30118--------------------------------)[![Marcin
    Kozak](../Images/d7faf62e48ed81dab5d8ad92819fff54.png)](https://medium.com/@nyggus?source=post_page-----e298e2a30118--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e298e2a30118--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e298e2a30118--------------------------------)
    [Marcin Kozak](https://medium.com/@nyggus?source=post_page-----e298e2a30118--------------------------------)'
- en: ·
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4762f0cff9b2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdont-forget-that-python-is-dynamic-e298e2a30118&user=Marcin+Kozak&userId=4762f0cff9b2&source=post_page-4762f0cff9b2----e298e2a30118---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e298e2a30118--------------------------------)
    ·8 min read·Jun 13, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe298e2a30118&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdont-forget-that-python-is-dynamic-e298e2a30118&user=Marcin+Kozak&userId=4762f0cff9b2&source=-----e298e2a30118---------------------clap_footer-----------)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4762f0cff9b2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdont-forget-that-python-is-dynamic-e298e2a30118&user=Marcin+Kozak&userId=4762f0cff9b2&source=post_page-4762f0cff9b2----e298e2a30118---------------------post_header-----------)
    发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e298e2a30118--------------------------------)
    ·8 分钟阅读·2023年6月13日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe298e2a30118&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdont-forget-that-python-is-dynamic-e298e2a30118&user=Marcin+Kozak&userId=4762f0cff9b2&source=-----e298e2a30118---------------------clap_footer-----------)'
- en: --
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe298e2a30118&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdont-forget-that-python-is-dynamic-e298e2a30118&source=-----e298e2a30118---------------------bookmark_footer-----------)![](../Images/6da0e0a508c5e05c453414dadb108c73.png)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe298e2a30118&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdont-forget-that-python-is-dynamic-e298e2a30118&source=-----e298e2a30118---------------------bookmark_footer-----------)![](../Images/6da0e0a508c5e05c453414dadb108c73.png)'
- en: Where does Python head to? Photo by [Jamie Templeton](https://unsplash.com/@jamietempleton?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Python 未来会走向何处？照片由 [Jamie Templeton](https://unsplash.com/@jamietempleton?utm_source=medium&utm_medium=referral)
    提供，来自 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Python is a dynamic language. Over recent years, however, more and more focus
    has been paid to static type checking. This, in turn, leads to an increased interest
    in runtime type checking. How far will we go with that? In this article, we will
    recall why Python was, not that long ago, considered a powerful dynamically typed
    programming language.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Python 是一种动态语言。然而，近年来，越来越多的关注已转向静态类型检查。这反过来导致了对运行时类型检查的兴趣增加。我们会走多远呢？在这篇文章中，我们将回顾为什么
    Python 曾经被认为是一个强大的动态类型编程语言。
- en: Is it still?
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 现在仍然如此吗？
- en: 'Python’s strength has always lied in its simplicity, which, at least partially,
    resulted from dynamic typing, not only because we can write Python code in REPL,
    but also for the following reasons:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Python 的优势一直在于其简单性，这至少部分是由于动态类型的结果，不仅因为我们可以在 REPL 中编写 Python 代码，还有以下原因：
- en: You can easily change a variable’s type throughout a program.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以在整个程序中轻松更改变量的类型。
- en: You do not have to define the type of a variable.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你不需要定义变量的类型。
- en: The code is (or can be) easy to read and understand.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码通常（或可以）容易阅读和理解。
- en: Sometimes, you can use a couple of lines of code in order to implement even
    quite a complex algorithm. A statically typed language usually needs much more
    — or at least more — lines of code.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有时候，你可以用几行代码来实现甚至相当复杂的算法。静态类型语言通常需要更多的——或者至少更多的——代码行数。
- en: Sure, dynamic typing does not come without cost. The first one is decreased
    performance, something we all know. This decrease…
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，动态类型并非没有代价。第一个代价是性能下降，这是我们都知道的。这种下降……
