- en: 5 Quick Tips to Improve Your MLflow Model Experimentation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/5-quick-tips-to-improve-your-mlflow-model-experimentation-dae346db825?source=collection_archive---------11-----------------------#2023-03-13](https://towardsdatascience.com/5-quick-tips-to-improve-your-mlflow-model-experimentation-dae346db825?source=collection_archive---------11-----------------------#2023-03-13)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Use the MLflow python API to drive better model development
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@mc12338?source=post_page-----dae346db825--------------------------------)[![Matt
    Collins](../Images/b28ac8100d6fb287e3fa6926eec7939a.png)](https://medium.com/@mc12338?source=post_page-----dae346db825--------------------------------)[](https://towardsdatascience.com/?source=post_page-----dae346db825--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----dae346db825--------------------------------)
    [Matt Collins](https://medium.com/@mc12338?source=post_page-----dae346db825--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd1970f1605f1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-quick-tips-to-improve-your-mlflow-model-experimentation-dae346db825&user=Matt+Collins&userId=d1970f1605f1&source=post_page-d1970f1605f1----dae346db825---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----dae346db825--------------------------------)
    ·7 min read·Mar 13, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fdae346db825&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-quick-tips-to-improve-your-mlflow-model-experimentation-dae346db825&user=Matt+Collins&userId=d1970f1605f1&source=-----dae346db825---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fdae346db825&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-quick-tips-to-improve-your-mlflow-model-experimentation-dae346db825&source=-----dae346db825---------------------bookmark_footer-----------)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: MLflow is a fantastic way to speed up your machine learning model development
    process through its powerful experimentation component. This enables Data Scientists
    to log the best algorithms and parameter combinations and rapidly iterate model
    development.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: This blog aims to show users how to get the most out of MLflow experiments.
    We will focus on the `start_run()` and its parameters, which can enhance your
    experimentation process. Additionally, we will cover the `search_runs()` function,
    which provides an expansive view of your experimentation history and enables greater
    flexibility in analysis.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: If you are new to MLflow, I suggest taking a look at the MLflow [site](https://mlflow.org/),
    [documentation](https://mlflow.org/docs/latest/quickstart.html), some blog posts
    or tutorial videos before jumping into this blog.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是MLflow的新手，我建议在进入此博客之前，查看一下MLflow [网站](https://mlflow.org/)、[文档](https://mlflow.org/docs/latest/quickstart.html)、一些博客文章或教程视频。
- en: '![](../Images/442306b0e9734d0b0e6634b25f2ea0aa.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/442306b0e9734d0b0e6634b25f2ea0aa.png)'
- en: Photo by [Adrien Converse](https://unsplash.com/@adrienconverse?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由[Adrien Converse](https://unsplash.com/@adrienconverse?utm_source=medium&utm_medium=referral)提供，来源于[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: '**mlflow.start_run()**'
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**mlflow.start_run()**'
- en: Most of these tricks are parameters of the `start_run()` function. We call this
    function to initiate our experiment run, and it becomes the active run where we
    can log parameters, metrics, and other information.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这些技巧大多数是`start_run()`函数的参数。我们调用此函数来启动实验运行，它成为活动运行，我们可以在其中记录参数、指标和其他信息。
- en: This is the function I use most in MLflow and the one which offers the most
    instantaneous value to users.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我在MLflow中使用最频繁的函数，它为用户提供了最即时的价值。
- en: 1\. run_id
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. run_id
- en: The `run_id` is a UUID which is specific to each experiment run. Once a run
    has been initiated, it is not possible to overwrite properties such as the model
    type or parameter values. However, you can use the `run_id` to log additional
    values retrospectively, such as metrics, tags, or a description.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '`run_id`是一个特定于每个实验运行的UUID。一旦运行启动，就无法覆盖诸如模型类型或参数值等属性。然而，你可以使用`run_id`来回溯记录额外的值，如指标、标签或描述。'
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In this case, we may also want to log our coefficient of determination (r²)
    value for this run:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们可能还希望记录此运行的决定系数（r²）值：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The `run_id` can either be extracted by `print(run.info.run_id)` from the previous
    run, or by querying `mlflow.search_runs()`, but more on that later.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '`run_id`可以通过从之前的运行中`print(run.info.run_id)`提取，或通过查询`mlflow.search_runs()`来获得，稍后会详细介绍。'
- en: 2\. experiment_id
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. experiment_id
- en: You can set the experiment you want a run to log to in a few different ways
    in MLflow. The first command sets the experiment for all subsequent runs to “mlflow_sdk_test”.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在MLflow中，你可以通过几种不同的方式设置要记录的实验。第一个命令将所有后续运行的实验设置为“mlflow_sdk_test”。
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This can also be configured on a run-by-run basis through the `experiment_id`
    parameter.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这也可以通过`experiment_id`参数在逐次运行中进行配置。
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This value can then be reused when passed to `start_run()`:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，这个值可以在传递给`start_run()`时重复使用：
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 3\. run_name
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. run_name
- en: When you specify the name of your run, you have greater control over the naming
    process than relying on the default names generated by MLflow. This enables you
    to establish a consistent naming convention for experiment runs, similar to how
    you might manage other resources in your environment.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 当你指定运行名称时，你可以比依赖MLflow生成的默认名称更好地控制命名过程。这使你能够建立一致的实验运行命名约定，类似于你管理环境中其他资源的方式。
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: However, please be aware that `run_name` is not a unique constraint in MLflow.
    This means that you could have multiple experiments (with unique run IDs) sharing
    the same name.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，请注意`run_name`在MLflow中并不是唯一约束。这意味着你可能会有多个实验（具有唯一的运行ID）共享相同的名称。
- en: '![](../Images/d277256abc60b26566e6cb00d36afc1f.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d277256abc60b26566e6cb00d36afc1f.png)'
- en: 'MLflow experiment table view — Duplicate run names: Image by author'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: MLflow实验表视图——重复的运行名称：作者提供的图片
- en: This means that every time you execute a new run in a *with* statement, it will
    create a new experiment of the same name, rather than append details to this run.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着每次在*with*语句中执行新运行时，它将创建一个同名的新实验，而不是将细节附加到此运行中。
- en: This brings us nicely to the next parameter.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这使我们顺利过渡到下一个参数。
- en: 4\. nested
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4\. 嵌套
- en: You may be familiar with nested experiment runs if you’ve run the scikit-learn
    function`GridSearchCV` to perform hyperparameter optimisation.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用过scikit-learn的`GridSearchCV`函数来执行超参数优化，你可能对嵌套实验运行有所了解。
- en: 'Nested experiments look something like the following in MLflow:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在MLflow中，嵌套实验看起来像下面这样：
- en: '![](../Images/49ae15fc83fb1d28da5a7e6789aec16f.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/49ae15fc83fb1d28da5a7e6789aec16f.png)'
- en: 'MLflow experiment table view — nested experiments: Image by author'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: MLflow实验表视图——嵌套实验：作者提供的图片
- en: Note that the metrics here are saved against the parent run, which returns the
    best values recorded by the child runs. The child run values themselves are blank.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，这里的指标是针对父运行保存的，它返回子运行记录的最佳值。子运行值本身是空白的。
- en: While nested experiments are excellent for evaluating and logging parameter
    combinations to determine the best model, they also serve as a great logical container
    for organizing your work. With the ability to group experiments, you can compartmentalize
    individual data science investigations and keep your experiments page organized
    and tidy.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然嵌套实验非常适合评估和记录参数组合以确定最佳模型，但它们也是组织工作的大型逻辑容器。通过分组实验，您可以将各个数据科学调查进行分隔，并保持实验页面的有序和整洁。
- en: '[PRE6]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Should you need to add to this nested run, then specify the parent run’s `run_id`
    in subsequent executions as a parameter, appending further child runs.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要在此嵌套运行中进行添加，则在后续执行时指定父运行的`run_id`作为参数，附加更多子运行。
- en: '[PRE7]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: One thing to note about this approach is that your metrics will now be logged
    against each **child** run.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 关于这种方法要注意的一点是，您的指标现在将记录在每个**子**运行中。
- en: 5\. mlflow.search_runs()
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5\. mlflow.search_runs()
- en: This trick is using the `search_runs()`function.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这个技巧是使用 `search_runs()` 函数。
- en: This function allows us to programmatically query the experimentation GUI, and
    the results are returned in a tabular format that is easy to understand and manipulate.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数允许我们以编程方式查询实验 GUI，结果以易于理解和操作的表格格式返回。
- en: In the below example, we can select specific fields from the runs in our experiment
    and load them into a Pandas DataFrame. Notice that the available columns greatly
    exceed those available in the experiments GUI!
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的示例中，我们可以从实验中的运行中选择特定字段，并将其加载到 Pandas DataFrame 中。请注意，可用的列远远超过实验 GUI 中提供的列！
- en: '[PRE8]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'As this is a Pandas DataFrame, we can add columns that may be useful for analysis:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这是一个 Pandas DataFrame，我们可以添加一些可能对分析有用的列：
- en: '[PRE9]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'If we want to aggregate the result set to provide information of runs over
    time, we can use:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要汇总结果集以提供随时间变化的运行信息，我们可以使用：
- en: '[PRE10]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![](../Images/1909bb8381a5429b15c509d2488abeb5.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1909bb8381a5429b15c509d2488abeb5.png)'
- en: 'Output of the above query: Image by author'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 上述查询的输出：作者提供的图像
- en: The automatic tags.estimator_name field allows us to review how many runs have
    been tested for each algorithm.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 自动生成的 tags.estimator_name 字段允许我们查看每个算法的测试运行数量。
- en: '[PRE11]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![](../Images/6d75e04dc94ff05a7245682a7d9565b3.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6d75e04dc94ff05a7245682a7d9565b3.png)'
- en: 'Output of the above query: Image by author'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 上述查询的输出：作者提供的图像
- en: Given this is a DataFrame, we can export the data for any reporting requirements
    to give the required visibility to users who may not have access to the workspace,
    and compare across workspaces.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这是一个 DataFrame，我们可以将数据导出以满足任何报告要求，从而为可能没有访问工作区的用户提供所需的可见性，并在工作区之间进行比较。
- en: Closing thoughts
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结束语
- en: These are just a few examples of how to extend your use of MLflow’s functions
    and parameters in your experimentation process, but there are many more available
    in the python API.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这些只是如何扩展 MLflow 函数和参数在实验过程中的使用的一些示例，但在 Python API 中还有许多其他可用的函数和参数。
- en: Hopefully, this post has inspired you to explore some of the available functions
    and parameters and see if they can benefit your model development process. For
    additional information, refer to the API [documentation](https://mlflow.org/docs/latest/python_api/index.html)
    and experiment with different configurations to find the best fit for your needs.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 希望这篇文章能激发您探索一些可用的函数和参数，并查看它们是否能为您的模型开发过程带来好处。有关更多信息，请参考 API [文档](https://mlflow.org/docs/latest/python_api/index.html)，并尝试不同的配置以找到最适合您需求的配置。
- en: If you’re currently using any functions or parameters that I’ve not mentioned
    in this post, please let me know in the comments!
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您当前使用了我在本文中没有提到的任何函数或参数，请在评论中告诉我！
- en: All code can be found in my [GitHub Repo](https://github.com/MattPCollins/MLflowExperimentation).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 所有代码可以在我的 [GitHub Repo](https://github.com/MattPCollins/MLflowExperimentation)
    中找到。
