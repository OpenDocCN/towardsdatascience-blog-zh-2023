["```py\nγ = 0.9 // discount factor\nθ = 0.01 // convergence threshold\n```", "```py\n// value table\n\nV(s0) = 0\nV(s1) = 0\nV(s2) = 0\n```", "```py\nΔ = 0\n```", "```py\n// Bellman update rule\n// V(s) ← maxₐ Σₛ′, ᵣ p(s′, r|s, a) * [r + γV(s′)]\n\n//******************* state s0 *******************//\n\nv = 0\n\n// we have only looked at one action here as only one is available from s0\n// we know that the others are not possible and would therefore sum to 0\n\nV(s0) = max[T(s0 | s0, hit to green) * (R(s0, hit to green, s0) + γ * V(s0)) +\n            T(s1 | s0, hit to green) * (R(s0, hit to green, s1) + γ * V(s1))]\n\nV(s0) = max[0.1 * (0 + 0.9 * 0) + \n            0.9 * (0 + 0.9 * 0)]\n\nV(s0) = max[0] = 0\n\n// Delta update rule\n// Δ ← max(Δ,| v - V(s)|)\n\nΔ = max[Δ, |v - v(s0)|] = max[0, |0 - 0|] = 0\n\n//******************* state s1 *******************//\n\nv = 0\n\n// there are 2 available actions here\n\nV(s1) = max[T(s0 | s1, hit to fairway) * (R(s1, hit to fairway, s0) + γ * V(s0)) + \n            T(s1 | s1, hit to fairway) * (R(s1, hit to fairway, s1) + γ * V(s1)),\n            T(s1 | s1, hit in hole) * (R(s1, hit in hole, s1) + γ * V(s1)) + \n            T(s2 | s1, hit in hole) * (R(s1, hit in hole, s2) + γ * V(s2))]\n\nV(s1) = max[0.9 * (0 + 0.9 * 0) + \n            0.1 * (0 + 0.9 * 0),\n            0.1 * (0 + 0.9 * 0) + \n            0.9 * (10 + 0.9 * 0)]\n\nV(s1) = max[0, 9] = 9\n\nΔ = max[Δ, |v - v(s1)|] = max[0, |0 - 9|] = 9\n\n//******************* state s2 *******************//\n\n// terminal state with no actions\n```", "```py\nV(s0) = 0\nV(s1) = 9\nV(s2) = 0\n```", "```py\nΔ < θ = 9 < 0.01 = **False**\n```", "```py\nΔ = 0\n```", "```py\n//******************* state s0 *******************//\n\nv = 0\n\nV(s0) = max[T(s0 | s0, hit to green) * (R(s0, hit to green, s0) + γ * V(s0)) +\n            T(s1 | s0, hit to green) * (R(s0, hit to green, s1) + γ * V(s1))]\n\nV(s0) = max[0.1 * (0 + 0.9 * 0) + \n            0.9 * (0 + 0.9 * 9)]\n\nV(s0) = max[7.29] = 7.29\n\nΔ = max[Δ, |v - v(s0)|] = max[0, |0 - 7.29|] = 7.29\n\n//******************* state s1 *******************//\n\nv = 9\n\nV(s1) = max[T(s0 | s1, hit to fairway) * (R(s1, hit to fairway, s0) + γ * V(s0)) + \n            T(s1 | s1, hit to fairway) * (R(s1, hit to fairway, s1) + γ * V(s1)),\n            T(s1 | s1, hit in hole) * (R(s1, hit in hole, s1) + γ * V(s1)) + \n            T(s2 | s1, hit in hole) * (R(s1, hit in hole, s2) + γ * V(s2))]\n\nV(s1) = max[0.9 * (0 + 0.9 * 7.29) + \n            0.1 * (0 + 0.9 * 9),\n            0.1 * (0 + 0.9 * 9) + \n            0.9 * (10 + 0.9 * 0)]\n\nV(s1) = max(6.7149, 9.81) = 9.81\n\nΔ = max[Δ, |v - v(s1)|] = max[7.29, |9 - 9.81|] = 7.29\n\n//******************* state s2 *******************//\n\n// terminal state with no actions\n```", "```py\nV(s0) = 7.29\nV(s1) = 9.81\nV(s2) = 0\n```", "```py\nΔ < θ = 7.29 < 0.01 = **False**\n```", "```py\nIteration   V(s0)        V(s1)        V(s2)        Δ             Converged\n1           0            9            0            9             False\n2           7.29         9.81         0            7.29          False\n3           8.6022       9.8829       0            1.3122        False\n4           8.779447     9.889461     0            0.177247      False\n5           8.80061364   9.89005149   0            0.02116664    False\n6           8.8029969345 9.8901046341 0            0.0023832945  True\n```", "```py\n// Policy extraction rule\n// π(s) = argmaxₐ Σₛ′, ᵣ p(s′, r|s, a) * [r + γV(s′)]\n\n//******************* state s0 *******************//\n\n// we know there is only one possible action from s0, but let's just do it anyway\n\nπ(s0) = argmax[T(s0 | s0, hit to green) * (R(s0, hit to green, s0) + γ * V(s0)) +\n            T(s1 | s0, hit to green) * (R(s0, hit to green, s1) + γ * V(s1))\n\nπ(s0) = argmax[0.1 * (0 + 0.9 * 8.8029969345) + \n            0.9 * (0 + 0.9 * 9.8901046341)]\n\nπ(s0) = argmax[8.80325447773]\n\nπ(s0) = hit to green\n\n//******************* state s1 *******************//\n\nπ(s1) = argmax[T(s0 | s1, hit to fairway) * (R(s1, hit to fairway, s0) + γ * V(s0)) + \n            T(s1 | s1, hit to fairway) * (R(s1, hit to fairway, s1) + γ * V(s1)),\n            T(s1 | s1, hit in hole) * (R(s1, hit in hole, s1) + γ * V(s1)) + \n            T(s2 | s1, hit in hole) * (R(s1, hit in hole, s2) + γ * V(s2))]\n\nV(s1) = max[0.9 * (0 + 0.9 * 8.8029969345) + \n            0.1 * (0 + 0.9 * 9.8901046341),\n            0.1 * (0 + 0.9 * 9.8901046341) + \n            0.9 * (10 + 0.9 * 0)]\n\nπ(s1) = argmax[8.02053693401, 9.89010941707]\n\nπ(s1) = hit in hole\n```", "```py\nπ(s0) = hit to green\nπ(s1) = hit in hole\nπ(s2) = terminal state (no action)\n```"]