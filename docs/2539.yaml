- en: Implement and Train a CNN from Scratch with PyTorch Lightning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/implement-and-train-a-cnn-from-scratch-with-pytorch-lightning-ce22f7dfad83?source=collection_archive---------7-----------------------#2023-08-08](https://towardsdatascience.com/implement-and-train-a-cnn-from-scratch-with-pytorch-lightning-ce22f7dfad83?source=collection_archive---------7-----------------------#2023-08-08)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: If you are not using PyTorch Lightning, you should give it a try.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@betty.ld?source=post_page-----ce22f7dfad83--------------------------------)[![Betty
    LD](../Images/1a908f5bcdb6cbc3be5f889f52d743e6.png)](https://medium.com/@betty.ld?source=post_page-----ce22f7dfad83--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ce22f7dfad83--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ce22f7dfad83--------------------------------)
    [Betty LD](https://medium.com/@betty.ld?source=post_page-----ce22f7dfad83--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F9e6de59677a9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplement-and-train-a-cnn-from-scratch-with-pytorch-lightning-ce22f7dfad83&user=Betty+LD&userId=9e6de59677a9&source=post_page-9e6de59677a9----ce22f7dfad83---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ce22f7dfad83--------------------------------)
    ·19 min read·Aug 8, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fce22f7dfad83&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplement-and-train-a-cnn-from-scratch-with-pytorch-lightning-ce22f7dfad83&user=Betty+LD&userId=9e6de59677a9&source=-----ce22f7dfad83---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fce22f7dfad83&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplement-and-train-a-cnn-from-scratch-with-pytorch-lightning-ce22f7dfad83&source=-----ce22f7dfad83---------------------bookmark_footer-----------)![](../Images/3c624d26acc13295bc8fc840a43add42.png)'
  prefs: []
  type: TYPE_NORMAL
- en: The abstract idea of PyTorch Lightning. From [Marc Sendra Martorell](https://unsplash.com/@marcsm).
  prefs: []
  type: TYPE_NORMAL
- en: This article is a gentle introduction to Convolution Neural Networks (CNNs).
    This article details why PyTorch Lightning is so great, then makes a brief theoretical
    walkthrough of CNN components, and then describes the implementation of a training
    loop for a simple CNN architecture coded from scratch using the PyTorch Lightning
    library.
  prefs: []
  type: TYPE_NORMAL
- en: '**Why PyTorch Lightning?**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'PyTorch is a flexible and user-friendly library. If PyTorch is great for research,
    I found Lightning even greater for engineering. The main advantages are:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Less code.** When running an ML project, so many things can go wrong that
    it is helpful to delegate the boilerplate code and focus on what is relevant for
    solving my specific problem. Using the built-in functionalities is reducing the
    amount of written code, and therefore the probability of bugs. The development
    (and debugging) time is reduced.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Well-structured code**.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Efficiency and fast training**. Lightning also allows the use of all the
    multiprocessing and parallel workers tricks (like [DDP](https://pytorch.org/tutorials/intermediate/ddp_tutorial.html))
    from PyTorch without coding an extra line.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Built-in **development tools**…
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
