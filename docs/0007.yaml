- en: Data pipeline design patterns
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: åŽŸæ–‡ï¼š[https://towardsdatascience.com/data-pipeline-design-patterns-100afa4b93e3?source=collection_archive---------0-----------------------#2023-01-02](https://towardsdatascience.com/data-pipeline-design-patterns-100afa4b93e3?source=collection_archive---------0-----------------------#2023-01-02)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Choosing the right architecture with examples
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://mshakhomirov.medium.com/?source=post_page-----100afa4b93e3--------------------------------)[![ðŸ’¡Mike
    Shakhomirov](../Images/bc6895c7face3244d488feb97ba0f68e.png)](https://mshakhomirov.medium.com/?source=post_page-----100afa4b93e3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----100afa4b93e3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----100afa4b93e3--------------------------------)
    [ðŸ’¡Mike Shakhomirov](https://mshakhomirov.medium.com/?source=post_page-----100afa4b93e3--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: Â·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe06a48b3dd48&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-pipeline-design-patterns-100afa4b93e3&user=%F0%9F%92%A1Mike+Shakhomirov&userId=e06a48b3dd48&source=post_page-e06a48b3dd48----100afa4b93e3---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----100afa4b93e3--------------------------------)
    Â·9 min readÂ·Jan 2, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F100afa4b93e3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-pipeline-design-patterns-100afa4b93e3&user=%F0%9F%92%A1Mike+Shakhomirov&userId=e06a48b3dd48&source=-----100afa4b93e3---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F100afa4b93e3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-pipeline-design-patterns-100afa4b93e3&source=-----100afa4b93e3---------------------bookmark_footer-----------)![](../Images/074dc1570ad17f76947283225050b8db.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [israel palacio](https://unsplash.com/@othentikisra?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Typically data is processed, extracted, and transformed in steps. Therefore,
    a sequence of data processing stages can be referred to as a **data pipeline**.
  prefs: []
  type: TYPE_NORMAL
- en: '*Which design pattern to choose?*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: There are lots of things to consider, i.e. **Which data stack to use? What tools
    to consider? How to design a data pipeline conceptually? ETL or ELT? Maybe ETLT?
    What is Change Data Capture?**
  prefs: []
  type: TYPE_NORMAL
- en: I will try to cover these questions here.
  prefs: []
  type: TYPE_NORMAL
- en: A data pipeline
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So it is a sequence of data processing steps. Due to ***logical data flow connections***
    between these stages, each stage generates an **output** that serves as an **input**
    for the following stage.
  prefs: []
  type: TYPE_NORMAL
- en: There is a data pipeline whenever there is data processing between points A
    and B.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A data pipelineâ€™s three major parts are a **source, a processing step or steps,
    and a destination**. Data extracted from an external API (a source) can then be
    loaded into the data warehouse (destination). This is an example of a most common
    data pipeline where the source and destination are different. However, it is not
    always the case, as *destination-to-destination* pipelines also exist.
  prefs: []
  type: TYPE_NORMAL
