["```py\nimport tensorflow as tf\nfrom tensorflow.keras.models import Model\nfrom tensorflow.keras.layers import Input, Conv2D, MaxPool2D, Dense, Dropout, Flatten\nfrom tensorflow.keras.callbacks import ModelCheckpoint, EarlyStopping\n\ndef get_new_model(input_shape):\n  '''\n  This function returns a compiled CNN with specifications given above.\n  '''\n\n  #Defining the architecture of the CNN\n  input_layer = Input(shape=input_shape, name='input')\n  h = Conv2D(filters=16, kernel_size=(3,3), \n             activation='relu', padding='same', name='conv2d_1')(input_layer)\n  h = Conv2D(filters=16, kernel_size=(3,3), \n             activation='relu', padding='same', name='conv2d_2')(h)\n\n  h = MaxPool2D(pool_size=(2,2), name='pool_1')(h)\n\n  h = Conv2D(filters=16, kernel_size=(3,3), \n             activation='relu', padding='same', name='conv2d_3')(h)\n  h = Conv2D(filters=16, kernel_size=(3,3), \n             activation='relu', padding='same', name='conv2d_4')(h)\n\n  h = MaxPool2D(pool_size=(2,2), name='pool_2')(h)\n\n  h = Conv2D(filters=16, kernel_size=(3,3), \n             activation='relu', padding='same', name='conv2d_5')(h)\n  h = Conv2D(filters=16, kernel_size=(3,3), \n             activation='relu', padding='same', name='conv2d_6')(h)\n\n  h = Dense(64, activation='relu', name='dense_1')(h)\n  h = Dropout(0.5, name='dropout_1')(h)\n  h = Flatten(name='flatten_1')(h)\n  output_layer = Dense(10, activation='softmax', name='dense_2')(h)\n\n  #To generate the model, we pass the input layer and the output layer\n  model = Model(inputs=input_layer, outputs=output_layer, name='model_CNN')\n\n  #Next we apply the compile method\n  model.compile(optimizer='adam',\n                loss='categorical_crossentropy',\n                metrics=['accuracy'])\n\n  return model\n```", "```py\nbenchmark_layers = model_benchmark.layers\nbenchmark_input = model_benchmark.input\n\nlayer_outputs_benchmark = [layer.output for layer in benchmark_layers]\nfeatures_benchmark = Model(inputs=benchmark_input, outputs=layer_outputs_benchmark)\n```"]