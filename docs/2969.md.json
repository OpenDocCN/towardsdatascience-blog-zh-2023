["```py\n%pip install langchain openai sqlalchemy\n```", "```py\nimport os\nfrom dotenv import load_dotenv\n\nos.environ[\"OPENAI_API_TYPE\"]=\"azure\"\nos.environ[\"OPENAI_API_VERSION\"]=\"2023-07-01-preview\"\nos.environ[\"OPENAI_API_BASE\"]=\"\" # Your Azure OpenAI resource endpoint\nos.environ[\"OPENAI_API_KEY\"]=\"\" # Your Azure OpenAI resource key\nos.environ[\"OPENAI_CHAT_MODEL\"]=\"gpt-35-turbo-16k\" # Use name of deployment\n\nos.environ[\"SQL_SERVER\"]=\"\" # Your az SQL server name\nos.environ[\"SQL_DB\"]=\"retailshop\"\nos.environ[\"SQL_USERNAME\"]=\"\" # SQL server username \nos.environ[\"SQL_PWD\"]=\"{<password>}\" # SQL server password \n```", "```py\nfrom sqlalchemy import create_engine\n\ndriver = '{ODBC Driver 17 for SQL Server}'\nodbc_str = 'mssql+pyodbc:///?odbc_connect=' \\\n                'Driver='+driver+ \\\n                ';Server=tcp:' + os.getenv(\"SQL_SERVER\")+'.database.windows.net;PORT=1433' + \\\n                ';DATABASE=' + os.getenv(\"SQL_DB\") + \\\n                ';Uid=' + os.getenv(\"SQL_USERNAME\")+ \\\n                ';Pwd=' + os.getenv(\"SQL_PWD\") + \\\n                ';Encrypt=yes;TrustServerCertificate=no;Connection Timeout=30;'\n\ndb_engine = create_engine(odbc_str)\n```", "```py\nfrom langchain.chat_models import AzureChatOpenAI\n\nllm = AzureChatOpenAI(model=os.getenv(\"OPENAI_CHAT_MODEL\"),\n                      deployment_name=os.getenv(\"OPENAI_CHAT_MODEL\"),\n                      temperature=0)\n```", "```py\nfrom langchain.prompts.chat import ChatPromptTemplate\n\nfinal_prompt = ChatPromptTemplate.from_messages(\n    [\n        (\"system\", \n         \"\"\"\n          You are a helpful AI assistant expert in querying SQL Database to find answers to user's question about Categories, Products and Orders.\n         \"\"\"\n         ),\n        (\"user\", \"{question}\\n ai: \"),\n    ]\n)\n```", "```py\nfrom langchain.agents import AgentType, create_sql_agent\nfrom langchain.sql_database import SQLDatabase\nfrom langchain.agents.agent_toolkits.sql.toolkit import SQLDatabaseToolkit\n\ndb = SQLDatabase(db_engine)\n\nsql_toolkit = SQLDatabaseToolkit(db=db, llm=llm)\nsql_toolkit.get_tools()\n\nsqldb_agent = create_sql_agent(\n    llm=llm,\n    toolkit=sql_toolkit,\n    agent_type=AgentType.ZERO_SHOT_REACT_DESCRIPTION,\n    verbose=True\n)\n```", "```py\nsqldb_agent.run(final_prompt.format(\n        question=\"Quantity of kitchen products sold last month?\"\n  ))\n```", "```py\nsqldb_agent.run(final_prompt.format(\n        question=\"How many kitchen products were sold last month?\"\n  ))\n```", "```py\nsqldb_agent.run(final_prompt.format(\n        question=\"How many orders have not been shipped yet?\"\n  ))\n```", "```py\nfrom langchain.prompts.chat import ChatPromptTemplate\n\nfinal_prompt = ChatPromptTemplate.from_messages(\n    [\n        (\"system\", \n         \"\"\"\n         You are a helpful AI assistant expert in identifying the relevant topic from user's question about Categories, Products and Orders and then querying SQL Database to find answer.\n         Use following context to create the SQL query. Context:\n         Product table contains information about products including product name, description, product price and product category.\n         Category table contains information about categories including category name and description. Each Product is mapped to a Category.\n         Orders table contains information about orders placed by customers including \n         quantity or number of products ordered,\n         expected delivery date and actual delivery date of the Order in the location and the status of the order. \n         Order status = 'Processing' means the order is being processed by seller and not yet shipped,\n         Order status = 'Shipped' means the order is shipped by the seller and is on the way to the customer,\n         Order status = 'Completed' means the order is delivered to the customer, and \n         Order status = 'Cancelled' means the order is cancelled by the customer.\n\n         If the question is about number of products in an order, then look for column names with 'quantity' in the tables and use 'sum' function to find the total number of products.\n        \"\"\"\n         ),\n        (\"user\", \"{question}\\n ai: \"),\n    ]\n)\n```", "```py\nsqldb_agent.run(final_prompt.format(\n        question =\"How many Kitchen products were sold in current month?\"\n  ))\n```"]