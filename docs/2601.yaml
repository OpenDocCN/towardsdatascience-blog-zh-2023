- en: Kernel Density Estimator explained step by step
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 核密度估计逐步讲解
- en: 原文：[https://towardsdatascience.com/kernel-density-estimation-explained-step-by-step-7cc5b5bc4517?source=collection_archive---------0-----------------------#2023-08-15](https://towardsdatascience.com/kernel-density-estimation-explained-step-by-step-7cc5b5bc4517?source=collection_archive---------0-----------------------#2023-08-15)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/kernel-density-estimation-explained-step-by-step-7cc5b5bc4517?source=collection_archive---------0-----------------------#2023-08-15](https://towardsdatascience.com/kernel-density-estimation-explained-step-by-step-7cc5b5bc4517?source=collection_archive---------0-----------------------#2023-08-15)
- en: Intuitive derivation of the KDE formula
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: KDE 公式的直观推导
- en: '[](https://medium.com/@jaroslaw.drapala?source=post_page-----7cc5b5bc4517--------------------------------)[![Jaroslaw
    Drapala](../Images/34de3c52fc32005e36930135254ae45e.png)](https://medium.com/@jaroslaw.drapala?source=post_page-----7cc5b5bc4517--------------------------------)[](https://towardsdatascience.com/?source=post_page-----7cc5b5bc4517--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----7cc5b5bc4517--------------------------------)
    [Jaroslaw Drapala](https://medium.com/@jaroslaw.drapala?source=post_page-----7cc5b5bc4517--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@jaroslaw.drapala?source=post_page-----7cc5b5bc4517--------------------------------)[![Jaroslaw
    Drapala](../Images/34de3c52fc32005e36930135254ae45e.png)](https://medium.com/@jaroslaw.drapala?source=post_page-----7cc5b5bc4517--------------------------------)[](https://towardsdatascience.com/?source=post_page-----7cc5b5bc4517--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----7cc5b5bc4517--------------------------------)
    [Jaroslaw Drapala](https://medium.com/@jaroslaw.drapala?source=post_page-----7cc5b5bc4517--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fce6da4a69810&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fkernel-density-estimation-explained-step-by-step-7cc5b5bc4517&user=Jaroslaw+Drapala&userId=ce6da4a69810&source=post_page-ce6da4a69810----7cc5b5bc4517---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----7cc5b5bc4517--------------------------------)
    ·7 min read·Aug 15, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F7cc5b5bc4517&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fkernel-density-estimation-explained-step-by-step-7cc5b5bc4517&user=Jaroslaw+Drapala&userId=ce6da4a69810&source=-----7cc5b5bc4517---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fce6da4a69810&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fkernel-density-estimation-explained-step-by-step-7cc5b5bc4517&user=Jaroslaw+Drapala&userId=ce6da4a69810&source=post_page-ce6da4a69810----7cc5b5bc4517---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----7cc5b5bc4517--------------------------------)
    ·7 min read·2023年8月15日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F7cc5b5bc4517&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fkernel-density-estimation-explained-step-by-step-7cc5b5bc4517&user=Jaroslaw+Drapala&userId=ce6da4a69810&source=-----7cc5b5bc4517---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7cc5b5bc4517&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fkernel-density-estimation-explained-step-by-step-7cc5b5bc4517&source=-----7cc5b5bc4517---------------------bookmark_footer-----------)![](../Images/9ce555ee5b172c4a6056c86b1a8bf238.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7cc5b5bc4517&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fkernel-density-estimation-explained-step-by-step-7cc5b5bc4517&source=-----7cc5b5bc4517---------------------bookmark_footer-----------)![](../Images/9ce555ee5b172c4a6056c86b1a8bf238.png)'
- en: Photo by [Marcus Urbenz](https://unsplash.com/@marcusurbenz?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Marcus Urbenz](https://unsplash.com/@marcusurbenz?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Introduction
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: To get a sense of the data distribution, we draw probability density functions
    (PDF). We are pleased when data fit well to a common density function, such as
    normal, Poisson, geometrical, etc. Then, [the maximum likelihood approach](https://medium.com/@roiyeho/maximum-likelihood-855b6df92c43)
    can be used to fit the density function to the data.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了感知数据分布，我们绘制概率密度函数（PDF）。当数据很好地符合常见的密度函数（例如正态分布、泊松分布、几何分布等）时，我们会感到满意。然后，可以使用
    [最大似然方法](https://medium.com/@roiyeho/maximum-likelihood-855b6df92c43) 将密度函数拟合到数据上。
- en: '![](../Images/9727efdceadb3d0de6c12f85536d769b.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9727efdceadb3d0de6c12f85536d769b.png)'
- en: Unfortunately, the data distribution is sometimes too irregular and does not
    resemble any of the usual PDFs. In such cases, the Kernel Density Estimator (KDE)
    provides a rational and visually pleasant representation of the data distribution.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，数据分布有时过于不规则，并不像任何常见的PDF。在这种情况下，核密度估计器（KDE）提供了一种合理且视觉上愉悦的数据分布表示。
- en: '![](../Images/55ed5a8ef76964057befeb52ed54b4f9.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/55ed5a8ef76964057befeb52ed54b4f9.png)'
- en: I’ll walk you through the steps of building the KDE, relying on your intuition
    rather than on a rigorous mathematical derivation.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我将带你了解构建KDE的步骤，依靠你的直觉，而不是严格的数学推导。
- en: The Kernel Function
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 核函数
- en: The key to understanding KDE is to think of it as **a function made up of building
    blocks**, similar to how different objects are made up of Lego bricks. The distinctive
    feature of KDE is that it employs only **one type of brick, known as the kernel**
    (‘*one brick to rule them all*’). The key property of this brick is the ability
    to shift and stretch/shrink. **Each datapoint is given a brick, and KDE is the
    sum of all bricks**.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 理解KDE的关键是把它当作**由构建块组成的函数**，类似于不同的物体由乐高砖块构成。KDE的独特之处在于它仅使用**一种砖块，称为核函数**（‘*一个砖块统治所有*’）。这种砖块的关键特性是能够移动和伸缩/收缩。**每个数据点都有一个砖块，KDE是所有砖块的总和**。
- en: KDE is a composite function made up of one kind of building block referred to
    as a kernel function.
  id: totrans-17
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: KDE是由一种构建块组成的复合函数，称为核函数。
- en: ''
  id: totrans-18
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The kernel function is evaluated for each datapoint separately, and these partial
    results are summed to form the KDE.
  id: totrans-19
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 核函数是对每个数据点单独评估的，这些部分结果被求和形成KDE。
- en: The first step toward KDE is to focus on just one data point. What would you
    do if asked to create a PDF for a single data point? To begin, take *x =* 0\.
    The most logical approach is to use a PDF that is peaking precisely over that
    point and decaying with distance from it. The function
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 对KDE的第一步是仅关注一个数据点。如果让你为一个单一的数据点创建PDF，你会怎么做？首先，取*x =* 0。最合逻辑的方法是使用一个在该点上正好峰值并随着距离衰减的PDF。函数
- en: '![](../Images/b95a4d8925dcd7f3001de8c9df49d10d.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b95a4d8925dcd7f3001de8c9df49d10d.png)'
- en: would do the trick.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这样就可以解决问题。
- en: '![](../Images/0e4297c5a5082fbdcf511acc4f602c40.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0e4297c5a5082fbdcf511acc4f602c40.png)'
- en: 'However, because PDF is supposed to have a unit area under the curve, we must
    rescale the result. Therefore, the function has to be divided by the square root
    of 2*π* and stretched by a factor of √2 ([3Blue1Brown](https://www.youtube.com/watch?v=cy8r7WSuT1I)
    provides an excellent derivation of these factors):'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，由于PDF应该在曲线下具有单位面积，我们必须对结果进行重新缩放。因此，该函数必须除以2*π*的平方根，并通过√2进行伸缩（[3Blue1Brown](https://www.youtube.com/watch?v=cy8r7WSuT1I)提供了这些因素的优秀推导）：
- en: '![](../Images/a0f3910b897a87fdeacee38ab71e7c0f.png)![](../Images/94b03a28acaf0fae5514df9fad8818ef.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a0f3910b897a87fdeacee38ab71e7c0f.png)![](../Images/94b03a28acaf0fae5514df9fad8818ef.png)'
- en: 'Ultimately, we arrive at our Lego brick, known as *the Kernel function*, which
    is a valid PDF:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，我们得到我们的乐高砖块，称为*核函数*，它是一个有效的PDF：
- en: '![](../Images/fcb62813a68d1265cb616518c6b566a1.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fcb62813a68d1265cb616518c6b566a1.png)'
- en: This Kernel is equivalent to a Gaussian distribution with zero mean and unit
    variance.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这个核函数相当于均值为零、方差为单位的高斯分布。
- en: Let’s play with it for a while. We’ll start by learning to shift it along the
    *x* axis.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们先玩一会儿。我们将从学习如何沿* x *轴移动它开始。
- en: 'Take a single data point *xᵢ -* the *i*-th point belonging to our dataset *X*.
    The shift can be accomplished by subtracting the argument:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 取一个数据点*xᵢ -* 我们数据集*X*中的第*i*个点。通过减去参数可以实现平移：
- en: '![](../Images/4a9cf982c49985749ea96856cbc1c72d.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4a9cf982c49985749ea96856cbc1c72d.png)'
- en: 'To make the curve wider or narrower we can just throw a constant *h* (the so
    called kernel bandwidth) in the argument. It is usually introduced as a denominator:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使曲线更宽或更窄，我们只需在参数中加入一个常数*h*（即所谓的核带宽）。它通常作为分母引入：
- en: '![](../Images/16837ece9123c927a9595b6952a4864a.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/16837ece9123c927a9595b6952a4864a.png)'
- en: 'However, the area under the kernel function is multiplied by *h* as a result.
    Therefore, we have to restore it back to the unit area by dividing by *h*:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，核函数下的面积因此乘以*h*。因此，我们必须通过除以*h*将其恢复到单位面积：
- en: '![](../Images/5976c28b7ccd354332bd8c2b3d77f101.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5976c28b7ccd354332bd8c2b3d77f101.png)'
- en: You can choose whatever *h* value you want. Here’s an example of how it works.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以选择任何*h*值。以下是它如何工作的一个示例。
- en: '![](../Images/2db21e60e2c4ef18a41ee329b56d1810.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2db21e60e2c4ef18a41ee329b56d1810.png)'
- en: The higher the *h*, the wider the PDF. The smaller the *h*, the narrower the
    PDF.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '*h* 越大，PDF 越宽。*h* 越小，PDF 越窄。'
- en: Kernel Density Estimator
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 核密度估计器
- en: Consider some dummy data to see how we can expand the method to multiple points.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑一些虚拟数据，以查看如何将方法扩展到多个点。
- en: '[PRE0]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'For the first data point, we simply use:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 对于第一个数据点，我们简单使用：
- en: '![](../Images/76ade26c8f4451c5675e9a8ab1e9d04c.png)![](../Images/c529122fb2bdaf106efe93f4749748df.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/76ade26c8f4451c5675e9a8ab1e9d04c.png)![](../Images/c529122fb2bdaf106efe93f4749748df.png)'
- en: 'We can do the same with the second datapoint:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以对第二个数据点做同样的操作：
- en: '![](../Images/5418cbd3a68ec9ff3b506041af67df1e.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5418cbd3a68ec9ff3b506041af67df1e.png)'
- en: 'To get a single PDF for the first two points, we must combine these two separate
    PDFs:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 为了得到前两个点的单一 PDF，我们必须将这两个单独的 PDF 结合起来：
- en: '![](../Images/8c38e6eb0d1eedbd4f3575f4db11b3fa.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8c38e6eb0d1eedbd4f3575f4db11b3fa.png)'
- en: 'Because we added two PDFs with unit area, the area under the curve becomes
    2\. To get it back to one, we divide it by two:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我们添加了两个单位面积的 PDF，所以曲线下的面积变为 2。为了恢复到 1，我们将其除以 2：
- en: '![](../Images/222b4b85cbd46389deb671f696c56a5b.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/222b4b85cbd46389deb671f696c56a5b.png)'
- en: 'Although the complete signature of function *f* could be used for precision:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管可以使用函数 *f* 的完整签名以提高精度：
- en: '![](../Images/411e11fdcd8dfbad6b7496173c48f737.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/411e11fdcd8dfbad6b7496173c48f737.png)'
- en: we’ll just use *f*(*x*) to make the notation unclutter.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将只使用 *f*(*x*) 以使符号更加简洁。
- en: 'This is how it works for two datapoints:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是它对两个数据点的工作方式：
- en: '![](../Images/fdc6e06fe8d2ca7d60ad82e6b7fc96c8.png)![](../Images/99ac4a4c5b28f2804f35712a5637c1bc.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fdc6e06fe8d2ca7d60ad82e6b7fc96c8.png)![](../Images/99ac4a4c5b28f2804f35712a5637c1bc.png)'
- en: And the final step toward KDE is to take into account *n* datapoints
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: KDE 的最终步骤是考虑 *n* 个数据点
- en: '![](../Images/253f1f689d5b715cba63a422678651e1.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/253f1f689d5b715cba63a422678651e1.png)'
- en: 'The Kernel Density Estimator is:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 核密度估计器是：
- en: '![](../Images/906d76e6d734246ec1dd0af1be58f730.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/906d76e6d734246ec1dd0af1be58f730.png)'
- en: Let’s have some fun with our rediscovered KDE.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来享受一下重新发现的 KDE。
- en: '[PRE1]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/4b18ce69d8f4b3dfd36358ff651caf2d.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4b18ce69d8f4b3dfd36358ff651caf2d.png)'
- en: Here we use the gaussian kernel, but I encourage you to try another kernels.
    For a review of common families of kernel functions, see [this paper](https://www.scirp.org/pdf/ojapps_2013012216494836.pdf).
    However, when the dataset is large enough, the type of kernel has no significant
    effect on the final output.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们使用高斯核，但我鼓励你尝试其他核。有关常见核函数家庭的回顾，请参见 [这篇论文](https://www.scirp.org/pdf/ojapps_2013012216494836.pdf)。然而，当数据集足够大时，核的类型对最终输出没有显著影响。
- en: KDE with Python libraries
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python 库的 KDE
- en: The [seaborn library](https://seaborn.pydata.org/generated/seaborn.kdeplot.html)
    employs KDE to offer nice visualizations of data distributions.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '[seaborn 库](https://seaborn.pydata.org/generated/seaborn.kdeplot.html)利用 KDE
    提供了数据分布的优美可视化。'
- en: '[PRE2]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/2faef6edc5dc3c7e206e31a0429e0b3e.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2faef6edc5dc3c7e206e31a0429e0b3e.png)'
- en: Scikit learn offers the [KernelDensity](https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KernelDensity.html)
    function to do a similar job.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Scikit learn 提供了 [KernelDensity](https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KernelDensity.html)
    函数来完成类似的工作。
- en: '[PRE3]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/1ec9dc4ab13b081286e2d6cffcb707ac.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1ec9dc4ab13b081286e2d6cffcb707ac.png)'
- en: The Scikit learn solution has the advantage of being able to be used as a generative
    model to generate synthetic data samples.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: Scikit learn 解决方案的优点在于它可以用作生成模型来生成合成数据样本。
- en: '[PRE4]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/698cfcd9af429e797c8446bb76e7f33d.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/698cfcd9af429e797c8446bb76e7f33d.png)'
- en: Conclusions
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: To summarize, KDE enables us to create a visually appealing PDF from any data
    without making any assumptions about the underlying process.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，KDE 使我们能够从任何数据创建一个视觉上吸引人的 PDF，而不需要对基础过程做任何假设。
- en: 'The distinguishing features of KDE’s:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: KDE 的显著特点：
- en: this is a function made up of a single type of building blocks termed **kernel
    function**;
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是由单一类型的构建块组成的函数，称为**核函数**；
- en: this is **a nonparametric estimator**, which means that its functional form
    is determined by the datapoints;
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是**非参数估计器**，这意味着它的功能形式由数据点决定；
- en: the shape of the generated PDF is heavily influenced by the value of the **kernel
    bandwidth** *h*;
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成的 PDF 的形状受到**核带宽** *h* 值的严重影响；
- en: to fit to the dataset, **no optimization technique is required**.
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了拟合数据集，**不需要优化技术**。
- en: The application of KDE to multidimensional data is simple. But this is a topic
    for another story.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: KDE 应用于多维数据是简单的。但这是另一个话题。
- en: '***Unless otherwise noted, all images are by the author.***'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '***除非另有说明，所有图片均由作者提供。***'
- en: References
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[1] S. Węglarczyk*,* [Kernel density estimation and its application](https://www.itm-conferences.org/articles/itmconf/pdf/2018/08/itmconf_sam2018_00037.pdf)
    (2018), ITM web of conferences, vol. 23, EDP Sciences.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] S. Węglarczyk*,* [核密度估计及其应用](https://www.itm-conferences.org/articles/itmconf/pdf/2018/08/itmconf_sam2018_00037.pdf)
    (2018), ITM 网络会议，第 23 卷，EDP 科学出版社。'
- en: '[2] Y. Soh, Y. Hae, A. Mehmood, R. H. Ashraf, I. Kim: Performance [Evaluation
    of Various Functions for Kernel Density Estimation](https://www.scirp.org/pdf/ojapps_2013012216494836.pdf)
    (2013), Open Journal of Applied Sciences, vol. 3, pp. 58–64.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] Y. Soh, Y. Hae, A. Mehmood, R. H. Ashraf, I. Kim: 性能 [各种核密度估计函数的评估](https://www.scirp.org/pdf/ojapps_2013012216494836.pdf)
    (2013), 应用科学开放期刊，第 3 卷，第 58–64 页。'
