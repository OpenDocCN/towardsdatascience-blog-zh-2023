- en: Linear Regression In Depth (Part 2)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/linear-regression-in-depth-part-2-5d40fd19efd4?source=collection_archive---------14-----------------------#2023-04-25](https://towardsdatascience.com/linear-regression-in-depth-part-2-5d40fd19efd4?source=collection_archive---------14-----------------------#2023-04-25)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Deep dive into multiple linear regression with examples in Python
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@roiyeho?source=post_page-----5d40fd19efd4--------------------------------)[![Dr.
    Roi Yehoshua](../Images/905a512ffc8879069403a87dbcbeb4db.png)](https://medium.com/@roiyeho?source=post_page-----5d40fd19efd4--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5d40fd19efd4--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5d40fd19efd4--------------------------------)
    [Dr. Roi Yehoshua](https://medium.com/@roiyeho?source=post_page-----5d40fd19efd4--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F3886620c5cf9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flinear-regression-in-depth-part-2-5d40fd19efd4&user=Dr.+Roi+Yehoshua&userId=3886620c5cf9&source=post_page-3886620c5cf9----5d40fd19efd4---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----5d40fd19efd4--------------------------------)
    ·14 min read·Apr 25, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5d40fd19efd4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flinear-regression-in-depth-part-2-5d40fd19efd4&user=Dr.+Roi+Yehoshua&userId=3886620c5cf9&source=-----5d40fd19efd4---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5d40fd19efd4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flinear-regression-in-depth-part-2-5d40fd19efd4&source=-----5d40fd19efd4---------------------bookmark_footer-----------)![](../Images/89c03a1c4491d8f8e9ce98926d1fbb9e.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [ThisisEngineering RAEng](https://unsplash.com/@thisisengineering?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/GzDrm7SYQ0g?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: In the [first part](https://medium.com/towards-data-science/linear-regression-in-depth-part-1-485f997fd611)
    of this article we formally defined the linear regression problem and showed how
    to solve simple linear regression problems, where the data set contains only one
    feature. In the second part of the article, we will discuss multiple linear regression
    problems, where the data set may contain any number of features.
  prefs: []
  type: TYPE_NORMAL
- en: We will first generalize the closed-form solution we have found for simple linear
    regression to any number of features. Then we will suggest an alternative approach
    for solving linear regression problems that is based on gradient descent, and
    discuss the pros and cons of this approach vs. using the closed-form solution.
    In addition, we will explore the classes in Scikit-Learn that implement both approaches,
    and demonstrate how to use them on a real-world data set.
  prefs: []
  type: TYPE_NORMAL
- en: Multiple Linear Regression Definition
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Recall that in regression problems we are given a set of *n* labeled examples:
    *D* = {(**x**₁, *y*₁), (**x**₂, *y*₂), … , (**x***ₙ, yₙ*)}, where **x***ᵢ* is
    an *m*-dimensional vector containing the **features** of example *i,* and *yᵢ*
    is a real value that represents the **label** of that example.'
  prefs: []
  type: TYPE_NORMAL
