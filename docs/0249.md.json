["```py\nprint(f\"solving for {len(values)} items\")\nprint(\"build the model\")\npecm = pe.ConcreteModel(name=\"Knapsack\")\npecm.x = pe.Var(range(0, len(values)), domain=pe.Boolean)\npecm.worth = pe.Objective(\n    expr=sum(values[j] * pecm.x[j] for j in range(0, len(values))),\n    sense=pe.maximize,\n)\npecm.weight = pe.ConstraintList()\npecm.weight.add(\n    sum(weights[j] * pecm.x[j] for j in range(0, len(values))) <= max_weight\n)\n\nsolver_name = \"glpk\"\nprint(f\"submit model to solver {solver_name}\")\nsolver = pe.SolverFactory(solver_name)\nsolver.solve(pecm)\n\nprint(\"parse the solver output\")\ntotal_value = int(pecm.worth())\ntotal_weight = int(sum(weights[j] * pecm.x[j]() for j in range(0, len(values))))\nselected_items = pecm.x\n```", "```py\nprint(f\"solving for {len(values)} items\")\nprint(\"build the model\")\ncqm = ConstrainedQuadraticModel()\nobj = BinaryQuadraticModel(vartype=\"BINARY\")\nconstraint = QuadraticModel()\n\nfor i in range(len(values)):\n    obj.add_variable(i)\n    obj.set_linear(i, -values[i])\n    constraint.add_variable(\"BINARY\", i)\n    constraint.set_linear(i, weights[i])\n\ncqm.set_objective(obj)\ncqm.add_constraint(constraint, sense=\"<=\", rhs=max_weight, label=\"capacity\")\n\nsampler = LeapHybridCQMSampler()\nprint(f\"submit model to solver {sampler.solver.name}\")\nsampleset = sampler.sample_cqm(cqm, label=\"knapsack problem\")\n\nprint(\"parse the solver output\")\nfeasible_sampleset = sampleset.filter(lambda row: row.is_feasible)\nif not len(feasible_sampleset):\n    raise ValueError(\"No feasible solution found\")\nbest = feasible_sampleset.first\n\nselected_items = [key for key, val in best.sample.items() if val == 1.0]\ntotal_weight = sum(list(weights.loc[selected_items]))\ntotal_value = sum(list(values.loc[selected_items]))\n```", "```py\nsolving for 50000 items\nbuild the model\nsubmit model to solver glpk\nparse the solver output\nsolver time:         129.44616556167603\nknapsack max weight: 200052600\nitems total weight:  200052581\nitems total value:   241399378\n```", "```py\nsolving for 50000 items\nbuild the model\nsubmit model to solver hybrid_constrained_quadratic_model_version1\nparse the solver output\nsolver time server side: 18.006079\nsolver time QPU:         0.016048\nknapsack max weight:     200052600\nitems total weight:      200052560\nitems total value:       240318952\nbest sol. energy:        -240318952.0\n```"]