- en: 'The Language of Locations: Evaluating Generative AI’s Geocoding Proficiency'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/the-language-of-locations-evaluating-generative-ais-geocoding-proficiency-2878b61c575?source=collection_archive---------2-----------------------#2023-09-13](https://towardsdatascience.com/the-language-of-locations-evaluating-generative-ais-geocoding-proficiency-2878b61c575?source=collection_archive---------2-----------------------#2023-09-13)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: An applied project detailing the performance of LLMs for geocoding, in comparison
    to modern geocoding APIs
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@lukezaruba?source=post_page-----2878b61c575--------------------------------)[![Luke
    Zaruba](../Images/84394ce71e12a3416e8dad471d891253.png)](https://medium.com/@lukezaruba?source=post_page-----2878b61c575--------------------------------)[](https://towardsdatascience.com/?source=post_page-----2878b61c575--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----2878b61c575--------------------------------)
    [Luke Zaruba](https://medium.com/@lukezaruba?source=post_page-----2878b61c575--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F55d98275790e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-language-of-locations-evaluating-generative-ais-geocoding-proficiency-2878b61c575&user=Luke+Zaruba&userId=55d98275790e&source=post_page-55d98275790e----2878b61c575---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----2878b61c575--------------------------------)
    ·9 min read·Sep 13, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2878b61c575&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-language-of-locations-evaluating-generative-ais-geocoding-proficiency-2878b61c575&user=Luke+Zaruba&userId=55d98275790e&source=-----2878b61c575---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2878b61c575&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-language-of-locations-evaluating-generative-ais-geocoding-proficiency-2878b61c575&source=-----2878b61c575---------------------bookmark_footer-----------)![](../Images/27a0f4f9061deff45288050a6fe0266f.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Sylwia Bartyzel](https://unsplash.com/@sylwiabartyzel?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: The modern convenience of typing a location into your phone’s search bar and
    seeing it automatically appear on a map is one that is often taken for granted.
    But have you ever paused to wonder how this seamless interaction and translation
    between text and maps actually works? The answer to this question is geocoding.
  prefs: []
  type: TYPE_NORMAL
- en: Esri, a global leader in geospatial software, defines geocoding as “[the process
    of transforming a description of a location — such as a pair of coordinates, an
    address, or a name of a place — to a location on the earth’s surface.](https://desktop.arcgis.com/en/arcmap/latest/manage-data/geocoding/what-is-geocoding.htm)”
    Geocoding is what empowers the advanced functionalities that are found in navigation
    apps, mapping services, and geographic information science (GIScience) platforms.
    Various providers like Esri, Google, Mapbox, and others all provide geocoding
    APIs that are able to take in location descriptions and return latitude and longitude
    values, or coordinates, for the given descriptions, allowing us to think spatially
    about the data.
  prefs: []
  type: TYPE_NORMAL
- en: With the rise of generative AI and Large Language Models (LLMs) like OpenAI’s
    [GPT](https://openai.com/gpt-4), Google’s [Bard](https://bard.google.com/), or
    Meta’s [LLaMA](https://ai.meta.com/llama/), comes excellent opportunities for
    making use of the technologies for geospatial applications. The uses range widely,
    from code generation with GitHub’s [Copilot](https://github.com/features/copilot)
    to image segmentation with Meta’s [Segment Anything Model](https://segment-anything.com/)
    (SAM), or even potentially to geocoding.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, the suitability of utilizing “out-of-the-box” generative AI
    for geocoding unstructured location descriptions will be examined. This evaluation
    will be performed on a small dataset of vehicle accident data from Minnesota.
    Through this analysis, the effectiveness of standard LLMs in geocoding tasks and
    the exploration of one of generative AI’s potential geospatial use cases will
    be pursued, in comparison to the prevailing conventional approaches.
  prefs: []
  type: TYPE_NORMAL
- en: '**Understanding Geocoding and its Integration with AI** Modern geocoders consist
    of two essential components, a reference dataset and a geocoding algorithm. The
    reference data often contains both explicit and relative descriptions of places
    attached to a geographic location, meaning that not only are explicit descriptions
    like addresses tied to a location, but also more unstructured descriptions of
    places are tied to locations as well. A matching algorithm then may be used to
    find suitable matches between an input description and the descriptions that are
    contained within the reference dataset. One simple example of a matching algorithm
    could be the use of an interpolation algorithm to pinpoint a street address’s
    location by estimating the position between two known addresses.'
  prefs: []
  type: TYPE_NORMAL
- en: The concept of predictive geocoding, employing AI and machine learning to enhance
    the geocoding process, has a longstanding history. Techniques including Natural
    Language Processing (NLP) and Deep Learning have been proposed and utilized, yielding
    varied levels of success. The use of AI and ML in geocoding is not a recent development.
    However, the emergence of generative AI presents itself as a new frontier for
    geocoding, much like it has to numerous other domains.
  prefs: []
  type: TYPE_NORMAL
- en: '**Navigating Challenges & Exploring Future Opportunities** As you may know,
    LLMs are trained using a vast amount of textual data drawn from the internet,
    books, journal articles, and various other sources. This often, if not always,
    lacks comprehensive geospatial information. This lack of geospatial training data
    in LLMs has implications on the potential and applicability in understanding and
    solving geospatial challenges. With no foundational domain-specific knowledge,
    how can we expect a model to perform well on an intricate problem?'
  prefs: []
  type: TYPE_NORMAL
- en: The answer is that we simply cannot.
  prefs: []
  type: TYPE_NORMAL
- en: In this analysis, I assess the suitability of LLMs as a standalone benchmark
    and within the context of workflows using traditional GIScience methods. The outcomes
    underscore a familiar point — while new technology may be impressive, it doesn’t
    always lead to enhanced performance when tackling complex challenges.
  prefs: []
  type: TYPE_NORMAL
- en: '**Case Study: Unstructured Location Descriptions of Car Accidents**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Data Collection and Preparation** To test out and quantify the geocoding
    capabilities of LLMs, a list of 100 unstructured location descriptions of vehicle
    accidents in Minnesota were randomly selected from a dataset that was scraped
    from the [web](https://app.dps.mn.gov/MSPMedia2/). The ground truth coordinates
    for all 100 accidents were manually created through the use of various mapping
    applications like [Google Maps](https://www.google.com/maps) and the Minnesota
    Department of Transportation’s [Traffic Mapping Application (TMA)](https://mndot.maps.arcgis.com/apps/webappviewer/index.html?id=7b3be07daed84e7fa170a91059ce63bb).'
  prefs: []
  type: TYPE_NORMAL
- en: Some sample location descriptions are featured below.
  prefs: []
  type: TYPE_NORMAL
- en: US Hwy 71 at MN Hwy 60 , WINDOM, Cottonwood County
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: EB Highway 10 near Joplin St NW, ELK RIVER, Sherburne County
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: EB I 90 / HWY 22, FOSTER TWP, Faribault County
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Highway 75 milepost 403, SAINT VINCENT TWP, Kittson County
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 65 Highway / King Road, BRUNSWICK TWP, Kanabec County
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: As seen in the examples above, there are wide variety of possibilities for how
    the description can be structured, as well as what defines the location. One example
    of this is the fourth description, which features a mile marker number, which
    is far less likely to be matched in any sort of geocoding process, since that
    information typically isn’t included in any sort of reference data. Finding the
    ground truth coordinates for descriptions like this one relied heavily on the
    use of the Minnesota Department of Transportation’s Linear Referencing System
    (LRS) which provides a standardized approach of how roads are measured through
    out the State, with which mile markers play a vital role in. This data can be
    accessed through the TMA application mentioned previously.
  prefs: []
  type: TYPE_NORMAL
- en: '**Methodology & Geocoding Strategies** After preparing the data, five separate
    notebooks were set up to test out different geocoding processes. Their configurations
    are as follows.'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Google Geocoding API, used on the raw location description
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 2\. Esri Geocoding API, used on the raw location description
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 3\. Google Geocoding API, used on an OpenAI GPT 3.5 standardized location description
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 4\. Esri Geocoding API, used on an OpenAI GPT 3.5 standardized location description
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 5\. OpenAI GPT 3.5, used as a geocoder itself
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: To summarize, the Google and Esri geocoding APIs were used on both the raw descriptions
    as well as descriptions that were standardized using a short prompt that was passed
    into the OpenAI GPT 3.5 model. The Python code for this standardization process
    can be seen below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The four test cases using geocoding APIs used the code below to make API requests
    to their respective geocoders and return the resulting coordinates for all 100
    descriptions.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Additionally, one final process tested was to use GPT 3.5 as the geocoder itself,
    without the help of any geocoding API. The code for this process looked nearly
    identical to the standardization code used above, but featured a different prompt,
    shown below.
  prefs: []
  type: TYPE_NORMAL
- en: 'Geocode the following address. Return a latitude (Y) and longitude (X) as accurately
    as possible. When responding, only return the output text in the following format:
    X, Y'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Performance Metrics and Insights**'
  prefs: []
  type: TYPE_NORMAL
- en: After the various processes were developed, each process was run and several
    performance metrics were calculated, both in terms of execution time and geocoding
    accuracy. These metrics are listed below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: The metrics are explained in more detail here. Mean represents the mean error
    (in terms of Manhattan distance, or the total of X and Y difference from the ground
    truth, in decimal degrees). StdDev represents the standard deviation of error
    (in terms of Manhattan distance, in decimal degrees). MAE represents the mean
    absolute error (in terms of Manhattan distance, in decimal degrees). RMSE represents
    the root mean square error (in terms of Manhattan distance, in decimal degrees).
    75%, 90%, 95% ET represents the error threshold for that given percent (in terms
    of Euclidean distance, in decimal degrees), meaning that for a given percentage,
    that percentage of records falls within the resulting value’s distance from the
    ground truth. Lastly, run time simply represents the total time taken to run the
    geocoding process on 100 records.
  prefs: []
  type: TYPE_NORMAL
- en: Clearly, GPT 3.5 performs far worse on its own. Although, if a couple outliers
    are taken out of the picture (which were labelled by the model as being located
    in other continents), for the most part the results of that process don’t look
    too out of place, visually at least.
  prefs: []
  type: TYPE_NORMAL
- en: It is also interesting to see that the LLM-standardization process actually
    decreased accuracy, which I personally found a bit surprising, since my whole
    intention of introducing that component was to hopefully slightly improve the
    overall accuracy of the geocoding process. It is worth noting that the prompts
    themselves could have been a part of the problem here, and it is worth further
    exploring the role of “prompt engineering” in geospatial contexts.
  prefs: []
  type: TYPE_NORMAL
- en: The last main takeaway from this analysis is the execution time differences,
    with which any process that includes the use of GPT 3.5 performs significantly
    slower. Esri’s geocoding API is also slower than Google’s in this setting too.
    Rigorous testing was not performed, however, so these results should be taken
    with that into consideration.
  prefs: []
  type: TYPE_NORMAL
- en: '**Concluding Thoughts**'
  prefs: []
  type: TYPE_NORMAL
- en: Although the “out-of-the-box” geocoding capabilities of OpenAI’s GPT 3.5 model
    might not match the sophistication of modern geocoders, the testing underscores
    a potentially promising outlook. The results highlight substantial room for improvement,
    suggesting that in the foreseeable future, the geospatial capabilities of Large
    Language Models (LLMs) have plenty of opportunities to improve and eventually
    make an impact on geocoding as we know it.
  prefs: []
  type: TYPE_NORMAL
- en: There are many specific use cases where LLMs could potentially be sufficient
    for geocoding, as is. However, as this example shows, there is a discrepancy between
    LLM’s capabilities and the demands of geocoding tasks requiring a high level of
    precision at a fine spatial resolution. Therefore, while LLMs hold potential,
    this example demonstrates the criticality of precision and accuracy for certain
    applications.
  prefs: []
  type: TYPE_NORMAL
- en: Overall, generative AI presents itself as an exciting innovation with broad
    and far-reaching implications and opportunities across the landscape of geography
    and GIS, including for the use of geocoding. Ongoing advancements are continuing
    to be made at a staggering pace, allowing for continued progress to be made on
    developing integrations between generative AI and geospatial every day.
  prefs: []
  type: TYPE_NORMAL
- en: '**References:** [1] Wikipedia contributors, [Address geocoding](https://en.wikipedia.org/wiki/Address_geocoding)
    (2023), Wikipedia'
  prefs: []
  type: TYPE_NORMAL
- en: '[2] A. Hassan, [The Future of Geospatial AI](https://medium.com/spatial-data-science/the-future-of-geospatial-ai-d29756df6ac3)
    (2023), [Spatial Data Science](https://medium.com/spatial-data-science)'
  prefs: []
  type: TYPE_NORMAL
- en: '[3] L. Mearian, [What are LLMs, and how are they used in generative AI?](https://www.computerworld.com/article/3697649/what-are-large-language-models-and-how-are-they-used-in-generative-ai.html)
    (2023), [ComputerWorld](https://www.computerworld.com/)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Acknowledgments:** I would like to extend my appreciation to Dr. Bryan Runck
    for his invaluable support, guidance, and expertise in contributing to the editing
    and review of this article.'
  prefs: []
  type: TYPE_NORMAL
