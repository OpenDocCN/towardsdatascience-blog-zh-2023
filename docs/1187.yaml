- en: 5 Helpful Extract & Load Practices for High-Quality Raw Data
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5 个有用的提取与加载实践，帮助获得高质量原始数据
- en: 原文：[https://towardsdatascience.com/5-helpful-extract-load-practices-for-high-quality-raw-data-65b9a59a8721?source=collection_archive---------8-----------------------#2023-04-04](https://towardsdatascience.com/5-helpful-extract-load-practices-for-high-quality-raw-data-65b9a59a8721?source=collection_archive---------8-----------------------#2023-04-04)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/5-helpful-extract-load-practices-for-high-quality-raw-data-65b9a59a8721?source=collection_archive---------8-----------------------#2023-04-04](https://towardsdatascience.com/5-helpful-extract-load-practices-for-high-quality-raw-data-65b9a59a8721?source=collection_archive---------8-----------------------#2023-04-04)
- en: Immutable raw areas, no transformations, no flattening, and no dedups before
    finishing your excavations
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 不可变的原始区域，未经过变换、平展或去重，直到完成你的挖掘工作
- en: '[](https://svenbalnojan.medium.com/?source=post_page-----65b9a59a8721--------------------------------)[![Sven
    Balnojan](../Images/3c8ba26bf656dec273cde0d93acf5576.png)](https://svenbalnojan.medium.com/?source=post_page-----65b9a59a8721--------------------------------)[](https://towardsdatascience.com/?source=post_page-----65b9a59a8721--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----65b9a59a8721--------------------------------)
    [Sven Balnojan](https://svenbalnojan.medium.com/?source=post_page-----65b9a59a8721--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://svenbalnojan.medium.com/?source=post_page-----65b9a59a8721--------------------------------)[![Sven
    Balnojan](../Images/3c8ba26bf656dec273cde0d93acf5576.png)](https://svenbalnojan.medium.com/?source=post_page-----65b9a59a8721--------------------------------)[](https://towardsdatascience.com/?source=post_page-----65b9a59a8721--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----65b9a59a8721--------------------------------)
    [Sven Balnojan](https://svenbalnojan.medium.com/?source=post_page-----65b9a59a8721--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F31ae15774b19&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-helpful-extract-load-practices-for-high-quality-raw-data-65b9a59a8721&user=Sven+Balnojan&userId=31ae15774b19&source=post_page-31ae15774b19----65b9a59a8721---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----65b9a59a8721--------------------------------)
    ·8 min read·Apr 4, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F65b9a59a8721&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-helpful-extract-load-practices-for-high-quality-raw-data-65b9a59a8721&user=Sven+Balnojan&userId=31ae15774b19&source=-----65b9a59a8721---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F31ae15774b19&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-helpful-extract-load-practices-for-high-quality-raw-data-65b9a59a8721&user=Sven+Balnojan&userId=31ae15774b19&source=post_page-31ae15774b19----65b9a59a8721---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----65b9a59a8721--------------------------------)
    ·8 分钟阅读·2023年4月4日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F65b9a59a8721&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-helpful-extract-load-practices-for-high-quality-raw-data-65b9a59a8721&user=Sven+Balnojan&userId=31ae15774b19&source=-----65b9a59a8721---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F65b9a59a8721&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-helpful-extract-load-practices-for-high-quality-raw-data-65b9a59a8721&source=-----65b9a59a8721---------------------bookmark_footer-----------)![](../Images/942b5c7466ce87920f0d5f97feff976f.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F65b9a59a8721&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-helpful-extract-load-practices-for-high-quality-raw-data-65b9a59a8721&source=-----65b9a59a8721---------------------bookmark_footer-----------)![](../Images/942b5c7466ce87920f0d5f97feff976f.png)'
- en: Excavator - photo by [Dmitriy Zub](https://unsplash.com/@dimitryzub?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/jibUsRaauLY?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 挖掘机 - 图片由 [Dmitriy Zub](https://unsplash.com/@dimitryzub?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    提供，来源于 [Unsplash](https://unsplash.com/photos/jibUsRaauLY?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)。
- en: '*This post is an updated version of the original version of the* [*Meltano
    blog*](https://github.com/meltano/meltano)*.*'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '*这篇文章是对* [*Meltano 博客*](https://github.com/meltano/meltano)*的更新版。*'
- en: 'ELT is becoming the default choice for data architectures, yet many best practices
    focus primarily on “T”: the transformations.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: ELT 正成为数据架构的默认选择，但许多最佳实践主要关注“变换（T）”。
- en: But data quality is determined for transformation and beyond in the extract
    and load phase. As the saying goes, “Garbage in, garbage out.”
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 但数据质量在提取和加载阶段之后的转换中决定。正如谚语所说，“垃圾进，垃圾出。”
- en: Robust EL pipelines provide the foundation for delivering accurate, timely,
    and error-free data.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 强大的 EL 管道为提供准确、及时和无误的数据奠定了基础。
- en: Luckily we have a community full of data experts that have worked with Meltano,
    Stitch, Airbyte, Fivetran, and all the big extract and load tools on the market.
    So we asked them to provide their most crucial extract and load practices!
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，我们有一个充满数据专家的社区，他们使用过 Meltano、Stitch、Airbyte、Fivetran 和市场上所有的大型提取和加载工具。因此，我们请他们提供他们最关键的提取和加载实践！
- en: We distilled 5 data practices [used & loved by the community](https://meltano.slack.com/)
    that will drive up quality for all your data sets, no matter what tool you use.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们提炼了 5 个数据实践 [被社区使用和喜爱](https://meltano.slack.com/)，这些实践将提升所有数据集的质量，无论你使用什么工具。
- en: '*But wait, why aren’t these “best practices”? Because we consider them to pick
    and choose. If you’re tackling a new project or don’t yet have many practices
    inside your extract and load processes, you implement all of them. If you already
    have some, complement them with the ones that make sense.*'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '*但等等，这些不是“最佳实践”吗？因为我们认为它们是可以选择的。如果你正在处理一个新项目或在提取和加载过程中还没有很多实践，你可以全部实施。如果你已经有了一些，补充那些有意义的实践。*'
- en: 'Setting the Stage: We need E&L practices because “copying raw data” is more
    complex than it sounds.'
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置舞台：我们需要提取和加载实践，因为“复制原始数据”比听起来复杂得多。
- en: The idea of ELT as a pattern sounds easy, “just copy over the source data first
    and then run your transformations over the raw data inside your own space.” However,
    " copy " and “raw data” are two words with hidden obstacles.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: ELT 作为一种模式的概念听起来很简单，“只需首先复制源数据，然后在自己的空间中对原始数据进行转换。”然而，“复制”和“原始数据”这两个词有隐藏的障碍。
- en: “Copying” sounds easy. But source data changes, and unless you know what changed,
    “copying” is more complicated than you think. Imagine a production table of 150
    million “orders” that does come with a “timestamp” but not with “modified” data.
    And yes, these exist all over the place. So, how do you know that orders got modified,
    and if so, which ones? For instance, how would you know which orders got “canceled,”
    an operation that usually takes place in the same data record and “modifies” it
    in place?
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: “复制”听起来很简单。但源数据会变化，除非你知道发生了什么变化，否则“复制”比你想象的要复杂。想象一下一个包含 1.5 亿个“订单”的生产表，它有一个“时间戳”，但没有“修改”数据。是的，这样的表随处可见。那么，你怎么知道订单是否被修改了？如果是，哪些订单被修改了？例如，你怎么知道哪些订单被“取消”，这种操作通常发生在同一数据记录中并在原地“修改”它？
- en: “Raw data” sounds clear. And yet the idea of extracting & loading implicitly
    means that usually, you copy between two different technical systems A and B,
    where you need to adjust the data to match system B. You ingest from REST APIs
    and put it into Snowflake or ingest from an Oracle database into Redshift. Every
    time you change systems, you will need to modify the “raw data” to adhere to the
    new system's rules. You need to do typecasting; you need to think about whether
    you want to “flatten JSON” or whether you want to add additional metadata to your
    data.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: “原始数据”听起来很清晰。然而，提取和加载的概念隐含着通常你在两个不同的技术系统 A 和 B 之间复制数据，其中你需要调整数据以匹配系统 B。你从 REST
    API 中获取数据并将其放入 Snowflake，或从 Oracle 数据库中提取数据并放入 Redshift。每次更换系统时，你都需要修改“原始数据”以遵循新系统的规则。你需要进行类型转换；你需要考虑是否要“展平
    JSON”或是否要向数据中添加额外的元数据。
- en: Simply “copying raw data” will raise new questions every time you add a new
    data source or target to your list. Even if it is just a new table from the same
    production database, you’ve always been copying from.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 单纯“复制原始数据”每次添加新数据源或目标时都会提出新问题。即使只是来自同一生产数据库的新表，你一直在复制的数据。
- en: These practices will guide you when you use a new source for ingesting data
    into your data system.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这些实践将在你使用新数据源将数据导入数据系统时为你提供指导。
- en: 1\. Make each EL run uniquely identifiable — timestamp everything
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. 使每次 EL 运行具有唯一标识——时间戳所有内容
- en: 'We start with arguably the most important best practice: Make every bit of
    data you load into your data system identifiable and traceable back to the process
    that got it there.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从可能最重要的最佳实践开始：使你加载到数据系统中的每一位数据都能被识别并追溯到获取它的过程。
- en: 'Typical ways of doing this are to include metadata values that capture:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的方法是包含捕获的元数据值：
- en: 'Ingestion time: the timestamp indicating when the load process started.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 摄取时间：表示加载过程开始的时间戳。
- en: 'Ingestion process: a unique identifier representing the load process and its
    instance.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 摄取过程：表示加载过程及其实例的唯一标识符。
- en: 'Source system: Metadata about where the data was extracted from.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 源系统：关于数据来源的元数据。
- en: '![](../Images/41b27b818ea3570f01f23d958c21a027.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/41b27b818ea3570f01f23d958c21a027.png)'
- en: Picture by author.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: Add any or all of these metadata to each row/entry of the data you ingest. We
    recommend you use the starting time of your ingestor as the “ingestion time” as
    it simplifies the process. The “identifier of your ingestion instance” should
    be clear. Don’t just provide the “Airflow-OracleDB-Ingester” as a process, but
    the “Airflow-OracleDB-Ingester-ID1244” where ID1244 identifies the specific run
    of ingestion.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 将这些元数据中的任何一个或全部添加到你摄取的数据的每一行/条目中。我们建议使用摄取器的开始时间作为“摄取时间”，因为这简化了过程。“摄取实例的标识符”应该明确。不要仅仅提供“Airflow-OracleDB-Ingester”作为过程，而是提供“Airflow-OracleDB-Ingester-ID1244”，其中ID1244标识特定的摄取运行。
- en: One benefit of having the source system as metadata is that you can quickly
    debug problems in downstream dashboards and identify their source. This is also
    useful metadata for other use cases.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 将源系统作为元数据的一个好处是，你可以快速调试下游仪表板中的问题并识别其来源。这也是其他用例中有用的元数据。
- en: Suppose you have a legacy and a new customer registration component. In that
    case, you can provide the source as a filter option inside dashboards, allowing
    users to filter for customers from just one system.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你有一个遗留系统和一个新的客户注册组件。在这种情况下，你可以在仪表板中将源系统作为过滤选项，让用户仅过滤来自一个系统的客户。
- en: '![](../Images/644ef20394e1ff864642f8a183b4f584.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/644ef20394e1ff864642f8a183b4f584.png)'
- en: Picture by author.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: 2\. Deduplicate data at a level beyond the raw level
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. 在原始层级之外的层级去重数据
- en: There are usually three cases of duplicate data hitting your data systems you
    will want to “deduplicate.” But no matter the case, don’t do it at the raw/landing
    level!
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，你会遇到三种数据重复情况需要“去重”。但无论是哪种情况，都不要在原始/落地层进行去重！
- en: The first case is intentional duplicate data, where a source system contains
    something your end-users or you consider duplicated. For instance, your CRM system
    might have two entries for a certain customer that canceled and signed up again.
    If you deduplicate at the raw level, this means either merging the two or deleting
    one. Both of which will delete data that is present in the source system.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 第一种情况是有意的重复数据，其中源系统包含你和终端用户认为重复的内容。例如，你的CRM系统可能有两个相同客户的条目，该客户取消后重新注册。如果你在原始层级去重，这意味着要么合并两个条目，要么删除一个。这两者都会删除源系统中存在的数据。
- en: The second case is unintentional duplicate data, where the source system either
    deletes a record you still have in your data warehouse or the source system unintentionally
    produces duplicate data it will likely delete in the future. Even though this
    is an “error,” I don’t recommend deleting this data in your raw ingestion area
    but rather filter it further down the line, for instance, in the next stage of
    your modeling. Otherwise, you add logic to your ingestion that is hard to follow
    up on later.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种情况是无意间产生的重复数据，其中源系统可能会删除你在数据仓库中仍然存在的记录，或者源系统无意中生成了未来可能会删除的重复数据。尽管这是一个“错误”，我不建议在原始摄取区域删除这些数据，而是应该在后续阶段进一步过滤，例如在建模的下一阶段。否则，你会在摄取中添加难以跟踪的逻辑。
- en: The third case is duplication happening due to technical restrictions. It might
    be the case that your ingestion tooling prefers an “at least once delivery” strategy,
    or it might even be a bug in an ingestion process. With “at least once delivery”
    incremental load strategies, you’re ensuring to get all data rows but might duplicate
    some. Again we recommend keeping the duplicate data at the raw level and filtering
    it down at a later level.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 第三种情况是由于技术限制导致的重复。可能是你的摄取工具倾向于“至少一次交付”策略，或者可能是摄取过程中的一个bug。使用“至少一次交付”增量加载策略，你确保获取所有数据行，但可能会产生一些重复数据。再次建议在原始层级保留重复数据，并在后续阶段进行过滤。
- en: '![](../Images/ff199127920861992094eaa3637ff3f0.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ff199127920861992094eaa3637ff3f0.png)'
- en: Picture by author.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: No matter the case, don’t deduplicate on load. Load everything, and keep it
    there as it is. Do your deduplication later at the next stage.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 无论情况如何，都不要在加载时去重。加载所有数据，并保持原样。稍后在下一阶段进行去重。
- en: 3\. Don’t flatten during EL, do it one stage later
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. 在EL期间不要展平，推迟到一个阶段后进行
- en: Many source systems you ingest will return arrays, JSONs, or other nested objects
    with some hierarchy you want to break down for further processing. But not at
    the ingestion level. Take the raw data and dump it as it is in your data system,
    then have a process do your “flattening.”
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 许多源系统在摄取时会返回数组、JSON或其他具有某些层级的嵌套对象，你希望将其拆解以进行进一步处理。但不是在摄取层面。将原始数据按原样导入你的数据系统，然后让一个过程进行“扁平化”。
- en: A very typical example is JSON objects. Your source might contain a large JSON
    object, and you would like to have it processed into individual columns inside
    your Snowflake database. This practice suggests first having a raw table with
    just your metadata columns and one “JSON_blob” column containing the JSON object.
    In a second step, you can then process this data into columns.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 一个很典型的例子是JSON对象。你的源数据可能包含一个大的JSON对象，而你希望将其处理成Snowflake数据库中的单独列。这种做法建议首先创建一个仅包含元数据列和一个“JSON_blob”列的原始表，其中包含JSON对象。在第二步，你可以将这些数据处理成列。
- en: '![](../Images/65ab7ad6d86159b77caaa8f6cbd89b2d.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/65ab7ad6d86159b77caaa8f6cbd89b2d.png)'
- en: Picture by author.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: The reason for this is that flattening involves business logic. It involves
    you knowing what properties are “always there.” If you flatten on ingestion, your
    ingestion process might break because one JSON object is NULL, or one JSON object
    doesn’t come with one expected value. It is always easier to take the already
    ingested data and rerun your flattener than to run your ingestion + flattening
    process together.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这样做的原因是，扁平化涉及业务逻辑。它涉及到你知道哪些属性是“始终存在的”。如果你在摄取时进行扁平化，你的摄取过程可能会因为一个JSON对象为空，或者一个JSON对象没有一个预期的值而中断。处理已经摄取的数据并重新运行扁平化工具总是比运行摄取和扁平化过程更容易。
- en: '*Additional tip: The same practice leads to avoiding type casting (if possible)
    on ingestion. We recommend doing typecasting after ingestion.*'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '*附加提示：相同的实践可以避免在摄取时进行类型转换（如果可能的话）。我们建议在摄取之后再进行类型转换。*'
- en: 4\. Have an immutable raw level
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4\. 拥有一个不可变的原始层
- en: At some point, you will switch to incremental updates on your data. It’s time
    to remember to create an “immutable raw level,” an area where you never, I repeat,
    modify or delete data.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在某个时候，你将切换到数据的增量更新。此时要记住创建一个“不可变原始层”，这是一个你**绝对不要修改或删除数据**的区域。
- en: '“immutable raw level”: an area where you **never modify or delete data**.'
  id: totrans-52
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “不可变原始层”：一个你**绝对不要修改或删除数据**的区域。
- en: 'Not deduplicating is one part of it (see rule 2), but there is more: In your
    immutable raw level, you do not remove records removed upstream or modify data
    modified upstream. You’re simply loading new data in; that is it.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 不去重复数据是其中的一部分（见规则2），但还有更多：在你的不可变原始层中，你不会删除上游移除的记录或修改上游修改的数据。你只是加载新数据，仅此而已。
- en: A great example I still painfully remember is a north star metric dashboard.
    It showed the current development of the north star metric I worked at based on
    customer behavior over the last couple of months. The dashboard and the numbers
    looked great, moving upwards. Product & management decisions were made on this
    basis. New records of the north star metric were broadcasted each week.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 一个我仍然痛苦记忆的例子是北极星指标仪表板。它展示了我基于过去几个月客户行为所工作的北极星指标的当前发展情况。仪表板和数字看起来都很好，呈上升趋势。产品和管理决策基于此做出。北极星指标的新记录每周广播一次。
- en: Then suddenly, one day, the dashboard looked different. Our north star metric
    shaved 10% of its value and 30% in a specific segment.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 然后突然有一天，仪表板看起来不同了。我们的北极星指标减少了10%的值，并在某个特定细分市场中减少了30%。
- en: One huge customer left, and the records were completely wiped.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 一位大客户离开了，记录被完全删除。
- en: Since we were modifying our raw data, we completely messed up the north star
    metric irreversibly.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们在修改原始数据，我们彻底搞砸了北极星指标，无法恢复。
- en: From that day on, we used [snapshots](https://docs.getdbt.com/docs/build/snapshots)
    of all the raw data that might be subject to change.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 从那天起，我们使用了可能会变动的所有原始数据的[快照](https://docs.getdbt.com/docs/build/snapshots)。
- en: '![](../Images/1fb22bc843ea507b419f0816c0eb7b90.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1fb22bc843ea507b419f0816c0eb7b90.png)'
- en: Picture by author.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: Do yourself a favor, and have your raw level immutable.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 为自己做个好事，让你的原始层不可变。
- en: '*Note: immutable staging areas are effectively what you create with full table
    syncs if you do not delete data. Also, for GDPR and privacy concerns, you should
    make an exception here.*'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '*注意：不可变的暂存区域实际上就是你在进行全表同步时创建的，如果你不删除数据的话。此外，出于GDPR和隐私问题，你应该在这里做一个例外。*'
- en: 5\. Do not transform data on ingestion, not even slightly, unless you have to
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5\. 在数据摄取时不要进行任何形式的转换，即使是轻微的，除非确实必要
- en: There are good reasons to transform data on the fly on ingestion, but almost
    every case you will think of also works without. Legal and security are two good
    reasons for transforming data on the fly. For all other reasons, you should try
    first to ingest data and then run a small transformation on the ingested data.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在摄取时即时转换数据有充分的理由，但几乎所有你能想到的案例也可以在不转换的情况下运作。法律和安全是即时转换数据的两个好理由。对于其他所有理由，你应该首先摄取数据，然后对摄取的数据进行小规模的转换。
- en: If you opt to do an “on the fly” transformation while ingesting data, make sure
    you make it fail-proof. Try only to add data or subtract data, not modify it.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你选择在摄取数据时进行“即时”转换，确保你使其防故障。尽量只添加数据或删除数据，而不是修改数据。
- en: If you want to do transformations by default, it is always better to first ingest
    it. Then you can, for instance, create a mapping table and do the join there.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你默认要进行转换，最好先进行数据摄取。然后，你可以，例如，创建一个映射表并在那里进行连接。
- en: '![](../Images/e210cf087a2aa0289dc7d767e08bead3.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e210cf087a2aa0289dc7d767e08bead3.png)'
- en: Picture by author.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: You can do so by using mechanisms like “[dbt seeds](https://docs.getdbt.com/docs/build/seeds)”
    or ingesting Google Sheets maintained by an external contributor.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过使用像“[dbt seeds](https://docs.getdbt.com/docs/build/seeds)”这样的机制或摄取由外部贡献者维护的
    Google Sheets 来实现。
- en: Summary
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: We all know about “Garbage in, garbage out,” yet we often fail to recognize
    it in the extract and load world.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们都知道“垃圾进，垃圾出”，但我们往往未能在提取和加载的世界中认识到这一点。
- en: These practices focus on reducing garbage at the very beginning of our processes.
    They will help you to fix problems faster and increase your data quality in the
    long run.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这些做法侧重于在我们流程的最开始阶段减少垃圾数据。它们将帮助你更快地解决问题，并从长远来看提高数据质量。
- en: Look at the graphic below if you want the short version of all the practices.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解所有实践的简短版本，请查看下面的图示。
- en: '![](../Images/a3e3d5dd98f02bb8fda9cbb7ae21cc98.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a3e3d5dd98f02bb8fda9cbb7ae21cc98.png)'
- en: 5 Helpful extract and load practices, image by the author.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 5 个有用的提取和加载实践，图片由作者提供。
