- en: Good engineers, bad engineers, and evil engineers — an anecdote for data leaders
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/good-engineers-bad-engineers-and-evil-engineers-an-anecdote-for-data-leaders-6cceb82c8c3e?source=collection_archive---------4-----------------------#2023-11-29](https://towardsdatascience.com/good-engineers-bad-engineers-and-evil-engineers-an-anecdote-for-data-leaders-6cceb82c8c3e?source=collection_archive---------4-----------------------#2023-11-29)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: My golden framework to differentiate the good, the bad, and the evil engineers
    in all fields, including data
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@thanhthuyphamvn?source=post_page-----6cceb82c8c3e--------------------------------)[![Ella
    Pham](../Images/7d05cbfeff29a294f9e3c3caf2f6830c.png)](https://medium.com/@thanhthuyphamvn?source=post_page-----6cceb82c8c3e--------------------------------)[](https://towardsdatascience.com/?source=post_page-----6cceb82c8c3e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----6cceb82c8c3e--------------------------------)
    [Ella Pham](https://medium.com/@thanhthuyphamvn?source=post_page-----6cceb82c8c3e--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7da00bf67be3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgood-engineers-bad-engineers-and-evil-engineers-an-anecdote-for-data-leaders-6cceb82c8c3e&user=Ella+Pham&userId=7da00bf67be3&source=post_page-7da00bf67be3----6cceb82c8c3e---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----6cceb82c8c3e--------------------------------)
    ·7 min read·Nov 29, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F6cceb82c8c3e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgood-engineers-bad-engineers-and-evil-engineers-an-anecdote-for-data-leaders-6cceb82c8c3e&user=Ella+Pham&userId=7da00bf67be3&source=-----6cceb82c8c3e---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F6cceb82c8c3e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgood-engineers-bad-engineers-and-evil-engineers-an-anecdote-for-data-leaders-6cceb82c8c3e&source=-----6cceb82c8c3e---------------------bookmark_footer-----------)![](../Images/007298ec1475c1882d30b44ec3b7be35.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: Image by author (generated using Canva’s Magic Media app)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: To engineer is to design or build something using **scientific** principles—
    Cambridge Dictionary.
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: We all love **good engineers**, they build fantastic bridges, roads, rockets,
    applications, and data structures that make our lives easier and enjoyable every
    day.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: By the same logic, **bad engineers** will not make lives much better. If we
    hire them, they will design and build something, but take more of our time, money,
    and energy.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: But do you also know, that outside the spectrum of good and bad, there are also
    **evil engineers**, whose mindset is not to build, but to **not build**.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: As an engineer myself, and someone who has worked with multiple engineering
    teams wearing the product owner/ project manager hats, the totality of my experiences
    has told me something about the good, the bad, and the evil engineers. I love
    good engineers, I have empathy for bad engineers, and I despise evil engineers.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this post, I will tell you **fundamentally, what are the differences
    between such types of engineers**. But first, let the story be told from a more
    anecdotal perspective.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: Some general observations of Good, Bad, and Evil engineers
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Reflecting back on your own experiences and knowledge of the engineering world,
    what do you think are the common behaviors of the good, bad, and evil engineers?
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: 'Below are my observations:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: '**Good engineers:**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: They recognize the problems
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They solve the problems using a sustainable approach
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They also solve other problems related to the identified root cause
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Bad engineers:**'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: They recognize the problems
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They solve the problem for a short-term
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They create more problems by solving the original problem
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Evil engineers:**'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: They pretend not to see the problems
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Looking into a concrete example
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let me make it easier to imagine these three engineer persona by describing
    a concrete example in the data engineering world.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: Take a data engineer building a pipeline, which copies a set of raw data tables
    from a transactional data warehouse into a container in the cloud. Following the
    medallion architecture, where data goes through the bronze, silver and gold layers,
    they first clean the data and dump them into a set of bronze-layer tables in the
    designated data lakehouse. Next, they normalize the table in the silver layer,
    as well as establish relationships between them. Finally, they join multiple tables
    together in a view and create new features to represent the business metrics to
    be fed into Tableau dashboards.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: During the testing of the dashboards, it is noted that there are missing values
    for a certain column in some records. Business users are concerned as they see
    more than 50% of records with missing data for that column, but they also acknowledge
    that the data may be incomplete at the source. Now, the engineers will need to
    investigate and resolve the problem.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: '**A good engineer will**:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: First, they know very well how that column got transformed from bronze to gold
    to silver layer. In other words, they will know the exact data lineage of the
    column with missing data.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identify a sample record with missing data in the gold layer, but has data at
    the source for that column. If they can’t identify any record in the whole population,
    they pronounce that the data themselves are incomplete.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If a valid record with missing data is identified, they then apply the transformation
    logic manually on that sample record again to see why the data for that column
    didn’t come through. Here there will be 2 scenarios:'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Scenario 1: the sampled record contains some unexpected characteristics, making
    their column values excluded from the gold layer. In short, this is a **design**
    problem. In this scenario, a good engineer will discuss these unexpected characteristics
    with the product owner and determine a treatment plan for them. Either they will
    decide that they can safely ignore this subset of the population, as the data
    with these characteristics are not relevant for the business objective; Or they
    will come up with custom transformation logic for them, in order to bring the
    data in.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Scenario 2: the column value comes through in their manual transformation,
    this means their perception of the initial data lineage is wrong. In short, this
    is an **execution** problem. The good engineer will go back to check what the
    data pipeline is doing, or what the data lineage actually is. Then they repeat
    the rest of the steps.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**A bad engineer will:**'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: Have a poor understanding of the data lineage.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identify a sample record with missing data in the gold layer, but has data at
    the source for that column. If they can’t identify any record, they pronounce
    that the data themselves are incomplete.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If a valid record with missing data is identified, try to apply a manual logic
    transformation on a record with missing data to see why the column doesn’t come
    through.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Come up with the wrong conclusions of why the column values don’t come through,
    mainly because their understanding of the data lineage and overall data pipeline
    is wrong.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If their observation leads them to a Scenario 1 conclusion as above (a design
    problem), they will inform the team that this is a data quality issue and call
    it a day. They assume the design is perfect and there is nothing to improve here.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A more ethical but also more disastrous engineer will attempt to come up with
    a custom treatment for the impacted records (i.e. modify the design), however,
    they make a bigger mess as their perception of the data lineage is incorrect to
    begin with.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If their observation leads them to a Scenario 2 conclusion (an execution problem),
    they will go back and study the gap between the implemented and designed data
    pipeline, and may actually come up with the right solution next time.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**What an evil engineer will do?**'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: They may or may not know the correct data lineage, this is irrelevant.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They pronounce that as the data for the column is incomplete from the source
    (based on what the business told them), of course, the data will be missing in
    the dashboard.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Then they assume that there is no problem with the data pipeline, as the data
    is inherently incomplete.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They call it a day and go home.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The fundamental differences between good, bad, and evil engineers
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Hopefully, my example above has given you a clearer depiction of the three
    types of engineers. However, the example can only assist you in the long run after
    you’ve grasped the fundamental differences between good, bad, and evil engineers.
    To systematically differentiate among the three, it is vital to find out their
    essential characteristics:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 希望我上面的例子为你提供了三个类型工程师的更清晰的描绘。然而，例子只能在你掌握了好、坏和邪恶工程师之间的基本差异后才会对你长期有帮助。为了系统地区分这三者，找出他们的基本特征至关重要：
- en: 'Here is my take on that:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我的看法：
- en: 'A good engineer possesses 3 qualities: **exceptional knowledge**, **commitment
    to truth**, and **commitment to result**.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个好的工程师具备三种品质：**卓越的知识**、**对真相的承诺**和**对结果的承诺**。
- en: A bad engineer lacks either **exceptional knowledge** or c**ommitment to results**.
    However, they do have a medium level of commitment to truth.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个坏工程师缺乏**卓越的知识**或**对结果的承诺**。然而，他们确实对真相有中等程度的承诺。
- en: An evil engineer has no or little **commitment to truth**. The result is of
    no importance to them. They care about other aspects (perhaps the appearance of
    results), or they don’t care about anything at all. It’s rare for an evil engineer
    to have exceptional knowledge, but if they do, it’s not relevant anyway, as again,
    they care neither for the truth, nor the result.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个邪恶的工程师对**真相的承诺**几乎为零。结果对他们来说并不重要。他们关心其他方面（也许是结果的外观），或者他们根本不在乎任何事情。邪恶的工程师很少具备卓越的知识，但如果他们具备，那也无关紧要，因为他们既不关心真相，也不关心结果。
- en: 'Some of you may find that there is not a clear distinction between the bad
    and evil engineers here. Normally, evil often does harm — so you would expect
    an evil engineer to introduce malicious code with bad intentions, or to cover
    their past mistakes. I agree with that. Yet, what I’d like to highlight here is
    where I draw the line between bad and evil:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 你们中的一些人可能会发现这里的坏工程师和邪恶工程师之间没有明确的区别。通常，邪恶往往会造成伤害——因此你会期望邪恶的工程师引入恶意代码或掩盖他们过去的错误。我同意这一点。然而，我想在这里强调的是我如何区分坏和邪恶：
- en: It doesn’t necessarily require a malicious action for the engineer to be evil,
    once the engineer **starts ignoring the truth** in front of their eyes (i.e. pretending
    not to see the problems), they cross into the realm of evil.
  id: totrans-58
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 工程师不一定需要采取恶意行动就能变得邪恶，一旦工程师**开始忽视眼前的真相**（即假装看不到问题），他们就进入了邪恶的领域。
- en: And the more facts they ignore, the more evil they will become.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 他们忽视的事实越多，他们就会变得越邪恶。
- en: How to identify good, bad, and evil engineers?
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何识别好、坏和邪恶的工程师？
- en: So next time, when you meet an engineer, look for indicators of all these three
    qualities. Don’t be so assured yet if you just find a list of credentials, certifications,
    or decades of experience — they are just indicators of exceptional knowledge.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 所以下次当你遇到一个工程师时，寻找这三种品质的指标。如果你只是发现了一些资历、认证或几十年的经验——这些只是卓越知识的指标，那么你还不能太确定。
- en: Commitment is an **active** state of mind. To find indicators of commitment
    to truth or results requires **careful investigation** of historical behavioral
    patterns, **continuous analysis** of one’s thinking process, and **observations**
    of their reactions toward challenges.
  id: totrans-62
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 承诺是一种**主动**的心态。寻找对真相或结果的承诺的指标需要**仔细调查**历史行为模式、**持续分析**一个人的思维过程，以及**观察**他们对挑战的反应。
- en: Neglecting to look for indicators of commitment or truth is to neglect your
    own success, and let it be decided by the supposedly ‘knowledgable’ engineers.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 忽视对承诺或真相的指标的寻找就是忽视你自己的成功，让它由所谓的‘知识渊博’的工程师决定。
- en: In the end, this is about you being responsible for your own hiring/partnership
    decision. If you don’t want to waste your money, start identifying the good, bad,
    and evil engineers.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，这与你对自己招聘/合作决策的责任有关。如果你不想浪费你的钱，开始识别好、坏和邪恶的工程师吧。
- en: '***'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '***'
- en: Hi there, if you are reading this, the chance is you care about data. You think
    there are invaluable values that can be extracted from data, and you are eager
    to find the best strategies, implementation practices, and tools to extract as
    much value as possible out of your organization’s (or your own) data assets.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 你好，如果你在阅读这些内容，那么你很可能关心数据。你认为可以从数据中提取宝贵的价值，并且你渴望找到最佳的策略、实施实践和工具，以从你所在组织（或你自己）的数据资产中提取尽可能多的价值。
- en: If that is true, then check out my weekly newsletter — [**Data & Beyond Dispatch**](https://dataandbeyond.substack.com/?utm=medium).
    Every edition will bring you insightful content from the Data community, which
    is curated and summarised to give you fresh, well-articulated, and practical perspectives
    on the mission, visions, strategies, and toolboxes of truly effective Data Leaders.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这是真的，那请查看我的每周通讯——[**数据与超越快报**](https://dataandbeyond.substack.com/?utm=medium)。每期将为你带来来自数据社区的深刻内容，这些内容经过精心挑选和总结，为你提供关于真正有效的数据领袖的使命、愿景、策略和工具箱的新鲜、条理清晰和实用的视角。
