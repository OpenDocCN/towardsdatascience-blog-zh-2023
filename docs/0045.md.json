["```py\n# Install PyDicom Package\n!pip install pydicom\n```", "```py\nLooking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\nCollecting pydicom\n  Downloading pydicom-2.3.1-py3-none-any.whl (2.0 MB)\n     |████████████████████████████████| 2.0 MB 5.4 MB/s \nInstalling collected packages: pydicom\nSuccessfully installed pydicom-2.3.1\n```", "```py\n# Import the pacakage\nimport pydicom\n```", "```py\n# Reading a DICOM file from a specific path\ndcm_data = pydicom.dcmread('/content/drive/MyDrive/Datasets/Kaggle/DICOM/dicom_lung/000000.dcm')\ndcm_data\n```", "```py\n# Extract the patient's name.\npatient_name = dcm_data.PatientName\npatient_name\n```", "```py\n'C3N-00247'\n```", "```py\n# Extract the patient's name using its unique DICOM tag (0010, 0010)\ndcm_data[0x0010, 0x0010]\n```", "```py\n(0010, 0010) Patient's Name                      PN: 'C3N-00247'\n```", "```py\n# Extract the patient's name using its unique DICOM tag (0010, 0010)\ndcm_data[0x0010, 0x0010].value\n```", "```py\n'C3N-00247'\n```", "```py\n# Extract the keys, the DICOM tags, that are in a DICOM file\ndcm_data.keys()\n```", "```py\n# Extract the values, the DICOM attributes, that are in a DICOM file\ndcm_data.values()\n```", "```py\n# Extract the top-level elements of the Dataset Class\n[*dcm_data.elements()]\n```", "```py\n# Extract the attributes related to 0x0028 tag, these are related to ImagePixel\ndcm_data.group_dataset(0x0028)\n```", "```py\n(0028, 0002) Samples per Pixel                   US: 1\n(0028, 0004) Photometric Interpretation          CS: 'MONOCHROME2'\n(0028, 0010) Rows                                US: 512\n(0028, 0011) Columns                             US: 512\n(0028, 0030) Pixel Spacing                       DS: [0.564453125, 0.564453125]\n(0028, 0100) Bits Allocated                      US: 16\n(0028, 0101) Bits Stored                         US: 12\n(0028, 0102) High Bit                            US: 11\n(0028, 0103) Pixel Representation                US: 0\n(0028, 0106) Smallest Image Pixel Value          US: 0\n(0028, 0107) Largest Image Pixel Value           US: 4095\n(0028, 0303) Longitudinal Temporal Information M CS: 'MODIFIED'\n(0028, 1050) Window Center                       DS: [-500, 40]\n(0028, 1051) Window Width                        DS: [1500, 400]\n(0028, 1052) Rescale Intercept                   DS: '-1024.0'\n(0028, 1053) Rescale Slope                       DS: '1.0'\n(0028, 1055) Window Center & Width Explanation   LO: ['WINDOW1', 'WINDOW2']\n```", "```py\n# An alphabetical list of the element keywords in the DICOM DataSet.\ndcm_data.dir()\n```", "```py\n['AccessionNumber', 'AcquisitionDate', 'AcquisitionNumber', 'AcquisitionTime',\n 'BitsAllocated', 'BitsStored', 'BodyPartExamined', 'CTDIvol',\n 'ClinicalTrialTimePointDescription', 'ClinicalTrialTimePointID', 'Columns',\n 'ContentDate', 'ContentTime', 'ConvolutionKernel', 'DataCollectionDiameter',\n 'DateOfLastCalibration', 'DeidentificationMethod', 'DeidentificationMethodCodeSequence',\n 'DistanceSourceToDetector', 'DistanceSourceToPatient', 'EstimatedDoseSaving',\n 'EthnicGroup', 'Exposure', 'ExposureModulationType', 'ExposureTime',\n 'FilterType', 'FocalSpots', 'FrameOfReferenceUID', 'GantryDetectorTilt',\n 'GeneratorPower', 'HighBit', 'ImageComments', 'ImageOrientationPatient',\n 'ImagePositionPatient', 'ImageType', 'InstanceNumber', 'KVP', 'LargestImagePixelValue',\n 'LongitudinalTemporalInformationModified', 'Manufacturer', 'ManufacturerModelName',\n 'Modality', 'PatientAge', 'PatientBirthDate', 'PatientID', 'PatientIdentityRemoved',\n 'PatientName', 'PatientPosition', 'PatientSex', 'PerformedProcedureStepStartDate',\n 'PerformedProcedureStepStartTime', 'PhotometricInterpretation', 'PixelData',\n 'PixelRepresentation', 'PixelSpacing', 'PositionReferenceIndicator', 'ProtocolName',\n 'ReasonForStudy', 'ReconstructionDiameter', 'ReferencedImageSequence',\n 'ReferencedStudySequence', 'ReferringPhysicianName', 'RequestedProcedureDescription',\n 'RescaleIntercept', 'RescaleSlope', 'RotationDirection', 'Rows', 'SOPClassUID',\n 'SOPInstanceUID', 'SamplesPerPixel', 'SeriesDate', 'SeriesDescription',\n 'SeriesInstanceUID', 'SeriesNumber', 'SeriesTime', 'SingleCollimationWidth',\n 'SliceLocation', 'SliceThickness', 'SmallestImagePixelValue', 'SoftwareVersions',\n 'SourceImageSequence', 'SpecificCharacterSet', 'SpiralPitchFactor', 'StudyComments',\n 'StudyDate', 'StudyDescription', 'StudyID', 'StudyInstanceUID', 'StudyPriorityID',\n 'StudyStatusID', 'StudyTime', 'TableFeedPerRotation', 'TableHeight', 'TableSpeed',\n 'TimeOfLastCalibration', 'TotalCollimationWidth', 'WindowCenter', 'WindowCenterWidthExplanation',\n 'WindowWidth', 'XRayTubeCurrent']\n```", "```py\n# Extract all the attributes that have \"Pixel\" in its keywords\ndcm_data.dir('Pixel')\n```", "```py\n['LargestImagePixelValue',\n 'PixelData',\n 'PixelRepresentation',\n 'PixelSpacing',\n 'SamplesPerPixel',\n 'SmallestImagePixelValue']\n```", "```py\n# Extract the image pixels\ndcm_data.pixel_array\n```", "```py\narray([[356, 244, 201, ..., 190, 224,  76],\n       [309, 387, 370, ..., 122,  17,   6],\n       [334, 476, 486, ...,  29,  46,  47],\n       ...,\n       [ 98, 188, 186, ..., 156,  86, 125],\n       [ 66, 138, 139, ..., 221,  74,  81],\n       [168, 173, 100, ..., 188, 135, 147]], dtype=uint16)\n```", "```py\n# Image representation\nim = dcm_data.pixel_array\n\nplt.imshow(im, cmap='gray')\nplt.axis('off')\nplt.title('Axial Slice of a Chest-CT')\nplt.show()\n```", "```py\n# Return the element's keyword (if known) as str\nkwrds = dcm_data[0x0010, 0x0010].keyword\n\n# Return the DICOM dictionary name for the element as str\nname = dcm_data[0x0010, 0x0010].name\n\n# Return the element's Value Representation\nvr = dcm_data[0x0010, 0x0010].VR\n\n# Return the element's value.\nvalue = dcm_data[0x0010, 0x0010].value\n\nprint(\"The element's Keyword              : \", kwrds)\nprint(\"The element's name                 : \", name)\nprint(\"The element's Value Representation : \", vr)\nprint(\"The element's value                : \", value)\n```", "```py\nThe element's Keyword              :  PatientName\nThe element's name                 :  Patient's Name\nThe element's Value Representation :  PN\nThe element's value                :  C3N-00247\n```", "```py\n# Extract all the attributes that have \"Sequence\" in its keywords\ndcm_data.dir('Sequence')\n```", "```py\n['DeidentificationMethodCodeSequence',\n 'ReferencedImageSequence',\n 'ReferencedStudySequence',\n 'SourceImageSequence']\n```", "```py\n# Return a specific Sequence, \"DeidentificationMethodCodeSequence\"\ndcm_data.DeidentificationMethodCodeSequence\n```", "```py\n<Sequence, length 8>\n```", "```py\n# Extract the contents of a Sequence\ndcm_data.DeidentificationMethodCodeSequence[:]\n```", "```py\n[(0008, 0100) Code Value                          SH: '113100'\n (0008, 0102) Coding Scheme Designator            SH: 'DCM'\n (0008, 0104) Code Meaning                        LO: 'Basic Application Confidentiality Profile',\n (0008, 0100) Code Value                          SH: '113101'\n (0008, 0102) Coding Scheme Designator            SH: 'DCM'\n (0008, 0104) Code Meaning                        LO: 'Clean Pixel Data Option',\n (0008, 0100) Code Value                          SH: '113104'\n (0008, 0102) Coding Scheme Designator            SH: 'DCM'\n (0008, 0104) Code Meaning                        LO: 'Clean Structured Content Option',\n (0008, 0100) Code Value                          SH: '113105'\n (0008, 0102) Coding Scheme Designator            SH: 'DCM'\n (0008, 0104) Code Meaning                        LO: 'Clean Descriptors Option',\n (0008, 0100) Code Value                          SH: '113107'\n (0008, 0102) Coding Scheme Designator            SH: 'DCM'\n (0008, 0104) Code Meaning                        LO: 'Retain Longitudinal Temporal Information Modified Dates Option',\n (0008, 0100) Code Value                          SH: '113108'\n (0008, 0102) Coding Scheme Designator            SH: 'DCM'\n (0008, 0104) Code Meaning                        LO: 'Retain Patient Characteristics Option',\n (0008, 0100) Code Value                          SH: '113109'\n (0008, 0102) Coding Scheme Designator            SH: 'DCM'\n (0008, 0104) Code Meaning                        LO: 'Retain Device Identity Option',\n (0008, 0100) Code Value                          SH: '113111'\n (0008, 0102) Coding Scheme Designator            SH: 'DCM'\n (0008, 0104) Code Meaning                        LO: 'Retain Safe Private Option']\n```", "```py\n# Return the info of specific line in a Sequence\ndcm_data.DeidentificationMethodCodeSequence[0].CodeMeaning\n```", "```py\n'Basic Application Confidentiality Profile'\n```"]