- en: From Data Engineering to Prompt Engineering
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/from-data-engineering-to-prompt-engineering-5debd1c636e0?source=collection_archive---------1-----------------------#2023-05-22](https://towardsdatascience.com/from-data-engineering-to-prompt-engineering-5debd1c636e0?source=collection_archive---------1-----------------------#2023-05-22)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Solving data preparation tasks with ChatGPT
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@c4ristian?source=post_page-----5debd1c636e0--------------------------------)[![Christian
    Koch](../Images/6daf756236838069bf79f1078b03ae6d.png)](https://medium.com/@c4ristian?source=post_page-----5debd1c636e0--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5debd1c636e0--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5debd1c636e0--------------------------------)
    [Christian Koch](https://medium.com/@c4ristian?source=post_page-----5debd1c636e0--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7633c76cf996&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-data-engineering-to-prompt-engineering-5debd1c636e0&user=Christian+Koch&userId=7633c76cf996&source=post_page-7633c76cf996----5debd1c636e0---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----5debd1c636e0--------------------------------)
    ·8 min read·May 22, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5debd1c636e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-data-engineering-to-prompt-engineering-5debd1c636e0&user=Christian+Koch&userId=7633c76cf996&source=-----5debd1c636e0---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5debd1c636e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-data-engineering-to-prompt-engineering-5debd1c636e0&source=-----5debd1c636e0---------------------bookmark_footer-----------)![](../Images/9fd676ffe1e9c0711ce34e74831e47e0.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Ricardo Gomez Angel](https://unsplash.com/@rgaleriacom?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: Data engineering makes up a large part of the data science process. In CRISP-DM
    this process stage is called “data preparation”. It comprises tasks such as data
    ingestion, data transformation and data quality assurance. In our article we solve
    typical data engineering tasks using ChatGPT and Python. By doing so, we explore
    the link between data engineering and the new discipline of prompt engineering.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In May 2022, Stephen Wolfram and Lex Fridman gave an insightful talk titled
    “[Is programming dead?](https://www.youtube.com/watch?v=uD353DeOM-4)”. They discussed
    whether high-level languages will still be used by developers in future. According
    to Wolfram, many programming tasks can be automated with large language models
    (LLMs). At the time of this writing, the most prominent example of such a model
    is [ChatGPT](https://openai.com/blog/chatgpt). Since its introduction in late
    2022, it has generated astonishing results. Specifying an action to be performed
    by an LLM is referred to as “prompt engineering”. If Wolfram is right, at least
    part of software development will shift from writing code to writing prompts.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在2022年5月，Stephen Wolfram和Lex Fridman进行了题为“[编程已死？](https://www.youtube.com/watch?v=uD353DeOM-4)”的深刻讲座。他们讨论了高层语言是否仍会被开发者使用。根据Wolfram的说法，许多编程任务可以用大型语言模型（LLMs）来自动化。在撰写本文时，这种模型的最突出例子是[ChatGPT](https://openai.com/blog/chatgpt)。自2022年末推出以来，它产生了惊人的结果。指定LLM要执行的操作被称为“提示工程”。如果Wolfram是对的，那么软件开发的部分工作将从编写代码转向编写提示。
- en: When it comes to data science, data preparation can be a time-consuming and
    tedious task. So why not try to automate it with an LLM? In the following sections
    we tackle different data engineering problems with ChatGPT and Python. Instead
    of writing the Python code ourselves, we used prompt engineering to generate it.
    Our experiment was conducted on 19 May 2023 based on the latest freely available
    ChatGPT version (GPT-3.5) at the time.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据科学中，数据准备可能是一个耗时且繁琐的任务。那么为什么不尝试用LLM自动化呢？在接下来的部分，我们将用ChatGPT和Python处理不同的数据工程问题。我们没有自己编写Python代码，而是使用提示工程来生成代码。我们的实验于2023年5月19日进行，基于当时最新的免费ChatGPT版本（GPT-3.5）。
- en: Creating a data frame
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建数据框
- en: Let’s start with a simple problem and create a Pandas data frame from a sample
    dataset. Table 1 contains national indicators as provided for instance by the
    [World Bank](https://data.worldbank.org/indicator).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从一个简单的问题开始，并从样本数据集中创建一个Pandas数据框。表格1包含了由[世界银行](https://data.worldbank.org/indicator)提供的国家指标。
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '*Table 1: Dataset with national indicators*'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '*表格1：包含国家指标的数据集*'
- en: 'In order to create a data frame from the sample above, we started a new conversation
    with ChatGPT and posted the following prompt:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 为了从上述样本创建数据框，我们开始了与ChatGPT的新对话，并发布了以下提示：
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '*Prompt 1: Creating a data frame*'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '*提示1：创建数据框*'
- en: 'In response, the model generated the Python code below:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 作为回应，模型生成了以下Python代码：
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '*Response 1: Code for data frame creation*'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '*响应1：数据框创建代码*'
- en: 'When running the script, we see that the output matches our specification:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 运行脚本时，我们看到输出符合我们的规范：
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Even though we used a sample for our experiment, the code generated in the next
    sections can in principle also handle bigger datasets.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 即使我们使用了一个样本进行实验，接下来的代码原则上也可以处理更大的数据集。
- en: Pivoting the data frame
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据框的透视
- en: For data science, the table structure we created with our first prompt is not
    optimal. Instead, a so-called “flat table” would be more convenient. In Table
    1, the indicators “GDP” and “Population” are represented by two columns named
    “Variable” and “Value”. In contrast, a flat table would contain separate columns
    for each indicator, as shown in Table 2.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 对于数据科学而言，我们用第一个提示创建的表格结构并不理想。相反，所谓的“平面表”会更方便。在表格1中，指标“GDP”和“Population”由名为“Variable”和“Value”的两列表示。相比之下，平面表将包含每个指标的单独列，如表格2所示。
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '*Table 2: Flat table with national indicators*'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '*表格2：包含国家指标的平面表*'
- en: 'Converting the format of Table 1 into the format of Table 2 is called “pivoting”.
    Let us try to solve this task with ChatGPT. To this end, we posted a second prompt
    in our conversation:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 将表格1的格式转换为表格2的格式称为“透视”。让我们尝试用ChatGPT解决这个任务。为此，我们在对话中发布了第二个提示：
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '*Prompt 2: Pivoting the data frame*'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '*提示2：数据框透视*'
- en: 'The above message is based on an example of the required data format. Alternatively,
    we could have formulated our request in a purely verbal way. As with classical
    programming, there are alternative solutions to achieve a goal in prompt engineering.
    Finding the optimal way will be an exciting task for the near future. As a result
    of our prompt, ChatGPT adjusted the Python code as follows:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 上述信息基于所需数据格式的示例。我们本可以用纯口头方式表述我们的请求。与经典编程一样，提示工程中有替代解决方案来实现目标。找到最佳方式将是未来令人兴奋的任务。作为我们提示的结果，ChatGPT调整了Python代码如下：
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '*Response 2: Pivoting code*'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '*响应2：透视代码*'
- en: 'However, running the second version of the script reveals that the output is
    not what we had requested:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，运行脚本的第二个版本显示的输出并不是我们所请求的：
- en: '[PRE7]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Instead of the expected columns “GDP” and “Population”, the table contains
    two columns named “Demographics” and “Economy”. To fix this problem, we posted
    the next prompt:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 而不是预期的列“GDP”和“人口”，表中包含两列名为“人口统计”和“经济”。为了解决这个问题，我们发布了下一个提示：
- en: '[PRE8]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '*Prompt 3: Fix for the pivoting code*'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '*提示 3：修复枢轴代码*'
- en: 'In response, the model corrected the mistake and generated another version
    of the Python code:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 对此，模型纠正了错误并生成了Python代码的另一版本：
- en: '[PRE9]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '*Response 3: Fixed pivoting code*'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '*响应 3：修正的枢轴代码*'
- en: 'Running the script reveals that the pivoting was implemented correctly this
    time:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 运行脚本显示，这次实施了正确的枢轴：
- en: '[PRE10]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Enriching the data frame
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 丰富数据框
- en: 'Another typical data engineering task is to enrich a dataset with additional
    information. For this purpose, we asked ChatGPT to add [ISO country codes](https://en.wikipedia.org/wiki/ISO_3166-1)
    to our data by posting the prompt below:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个典型的数据工程任务是用额外信息丰富数据集。为此目的，我们要求ChatGPT通过发布以下提示为我们的数据添加[ISO国家代码](https://en.wikipedia.org/wiki/ISO_3166-1)：
- en: '[PRE11]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '*Prompt 4: Adding country codes*'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '*提示 4：添加国家代码*'
- en: 'As a result, the model adjusted the response and returned the following code
    snippet:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 结果，模型调整了响应并返回了以下代码片段：
- en: '[PRE12]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '*Response 4: Data frame with country codes*'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '*响应 4：带有国家代码的数据框*'
- en: Running the script shows that a new column with ISO codes had been added to
    the data frame.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 运行脚本显示，数据框已添加了ISO代码的新列。
- en: '[PRE13]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Deriving a column
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 派生一个列
- en: 'Let us next derive a new column “GDP per capita” by dividing the GDP of a country
    by its population size. To do so, we have sent this prompt:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们接下来通过将一个国家的GDP除以其人口大小来派生一个新列“人均 GDP”。为此，我们发送了这个提示：
- en: '[PRE14]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '*Prompt 5: Deriving a new column*'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '*提示 5：派生一个新列*'
- en: 'In response, the model revised the code as follows:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 对此，模型修改了代码如下：
- en: '[PRE15]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '*Response 5: Data frame with new column*'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '*响应 5：带有新列的数据框*'
- en: 'The output reveals that the script produces the expected result:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 输出显示脚本产生了预期的结果：
- en: '[PRE16]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Analyzing the data
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析数据
- en: 'Once the data transformations are completed, the actual analysis can begin.
    Let us finally calculate the correlation coefficient between the GDP and the population
    of the countries. To this end, we posted a last prompt:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦数据转换完成，实际分析就可以开始了。最后让我们计算国家的GDP和人口之间的相关系数。为此，我们发布了最后一个提示：
- en: '[PRE17]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '*Prompt 6: Analyzing correlation*'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '*提示 6：分析相关性*'
- en: 'As a result, the model returned the code fragment below:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，模型返回了以下代码片段：
- en: '[PRE18]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '*Response 6: Code to analyze correlation*'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '*响应 6：分析相关性的代码*'
- en: 'When running the script, we find a positive correlation between the two variables,
    which is not a surprise:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 运行脚本时，我们发现这两个变量之间存在正相关，这并不令人意外：
- en: '[PRE19]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Conclusion
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: 'Admittedly, our experiment was based on a simple dataset. Nevertheless, the
    results are remarkable. We performed several data engineering tasks without writing
    a single line of code. ChatGPT was not only able to correctly implement our prompts
    in most cases. But even when the model made a mistake, it was capable of reflecting
    and fixing it. As always in software development, generated code must be tested.
    Moreover, it may need refactoring and optimization. Using pylint is still a good
    idea in the age of AI. Summarizing, however, we have to agree with Wolfram: In
    future, a significant part of data engineering will shift from coding to prompt
    engineering. This new approach will not replace data engineers, but will make
    them more efficient.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 诚然，我们的实验基于一个简单的数据集。尽管如此，结果令人瞩目。我们完成了多项数据工程任务，而不用写一行代码。ChatGPT不仅在大多数情况下能够正确实现我们的提示，即使在模型犯错时，它也能够反思并修正。正如在软件开发中一样，生成的代码必须经过测试。此外，它可能需要重构和优化。在AI时代，使用pylint仍然是个好主意。总结来说，然而，我们不得不同意沃尔夫勒姆的观点：未来，数据工程的重要部分将从编码转向提示工程。这种新方法不会取代数据工程师，但会让他们变得更高效。
- en: All images unless otherwise noted are by the authors.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 所有图片（除非另有说明）均由作者提供。
- en: About the authors
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于作者
- en: '*Christian Koch* is an Enterprise Architect at BWI GmbH and Lecturer at the
    Nuremberg Institute of Technology Georg Simon Ohm.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '*克里斯蒂安·科赫*是BWI GmbH的企业架构师，同时也是纽伦堡理工大学乔治·西蒙·奥姆学院的讲师。'
- en: '*Markus Stadi* is a Senior Cloud Data Engineer at Dehn SE working in the field
    of Data Engineering, Data Science and Data Analytics for many years.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '*马库斯·施塔迪*是Dehn SE的高级云数据工程师，多年来一直从事数据工程、数据科学和数据分析工作。'
- en: '*Lukas Berle* is a Data Architect at TeamBank AG specialized in the design
    and implementation of robust data analytics architectures.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '*卢卡斯·伯勒* 是 TeamBank AG 的数据架构师，专注于设计和实施强大的数据分析架构。'
