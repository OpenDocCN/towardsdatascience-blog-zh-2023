["```py\n./setup.sh -u <user name> -p <project id> -r <region>\n```", "```py\nterraform init \n```", "```py\nterraform plan [-var=\"include_module_storage=<true or false>\"]\n```", "```py\nTerraform used the selected providers to generate the following execution plan. Resource actions are indicated with the\nfollowing symbols:\n  + create\n <= read (data resources)\n\nTerraform will perform the following actions:\n\n  # data.google_service_account_access_token.default will be read during apply\n  # (config refers to values not yet known)\n <= data \"google_service_account_access_token\" \"default\" {\n      + access_token           = (sensitive value)\n      + id                     = (known after apply)\n      + scopes                 = [\n          + \"cloud-platform\",\n          + \"userinfo-email\",\n        ]\n      + target_service_account = (known after apply)\n    }\n\n  ...\n\n  # module.iam.google_service_account_iam_binding.admin_account_iam will be created\n  + resource \"google_service_account_iam_binding\" \"admin_account_iam\" {\n      + etag               = (known after apply)\n      + id                 = (known after apply)\n      + members            = [\n          + \"user:thushv@gmail.com\",\n        ]\n      + role               = \"roles/iam.serviceAccountTokenCreator\"\n      + service_account_id = (known after apply)\n    }\n\nPlan: 9 to add, 0 to change, 0 to destroy.\n```", "```py\nterraform apply [-var=\"include_module_storage=<true or false>\"]\n```", "```py\nresource \"google_service_account\" \"sa_gke_admin\" {\n  account_id   = \"gke-admin\"\n  display_name = \"GKE Service Account (Admin)\"\n}\n```", "```py\ndata \"google_service_account_access_token\" \"default\" {\n provider                = google.impersonation_helper\n target_service_account  = module.iam.service_account_gke_admin\n scopes                  = [\"userinfo-email\", \"cloud-platform\"]\n depends_on = [module.iam]\n}\n```", "```py\nterraform {\n  required_providers {\n    google = {\n      source  = \"hashicorp/google\"\n      version = \"3.5.0\"\n    }\n  }\n}\n```", "```py\nvariable \"gcp_user\" {\n  type = string\n  description = \"Your username for GCP\"\n}\n```", "```py\noutput \"service_account_gke_node\" {\n  description = \"GKE node service account\"\n  value       = google_service_account.sa_gke_node.email\n}\n```", "```py\nvariable \"gcp_user\" {\n  type = string\n  description = \"Your username for GCP\"\n}\n```", "```py\noutput \"service_account_gke_node\" {\n  description = \"GKE node service account\"\n  value       = google_service_account.sa_gke_node.email\n}\n```"]