- en: Data-Oriented Programming in Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/data-oriented-programming-with-python-ef478c43a874?source=collection_archive---------1-----------------------#2023-05-12](https://towardsdatascience.com/data-oriented-programming-with-python-ef478c43a874?source=collection_archive---------1-----------------------#2023-05-12)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A recap on *Data-Oriented Programming* by Yehonathan Sharvit but illustrated
    with Python examples (instead of JavaScript and Java)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@tamdtranthe?source=post_page-----ef478c43a874--------------------------------)[![Tam
    D Tran-The](../Images/2d1fcc2d5bfda09f26719c3a86817836.png)](https://medium.com/@tamdtranthe?source=post_page-----ef478c43a874--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ef478c43a874--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ef478c43a874--------------------------------)
    [Tam D Tran-The](https://medium.com/@tamdtranthe?source=post_page-----ef478c43a874--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff13e13f2829a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-oriented-programming-with-python-ef478c43a874&user=Tam+D+Tran-The&userId=f13e13f2829a&source=post_page-f13e13f2829a----ef478c43a874---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ef478c43a874--------------------------------)
    ·12 min read·May 12, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fef478c43a874&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-oriented-programming-with-python-ef478c43a874&user=Tam+D+Tran-The&userId=f13e13f2829a&source=-----ef478c43a874---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fef478c43a874&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-oriented-programming-with-python-ef478c43a874&source=-----ef478c43a874---------------------bookmark_footer-----------)![](../Images/0394f0fd53608e090d14270536bf6869.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [AltumCode](https://unsplash.com/@altumcode?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: '[*Data-Oriented Programming*](https://www.manning.com/books/data-oriented-programming?utm_source=medium&utm_medium=referral&utm_campaign=book_sharvit2_data_1_29_21)
    by Yehonathan Sharvit is a great book that gives a gentle introduction to the
    concept of data-oriented programming (DOP) as an alternative to good old object-oriented
    programming (OOP). Sharvit deconstructs the elements of complexity that sometimes
    seems inevitable with OOP and summarizes the main principles of DOP that helps
    us make the system more manageable.'
  prefs: []
  type: TYPE_NORMAL
- en: As its name suggests, DOP puts data first and foremost. This can be achieved
    by adhering to four main principles. These principles are language-agnostic. They
    can be represented in OOP languages (Java, C++, etc.), functional programming
    (FP) languages (Clojure, etc.) or general-purpose languages (Python, JavaScript).
    Whereas the author illustrates his examples using JavaScript and Java, this article
    attempts to demonstrate the ideas in Python.
  prefs: []
  type: TYPE_NORMAL
- en: Following along the article, you’ll find simple code snippets in Python that
    illustrate how each principle can be adhered to or broken. Sharvit also clarifies
    what the benefits and costs for each principle — many of them are relevant in
    Python whereas some are not.
  prefs: []
  type: TYPE_NORMAL
