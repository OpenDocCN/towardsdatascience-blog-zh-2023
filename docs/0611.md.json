["```py\n# install fastICA package in R\ninstall.packages(\"fastICA\")\n\n# load required libraries\nlibrary(MASS) # To use mvrnorm()\nlibrary(fastICA)\n```", "```py\n# random data for signal 1 \ns1=as.numeric(0.7*sin((1:1000)/19+0.57*pi) + mvrnorm(n = 1000, mu = 0, Sigma = 0.004))\nplot(s1, col=\"red\", main = \"Signal 1\", xlab = \"Time\", ylab = \"Amplitude\")\n\n# random data for signal 1 \ns2=as.numeric(sin((1:1000)/33) + mvrnorm(n = 1000, mu = 0.03, Sigma = 0.005)) \nplot(s2, col=\"blue\", main = \"Signal 2\",xlab = \"Time\", ylab = \"Amplitude\")\n```", "```py\n# measurements with mixed data x1 and x2\nx1 <- sine1-2*sine2\nplot(x1, main = \"Linearly Mixed Signal 1\", xlab = \"Time\", ylab = \"Amplitude\")\n\nx2 <- 1.73*sine1 +3.41*sine2\nplot(x2, main = \"Linearly Mixed Signal 2\", xlab = \"Time\", ylab = \"Amplitude\")\n```", "```py\n# apply fastICA function to identify independent signals\nmeasurements <- t(rbind(x1,x2))\n\nestimation <- fastICA(measurements, 2, alg.typ = \"parallel\", fun = \"logcosh\", alpha = 1, method = \"C\", row.norm = FALSE, maxit = 200, tol = 0.0001, verbose = TRUE)\n\nplot(estimation$S[,1], col=\"red\", main = \"Estimated signals\", xlab = \"Time\", ylab = \"Amplitude\")\nlines(estimation$S[,2], col=\"blue\") \nmtext(\"Signal 1 estimation in red, Signal 2 estimation in blue\")\n```"]