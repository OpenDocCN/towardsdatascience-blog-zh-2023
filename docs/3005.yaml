- en: Combining Open Street Map and Landsat open data to verify areas of green zones
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/combining-open-street-map-and-landsat-open-data-to-verify-areas-of-green-zones-b1956e561321?source=collection_archive---------4-----------------------#2023-10-02](https://towardsdatascience.com/combining-open-street-map-and-landsat-open-data-to-verify-areas-of-green-zones-b1956e561321?source=collection_archive---------4-----------------------#2023-10-02)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Quick and simple analysis for precise assessment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@mik.sarafanov?source=post_page-----b1956e561321--------------------------------)[![Mikhail
    Sarafanov](../Images/88869a3c6f664785c90539dd7aab6d74.png)](https://medium.com/@mik.sarafanov?source=post_page-----b1956e561321--------------------------------)[](https://towardsdatascience.com/?source=post_page-----b1956e561321--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----b1956e561321--------------------------------)
    [Mikhail Sarafanov](https://medium.com/@mik.sarafanov?source=post_page-----b1956e561321--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F209c78c40898&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcombining-open-street-map-and-landsat-open-data-to-verify-areas-of-green-zones-b1956e561321&user=Mikhail+Sarafanov&userId=209c78c40898&source=post_page-209c78c40898----b1956e561321---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----b1956e561321--------------------------------)
    ·7 min read·Oct 2, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb1956e561321&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcombining-open-street-map-and-landsat-open-data-to-verify-areas-of-green-zones-b1956e561321&user=Mikhail+Sarafanov&userId=209c78c40898&source=-----b1956e561321---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb1956e561321&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcombining-open-street-map-and-landsat-open-data-to-verify-areas-of-green-zones-b1956e561321&source=-----b1956e561321---------------------bookmark_footer-----------)![](../Images/b24f6f438be853dba67cd6596a75981e.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Preview image (by author)
  prefs: []
  type: TYPE_NORMAL
- en: 'Today we would like to talk about the benefits of combining spatial data from
    various open data sources. For example, we will consider the following task: evaluating
    whether a particular property is located in a “green” area. Without further ado,
    let’s get down to business!'
  prefs: []
  type: TYPE_NORMAL
- en: P.S. Below, we consider a simple method of calculation based only on open data,
    covering most (I would like to believe all) of the cities. That’s why below you
    will not see [descriptions of machine learning approaches trained on such data,
    which is unlikely to be freely available](https://www.mdpi.com/2072-4292/12/18/3017).
  prefs: []
  type: TYPE_NORMAL
- en: '**Approach 1\. The most accurate, but not for the lazy ones**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s imagine that such an evaluation task occurred for a property in the city
    of Berlin at “*Berlin, Neustädtische Kirchstraße 4–7*”. The task was given not
    by some full-time programmer, but, suppose, a person who can not program, but
    diligent and ready to learn something novel. After searching on the Internet,
    the “expert on assessing the greenness of the area” already downloaded QGIS and
    learned how to use the module Quick Map Services. The next steps may be obvious,
    but by far they are not easy: there is a need to figure out in what format spatial
    data are represented in geographic information systems (GIS) (vector and raster),
    then learn to create such objects and compare them with each other (to calculate
    the areas).'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ee2543df8da252e01b0b6ad7052f95b4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1\. Picture so you don’t get bored reading: such are the primitives
    used in GIS to describe spatial objects (image by author)'
  prefs: []
  type: TYPE_NORMAL
- en: Despite the fact that along with the actions described above it is necessary
    to fill many other knowledge gaps (for example, what is a coordinate reference
    system and what they are), the most time-consuming process may be the creation
    of objects — vectorization. And while GIS operations will be easier and easier
    to do with knowledge and experience, vectorization is difficult to automate (it
    is almost always the case).
  prefs: []
  type: TYPE_NORMAL
- en: So, what can our specialist do? They can download Google Satellite data through
    the Quick Map Services module and manually label the data — draw the geometries
    of the objects themselves. In this case — parks and everything that looks like
    them. Then it will be able to put a buffer of 2,000 meters around (for example)
    the property to calculate its area. Then select those properties that lie in the
    same area and allocate them as green spaces, and calculate their area. The ratio
    “area of green areas in the neighborhood / area of the neighborhood” will be the
    value we are looking for.
  prefs: []
  type: TYPE_NORMAL
- en: An important clarification is to suggest that our specialist lives in Berlin
    and knows the investigated area well. Therefore, manually selected objects from
    the image can be considered as some combination of ground survey together with
    manual satellite image mapping.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/50871188ad2a3988e23a70e9131f057a.png)'
  prefs: []
  type: TYPE_IMG
- en: Animation 1\. Simple vectorization. Selecting objects on the map (satellite
    image) and representing them as a vector layer (animation by author)
  prefs: []
  type: TYPE_NORMAL
- en: '**Pros:** Fairly accurate and objective estimation. The calculated ratio fully
    characterized the “greenness of the neighborhood”. Our specialist will definitely
    get a bonus.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Cons:** The proposed approach requires a lot of manual steps. Such work can’t
    be done quickly (it took me 4 hours in total). Also we have to repeat a lot of
    the identical actions — such work can make our specialist work for a couple of
    weeks and go to a company where they will not make him/her count the green zones
    in such a way.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Approach 2\. Cheap and cheerful**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Surely we are talking about OpenStreetMap… Meanwhile our hero has realized
    that IT in general is much more interesting than real estate and started to learn
    Python programming language (of course). He/she got familiar with the [osmnx](https://osmnx.readthedocs.io/en/stable/)
    module and [geopandas](https://geopandas.org/en/stable/) library to process spatial
    data and [shapely](https://shapely.readthedocs.io/en/stable/manual.html) library
    to process geometries. With this trio, it is possible to perform a procedural
    evaluation of the greenness of an area. There is a need to perform the following
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a polygon around the point (property) — the boundary of the area to analyze
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Query the OSM data that lie in this polygon (to query it, there is a need to
    figure out the [tagging system that OSM has](https://wiki.openstreetmap.org/wiki/Tags))
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Calculate areas at the area polygon and obtained geometries of parks and green
    areas according to OSM
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Such an approach is much faster, since it doesn’t require manual creation of
    polygons. Indeed, other people have already created these polygons for us — that’s
    what makes the OSM great. However, OSM has disadvantages — the data may be inaccurate.
    Moreover, even if the polygons are rendered correctly by users, there is always
    a chance that we will just miscalculate the set of tags for a query and miss some
    important piece of data (Figure 2).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/78023f6fce264d1330d0eeffb898cb39.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2\. An example of a green area, which according to OSM is a yard area
    and there is no way to distinguish it by tags somehow related to “green areas”
    (image by author)
  prefs: []
  type: TYPE_NORMAL
- en: And there are quite a lot of these zones. Figure 2 shows only a small fraction.
    However, even this approach allows us to quickly and roughly, but still objectively
    assess the greenness of the area.
  prefs: []
  type: TYPE_NORMAL
- en: '**Pros:** Fast and easy to evaluate. Despite inaccuracies, OSM data can be
    used in most cases'
  prefs: []
  type: TYPE_NORMAL
- en: '**Cons:** High estimation error if the source data is incorrect or if the set
    of tags to be queried is not detailed enough'
  prefs: []
  type: TYPE_NORMAL
- en: '**Approach 3\. Landsat images as a source of objective data**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Oh, how much has been said and written about Landsat. And also about applications
    based on the calculated vegetation index NDVI. If you are interested, we suggest
    to check the following materials:'
  prefs: []
  type: TYPE_NORMAL
- en: '[NDVI: Normalized Difference Vegetation Index](https://gisgeography.com/ndvi-normalized-difference-vegetation-index/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[NDVI pros and cons](https://naxsolutions.com/en/agriculture-precision-dictionary/ndvi-pros-cons/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[NDVI applications](https://www.cropin.com/blogs/ndvi-normalized-difference-vegetation-index)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To make a long story short:'
  prefs: []
  type: TYPE_NORMAL
- en: Landsat is a satellite that flies over the Earth and takes images with a fairly
    high spatial resolution (from 15–30 in the optical spectrum to 100 meters in the
    far infrared spectrum)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Normalized Difference Vegetation Index (NDVI) is a vegetation index that can
    be calculated from an image taken by Landsat. NDVI takes values from -1 to 1,
    where -1 means that in a given pixel there is nothing green at all (e.g. water),
    and 1 means that area in the pixel is very green — it is forest for example.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'So, we can get a Landsat image (can be downloaded from [here](https://earthexplorer.usgs.gov/)
    — search for “Landsat 8–9 OLI/TIRS C2 L2” product) for the selected area and calculate
    the NDVI. Then by varying the threshold we can segment the image into two classes:
    0 — not green area and 1 — green area. We can vary the threshold as we want (Figure
    3), but honestly, we don’t know for sure which binarization threshold would work
    best. Moreover, this “optimal threshold” will be different for each new image
    obtained from Landsat: both for a new territory and for a different datetime index.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/bb8dc0274b2403e3d7ad1255e31c86cf.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3\. NDVI matrix segmentation by thresholds 0.10, 0.15, 0.20\. Borders
    of “green zones” are shown in black (image by author)
  prefs: []
  type: TYPE_NORMAL
- en: '**Pros:** The approach provides up-to-date information about whether an area
    is green'
  prefs: []
  type: TYPE_NORMAL
- en: '**Cons:** Choosing the optimal threshold value is complicated — it is not clear
    which value to choose in order to separate vegetation from non-vegetation by threshold.
    There are [sources](https://www.researchgate.net/publication/351832336_Vegetation_Change_Analysis_using_Normalized_Difference_Vegetation_Index_and_Land_Surface_Temperature_in_Greater_Gir_Landscape),
    of course, where it is possible to find information about the proposed thresholds,
    for example, from 0.35 and above. But it is necessary to keep in mind that this
    optimal threshold value may change from image to image, from season to season,
    etc.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Approach 4\. Areas by Landsat, thresholds by OpenStreetMap**'
  prefs: []
  type: TYPE_NORMAL
- en: A reasonable solution to the threshold definition problem might be to use OSM
    data. Even though OSM data may have artifacts or missing some of the real-world
    objects, in general it gives a full picture of where objects (parks, squares,
    buildings) are located. So let’s overlay the geometry mapping obtained from OSM
    and NDVI data, and then build a histogram (Figure 4).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/aac4576052e284e2cc92740d271d01a6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4\. Histogram by two classes: NDVI values in green area chases according
    to OSM data and other NDVI values in the image (image by author)'
  prefs: []
  type: TYPE_NORMAL
- en: The black line in the figure shows a value that can be used as a threshold.
    Then it is possible to augment the OSM data with additional polygons obtained
    by automatic vectorization of the Landsat matrix. Thus, everything that is located
    to the right of the calculated threshold turns into “green zones”. Due to this
    approach, the boundaries are extended (Figure 5).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b635c05866f08163bcc841b84273b72e.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 5\. Boundaries of green zones before and after adjustment according to
    Landsat data (image by author)
  prefs: []
  type: TYPE_NORMAL
- en: '**Instead of a conclusion**'
  prefs: []
  type: TYPE_NORMAL
- en: There will be a picture…
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9f61339b293ddbe581d1a0cb9736fe23.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6\. Comparison of extracted boundaries using different methods (image
    by author)
  prefs: []
  type: TYPE_NORMAL
- en: 'As can be seen, the third approach with the adjustment of object boundaries
    using Landsat data turned out to be the closest to the benchmark (manual vectorization).
    The calculated values of the area also confirm that statement:'
  prefs: []
  type: TYPE_NORMAL
- en: '**(Benchmark) Manual vectorization:** 25 %'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Calculation with OSM data: 17 %'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Calculation based on refined OSM and NDVI Landsat data: 28 %'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As we can see, our estimate, although slightly overstated, is still much closer
    to actual values than the calculation according to OSM data. Moreover, our approach
    found green areas that we had not explored during manual vectorization — cemeteries
    in the north. If we exclude them from the analysis, the calculated areas will
    be much closer to the benchmark.
  prefs: []
  type: TYPE_NORMAL
- en: 'P.S. Based on this idea, we left the following artifacts:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/wiredhut/estaty](https://github.com/wiredhut/estaty) —
    Python open-source library for processing spatial data and preparing MVP algorithms
    for real estate analysis. The library is pretty new, but we plan to develop and
    improve it'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://api.greendex.wiredhut.com/](http://api.greendex.wiredhut.com/) — service
    for calculating the “green” index and an internal tool (extension for google spreadsheets),
    so that we can conveniently work with the above algorithms both through API and
    through formulas in tables (for those who do not know how to code). This version
    uses a simplified calculation without using Landsat satellites'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The story about combining OSM and Landsat data was told by [Mikhail Sarafanov](https://github.com/Dreamlone)
    and [Wiredhut team](https://wiredhut.com/)
  prefs: []
  type: TYPE_NORMAL
