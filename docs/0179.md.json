["```py\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(tibble)\nlibrary(purrr)\n\nTitanic <- titanic_train\n\nTitanic_gr1 <-\n  Titanic %>%\n  select(Survived:Fare) %>%\n  group_by(Pclass) %>%\n  summarise(across(c(Age, Fare), mean, na.rm = TRUE))\n\nTitanic_gr2 <-\n  Titanic %>%\n  select(Survived:Fare) %>%\n  group_by(Pclass, Survived) %>%\n  summarise(N = n()) %>%\n  pivot_wider(names_from = Survived, values_from = N) %>%\n  mutate(\"Survived (%)\" = `1`/(`0` + `1`)) %>%\n  select(1,4)\n\nTitanic_gr3 <-\n  Titanic %>%\n  select(Survived:Fare) %>%\n  group_by(Pclass, Sex) %>%\n  summarise(N = n()) %>%\n  pivot_wider(names_from = Sex, values_from = N)\n\nTitanic_gr <- reduce(list(Titanic_gr1, \n                          Titanic_gr2, \n                          Titanic_gr3), left_join) %>%\n  rename(Male = \"male\", Female = \"female\")\n```", "```py\nTitanic_gr\n\n# A tibble: 3 Ã— 6\n  Pclass   Age  Fare `Survived (%)` Female  Male\n   <int> <dbl> <dbl>          <dbl>  <int> <int>\n1      1  38.2  84.2          0.630     94   122\n2      2  29.9  20.7          0.473     76   108\n3      3  25.1  13.7          0.242    144   347\n```", "```py\nlibrary(ggplot2)\nlibrary(scales)\nlibrary(devtools)\ninstall_github(\"ricardo-bion/ggradar\", dependencies=TRUE)\nlibrary(ggradar)\n\nTitanic_gr %>%\n  mutate(across(-Pclass, normiranje)) %>%\n  ggradar(legend.title = \"Passenger class\") +\n  theme(legend.position = \"bottom\", legend.title = element_text(size = 17))\n```", "```py\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(tibble)\nlibrary(purrr)\nlibrary(scales)\nlibrary(ggplot2)\n\np_data <- Titanic_gr %>% rename(group = \"Pclass\")\n\ncircle_coords <- function(r, n_axis = ncol(p_data) - 1){\n  fi <- seq(0, 2*pi, (1/n_axis)*2*pi) + pi/2\n  x <- r*cos(fi)\n  y <- r*sin(fi)\n\n  tibble(x, y, r)\n}\n\ncentral_distance <- 0.2\n\nstep_1 <- map_df(seq(0, 1, 0.25) + central_distance, circle_coords) %>%\n    ggplot(aes(x, y)) +\n    geom_polygon(data = circle_coords(1 + central_distance), \n                 alpha = 1, fill = \"gray97\") +\n    geom_path(aes(group = r), lty = 2, alpha = 0.5) +\n    theme_void()\n```", "```py\naxis_coords <- function(n_axis){\n  fi <- seq(0, (1 - 1/n_axis)*2*pi, (1/n_axis)*2*pi) + pi/2\n  x1 <- central_distance*cos(fi)\n  y1 <- central_distance*sin(fi)\n  x2 <- (1 + central_distance)*cos(fi)\n  y2 <- (1 + central_distance)*sin(fi)\n\n  tibble(x = c(x1, x2), y = c(y1, y2), id = rep(1:n_axis, 2))\n}\n\nstep_2 <- step_1 + geom_line(data = axis_coords(ncol(p_data) - 1), \naes(x, y, group = id), alpha = 0.3)\n```", "```py\ntext_data <- p_data %>%\n  select(-group) %>%\n  map_df(~ min(.) + (max(.) - min(.)) * seq(0, 1, 0.25)) %>%\n  mutate(r = seq(0, 1, 0.25)) %>%\n  pivot_longer(-r, names_to = \"parameter\", values_to = \"value\")\n\ntext_coords <- function(r, n_axis = ncol(p_data) - 1){\n  fi <- seq(0, (1 - 1/n_axis)*2*pi, (1/n_axis)*2*pi) + pi/2 + 0.01*2*pi/r\n  x <- r*cos(fi)\n  y <- r*sin(fi)\n\n  tibble(x, y, r = r - central_distance)\n}\n\nlabels_data <- map_df(seq(0, 1, 0.25) + central_distance, text_coords) %>%\n  bind_cols(text_data %>% select(-r))\n\nstep_3 <- step_2 + \n    geom_text(data = labels_data, aes(x, y, label = value), alpha = 0.65) +\n    geom_text(data = text_coords(1 + central_distance + 0.2), \n              aes(x, y), label = labels_data$parameter[1:(ncol(p_data)-1)])\n```", "```py\nrescaled_coords <- function(r, n_axis){\n  fi <- seq(0, 2*pi, (1/n_axis)*2*pi) + pi/2\n  tibble(r, fi) %>% mutate(x = r*cos(fi), y = r*sin(fi)) %>% select(-fi)\n}\n\nrescaled_data <- p_data %>% \n  mutate(across(-group, rescale)) %>%\n  mutate(copy = pull(., 2)) %>% \n  pivot_longer(-group, names_to = \"parameter\", values_to = \"value\") %>%\n  group_by(group) %>%\n  mutate(coords = rescaled_coords(value + central_distance, ncol(p_data) - 1)) %>%\n  unnest\n\nstep_4 <- step_3 + \n    geom_point(data = rescaled_data, \n               aes(x, y, group = group, col = group), \n               size = 3) +\n    geom_path(data = rescaled_data, \n              aes(x, y, group = group, col = group), \n              size = 1)\n```", "```py\nstep_5 <- step_4 + \n    labs(col = \"Passenger class\") +\n    theme(legend.position = \"bottom\",\n          legend.text = element_text(size = 12),\n          legend.title = element_text(size = 12)) \n```", "```py\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(tibble)\nlibrary(purrr)\nlibrary(scales)\nlibrary(ggplot2)\n\nggspider <- function(p_data, \nlegend_title = \"Group\", \nbackground_color = \"gray97\", \narea_fill = TRUE, \ncentral_distance = 0.2, \naxis_name_offset = 0.2){\n\ncircle_coords <- function(r, n_axis = ncol(p_data) - 1){\n  fi <- seq(0, 2*pi, (1/n_axis)*2*pi) + pi/2\n  x <- r*cos(fi)\n  y <- r*sin(fi)\n\n  tibble(x, y, r)\n}\n\n(step_1 <- map_df(seq(0, 1, 0.25) + central_distance, circle_coords) %>%\n    ggplot(aes(x, y)) +\n    geom_polygon(data = circle_coords(1 + central_distance), alpha = 1, fill = background_color) +\n    geom_path(aes(group = r), lty = 2, alpha = 0.5) +\n    theme_void())\n\naxis_coords <- function(n_axis){\n  fi <- seq(0, (1 - 1/n_axis)*2*pi, (1/n_axis)*2*pi) + pi/2\n  x1 <- central_distance*cos(fi)\n  y1 <- central_distance*sin(fi)\n  x2 <- (1 + central_distance)*cos(fi)\n  y2 <- (1 + central_distance)*sin(fi)\n\n  tibble(x = c(x1, x2), y = c(y1, y2), id = rep(1:n_axis, 2))\n}\n\ntext_data <- p_data %>%\n  select(-group) %>%\n  map_df(~ min(.) + (max(.) - min(.)) * seq(0, 1, 0.25)) %>%\n  mutate(r = seq(0, 1, 0.25)) %>%\n  pivot_longer(-r, names_to = \"parameter\", values_to = \"value\")\n\ntext_coords <- function(r, n_axis = ncol(p_data) - 1){\n  fi <- seq(0, (1 - 1/n_axis)*2*pi, (1/n_axis)*2*pi) + pi/2 + 0.01*2*pi/r\n  x <- r*cos(fi)\n  y <- r*sin(fi)\n\n  tibble(x, y, r = r - central_distance)\n}\n\nlabels_data <- map_df(seq(0, 1, 0.25) + central_distance, text_coords) %>%\n  bind_cols(text_data %>% select(-r))\n\nrescaled_coords <- function(r, n_axis){\n  fi <- seq(0, 2*pi, (1/n_axis)*2*pi) + pi/2\n  tibble(r, fi) %>% mutate(x = r*cos(fi), y = r*sin(fi)) %>% select(-fi)\n}\n\nrescaled_data <- p_data %>% \n  mutate(across(-group, rescale)) %>%\n  mutate(copy = pull(., 2)) %>%\n  pivot_longer(-group, names_to = \"parameter\", values_to = \"value\") %>%\n  group_by(group) %>%\n  mutate(coords = rescaled_coords(value + central_distance, ncol(p_data) - 1)) %>%\n  unnest\n\n  step_1 + \n    geom_line(data = axis_coords(ncol(p_data) - 1), \n              aes(x, y, group = id), alpha = 0.3) +\n    geom_point(data = rescaled_data, \n              aes(x, y, group = group, col = group), size = 3) +\n    geom_path(data = rescaled_data, \n              aes(x, y, group = group, col = group), size = 1) +\n    {if(area_fill == TRUE) geom_polygon(data = rescaled_data, \n                            aes(x, y, group = group, \n                                col = group, fill = group), \n                                size = 1, alpha = 0.05, show.legend = FALSE)} +\n    geom_text(data = labels_data, \n                     aes(x, y, label = value), alpha = 0.65) +\n    geom_text(data = text_coords(1 + central_distance + axis_name_offset), \n              aes(x, y), label = labels_data$parameter[1:(ncol(p_data)-1)]) +\n    labs(col = legend_title) +\n    theme(legend.position = \"bottom\",\n          legend.text = element_text(size = 12),\n          legend.title = element_text(size = 12))\n}\n```", "```py\np_data <- mtcars %>%\n  rownames_to_column(var = \"group\") %>%\n  as_tibble() %>%\n  tail(3) %>%\n  select(1:7)\n\nggspider(p_data)\n```"]