- en: 'Hands-on Generative AI with GANs using Python: Image Generation'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/hands-on-generative-ai-with-gans-using-python-image-generation-9a62e591c7c6?source=collection_archive---------8-----------------------#2023-03-27](https://towardsdatascience.com/hands-on-generative-ai-with-gans-using-python-image-generation-9a62e591c7c6?source=collection_archive---------8-----------------------#2023-03-27)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/8bacad55716d720d37ccf3e4e734e940.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to implement GANs with PyTorch to generate synthetic images
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@marcellopoliti?source=post_page-----9a62e591c7c6--------------------------------)[![Marcello
    Politi](../Images/484e44571bd2e75acfe5fef3146ab3c2.png)](https://medium.com/@marcellopoliti?source=post_page-----9a62e591c7c6--------------------------------)[](https://towardsdatascience.com/?source=post_page-----9a62e591c7c6--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----9a62e591c7c6--------------------------------)
    [Marcello Politi](https://medium.com/@marcellopoliti?source=post_page-----9a62e591c7c6--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7390355d40fe&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhands-on-generative-ai-with-gans-using-python-image-generation-9a62e591c7c6&user=Marcello+Politi&userId=7390355d40fe&source=post_page-7390355d40fe----9a62e591c7c6---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----9a62e591c7c6--------------------------------)
    ·7 min read·Mar 27, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F9a62e591c7c6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhands-on-generative-ai-with-gans-using-python-image-generation-9a62e591c7c6&user=Marcello+Politi&userId=7390355d40fe&source=-----9a62e591c7c6---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9a62e591c7c6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhands-on-generative-ai-with-gans-using-python-image-generation-9a62e591c7c6&source=-----9a62e591c7c6---------------------bookmark_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Introduction**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In my [previous article](https://medium.com/towards-data-science/hands-on-generative-ai-with-gans-using-python-autoencoders-c77232b402fc),
    we learned about Autoencoders, now let’s continue to talk about Generative AI.
    By now everyone is talking about it and everyone is excited about the practical
    applications that have been developed. But we continue to see the foundations
    of these AIs step by step.
  prefs: []
  type: TYPE_NORMAL
- en: There are several Machine Learning models that allow us to build generative
    AI, to name a few we have Variational Autoencoders (VAE), autoregressive models
    and even normalizing flow models. In this article, however, we will focus on GANs.
  prefs: []
  type: TYPE_NORMAL
- en: Autoencoders and GANs
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the previous article, we dealt with autoencoders and saw their architecture,
    their use and implementation in PyTorch.
  prefs: []
  type: TYPE_NORMAL
- en: In short, Autoencoders receive an input x, compress it into a vector of smaller
    size z, called the latent vector, and finally from z reconstruct x in a more or
    less approximate way.
  prefs: []
  type: TYPE_NORMAL
- en: In Autoencoder we have no data generation, but simply an approximate reconstruction
    of the input. Now imagine that we break the Autoencoder in two and consider only
    the second part, the part where from…
  prefs: []
  type: TYPE_NORMAL
