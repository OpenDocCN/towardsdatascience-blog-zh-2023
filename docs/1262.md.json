["```py\ntrain_features = [\n    \"_ws.col.Time\",\n    \"ip.hdr_len\",\n    \"ip.flags.df\",\n    \"ip.frag_offset\",\n    \"ip.proto\",\n    \"ip.ttl\",\n    \"tcp.window_size\",\n    \"tcp.flags.syn\",\n    \"tcp.flags.urg\",\n    \"tcp.hdr_len\",\n]\n\nsimple_nn_model = tf.keras.models.Sequential(\n    [\n        tf.keras.layers.InputLayer(input_shape=(10), dtype=tf.float32),\n        tf.keras.layers.Dense(9, activation=\"relu\", kernel_regularizer=\"l2\"),\n        tf.keras.layers.Dense(9, activation=\"relu\", kernel_regularizer=\"l2\"),\n        tf.keras.layers.Dense(units=1, activation=\"sigmoid\", kernel_regularizer=\"l2\"),\n    ],\n    name=\"simple_nn\",\n)\n\nsimple_nn_model.compile(\n    loss=\"binary_crossentropy\",\n    optimizer=tf.keras.optimizers.Adam(),\n    metrics=[\"accuracy\"],\n)\n```", "```py\n|                    | Malicious packets dropped (true positives) | Malicious packets processed (false negatives) | Legitimate packets processed |\n| ------------------ | ------------------------------------------ | --------------------------------------------- | ---------------------------- |\n| Without dosguard32 | \\-                                         | 1798                                          | 20                           |\n| With dosguard32    | 1855                                       | 495                                           | 20                           |\n```", "```py\nimport socket\nimport random\nimport time\n\nstart_time = time.time()\n\n# UDP server config\nUDP_IP = \"10.0.0.105\" \nUDP_PORT = 3333 \n\n# Create socket UDP\nsock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n\n# Sending data\nwhile (time.time() - start_time) < 80:\n    temperature = round(random.uniform(18.0, 30.0), 2)\n    humidity = round(random.uniform(30.0, 80.0), 2)\n\n    data = f\"Temp: {temperature} C, Humidity: {humidity} %\".encode()\n\n    sock.sendto(data, (UDP_IP, UDP_PORT))\n\n    time.sleep(1)\n```"]