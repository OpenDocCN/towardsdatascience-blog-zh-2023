- en: Julia Magic Too Few People Know About
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/julia-magic-too-few-people-know-about-330a7039a11a?source=collection_archive---------3-----------------------#2023-10-15](https://towardsdatascience.com/julia-magic-too-few-people-know-about-330a7039a11a?source=collection_archive---------3-----------------------#2023-10-15)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Some less known capabilities of the Julia programming language.
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://emmaccode.medium.com/?source=post_page-----330a7039a11a--------------------------------)[![Emma
    Boudreau](../Images/f7201d012b733643d6e97957f73fd1fa.png)](https://emmaccode.medium.com/?source=post_page-----330a7039a11a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----330a7039a11a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----330a7039a11a--------------------------------)
    [Emma Boudreau](https://emmaccode.medium.com/?source=post_page-----330a7039a11a--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fea170050148c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fjulia-magic-too-few-people-know-about-330a7039a11a&user=Emma+Boudreau&userId=ea170050148c&source=post_page-ea170050148c----330a7039a11a---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----330a7039a11a--------------------------------)
    ·10 min read·Oct 15, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F330a7039a11a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fjulia-magic-too-few-people-know-about-330a7039a11a&user=Emma+Boudreau&userId=ea170050148c&source=-----330a7039a11a---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F330a7039a11a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fjulia-magic-too-few-people-know-about-330a7039a11a&source=-----330a7039a11a---------------------bookmark_footer-----------)![](../Images/b22e53ebd32ae5b1747afc050ab2696b.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: (image by author)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: introduction
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As far as programming languages and their paradigms go, Julia’s take is incredibly
    unique. Comparing Julia to the slough of other multi-paradigm programming languages
    that are popular today, Julia is radically different by many comparisons. This
    is especially the case in paradigm, or how the types of the language (which hold
    the data,) work with functions or methods in the language. There are a number
    of different solutions that have been proposed for this, and every language tends
    to sit in one category — though not necessarily firmly. Most modern languages
    have bridged multiple programming concepts through these paradigms, and this makes
    most modern programming languages multi-paradigm. Under this umbrella, the Julia
    language would also be included.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 就编程语言及其范式而言，Julia的处理方式极为独特。与今天流行的众多其他多范式编程语言相比，Julia在许多方面都有显著的不同。特别是在范式方面，或语言中的类型（用于存储数据）如何与语言中的函数或方法协作方面。有许多不同的解决方案被提出，每种语言通常都处于一个范畴——虽然不一定非常固定。大多数现代语言通过这些范式桥接了多种编程概念，这使得大多数现代编程语言都是多范式的。在这个框架下，Julia语言也包括在内。
- en: 'Although Julia is a multi-paradigm programming language, it is built in a unique
    paradigm centered around multiple dispatch. This is not to say this paradigm is
    entirely novel, the basis of this paradigm is found in the Standard Meta Language
    (SML). I actually, because of Julia, went back and tried that language ages ago
    — it was a very interesting experience, and if you would like to read more about
    what transpired with that here is a link to that article:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管Julia是一种多范式编程语言，但它建立在围绕多重分派的独特范式上。这并不是说这种范式完全新颖，这种范式的基础可以在标准元语言（SML）中找到。实际上，因为Julia，我曾经回去尝试过那个语言——这是一段非常有趣的经历，如果你想了解更多发生了什么，这里有一个链接到那篇文章：
