- en: Can Transformers Learn to Strategize?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/can-transformers-learn-to-strategize-862770c996ea?source=collection_archive---------6-----------------------#2023-09-08](https://towardsdatascience.com/can-transformers-learn-to-strategize-862770c996ea?source=collection_archive---------6-----------------------#2023-09-08)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: TicTacGPT for playing simple board games
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://charlieoneill.medium.com/?source=post_page-----862770c996ea--------------------------------)[![Charlie
    O''Neill](../Images/17aa117fc5787f93ff1f547b919786c8.png)](https://charlieoneill.medium.com/?source=post_page-----862770c996ea--------------------------------)[](https://towardsdatascience.com/?source=post_page-----862770c996ea--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----862770c996ea--------------------------------)
    [Charlie O''Neill](https://charlieoneill.medium.com/?source=post_page-----862770c996ea--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F2742adff9d49&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcan-transformers-learn-to-strategize-862770c996ea&user=Charlie+O%27Neill&userId=2742adff9d49&source=post_page-2742adff9d49----862770c996ea---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----862770c996ea--------------------------------)
    ·27 min read·Sep 8, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F862770c996ea&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcan-transformers-learn-to-strategize-862770c996ea&user=Charlie+O%27Neill&userId=2742adff9d49&source=-----862770c996ea---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F862770c996ea&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcan-transformers-learn-to-strategize-862770c996ea&source=-----862770c996ea---------------------bookmark_footer-----------)![](../Images/105981c00690836c0dd2d1ea74863f8b.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Jon Tyson](https://unsplash.com/@jontyson?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Although most board games appeal to the use of convolutional neural nets or
    other geometrically inspired architectures, the fact that we can actually represent
    board states as strings begs the question of whether transformers can naturally
    be applied to the game. Here, we’ll see if we can answer this in the context of
    a simple game of tic-tac-toe. Whilst this may not seem very practical (almost
    everyone knows that there is a closed-form Nash equilibrium strategy in this game
    that is very simple to learn), it is a useful testbed for our questions. The reason
    is that the game is simple enough that we can easily train a transformer to play
    it, but complex enough that it is not immediately obvious what the best strategy
    is.
  prefs: []
  type: TYPE_NORMAL
- en: Implementing the game
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We’ll start by implementing a `TicTacToe` class. This is fairly straightforward.
    We want to be able to represent the board as a string of 9 characters, one for
    each square. We’ll use `X` for the first player, `O` for the second player, and
    `-` for an empty square. We’ll also keep track of whose turn it is to play next,
    and whether the game is over or not. We’ll also keep track of the winner, if there
    is one. Finally, we’ll include a nice method to print the board so we don’t have
    to stare at strings when…
  prefs: []
  type: TYPE_NORMAL
