- en: Processing Data At Scale With MapReduce
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/mapreduce-f0d8776d0fcf?source=collection_archive---------9-----------------------#2023-07-19](https://towardsdatascience.com/mapreduce-f0d8776d0fcf?source=collection_archive---------9-----------------------#2023-07-19)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A deep dive into MapReduce and parallelization
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://gmyrianthous.medium.com/?source=post_page-----f0d8776d0fcf--------------------------------)[![Giorgos
    Myrianthous](../Images/ff4b116e4fb9a095ce45eb064fde5af3.png)](https://gmyrianthous.medium.com/?source=post_page-----f0d8776d0fcf--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f0d8776d0fcf--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f0d8776d0fcf--------------------------------)
    [Giorgos Myrianthous](https://gmyrianthous.medium.com/?source=post_page-----f0d8776d0fcf--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F76c21e75463a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmapreduce-f0d8776d0fcf&user=Giorgos+Myrianthous&userId=76c21e75463a&source=post_page-76c21e75463a----f0d8776d0fcf---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----f0d8776d0fcf--------------------------------)
    ·4 min read·Jul 19, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff0d8776d0fcf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmapreduce-f0d8776d0fcf&user=Giorgos+Myrianthous&userId=76c21e75463a&source=-----f0d8776d0fcf---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff0d8776d0fcf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmapreduce-f0d8776d0fcf&source=-----f0d8776d0fcf---------------------bookmark_footer-----------)![](../Images/485ac39f931bd934b5c4a820f518771a.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Luca Nicoletti](https://unsplash.com/@luca_nicoletti?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/fkA-hGDs-Y8?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: In the current market landscape, organizations must engage in data-driven decision-making
    to maintain competitiveness and foster innovation. As a result, an immense amount
    of data is collected on a daily basis.
  prefs: []
  type: TYPE_NORMAL
- en: Although the challenge of data persistence has largely been resolved, thanks
    to the widespread availability and affordability of cloud storage, modern organizations
    continue to grapple with the efficient and effective processing of massive amounts
    of data.
  prefs: []
  type: TYPE_NORMAL
- en: Over the past few decades, numerous programming models have emerged to address
    the challenge of processing big data at scale. Undoubtedly, MapReduce stands out
    as one of the most popular and effective approaches.
  prefs: []
  type: TYPE_NORMAL
- en: What is MapReduce
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: MapReduce is a distributed programming framework originally developed at Google
    by [Jeffrey Dean and Sanjay Ghemawat, back in 2004](https://research.google/pubs/pub62/)
    and was inspired by fundamental concepts of functional programming. Their proposal
    invloved a parallel data processing model consisting of two steps; *map* and *reduce*.
  prefs: []
  type: TYPE_NORMAL
- en: In simple terms, *map* step invovles the division of the original data into
    small chunks such that transformation logic can be applied to individual data
    blocks. Data processing can…
  prefs: []
  type: TYPE_NORMAL
