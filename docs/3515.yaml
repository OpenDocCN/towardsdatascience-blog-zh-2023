- en: 'Python: __init__ is NOT a constructor: a deep dive in Python object creation'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/python-init-is-not-a-constructor-a-deep-dive-in-python-object-creation-9134d971e334?source=collection_archive---------1-----------------------#2023-11-27](https://towardsdatascience.com/python-init-is-not-a-constructor-a-deep-dive-in-python-object-creation-9134d971e334?source=collection_archive---------1-----------------------#2023-11-27)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Tinkering with Python’s constructor to create fast, memory-efficient classes
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://mikehuls.medium.com/?source=post_page-----9134d971e334--------------------------------)[![Mike
    Huls](../Images/8f9f55a0d25db00799c5d37383b7f5b6.png)](https://mikehuls.medium.com/?source=post_page-----9134d971e334--------------------------------)[](https://towardsdatascience.com/?source=post_page-----9134d971e334--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----9134d971e334--------------------------------)
    [Mike Huls](https://mikehuls.medium.com/?source=post_page-----9134d971e334--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7ffb62c607ee&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-init-is-not-a-constructor-a-deep-dive-in-python-object-creation-9134d971e334&user=Mike+Huls&userId=7ffb62c607ee&source=post_page-7ffb62c607ee----9134d971e334---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----9134d971e334--------------------------------)
    ·9 min read·Nov 27, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F9134d971e334&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-init-is-not-a-constructor-a-deep-dive-in-python-object-creation-9134d971e334&user=Mike+Huls&userId=7ffb62c607ee&source=-----9134d971e334---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9134d971e334&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-init-is-not-a-constructor-a-deep-dive-in-python-object-creation-9134d971e334&source=-----9134d971e334---------------------bookmark_footer-----------)![](../Images/50dee26173534a7a06708762a2ea94ac.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: How Python builds objects (image by ChatGPT)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: Did you know that the `__init__` method is **not a constructor**? But if `__init__`
    doesn’t *create* the object, then what does? How do objects get created in Python?
    Does Python even have a constructor?
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: The goal of this article is to **better understand how Python creates objects**
    and **manipulate this process to make better appplications**.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: First we’ll take a deep dive in how Python creates objects. Next we’ll apply
    this knowledge and discuss some interesting use cases with some practical examples.
    Let’s code!
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将深入探讨 Python 如何创建对象。接下来，我们将应用这些知识，并讨论一些有趣的使用案例和一些实际示例。开始编程吧！
- en: '1\. Theory: Creating objects in Python'
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 理论：在 Python 中创建对象
- en: In this part we’ll figure out what Python does under the hood when you create
    an object. In the next part we’ll take this new knowledge and apply in in part
    2.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将弄清楚当你创建一个对象时，Python 在幕后做了什么。在下一部分，我们将利用这一新知识并应用于第二部分。
- en: How to create an object in Python?
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何在 Python 中创建对象？
- en: 'This should be pretty simple; you just create an instance of a class. Alternatively
    you could create a new built-in type like a `str` or an `int`. In the code below
    an instance is created of a basic class. It just contains an `__init__` function
    and a `say_hello` method:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该非常简单；你只需创建一个类的实例。或者你可以创建一个新的内置类型，如`str`或`int`。在下面的代码中，创建了一个基本类的实例。它仅包含一个`__init__`函数和一个`say_hello`方法：
