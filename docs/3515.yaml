- en: 'Python: __init__ is NOT a constructor: a deep dive in Python object creation'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/python-init-is-not-a-constructor-a-deep-dive-in-python-object-creation-9134d971e334?source=collection_archive---------1-----------------------#2023-11-27](https://towardsdatascience.com/python-init-is-not-a-constructor-a-deep-dive-in-python-object-creation-9134d971e334?source=collection_archive---------1-----------------------#2023-11-27)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Tinkering with Python’s constructor to create fast, memory-efficient classes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://mikehuls.medium.com/?source=post_page-----9134d971e334--------------------------------)[![Mike
    Huls](../Images/8f9f55a0d25db00799c5d37383b7f5b6.png)](https://mikehuls.medium.com/?source=post_page-----9134d971e334--------------------------------)[](https://towardsdatascience.com/?source=post_page-----9134d971e334--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----9134d971e334--------------------------------)
    [Mike Huls](https://mikehuls.medium.com/?source=post_page-----9134d971e334--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7ffb62c607ee&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-init-is-not-a-constructor-a-deep-dive-in-python-object-creation-9134d971e334&user=Mike+Huls&userId=7ffb62c607ee&source=post_page-7ffb62c607ee----9134d971e334---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----9134d971e334--------------------------------)
    ·9 min read·Nov 27, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F9134d971e334&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-init-is-not-a-constructor-a-deep-dive-in-python-object-creation-9134d971e334&user=Mike+Huls&userId=7ffb62c607ee&source=-----9134d971e334---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9134d971e334&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-init-is-not-a-constructor-a-deep-dive-in-python-object-creation-9134d971e334&source=-----9134d971e334---------------------bookmark_footer-----------)![](../Images/50dee26173534a7a06708762a2ea94ac.png)'
  prefs: []
  type: TYPE_NORMAL
- en: How Python builds objects (image by ChatGPT)
  prefs: []
  type: TYPE_NORMAL
- en: Did you know that the `__init__` method is **not a constructor**? But if `__init__`
    doesn’t *create* the object, then what does? How do objects get created in Python?
    Does Python even have a constructor?
  prefs: []
  type: TYPE_NORMAL
- en: The goal of this article is to **better understand how Python creates objects**
    and **manipulate this process to make better appplications**.
  prefs: []
  type: TYPE_NORMAL
- en: First we’ll take a deep dive in how Python creates objects. Next we’ll apply
    this knowledge and discuss some interesting use cases with some practical examples.
    Let’s code!
  prefs: []
  type: TYPE_NORMAL
- en: '1\. Theory: Creating objects in Python'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this part we’ll figure out what Python does under the hood when you create
    an object. In the next part we’ll take this new knowledge and apply in in part
    2.
  prefs: []
  type: TYPE_NORMAL
- en: How to create an object in Python?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This should be pretty simple; you just create an instance of a class. Alternatively
    you could create a new built-in type like a `str` or an `int`. In the code below
    an instance is created of a basic class. It just contains an `__init__` function
    and a `say_hello` method:'
  prefs: []
  type: TYPE_NORMAL
