- en: The easiest way to work with large language models?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/the-easiest-way-to-interact-with-language-models-4da158cfb5c5?source=collection_archive---------0-----------------------#2023-03-26](https://towardsdatascience.com/the-easiest-way-to-interact-with-language-models-4da158cfb5c5?source=collection_archive---------0-----------------------#2023-03-26)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: An overview of LangChain
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://sophiamyang.medium.com/?source=post_page-----4da158cfb5c5--------------------------------)[![Sophia
    Yang, Ph.D.](../Images/c133f918245ea4857dc46df3a07fc2b1.png)](https://sophiamyang.medium.com/?source=post_page-----4da158cfb5c5--------------------------------)[](https://towardsdatascience.com/?source=post_page-----4da158cfb5c5--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----4da158cfb5c5--------------------------------)
    [Sophia Yang, Ph.D.](https://sophiamyang.medium.com/?source=post_page-----4da158cfb5c5--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fae9cae9cbcd2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-easiest-way-to-interact-with-language-models-4da158cfb5c5&user=Sophia+Yang%2C+Ph.D.&userId=ae9cae9cbcd2&source=post_page-ae9cae9cbcd2----4da158cfb5c5---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----4da158cfb5c5--------------------------------)
    ·7 min read·Mar 26, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4da158cfb5c5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-easiest-way-to-interact-with-language-models-4da158cfb5c5&user=Sophia+Yang%2C+Ph.D.&userId=ae9cae9cbcd2&source=-----4da158cfb5c5---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4da158cfb5c5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-easiest-way-to-interact-with-language-models-4da158cfb5c5&source=-----4da158cfb5c5---------------------bookmark_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Is LangChain the easiest way to interact with large language models and build
    applications? It’s an **open-source** tool and recently added ChatGPT Plugins.
    It provides so many capabilities that I find useful:'
  prefs: []
  type: TYPE_NORMAL
- en: ✨ integrate with various LLM providers including OpenAI, Cohere, Huggingface,
    and more.
  prefs: []
  type: TYPE_NORMAL
- en: ✨ create a question-answering or text summarization bot with your own document
  prefs: []
  type: TYPE_NORMAL
- en: ✨ provide OpenAI ChatGPT Retriever Plugin
  prefs: []
  type: TYPE_NORMAL
- en: ✨ deal with chat history with LangChain Memory
  prefs: []
  type: TYPE_NORMAL
- en: ✨ chain various LLMs together and use LLMs with a suite of tools like Google
    Search, Python REPL, and more.
  prefs: []
  type: TYPE_NORMAL
- en: ✨ and so many more
  prefs: []
  type: TYPE_NORMAL
- en: What’s more amazing is that LangChain is **open-source** and it is a community
    effort. In this blog post, I’m going to go over 6 functionalities that I find
    useful in LangChain.
  prefs: []
  type: TYPE_NORMAL
- en: You can find the code for this blog post on my [Github repo here](https://github.com/sophiamyang/tutorials-LangChain/blob/main/LangChain_Overview.ipynb).
    You will need to install the needed packages, import packages, and set up API
    keys (see cells 1–3 in [my notebook](https://github.com/sophiamyang/tutorials-LangChain/blob/main/LangChain_Overview.ipynb))
    before running any of the code below.
  prefs: []
  type: TYPE_NORMAL
- en: '**1\. LangChain integrates with many LLM providers**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With the same interface, you get access to many LLM models from various LLM
    providers including OpenAI, Cohere, AI21, Huggingface Hub, Azure OpenAI, Manifest,
    Goose AI, Writer, Banana, Modal, StochasticAI, Cerebrium, Petals, Forefront AI,
    PromptLayer OpenAI, Anthropic, DeepInfra, and self-hosted Models.
  prefs: []
  type: TYPE_NORMAL
- en: Here is an example of accessing the OpenAI ChatGPT model and GPT3 model, Cohere’s
    command-xlarge model, and Google’s Flan T5 model hosted on Hugging Face Hub.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Then we can give a prompt to each of these models and see what they return.
    One thing to note is that for chat models, we can specify is the message is a
    human message, an AI message, or a system message. That’s why for the ChatGPT
    model, I specified my message as a human message.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/bd4593009c4667ef1c8fd92a9f67c520.png)'
  prefs: []
  type: TYPE_IMG
- en: 2\. Question answering with external documents
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Are you interested in building a question-answering bot with external documents?
    Are your documents saved in PDF, txt file, or even Notion? And what if I would
    like to do a question-answering both with YouTube videos?
  prefs: []
  type: TYPE_NORMAL
- en: 'No problem, LangChain’s got you covered. LangChain provides a lot of document
    loaders: File Loader, Directory Loader, Notion, ReadTheDocs, HTML, PDF, PowerPoint,
    Email, GoogleDrive, Obsidian, Roam, EverNote, YouTube, Hacker News, GitBook, S3
    File, S3 Directory, GCS File, GCS Directory, Web Base, IMSDb, AZLyrics, College
    Confidential, Gutenberg, Airbyte Json, CoNLL-U, iFixit, Notebook, Copypaste, CSV,
    Facebook Chat, Image, Markdown, SRT, Telegram, URL, Word Document, Blackboard.
    Do you have another source that’s not listed here? You can contribute and add
    to LangChain since it’s open-source!'
  prefs: []
  type: TYPE_NORMAL
- en: Here is an example where we use the TextLoader to load a local txt file, create
    the VectoreStore index, and query your index. Intuitively, your documents will
    be split and embedded into vectors and stored in a vector database. The query
    finds which vector is the closest to the question vector in the vector database.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/60aed63ceea8b70ddd55e25a959101f4.png)'
  prefs: []
  type: TYPE_IMG
- en: The exciting news is that LangChain has recently integrated the **ChatGPT Retrieval
    Plugin** so people can use this retriever instead of an index. What’s the difference
    between an index and a retriever? According to [LangChain](https://blog.langchain.dev/retrieval/),
    “An index is a data structure that supports efficient searching, and a retriever
    is the component that uses the index to find and return relevant documents in
    response to a user’s query. The index is a key component that the retriever relies
    on to perform its function.”
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Keep/Summarize Chat History
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When you chat with ChatGPT, it doesn’t keep your chat history. You will need
    to copy and paste your chat into the new prompt to let it aware of the history.
    LangChain solves this problem by providing several different options for dealing
    with chat history — keep all conversations, keep the latest k conversations, summarize
    the conversation, and a combination of the above.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example where we use `ConversationBufferWindowMemory` to keep the
    latest 1 round of conversation, use `ConversationSummaryMemory` to summarize previous
    conversations, and use `CombinedMemory` to combine two methods:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Here is the result where you can see the summary of the conversation and the
    latest conversation passed into the prompt.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a17e134f38ad90bd1124fb108d84168b.png)'
  prefs: []
  type: TYPE_IMG
- en: 4\. Chains
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Sometimes you might want to chain different LLMs. For example,
  prefs: []
  type: TYPE_NORMAL
- en: You may want the output of the first LLM to serve as the input of the second
    LLM.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Or you may want to summarize the outputs of the first and the second LLM and
    pass the summary in as input to the third LLM.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Or you may want to chain your language model with another utility chain to do
    math or Python operation.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here is an example of the most basic `SimpleSequentialChain` method. The first
    chain asks ChatGPT to get a good product name for a company that makes colorful
    socks. ChatGPT returns “Rainbow Sox Co.” The second chain uses this name as input
    and asks ChatGPT to write a catchphrase for the company “Rainbow Sox Co.” ChatGPT
    wrote: “Put a little color in your step with Rainbow Sox Co!”'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/3474d1f20325434ecbcfde3f5b498db0.png)'
  prefs: []
  type: TYPE_IMG
- en: 5\. Agent
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'An agent has access to the language model and a suite of tools for example
    Google Search, Python REPL, math calculator, and more. The agent uses LLM and
    various frameworks to decide which tools to use for which task. This is very similar
    to the ChatGPT Plugins. Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: 'We loaded two tools in this example: serpapi is for Google Search and llm-math
    is for doing math calculations. We asked “Who is Leo DiCaprio’s girlfriend? What
    is her current age raised to the 0.43 power?” The language model first comprehended
    the question and decided to take the search action that fires up the search API
    calls. Then it got the result from the search agent, decided to use llm-math to
    do calculate the math, and then got the final result.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1aa0b362e5fa6c8d2fe819ab5c42c647.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In another example, instead of using the llm-math as a calculator, we can use
    the Python REPL to execute a Python code for the calculation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/af00b22b37ab09942dea8a6b48b74772.png)'
  prefs: []
  type: TYPE_IMG
- en: 6\. ChatGPT Plugins
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ChatGPT Plugins just came up this week and LangChain already added the ChatGPT
    Plugins feature. Here is an example, where we use the `AIPluginTool` to load the
    plugin from a shopping website. This plugin is exactly the same as the one OpenAI
    uses. When we ask the question “what t shirts are available in klarna?” The LLM
    decided to use the Klarna plugin and got a response of a series of OpenAI Spec
    and then decided to do a requests to get data, and it was able to return great
    answers.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/23b73b914df2773ae8e336adefc90589.png)'
  prefs: []
  type: TYPE_IMG
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Overall, I’m quite impressed with the capabilities of LangChain and how fast
    the community is able to add new features. There are also many other features
    that I didn’t mention in this blog post including data augmentation, few-shot
    learning, evaluation, model comparison, and more. I hope this blog post helps
    you have a better understanding of various LangChain features. Happy exploring!
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/efc10ee5a6acd9672df91dd7b66ed549.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Aida L](https://unsplash.com/@aidamarie_photography?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: . . .
  prefs: []
  type: TYPE_NORMAL
- en: By [Sophia Yang](https://www.linkedin.com/in/sophiamyang/) on March 26, 2023
  prefs: []
  type: TYPE_NORMAL
- en: Sophia Yang is a Senior Data Scientist at Anaconda. Connect with me on [LinkedIn](https://www.linkedin.com/in/sophiamyang/),
    [Twitter](https://twitter.com/sophiamyang), and [YouTube](https://www.youtube.com/SophiaYangDS)
    and join the DS/ML [Book Club](https://dsbookclub.github.io/) ❤️
  prefs: []
  type: TYPE_NORMAL
