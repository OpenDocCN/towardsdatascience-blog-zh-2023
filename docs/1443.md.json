["```py\n# Load Packages\nlibrary(tidyverse)\n\n# Load Dataset\ndata(\"ToothGrowth\")\nx = ToothGrowth$len\nn = length(x)\n\n# Length:\nprint(n)\n> [1] 60\n# First few observations\nprint(x[1:10])\n> [1]  4.2 11.5  7.3  5.8  6.4 10.0 11.2 11.2  5.2  7.0\n```", "```py\n# Mean of target distribution\nmu <- mean(x)\nprint(mu)\n> [1] 18.81333\n\n# Variance of target distribution\nsigma <- sd(x)\nprint(sigma)\n> [1] 7.649315\n```", "```py\n# Sample Quantiles: Sort Sample Provided\nsq = sort(x)\nprint(sq[1:10])\n> [1] 4.2 5.2 5.8 6.4 7.0 7.3 8.2 9.4 9.7 9.7\n\n# Corresponding Quantile Values: k/(n + 1), k = 1, 2, ..., n\np = seq(1/(n + 1), n/(n + 1), by = 1/(n + 1))\nprint(p[1:5])\n> [1] 0.01639344 0.03278689 0.04918033 0.06557377 0.08196721 \n```", "```py\n# Theoretical Quantiles: Use Derived Formula\ntq = mu + sigma*qnorm(p)\nprint(tq[1:5])\n> [1] 2.484468 4.728449 6.170135 7.265988 8.165790\n```", "```py\ndata.frame(tq, sq) %>%\n  ggplot(aes(x = tq, y = sq)) +\n  # Plot original points\n  geom_point(size = 2.5, color = \"blue\") +\n  # To plot the y = x line\n  geom_abline(slope = 1, intercept = 0, linewidth = 0.8, linetype = 2) +\n  # Plot styling [Optional]\n  theme_minimal() +\n  labs(x = \"Theoretical Quantiles\", y = \"Sample Quantiles\", title = \"QQ Plot\") +\n  theme(plot.title = element_text(hjust = 0.5))\n```", "```py\n# Load Sample\nx = runif(10000)\nn = length(x)\n\n# First few observations\nprint(x[1:5])\n> [1] 0.07251043 0.20345894 0.20417683 0.48878998 0.50945799\n```", "```py\n# Sample Quantiles: Sort Sample Provided\nsq = sort(x)\nprint(sq[1:5])\n> [1] 6.094808e-05 9.398628e-05 3.439812e-04 3.590921e-04 4.317588e-04\n\n# Corresponding Quantile Values: k/(n + 1), k = 1, 2, ..., n\np = seq(1/(n + 1), n/(n + 1), by = 1/(n + 1))\nprint(p[1:5])\n> [1] 0.00009999 0.00019998 0.00029997 0.00039996 0.00049995\n```", "```py\n# Theoretical Quantiles: Use Derived Formula\ntq = qexp(p, rate = 1/mean(x))\nprint(tq[1:5])\n> [1] 5.010184e-05 1.002087e-04 1.503205e-04 2.004374e-04 2.505593e-04\n```", "```py\ndata.frame(tq, sq) %>%\n  ggplot(aes(x = tq, y = sq)) +\n  # Plot original points\n  geom_point(size = 2.5, color = \"blue\") +\n  # To plot the y = x line\n  geom_abline(slope = 1, intercept = 0, linewidth = 0.8, linetype = 2) +\n  # Plot styling [Optional]\n  theme_minimal() +\n  labs(x = \"Theoretical Quantiles\", y = \"Sample Quantiles\", title = \"QQ Plot\") +\n  theme(plot.title = element_text(hjust = 0.5))\n```", "```py\n# Theoretical Quantiles\ntq = qunif(p)\nprint(tq[1:5])\n\ndata.frame(tq, sq) %>%\n  ggplot(aes(x = tq, y = sq)) +\n  # Plot original points\n  geom_point(size = 2.5, color = \"blue\") +\n  # To plot the y = x line\n  geom_abline(slope = 1, intercept = 0, linewidth = 0.8, linetype = 2) +\n  # Plot styling [Optional]\n  theme_minimal() +\n  labs(x = \"Theoretical Quantiles\", y = \"Sample Quantiles\", title = \"QQ Plot\") +\n  theme(plot.title = element_text(hjust = 0.5))\n```"]