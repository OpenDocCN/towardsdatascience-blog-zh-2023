- en: Textual Novelty Detection
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/textual-novelty-detection-ce81d2e689bf?source=collection_archive---------6-----------------------#2023-10-02](https://towardsdatascience.com/textual-novelty-detection-ce81d2e689bf?source=collection_archive---------6-----------------------#2023-10-02)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: How to use Minimum Covariance Determinant (MCD) to detect novel news headlines
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@ilia.teimouri?source=post_page-----ce81d2e689bf--------------------------------)[![Ilia
    Teimouri PhD](../Images/0eb948c4d3f81c116cd16fa4d5016629.png)](https://medium.com/@ilia.teimouri?source=post_page-----ce81d2e689bf--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ce81d2e689bf--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ce81d2e689bf--------------------------------)
    [Ilia Teimouri PhD](https://medium.com/@ilia.teimouri?source=post_page-----ce81d2e689bf--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fbf9b9036159&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftextual-novelty-detection-ce81d2e689bf&user=Ilia+Teimouri+PhD&userId=bf9b9036159&source=post_page-bf9b9036159----ce81d2e689bf---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ce81d2e689bf--------------------------------)
    ·8 min read·Oct 2, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fce81d2e689bf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftextual-novelty-detection-ce81d2e689bf&user=Ilia+Teimouri+PhD&userId=bf9b9036159&source=-----ce81d2e689bf---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fce81d2e689bf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftextual-novelty-detection-ce81d2e689bf&source=-----ce81d2e689bf---------------------bookmark_footer-----------)![](../Images/3a9fb3a16537768e9f8142215fd50175.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Ali Shah Lakhani](https://unsplash.com/@alishahlakhani) on [Unsplash](https://unsplash.com/).
  prefs: []
  type: TYPE_NORMAL
- en: In today’s information age, we’re inundated with news articles on a daily basis.
    Many of these articles are merely restatements of the same facts, but some contain
    genuinely new information that can have a major impact on our decision-making.
    For example, someone looking to invest in Meta may want to focus on articles that
    contain exclusive information, rather than those that simply reiterate previously
    published data. It’s crucial to be able to distinguish between news that is novel
    and news that is redundant, so that we can make informed decisions without being
    overwhelmed by the deluge of information.
  prefs: []
  type: TYPE_NORMAL
- en: This is where [novelty detection](https://en.wikipedia.org/wiki/Novelty_detection)
    comes it. Novelty detection refers to the task of identifying new or unknown data
    that differs from previously seen data. It is an unsupervised learning technique
    used to detect anomalies, outliers, or new patterns in data. The key idea is to
    build a model of “normal” data, and then use that model to identify data points
    that deviate from normal.
  prefs: []
  type: TYPE_NORMAL
- en: In the context of news articles, this involves detecting whether an article
    contains new information that is not available elsewhere. To do this, we can perhaps
    develop a baseline of what is known or available, and then compare new information
    to that baseline. If there are significant differences between the new information
    and the baseline, then we can say that the information is novel.
  prefs: []
  type: TYPE_NORMAL
- en: Minimum Covariance Determinant (MCD)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Minimum Covariance Determinant (MCD) method is a technique for estimating the
    covariance matrix of a dataset. It can be used to create an elliptical shape that
    encapsulates the central mode of a Gaussian distribution, and any data points
    that lie outside of this shape can be considered as novelties (sometimes referred
    as anomalies). The MCD method is particularly useful for datasets that are noisy
    or have outliers, as it can help to identify unusual data points that may not
    fit the overall pattern of the data. ([see example](https://wis.kuleuven.be/stat/robust/papers/2010/wire-mcd.pdf)).
  prefs: []
  type: TYPE_NORMAL
- en: MCD can be used to detect novelty in news headlines. While the method can be
    generalized to full articles, our aim is to provide a concise example of applying
    MCD for novelty detection on short texts. MCD is a robust estimator of multivariate
    location and scatter, making it well-suited for identifying outliers in high-dimensional
    data such as text. On a dataset of news headlines, MCD will learn a model of “normal”
    headlines based on covariance. We can then use this model to score new headlines
    and flag those that significantly deviate from the norm as potential novel or
    anomalous stories. The sample code and experiments will illustrate how MCD novelty
    detection works in practice.
  prefs: []
  type: TYPE_NORMAL
- en: Step-by-Step Approach
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Embedding:** In machine learning we use [embedding](https://www.youtube.com/watch?v=4-QoMdSqG_I)
    as a way to represent data in a more compact and efficient form. Embedding transforms
    raw data into a lower-dimensional representation that captures the most important
    features of the data.'
  prefs: []
  type: TYPE_NORMAL
- en: Text embedding is a specific type of embedding that is used to transform text
    data into a vector representation. It takes into account the semantics and relationships
    between words, phrases, and sentences, and converts them into a numerical representation
    that captures the meaning of the text. This allows us to perform operations such
    as finding similar text, clustering text based on semantic meaning, and more.
  prefs: []
  type: TYPE_NORMAL
- en: 'Suppose we gather the following headlines about Meta in the past couple of
    months:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'We can use OpenAI to generate text embedding for each of the sentences as:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The `text-embedding-ada-002` model from [OpenAI is a cutting-edge embedding
    model](https://openai.com/blog/new-and-improved-embedding-model) that takes a
    sentence as input and outputs an embedding vector of length 1536\. The vector
    represents the semantic meaning of the input sentence, and can be used for tasks
    such as semantic similarity, text classification, and more. The latest version
    of the model incorporates state-of-the-art language representation techniques
    to produce highly accurate and robust embeddings. If you do not have access to
    OpenAI, you can use other embedding models such as [Sentence Transformers](https://www.sbert.net).
  prefs: []
  type: TYPE_NORMAL
- en: Once we produce the embedding, we make a matrix variable that stores a matrix
    representation of the embeddings from the `df[‘embedding’]` column. This is done
    by using the `vstack` function from the `NumPy` library, which stacks all of the
    vectors (each representing a single sentence) in the column vertically to create
    a matrix. This allows us to use matrix operations in the next step.
  prefs: []
  type: TYPE_NORMAL
- en: '**Compute MCD:** We use the embeddings as features and compute the MCD to estimate
    the location and shape of the central data cloud (central mode of a multivariate
    Gaussian distribution).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Fit an Elliptic Envelope:** We then fit an elliptic envelope to the central
    mode using the computed MCD. This envelope acts as a boundary to separate normal
    points from the novel ones.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Predict Novel Sentences:** Finally, we use the elliptic envelope to classify
    the embeddings. Points lying inside the envelope are considered normal, and points
    lying outside are considered novel or anomalous.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To do all this, we use `EllipticEnvelope` class from `scikit-learn` in Python
    to apply the MCD:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '`contamination` is a parameter that you can tune depending on how many sentences
    you expect to be novel. It represents the proportion of outliers in the dataset.
    The `predict` method returns an array of labels, where `1` denotes inliers (normal
    points), and `-1` denotes outliers (novel points).'
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, to visualise the high-dimensional embeddings in 2D as well as saving
    computation time, we use [PCA](https://en.wikipedia.org/wiki/Principal_component_analysis)
    to project the high-dimensional embedding vectors to a lower-dimensional 2D space,
    we denote this by `reduced_matrix`.
  prefs: []
  type: TYPE_NORMAL
- en: We can see that `novel_indices` outputs `array([8, 9])`, which are the sentence
    indices that are found to be novel.
  prefs: []
  type: TYPE_NORMAL
- en: '**Plotting the result:** wecan visualise the result by plotting the embeddings
    and the elliptic envelope. The inliers (normal points) can be plotted with one
    color or marker, and the outliers (novel points) can be plotted with another.
    The elliptic envelope can be visualized by plotting the ellipse that corresponds
    to the Mahalanobis distance.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To achieve the visualisation we:'
  prefs: []
  type: TYPE_NORMAL
- en: Extract the location and covariance matrix of the fitted elliptic envelope model.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Compute the eigenvalues and eigenvectors of the covariance matrix to determine
    the orientation and axes lengths of the ellipse.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Compute the Mahalanobis distance of each sample from the center of the fitted
    ellipse model.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Determine a threshold distance based on the contamination parameter, which specifies
    the expected percentage of outliers.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Scale the width and height of the ellipse based on the threshold Mahalanobis
    distance.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Label points inside the ellipse as inliers and outside as outliers.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Plot the inliers and outliers, adding the scaled ellipse patch.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Annotate each data point with its index to identify outliers.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, we get the visualisation for inliers and outliers as:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5bc2982a701f693fba2c5f3f4b40cebb.png)'
  prefs: []
  type: TYPE_IMG
- en: Plotting the envelope and points labeled as inliers or outliers
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let us visit the headlines, 8 and 9 are:'
  prefs: []
  type: TYPE_NORMAL
- en: Facebook suffers fresh setback after EU ruling on use of personal data.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Facebook owner Meta hit with record €1.2bn fine over EU-US data transfers.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Both headlines are related to the European Union’s efforts to regulate how Meta
    use and transfer personal data on their platforms.
  prefs: []
  type: TYPE_NORMAL
- en: While the inlier headlines are mostly about how Meta is going all-in on AI and
    virtual reality. The AI focus is evident in the release of a new AI chatbot, and
    the virtual reality focus is evident in the release of the new Meta Quest 3 headset.
    You can also notice that 0th and 6th headlines are about work from home setup
    and hence they are closer to each other on the plot.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this post we have shown how one can distinguish between Normal Points and
    Novel Points based on distribution. In short, Normal Points are the points that
    lie in the high-density region of the data distribution, i.e., they are close
    to the majority of the other points in the feature space. Meanwhile, Novel Points
    These are the points that lie in the low-density region of the data distribution,
    i.e., they are far from the majority of the other points in the feature space.
  prefs: []
  type: TYPE_NORMAL
- en: In the Context of MCD and Elliptic Envelope, Normal Points are points that lie
    inside the elliptic envelope, which is fitted to the central mode of the data
    distribution. While, Novel Points lie outside the elliptic envelope.
  prefs: []
  type: TYPE_NORMAL
- en: 'We learned also that there are parameters that are influencing the outcome
    of MCD, these are:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Threshold:** The decision boundary or threshold is crucial in determining
    whether a point is normal or novel. For instance, in the Elliptic Envelope method,
    points inside the envelope are considered normal, and those outside are considered
    novel.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Contamination Parameter:** This parameter, often used in novelty detection
    methods, defines the proportion of the data expected to be novel or contaminated.
    It affects the tightness of the envelope or threshold, influencing whether a point
    is classified as normal or novel.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We should also note that in the case of new articles, since each news article
    comes from a different week, the novelty detection method should consider the
    temporal aspect of the news. If the method does not inherently account for the
    temporal order, you may need to incorporate this aspect manually, such as by considering
    the change in topics or sentiments over time, which would be beyond the scope
    of this post.
  prefs: []
  type: TYPE_NORMAL
