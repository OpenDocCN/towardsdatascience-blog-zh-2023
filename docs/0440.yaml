- en: Which Programming Languages Do Hackers Use?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 黑客使用哪些编程语言？
- en: 原文：[https://towardsdatascience.com/which-programming-languages-do-hackers-use-ac3ed9d3e8f8?source=collection_archive---------8-----------------------#2023-01-31](https://towardsdatascience.com/which-programming-languages-do-hackers-use-ac3ed9d3e8f8?source=collection_archive---------8-----------------------#2023-01-31)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/which-programming-languages-do-hackers-use-ac3ed9d3e8f8?source=collection_archive---------8-----------------------#2023-01-31](https://towardsdatascience.com/which-programming-languages-do-hackers-use-ac3ed9d3e8f8?source=collection_archive---------8-----------------------#2023-01-31)
- en: '*Analyzing the Exploit Database with Python*'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*使用 Python 分析漏洞数据库*'
- en: '[](https://medium.com/@c4ristian?source=post_page-----ac3ed9d3e8f8--------------------------------)[![Christian
    Koch](../Images/6daf756236838069bf79f1078b03ae6d.png)](https://medium.com/@c4ristian?source=post_page-----ac3ed9d3e8f8--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ac3ed9d3e8f8--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ac3ed9d3e8f8--------------------------------)
    [Christian Koch](https://medium.com/@c4ristian?source=post_page-----ac3ed9d3e8f8--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@c4ristian?source=post_page-----ac3ed9d3e8f8--------------------------------)[![Christian
    Koch](../Images/6daf756236838069bf79f1078b03ae6d.png)](https://medium.com/@c4ristian?source=post_page-----ac3ed9d3e8f8--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ac3ed9d3e8f8--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ac3ed9d3e8f8--------------------------------)
    [Christian Koch](https://medium.com/@c4ristian?source=post_page-----ac3ed9d3e8f8--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7633c76cf996&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhich-programming-languages-do-hackers-use-ac3ed9d3e8f8&user=Christian+Koch&userId=7633c76cf996&source=post_page-7633c76cf996----ac3ed9d3e8f8---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ac3ed9d3e8f8--------------------------------)
    ·8 min read·Jan 31, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fac3ed9d3e8f8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhich-programming-languages-do-hackers-use-ac3ed9d3e8f8&user=Christian+Koch&userId=7633c76cf996&source=-----ac3ed9d3e8f8---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7633c76cf996&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhich-programming-languages-do-hackers-use-ac3ed9d3e8f8&user=Christian+Koch&userId=7633c76cf996&source=post_page-7633c76cf996----ac3ed9d3e8f8---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ac3ed9d3e8f8--------------------------------)
    ·8 分钟阅读·2023年1月31日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fac3ed9d3e8f8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhich-programming-languages-do-hackers-use-ac3ed9d3e8f8&user=Christian+Koch&userId=7633c76cf996&source=-----ac3ed9d3e8f8---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fac3ed9d3e8f8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhich-programming-languages-do-hackers-use-ac3ed9d3e8f8&source=-----ac3ed9d3e8f8---------------------bookmark_footer-----------)![](../Images/9e1b2f7d981cfcac403ff39d2ea6acd5.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fac3ed9d3e8f8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhich-programming-languages-do-hackers-use-ac3ed9d3e8f8&source=-----ac3ed9d3e8f8---------------------bookmark_footer-----------)![](../Images/9e1b2f7d981cfcac403ff39d2ea6acd5.png)'
- en: Photo by [Luca Bravo](https://unsplash.com/@lucabravo?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Luca Bravo](https://unsplash.com/@lucabravo?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: In 2021, together with fellow scientists, we conducted a [survey](https://doi.org/10.48550/arXiv.2203.12466)
    at the German Chaos Computer Club (CCC). Our goal was to find out which programming
    languages are most commonly used by hackers. This article follows up the survey
    and compares its findings with an analysis of the [Exploit Database](https://www.exploit-db.com/).
    Readers get step-by-step instructions on how to set up the analysis environment
    and a summary of the results. Thus, the article not only covers applied techniques,
    but also offers insights into the world of cybersecurity.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在2021年，我们与其他科学家一起在德国混沌计算机俱乐部（CCC）进行了[调查](https://doi.org/10.48550/arXiv.2203.12466)。我们的目标是找出黑客最常用的编程语言。本文跟进了调查结果，并将其发现与对[Exploit
    Database](https://www.exploit-db.com/)的分析进行比较。读者将获得逐步的环境设置说明和结果总结。因此，本文不仅涵盖了应用技术，还提供了有关网络安全领域的见解。
- en: Survey Overview
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调查概述
- en: As Europe’s largest association of hackers, the [Chaos Computer Club](https://www.ccc.de/en)
    provided a good basis for a study of programming languages prevalent in this field.
    We sent a link to an online questionnaire to the club’s members in May 2021 for
    this purpose. According to the results, respondents mainly used the Shell and
    Python for hacking. Another key finding of the survey was that their language
    preferences had changed over time. In general, participants did not consider the
    choice of programming language to be essential for hacking. With 48 responses
    the sample size of the study was relatively small. As it only targeted members
    of the CCC, the findings might also be biased. Goal of this article is to validate
    the key results by analyzing the Exploit-DB.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 作为欧洲最大的黑客协会，[混沌计算机俱乐部](https://www.ccc.de/en)为研究该领域中流行的编程语言提供了良好的基础。为此，我们在2021年5月向俱乐部的成员发送了一个在线问卷的链接。根据结果，受访者主要使用Shell和Python进行黑客攻击。调查的另一个关键发现是，他们的语言偏好随着时间的推移发生了变化。总体而言，参与者并不认为编程语言的选择对黑客攻击至关重要。由于样本量只有48个，研究的样本量相对较小。由于仅针对CCC的成员，结果也可能存在偏差。本文的目标是通过分析Exploit-DB来验证关键结果。
- en: About the Exploit-DB
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于Exploit-DB
- en: In the same year that the CCC survey was conducted, a so-called zero-day exploit
    attracted a lot of attention. Back then, the popular logging framework Log4j suffered
    from a highly critical [vulnerability](https://www.ncsc.gov.uk/information/log4j-vulnerability-what-everyone-needs-to-know).
    A script taking advantage of such a security flaw is called an *exploit*. As the
    name indicates, the Exploit Database offers a public archive of exploits and corresponding
    vulnerable software. Target audience of the platform are penetration testers and
    security researchers. Users can access the database via its website or a toolset
    available under [Kali Linux](https://www.kali.org/tools/exploitdb/).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在CCC调查进行的同一年，一种被称为零日漏洞的攻击引起了广泛关注。当时，流行的日志框架Log4j遭遇了一个高度严重的[漏洞](https://www.ncsc.gov.uk/information/log4j-vulnerability-what-everyone-needs-to-know)。利用这种安全缺陷的脚本称为*exploit*。顾名思义，Exploit
    Database提供了一个包含exploit和相应易受攻击软件的公共档案。该平台的目标用户是渗透测试人员和安全研究人员。用户可以通过其网站或在[Kali Linux](https://www.kali.org/tools/exploitdb/)下提供的工具集访问数据库。
- en: At the time of this writing over 45,000 exploits from more than 9,000 unique
    authors have been published in the Exploit-DB ([*source*](https://github.com/c4ristian/exploits/blob/master/notebooks/comparison.ipynb)).
    Database entries consist of different attributes such as an exploit ID, author,
    type, and publication date. Each record relates to a file that contains the actual
    script or program of the exploit. Under Kali, we find the root directory of the
    database by executing the shell command `exploitdb`. Among other things, the directory
    contains a CSV file with an Exploit-DB snapshot, (files_exploits.csv*)*, as well
    as sub directories with the actual scripts or programs (exploits/).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，Exploit-DB中已发布超过45,000个exploit，来自9,000多名独立作者（[*source*](https://github.com/c4ristian/exploits/blob/master/notebooks/comparison.ipynb)）。数据库条目包含不同的属性，如exploit
    ID、作者、类型和发布日期。每个记录与一个包含实际脚本或程序的文件相关。在Kali系统下，我们通过执行shell命令`exploitdb`来找到数据库的根目录。该目录包含一个CSV文件（files_exploits.csv*）*，以及包含实际脚本或程序的子目录（exploits/）。
- en: '![](../Images/80b058b5e0887b41e38121c390ad098f.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/80b058b5e0887b41e38121c390ad098f.png)'
- en: 'Figure 1: Directory of the Exploit-DB under Kali Linux'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图1：Kali Linux下的Exploit-DB目录
- en: The comparison described in this article was prepared on 13 January 2023 using
    a database snapshot of 22 November 2022\. Both the snapshot as well as the source
    code of the analysis are available on [GitHub](https://github.com/c4ristian/exploits).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 本文描述的比较是在2023年1月13日使用2022年11月22日的数据库快照准备的。快照和分析的源代码都可以在[GitHub](https://github.com/c4ristian/exploits)上获取。
- en: Setup and data transformation
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置和数据转换
- en: 'In order to set up the analysis environment, the first step is to clone the
    GitHub project. All files required are stored in its root directory *exploits*.
    The implementation is based on the [Anaconda](https://www.anaconda.com/products/distribution)
    Python distribution, which has to be preinstalled on the client machine. One can
    create and activate the conda environment by executing the following commands
    in the project’s root directory:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 为了设置分析环境，第一步是克隆GitHub项目。所有所需文件都存储在其根目录*exploits*中。该实现基于[Anaconda](https://www.anaconda.com/products/distribution)
    Python发行版，客户端机器上必须预先安装该发行版。可以通过在项目根目录中执行以下命令来创建和激活conda环境：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The database snapshot to be analyzed is stored as a CSV file in the *data*
    folder. It was retrieved from Kali Linux and transformed with the script [execute_transformer](https://github.com/c4ristian/exploits/blob/master/execute_transformer.py).
    Both the time of transformation and that of the snapshot are documented in the
    file [timestamps](https://github.com/c4ristian/exploits/blob/master/data/timestamps.txt).
    If needed, the snapshot can be updated by running the following commands in the
    Kali shell:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 要分析的数据库快照存储为*data*文件夹中的CSV文件。它是从Kali Linux中获取的，并通过脚本[execute_transformer](https://github.com/c4ristian/exploits/blob/master/execute_transformer.py)进行了转换。转换时间和快照时间都记录在文件[timestamps](https://github.com/c4ristian/exploits/blob/master/data/timestamps.txt)中。如有需要，可以通过在Kali
    shell中运行以下命令来更新快照：
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The transformation script provides functions to tidy the data and to derive
    additional fields. One main task is to extract information on the used programming
    languages. To this end, the library [Pygments](https://pygments.org/) is applied.
    Although its main purpose is syntax highlighting, the framework offers functions
    for guessing the programming language of a specific file.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 转换脚本提供了整理数据和推导附加字段的功能。一个主要任务是提取使用的编程语言的信息。为此，应用了库[Pygments](https://pygments.org/)。虽然其主要目的是语法高亮，但该框架提供了猜测特定文件编程语言的功能。
- en: 'Aside from Pygments, there are alternative language detection libraries. One
    example tested for this article is the deep learning solution [Guesslang](https://guesslang.readthedocs.io/en/latest/).
    However, integrating it into the conda environment proved difficult and the processing
    time by far exceeded that of Pygments. Since Guesslang did not yield superior
    results, the latter framework was adopted. The following function includes Pygments
    into the data transformation script:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 除了Pygments，还有其他语言检测库。本文测试的一个例子是深度学习解决方案[Guesslang](https://guesslang.readthedocs.io/en/latest/)。然而，将其集成到conda环境中证明是困难的，而且处理时间远远超过Pygments。由于Guesslang没有产生更好的结果，因此采用了后者框架。以下函数将Pygments纳入数据转换脚本中：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The above Python code reads a certain file, counts its lines and uses the function
    `guess_lexer_for_filename` to detect the programming language. To achieve this,
    the framework applies various Lexers, meaning classes for syntax analysis. Only
    those Lexers assigned to the given file extension are considered. There are suffixes
    for which only one class exists, with others the choice is ambiguous. For example,
    the extension “py” is clearly assigned to Python, while the suffix “pl” could
    either point to Perl or Prolog. The best matching Lexer is returned as the result.
    Its name reveals the programming language and builds the basis of the analysis.
    The findings discussed in the next section originate from the notebook [comparison](https://github.com/c4ristian/exploits/blob/master/notebooks/comparison.ipynb).
    In addition, the GitHub project provides further notebooks to explore specific
    aspects of the Exploit-DB.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 上述 Python 代码读取某个文件，统计其行数，并使用函数`guess_lexer_for_filename`来检测编程语言。为此，框架应用了各种 Lexer，即用于语法分析的类。只有那些分配给给定文件扩展名的
    Lexer 被考虑在内。有些扩展名只有一个类，而其他扩展名则存在选择上的模糊性。例如，扩展名“py”明确指向 Python，而“pl”扩展名则可能指向 Perl
    或 Prolog。最佳匹配的 Lexer 被作为结果返回。其名称揭示了编程语言，并为分析提供基础。下一节讨论的发现源自于笔记本 [comparison](https://github.com/c4ristian/exploits/blob/master/notebooks/comparison.ipynb)。此外，GitHub
    项目还提供了进一步的笔记本，以探索 Exploit-DB 的具体方面。
- en: Discussion of results
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结果讨论
- en: Central question of the CCC survey was, which programming languages participants
    had used in the year prior to the study. Respondents could choose more than one
    answer option. Figure 2 compares the top ten languages mentioned by CCC members
    with those used by Exploit-DB authors. The chart reveals similarities, but also
    differences.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: CCC 调查的核心问题是参与者在研究前一年使用了哪些编程语言。受访者可以选择多个答案选项。图 2 比较了 CCC 成员提及的前十种语言与 Exploit-DB
    作者使用的语言。图表揭示了相似之处，也显示了差异。
- en: First, there is a major gap in sample sizes. Overall, 48 members of the CCC
    took part in the survey. In contrast more than 900 unique authors published over
    2,500 files in the Exploit-DB in the years 2020/21\. These two years were selected
    as they coincide with the research period of the comparison study. In order to
    avoid duplicates, each author-language combination in the Exploit-DB was counted
    only once. For the research period, this led to 1,134 language references, of
    which 1,116 were part of the top ten. On the other hand, participants of the CCC
    survey named their top ten languages 140 times.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，样本规模存在一个主要差距。总体而言，48 名 CCC 成员参与了调查。相比之下，超过 900 名独立作者在 2020/21 年间在 Exploit-DB
    上发布了 2,500 多个文件。这两年被选中是因为它们与比较研究的研究期重合。为了避免重复，每个作者-语言组合在 Exploit-DB 中仅计数一次。在研究期间，这导致了
    1,134 个语言参考，其中 1,116 个属于前十名。另一方面，CCC 调查的参与者将他们的前十种语言提及了 140 次。
- en: '![](../Images/ad006dc121e042f5b75086b30b7687d2.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ad006dc121e042f5b75086b30b7687d2.png)'
- en: 'Figure 2: Top ten languages of the CCC survey and the Exploit-DB'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2：CCC 调查和 Exploit-DB 的前十种语言
- en: Members of the CCC mainly used the Shell (Bash/Shell/PowerShell) and Python,
    followed by C, JavaScript, and HTML/CSS. All of these technologies appear as well
    in the Exploit-DB. Generally, there is a substantial overlap in language choices.
    Six out of ten technologies are present in both lists in Figure 2\. Python consistently
    ranks second, showing its popularity in the cybersecurity domain. Yet some languages
    on one side of the chart do not appear on the other.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: CCC 的成员主要使用 Shell（Bash/Shell/PowerShell）和 Python，其次是 C、JavaScript 和 HTML/CSS。所有这些技术在
    Exploit-DB 中也都有出现。总体来看，语言选择有很大重叠。图 2 中的十种技术中有六种出现在两个列表中。Python 始终排名第二，显示出其在网络安全领域的受欢迎程度。然而，图表一侧的某些语言在另一侧并未出现。
- en: One main difference is the unbalanced distribution of languages in the Exploit-DB.
    More than half of the submissions were text files. Here, the name “Text only”
    assigned by Pygments is misleading. Text files in the Exploit-DB typically include
    a description, but also often shell commands and possibly scripts in other languages.
    Therefore, certain technologies might be underrepresented in the results. Spot
    checks have shown that this is likely to be true for shell scripts, ranking first
    in the CCC study. Herein lies a limitation of our approach. Frameworks like Pygments
    have problems in assessing multi-language files. Overcoming this issue would be
    an interesting topic for a follow-up study.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 一个主要的区别是 Exploit-DB 中语言的分布不均。超过一半的提交是文本文件。在这里，Pygments 分配的名称“仅文本”具有误导性。Exploit-DB
    中的文本文件通常包含描述，但也经常包含 shell 命令和可能的其他语言脚本。因此，某些技术在结果中可能被低估。抽样检查显示，这对 shell 脚本可能确实成立，后者在
    CCC 研究中排名第一。这也是我们方法的一个局限性。像 Pygments 这样的框架在评估多语言文件时存在问题。克服这一问题将是一个有趣的后续研究课题。
- en: Let us move away from the years 2020/21 and have a look at the entire Exploit-DB
    history. Figure 3 shows the top ten languages of all time in the database. As
    above, language detection relied on Pygments and each author-language combination
    was counted only once.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们暂时离开 2020/21 年，并查看 Exploit-DB 的整个历史。图 3 显示了数据库中所有时间的前十种语言。与之前一样，语言检测依赖于 Pygments，每种作者-语言组合只计算一次。
- en: '![](../Images/89ed9c1d5ee1ecdb05edac6e75b15f2d.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/89ed9c1d5ee1ecdb05edac6e75b15f2d.png)'
- en: 'Figure 3: Top ten languages in the Exploit-DB of all time'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3：Exploit-DB 中所有时间的前十种语言
- en: According to Figure 3, the top ten languages of all time in the Exploit-DB are
    led by Text, followed by Python, C, HTML, and Perl. Again, there is a considerable
    intersection with the choices of CCC members. Certainly a surprise is the presence
    of Prolog in the second half of the list. Presumable reason for this is a wrong
    classification of files with the extension “pl”. In any case, the relatively high
    rank of Perl is remarkable as the language does not appear at all in Figure 2\.
    This coincides with another finding of the CCC survey. In the study, a majority
    of participants (77.5%) reported that their language preferences had changed over
    time. To evaluate this, we can take a look at Figure 4\. The chart visualizes
    the percentage share of the top ten languages in the Exploit-DB over 25 years
    prior to this analysis. Each author-language combination was counted once per
    year. As a result, we found 16,422 language references from 9,592 unique authors
    in the period under study.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 根据图 3，Exploit-DB 中所有时间的前十种语言以 Text 为首，其次是 Python、C、HTML 和 Perl。再次，这与 CCC 成员的选择有相当大的交集。一个惊讶的发现是
    Prolog 出现在列表的后半部分。推测原因是将扩展名为 “pl” 的文件错误分类。无论如何，Perl 的相对较高排名值得注意，因为该语言在图 2 中根本没有出现。这与
    CCC 调查的另一个发现相符。在研究中，大多数参与者（77.5%）报告称他们的语言偏好随时间发生了变化。为了评估这一点，我们可以查看图 4。该图表可视化了在本分析之前的
    25 年中 Exploit-DB 前十种语言的百分比份额。每种作者-语言组合每年只计算一次。因此，我们在研究期间发现了来自 9,592 位独特作者的 16,422
    个语言引用。
- en: '![](../Images/2da91500455feddd68c367c50f7ae4a7.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2da91500455feddd68c367c50f7ae4a7.png)'
- en: 'Figure 4: Top 10 languages of the Exploit-DB over 25 years preceding the analysis'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4：分析前 25 年 Exploit-DB 中的前 10 种语言
- en: Figure 4 reveals that the percentage of text files in the Exploit-DB remained
    rather stable. The time frame of 25 years was chosen because the number of submissions
    prior to this period was relatively low. Aside from a constant use of Text, Figure
    4 shows a change in preferences for the other languages. Most obvious is a shift
    from C towards Python in the database. One possible reason is mentioned in the
    CCC study as well. Participants reported that they did not consider the choice
    of programming language to be vital for hacking. Thus, the increasing use of Python
    could simply reflect its general rise in popularity in recent years. Language
    preferences should therefore continue to change in future as technology evolves.
    Such a shift could be triggered, for example, by the introduction of [Rust](https://en.wikipedia.org/wiki/Rust_for_Linux)
    as a second language for the development of the Linux kernel. Whether this forecast
    proves true will be seen in the coming years.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图4揭示了Exploit-DB中文本文件的百分比保持相对稳定。选择25年的时间范围是因为此期间之前的提交数量相对较少。除了文本的持续使用外，图4显示了其他语言的偏好变化。最明显的是数据库中从C语言向Python的转变。CCC研究中也提到了一个可能的原因。参与者报告称，他们并未将编程语言的选择视为黑客攻击中的关键因素。因此，Python使用的增加可能仅仅反映了其近年来的普遍受欢迎程度。语言偏好因此应随着技术的发展而继续变化。例如，引入[Rust](https://en.wikipedia.org/wiki/Rust_for_Linux)作为Linux内核开发的第二语言，可能会引发这种变化。这个预测是否准确将在未来几年得到验证。
- en: Conclusion
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In summary, the comparison presented in this article reveals a substantial overlap
    between languages used by CCC members and Exploit-DB authors. Both datasets confirm
    the popularity of Python in the cybersecurity domain. Moreover, each dataset indicates
    a change in language preferences over time. One possible reason is formulated
    by the CCC study. Participants did not consider the choice of programming language
    to be essential for hacking. Following this explanation, one should expect language
    preferences to continue to change with technological progress. One major limitation
    of the analysis of the Exploit-DB relates to the language detection approach.
    Due to problems with multi-language files, certain technologies are possibly underrepresented.
    Solving this issue would be an interesting topic for a follow-up study. Clearly,
    the Exploit-DB offers a rich dataset for both data scientists and security experts.
    There is much more to learn about the art of exploitation.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 总结而言，本文中呈现的比较揭示了CCC成员和Exploit-DB作者所使用语言之间的显著重叠。两个数据集都确认了Python在网络安全领域的流行程度。此外，每个数据集都表明语言偏好随着时间的推移而发生变化。CCC研究提出了一个可能的原因。参与者并未将编程语言的选择视为黑客攻击中的关键因素。根据这一解释，人们应预期随着技术进步，语言偏好将继续变化。Exploit-DB分析的一个主要限制与语言检测方法有关。由于多语言文件的问题，某些技术可能被低估。解决这个问题将是一个有趣的后续研究主题。显然，Exploit-DB为数据科学家和安全专家提供了丰富的数据集。关于利用艺术的学习还有很多。
- en: All images unless otherwise noted are by the author.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 除非另有说明，所有图片均由作者提供。
