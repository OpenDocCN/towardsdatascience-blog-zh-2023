- en: 'Beyond The Hype: How Generative AI Is Transforming Software Development'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 超越炒作：生成式AI如何改变软件开发
- en: 原文：[https://towardsdatascience.com/beyond-the-hype-how-generative-ai-is-transforming-software-development-8543870c3c9?source=collection_archive---------5-----------------------#2023-05-30](https://towardsdatascience.com/beyond-the-hype-how-generative-ai-is-transforming-software-development-8543870c3c9?source=collection_archive---------5-----------------------#2023-05-30)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/beyond-the-hype-how-generative-ai-is-transforming-software-development-8543870c3c9?source=collection_archive---------5-----------------------#2023-05-30](https://towardsdatascience.com/beyond-the-hype-how-generative-ai-is-transforming-software-development-8543870c3c9?source=collection_archive---------5-----------------------#2023-05-30)
- en: '[](https://medium.com/@laumannfelix?source=post_page-----8543870c3c9--------------------------------)[![Felix
    Laumann](../Images/01e77ffc438dad0794afa7c208ec0f47.png)](https://medium.com/@laumannfelix?source=post_page-----8543870c3c9--------------------------------)[](https://towardsdatascience.com/?source=post_page-----8543870c3c9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----8543870c3c9--------------------------------)
    [Felix Laumann](https://medium.com/@laumannfelix?source=post_page-----8543870c3c9--------------------------------)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@laumannfelix?source=post_page-----8543870c3c9--------------------------------)[![Felix
    Laumann](../Images/01e77ffc438dad0794afa7c208ec0f47.png)](https://medium.com/@laumannfelix?source=post_page-----8543870c3c9--------------------------------)[](https://towardsdatascience.com/?source=post_page-----8543870c3c9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----8543870c3c9--------------------------------)
    [Felix Laumann](https://medium.com/@laumannfelix?source=post_page-----8543870c3c9--------------------------------)'
- en: ·
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F57f955c90c95&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeyond-the-hype-how-generative-ai-is-transforming-software-development-8543870c3c9&user=Felix+Laumann&userId=57f955c90c95&source=post_page-57f955c90c95----8543870c3c9---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----8543870c3c9--------------------------------)
    ·7 min read·May 30, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8543870c3c9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeyond-the-hype-how-generative-ai-is-transforming-software-development-8543870c3c9&user=Felix+Laumann&userId=57f955c90c95&source=-----8543870c3c9---------------------clap_footer-----------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F57f955c90c95&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeyond-the-hype-how-generative-ai-is-transforming-software-development-8543870c3c9&user=Felix+Laumann&userId=57f955c90c95&source=post_page-57f955c90c95----8543870c3c9---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----8543870c3c9--------------------------------)
    ·7 min read·2023年5月30日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8543870c3c9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeyond-the-hype-how-generative-ai-is-transforming-software-development-8543870c3c9&user=Felix+Laumann&userId=57f955c90c95&source=-----8543870c3c9---------------------clap_footer-----------)'
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8543870c3c9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeyond-the-hype-how-generative-ai-is-transforming-software-development-8543870c3c9&source=-----8543870c3c9---------------------bookmark_footer-----------)![](../Images/ce4f72ea9b361c01b4aa2737ca3a62af.png)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8543870c3c9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeyond-the-hype-how-generative-ai-is-transforming-software-development-8543870c3c9&source=-----8543870c3c9---------------------bookmark_footer-----------)![](../Images/ce4f72ea9b361c01b4aa2737ca3a62af.png)'
- en: Image by [Google DeepMind](https://unsplash.com/@deepmind) on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Google DeepMind](https://unsplash.com/@deepmind) 提供，刊登在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: '**Introduction**'
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**介绍**'
- en: 'Artificial intelligence (AI) has come a long way since its inception in the
    1950s. From rule-based expert systems to deep learning, AI has evolved into a
    powerful technology that has transformed various industries, from healthcare to
    finance, from transportation to manufacturing. The latest hype in AI is Generative
    AI. Yes, it’s a hype, but it undoubtedly has the potential to revolutionize many
    aspects of our personal and professional lives. In this blog post, we’ll explore
    one aspect which many people in the technology industry are thinking about: the
    way we build software.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 人工智能（AI）自1950年代诞生以来，已经取得了长足的进步。从基于规则的专家系统到深度学习，AI 已经发展成为一种强大的技术，彻底改变了医疗、金融、交通和制造等各个行业。AI
    最新的热门话题是生成式AI。是的，它是一个热门话题，但无疑具有颠覆我们个人和职业生活各个方面的潜力。在这篇博客文章中，我们将探讨一个许多技术行业人士正在思考的方面：我们如何构建软件。
- en: One subgroup of Generative AI algorithms, a class of models called Large Language
    Models (LLMs) that can create text based on the user’s input data, has gained
    significant interest over the last couple of months. LLMs are, in their most basic
    description, multi-layer deep neural networks that are trained on large — very
    large — datasets from which the model learns the underlying patterns and generates
    new data that follow those patterns. Writing to an LLM and asking for a response
    is called “prompting” and knowing how to write effective prompts is a skill in
    demand, often referred to as prompt engineering.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 一类生成式AI算法的子群体，即一类能够基于用户输入数据生成文本的模型，被称为大型语言模型（LLMs），在过去几个月引起了显著的关注。LLMs 在其最基本的描述中，是多层深度神经网络，经过大量——非常大量——的数据集训练，从中模型学习潜在的模式，并生成遵循这些模式的新数据。向LLM写入并请求回应称为“提示”，了解如何编写有效的提示是一项需求旺盛的技能，通常被称为提示工程。
- en: To tune LLMs to give a humanlike response, a machine learning training framework
    called Reinforcement Learning with Human Feedback (RLHF) has been shown to be
    particularly powerful. This requires a large number of people to repeatedly prompt
    early versions of an LLM, read its response, and tell the model whether it passed
    their “humanlike” litmus test. The group of “prompters” are often told to pay
    attention, for example, to unintentional insults of the user by the model coming
    from gender or racial biases.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 为了调整大型语言模型（LLMs）以产生类似人类的回应，一种称为“人类反馈强化学习”（RLHF）的机器学习训练框架已被证明特别有效。这需要大量的人反复提示早期版本的LLM，阅读其回应，并告诉模型是否通过了他们的“类人”试金石。这些“提示者”通常被告知要注意模型可能带来的性别或种族偏见对用户的无意侮辱。
- en: LLMs are changing the way we create, giving everyone the tools they need to
    write poetry, essays, marketing copies and more. The use cases are extensive,
    but in this blog post, we’ll explore the impact of Generative AI on the future
    of software development. Prompts are a key concept for Generative AI, so let us
    define it before we go into more detail.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: LLMs 正在改变我们创作的方式，赋予每个人编写诗歌、文章、营销文案等所需的工具。应用场景非常广泛，但在这篇博客文章中，我们将探讨生成式AI对未来软件开发的影响。提示是生成式AI的一个关键概念，所以在深入探讨之前，让我们定义一下它。
- en: '**Prompts:** Prompts serve as the inputs or queries provided by a user or program
    to an LLM, aiming to elicit a targeted response from the model. These prompts
    encompass various forms such as natural language sentences, questions, code snippets,
    or commands. They can be a combination of text and code, allowing for versatile
    interactions. Furthermore, prompts can be nested or chained, enabling the utilization
    of the output from one prompt as the input for another. This capability fosters
    intricate and dynamic exchanges between the user and the LLM, or even among multiple
    LLMs.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**提示：** 提示作为用户或程序提供给LLM的输入或查询，旨在引出模型的针对性回应。这些提示形式多样，如自然语言句子、问题、代码片段或命令。它们可以是文本和代码的组合，允许多样化的交互。此外，提示可以嵌套或链式使用，从而利用一个提示的输出作为另一个提示的输入。这种能力促进了用户与LLM之间，甚至多个LLM之间的复杂和动态交流。'
- en: '![](../Images/d0efe08e8228cbb73a7d75fd436e6be7.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d0efe08e8228cbb73a7d75fd436e6be7.png)'
- en: Image by [Christina](https://unsplash.com/@wocintechchat) on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Christina](https://unsplash.com/@wocintechchat) 提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: '**How LLMs are changing the way we build software**'
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**LLMs如何改变我们构建软件的方式**'
- en: 'Although LLMs were initially developed for language generation tasks, they
    have proven to be versatile and can be applied to various tasks beyond generating
    text. We’ll begin with exploring one capability that has been especially interesting
    for anyone building software: Code Completion.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 LLM 最初是为语言生成任务开发的，但它们已经证明是多功能的，可以应用于生成文本之外的各种任务。我们将从探索一个对任何构建软件的人都特别有趣的能力开始：代码补全。
- en: LLMs can assist developers by predicting the next lines of code based on the
    code already written or based on a prompt that describes the functionality of
    a certain piece of the software. For example, a prompt like “write a Python function
    that transforms a NumPy array into a dictionary where the keys are the strings
    of the range over the first dimension of the array” would return the code below.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: LLM 可以通过根据已编写的代码或根据描述软件某一部分功能的提示预测下一行代码来协助开发人员。例如，像“编写一个 Python 函数，将 NumPy 数组转换为字典，其中键是数组第一维范围的字符串”这样的提示将返回如下代码。
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Most software developers are used to the concept of “pair programming”, where
    one developer keeps the overall software structure in mind whereas the other writes
    the code. Products built on top of specialized LLMs, like GitHub’s Copilot can
    be an adequate alternative to a programming partner — helping to accelerate the
    software development process. Nonetheless, with this level of assistance, the
    user must understand how to prompt the LLM to achieve their desired output. This
    may sound simple at first, but in fact, it requires knowledge of data structures,
    functions and many other concepts in the relevant programming languages.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数软件开发人员习惯于“结对编程”的概念，其中一个开发人员记住整体软件结构，而另一个开发人员编写代码。像 GitHub 的 Copilot 这样的专用
    LLM 上构建的产品可以作为编程伙伴的一个合适替代品——帮助加速软件开发过程。然而，在这种程度的协助下，用户必须了解如何提示 LLM 以实现他们想要的输出。这听起来可能很简单，但实际上需要对相关编程语言中的数据结构、函数和许多其他概念有一定的了解。
- en: The next leap in the [software revolution](https://blog.samaltman.com/the-software-revolution)
    will occur when developers do not need to break apart the overarching functionality
    of the software into smaller pieces that can be distilled in prompts that are
    understood by LLMs, like the array-to-dictionary example above. Generative AI
    will fundamentally change how software is developed when LLMs are capable of comprehending
    the main functionality themselves and providing suggestions for a feasible implementation
    of it, through a *conversational experience*.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在[软件革命](https://blog.samaltman.com/the-software-revolution)的下一次飞跃将发生在开发人员不再需要将软件的总体功能拆分成较小的部分，这些部分可以通过
    LLM 理解的提示进行提炼，比如上面的数组到字典的示例。当 LLM 能够理解主要功能本身并通过*对话体验*提供可行的实现建议时，生成式 AI 将从根本上改变软件开发的方式。
- en: '**In essence, this will allow not only developers to create software but anyone
    who is able to accurately describe the functionality of a desired software product
    in natural language.**'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**从本质上讲，这将使不仅是开发人员能够创建软件，而是任何能够准确描述所需软件产品功能的人都能做到这一点。**'
- en: Currently, LLMs cannot return the entire code repository that would be necessary
    to create advanced software products. Let’s take an example, I want to build an
    Android mobile application that suggests recipes for smoothies based on a picture
    I take of a fruit basket in my living room.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 当前，LLM 不能返回创建高级软件产品所需的整个代码库。以一个例子来说，我想建立一个 Android 移动应用程序，该应用程序根据我拍摄的水果篮的照片来建议平滑的食谱。
- en: '*Exact prompt submitted to ChatGPT: “Write code for an Android mobile application
    that suggests recipes for smoothies based on a picture I take of the fruit basket
    in my living room.”*'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '*提交给 ChatGPT 的准确提示： “编写一个 Android 移动应用程序的代码，该应用程序根据我拍摄的水果篮的照片来建议平滑的食谱。”*'
- en: Today, an LLM would return an outline of how one could approach building the
    application — potentially with sample code — but not the fully functional software.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，一个大型语言模型（LLM）会返回一个关于如何构建该应用程序的大纲——可能包含示例代码——但不会返回完全功能的软件。
- en: Although returning the entire code repository would be of great help to anyone
    building such an application, it would still not be enough to launch it and be
    usable by anyone with an Android phone, because the code would most likely need
    to be hosted in Google Firebase and submitted for validation to Play Store (although
    the last step can be achieved through Firebase).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管返回整个代码库对构建此类应用程序的人将大有帮助，但这仍不足以启动并使其在任何拥有 Android 手机的人都可用，因为代码很可能需要托管在 Google
    Firebase 中并提交至 Play Store 进行验证（尽管最后一步可以通过 Firebase 实现）。
- en: 'Nonetheless, the current capabilities of LLMs are not far away from achieving
    these functionalities. It’s a popular misconception that LLMs are the bottleneck
    in this chain of executions, for example, from writing the code for a mobile application
    to having it operational and downloadable on the Play Store. In fact, the current
    bottleneck is the *safe and reliable integration* of LLMs into third-party systems.
    For the mobile application example above, one would need at least two integrations:
    LLM to GitHub to store the code, and LLM to Firebase to configure the application
    and submit it for publication on Play Store.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，当前 LLM 的能力离实现这些功能并不远。一个普遍的误解是 LLM 是这一执行链中的瓶颈，例如，从编写移动应用程序代码到在 Play Store
    上运营和可下载。实际上，当前的瓶颈是 LLM 的*安全和可靠集成*到第三方系统中。以上述移动应用程序示例为例，需要至少两个集成：LLM 到 GitHub 以存储代码，LLM
    到 Firebase 以配置应用程序并提交至 Play Store 发布。
- en: If LLMs were capable of distilling high-level software product descriptions
    and operationalizing the product, the development process would become a conversational
    experience akin to the interactions between a product manager and a full-stack
    software engineer. Speaking in an overly simplified manner, the creative head
    of the development efforts, the product manager, would provide the core functionality
    of the product in natural language, whereas her counterpart, the “full-stack software
    engineer-turned LLM” would ask clarification questions and technically execute
    the product manager’s descriptions.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 LLM 能够提炼高级软件产品描述并使产品具备可操作性，那么开发过程将变成一种类似于产品经理和全栈软件工程师之间的对话体验。用过于简单的话说，开发工作的创意负责人，产品经理，会用自然语言提供产品的核心功能，而她的对手，即“全栈软件工程师转型的
    LLM”则会提出澄清问题并技术性地执行产品经理的描述。
- en: '**Safe and reliable integrations of LLMs to third-party systems**'
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**LLM 与第三方系统的安全和可靠集成**'
- en: The safety and reliability of letting LLMs directly interact with third-party
    systems are crucial for the benefit of using LLMs. We will describe three important
    requirements to integrate LLMs with third-party systems safely and reliably, but
    this list is by no means exhaustive.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 让 LLM 直接与第三方系统交互的安全性和可靠性对使用 LLM 的好处至关重要。我们将描述集成 LLM 与第三方系统安全可靠的三个重要要求，但这个列表并不是详尽无遗的。
- en: '**Model Validation:** Before integrating an LLM with a third-party system,
    it is important to thoroughly validate the model’s accuracy. Here, accuracy refers
    to the output of the LLM given a prompt by its user. The LLM’s output causes an
    action in the third-party system. It’s crucial to validate in a test environment
    whether the executed actions are repeatedly the same over a range of variations
    in the prompts with the same underlying meaning.'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**模型验证：** 在将 LLM 集成到第三方系统之前，彻底验证模型的准确性非常重要。这里的准确性指的是 LLM 在用户给定提示时的输出。LLM 的输出会在第三方系统中引发某种动作。必须在测试环境中验证这些动作是否在相同基本含义的提示下，随着提示的变化而一致。'
- en: '**Transparency and Explainability:** LLMs are complex and it is often impossible
    to understand how a certain response was created. If their decision-making processes,
    i.e., how they arrive at any given response, would be made transparent by explaining
    it in natural language, the human counterpart in the conversational software creation
    experience would know more about how to prompt the LLM so it produces the desired
    outcome.'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**透明性和可解释性：** LLM 是复杂的，通常很难理解某个响应是如何产生的。如果它们的决策过程，即它们如何得出任何给定的响应，能够通过自然语言解释进行透明化，那么在对话软件创建过程中，人类合作伙伴将能更好地了解如何提示
    LLM，以产生期望的结果。'
- en: '**Version Control:** LLMs can be updated or replaced over time, so it’s important
    to have a clear version control strategy in place because the response to the
    same prompt might change from version to version. Hence, a repository of previous
    model versions, a thorough testing and monitoring phase with any model update,
    as well as contingency plans for unexpected issues or failures with new model
    updates are crucial.'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**版本控制：** LLMs可能会随着时间的推移而更新或替换，因此拥有明确的版本控制策略非常重要，因为对同一提示的响应可能会因版本不同而有所变化。因此，之前模型版本的存储库、任何模型更新后的全面测试和监控阶段，以及应对新模型更新中的意外问题或故障的应急计划都是至关重要的。'
- en: '**Conclusion**'
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**结论**'
- en: In summary, Large Language Models (LLMs) have outstanding capabilities that
    are suitable for assisting with tasks which come from a large pool of well-structured
    information and require great attention to detail. By automating many repetitive
    and time-consuming tasks, LLMs are enabling their users, for example product managers,
    to focus on higher-level tasks that require creativity and problem-solving skills.
    While LLMs can automate many routine tasks, they do not have the same level of
    creativity, intuition, and empathy that humans possess.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，大型语言模型（LLMs）具备出色的能力，适合协助处理来自大量结构化信息池并需要高度关注细节的任务。通过自动化许多重复且耗时的任务，LLMs使其用户（例如产品经理）能够专注于需要创造力和解决问题技能的更高层次任务。虽然LLMs可以自动化许多常规任务，但它们并不具备人类所拥有的相同程度的创造力、直觉和同理心。
- en: For the success of LLMs in many business applications, safe and reliable integrations
    to industry-specific third-party systems are important. Users of LLMs need to
    be able to execute certain actions that they would normally not be able to perform
    without support from a dedicated software developer. No-code tools are already
    on the rise across many industries and job functions, but their capabilities need
    to mature to build complex software beyond a specific and narrow functionality
    (for example the functionalities that can be built with Levity).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 对于LLMs在许多商业应用中的成功，安全且可靠地集成到行业特定的第三方系统中非常重要。LLMs的用户需要能够执行某些他们通常在没有专门的软件开发人员支持的情况下无法执行的操作。无代码工具在许多行业和职位中已经在兴起，但它们的功能需要成熟，以构建超越特定和狭窄功能的复杂软件（例如可以通过Levity构建的功能）。
- en: In conclusion, LLMs are transforming software development in many ways, and
    what we see today may just be the beginning. From automating routine tasks to
    enabling new forms of creativity and innovation, LLMs are poised to play a major
    role in the future of software development. As the Generative AI boom continues
    to rumble on, we must look beyond the hype to see a seminal moment in technology
    development forming. Generative AI has changed how we interact with software,
    and soon it could change how software is developed — enabling anyone with a product
    vision to build it through the medium of conversation.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，LLMs在许多方面正在改变软件开发，而我们今天所看到的可能只是一个开始。从自动化常规任务到启用新的创造力和创新形式，LLMs有望在未来的软件开发中发挥重要作用。随着生成式AI的持续兴起，我们必须超越炒作，看到技术发展的一个重要时刻正在形成。生成式AI改变了我们与软件的互动方式，未来它可能会改变软件的开发方式——使任何拥有产品愿景的人都能够通过对话的方式实现它。
