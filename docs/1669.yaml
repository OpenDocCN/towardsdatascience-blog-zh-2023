- en: Why You Need to Write DRY Code With Decorators in Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/why-you-need-to-write-dry-code-with-decorators-in-python-3930ea23f569?source=collection_archive---------5-----------------------#2023-05-19](https://towardsdatascience.com/why-you-need-to-write-dry-code-with-decorators-in-python-3930ea23f569?source=collection_archive---------5-----------------------#2023-05-19)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: DATA
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Using decorators to see what’s happening to your data in a Pandas processing
    pipeline
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://byrondolon.medium.com/?source=post_page-----3930ea23f569--------------------------------)[![Byron
    Dolon](../Images/9ff32138c7b1913be24cc7ab971752b0.png)](https://byrondolon.medium.com/?source=post_page-----3930ea23f569--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3930ea23f569--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3930ea23f569--------------------------------)
    [Byron Dolon](https://byrondolon.medium.com/?source=post_page-----3930ea23f569--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6b5d063df5dd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-need-to-write-dry-code-with-decorators-in-python-3930ea23f569&user=Byron+Dolon&userId=6b5d063df5dd&source=post_page-6b5d063df5dd----3930ea23f569---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----3930ea23f569--------------------------------)
    ·9 min read·May 19, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F3930ea23f569&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-need-to-write-dry-code-with-decorators-in-python-3930ea23f569&user=Byron+Dolon&userId=6b5d063df5dd&source=-----3930ea23f569---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3930ea23f569&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-need-to-write-dry-code-with-decorators-in-python-3930ea23f569&source=-----3930ea23f569---------------------bookmark_footer-----------)![](../Images/c0ac300ed86456b49bd3ab5a61fdcd44.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Decorations are KEY — Photo by [Adi Goldstein](https://unsplash.com/@adigold1?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: '**DRY code is one of the keys to efficient programming.**'
  prefs: []
  type: TYPE_NORMAL
- en: DRY stands for “do not repeat yourself”, which is important whether you’re writing
    code for a personal project or for a large codebase at scale. This means that
    instead of copying logic from one file to another or even from one function to
    another, you should embrace the concept of DRY code to create modular solutions.
  prefs: []
  type: TYPE_NORMAL
- en: Using decorators in Python can help with this. In short, a decorator allows
    you to manipulate an existing function and add to its functionality. There are
    many different scenarios where decorators can come in handy, but in this piece,
    we’ll take a look at how using decorators can improve a Pandas data processing
    pipeline.
  prefs: []
  type: TYPE_NORMAL
- en: Decorators can help us understand what’s going on at each stage of our data
    processing pipeline, which is helpful when working with data at scale. You can
    use them to keep track of what’s going on with your data, which can be hard to
    manage as you apply different transformations to your initial DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: Feel free to follow along in a notebook of your own. You can download the dataset…
  prefs: []
  type: TYPE_NORMAL
