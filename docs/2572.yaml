- en: Practical Tips for Improving Exploratory Data Analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/practical-tips-for-improving-exploratory-data-analysis-1c43b3484577?source=collection_archive---------3-----------------------#2023-08-11](https://towardsdatascience.com/practical-tips-for-improving-exploratory-data-analysis-1c43b3484577?source=collection_archive---------3-----------------------#2023-08-11)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A short guide of making EDA easier (and prettier)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://radmilamandzhi.medium.com/?source=post_page-----1c43b3484577--------------------------------)[![Radmila
    M.](../Images/f3722a0ca0c96b5f6abb8f23a1162488.png)](https://radmilamandzhi.medium.com/?source=post_page-----1c43b3484577--------------------------------)[](https://towardsdatascience.com/?source=post_page-----1c43b3484577--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----1c43b3484577--------------------------------)
    [Radmila M.](https://radmilamandzhi.medium.com/?source=post_page-----1c43b3484577--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1b144e8ba52a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpractical-tips-for-improving-exploratory-data-analysis-1c43b3484577&user=Radmila+M.&userId=1b144e8ba52a&source=post_page-1b144e8ba52a----1c43b3484577---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----1c43b3484577--------------------------------)
    ·11 min read·Aug 11, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1c43b3484577&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpractical-tips-for-improving-exploratory-data-analysis-1c43b3484577&user=Radmila+M.&userId=1b144e8ba52a&source=-----1c43b3484577---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1c43b3484577&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpractical-tips-for-improving-exploratory-data-analysis-1c43b3484577&source=-----1c43b3484577---------------------bookmark_footer-----------)![](../Images/301efde45bcd4111da5a4bac594d1621.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Sam Dan Truong](https://unsplash.com/@sam_truong?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: '**Introduction**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Exploratory data analysis (EDA) is a mandatory step before using any machine
    learning models. The EDA process requires focus and patience from data analysts
    and data scientists: before getting meaningful insights from the analysed data,
    it is often necessary to spend a lot of time actively using one or more visualization
    libraries.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In this post, I will share with you some tips on how to ease the EDA procedure
    and make it faster, based on my personal experience. In particular, I will give
    you three important pieces of advice that I learnt while fighting against the
    EDA:'
  prefs: []
  type: TYPE_NORMAL
- en: Use non-trivial charts that are suitable most for your task;
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Apply the functionality of the visualization library at its full power;
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Look for a faster way of making the same stuff.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Note: to create infographics in this post, we will use the **Wind Power Generated
    Data** from Kaggle [[2](https://www.kaggle.com/datasets/bhavikjikadara/wind-power-generated-data?resource=download)].
    Let’s get started!'
  prefs: []
  type: TYPE_NORMAL
- en: 'Tip 1: Don’t afraid of using non-trivial charts'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I learnt how to apply this tip, when I worked on the research paper related
    to wind energy analysis and prediction [[1](https://www.sciencedirect.com/science/article/pii/S2772508122000382)].
    While doing the EDA for this project, I faced a necessity to create a summary
    matrix that would reflect all the relationships between the wind parameters in
    order to find which of them have the strongest influence on each other. The first
    idea came to my mind was to build a ‘good old’ **correlation matrix** that I used
    to see in many Data Science / Data Analysis projects.
  prefs: []
  type: TYPE_NORMAL
- en: 'As you know, **a correlation matrix** is used to quantify and summarize linear
    relationships between variables. In the following code snippet, the `corrcoef`
    function was used on the feature columns of **Wind Power Generated Data**. Here
    I also applied the `heatmap` function from Seaborn to plot the correlation matrix
    array as a heat map:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/171c52b7f16c0b6a7b50031b3a884b4c.png)'
  prefs: []
  type: TYPE_IMG
- en: Example of the built correlation matrix. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: Analysing the resulting graphical results, it can be concluded that wind speed
    and active power have a strong correlation, but I think many people will agree
    with me that this is not an easy way to interpret the results when using this
    kind of visualization, because here we have only numbers.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'A good alternative to the correlation matrix would be the **scatterplot matrix**,
    which allows you to visualize pairwise correlations between different features
    of a data set in one place. In this case, `sns.pairplot` should be used:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/8a473f6d19a81c2bb82d63ed4cd6f9cc.png)'
  prefs: []
  type: TYPE_IMG
- en: Example of the scatterplot matrix. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: By looking at the scatterplot matrix, one can quickly eyeball how the data is
    distributed and whether it contains outliers or not. However, the main drawback
    of this kind of charts is related to the presence of duplicates due to the pairwise
    approach to plotting data.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'In the end, I decided to combine the above graphs into one, where the lower
    left part will contain scatter plots of the selected parameters, and the upper
    right part will contain bubbles of different sizes and colours: larger circles
    mean that the studied parameters have a stronger linear correlation. The diagonal
    of the matrix will display the distribution of each feature: a narrow peak here
    would indicate that this particular parameter does not change too much, while
    other features change.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The code for building this summary matrix is given below. Here the map consists
    of three parts — `fig.map_lower`, `fig.map_diag`, `fig.map_upper`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/8661c8dff8cc697e4c813c66526e23f7.png)'
  prefs: []
  type: TYPE_IMG
- en: Example of the summary matrix. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: The summary matrix combines the advantages of the two previously studied diagrams
    — its lower (left) part imitates the scatterplot matrix, and its upper (right)
    fragment graphically reflects the numerical results of the correlation matrix.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Tip 2: Use the functionality of the visualization library to its fullest'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: From time to time I have to present the results of EDA to colleagues and clients,
    so visualization is a key assistant for me in this task. I always try to add various
    elements to the diagrams, such as arrows and notes, to make them even more attractive
    and readable.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s go back to the EDA implementation case for a wind project discussed above.
    When it comes to wind energy, one of the most important parameters is **a power
    curve**. The power curve of a wind turbine (or the entire wind farm) is a graph
    showing the amount of electricity generated at various wind speeds. It is important
    to note that turbines do not operate at low wind speeds. Their start-up is associated
    with a cut-in speed, which is usually in the range of 2.5–5 m/s. At speeds between
    12 and 15 m/s, the nominal power is reached. Finally, each turbine has an upper
    limit on the wind speed at which it can safely operate. Once this limit of the
    cut-out speed is reached, the wind turbine will not produce electricity unless
    its speed drops back into the operating range.
  prefs: []
  type: TYPE_NORMAL
- en: The studied dataset includes both the theoretical power curve (which is a typical
    curve from the manufacturer without any outliers) and the actual curve obtained
    if we plot wind power versus speed. The latter usually contains many points outside
    the ideal theoretical shape which might be caused by turbine failure, incorrect
    SCADA measurements, or unscheduled maintenance.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Now we will create an image that would display both types of the power curve
    — first, without any additional items, except legend:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/b209aaa6983664e060421cedcdfb1cf6.png)'
  prefs: []
  type: TYPE_IMG
- en: A ‘silent’ chart of the wind power curve. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, the graph needs an explanation, since it does not contain any
    additional details.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: But what if we add lines to highlight the three main areas of the graph with
    cut-in, nominal and cut-out speeds marked, as well as a note with arrow to show
    one of the outliers?
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s check how the graph will look like in this case:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/2728dfe9cb60fefe2cd8e0883336744e.png)'
  prefs: []
  type: TYPE_IMG
- en: A ‘talkative’ chart of the wind power curve. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: 'Tip 3: Always find a faster way of making the same stuff'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When analysing wind data, we often want to have comprehensive information about
    the potential of wind energy. Therefore, in addition to the dynamics of wind energy,
    it is necessary to have a graph showing how the wind speed depends on the wind
    direction.
  prefs: []
  type: TYPE_NORMAL
- en: 'To illustrate the changes in wind power, the following code can be used:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Below is the resulting plot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/78795512af4c6e737bf93061ae6dafc8.png)'
  prefs: []
  type: TYPE_IMG
- en: Dynamics of the wind power. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: As one might noticed, the profile of wind power dynamics has a quite complex,
    irregular shape.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**A windrose**, or a polar rose plot, is a special diagram for representing
    the distribution of meteorological data, typically wind speeds by direction [3].
    There is a simple module `windrose` for the `matplotlib` library, which allows
    to easily build this sort of visualizations, e.g.:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/95b1702803dd9953b27970616165dbdb.png)'
  prefs: []
  type: TYPE_IMG
- en: A windrose obtained based on the available data. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: Looking at the wind rose map, one can notice that there are two main wind directions
    — north-east and south-west.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'But how to merge these two images into a single one? The most obvious option
    is to use `add_subplot`. Though due to the specialities of `windrose` library,
    it is not a straightforward task:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'In this case, the result looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ef2a04ae18c233be22e2122751e2282a.png)'
  prefs: []
  type: TYPE_IMG
- en: A single image with wind power dynamics and wind rose. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: The major downside here is that the two subplots differ in size, and because
    of that we have a lot of white empty space around the windrose chart.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'To make things easier, I recommend taking a different approach, using the `Python
    Imaging Library`(PIL) [[4](https://pillow.readthedocs.io/en/stable/index.html)]
    with just 11 (!) lines of code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Here the output looks a bit prettier, because two images has the same size,
    since the code picks the smallest one and rescale others to match images:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/697dd68f13d6c37a28de2eb1f287697c.png)'
  prefs: []
  type: TYPE_IMG
- en: A single image with wind power dynamics and wind rose obtained by using PIL.
    Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: 'By the way, while working with `PIL` one can use a horizontal stacking as well
    — for instance, let’s compare and contract a ‘silent’ and a ‘talkative’ power
    curve charts with each other:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/dcb796c254bade88676cf057bbc45cda.png)'
  prefs: []
  type: TYPE_IMG
- en: Compare & contrast two charts with power curves. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this post I shared with you three tips on how to make the EDA process easier.
    I hope, you found these advice useful for yourself and would start to apply them
    to your data tasks, too.
  prefs: []
  type: TYPE_NORMAL
- en: 'These tips perfectly match the formula that I always try to apply while doing
    the EDA: **customize → itemize → optimize**.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Well, you may ask, why on earth does this matter? I can say that actually it
    matters, because:'
  prefs: []
  type: TYPE_NORMAL
- en: It is very important **to customize your charts to the particular needs that
    you face right now**. For instance, instead of creating tons of infographics,
    think how you can combine several ones into just one, as we did while creating
    a summary matrix, which combines the strengths of both scatterplot and correlation
    charts.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All of your charts should speak for themselves. Thus, you need to know **how
    to itemize important stuff on the chart to make it detailed and well readable**.
    Compare how big the difference is between a ‘silent’ and a ‘talkative’ power curves.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: And finally, **every data specialist should learn how to optimize the EDA process
    to make things faster** (and life easier). If you have to merge two images into
    one, do not necessary use `add_subplot` option all the time.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What else? I can definitely say that the EDA is a very creative and interesting
    step in working with data (not to mention that it is also super important).
  prefs: []
  type: TYPE_NORMAL
- en: Let your infographics shine like diamonds, and don’t forget to enjoy the process!
  prefs: []
  type: TYPE_NORMAL
- en: List of References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Paper “Data-driven applications for wind energy analysis and prediction: The
    case of “La Haute Borne” wind farm”. [https://doi.org/10.1016/j.dche.2022.100048](https://doi.org/10.1016/j.dche.2022.100048)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Wind Power Generated Data: [https://www.kaggle.com/datasets/bhavikjikadara/wind-power-generated-data?resource=download](https://www.kaggle.com/datasets/bhavikjikadara/wind-power-generated-data?resource=download)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Tutorial about a windrose library: [https://windrose.readthedocs.io/en/latest/index.html](https://windrose.readthedocs.io/en/latest/index.html)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'PIL library: [https://pillow.readthedocs.io/en/stable/index.html](https://pillow.readthedocs.io/en/stable/index.html)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Thanks for reading!
  prefs: []
  type: TYPE_NORMAL
