- en: Use ChatGPT to Query Your Neo4j Database
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用ChatGPT查询你的Neo4j数据库
- en: 原文：[https://towardsdatascience.com/use-chatgpt-to-query-your-neo4j-database-78680a05ec2?source=collection_archive---------4-----------------------#2023-01-31](https://towardsdatascience.com/use-chatgpt-to-query-your-neo4j-database-78680a05ec2?source=collection_archive---------4-----------------------#2023-01-31)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/use-chatgpt-to-query-your-neo4j-database-78680a05ec2?source=collection_archive---------4-----------------------#2023-01-31](https://towardsdatascience.com/use-chatgpt-to-query-your-neo4j-database-78680a05ec2?source=collection_archive---------4-----------------------#2023-01-31)
- en: An easy approach to let ChatGPT to learn your graph schema and help you construct
    Cypher queries
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一种简单的方法让ChatGPT学习你的图谱结构，并帮助你构建Cypher查询
- en: '[](https://bratanic-tomaz.medium.com/?source=post_page-----78680a05ec2--------------------------------)[![Tomaz
    Bratanic](../Images/d5821aa70918fcb3fc1ff0013497b3d5.png)](https://bratanic-tomaz.medium.com/?source=post_page-----78680a05ec2--------------------------------)[](https://towardsdatascience.com/?source=post_page-----78680a05ec2--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----78680a05ec2--------------------------------)
    [Tomaz Bratanic](https://bratanic-tomaz.medium.com/?source=post_page-----78680a05ec2--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://bratanic-tomaz.medium.com/?source=post_page-----78680a05ec2--------------------------------)[![Tomaz
    Bratanic](../Images/d5821aa70918fcb3fc1ff0013497b3d5.png)](https://bratanic-tomaz.medium.com/?source=post_page-----78680a05ec2--------------------------------)[](https://towardsdatascience.com/?source=post_page-----78680a05ec2--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----78680a05ec2--------------------------------)
    [Tomaz Bratanic](https://bratanic-tomaz.medium.com/?source=post_page-----78680a05ec2--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F57f13c0ea39a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fuse-chatgpt-to-query-your-neo4j-database-78680a05ec2&user=Tomaz+Bratanic&userId=57f13c0ea39a&source=post_page-57f13c0ea39a----78680a05ec2---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----78680a05ec2--------------------------------)
    ·8 min read·Jan 31, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F78680a05ec2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fuse-chatgpt-to-query-your-neo4j-database-78680a05ec2&user=Tomaz+Bratanic&userId=57f13c0ea39a&source=-----78680a05ec2---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F57f13c0ea39a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fuse-chatgpt-to-query-your-neo4j-database-78680a05ec2&user=Tomaz+Bratanic&userId=57f13c0ea39a&source=post_page-57f13c0ea39a----78680a05ec2---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----78680a05ec2--------------------------------)
    ·8分钟阅读·2023年1月31日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F78680a05ec2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fuse-chatgpt-to-query-your-neo4j-database-78680a05ec2&user=Tomaz+Bratanic&userId=57f13c0ea39a&source=-----78680a05ec2---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F78680a05ec2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fuse-chatgpt-to-query-your-neo4j-database-78680a05ec2&source=-----78680a05ec2---------------------bookmark_footer-----------)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F78680a05ec2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fuse-chatgpt-to-query-your-neo4j-database-78680a05ec2&source=-----78680a05ec2---------------------bookmark_footer-----------)'
- en: ChatGPT has taken the world by storm. It is virtually impossible to not be bombarded
    with various information about it. I guess it is only a matter of time before
    a plethora of AI-generated content hits the internet.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT已经席卷了整个世界。几乎不可能不被各种关于它的信息轰炸。我想，AI生成内容泛滥只是时间问题。
- en: I have been playing around with ChatGPT and trying to produce Cypher queries
    in my free time. I came across a [blog post using ChatGPT to help model a graph
    and create some basic queries in Neo4j](https://neo4j.com/developer-blog/create-neo4j-database-model-with-chatgpt/).
    Consequently, I decided to write up my experience using ChatGPT as a question2cypher
    or english2cypher engine.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我一直在使用ChatGPT，并尝试在空闲时间生成Cypher查询。我发现了一篇[利用ChatGPT帮助建模图谱并在Neo4j中创建一些基本查询的博客文章](https://neo4j.com/developer-blog/create-neo4j-database-model-with-chatgpt/)。因此，我决定记录一下使用ChatGPT作为question2cypher或english2cypher引擎的经验。
- en: Neo4j Aura setup
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Neo4j Aura 设置
- en: We will use [Neo4j Aura](https://neo4j.com/cloud/platform/aura-graph-database/),
    which offers a free cloud instance of the Neo4j database with pre-populated data,
    for this experiment. Once you have logged in, click on the **New Instance** and
    select the **Graph based Recommendations** dataset.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 [Neo4j Aura](https://neo4j.com/cloud/platform/aura-graph-database/)，它提供了一个带有预填充数据的
    Neo4j 数据库的免费云实例，进行这次实验。登录后，点击 **New Instance** 并选择 **Graph based Recommendations**
    数据集。
- en: '![](../Images/0fb9bf2f8cf4daee749ee178e646c67c.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0fb9bf2f8cf4daee749ee178e646c67c.png)'
- en: Select Graph Based Recommendations dataset. Image by the author.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 选择 Graph Based Recommendations 数据集。图片由作者提供。
- en: After the database instance has been started, click on the **Query** button
    to open Neo4j Browser.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据库实例启动后，点击 **Query** 按钮以打开 Neo4j Browser。
- en: ChatGPT Setup
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ChatGPT 设置
- en: Next, you will need to set up ChatGPT if you haven’t already done so. Open the
    [ChatGPT website](https://chat.openai.com/) and follow the registration instructions.
    After completion, you should have the ChatGPT user interface in front of you.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，如果你还没有设置 ChatGPT，你需要进行设置。打开 [ChatGPT 网站](https://chat.openai.com/) 并按照注册说明进行操作。完成后，你应该能看到
    ChatGPT 用户界面。
- en: '![](../Images/9fc679acec161f85fc0ded96db527814.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9fc679acec161f85fc0ded96db527814.png)'
- en: ChatGPT user interface. Image by the author.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT 用户界面。图片由作者提供。
- en: Define graph schema
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义图 schema
- en: ChatGPT has some experience with using Cypher and the property graph model.
    It does, however, doesn’t know the schema of your graph. Therefore, to avoid ChatGPT
    from guessing and hallucinating node labels and properties of your graph, it is
    essential to feed it with the information.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT 对使用 Cypher 和属性图模型有一定经验。然而，它并不了解你的图的 schema。因此，为了避免 ChatGPT 猜测并产生不准确的节点标签和属性，提供相关信息是至关重要的。
- en: I think that the best way to inform the ChatGPT about the node labels and relationship
    types is to use the following APOC procedure.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为告知 ChatGPT 节点标签和关系类型的最佳方式是使用以下 APOC 过程。
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '*Results*'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '*结果*'
- en: '![](../Images/ddd3138090361a8ec2bb7c4fcf24ec84.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ddd3138090361a8ec2bb7c4fcf24ec84.png)'
- en: Apoc schema results. Image by the author.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Apoc schema 结果。图片由作者提供。
- en: Suppose you run the above APOC schema procedure in Neo4j Browser. In that case,
    you can simply copy the text version of the response and paste it into ChatGPT
    with additional information that this is the schema definition for a Neo4j database.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你在 Neo4j Browser 中运行了上述 APOC schema 过程。在这种情况下，你可以简单地复制响应的文本版本并将其粘贴到 ChatGPT
    中，并附上额外的信息，即这是 Neo4j 数据库的 schema 定义。
- en: 'I have a Neo4j database with the following schema:'
  id: totrans-27
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我有一个具有以下 schema 的 Neo4j 数据库：
- en: —Results of APOC schema procedure—
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: —APOC schema 过程的结果—
- en: '![](../Images/0eacebf8d0df07d380d3adfbfcde0c7c.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0eacebf8d0df07d380d3adfbfcde0c7c.png)'
- en: Image by the author.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: I got the following response, but the reactions may vary significantly between
    different executions. Next, you need to give it information about node and relationship
    properties since that is not available in the APOC schema procedure. We can use
    the following Cypher query to extract all property keys by their node and relationship
    type
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我得到以下响应，但不同的执行可能会有显著不同的反应。接下来，你需要提供关于节点和关系属性的信息，因为这些在 APOC schema 过程中并不可用。我们可以使用以下
    Cypher 查询来提取所有属性键及其节点和关系类型。
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: You can feed this information into ChatGPT by informing it that you are providing
    information about node and relationship types.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过告知 ChatGPT 你正在提供有关节点和关系类型的信息来将这些信息输入 ChatGPT。
- en: '![](../Images/61d309b0a38de35839533a17b988abe5.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/61d309b0a38de35839533a17b988abe5.png)'
- en: Providing node and relationship property keys. Image by the author.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 提供节点和关系属性键。图片由作者提供。
- en: Generating Cypher queries with ChatGPT
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 ChatGPT 生成 Cypher 查询
- en: Now we can go ahead and test how well does ChatGPT generate Cypher queries based
    on various prompts. We need to inform ChatGPT that it will be producing Cypher
    queries. What I found is needed to provide in the initial prompt is that it should
    not make any assumptions about queries from previous prompts as otherwise it tries
    to combine information from previous unrelated prompts into newly generated Cypher
    queries. You can also omit query explanations if you so wish.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以继续测试 ChatGPT 基于各种提示生成 Cypher 查询的效果。我们需要告知 ChatGPT 它将生成 Cypher 查询。我发现需要在初始提示中说明的是，ChatGPT
    不应对来自先前提示的查询做任何假设，否则它会尝试将来自不相关的先前提示的信息合并到新生成的 Cypher 查询中。你也可以选择省略查询解释。
- en: Now you will generate Cypher queries based on prompts. Do not post any explanations
    unless explicitly specified. Also do not make any assumptions about the context.
    Only look at the context of the given prompt and do not assume anything else from
    previous prompts.
  id: totrans-38
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 现在你将根据提示生成Cypher查询。除非明确指定，否则不要发布任何解释。同时也不要对上下文做任何假设。只查看给定提示的上下文，不要从之前的提示中假设任何其他内容。
- en: '*I’ve asked it explicitly to not assume anything on previous prompts as, at
    first, it assumed my movie preferences as I was asking about Keanu Reeves and
    comedies a lot. The generated queries seem mostly the same if you ask it to forget
    or not. The only difference is when I asked for recommendations, it assumed I
    liked Keanu Reeves and comedies, so it went with that. Additionally, graph schema
    forgetting also happens in both cases, whether you ask it to forget previous prompts
    or not.*'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '*我已经明确要求它不要在之前的提示中做任何假设，因为最初它假设了我的电影偏好，因为我经常询问基努·里维斯和喜剧。生成的查询在你要求它忘记或不忘记时似乎大致相同。唯一的区别是当我要求推荐时，它假设我喜欢基努·里维斯和喜剧，因此采用了这一点。此外，图谱模式的遗忘在这两种情况下都会发生，无论你是否要求它忘记之前的提示。*'
- en: We can start with something simple.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从简单的开始。
- en: '![](../Images/d3b2c085318b53739526525f4704b463.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d3b2c085318b53739526525f4704b463.png)'
- en: Image by the author.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: The provided query works as intended. We can try something more complex now.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 提供的查询按预期工作。我们现在可以尝试一些更复杂的。
- en: '![](../Images/0e16155430620246afd8e37539eed3ce.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0e16155430620246afd8e37539eed3ce.png)'
- en: Image by the author.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: Again, the query works as it should. ChatGPT is quite good at basic graph-pattern
    matching and aggregations. It also picks the correct node properties most of the
    time. However, it has problems with so-called existential queries that could return
    either true if the pattern exists or false if the pattern is not matched.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，查询按预期工作。ChatGPT在基本的图形模式匹配和聚合方面相当出色。它大多数时候也能选择正确的节点属性。然而，它在所谓的存在性查询上存在问题，这类查询可能会返回true（如果模式存在）或false（如果模式不匹配）。
- en: '![](../Images/07415f4c4742b8c91d593c8125ef44cb.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/07415f4c4742b8c91d593c8125ef44cb.png)'
- en: Image by the author.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: It seems that it prefers the `MATCH` clause and has not mastered `OPTIONAL MATCH`
    or other approaches that allow null values. However with some help, it manages
    to get the job done.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 它似乎更喜欢`MATCH`子句，并且尚未掌握`OPTIONAL MATCH`或其他允许空值的方法。然而，在一些帮助下，它能够完成任务。
- en: '![](../Images/17371062b3a516b7350d065ba51aa46d.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/17371062b3a516b7350d065ba51aa46d.png)'
- en: Image by the author.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: The only problem is that it forgot about Keanu Reeves.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一的问题是它忘记了基努·里维斯。
- en: So it is only checking if an actor appeared in the Matrix.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 所以它只是检查一个演员是否出现在《黑客帝国》中。
- en: '![](../Images/a8cc0b156c1645c385903b4d11fc6cfa.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a8cc0b156c1645c385903b4d11fc6cfa.png)'
- en: Image by the author.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: Feels like rubber duck programming with someone with a lot of creativity but
    little to no attention since the query again forgot about `OPTIONAL MATCH`. Maybe
    ChatGPT just has incurable ADHD. It definitely needs some fine-tuning if you want
    it to generate queries that allow null or 0 values.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 感觉就像是和一个有很多创造力但注意力几乎为零的人进行橡皮鸭编程，因为查询再次忘记了`OPTIONAL MATCH`。也许ChatGPT只是有无法治愈的注意力缺陷综合症。如果你希望它生成允许空值或0值的查询，它绝对需要一些微调。
- en: Next, we can check how creative ChatGPT is. We can ask it to find the most popular
    comedies without specifying what popular means.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们可以检查ChatGPT的创造力。我们可以让它找到最受欢迎的喜剧，而不指定“受欢迎”的定义。
- en: '![](../Images/5e5524c2624de3d878d315af14b9dfc1.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5e5524c2624de3d878d315af14b9dfc1.png)'
- en: Image by the author.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: The generated query is outstanding. There are probably a lot of movie recommendation
    tutorials that ChatGPT can learn from. Additionally, it correctly assumed that
    **the imdbRating** property holds some sort of popularity rating value.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的查询非常出色。ChatGPT可能可以从许多电影推荐教程中学习。此外，它正确地假设了**imdbRating**属性包含某种流行度评分值。
- en: We can ask it to include ratings from users in the database.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以要求它在数据库中包括用户评分。
- en: '![](../Images/3ad08fcb4dfa2e33fa5db016d3799c1e.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3ad08fcb4dfa2e33fa5db016d3799c1e.png)'
- en: Image by the author.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: At first, I was impressed. Even though it did not combine IMDB ratings and user
    ratings, it provided a good start for user ratings. However, it forgot that genres
    are a separate node, not a node property.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 起初，我感到印象深刻。尽管它没有将IMDB评分和用户评分结合起来，但它为用户评分提供了一个不错的开始。然而，它忘记了流派是一个独立的节点，而不是节点属性。
- en: '![](../Images/4199ecf0521084e0945c685cb2d07d04.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4199ecf0521084e0945c685cb2d07d04.png)'
- en: Image by the author.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: While the corrected Cypher query now correctly identifies genres as separate
    nodes, for some reason, it decided that the popularity should now be defined as
    the number of IMDB votes. Therefore, even if you get a generated Cypher query
    that works well, there is no guarantee that you will get the same Cypher statement
    next time, even though it claims that consistency is important.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管修正后的 Cypher 查询现在正确地将类型识别为单独的节点，但由于某种原因，它决定将流行度定义为 IMDB 投票数。因此，即使你获得一个有效的 Cypher
    查询，也不能保证下次会得到相同的 Cypher 语句，尽管它声称一致性很重要。
- en: Let’s try another prompt where some Cypher creativity is appreciated.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试另一个对 Cypher 创意有要求的提示。
- en: '![](../Images/22c24e1b4ac210d542bdc766ef0028b1.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/22c24e1b4ac210d542bdc766ef0028b1.png)'
- en: Image by the author.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片。
- en: Even though it complains that it cannot provide good recommendations, it still
    offers a good starting point. Let’s see if we can try to improve the recommendations.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管它抱怨无法提供好的推荐，但它仍然提供了一个好的起点。让我们看看是否可以尝试改进推荐。
- en: '![](../Images/c383d321c37895f512f2b3b10e700dff.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c383d321c37895f512f2b3b10e700dff.png)'
- en: Image by the author.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片。
- en: It seems that ChatGPT has some ideas about using average movie ratings of co-actors
    and then providing actors that co-starred with Keanu Reeves in movies with the
    highest rating as recommendations.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 似乎 ChatGPT 有一些关于使用共同演员的平均电影评分的想法，然后提供与基努·里维斯在评分最高的电影中共同出演的演员作为推荐。
- en: The only problem is that the above query doesn’t work. Again, the ChatGPT hallucinated
    node property **imdb_rating** instead of **imdbRating**. Additionally, it collects
    movie ratings in the fourth row and then tries to average them. Unfortunately,
    Cypher does not allow averaging arrays with `avg()` operator. So we would either
    need to remove `collect` or use APOC.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一的问题是上述查询无效。再次出现了 ChatGPT 虚构的节点属性**imdb_rating**而不是**imdbRating**。此外，它在第四行中收集电影评分，然后尝试对其取平均值。不幸的是，Cypher
    不允许使用 `avg()` 操作符对数组进行平均。因此，我们需要去掉 `collect` 或使用 APOC。
- en: '![](../Images/77c8711ddc988f785953517382e6facd.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/77c8711ddc988f785953517382e6facd.png)'
- en: Image by the author.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片。
- en: Now, the ADHD in ChatGPT decided we should go with the same basic recommendation
    as it started. However, if you are using Neo4j v5, there is another problem. [Several
    Cypher syntaxes have been deprecated in v5](/how-cypher-changed-in-neo4j-v5-d0f10cbb60bf),
    and Chat GPT is unaware of that and needs to be trained with the latest Cypher
    syntax. In the above example, the `size()` operator can no longer be used count
    graph patterns in Neo4j v5.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，ChatGPT 的 ADHD 决定我们应该继续使用它最初的基本推荐。然而，如果你使用的是 Neo4j v5，还会遇到另一个问题。[在 v5 中，几种
    Cypher 语法已被弃用](/how-cypher-changed-in-neo4j-v5-d0f10cbb60bf)，而 ChatGPT 对此一无所知，需要用最新的
    Cypher 语法进行训练。在上述示例中，`size()` 操作符在 Neo4j v5 中不能再用于计算图模式。
- en: Lastly, I wanted to try if ChatGPT is a graph data scientist.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我想尝试一下 ChatGPT 是否能作为图数据科学家。
- en: '![](../Images/ae603eff693eb719afffa381282a9019.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ae603eff693eb719afffa381282a9019.png)'
- en: Image by the author.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片。
- en: By default, ChatGPT wants to use the deprecated Graph Algorithms library. Correcting
    it to use the Graph Data Science library improves the query a bit, but not entirely.
    The GDS library does not support anonymous graphs since the 2.0 version. Therefore,
    you need to project an in-memory graph separately and then run PageRank on top
    of that.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，ChatGPT 想要使用已弃用的图算法库。将其修正为使用图数据科学库可以稍微改善查询，但效果不完全。GDS 库自 2.0 版本以来不支持匿名图。因此，你需要单独投影一个内存图，然后在其上运行
    PageRank。
- en: '![](../Images/1a94c35c5eabd22eed6267355a88a377.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1a94c35c5eabd22eed6267355a88a377.png)'
- en: Image by the author.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片。
- en: It’s good some good ideas, but again the syntax will not work. However, it can
    be used as a good starting point.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一些好的想法，但语法仍然无法使用。不过，它可以作为一个好的起点。
- en: Conclusion
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: ChatGPT shows great potential to be used as an interface to query Neo4j database.
    It works well with basic graph matching and aggregations. Unfortunately, it sometimes
    forget exact property names or graph schema, but with a little help it remembers
    them.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT 展现出作为 Neo4j 数据库查询接口的巨大潜力。它在基本的图匹配和聚合方面表现良好。不幸的是，它有时会忘记确切的属性名称或图模式，但在一点帮助下，它能够记住。
- en: However, when you want to generate complex queries, it is as likely that the
    query will be valid or invalid. Debugging complex queries feels like rubber duck
    programming with an ADHD person with a short attention span. While it might solve
    bugs you explicitly mention, it might change other variables or introduce new
    bugs. Consistency is not the best part of ChatGPT. Additionally, it wasn’t trained
    on the newer Cypher syntax used in Neo4j v5 or the Graph Data Science library.
    Therefore, it would require additional fine-tuning to get it right.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，当你想生成复杂的查询时，该查询是否有效的可能性是相等的。调试复杂查询感觉像是与一个注意力短暂的 ADHD 人士进行橡皮鸭编程。虽然它可能解决你明确提到的
    bug，但也可能改变其他变量或引入新的 bug。ChatGPT 的一致性不是它的强项。此外，它没有接受 Neo4j v5 或图数据科学库中使用的更新 Cypher
    语法的训练。因此，需要额外的微调才能正确。
- en: Overall, I feel like ChatGPT, in its current state, can be used to generate
    simple queries and schema. For more complex tasks like providing recommendations,
    it can be used to hint at Cypher syntax or how to approach solving the problem,
    but it definitely shouldn’t be relied on to offer valid queries. I am excited
    to see how newer versions of ChatGPT trained on more recent data will perform.
    I might also try to fine-tune ChatGPT or GPT-3 and see how it works.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，我感觉现阶段的 ChatGPT 可以用来生成简单的查询和模式。对于更复杂的任务，比如提供推荐，它可以用来提示 Cypher 语法或如何解决问题，但绝对不应被依赖来提供有效的查询。我很期待看到基于更新数据训练的新版
    ChatGPT 的表现。我也可能尝试微调 ChatGPT 或 GPT-3，看看效果如何。
- en: '*p.s. Article by* [*Sixing Huang*](https://medium.com/u/ff9d63e09a67?source=post_page-----78680a05ec2--------------------------------)
    *about* [*using GPT-3 to generate Cypher query*](/gpt-3-for-doctor-ai-1396d1cd6fa5)*.*'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '*p.s. 文章由* [*黄思行*](https://medium.com/u/ff9d63e09a67?source=post_page-----78680a05ec2--------------------------------)
    *撰写，关于* [*使用 GPT-3 生成 Cypher 查询*](/gpt-3-for-doctor-ai-1396d1cd6fa5)*.*'
