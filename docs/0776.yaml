- en: Stacking Time Series Models to Improve Accuracy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/stacking-time-series-models-to-improve-accuracy-7977c6667d29?source=collection_archive---------3-----------------------#2023-02-28](https://towardsdatascience.com/stacking-time-series-models-to-improve-accuracy-7977c6667d29?source=collection_archive---------3-----------------------#2023-02-28)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Extracting signals from RNN, ARIMA, and Prophet models to forecast with Catboost
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://mikekeith52.medium.com/?source=post_page-----7977c6667d29--------------------------------)[![Michael
    Keith](../Images/4ebd39b25a1faae3586eb25ec83d3e91.png)](https://mikekeith52.medium.com/?source=post_page-----7977c6667d29--------------------------------)[](https://towardsdatascience.com/?source=post_page-----7977c6667d29--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----7977c6667d29--------------------------------)
    [Michael Keith](https://mikekeith52.medium.com/?source=post_page-----7977c6667d29--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F85177a9cbd35&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstacking-time-series-models-to-improve-accuracy-7977c6667d29&user=Michael+Keith&userId=85177a9cbd35&source=post_page-85177a9cbd35----7977c6667d29---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----7977c6667d29--------------------------------)
    ·7 min read·Feb 28, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F7977c6667d29&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstacking-time-series-models-to-improve-accuracy-7977c6667d29&user=Michael+Keith&userId=85177a9cbd35&source=-----7977c6667d29---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7977c6667d29&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstacking-time-series-models-to-improve-accuracy-7977c6667d29&source=-----7977c6667d29---------------------bookmark_footer-----------)![](../Images/d4a54a6899fe0dff94fe8914297c3a54.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Robert Sachowski](https://unsplash.com/@rsachowski?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Research around powerful time series models is robust. There are many options
    available, far beyond the classical techniques like ARIMA. Lately, recurrent neural
    networks and LSTMs have reached the top of many researchers’ interests. Going
    by the number of downloads listed on [PePy](https://pepy.tech/project/prophet),
    the Prophet model is probably the most widely used model by time series forecasters,
    due to its low barrier of entry. Which of these options is best for your series?
  prefs: []
  type: TYPE_NORMAL
- en: Maybe the answer is that you should try all of them and combine their various
    strengths. A common technique to do this is known as stacking. The popular machine
    learning library, scikit-learn, offers a [StackingRegressor](https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.StackingRegressor.html)
    that can be employed for time series tasks. I have [previously demonstrated how
    to use it](https://medium.com/towards-data-science/expand-your-time-series-arsenal-with-these-models-10c807d37558)
    for just such a case.
  prefs: []
  type: TYPE_NORMAL
- en: There is a limitation to the StackingRegressor, however; it only accepts other
    scikit-learn model classes and APIs. So, a model like ARIMA, which is unavailable
    in scikit-learn, or deep networks from tensorflow, becomes unavailable to place
    in the stack. There is a solution. In this post, I will show how to extend stacking
    methods for time series using the [scalecast](https://github.com/mikekeith52/scalecast)
    package and a Jupyter [notebook](https://scalecast-examples.readthedocs.io/en/latest/misc/stacking/custom_stacking.html).
    The dataset used…
  prefs: []
  type: TYPE_NORMAL
