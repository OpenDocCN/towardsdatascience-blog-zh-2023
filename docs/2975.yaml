- en: What If We Could Easily Explain Overly Complex Models?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们是否可以轻松解释过于复杂的模型？
- en: 原文：[https://towardsdatascience.com/what-if-we-could-easily-explain-overly-complex-models-54a8ff7ac917?source=collection_archive---------6-----------------------#2023-09-28](https://towardsdatascience.com/what-if-we-could-easily-explain-overly-complex-models-54a8ff7ac917?source=collection_archive---------6-----------------------#2023-09-28)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/what-if-we-could-easily-explain-overly-complex-models-54a8ff7ac917?source=collection_archive---------6-----------------------#2023-09-28](https://towardsdatascience.com/what-if-we-could-easily-explain-overly-complex-models-54a8ff7ac917?source=collection_archive---------6-----------------------#2023-09-28)
- en: Generating counterfactual explanations got a lot easier with CFNOW, but what
    are counterfactual explanations, and how can I use them?
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生成反事实解释变得容易多了，但什么是反事实解释，我该如何使用它们？
- en: '[](https://mazzine.medium.com/?source=post_page-----54a8ff7ac917--------------------------------)[![Raphael
    Mazzine, Ph.D.](../Images/0b05145a98a5a531d55f5a88fada0af5.png)](https://mazzine.medium.com/?source=post_page-----54a8ff7ac917--------------------------------)[](https://towardsdatascience.com/?source=post_page-----54a8ff7ac917--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----54a8ff7ac917--------------------------------)
    [Raphael Mazzine, Ph.D.](https://mazzine.medium.com/?source=post_page-----54a8ff7ac917--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://mazzine.medium.com/?source=post_page-----54a8ff7ac917--------------------------------)[![Raphael
    Mazzine, Ph.D.](../Images/0b05145a98a5a531d55f5a88fada0af5.png)](https://mazzine.medium.com/?source=post_page-----54a8ff7ac917--------------------------------)[](https://towardsdatascience.com/?source=post_page-----54a8ff7ac917--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----54a8ff7ac917--------------------------------)
    [Raphael Mazzine, Ph.D.](https://mazzine.medium.com/?source=post_page-----54a8ff7ac917--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F10c8c0e5ab30&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-if-we-could-easily-explain-overly-complex-models-54a8ff7ac917&user=Raphael+Mazzine%2C+Ph.D.&userId=10c8c0e5ab30&source=post_page-10c8c0e5ab30----54a8ff7ac917---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----54a8ff7ac917--------------------------------)
    ·12 min read·Sep 28, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F54a8ff7ac917&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-if-we-could-easily-explain-overly-complex-models-54a8ff7ac917&user=Raphael+Mazzine%2C+Ph.D.&userId=10c8c0e5ab30&source=-----54a8ff7ac917---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F10c8c0e5ab30&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-if-we-could-easily-explain-overly-complex-models-54a8ff7ac917&user=Raphael+Mazzine%2C+Ph.D.&userId=10c8c0e5ab30&source=post_page-10c8c0e5ab30----54a8ff7ac917---------------------post_header-----------)
    发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----54a8ff7ac917--------------------------------)
    · 12分钟阅读 · 2023年9月28日 [](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F54a8ff7ac917&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-if-we-could-easily-explain-overly-complex-models-54a8ff7ac917&user=Raphael+Mazzine%2C+Ph.D.&userId=10c8c0e5ab30&source=-----54a8ff7ac917---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F54a8ff7ac917&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-if-we-could-easily-explain-overly-complex-models-54a8ff7ac917&source=-----54a8ff7ac917---------------------bookmark_footer-----------)![](../Images/54b393e95beac8c94c9a0394e88e75dd.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F54a8ff7ac917&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-if-we-could-easily-explain-overly-complex-models-54a8ff7ac917&source=-----54a8ff7ac917---------------------bookmark_footer-----------)![](../Images/54b393e95beac8c94c9a0394e88e75dd.png)'
- en: Image generated with Illusion Diffusion model with CFNOW text as illusion (try
    to squint your eyes and look from a certain distance) | Image by the author using
    [Stable Diffusion model (license)](https://huggingface.co/spaces/CompVis/stable-diffusion-license)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图像由 Illusion Diffusion 模型生成，CFNOW 文本作为幻觉（试着眯眼并从一定距离观察） | 作者使用 [Stable Diffusion
    模型（许可）](https://huggingface.co/spaces/CompVis/stable-diffusion-license) 生成的图像
- en: 'This article is based on the following article: [https://www.sciencedirect.com/science/article/abs/pii/S0377221723006598](https://www.sciencedirect.com/science/article/abs/pii/S0377221723006598)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本文基于以下文章：[https://www.sciencedirect.com/science/article/abs/pii/S0377221723006598](https://www.sciencedirect.com/science/article/abs/pii/S0377221723006598)
- en: 'And here is the address for the CFNOW repository: [https://github.com/rmazzine/CFNOW](https://github.com/rmazzine/CFNOW)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是 CFNOW 仓库的地址：[https://github.com/rmazzine/CFNOW](https://github.com/rmazzine/CFNOW)
- en: If you are reading this, you may know how pivotal Artificial Intelligence (AI)
    is becoming in our world today. However, it’s important to note that the seemingly
    effective, novel machine learning approaches, combined with their widespread popularity,
    can lead to unforeseen/undesirable consequences.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在阅读这篇文章，你可能已经知道人工智能（AI）在我们今天的世界中变得多么关键。然而，需要注意的是，虽然看似有效的新颖机器学习方法及其广泛的普及可能会导致不可预见的/不良的后果。
- en: This brings us to why eXplainable Artificial Intelligence (XAI) is a crucial
    component in ensuring AI’s ethical and responsible development. This area shows
    that explaining models that consist of millions or even billions of parameters
    is not a trivial question. The answer to this is multifaceted, as there are numerous
    methods revealing different aspects of the model, with LIME [1] and SHAP [2] being
    popular examples.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这就引出了为什么可解释人工智能（XAI）在确保人工智能的伦理和负责任发展中是至关重要的。这一领域表明，解释包含数百万甚至数十亿参数的模型并非易事。对此的回答是多方面的，因为有许多方法揭示模型的不同方面，LIME
    [1] 和 SHAP [2] 是流行的例子。
- en: However, the complexity of the explanations generated by these methods can result
    in intricate charts or analyses, that potentially can lead to misinterpretations
    by those other than well-informed experts. One possible way to circumvent this
    complexity is a simple and natural method to explain things called Counterfactual
    Explanations [3].
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这些方法生成的解释复杂度可能导致复杂的图表或分析，这可能会导致那些未充分了解的专家产生误解。绕过这种复杂性的一个可能方法是一个简单自然的解释方法，称为反事实解释
    [3]。
- en: Counterfactual Explanations leverage a natural human behavior to explain things
    — creating “alternate worlds” where altering a few parameters can change the outcome.
    It’s a common practice, you probably already did something like that— “*if only
    I woke up a bit earlier, I wouldn’t miss the bus*”, this type of explanation highlights
    the main reasons for an outcome in a straightforward manner.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 反事实解释利用了自然的人类行为来解释事物——创建“替代世界”，在这些世界中，通过改变一些参数可以改变结果。这是一种常见的做法，你可能已经做过类似的事情——“*如果我早点起床，我就不会错过公交车*”，这种解释以直接的方式突出结果的主要原因。
- en: Delving deeper, **counterfactuals extend beyond just mere explanations**; they
    can serve as guidance for changes, assist in debugging anomalous behavior, and
    verify if some features can potentially modify predictions (while not being so
    impactful on scoring). This multifunctional nature emphasizes the importance of
    explaining your predictions. It’s not just a matter of responsible AI; it’s also
    a path to improving models and using them beyond the scope of predictions. A remarkable
    feature of counterfactual explanations is their decision-driven nature, making
    them directly correspond to a change in prediction [6], unlike LIME and SHAP which
    are more suited to explaining scores.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 更深入地探讨，**反事实不仅仅是简单的解释**；它们可以作为变更的指导，帮助调试异常行为，并验证某些特征是否可能修改预测（虽然对评分的影响不大）。这种多功能性强调了解释你的预测的重要性。这不仅仅是负责任的人工智能问题；它也是改进模型并在预测范围之外使用它们的途径。反事实解释的一个显著特征是它们以决策为驱动，使其与预测变化直接相关
    [6]，这与LIME和SHAP更适合于解释评分的特性不同。
- en: 'Given the evident benefits, one might wonder why counterfactuals aren’t more
    popular. It’s a valid question! The primary barriers to the widespread adoption
    of counterfactual explanations are threefold [4, 5]: (1) the absence of user-friendly
    and compatible counterfactual generation algorithms, (2) algorithm inefficiency
    in generating counterfactuals, (3) and the lack of comprehensive visual representation.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于明显的好处，人们可能会想知道为什么反事实解释没有更受欢迎。这是一个合理的问题！反事实解释广泛采用的主要障碍有三方面 [4, 5]： (1) 缺乏用户友好且兼容的反事实生成算法，(2)
    算法在生成反事实方面的低效，(3) 以及缺乏全面的可视化表现。
- en: But I have some good news for you! A new package, CFNOW (CounterFactuals NOW
    or CounterFactual Nearest Optimal Wololo), is stepping up to address these challenges.
    CFNOW is a versatile Python package capable of generating multiple counterfactuals
    for various data types such as tabular, image, and textual (embedding) inputs.
    It adopts a model-agnostic approach, requiring only minimal data — (1) the factual
    point (point to be explained) and (2) the prediction function.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 但我有一些好消息要告诉你！一个新的包，CFNOW（CounterFactuals NOW 或 CounterFactual Nearest Optimal
    Wololo），正致力于解决这些挑战。CFNOW是一个多功能的Python包，能够为各种数据类型（如表格、图像和文本（嵌入）输入）生成多个反事实。它采用模型无关的方法，只需要最少的数据——（1）实际点（需要解释的点）和（2）预测函数。
- en: Moreover, CFNOW is structured to allow the development and integration of new
    strategies for finding and fine-tuning counterfactuals based on custom logic.
    It also features CounterPlots, a novel strategy for visually representing counterfactual
    explanations.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，CFNOW的结构允许开发和集成基于自定义逻辑的新策略来查找和微调反事实。它还具有CounterPlots，这是一种用于视觉化表示反事实解释的新策略。
- en: Central to CFNOW is a framework that converts data to a single structure manageable
    by the CF generator. Following this, a two-step process locates and optimizes
    the found counterfactual. To prevent local minimums, the package implements Tabu
    Search, a matheuristics method, allowing it to explore for new regions where the
    objective function might be better optimized.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: CFNOW的核心是一个框架，它将数据转换为CF生成器可以处理的单一结构。接着，通过一个两步过程找到并优化反事实。为了防止陷入局部最小值，包实现了Tabu
    Search，这是一种数学启发式方法，使其能够探索新的区域，以便在这些区域中可能更好地优化目标函数。
- en: The subsequent sections of this text will focus on demonstrating how CFNOW can
    be proficiently utilized to generate explanations for tabular, image, and textual
    (embedding) classifiers.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 本文的后续部分将集中展示如何高效利用CFNOW生成表格、图像和文本（嵌入）分类器的解释。
- en: Tabular Classifiers
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表格分类器
- en: Here, we show the usual stuff, you have tabular data with multiple types of
    data. In the example below, I will use a dataset that has numerical continuous,
    categorical binary, and categorical one-hot encoded data to showcase CFNOW in
    its full power.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们展示了通常的内容，你有一个包含多种数据类型的表格数据。在下面的示例中，我将使用一个数据集，该数据集具有数值连续型、分类二元型和分类独热编码数据，以展示CFNOW的全部功能。
- en: 'First things first, you need to install the CFNOW package, the requirement
    is a Python version superior to 3.8:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要安装CFNOW包，要求Python版本高于3.8：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '(here is the full code for this example: [https://colab.research.google.com/drive/1GUsVfcM3I6SpYCmsBAsKMsjVdm-a6iY6?usp=sharing](https://colab.research.google.com/drive/1GUsVfcM3I6SpYCmsBAsKMsjVdm-a6iY6?usp=sharing))'
  id: totrans-25
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: （这是该示例的完整代码： [https://colab.research.google.com/drive/1GUsVfcM3I6SpYCmsBAsKMsjVdm-a6iY6?usp=sharing](https://colab.research.google.com/drive/1GUsVfcM3I6SpYCmsBAsKMsjVdm-a6iY6?usp=sharing)）
- en: 'In this first part, we will make a classifier with Adult Dataset. Then, there
    is not much news here:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一部分中，我们将使用成人数据集创建一个分类器。然后，这里没有太多新鲜事：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: We import basic packages to make the classification model and, we also deactivate
    the warnings related to making predictions without the columns' names.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们导入基本包来构建分类模型，同时我们还会禁用与在没有列名的情况下进行预测相关的警告。
- en: Then, we proceed to write the classifier where class 1 represents an income
    lower or equal to 50k (<=50K) and class 0 represents high income.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们继续编写分类器，其中类1表示收入低于或等于50k（<=50K），类0表示高收入。
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: With the code above, we create a dataset, pre-process it, create a classification
    model, and make a prediction and evaluation over the test set.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 使用上面的代码，我们创建了一个数据集，对其进行预处理，创建了一个分类模型，并对测试集进行了预测和评估。
- en: 'Now, let’s take one point (the first from the test set) and verify its prediction:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们选择一个点（测试集中的第一个）并验证其预测：
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now it is time to use CFNOW to calculate how we can change this prediction
    by minimally modifying the features:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候使用CFNOW来计算我们如何通过最小修改特征来改变这个预测：
- en: '[PRE4]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The code above we:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的代码中，我们：
- en: '`factual`Add the factual instance as a pd.Series'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`factual`将实际实例添加为pd.Series'
- en: '`feat_types`Specify the feature types (“num” for numerical continuous and “cat”
    for categorical)'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`feat_types`指定特征类型（“num”表示数值连续型，“cat”表示分类变量）'
- en: '`has_ohe`Indicate that we have OHE features (it automatically detects OHE features
    by aggregating those that have the same prefix followed by an underscore, e.g.,
    country_brazil, country_usa, country_ireland).'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`has_ohe`指示我们是否有OHE特征（它通过汇总那些具有相同前缀并以下划线开头的特征来自动检测OHE特征，例如，country_brazil，country_usa，country_ireland）。'
- en: '`model_predict_proba`Includes a prediction function'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_predict_proba` 包含预测函数'
- en: '`limit_seconds` Defines a total time threshold for running, this is important
    because the fine-tuning step can keep going indefinitely (default is 120 seconds)'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`limit_seconds` 定义了运行的总时间阈值，这一点很重要，因为微调步骤可能会无限期继续（默认是120秒）。'
- en: Then, after some time, we can first evaluate the class of the best counterfactual
    (first index of `cf_res.cfs`)
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，经过一段时间，我们可以首先评估最佳反事实的类别（`cf_res.cfs`的第一个索引）。
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'And here comes some differences with CFNOW, since it also integrates CounterPlots,
    we can plot their charts and have more insightful information like the below:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这里出现了一些与CFNOW的不同之处，由于它还集成了CounterPlots，我们可以绘制它们的图表，并获得更多有洞察力的信息，如下所示：
- en: '![](../Images/4b72425b5446259d2270b6591d6e6df6.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4b72425b5446259d2270b6591d6e6df6.png)'
- en: CounterShapley Chart for our CF | Image by the author
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: CounterShapley图表 | 图片由作者提供
- en: The CounterShapley plot below shows the relative importance of each feature
    to generate the counterfactual prediction. Here, we have some interesting insights
    showing that marial_status (if combined) represents more than 50% of the contribution
    to the CF class.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的CounterShapley图显示了每个特征在生成反事实预测中的相对重要性。在这里，我们得到了一些有趣的见解，显示marial_status（如果组合在一起）占CF类别贡献的50%以上。
- en: '![](../Images/e0f2e1dad7699245bdb965c889669f7e.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e0f2e1dad7699245bdb965c889669f7e.png)'
- en: Greedy Chart for our CF | Image by the author
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的CF的贪婪图表 | 图片由作者提供
- en: The Greedy chart shows something very similar to the CounterShapley, the main
    difference here is the sequence of changes. While the CounterShapley does not
    consider any specific sequence (calculating contributions using Shapley’s values),
    the Greedy chart uses the greediest strategy to modify the factual instance, each
    step changing the feature that most contributes to the CF class. This might be
    useful for situations where some guidance is given in a greedy way (each step
    choosing the best approach to achieve the objective).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 贪婪图表显示的内容与CounterShapley非常相似，主要区别在于变化的顺序。虽然CounterShapley没有考虑任何特定的顺序（使用Shapley值计算贡献），贪婪图表使用最贪婪的策略来修改实际实例，每一步都改变对CF类别贡献最大的特征。这在某些情况下可能很有用，即在贪婪的方式下给出一些指导（每一步选择实现目标的最佳方法）。
- en: '![](../Images/db0fa976f82a4cac6be00a0dcb10d107.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/db0fa976f82a4cac6be00a0dcb10d107.png)'
- en: Constellation Chart for our CF | Image by the author
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的CF的星座图 | 图片由作者提供
- en: Finally, we have the most complex analysis, the Constellation chart. Despite
    its daunting look, it is actually pretty straightforward to interpret it. Each
    large red dot represents one single feature change (respective to the label),
    and the smaller dots represent the combination of two or more features. Finally,
    the big blue dot represents the CF score. Here, we can see the only way to obtain
    a CF with these features is by modifying all of them to their respective values
    (i.e., there is no subset that generates a CF). We can also deep dive and investigate
    the relationship between features and potentially find interesting patterns.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们有了最复杂的分析，即星座图。尽管它看起来令人望而却步，但其实很容易解释。每个大的红点代表一个特征的单独变化（相对于标签），而小的点代表两个或多个特征的组合。最后，大的蓝点代表CF评分。在这里，我们可以看到，获得这些特征的CF的唯一方法是将它们全部修改为各自的值（即，没有子集能生成CF）。我们还可以深入探讨并研究特征之间的关系，可能会发现有趣的模式。
- en: In this particular case, it was interesting to observe that a prediction of
    high income would change if the person were a Female, Divorced, and with an own
    child. This counterfactual can lead to further discussions of the economic impacts
    on different social groups.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种特定情况下，有趣的是观察到，如果这个人是女性、离婚且有一个孩子，预测的高收入会发生变化。这一反事实可以引发对不同社会群体经济影响的进一步讨论。
- en: Image Classifiers
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图像分类器
- en: As already mentioned, CFNOW can work with diverse types of data, so it can also
    generate counterfactuals for Image data. However, what does it mean to have a
    counterfactual for an image dataset?
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，CFNOW可以处理多种数据类型，因此它也可以为图像数据生成反事实。然而，对于图像数据集来说，拥有反事实意味着什么呢？
- en: The response can vary because there are several ways in which you can generate
    counterfactuals. It can be replacing single pixels with random noise (a method
    used by adversarial attacks) or something more complex, involving advanced segmentation
    methods.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 响应可能会有所不同，因为生成反事实的方法有多种。它可以是用随机噪声替换单个像素（对抗攻击使用的方法），也可以是更复杂的方法，涉及先进的分割技术。
- en: CFNOW uses a segmentation method called quickshift, which is a reliable and
    fast method to detect “semantic” segments. However, it is possible to integrate
    (and I invite you to do so) other segmentation techniques.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: CFNOW 使用了一种名为 quickshift 的分割方法，这是一种可靠且快速的“语义”分段检测方法。然而，可以集成（我建议你这样做）其他分割技术。
- en: 'Segment detection alone is not sufficient to generate counterfactual explanations.
    We also need to modify the segments, replacing them with modified versions. To
    this modification, CFNOW has four options defined in the parameter `replace_mode`,
    where we can have: (default) `blur` — that adds a blur filter to the replaced
    segments, `mean` which replaces the segments by the average color, `random` that
    replaces it with random noise, and `inpaint`, which reconstructs the image based
    on neighborhood pixels.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 仅靠分段检测不足以生成反事实解释。我们还需要修改这些分段，用修改过的版本替换它们。对于这种修改，CFNOW 在 `replace_mode` 参数中定义了四种选项，我们可以选择：（默认）`blur`——为替换的分段添加模糊滤镜，`mean`——用平均颜色替换分段，`random`——用随机噪声替换，`inpaint`——基于邻域像素重建图像。
- en: 'If you want the whole code you can find here: [https://colab.research.google.com/drive/1M6bEP4x7ilSdh01Gs8xzgMMX7Uuum5jZ?usp=sharing](https://colab.research.google.com/drive/1M6bEP4x7ilSdh01Gs8xzgMMX7Uuum5jZ?usp=sharing)'
  id: totrans-60
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果你想要完整的代码，可以在这里找到：[https://colab.research.google.com/drive/1M6bEP4x7ilSdh01Gs8xzgMMX7Uuum5jZ?usp=sharing](https://colab.research.google.com/drive/1M6bEP4x7ilSdh01Gs8xzgMMX7Uuum5jZ?usp=sharing)
- en: 'Following, I will show the code implementation of CFNOW for this type of data:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我将展示 CFNOW 对这种数据类型的代码实现：
- en: First, again, let’s install the CFNOW package if you have not done it yet.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，再次，如果你还没有安装 CFNOW 包，请安装它。
- en: '[PRE6]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now, let’s add some additional packages to load a pre-trained model:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们添加一些额外的包来加载预训练模型：
- en: '[PRE7]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Then let’s load the data, load the pre-trained model and create a prediction
    function that is compatible to the data format CFNOW must receive:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们加载数据，加载预训练模型，并创建一个与 CFNOW 必须接收的数据格式兼容的预测函数：
- en: '[PRE8]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Most of the code work is related to building the model, getting the data, and
    adjusting it, because to generate counterfactuals with CFNOW we just need to:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 大部分代码工作与构建模型、获取数据和调整数据有关，因为要用 CFNOW 生成反事实，我们只需要：
- en: '[PRE9]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'In the example above, we used all default optional parameters, therefore, we
    used quickshift to segment the image and replace the segments with blurred images.
    As result, we have this factual prediction below:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的示例中，我们使用了所有默认的可选参数，因此，我们使用 quickshift 对图像进行分割，并用模糊的图像替换这些分割区域。结果，我们得到了以下的实际预测：
- en: '![](../Images/ac67aab285c70f8c692c90648dcf713d.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ac67aab285c70f8c692c90648dcf713d.png)'
- en: 'Factual image classified as a “daisy” | Image title: Sunflower (Helianthus
    L). Słonecznik by [Pudelek](https://commons.wikimedia.org/wiki/User:Pudelek) (Edit
    by [Yzmo](https://commons.wikimedia.org/wiki/User:Yzmo) and [Vassil](https://commons.wikimedia.org/wiki/User:Vassil))
    from [Wikimedia](https://commons.wikimedia.org/wiki/File:Sunflower_from_Silesia_Edit_2.jpg)
    under [**GNU Free Documentation License**](https://en.wikipedia.org/wiki/en:GNU_Free_Documentation_License),
    Version 1.2'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 实际图像被分类为“雏菊” | 图像标题：向日葵（Helianthus L）。Słonecznik，来自 [Pudelek](https://commons.wikimedia.org/wiki/User:Pudelek)（由
    [Yzmo](https://commons.wikimedia.org/wiki/User:Yzmo) 和 [Vassil](https://commons.wikimedia.org/wiki/User:Vassil)
    编辑）来自 [Wikimedia](https://commons.wikimedia.org/wiki/File:Sunflower_from_Silesia_Edit_2.jpg)，根据
    [**GNU 自由文档许可证**](https://en.wikipedia.org/wiki/en:GNU_Free_Documentation_License)
    第 1.2 版
- en: 'To the following:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 到以下内容：
- en: '![](../Images/f19664b505a98eebc99f23c465ad9b9f.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f19664b505a98eebc99f23c465ad9b9f.png)'
- en: 'CF image classified as a “bee” | Image title: Sunflower (Helianthus L). Słonecznik
    by [Pudelek](https://commons.wikimedia.org/wiki/User:Pudelek) (Edit by [Yzmo](https://commons.wikimedia.org/wiki/User:Yzmo)
    and [Vassil](https://commons.wikimedia.org/wiki/User:Vassil)) from [Wikimedia](https://commons.wikimedia.org/wiki/File:Sunflower_from_Silesia_Edit_2.jpg)
    under [**GNU Free Documentation License**](https://en.wikipedia.org/wiki/en:GNU_Free_Documentation_License),
    Version 1.2'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: CF 图像被分类为“蜜蜂” | 图像标题：向日葵（Helianthus L）。Słonecznik，来自 [Pudelek](https://commons.wikimedia.org/wiki/User:Pudelek)（由
    [Yzmo](https://commons.wikimedia.org/wiki/User:Yzmo) 和 [Vassil](https://commons.wikimedia.org/wiki/User:Vassil)
    编辑）来自 [Wikimedia](https://commons.wikimedia.org/wiki/File:Sunflower_from_Silesia_Edit_2.jpg)，根据
    [**GNU 自由文档许可证**](https://en.wikipedia.org/wiki/en:GNU_Free_Documentation_License)
    第 1.2 版
- en: 'So, what are the outcomes from this analysis? Actually, image counterfactuals
    can be extremely useful tools to detect how the model is making the classifications.
    This can be applied in cases where: (1) we want to verify why the model made correct
    classifications — ensuring it is using correct image features: in this case, although
    it misclassified the sunflower as a daisy, we can see that blurring the flower
    (and not a background feature) makes it to change the prediction. It also can
    (2) help to diagnose misclassified images, which can lead to better insights for
    image processing and/or data acquisition.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，这项分析的结果是什么呢？实际上，图像反事实可以成为极其有用的工具，以检测模型如何进行分类。这可以应用于以下情况：（1）我们想验证模型为何做出正确分类——确保其使用了正确的图像特征：在这种情况下，尽管模型将向日葵误分类为雏菊，但我们可以看到，模糊化花朵（而不是背景特征）会使其更改预测。它还可以（2）帮助诊断误分类的图像，这可能为图像处理和/或数据采集提供更好的洞察。
- en: Textual Classifiers
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文本分类器
- en: Finally, we have textual classifiers based on embeddings. Although simple textual
    classifiers (that use a data structure more like tabular data) can use the tabular
    counterfactual generator, textual classifiers based on embeddings, this is not
    as clear.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们有基于嵌入的文本分类器。尽管简单的文本分类器（使用更像表格数据的数据结构）可以使用表格反事实生成器，但基于嵌入的文本分类器，这一点不那么明确。
- en: The justification is that embeddings have a variable number of inputs and words
    that can considerably affect the prediction score and classification.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 理由是嵌入具有可变数量的输入和单词，这些都可以显著影响预测分数和分类。
- en: 'CFNOW solves that with two strategies: (1) by removing evidence or (2) by adding
    antonyms. The first strategy is straightforward, to measure the impact of each
    word on the text, we simply remove them and see which ones we must remove to flip
    the classification. While adding antonyms, we can possibly keep a semantic structure
    (because removing a word can severely harm it).'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: CFNOW通过两种策略解决这个问题：（1）通过移除证据或（2）通过添加反义词。第一种策略很简单，为了测量每个单词对文本的影响，我们只需移除它们并查看哪些需要移除以翻转分类。而添加反义词，我们可以可能保持语义结构（因为移除一个单词可能会严重损害语义结构）。
- en: Then, the code below shows how to use CFNOW in this context.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，下面的代码展示了如何在这个上下文中使用CFNOW。
- en: 'If you want the entire code, you can check it here: [https://colab.research.google.com/drive/1ZMbqJmJoBukqRJGqhUaPjFFRpWlujpsi?usp=sharing](https://colab.research.google.com/drive/1ZMbqJmJoBukqRJGqhUaPjFFRpWlujpsi?usp=sharing)'
  id: totrans-82
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果你想要完整的代码，可以在这里查看：[https://colab.research.google.com/drive/1ZMbqJmJoBukqRJGqhUaPjFFRpWlujpsi?usp=sharing](https://colab.research.google.com/drive/1ZMbqJmJoBukqRJGqhUaPjFFRpWlujpsi?usp=sharing)
- en: 'First, install the CFNOW package:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，安装CFNOW包：
- en: '[PRE10]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Then, install the necessary packages for the textual classification:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，安装文本分类所需的包：
- en: '[PRE11]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Then, as in the previous sections, first, we will build the classifier:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，如前面部分所述，首先我们将构建分类器：
- en: '[PRE12]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'For this code, we will see our factual text has a NEGATIVE sentiment with a
    high confidence (≥0.9), then let’s try to generate the counterfactual for it:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这段代码，我们将看到我们的事实文本具有高置信度（≥0.9）的NEGATIVE情感，然后让我们尝试为其生成反事实：
- en: '[PRE13]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: With the code above, just changing a single word (but) the classification changed
    from NEGATIVE to POSITIVE with high confidence. This showcases how counterfactuals
    can be useful, since this minimal modifications can have implications on understanding
    how the model predicts sentences and/or help debugging undesirable behaviors.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 使用上述代码，只需更改一个单词（but），分类就从NEGATIVE变为POSITIVE，并且置信度很高。这展示了反事实如何有用，因为这些最小的修改可以对理解模型如何预测句子和/或帮助调试不良行为产生影响。
- en: Conclusion
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: This was a (relatively) brief introduction to CFNOW and Counterfactual explanations.
    There is an extensive (and increasing) literature regarding counterfactuals that
    you definitely should take a look if you want to deep dive, this seminal article
    [3] written by (my Ph.D. advisor, Prof. David Martens) is a great way to have
    a better introduction to Counterfactual Explanations. Additionally, there are
    good reviews like this one written by Verma et al [7]. In summary, counterfactual
    explanations are an easy and convinient way to explain complex machine learning
    algorithms decisions, and can do much more than explanations if correctly applied.
    CFNOW can provide an easy, fast, and flexible way to generate counterfactual explanations,
    allowing practitioners not just to explain, but also to leverage as much as possible
    the potential from their data and model.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一篇对 CFNOW 和反事实解释的（相对）简要介绍。关于反事实的文献非常广泛（且不断增加），如果你想深入了解，必读的开创性文章是由（我的博士生导师，大卫·马滕斯教授）撰写的[3]，这是对反事实解释有更好介绍的绝佳方式。此外，还有由
    Verma 等人撰写的很好的综述[7]。总之，反事实解释是一种简单且方便的方式来解释复杂的机器学习算法决策，如果正确应用，它们还能做到远超过解释的效果。CFNOW
    可以提供一种简单、快速和灵活的方式来生成反事实解释，使从业者不仅能解释，还能最大限度地利用数据和模型的潜力。
- en: 'References:'
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献：
- en: '[1] — [https://github.com/marcotcr/lime](https://github.com/marcotcr/lime)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] — [https://github.com/marcotcr/lime](https://github.com/marcotcr/lime)'
- en: '[2] — [https://github.com/shap/shap](https://github.com/shap/shap)'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] — [https://github.com/shap/shap](https://github.com/shap/shap)'
- en: '[3] — [https://www.jstor.org/stable/26554869](https://www.jstor.org/stable/26554869)'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '[3] — [https://www.jstor.org/stable/26554869](https://www.jstor.org/stable/26554869)'
- en: '[4] — [https://www.mdpi.com/2076-3417/11/16/7274](https://www.mdpi.com/2076-3417/11/16/7274)'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '[4] — [https://www.mdpi.com/2076-3417/11/16/7274](https://www.mdpi.com/2076-3417/11/16/7274)'
- en: '[5] — [https://arxiv.org/pdf/2306.06506.pdf](https://arxiv.org/pdf/2306.06506.pdf)'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '[5] — [https://arxiv.org/pdf/2306.06506.pdf](https://arxiv.org/pdf/2306.06506.pdf)'
- en: '[6] — [https://arxiv.org/abs/2001.07417](https://arxiv.org/abs/2001.07417)'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '[6] — [https://arxiv.org/abs/2001.07417](https://arxiv.org/abs/2001.07417)'
- en: '[7] — [https://arxiv.org/abs/2010.10596](https://arxiv.org/abs/2010.10596)'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[7] — [https://arxiv.org/abs/2010.10596](https://arxiv.org/abs/2010.10596)'
