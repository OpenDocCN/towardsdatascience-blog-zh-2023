- en: 'Branches Are All You Need: Our Opinionated ML Versioning Framework'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'Branches Are All You Need: Our Opinionated ML Versioning Framework'
- en: 原文：[https://towardsdatascience.com/branches-are-all-you-need-our-opinionated-ml-versioning-framework-057924a4a3a9?source=collection_archive---------3-----------------------#2023-10-10](https://towardsdatascience.com/branches-are-all-you-need-our-opinionated-ml-versioning-framework-057924a4a3a9?source=collection_archive---------3-----------------------#2023-10-10)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/branches-are-all-you-need-our-opinionated-ml-versioning-framework-057924a4a3a9?source=collection_archive---------3-----------------------#2023-10-10](https://towardsdatascience.com/branches-are-all-you-need-our-opinionated-ml-versioning-framework-057924a4a3a9?source=collection_archive---------3-----------------------#2023-10-10)
- en: A practical approach to versioning machine learning projects using Git Branches
    that simplifies workflows and organises data and models
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一个实用的机器学习项目版本控制方法，使用Git分支简化工作流程，组织数据和模型
- en: '[](https://medium.com/@xdss?source=post_page-----057924a4a3a9--------------------------------)[![Jonathan
    (Yonatan) Alexander](../Images/7b2182b7048b5baffc642f8926d7a11b.png)](https://medium.com/@xdss?source=post_page-----057924a4a3a9--------------------------------)[](https://towardsdatascience.com/?source=post_page-----057924a4a3a9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----057924a4a3a9--------------------------------)
    [Jonathan (Yonatan) Alexander](https://medium.com/@xdss?source=post_page-----057924a4a3a9--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@xdss?source=post_page-----057924a4a3a9--------------------------------)[![乔纳森（约纳坦）·亚历山大](../Images/7b2182b7048b5baffc642f8926d7a11b.png)](https://medium.com/@xdss?source=post_page-----057924a4a3a9--------------------------------)[](https://towardsdatascience.com/?source=post_page-----057924a4a3a9--------------------------------)[![走向数据科学](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----057924a4a3a9--------------------------------)
    [乔纳森（约纳坦）·亚历山大](https://medium.com/@xdss?source=post_page-----057924a4a3a9--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Feba261287b37&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbranches-are-all-you-need-our-opinionated-ml-versioning-framework-057924a4a3a9&user=Jonathan+%28Yonatan%29+Alexander&userId=eba261287b37&source=post_page-eba261287b37----057924a4a3a9---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----057924a4a3a9--------------------------------)
    ·10 min read·Oct 10, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F057924a4a3a9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbranches-are-all-you-need-our-opinionated-ml-versioning-framework-057924a4a3a9&user=Jonathan+%28Yonatan%29+Alexander&userId=eba261287b37&source=-----057924a4a3a9---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Feba261287b37&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbranches-are-all-you-need-our-opinionated-ml-versioning-framework-057924a4a3a9&user=Jonathan+%28Yonatan%29+Alexander&userId=eba261287b37&source=post_page-eba261287b37----057924a4a3a9---------------------post_header-----------)
    发表在 [走向数据科学](https://towardsdatascience.com/?source=post_page-----057924a4a3a9--------------------------------)
    ·10 分钟阅读·2023年10月10日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F057924a4a3a9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbranches-are-all-you-need-our-opinionated-ml-versioning-framework-057924a4a3a9&user=Jonathan+%28Yonatan%29+Alexander&userId=eba261287b37&source=-----057924a4a3a9---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F057924a4a3a9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbranches-are-all-you-need-our-opinionated-ml-versioning-framework-057924a4a3a9&source=-----057924a4a3a9---------------------bookmark_footer-----------)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F057924a4a3a9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbranches-are-all-you-need-our-opinionated-ml-versioning-framework-057924a4a3a9&source=-----057924a4a3a9---------------------bookmark_footer-----------)'
- en: TL;DR
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简而言之
- en: A simple approach to versioning machine learning projects using Git Branches
    that simplifies workflows, organises data and models, and couples related parts
    of the project together.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简单的机器学习项目版本控制方法，使用Git分支简化工作流程，组织数据和模型，并将项目相关部分紧密联系在一起。
- en: Introduction
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: When managing machine learning solutions, various aspects of the solutions are
    often distributed across multiple platforms and locations like GitHub for code,
    HuggingFace for models, Weights and Biases for tracking, S3 for a copy of everything,
    etc.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在管理机器学习解决方案时，解决方案的各个方面通常分布在多个平台和位置，如GitHub用于代码，HuggingFace用于模型，Weights and Biases用于追踪，S3用于一切的备份等等。
- en: On the data side, we have training data, processed data, training tracking data
    and model monitoring data. We save models for inference, including older versions
    and experimental models for online tests. We also have code for preprocessing,
    training, inference, experimentation, data science analysis, and monitoring alerts.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据方面，我们有训练数据、处理过的数据、训练跟踪数据和模型监控数据。我们保存用于推理的模型，包括旧版本和用于在线测试的实验模型。我们还有用于预处理、训练、推理、实验、数据科学分析和监控警报的代码。
- en: This can easily get out of hand.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这很容易失控。
- en: '![](../Images/5b381eb0161c9606fe03f632ac0bde0b.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5b381eb0161c9606fe03f632ac0bde0b.png)'
- en: Image by author
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图像
- en: Using various tools, environments, and asset addresses to track different parts
    of the ML lifecycle can result in scattered and uncoordinated states. This can
    lead to data loss, security breaches, and misconfigurations that need to be carefully
    managed.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 使用各种工具、环境和资产地址来跟踪 ML 生命周期的不同部分，可能导致状态分散和协调不足。这可能导致数据丢失、安全漏洞和需要仔细管理的配置错误。
- en: In a previous project, we used SageMaker for daily training in an on-premises
    solution. This required customers to download a model on a daily basis and train
    it using various combinations of clients’ datasets.
  id: totrans-17
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在一个之前的项目中，我们在本地解决方案中使用 SageMaker 进行日常训练。这要求客户每天下载一个模型，并使用各种客户数据集的组合进行训练。
- en: ''
  id: totrans-18
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: We had to manage which binary model was trained with which training code on
    which data of which client, which model runs at which client with which inference
    code, etc.
  id: totrans-19
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我们必须管理哪个二进制模型是用哪个训练代码在哪个客户的数据上训练的，哪个模型在哪个客户运行，使用哪个推理代码等等。
- en: In this post we will show how to utilize data versioning tools in order to address
    these issues using Git.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们将展示如何利用数据版本控制工具，通过 Git 解决这些问题。
- en: Data versioning tools allow you to commit data and model files alongside code,
    regardless of their size. By versioning all files in this way, you can bypass
    the inconvenience of managing data and model assets.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 数据版本控制工具允许你与代码一起提交数据和模型文件，无论其大小如何。通过这种方式对所有文件进行版本控制，你可以绕过管理数据和模型资产的不便。
- en: In an ideal world, you would only have the relevant code, data, and models for
    the specific task at hand. Whether you are developing or running ML training,
    tracking experiments, monitoring models in production, or conducting online experiments.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在理想情况下，你只会拥有与当前任务相关的代码、数据和模型。无论你是在开发还是运行 ML 训练、跟踪实验、监控生产中的模型，还是进行在线实验。
- en: Instead of manually (or even automatically) connecting the right pieces — loading
    the right data in the right code, connecting them to the right model in HuggingFace
    in the right environment — imagine every time you checked out a branch, all the
    pieces were there.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，不用手动（甚至自动）连接正确的部分 — 在正确的代码中加载正确的数据，将它们连接到 HuggingFace 中正确的模型，并在正确的环境中运行
    — 每次你检出一个分支时，所有部分都已经就位。
- en: In this article, I will showcase a framework that replaces the complexity of
    juggling tools with Git, a system that nearly all ML teams are already using.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我将展示一个框架，利用 Git 代替处理工具复杂性的难题，Git 是几乎所有 ML 团队已经在使用的系统。
- en: The goal is to simplify and remove barriers to starting every stage of the ML
    workflow by having everything in a single place, managed by Git.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 目标是通过将所有内容集中在一个地方，由 Git 管理，简化并消除启动 ML 工作流每个阶段的障碍。
- en: '**Our requirements**'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**我们的要求**'
- en: '**A simple workflow** that is easy to pause, pick up, and adjust to accommodate
    changing business and development needs. It should also support reproducibility
    and enable post-factual queries, such as “What data was my model trained on?”'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**一个简单的工作流**，易于暂停、恢复和调整以适应不断变化的业务和开发需求。它还应支持可重现性，并允许事后查询，例如“我的模型是用什么数据训练的？”'
- en: '**Efficient use of data and code**, with a focus on cohesion, governance and
    auditing. — Aim to reuse data and code as much as possible, and leverage git features
    like commits, issues, and tags.'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**高效使用数据和代码**，重点关注凝聚力、治理和审计。— 旨在尽可能多地重用数据和代码，并利用 git 的功能，如提交、问题和标签。'
- en: '**Consolidating** all the different aspects of the ML solution is important.
    Often, experiment tracking, model monitoring in production, and online and offline
    experiments are separated from the training and inference sides of the solution.
    Here, we aim to unify them under one umbrella, making it easy to transition between
    them.'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**整合** ML 解决方案的各个方面非常重要。通常，实验跟踪、生产中的模型监控以及在线和离线实验与训练和推理部分是分开的。在这里，我们旨在将它们统一在一个平台下，使其在各部分之间过渡变得容易。'
- en: Follow **Git and ML best practices**, such as early and shareable data splits,
    testing, and simple collaboration, for different ML engineers.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 遵循**Git 和 ML 最佳实践**，例如早期和可共享的数据拆分、测试以及简单的协作，以适应不同的 ML 工程师。
- en: Key concepts
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关键概念
- en: '**Every change is a Git** **commit:** This includes data uploads, feature engineering,
    model overriding, merging experiment metrics results, model monitoring, and naturally
    code changes.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**每个更改都是一个 Git** **提交**：这包括数据上传、特征工程、模型覆盖、合并实验指标结果、模型监控，以及自然的代码更改。'
- en: '**Active branches**: It is common practice to use different branches for development
    and production. However, we can take it a step further here. This means that you
    can check out a branch and have all the necessary data, code, models, documents,
    readmes, and model cards with metrics in one place.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**活动分支**：将不同的分支用于开发和生产是常见的做法。然而，我们可以在这里更进一步。这意味着你可以签出一个分支，并在一个地方拥有所有必要的数据、代码、模型、文档、readmes
    和带有指标的模型卡。'
- en: 🤯 Your repository **is** your blob-store! Your branch functions like a bucket
    within your blob-store, enabling you to upload, download, and store data and models.
  id: totrans-34
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 🤯 你的代码库**就是**你的 blob 存储！你的分支像一个桶一样在你的 blob 存储中运行，允许你上传、下载和存储数据和模型。
- en: This allows you to use different branches for various development, experimentation,
    and production needs, rather than relying on different platforms and tools.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这允许你为不同的开发、实验和生产需求使用不同的分支，而不是依赖于不同的平台和工具。
- en: '**Merges as workflow:** They are used to combine branches. Code is merged normally,
    and a model typically overrides the existing model. When data is merged, it is
    usually appended. To receive new data, it is “pulled” from another branch by copy.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**合并作为工作流程**：它们用于合并分支。代码通常被合并，而模型通常会覆盖现有模型。当数据被合并时，通常是追加的。要接收新数据，可以从另一个分支“拉取”数据进行复制。'
- en: Merge data can be as simple as a copy of files or appending to a JSON list.
    In more sophisticated cases you can merge sqlite databases.
  id: totrans-37
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 合并数据可以像文件复制或追加到 JSON 列表一样简单。在更复杂的情况下，你可以合并 sqlite 数据库。
- en: '**Deduplication**, a commonly used feature in data versioning tools, prevents
    the creation of multiple copies of files, even when there are multiple branches
    containing the same files.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**去重**，这是数据版本控制工具中常用的功能，防止即使在多个分支中包含相同文件时，也会创建多个文件副本。'
- en: Types of Branches
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分支类型
- en: '![](../Images/3798c98ea6ed53167fd70c7c61003eaa.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3798c98ea6ed53167fd70c7c61003eaa.png)'
- en: Image by author
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自作者
- en: Main Branch
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 主分支
- en: First, we use our project’s *main* branch to store the problem definition, documentation,
    data description, and project structure. This serves as a space for collaboration
    and discussions.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们使用项目的*main*分支来存储问题定义、文档、数据描述和项目结构。这作为协作和讨论的空间。
- en: '**TIP**: Beginning with clearly defining the business problem, determining
    the desired outcome, identifying target values or labels and how they are obtained,
    and establishing evaluation metrics and requirements, we can ensure a successful
    start to our project and provide a place for onboarding and collaboration.'
  id: totrans-44
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**提示**：通过明确定义业务问题、确定期望的结果、识别目标值或标签及其获取方式，并建立评估指标和要求，我们可以确保项目的成功启动，并提供一个入门和协作的地方。'
- en: We can also use it for **tracking** experiments, where your experiments’ results
    are combined. For example, [MLflow’s](http://mlflow.org/) mlruns folder can be
    merged there for this purpose. Any collaborator can checkout this branch and run
    the UI.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以用它来**跟踪**实验，将实验结果进行合并。例如，[MLflow](http://mlflow.org/)的 mlruns 文件夹可以在此处进行合并。任何协作者都可以签出这个分支并运行
    UI。
- en: Alternatively, the tracking can be done in another branch.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，跟踪可以在另一个分支中完成。
- en: Starting this way is very simple, and as needs change over time, it is possible
    to upgrade to an MLflow server or a tracking platform like Weights and Biases
    with minimal changes.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 以这种方式开始非常简单，随着需求的变化，可以以最少的更改升级到 MLflow 服务器或类似 Weights and Biases 的跟踪平台。
- en: Data Branches
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据分支
- en: These are branches of the project, which mainly include data files, documentation,
    and transformation scripts, and they **remain active**. You can think of them
    like S3 buckets, but instead of uploading and downloading, you checkout a branch,
    and your files are there.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是项目的分支，主要包括数据文件、文档和转换脚本，并且它们**保持活动状态**。你可以把它们想象成 S3 桶，但不是上传和下载，而是签出一个分支，你的文件就在那里。
- en: It is recommended to always commit (upload) to the ***raw*** branch. These create
    a source of truth, a place never edited or deleted, so we can always track where
    data is coming from and passing. It also enables creating new flows easily, auditing
    and governess.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐始终提交（上传）到***原始***分支。这些分支创建了一个真实的来源，一个从不被编辑或删除的地方，因此我们可以始终追踪数据的来源和经过过程。它还使得创建新流程、审核和治理变得容易。
- en: 💡 If you add a commit message of where the data is coming from, you can get
    even more granular observability over your data.
  id: totrans-51
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 💡 如果你添加一个关于数据来源的提交信息，你可以获得对数据更细致的观察。
- en: You can use another *clean* branch where only clean data exists. For example,
    broken images or empty text files that were uploaded to the *raw branch* do not
    appear in the *clean* branch.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用另一个仅包含干净数据的*清理*分支。例如，上传到*原始分支*的损坏图片或空文本文件不会出现在*清理*分支中。
- en: A *split* branch where the data is divided for training, validation, and testing
    can ensure that all teams and collaborators work on the same playing field.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 一个*分割*分支，其中数据被划分用于训练、验证和测试，可以确保所有团队和协作者在相同的条件下工作。
- en: This approach helps prevent data leakage and enables more robust feature engineering
    and collaboration. Minimizing the chance of examples from the test set being included
    in the training stages reduces the risk of introducing bias. Additionally, having
    all collaborators on the same split ensures consistent and unbiased results in
    an experiment.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法有助于防止数据泄漏，并实现更稳健的特征工程和协作。最小化测试集样本被包含在训练阶段的机会减少了引入偏差的风险。此外，所有协作者使用相同的分割可以确保实验结果的一致性和无偏。
- en: In a former classification project, I was part of a team of individual contributors
    where each person ran the whole pipeline from scratch; each of us had used different
    data splitting percentages and seeds, which led to weaker models in production
    based on bugs and data biases.
  id: totrans-55
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在之前的分类项目中，我是一个由个体贡献者组成的团队的一员，每个人从头开始运行整个管道；我们每个人使用了不同的数据拆分百分比和种子，这导致了在生产中因错误和数据偏见而产生较弱的模型。
- en: '![](../Images/9e919b0d26f2d300c17892580d9ba93d.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9e919b0d26f2d300c17892580d9ba93d.png)'
- en: Image by author
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: '💡 **ML tip: The three phases model development best practice** We use the “train”
    and “validation” datasets to train and optimize the model’s hyperparameters. We
    then use the train plus validation as training set to train our tuned model and
    evaluate with the test dataset **only once**. Lastly, we train the model on all
    the data and save it as our model.'
  id: totrans-58
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 💡 **机器学习提示：三阶段模型开发最佳实践** 我们使用“训练”和“验证”数据集来训练和优化模型的超参数。然后，我们将训练加验证数据集作为训练集来训练调整后的模型，并**仅一次**使用测试数据集进行评估。最后，我们在所有数据上训练模型并将其保存为我们的模型。
- en: Stable Branches
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 稳定分支
- en: These branches are **active** branches for **training and inference**. Here,
    you can run your training, save your model, checkpoints, and model card, run tests,
    build and test the Docker image, commit everything at the end of a training cycle,
    and then **Tag**. They should be capable of handling the retrieval of new data
    and re-training. This is where the automation takes place.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这些分支是**活跃的**分支，用于**训练和推断**。在这里，你可以运行训练，保存模型、检查点和模型卡，运行测试，构建和测试Docker镜像，在训练周期结束时提交所有内容，然后**标记**。它们应能处理新数据的检索和重新训练。这是自动化发生的地方。
- en: ⚠️ **No code is written in these branches.**
  id: totrans-61
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: ⚠️ **这些分支中不编写代码。**
- en: This ensures that a model is coupled with the data it was trained on, the code
    used to train and run it in production (including feature engineering), and the
    result metrics. All of these components are combined into a single unified “snapshot”.
    Whenever you check out a tag, all the necessary pieces for that model are present.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这确保模型与其训练所用的数据、用于训练和在生产中运行的代码（包括特征工程）以及结果指标相关联。所有这些组件被合并成一个统一的“快照”。每当你检出一个标签时，所有必要的模型组件都存在。
- en: '💡 **Tip**: By choosing the tag name ahead of time, you can add to the tracking
    info during training as a parameter. This ensures you can always retrieve the
    model-data-code “snapshot” given the tracking data using any tracking tool.'
  id: totrans-63
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 💡 **提示**：通过提前选择标签名称，你可以在训练过程中将其作为参数添加到跟踪信息中。这确保你可以通过任何跟踪工具根据跟踪数据随时检索模型-数据-代码的“快照”。
- en: After training, only the tracking data is merged (copied) to your *main* branch
    for tracking.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 训练后，只有跟踪数据被合并（复制）到你的*主*分支用于跟踪。
- en: In the simplest case, it can be a JSON text file that contains the hyperparameters
    and evaluation results. This file is then appended to a list in the *main* branch.
    In the case of MLflow, it involve copying the experiments from the [mlruns folder](https://mlflow.org/docs/latest/tracking.html#where-runs-are-recorded)
    to the *main* branch.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在最简单的情况下，它可以是一个包含超参数和评估结果的 JSON 文本文件。然后将该文件附加到 *main* 分支中的列表中。在 MLflow 的情况下，它涉及将实验从
    [mlruns 文件夹](https://mlflow.org/docs/latest/tracking.html#where-runs-are-recorded)
    复制到 *main* 分支。
- en: Coding Branches
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码分支
- en: These branches are for **code development &** **data exploration**, training
    on sampled or small data until you have a working program. While developing, you
    are welcome to use all Git best practices. However, only branch out to a *stable*branch
    when **no further changes to the code are required,** even if additional data
    is pulled in. These branches **should include** the inference code, the server,
    the Dockerfile, and tests.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这些分支用于 **代码开发和** **数据探索**，在抽样或小数据上进行训练，直到你拥有一个有效的程序。在开发过程中，欢迎使用所有 Git 最佳实践。然而，只有在
    **不再需要进一步更改代码** 的情况下才创建 *stable* 分支，即使额外的数据被拉取。这些分支 **应该包括** 推断代码、服务器、Dockerfile
    和测试。
- en: '**There is always at least one development branch that remains active**, where
    all new features, bug fixes, and other changes are merged.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**始终至少有一个开发分支保持活动状态**，所有新功能、错误修复和其他更改都在此分支中合并。'
- en: 💡 ML and MLOps engineers can collaborate on the training and inference sides.
  id: totrans-69
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 💡 ML 和 MLOps 工程师可以在训练和推断方面进行协作。
- en: For example, you can create a ***dev/model*** branch where you develop a **baseline**
    model. This can be the most popular class for classification or the mean/median
    for regression. The focus is on setting up the code while thoroughly understanding
    your data.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你可以创建一个 ***dev/model*** 分支，在其中开发一个 **基线** 模型。这可以是分类中最流行的类别或回归中的均值/中位数。重点是设置代码，同时彻底理解你的数据。
- en: When it’s stable, and tests pass, we branch out to ***stable/model*** where
    we train and commit the model, code and data together to remote and **tag** that
    commit. That is fast and easy to share and will enable the DevOps, backend, and
    frontend teams to initiate development and exchange feedback. It will also facilitate
    validating of newly discovered requirements in a real-world environment as early
    as possible.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 当它稳定并且测试通过后，我们会分支到 ***stable/model***，在这里我们训练并提交模型、代码和数据到远程，并 **标记** 该提交。这种方式快速且易于分享，能够使
    DevOps、后台和前端团队启动开发并交换反馈。它还将促进尽早在真实环境中验证新发现的需求。
- en: Next, we develop the model on the *dev/model* branch to a **simple model** like
    linear regression, and when it’s ready, and tests pass, we can merge it to *stable/model*
    where we train, commit, and tag a release to *prod.*
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们在 *dev/model* 分支上开发一个 **简单模型**，比如线性回归，当它准备好并且测试通过后，我们可以将其合并到 *stable/model*
    分支，在那里我们训练、提交，并为 *prod* 打上标签。
- en: This approach gives you the freedom to incrementally improve your model while
    preserving the full context of previous models in the stable branch.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法让你可以逐步改进模型，同时保留稳定分支中之前模型的完整上下文。
- en: '![](../Images/849e4c8126f79385b6641dc638a6e122.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/849e4c8126f79385b6641dc638a6e122.png)'
- en: Image by author
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: 'From this point, we have three options:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 从这一点开始，我们有三种选择：
- en: We can **re-train** when more data arrives by pulling data to the stable branch.
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当更多数据到达时，我们可以通过将数据拉取到稳定分支来 **重新训练** 模型。
- en: We can start **experimentation** using feature engineering on the *dev/linear-regression*
    branch.
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以开始在 *dev/linear-regression* 分支上使用特征工程进行 **实验**。
- en: We can create a **new** *dev/new-approach* branch for more sophisticated models.
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以为更复杂的模型创建一个 **新的** *dev/new-approach* 分支。
- en: Monitoring Branch
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监控分支
- en: In model monitoring we care about the data distribution, outliers, and prediction
    distributions.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在模型监控中，我们关注数据分布、异常值和预测分布。
- en: In the *monitoring* branch, we save the queried data, commit tag and model prediction
    from prod as files.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *monitoring* 分支中，我们将查询到的数据、提交标签和来自 prod 的模型预测保存为文件。
- en: 💡 You can use multiple monitoring branches for each environment — dev, stable,
    and prod.
  id: totrans-83
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 💡 你可以为每个环境（开发、稳定和生产）使用多个监控分支。
- en: We can set alerts on data commits to test for [drift](/drift-in-machine-learning-e49df46803a)
    in any feature distributions, outlier values, [calibration](https://machinelearningmastery.com/probability-calibration-for-imbalanced-classification/)
    sanity test, and save the alerts code; this enables more advanced solutions like
    an outlier detection model as we can save the model in this branch too.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在数据提交上设置警报，以测试任何特征分布的[漂移](/drift-in-machine-learning-e49df46803a)、异常值、[校准](https://machinelearningmastery.com/probability-calibration-for-imbalanced-classification/)的合理性测试，并保存警报代码；这使得我们可以实现更高级的解决方案，比如异常值检测模型，因为我们也可以在这个分支中保存模型。
- en: '![](../Images/5a51b65d89c5a4d83317f23c3ad83ba9.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5a51b65d89c5a4d83317f23c3ad83ba9.png)'
- en: Image by author
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: This branch could typically belong to another project that is decoupled from
    the code responsible for creating the monitoring logs, as well as the data and
    model that generated them.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这个分支通常可以属于一个与生成监控日志的代码、数据和模型解耦的其他项目。
- en: Analysis Branch
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析分支
- en: Data science and analysis is another aspect of the project that is often separated
    into a different project. This is where the analysis code and non-training data
    of the data scientists are gathered.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学和分析是项目的另一个方面，通常被分离到不同的项目中。这是数据科学家的分析代码和非训练数据汇聚的地方。
- en: A data scientist can check out and pull data from the *monitoring* branch to
    run analysis, A/B tests, and other online and offline experiments. They can also
    use data from the *raw* branch for these purposes.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学家可以从*monitoring*分支中检查和提取数据，以进行分析、A/B测试和其他在线与离线实验。他们也可以使用*raw*分支中的数据进行这些目的。
- en: Online examples are simpler, as each experiment group corresponds to a branch.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在线示例更简单，因为每个实验组对应一个分支。
- en: '💡 **Tip: Common online experiments:**'
  id: totrans-92
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 💡 **提示：常见的在线实验：**
- en: ''
  id: totrans-93
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Forward test**- Comparing the current model 99% vs. a candidate model 1%.'
  id: totrans-94
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**前向测试** - 比较当前模型的99%与候选模型的1%。'
- en: ''
  id: totrans-95
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Backtest** — after merging a new model, keep 1% on the former model to validate
    expected effect in reverse.'
  id: totrans-96
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**回测** - 在合并新模型后，保留1%在旧模型上以验证预期效果的反向。'
- en: Having the model tag as a parameter in the monitoring data helps you pinpoint
    every change in the metric potential cause.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 将模型标签作为监控数据中的参数，有助于你精确定位度量潜在原因的每一变化。
- en: Summary
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: '![](../Images/d22900bc55d5305f480797d7cc00fed0.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d22900bc55d5305f480797d7cc00fed0.png)'
- en: Image by author
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: This article introduces a framework for versioning machine learning projects
    using Git branches. The framework simplifies workflows, organizes data and models,
    and couples related parts of the project together. It emphasizes the use of branches
    as environments, where each branch contains the necessary data, code, models,
    and documentation for a specific task. The article also discusses key concepts
    such as using different active branches categories. Overall, the framework aims
    to improve workflow efficiency, governance, and collaboration in machine learning
    projects.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 本文介绍了使用Git分支对机器学习项目进行版本控制的框架。该框架简化了工作流程，组织了数据和模型，并将项目的相关部分耦合在一起。它强调了将分支用作环境的使用，每个分支包含特定任务所需的数据、代码、模型和文档。文章还讨论了如使用不同的活跃分支类别等关键概念。总体而言，该框架旨在提高机器学习项目的工作流程效率、治理和协作。
- en: If you want to chat or learn more, join us on our [discord](https://discord.gg/KCzmjDaDdC)
    or follow our [blog](https://about.xethub.com/blog).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想聊天或了解更多信息，加入我们的[discord](https://discord.gg/KCzmjDaDdC)或关注我们的[博客](https://about.xethub.com/blog)。
- en: Epilogue
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结语
- en: Regarding my on-premise challenge, we maintained a “stable” branch for each
    relevant training code and dataset combination. After completing the training,
    we would tag the commit with an appropriate tag (<*client-id>-<incremental version*>).
    Clients can pull the most recent tag, just like any other release.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 关于我的本地挑战，我们为每个相关的训练代码和数据集组合维护了一个“稳定”的分支。训练完成后，我们会用一个合适的标签（<*client-id>-<incremental
    version*>）标记提交。客户可以像其他发布版本一样拉取最新的标签。
- en: '![](../Images/3a43492def7f6cbed15d8d3ef8520784.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3a43492def7f6cbed15d8d3ef8520784.png)'
- en: When “debugging” a client, we would refer to the tag at a specific moment to
    review the code and corresponding data. We could also match the monitoring data
    using the same tag, which was added to the monitoring data. The analysis notebooks
    can be found on our *ds/client-id* branches.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在“调试”客户端时，我们会参考特定时刻的标签来审查代码和相应的数据。我们还可以使用相同的标签匹配监控数据，这个标签也添加到监控数据中。分析笔记本可以在我们的*ds/client-id*分支中找到。
