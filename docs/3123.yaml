- en: 'From GeoJSON to Network Graph: Analyzing World Country Borders in Python'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/from-geojson-to-network-graph-analyzing-world-country-borders-in-python-ab81b5a8ce5a?source=collection_archive---------2-----------------------#2023-10-15](https://towardsdatascience.com/from-geojson-to-network-graph-analyzing-world-country-borders-in-python-ab81b5a8ce5a?source=collection_archive---------2-----------------------#2023-10-15)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Utilizing NetworkX for Graph-Based Country Border Analysis
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://amandaiglesiasmoreno.medium.com/?source=post_page-----ab81b5a8ce5a--------------------------------)[![Amanda
    Iglesias Moreno](../Images/7a2662fb88127b1a7203c27916e15a71.png)](https://amandaiglesiasmoreno.medium.com/?source=post_page-----ab81b5a8ce5a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ab81b5a8ce5a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ab81b5a8ce5a--------------------------------)
    [Amanda Iglesias Moreno](https://amandaiglesiasmoreno.medium.com/?source=post_page-----ab81b5a8ce5a--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1bace2932c65&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-geojson-to-network-graph-analyzing-world-country-borders-in-python-ab81b5a8ce5a&user=Amanda+Iglesias+Moreno&userId=1bace2932c65&source=post_page-1bace2932c65----ab81b5a8ce5a---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ab81b5a8ce5a--------------------------------)
    ·7 min read·Oct 15, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fab81b5a8ce5a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-geojson-to-network-graph-analyzing-world-country-borders-in-python-ab81b5a8ce5a&user=Amanda+Iglesias+Moreno&userId=1bace2932c65&source=-----ab81b5a8ce5a---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fab81b5a8ce5a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-geojson-to-network-graph-analyzing-world-country-borders-in-python-ab81b5a8ce5a&source=-----ab81b5a8ce5a---------------------bookmark_footer-----------)![](../Images/77bc3f84ad2518f2a0543607dcb80e36.png)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Maksim Shutov](https://unsplash.com/es/@maksimshutov) in Unsplash'
  prefs: []
  type: TYPE_NORMAL
- en: Python offers a wide range of libraries that allow us to easily and quickly
    address problems in various research areas. **Geospatial data analysis and graph
    theory are two research areas where Python provides a powerful set of useful libraries**.
    In this article, **we will conduct a simple analysis of world borders**, specifically
    exploring which countries share borders with others. We will begin by utilizing
    information from a GeoJSON file containing polygons for all countries worldwide.
    The ultimate goal is to create a graph representing the various borders using
    NetworkX and utilize this graph to perform multiple analyses.
  prefs: []
  type: TYPE_NORMAL
- en: 'GeoJSON Data Ingestion: Reading and Loading Global Country Data'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**GeoJSON files enable the representation of various geographical areas and
    are widely used in geographical analysis and visualizations**. The initial stage
    of our analysis involves reading the `countries.geojson` file and converting it
    into a `GeoDataFrame` using `GeoPandas`. This file has been sourced from the following
    GitHub repository and contains polygons representing different countries worldwide.'
  prefs: []
  type: TYPE_NORMAL
