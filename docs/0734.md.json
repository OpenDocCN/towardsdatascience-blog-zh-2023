["```py\n##############################\n# Loading libraries\n##############################\nlibrary(\"dplyr\")        # summarizing data\nlibrary(\"ggplot2\")      # visualization\nlibrary(\"cluster\")      # gower distance and PAM\nlibrary(\"ggalluvial\")   # alluvial plots\n\n##############################\n# Loading the data set\n##############################\ndata(\"USArrests\")\n\n##############################\n# Examine data set\n##############################\nhead(USArrests)   # head -> header\n```", "```py\n##############################\n# Box plot for each attribute\n##############################\nUSArrests %>% \n  select(c(Murder, Assault, Rape, UrbanPop)) %>%\n  boxplot(.,\n    boxwex = 0.7, \n    alpha = 0.2, \n    col = c(\"red3\", \"lightgreen\", \"lightblue\", \"purple\"), \n    horizontal = TRUE\n  )\n```", "```py\n##############################\n# Get distance\n##############################\ngower_dist <- \n  USArrests %>% \n  select(c(Murder, Assault, Rape, UrbanPop)) %>%\n  daisy(.,metric = \"gower\")\n\ngower_dist\n```", "```py\n##############################\n# Function to compute ASW \n##############################\nget_asw_using_pam <- function(distance, min_clusters, max_clusters) {\n  average_sil_width <- c(NA)\n  for (i in min_clusters:max_clusters){\n    pam_fit <- \n      pam(\n        distance,\n        diss = TRUE,\n        k=i)\n    average_sil_width[i] <- pam_fit$silinfo$avg.width\n  }\n  return(average_sil_width)\n  }\n\n############################\n## Get ASW from each run\n############################\nsil_width <- get_asw_using_pam(gower_dist, 2, 10)\n```", "```py\n##############################\n# Visualize Silhouette Plot\n##############################\nsilhouette_plot <- sil_width %>% as.data.frame()\nnames(silhouette_plot)[names(silhouette_plot) == '.'] <- 'sil_width'\n\nsilhouette_plot %>%\n  mutate(number = c(1:10)) %>%\n  filter(number > 1) %>%\n  ggplot(aes(x = number , y = sil_width)) +\n  geom_line( color=\"turquoise3\", size=1) +\n  geom_point(color=\"darkgrey\",fill = \"black\", size=3) +\n  scale_x_continuous(breaks = seq(2, 10, 1) ) +\n  ylab(\"Average Silhouette Width\") +\n  xlab(\"No of Clusters\") +\n  theme_classic()\n```", "```py\n## Set the seed of R's random number generator\n## which is useful for creating reproducible simulations\n## like in cases of clustering assignment\nset.seed(5)\n\n##############################\n# Saving PAM results\n##############################\npam_2 <- pam(gower_dist, diss = TRUE, k= 2 )\npam_3 <- pam(gower_dist, diss = TRUE, k= 3 )\npam_4 <- pam(gower_dist, diss = TRUE, k= 4 )\n\n##############################\n# Adding assignment as columns\n##############################\nUSArrests <-\n  USArrests %>%\n  mutate(cluster_2 = as.factor(pam_2$clustering)) %>%\n  mutate(cluster_3 = as.factor(pam_3$clustering)) %>%  \n  mutate(cluster_4 = as.factor(pam_4$clustering))\n```", "```py\n##############################\n# Alluvial plot\n##############################\naluv <- \n  USArrests %>%\n  group_by(cluster_2, cluster_3, cluster_4) %>%\n  summarise(Freq = n()) \n\nalluvial(\n  aluv[,1:3],\n  freq=aluv$Freq, \n  border=\"lightgrey\", \n  gap.width=0.2,\n  alpha=0.8,\n  col =  \n    ifelse( \n      aluv$cluster_4 == 1, \"red\", \n      ifelse(aluv$cluster_4 == 2, \"lightskyblue\", \n      ifelse(aluv$cluster_4 == 3 & aluv$cluster_3 == 2, \"lightskyblue4\", \n      ifelse(aluv$cluster_4 == 3 & aluv$cluster_3 == 2, \"purple\",              \n      \"orange\")))),\n  cex=0.65\n  ) \n```", "```py\n##################################################\n# Filter for the red ribbon (cluster_4 = 1)\n##################################################\nUSArrests %>% filter(cluster_4 == \"1\")\n```", "```py\n##################################################\n# Summarizing (average) attributes, 2 clusters\n##################################################\nUSArrests %>% \n  group_by(cluster_2)  %>%\n  summarise(\n    count = n(),\n    mean_murder = mean(Murder),\n    mean_assault = mean(Assault),\n    mean_rape = mean(Rape),\n    mean_urbanpop = mean(UrbanPop)\n    )\n\n##################################################\n# Summarizing (average) attributes, 3 clusters\n##################################################\nUSArrests %>% \n  group_by(cluster_3)  %>%\n  summarise(\n    count = n(),\n    mean_murder = mean(Murder),\n    mean_assault = mean(Assault),\n    mean_rape = mean(Rape),\n    mean_urbanpop = mean(UrbanPop)\n    )\n\n##################################################\n# Summarizing (average) attributes, 4 clusters\n##################################################\nUSArrests %>% \n  group_by(cluster_4)  %>%\n  summarise(\n    count = n(),\n    mean_murder = mean(Murder),\n    mean_assault = mean(Assault),\n    mean_rape = mean(Rape),\n    mean_urbanpop = mean(UrbanPop)\n    )\n```"]