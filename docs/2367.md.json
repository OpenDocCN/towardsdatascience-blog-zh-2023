["```py\ncleanlab==2.4.0\nscikit-learn==1.2.2\npandas>=2.0.1\nnumpy>=1.20.3\n```", "```py\nimport numpy as np\nimport pandas as pd\n\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.ensemble import RandomForestClassifier\n\nfrom sklearn.model_selection import train_test_split, cross_val_score, cross_val_predict\nfrom sklearn.model_selection import GridSearchCV, StratifiedKFold\nfrom sklearn.pipeline import Pipeline\n\nfrom sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score\nfrom sklearn.metrics import confusion_matrix, classification_report\n\nfrom cleanlab import Datalab\n\nRANDOM_SEED = 214\nnp.random.seed(RANDOM_SEED)\n```", "```py\ndf_pls_theme = pd.read_parquet(\n    '../../data/proposicoes_temas_one_hot_encoding.parquet'\n)\n\n#              \"Tributes and commemorative dates\"\nBINARY_CLASS = \"Homenagens e Datas Comemorativas\"\nIN_BINARY_CLASS = \"in_\" + BINARY_CLASS.lower().replace(\" \", \"_\")\n\ndf_pls_theme = df_pls_theme.drop_duplicates(subset=[\"ementa\"])\ndf_pls_theme = df_pls_theme[[\"ementa\", BINARY_CLASS]]\ndf_pls_theme = df_pls_theme.rename(\n    columns={BINARY_CLASS: IN_BINARY_CLASS}\n)\n```", "```py\ny_proba = cross_val_predict(\n    clean_pipeline, \n    df_pls_theme['ementa'], \n    df_pls_theme[IN_BINARY_CLASS],\n    cv=StratifiedKFold(n_splits=5, shuffle=True, random_state=RANDOM_SEED), \n    method='predict_proba', \n    verbose=2,\n    n_jobs=-1\n)\n```", "```py\nlab = Datalab(\n    data=df_pls_theme,\n    label_name=IN_BINARY_CLASS,\n)\n```", "```py\nlab.find_issues(pred_probs=y_proba)\n```", "```py\nlab.get_issue_summary(\"label\")\n```", "```py\nlab.get_issues(\"label\")\n```", "```py\n# Getting the predicted errors\ny_clean_labels = lab.get_issues(\"label\")[['predicted_label', 'is_label_issue']]\n\n# adding them to the original dataset\ndf_ples_theme_clean = df_pls_theme.copy().reset_index(drop=True)\ndf_ples_theme_clean['predicted_label'] = y_clean_labels['predicted_label']\ndf_ples_theme_clean['is_label_issue'] = y_clean_labels['is_label_issue']\n```"]