- en: dbt Incremental — The Right Way
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: dbt增量模型——正确的方式
- en: 原文：[https://towardsdatascience.com/dbt-incremental-the-right-way-63f931263f4a?source=collection_archive---------1-----------------------#2023-07-21](https://towardsdatascience.com/dbt-incremental-the-right-way-63f931263f4a?source=collection_archive---------1-----------------------#2023-07-21)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/dbt-incremental-the-right-way-63f931263f4a?source=collection_archive---------1-----------------------#2023-07-21](https://towardsdatascience.com/dbt-incremental-the-right-way-63f931263f4a?source=collection_archive---------1-----------------------#2023-07-21)
- en: From Full-Load Pain to Incremental Gain (and a Few Mistakes Along the Way)
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从全面加载的痛苦到增量收益（以及途中一些错误）
- en: '[](https://medium.com/@ndleah?source=post_page-----63f931263f4a--------------------------------)[![Leah
    Nguyen](../Images/7c3a6bc7de9b2446453dc5133a3bf9ae.png)](https://medium.com/@ndleah?source=post_page-----63f931263f4a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----63f931263f4a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----63f931263f4a--------------------------------)
    [Leah Nguyen](https://medium.com/@ndleah?source=post_page-----63f931263f4a--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@ndleah?source=post_page-----63f931263f4a--------------------------------)[![Leah
    Nguyen](../Images/7c3a6bc7de9b2446453dc5133a3bf9ae.png)](https://medium.com/@ndleah?source=post_page-----63f931263f4a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----63f931263f4a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----63f931263f4a--------------------------------)
    [Leah Nguyen](https://medium.com/@ndleah?source=post_page-----63f931263f4a--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7ee083e5e515&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdbt-incremental-the-right-way-63f931263f4a&user=Leah+Nguyen&userId=7ee083e5e515&source=post_page-7ee083e5e515----63f931263f4a---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----63f931263f4a--------------------------------)
    ·9 min read·Jul 21, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F63f931263f4a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdbt-incremental-the-right-way-63f931263f4a&user=Leah+Nguyen&userId=7ee083e5e515&source=-----63f931263f4a---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7ee083e5e515&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdbt-incremental-the-right-way-63f931263f4a&user=Leah+Nguyen&userId=7ee083e5e515&source=post_page-7ee083e5e515----63f931263f4a---------------------post_header-----------)
    发表在[Towards Data Science](https://towardsdatascience.com/?source=post_page-----63f931263f4a--------------------------------)
    ·9分钟阅读·2023年7月21日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F63f931263f4a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdbt-incremental-the-right-way-63f931263f4a&user=Leah+Nguyen&userId=7ee083e5e515&source=-----63f931263f4a---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F63f931263f4a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdbt-incremental-the-right-way-63f931263f4a&source=-----63f931263f4a---------------------bookmark_footer-----------)![](../Images/9e13b288f5887d77255a505868893874.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F63f931263f4a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdbt-incremental-the-right-way-63f931263f4a&source=-----63f931263f4a---------------------bookmark_footer-----------)![](../Images/9e13b288f5887d77255a505868893874.png)'
- en: Photo by [Lukas Tennie](https://unsplash.com/es/@luk10?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Lukas Tennie](https://unsplash.com/es/@luk10?utm_source=medium&utm_medium=referral)在[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: 'When my team at GlamCorner began transitioning from traditional MySQL databases
    to ELT on a Postgres database with dbt as the transformation and modeling layer,
    we were overjoyed. We set up dbt projects and profiles, dedicated macros for our
    models, and built more data marts to serve downstream needs. We thought we were
    done — I thought we were done until we hit our first bump: model run time. In
    this article, I explain how I overcame one of the toughest performance challenges
    at the time by adopting dbt incremental, making mistakes (like who doesn’t?),
    and learning valuable lessons along the way.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当我在GlamCorner的团队开始从传统的MySQL数据库过渡到使用dbt作为转换和建模层的Postgres数据库的ELT时，我们感到非常高兴。我们设置了dbt项目和配置文件，为我们的模型专门编写了宏，并构建了更多的数据集市以满足下游需求。我们以为一切都完成了——我以为一切都完成了，直到我们遇到第一个障碍：模型运行时间。在这篇文章中，我解释了如何通过采用dbt增量模型来克服当时最艰难的性能挑战，犯错（谁没有呢？）并在过程中学到宝贵的经验教训。
- en: The Evolving Monster
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进化中的怪物
- en: At GlamCorner, we’re in the circular fashion game. Our “back-end” team plays
    with RFID scanners in the warehouse, scanning items in and out like pros. We also
    use fancy platforms like Zendesk and Google Analytics to make our customers feel
    extra special. And to top it off, we’ve got our own in-house inventory system
    — thanks to our brilliant software engineers — that links all our front-end and
    back-end systems together. It’s like a match made in heaven. But as we grow and
    add more years of operation, our database is getting bigger and bigger. And let’s
    just say the traditional full-table load is starting to feel a bit like a pain
    in the you-know-what.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在GlamCorner，我们玩的是循环时尚游戏。我们的“后端”团队在仓库里使用RFID扫描器，像专业人士一样扫描进出商品。我们还使用像Zendesk和Google
    Analytics这样的高级平台，让我们的客户感觉特别棒。更棒的是，我们有自己内部的库存系统——多亏了我们出色的软件工程师——将所有前端和后端系统连接在一起。这就像是天作之合。但随着我们的成长和运营年限的增加，我们的数据库越来越大。可以说，传统的全表加载开始感觉有点像是个麻烦。
- en: The Pain
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 痛苦
- en: You either understand the pain of “I want the data to be ready by 9am” or you
    don’t.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 你要么理解“我希望数据在早上9点前准备好”的痛苦，要么不理解。
- en: '![](../Images/4fe69be394d107502ea89bc3e2902fb6.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4fe69be394d107502ea89bc3e2902fb6.png)'
- en: Image by the author
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自作者
- en: 'The team’s put the efforts to create a flawless **(E)**xtract and **(L)**oad,
    we gather and toast. Then one day, the **(T)**ransformation decided like “Nah,
    that’s not how it works around here” and decided to spin up the total runtime
    from 10 minutes to 90 minutes. I may exaggerate on the 10 to 90 minutes part because
    yes, everything has its own reason, but the fear of the business team knocking
    on your door at 8.55 am in the morning when you haven’t even started your first
    cup of coffee, just to ask: “Where is the newest data?” is hell of the ride to
    work every day. This is like dumping all the hard work in the trash and I, myself,
    cannot accept that reality.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 团队付出了努力来创建无瑕的**(E)**xtract和**(L)**oad，我们一起庆祝。然后有一天，**(T)**ransformation就像“哎，这里不是这样运作的”一样，把总运行时间从10分钟提高到90分钟。我可能夸张了10分钟到90分钟的部分，因为是的，一切都有其原因，但当你还没喝第一杯咖啡，早上8:55商务团队就敲门问：“最新数据在哪里？”这种感觉真的是每天上班的地狱。这就像把所有的辛勤工作扔进垃圾桶，我自己无法接受这个现实。
- en: 'Let’s go back to the thing I said: everything has its own reason, and why the
    fairytale once was taken 10 minutes of my time now has become a red horn demon
    of 90 minutes. To illustrate this, let’s take the example of the **fct_booking**
    data figure. This table contains all booking information taken from the website
    each day. Each `**booking_id**` represents one order that was booked on the website.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 回到我说的事情：每件事都有它的理由，而曾经只需要10分钟的童话故事现在却变成了90分钟的红角魔鬼。为了说明这一点，我们以**fct_booking**数据表为例。这个表包含了每天从网站上获取的所有预订信息。每个`**booking_id**`代表一个在网站上预订的订单。
- en: '![](../Images/0cf43fdf7cf89c0d4444d886adfa65c3.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0cf43fdf7cf89c0d4444d886adfa65c3.png)'
- en: Image by the author
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自作者
- en: Every day, around 4 orders are added to the booking table, which already contains
    80 orders. When this model is run using dbt, it delete the entire table from the
    last day, replaces all of them with 84 records, including the old and new orders
    (80 orders from historical cumulative data + 4 new orders added for the latest
    day). To add to the list, for every new 4 records added, the query time increases
    by around 0.5 seconds.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 每天，大约有4个订单被添加到预订表中，而该表已经包含80个订单。当使用dbt运行这个模型时，它会删除前一天的整个表，用84条记录（包括旧订单和新订单）替换所有记录（80个历史累计订单+最新一天增加的4个新订单）。另外，每新增4条记录，查询时间会增加约0.5秒。
- en: '![](../Images/f28ffc8a83cbafacf6d78a9672c2bcf4.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f28ffc8a83cbafacf6d78a9672c2bcf4.png)'
- en: Image by the author
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自作者
- en: Now, imagine that 4 orders are equivalent to 4000 per day and 80 orders actually
    represent 800,000 records. Can you guess how much time it will take to transform
    the fct_bookings table, and where we will be in, for example, 3 months?
  id: totrans-23
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 现在，想象一下4个订单等于每天4000条记录，而80个订单实际上代表80万条记录。你能猜到转换fct_bookings表需要多长时间吗？例如，三个月后我们会在哪里？
- en: ''
  id: totrans-24
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Well,** **I’ll leave the math for you.**'
  id: totrans-25
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**好吧，** **我会把数学留给你。**'
- en: The Golden Egg
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 金蛋
- en: So, after aimlessly wandering through dbt Community threads and halfheartedly
    skimming through dbt documentation (I mean, who hasn’t done that?), I stumbled
    upon the holy grail of dbt Incremental. It’s like finding a needle in a haystack,
    except the needle is golden and the haystack is made of code.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，在无目的地浏览 dbt 社区线程并半心半意地浏览 dbt 文档之后（我意思是，谁没这样做过？），我发现了 dbt 增量的圣杯。这就像在稻草堆中找针，只不过那根针是金色的，而稻草堆是由代码组成的。
- en: In layman’s terms, dbt Incremental means that you don’t have to go through the
    hassle of processing all data from the beginning. You just process the new and
    modified data, saving you time and resources. It’s like a shortcut that actually
    works and won’t get you in trouble with your boss.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 用通俗的话说，dbt 增量意味着你不必从头开始处理所有数据。你只需处理新数据和修改过的数据，从而节省时间和资源。这就像一个实际有效的快捷方式，不会让你在老板面前出丑。
- en: '![](../Images/1b22fb01112e95066f78201f330bb383.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1b22fb01112e95066f78201f330bb383.png)'
- en: Image by the author
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: '*If you want to know more about the nitty-gritty details of dbt Incremental,
    then check out this blog and document:*'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你想了解更多关于 dbt 增量的细节，可以查看这个博客和文档：*'
- en: '[](/the-power-of-dbt-incremental-models-for-big-data-c8ba821eb078?source=post_page-----63f931263f4a--------------------------------)
    [## The power of dbt incremental models for Big Data'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/the-power-of-dbt-incremental-models-for-big-data-c8ba821eb078?source=post_page-----63f931263f4a--------------------------------)
    [## dbt 增量模型在大数据中的强大作用'
- en: An experiment on BigQuery
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 BigQuery 上的实验
- en: towardsdatascience.com](/the-power-of-dbt-incremental-models-for-big-data-c8ba821eb078?source=post_page-----63f931263f4a--------------------------------)
    [](https://docs.getdbt.com/docs/build/incremental-models?source=post_page-----63f931263f4a--------------------------------)
    [## Incremental models | dbt Developer Hub
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/the-power-of-dbt-incremental-models-for-big-data-c8ba821eb078?source=post_page-----63f931263f4a--------------------------------)
    [](https://docs.getdbt.com/docs/build/incremental-models?source=post_page-----63f931263f4a--------------------------------)
    [## 增量模型 | dbt 开发者中心
- en: Read this tutorial to learn how to use incremental models when building in dbt.
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阅读此教程，了解如何在构建 dbt 时使用增量模型。
- en: docs.getdbt.com](https://docs.getdbt.com/docs/build/incremental-models?source=post_page-----63f931263f4a--------------------------------)
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: docs.getdbt.com](https://docs.getdbt.com/docs/build/incremental-models?source=post_page-----63f931263f4a--------------------------------)
- en: 'To set up this model in your dbt model, you need to add a config block at the
    beginning of your model script, keeping these two components in mind:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 要在你的 dbt 模型中设置这个模型，你需要在模型脚本的开头添加一个配置块，同时考虑这两个组件：
- en: '**Materialized:** By default, a dbt model’s materialized view is equal to ‘table’
    when there is no configuration. To set the incremental mode, set the materialized
    view to ‘incremental’. For more information on other dbt materializations, please
    visit:'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Materialized（物化视图）：** 默认情况下，dbt 模型的物化视图等于 ‘table’，当没有配置时。要设置增量模式，请将物化视图设置为
    ‘incremental’。有关其他 dbt 物化视图的信息，请访问：'
- en: '[](https://docs.getdbt.com/docs/build/materializations?source=post_page-----63f931263f4a--------------------------------)
    [## Materializations | dbt Developer Hub'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://docs.getdbt.com/docs/build/materializations?source=post_page-----63f931263f4a--------------------------------)
    [## 物化视图 | dbt 开发者中心'
- en: Read this tutorial to learn how to use materializations when building in dbt.
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阅读此教程，了解如何在构建 dbt 时使用物化视图。
- en: docs.getdbt.com](https://docs.getdbt.com/docs/build/materializations?source=post_page-----63f931263f4a--------------------------------)
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: docs.getdbt.com](https://docs.getdbt.com/docs/build/materializations?source=post_page-----63f931263f4a--------------------------------)
- en: '**Unique_key:** Although setting up a unique key is optional according to the
    dbt documentation, it is extremely important to rationally consider how you want
    to set this up. Essentially, the unique key will be the main driver that lets
    dbt know if the record should be added or changed. Some questions to keep in mind
    are:'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Unique_key（唯一键）：** 尽管根据 dbt 文档设置唯一键是可选的，但合理考虑如何设置这一点是极其重要的。实际上，唯一键将是主要驱动因素，帮助
    dbt 确定记录是否应添加或更改。需要考虑的一些问题包括：'
- en: Is the unique key really unique?
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 唯一键真的唯一吗？
- en: Is it a combination of two or more columns?
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是两个或更多列的组合吗？
- en: Failing to set up a unique key can lead to missing data and ambiguous values,
    **so be careful!**
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 未设置唯一键可能导致数据丢失和模糊值，**所以要小心！**
- en: 'Here is an example of how the config block is set up for a single unique key:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个如何为单个唯一键设置配置块的示例：
- en: 'In the case the unique key is the combination of several columns, you can tweak
    the config to be:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果唯一键是多个列的组合，你可以调整配置为：
- en: '**Note:** if you’re using BigQuery or Snowflake to store your data, you might
    have the option of tuning more extra configs like setting up sync_mode. But since
    my company’s database is built on Redshift, specifically Postgres, we don’t have
    those fancy gears.'
  id: totrans-48
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意：** 如果你使用 BigQuery 或 Snowflake 存储数据，你可能可以调整更多的配置，如设置 sync_mode。但由于我们公司的数据库基于
    Redshift，具体来说是 Postgres，我们没有这些高级配置。'
- en: 'Once that’s taken care of, there’s just one more important step we need to
    add to our dbt incremental models'' script: a conditional block for the `**is_incremental()**`
    macro.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦解决了这个问题，我们还需要在 dbt 增量模型的脚本中添加一个重要步骤：为 `**is_incremental()**` 宏添加一个条件块。
- en: 'The **is_incremental()** macro returns *True* if the following conditions are
    met:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**is_incremental()** 宏在满足以下条件时返回 *True*：'
- en: The destination table already exists in the database.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标表已经存在于数据库中。
- en: dbt is not running in `**full-refresh**` mode.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: dbt 没有以 `**full-refresh**` 模式运行。
- en: The running model is configured with `**materialized=’incremental’**`
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行的模型配置为 `**materialized=’incremental’**`
- en: Note that the SQL in your model needs to be valid regardless of whether `**is_incremental()**`
    evaluates to ***True*** or ***False***.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，无论 `**is_incremental()**` 计算结果是 ***True*** 还是 ***False***，你的模型中的 SQL 需要是有效的。
- en: 'Returning to the example of fct_booking, here is the original query:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 回到 fct_booking 的例子，以下是原始查询：
- en: 'After applying the incremental setup described above, we have a model that
    includes the unique key, a tag for the model, and a conditional block for the
    **is_incremental()** macro as follows:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用上述增量设置后，我们有一个模型，其中包括唯一键、模型标签和 `**is_incremental()**` 宏的条件块，如下所示：
- en: As seen in the code, the unique_key has been set to the `**booking_id**`, as
    one booking_id corresponds to one order.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如代码中所示，unique_key 已设置为 `**booking_id**`，因为一个 booking_id 对应一个订单。
- en: To make it fancier, I have also added a model tag as **incremental_model** for
    any other model that I integrate with an incremental materialized. The main driver
    is that, often when things go wrong with dbt model incremental, they often go
    wrong ‘in bulk’. Thus, to refresh them without affecting other models and don’t
    have to remember every single model with incremental mode enabled, I can run the
    above code instead of having to specify each model name with incremental mode
    separately.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使其更高端，我还为任何其他与增量物化集成的模型添加了一个模型标签 **incremental_model**。主要原因是，通常当 dbt 模型增量出现问题时，它们往往会成批出现问题。因此，为了刷新这些模型而不影响其他模型，并且不需要记住每个启用了增量模式的模型，我可以运行上述代码，而不是单独指定每个模型名称。
- en: '[PRE0]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Also note that if the incremental model is set up incorrectly and updates incorrect
    data in the production table, I would need to run the model again using the `--full-refresh`
    command. However, you should keep in mind that running it in full load refresh
    instead of incremental mode will be slower, so remember to pick the right time
    to do it (*tips: don’t do it at 9 am in the morning*).'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 还要注意，如果增量模型设置不正确并且在生产表中更新了错误的数据，我需要使用 `--full-refresh` 命令重新运行模型。然而，你应该记住，以全量加载刷新而不是增量模式运行会更慢，因此记得选择合适的时间进行此操作
    (*提示：不要在早上 9 点进行*)。
- en: The Slap Back
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 反击
- en: Up until this point, life was good again! I set up the table flawlessly, and
    the performance query significantly improved. Finally, I can sleep at night. My
    hand can touch the grass, and dbt incremental grant miss little Leah — a dream
    come true. However, not long after, a guy from the Finance team rushed to my desk
    with a report in his hand and aggressively claimed, “You gave me the wrong data!”
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，生活再次美好！我完美地设置了表，性能查询显著提高。终于，我可以安然入睡。我的手可以触摸草地，dbt 增量模型也没有错过小 Leah —— 这是一个梦想成真。然而，不久之后，财务团队的一名员工急匆匆地跑到我的桌前，手里拿着一份报告，激动地声称：“你给了我错误的数据！”
- en: It turned out that the incremental models accidentally skipped many orders in
    a day and then went to the next day. “How on earth could this happen? I followed
    the expert tutorial — this can’t be wrong!” I whispered in my head. Except there
    is something going on upstream that I might have missed. After some digging, the
    issue came to light.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是增量模型在一天中意外跳过了许多订单，然后进入了第二天。“这怎么可能发生？我按照专家教程操作——这不可能错！”我在心里低语。除非上游发生了一些我可能遗漏的事情。经过一番挖掘，问题浮出水面。
- en: Every day, a data extraction and load process takes place at midnight to synchronize
    all the data up until that moment. This synchronization typically occurs at midnight,
    but its timing can be influenced by factors such as start spinup time and package
    cache. It’s important to note that the Extract part of the process may begin slightly
    after midnight.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 每天，在午夜进行数据提取和加载过程，以同步直到那一刻的所有数据。同步通常发生在午夜，但其时间可能会受到启动时间和包缓存等因素的影响。需要注意的是，提取过程可能会在午夜之后稍微开始。
- en: Consider a scenario where the extract starts at 12:02 am and someone decides
    to make a booking around 12:01 am. In this situation, the data will also include
    a small portion of the orders from that day, which is referred to as “late arrival
    data” in more technical terms.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑一种情况：提取在凌晨 12:02 开始，而某人决定在凌晨 12:01 进行预订。在这种情况下，数据也将包括当天的一小部分订单，这在更技术性的术语中被称为“迟到数据”。
- en: However, there’s a drawback with the current logic of the WHERE filter. The
    filter’s efficiency is compromised because it only appends new records from the
    latest date value of `**created_at**`. This means that it won’t capture all the
    data for the entire day.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当前 WHERE 筛选器的逻辑存在一个缺点。筛选器的效率受到影响，因为它仅从 `**created_at**` 的最新日期值中追加新记录。这意味着它不会捕捉到整天的数据。
- en: 'In order to fix this, we will twist this logic a little bit:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 为了修复这个问题，我们将稍微调整这个逻辑：
- en: The new filter involves syncing all data from the past 7 days. Any new data
    will be added to the existing dataset, while any old data with updated field values
    will be replaced.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 新的筛选器涉及同步过去 7 天的所有数据。任何新数据将被添加到现有数据集中，而任何旧数据的更新字段值将被替换。
- en: The Tradeoff
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 权衡
- en: As you’ve been following along, you might be wondering, “How many days should
    I go back using the is_incremental filter? And why did I choose 7 days for my
    case? What if I need data for the last 30 days?” Well, the answer is not straightforward
    — it depends on your specific scenario.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 既然你已经跟随到了这里，你可能会想：“我应该使用 `is_incremental` 筛选器回溯多少天？为什么我选择了 7 天？如果我需要过去 30 天的数据怎么办？”答案并不简单——这取决于你的具体情况。
- en: In my situation, I ensure that each day should have at least one order. Since
    there could be internal changes in the data during the last 7 days, I set my filter
    to append new and update existing data within that timeframe. However, if you
    feel confident about your query performance and want to go back further, say the
    last 365 days, you are free to do so! Just be mindful that there are tradeoffs
    to consider.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的情况中，我确保每天至少有一个订单。由于过去 7 天的数据可能会发生内部变化，我将筛选器设置为在该时间范围内追加新数据和更新现有数据。然而，如果你对你的查询性能有信心并且想要回溯更长的时间，比如过去
    365 天，你可以自由选择！只需注意需要考虑的权衡。
- en: The primary reason for using an incremental model is to reduce costs in terms
    of model run performance. However, scanning through a larger dataset for the last
    7 days could slow down performance, depending on the size of your data and your
    company’s specific use case. It’s essential to strike the right balance based
    on your needs.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 使用增量模型的主要原因是降低模型运行性能的成本。然而，根据数据的大小和公司具体的使用案例，扫描过去 7 天的大数据集可能会降低性能。根据你的需求，找到合适的平衡是至关重要的。
- en: For a more general approach, I recommend using 7 days as a standard rule. You
    can set up data update schedules on a weekly or annual basis for full-refreshes
    of the dbt incremental models. This approach allows you to account for unexpected
    issues, as no matter how well your setup is, there may still be occasional downtimes.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 对于更通用的方法，我建议将 7 天作为标准规则。你可以设置每周或每年进行一次完整刷新，以更新 dbt 增量模型。这种方法允许你考虑到意外问题，因为无论你的设置多么完善，仍然可能会有偶尔的停机时间。
- en: In my use case, I typically schedule the incremental run on a full-refresh during
    the weekend when there are fewer operational tasks. However, this schedule can
    be customized according to your team’s requirements.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的使用案例中，我通常会在周末安排增量运行的完整刷新，因为那时操作任务较少。然而，这个时间表可以根据你的团队要求进行自定义。
- en: Remember, the key is to find the right tradeoff between data freshness and query
    performance, ensuring that your data remains accurate and up-to-date while optimizing
    your model’s efficiency.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，关键是找到数据新鲜度和查询性能之间的最佳平衡，确保数据保持准确和最新，同时优化模型的效率。
