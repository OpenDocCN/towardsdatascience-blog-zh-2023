- en: Python Mocking in Production
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/python-mocking-in-production-1924953c8a14?source=collection_archive---------12-----------------------#2023-06-06](https://towardsdatascience.com/python-mocking-in-production-1924953c8a14?source=collection_archive---------12-----------------------#2023-06-06)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Advanced mocking techniques introduced via an example
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@hrmnmichaels?source=post_page-----1924953c8a14--------------------------------)[![Oliver
    S](../Images/b5ee0fa2d5fb115f62e2e9dfcb92afdd.png)](https://medium.com/@hrmnmichaels?source=post_page-----1924953c8a14--------------------------------)[](https://towardsdatascience.com/?source=post_page-----1924953c8a14--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----1924953c8a14--------------------------------)
    [Oliver S](https://medium.com/@hrmnmichaels?source=post_page-----1924953c8a14--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff2daf6260cca&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-mocking-in-production-1924953c8a14&user=Oliver+S&userId=f2daf6260cca&source=post_page-f2daf6260cca----1924953c8a14---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----1924953c8a14--------------------------------)
    ·7 min read·Jun 6, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1924953c8a14&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-mocking-in-production-1924953c8a14&user=Oliver+S&userId=f2daf6260cca&source=-----1924953c8a14---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1924953c8a14&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-mocking-in-production-1924953c8a14&source=-----1924953c8a14---------------------bookmark_footer-----------)![](../Images/6901047279e3429013278d75d9027adf.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Joyce Hankins](https://unsplash.com/@moonshadowpress?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/gT5kuls6Y6Q?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: Unit testing is an art. While the question of what to test is crucial (you can’t
    test everything), in this post we’ll take a closer look at some advanced testing
    and mocking techniques in Python. While some of these were already introduced
    in previous postings ([Part 1](https://python.plainenglish.io/unit-testing-with-pytest-5c59cdf89529),
    [Part 2](https://levelup.gitconnected.com/mocking-in-python-unit-tests-3567fc77d55a),
    [Part 3](https://betterprogramming.pub/parametrizing-fixtures-in-python-ef0a413bbfe4)),
    this post differs by showing their interplay on a real-world example, as well
    as goes above the scope of previous posts and adds more insights.
  prefs: []
  type: TYPE_NORMAL
- en: 'Among others, we will discuss:'
  prefs: []
  type: TYPE_NORMAL
- en: patching functions — with the additional requirements of patching async functions
    and modifying their behaviour
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: asserting that functions are called as expected
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: writing custom matchers for partially matching call arguments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Recap of Necessary Topics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before diving into the actual contents of this post, we first give a quick recap
    of how to use [pytest](https://python.plainenglish.io/unit-testing-with-pytest-5c59cdf89529).
    Afterwards, we do the same for [asyncio](https://medium.com/towards-data-science/introduction-to-asyncio-57a5a1290ce0),
    since our example further on makes use of this. If you are already familiar with
    these topics, please feel free to skip to the next section.
  prefs: []
  type: TYPE_NORMAL
- en: pytest
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Unit testing should be part of any somewhat professional software product. It
    helps avoid bugs and…
  prefs: []
  type: TYPE_NORMAL
