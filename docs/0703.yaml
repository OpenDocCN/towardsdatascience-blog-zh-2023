- en: How to Connect Azure AD Managed Identities to AWS Resources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-to-connect-azure-ad-managed-identities-to-aws-resources-9353f3309efb?source=collection_archive---------7-----------------------#2023-02-21](https://towardsdatascience.com/how-to-connect-azure-ad-managed-identities-to-aws-resources-9353f3309efb?source=collection_archive---------7-----------------------#2023-02-21)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Setup secret-less access from Azure Data Factory to AWS S3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://rebremer.medium.com/?source=post_page-----9353f3309efb--------------------------------)[![René
    Bremer](../Images/e422c4b84e225d2a949251ebc24dbd2c.png)](https://rebremer.medium.com/?source=post_page-----9353f3309efb--------------------------------)[](https://towardsdatascience.com/?source=post_page-----9353f3309efb--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----9353f3309efb--------------------------------)
    [René Bremer](https://rebremer.medium.com/?source=post_page-----9353f3309efb--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F11e5e7fb3771&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-connect-azure-ad-managed-identities-to-aws-resources-9353f3309efb&user=Ren%C3%A9+Bremer&userId=11e5e7fb3771&source=post_page-11e5e7fb3771----9353f3309efb---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----9353f3309efb--------------------------------)
    ·5 min read·Feb 21, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F9353f3309efb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-connect-azure-ad-managed-identities-to-aws-resources-9353f3309efb&user=Ren%C3%A9+Bremer&userId=11e5e7fb3771&source=-----9353f3309efb---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9353f3309efb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-connect-azure-ad-managed-identities-to-aws-resources-9353f3309efb&source=-----9353f3309efb---------------------bookmark_footer-----------)![](../Images/54488e77aaee51a17ae771dc72f62a91.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Image by [Susan Q Yin](https://unsplash.com/@syinq) on [Unsplash](https://unsplash.com/)
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A common challenge for developers is the management of credentials to secure
    communication between services. [Azure Managed Identities](https://learn.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview)
    eliminate the need for developers to manage these credentials. Applications can
    use managed identities to obtain Azure AD tokens to access resources in Azure.
    In this blog, it is explained how Azure Data Factory Managed Identity can be used
    to access AWS S3, see also below.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6852075832a91f927a8c912ecd32a9c2.png)'
  prefs: []
  type: TYPE_IMG
- en: 1\. overview — Azure AD managed identity connecting with AWS
  prefs: []
  type: TYPE_NORMAL
- en: In the remaining of this blog, it is explained how an Azure tenant is registered
    as Identity Provider in AWS such that managed identities can access S3\. Then,
    as an example, Data Factory Managed Identity is used to copy data from AWS S3
    to Azure Storage. This tutorial heavily relies on [this blog of Uday Hegde](https://blog.identitydigest.com/azuread-access-aws/)
    in which Azure AD — AWS access is discussed in more detail.
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Setup Azure AD tenant as AWS Identity Provider
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, Azure AD tenant is setup as AWS Identity Provider. In this,
    the following steps are executed:'
  prefs: []
  type: TYPE_NORMAL
- en: 2.1 Create App registration in Azure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 2.2 Create Azure AD tenant as Identity Provider (IdP)in AWS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 2.3 Add role to IdP and grant access to S3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 2.1 Create App registration in Azure
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this paragraph, an [app registration](https://learn.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app)
    is created. Log into the Azure portal, select Azure Active Directory and select
    App registration and create an App registration. After the App registration is
    created, an Application ID URL needs to be specified. As URI, `api://aws_azure_federate`
    can be used, see also image below.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/18bb03083bf8a153b046c77008437033.png)'
  prefs: []
  type: TYPE_IMG
- en: 2.1 App registration using URI scheme app://
  prefs: []
  type: TYPE_NORMAL
- en: 2.2 Create Azure AD tenant as Identity Provider (IdP) in AWS
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this paragraph, your Azure AD tenant is registered as Identity Provider (IdP)
    in AWS. Log into the AWS console, select IAM and then select to add an Identity
    Provider. Use OpenID Connect as Provider type, use `https://sts.windows.net/<<your
    Azure AD tenant id>>/` (don’t forget the ending / ) as URL and use Application
    ID URI as audience, see also image below.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0d43cf4d91935ee39936a65240a4fc14.png)'
  prefs: []
  type: TYPE_IMG
- en: 2.2 Create Azure AD tenant as Identity Provider in AWS
  prefs: []
  type: TYPE_NORMAL
- en: 2.3 Add role to IdP and grant access to S3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this paragraph, a role is created in the IdP and that role is granted access
    to S3 buckets. Go to your newly created IdP in AWS, select create role, choose
    web identity and select as audience your app registration. As permissions, select
    `AmazonS3FullAccess`(in production, create a more fine grained policy). Finally,
    name your `AzureADWebidentity3` and create it, see also image below.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3b3cd6e3579afa6de0f2bd0accc4d97e.png)'
  prefs: []
  type: TYPE_IMG
- en: 2.3 Role in IdP using app reg as audience, having full access to S3
  prefs: []
  type: TYPE_NORMAL
- en: After this step, your Azure AD tenant is registered as Identity Provider. In
    the next step chapter, Azure Data Factory Managed Identity is leveraged to copy
    files from S3 to Azure Storage.
  prefs: []
  type: TYPE_NORMAL
- en: '3\. Example: Use Data Factory MI to connect to S3'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, a Data Factory pipeline is used to copy data from AWS S3 to
    Azure Storage. In this, the following steps are executed:'
  prefs: []
  type: TYPE_NORMAL
- en: 3.1 Create Azure Data Factory, Azure Storage Account and AWS S3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3.2 Deploy Data Factory Pipeline
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3.3 Run Data Factory pipelines
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3.1 Create Azure Data Factory, Azure Storage Account and AWS S3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this paragraph, the required resources are created.
  prefs: []
  type: TYPE_NORMAL
- en: Follow this [link](https://learn.microsoft.com/en-us/azure/data-factory/quickstart-create-data-factory)
    to create a Azure Data Factory instance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Follow this [link](https://learn.microsoft.com/en-us/azure/storage/common/storage-account-create?tabs=azure-portal)
    to create a Azure Storage account. After Storage account is created, make sure
    that ADF Managed Identity has Blob Storage Contributor Role to the storage account.
    Also create a file system on the storage account
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Follow this [documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/GetStartedWithS3.html)
    to create an S3 bucket and add some files to the bucket
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3.2 Deploy Data Factory Pipeline
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In this paragraph, the pipelines are created in your Azure Data Factory instance.
    The pipelines can be found in git repo below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'There are multiple ways to add the pipelines to you own ADF instance, for instance:'
  prefs: []
  type: TYPE_NORMAL
- en: Fork git repo above to your own repo and add repo to your own ADF instance,
    see this [link](https://learn.microsoft.com/en-us/azure/data-factory/source-control#connect-to-a-git-repository)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use Azure CLI to deploy [ARM template in git repo](https://github.com/rebremer/data-factory-managed-identity-connection-aws-s3/blob/main/test-awsadf-adf/ARMTemplateForFactory.json),
    see this [link](https://learn.microsoft.com/en-us/azure/azure-resource-manager/templates/deploy-cli)
    how to do this
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: (Quick and dirty) Create an empty pipeline named`[1-adf-mi-s3-connection-noakv-nofunc-pl](https://github.com/rebremer/data-factory-managed-identity-connection-aws-s3/blob/main/pipeline/1-adf-mi-s3-connection-noakv-nofunc-pl.json)`
    and `[2-adf-mi-s3-connection-noakv-func-pl2](https://github.com/rebremer/data-factory-managed-identity-connection-aws-s3/blob/main/pipeline/2-adf-mi-s3-connection-noakv-func-pl2.json)`
    , and a linked service called `[AmazonS3_linkedservice.json](https://github.com/rebremer/data-factory-managed-identity-connection-aws-s3/blob/main/linkedService/AmazonS3_linkedservice.json)`
    . Once created, use the corresponding JSON files in the git repo to fill the pipeline
    and linked service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finally, go to parameters of the first 2 pipelines and fill them with you variables
    (the other pipelines won’t be used and are only there for reference), see also
    image below.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3d3fe813842061bcced610ef18a02267.png)'
  prefs: []
  type: TYPE_IMG
- en: 3.2 Successful pipeline creation, filling in parameters
  prefs: []
  type: TYPE_NORMAL
- en: 3.3 Run Data Factory Pipeline
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In this paragraph, the first 2 pipelines are run. Both pipelines use ADF MI
    to get a temporary AWS S3 access token that is used to copy data from AWS S3 to
    Azure Storage. Pipelines can be described as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Pipeline 1: Try to access S3 bucket using ADF MI, parse error message to get
    ADF MI bearer token, use ADF MI bearer token to get temporary AWS S3 tokens, copy
    data from S3 to Azure Storage'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Pipeline 2: Same as pipeline 1, but now an [Azure Function](https://learn.microsoft.com/en-us/azure/azure-functions/create-first-function-vs-code-python?pivots=python-mode-decorators)
    is used to bounce the ADF MI bearer token rather than an S3 error message.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Obviously, pipeline 2 is more enterprise ready, but requires an Azure Function
    with 3 lines of code as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: After pipelines is successfully run, data is copied from S3 to Azure Storage
    using the copy activity, see also image below.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/881f173e1f8990cb2af449d128ff72f3.png)'
  prefs: []
  type: TYPE_IMG
- en: 3.3 Successful pipeline run, copying files from S3 to Azure Storage without
    credentials
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A common challenge for developers is the management of credentials to secure
    communication between services. [Azure managed identities](https://learn.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview)
    eliminate the need for developers to manage these credentials. This can also be
    used to access resource from Azure AD to AWS. In this blog, it is explained how
    Azure Data Factory Managed Identity can be used to access AWS S3, see also overview
    below.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6852075832a91f927a8c912ecd32a9c2.png)'
  prefs: []
  type: TYPE_IMG
- en: 4\. overview — Azure AD managed identity connecting with AWS
  prefs: []
  type: TYPE_NORMAL
