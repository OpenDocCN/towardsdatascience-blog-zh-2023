["```py\nimport numpy as np\nfrom scipy.stats import norm\nfrom matplotlib import pyplot as plt\nfrom scipy.stats import wasserstein_distance\n```", "```py\ndef kld(d1,d2,eps=10^-6):\n    return np.sum(d1*np.log((d1)/(d2)))\n\ndef jsd(d1,d2):\n    return 0.5 * kld(d1,(d1+d2)/2) + 0.5 * kld(d2,(d1+d2)/2)\n```", "```py\nx = np.arange(-40, 40, 0.001)\nq_mean_range = (2,20)\nfkl = []\nbkl = []\njs = []\nem = []\np = norm.pdf(x, 0, 2)\nfor i in range(*q_mean_range):\n    q = norm.pdf(x, i, 2)\n    fkl.append(kld(p,q))\n    bkl.append(kld(q,p))\n    js.append(jsd(p,q))\n    em.append(wasserstein_distance(p,q))\nx = np.arange(*q_mean_range,1)\nf,ax = plt.subplots(2,2,figsize=(10,10))\nax = ax.flatten()\nfor i,(vals,name) in enumerate(zip([fkl,bkl,js,em],['FWD KL','REV KL','JS Divergence','EM Distance'])):\n    ax[i].plot(x,vals)\n    ax[i].set_xlabel('Mean difference')\n    ax[i].set_title(name)\nplt.show()\n```"]