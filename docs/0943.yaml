- en: Using MLflow with ATOM to track all your machine learning experiments without
    additional code
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 MLflow 和 ATOM 跟踪所有机器学习实验，而无需额外的代码
- en: 原文：[https://towardsdatascience.com/using-mlflow-with-atom-to-track-all-your-machine-learning-experiments-without-additional-code-583128687d45?source=collection_archive---------19-----------------------#2023-03-13](https://towardsdatascience.com/using-mlflow-with-atom-to-track-all-your-machine-learning-experiments-without-additional-code-583128687d45?source=collection_archive---------19-----------------------#2023-03-13)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/using-mlflow-with-atom-to-track-all-your-machine-learning-experiments-without-additional-code-583128687d45?source=collection_archive---------19-----------------------#2023-03-13](https://towardsdatascience.com/using-mlflow-with-atom-to-track-all-your-machine-learning-experiments-without-additional-code-583128687d45?source=collection_archive---------19-----------------------#2023-03-13)
- en: Start storing models, parameters, pipelines, data and plots changing only one
    parameter
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开始仅通过更改一个参数来存储模型、参数、管道、数据和图表
- en: '[](https://tvdboom.medium.com/?source=post_page-----583128687d45--------------------------------)[![Marco
    vd Boom](../Images/3fc053efda1c23dd84a6418ded2603ca.png)](https://tvdboom.medium.com/?source=post_page-----583128687d45--------------------------------)[](https://towardsdatascience.com/?source=post_page-----583128687d45--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----583128687d45--------------------------------)
    [Marco vd Boom](https://tvdboom.medium.com/?source=post_page-----583128687d45--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://tvdboom.medium.com/?source=post_page-----583128687d45--------------------------------)[![Marco
    vd Boom](../Images/3fc053efda1c23dd84a6418ded2603ca.png)](https://tvdboom.medium.com/?source=post_page-----583128687d45--------------------------------)[](https://towardsdatascience.com/?source=post_page-----583128687d45--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----583128687d45--------------------------------)
    [Marco vd Boom](https://tvdboom.medium.com/?source=post_page-----583128687d45--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe2091b627921&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-mlflow-with-atom-to-track-all-your-machine-learning-experiments-without-additional-code-583128687d45&user=Marco+vd+Boom&userId=e2091b627921&source=post_page-e2091b627921----583128687d45---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----583128687d45--------------------------------)
    ·6 min read·Mar 13, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F583128687d45&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-mlflow-with-atom-to-track-all-your-machine-learning-experiments-without-additional-code-583128687d45&user=Marco+vd+Boom&userId=e2091b627921&source=-----583128687d45---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe2091b627921&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-mlflow-with-atom-to-track-all-your-machine-learning-experiments-without-additional-code-583128687d45&user=Marco+vd+Boom&userId=e2091b627921&source=post_page-e2091b627921----583128687d45---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----583128687d45--------------------------------)
    ·6 分钟阅读·2023年3月13日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F583128687d45&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-mlflow-with-atom-to-track-all-your-machine-learning-experiments-without-additional-code-583128687d45&user=Marco+vd+Boom&userId=e2091b627921&source=-----583128687d45---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F583128687d45&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-mlflow-with-atom-to-track-all-your-machine-learning-experiments-without-additional-code-583128687d45&source=-----583128687d45---------------------bookmark_footer-----------)![](../Images/aaa875d90610d0e1ab84b89fd7d9e8ba.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F583128687d45&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-mlflow-with-atom-to-track-all-your-machine-learning-experiments-without-additional-code-583128687d45&source=-----583128687d45---------------------bookmark_footer-----------)![](../Images/aaa875d90610d0e1ab84b89fd7d9e8ba.png)'
- en: Photo by [Hans Reniers](https://unsplash.com/@hansreniers?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Hans Reniers](https://unsplash.com/@hansreniers?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: '**Introduction**'
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**介绍**'
- en: The [MLflow Tracking component](https://mlflow.org/docs/latest/tracking.html)
    is an API and UI for logging parameters, code versions, metrics, and output files
    when running your machine learning experiments and for later visualizing the results.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[MLflow Tracking组件](https://mlflow.org/docs/latest/tracking.html)是一个API和UI，用于记录参数、代码版本、指标和输出文件，在运行机器学习实验时用于后续结果的可视化。'
- en: In this story, we’ll explain how to use the [ATOM](https://github.com/tvdboom/ATOM)
    library to easily track your models, parameters, pipelines, data and plots. ATOM
    is an open-source Python package designed to help data scientists with the exploration
    of machine learning pipelines.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本故事中，我们将解释如何使用[ATOM](https://github.com/tvdboom/ATOM)库轻松跟踪你的模型、参数、管道、数据和图表。ATOM是一个开源Python包，旨在帮助数据科学家探索机器学习管道。
- en: '**Note**: This story focuses on using the experiment tracking feature of ATOM.
    Teaching the basics of the library lies outside the scope of this story. Read
    [this other story](/atom-a-python-package-for-fast-exploration-of-machine-learning-pipelines-653956a16e7b)
    if you want a gentle introduction to the library.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**：本故事侧重于使用ATOM的实验跟踪功能。讲解库的基础知识不在本故事范围内。如果你想要一个温和的库介绍，请阅读[这篇其他故事](/atom-a-python-package-for-fast-exploration-of-machine-learning-pipelines-653956a16e7b)。'
- en: Feature overview
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 功能概述
- en: Start tracking your experiments assigning a name to the `[experiment](https://tvdboom.github.io/ATOM/v5.1/API/ATOM/atomclassifier/#atomclassifier-experiment)`
    parameter in *atom’s* constructor. Every model is tracked using a separate run.
    When no backend is configured, the data is stored locally at `./mlruns`. To configure
    the backend, use [mlflow.set_tracking_uri](https://www.mlflow.org/docs/latest/python_api/mlflow.html#mlflow.set_tracking_uri)
    in your notebook or IDE before initializing *atom*. This does not affect the currently
    active run (if one exists), but takes effect for successive runs. Run `mlflow
    ui` on your terminal to open MLflow’s Tracking UI and view it at [http://localhost:5000](http://localhost:5000).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在*atom*的构造函数中为`[experiment](https://tvdboom.github.io/ATOM/v5.1/API/ATOM/atomclassifier/#atomclassifier-experiment)`参数分配名称来开始跟踪实验。每个模型都使用单独的运行进行跟踪。当未配置后端时，数据会存储在`./mlruns`本地。要配置后端，请在初始化*atom*之前，在笔记本或IDE中使用[mlflow.set_tracking_uri](https://www.mlflow.org/docs/latest/python_api/mlflow.html#mlflow.set_tracking_uri)。这不会影响当前活动的运行（如果存在），但会对后续运行生效。在终端运行`mlflow
    ui`以打开MLflow的跟踪UI，并在[http://localhost:5000](http://localhost:5000)查看。
- en: '**Note:** When using ATOM on [Databricks](https://databricks.com/), the experiment’s
    name should include the complete path to the storage, e.g. `/Users/username@domain.com/experiment_name`.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 在[Databricks](https://databricks.com/)上使用ATOM时，实验名称应包含存储的完整路径，例如`/Users/username@domain.com/experiment_name`。'
- en: 'The following elements are tracked:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 跟踪以下元素：
- en: '**Tags**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**标签**'
- en: The runs are automatically tagged with the model’s full name, the [branch](https://tvdboom.github.io/ATOM/latest/user_guide/data_management/#branches)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 运行将自动标记为模型的全名，[分支](https://tvdboom.github.io/ATOM/latest/user_guide/data_management/#branches)
- en: from which the model was trained, and the time it took to fit the model.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 模型训练来源及拟合模型所需时间。
- en: 'Add additional custom tags through the `ht_params` parameter, e.g. `atom.run(["LR",
    "RF"], ht_params={"tags": {"tag1": 1}})`.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '通过`ht_params`参数添加其他自定义标签，例如`atom.run(["LR", "RF"], ht_params={"tags": {"tag1":
    1}})`。'
- en: '**Parameters**'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**参数**'
- en: All parameters used by the estimator at initialization are tracked. Additional
    parameters passed to the fit method are **not** tracked.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 初始化时使用的所有参数都会被跟踪。传递给fit方法的额外参数**不会**被跟踪。
- en: '**Model**'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**模型**'
- en: The model’s estimator is stored as artifact. This option can be switched off
    using *atom’s* `[log_model](https://tvdboom.github.io/ATOM/v5.1/API/ATOM/atomclassifier/#atomclassifier-log_model)`
    attribute, e.g. `atom.log_model = False`.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 模型的估算器被存储为工件。可以通过*atom*的`[log_model](https://tvdboom.github.io/ATOM/v5.1/API/ATOM/atomclassifier/#atomclassifier-log_model)`属性来关闭此选项，例如`atom.log_model
    = False`。
- en: '**Hyperparameter tuning**'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**超参数调整**'
- en: If [hyperparameter tuning](https://tvdboom.github.io/ATOM/latest/user_guide/training/)
    is performed, every trial is tracked as a nested run in the model’s main run.
    This option can be switched off using *atom’s* `[log_ht](https://tvdboom.github.io/ATOM/v5.1/API/ATOM/atomclassifier/#atomclassifier-log_ht)`
    attribute, e.g. `atom.log_ht = False`.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果进行[超参数调整](https://tvdboom.github.io/ATOM/latest/user_guide/training/)，每个试验都会作为模型主运行中的嵌套运行进行跟踪。可以通过*atom*的`[log_ht](https://tvdboom.github.io/ATOM/v5.1/API/ATOM/atomclassifier/#atomclassifier-log_ht)`属性来关闭此选项，例如`atom.log_ht
    = False`。
- en: '**Metrics**'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**指标**'
- en: All metric results are tracked, not only during training, but also when the
    [evaluate](https://tvdboom.github.io/ATOM/v5.1/API/ATOM/atomclassifier/#atomclassifier-evaluate)
    method is called at a later point. Metrics calculated during in-training validation
    are also stored.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 所有指标结果都会被追踪，不仅是在训练过程中，还包括在稍后调用 [evaluate](https://tvdboom.github.io/ATOM/v5.1/API/ATOM/atomclassifier/#atomclassifier-evaluate)
    方法时。在训练验证期间计算的指标也会被存储。
- en: '**Dataset**'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据集**'
- en: The train and test sets used to fit and evaluate the model can be stored as
    `.csv` files to the run’s artifacts. This option can be switched on using *atom’s*
    `[log_data](https://tvdboom.github.io/ATOM/v5.1/API/ATOM/atomclassifier/#atomclassifier-log_data)`
    attribute, e.g. `atom.log_data = True`.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 用于拟合和评估模型的训练和测试集可以作为`.csv`文件存储到运行的工件中。可以使用*atom*的`[log_data](https://tvdboom.github.io/ATOM/v5.1/API/ATOM/atomclassifier/#atomclassifier-log_data)`属性开启此选项，例如`atom.log_data
    = True`。
- en: '**Pipeline**'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**管道**'
- en: The model’s pipeline (returned from the [export_pipeline](https://tvdboom.github.io/ATOM/v5.1/API/ATOM/atomclassifier/#atomclassifier-export_pipeline)
    method) can be stored as an artifact. This option can be switched on using *atom’s*
    `[log_pipeline](https://tvdboom.github.io/ATOM/v5.1/API/ATOM/atomclassifier/#atomclassifier-log_pipeline)`
    attribute, e.g. `atom.log_pipeline = True`.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 模型的管道（由 [export_pipeline](https://tvdboom.github.io/ATOM/v5.1/API/ATOM/atomclassifier/#atomclassifier-export_pipeline)
    方法返回）可以作为一个工件进行存储。可以使用*atom*的`[log_pipeline](https://tvdboom.github.io/ATOM/v5.1/API/ATOM/atomclassifier/#atomclassifier-log_pipeline)`属性开启此选项，例如`atom.log_pipeline
    = True`。
- en: '**Plots**'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**图表**'
- en: By default, plots are stored as `.html` artifacts in all runs corresponding
    to the models that are showed in the plot. If the `filename` parameter is specified,
    they are stored under that name, else the method’s name is used. This option can
    be switched off using *atom's* `[log_plots](https://tvdboom.github.io/ATOM/v5.1/API/ATOM/atomclassifier/#atomclassifier-log_plots)`
    attribute, e.g. `atom.log_plots = False`.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，图表作为`.html`工件存储在所有与图表中显示的模型对应的运行中。如果指定了`filename`参数，则会以该名称存储，否则使用方法的名称。可以使用*atom*的`[log_plots](https://tvdboom.github.io/ATOM/v5.1/API/ATOM/atomclassifier/#atomclassifier-log_plots)`属性关闭此选项，例如`atom.log_plots
    = False`。
- en: Example
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例
- en: The easiest way to fully understand the capabilities is through an example.
    We initialize *atom* the usual way, and specify the `experiment` parameter. The
    name provided here is the name of the mlflow experiment used. If there is no experiment
    with that name, a new one is created.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 了解功能的最简单方法是通过示例。我们按照通常的方式初始化*atom*，并指定`experiment`参数。这里提供的名称是使用的mlflow实验的名称。如果没有该名称的实验，则会创建一个新的。
- en: '[PRE0]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Let’s specify that we want to log the data and pipeline as well. These two options
    are turned off by default.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们指定一下我们也想记录数据和管道。这两个选项默认是关闭的。
- en: '[PRE1]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Train the models the usual way. All selected metrics are logged.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 按照通常的方式训练模型。所有选择的指标都会被记录。
- en: '[PRE2]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now open the UI running `mlflow ui` in the terminal. Every model has its separate
    run.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在在终端中运行`mlflow ui`打开UI。每个模型都有其单独的运行。
- en: '![](../Images/9861571805f468190d944e2bdaba2087.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9861571805f468190d944e2bdaba2087.png)'
- en: 'Per run, *atom* stores:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 每次运行，*atom*会存储：
- en: 'The model’s parameters:'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模型的参数：
- en: '![](../Images/d2e45e6ed3344e261b9795c46a8d14b4.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d2e45e6ed3344e261b9795c46a8d14b4.png)'
- en: 'The metric scores on train and test set:'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 训练集和测试集上的指标分数：
- en: '![](../Images/727d0a5c7955b48be86d6a39128f5ff5.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/727d0a5c7955b48be86d6a39128f5ff5.png)'
- en: 'Predefined tags and custom tags (if specified):'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预定义标签和自定义标签（如果指定）：
- en: '![](../Images/da649ccd7e27ec06d2d0b99f96534659.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/da649ccd7e27ec06d2d0b99f96534659.png)'
- en: Artifacts, which include the estimator and pipeline as pickle files, and the
    train and test sets as csv files.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工件，包括估计器和管道的pickle文件，以及训练和测试集的csv文件。
- en: '![](../Images/da44d4ceaf8af7a6a1648a99cb53dd30.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/da44d4ceaf8af7a6a1648a99cb53dd30.png)'
- en: Additional metrics (calculated with the [evaluate](https://tvdboom.github.io/ATOM/latest/API/ATOM/atomclassifier/#atomclassifier-evaluate)
    method) and plots where the model is displayed are also added to the run.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 额外的指标（使用 [evaluate](https://tvdboom.github.io/ATOM/latest/API/ATOM/atomclassifier/#atomclassifier-evaluate)
    方法计算）和显示模型的图表也会被添加到运行中。
- en: '[PRE3]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/72bf68d5eb28078ac84a62ee1fb20853.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/72bf68d5eb28078ac84a62ee1fb20853.png)'
- en: '[PRE4]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/7cda8e9b74f1ea288bc74e33dec4f670.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7cda8e9b74f1ea288bc74e33dec4f670.png)'
- en: '**Hyperparameter tuning**'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**超参数调优**'
- en: When running [hyperparameter tuning](https://tvdboom.github.io/ATOM/latest/user_guide/training/#hyperparameter-tuning),
    every trial of the study is added as nested run to the main run.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行 [超参数调优](https://tvdboom.github.io/ATOM/latest/user_guide/training/#hyperparameter-tuning)
    时，研究的每个试验都会作为嵌套运行添加到主运行中。
- en: '[PRE5]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/acfc4b3b3d853c01a15eb617a03e9864.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/acfc4b3b3d853c01a15eb617a03e9864.png)'
- en: The nested runs are named `<model_name> — <trial_number>`. Their metric score
    is not on train nor test, but on the validation set instead, which is the subset
    of the training set used to validate this specific trial (the rest of the set
    was used to fit the estimator). The test set is not used during hyperparameter
    tuning to avoid data leakage.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌套运行的名称为 `<model_name> — <trial_number>`。它们的指标分数不是在训练集或测试集上，而是在验证集上，验证集是用于验证该特定试验的训练集子集（其余部分用于拟合估计器）。测试集在超参数调整期间不会使用，以避免数据泄露。
- en: '**Note:** The data and pipeline are never stored within nested runs.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 数据和管道不会存储在嵌套运行中。'
- en: '**In-training validation**'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练中的验证**'
- en: Some of the [models](https://tvdboom.github.io/ATOM/v5.1/user_guide/models/#predefined-models)
    allow [in-training validation](https://tvdboom.github.io/ATOM/latest/user_guide/training/#in-training-validation).
    This means that the estimator is evaluated (using only the **first metric**) on
    the train and test set after every round of the training (a round can be an iteration
    for linear models or an added tree for boosted tree models). The validation scores
    are stored in the `evals` metric, which is also tracked in mlflow.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 一些 [模型](https://tvdboom.github.io/ATOM/v5.1/user_guide/models/#predefined-models)
    允许 [训练中的验证](https://tvdboom.github.io/ATOM/latest/user_guide/training/#in-training-validation)。这意味着在每轮训练后（对于线性模型是一轮迭代，对于提升树模型是增加的一棵树），估计器在训练集和测试集上使用
    **第一个指标** 进行评估。验证分数存储在 `evals` 指标中，也在 mlflow 中跟踪。
- en: '![](../Images/91ea4276c31bf5987c0891a3b8bf64a8.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/91ea4276c31bf5987c0891a3b8bf64a8.png)'
- en: '**Note:** The `evals` metric is not calculated in nested runs.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** `evals` 指标在嵌套运行中不会计算。'
- en: DAGsHub integration
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DAGsHub 集成
- en: ATOM has a build-in integration with [DAGsHub](https://dagshub.com/), a web
    platform based on open source tools, optimized for data science and oriented towards
    the open source community. To store your mlflow experiments in a DAGsHub repo,
    type `dagshub:<experiment_name>` in the `experiment` parameter (instead of just
    the experiment's name). If the repo does not already exist, a new public repo
    is created.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: ATOM 内置了与 [DAGsHub](https://dagshub.com/) 的集成，这是一种基于开源工具的数据科学优化平台，面向开源社区。要将你的
    mlflow 实验存储在 DAGsHub 仓库中，请在 `experiment` 参数中输入 `dagshub:<experiment_name>`（而不仅仅是实验名称）。如果仓库不存在，将创建一个新的公共仓库。
- en: 'A minimalistic example could look like this:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简约的示例如下：
- en: '[PRE6]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/d607afd0750dc1ea4684d207cb4423ba.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d607afd0750dc1ea4684d207cb4423ba.png)'
- en: '**Note:** If you are logged into your DAGsHub account when running atom’s constructor,
    a page on your web browser is automatically opened to give access permissions.
    If not, read [here](https://dagshub.com/docs/integration_guide/mlflow_tracking/#3-set-up-your-credentials)
    how to set up your DAGsHub credentials.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 如果在运行 atom 的构造函数时已登录到你的 DAGsHub 账户，浏览器页面会自动打开以授予访问权限。如果没有，请阅读 [这里](https://dagshub.com/docs/integration_guide/mlflow_tracking/#3-set-up-your-credentials)
    了解如何设置你的 DAGsHub 凭据。'
- en: Conclusion
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: We have shown how easy it is to track your machine learning experiments using
    the ATOM library. With minimal code changes, it’s now possible to store the estimator,
    parameters, pipelines, data and plots for every model trained.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们展示了使用 ATOM 库跟踪机器学习实验的简便性。只需最少的代码更改，现在可以存储每个训练模型的估计器、参数、管道、数据和图表。
- en: For further information about ATOM, have a look at the package’s [documentation](https://tvdboom.github.io/ATOM/).
    For bugs or feature requests, don’t hesitate to open an issue on [GitHub](https://github.com/tvdboom/ATOM)
    or send me an email.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 ATOM 的更多信息，请查看软件包的 [文档](https://tvdboom.github.io/ATOM/)。对于错误或功能请求，请随时在 [GitHub](https://github.com/tvdboom/ATOM)
    上提出问题或发邮件给我。
- en: 'Related stories:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 相关故事：
- en: '[https://towardsdatascience.com/atom-a-python-package-for-fast-exploration-of-machine-learning-pipelines-653956a16e7b](/atom-a-python-package-for-fast-exploration-of-machine-learning-pipelines-653956a16e7b)'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://towardsdatascience.com/atom-a-python-package-for-fast-exploration-of-machine-learning-pipelines-653956a16e7b](/atom-a-python-package-for-fast-exploration-of-machine-learning-pipelines-653956a16e7b)'
- en: '[https://towardsdatascience.com/how-to-test-multiple-machine-learning-pipelines-with-just-a-few-lines-of-python-1a16cb4686d](/how-to-test-multiple-machine-learning-pipelines-with-just-a-few-lines-of-python-1a16cb4686d)'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://towardsdatascience.com/how-to-test-multiple-machine-learning-pipelines-with-just-a-few-lines-of-python-1a16cb4686d](/how-to-test-multiple-machine-learning-pipelines-with-just-a-few-lines-of-python-1a16cb4686d)'
- en: '[https://towardsdatascience.com/from-raw-data-to-web-app-deployment-with-atom-and-streamlit-d8df381aa19f](/from-raw-data-to-web-app-deployment-with-atom-and-streamlit-d8df381aa19f)'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://towardsdatascience.com/from-raw-data-to-web-app-deployment-with-atom-and-streamlit-d8df381aa19f](/from-raw-data-to-web-app-deployment-with-atom-and-streamlit-d8df381aa19f)'
- en: '[https://towardsdatascience.com/exploration-of-deep-learning-pipelines-made-easy-e1cf649892bc](/exploration-of-deep-learning-pipelines-made-easy-e1cf649892bc)'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://towardsdatascience.com/exploration-of-deep-learning-pipelines-made-easy-e1cf649892bc](/exploration-of-deep-learning-pipelines-made-easy-e1cf649892bc)'
- en: '[https://towardsdatascience.com/deep-feature-synthesis-vs-genetic-feature-generation-6ba4d05a6ca5](/deep-feature-synthesis-vs-genetic-feature-generation-6ba4d05a6ca5)'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://towardsdatascience.com/deep-feature-synthesis-vs-genetic-feature-generation-6ba4d05a6ca5](/deep-feature-synthesis-vs-genetic-feature-generation-6ba4d05a6ca5)'
- en: '[https://towardsdatascience.com/from-raw-text-to-model-prediction-in-under-30-lines-of-python-32133d853407](/from-raw-text-to-model-prediction-in-under-30-lines-of-python-32133d853407)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://towardsdatascience.com/from-raw-text-to-model-prediction-in-under-30-lines-of-python-32133d853407](/from-raw-text-to-model-prediction-in-under-30-lines-of-python-32133d853407)'
- en: '[https://towardsdatascience.com/how-to-make-40-interactive-plots-to-analyze-your-machine-learning-pipeline-ee718afd7bc2](/how-to-make-40-interactive-plots-to-analyze-your-machine-learning-pipeline-ee718afd7bc2)'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://towardsdatascience.com/how-to-make-40-interactive-plots-to-analyze-your-machine-learning-pipeline-ee718afd7bc2](/how-to-make-40-interactive-plots-to-analyze-your-machine-learning-pipeline-ee718afd7bc2)'
- en: '[https://towardsdatascience.com/machine-learning-on-multioutput-datasets-a-quick-guide-ebeba81b97d1](/machine-learning-on-multioutput-datasets-a-quick-guide-ebeba81b97d1)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://towardsdatascience.com/machine-learning-on-multioutput-datasets-a-quick-guide-ebeba81b97d1](/machine-learning-on-multioutput-datasets-a-quick-guide-ebeba81b97d1)'
- en: 'References:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 参考资料：
- en: All plots and images (except the featured image) are created by the author.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有图表和图片（除特色图片外）均由作者创建。
