- en: Effective Unit Testing in Python — with Examples
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/effective-unit-testing-in-python-with-examples-3860d7fac7cd?source=collection_archive---------2-----------------------#2023-10-01](https://towardsdatascience.com/effective-unit-testing-in-python-with-examples-3860d7fac7cd?source=collection_archive---------2-----------------------#2023-10-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[](https://medium.com/@christopher_karg?source=post_page-----3860d7fac7cd--------------------------------)[![Christopher
    Karg](../Images/9d163d59e0c3167732f55d497caf9db2.png)](https://medium.com/@christopher_karg?source=post_page-----3860d7fac7cd--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3860d7fac7cd--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3860d7fac7cd--------------------------------)
    [Christopher Karg](https://medium.com/@christopher_karg?source=post_page-----3860d7fac7cd--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5fbda6d16c39&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feffective-unit-testing-in-python-with-examples-3860d7fac7cd&user=Christopher+Karg&userId=5fbda6d16c39&source=post_page-5fbda6d16c39----3860d7fac7cd---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----3860d7fac7cd--------------------------------)
    ·16 min read·Oct 1, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F3860d7fac7cd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feffective-unit-testing-in-python-with-examples-3860d7fac7cd&user=Christopher+Karg&userId=5fbda6d16c39&source=-----3860d7fac7cd---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3860d7fac7cd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feffective-unit-testing-in-python-with-examples-3860d7fac7cd&source=-----3860d7fac7cd---------------------bookmark_footer-----------)![](../Images/4d3e4fc2d2cb528b00e0e5676f4becb5.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Source: [https://www.pexels.com/photo/red-vintage-car-stopped-on-the-crossroads-15706251/](https://www.pexels.com/photo/red-vintage-car-stopped-on-the-crossroads-15706251/)'
  prefs: []
  type: TYPE_NORMAL
- en: My next article is on the subject of unit-testing in Python. It is a topic that
    I found is often overlooked in lessons, books and online tutorials. It is however
    a crucial skill when creating production-level, bullet-proof code. The scenarios
    in this article are somewhat skewed toward the world of data/data science. As
    such, my opinion of an ‘effective’ unit-test may differ to someone coming from
    a different background.
  prefs: []
  type: TYPE_NORMAL
- en: The ultimate aim of writing unit-tests is to prevent bugs being pushed into
    production.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The result of which leads to many headaches and time to resolve. Different companies
    have different testing methodologies. Some projects I have worked on (specifically
    web-scraping projects) have not required unit-testing per se but can benefit from
    implementing python’s [inbuilt logging functionality](https://docs.python.org/3/library/logging.html)
    and try/except handling. This article only covers the practical implementations
    of [unit-testing](https://docs.python.org/3/library/unittest.html?highlight=unittest#module-unittest)
    along with examples and links to code that are available in [my GitHub repo](https://github.com/CMaxK/unittesting_examples).
    Feel free to clone it and have a play with some of the testing functions — instructions
    on how to do so can be found in the README of the repo. The repo is split into
    Easy, Medium and Hard categories, each building upon the concepts covered in the
    previous category.
  prefs: []
  type: TYPE_NORMAL
