- en: Simulating Physical Systems with Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/simulating-physical-systems-with-python-dd5751e80b5c?source=collection_archive---------4-----------------------#2023-03-07](https://towardsdatascience.com/simulating-physical-systems-with-python-dd5751e80b5c?source=collection_archive---------4-----------------------#2023-03-07)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A Must-Have Skill for any Engineer or Scientist
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@nhemenway2013?source=post_page-----dd5751e80b5c--------------------------------)[![Nick
    Hemenway](../Images/a38cade9fe4f81c7e43e5d3155a21d78.png)](https://medium.com/@nhemenway2013?source=post_page-----dd5751e80b5c--------------------------------)[](https://towardsdatascience.com/?source=post_page-----dd5751e80b5c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----dd5751e80b5c--------------------------------)
    [Nick Hemenway](https://medium.com/@nhemenway2013?source=post_page-----dd5751e80b5c--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7db1695b5485&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsimulating-physical-systems-with-python-dd5751e80b5c&user=Nick+Hemenway&userId=7db1695b5485&source=post_page-7db1695b5485----dd5751e80b5c---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----dd5751e80b5c--------------------------------)
    ·20 min read·Mar 7, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fdd5751e80b5c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsimulating-physical-systems-with-python-dd5751e80b5c&user=Nick+Hemenway&userId=7db1695b5485&source=-----dd5751e80b5c---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fdd5751e80b5c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsimulating-physical-systems-with-python-dd5751e80b5c&source=-----dd5751e80b5c---------------------bookmark_footer-----------)![](../Images/379eaf6912584be658e3fa37c4f517b0.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [NASA](https://unsplash.com/@nasa?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: The ability to simulate the behavior of a physical system has incredible utility
    in nearly all fields of science and engineering. Simulations allow us to understand
    the time evolution of a system, and they do so in a manner that cannot typically
    be paralleled (even by physical testing). Whereas physical testing can be time
    consuming, expensive, and possibly dangerous, simulations are fast, cheap, and
    don’t pose any risks of equipment damage or bodily injury. Experiments are also
    limited in the sense that they only provide you access to data that you can actually
    measure — unmeasured system states will either not be available, or will have
    to be estimated in post processing. Simulations on the other hand, act as windows
    that allow us peer into the entire internal state of a system. This ability to
    essentially look into the inner workings of a system can provide invaluable design
    insight in engineering applications.
  prefs: []
  type: TYPE_NORMAL
- en: The intent of this article is to provide a quick primer on how to get started
    with simulating physical systems in the Python programming language. To accomplish
    this, we’re going to walk through a comprehensive example of how to simulate a
    bouncing ball. I’ve specifically chosen this system because it’s intuitive and
    not too difficult, but still has some nuances…
  prefs: []
  type: TYPE_NORMAL
