- en: How to Use Map Functions for Data Science in R
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-to-use-map-functions-for-data-science-in-r-8180c2ed6d79?source=collection_archive---------10-----------------------#2023-02-02](https://towardsdatascience.com/how-to-use-map-functions-for-data-science-in-r-8180c2ed6d79?source=collection_archive---------10-----------------------#2023-02-02)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Learn powerful functional programming tools from the tidyverse
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://roryspanton.medium.com/?source=post_page-----8180c2ed6d79--------------------------------)[![Rory
    Spanton](../Images/6c35a3de7cb516aac09bc5cf417a6c70.png)](https://roryspanton.medium.com/?source=post_page-----8180c2ed6d79--------------------------------)[](https://towardsdatascience.com/?source=post_page-----8180c2ed6d79--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----8180c2ed6d79--------------------------------)
    [Rory Spanton](https://roryspanton.medium.com/?source=post_page-----8180c2ed6d79--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F39501aa8ce39&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-use-map-functions-for-data-science-in-r-8180c2ed6d79&user=Rory+Spanton&userId=39501aa8ce39&source=post_page-39501aa8ce39----8180c2ed6d79---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----8180c2ed6d79--------------------------------)
    ·7 min read·Feb 2, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8180c2ed6d79&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-use-map-functions-for-data-science-in-r-8180c2ed6d79&user=Rory+Spanton&userId=39501aa8ce39&source=-----8180c2ed6d79---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8180c2ed6d79&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-use-map-functions-for-data-science-in-r-8180c2ed6d79&source=-----8180c2ed6d79---------------------bookmark_footer-----------)![](../Images/7814864921e31d3a070fa03387a45857.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Z](https://unsplash.com/@dead____artist?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: All data scientists need to repeat code. Whether you’re fitting a model to multiple
    datasets or changing many values at once, running the same code many times over
    is essential.
  prefs: []
  type: TYPE_NORMAL
- en: There are many ways to repeat code. But while most programmers use loops, there
    are more succinct, readable, and efficient alternatives. Enter, the `map` family
    of functions from the purrr package.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, I’ll explain what mapping means, and how to use the `map`,
    `map2`, and `pmap` functions from the [purrr package](https://purrr.tidyverse.org/)
    in R.
  prefs: []
  type: TYPE_NORMAL
- en: What is “Mapping”, and How is it Done in R?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The kind of mapping that the purrr package does isn’t the geographical type
    that most people are familiar with. R has great tools for geospatial analysis,
    but that’s not what we’re talking about here.
  prefs: []
  type: TYPE_NORMAL
- en: “[Mapping](https://en.wikipedia.org/wiki/Map_(higher-order_function))” is a
    specialised term in programming that refers to applying a function repeatedly
    across a set of arguments.
  prefs: []
  type: TYPE_NORMAL
- en: We can use a simple example to understand this. Let’s say we have a list, with
    each element containing 100 numbers. If we want to calculate the mean of each
    set of numbers, we can use `map` to do this in a straightforward way.
  prefs: []
  type: TYPE_NORMAL
