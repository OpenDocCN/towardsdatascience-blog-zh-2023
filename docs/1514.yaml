- en: Using Binomial Distribution in Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Python 中使用二项分布
- en: 原文：[https://towardsdatascience.com/using-binomial-distribution-in-python-c9002ac2a424?source=collection_archive---------6-----------------------#2023-05-03](https://towardsdatascience.com/using-binomial-distribution-in-python-c9002ac2a424?source=collection_archive---------6-----------------------#2023-05-03)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/using-binomial-distribution-in-python-c9002ac2a424?source=collection_archive---------6-----------------------#2023-05-03](https://towardsdatascience.com/using-binomial-distribution-in-python-c9002ac2a424?source=collection_archive---------6-----------------------#2023-05-03)
- en: '*Exploring the binomial distribution in Python: understanding probability calculations
    for coin flips with different methods*'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*在 Python 中探索二项分布：了解不同方法下的硬币投掷概率计算*'
- en: '[](https://nathanrosidi.medium.com/?source=post_page-----c9002ac2a424--------------------------------)[![Nathan
    Rosidi](../Images/f500246a4d2fb080a73f6ef740c226d2.png)](https://nathanrosidi.medium.com/?source=post_page-----c9002ac2a424--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c9002ac2a424--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c9002ac2a424--------------------------------)
    [Nathan Rosidi](https://nathanrosidi.medium.com/?source=post_page-----c9002ac2a424--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://nathanrosidi.medium.com/?source=post_page-----c9002ac2a424--------------------------------)[![Nathan
    Rosidi](../Images/f500246a4d2fb080a73f6ef740c226d2.png)](https://nathanrosidi.medium.com/?source=post_page-----c9002ac2a424--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c9002ac2a424--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c9002ac2a424--------------------------------)
    [Nathan Rosidi](https://nathanrosidi.medium.com/?source=post_page-----c9002ac2a424--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fab636cbf3611&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-binomial-distribution-in-python-c9002ac2a424&user=Nathan+Rosidi&userId=ab636cbf3611&source=post_page-ab636cbf3611----c9002ac2a424---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c9002ac2a424--------------------------------)
    ·9 min read·May 3, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc9002ac2a424&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-binomial-distribution-in-python-c9002ac2a424&user=Nathan+Rosidi&userId=ab636cbf3611&source=-----c9002ac2a424---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fab636cbf3611&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-binomial-distribution-in-python-c9002ac2a424&user=Nathan+Rosidi&userId=ab636cbf3611&source=post_page-ab636cbf3611----c9002ac2a424---------------------post_header-----------)
    发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c9002ac2a424--------------------------------)
    ·9 分钟阅读·2023年5月3日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc9002ac2a424&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-binomial-distribution-in-python-c9002ac2a424&user=Nathan+Rosidi&userId=ab636cbf3611&source=-----c9002ac2a424---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc9002ac2a424&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-binomial-distribution-in-python-c9002ac2a424&source=-----c9002ac2a424---------------------bookmark_footer-----------)![](../Images/08226f00764e48335b339b2e6877e61f.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc9002ac2a424&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-binomial-distribution-in-python-c9002ac2a424&source=-----c9002ac2a424---------------------bookmark_footer-----------)![](../Images/08226f00764e48335b339b2e6877e61f.png)'
- en: Photo by [Joshua Hoehne](https://unsplash.com/@mrthetrain?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Joshua Hoehne](https://unsplash.com/@mrthetrain?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: In today’s article, I’ll show you how to apply statistics concepts, such as
    probability, in Python code. As a showcase, I’ll use the statistic interview question
    from Goldman Sachs and show you different ways to calculate the binomial distribution
    in Python.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在今天的文章中，我将向你展示如何在 Python 代码中应用统计学概念，如概率。作为示例，我将使用高盛的统计面试问题，并展示在 Python 中计算二项分布的不同方法。
- en: I also made a video tutorial on the same topic (and the same question), so feel
    free to use it to make your life easier.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我还制作了一个关于同一主题（和相同问题）的免费视频教程，你可以随意使用它来简化你的工作。
- en: In this article, we will examine and solve the probability question asked by
    Goldman Sachs in an interview by using different approaches in Python.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们将通过使用不同的 Python 方法来检验和解决高盛面试中提出的概率问题。
- en: Why Are Probability and Statistics Important in Data Science?
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么概率和统计在数据科学中很重要？
- en: '![](../Images/4fe9dd85392dcb85d852d1f2681cc99e.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4fe9dd85392dcb85d852d1f2681cc99e.png)'
- en: Image by author
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Probability and statistics are two branches of mathematics used extensively
    in data science.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 概率和统计是数据科学中广泛使用的两个数学分支。
- en: '**Probability** is the study of random events and the likelihood of them happening.
    It is used to model uncertainty in many real-world situations and is fundamental
    to statistical inference.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**概率**是研究随机事件及其发生可能性的学科。它用于建模许多现实世界中的不确定性，并且是统计推断的基础。'
- en: The study of data collection, analysis, and evaluation is called **statistics**.
    It includes using mathematical methods to summarize and draw conclusions from
    data.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 数据收集、分析和评估的研究称为**统计学**。它包括使用数学方法总结和得出数据结论。
- en: Probability and statistics are used in data science to **analyze data, make
    predictions, and inform decision-making**. They are essential for **understanding
    complex systems’ behavior and identifying patterns and trends in data**.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 概率和统计在数据科学中用于**分析数据、进行预测和提供决策支持**。它们对于**理解复杂系统的行为和识别数据中的模式与趋势**至关重要。
- en: 'Probability Interview Question: Coin Flip Prediction'
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概率面试问题：硬币抛掷预测
- en: '***21 Unbiased Coins***'
  id: totrans-20
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '***21枚公平硬币***'
- en: ''
  id: totrans-21
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '***There are 21 unbiased coins. Each of them flipped. What is the probability
    of getting even number of heads?***'
  id: totrans-22
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '***有21枚公平硬币。每一枚都被抛掷。得到偶数个正面的概率是多少？***'
- en: Goldman Sachs is a global investment bank and provider of financial services,
    established in 1869\. The company offers various financial services to corporations,
    governments, and individuals. It is one of the largest investment banks in the
    world and is headquartered in New York City.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 高盛是全球领先的投资银行及金融服务提供商，成立于1869年。该公司向企业、政府和个人提供各种金融服务，是世界上最大的投资银行之一，总部位于纽约市。
- en: This interview question asks you to determine the probability of getting an
    even number of heads when 21 unbiased coins are flipped.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这个面试问题要求你确定在抛掷21枚公平硬币时，得到偶数个正面的概率。
- en: An unbiased coin has a 50/50 chance of landing on either heads or tails.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 一个公平的硬币有50/50的机会落在正面或反面。
- en: When flipping multiple coins, possible outcomes can quickly become very large.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当抛掷多个硬币时，可能的结果会迅速变得非常庞大。
- en: To solve this question, we need to use the concept of binomial distribution.
    Let’s see what it is.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 要解决这个问题，我们需要使用二项分布的概念。让我们看看它是什么。
- en: Binomial Distribution in Python
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python中的二项分布
- en: '![](../Images/a720939121810ecef3a1fdb542b2dfdb.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a720939121810ecef3a1fdb542b2dfdb.png)'
- en: Image by author
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: The binomial distribution is a probability distribution that can be used to
    describe **the number of successful or unsuccessful outcomes in a series of events,
    which must be independent of each other**.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 二项分布是一种概率分布，可以用来描述**一系列事件中成功或失败的次数，这些事件必须相互独立**。
- en: It is used when there are only two possible outcomes, like heads or tails, and
    the probability of success is the same for each trial.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 当只有两种可能的结果时，比如正面或反面，并且每次试验的成功概率相同，便会使用它。
- en: 'The trials must meet **two conditions**:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 试验必须满足**两个条件**：
- en: They must have only two possible outcomes (heads or tails/success or failure),
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它们必须只有两个可能的结果（正面或反面/成功或失败），
- en: The probability of success must be the same for each trial.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每次试验的成功概率必须相同。
- en: When flipping coins, **success** can be defined as **getting heads**, and **failure**
    can be defined as **getting tails**.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 当抛硬币时，**成功**可以定义为**得到正面**，**失败**可以定义为**得到反面**。
- en: To find the probability of getting an even number of heads when flipping 21
    coins, we need to calculate the probability of getting 0, 2, 4, 6, 8, 10, 12,
    14, 16, 18, or 20 heads.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 要找出抛掷21枚硬币时得到偶数个正面的概率，我们需要计算得到0、2、4、6、8、10、12、14、16、18或20个正面的概率。
- en: 'We will do this by using the binomial distribution:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过使用二项分布来解决这个问题：
- en: '![](../Images/8b58c0ab735d93d43421545044c54b33.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8b58c0ab735d93d43421545044c54b33.png)'
- en: 'It means the following:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着：
- en: P(X = k) — The probability of obtaining **k** successful outcomes in a total
    of **n** independent trials.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: P(X = k) — 在**n**次独立试验中获得**k**次成功结果的概率。
- en: n — The number of trials. (In this case, 21.)
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: n — 试验次数。（在本例中为21。）
- en: k — The number of successes. (In this case, heads.)
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: k — 成功的次数。（在本例中为正面。）
- en: p — The chance that a trial is successful. (In this case, 0.5)
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: p — 试验成功的概率。（在本例中为0.5）
- en: $\binom{n}{k} $ — The number of ways **k** successes can be chosen from a total
    of **n** independent trials.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: $\binom{n}{k} $ — 从n次独立试验中选择k次成功的方法数量。
- en: 'Manual Calculation: Coin Flip Prediction'
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 手动计算：硬币翻转预测
- en: We can plug in the values and calculate the probability for each possible even
    number of heads.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以插入值并计算每个可能的偶数个头的概率。
- en: 'Let’s first do it manually with the following values:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先手动进行以下值的计算：
- en: n = 21 (number of trials)
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: n = 21（试验次数）
- en: p = 0.5 (probability of success)
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: p = 0.5（成功的概率）
- en: q = 1 — p = 0.5 (probability of failure)
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: q = 1 — p = 0.5（失败的概率）
- en: Here’s the calculation
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这是计算结果
- en: '![](../Images/445ebe76be13caab8804101121d87a3f.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/445ebe76be13caab8804101121d87a3f.png)'
- en: What is the meaning of these calculations? For instance, let’s look at P(18).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这些计算的含义是什么？例如，让我们看看P(18)。
- en: The formula means the probability of getting 18 heads when flipping a coin 21
    times, which is 0,06341934204101562%. This is a little above 6 out of 10.000.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 公式意味着在21次抛硬币时得到18个正面的概率，即0.06341934204101562%。这略高于10000次中的6次。
- en: In the context of the interview question, when you flip 21 coins 10.000 times,
    you’ll probably get 18 heads six times. It is a slim probability, as you see.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在面试问题的背景下，当您抛掷21枚硬币10000次时，您可能会六次得到18个正面。这是一个罕见的概率，正如您所见。
- en: Here you can see the probability distribution of flipping 21 coins with an even
    number of heads based on our calculation.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以看到基于我们的计算，抛掷21枚硬币时偶数个正面的概率分布。
- en: '![](../Images/27e31f51de24e30504b3920a1b558184.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/27e31f51de24e30504b3920a1b558184.png)'
- en: Image by author
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: 'To get the answer to the interview question, we need to add up all the probabilities:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 要回答面试问题，我们需要将所有概率相加：
- en: '![](../Images/228c29ca62304eb4a6f71422fe96b245.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/228c29ca62304eb4a6f71422fe96b245.png)'
- en: 'Plug in all the individual probabilities we calculated and you get:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 将我们计算的所有单个概率插入，您会得到：
- en: '![](../Images/90e7652bb6c3a3c49664f982a63d8e9c.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/90e7652bb6c3a3c49664f982a63d8e9c.png)'
- en: Now, let’s implement this calculation by using the **math library** in Python
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用Python中的**math库**实现此计算
- en: 'Python Calculation: Coin Flip Prediction'
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python 计算：硬币翻转预测
- en: Using the math Library
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用math库
- en: We can implement the binomial distribution of getting an even number of heads
    in 21 flips of unbiased coins using the math library in Python.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用Python中的math库实现在21次抛硬币中获得偶数个头的二项分布。
- en: To do this, we can use a **for loop** to iterate over every even number of heads
    that can be obtained in 21 flips of an unbiased coin.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们可以使用**for loop**来迭代21次抛硬币中可获得的每个偶数个头。
- en: For each value of **i** in the range 0 to 22 (exclusive), with a step of 2,
    we can calculate the corresponding probability of getting **i heads** using the
    binomial distribution formula.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 对于范围内的每个i值，从0到22（不包括），步长为2，我们可以使用二项分布公式计算得到i个头的对应概率。
- en: Inside the loop, we can first calculate the number of ways to choose **i heads**
    out of 21 flips using the **math.comb()** function.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在循环内，我们可以首先使用**math.comb()**函数计算出21次翻转中获得i个头的方式数量。
- en: We can then calculate the probability of getting exactly **i heads** in 21 flips
    of an unbiased coin, which is **(1/2)**21**. Finally, we can multiply the two
    values to obtain the probability of getting exactly **i heads** in 21 flips and
    store it in a list called probabilities.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以计算在21次抛硬币中获得恰好i个头的概率，即**(1/2)**21**。最后，我们可以将这两个值相乘，以获取在21次抛硬币中获得恰好i个头的概率，并将其存储在名为probabilities的列表中。
- en: We can use another **for loop** to print the probability of getting each even
    number of heads in the list probabilities.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用另一个**for loop**来打印概率列表中每个偶数个头的概率。
- en: After the loop finishes, we can compute the sum of all the probabilities stored
    in the list probabilities using the **sum()** function and print the total probability
    of getting an even number of heads in 21 flips.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 循环结束后，我们可以使用**sum()**函数计算存储在列表probabilities中的所有概率的总和，并打印在21次翻转中获得偶数个头的总概率。
- en: Here’s the code.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是代码。
- en: '[PRE0]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Now, let’s see the output.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看一下输出。
- en: '![](../Images/aeb0125d10fed67b485e4512cb23e11c.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/aeb0125d10fed67b485e4512cb23e11c.png)'
- en: In the earlier calculation, we manually calculated the probability of getting
    an even number of heads in 21 flips using the binomial distribution formula.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在早期计算中，我们使用二项分布公式手动计算了21次抛硬币得到偶数个正面的概率。
- en: This involved calculating the probability of getting 0, 2, 4, 6, 8, 10, 12,
    14, 16, 18, and 20 heads separately, which can be time-consuming.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这涉及到单独计算0、2、4、6、8、10、12、14、16、18和20个正面的概率，这可能非常耗时。
- en: On the other hand, the code we just wrote using the math library allowed us
    to calculate all these probabilities in just a few lines of code.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，我们刚刚使用数学库编写的代码允许我们仅用几行代码计算所有这些概率。
- en: This approach saves us a lot of time and effort, especially if we need to calculate
    the probabilities of getting more outcomes or if we need to repeat the calculation
    for a larger number of trials.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法节省了我们大量的时间和精力，特别是当我们需要计算更多结果的概率或需要对更多试验进行重复计算时。
- en: But we have one more way to implement this, and it’s even faster.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 但我们还有一种实现方式，它甚至更快。
- en: Using the SciPy Library
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用SciPy库
- en: This time, we will use the pre-built function to calculate the probability.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这一次，我们将使用预构建的函数来计算概率。
- en: In the following code, we first import the **binom()** function from the **scipy.stats
    module**.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下代码中，我们首先从**scipy.stats模块**中导入**binom()**函数。
- en: We then define the binomial distribution with **n trials** and **probability**
    p of success using the **binom()** function.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们使用**binom()**函数定义具有**n次试验**和**成功概率**p的二项分布。
- en: We calculate the probability of getting an even number of heads (0, 2, 4, …,
    20) using the **pmf()** method of the binom distribution.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用**pmf()**方法计算得到偶数个正面（0、2、4、…、20）的概率。
- en: The **pmf() method** returns the probability mass function (PMF) of the distribution
    for each value in the given range.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**pmf()方法**返回给定范围内每个值的分布概率质量函数（PMF）。'
- en: We then use another **for loop** to print the probability of getting each even
    number of heads in the list even_probs.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们使用另一个**for loop**来打印列表even_probs中每个偶数个正面的概率。
- en: Finally, we calculate the total probability of getting an even number of heads
    in 21 flips by summing up the probabilities in the list **even_probs**.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们通过对列表**even_probs**中的概率进行求和来计算21次抛硬币得到偶数个正面的总概率。
- en: Using the scipy library to calculate the binomial distribution provides a more
    efficient and convenient calculation method. It allows us to define and calculate
    the distribution in just a few lines of code.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 使用scipy库计算二项分布提供了一种更高效、更方便的计算方法。它允许我们用几行代码定义和计算分布。
- en: Here is the code.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是代码。
- en: '[PRE1]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Here is the output.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是输出结果。
- en: '![](../Images/588f1a02cbf709b7062ef2141d8084e9.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/588f1a02cbf709b7062ef2141d8084e9.png)'
- en: If you compare the results obtained from the two Python methods, you may notice
    that they are not exactly the same.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你比较两种Python方法得到的结果，你可能会注意到它们并不完全相同。
- en: Why are the Results (Slightly) Different?
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么结果（略微）不同？
- en: The difference between the SciPy and math calculations is due to floating-point
    precision errors.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: SciPy和数学计算之间的差异是由于浮点精度误差造成的。
- en: In computer programming, floating-point numbers are represented in a limited
    number of bits, which can cause a loss of precision when performing calculations.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算机编程中，浮点数以有限的位数表示，这可能会导致计算时精度丢失。
- en: This is why we are getting slightly different values for the probabilities of
    getting an even number of heads when comparing the results of the two methods.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么当比较两种方法的结果时，我们得到的偶数个正面的概率略有不同。
- en: Both methods provide a good approximation of the true probability, and the difference
    between the two is negligible for most practical purposes.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 两种方法都提供了对真实概率的良好近似，而这两者之间的差异对于大多数实际应用来说是微不足道的。
- en: If you work on longer scripts and plan to make longer calculations, plus you
    have limited computational power, working with SciPy is more efficient and faster.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你处理较长的脚本并计划进行更长时间的计算，同时计算能力有限，那么使用SciPy会更高效、更快速。
- en: Yet, if you have enough resources, we would recommend the first calculation
    where we used math. This is if you want to be sure about the results, even if
    these slight differences made little difference.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果你有足够的资源，我们建议使用第一种计算方法，即我们使用数学方法的那种。这是如果你想确保结果的准确性，即使这些细微的差异影响不大。
- en: If you want to minimize the impact of floating-point errors, you can round the
    results of the calculations to the desired precision.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想最小化浮点错误的影响，可以将计算结果四舍五入到所需的精度。
- en: Here is the code.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是代码。
- en: '[PRE2]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Here is the output.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是结果。
- en: '![](../Images/e420d3c22c1a0e1478351c8479570347.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e420d3c22c1a0e1478351c8479570347.png)'
- en: Conclusion
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In this article, we explored a statistic question from Goldman Sachs and answered
    it by using Python.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们探讨了一个来自高盛的统计问题，并通过使用 Python 进行了回答。
- en: We went through different approaches and explained each step in detail. Also,
    we did implement it by using a pre-built function.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们探讨了不同的方法，并详细解释了每一步。同时，我们也使用了预构建的函数进行了实现。
- en: Overall, this article is an excellent example of how binomial distribution can
    be solved manually or using Python.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，本文是二项分布如何通过手动计算或使用 Python 解决的一个优秀示例。
- en: If you want to master the random variables and probability distributions and
    crack your next Data Science Interview, check out this post “[Random Variables
    and Probability Distributions](https://www.stratascratch.com/blog/random-variables-and-probability-distributions/?utm_source=blog&utm_medium=click&utm_campaign=tds+binomial+distribution)”.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想掌握随机变量和概率分布，并在下一个数据科学面试中脱颖而出，请查看这篇文章“[随机变量和概率分布](https://www.stratascratch.com/blog/random-variables-and-probability-distributions/?utm_source=blog&utm_medium=click&utm_campaign=tds+binomial+distribution)”。
- en: '*Originally published at* [*https://www.stratascratch.com*](https://www.stratascratch.com/blog/binomial-distribution-in-python-for-coin-flip-prediction/?utm_source=blog&utm_medium=click&utm_campaign=tds+binomial+distribution)*.*'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '*最初发布于* [*https://www.stratascratch.com*](https://www.stratascratch.com/blog/binomial-distribution-in-python-for-coin-flip-prediction/?utm_source=blog&utm_medium=click&utm_campaign=tds+binomial+distribution)*。*'
