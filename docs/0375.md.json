["```py\ndef extract_text_from_pdf(pdf_file: str) -> [str]:\n\n     # Open the pdf file for reading in binary format\n     with open(pdf_file, ‘rb’) as pdf:\n\n     #initialize a PDfReader object\n     reader = PyPDF2.PdfReader(pdf)\n\n     #start an empty list\n     pdf_text = []\n\n     #loop through each page in document\n     for page in reader.pages:\n          content = page.extract_text()\n          pdf_text.append(content)\n\n     return pdf_text\n```", "```py\nall_text = [''.join(extracted_text)]\nlen(all_text) #returns 1\n```", "```py\n# install using: pip install PyMuPDF\nimport fitz\n\nwith fitz.open(file) as doc:\n     text = \"\"\n     for page in doc:\n          #append characeter in each page\n          text += page.get_text()\n\nprint (\"Pdf file is read as a collection of \", len(text), \"text elements.\")\n#returns 1786 elements.\n```", "```py\ndef find_between(first_word, last_word, text):\n    \"\"\"Find characters between any two first_word and last_word.\"\"\"\n\n    pattern = rf\"(?P<start>{first_word})(?P<match>.+?)(?P<end>{last_word})\"\n\n    #Returns an iterator called matches based on pattern in the string.\n    #re.DOTALL flag allows the '.' character to inclde new lines in matching \n    matches = re.finditer(pattern, text, re.DOTALL)\n\n    new_list = []\n    for match in matches:\n        new_list.append(match.group(\"match\"))\n\n    return new_list\n```", "```py\nimport pandas as pd\n\ndf = pd.DataFrame()\ndf[\"Name\"] = names\ndf[\"Nationality\"] = nationalities\ndf[\"Date of Birth\"] = dobs\ndf[\"Favorite Food\"] = foods\ndf[\"Favorite Fruit\"] = fruits\ndf[\"Favorite Sports\"] = sports\ndf[\"Favorite Player\"] = players\ndf[\"Favorite Movie\"] = movies\ndf[\"Favorite Actor\"] = actors\ndf[\"Favorite Quotes\"] = quotes\ndf[\"Aim\"] = aims\ndf[\"Views on Politics\"] = politics\ndf[\"Messages\"] = messages\n\ndf = df.T\ndf.columns = df.iloc[0]\n\ndf.drop(index = \"Name\", inplace = True)\n\ndf\n```", "```py\nfrom docx import Document\ndocument = Document()\n\nfor column in df.columns:  \n    document.add_heading(\"Name\")\n    p = document.add_paragraph()\n    p.add_run(column)\n\n    for index in df.index:\n        document.add_heading(index)\n        p = document.add_paragraph()\n        p.add_run(df.loc[index, column])\n\n    #add page break after profile of each friend\n    document.add_page_break()\n```", "```py\nfrom docx.enum.text import WD_COLOR_INDEX\ndocument.add_heading(\"Favorites\")\np = document.add_paragraph()\np.add_run(\"This section consists of favorite items of each friend.\").font.highlight_color=WD_COLOR_INDEX.YELLOW\n```", "```py\ntable = document.add_table(rows = 8, cols = 5)\n\n# Adding heading in the 1st row of the table\ncolumn1 = table.rows[0].cells\ncolumn1[0].text = ‘Items’\n\n#table header\nfor i in range(1, len(df.columns)+1):\n  column1[i].text = df.columns[i-1]\n\n#first column in the table for labels\nfor i in range(1,8):\n     table.cell(i,0).text = df.index[i+1]\nfor i in range(2, 9):\n     for j in range(1, 5):\n          table.cell(i-1, j).text = df.iloc[i, j-1]\n\n#define table style\ntable.style = “Light Grid Accent 1”\n```", "```py\ndocument.save(“../output/python_to_word.docx”)\n```"]