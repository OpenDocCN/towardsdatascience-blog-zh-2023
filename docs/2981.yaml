- en: 'Prompt Engineering Evolution: Defining the New Program Simulation Prompt Framework'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/prompt-engineering-evolution-defining-the-new-program-simulation-prompt-framework-d8a1ee096904?source=collection_archive---------2-----------------------#2023-09-29](https://towardsdatascience.com/prompt-engineering-evolution-defining-the-new-program-simulation-prompt-framework-d8a1ee096904?source=collection_archive---------2-----------------------#2023-09-29)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A roadmap for crafting different types of program simulation prompts
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@hominum_universalis?source=post_page-----d8a1ee096904--------------------------------)[![Giuseppe
    Scalamogna](../Images/ff7b3bec7c26e5684fba26211b6f027a.png)](https://medium.com/@hominum_universalis?source=post_page-----d8a1ee096904--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d8a1ee096904--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d8a1ee096904--------------------------------)
    [Giuseppe Scalamogna](https://medium.com/@hominum_universalis?source=post_page-----d8a1ee096904--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe039aa8b7221&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fprompt-engineering-evolution-defining-the-new-program-simulation-prompt-framework-d8a1ee096904&user=Giuseppe+Scalamogna&userId=e039aa8b7221&source=post_page-e039aa8b7221----d8a1ee096904---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d8a1ee096904--------------------------------)
    ·8 min read·Sep 29, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd8a1ee096904&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fprompt-engineering-evolution-defining-the-new-program-simulation-prompt-framework-d8a1ee096904&user=Giuseppe+Scalamogna&userId=e039aa8b7221&source=-----d8a1ee096904---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd8a1ee096904&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fprompt-engineering-evolution-defining-the-new-program-simulation-prompt-framework-d8a1ee096904&source=-----d8a1ee096904---------------------bookmark_footer-----------)![](../Images/1d11500b6dcaa48488da1f1520727f47.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: 'Source: Image by Author and generated with MidJourney'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '**Introduction**'
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In my recent article, [*New ChatGPT Prompt Engineering Technique: Program Simulation*](https://medium.com/towards-data-science/new-chatgpt-prompt-engineering-technique-program-simulation-56f49746aa7b),
    I explored a new category of prompt engineering techniques that aim to make ChatGPT-4
    behave like a program. While working on it, what struck me in particular was the
    ability of ChatGPT-4 to self-configure functionality within the confines of the
    program specifications. In the original program simulation prompt, we rigidly
    defined a set of functions and expected ChatGPT-4 to maintain the program state
    consistently. The results were impressive and many readers have shared how they
    have successfully adapted this method for a range of use cases.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在我最近的文章中，[*新的ChatGPT提示工程技术：程序模拟*](https://medium.com/towards-data-science/new-chatgpt-prompt-engineering-technique-program-simulation-56f49746aa7b)，我探讨了一种新的提示工程技术类别，旨在使ChatGPT-4表现得像一个程序。在工作的过程中，特别让我印象深刻的是ChatGPT-4在程序规范范围内自我配置功能的能力。在原始的程序模拟提示中，我们严格定义了一组功能，并期望ChatGPT-4保持程序状态的一致性。结果令人印象深刻，许多读者分享了他们成功将这种方法应用于各种用例的经验。
- en: 'But what happens if we loosen the reins a bit? What if we give ChatGPT-4 more
    leeway in defining the functions and the program’s behavior? This approach would
    inevitably sacrifice some predictability and consistency. However, the added flexibility
    might give us more options and is likely adaptable across a broader spectrum of
    applications. I have come up with a preliminary framework for this entire category
    of techniques which is shown in the below figure:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果我们稍微放宽一下限制会发生什么？如果我们给ChatGPT-4更多的自由来定义功能和程序的行为呢？这种方法不可避免地会牺牲一些可预测性和一致性。然而，增加的灵活性可能会为我们提供更多选项，并且可能适用于更广泛的应用领域。我提出了一个初步框架，涵盖了这个技术类别，如下图所示：
- en: '![](../Images/2775575dee28fc7c0c8fa4e69c38bf26.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2775575dee28fc7c0c8fa4e69c38bf26.png)'
- en: 'Source: Image by Author'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：作者提供的图像
- en: 'Let’s spend a little of time examining this chart. I have identified two key
    dimensions that are broadly applicable to the way program simulation prompts can
    be crafted:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们花一点时间来审视这个图表。我已经确定了两个在程序模拟提示制作中广泛适用的关键维度：
- en: Deciding how many and which functions of the program simulation to define.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 决定定义程序模拟的功能数量和类型。
- en: Deciding the degree to which the behavior and configuration of the program is
    autonomous.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 决定程序的行为和配置的自主程度。
- en: In the first article, we crafted a prompt that would fall into the “Structured
    Pre-Configured” category (purple dot). Today, we are going to explore the “Unstructured
    Self-Configuring” approach (blue dot). What is useful about this diagram is that
    it provides a concise conceptual roadmap for crafting program simulation prompts.
    It also provides easy to apply dimensionality for experimentation, adjustment
    and refinement as you apply the technique.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一篇文章中，我们制定了一个属于“结构化预配置”类别（紫点）的提示。今天，我们将探索“非结构化自配置”方法（蓝点）。这个图表的有用之处在于，它提供了一个简洁的概念路线图，用于制定程序模拟提示。它还提供了易于应用的维度，便于在应用技术时进行实验、调整和优化。
- en: Unstructured Self-Configuring Program Simulation Prompt
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 非结构化自配置程序模拟提示
- en: 'Without further ado, let’s begin our examination of the “Unstructured Self-Configuring
    Program Simulation” approach. I crafted a prompt whose purpose is to create illustrated
    children’s stories as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 话不多说，让我们开始检查“非结构化自配置程序模拟”方法。我设计了一个提示，其目的是创建插图儿童故事，如下所示：
- en: “*Behave like a self-assembling program whose purpose is to create illustrated
    children’s stories. You have complete flexibility on determining the program’s
    functions, features, and user interface. For the illustration function, the program
    will generate prompts that can be used with a text-to-image model to generate
    images. Your goal is to run the remainder of the chat as a fully functioning program
    that is ready for user input once this prompt is received.* ”
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: “*表现得像一个自我组装的程序，其目的是创建插图儿童故事。你在确定程序的功能、特性和用户界面时拥有完全的灵活性。对于插图功能，程序将生成可以与文本到图像模型一起使用的提示来生成图像。你的目标是在收到此提示后，将其余聊天运行成一个完全功能的程序，准备好接受用户输入。*”
- en: As you can see, the prompt is deceptively very simple. This may be appealing
    in an era where prompts are getting long, confusing and so specific that they
    are difficult to tailor to different situations. We have given GPT-4 full discretion
    over function definition, configuration and program behavior. The only specific
    instructions are aimed at guiding the output for illustrations to be prompts that
    can be used for text-to-image generation. Another important ingredient is that
    I have set a goal that the chat model should strive to accomplish. One final thing
    to note, is that I used the term “self-assembling” as opposed to “self-configuring”.
    You can try both, but “self-configuring” tends to nudge ChatGPT into simulating
    an actual program/user interaction.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，这个提示看起来非常简单。在提示越来越长、复杂，并且特定到难以适应不同情况的时代，这可能具有吸引力。我们赋予了GPT-4完全的自由来定义功能、配置和程序行为。唯一的具体指示是指导输出为可以用于文本到图像生成的插图提示。另一个重要的成分是我设定了一个目标，让聊天模型努力实现。最后需要注意的是，我使用了“自组装”而不是“自配置”的术语。你可以尝试两者，但“自配置”倾向于促使ChatGPT模拟实际程序/用户交互。
- en: '**“Behave like” vs. “Act like”**'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**“表现得像”与“行动得像”**'
- en: It’s also worth highlighting another distinct word choice in the prompt. You
    have all encountered the guidance to use “Act like an expert of some kind or other”
    in your prompts. In my testing “Act Like” tends to guide chat models toward persona-driven
    responses. “Behave like” offers more flexibility especially when the aim is for
    the model to operate more like a program or a system. And, it can be used in the
    persona-centric contexts as well.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 还值得强调提示中的另一个不同用词。你们都遇到过在提示中使用“表现得像某种专家”的指导。在我的测试中，“行动得像”倾向于引导聊天模型朝着角色驱动的响应。“表现得像”提供了更多的灵活性，特别是当目标是让模型更像一个程序或系统时。同时，它也可以在以角色为中心的上下文中使用。
- en: 'If all went as planned, the resulting output should look something like this
    (note: you will all see something a little different.)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切按计划进行，结果输出应该是这样的（注意：你们都会看到略有不同的内容。）
- en: '![](../Images/a4c5441abf5ffc2fdb65aec490affab1.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a4c5441abf5ffc2fdb65aec490affab1.png)'
- en: That looks and feels like a program. The functions are intuitive and appropriate.
    The menu even goes as far as including “Settings” and “Help & Tutorials”. Let’s
    explore those since I will admit, they were unexpected.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这看起来和感觉起来都像一个程序。功能直观且合适。菜单甚至包括了“设置”和“帮助与教程”。让我们探索一下这些，因为我承认它们是意料之外的。
- en: '![](../Images/3032a02b8c444a211cde5fffc9b74105.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3032a02b8c444a211cde5fffc9b74105.png)'
- en: The “Settings” presented are very helpful. I’ll make some selections to keep
    the story short, and to set the language and vocabulary level to “Beginner.”
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 所展示的“设置”非常有用。我将做一些选择以简化故事，并将语言和词汇水平设置为“初学者”。
- en: Since we are interested in examining the ability of the model to autonomously
    self-configure the program, I will combine the setting changes into one line of
    text and see if it works.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们有兴趣考察模型自动自配置程序的能力，我将把设置更改合并成一行文本，看看效果如何。
- en: '![](../Images/197a2b04b02acd7bd62ff8f3f99d8b1f.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/197a2b04b02acd7bd62ff8f3f99d8b1f.png)'
- en: The settings update is confirmed. The menu choices that follow are completely
    free-form but appropriate for the context of where we are in the “program.”
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 设置更新已确认。随后出现的菜单选项完全是自由形式的，但适合我们在“程序”中的上下文。
- en: Now let’s check “Help & Tutorials”
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们检查“帮助与教程”
- en: '![](../Images/5fb637e8fbaa485fbd1a83807e698203.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5fb637e8fbaa485fbd1a83807e698203.png)'
- en: And from there let’s take a closer look at “Illustration Prompts & Generation.”
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们深入探讨“插图提示与生成”。
- en: '![](../Images/2cc099639d6f732a1b02757e3674223c.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2cc099639d6f732a1b02757e3674223c.png)'
- en: Again, very helpful and nothing short of impressive as we defined none of this
    in our program definition.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，非常有用，令人印象深刻，因为我们在程序定义中没有定义这些。
- en: I will navigate back to the main menu and launch into creating a new story.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我将返回主菜单并启动创建新故事。
- en: '![](../Images/a33046c18e4c460cd49d64edbf856638.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a33046c18e4c460cd49d64edbf856638.png)'
- en: It’s a nice and simple little story that is 3 pages long and geared at a beginner
    vocabulary level (exactly as we specified in our settings). The functions presented
    again make sense for where we are in the program. We can generate illustrations,
    modify the story or exit to the main menu.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简洁而简单的小故事，共3页，针对初学者词汇水平（正如我们在设置中指定的那样）。所呈现的功能再次适合我们在程序中的位置。我们可以生成插图，修改故事或退出到主菜单。
- en: Let’s work on our illustration prompts.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续处理我们的插图提示。
- en: '![](../Images/4c228f73c567fb65e53a1fcd28058a27.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4c228f73c567fb65e53a1fcd28058a27.png)'
- en: I have not included the text generated for the other illustration prompts but
    they are similar to the one you see above for page 1\. Let’s provide the illustration
    prompt as-is to MidJourney to produce some images.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我没有包括其他插图提示生成的文本，但它们类似于你在第一页看到的那一个。让我们将插图提示按原样提供给 MidJourney 以生成一些图像。
- en: '*“A cute brown teddy bear with big, round eyes sitting on a window sill of
    a little blue house in a peaceful town.”*'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '*“一只可爱的棕色泰迪熊，圆圆的眼睛坐在一个小蓝房子的窗台上，位于一个宁静的城镇。”*'
- en: '![](../Images/c13b87ac79c970f079b815a117d155dc.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c13b87ac79c970f079b815a117d155dc.png)'
- en: 'Source: Image by Author and generated with MidJourney'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：作者提供的图片，并使用 MidJourney 生成
- en: Very nice. This step was manual and we have the additional challenge of getting
    consistent illustrations across all three pages. It can be done with MidJourney
    but requires uploading one of the images to use as a base to generate the additional
    images. Perhaps DALL·E 3 will include capabilities that will allow this to be
    done seamlessly. At a minimum the functionality announced by OpenAI indicates
    we can generate the images directly in ChatGPT.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 非常好。这个步骤是手动的，我们面临的额外挑战是确保所有三页上的插图一致。这可以通过 MidJourney 实现，但需要上传其中一张图像作为基准，以生成其他图像。也许
    DALL·E 3 将包括允许无缝完成此操作的功能。至少，OpenAI 宣布的功能表明我们可以直接在 ChatGPT 中生成图像。
- en: 'Let’s “Save and Exit” and see what happens in our ChatGPT dialogue:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们“保存并退出”，看看在我们的 ChatGPT 对话中会发生什么：
- en: '![](../Images/b7de9e3d2b1e293e0f63988f1bc88b4d.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b7de9e3d2b1e293e0f63988f1bc88b4d.png)'
- en: And now, let’s try and “Load Saved Story”.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们尝试“加载已保存的故事”。
- en: '![](../Images/7b04a2e41f9bdd4f621da08122a890d5.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7b04a2e41f9bdd4f621da08122a890d5.png)'
- en: '“The Lost Teddy” was “saved” and when I instruct it to “Open” it recalls the
    entire story and all the illustration prompts. At the end it provides this self-assembled
    menu of functions:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: “迷失的泰迪”已被“保存”，当我指示它“打开”时，它回忆起整个故事和所有插图提示。最后，它提供了这个自组装的功能菜单：
- en: '![](../Images/3dbed01a0ffcde1150ea4c51bcd711d5.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3dbed01a0ffcde1150ea4c51bcd711d5.png)'
- en: Ok. Let’s stop here. You can proceed to generate your own stories if you’d like
    but keep in mind, that due to the prompt’s design, the resultant behavior will
    be different for everyone.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 好的。我们到此为止。如果你愿意，可以继续生成自己的故事，但请记住，由于提示的设计，结果行为对每个人来说都会有所不同。
- en: Let’s move on to some overarching conclusions and observations.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续一些总体结论和观察。
- en: Conclusions and Observations
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论和观察
- en: The Unstructured Self-Configuring Program Simulation technique showcases powerful
    capabilities stemming from a simple prompt that provides a clear and concise objective
    but otherwise gives the model broad discretion.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 非结构化自配置程序模拟技术展示了强大的能力，这源自一个简单的提示，该提示提供了明确而简洁的目标，但 otherwise 给予模型广泛的自由裁量权。
- en: How might it be useful? Well, maybe you don’t know how to define the functions
    that you want your program simulation to perform. Or you have defined some functions
    but are not sure if there are others that might be useful. This approach is great
    for prototyping and experimenting and ultimately devising a “Structured Pre-Configured
    Program Simulation” prompt.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这会有什么用处呢？也许你不知道如何定义程序模拟要执行的功能。或者你已经定义了一些功能，但不确定是否还有其他有用的功能。这种方法非常适合原型设计和实验，最终制定出“结构化预配置程序模拟”提示。
- en: Given that program simulation naturally integrates elements of techniques like
    Chain of Thought, Instruction Based, Step-by-Step, and Role Play, it is a very
    powerful technique category that you should try and keep handy as it aligns with
    a broad cross-section of use cases for chat models.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 由于程序模拟自然融合了诸如思维链、基于指令、逐步和角色扮演等技术元素，它是一个非常强大的技术类别，你应该尝试并保持它，因为它与聊天模型的广泛使用场景相契合。
- en: '**Beyond Generative Chat Models and Towards a Generative Operating System**'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**超越生成聊天模型，迈向生成操作系统**'
- en: As I continue to dive deeper into the program simulation approach, I definitely
    have a better grasp of why Sam Altman of OpenAI stated that the significance of
    prompt engineering might wane over time. Generative models may evolve to such
    an extent, that they go well beyond generating text and images and instinctively
    know how to perform a given set of tasks to reach a desired outcome. My latest
    exploration makes me think that we are nearer to this reality than we may have
    thought.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我对程序模拟方法的深入探索，我确实更好地理解了为什么OpenAI的萨姆·奥特曼表示，提示工程的意义可能会随着时间的推移而减弱。生成模型可能会发展到超越生成文本和图像的程度，本能地知道如何执行一组特定的任务以达到期望的结果。我最新的探索让我觉得我们离这个现实比我们想象的要近。
- en: Let’s consider where generative AI may be headed next and to do so, I think
    it is helpful to think of generative models in human terms. Using that mindset
    let’s consider how people attain proficiency in a given area of competence or
    knowledge domain.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一下生成性人工智能可能会走向何方，为了做到这一点，我认为把生成模型视为人类的一种方式是有帮助的。以这种思维方式，让我们考虑一下人们是如何在特定能力领域或知识领域中获得熟练的。
- en: The person is trained (either self-trained or externally trained) using domain
    specific knowledge and techniques in both supervised and unsupervised settings.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这个人通过使用特定领域的知识和技术，在监督和非监督环境中进行培训（无论是自我培训还是外部培训）。
- en: The person’s abilities are tested relative to the competence area in question.
    Refinements and additional training are provided as needed.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这个人的能力会相对于相关领域的能力进行测试。根据需要提供改进和额外的培训。
- en: The person is asked (or asks themselves) to perform a task or accomplish a goal.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这个人被要求（或自己要求自己）执行一个任务或完成一个目标。
- en: That sounds a lot like what is done to train generative models. A key distinction
    does however surface in the execution phase or the “ask”. Typically, proficient
    individuals do not need detailed directives.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这听起来很像训练生成模型所做的事情。然而，在执行阶段或“询问”阶段确实出现了一个关键的区别。通常，熟练的个人不需要详细的指令。
- en: I believe that in the future, when interacting with generative models, the mechanics
    of the “ask” will more closely resemble our interaction with proficient humans.
    For any given task, models will exhibit a profound ability to understand or infer
    the objective and desired outcome. Given this trajectory, it should be no surprise
    to see the emergence of multi-modal capabilities, such as the integration of DALL·E
    3 with ChatGPT, and ChatGPT’s newly announced abilities to see, think, and hear.
    We might eventually see the emergence of a meta-agent that essentially powers
    the operating systems of our gadgets — be it phones, computers, robots, or any
    other smart device. Some might raise concerns about the inefficiency and environmental
    impact of what would amount to massive amounts of ubiquitous compute. But, if
    history serves as an indicator, and these approaches yield tools and solutions
    that people want, innovation mechanics will kick in and the market will deliver
    accordingly.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信未来，当与生成模型互动时，“询问”的机制将更接近我们与熟练人类的互动。对于任何给定的任务，模型将展现出深刻的理解或推断目标和期望结果的能力。鉴于这一发展趋势，看到多模态能力的出现（例如DALL·E
    3与ChatGPT的集成，以及ChatGPT新宣布的视觉、思考和听觉能力）应该不奇怪。我们可能最终会看到一种元代理的出现，它实质上为我们的设备（无论是手机、电脑、机器人还是其他智能设备）提供操作系统。有人可能会担心这会导致计算的大量普及带来的低效和环境影响。但如果历史可以作为指示，这些方法产生了人们想要的工具和解决方案，创新机制将启动，市场也会相应地提供。
- en: Thanks for reading and I hope you find program simulation a useful approach
    in your prompt adventures! I am in the midst of additional explorations so be
    sure to follow me and get notified when new articles are published.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读，希望你在你的提示冒险中发现程序模拟是一种有用的方法！我正在进行额外的探索，所以一定要关注我，并在新文章发布时获得通知。
- en: Unless otherwise noted, all images in this article are by the author.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 除非另有说明，本文中的所有图片均由作者提供。
