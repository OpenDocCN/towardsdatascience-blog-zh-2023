- en: Decoupled Frontend — Backend Microservices Architecture for a ChatGPT-Based
    LLM Chatbot
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/decoupled-frontend-backend-microservices-architecture-for-chatgpt-based-llm-chatbot-61637dc5c7ea?source=collection_archive---------7-----------------------#2023-05-24](https://towardsdatascience.com/decoupled-frontend-backend-microservices-architecture-for-chatgpt-based-llm-chatbot-61637dc5c7ea?source=collection_archive---------7-----------------------#2023-05-24)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**A practical guide to building a headless ChatGPT application with Streamlit,
    FastAPI, and the OpenAI API**'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://stephen-leo.medium.com/?source=post_page-----61637dc5c7ea--------------------------------)[![Marie
    Stephen Leo](../Images/c5669d884da5ff5c965f98904257d379.png)](https://stephen-leo.medium.com/?source=post_page-----61637dc5c7ea--------------------------------)[](https://towardsdatascience.com/?source=post_page-----61637dc5c7ea--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----61637dc5c7ea--------------------------------)
    [Marie Stephen Leo](https://stephen-leo.medium.com/?source=post_page-----61637dc5c7ea--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F954c0bee6530&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdecoupled-frontend-backend-microservices-architecture-for-chatgpt-based-llm-chatbot-61637dc5c7ea&user=Marie+Stephen+Leo&userId=954c0bee6530&source=post_page-954c0bee6530----61637dc5c7ea---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----61637dc5c7ea--------------------------------)
    ·8 min read·May 24, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F61637dc5c7ea&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdecoupled-frontend-backend-microservices-architecture-for-chatgpt-based-llm-chatbot-61637dc5c7ea&user=Marie+Stephen+Leo&userId=954c0bee6530&source=-----61637dc5c7ea---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F61637dc5c7ea&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdecoupled-frontend-backend-microservices-architecture-for-chatgpt-based-llm-chatbot-61637dc5c7ea&source=-----61637dc5c7ea---------------------bookmark_footer-----------)![](../Images/64f56820c6449617c8f28c080da1275e.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: 'Image generated by Author using Midjourney V5.1 using the prompt: “decoupled
    frontend backend software application”'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: In [my previous post](https://medium.com/towards-data-science/anatomy-of-llm-based-chatbot-applications-monolithic-vs-microservice-architectural-patterns-77796216903e),
    I wrote about the differences between monolithic and microservices architecture
    patterns for LLM-based chatbot applications. One of the significant advantages
    of picking the microservices architecture pattern is that it allows the separation
    of frontend code from the data science logic so that a data scientist can focus
    on the data science logic without worrying about the frontend code. In this post,
    I will show you how to build a microservice chatbot application with Streamlit,
    FastAPI, and the OpenAI API. We will decouple the frontend and backend codes from
    each other to easily swap out the frontend for another frontend framework like
    React, Swift, Dash, Gradio, etc.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在[我的上一篇文章](https://medium.com/towards-data-science/anatomy-of-llm-based-chatbot-applications-monolithic-vs-microservice-architectural-patterns-77796216903e)中，我讨论了基于LLM的聊天机器人应用中单体和微服务架构模式的区别。选择微服务架构模式的一个重要优势是可以将前端代码与数据科学逻辑分离，这样数据科学家可以专注于数据科学逻辑，而不用担心前端代码。在本文中，我将向您展示如何使用Streamlit、FastAPI和OpenAI
    API构建一个微服务聊天机器人应用。我们将前端和后端代码解耦，以便轻松地将一个前端框架如React、Swift、Dash、Gradio等替换为另一个。
- en: First, create a new conda environment and install the necessary libraries.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，创建一个新的conda环境并安装必要的库。
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Backend: Data Science Logic**'
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**后端：数据科学逻辑**'
