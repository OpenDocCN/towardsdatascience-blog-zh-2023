["```py\nimport os\nos.environ[\"OPENAI_API_KEY\"] = \"...\"\n```", "```py\nfrom langchain.prompts import PromptTemplate\n\nprompt = PromptTemplate(\n    input_variables=[\"product\"],\n    template=\"What is a good name for a company that makes {product}?\",\n)\n\nprint(prompt.format(product=\"podcast player\"))\n\n# OUTPUT\n# What is a good name for a company that makes podcast player?\n```", "```py\nfrom langchain.llms import OpenAI\nfrom langchain.chains import LLMChain\n\nllm = OpenAI(\n          model_name=\"text-davinci-003\", # default model\n          temperature=0.9) #temperature dictates how whacky the output should be\nllmchain = LLMChain(llm=llm, prompt=prompt)\nllmchain.run(\"podcast player\")\n\n# OUTPUT\n# PodConneXion\n```", "```py\nfrom langchain.chat_models import ChatOpenAI\n\nchatopenai = ChatOpenAI(\n                model_name=\"gpt-3.5-turbo\")\nllmchain_chat = LLMChain(llm=chatopenai, prompt=prompt)\nllmchain_chat.run(\"podcast player\")\n\n# OUTPUT\n# PodcastStream\n```", "```py\nfrom langchain.chains import PALChain\npalchain = PALChain.from_math_prompt(llm=llm, verbose=True)\npalchain.run(\"If my age is half of my dad's age and he is going to be 60 next year, what is my current age?\")\n\n# OUTPUT\n# > Entering new PALChain chain...\n# def solution():\n#    \"\"\"If my age is half of my dad's age and he is going to be 60 next year, what is my current age?\"\"\"\n#    dad_age_next_year = 60\n#    dad_age_now = dad_age_next_year - 1\n#    my_age_now = dad_age_now / 2\n#    result = my_age_now\n#    return result\n#\n# > Finished chain.\n# '29.5'\n```", "```py\nprint(palchain.prompt.template)\n# OUTPUT\n# 'Q: Olivia has $23\\. She bought five bagels for $3 each. How much money does she have left?\\n\\n# solution in Python:\\n\\n\\ndef solution():\\n    \"\"\"Olivia has $23\\. She bought five bagels for $3 each. How much money does she have left?\"\"\"\\n    money_initial = 23\\n    bagels = 5\\n    bagel_cost = 3\\n    money_spent = bagels * bagel_cost\\n    money_left = money_initial - money_spent\\n    result = money_left\\n    return result\\n\\n\\n\\n\\n\\nQ: Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\\n\\n# solution in Python:\\n\\n\\ndef solution():\\n    \"\"\"Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\"\"\"\\n    golf_balls_initial = 58\\n    golf_balls_lost_tuesday = 23\\n    golf_balls_lost_wednesday = 2\\n    golf_balls_left = golf_balls_initial - golf_balls_lost_tuesday - golf_balls_lost_wednesday\\n    result = golf_balls_left\\n    return result\\n\\n\\n\\n\\n\\nQ: There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\\n\\n# solution in Python:\\n\\n\\ndef solution():\\n    \"\"\"There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\"\"\"\\n    computers_initial = 9\\n    computers_per_day = 5\\n    num_days = 4  # 4 days between monday and thursday\\n    computers_added = computers_per_day * num_days\\n    computers_total = computers_initial + computers_added\\n    result = computers_total\\n    return result\\n\\n\\n\\n\\n\\nQ: Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\\n\\n# solution in Python:\\n\\n\\ndef solution():\\n    \"\"\"Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\"\"\"\\n    toys_initial = 5\\n    mom_toys = 2\\n    dad_toys = 2\\n    total_received = mom_toys + dad_toys\\n    total_toys = toys_initial + total_received\\n    result = total_toys\\n    return result\\n\\n\\n\\n\\n\\nQ: Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\\n\\n# solution in Python:\\n\\n\\ndef solution():\\n    \"\"\"Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\"\"\"\\n    jason_lollipops_initial = 20\\n    jason_lollipops_after = 12\\n    denny_lollipops = jason_lollipops_initial - jason_lollipops_after\\n    result = denny_lollipops\\n    return result\\n\\n\\n\\n\\n\\nQ: Leah had 32 chocolates and her sister had 42\\. If they ate 35, how many pieces do they have left in total?\\n\\n# solution in Python:\\n\\n\\ndef solution():\\n    \"\"\"Leah had 32 chocolates and her sister had 42\\. If they ate 35, how many pieces do they have left in total?\"\"\"\\n    leah_chocolates = 32\\n    sister_chocolates = 42\\n    total_chocolates = leah_chocolates + sister_chocolates\\n    chocolates_eaten = 35\\n    chocolates_left = total_chocolates - chocolates_eaten\\n    result = chocolates_left\\n    return result\\n\\n\\n\\n\\n\\nQ: If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\\n\\n# solution in Python:\\n\\n\\ndef solution():\\n    \"\"\"If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\"\"\"\\n    cars_initial = 3\\n    cars_arrived = 2\\n    total_cars = cars_initial + cars_arrived\\n    result = total_cars\\n    return result\\n\\n\\n\\n\\n\\nQ: There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\\n\\n# solution in Python:\\n\\n\\ndef solution():\\n    \"\"\"There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\"\"\"\\n    trees_initial = 15\\n    trees_after = 21\\n    trees_added = trees_after - trees_initial\\n    result = trees_added\\n    return result\\n\\n\\n\\n\\n\\nQ: {question}\\n\\n# solution in Python:\\n\\n\\n'\n```", "```py\nfrom langchain.agents import initialize_agent\nfrom langchain.agents import AgentType\nfrom langchain.agents import load_tools\n\nllm = OpenAI(temperature=0)\ntools = load_tools([\"pal-math\"], llm=llm)\n\nagent = initialize_agent(tools,\n                         llm,\n                         agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION,\n                         verbose=True)\n```", "```py\nagent.run(\"If my age is half of my dad's age and he is going to be 60 next year, what is my current age?\")\n\n# OUTPUT\n# > Entering new AgentExecutor chain...\n# I need to figure out my dad's current age and then divide it by two.\n# Action: PAL-MATH\n# Action Input: What is my dad's current age if he is going to be 60 next year?\n# Observation: 59\n# Thought: I now know my dad's current age, so I can divide it by two to get my age.\n# Action: Divide 59 by 2\n# Action Input: 59/2\n# Observation: Divide 59 by 2 is not a valid tool, try another one.\n# Thought: I can use PAL-MATH to divide 59 by 2.\n# Action: PAL-MATH\n# Action Input: Divide 59 by 2\n# Observation: 29.5\n# Thought: I now know the final answer.\n# Final Answer: My current age is 29.5 years old.\n\n# > Finished chain.\n# 'My current age is 29.5 years old.'\n```", "```py\nprint(agent.agent.llm_chain.prompt.template)\n# OUTPUT\n# Answer the following questions as best you can. You have access to the following tools:\n# PAL-MATH: A language model that is really good at solving complex word math problems. Input should be a fully worded hard word math problem.\n\n# Use the following format:\n\n# Question: the input question you must answer\n# Thought: you should always think about what to do\n# Action: the action to take, should be one of [PAL-MATH]\n# Action Input: the input to the action\n# Observation: the result of the action\n# ... (this Thought/Action/Action Input/Observation can repeat N times)\n# Thought: I now know the final answer\n# Final Answer: the final answer to the original input question\n# Begin!\n# Question: {input}\n# Thought:{agent_scratchpad}\n```", "```py\nagent.run(\"My age is half of my dad's age. Next year he is going to be same age as Demi Moore. What is my current age?\")\n```", "```py\n tools = load_tools([\"podcast-api\"], llm=llm, listen_api_key=\"...\")\nagent = initialize_agent(tools,\n                         llm,\n                         agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION,\n                         verbose=True)\n\nagent.run(\"Show me episodes for money saving tips.\")\n\n# OUTPUT\n# > Entering new AgentExecutor chain...\n# I should search for podcasts or episodes related to money saving\n# Action: Podcast API\n# Action Input: Money saving tips\n# Observation:  The API call returned 3 podcasts related to money saving tips: The Money Nerds, The Rachel Cruze Show, and The Martin Lewis Podcast. These podcasts offer valuable money saving tips and advice to help people take control of their finances and create a life they love.\n# Thought: I now have some options to choose from \n# Final Answer: The Money Nerds, The Rachel Cruze Show, and The Martin Lewis Podcast are great podcast options for money saving tips.\n\n# > Finished chain.\n\n# 'The Money Nerds, The Rachel Cruze Show, and The Martin Lewis Podcast are great podcast options for money saving tips.'\n```", "```py\n# Chain1 - solve math problem, get the age\nchain_one = agent\n\n# Chain2 - suggest age-appropriate gift\ntemplate = \"\"\"You are a gift recommender. Given a person's age,\\n\n it is your job to suggest an appropriate gift for them.\n\nPerson Age:\n{age}\nSuggest gift:\"\"\"\nprompt_template = PromptTemplate(input_variables=[\"age\"], template=template)\nchain_two = LLMChain(llm=llm, prompt=prompt_template) \n```", "```py\nfrom langchain.chains import SimpleSequentialChain\n\noverall_chain = SimpleSequentialChain(\n                  chains=[chain_one, chain_two],\n                  verbose=True)\n```", "```py\nquestion = \"If my age is half of my dad's age and he is going to be 60 next year, what is my current age?\"\noverall_chain.run(question)\n\n# OUTPUT\n# > Entering new SimpleSequentialChain chain...\n\n# > Entering new AgentExecutor chain...\n# I need to figure out my dad's current age and then divide it by two.\n# Action: PAL-MATH\n# Action Input: What is my dad's current age if he is going to be 60 next year?\n# Observation: 59\n# Thought: I now know my dad's current age, so I can divide it by two to get my age.\n# Action: Divide 59 by 2\n# Action Input: 59/2\n# Observation: Divide 59 by 2 is not a valid tool, try another one.\n# Thought: I need to use PAL-MATH to divide 59 by 2.\n# Action: PAL-MATH\n# Action Input: Divide 59 by 2\n# Observation: 29.5\n# Thought: I now know the final answer.\n# Final Answer: My current age is 29.5 years old.\n\n# > Finished chain.\n# My current age is 29.5 years old.\n\n# Given your age, a great gift would be something that you can use and enjoy now like a nice bottle of wine, a luxury watch, a cookbook, or a gift card to a favorite store or restaurant. Or, you could get something that will last for years like a nice piece of jewelry or a quality leather wallet.\n\n# > Finished chain.\n```", "```py\n# '\\nGiven your age, a great gift would be something that you can use and enjoy now like a nice bottle of wine, a luxury watch, a cookbook, or a gift card to a favorite store or restaurant. Or, you could get something that will last for years like a nice piece of jewelry or a quality leather wallet\n```", "```py\ntemplate = \"\"\"You are a gift recommender. Given a person's age,\\n\n it is your job to suggest an appropriate gift for them. If age is under 10,\\n\n the gift should cost no more than {budget} otherwise it should cost atleast 10 times {budget}.\n\nPerson Age:\n{output}\nSuggest gift:\"\"\"\nprompt_template = PromptTemplate(input_variables=[\"output\", \"budget\"], template=template)\nchain_two = LLMChain(llm=llm, prompt=prompt_template)\n```", "```py\nprint(agent.agent.llm_chain.output_keys)\n\n# OUTPUT\n[\"output\"]\n```", "```py\noverall_chain = SequentialChain(\n                input_variables=[\"input\"],\n                memory=SimpleMemory(memories={\"budget\": \"100 GBP\"}),\n                chains=[agent, chain_two],\n                verbose=True)\n```", "```py\nprint(agent.agent.llm_chain.prompt.template)\n\n# OUTPUT\n#Answer the following questions as best you can. You have access to the following tools:\n\n#PAL-MATH: A language model that is really good at solving complex word math problems. Input should be a fully worded hard word math problem.\n\n#Use the following format:\n\n#Question: the input question you must answer\n#Thought: you should always think about what to do\n#Action: the action to take, should be one of [PAL-MATH]\n#Action Input: the input to the action\n#Observation: the result of the action\n#... (this Thought/Action/Action Input/Observation can repeat N times)\n#Thought: I now know the final answer\n#Final Answer: the final answer to the original input question\n\n#Begin!\n\n#Question: {input}\n#Thought:{agent_scratchpad}\n```", "```py\nprint(agent.agent.llm_chain.prompt.input_variables)\n\n# OUTPUT\n# ['input', 'agent_scratchpad']\n```", "```py\noverall_chain.run(\"If my age is half of my dad's age and he is going to be 60 next year, what is my current age?\")\n\n# OUTPUT\n#> Entering new SequentialChain chain...\n\n#> Entering new AgentExecutor chain...\n# I need to figure out my dad's current age and then divide it by two.\n#Action: PAL-MATH\n#Action Input: What is my dad's current age if he is going to be 60 next year?\n#Observation: 59\n#Thought: I now know my dad's current age, so I can divide it by two to get my age.\n#Action: Divide 59 by 2\n#Action Input: 59/2\n#Observation: Divide 59 by 2 is not a valid tool, try another one.\n#Thought: I can use PAL-MATH to divide 59 by 2.\n#Action: PAL-MATH\n#Action Input: Divide 59 by 2\n#Observation: 29.5\n#Thought: I now know the final answer.\n#Final Answer: My current age is 29.5 years old.\n\n#> Finished chain.\n\n# For someone of your age, a good gift would be something that is both practical and meaningful. Consider something like a nice watch, a piece of jewelry, a nice leather bag, or a gift card to a favorite store or restaurant.\\nIf you have a larger budget, you could consider something like a weekend getaway, a spa package, or a special experience.'}\n\n#> Finished chain.\n```", "```py\nFor someone of your age, a good gift would be something that is both practical and meaningful. Consider something like a nice watch, a piece of jewelry, a nice leather bag, or a gift card to a favorite store or restaurant.\\nIf you have a larger budget, you could consider something like a weekend getaway, a spa package, or a special experience.'}\n```"]