- en: Ludwig — A “Friendlier” Deep Learning Framework
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/ludwig-a-friendlier-deep-learning-framework-946ee3d3b24?source=collection_archive---------12-----------------------#2023-06-26](https://towardsdatascience.com/ludwig-a-friendlier-deep-learning-framework-946ee3d3b24?source=collection_archive---------12-----------------------#2023-06-26)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Deep Learning Made Easy with this Low-Code, Declarative Framework
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://johnadeojo.medium.com/?source=post_page-----946ee3d3b24--------------------------------)[![John
    Adeojo](../Images/f6460fae462b055d36dce16fefcd142c.png)](https://johnadeojo.medium.com/?source=post_page-----946ee3d3b24--------------------------------)[](https://towardsdatascience.com/?source=post_page-----946ee3d3b24--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----946ee3d3b24--------------------------------)
    [John Adeojo](https://johnadeojo.medium.com/?source=post_page-----946ee3d3b24--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff933e1637e40&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fludwig-a-friendlier-deep-learning-framework-946ee3d3b24&user=John+Adeojo&userId=f933e1637e40&source=post_page-f933e1637e40----946ee3d3b24---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----946ee3d3b24--------------------------------)
    ·11 min read·Jun 26, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F946ee3d3b24&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fludwig-a-friendlier-deep-learning-framework-946ee3d3b24&user=John+Adeojo&userId=f933e1637e40&source=-----946ee3d3b24---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F946ee3d3b24&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fludwig-a-friendlier-deep-learning-framework-946ee3d3b24&source=-----946ee3d3b24---------------------bookmark_footer-----------)![](../Images/ee8f8ddbdb0f202acd51b5a02d1e371e.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Image by Author: Generated with Midjourney'
  prefs: []
  type: TYPE_NORMAL
- en: Background — Deep Learning, too Complex?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I have tended to shy away from deep learning for industry use cases. Not due
    to a lack of interest, rather I find the popular deep learning frameworks cumbersome.
    I appreciate [Pytorch](https://pytorch.org/) and [TensorFlow](https://www.tensorflow.org/)
    are fantastic tools for research purposes, but the APIs are not the most user
    friendly. In situations where I need to deliver a quick proof of concept for a
    client, the last thing I want to be doing is tinkering with Pytorch tensors.
  prefs: []
  type: TYPE_NORMAL
- en: While attending the AI summit in London, I stumbled across a team claiming to
    have a solution to my deep learning problem. They have been leveraging a different
    approach, which they described as “the mid-point between TensorFlow and AutoML”,
    a framework called Ludwig.
  prefs: []
  type: TYPE_NORMAL
- en: What is Ludwig?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Developed by Uber, [Ludwig](https://ludwig.ai/latest/) is an open-source framework
    for building deep learning models. It is declarative, which means that instead
    of constructing complex models layer-by-layer like you would in TensorFlow, you
    simply declare the structure of the model with a configuration file. This sounded
    too good to be true, so I had to see for myself. In the remainder of this article…
  prefs: []
  type: TYPE_NORMAL
