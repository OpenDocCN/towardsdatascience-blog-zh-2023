- en: Can ChatGPT solve knapsack problems?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ChatGPT 能解决背包问题吗？
- en: 原文：[https://towardsdatascience.com/can-chatgpt-solve-knapsack-problems-1a9a388c4caf?source=collection_archive---------10-----------------------#2023-09-21](https://towardsdatascience.com/can-chatgpt-solve-knapsack-problems-1a9a388c4caf?source=collection_archive---------10-----------------------#2023-09-21)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/can-chatgpt-solve-knapsack-problems-1a9a388c4caf?source=collection_archive---------10-----------------------#2023-09-21](https://towardsdatascience.com/can-chatgpt-solve-knapsack-problems-1a9a388c4caf?source=collection_archive---------10-----------------------#2023-09-21)
- en: Solving operations research (OR) problems with ChatGPT
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用 ChatGPT 解决运筹学（OR）问题
- en: '[](https://medium.com/@guanx92?source=post_page-----1a9a388c4caf--------------------------------)[![Guangrui
    Xie](../Images/def9aa637424a88d75a6a3bb103350bc.png)](https://medium.com/@guanx92?source=post_page-----1a9a388c4caf--------------------------------)[](https://towardsdatascience.com/?source=post_page-----1a9a388c4caf--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----1a9a388c4caf--------------------------------)
    [Guangrui Xie](https://medium.com/@guanx92?source=post_page-----1a9a388c4caf--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@guanx92?source=post_page-----1a9a388c4caf--------------------------------)[![Guangrui
    Xie](../Images/def9aa637424a88d75a6a3bb103350bc.png)](https://medium.com/@guanx92?source=post_page-----1a9a388c4caf--------------------------------)[](https://towardsdatascience.com/?source=post_page-----1a9a388c4caf--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----1a9a388c4caf--------------------------------)
    [Guangrui Xie](https://medium.com/@guanx92?source=post_page-----1a9a388c4caf--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F495b92f0c66d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcan-chatgpt-solve-knapsack-problems-1a9a388c4caf&user=Guangrui+Xie&userId=495b92f0c66d&source=post_page-495b92f0c66d----1a9a388c4caf---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----1a9a388c4caf--------------------------------)
    ·10 min read·Sep 21, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1a9a388c4caf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcan-chatgpt-solve-knapsack-problems-1a9a388c4caf&user=Guangrui+Xie&userId=495b92f0c66d&source=-----1a9a388c4caf---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F495b92f0c66d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcan-chatgpt-solve-knapsack-problems-1a9a388c4caf&user=Guangrui+Xie&userId=495b92f0c66d&source=post_page-495b92f0c66d----1a9a388c4caf---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----1a9a388c4caf--------------------------------)
    ·10分钟阅读·2023年9月21日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1a9a388c4caf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcan-chatgpt-solve-knapsack-problems-1a9a388c4caf&user=Guangrui+Xie&userId=495b92f0c66d&source=-----1a9a388c4caf---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1a9a388c4caf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcan-chatgpt-solve-knapsack-problems-1a9a388c4caf&source=-----1a9a388c4caf---------------------bookmark_footer-----------)![](../Images/3272c86ba9ff1223c86d7d1d8650584d.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1a9a388c4caf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcan-chatgpt-solve-knapsack-problems-1a9a388c4caf&source=-----1a9a388c4caf---------------------bookmark_footer-----------)![](../Images/3272c86ba9ff1223c86d7d1d8650584d.png)'
- en: Photo by [Jakob Owens](https://unsplash.com/@jakobowens1?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Jakob Owens](https://unsplash.com/@jakobowens1?utm_source=medium&utm_medium=referral)
    提供，来自 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Ever since the emergence of ChatGPT, I’ve been thinking about how ChatGPT would
    influence the world of optimization and Operations Research (OR). There has been
    news about ChatGPT passing high school and undergraduate level math exams, which
    piques my interest in exploring how well it can do on solving OR problems. In
    this article, I will use a classic OR problem — 0/1 knapsack problem to run some
    tests.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 自从 ChatGPT 出现以来，我一直在思考 ChatGPT 将如何影响优化和运筹学（OR）领域。关于 ChatGPT 通过高中和本科水平的数学考试的新闻，引发了我对它在解决
    OR 问题方面表现的兴趣。在本文中，我将使用一个经典的 OR 问题——0/1 背包问题来进行一些测试。
- en: '**Knapsack problem**'
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**背包问题**'
- en: In the realm of optimization and decision-making conundrums, the knapsack problem
    has long been a classic benchmark. It challenges us to select a combination of
    items, each with its own weight and value, in such a way that we maximize the
    total value while staying within a given weight constraint. Dynamic programming
    is an efficient algorithm we genrally use to solve 0/1 knapsack problems.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在优化和决策难题的领域，背包问题长期以来一直是经典的基准问题。它挑战我们选择一组物品，每个物品都有自己的重量和价值，以最大化总价值，同时保持在给定的重量限制内。动态规划是一种我们通常用来解决
    0/1 胶囊问题的有效算法。
- en: '**Conversation with ChatGPT**'
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**与 ChatGPT 的对话**'
- en: I started with a very small example, and asked ChatGPT to solve it.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我从一个很小的例子开始，并要求 ChatGPT 解决它。
- en: '*Me: Consider a knapsack problem, where the capacity of the knapsack is 10lbs.
    I have 4 items to choose from, whose values are $10, $40, $30, $50 and weights
    are 5lbs, 4lbs, 6lbs, 3lbs respectively. Could you solve this problem for me?*'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '*我：考虑一个背包问题，其中背包的容量是 10lbs。我有 4 个物品可以选择，它们的价值分别为 $10、$40、$30、$50，重量分别为 5lbs、4lbs、6lbs、3lbs。你能为我解决这个问题吗？*'
- en: '*ChatGPT: Certainly! The knapsack problem is a classic optimization problem
    where the goal is to maximize the total value of items selected for a knapsack,
    subject to the constraint that the total weight of the selected items does not
    exceed the knapsack’s capacity.*'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '*ChatGPT：当然！背包问题是一个经典的优化问题，目标是最大化选择物品的总价值，同时满足所选物品的总重量不超过背包的容量。*'
- en: '*In your case, you have 4 items with their respective values and weights:*'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '*在你的情况下，你有 4 个物品及其相应的价值和重量：*'
- en: '*Item 1: Value = $10, Weight = 5lbs Item 2: Value = $40, Weight = 4lbs Item
    3: Value = $30, Weight = 6lbs Item 4: Value = $50, Weight = 3lbs*'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*项目 1：价值 = $10，重量 = 5lbs 项目 2：价值 = $40，重量 = 4lbs 项目 3：价值 = $30，重量 = 6lbs 项目
    4：价值 = $50，重量 = 3lbs*'
- en: '*Knapsack Capacity = 10lbs*'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*背包容量 = 10lbs*'
- en: '*To solve this problem, you can use a dynamic programming approach. Create
    a 2D table where rows represent items and columns represent the remaining knapsack
    capacities (from 0lbs to 10lbs). Fill in the table iteratively to find the maximum
    value that can be obtained for each combination of items and remaining capacities.*'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '*要解决这个问题，你可以使用动态规划方法。创建一个二维表格，其中行表示物品，列表示剩余的背包容量（从 0lbs 到 10lbs）。通过迭代填充表格，以找到每个物品组合和剩余容量的最大值。*'
- en: '*Here’s the table filling process:*'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '*以下是表格填充过程：*'
- en: '*Capacity (lbs) 0 1 2 3 4 5 6 7 8 9 10'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '*容量 (lbs) 0 1 2 3 4 5 6 7 8 9 10'
- en: — — — — — — — — — — — — — — — — — — — — — — — — — — — — — —
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: — — — — — — — — — — — — — — — — — — — — — — — — — — — — — —
- en: Item 1 (5lbs) 0 0 0 0 0 10 10 10 10 10 10
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 项目 1 (5lbs) 0 0 0 0 0 10 10 10 10 10 10
- en: Item 2 (4lbs) 0 0 0 0 40 40 40 40 50 50 50
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 项目 2 (4lbs) 0 0 0 0 40 40 40 40 50 50 50
- en: Item 3 (6lbs) 0 0 0 0 40 40 30 70 70 70 70
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 项目 3 (6lbs) 0 0 0 0 40 40 30 70 70 70 70
- en: Item 4 (3lbs) 0 0 0 50 50 50 50 70 70 70 80*
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 项目 4 (3lbs) 0 0 0 50 50 50 50 70 70 70 80*
- en: '*The table shows the maximum value that can be obtained for each combination
    of items and remaining capacities. The final cell (bottom-right) has a value of
    $80, which is the maximum value that can be obtained with a knapsack capacity
    of 10lbs.*'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '*表格显示了每个物品组合和剩余容量的最大值。最终单元格（右下角）具有 $80 的值，这是在 10lbs 的背包容量下可以获得的最大值。*'
- en: '*To find the items that should be selected, you can backtrack from the last
    cell to the first cell while considering the decisions that led to the maximum
    value. In this case, you would select Item 2 and Item 4, which have a total value
    of $40 + $50 = $90 and a total weight of 4lbs + 3lbs = 7lbs, which is within the
    knapsack’s capacity of 10lbs.*'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '*要找到应该选择的物品，你可以从最后一个单元格回溯到第一个单元格，同时考虑导致最大值的决策。在这种情况下，你会选择项目 2 和项目 4，它们的总值为
    $40 + $50 = $90，总重量为 4lbs + 3lbs = 7lbs，这在 10lbs 的背包容量范围内。*'
- en: '*So, the optimal solution is to select Item 2 and Item 4, which gives you a
    total value of $90.*'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '*因此，最佳解决方案是选择项目 2 和项目 4，这样你将得到总值 $90。*'
- en: Apparently, we notice that ChatGPT is able to pick the right approach to solve
    this problem, but the final solution given by ChatGPT is not aligned with its
    reasoning process. Specifically, the dynamic programming (DP) table shows $80
    (bottom right cell) as the optimal objective value, but ChatGPT concluded $90
    is the final answer.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，我们注意到 ChatGPT 能够选择正确的方法来解决这个问题，但 ChatGPT 给出的最终解答与其推理过程不一致。具体来说，动态规划（DP）表显示
    $80（右下角单元格）是最佳目标值，但 ChatGPT 得出的结论是 $90 是最终答案。
- en: To check which is the correct solution, I wrote up a piece of Python script
    as below to carry out the DP algorithm.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 为了检查哪个是正确的解决方案，我编写了一段Python脚本来执行DP算法。
- en: '[PRE0]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The DP table printed out is as follows.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 打印出的DP表如下。
- en: '![](../Images/0622c030306b1f62b6374d6d6db77199.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0622c030306b1f62b6374d6d6db77199.png)'
- en: This confirms that the conclusion ChatGPT arrived at is correct, but the the
    DP table given by ChatGPT is wrong. Then I continued to ask it to correct the
    DP table.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这确认了ChatGPT得出的结论是正确的，但ChatGPT给出的DP表是错误的。然后我继续让它纠正DP表。
- en: '*Me: I think your solution is correct, but the table has some errors.*'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '*我：我认为你的解决方案是正确的，但表格有些错误。*'
- en: '*ChatGPT: I apologize for any confusion. Let me correct the table for you.
    Here’s the corrected dynamic programming table for the knapsack problem:*'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '*ChatGPT：我为任何困惑道歉。让我为你纠正表格。以下是修正后的背包问题动态规划表：*'
- en: '*Capacity (lbs) 0 1 2 3 4 5 6 7 8 9 10'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '*容量 (磅) 0 1 2 3 4 5 6 7 8 9 10*'
- en: — — — — — — — — — — — — — — — — — — — — — — — — — — — — — —
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: — — — — — — — — — — — — — — — — — — — — — — — — — — — — — —
- en: Item 1 (5lbs) 0 0 0 0 0 10 10 10 10 10 10
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 物品1 (5磅) 0 0 0 0 0 10 10 10 10 10 10
- en: Item 2 (4lbs) 0 0 0 0 40 40 40 40 40 50 50
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 物品2 (4磅) 0 0 0 0 40 40 40 40 40 50 50
- en: Item 3 (6lbs) 0 0 0 0 40 40 40 40 40 50 70
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 物品3 (6磅) 0 0 0 0 40 40 40 40 40 50 70
- en: Item 4 (3lbs) 0 0 0 50 50 50 90 90 90 90 90*
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 物品4 (3磅) 0 0 0 50 50 50 90 90 90 90 90*
- en: '*Now, the table is correct. The value in the bottom-right cell is $90, which
    represents the maximum value that can be obtained with a knapsack capacity of
    10lbs. As mentioned before, the optimal solution is to select Item 2 and Item
    4, which gives you a total value of $90.*'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '*现在，表格是正确的。右下角单元格中的值是$90，这表示在10磅的背包容量下可以获得的最大值。如前所述，最优解是选择物品2和物品4，这将给你总价值$90。*'
- en: Interestingly, ChatGPT is able to do some corrections to the table, so that
    the bottom right cell is aligned with $90\. However, if we look at the table more
    closely, the last row of the table is still not correct. The cell in 4th row and
    7th column (corresponding to a knapsack capacity of 6lbs) should be $50 instead
    of $90\. A knapsack of 6lbs capacity wouldn’t allow us to choose item 2 and 4
    to reach $90, since the total weight of item 2 and 4 is 7lbs which exceeds the
    capacity of the knapsack.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，ChatGPT能够对表格进行一些修正，使右下角单元格与$90对齐。然而，如果我们更仔细地查看表格，表格的最后一行仍然不正确。第4行第7列的单元格（对应于背包容量为6磅）应该是$50而不是$90。一个容量为6磅的背包无法选择物品2和物品4来达到$90，因为物品2和物品4的总重量为7磅，超出了背包的容量。
- en: I then asked it to write some code to solve this problem.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我随后要求它编写一些代码来解决这个问题。
- en: '*Me: Could you write Python code to solve this problem?*'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '*我：你能写一段Python代码来解决这个问题吗？*'
- en: '*ChatGPT: Certainly! You can solve the 0/1 knapsack problem using dynamic programming
    in Python. Here’s a Python code snippet to solve the problem for the specific
    instance you provided:*'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '*ChatGPT：当然可以！你可以使用动态规划在Python中解决0/1背包问题。以下是解决你提供的特定实例的Python代码片段：*'
- en: '[PRE1]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '*When you run this code, it will output the maximum value and the selected
    items that should be placed in the knapsack. In your specific case, it will correctly
    select Item 2 and Item 4, which have a total value of $90 and a total weight of
    7 lbs, within the knapsack’s capacity of 10 lbs.*'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '*当你运行这段代码时，它将输出最大值和应放入背包的选定物品。在你的特定情况下，它会正确选择物品2和物品4，这些物品的总价值为$90，总重量为7磅，在背包容量为10磅的范围内。*'
- en: This code printed out the optimal solution clearly and correctly. The DP table
    calculated by this code is also correct.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码清晰正确地打印出了最优解。由这段代码计算出的DP表也正确。
- en: I then went further to test an instance of a larger scale, a knapsack problem
    with the capacity of the knapsack being 500lbs and 10 items to choose from. The
    value and weight of each item are randomly generated using the code below.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我进一步测试了一个更大规模的实例，一个背包容量为500磅且有10个物品可供选择的背包问题。每个物品的价值和重量都是使用以下代码随机生成的。
- en: '[PRE2]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: I copied and pasted the generated values and weights, and asked ChatGPT to solve
    it.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我复制并粘贴了生成的值和重量，并要求ChatGPT解决它。
- en: '*Me: Consider a knapsack problem, where the capacity of the knapsack is 500lbs.
    I have 100 items to choose from, whose values are given by the list [156, 59,
    61, 129, 64, 158, 87, 77, 157, 144, 156, 127, 74, 157, 91, 124, 128, 95, 118,
    127, 111, 67, 108, 139, 79, 95, 86, 155, 120, 112, 76, 116, 79, 100, 80, 120,
    117, 93, 111, 67, 55, 113, 105, 119, 171, 128, 72, 133, 60, 86, 97, 151, 77, 75,
    97, 80, 133, 67, 65, 86, 85, 157, 128, 102, 63, 125, 69, 53, 135, 109, 127, 109,
    125, 80, 68, 120, 75, 79, 86, 100, 89, 58, 80, 33, 118, 51, 66, 101, 77, 146,
    61, 108, 98, 64, 115, 94, 123, 124, 164, 140] and weights are given by the list
    [15, 11, 12, 16, 15, 7, 12, 9, 9, 11, 10, 14, 12, 10, 11, 11, 14, 9, 10, 7, 2,
    11, 12, 7, 16, 5, 10, 9, 14, 14, 10, 11, 7, 4, 8, 10, 13, 13, 8, 9, 6, 5, 4, 15,
    8, 8, 6, 12, 5, 9, 7, 11, 8, 6, 9, 11, 10, 10, 8, 8, 7, 8, 7, 4, 10, 8, 5, 11,
    7, 10, 12, 10, 13, 6, 11, 7, 7, 8, 9, 10, 6, 12, 11, 5, 14, 15, 13, 9, 6, 13,
    8, 13, 10, 12, 11, 12, 10, 15, 10, 11] respectively. Could you solve this problem
    for me?*'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: '*ChatGPT: Solving the knapsack problem for 100 items with a capacity of 500
    lbs is a computationally intensive task. However, I can provide you with the Python
    code to solve this problem using dynamic programming, but please be aware that
    it may take some time to run.*'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '*Here’s the Python code to solve the knapsack problem with the provided values
    and weights:*'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '*Running this code will provide you with the maximum value that can be obtained
    and the list of selected items. Please be patient, as it may take some time to
    execute.*'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: This time, instead of directly solving the problem and giving me the answer,
    it gave me some Python code to run. The code works well in solving this problem.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is my first attempt to understand ChatGPT’s ability to solve complex math
    problems such as a classic OR problem — knapsack problem. It seems that for small
    instances of knapsack problems, it’s able to give an answer of the optimal solution.
    However, the quality of the answer is not always guaranteed. There may be errors
    during the reasoning process or in the final answer. For large instances, ChatGPT
    tends to avoid giving a direct answer of the optimal solution, but instead gives
    a piece of code to run. The code is usually nicely written and gets us the correct
    solution. So when solving knapsack problems with ChatGPT, never rely too much
    on the direct answer of optimal solution given by it, but run the code given by
    it instead to double check.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
