- en: Which Data Format to Use For Your Big Data Project?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/which-data-format-to-use-for-your-big-data-project-837a48d3661d?source=collection_archive---------8-----------------------#2023-10-26](https://towardsdatascience.com/which-data-format-to-use-for-your-big-data-project-837a48d3661d?source=collection_archive---------8-----------------------#2023-10-26)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Pickle, Parquet, CSV, Feather, HDF5, ORC, JSON: which one should you be using
    and why?'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://armandsauzay.medium.com/?source=post_page-----837a48d3661d--------------------------------)[![Armand
    Sauzay](../Images/94b12efc184d75380f293b457c95597f.png)](https://armandsauzay.medium.com/?source=post_page-----837a48d3661d--------------------------------)[](https://towardsdatascience.com/?source=post_page-----837a48d3661d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----837a48d3661d--------------------------------)
    [Armand Sauzay](https://armandsauzay.medium.com/?source=post_page-----837a48d3661d--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6ce70a13b962&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhich-data-format-to-use-for-your-big-data-project-837a48d3661d&user=Armand+Sauzay&userId=6ce70a13b962&source=post_page-6ce70a13b962----837a48d3661d---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----837a48d3661d--------------------------------)
    ·6 min read·Oct 26, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F837a48d3661d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhich-data-format-to-use-for-your-big-data-project-837a48d3661d&user=Armand+Sauzay&userId=6ce70a13b962&source=-----837a48d3661d---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F837a48d3661d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhich-data-format-to-use-for-your-big-data-project-837a48d3661d&source=-----837a48d3661d---------------------bookmark_footer-----------)![](../Images/f6052f807142ff0736003534edc8f2dc.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Image by Maarten van den Heuvel — [Unsplash](https://unsplash.com/photos/assorted-color-book-lot-8EzNkvLQosk)
  prefs: []
  type: TYPE_NORMAL
- en: Choosing the right data format is crucial in Data Science projects, impacting
    everything from data read/write speeds to memory consumption and interoperability.
    This article explores seven popular serialization/deserialization formats in Python,
    focusing on their speed and memory usage implications.
  prefs: []
  type: TYPE_NORMAL
- en: Through the analysis, we’ll also see how we can use profiling in Python (using
    the `cProfile` built-in module) and how we can get statistics on memory usage
    for specific files in your filesystem (using the `os` Python module).
  prefs: []
  type: TYPE_NORMAL
- en: Of course, each project has its specificities, beyond just speed and memory
    usage. But we’ll draw some trends, that can hopefully be useful to shed light
    on which format we can choose for a given project.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding Serialization and Deserialization
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Serialization is the process of saving an object (in Python, a pandas DataFrame
    for example) to a format that can be saved to a file for later retrieval. Deserialization
    is the reverse process.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A dataframe is a Python object and cannot be persisted as is. It needs to be
    translated to a file to be…
  prefs: []
  type: TYPE_NORMAL
