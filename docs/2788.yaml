- en: Time Series Complexity analysis using Entropy
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 时间序列复杂性分析使用熵
- en: 原文：[https://towardsdatascience.com/time-series-complexity-analysis-using-entropy-ec49a4aaff11?source=collection_archive---------2-----------------------#2023-09-04](https://towardsdatascience.com/time-series-complexity-analysis-using-entropy-ec49a4aaff11?source=collection_archive---------2-----------------------#2023-09-04)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/time-series-complexity-analysis-using-entropy-ec49a4aaff11?source=collection_archive---------2-----------------------#2023-09-04](https://towardsdatascience.com/time-series-complexity-analysis-using-entropy-ec49a4aaff11?source=collection_archive---------2-----------------------#2023-09-04)
- en: Here is a method to understand how complex your time series are, in a few lines
    of code
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 这里有一种方法，可以用几行代码了解你的时间序列有多复杂
- en: '[](https://piero-paialunga.medium.com/?source=post_page-----ec49a4aaff11--------------------------------)[![Piero
    Paialunga](../Images/de2185596a49484698733e85114dd1ff.png)](https://piero-paialunga.medium.com/?source=post_page-----ec49a4aaff11--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ec49a4aaff11--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ec49a4aaff11--------------------------------)
    [Piero Paialunga](https://piero-paialunga.medium.com/?source=post_page-----ec49a4aaff11--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://piero-paialunga.medium.com/?source=post_page-----ec49a4aaff11--------------------------------)[![Piero
    Paialunga](../Images/de2185596a49484698733e85114dd1ff.png)](https://piero-paialunga.medium.com/?source=post_page-----ec49a4aaff11--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ec49a4aaff11--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ec49a4aaff11--------------------------------)
    [Piero Paialunga](https://piero-paialunga.medium.com/?source=post_page-----ec49a4aaff11--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F254e653181d2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftime-series-complexity-analysis-using-entropy-ec49a4aaff11&user=Piero+Paialunga&userId=254e653181d2&source=post_page-254e653181d2----ec49a4aaff11---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ec49a4aaff11--------------------------------)
    ·8 min read·Sep 4, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fec49a4aaff11&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftime-series-complexity-analysis-using-entropy-ec49a4aaff11&user=Piero+Paialunga&userId=254e653181d2&source=-----ec49a4aaff11---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F254e653181d2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftime-series-complexity-analysis-using-entropy-ec49a4aaff11&user=Piero+Paialunga&userId=254e653181d2&source=post_page-254e653181d2----ec49a4aaff11---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ec49a4aaff11--------------------------------)
    ·8 分钟阅读·2023年9月4日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fec49a4aaff11&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftime-series-complexity-analysis-using-entropy-ec49a4aaff11&user=Piero+Paialunga&userId=254e653181d2&source=-----ec49a4aaff11---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fec49a4aaff11&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftime-series-complexity-analysis-using-entropy-ec49a4aaff11&source=-----ec49a4aaff11---------------------bookmark_footer-----------)![](../Images/0eeba7c01e80fa5091b16ba778ac2712.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fec49a4aaff11&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftime-series-complexity-analysis-using-entropy-ec49a4aaff11&source=-----ec49a4aaff11---------------------bookmark_footer-----------)![](../Images/0eeba7c01e80fa5091b16ba778ac2712.png)'
- en: Image by author, generated using Midjourney
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供，使用 Midjourney 生成
- en: 'Every data scientist knows this: **the first step to the solution of a Machine
    Learning problem is the exploration of the data.**'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 每个数据科学家都知道：**解决机器学习问题的第一步是探索数据。**
- en: And it’s not only about understanding which features can help you in solving
    the problem. That is actually something that requires domain knowledge, a lot
    of effort, a lot of asking around and trying to find out. That is a necessary
    step, but in my opinion, is step number **two**.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 而且，这不仅仅是理解哪些特征可以帮助你解决问题。这实际上需要领域知识、大量的努力、很多询问和尝试去了解。这是一个必要的步骤，但在我看来，这是**第二**步。
- en: The first step is in some way, shape, or form, based on the analysis of how
    **complex** your data is. Are they asking you to find fine details and pattern
    in something that is kind of always the same, or the outputs are completely different
    from each other? Do they want you to find the distance between 0.0001 and 0.0002
    or do they want you to find the distance between 0 and 10?
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步在某种程度上、形态上或形式上，基于对你数据的**复杂性**分析。他们是让你在总是一样的东西中寻找细节和模式，还是输出完全不同？他们想让你找到0.0001和0.0002之间的距离，还是找到0和10之间的距离？
- en: Let me explain myself better.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我更好地解释一下。
- en: For example, I am a **signal processing guy**. I studied Fourier Transform,
    Chirplet Transform, Wavelet Transform, Hilbert Transform, Time Series Forecasting,
    Time Series Clustering, 1D CNN, RNN, and a lot of other scary names.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 比如说，我是一个**信号处理专家**。我学习了傅里叶变换、chirplet变换、小波变换、希尔伯特变换、时间序列预测、时间序列聚类、1D CNN、RNN，以及许多其他吓人的名字。
- en: 'A very common problem in the Time Series domain is going from an input (that
    might indeed be another time series) to a time series output. For example:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在时间序列领域，一个非常常见的问题是从一个输入（可能是另一个时间序列）到一个时间序列输出。例如：
- en: '**You have a property of an experimental setup and you want to simulate your
    experiment using Machine Learning:** this is actually my PhD Thesis and it’s called
    **surrogate modelling**'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**你有一个实验设置的属性，你想使用机器学习来模拟你的实验：** 这实际上是我的博士论文，称为**代理建模**。'
- en: 'You have the values of the stock market up to day 300 and you want to predict
    day 301: this is very well known and it is called **time series forecasting**'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你有了股票市场到第300天的数据，你想预测第301天的情况：这非常著名，被称为**时间序列预测**。
- en: 'You have a signal that is very dirty or noisy and you want to clear it: this
    is called **encoder-decoder signal denoising**, and it is also very well known.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你有一个非常脏或嘈杂的信号，你想清理它：这被称为**编码器-解码器信号去噪**，也非常著名。
- en: And in these problems, the first thing that I look at, surprisingly, is the
    **output (not the input) time series**.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些问题中，我惊讶地发现，首先看的通常是**输出（而不是输入）时间序列**。
- en: Let’s say that I take a random time series in my dataset. Is the time series
    a gentle and smooth combination of sines and cosines? Is it a polynomial function?
    Is it a logarithmic function? Is it a function I can’t even name?
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我在我的数据集中取一个随机时间序列。这个时间序列是一个温和且平滑的正弦和余弦组合吗？它是一个多项式函数吗？它是一个对数函数吗？还是一个我连名字都无法称呼的函数？
- en: And if I take another random time series, how does it change? Is the task based
    on looking at small changes from an obvious baseline or is the task to identify
    completely different behaviors all across the dataset?
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我再拿一个随机时间序列，它会如何变化？任务是基于从明显的基线中观察到的小变化，还是识别整个数据集中完全不同的行为？
- en: 'In a very single word, we are trying to understand how **complex** our task
    is: we are estimating the **complexity of our time series**. Now the word “complex”
    can mean something different for each one of us.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 用一句话来说，我们试图理解我们的任务有多**复杂**：我们在估计**时间序列的复杂性**。现在，“复杂”这个词对我们每个人的意义可能不同。
- en: When my wife shows me her anatomy lessons I find them extremely complex, but
    for her it’s just another Tuesday :)
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 当我妻子向我展示她的解剖学课程时，我发现它们极其复杂，但对她来说，这只是另一个星期二 :)
- en: 'The good news is that there is a way of describing the complexity in a more
    scientific and unique way: **the concept of Entropy**'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 好消息是，有一种更科学和独特的方式来描述复杂性：**熵的概念**。
- en: 1\. The Entropy of a 1/0 time series (Theory)
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 1/0时间序列的熵（理论）
- en: 'Let’s define the entropy starting from a very simple example: a time series
    that can only have values 1 and 0\. I know that it’s not exactly the type of Time
    Series that we are used to treating, but you can imagine it as if every minute
    you step in your room you flip a coin: if it’s head you have measured 1, if it’s
    tail you have measured 0 (or the opposite, I don’t have a specific preference
    of 1 being head, to be honest…)'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从一个非常简单的例子开始定义熵：一个只能有值1和0的时间序列。我知道这并不是我们习惯处理的时间序列类型，但你可以想象成每分钟你进入房间时翻一个硬币：如果是正面，你测得1；如果是反面，你测得0（或者相反，坦白说我并没有特别偏好1是正面……）。
- en: '![](../Images/cb8379347bf359f92f493a7842b4630b.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cb8379347bf359f92f493a7842b4630b.png)'
- en: Image made by author
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 作者制作的图像
- en: Now, if you think about it, something is more “complex” when it doesn’t really
    ring a bell in our brain when you don’t understand it fully, or when it doesn't
    really give you a large amount of information.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你考虑一下，当它在我们的大脑中没有真正的印象时，或者当它没有给你大量信息时，某些东西会更“复杂”。
- en: I’ll stop teasing you, and I will give you the equation of this damn **entropy:**
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我不再逗你了，我将给你这个该死的**熵**的方程：
- en: '![](../Images/8b218137fc7edfc2df29292187068708.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8b218137fc7edfc2df29292187068708.png)'
- en: '**Equation 1**'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**方程1**'
- en: 'Let’s break it down:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解一下：
- en: '**X** is the domain of our time series, in our case X = {0,1}'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**X**是我们的时间序列的领域，在我们的例子中，X = {0,1}'
- en: '**p(x)** is the probability of verifying the value x that is in X'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**p(x)**是验证X中值x的概率'
- en: Why do we have a logarithm in there? What does it mean? Why there is that minus
    sign?
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么里面有对数？这是什么意思？为什么有那个负号？
- en: Let’s learn by example.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过示例来学习。
- en: Imagine that the probability of X being 0 (tail) is 0 and the probability of
    X being 1 (head) is 1\. This is not even really a time series, as it is always
    1\. What is the value of entropy?
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下X为0（尾部）的概率是0，X为1（头部）的概率是1\. 这甚至不是真正的时间序列，因为它总是1\. 熵的值是多少？
- en: '![](../Images/06e4963f20d975faeb4e917350149c9e.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/06e4963f20d975faeb4e917350149c9e.png)'
- en: Now, p(x=0)=0, so the first contribution is 0\. p(x=1)=1, but the logarithm
    of 1 is 0\. This means that the second contribution is 0 as well, and the entropy
    is, indeed, 0.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，p(x=0)=0，因此第一个贡献是0\. p(x=1)=1，但1的对数是0\. 这意味着第二个贡献也是0，因此熵确实是0。
- en: 'What does it mean that the entropy is 0? That the time series is not complex
    at all, and it makes sense because it looks like this:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 熵是0是什么意思？意味着时间序列完全不复杂，这很有意义，因为它看起来像这样：
- en: '![](../Images/55d4a47ef4bf39e4b2f6bc61cf5fafe8.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/55d4a47ef4bf39e4b2f6bc61cf5fafe8.png)'
- en: Image by author
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源于作者
- en: There is no “complexity” in this time series right? That’s why it’s entropy
    is 0.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这个时间序列没有“复杂性”，对吧？这就是为什么它的熵是0。
- en: Let’s make the same example if we know that p(x=0)=p(x=1)=0.5, that means the
    same exact probability of having 1 and 0 (head or tail)
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们知道p(x=0)=p(x=1)=0.5，那么意味着1和0（正面或反面）的概率完全相同。
- en: '![](../Images/5905ccd848b544dccb0a690e4f3bdc38.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5905ccd848b544dccb0a690e4f3bdc38.png)'
- en: Image by author
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源于作者
- en: This is definitely more complex, isn’t it?
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这确实更复杂了，不是吗？
- en: 'The entropy now becomes:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 熵现在变成：
- en: '![](../Images/29d3a39609ec97f96bb540b976a064df.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/29d3a39609ec97f96bb540b976a064df.png)'
- en: That is higher than 0\. This value has no meaning per se, but it is the **highest
    value that you can have**. That means that if you change p(x=0) to be different
    than 0.5 the entropy is lower*.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这个值高于0\. 这个值本身没有意义，但它是你可以得到的**最高值**。这意味着如果你将p(x=0)更改为不同于0.5的值，熵会降低*。
- en: '![](../Images/896d2a0da2ebbce93c8e67fcdd555c10.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/896d2a0da2ebbce93c8e67fcdd555c10.png)'
- en: Image by author
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源于作者
- en: '*** Note that when you change p(x=0) you also change p(x=1) as p(x=1)=1-p(x=0)**'
  id: totrans-53
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*** 注意，当你改变p(x=0)时，你也会改变p(x=1)，因为p(x=1)=1-p(x=0)**'
- en: Now let’s think about our findings.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们思考一下我们的发现。
- en: 'When the probability is 0, this means that there is **no complexity**, as we
    already know everything: you have one value and one value only.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当概率是0时，这意味着**没有复杂性**，因为我们已经知道了一切：你只有一个值。
- en: When the probability is, let’s say 0.0001, this means that the **complexity
    is very little** because it can happen that x=0, but the majority of the time
    x would be equals to 1
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当概率是0.0001时，这意味着**复杂性非常小**，因为可能x=0，但大多数时候x将等于1
- en: 'When the probability is 0.5, now the complexity is **maximum** because you
    have seriously no idea of what’s going to happen next: it can be 1 or 0 with the
    same probability'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当概率是0.5时，现在复杂性是**最大**的，因为你真的不知道接下来会发生什么：它可能是1或0，概率相同
- en: This is the idea of what is “complex” for us. In a simple 1/0 way, you can retrospectively
    find the probability based on the occurrences, and retrieve the entropy.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们认为的“复杂”的概念。在简单的1/0方式中，你可以通过回顾出现次数来找到概率，并获取熵。
- en: 2\. The Entropy of a 1/0 time series (Practice)
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 1/0时间序列的熵（练习）
- en: 'In our code, we will use **Python**, and we will also use very basic libraries:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的代码中，我们将使用**Python**，并且我们还将使用非常基础的库：
- en: Let’s write the code to find the same solution but using the probability “retrospectively”,
    or if you want, using their **frequency definition:**
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们写代码以找到相同的解决方案，但使用概率的“回顾性”，或者说，使用它们的**频率定义：**
- en: '![](../Images/c58716997e94f56555b9d09cf7481be5.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c58716997e94f56555b9d09cf7481be5.png)'
- en: 'Where:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 其中：
- en: '**x** isa value in the domain: in our case, we only have 0 and 1, so x is either
    0 or 1'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**x** 是定义域中的一个值：在我们的例子中，x 只有0和1两种可能，因此x的值为0或1。'
- en: '**n(x)** is the number of times that we have **x** in our time series'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**n(x)** 是时间序列中**x**出现的次数。'
- en: '**N** is the length of our timeseries'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**N** 是我们时间序列的长度。'
- en: We are going to find p(x=0) and p(x=1) and then use equation 1 above…
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将找到p(x=0)和p(x=1)，然后使用上面的方程1……
- en: 'Fine, I’ll re-paste it for you:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，我再为你粘贴一次：
- en: '![](../Images/8b218137fc7edfc2df29292187068708.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8b218137fc7edfc2df29292187068708.png)'
- en: '**Equation 1**'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**方程 1**'
- en: 'In **Python**, you can do that with this very simple code:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在**Python**中，你可以通过这段非常简单的代码来实现：
- en: Does it work? Let’s test it!
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 它有效吗？让我们测试一下！
- en: 'Let’s generate a 100 long time series, with a probability=0.5 of having 0:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们生成一个长度为100的时间序列，0出现的概率为0.5：
- en: Beautiful. So we have our balanced time series. The fact that we have set 0.5
    as a probability doesn’t mean **exactly** 50 and 50 as you can see, so that is
    going to give us some kind of error in estimating the probability. That’s the
    unperfect world we live in :)
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了。所以我们得到了平衡的时间序列。虽然我们设置了0.5作为概率，但这并不意味着**完全**50和50，如你所见，这会给我们在估计概率时带来一些误差。这就是我们生活在的不完美世界
    :)
- en: 'The equation to compute the theoretical entropy is the following:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 计算理论熵的方程如下：
- en: 'Let’s see if the theoretical and real entropy match:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看理论熵和实际熵是否匹配：
- en: Beautiful! They do!
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！它们确实匹配！
- en: 'Now let’s change p_0 and see if they keep matching:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们改变p_0，看看它们是否继续匹配：
- en: They match with a very little degree of error, right?
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 它们匹配的误差非常小，对吧？
- en: 'And the fun part is that if we do this three times **increasing** the size
    of our time series, the error will be smaller and smaller:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，如果我们这样做三次，**增加**时间序列的大小，误差将会越来越小。
- en: After size = 10k we basically have 0 differences between real and predicted
    entropy ❤
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在大小为10k后，我们基本上没有实际熵和预测熵之间的差异❤
- en: 3\. The Entropy of a whatever time series
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 任意时间序列的熵
- en: Now, if we still assume that our time series has discrete values (0,1,2,…) we
    can **extend** our definition of entropy into way more than only 2 values of a
    time series.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们仍然假设我们的时间序列具有离散值（0、1、2……），我们可以**扩展**熵的定义，适用于超过2个值的时间序列。
- en: For example, let’s pick a **three value case**. So our time series can be 0,1,
    or 2.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，让我们选择一个**三值情况**。所以我们的时间序列可以是0、1或2。
- en: 'Let’s create a new probability vector p_0,p_1 and p_2\. To do that we will
    generate 3 random numbers between 0 and 100, and store them in a vector, and then
    divide it by the sum:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个新的概率向量p_0、p_1和p_2。为此，我们将生成3个0到100之间的随机数，并将它们存储在一个向量中，然后除以总和：
- en: We can apply the same equation (and the same code) as before to find the real
    and predicted entropy.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用之前相同的方程（和相同的代码）来计算实际熵和预测熵。
- en: 'Let’s extend the definition of the entropy in the real entropy definition:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们扩展熵的定义到实际熵的定义中：
- en: 'This also works for only the 0/1 case:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这同样适用于仅有0/1的情况：
- en: 'And as we can see the theoretical and predicted entropy match even for the
    three value case:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，即使在三值情况下，理论熵和预测熵也相匹配：
- en: 'And to show you that I’m not cheating, we can see that it works for a variety
    of cases. If we change p_vector (and the time series) iteratively, we still see
    that the real and predicted entropy match:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 为了向你展示我没有作弊，我们可以看到它适用于各种情况。如果我们迭代地改变p_vector（和时间序列），我们仍然会看到实际熵和预测熵匹配：
- en: 4\. Results
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 结果
- en: 'In this blog post we:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇博客中，我们：
- en: Reflected on analyzing the **time series** complexity before applying any machine
    learning
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 反思在应用任何机器学习之前分析**时间序列**的复杂性。
- en: Reflected on the idea of **entropy** and **disorder** of a time series
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 反思了时间序列的**熵**和**无序**的概念。
- en: Defined the mathematical equation of **entropy** and explained it by example
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义了**熵**的数学方程，并通过示例进行解释。
- en: '**Applied it in practice** for both a 0/1 time series and 0,1,2, time series,
    showing how the theoretical definition matches with our computational approximation'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在实践中应用**了0/1时间序列和0、1、2时间序列，展示了理论定义如何与我们的计算近似相匹配。'
- en: Now, the problem (limitation) with this approach is that sometimes the time
    series can be too **continuous** for this method to work. But don’t panic! There
    is a **continuous entropy** definition that fixes the entropy for a Time Series.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这种方法的问题（限制）是有时时间序列可能过于**连续**，以至于该方法无法工作。但不要惊慌！有一种**连续熵**的定义可以修正时间序列的熵。
- en: I will treat in the next blogpost!
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我将在下一篇博客中讨论！
- en: 5\. Conclusions
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5\. 结论
- en: 'If you liked the article and you want to know more about machine learning,
    or you just want to ask me something, you can:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢这篇文章并且想了解更多关于机器学习的内容，或者你只是想问我一些问题，你可以：
- en: A. Follow me on [**Linkedin**](https://www.linkedin.com/in/pieropaialunga/),
    where I publish all my stories
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: A. 在[**Linkedin**](https://www.linkedin.com/in/pieropaialunga/)上关注我，我会在上面发布所有的故事。
- en: B. Subscribe to my [**newsletter**](https://piero-paialunga.medium.com/subscribe).
    It will keep you updated about new stories and give you the chance to text me
    to receive all the corrections or doubts you may have.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 订阅我的[**新闻通讯**](https://piero-paialunga.medium.com/subscribe)。它会让你了解新故事，并给你机会向我提问，获取所有可能的修正或解答。
- en: C. Become a [**referred member**](https://piero-paialunga.medium.com/membership),
    so you won’t have any “maximum number of stories for the month” and you can read
    whatever I (and thousands of other Machine Learning and Data Science top writers)
    write about the newest technology available.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 成为[**推荐会员**](https://piero-paialunga.medium.com/membership)，这样你就不会有“每月最大故事数量”的限制，可以阅读我（以及其他数千名机器学习和数据科学顶级作者）关于最新技术的文章。
