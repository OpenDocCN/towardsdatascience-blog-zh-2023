- en: Implementation of a Siamese Network in Keras and TensorFlow
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/implementation-of-a-siamese-network-in-keras-and-tensorflow-aa327418e177?source=collection_archive---------9-----------------------#2023-08-14](https://towardsdatascience.com/implementation-of-a-siamese-network-in-keras-and-tensorflow-aa327418e177?source=collection_archive---------9-----------------------#2023-08-14)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/b1a1da818760b158826b71ceb1e2665f.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Markus Spiske](https://unsplash.com/@markusspiske?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Learn the techniques behind object detection (and much more) with example code.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://rashida00.medium.com/?source=post_page-----aa327418e177--------------------------------)[![Rashida
    Nasrin Sucky](../Images/42bd057e8eca255907c43c29a498f2ca.png)](https://rashida00.medium.com/?source=post_page-----aa327418e177--------------------------------)[](https://towardsdatascience.com/?source=post_page-----aa327418e177--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----aa327418e177--------------------------------)
    [Rashida Nasrin Sucky](https://rashida00.medium.com/?source=post_page-----aa327418e177--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F8a36b941a136&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplementation-of-a-siamese-network-in-keras-and-tensorflow-aa327418e177&user=Rashida+Nasrin+Sucky&userId=8a36b941a136&source=post_page-8a36b941a136----aa327418e177---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----aa327418e177--------------------------------)
    ·7 min read·Aug 14, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Faa327418e177&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplementation-of-a-siamese-network-in-keras-and-tensorflow-aa327418e177&user=Rashida+Nasrin+Sucky&userId=8a36b941a136&source=-----aa327418e177---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Faa327418e177&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplementation-of-a-siamese-network-in-keras-and-tensorflow-aa327418e177&source=-----aa327418e177---------------------bookmark_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: Neural Networks are great and very popular in AI/ML spaces, but they require
    too much data to train. For tasks like object detection, signature verification,
    voice verification, and prescription pills recognition regular neural network
    techniques would be much more time-consuming and expensive because of this excessive
    data requirement. In these types of work, a **Siamese network** can be very powerful
    because it requires a lot less data than a regular neural network. In addition,
    an imbalanced dataset can also perform well.
  prefs: []
  type: TYPE_NORMAL
- en: This tutorial will give you a high-level overview of a Siamese Network and a
    complete example of working with it. I worked with the fashion-mnist dataset here
    but this similar structure is good for a lot of other use cases.
  prefs: []
  type: TYPE_NORMAL
- en: What is a Siamese Network?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Siamese networks contain one or more identical networks, and those identical
    networks have the same parameters and weights. If the weights of one network update,
    the weights of the other network also update. They have to be identical. The final
    layer is usually an embedding layer that calculates the distance between the outputs.
  prefs: []
  type: TYPE_NORMAL
