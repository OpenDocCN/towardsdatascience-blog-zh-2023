["```py\n> docker pull cordmaur/merge-downloader:v1\n> docker run -it -p 8888:8888 merge-downloader:v1 bash \n```", "```py\nroot@89fd8c332f98:/# pip install merge-downloader\nroot@89fd8c332f98:/# jupyter notebook --ip=0.0.0.0 --allow-root --no-browser\n```", "```py\n# from a code cell\n%pip install merge-downloader\n```", "```py\nfrom mergedownloader.inpeparser import INPETypes\n\nINPETypes.types()\n\nresult: \nDAILY_RAIN, \nMONTHLY_ACCUM_YEARLY, \nDAILY_AVERAGE, \nMONTHLY_ACCUM, \nMONTHLY_ACCUM_MANUAL, \nYEARLY_ACCUM, \nHOURLY_WRF, \nDAILY_WRF\n```", "```py\nfrom mergedownloader.downloader import Downloader\nfrom mergedownloader.inpeparser import INPETypes, INPEParsers\n\n# create a temporary folder to store the files\n!mkdir ./tmp\n\ndownloader = Downloader(\n    server=INPEParsers.FTPurl,\n    parsers=INPEParsers.parsers,\n    local_folder='./tmp'\n)\n```", "```py\nimport xarray as xr\n\nfile = downloader.get_file(date='20230601', datatype=INPETypes.DAILY_RAIN)\nfile\n\nresult:\nPosixPath('tmp/DAILY_RAIN/MERGE_CPTEC_20230601.grib2')\n```", "```py\nrain = xr.load_dataset(file)\nrain['prec'].plot(vmax=150)\n```", "```py\n# open the countries dataset\ncountries = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\nsouth_america = countries.query(\"continent == 'South America'\")\n\n# select the months to download\ndates = ['2023-01', '2023-02', '2023-03', '2023-04']\nmonthly_rains = [downloader.open_file(date, datatype=INPETypes.MONTHLY_ACCUM_YEARLY) for date in dates]\n\n# create a figure with the monthly precipitation\nfig, axs = plt.subplots(2, 2, figsize=(12, 11))\nfor i, rain in enumerate(monthly_rains):\n    ax = axs.reshape(-1)[i]\n    rain.plot(ax=ax, vmax=1200)\n    south_america.plot(ax=ax, facecolor='none', edgecolor='white')\n```", "```py\n# create a cube for the first half of June\ncube = downloader.create_cube(\n    start_date='20230601',\n    end_date='20230615',\n    datatype=INPETypes.DAILY_RAIN\n)\n\ncube\n```", "```py\nfrom mergedownloader.utils import GISUtil\n\n# open the amazon geometry\namazon = gpd.read_file('https://raw.githubusercontent.com/cordmaur/Fastai2-Medium/master/Data/amazon.geojson')\n\n# cut the cube by the given geometry\namazon_cube = GISUtil.cut_cube_by_geoms(\n    cube=cube,\n    geometries = amazon.geometry\n)\n\n# accumulate the rain along the time axis\namazon_rain = amazon_cube.sum(dim='time', skipna=False)\n\n# plot the figure\nfig, ax = plt.subplots(figsize=(8, 5))\namazon_rain.plot(ax=ax)\nsouth_america.plot(ax=ax, facecolor='none', edgecolor='firebrick')\n```", "```py\n# Create the cubes\ncube_2015 = downloader.create_cube(\n    start_date='2015-01',\n    end_date='2015-12',\n    datatype=INPETypes.MONTHLY_ACCUM_YEARLY\n)\n\ncube_lta = downloader.create_cube(\n    start_date='2015-01',\n    end_date='2015-12',\n    datatype=INPETypes.MONTHLY_ACCUM\n)\n\n# Create the series\nseries_2015 = downloader.get_time_series(\n    cube=cube_2015, \n    shp=amazon,\n    reducer=xr.DataArray.mean\n)\n\nseries_lta = downloader.get_time_series(\n    cube=cube_lta, \n    shp=amazon,\n    reducer=xr.DataArray.mean\n)\n\n# create a string index with just year and month\nseries_lta.index = series_2015.index = series_2015.index.astype('str').str[:7]\n\n# plot the graph\nfig, ax = plt.subplots(figsize=(12,6))\n\nseries_lta.plot(ax=ax, kind='line', color='orange', marker='x')\nseries_2015.plot(ax=ax, kind='bar')\n```"]