["```py\n#!pip install langchain openai weaviate-client\n```", "```py\nOPENAI_API_KEY=\"<YOUR_OPENAI_API_KEY>\"\n```", "```py\nimport dotenv\ndotenv.load_dotenv()\n```", "```py\nimport requests\nfrom langchain.document_loaders import TextLoader\n\nurl = \"https://raw.githubusercontent.com/langchain-ai/langchain/master/docs/docs/modules/state_of_the_union.txt\"\nres = requests.get(url)\nwith open(\"state_of_the_union.txt\", \"w\") as f:\n    f.write(res.text)\n\nloader = TextLoader('./state_of_the_union.txt')\ndocuments = loader.load()\n```", "```py\nfrom langchain.text_splitter import CharacterTextSplitter\ntext_splitter = CharacterTextSplitter(chunk_size=500, chunk_overlap=50)\nchunks = text_splitter.split_documents(documents)\n```", "```py\nfrom langchain.embeddings import OpenAIEmbeddings\nfrom langchain.vectorstores import Weaviate\nimport weaviate\nfrom weaviate.embedded import EmbeddedOptions\n\nclient = weaviate.Client(\n  embedded_options = EmbeddedOptions()\n)\n\nvectorstore = Weaviate.from_documents(\n    client = client,    \n    documents = chunks,\n    embedding = OpenAIEmbeddings(),\n    by_text = False\n)\n```", "```py\nretriever = vectorstore.as_retriever()\n```", "```py\nfrom langchain.prompts import ChatPromptTemplate\n\ntemplate = \"\"\"You are an assistant for question-answering tasks. \nUse the following pieces of retrieved context to answer the question. \nIf you don't know the answer, just say that you don't know. \nUse three sentences maximum and keep the answer concise.\nQuestion: {question} \nContext: {context} \nAnswer:\n\"\"\"\nprompt = ChatPromptTemplate.from_template(template)\n\nprint(prompt)\n```", "```py\nfrom langchain.chat_models import ChatOpenAI\nfrom langchain.schema.runnable import RunnablePassthrough\nfrom langchain.schema.output_parser import StrOutputParser\n\nllm = ChatOpenAI(model_name=\"gpt-3.5-turbo\", temperature=0)\n\nrag_chain = (\n    {\"context\": retriever,  \"question\": RunnablePassthrough()} \n    | prompt \n    | llm\n    | StrOutputParser() \n)\n\nquery = \"What did the president say about Justice Breyer\"\nrag_chain.invoke(query)\n```", "```py\n\"The president thanked Justice Breyer for his service and acknowledged his dedication to serving the country. \nThe president also mentioned that he nominated Judge Ketanji Brown Jackson as a successor to continue Justice Breyer's legacy of excellence.\"\n```"]