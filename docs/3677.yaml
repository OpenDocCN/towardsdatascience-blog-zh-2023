- en: Be Careful When Using “NOT IN” in SQL
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/be-careful-when-using-not-in-in-sql-c692fad3427b?source=collection_archive---------11-----------------------#2023-12-15](https://towardsdatascience.com/be-careful-when-using-not-in-in-sql-c692fad3427b?source=collection_archive---------11-----------------------#2023-12-15)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: + 3 simple solutions to make sure you’re not caught out
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@mattchapmanmsc?source=post_page-----c692fad3427b--------------------------------)[![Matt
    Chapman](../Images/7511deb8d9ed408ece21031f6614c532.png)](https://medium.com/@mattchapmanmsc?source=post_page-----c692fad3427b--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c692fad3427b--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c692fad3427b--------------------------------)
    [Matt Chapman](https://medium.com/@mattchapmanmsc?source=post_page-----c692fad3427b--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fbf7d13fc53db&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbe-careful-when-using-not-in-in-sql-c692fad3427b&user=Matt+Chapman&userId=bf7d13fc53db&source=post_page-bf7d13fc53db----c692fad3427b---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c692fad3427b--------------------------------)
    ·5 min read·Dec 15, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc692fad3427b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbe-careful-when-using-not-in-in-sql-c692fad3427b&user=Matt+Chapman&userId=bf7d13fc53db&source=-----c692fad3427b---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc692fad3427b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbe-careful-when-using-not-in-in-sql-c692fad3427b&source=-----c692fad3427b---------------------bookmark_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Recently, I came across [Benjamin Thürer’s](https://medium.com/@benjamin.thuerer)
    excellent article:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/how-to-avoid-five-common-mistakes-in-google-bigquery-sql-6fafab396d88?source=post_page-----c692fad3427b--------------------------------)
    [## How to Avoid Five Common Mistakes in Google BigQuery / SQL'
  prefs: []
  type: TYPE_NORMAL
- en: While working with BigQuery for years, I observed 5 issues that are commonly
    made, even by experienced Data Scientists
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/how-to-avoid-five-common-mistakes-in-google-bigquery-sql-6fafab396d88?source=post_page-----c692fad3427b--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: …in which he cautions us about using the `NOT IN` SQL clause in BigQuery.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, I’ll expand on what he said by providing more examples, remedies
    and practice questions.
  prefs: []
  type: TYPE_NORMAL
- en: If you want to understand why the `NOT IN` clause is risky — and what to do
    about it — read on!
  prefs: []
  type: TYPE_NORMAL
- en: 'The problem: NOT IN doesn’t handle NULLs in the way you might expect'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The `IN` and `NOT IN` operators provide a logical way to compare arrays. For
    example, if you write:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'BigQuery will return `true`. If you write:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: BigQuery will return `false`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Seems simple, right? But there’s a problem: `IN` and `NOT IN` do weird things
    when the lookup array contains `NULL` values. The following code, for example,
    will return `NULL`, not `false`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
