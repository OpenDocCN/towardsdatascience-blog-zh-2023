- en: Be Careful When Using “NOT IN” in SQL
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/be-careful-when-using-not-in-in-sql-c692fad3427b?source=collection_archive---------11-----------------------#2023-12-15](https://towardsdatascience.com/be-careful-when-using-not-in-in-sql-c692fad3427b?source=collection_archive---------11-----------------------#2023-12-15)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: + 3 simple solutions to make sure you’re not caught out
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@mattchapmanmsc?source=post_page-----c692fad3427b--------------------------------)[![Matt
    Chapman](../Images/7511deb8d9ed408ece21031f6614c532.png)](https://medium.com/@mattchapmanmsc?source=post_page-----c692fad3427b--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c692fad3427b--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c692fad3427b--------------------------------)
    [Matt Chapman](https://medium.com/@mattchapmanmsc?source=post_page-----c692fad3427b--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fbf7d13fc53db&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbe-careful-when-using-not-in-in-sql-c692fad3427b&user=Matt+Chapman&userId=bf7d13fc53db&source=post_page-bf7d13fc53db----c692fad3427b---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c692fad3427b--------------------------------)
    ·5 min read·Dec 15, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc692fad3427b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbe-careful-when-using-not-in-in-sql-c692fad3427b&user=Matt+Chapman&userId=bf7d13fc53db&source=-----c692fad3427b---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc692fad3427b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbe-careful-when-using-not-in-in-sql-c692fad3427b&source=-----c692fad3427b---------------------bookmark_footer-----------)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: 'Recently, I came across [Benjamin Thürer’s](https://medium.com/@benjamin.thuerer)
    excellent article:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '[](/how-to-avoid-five-common-mistakes-in-google-bigquery-sql-6fafab396d88?source=post_page-----c692fad3427b--------------------------------)
    [## How to Avoid Five Common Mistakes in Google BigQuery / SQL'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: While working with BigQuery for years, I observed 5 issues that are commonly
    made, even by experienced Data Scientists
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/how-to-avoid-five-common-mistakes-in-google-bigquery-sql-6fafab396d88?source=post_page-----c692fad3427b--------------------------------)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: …in which he cautions us about using the `NOT IN` SQL clause in BigQuery.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: In this article, I’ll expand on what he said by providing more examples, remedies
    and practice questions.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: If you want to understand why the `NOT IN` clause is risky — and what to do
    about it — read on!
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解为什么 `NOT IN` 子句是有风险的——以及应该如何应对——请继续阅读！
- en: 'The problem: NOT IN doesn’t handle NULLs in the way you might expect'
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题：`NOT IN` 不能按照你预期的方式处理 `NULL` 值
- en: 'The `IN` and `NOT IN` operators provide a logical way to compare arrays. For
    example, if you write:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`IN` 和 `NOT IN` 运算符提供了一种逻辑方式来比较数组。例如，如果你写：'
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'BigQuery will return `true`. If you write:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: BigQuery 将返回 `true`。如果你写：
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: BigQuery will return `false`.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: BigQuery 将返回 `false`。
- en: 'Seems simple, right? But there’s a problem: `IN` and `NOT IN` do weird things
    when the lookup array contains `NULL` values. The following code, for example,
    will return `NULL`, not `false`:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来很简单，对吧？但有一个问题：当查找数组包含 `NULL` 值时，`IN` 和 `NOT IN` 会做出奇怪的操作。以下代码，例如，将返回 `NULL`，而不是
    `false`：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
