- en: 'Crossing the AI Chasm: How OpenAI Turned LLMs into a Mainstream Success'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/crossing-the-ai-chasm-how-openai-turned-llms-into-a-mainstream-success-fc70315cf247?source=collection_archive---------2-----------------------#2023-10-19](https://towardsdatascience.com/crossing-the-ai-chasm-how-openai-turned-llms-into-a-mainstream-success-fc70315cf247?source=collection_archive---------2-----------------------#2023-10-19)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: And why LLMOps will suffer the same fate as MLOps
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@clemensm?source=post_page-----fc70315cf247--------------------------------)[![Clemens
    Mewald](../Images/c1c9277335dc2a8e238736be824f7fdd.png)](https://medium.com/@clemensm?source=post_page-----fc70315cf247--------------------------------)[](https://towardsdatascience.com/?source=post_page-----fc70315cf247--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----fc70315cf247--------------------------------)
    [Clemens Mewald](https://medium.com/@clemensm?source=post_page-----fc70315cf247--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F3214e56806b6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcrossing-the-ai-chasm-how-openai-turned-llms-into-a-mainstream-success-fc70315cf247&user=Clemens+Mewald&userId=3214e56806b6&source=post_page-3214e56806b6----fc70315cf247---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----fc70315cf247--------------------------------)
    ·15 min read·Oct 19, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ffc70315cf247&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcrossing-the-ai-chasm-how-openai-turned-llms-into-a-mainstream-success-fc70315cf247&user=Clemens+Mewald&userId=3214e56806b6&source=-----fc70315cf247---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffc70315cf247&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcrossing-the-ai-chasm-how-openai-turned-llms-into-a-mainstream-success-fc70315cf247&source=-----fc70315cf247---------------------bookmark_footer-----------)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: I’ve been a [vocal](https://medium.com/thelaunchpad/your-deep-learning-tools-for-enterprises-startup-will-fail-94fb70683834)
    [skeptic](https://medium.com/towards-data-science/the-problem-with-ai-developer-tools-for-enterprises-and-what-ikea-has-to-do-with-it-b26277841661)
    about the viability of ML developer tooling (broadly categorized as MLOps) as
    standalone businesses and, with very few exceptions, I’ve been proven right. The
    lack of a dominant design has led to fragmented “micro-markets” with very little
    value capture, mostly because of open source alternatives and cloud vendors giving
    their ML tools away for free (to collect revenue on the infrastructure layer).
    So what led LLMs to blow right past these problems, receive breakout media attention,
    and achieve real widespread adoption? And what is going to happen to all of the
    startups throwing the MLOps playbook at LLMs, rebranding as LLMOps?
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: In this post I’ll use the “diffusion of innovation” theory as well as the concept
    of “crossing the chasm” in an effort to explain my bullish expectations of LLM
    providers like [OpenAI](https://openai.com/) or [Anthropic](https://www.anthropic.com/),
    and my bearish view on the attempt to resurrect MLOps as LLMOps.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: The adoption of innovations and the chasm
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: According to Everett Rogers’ “[Diffusion of Innovations](https://en.wikipedia.org/wiki/Diffusion_of_innovations)”,
    innovative products are adopted progressively by different groups of adopters
    with distinct traits. Innovators, who are willing to take risks and have a high
    tolerance for failure, are the first to try out a new product. Laggards, who have
    an aversion to change, are the last. The famous bell-curve shaped graph shows
    the percentage of adopters in each category, and the corresponding graph of cumulative
    adoption resembles the familiar “S curve” pattern of an innovation’s market share
    over time.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8cc97343867deec8d612ce0f44ce2ce9.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
- en: Image by author (modified from [source](https://en.wikipedia.org/wiki/Diffusion_of_innovations#/media/File:Diffusion_of_ideas.svg))
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: The basic idea is that each group is influenced by signals and behaviors of
    the preceding groups, relying on social proof to inform their decision to adopt
    a new product. This is a well understood and empirically documented phenomenon,
    observed in anything from window AC units to iPhones.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: The “chasm” is a concept popularized by Geoffrey A. Moore’s “[Crossing the Chasm](https://en.wikipedia.org/wiki/Crossing_the_Chasm)”
    that builds on Rogers’ theory. Moore argues that the differences between the early
    and the mainstream markets are too large and that most products die trying to
    bridge that “chasm”, which is a fairly common failure mode in tech startups.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/102e0ec7fd7a53915f746129affc28f8.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
- en: Image by author (modified from [source](https://en.wikipedia.org/wiki/Crossing_the_Chasm#/media/File:Technology-Adoption-Lifecycle.png))
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: Although Rogers criticized the concept of the chasm by saying that the diffusion
    of innovation is a “*social process*” with “*no sharp breaks or discontinuities
    between adjacent adopter categories*”, it should be obvious that many products
    fail to reach the mainstream because they never make it past the Innovator group.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管罗杰斯批评了鸿沟的概念，称创新的扩散是一个“*社会过程*”，并且“*没有相邻采纳类别之间的明显中断或断层*”，但显而易见的是，许多产品未能达到主流市场，因为它们从未超越创新者群体。
- en: Moore provides several suggestions on how to bridge the chasm that I only partially
    agree with. One observation is that, in his own words, his book primarily treats
    the chasm “*as a market development problem*” and focuses “*on marketing strategies
    and tactics for crossing it*”. He does cover the idea of “whole product management”,
    but based on his reading of Theodore Levitt’s “The Marketing Imagination” that
    concept is limited to bridging the gap between marketing message and product truth
    with “services and ancillary products”. He does not address the actual evolution
    of the product. In fact, the innovation (aka the core product) is treated as a
    constant.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 摩尔提供了几种弥合鸿沟的建议，我只部分同意。根据他自己的说法，他的书主要将鸿沟视为“*市场发展问题*”，并专注于“*穿越鸿沟的市场策略和战术*”。他确实涉及了“整体产品管理”的概念，但根据他对西奥多·列维特的《市场营销想象力》的解读，这一概念仅限于通过“服务和附加产品”弥合市场信息和产品真实性之间的差距。他并未讨论产品的实际演变。实际上，创新（即核心产品）被视为一个常量。
- en: Taking the specific attributes of software (particularly developer tools) into
    account, I propose two strategies (“evolve” and “skip”) for avoiding the chasm
    and hypothesize how their application helped fuel the rapid rise of LLMs.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到软件（特别是开发者工具）的具体属性，我提出了两种策略（“进化”和“跳过”）来避免鸿沟，并假设它们的应用如何助推了LLMs的快速崛起。
- en: Two product-centric ways of avoiding the chasm
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 避免鸿沟的两种以产品为中心的方法
- en: Evolve (simplify) your developer tools over time
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 随着时间的推移，*进化*（简化）你的开发者工具
- en: The limitation that the product is a constant, while all other aspects of the
    “whole product” (like messaging, distribution, pricing) change to appeal to different
    adoption groups, is mostly motivated by physical products. If you’re in the business
    of producing and selling widgets, changing your supply chain or retooling your
    factories is not a trivial thing to do. However, this is an entirely different
    story with products that are exclusively software. Not evolving your software
    product is almost always a recipe for failure.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 产品是常量的限制，而“整体产品”的所有其他方面（如信息传递、分销、定价）随着不同采纳群体的变化而改变，这主要受到物理产品的影响。如果你从事生产和销售小部件的业务，更改供应链或重新配置工厂并非易事。然而，这对于纯软件产品而言完全是另一回事。不进化你的软件产品几乎总是失败的秘诀。
- en: The need to evolve should be obvious based on how most software startups start
    out these days. More often than not, developer tools (especially in AI) are born
    and nurtured amidst a strong and devoted user base of experts in a specific field.
    It may not come as a surprise that these early users are usually Innovators and,
    as such, are not representative of the broader market. It is far too easy for
    founders to spend all of their time and energy on this segment and tweak their
    products based on their feedback. Unfortunately, commercial success is rarely
    found in those first groups. Innovators are very sophisticated and often prefer
    to build vs. buy. Even if they decided to buy they wouldn’t represent a big enough
    market.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 从大多数软件初创公司的起步方式来看，进化的必要性应当显而易见。开发者工具（特别是在AI领域）通常是在特定领域的专家用户基础中诞生和成长的。令人不惊讶的是，这些早期用户通常是创新者，因此并不代表更广泛的市场。创始人很容易将所有时间和精力投入到这一细分市场，根据他们的反馈调整产品。不幸的是，商业成功很少出现在这些早期群体中。创新者非常成熟，通常更倾向于自建而非购买。即便他们决定购买，他们也不会代表足够大的市场。
- en: One solution to this problem is to evolve the product over time for different
    target audiences. With well-designed developer tools this means introducing new
    layers of abstractions and/or supporting more widely used languages. To use an
    example from my previous employer, the ongoing success of Spark is (at least in
    my opinion) partially due to the fact that the product surface has continuously
    been simplified to attract a wider range of users (dare I say the Early Majority?).
    Spark started out with RDDs (Resilient Distributed Datasets) and Scala as its
    main programming language. Then it expanded language support to Python with PySpark
    (opening up to a broader set of software engineers) and introduced simpler APIs
    like the DataFrame, as well as SparkSQL (opening up to SQL analysts). More recently,
    Spark added a Pandas-compatible API (opening up to Data Scientists) and even introduced
    an “[English SDK](https://www.databricks.com/blog/introducing-english-new-programming-language-apache-spark)”
    using LLMs (opening up to, well, anyone who knows English). If Spark had not evolved
    in this manner it would have been stuck in the Innovator segment of experts that
    know how to write intricate MapReduce programs in Scala.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f080c0490cd66af36ad536810a60a344.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
- en: Image by author
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: This strategy seems somewhat obvious but not many technology products (especially
    in developer tooling) get this right. They sometimes “simplify” the product by
    removing some knobs but fail to introduce new layers of abstraction that are not
    leaky.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: Skip the chasm entirely
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Another approach, which is less common in developer tools, is to skip the chasm
    entirely. The idea is deceivingly simple: If success in the early market doesn’t
    automatically translate to success in the mainstream market, why not directly
    target the early majority?'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: As mentioned before, this is more important in hardware where iterations on
    a product are slower, more costly, and as a result the core product can’t evolve
    as easily. The iPhone is a great example of a product that frequently gets criticized
    by Innovators (even as recent as the iPhone 15 and its [“disappointing” USB-C
    port](https://www.tomsguide.com/opinion/iphone-15-usb-c-is-a-big-disappointment-heres-why))
    but achieved rapid success with the Early Majority who didn’t care about these
    technical details. In fact, Apple repeatedly teaches the industry a masterclass
    on this strategy with their messaging. Probably the most famous example is the
    “1,000 songs in your pocket” campaign, which was targeted towards the Early Majority,
    not Innovators who care about technical specifications.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/746b6dc4d7654e1b34bdfe98c1c58809.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
- en: Image by author
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: This seems unnatural to many tech startups (especially those focusing on developer
    tooling) because it’s just too easy to achieve early success with innovators and
    early adopters. AI developer tools start out in the early market almost by definition,
    since they are usually built by and for advanced AI researchers or ML engineers.
    The practice of “proving product<>market fit” as measured by GitHub stars by open
    sourcing a project just reinforces this.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: '**Common failed strategies in commercializing open source projects**'
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: I’ve seen enough “open source project turned startup” to have at least some
    level of “pattern recognition” for common failure modes. These startups find early
    success (and funding) when they experience growing adoption as measured by GitHub
    stars or PyPI downloads. Then they tragically follow similar paths, sometimes
    even if there is an experienced founder who “has done it before” (because they
    don’t actually understand why their previous companies succeeded).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c455f481591fed01b8dacbed5b0a1cea.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
- en: Image by author
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: '**Upsell Innovators**: Intuitively (or naively?), most startups first attempt
    to upsell Innovators with a “managed” version of the open source product. This
    strategy usually falls flat because early Innovators, by definition, are very
    sophisticated and prefer to build vs. buy. The generic 3S strategy (managed OSS
    + stability, scalability, security) is not sufficient for this audience to justify
    writing a check, since they already know how to build and run services themselves.
    Innovators also fear “vendor lock-in” and losing their ability to innovate independently.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: '**Product Market Mismatch**: The next attempt is to sell the same “Managed
    OSS” product to the Early Majority. That usually fails because the core offering
    is still the same hard-to-use product that has been optimized for Innovators.
    Just adding 3S is not sufficient to incentivize the Early Majority to upskill
    (like the plans to train up millions of ML engineers to force the MLOps market
    into existence). If that wasn’t enough, the final nail in the coffin is that no
    one beats AWS at this game (which is also the reason why more and more infrastructure
    open source projects [switch to non-commercial licenses](https://www.hashicorp.com/blog/hashicorp-adopts-business-source-license)).'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: '**“Whole Product”**: I call this strategy “whole product” sarcastically, because
    this term has been misused to fill fundamental product gaps by suboptimal means.
    This attempt usually follows the realization that the core product is too hard
    to use for a larger market, and the solution commonly involves “throwing humans
    at the problem”. This leads to a high service component in a startup’s revenue
    structure (which no investor likes to see) and bloated delivery organizations.
    To be fair, some amount of this is necessary, particularly in the enterprise segment
    or federal. But, more often than not, the startup starts looking like a tech consulting
    company.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: A hybrid approach for developer tools
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The strategy I am proposing is a hybrid approach that still allows for rapid
    iteration with a devoted user base of Innovators but acknowledges the fundamental
    differences in the early and mainstream markets by explicitly focusing on the
    Early Majority in product definition.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c858f11d92750e88e2ed03b2441a8acf.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
- en: 'Proving out early success with Innovators through open source doesn’t have
    to be at odds with finding commercial viability with the Early Majority if you
    recognize that they require different products. Specifically, I suggest to:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: Use your open source project to gain popularity with Innovators
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use that popularity to raise money
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use the Innovator group to find out how they are creating downstream value and
    for whom
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Target your mainstream product to that audience
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'This is where the Diffusion of Innovation for software is different from consumer
    hardware like iPhones: The key insight is that, in the software value chain, Innovators
    are often the middlemen (middlepersons?) to the Early Majority. Put differently,
    Innovators themselves are not the end of the value chain. They consume technology
    to help product/business teams create value. Sometimes that takes the shape of
    a “Center of Excellence” or a centralized “Innovation Team”. The goal of a tech
    startup should be to learn who sits in the value chain after those Innovators,
    which is where they will find the key to the Early Majority. Critically, I am
    not saying that you should try to disintermediate those Innovators in organizations
    where they exist, because that usually leads to a political backlash. In those
    cases you need to make them your “champions”.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: The goal of a tech startup should be to learn who sits in the value chain after
    those Innovators, which is where they will find the key to the Early Majority.
  id: totrans-51
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'The main implication of the “skip” strategy is to make an explicit decision
    during product definition to address the Early Majority. Note that this is different
    from the “evolve” strategy in that the “mainstream product” may not simply be
    an easier version of your original product, but may take an entirely different
    shape. The two extremes of this different shape are:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: '**A higher level of abstraction than the original OSS project, in a different
    form factor.** Although imperfect, Databricks provides another example for this.
    The breakout product that led to initial interest outside of the Innovators group
    was not just “managed Spark” but a managed Notebook product for Data Scientists
    and Engineers (which, at that point in time, was quite novel). Databricks continues
    to follow the same strategy today with products like Databricks SQL.'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**A more focused verticalized product higher in the value chain.** Stripe is
    a great example as they originally started out with an open source payment processing
    library and then found success with products like Checkout (a full payment form
    for websites) or Terminal (point-of-sales checkout terminals).'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How MLOps failed to evolve and LLMs skipped the chasm
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: MLOps got stuck in the early market
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A similar story to the one I shared about the evolution of Spark cannot be told
    about ML. The MLOps stack looks pretty much the same as it did a few years ago,
    and the hope in the market is that more and more engineers will learn how to use
    it.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: 'Without reminiscing about [how we got here](https://medium.com/towards-data-science/the-problem-with-ai-developer-tools-for-enterprises-and-what-ikea-has-to-do-with-it-b26277841661),
    let me just briefly summarize my opinion on the state of the MLOps market:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: The MLOps market has not converged on a “dominant design” and, as a result,
    every “MLOps platform” you will find is different in both obvious and subtle ways.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: On a systems level, the MLOps market hasn’t produced a simpler “form factor”
    or levels of abstraction, so it is still prohibitively complex and requires several
    specialized roles (Data Engineers, Data Scientists, ML Engineers, etc.) that are
    only prevalent in the most advanced tech companies.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The audience who **can** consume this technology, namely Innovators and Early
    Adopters, prefer to live on the cutting edge and use open source tools instead
    of paying a vendor.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The audience who would be willing to pay a vendor usually just defaults to what
    the main cloud service providers are offering. Cloud providers are giving the
    “ML Platform” layer away for free and are content with collecting revenue on storage
    and compute.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Since cloud vendors haven’t monetized MLOps explicitly, the value capture in
    this market has been minimal.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In summary, MLOps has fallen into the chasm and there’s no sign of it reemerging
    on the other side.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: The Early Majority Appeal of LLMs
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Enter LLMs. OpenAI reportedly [passed $1.3B in ARR](https://www.theinformation.com/articles/openais-revenue-crossed-1-3-billion-annualized-rate-ceo-tells-staff)
    and is expected to keep growing at a rapid pace, which can’t be said about MLOps
    startups. In fact, you could probably add up the top 10 MLOps startups’ revenue
    and not even get close. Remember that most cloud providers don’t actually monetize
    this layer outside of charging for compute and storage, so their “ML” revenue
    doesn’t really count (unless you want to get into the business of providing cloud
    infrastructure at commodity prices).
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: This begs the question, why did LLMs achieve such mainstream success so quickly?
    I’d argue that they successfully skipped the chasm in two very different segments.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: Skipping the chasm in the developer segment
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Traditional “discriminative” ML models are trained for very specific tasks,
    like predicting the quality of a sales lead or ranking a list of products. For
    each one of those tasks, several experts have to work together to write data pipelines,
    collect labels, refine so-called “features”, train and fine-tune models, evaluate
    them, deploy them, monitor their performance, and then retrain them periodically.
    Both the need to repeat this for every task, as well as the amount of expertise
    required to pull it off, meant that this miracle was attainable only by a select
    few.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的“判别型”机器学习模型则针对非常具体的任务进行训练，比如预测销售线索的质量或对产品列表进行排序。对于每个任务，几个专家必须合作编写数据管道、收集标签、优化所谓的“特征”、训练和微调模型、评估它们、部署它们、监控其性能，然后定期重新训练它们。无论是对每个任务重复这一过程的需求，还是完成它所需的专业知识，意味着这种奇迹仅为少数人所能实现。
- en: “Generative” language models, on the other hand, “just work” for a wide variety
    of use cases, enabling anyone who can make an API call to apply AI to their product
    or problem. Almost overnight, LLMs solved the talent shortage in the “applied
    AI” space by giving every software engineer AI superpowers. Critically, the same
    LLM could generate poems, write code, translate natural language questions into
    SQL queries, or pass a wide variety of standardized tests. This works either “just
    out of the box” (zero-shot), or simply by giving the model a few examples of the
    problem you want to solve (few-shot) and extends to a wide variety of modalities,
    not just text.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，“生成型”语言模型对于各种用例“直接有效”，使得任何能够进行 API 调用的人都可以将 AI 应用于他们的产品或问题。几乎一夜之间，LLMs
    通过赋予每个软件工程师 AI 超能力解决了“应用 AI”领域的人才短缺问题。关键是，同一个 LLM 可以生成诗歌、编写代码、将自然语言问题转换为 SQL 查询，或通过各种标准化测试。这要么是“开箱即用”（零样本），要么是通过给模型提供一些你想解决的问题的示例（少样本），并扩展到各种模态，而不仅仅是文本。
- en: '![](../Images/09a7c06b36a5393da65ce424d9f69571.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/09a7c06b36a5393da65ce424d9f69571.png)'
- en: Image by author
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: '**This is the very definition of skipping the chasm and going straight for
    the Early Majority.**'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**这正是跳过鸿沟直达早期多数群体的定义。**'
- en: It’s also why LLMOps is bound to repeat history. I guess if you have a hammer,
    everything looks like a nail. Inevitably a cottage industry emerged around the
    idea that everyone needs to train and fine-tune their own LLMs, which is missing
    the whole point of why LLMs have been so successful in the first place. Adding
    back the complexity of writing your data pipelines, training and fine-tuning your
    own models, deploying them, etc., puts you back into the micro-market of Innovators
    who prefer to build instead of buy.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这也是为什么 LLMOps 注定要重蹈历史的原因。我想如果你有一把锤子，一切看起来都像钉子。不可避免地，围绕每个人都需要训练和微调自己的 LLM 的想法出现了一个小行业，这完全忽视了
    LLMs 为什么一开始就如此成功的根本原因。重新增加编写数据管道、训练和微调自己的模型、部署等复杂性，会让你回到那些喜欢建造而不是购买的创新者微市场中。
- en: Note that I am not saying that no one should be fine-tuning and deploying their
    own LLMs. Under some very specific circumstances (which are few) it does make
    sense to do so. But in almost all of those circumstances you will find yourself
    in the Innovators and Early Adopters groups, and those groups will just use open
    source tools and not pay a vendor for the benefit.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我并不是说没有人应该微调和部署自己的 LLM。在某些非常具体的情况下（这些情况很少），这样做是有意义的。但在几乎所有这些情况下，你会发现自己处于创新者和早期采纳者群体中，这些群体只会使用开源工具，而不会向供应商支付费用。
- en: Skipping the chasm in the consumer segment
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 跳过消费者领域的鸿沟
- en: 'OpenAI plays in two very different segments: The developer segment discussed
    above is served with APIs and dedicated compute capacity. ChatGPT and its mobile
    Apps, on the other hand, are very much “consumer” products. ChatGPT is famously
    one of the fastest products to reach 1M users (in 5 days) and, while there is
    no official breakdown of OpenAI’s revenue numbers, one estimate puts revenue from
    [mobile apps at $3M per month](https://appfigures.com/resources/insights/20231006?f=2).
    Doesn’t sound like a product that slowly grew through the early market, does it?'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: OpenAI 涉足于两个截然不同的领域：如上所述的开发者领域通过 API 和专用计算能力服务。而 ChatGPT 及其移动应用则非常属于“消费者”产品。ChatGPT
    以在`5 days`内达到 1M 用户的速度而闻名，虽然没有 OpenAI 收入数据的官方细分，但有估计认为来自[移动应用的收入为每月 $3M](https://appfigures.com/resources/insights/20231006?f=2)。这听起来不像是一个缓慢增长的早期市场产品，对吧？
- en: Despite its jargony name (GPT stands for Generative Pretrained Transformer),
    ChatGPT skipped right to the Early Majority, mostly due to its friendly and easy-to-use
    form factor. Anyone, from journalists to teachers or students, could access it
    for free and immediately experience the value. If OpenAI had just released a model
    that engineers could call through REST APIs, it wouldn’t have led to the massive
    amount of adoption by the mainstream.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管名字听起来有些术语化（GPT代表生成预训练变换器），但ChatGPT直接跳过了早期大多数用户，主要是由于其友好且易于使用的形式。无论是记者、教师还是学生，都可以免费访问并立即体验其价值。如果OpenAI仅仅发布了一个工程师可以通过REST
    API调用的模型，可能不会导致主流的广泛采用。
- en: Most executives would tell you that splitting your focus between two wildly
    different segments is generally a bad idea. However, I’d argue that the broad
    success of ChatGPT with consumers was instrumental in driving demand in the developer
    segment. It turns out that developers and enterprise buyers are also human. They
    read the news, follow trends, and try out consumer products. OpenAI, whether intentional
    or not, benefited from this in several ways.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数高管会告诉你，将焦点分散在两个截然不同的领域通常不是个好主意。然而，我认为ChatGPT在消费者中的广泛成功对开发者领域的需求推动起到了重要作用。事实证明，开发者和企业买家也是人。他们阅读新闻，关注趋势，并尝试消费产品。OpenAI，无论是有意还是无意，都在这方面受益匪浅。
- en: Most obviously, awareness and brand recognition is critical to any business.
    Although OpenAI and LLMs were already well known within the AI crowd, it took
    ChatGPT to make it a brand name for the Early Majority in the broader developer
    segment.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最明显的是，意识和品牌认知对任何业务都至关重要。虽然OpenAI和LLMs在AI圈子里已经相当有名，但ChatGPT使其成为了更广泛开发者群体中的一个品牌名称。
- en: One of the reasons the “chasm” exists in the first place is that the Early Majority
    is usually risk averse and doesn’t trust signals from Innovators. One way to overcome
    this is by providing them an easy way to experience the product. ChatGPT provided
    the perfect “free trial” experience for non-technical decision makers in the Early
    Majority.
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “鸿沟”存在的原因之一是早期大多数用户通常是风险规避型的，不信任来自创新者的信号。克服这一点的一种方法是为他们提供一种简单的方式来体验产品。ChatGPT为早期大多数用户中的非技术决策者提供了完美的“免费试用”体验。
- en: The more “typical” way to achieve revenue growth like OpenAI is to hire an enterprise
    sales team. It turns out that the traditional Sales-Led-Growth (SLG) motion benefits
    significantly from tried-and-true PLG methods like seamless access to experience
    a product. Enterprise buyers increasingly expect to “[*see and experience the
    product’s value before committing to a large contrac*t](https://www.mckinsey.com/industries/technology-media-and-telecommunications/our-insights/from-product-led-growth-to-product-led-sales-beyond-the-plg-hype)”.
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 像OpenAI这样实现收入增长的“典型”方式是聘请企业销售团队。事实证明，传统的销售主导增长（SLG）模式从经过验证的产品主导增长（PLG）方法中受益匪浅，例如无缝访问产品体验。企业买家越来越期望“[*在承诺大合同之前先看到并体验产品的价值*](https://www.mckinsey.com/industries/technology-media-and-telecommunications/our-insights/from-product-led-growth-to-product-led-sales-beyond-the-plg-hype)”。
- en: Conclusion
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: I started this post as a natural sequel to my [previous](https://medium.com/thelaunchpad/your-deep-learning-tools-for-enterprises-startup-will-fail-94fb70683834)
    [posts](https://medium.com/towards-data-science/the-problem-with-ai-developer-tools-for-enterprises-and-what-ikea-has-to-do-with-it-b26277841661)
    on developer tools for ML because I am seeing the MLOps story repeat itself with
    LLMOps. But, as I wrote about how LLMs skipped the chasm, I realized that the
    lessons may be applicable more broadly.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我开始撰写这篇文章，作为我关于[开发者工具](https://medium.com/thelaunchpad/your-deep-learning-tools-for-enterprises-startup-will-fail-94fb70683834)的[前文](https://medium.com/towards-data-science/the-problem-with-ai-developer-tools-for-enterprises-and-what-ikea-has-to-do-with-it-b26277841661)的自然续集，因为我看到MLOps的故事在LLMOps中重演。但正如我写到LLMs如何跳过鸿沟，我意识到这些经验可能更广泛适用。
- en: '**For LLM providers like OpenAI, Anthropic, et al.**: I am not sure if these
    companies stumbled upon this strategy accidentally, but, if applied intentionally,
    there are definitely lessons on how to improve both product development and GTM.
    However, if you are in hypergrowth mode there is little time or need for optimization.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**对于像OpenAI、Anthropic等LLM提供商**：我不确定这些公司是否偶然发现了这种策略，但如果有意应用，确实有很多关于如何改进产品开发和市场推广的经验。然而，如果你处于快速增长阶段，优化的时间和需求非常有限。'
- en: '**For anyone in the LLMOps ecosystem**: I invite you to read my previous posts
    on ML infrastructure and you will see why I believe there won’t be much value
    extraction at this layer. Additionally, I believe there are very few cases where
    fine-tuning LLMs actually makes sense, but others have already [written](https://www.tidepool.so/2023/08/17/why-you-probably-dont-need-to-fine-tune-an-llm/)
    [plenty](https://www.anyscale.com/blog/fine-tuning-is-for-form-not-facts) about
    this.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**对于 LLMOps 生态系统中的任何人**：我邀请你阅读我之前关于 ML 基础设施的文章，你会看到为什么我认为在这一层面上提取的价值不多。此外，我认为很少有情况真正需要微调
    LLM，但其他人已经 [写过](https://www.tidepool.so/2023/08/17/why-you-probably-dont-need-to-fine-tune-an-llm/)
    [很多](https://www.anyscale.com/blog/fine-tuning-is-for-form-not-facts)。'
- en: '**For tech startups in general**: I’ve seen massive funding rounds in open
    source based startups where the hypothesis was either “managed OSS + scale, stability,
    and security” or “open core and we’ll figure out monetization later”. I believe
    that the idea of “skipping the chasm” is valuable here and look forward to feedback
    from both founders and investors!'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '**对于科技初创公司**：我见过在基于开源的初创公司中进行的大规模融资轮次，其中假设要么是“管理型 OSS + 扩展、稳定性和安全性”，要么是“开放核心，稍后再考虑货币化”。我认为“跨越鸿沟”的想法在这里是有价值的，期待来自创始人和投资者的反馈！'
- en: '*Opinions expressed in this post are my own and not the views of my employer.*'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '*本文表达的观点仅代表我个人，不代表我雇主的观点。*'
- en: '[*Clemens*](https://www.linkedin.com/in/clemensmewald/) *is an entrepreneurial
    product leader who spent the last 8+ years bringing AI to developers and enterprises.*'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '[*克莱门斯*](https://www.linkedin.com/in/clemensmewald/) *是一位创业型产品领导者，过去 8 年多来致力于将
    AI 带给开发者和企业。*'
