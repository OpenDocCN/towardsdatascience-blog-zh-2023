- en: 'Simulating a Theme Park: Understanding queue times with R'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模拟主题公园：用R理解队列时间
- en: 原文：[https://towardsdatascience.com/simulating-a-theme-park-understanding-queue-times-with-r-100b12d97cd3?source=collection_archive---------4-----------------------#2023-08-21](https://towardsdatascience.com/simulating-a-theme-park-understanding-queue-times-with-r-100b12d97cd3?source=collection_archive---------4-----------------------#2023-08-21)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/simulating-a-theme-park-understanding-queue-times-with-r-100b12d97cd3?source=collection_archive---------4-----------------------#2023-08-21](https://towardsdatascience.com/simulating-a-theme-park-understanding-queue-times-with-r-100b12d97cd3?source=collection_archive---------4-----------------------#2023-08-21)
- en: Simulating a theme park to understand queue times and learn how business processes
    can be optimized in R.
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模拟主题公园以理解队列时间，并学习如何用R优化业务流程。
- en: '[](https://medium.com/@josephgeorgelewis2000?source=post_page-----100b12d97cd3--------------------------------)[![Joseph
    George Lewis](../Images/2d7c47bd9a323dd0f4a6b610e7fb08fd.png)](https://medium.com/@josephgeorgelewis2000?source=post_page-----100b12d97cd3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----100b12d97cd3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----100b12d97cd3--------------------------------)
    [Joseph George Lewis](https://medium.com/@josephgeorgelewis2000?source=post_page-----100b12d97cd3--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@josephgeorgelewis2000?source=post_page-----100b12d97cd3--------------------------------)[![Joseph
    George Lewis](../Images/2d7c47bd9a323dd0f4a6b610e7fb08fd.png)](https://medium.com/@josephgeorgelewis2000?source=post_page-----100b12d97cd3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----100b12d97cd3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----100b12d97cd3--------------------------------)
    [Joseph George Lewis](https://medium.com/@josephgeorgelewis2000?source=post_page-----100b12d97cd3--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F2aace34e9883&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsimulating-a-theme-park-understanding-queue-times-with-r-100b12d97cd3&user=Joseph+George+Lewis&userId=2aace34e9883&source=post_page-2aace34e9883----100b12d97cd3---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----100b12d97cd3--------------------------------)
    ·11 min read·Aug 21, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F100b12d97cd3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsimulating-a-theme-park-understanding-queue-times-with-r-100b12d97cd3&user=Joseph+George+Lewis&userId=2aace34e9883&source=-----100b12d97cd3---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F2aace34e9883&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsimulating-a-theme-park-understanding-queue-times-with-r-100b12d97cd3&user=Joseph+George+Lewis&userId=2aace34e9883&source=post_page-2aace34e9883----100b12d97cd3---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----100b12d97cd3--------------------------------)
    ·11分钟阅读·2023年8月21日'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F100b12d97cd3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsimulating-a-theme-park-understanding-queue-times-with-r-100b12d97cd3&source=-----100b12d97cd3---------------------bookmark_footer-----------)![](../Images/563602d6c9dd4c86d027fb9ad129e321.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F100b12d97cd3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsimulating-a-theme-park-understanding-queue-times-with-r-100b12d97cd3&source=-----100b12d97cd3---------------------bookmark_footer-----------)![](../Images/563602d6c9dd4c86d027fb9ad129e321.png)'
- en: Photo by [Thomas Kelley](https://unsplash.com/@thkelley?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Thomas Kelley](https://unsplash.com/@thkelley?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Long lines are always off-putting, especially when you are waiting to soar through
    space or sail along the Great Barrier Reef. As the summer holidays continue, I’m
    sure nearly everyone will be queueing for something, and hopefully, you’re lucky
    enough to be heading straight for the Magic Kingdom. Maybe you’re in one of those
    queues while you read this blog!
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 长时间排队总是让人不快，特别是当你在等待飞向太空或航行大堡礁时。随着暑假继续，我相信几乎每个人都会排队等候，希望你能幸运地直接前往魔法王国。也许你在阅读这个博客时正处于某个队列中！
- en: Some code is included to support the examples, but the full code can be found
    on my GitHub, which is linked at the end of the article. The project uses R and
    the *simmer* package for Discrete Event Simulation. Please enjoy!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 一些代码用于支持示例，但完整的代码可以在我的GitHub上找到，链接在文章末尾。该项目使用R语言和*simmer*包进行离散事件模拟。请享受！
- en: Concept Review — Discrete Event Simulation
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概念回顾——离散事件模拟
- en: So what will it take to simulate a theme park on my laptop? And will it look
    anything like Game Central Station from Wreck-it-Ralph?
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 那么在我的笔记本电脑上模拟一个主题公园需要什么？它会像《无敌破坏王》中的游戏中心站那样吗？
- en: I’m afraid not … the code written in R will use Discrete Event Simulation or
    DES, which really just shows what could happen in a process over time. The major
    use case of DES is to optimize processes which is why it is commonly used in operations
    research. Simulations allow decision-makers to view a typical process after many
    iterations and see how it could be improved. For example, would adding extra machines
    to a factory line reduce bottlenecks in producing a product?
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 恐怕不会……用R语言编写的代码将使用离散事件模拟（DES），它实际上展示了一个过程随时间的发展情况。DES的主要用途是优化过程，这也是它在运筹学中常被使用的原因。模拟允许决策者在多次迭代后查看典型过程，并观察如何改进。例如，增加额外的机器是否会减少生产产品的瓶颈？
- en: This article will apply DES to a hypothetical Disney World. This version of
    the park will be a bit simpler and will have some extra assumptions to make the
    modelling easier.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本文将离散事件模拟应用于一个假设的迪士尼世界。这个版本的公园会简单一些，并且有一些额外的假设以简化建模。
- en: As this blog is focussed more on the application, there will be lots of code
    examples over theory, but this concept review of the components involved should
    help get us up to speed.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这个博客更侧重于应用，因此将有很多代码示例，而非理论，但对所涉及组件的概念回顾应该有助于我们跟上进度。
- en: Components
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 组件
- en: 'There are some basic components that are required for DES to work. Each one
    is something we will create using *simmer* but let''s review them here before
    the coding begins:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 离散事件模拟需要一些基本组件。每个组件都是我们将使用*simmer*创建的，但在编码开始之前，让我们在这里回顾一下：
- en: '**Trajectory:** A trajectory is a path that a guest will take through the simulation.
    For example, when a guest arrives, they may queue up for a ride, go on a ride
    and then leave. This would be their trajectory.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**轨迹**：轨迹是来宾在模拟中将要走的路径。例如，当来宾到达时，他们可能会排队等候游乐设施，乘坐游乐设施后离开。这将是他们的轨迹。'
- en: '**Resource**: A resource is a thing that is used during the trajectory. In
    the example above, the ride would be a resource.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源**：资源是在轨迹中使用的事物。在上面的示例中，游乐设施就是一个资源。'
- en: '**Generator**: A generator is an item we use to generate the guests, and generators
    will typically generate many guests over the course of a simulation. The generator
    also needs a trajectory to know where generated guests should go.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**生成器**：生成器是我们用来生成来宾的工具，生成器通常会在模拟过程中生成许多来宾。生成器还需要一个轨迹来知道生成的来宾应该去哪里。'
- en: '**Environment**: The environment is where this whole simulation runs, in our
    case this is the Theme Park itself. It encapsulates all of our resources, generators
    and trajectories. With *simmer* there is an added advantage that the environment
    will also track and report our resource use, which makes the analysis of the simulation
    much simpler.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**环境**：环境是整个模拟运行的地方，在我们的案例中就是主题公园本身。它封装了所有资源、生成器和轨迹。使用*simmer*，环境还有一个额外的优点，它将跟踪和报告我们的资源使用情况，使得模拟分析更为简单。'
- en: With that review completed, let’s get hands-on! The simulations below build
    on one another and increase in complexity as they go on. For illustrative purposes,
    the code is not refactored until the final simulation which takes advantage of
    some extra R functions and features to clean up the simulation.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成审查后，来动手实践吧！下面的模拟是逐步构建的，复杂性逐渐增加。为了说明问题，代码在最后的模拟中才进行重构，利用了一些额外的R函数和特性来清理模拟。
- en: 'Simulation One: Meeting Lilo and Stitch'
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模拟一：遇见莉萝和史迪奇
- en: 'The first simulation will serve as an introduction. In this simulation, guests
    arrive and start to queue to see Lilo and Stitch. Before coding, it’s helpful
    to review what the components will be:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个模拟将作为引言。在这个模拟中，客人到达并开始排队等待见到莉萝和史迪奇。在编码之前，回顾一下组件将会是什么是很有帮助的。
- en: '**Trajectory**: Arrive at the park, queue, use character resource (Lilo or
    Stitch), release character resource and leave the park.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**轨迹**：到达公园，排队，使用角色资源（莉萝或史迪奇），释放角色资源并离开公园。'
- en: '**Resource**: Character that guests can meet. Either Lilo or Stitch, therefore,
    capacity is set to two for this resource, meaning it can be seized by two guests
    at once.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源**：客人可以遇到的角色。可以是莉萝或史迪奇，因此，这个资源的容量设置为2，这意味着它可以被两个客人同时占用。'
- en: '**Generator**: Will generate guests periodically arriving at the park.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**生成器**：将定期生成到达公园的客人。'
- en: '**Environment**: The park itself.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**环境**：公园本身。'
- en: 'Now let''s think about the code for each element. R allows us to take advantage
    of other packages like *dplyr* to organize the code we write. This makes trajectory
    building much simpler:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们考虑一下每个元素的代码。R语言允许我们利用其他包，如 *dplyr*，来组织我们编写的代码。这使得轨迹构建变得更加简单：
- en: First, the guest seizes a character locking them from use by any other guest.
    Then they time out with that resource. Time out simply means they cannot do anything
    else. The length of time out in most simulations will be based on a real process.
    However, in this made-up scenario, the length of the timeout is sampled from a
    normal distribution. Finally, the guest releases the resource and it can once
    again be used by another guest in the queue.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，客人占用一个角色，锁定该角色以防其他客人使用。然后，他们在这个资源上超时。超时仅意味着他们不能做其他任何事情。在大多数模拟中，超时时间长度将基于真实过程。然而，在这个虚构的场景中，超时时间长度是从正态分布中取样的。最后，客人释放资源，其他排队的客人可以再次使用它。
- en: 'The trajectory is the most complicated concept. The environment, resources
    and generator are all defined together in one block of code:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 轨迹是最复杂的概念。环境、资源和生成器都在一个代码块中一起定义：
- en: This set of components is again very basic. The important notes are that the
    resource has a capacity of two, as per the specification. The guests arrive according
    to an exponential function and are given the trajectory defined above. The arrival
    of guests would also typically be modeled after a real event but for the purpose
    of the example, the exponential will work just fine!
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这一组组件仍然非常基础。重要的注意事项是，资源的容量为2，符合规格。客人根据指数函数到达，并获得上述定义的轨迹。客人的到达通常也会模拟真实事件，但为了示例的目的，指数函数就足够了！
- en: 'The last step is running the simulation and doing some analysis. Running the
    simulation is as simple as typing run and providing a number of timesteps to run
    for. In this case, the park will open for 15 hours. For analysis, we will use
    *simmer.plot* an extension of the simmer library that builds some simple visualizations
    for us to use:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 最后的步骤是运行模拟并进行一些分析。运行模拟非常简单，只需输入 `run` 并提供要运行的时间步数。在这种情况下，公园将开放15小时。对于分析，我们将使用
    *simmer.plot*，这是simmer库的一个扩展，用于构建一些简单的可视化图表：
- en: The first plot below shows the resource utilization. For this simulation, our
    utilization sits at just 20%. This percentage represents the proportion of the
    simulation time that the resource was in use.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的第一个图显示了资源利用率。在此模拟中，我们的利用率仅为20%。这个百分比表示资源在模拟时间中被使用的比例。
- en: '![](../Images/893eda34b1511dec2aeebf9ec67a21bb.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/893eda34b1511dec2aeebf9ec67a21bb.png)'
- en: Image by author
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: The 20% utilization value is fairly low and ideally, we would have a higher
    utilization as this means more happy guests! The next visualization represents
    wait times, with no guests waiting for more than 5-time steps. This makes sense
    as our resource time out is based on a sample from a normal distribution around
    5 steps. The average wait time, though, is much lower, represented by the blue
    line.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 20%的利用率相当低，理想情况下，我们希望有更高的利用率，因为这意味着更多快乐的客人！下一个可视化图表示等待时间，没有客人等待超过5个时间步。这是有道理的，因为我们的资源超时时间基于从正常分布中取样的5步左右。然而，平均等待时间要低得多，由蓝线表示。
- en: '![](../Images/11ca144d771872d87a82a17965ba6eff.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/11ca144d771872d87a82a17965ba6eff.png)'
- en: Image by author
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: 'Simulation Two: Meeting Lilo and Stitch with fast passes'
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模拟二：使用快速通行证遇见莉萝和史迪奇
- en: 'Now let’s add some complexity, starting slowly. The simulation will remain
    the same as above. However, we will add priority customers. These will mimic the
    ‘FastPass’ system in Disney Parks. Really all we do is generate a new customer
    who has priority:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们逐步增加一些复杂性。模拟将保持与上述相同。然而，我们将添加优先级顾客。这些顾客将模拟迪士尼乐园的“快速通行”系统。实际上，我们只需生成一个具有优先级的新顾客：
- en: Note that this customer has a priority of one, as opposed to the default customer
    which defaults to 0\. A higher priority value means that this customer will skip
    the queue and ride before all customers of lower priority. The other addition
    is that these customers arrive every 50-time steps. In reality, they would have
    pre-booked a pass for a certain evenly spaced out time.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这位顾客的优先级为1，而默认顾客的优先级为0。较高的优先级值意味着这位顾客将跳过队伍，并在所有低优先级顾客之前乘坐。另一个补充是这些顾客每50个时间步骤到达一次。在现实中，他们会为某个均匀间隔的时间预定一个通行证。
- en: '![](../Images/70608c7d4a3c8d70a7f4003f29a8ec67.png)![](../Images/571092c188af444e0c440441b2751bd4.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/70608c7d4a3c8d70a7f4003f29a8ec67.png)![](../Images/571092c188af444e0c440441b2751bd4.png)'
- en: Image by author
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 由作者提供的图片
- en: Note that resource utilization has increased drastically! This is because there
    is now a guaranteed customer arriving who will pre-empt all other customers at
    the fixed interval. Conversely, wait times have increased, which again follows
    logically as there are not only more guests but more FastPass guests which increases
    the wait time for the original group.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意资源利用率已经大幅增加！这是因为现在有一个保证到达的顾客，他们会在固定间隔内优先于所有其他顾客。相反，等待时间也增加了，这也是合乎逻辑的，因为不仅有更多的客人，还有更多的快速通行证顾客，这增加了原始顾客组的等待时间。
- en: 'Simulation Three: Meeting Lilo and Stitch with reneging'
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模拟三：带有违约的会面莉萝与史迪奇
- en: 'Waiting in queues can be frustrating, and people often just give up. This can
    be accounted for mathematically through the idea of reneging. If a customer waits
    in a queue for a long time, we can model the chance that they will simply give
    up. This is done by adding to the trajectory:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 排队等候可能会令人沮丧，人们经常选择放弃。这可以通过违约的概念用数学方法来解释。如果一个顾客在排队等候很长时间，我们可以模拟他们简单放弃的概率。这是通过在轨迹中添加来实现的：
- en: The time it takes for a customer to renege is again sampled from a normal distribution,
    this time around the value of 2 (typically, this would be estimated and would
    be higher, for this example, we have very impatient customers to help understand
    reneging). Importantly we must abort the renege once the guest has got hold of
    a resource. Guests wouldn’t leave as soon as they reached the end of the waiting
    period!
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 顾客违约所需的时间再次从正态分布中抽样，这次的值约为2（通常情况下，这将被估计为更高，但在这个例子中，我们有非常没有耐心的顾客来帮助理解违约）。重要的是一旦顾客获得了资源，我们必须中止违约。顾客不会在等待期结束时立即离开！
- en: '![](../Images/2be7f0d2fb56a6e300f529e89a6452d9.png)![](../Images/13ce11831cac78b4e296d8afdf49e891.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2be7f0d2fb56a6e300f529e89a6452d9.png)![](../Images/13ce11831cac78b4e296d8afdf49e891.png)'
- en: Image by author
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 由作者提供的图片
- en: This reneging has ultimately reduced the utilization of the resources as more
    guests are leaving hence not using the resource. However, it has also reduced
    the wait times as many guests simply give up, so their wait time is not included.
    An additional effect of guests leaving is that other guests experience a shorter
    queue which also reduces wait times. For the rest of the simulations, we will
    increase the time it takes for guests to renege.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这种违约行为最终减少了资源的利用率，因为更多的客人离开了，因此没有使用这些资源。然而，它也减少了等待时间，因为许多客人会放弃，所以他们的等待时间不被计入。客人离开的另一个效果是其他客人经历了更短的排队，这也减少了等待时间。在剩下的模拟中，我们将增加客人违约所需的时间。
- en: 'Simulation Four: Riding Space Mountain with one cart using batching'
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模拟四：使用批处理的太空山一车游乐设施
- en: 'Now let’s get to the fun bit: the rides. The rides in the theme park will take
    advantage of the batching feature in *simmer*. Batching allows us to group guests
    together into a Space Mountain cart, for example:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们进入有趣的部分：游乐设施。主题公园中的游乐设施将利用*simmer*中的批处理功能。例如，批处理允许我们将客人分组到一个太空山车厢中：
- en: The parameter *n* indicates how many guests can be batched into this group,
    so in this case, each cart can hold 6 guests. The *timeout* parameter indicates
    how long a batch should wait to be filled before moving on to the next part of
    the trajectory. So the batch can either reach its capacity of 6 or 10-time steps
    can pass before that batch seizes a cart resource.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 参数*n*表示可以将多少客人分批到这个组中，所以在这种情况下，每个车厢可以容纳6个客人。*timeout*参数表示一个批次在转到轨迹的下一部分之前应该等待多长时间才能填满。所以，批次可以达到其6人的容量，或者在该批次占用车厢资源之前，可能会经过10个时间步。
- en: '![](../Images/b3e8701adcf0b1b910209fdbb3e4e609.png)![](../Images/8abc3bd17fc9a99ee56b3594a4b9b3e5.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b3e8701adcf0b1b910209fdbb3e4e609.png)![](../Images/8abc3bd17fc9a99ee56b3594a4b9b3e5.png)'
- en: Image by author
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: With the added complexity of this example and the need for guests to be batched,
    or at least to wait an appropriate time before leaving without a full batch, the
    utilization drops. These conditions also cause a problem for wait times which
    drastically vary compared to the character wait times. A guest could arrive and
    leave immediately or need to wait a whole 10-time steps for a new batch to leave.
    To address this problem in reality the size or number of carts would be increased.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这个例子增加了复杂性，并且需要将客人分批处理，或者至少在没有完整批次之前等待适当的时间，资源利用率下降。这些条件还导致了等待时间的问题，这与角色等待时间相比有很大的变化。一个客人可能会立即到达并离开，或者需要等待整整10个时间步才能等到一个新批次离开。为了解决这个问题，在实际应用中会增加车厢的大小或数量。
- en: 'Simulation Five: Space Mountain or Splash Mountain with branching'
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模拟五：具有分支的太空山或飞溅山
- en: 'Let’s make things even more realistic; no theme park would be any good with
    just one ride. By adding a new ride like Splash Mountain, we can model guest preferences
    and use branching trajectories to see which ride they will go on. This is a bit
    more complicated, and in the full script, one can see that the ride elements of
    the trajectory have been added to their own functions. For simplicity, a more
    concise version is shown here just to demonstrate the branching logic:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们让事情变得更加现实；没有任何一个游乐园只靠一个游乐设施是不够的。通过添加像飞溅山这样的新游乐设施，我们可以模拟客人的偏好，并使用分支轨迹来查看他们将选择哪个游乐设施。这有点复杂，在完整脚本中，可以看到轨迹的游乐设施元素已被添加到各自的函数中。为了简化，这里展示了一个更简洁的版本，仅用来演示分支逻辑：
- en: 'In the case above, the guests choose based on a coinflip so it is equally likely
    a guest will pick Space or Splash Mountain. This could be modelled from an actual
    preference in a more real application. Building the simulation changes a bit here
    too:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述情况下，客人根据掷硬币来选择，因此客人选择太空山或飞溅山的可能性相等。这可以从实际偏好中建模，在更实际的应用中，模拟也会有所变化：
- en: In this example, there are two distinct resources. This differs from the Lilo
    and Stitch examples above as Lilo and Stitch were both modelled as a “character”
    resource with capacity two. Here though, Splash Mountain is a separate resource
    compared to Space Mountain.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，有两个不同的资源。这与上面提到的《莉萝与史迪奇》的例子不同，因为莉萝和史迪奇都被建模为具有两个容量的“角色”资源。然而，这里飞溅山与太空山相比，是一个独立的资源。
- en: '![](../Images/0a811971a80a98f5f83435a05a205f3f.png)![](../Images/f37387b59e5a98be72c3485ad362ddb2.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0a811971a80a98f5f83435a05a205f3f.png)![](../Images/f37387b59e5a98be72c3485ad362ddb2.png)'
- en: Image by author
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: The utilization for these two rides is very different, mostly down to the difference
    in ride times between the two trajectories. Riding Space Mountain takes longer
    and guests are more likely to renege. The added complexity has also created a
    more varied wait time, however from an optimization angle, we have successfully
    improved guest experience by reducing the average wait time in opening a new faster
    ride.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个游乐设施的利用率差异很大，主要是由于两条轨迹之间的游乐时间差异。乘坐太空山所需的时间更长，客人更有可能取消。增加的复杂性也导致了更为多样的等待时间，但从优化的角度来看，我们成功地通过减少新开设的更快游乐设施的平均等待时间来改善了客人的体验。
- en: '**Simulation Six: Opening the park using schedules and queue preferences**'
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**模拟六：通过时间表和排队偏好来开放公园**'
- en: 'The final simulation is bringing together everything we have created and adding
    a schedule to the park. Until now we have been defining resource capacity using
    fixed values. There is an alternative: using schedules. Schedules allow us to
    control the capacity of a resource based on time intervals.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 最后的模拟是将我们创建的一切整合起来，并为公园添加一个时间表。到目前为止，我们一直使用固定值来定义资源容量。还有一种替代方法：使用时间表。时间表允许我们根据时间间隔来控制资源的容量。
- en: 'The park schedule will be controlled by a gate that opens after 50-time steps
    and closes 50-time steps before the end of the simulation. The code below uses
    a lot of the refactored functions, which again are linked in the GitHub repository
    below. The gate schedule is the most important thing for review here:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 公园时间表将由一个门控控制，门在50时间步后打开，并在模拟结束前50时间步关闭。下面的代码使用了很多重构的函数，这些函数再次链接在下面的GitHub仓库中。门控时间表是这里最重要的审查内容：
- en: This time our trajectory combines the rides and characters. There have been
    some other pieces of code added to make guests select characters they visit in
    a round-robin policy. There are also more guests being generated now that there
    is more to do.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这一次我们的轨迹结合了游乐设施和角色。添加了一些代码，让客人在回合轮换政策中选择他们访问的角色。现在也生成了更多的客人，因为事情变得更多。
- en: '![](../Images/4397d3a3e3db5e45183f04662afafc68.png)![](../Images/0cd175c36519fc222f7be8753955fbfb.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4397d3a3e3db5e45183f04662afafc68.png)![](../Images/0cd175c36519fc222f7be8753955fbfb.png)'
- en: Image by author
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: This simulation sees a more realistic utilization spread across all of the resources.
    There are more things for customers to do so each resource spends less time in
    use. There is also an added stipulation that customers must wait to enter the
    park. Note that the gate causes a lot of this reduction in utilization but actually
    sees little utilization itself because customers immediately seize and release
    it. The wait times also peak here with guests waiting for the park to open and
    then for rides in the park but this is a much more realistic simulation. The first
    group of guests is unleashed on the park to choose what they want to ride and
    who they want to meet, as soon as the gates open.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模拟看到所有资源的利用率更为现实。顾客有更多的事情可做，因此每个资源的使用时间减少。还有一个额外的规定是顾客必须等待才能进入公园。注意，门的存在导致了大量的利用率减少，但实际使用率很低，因为顾客会立即开启和关闭它。等待时间在这里也达到了峰值，客人们在等待公园开门以及在公园内等候游乐设施时，但这是一个更为现实的模拟。第一批客人一开门就被释放到公园，选择他们想要乘坐的设施和遇见的人。
- en: Conclusion and Final Thoughts
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论和最终想法
- en: Discrete Event Simulation gives analysts and decision-makers a chance to explore
    business processes. In the examples above, the complexity has been able to stretch
    from a guest arriving, doing an activity and leaving, all the way up to accounting
    for preference and human behaviour like reneging.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 离散事件模拟给分析师和决策者提供了探索业务流程的机会。在上面的示例中，复杂性可以从一个客人到达、进行活动并离开，扩展到考虑偏好和人类行为（如失信行为）。
- en: Some of the decisions made through the process, like adding more rides, have
    shown how DES can be used to optimize processes. On the other hand, adding more
    difficult behaviour like reneging has shown how resources can be underutilized
    if they are not set up correctly.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这个过程做出的一些决策，比如增加更多的游乐设施，展示了如何利用DES来优化流程。另一方面，增加更复杂的行为，如失信行为，展示了如果资源没有正确设置，可能会被低效利用。
- en: I hope you enjoyed this article! If you did, please consider following my page
    for more data science content.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你喜欢这篇文章！如果喜欢，请考虑关注我的页面，以获取更多数据科学内容。
- en: Resources
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 资源
- en: 'Code:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 代码：
- en: '[](https://github.com/josephlewisjgl/DESR?source=post_page-----100b12d97cd3--------------------------------)
    [## GitHub - josephlewisjgl/DESR: Repository holding code from the blog post Simulating
    a Theme Park…'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[## GitHub - josephlewisjgl/DESR: 存放博客文章《模拟主题公园…》的代码库](https://github.com/josephlewisjgl/DESR?source=post_page-----100b12d97cd3--------------------------------)'
- en: 'Repository holding code from the blog post Simulating a Theme Park: Understanding
    queue times with R. - GitHub …'
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 存放博客文章《模拟主题公园：用R理解排队时间》的代码库 - GitHub …
- en: github.com](https://github.com/josephlewisjgl/DESR?source=post_page-----100b12d97cd3--------------------------------)
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[github.com](https://github.com/josephlewisjgl/DESR?source=post_page-----100b12d97cd3--------------------------------)'
- en: 'Simmer Documentation:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Simmer 文档：
- en: '[](https://bookdown.org/manuele_leonelli/SimBook/the-donut-shop.html?source=post_page-----100b12d97cd3--------------------------------)
    [## 6.1 The donut shop | Simulation and Modelling to Understand Change'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 6.1 甜甜圈店 | 模拟与建模以理解变化](https://bookdown.org/manuele_leonelli/SimBook/the-donut-shop.html?source=post_page-----100b12d97cd3--------------------------------)'
- en: These are lecture notes for the module Simulation and Modelling to Understand
    Change given in the School of Human…
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 这些是人类学部提供的《模拟与建模以理解变化》模块的讲义……
- en: bookdown.org](https://bookdown.org/manuele_leonelli/SimBook/the-donut-shop.html?source=post_page-----100b12d97cd3--------------------------------)
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '[bookdown.org](https://bookdown.org/manuele_leonelli/SimBook/the-donut-shop.html?source=post_page-----100b12d97cd3--------------------------------)'
