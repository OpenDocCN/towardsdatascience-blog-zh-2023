- en: Version Control Your ML Model Deployment With Git using Modelbit
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[https://towardsdatascience.com/version-control-your-ml-model-deployment-with-git-using-modelbit-1b3d76411436?source=collection_archive---------8-----------------------#2023-05-10](https://towardsdatascience.com/version-control-your-ml-model-deployment-with-git-using-modelbit-1b3d76411436?source=collection_archive---------8-----------------------#2023-05-10)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Develop, deploy, and track!
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@avi_chawla?source=post_page-----1b3d76411436--------------------------------)[![Avi
    Chawla](../Images/c9c3e4fc7549c3e388f8b4a5560c7cc6.png)](https://medium.com/@avi_chawla?source=post_page-----1b3d76411436--------------------------------)[](https://towardsdatascience.com/?source=post_page-----1b3d76411436--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----1b3d76411436--------------------------------)
    [Avi Chawla](https://medium.com/@avi_chawla?source=post_page-----1b3d76411436--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ¬∑
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5d33decdf4c4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fversion-control-your-ml-model-deployment-with-git-using-modelbit-1b3d76411436&user=Avi+Chawla&userId=5d33decdf4c4&source=post_page-5d33decdf4c4----1b3d76411436---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----1b3d76411436--------------------------------)
    ¬∑7 min read¬∑May 10, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1b3d76411436&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fversion-control-your-ml-model-deployment-with-git-using-modelbit-1b3d76411436&user=Avi+Chawla&userId=5d33decdf4c4&source=-----1b3d76411436---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1b3d76411436&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fversion-control-your-ml-model-deployment-with-git-using-modelbit-1b3d76411436&source=-----1b3d76411436---------------------bookmark_footer-----------)![](../Images/73368df65415298256c0a0055c402d41.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Yancy Min](https://unsplash.com/@yancymin?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Version control is critical to all development processes, allowing developers
    to track software changes (code, configurations, data, etc.) over time.
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, it facilitates collaboration between team members, enabling them to
    work together on the same codebase without interfering with each other‚Äôs work.
  prefs: []
  type: TYPE_NORMAL
- en: In the context of data teams, version control can be especially crucial when
    deploying models.
  prefs: []
  type: TYPE_NORMAL
- en: It enables them to identify precisely what changed, when it changed, and who
    changed it ‚Äî crucial information when trying to diagnose and fix issues that arise
    during the deployment process or if models start underperforming post-deployment.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/72576c9b8daa1fe42f2bdf9553cf9c96.png)'
  prefs: []
  type: TYPE_IMG
- en: Model version control (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: In such cases, git-based functionality can offer quick rollback to previous
    versions.
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, in this article, I will show how you can power your model deployment
    with Git functionality.
  prefs: []
  type: TYPE_NORMAL
- en: More specifically, we‚Äôll use the git-functionality of Modelbit for deployment
    and sync GitHub with Modelbit for collaborative functionalities.
  prefs: []
  type: TYPE_NORMAL
- en: Let‚Äôs begin üöÄ!
  prefs: []
  type: TYPE_NORMAL
- en: Importance of Git for data teams
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before diving into the how-to stuff, let‚Äôs build more motivation for git-based
    version control and why it‚Äôs essential.
  prefs: []
  type: TYPE_NORMAL
- en: '#1) Collaboration'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Effective collaboration becomes increasingly important as data science projects
    get bigger and bigger.
  prefs: []
  type: TYPE_NORMAL
- en: With version control, teams can work on the same codebase/data and improve the
    same models without interfering with each other‚Äôs work.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8b4c070a78c59343b2915a5310776f14.png)'
  prefs: []
  type: TYPE_IMG
- en: Branching models (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, one can easily track changes, review each other‚Äôs work, and resolve
    conflicts (if any).
  prefs: []
  type: TYPE_NORMAL
- en: '#2) Reproducibility'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Reproducibility is one of the critical aspects of building reliable machine
    learning. Something that one works on one system but does not work on another
    reflects bad reproducibility practices.
  prefs: []
  type: TYPE_NORMAL
- en: Why it‚Äôs important, you may wonder?
  prefs: []
  type: TYPE_NORMAL
- en: It ensures that results can be replicated and validated by others, improving
    the overall credibility of your work.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/be9e38668713aec77cd6fd6a925e6392.png)'
  prefs: []
  type: TYPE_IMG
- en: Reproducibility using version control (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: Version control enables you to track the exact code version and configurations
    used to produce a particular result, making it easier to reproduce results in
    the future.
  prefs: []
  type: TYPE_NORMAL
- en: This can be especially useful for open-source projects that many folks can use.
  prefs: []
  type: TYPE_NORMAL
- en: '#3) Continuous Integration and Deployment (CI/CD)'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: CI/CD enables teams to build, test, and deploy code quickly and efficiently.
  prefs: []
  type: TYPE_NORMAL
- en: In machine learning, Continuous Integration (CI) may involve building and testing
    changes automatically to ML models as soon as they are committed to a code repository.
  prefs: []
  type: TYPE_NORMAL
- en: In Continuous Deployment (CD), the objective can be to reflect new changes to
    the model once they have passed testing. Consequently, it should seamlessly update
    the changes to production, making the latest version of the model available to
    end users.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we know why version control is important, both from a development perspective
    and deployment, let‚Äôs look at how you can leverage git-based functionalities in
    deployment phases with Modelbit.
  prefs: []
  type: TYPE_NORMAL
- en: Local Repository and Modelbit integration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Modelbit is entirely driven by git. Thus, whenever you push a model for deployment,
    it internally maintains the deployment as a git repository.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/57308ca473c197579283f41cc76c5792.png)'
  prefs: []
  type: TYPE_IMG
- en: Git-based deployment (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: Being supported by git, it natively provides all advantages of version control
    for your deployments, models, and datasets.
  prefs: []
  type: TYPE_NORMAL
- en: What‚Äôs more, you can clone into the remote git repository from your local machine
    and execute all git commands like `git pull`, `git push`, or performing branching,
    etc.
  prefs: []
  type: TYPE_NORMAL
- en: Connect to Modelbit git repo
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To access the Modelbit git repository, you should add an SSH key that will connect
    your local machine to Modelbit.
  prefs: []
  type: TYPE_NORMAL
- en: 'Open the terminal and run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'This will create an SSH key. To view it, run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The above commands were taken from the [Official GitHub Docs](https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Now, copy the entire output of the `cat` command and head over to Git settings
    in the Modelbit dashboard. Click on ‚ÄúAdd Key‚Äù and paste the output obtained above.
    This is demonstrated below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b7056938e1f4b5c5afa11d7ec4e0e35b.png)'
  prefs: []
  type: TYPE_IMG
- en: Add SSH Key (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: And you are done!
  prefs: []
  type: TYPE_NORMAL
- en: Now we are connected to Modelbit‚Äôs remote git repository.
  prefs: []
  type: TYPE_NORMAL
- en: Deploy Model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let‚Äôs push a model for deployment from a Jupyter Notebook. I won‚Äôt go into detail
    as I have already covered this in one of my previous blogs.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/deploy-machine-learning-models-right-from-your-jupyter-notebook-3241d47408cd?source=post_page-----1b3d76411436--------------------------------)
    [## Deploy Machine Learning Models Right From Your Jupyter Notebook'
  prefs: []
  type: TYPE_NORMAL
- en: Deploy machine learning models in one line of code
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/deploy-machine-learning-models-right-from-your-jupyter-notebook-3241d47408cd?source=post_page-----1b3d76411436--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: 'In a gist, you should train a model, define a prediction function and push
    this function object for deployment, as shown below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Once we deploy a model, we see the following in our Modelbit dashboard:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/cbffbc846c8d4db93cca87655763f8f2.png)'
  prefs: []
  type: TYPE_IMG
- en: Deployment Dashboard (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: Clone Modelbit repo
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let‚Äôs clone into this repository to see its contents. Run the following command
    in the terminal.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: This will clone into Moldebit‚Äôs git repository and create a folder `my_linear_model`.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b38c549cc8460ae32c93ce2714433049.png)'
  prefs: []
  type: TYPE_IMG
- en: Cloning deployment repo (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: Once you run the command, copy the link obtained to authenticate.
  prefs: []
  type: TYPE_NORMAL
- en: As demonstrated above, cloning creates a new local repository, with datasets,
    deployment, and endpoints **in the main branch of the remote git repository of
    Modelbit.**
  prefs: []
  type: TYPE_NORMAL
- en: 'The current repository structure is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Git push to Modelbit
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that we have cloned into the remote repository, we can make any changes
    locally and push them.
  prefs: []
  type: TYPE_NORMAL
- en: Let‚Äôs add a dummy CSV file to the `Linear_Model` folder, commit it to the local
    repo and push it to the remote repo.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Let‚Äôs add the CSV file to the staging area:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, let‚Äôs commit it to the local repo:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, let‚Äôs push it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: With this, the dummy CSV file has been committed to the remote Modelbit git
    repo.
  prefs: []
  type: TYPE_NORMAL
- en: 'Note: There‚Äôs a reason we added the CSV to the `Linear_Model` folder but not
    `datasets` folder. The `datasets` folder only supports datasets via SQL queries.
    The results of those queries are then available at runtime for running deployments.
    Any other custom dataset isn‚Äôt supported yet.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Branching
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you wish to create and work in a separate branch in the remote Modelbit repo,
    that is also possible.
  prefs: []
  type: TYPE_NORMAL
- en: 'Create a new branch from the dashboard as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4fb8abe7801a4936de04d59d717dcddd.png)'
  prefs: []
  type: TYPE_IMG
- en: Branching remote repo (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, say we want to improve our model locally in this branch. In your notebook,
    you can switch to this new branch as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Now, all new deployments (and other commits, if any) done from the notebook
    will be pushed to `another_branch` branch of the remote Modelbit git repo.
  prefs: []
  type: TYPE_NORMAL
- en: Syncing GitHub
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The remote Modelbit repo can be automatically synced with your personal GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: This is particularly useful for performing GitHub-based code review, CI/CD,
    and Pull Request workflows on your Modelbit deployments.
  prefs: []
  type: TYPE_NORMAL
- en: '#1) Create a new GitHub repo'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Below, I have created an empty repo on GitHub.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7bb29e321ef7cf58eed9db9715836228.png)'
  prefs: []
  type: TYPE_IMG
- en: New GitHub repo (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: Next, we should give write access to this repository to Modelbit.
  prefs: []
  type: TYPE_NORMAL
- en: '#2 Copy the SSH URL of the GitHub repo'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Under `Code` ‚Äî `SSH`, copy the URL.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e861bae12565a21956984ef96e05ee35.png)'
  prefs: []
  type: TYPE_IMG
- en: Repo SSH URL (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: '#3) Add Git remote in Modelbit'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the dashboard, go to `Git Settings`, `Add Git Remote` and paste the copied
    repo URL, and `Connect Remote`.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/aeab936bcef9b86349f937ae1fbea961.png)'
  prefs: []
  type: TYPE_IMG
- en: Add Git Remote to Modelbit (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: '#4) Grant Write access to Modelbit'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'From the above sync panel, copy the Deploy Key:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/85a3aa8e0822443a8a8e007ae9b80257.png)'
  prefs: []
  type: TYPE_IMG
- en: Deploy key (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: Now go to `Settings` of your GitHub repo, `Deploy keys`, `Add deploy key`. Paste
    the key, give it a title, **grant write access** and click `Add key`.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f8280abe4f697d0a86317cd16a1b71fa.png)'
  prefs: []
  type: TYPE_IMG
- en: Add deploy key in GitHub repo (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: 'And done! The GitHub repository has been automatically updated:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a160cc2eb2908869c7880cc33ef37a22.png)'
  prefs: []
  type: TYPE_IMG
- en: Deployment code in GitHub (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: Now the remote Modelbit git repository is synced with your GitHub repository,
    and you can use it for all sorts of collaborative work.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With this, we come to the end of this blog.
  prefs: []
  type: TYPE_NORMAL
- en: In this post, we learned the importance of Git functionalities for data teams
    and how model deployment can be backed with git using Moldelbit.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we looked at how to connect a remote git repository created internally
    by Modelbit to a personal GitHub repo.
  prefs: []
  type: TYPE_NORMAL
- en: Having said that, Modelbit is in the early stages of development, and currently,
    it might not be an ultimate alternative to other services like Heroku.
  prefs: []
  type: TYPE_NORMAL
- en: However, as per my experience with both Modelbit and Heroku, I believe that
    deployment with Modelbit is streamlined and less intimidating, for both experienced
    and beginners.
  prefs: []
  type: TYPE_NORMAL
- en: I‚Äôm eager to see how they continue!
  prefs: []
  type: TYPE_NORMAL
- en: Thanks for reading!
  prefs: []
  type: TYPE_NORMAL
