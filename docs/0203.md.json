["```py\ntf.constant(u\"Hello world 🌎\")\n```", "```py\n>>> tf.Tensor(b'Hello world \\\\xf0\\\\x9f\\\\x8c\\\\x8e', shape=(), dtype=string)\n```", "```py\n# Unicode string, represented as a UTF-8 encoded string scalar\ntext_utf8 = tf.constant(u\"语言处理\")\nprint(text_utf8)\n```", "```py\n>>> tf.Tensor(b'\\\\xe8\\\\xaf\\\\xad\\\\xe8\\\\xa8\\\\x80\\\\xe5\\\\xa4\\\\x84\\\\xe7\\\\x90\\\\x86', shape=(), dtype=string)\n```", "```py\n# Unicode string, represented as a UTF-16-BE encoded string scalar\ntext_utf16be = tf.constant(u\"语言处理\".encode(\"UTF-16-BE\"))\nprint(text_utf16be)\n```", "```py\n>>> tf.Tensor(b'\\\\x8b\\\\xed\\\\x8a\\\\x00Y\\\\x04t\\\\x06', shape=(), dtype=string)\n```", "```py\n# Unicode string, represented as a vector of Unicode code points\ntext_chars = tf.constant([ord(char) for char in u\"语言处理\"])\nprint(text_chars)\n```", "```py\n>>> tf.Tensor: shape=(4,), dtype=int32, numpy=array([35821, 35328, 22788, 29702], dtype=int32)\n```", "```py\ntext_chars_converted = tf.strings.unicode_decode(text_utf8, input_encoding='UTF-8')\nprint(text_chars)\nprint(text_chars_converted)\n```", "```py\n>>> tf.Tensor([35821 35328 22788 29702], shape=(4,), dtype=int32)\n>>> tf.Tensor([35821 35328 22788 29702], shape=(4,), dtype=int32)\n```", "```py\ntext_utf8_converted = tf.strings.unicode_encode(text_chars, output_encoding='UTF-8')\nprint(text_utf8)\nprint(text_utf8_converted)\n```", "```py\n>>> tf.Tensor(b'\\\\xe8\\\\xaf\\\\xad\\\\xe8\\\\xa8\\\\x80\\\\xe5\\\\xa4\\\\x84\\\\xe7\\\\x90\\\\x86', shape=(), dtype=string)\n>>> tf.Tensor(b'\\\\xe8\\\\xaf\\\\xad\\\\xe8\\\\xa8\\\\x80\\\\xe5\\\\xa4\\\\x84\\\\xe7\\\\x90\\\\x86', shape=(), dtype=string)\n```", "```py\ntext_utf16be_converted = tf.strings.unicode_transcode(text_utf8, input_encoding='UTF-8', output_encoding='UTF-16-BE')\nprint(text_utf16be)\nprint(text_utf16be_converted)\n```", "```py\n>>> tf.Tensor(b'\\\\x8b\\\\xed\\\\x8a\\\\x00Y\\\\x04t\\\\x06', shape=(), dtype=string)\n>>> tf.Tensor(b'\\\\x8b\\\\xed\\\\x8a\\\\x00Y\\\\x04t\\\\x06', shape=(), dtype=string)\n```", "```py\n# Note that the final character (emoji) takes up 4 bytes in UTF8.\nhelloWorld = u\"Hello World 🌍\".encode('UTF-8')\nprint(helloWorld)\n```", "```py\n>>> b'Hello World \\\\xf0\\\\x9f\\\\x8c\\\\x8d'\n```", "```py\nnum_bytes = tf.strings.length(helloWorld).numpy()\nnum_chars = tf.strings.length(helloWorld, unit='UTF8_CHAR').numpy()\nprint('{} bytes; {} UTF-8 characters'.format(num_bytes, num_chars))\n```", "```py\n>>> 16 bytes; 13 UTF-8 characters\n```"]