- en: Create a Python Package with Super- Fast Rust Code in 3 Steps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/create-a-python-package-with-super-fast-rust-code-in-3-steps-a27389629beb?source=collection_archive---------6-----------------------#2023-02-24](https://towardsdatascience.com/create-a-python-package-with-super-fast-rust-code-in-3-steps-a27389629beb?source=collection_archive---------6-----------------------#2023-02-24)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*Extend you Python code with a package containing Rust code for a >150x performance
    increase!*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://mikehuls.medium.com/?source=post_page-----a27389629beb--------------------------------)[![Mike
    Huls](../Images/8f9f55a0d25db00799c5d37383b7f5b6.png)](https://mikehuls.medium.com/?source=post_page-----a27389629beb--------------------------------)[](https://towardsdatascience.com/?source=post_page-----a27389629beb--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----a27389629beb--------------------------------)
    [Mike Huls](https://mikehuls.medium.com/?source=post_page-----a27389629beb--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7ffb62c607ee&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-python-package-with-super-fast-rust-code-in-3-steps-a27389629beb&user=Mike+Huls&userId=7ffb62c607ee&source=post_page-7ffb62c607ee----a27389629beb---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----a27389629beb--------------------------------)
    ·9 min read·Feb 24, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fa27389629beb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-python-package-with-super-fast-rust-code-in-3-steps-a27389629beb&user=Mike+Huls&userId=7ffb62c607ee&source=-----a27389629beb---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa27389629beb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-python-package-with-super-fast-rust-code-in-3-steps-a27389629beb&source=-----a27389629beb---------------------bookmark_footer-----------)![](../Images/ed219a4972a58651e9682cc108017a96.png)'
  prefs: []
  type: TYPE_NORMAL
- en: This Python is getting a bit Rusty! (image by Dall-e 2!)
  prefs: []
  type: TYPE_NORMAL
- en: 'Python is a pretty easy language to pick up and it’s super quick to write some
    code in, compared to some other languages. All this ease-of-use comes with a downside:
    speed is sacrificed. Sometimes Python is just too slow!'
  prefs: []
  type: TYPE_NORMAL
- en: To solve this problem we’ll re-write a bit of our Python-code in Rust and import
    this code, as a Python package, into our original project. We end up with a super-fast
    Python package that we can import and use like any other package. As a bonus we’ll
    multi-process our Rusty Python package and end up with a function that is roughly
    150x faster. Let’s code!
  prefs: []
  type: TYPE_NORMAL
- en: Overview
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A quick summary of what we’re going to do in this article. We’ll tackle the
    problem in 6 steps (of which step 2, 3 and 4 are devoted to actually writing the
    package):'
  prefs: []
  type: TYPE_NORMAL
- en: Examining our slow function; why is it slow?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Preparing our project
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We re-write this function in Rust
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Compile the Rust code and put it in a Python package
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Import the Python package into our project
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
