- en: 'Curse of Dimensionality: An Intuitive Exploration'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/curse-of-dimensionality-an-intuitive-exploration-1fbf155e1411?source=collection_archive---------3-----------------------#2023-12-30](https://towardsdatascience.com/curse-of-dimensionality-an-intuitive-exploration-1fbf155e1411?source=collection_archive---------3-----------------------#2023-12-30)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[](https://medium.com/@salih.salih?source=post_page-----1fbf155e1411--------------------------------)[![Salih
    Salih](../Images/220f3c5363989d94c5593eca7ff72c67.png)](https://medium.com/@salih.salih?source=post_page-----1fbf155e1411--------------------------------)[](https://towardsdatascience.com/?source=post_page-----1fbf155e1411--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----1fbf155e1411--------------------------------)
    [Salih Salih](https://medium.com/@salih.salih?source=post_page-----1fbf155e1411--------------------------------)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: ·
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F2037cbb08e24&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcurse-of-dimensionality-an-intuitive-exploration-1fbf155e1411&user=Salih+Salih&userId=2037cbb08e24&source=post_page-2037cbb08e24----1fbf155e1411---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----1fbf155e1411--------------------------------)
    ·11 min read·Dec 30, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1fbf155e1411&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcurse-of-dimensionality-an-intuitive-exploration-1fbf155e1411&user=Salih+Salih&userId=2037cbb08e24&source=-----1fbf155e1411---------------------clap_footer-----------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1fbf155e1411&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcurse-of-dimensionality-an-intuitive-exploration-1fbf155e1411&source=-----1fbf155e1411---------------------bookmark_footer-----------)![](../Images/8e1fab29575e7aec7aa57966239b2c2f.png)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: Photo by Mathew Schwartz on Unsplash
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: '**Introduction**'
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous article, we discussed the [surprising behavior of data in higher
    dimensions](/the-surprising-behavior-of-data-in-higher-dimensions-1c49bca9bbee).
    We found that volume tends to accumulate in the corners of spaces in a strange
    way, and we simulated a hypersphere inscribed inside a hypercube to investigate
    this, observing an interesting decrease in their volume ratio as the dimensions
    grew. Examples that demonstrated the advantages of multi-dimensional thinking
    were the DVD-paper experiment and the kernel trick in support vector machines(SVMs).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: Today, we will be looking at some of the difficult aspects of high-dimensional
    data which is referred to as curse of dimensionality. Our goal is to have an intuitive
    understanding of this concept and its practical implications. The diagram below
    outlines how our article is structured.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0bcf5fff1009e705ae4a9da30c8ce22e.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the Curse of Dimensionality
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: “Curse of dimensionality” is a term that was first used by Richard E. Bellman
    back in the 1960s. It began as Bellman’s idea from dynamic optimization and it
    turned out to be a fundamental concept for understanding complexity in high-dimensional
    spaces.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: Good, but what is “curse of dimensionality”?
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: It is at its core the difficulties and unique characteristics one faces when
    working with data in high-dimensional spaces( in our case this refers to having
    many features, columns or attributes in datasets). These spaces go far beyond
    our experience of everyday life in three-dimensional space.
  id: totrans-16
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: When we increase the number of dimensions on a dataset, the volume it occupies
    expands exponentially. This might appear initially as an advantage — more space
    could mean more data and probably more insights? However, that is not the case
    because having many dimensions comes with a number of challenges which change
    how we need to deal with and understand these high-dimensional data.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: Key Challenges
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The shift from low-dimensional to high-dimensional data faces several harsh
    challenges. There are two, which stand out because they have the most significant
    effects: 1) sparsity of data; 2) the issue with distance metric. Each of them
    makes analysis in higher dimensions even more complex.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: 'Data Sparsity: Islands in an Ocean of Emptiness'
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Data sparsity in highly dimensional spaces is like few small islands lost within
    a vast ocean. When dimensionality increases, data points that were close together
    in lower dimensions become increasingly separated. This is due to the fact that
    the amount of space expands exponentially with each new addition of another dimension.
    Just imagine a cube becoming a hypercube; its corners move further away from its
    center and make it more empty inside. This growing emptiness is what we refer
    to as data sparsity.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: Many data analysis techniques struggle with sparsity. For example, many clustering
    algorithms depend on closely situated data points to form meaningful clusters.
    However, when data points become too dispersed, these algorithms face difficulties.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: 'Distance Metric Problems: When Proximity Loses Meaning'
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In high-dimensional spaces, distance metrics encounter significant challenges.
    Metrics like Euclidean or Manhattan distances, which are useful for measuring
    proximity between data points in lower dimensions, lose their effectiveness. In
    these expanded spaces, distances start to converge. This means that most pairs
    of points become nearly equidistant from each other and from a reference point.
    This convergence makes it harder to distinguish between close neighbors and distant
    ones.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: In tasks like classification, where distance measurements are crucial for categorizing
    new data points, these metrics become less effective. As a result, algorithm performance
    drops, leading to less accurate predictions and analyses.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: To better understand how distance behavior changes in higher dimensions, let’s
    perform a simple simulation. We will generate random points in both low and high-dimensional
    spaces. This will allow us to observe and compare the distribution of distances,
    showing us how these distances evolve as we move to higher dimensions.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](../Images/bf5c048e94e5f1e2a0de989d9924256c.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: The code output shows how distances change across dimensions. In 3D, there are
    different distances between points. In 100D, distances between points tend to
    be similar. Graphs to the right also show that as dimensions increase, the mean
    distance between points gets bigger, but the standard deviation stays roughly
    the same as it was on 2D or 3D space.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: Another note here is that as dimensions increase, the mean distance between
    points gets bigger and approaches the maximum distance. This happens because most
    of the space is concentrated in the corners.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: To better understand this, we can simulate random points in dimensions up to
    100D. This will let us compare the average distance to the maximum distance.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/dd0ddb65e50f1495c27b26f232ce9068.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: The graph shows that as we go into higher dimensions, the average distance gets
    closer to the maximum distance. We used normalization in here to make sure the
    scales were accurate.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: It’s important to understand the difference between absolute and relative distances.
    While absolute distances generally increase with more dimensions, it’s the relative
    differences that matter more. Clustering algorithms like K-means or DBSCAN work
    by looking at how points are positioned compared to each other, not their exact
    distances. This lets us find patterns and relationships that we might miss if
    we only looked at the distances.
  id: totrans-37
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'But this leads to an interesting question: why do pairs of points in high-dimensional
    spaces tend to be roughly the same distance apart as we add more dimensions? What
    causes this to happen?'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/00dea8767aeac0aefd50ef6f96d1b33d.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
- en: Photo by Aakash Dhage on Unsplash
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: To understand why pairs of points in high-dimensional spaces become equidistant,
    we can look at the Law of Large Numbers (LLN). This statistical principle suggests
    that as we increase our sample size or the number of dimensions, the average of
    our observations gets closer to the expected value.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: Let’s consider the example of rolling a fair six-sided dice. The expected mean
    of a roll is 3.5, which is the average of all possible outcomes. Initially, with
    just a few rolls, like 5 or 10, the average might be significantly different from
    3.5 due to randomness. But as we increase the number of rolls to hundreds or thousands,
    the average roll value gets closer to 3.5\. This phenomenon, where the average
    of many trials aligns with the expected value, shows the essence of the LLN. It
    demonstrates that while individual outcomes are unpredictable, the average becomes
    highly predictable over many trials.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: Now, how does this relate to distances in high-dimensional spaces?
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: The Euclidean distance between two points in an n-dimensional space is calculated
    by summing the squared differences across each dimension. We can think of each
    squared difference as a random variable, similar to a roll of a dice. As the number
    of dimensions (or rolls) increases, the sum of these ‘rolls’ gets closer to an
    expected value.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: 'A crucial requirement for the LLN is the independence of random variables.
    In high-dimensional vectors, this independence might be shown through an interesting
    geometric property: **the vectors tend to be almost orthogonal to each other.**'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Try running the code above and editing the number of dimensions/ trials, and
    you can notice that vectors in higher dimensions are almost orthogonal.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: 'The angle between two vectors, A and B, is determined by the cosine of the
    angle, which is derived from their dot product and magnitudes. The formula is
    expressed as:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c4ac1aade2a563f24149ae4c11fd32de.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
- en: Here, *A*⋅*B* represents the dot product of vectors A and B, and ∥*A*∥ and ∥*B*∥
    are their respective magnitudes. For two vectors to be orthogonal, the angle between
    them must be 90 degrees, making cos(*θ*) equal to zero. Typically, this is achieved
    when the dot product *A*⋅*B* is zero, a condition familiar in lower dimensions.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: However, in high-dimensional spaces, another phenomenon emerges. **The ratio
    of the dot product to the magnitude of the vectors becomes so small that we can
    consider the vectors to be ‘almost orthogonal.’**
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: But what does it mean for two vectors to be ‘independent’ in this context?
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: 'Navigating a Grid City: An Analogy for Independence in High Dimensions'
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Imagine you are in a city laid out in a grid, like Manhattan’s streets. Picture
    yourself at an intersection, trying to reach another point in this city. In this
    analogy, each street represents a dimension in a high-dimensional space. Moving
    along a street is like changing the value in one dimension of a high-dimensional
    vector. Moving along one street doesn’t affect your position on another street,
    just like changing one dimension doesn’t affect the others.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: To reach a specific intersection, you make a series of independent decisions,
    like calculating distance in high-dimensional space. Each decision contributes
    independently but leads you to your destination.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: This analogy also applies to the concept of orthogonality in high-dimensional
    vectors. When vectors are almost orthogonal, they follow their own paths without
    significantly influencing each other. This condition complements the need for
    statistical independence for the LLN.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: 'An important note: while this analogy of LLN offers a helpful perspective,
    it may not capture all the idea or causes behind this behavior. However, it serves
    as a useful proxy, providing an understanding of what the reason **might** be
    for pairs of point to be almost equidistant.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: Practical Implications
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One way the curse of dimensionality problems show up is overfitting. Overfitting
    happens when a complex model learns noise instead of the patterns in the data.
    This is especially true in high-dimensional spaces where there are many features.
    The model can make false connections or correlations and perform poorly when it
    sees new data(failing to generalize).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: The curse also makes it hard to find patterns in big datasets. High-dimensional
    data is spread out and sparse, so it’s challenging for traditional analysis methods
    to find meaningful insights. Some changes or specialized methods are needed to
    navigate and understand this type of data.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: Another implication is that processing high-dimensional data takes a lot of
    computational power and memory. Algorithms that work well in lower dimensions
    become much more complex and resource-heavy as the number of dimensions increases.
    This means either having more powerful hardware or optimizing algorithms to handle
    the increased computational load efficiently.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: '**How to address curse of dimensionality?**'
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are several strategies to deal with the curse of dimensionality. One way
    is to reduce the dimensionality while keeping the important information(ex. PCA
    algorithm). Another method is manifold learning(can be considered as a type of
    dimensionality reduction).which uncovers the structure within the high-dimensional
    data. The key idea behind manifold learning is that many high-dimensional datasets
    actually lie on a lower-dimensional manifold within the high-dimensional space(ex.
    Isomaps)
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: Note here that -generally speaking- traditional dimensionality reduction techniques
    like PCA (Principal Component Analysis) focus on preserving global data structure
    and variance in a linear fashion. In contrast, manifold learning techniques like
    Isomap(Isometric Mapping) emphasize uncovering the underlying non-linear structure(manifold)
    of data, aiming to preserve local relationships and geometrical features.
  id: totrans-64
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在这里需要注意的是，-一般来说- 传统的降维技术，如主成分分析（PCA），侧重于以线性方式保留全局数据结构和方差。相比之下，流形学习技术，如等距映射（Isomap），强调揭示数据的潜在非线性结构（流形），旨在保留局部关系和几何特征。
- en: Feature selection is also an option, where relevant features are chosen to improve
    model performance. Regularization techniques prevent overfitting by shrinking
    less important features. Increasing the sample size can also help, although it
    may not always be possible. These methods can help us analyze high-dimensional
    data more accurately and efficiently.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 特征选择也是一个选项，通过选择相关特征来提高模型性能。正则化技术通过缩减不重要的特征来防止过拟合。增加样本量也可以有所帮助，尽管这可能并不总是可能的。这些方法可以帮助我们更准确和高效地分析高维数据。
- en: Conclusion
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: The curse of dimensionality is one of the most important problems in data science
    and machine learning. It happens when dealing with high-dimensional spaces. Two
    significant challenges that arise are data sparsity and issues with distance metrics.
    These challenges can cause overfitting in machine learning models and make computations
    more complex. To tackle these challenges, strategies like dimensionality reduction,
    feature selection, and regularization techniques can be used.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 维度诅咒是数据科学和机器学习中最重要的问题之一。它发生在处理高维空间时。两个显著的挑战是数据稀疏性和距离度量的问题。这些挑战可能导致机器学习模型过拟合，并使计算变得更加复杂。为了解决这些挑战，可以使用降维、特征选择和正则化技术等策略。
- en: If you have made it this far, I would like to thank you for spending time reading
    this! I hope you found the topic enjoyable and at least inspiring enough to delve
    deeper into the world of high-dimensional data. Please feel free to suggest any
    edits or point out any mistakes or inaccuracies.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经读到这里，我想感谢你花时间阅读这篇文章！我希望你觉得这个话题有趣，并且至少激发了你更深入了解高维数据的兴趣。请随时建议任何修改或指出任何错误或不准确之处。
