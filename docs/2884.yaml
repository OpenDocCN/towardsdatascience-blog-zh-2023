- en: The AutoML Dilemma
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/the-automl-dilemma-57b217263646?source=collection_archive---------4-----------------------#2023-09-16](https://towardsdatascience.com/the-automl-dilemma-57b217263646?source=collection_archive---------4-----------------------#2023-09-16)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: An Infrastructure Engineer’s Perspective
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://haifengjin.com/?source=post_page-----57b217263646--------------------------------)[![Haifeng
    Jin](../Images/705d6ecaed975b6376fac19087f2c02c.png)](https://haifengjin.com/?source=post_page-----57b217263646--------------------------------)[](https://towardsdatascience.com/?source=post_page-----57b217263646--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----57b217263646--------------------------------)
    [Haifeng Jin](https://haifengjin.com/?source=post_page-----57b217263646--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F663f924902d1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-automl-dilemma-57b217263646&user=Haifeng+Jin&userId=663f924902d1&source=post_page-663f924902d1----57b217263646---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----57b217263646--------------------------------)
    ·8 min read·Sep 16, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F57b217263646&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-automl-dilemma-57b217263646&user=Haifeng+Jin&userId=663f924902d1&source=-----57b217263646---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F57b217263646&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-automl-dilemma-57b217263646&source=-----57b217263646---------------------bookmark_footer-----------)![](../Images/bbac382bf55fad7a5ae000a5c7a8c2f2.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Fabrizio Conti](https://unsplash.com/@conti_photos?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: AutoML has been a hot topic for the past few years. The hype has been built
    up so high, even with the ambition to replace human machine learning experts.
    However, not seeing much adoption in a long while, the expectation for AutoML
    is dropping quickly, which strictly follows Gartner’s curve.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c940b94c8c12f380703a2e3a3ab0dd00.png)'
  prefs: []
  type: TYPE_IMG
- en: AutoML on Gartner’s curve (Image by the author)
  prefs: []
  type: TYPE_NORMAL
- en: At this point, we need to understand the current status of AutoML and figure
    out the way for tomorrow. I am a software engineer who developed two AutoML libraries,
    [AutoKeras](https://autokeras.com/) and [KerasTuner](https://keras.io/keras_tuner/).
    In this article, I will help you review what AutoML is and what are the missing
    pieces that prevented AutoML from mass adoption.
  prefs: []
  type: TYPE_NORMAL
- en: What is AutoML?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Imagine someone with limited machine learning expertise facing a real-world
    image classification problem. They can clearly define the problem and have the
    training data available. AutoML can help to build a trained machine learning model
    in this case.
  prefs: []
  type: TYPE_NORMAL
- en: From an input and output perspective, AutoML does the following.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/62c4f90c73173e5b4f9cc57637fba063.png)'
  prefs: []
  type: TYPE_IMG
- en: AutoML from an input and output perspective (Image by the author)
  prefs: []
  type: TYPE_NORMAL
- en: It takes in the problem definition and training data and outputs a trained machine
    learning model ready for deployment. For example, if given an image classification
    task, it takes in the training image dataset as input and outputs a trained image
    classification model.
  prefs: []
  type: TYPE_NORMAL
- en: The steps AutoML tries to automate may include data preprocessing, featurization,
    model selection, hyperparameter tuning, neural architecture search, model training,
    inferencing on testing data, and data post-processing.
  prefs: []
  type: TYPE_NORMAL
- en: In summary, automated machine learning (AutoML) tries to **bridge the gap**
    between the various fancy **machine learning models** and training techniques
    available today and the **real-world problems** they could solve by providing
    **end-to-end solutions** in an automated way.
  prefs: []
  type: TYPE_NORMAL
- en: How does AutoML work?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For a given task and dataset, the AutoML system would efficiently try out a
    series of relevant methods or models and pick the best one for you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can think of it as a for loop containing the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Generate a model configuration.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create and train the model with the configuration.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Evaluate the model on validation data.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learn from the evaluation results to improve the configuration.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A smart agent in the AutoML system generates the configurations and improves
    over time by learning the evaluation results.
  prefs: []
  type: TYPE_NORMAL
- en: Many algorithms could be used as smart agents, for example, Bayesian optimization
    or reinforcement learning. However, at the core of the smart agent, what it does
    is **function approximation** and **function maximization**. Let’s see them one
    by one.
  prefs: []
  type: TYPE_NORMAL
- en: '**Function approximation**. The smart agent is trying to learn the relation
    between the model configurations and the model performance. In math language,
    it is trying to learn a function **y=f(x)**, where **x** is the model configuration,
    and **y** is the model’s performance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Function maximization**. The end goal of the smart agent is to find a model
    configuration with the best model performance. In other words, we want to find
    the **x** that maximizes the value of **f(x)**, i.e., **argmax f(x)**.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The impact of AutoML
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As you can imagine, the impact of AutoML is huge if widely adopted. It can dramatically
    increase the productivity of machine learning practitioners. They no longer need
    to spend a lot of time fine-tuning the details of the model configurations. They
    may only need to carefully define the task and manually constrain the search space
    to get the result faster.
  prefs: []
  type: TYPE_NORMAL
- en: What can AutoML do today?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The applications of AutoML today are quite limited, mainly focusing on the following
    two aspects.
  prefs: []
  type: TYPE_NORMAL
- en: '**Quick tryouts**. Some machine learning engineers may want to quickly try
    machine learning on their tasks and datasets. They can use AutoML as a starting
    point. They can further develop the ML solution by hand if they achieve comparatively
    good results.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ML education**. The students who just started learning ML may use AutoML
    to understand what ML can do. They do not need to touch all the details of the
    ML solution but get a quick overview of the process.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What can AutoML do in the future?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The expectation of what AutoML can do in the future is much higher than it can
    today. We summarize it into three main goals as follows.
  prefs: []
  type: TYPE_NORMAL
- en: '**For ML experts:** Boost the productivity of data scientists and machine learning
    engineers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**For domain experts:** Domain experts, like medical doctors or mechanical
    engineers, can easily apply AutoML to their problems.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**For production engineers:** The found solution can be easily deployed for
    production.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The problems of AutoML
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We learned where we are now and where we are going with AutoML. The question
    is how we are getting there. We summarize the problems we face today into three
    categories. When these problems are solved, AutoML will reach mass adoption.
  prefs: []
  type: TYPE_NORMAL
- en: 'Problem 1: Lack of business incentives'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Modeling is trivial** compared with developing a usable machine learning
    solution, which may include but is not limited to data collection, cleaning, verification,
    model deployment, and monitoring. For any company that can afford to hire people
    to do all these steps, the cost overhead of hiring machine learning experts to
    do the modeling is trivial. When they can build a team of experts without much
    cost overhead, they do not bother experimenting with new techniques like AutoML.'
  prefs: []
  type: TYPE_NORMAL
- en: So, people would only start to use AutoML when the costs of all other steps
    are reduced to the bottom. That is when the cost of hiring people for modeling
    becomes significant. Now, let’s see our roadmap towards this.
  prefs: []
  type: TYPE_NORMAL
- en: '**Many steps can be automated.** We should be optimistic that as the cloud
    services evolve, many steps in developing a machine learning solution could be
    automated, like data verification, monitoring, and serving. However, there is
    one crucial step that can never be automated, which is data labeling. Unless machines
    can teach themselves, humans will always need to prepare the data for machines
    to learn.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Data labeling may become the main cost** of developing an ML solution at
    the end of the day. If we can reduce the cost of data labeling, they would have
    the business incentive to use AutoML to remove the modeling cost, which would
    be the only cost of developing an ML solution.'
  prefs: []
  type: TYPE_NORMAL
- en: '**The long-term solution**: Unfortunately, the ultimate solution to reduce
    the cost of data labeling does not exist today. We will rely on future research
    breakthroughs on “learning with small data”. One possible path is to invest in
    transfer learning.'
  prefs: []
  type: TYPE_NORMAL
- en: However, people are not interested in working on transfer learning because it
    is hard to publish on this topic. For more details, you can watch this video,
    [*Why most machine learning research is useless*](https://www.youtube.com/watch?v=Bi7f1JSSlh8).
  prefs: []
  type: TYPE_NORMAL
- en: '**The short-term solution**: In the short-term, we can just fine-tune the pretrained
    large models with small data, which is a simple way of transfer learning and learning
    with small data.'
  prefs: []
  type: TYPE_NORMAL
- en: '**In summary**, with most of the steps in developing an ML solution automated
    by cloud services, and AutoML can use pretrained models to learn from smaller
    datasets to reduce the data labeling cost, there will be business incentives to
    apply AutoML to reduce their cost in ML modeling.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Problem 2: Lack of maintainability'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**All deep learning models are not reliable.** The behavior of the model is
    unpredictable sometimes. It is hard to understand why the model gives specific
    outputs.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Engineers maintain the models**. Today, we need an engineer to diagnose and
    fix the model when problems occur. The company communicates with the engineers
    for anything they want to change for the deep learning model.'
  prefs: []
  type: TYPE_NORMAL
- en: '**The AutoML system is much harder to interact with than an engineer**. Today,
    you can only use it as a one-shot method to create the deep learning model by
    giving the AutoML system a series of objectives clearly defined in math in advance.
    If you encounter any problem using the model in practice, it will not help you
    fix it.'
  prefs: []
  type: TYPE_NORMAL
- en: '**The long-term solution**: We need more research in HCI (Human-Computer Interaction).
    We need a more intuitive way to define the objectives so that the models created
    by AutoML are more reliable. We also need better ways to interact with the AutoML
    system to update the model to meet new requirements or fix any problems without
    spending too much resources searching all the different models again.'
  prefs: []
  type: TYPE_NORMAL
- en: '**The short-term solution**: Support more objective types, like FLOPS and the
    number of parameters to limit the model size and inferencing time, and weighted
    confusion matrix to deal with imbalanced data. When a problem occurs in the model,
    people can add a relevant objective to the AutoML system to let it generate a
    new model.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Problem 3: Lack of infrastructure support'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When developing an AutoML system, we found some features we need from the deep
    learning frameworks that just do not exist today. Without these features, the
    power of the AutoML system is limited. They are summarized as follows.
  prefs: []
  type: TYPE_NORMAL
- en: '**First, state-of-the-art models with flexible unified APIs.** To build an
    effective AutoML system, we need a large pool of state-of-the-art models to assemble
    the final solution. The model pool needs to be updated regularly and well-maintained.
    Moreover, the APIs to call the models need to be highly flexible and unified so
    we can call them programmatically from the AutoML system. They are used as building
    blocks to construct an end-to-end ML solution.'
  prefs: []
  type: TYPE_NORMAL
- en: To solve this problem, we developed [KerasCV](https://keras.io/keras_cv/) and
    [KerasNLP](https://keras.io/keras_nlp/), domain-specific libraries for computer
    vision and natural language processing tasks built upon Keras. They wrap the state-of-the-art
    models into simple, clean, yet flexible APIs, which meet the requirements of an
    AutoML system.
  prefs: []
  type: TYPE_NORMAL
- en: '**Second, automatic hardware placement of the models**. The AutoML system may
    need to build and train large models distributed across multiple GPUs on multiple
    machines. An AutoML system should be runnable on any given amount of computing
    resources, which requires it to dynamically decide how to distribute the model
    (model parallelism) or the training data (data parallelism) for the given hardware.'
  prefs: []
  type: TYPE_NORMAL
- en: Surprisingly and unfortunately, none of the deep learning frameworks today can
    automatically distribute a model on multiple GPUs. You will have to explicitly
    specify the GPU allocation for each tensor. When the hardware environment changes,
    for example, the number of GPUs is reduced, your model code may no longer work.
  prefs: []
  type: TYPE_NORMAL
- en: I do not see a clear solution for this problem yet. We must allow some time
    for the deep learning frameworks to evolve. Some day, the model definition code
    will be independent from the code for tensor hardware placement.
  prefs: []
  type: TYPE_NORMAL
- en: '**Third, the ease of deployment of the models.** Any model produced by the
    AutoML system may need to be deployed down the stream to the cloud services, end
    devices, etc. Suppose you still need to hire an engineer to reimplement the model
    for specific hardware before deployment, which is most likely the case today.
    Why don’t you just use the same engineer to implement the model in the first place
    instead of using an AutoML system?'
  prefs: []
  type: TYPE_NORMAL
- en: People are working on this deployment problem today. For example, [Modular](https://www.modular.com/)
    created a unified format for all models and integrated all the major hardware
    providers and deep learning frameworks into this representation. When a model
    is implemented with a deep learning framework, it can be exported to this format
    and become deployable to the hardware supporting it.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With all the problems we discussed, I am still confident in AutoML in the long
    run. I believe they will be solved eventually because automation and efficiency
    are the future of deep learning development. Though AutoML has not been massively
    adopted today, it will be as long as the ML revolution continues.
  prefs: []
  type: TYPE_NORMAL
