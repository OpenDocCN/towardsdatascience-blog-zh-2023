["```py\nimport tensorflow as tf\nfrom tensorflow.keras.layers import Input, Dense, Concatenate\n\ndef build_moe_pinn(pinns:List[tf.keras.Model], n_layers:int, n_nodes:int) -> tf.keras.Model:\n    x = Input((1,), name='x')\n    y = Input((1,), name='y')\n\n    # create predictions with each PINN in the ensemble\n    u = Concatenate()([pinn([x, y]) for pinn in pinns])\n\n    # initialise the gating network\n    gate = tf.keras.models.Sequential(\n        [Dense(n_nodes, activation='tanh') for _ in range(n_layers)] + \\\n        [Dense(len(pinns), activation='softmax')],\n        name='gate',\n    )\n\n    # receive importances from the gating network, multiply with PINN\n    # predictions and sum up the results\n    u = tf.reduce_sum(gate([x, y]) * u, axis=1, keepdims=True)\n\n    return tf.keras.Model([x, y], u, name='moe_pinn')\n```"]