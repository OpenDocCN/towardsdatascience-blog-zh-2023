["```py\nimport numpy as np\nfrom scipy.special import betaln as logbeta\n\ndef prob_b_beats_a(n_wins_a: int, \n                   n_losses_a: int, \n                   n_wins_b: int, \n                   n_losses_b: int) -> float:\n\n  alpha_a = n_wins_a + 1\n  beta_a = n_losses_a + 1\n\n  alpha_b = n_wins_b + 1\n  beta_b = n_losses_b + 1\n  probability = 0.0\n  for i in range(alpha_b):\n    total += np.exp(\n      logbeta(alpha_a + i, beta_b + beta_a)\n      - np.log(beta_b + i)\n      - logbeta(1 + i, beta_b)\n      - logbeta(alpha_a, beta_a)\n    )\n  return probability\n```"]