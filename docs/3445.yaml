- en: Creating a Climate GPT Using NASA’s Power API
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 NASA 的 Power API 创建气候 GPT
- en: 原文：[https://towardsdatascience.com/developing-a-climate-gpt-using-nasas-power-api-37b3d9e2a664?source=collection_archive---------4-----------------------#2023-11-20](https://towardsdatascience.com/developing-a-climate-gpt-using-nasas-power-api-37b3d9e2a664?source=collection_archive---------4-----------------------#2023-11-20)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/developing-a-climate-gpt-using-nasas-power-api-37b3d9e2a664?source=collection_archive---------4-----------------------#2023-11-20](https://towardsdatascience.com/developing-a-climate-gpt-using-nasas-power-api-37b3d9e2a664?source=collection_archive---------4-----------------------#2023-11-20)
- en: '[](https://medium.com/@astrobagel?source=post_page-----37b3d9e2a664--------------------------------)[![Matthew
    Harris](../Images/4fa3264bb8a028633cd8d37093c16214.png)](https://medium.com/@astrobagel?source=post_page-----37b3d9e2a664--------------------------------)[](https://towardsdatascience.com/?source=post_page-----37b3d9e2a664--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----37b3d9e2a664--------------------------------)
    [Matthew Harris](https://medium.com/@astrobagel?source=post_page-----37b3d9e2a664--------------------------------)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@astrobagel?source=post_page-----37b3d9e2a664--------------------------------)[![Matthew
    Harris](../Images/4fa3264bb8a028633cd8d37093c16214.png)](https://medium.com/@astrobagel?source=post_page-----37b3d9e2a664--------------------------------)[](https://towardsdatascience.com/?source=post_page-----37b3d9e2a664--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----37b3d9e2a664--------------------------------)
    [Matthew Harris](https://medium.com/@astrobagel?source=post_page-----37b3d9e2a664--------------------------------)'
- en: ·
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4a2cd25b8ff9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeveloping-a-climate-gpt-using-nasas-power-api-37b3d9e2a664&user=Matthew+Harris&userId=4a2cd25b8ff9&source=post_page-4a2cd25b8ff9----37b3d9e2a664---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----37b3d9e2a664--------------------------------)
    ·10 min read·Nov 20, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F37b3d9e2a664&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeveloping-a-climate-gpt-using-nasas-power-api-37b3d9e2a664&user=Matthew+Harris&userId=4a2cd25b8ff9&source=-----37b3d9e2a664---------------------clap_footer-----------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4a2cd25b8ff9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeveloping-a-climate-gpt-using-nasas-power-api-37b3d9e2a664&user=Matthew+Harris&userId=4a2cd25b8ff9&source=post_page-4a2cd25b8ff9----37b3d9e2a664---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----37b3d9e2a664--------------------------------)
    ·10 min read·2023年11月20日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F37b3d9e2a664&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeveloping-a-climate-gpt-using-nasas-power-api-37b3d9e2a664&user=Matthew+Harris&userId=4a2cd25b8ff9&source=-----37b3d9e2a664---------------------clap_footer-----------)'
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F37b3d9e2a664&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeveloping-a-climate-gpt-using-nasas-power-api-37b3d9e2a664&source=-----37b3d9e2a664---------------------bookmark_footer-----------)![](../Images/997c4c83d6acb83a9aec8acb7a4b5a44.png)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F37b3d9e2a664&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeveloping-a-climate-gpt-using-nasas-power-api-37b3d9e2a664&source=-----37b3d9e2a664---------------------bookmark_footer-----------)![](../Images/997c4c83d6acb83a9aec8acb7a4b5a44.png)'
- en: Image created in ChatGPT
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图像由 ChatGPT 创建
- en: TL;DR
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: TL;DR
- en: '*In this article we explore OpenAI’s new GPTs feature, which offers a no-code
    way to quickly create AI agents that can automatically call external APIs to get
    data as well as generate code to answer data analysis questions. In just a few
    hours we built a chatbot that can answer questions about climate based on data
    from the NASA Power API as well as carry out data analysis tasks. The GPT user
    experience OpenAI has created is excellent, significantly lowering the barrier
    to creating state-of-the-art AI agents. That said, the external API calling configuration
    can be a bit technically challenging and requires that the API has an openapi.json
    file available. Also, cost is still an unknown, and while in preview it would
    seem that GPTs have some caps on the number of interactions allowed per day. However,
    with the imminent launch of OpenAI’s GPT store, we may see an explosion in these
    GPT AI agents and even now they offer some amazing capabilities.*'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '*在本文中，我们探讨了 OpenAI 新推出的 GPTs 功能，它提供了一种无代码的方式，快速创建能够自动调用外部 API 以获取数据并生成代码以回答数据分析问题的
    AI 代理。仅仅几个小时，我们就构建了一个能够基于 NASA Power API 的数据回答气候相关问题并执行数据分析任务的聊天机器人。OpenAI 创建的
    GPT 用户体验非常出色，显著降低了创建最先进 AI 代理的门槛。不过，外部 API 调用配置可能会有些技术挑战，并且需要 API 提供 openapi.json
    文件。此外，成本仍然未知，虽然在预览期间，GPTs 似乎对每天允许的交互次数有一些限制。然而，随着 OpenAI GPT 商店的即将推出，我们可能会看到这些
    GPT AI 代理的爆炸式增长，即使现在它们已经提供了一些令人惊叹的功能。*'
- en: What Are GPT’s?
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 GPT？
- en: '[GPTs were recently launched](https://openai.com/blog/introducing-gpts) by
    OpenAI and offer a way for non-technical users to create AI chat agents powered
    by the powerful [GPT-4](https://openai.com/research/gpt-4) Large Language Model
    (LLM). Though it’s been possible to do most of what GPTs offer for some time through
    3rd party libraries like [LangChain](https://www.langchain.com/) and [autogen](https://github.com/microsoft/autogen),
    GPTs offer a native solution. With that comes a slick easy-to-use interface and
    tight integration with the OpenAI ecosystem. Importantly, they will soon also
    be available in a new GPT store, raising the possibility that we could be seeing
    an App store situation and the explosion of AI agents. Or not, it’s difficult
    to tell, but the potential is definitely there.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[GPTs 最近由 OpenAI 推出](https://openai.com/blog/introducing-gpts)，提供了一种让非技术用户创建由强大的
    [GPT-4](https://openai.com/research/gpt-4) 大型语言模型驱动的 AI 聊天代理的方式。虽然通过 [LangChain](https://www.langchain.com/)
    和 [autogen](https://github.com/microsoft/autogen) 等第三方库已经可以实现大多数 GPTs 提供的功能，但
    GPTs 提供了原生解决方案。随之而来的是一个光滑易用的界面和与 OpenAI 生态系统的紧密集成。重要的是，它们很快也将出现在新的 GPT 商店中，这提高了我们可能看到应用商店情况和
    AI 代理爆炸性增长的可能性。或者也可能不是，这很难判断，但潜力无疑存在。'
- en: GPTs come with some very powerful features, notably the ability to surf the
    web, generate and run code, and the killer feature, the ability to communicate
    with APIs to get external data. The last one is very powerful as it means it should
    be easy to create an AI agent on top of any data store that presents data using
    an API.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: GPTs 具有一些非常强大的功能，特别是能够浏览网络、生成和运行代码，以及最强大的功能，能够与 API 进行通信以获取外部数据。最后这一点非常强大，因为它意味着基于任何使用
    API 提供数据的数据存储创建 AI 代理应该是很容易的。
- en: Creating a GPT
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建 GPT
- en: GPTs are currently only available to ChatGPT plus subscribers. To create one,
    you will need to visit [chat.openai.com/create](https://chat.openai.com/create)
    which will prompt you for some details about what your GPT will do and the thumbnail
    image you’d like to use (it can be generated automatically using DALL-E-3).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: GPTs 目前仅对 ChatGPT Plus 订阅用户开放。要创建一个，您需要访问 [chat.openai.com/create](https://chat.openai.com/create)，这将提示您提供有关您的
    GPT 将做什么的一些细节以及您想使用的缩略图（可以使用 DALL-E-3 自动生成）。
- en: '![](../Images/7a583d645f08f12e9d8a2e6a96186de0.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7a583d645f08f12e9d8a2e6a96186de0.png)'
- en: For this analysis I used the prompt “**Create a climate indicators chatbot that
    uses the NASA Power API to get data**”. This created a GPT with the following
    system prompt (in the ‘instructions’ field under ‘Configure’) …
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这次分析，我使用了提示“**创建一个气候指标聊天机器人，使用 NASA Power API 获取数据**”。这创建了一个具有以下系统提示的 GPT（在“配置”下的“说明”字段中）…
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Which seems very reasonable based on the single sentence I provided. This can
    of course be adjusted to taste, and as we shall see below is also a good place
    to guide the chatbot regarding API calls.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我提供的单句内容，这似乎非常合理。当然，这可以根据口味进行调整，正如下文所述，这也是指导聊天机器人关于 API 调用的一个好地方。
- en: Configuring Capabilities
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置能力
- en: The GPT can be configured with various capabilities. For our analysis, we will
    deactivate the ability to generate images and keep the ability to browse the web
    and generate and run code with Code Interpreter. For a production GPT I would
    probably deactivate web access and ensure all required data is provided by specified
    APIs, but for our analysis we’ll leave it on as it’s handy for getting latitude
    and longitude for places, required for calling the NASA Power API.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: GPT 可以配置各种功能。对于我们的分析，我们将停用生成图像的能力，并保持浏览网页以及使用代码解释器生成和运行代码的能力。对于生产环境的 GPT，我可能会停用网页访问，并确保所有必需的数据由指定的
    API 提供，但对于我们的分析，我们将其保留，因为它对于获取经度和纬度来调用 NASA Power API 是很方便的。
- en: '![](../Images/71b9c21d3b68bcaa940c9605c6bd633a.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/71b9c21d3b68bcaa940c9605c6bd633a.png)'
- en: Configuring API Access
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 API 访问
- en: This is the real heart of data-driven GPTs, configuring the API integration.
    To do this you will need to click ‘Configure’ at the top of your GPT, and scroll
    down, and click ‘Create Action’ …
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这是数据驱动 GPT 的核心，配置 API 集成。要做到这一点，您需要在您的 GPT 顶部点击‘配置’，然后向下滚动，点击‘创建操作’……
- en: '![](../Images/a5f93df3c0b03277dca02b4879d05f24.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a5f93df3c0b03277dca02b4879d05f24.png)'
- en: Configuring a GPT to communicate with NASA’s Power API for climate data
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 配置 GPT 以与 NASA 的 Power API 进行气候数据通信
- en: This opens a section where you can provide details of your API, either by providing
    a link to or pasting an [openapi.json](https://swagger.io/specification/) (previously
    swagger) API definition.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这打开了一个部分，您可以通过提供或粘贴一个[openapi.json](https://swagger.io/specification/)（之前是 swagger）API
    定义的链接来提供 API 的详细信息。
- en: This of course raises a constraint that the external API needs to have an available
    openapi.json file. Though very common it isn’t true for many important APIs. Also,
    the default openapi.json often needs a little adjustment for the GPT to work.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这带来一个限制条件，即外部 API 需要有一个可用的 openapi.json 文件。尽管这在许多重要的 API 中非常普遍，但并非所有情况都如此。此外，默认的
    openapi.json 通常需要进行一些调整才能使 GPT 正常工作。
- en: The NASA Power API
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NASA Power API
- en: For this analysis, we will use [NASA’s Prediction of Worldwide Energy Resources
    (POWER)](https://power.larc.nasa.gov/docs/) API to get climate indicators. This
    amazing project combines a wide range of [data and model simulations](https://power.larc.nasa.gov/docs/methodology/)
    to provide a set of APIs for climate indicators at point locations. There are
    a few API endpoints, for this analysis we will use the [Indicators API](https://power.larc.nasa.gov/docs/services/api/application/indicators/)
    which includes an [openapi.json specification](https://power.larc.nasa.gov/api/pages/?urls.primaryName=Indicators)
    that was pasted in the GPT’s action configuration pane. It needed a little manipulation
    to (i) Ensure any parameter descriptions were under a 300-character limit; (ii)
    Add a ‘servers’ section …
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个分析，我们将使用[NASA 全球能源资源预测 (POWER)](https://power.larc.nasa.gov/docs/) API 获取气候指标。这个令人惊奇的项目结合了广泛的[数据和模型模拟](https://power.larc.nasa.gov/docs/methodology/)，为点位提供一组气候指标的
    API。有几个 API 端点，对于这个分析，我们将使用[指标 API](https://power.larc.nasa.gov/docs/services/api/application/indicators/)，其中包含一个[openapi.json
    规范](https://power.larc.nasa.gov/api/pages/?urls.primaryName=Indicators)，它被粘贴在
    GPT 的操作配置窗格中。需要对其进行一些处理以 (i) 确保任何参数描述都在 300 字符以内；(ii) 添加一个‘servers’部分…
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: When all exceptions in the GPT user interface were resolved, the end-point specified
    in the openapi.json appeared …
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 当 GPT 用户界面中的所有异常都得到解决时，openapi.json 中指定的端点出现…
- en: '![](../Images/1e4b938c33c6bd242f5eea7ca85cf337.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1e4b938c33c6bd242f5eea7ca85cf337.png)'
- en: NASA Power API indicators endpoints which the GPT user interface displays for
    a slightly adjusted openapi.json specification
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: NASA Power API 指标端点，GPT 用户界面显示稍作调整的 openapi.json 规范
- en: I would have added other APIs, such as [climatology](https://power.larc.nasa.gov/api/pages/?urls.primaryName=Climatology),
    but OpenAI does not support multiple actions with the same end-point domain, ie
    I couldn’t create an action for each openapi.json NASA provides. I would have
    to merge them into one larger openapi.json file, not terribly difficult, but I
    opted to keep things simple for this analysis and use only the indicators end-point.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我本来会添加其他 API，比如[气候学](https://power.larc.nasa.gov/api/pages/?urls.primaryName=Climatology)，但
    OpenAI 不支持具有相同端点域的多个操作，即我无法为 NASA 提供的每个 openapi.json 创建一个操作。我必须将它们合并成一个较大的 openapi.json
    文件，这并不是非常困难，但我选择为这个分析保持简单，只使用指标端点。
- en: Adjusting the System Prompt
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调整系统提示
- en: From some experimentation with the API directly, I found that the field ‘user’
    was not provided in each call which resulted in an API exception. To get around
    this I added this to the system prompt …
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 通过直接与 API 进行一些实验，我发现每次调用中并未提供“user”字段，导致 API 异常。为了解决这个问题，我将这一点添加到系统提示中…
- en: '[PRE2]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Where I created an alphanumeric user ID for the API calls.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我创建了一个字母数字用户 ID 用于 API 调用。
- en: Testing Our GPT
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试我们的 GPT
- en: In the GPT Edit screen, the left pane is for adjusting configuration, the right
    is for preview. I found the preview provides some extra debugging information
    available in the published GPT, especially useful for investigating API issues.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在 GPT 编辑屏幕中，左侧窗格用于调整配置，右侧窗格用于预览。我发现预览提供了一些额外的调试信息，在发布的 GPT 中特别有用，尤其是用于调查 API
    问题。
- en: On asking “**What is the mean average rainfall in Tokyo**”, I was presented
    with a confirmation to use the API …
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在询问“**东京的平均降雨量是多少**”时，我被要求确认使用 API…
- en: '![](../Images/cc7a9b0a2b50bb601cb4b0a65e2e6ab3.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cc7a9b0a2b50bb601cb4b0a65e2e6ab3.png)'
- en: On the first use of an API action, the GPT owner is prompted for confirmation
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一次使用 API 操作时，GPT 所有者会被提示确认。
- en: I selected “Always” and the GPT called the API. However, it got a response stating
    that a year range was required …
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我选择了“始终”，然后 GPT 调用了 API。然而，它收到的响应表明需要一个年份范围…
- en: '![](../Images/cd05c3c1bf4888fe78ac8bacc7530955.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cd05c3c1bf4888fe78ac8bacc7530955.png)'
- en: This is rather cool, it already suggests a solution to use years 2018–2022,
    which I accept by responding “Yes” …
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这相当酷，它已经建议使用 2018 年至 2022 年的解决方案，我通过回复“是”的方式接受了…
- en: '![](../Images/8e02760c98a2f82c6a33e88b2495e6e2.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8e02760c98a2f82c6a33e88b2495e6e2.png)'
- en: GPT was able to retrieve and present Tokyo’s average rainfall using NASA’s Power
    API
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: GPT 成功使用 NASA 的 Power API 获取并展示了东京的平均降雨量。
- en: Using the ‘Try it out’ button on the [API page](https://power.larc.nasa.gov/api/pages/?urls.primaryName=Indicators),
    entering the above year range and the latitude/longitude of Tokyo as 35.6895/139.6917
    I get a response. Since I wasn’t familiar with variable names, I asked the GPT
    …
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在[API 页面](https://power.larc.nasa.gov/api/pages/?urls.primaryName=Indicators)上使用“试一下”按钮，输入上述年份范围和东京的纬度/经度为
    35.6895/139.6917，我得到了一个响应。因为我对变量名称不熟悉，所以我询问了 GPT…
- en: '![](../Images/f1e20b4aa1bc22a5b3f308068710c1bb.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f1e20b4aa1bc22a5b3f308068710c1bb.png)'
- en: The GPT is helpful in presenting API variable names
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: GPT 在展示 API 变量名称方面非常有帮助。
- en: Going back to the API response we see that …
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 回到 API 响应，我们看到…
- en: '[PRE3]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Hmm, so the underlying API data is actually providing data for each of the 12
    months, but the GPT response took the first 5 and presented them as yearly averages.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，所以底层的 API 数据实际上提供了每个月的数据，但 GPT 的响应只取了前 5 个，并呈现为年度平均值。
- en: So things *looked* great, but as we often find, we need some taming of the LLM
    to avoid hallucination. Let’s provide a bit more context about the API in the
    ‘Instructions’ section of the GPT configuration …
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 所以事情看起来*很*不错，但正如我们经常发现的那样，我们需要稍微调整 GPT，以避免产生幻觉。让我们在 GPT 配置的“说明”部分提供更多关于 API
    的上下文信息…
- en: '[PRE4]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Trying again “**What is the mean average rainfall in Tokyo**” …
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 再试一次，“**东京的平均降雨量是多少**”…
- en: '![](../Images/a40b3bb8fd75f74ef3f91536237434cb.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a40b3bb8fd75f74ef3f91536237434cb.png)'
- en: Which is now correct. A good example of improving performance through a little
    prompting.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在这是正确的。通过一点提示改进性能的好例子。
- en: Let’s ask it to do some analysis by asking “**Please plot monthly averages**”
    …
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们请求它进行一些分析，“**请绘制月度平均值**”…
- en: '![](../Images/87100d827e14c1fb9f2e5e7345138fb1.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/87100d827e14c1fb9f2e5e7345138fb1.png)'
- en: GPTs can run code using data they retrieved from APIs to provide basic data
    analysis
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: GPT 可以使用从 API 检索的数据运行代码，以提供基本数据分析。
- en: This is very nifty! The values in the above plot align with those retrieved
    directly in the API. At the end of its response, there is a link where you can
    review the code it generated and ran …
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这非常巧妙！上图中的值与直接从 API 检索到的值相符。在其响应的末尾，有一个链接，你可以查看它生成并运行的代码…
- en: '![](../Images/4c96642524dbd9450c84b0ea2f49e1e6.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4c96642524dbd9450c84b0ea2f49e1e6.png)'
- en: OK, now let’s try something more involved. First I asked what variables are
    available …
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 好了，现在让我们尝试一些更复杂的事情。首先我询问可用的变量是什么…
- en: '![](../Images/143b7c6d3a59c7abb02a4b57f71f28fb.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/143b7c6d3a59c7abb02a4b57f71f28fb.png)'
- en: GPTs can interrogate documentation API endpoints
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: GPT 可以查询文档 API 终端点。
- en: It automatically accessed the configuration endpoint to get metadata. Using
    this, let’s ask “**Is relative humidity correlated with solar radiation in Neath,
    South Wales in the last 5 years**” …
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 它自动访问了配置端点以获取元数据。利用这个，让我们问“**在过去5年中，南威尔士的尼思的相对湿度是否与太阳辐射相关？**”…
- en: '![](../Images/53117c61c65ffed1dfe7fb39ff62c195.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/53117c61c65ffed1dfe7fb39ff62c195.png)'
- en: It queried the API to get data, and then generated code to create a plot. Pretty
    amazing, but didn’t answer the full question, so let’s insist by asking “**Please
    calculate the correlation coefficient**” …
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 它查询了API以获取数据，然后生成代码来创建图表。相当惊人，但没有回答完整的问题，所以让我们坚持问“**请计算相关系数**”…
- en: '![](../Images/60aee58173c646fd101ad11f9cc0a17b.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/60aee58173c646fd101ad11f9cc0a17b.png)'
- en: Clicking the link to see the code …
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 点击链接查看代码…
- en: '[PRE5]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Which is reasonable.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这是合理的。
- en: OK, what about multiple location comparisons? First, I added this to the Instructions
    (system prompt) just to be clear …
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，那多地点比较怎么样？首先，我将这添加到指令（系统提示）中以确保清楚…
- en: '[PRE6]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Now, Let’s ask “**Was Svalbard more humid than Bargoed Wales in the last 5 years?**”
    …
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们问“**在过去5年中，斯瓦尔巴比巴戈德威尔士更潮湿吗？**”…
- en: '![](../Images/ea2b25f246d6e9ff5c1ec9d88a02bc80.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ea2b25f246d6e9ff5c1ec9d88a02bc80.png)'
- en: Since the API needs latitude and longitude, the GPT confirms the approach. If
    we had configured a geocoding API as an action, this wouldn’t be required, but
    for now using central coordinates will suffice.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 由于API需要经纬度，GPT确认了这种方法。如果我们配置了地理编码API作为一个操作，这就不需要了，但目前使用中心坐标就足够了。
- en: The GPT called the API for both locations, extracted data, and compared …
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: GPT调用了两个位置的API，提取数据，并进行比较…
- en: '![](../Images/c70e6e7abd1c2d80c463037aa1cb468e.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c70e6e7abd1c2d80c463037aa1cb468e.png)'
- en: I grew up in Bargoed, and can honestly say it’s a VERY rainy place. Calling
    the API directly, the above values are correct.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我在巴戈德长大，诚实地说，这里是个**非常**多雨的地方。直接调用API，以上数值是正确的。
- en: Limitations
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 限制
- en: During this analysis a few challenges presented themselves.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在这次分析中出现了一些挑战。
- en: First, there seems to be a limit on how many GPT-4 interactions are allowed
    per day. This was reached after an hour or two of testing, which seemed to be
    lower than published [GPT-4 limits](https://platform.openai.com/account/limits),
    so it might be related to the preview nature of GPTs. This would prevent any production
    rollout, but one hopes it will be resolved as part of the GPT store launch.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，似乎每天允许的GPT-4交互次数有限。在测试了一两个小时后达到了这个限制，这似乎低于公布的[GPT-4限制](https://platform.openai.com/account/limits)，所以这可能与GPT的预览性质有关。这将阻止任何生产部署，但希望在GPT商店推出时能解决这个问题。
- en: Performance can also be a bit slow at times, but given the GPT was calling an
    external API and running code, not unreasonably so. The UX is very good, indicating
    clearly to the user that things are in progress.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 性能有时也可能稍慢，但考虑到GPT在调用外部API并运行代码，也不是不合理的。用户体验非常好，清楚地向用户表明事情正在进行中。
- en: Cost is an unknown, or at least, we couldn’t see any significant impact on costs
    but will continue to track this. GPTs generate code and analyze lengthy responses
    from APIs, so token costs may well be the blocker for many organizations in using
    them.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 成本是一个未知数，或者说，我们没有看到成本的显著影响，但会继续跟踪。GPT生成代码并分析来自API的长响应，因此令牌成本可能会成为许多组织使用它们的障碍。
- en: Conclusions and Future Work
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论和未来工作
- en: In this analysis, we only used the ‘indicators’ NASA Power API endpoints. It
    wouldn’t be much work to use all of NASA’s Power endpoints and incorporate geocoding
    to create a really comprehensive climate chatbot.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在这次分析中，我们仅使用了‘指标’NASA Power API端点。使用所有的NASA Power端点并结合地理编码，创建一个真正全面的气候聊天机器人将不会太费力。
- en: GPTs offer a low-code way to develop state-of-the-art AI agents that are able
    to interface automatically with APIs and generate code to perform data analysis.
    They are potentially game-changing, we were able to create a fairly advanced climate
    chatbot in just a few hours without writing a line of code!
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: GPT提供了一种低代码的方式来开发最先进的AI代理，这些代理能够自动与API接口并生成代码以执行数据分析。它们可能会改变游戏规则，我们仅用了几小时就能创建一个相当先进的气候聊天机器人，而无需写一行代码！
- en: They are by no means perfect yet, the configuration UX is very, very good, but
    there are some areas such as API error reporting where the user is left guessing.
    External API setup requires technical knowledge, and some APIs might be missing
    the required openapi.json, making them harder to implement. Cost may also be prohibitive,
    but it’s difficult to say yet as GPTs are in preview. As always with *any* LLM
    application, much of the work will be to ensure factual correctness and the typical
    design and engineering workflows needed for any software project still of course
    apply.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 目前它们还远远不完美，配置用户体验非常好，但在一些领域，如 API 错误报告，用户往往不得不猜测。外部 API 设置需要技术知识，有些 API 可能缺少所需的
    openapi.json，导致实现难度增加。成本也可能很高，但由于 GPTs 仍处于预览阶段，具体情况难以判断。与 *任何* LLM 应用一样，许多工作将是确保事实准确性，任何软件项目所需的典型设计和工程工作流程仍然适用。
- en: GPTs are amazing, but aren’t magic … yet.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: GPTs 非常了不起，但还不是魔法……还没有。
- en: References
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: '*For* [NASA’s Prediction of Worldwide Energy Resources (POWER)](https://power.larc.nasa.gov/docs/):
    *“These data were obtained from the NASA Langley Research Center (LaRC) POWER
    Project funded through the NASA Earth Science/Applied Science Program.”*'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '*对于* [NASA 全球能源资源预测 (POWER)](https://power.larc.nasa.gov/docs/)：*“这些数据来自NASA
    Langley研究中心（LaRC）POWER项目，该项目由NASA地球科学/应用科学计划资助。”*'
