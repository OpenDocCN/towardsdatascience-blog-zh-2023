["```py\nfrom mlscorecheck.check.binary import check_1_testset_no_kfold\n\nresult = check_1_testset_no_kfold(\n    testset={'p': 100, 'n': 1000},\n    scores={'acc': 0.8464, 'sens': 0.81, 'f1': 0.4894},\n    eps=1e-4\n)\nresult['inconsistency']\n#False\n```", "```py\nresult = check_1_testset_no_kfold(\n    testset={'p': 100, 'n': 1000},\n    scores={'acc': 0.8474, 'sens': 0.81, 'f1': 0.4894},\n    eps=1e-4\n)\nresult['inconsistency']\n#True\n```", "```py\nfrom mlscorecheck.check.binary import check_n_testsets_som_no_kfold\n\nscores = {'acc': 0.4719, 'npv': 0.6253, 'f1': 0.3091}\ntestsets = [\n    {'p': 405, 'n': 223}, \n    {'p': 3, 'n': 422}, \n    {'p': 109, 'n': 404}\n]\n\nresult = check_n_testsets_som_no_kfold(\n    testsets=testsets,\n    scores=scores,\n    eps=1e-4\n)\nresult['inconsistency']\n# False\n```", "```py\nscores['f1'] = 0.3191\n\nresult = check_n_testsets_som_no_kfold(\n    testsets=testsets,\n    scores=scores,\n    eps=1e-4\n)\nresult['inconsistency']\n# True\n```", "```py\nfrom mlscorecheck.check.binary import check_1_dataset_known_folds_mos\n\nscores = {'acc': 0.7811, 'sens': 0.5848, 'spec': 0.7893}\ndataset = {'p': 21, 'n': 500}\nfolding = {\n    'n_folds': 2, \n    'n_repeats': 3, \n    'strategy': 'stratified_sklearn'\n}\n\nresult = check_1_dataset_known_folds_mos(\n    dataset=dataset,\n    folding=folding,\n    scores=scores,\n    eps=1e-4\n)\nresult['inconsistency']\n# False\n```", "```py\nscores['acc'] = 0.79\n\nresult = check_1_dataset_known_folds_mos(\n    dataset=dataset,\n    folding=folding,\n    scores=scores,\n    eps=1e-4,\n    verbosity=0\n)\nresult['inconsistency']\n# True\n```", "```py\nfrom mlscorecheck.check.binary import check_1_dataset_unknown_folds_mos\n\nfolding = {'n_folds': 2, 'n_repeats': 3}\nresult = check_1_dataset_unknown_folds_mos(\n    dataset=dataset,\n    folding=folding,\n    scores=scores,\n    eps=1e-4,\n    verbosity=0\n)\nresult['inconsistency']\n# False\n```", "```py\nfrom mlscorecheck.check.binary import estimate_n_evaluations\n\nestimate_n_evaluations(\n    dataset=dataset, \n    folding=folding, \n    available_scores=['acc', 'sens', 'spec']\n)\n# 4096\n```", "```py\nfrom mlscorecheck.check.multiclass import check_1_dataset_known_folds_mos_macro\n\nscores = {'acc': 0.626, 'sens': 0.2483, 'spec': 0.7509}\ndataset = {0: 149, 1: 118, 2: 83, 3: 154}\nfolding = {\n    'n_folds': 4, \n    'n_repeats': 2, \n    'strategy': 'stratified_sklearn'\n}\n\nresult = check_1_dataset_known_folds_mos_macro(\n    dataset=dataset,\n    folding=folding,\n    scores=scores,\n    eps=1e-4,\n    verbosity=0\n)\nresult['inconsistency']\n# False\n```", "```py\nfrom mlscorecheck.check.regression import check_1_testset_no_kfold\n\nvar = 0.0831\nn_samples = 100\nscores =  {'mae': 0.0254, 'r2': 0.9897}\n\nresult = check_1_testset_no_kfold(\n    var=var,\n    n_samples=n_samples,\n    scores=scores,\n    eps=1e-4\n)\nresult['inconsistency']\n# False\n```", "```py\nfrom mlscorecheck.check.bundles.retina import check_drive_vessel_image\n\nscores = {'acc': 0.9323, 'sens': 0.5677, 'spec': 0.9944}\n\nresult = check_drive_vessel_image(\n    scores=scores,\n    eps=10**(-4),\n    image_identifier='03',\n    annotator=1\n)\nresult['inconsistency']\n# {'inconsistency_fov': False, 'inconsistency_all': True}\n```"]