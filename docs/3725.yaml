- en: Test and Cover Your Code Today!
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 立即测试并覆盖你的代码！
- en: 原文：[https://towardsdatascience.com/test-and-cover-your-code-today-e80c27d08dab?source=collection_archive---------9-----------------------#2023-12-21](https://towardsdatascience.com/test-and-cover-your-code-today-e80c27d08dab?source=collection_archive---------9-----------------------#2023-12-21)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/test-and-cover-your-code-today-e80c27d08dab?source=collection_archive---------9-----------------------#2023-12-21](https://towardsdatascience.com/test-and-cover-your-code-today-e80c27d08dab?source=collection_archive---------9-----------------------#2023-12-21)
- en: '![](../Images/af5766108dd178f5b281077655b09ca8.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/af5766108dd178f5b281077655b09ca8.png)'
- en: Photo by [Yancy Min](https://unsplash.com/@yancymin?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Yancy Min](https://unsplash.com/@yancymin?utm_source=medium&utm_medium=referral)
    提供，来自 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: A hands-on guide for adding a motivational GitHub action to your repository
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为你的代码库添加激励 GitHub Action 的实用指南
- en: '[](https://itay-bittan.medium.com/?source=post_page-----e80c27d08dab--------------------------------)[![Itay
    Bittan](../Images/328e4d9b0b98b65e59e42983e9d1afaa.png)](https://itay-bittan.medium.com/?source=post_page-----e80c27d08dab--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e80c27d08dab--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e80c27d08dab--------------------------------)
    [Itay Bittan](https://itay-bittan.medium.com/?source=post_page-----e80c27d08dab--------------------------------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://itay-bittan.medium.com/?source=post_page-----e80c27d08dab--------------------------------)[![Itay
    Bittan](../Images/328e4d9b0b98b65e59e42983e9d1afaa.png)](https://itay-bittan.medium.com/?source=post_page-----e80c27d08dab--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e80c27d08dab--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e80c27d08dab--------------------------------)
    [Itay Bittan](https://itay-bittan.medium.com/?source=post_page-----e80c27d08dab--------------------------------)'
- en: ·
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F43233e94ad28&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftest-and-cover-your-code-today-e80c27d08dab&user=Itay+Bittan&userId=43233e94ad28&source=post_page-43233e94ad28----e80c27d08dab---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e80c27d08dab--------------------------------)
    ·5 min read·Dec 21, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe80c27d08dab&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftest-and-cover-your-code-today-e80c27d08dab&user=Itay+Bittan&userId=43233e94ad28&source=-----e80c27d08dab---------------------clap_footer-----------)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F43233e94ad28&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftest-and-cover-your-code-today-e80c27d08dab&user=Itay+Bittan&userId=43233e94ad28&source=post_page-43233e94ad28----e80c27d08dab---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e80c27d08dab--------------------------------)
    · 5 分钟阅读 · 2023年12月21日 [](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe80c27d08dab&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftest-and-cover-your-code-today-e80c27d08dab&user=Itay+Bittan&userId=43233e94ad28&source=-----e80c27d08dab---------------------clap_footer-----------)'
- en: --
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe80c27d08dab&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftest-and-cover-your-code-today-e80c27d08dab&source=-----e80c27d08dab---------------------bookmark_footer-----------)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe80c27d08dab&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftest-and-cover-your-code-today-e80c27d08dab&source=-----e80c27d08dab---------------------bookmark_footer-----------)'
- en: 'I’ll start with a confession: as a software engineer, I hated and avoided writing
    tests for years. I came across so many dusty projects — some with no tests at
    all, others that had tests but those had never run as part of the CI/CD pipelines,
    and the last ones included really poor test coverage.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我先做一个坦白：作为一名软件工程师，我曾经讨厌并且避免编写测试多年。我遇到过许多尘封的项目——有些根本没有测试，有些有测试但从未在 CI/CD 管道中运行过，还有一些则包含了非常差的测试覆盖率。
- en: On one hand, there are plenty of reasons why we should write tests but on the
    other, there are more excuses (or “justifications”) why we skip those.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 一方面，我们应该编写测试有很多理由，但另一方面，也有更多的借口（或“理由”）让我们跳过这些测试。
- en: 'While aiming to be a professional, I was always jealous of those shiny 100%
    test coverage open-source repositories and dreamed about that in my day-to-day
    repositories out there. Four years ago, while grappling with myself about that
    matter, I found [diff-cover](https://github.com/Bachmann1234/diff_cover), a great
    open-source project with a simple mission — cover your **own** changes with tests.
    Here is how the authors describe it:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在追求专业的过程中，我总是羡慕那些光鲜的 100% 测试覆盖率的开源仓库，并在日常的仓库中梦寐以求。四年前，在为此事苦恼时，我发现了 [diff-cover](https://github.com/Bachmann1234/diff_cover)，这是一个很棒的开源项目，使命简单——用测试覆盖
    **自己的** 更改。以下是作者的描述：
- en: 'Diff coverage is the percentage of new or modified lines that are covered by
    tests. This provides a clear and achievable standard for code review: If you touch
    a line of code, that line should be covered. Code coverage is every developer’s
    responsibility!'
  id: totrans-13
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 差异覆盖率是由测试覆盖的新或修改的代码行的百分比。这为代码审查提供了一个清晰且可实现的标准：如果你修改了一行代码，那么这行代码应该被测试覆盖。代码覆盖率是每位开发者的责任！
- en: In a nutshell, diff-cover assumes that you are using [Git](https://git-scm.com/)
    and running a coverage tool. Using git it’s easy to get **your** modified line
    numbers and compare them with the uncovered line numbers of your favorite coverage
    tool. Almost all of the coverage tools can yield a unified and generic XML format,
    no matter what your code language is (Python, JavaScript, etc.)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，diff-cover 假设你正在使用 [Git](https://git-scm.com/) 并运行一个覆盖工具。使用 git 可以轻松获取
    **你的** 修改行号，并将其与你最喜欢的覆盖工具的未覆盖行号进行比较。几乎所有的覆盖工具都能生成统一且通用的 XML 格式，无论你的代码语言是什么（Python、JavaScript
    等）。
- en: 'To sum up, the process I have been doing until now as part of the CI was:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，我迄今为止在 CI 中进行的过程是：
- en: 'Run all tests with a coverage tool, using the [pytest](https://pypi.org/project/pytest/)
    and [pytest-cov](https://pypi.org/project/pytest-cov/) packages:'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 [pytest](https://pypi.org/project/pytest/) 和 [pytest-cov](https://pypi.org/project/pytest-cov/)
    包运行所有测试和覆盖工具：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: (note that it will create *coverage.xml* and *result.xml* report files).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: （注意，它将创建 *coverage.xml* 和 *result.xml* 报告文件）。
- en: '2\. Run diff-cover tool, using the [diff-cover](https://pypi.org/project/diff-cover/)
    package:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 运行 diff-cover 工具，使用 [diff-cover](https://pypi.org/project/diff-cover/) 包：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'which will print something like the following output:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打印出类似以下的输出：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: As you can see from the output above, I’ve made changes in 3 different files,
    and each of them is fully covered (I had to add some new tests and other existing
    tests already covered some of my changes).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 从上面的输出中可以看出，我在 3 个不同的文件中进行了更改，每个文件都完全覆盖了（我不得不添加一些新的测试，而其他现有的测试已经覆盖了我所做的更改）。
- en: Seeing that Diff Coverage report on each PR (Pull Request) has made everyone
    addicted to achieving that 100%. We want to prove that we are responsible for
    our changes and can cover them, instead of being perceived as losers and getting
    a low percentage. Moreover, as a side effect, we have experienced smaller, incremental
    changes in PRs, which is another [best practice](https://www.awesomecodereviews.com/best-practices/code-review-best-practices/#small).
    That’s because everyone thinks twice before adding redundant lines of code now.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 看到每个 PR（拉取请求）上的差异覆盖报告使每个人都沉迷于达到 100%。我们想证明我们对自己的更改负责并且能够覆盖它们，而不是被视为失败者而获得低覆盖率。此外，作为副作用，我们在
    PR 中经历了更小的、增量的更改，这也是另一种 [最佳实践](https://www.awesomecodereviews.com/best-practices/code-review-best-practices/#small)。这因为现在每个人在添加冗余代码行之前都会三思而后行。
- en: After using this methodology for a few years now, we see a constant increase
    in the overall coverage percentages of our repositories. As a result, there has
    been an increase in our production stability as well.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 经过几年的使用这种方法，我们看到我们仓库的整体覆盖率持续增加。因此，我们的生产稳定性也有所提升。
- en: New GitHub Action
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 新的 GitHub Action
- en: 'A few months ago, my talented colleague [Asaf Gallea](https://medium.com/@asafgallea)
    decided to leverage this success into a simpler yet more powerful [new GitHub
    Action](https://github.com/aGallea/tests-coverage-report). This Action applies
    the same idea as diff-cover and also generates a friendly report as a comment
    in your Pull Request, providing links to uncovered lines in case you missed something.
    The new action also allows you to set a minimal coverage threshold (default to
    80%) — otherwise, the [status check](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks)
    will fail and you won’t be able to merge your changes:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 几个月前，我才华横溢的同事 [Asaf Gallea](https://medium.com/@asafgallea) 决定将这成功转化为一种更简单但更强大的
    [新 GitHub Action](https://github.com/aGallea/tests-coverage-report)。该 Action 应用了与
    diff-cover 相同的理念，并生成了一个友好的报告作为 Pull Request 中的评论，提供未覆盖行的链接，以防你遗漏了什么。新的行动还允许你设置最小覆盖率阈值（默认为
    80%），否则 [状态检查](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks)
    将会失败，你将无法合并你的更改：
- en: '![](../Images/b0c7cc29e6f003b70fffc03d54fed10f.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b0c7cc29e6f003b70fffc03d54fed10f.png)'
- en: Test coverage action report (image by author)
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 测试覆盖率行动报告（作者提供的图片）
- en: In the image above we see the GitHub Action report example. There is a minimal
    threshold of 95%, there were 20 lines changed in this Pull Request, with 18 lines
    covered by tests, and two lines, 505–506 are not covered. Since we achieved only
    90% coverage for the changed files, the status check failed and it’s impossible
    to merge this into the master branch.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的图片中，我们看到 GitHub Action 报告的示例。存在一个 95% 的最小阈值，在此 Pull Request 中更改了 20 行代码，其中
    18 行被测试覆盖，两个行，505–506 行未被覆盖。由于我们仅对更改的文件实现了 90% 的覆盖率，状态检查失败，因此无法将其合并到主分支。
- en: Note that this report says nothing about the total coverage of the repository.
    It might be low (60%), and yet, any new change has to pass 95% so eventually,
    the total coverage will increase.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这份报告没有提及仓库的总覆盖率。它可能很低（60%），但任何新的更改必须通过 95% 的覆盖率测试，因此最终总覆盖率会增加。
- en: Setup tests-coverage-report action in your repository
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在你的仓库中设置 tests-coverage-report 行动
- en: That’s it! Now let’s add this Action to **your** repository within a few steps.
    I will assume that it’s a Python project but you can add it to projects in different
    programming languages as well.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！现在让我们在 **你的** 仓库中通过几个步骤添加这个行动。我将假设这是一个 Python 项目，但你也可以将其添加到不同编程语言的项目中。
- en: 'In the repository’s root folder, create the `.github/workflows` folders if
    it does not yet exist. Now, within the `workflows` folder let’s create a new file
    called *test.yml* with the following content:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在仓库的根文件夹中，如果 `.github/workflows` 文件夹尚不存在，请创建它。现在，在 `workflows` 文件夹中创建一个名为 *test.yml*
    的新文件，内容如下：
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: make sure to replace the *<my_package>* and *<my_tests>* above with your package
    name and the tests folder accordingly.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 确保将上面的 *<my_package>* 和 *<my_tests>* 替换为你的包名和测试文件夹名称。
- en: 'That’s it! if you open a new Pull Request to add this file, the action should
    be fired automatically and you’ll see the report:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！如果你打开一个新的 Pull Request 来添加这个文件，行动应该会自动触发，你将看到报告：
- en: '![](../Images/46a951d7e303527895870e26d9c1364e.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/46a951d7e303527895870e26d9c1364e.png)'
- en: Empty test coverage action report (image by author)
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 空的测试覆盖率行动报告（作者提供的图片）
- en: Note that since there are no changes in the package files (source files), there
    are no coverage details to present. The image above was taken from [my Pull Request](https://github.com/itayB/serversion/pull/14)
    while adding the test coverage action into one of my public repositories.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，由于包文件（源文件）没有变化，因此没有覆盖率细节可以展示。上面的图片取自[我的 Pull Request](https://github.com/itayB/serversion/pull/14)，当时我将测试覆盖率行动添加到我的一个公共仓库中。
- en: Summary
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: You have just completed the first action (double meaning) that will change your
    life and make you a better developer. Our generation is addicted to likes, claps,
    upvotes, and geeks like us to show off our professionalism with a 100% coverage
    report as well. We would love to get feedback, suggestions, and feature requests
    for this action that can enhance your testing experience and motivation.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 你刚刚完成了将改变你生活并使你成为更好开发者的第一个行动（双重含义）。我们的这一代人对点赞、鼓掌、好评和像我们这样的极客展示我们的专业性充满了依赖，甚至还希望通过
    100% 覆盖率报告来展现。我们希望收到关于此行动的反馈、建议和功能请求，以提升你的测试体验和动力。
