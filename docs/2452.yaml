- en: 'Double Machine Learning, Simplified: Part 2 ‚Äî Targeting & the CATE'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[https://towardsdatascience.com/double-machine-learning-simplified-part-2-extensions-the-cate-99926151cac?source=collection_archive---------2-----------------------#2023-07-31](https://towardsdatascience.com/double-machine-learning-simplified-part-2-extensions-the-cate-99926151cac?source=collection_archive---------2-----------------------#2023-07-31)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/6eb4d0930e2bb0f3820e0379c8f07e34.png)'
  prefs: []
  type: TYPE_IMG
- en: Learn how to utilize DML for estimating idiosyncratic treatment effects to enable
    data-driven targeting
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@jakepenzak?source=post_page-----99926151cac--------------------------------)[![Jacob
    Pieniazek](../Images/2d9c6295d39fcaaec4e62f11c359cb29.png)](https://medium.com/@jakepenzak?source=post_page-----99926151cac--------------------------------)[](https://towardsdatascience.com/?source=post_page-----99926151cac--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----99926151cac--------------------------------)
    [Jacob Pieniazek](https://medium.com/@jakepenzak?source=post_page-----99926151cac--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ¬∑
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6f0948d99b1c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdouble-machine-learning-simplified-part-2-extensions-the-cate-99926151cac&user=Jacob+Pieniazek&userId=6f0948d99b1c&source=post_page-6f0948d99b1c----99926151cac---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----99926151cac--------------------------------)
    ¬∑10 min read¬∑Jul 31, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F99926151cac&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdouble-machine-learning-simplified-part-2-extensions-the-cate-99926151cac&user=Jacob+Pieniazek&userId=6f0948d99b1c&source=-----99926151cac---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F99926151cac&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdouble-machine-learning-simplified-part-2-extensions-the-cate-99926151cac&source=-----99926151cac---------------------bookmark_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: This article is the **2nd** in a 2 part series on simplifying and democratizing
    Double Machine Learning. In the [1st part](https://medium.com/towards-data-science/double-machine-learning-simplified-part-1-basic-causal-inference-applications-3f7afc9852ee),
    we covered the fundamentals of Double Machine Learning, along with two basic causal
    inference applications. Now, in pt. 2, we will extend this knowledge to turn our
    causal inference problem into a prediction task, wherein we predict individual
    level treatment effects to aid in decision making and data-driven targeting.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Double Machine Learning, as we learned in [part 1 of this series](https://medium.com/towards-data-science/double-machine-learning-simplified-part-1-basic-causal-inference-applications-3f7afc9852ee),
    is a highly flexible partially-linear causal inference method for estimating the
    average treatment effect (ATE) of a treatment. Specifically, it can be utilized
    to model highly non-linear confounding relationships in observational data (especially
    when our set of controls/confounders is of extremely high dimensionality) and/or
    to reduce the variation in our key outcome in experimental settings. Estimating
    the ATE is particularly useful in understanding the average impact of a specific
    treatment, which can be extremely useful for future decision making. However,
    extrapolating this treatment effect assumes a degree homogeneity in the effect;
    that is, regardless of the population we roll treatment out to, we anticipate
    the effect to be similar to the ATE. What if we are limited in the number of individuals
    who we can target for future rollout and thus want to understand among which subpopulations
    the treatment was most effective to drive highly effective rollout?
  prefs: []
  type: TYPE_NORMAL
- en: 'This issue described above concerns estimating treatment effect heterogeneity.
    That is, how does our treatment effect impact different subsets of the population?
    Luckily for us, DML provides a powerful framework to do exactly this. Specifically,
    we can make use of DML to estimate the Conditional Average Treatment Effect (CATE).
    First, let‚Äôs revisit our definition of the ATE:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/595346cd86ae3d2dccd2d8172696ce3f.png)'
  prefs: []
  type: TYPE_IMG
- en: (1) Average Treatment Effect
  prefs: []
  type: TYPE_NORMAL
- en: 'Now with the CATE, we estimate the ATE conditional on a set of values for our
    covariates, **X**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3b305cea9d99b947be51a804dd21028b.png)'
  prefs: []
  type: TYPE_IMG
- en: (2) Conditional Average Treatment Effect
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, if we wanted to know the treatment effect for males versus females,
    we can estimate the CATE conditional on the covariate being equal to each subgroup
    of interest. Note that we can estimate highly aggregated CATEs (i.e., at a male
    vs. female level) or we can allow **X** to take on an extremely high dimensionality
    and thus closely estimate each individuals treatment effect. You may immediately
    notice the benefits in being able to do this: we can utilize this information
    to make highly informed decisions in future targeting of the treatment! *Even
    more notable, we can create a CATE function to make predictions on what we predict
    the treatment effect to be on previously* ***unexposed*** *individuals!*'
  prefs: []
  type: TYPE_NORMAL
- en: DML provides two primary methodologies for estimating this CATE function; namely,
    Linear DML and Non-Parametric DML. We will show how to estimate the CATE mathematically
    and then provide examples for each case.
  prefs: []
  type: TYPE_NORMAL
- en: '**Note:** Unbiased estimation of the CATE still requires the exogeneity/CIA/Ignorability
    assumption to hold as covered in [part 1](https://medium.com/towards-data-science/double-machine-learning-simplified-part-1-basic-causal-inference-applications-3f7afc9852ee).'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Everything demonstrated below can and should be extended to the experimental
    setting (RCT or A/B Testing), where exogeneity is satisfied by construction, as
    covered in application 2 of [part 1](https://medium.com/towards-data-science/double-machine-learning-simplified-part-1-basic-causal-inference-applications-3f7afc9852ee).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Linear DML for Estimating the CATE
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Estimating the CATE in the linear DML framework is a simple extension of DML
    for estimating the ATE, as done in [part 1](https://medium.com/towards-data-science/double-machine-learning-simplified-part-1-basic-causal-inference-applications-3f7afc9852ee):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ff40e6bdeac9222544390e90e9b8ed1a.png)'
  prefs: []
  type: TYPE_IMG
- en: (3) DML for Estimating the ATE
  prefs: []
  type: TYPE_NORMAL
- en: 'where ***y*** is our outcome, ***T*** is our treatment, & ùëÄùë¶ and ***MT*** are
    both flexible ML models (our nuisance functions) to predict ***y*** and ***T***
    given confounders and/or controls, ***X***, respectively. To estimate the CATE
    function using Linear DML, we can simply include interaction terms of the treatment
    residuals with our covariates. Observe:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/174272210fa7fd5219b00dee168f1c53.png)'
  prefs: []
  type: TYPE_IMG
- en: (4) Linear DML for Estimating the CATE
  prefs: []
  type: TYPE_NORMAL
- en: where **Œ©** is the vector of coefficients for the interaction terms. Now our
    CATE function, call it *œÑ,* takes the form *œÑ*(**X**) = Œ≤‚ÇÅ + **XŒ©**, where we
    can predicteach individuals CATE given **X**. If T is continuous, this CATE function
    is for a 1 unit increase in T. Note that *œÑ(****X****) =* Œ≤‚ÇÅ in eq. (3) where
    *œÑ(****X****)* is assumed a constant. Let‚Äôs take a look at this in action!
  prefs: []
  type: TYPE_NORMAL
- en: 'First, let‚Äôs use the same casual DAG from [part 1](https://medium.com/towards-data-science/double-machine-learning-simplified-part-1-basic-causal-inference-applications-3f7afc9852ee),
    where we will be looking at the effect of an individuals time spent on the website
    on their purchase amount, or sales, in the past month (*assuming we observe all
    confounders*).:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/53ff709528289a0762c49af8579e9f7a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Let‚Äôs then simulate this DFP using a similar process as utilized in [part 1](https://medium.com/towards-data-science/double-machine-learning-simplified-part-1-basic-causal-inference-applications-3f7afc9852ee)
    (*note that all values & data are chosen and generated arbitrarily for demonstrative
    purposes, and thus should not necessarily represent a large degree real world
    intuition per se outside of our estimates of the CATE*). Observe that we now include
    interaction terms in the sales DGP to model the CATE, or treatment effect heterogeneity
    (*note that the DGP in part 1 had no treatment effect heterogeneity by construction*):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, to estimate our CATE function, as outlined in eq. (4), we can run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'With the following results:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c8ea093a7a3cbe932d91e2a3e9cd9b8d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Here we can see that the linear DML closely modeled the true DGP for the CATE
    (see coefficients on interaction terms in sales DGP). Let‚Äôs evaluate the performance
    of our CATE function by comparing the linear DML predictions to the true CATE
    for a 1 hour increase in time on the spent on the website:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Here we obtain a MSE of ~0.45, MAE of ~0.55, & R2 of ~0.99\. Plotting the distributions
    of the predicted CATE and true CATE, we obtain:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/31f0438f39ed311f178f70a63dbf3c3c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Additionally, plotting the predicted values versus the true values we obtain:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1bad1bdb88ac3d54becf71b7e122b1ea.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Overall, we have pretty impressive performance! However, the primary limitation
    in this approach is that we must manually specify the functional form of the CATE
    function, thus if we are only including linear interaction terms we may not capture
    the true CATE function. In our example, we simulated the DGP to only have these
    linear interaction terms and thus the performance is strong **by construction**,
    but let‚Äôs see what happens when we tweak the DGP for the CATE to be arbitrarily
    non-linear:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Here we see a stark decrease in performance, where we obtain a MSE of ~55.92,
    MAE of ~4.50, & R2 of ~0.65\. Plotting the distributions of the predicted CATE
    and true CATE, we obtain:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e6532b1335fc2b355fd4f617cb061781.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Additionally, plotting the predicted values versus the true values we obtain:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/94b329b73623ab360460d9d7078317c9.png)'
  prefs: []
  type: TYPE_IMG
- en: This non-linearity in the CATE function is precisely where Non-Parametric DML
    can shine!
  prefs: []
  type: TYPE_NORMAL
- en: Non-Parametric DML for Estimating the CATE
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Non-Parametric DML goes one step further and allows for another flexible non-parametric
    ML model to be utilized for learning the CATE function! Let‚Äôs take a look at how
    we can, mathematically, do exactly this. Let *œÑ(****X****)* continue to denote
    our CATE function. Let‚Äôs start with defining our error term relative to eq. 3
    (*note we drop the intercept Œ≤‚ÇÄ as we are not interested in this parameter for
    the CATE; we could similarly drop this in the linear DML formulation, but for
    the sake of simplicity and consistency with part 1, we do not do this*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ff0e274d37e759410518f750c82bbd0e.png)'
  prefs: []
  type: TYPE_IMG
- en: (5) Error in DML Framework
  prefs: []
  type: TYPE_NORMAL
- en: 'Then define the causal loss function as such (note this is just the MSE!):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/23b208d7d4401f64ac7676339b586054.png)'
  prefs: []
  type: TYPE_IMG
- en: (6) Causal Loss Function
  prefs: []
  type: TYPE_NORMAL
- en: 'What does this mean? We can directly learn *œÑ(****X****)* with any flexible
    ML model via minimizing our causal loss function! This amounts to a weighted regression
    problem with our target and weights, respectively, as:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/60c2a9a2f33933b97d33381032c6861b.png)'
  prefs: []
  type: TYPE_IMG
- en: (7) Target & Weights in Non-Parametric DML
  prefs: []
  type: TYPE_NORMAL
- en: '*Take a moment and soak in the elegance of this result‚Ä¶ We can directly learn
    the CATE function & predict an individuals CATE given our residualized outcome,*
    ***y****, and treatment,* ***T****!*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let‚Äôs take a look at this in action now. We will reuse the DGP for the non-linear
    CATE function that was utilized in the example where linear DML performs poorly
    above. To construct of Non-Parametric DML model, we can run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'And to make predictions + evaluate performance:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Here we obtain a much superior performance over linear DML, with a MSE of 4.61,
    MAE of 1.37, & R2 of 0.97\. Plotting the distributions of the predicted CATE and
    true CATE, we obtain:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/eb3e196328ea71e98e753f625a653215.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Additionally, plotting the predicted values versus the true values we obtain:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/970f099ec85fa61b7e45fbbaa25f1e02.png)'
  prefs: []
  type: TYPE_IMG
- en: Here we can see that, although not perfect, the non-parametric DML approach
    was able to model the non-linearities in the CATE function much better than the
    linear DML approach. We can of course further improve the performance via tuning
    our model. Note that we can use explainable AI tools, such as [SHAP values](https://shap.readthedocs.io/en/latest/index.html),
    to understand the nature of our treatment effect heterogeneity!
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: And there you have it! Thank you for taking the time to read through my article.
    I hope this article has taught you how to go beyond estimating only the ATE &
    utilize DML to estimate the CATE to further understanding heterogeneity in the
    treatment effects and drive more causal inference- & data- driven targeting schemes.
  prefs: []
  type: TYPE_NORMAL
- en: As always, I hope you have enjoyed reading this as much as I enjoyed writing
    it!
  prefs: []
  type: TYPE_NORMAL
- en: Resources
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] V. Chernozhukov, D. Chetverikov, M. Demirer, E. Duflo, C. Hansen, and a.
    W. Newey. Double Machine Learning for Treatment and Causal Parameters. *ArXiv
    e-prints*, July 2016.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Access all the code via this GitHub Repo:* [https://github.com/jakepenzak/Blog-Posts](https://github.com/jakepenzak/Blog-Posts)'
  prefs: []
  type: TYPE_NORMAL
- en: '*I appreciate you reading my post! My posts on Medium seek to explore real-world
    and theoretical applications utilizing* ***econometric*** *and* ***statistical/machine
    learning*** *techniques. Additionally, I seek to provide posts on the theoretical
    underpinnings of various methodologies via theory and simulations. Most importantly,
    I write to learn and help others learn! I hope to make complex topics slightly
    more accessible to all. If you enjoyed this post, please consider* [***following
    me on Medium***](https://medium.com/@jakepenzak)*!*'
  prefs: []
  type: TYPE_NORMAL
