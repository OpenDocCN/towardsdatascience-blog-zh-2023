- en: Single Python package to cover 99% of your Path needs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/single-python-package-to-cover-99-of-your-path-needs-babdaf30a1a0?source=collection_archive---------21-----------------------#2023-01-12](https://towardsdatascience.com/single-python-package-to-cover-99-of-your-path-needs-babdaf30a1a0?source=collection_archive---------21-----------------------#2023-01-12)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Pathlib: the library you have always dreamed of'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@arli94?source=post_page-----babdaf30a1a0--------------------------------)[![Arli](../Images/7027413407fa83ce2f9b3d7e9cb008e8.png)](https://medium.com/@arli94?source=post_page-----babdaf30a1a0--------------------------------)[](https://towardsdatascience.com/?source=post_page-----babdaf30a1a0--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----babdaf30a1a0--------------------------------)
    [Arli](https://medium.com/@arli94?source=post_page-----babdaf30a1a0--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F9b9b5a558522&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsingle-python-package-to-cover-99-of-your-path-needs-babdaf30a1a0&user=Arli&userId=9b9b5a558522&source=post_page-9b9b5a558522----babdaf30a1a0---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----babdaf30a1a0--------------------------------)
    ·5 min read·Jan 12, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fbabdaf30a1a0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsingle-python-package-to-cover-99-of-your-path-needs-babdaf30a1a0&user=Arli&userId=9b9b5a558522&source=-----babdaf30a1a0---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbabdaf30a1a0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsingle-python-package-to-cover-99-of-your-path-needs-babdaf30a1a0&source=-----babdaf30a1a0---------------------bookmark_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: '*If you like to experience Medium yourself, consider supporting me and thousands
    of other writers by* [***signing up for a membership***](https://medium.com/@arli94/membership)*.
    It only costs $5 per month, it supports us, writers, greatly, and you get to access
    all the amazing stories on Medium.*'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3c0a5685f8c3c20cb4214c4c801e2afd.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Alice Donovan Rouse](https://unsplash.com/@alicekat?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Manipulating paths is a fundamental task in any production project. You may
    need to load files from distant servers that conform to a specific pattern, move
    or store different processed files and versions across your pipeline, or simply
    read or write files.
  prefs: []
  type: TYPE_NORMAL
- en: 'For all of these steps, you will encounter the manipulation of paths. Often,
    you will find yourself repeatedly searching the internet for solutions to common
    problems such as:'
  prefs: []
  type: TYPE_NORMAL
- en: '*how do I get all files from a folder?*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*how to check if a folder exists?*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*how to create a folder in Python?*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: While the answers to these questions are easy to find, what you will encounter
    is an inconsistency of code throughout your pipeline. One part of the code may
    use `os.path`, another may use `shutil`, and another may use `glob` ..
  prefs: []
  type: TYPE_NORMAL
- en: In order to avoid this inconsistency, I recommend you using the `pathlib` module,
    which offers a consistent…
  prefs: []
  type: TYPE_NORMAL
