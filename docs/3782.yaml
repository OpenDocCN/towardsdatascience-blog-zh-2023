- en: A Killer Fix for Scrunched Axes, Step-by-step
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解决压缩轴的终极修复，逐步指导
- en: 原文：[https://towardsdatascience.com/unscrunch-your-axes-with-easy-multiscale-data-visualization-in-matplotlib-69a30e96c68f?source=collection_archive---------8-----------------------#2023-12-29](https://towardsdatascience.com/unscrunch-your-axes-with-easy-multiscale-data-visualization-in-matplotlib-69a30e96c68f?source=collection_archive---------8-----------------------#2023-12-29)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/unscrunch-your-axes-with-easy-multiscale-data-visualization-in-matplotlib-69a30e96c68f?source=collection_archive---------8-----------------------#2023-12-29](https://towardsdatascience.com/unscrunch-your-axes-with-easy-multiscale-data-visualization-in-matplotlib-69a30e96c68f?source=collection_archive---------8-----------------------#2023-12-29)
- en: Make beautiful multi-scale plots with matplotlib in 3 easy steps.
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 matplotlib 制作美丽的多尺度图表，只需三步即可完成。
- en: '[](https://medium.com/@mmore500?source=post_page-----69a30e96c68f--------------------------------)[![Matthew
    Andres Moreno](../Images/ca7da9fd9e5c744ee0ebd2aa5d979eb5.png)](https://medium.com/@mmore500?source=post_page-----69a30e96c68f--------------------------------)[](https://towardsdatascience.com/?source=post_page-----69a30e96c68f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----69a30e96c68f--------------------------------)
    [Matthew Andres Moreno](https://medium.com/@mmore500?source=post_page-----69a30e96c68f--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@mmore500?source=post_page-----69a30e96c68f--------------------------------)[![Matthew
    Andres Moreno](../Images/ca7da9fd9e5c744ee0ebd2aa5d979eb5.png)](https://medium.com/@mmore500?source=post_page-----69a30e96c68f--------------------------------)[](https://towardsdatascience.com/?source=post_page-----69a30e96c68f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----69a30e96c68f--------------------------------)
    [Matthew Andres Moreno](https://medium.com/@mmore500?source=post_page-----69a30e96c68f--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff226f1e0484b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funscrunch-your-axes-with-easy-multiscale-data-visualization-in-matplotlib-69a30e96c68f&user=Matthew+Andres+Moreno&userId=f226f1e0484b&source=post_page-f226f1e0484b----69a30e96c68f---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----69a30e96c68f--------------------------------)
    ·8 min read·Dec 29, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F69a30e96c68f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funscrunch-your-axes-with-easy-multiscale-data-visualization-in-matplotlib-69a30e96c68f&user=Matthew+Andres+Moreno&userId=f226f1e0484b&source=-----69a30e96c68f---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[阅读更多](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff226f1e0484b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funscrunch-your-axes-with-easy-multiscale-data-visualization-in-matplotlib-69a30e96c68f&user=Matthew+Andres+Moreno&userId=f226f1e0484b&source=post_page-f226f1e0484b----69a30e96c68f---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----69a30e96c68f--------------------------------)
    ·8分钟阅读·2023年12月29日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F69a30e96c68f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funscrunch-your-axes-with-easy-multiscale-data-visualization-in-matplotlib-69a30e96c68f&user=Matthew+Andres+Moreno&userId=f226f1e0484b&source=-----69a30e96c68f---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F69a30e96c68f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funscrunch-your-axes-with-easy-multiscale-data-visualization-in-matplotlib-69a30e96c68f&source=-----69a30e96c68f---------------------bookmark_footer-----------)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F69a30e96c68f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funscrunch-your-axes-with-easy-multiscale-data-visualization-in-matplotlib-69a30e96c68f&source=-----69a30e96c68f---------------------bookmark_footer-----------)'
- en: Large-magnitude outliers, tiny features, and sharp spikes are common frustrations
    to data visualization. All three can make visual details illegible by scrunching
    plot components into too small an area.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 大幅度的异常值、细微特征和尖锐的尖峰常常让数据可视化变得令人沮丧。这三者都可能通过将图表组件压缩到过小的区域，使视觉细节变得难以辨识。
- en: Sometimes a fix can be had by simply excluding unruly data. When including such
    data is chief to a question at hand, applying a log scale to axes can realign
    spacing for better separation among lower magnitude data. This approach can only
    go so far, however.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，通过简单地排除不受控的数据可以解决问题。当包含这些数据对于当前问题至关重要时，应用对数刻度可以重新调整轴的间距，从而更好地分隔低幅度数据。然而，这种方法也只能起到一定的作用。
- en: 'In this article, we’ll take a look at another option: zoom plots, which augment
    a visualization with panels providing magnified views of areas of interest.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将看看另一种选择：缩放图，它通过面板提供感兴趣区域的放大视图来增强可视化。
- en: '![](../Images/5370b3e871481ed907dae7499479456f.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5370b3e871481ed907dae7499479456f.png)'
- en: The visualizations we’ll be building in this tutorial.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本教程中构建的可视化。
- en: Zoom plots are commonly arranged as inserts into the main plot, but can also
    be combined as a lattice with the original plot. We’ll delve into both.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 缩放图通常作为主图的插图来排列，但也可以与原始图组合成网格。我们将深入探讨这两种方法。
- en: This article provides a code-oriented tutorial on how to use *matplotlib* with
    specialized tools from the *outset* library to construct zoom plots. We’ll build
    a visualization of rainfall data from Texas made available by [Evett et al. via
    the USDA](https://doi.org/10.15482/USDA.ADC/1528713). This data set comprises
    a full year of rain gauge readings from two nearby sites, taken at 15 minute intervals.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本文提供了一个代码导向的教程，讲解如何使用*matplotlib*和*outset*库中的专业工具来构建缩放图。我们将构建一个关于德克萨斯州降雨数据的可视化，该数据由[Evett
    等人通过 USDA 提供](https://doi.org/10.15482/USDA.ADC/1528713)。该数据集包括来自两个相邻地点的一整年雨量读数，间隔为
    15 分钟。
- en: The short duration of rain events and extreme intensity of the heaviest rainfall
    complicates matters. Throwing a month’s worth of Evett et al.’s rainfall data
    into a simple line plot of reveals the visualization problem we’re up against.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 短时间的降雨事件和最强降雨的极端强度使问题复杂化。将一个月的 Evett 等人的降雨数据放入一个简单的折线图中，揭示了我们面临的可视化问题。
- en: '![](../Images/143b9139676aafd9b459dfcbac2eb94c.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/143b9139676aafd9b459dfcbac2eb94c.png)'
- en: We’ve certainly got some work to do to nice this up! In our visualization, we’ll
    focus on recovering three particular components of the data.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有不少工作要做来美化这个图表！在我们的可视化中，我们将重点恢复数据的三个特定组件。
- en: the little shower around day 72,
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第 72 天附近的小雨，
- en: the big rainstorm around day 82, and
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第 82 天附近的大暴雨，以及
- en: light precipitation events over the course of the entire month.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 整个月的轻度降水事件。
- en: To better show these details, we’ll create a zoom panel for each.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地展示这些细节，我们将为每个细节创建一个缩放面板。
- en: Our plan is laid out, so let’s get into the code 👍
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 计划已经制定好，接下来开始编写代码 👍
- en: 'Step 0: Get Data'
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第零步：获取数据
- en: Fetch the rain gauge records via the [Open Science Framework](https://osf.io).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 通过[开放科学框架](https://osf.io)获取雨量记录。
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Here’s a peek at the data.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是数据的预览。
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Before moving on, some minor preparatory chores.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，先做一些小的准备工作。
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In the code above, we’ve created more detailed column names and subset the data
    down to a single month
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的代码中，我们创建了更详细的列名，并将数据子集化为一个月份的数据
- en: 'Step 1: Axes Grid'
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一步：坐标轴网格
- en: Our first plotting step is to initialize an `outset.OutsetG[rid](https://seaborn.pydata.org/generated/seaborn.FacetGrid.html)`
    instance to manage our latice of magnification plots. This class operates analogously
    to [seaborn’s](https://seaborn.pydata.org/generated/seaborn.FacetGrid.html) `[FacetGrid](https://seaborn.pydata.org/generated/seaborn.FacetGrid.html)`,
    which facilitates construction of standard lattice plots by breaking data across
    axes based on a categorical variable.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的第一个绘图步骤是初始化一个`outset.OutsetGrid`实例来管理我们放大图的网格。这个类类似于[seaborn 的](https://seaborn.pydata.org/generated/seaborn.FacetGrid.html)`[FacetGrid](https://seaborn.pydata.org/generated/seaborn.FacetGrid.html)`，它通过基于分类变量将数据分布到坐标轴上，从而方便地构建标准的网格图。
- en: '`OutsetGrid` differs from `FacetGrid`, though, in that in addition to axes
    with faceted data it prepares an initial “source” axes containing all data together.
    Further, `OutsetGrid` includes tools to automatically generate “marquee” annotations
    that show how magnifications correspond to the original plot. The schematic below
    overviews `OutsetGrid`’s plotting model.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`OutsetGrid`与`FacetGrid`不同，它不仅包括具有分面数据的坐标轴，还准备了一个包含所有数据的初始“源”坐标轴。此外，`OutsetGrid`包括工具来自动生成“标记”注释，显示放大图与原始图的对应关系。下面的示意图概述了`OutsetGrid`的绘图模型。'
- en: '![](../Images/56239047a77afcac5bc4370ecafed942.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/56239047a77afcac5bc4370ecafed942.png)'
- en: Getting back to our example, we’ll construct an `OutsetGrid` by providing a
    list of the main plot regions we want to magnify through the `data`kwarg. Subsequent
    kwargs provide styling and layout information.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 回到我们的示例，我们将通过提供我们希望放大的主要绘图区域的列表来构建一个`OutsetGrid`，该列表通过`data`参数传递。随后的参数提供样式和布局信息。
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Here we’ve specified a wider-than-tall aspect ratio for subplots and how many
    columns we want to have.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们为子图指定了宽于高的纵横比，并决定了我们想要的列数。
- en: '![](../Images/a750c4529b72b3719f598328707dbedc.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a750c4529b72b3719f598328707dbedc.png)'
- en: Our axes grid is set up, we’re ready for the next step.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的轴网已经设置好，我们准备好进入下一步。
- en: 'Step 2: Plot Content'
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 2 步：绘图内容
- en: It’s time to put some content on our axes.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候在我们的轴上添加一些内容了。
- en: We can use area plots to co-visualize our rain gauges’ readings. (For those
    unfamiliar, area plots are just line plots with a fill down to the *x* axis.)
    Applying a transparency effect will elegantly show where the gauges agree — and
    where they don’t.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用区域图来共同可视化我们的雨量计读数。（对那些不熟悉的人，区域图就是填充到 *x* 轴的折线图。）应用透明效果将优雅地显示出测量仪一致的地方——以及不一致的地方。
- en: We can harness *matplotlib*’s `stackplot`to draw our overlapped area plots.
    Although designed to create plots with areas “stacked” on top of each other, we
    can get overlapped areas by splitting out two calls to the plotter— one for each
    gauge.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以利用 *matplotlib* 的 `stackplot` 来绘制重叠的区域图。虽然 *stackplot* 设计用于创建“堆叠”在彼此之上的区域图，但我们可以通过对绘图工具进行两次调用来获得重叠区域——每次调用一个测量仪。
- en: To draw this same content across all four axes of the grid, we will use `OutsetGrid`’s
    `broadcast` method. This method takes a plotter function as its first argument
    then calls it on each axis using any subsequent arguments.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在网格的所有四个轴上绘制相同的内容，我们将使用 `OutsetGrid` 的 `broadcast` 方法。该方法将绘图函数作为第一个参数，然后在每个轴上调用它，使用任何后续参数。
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: For better contrast against background fills, we’ll also use `broadcast` to
    add white underlay around the stackplots.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 为了与背景填充获得更好的对比，我们还将使用 `broadcast` 在堆叠图周围添加白色底层。
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Here’s how our plot looks before we move on to the next stage.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们在进入下一阶段之前的图形样貌。
- en: '![](../Images/6607b2bd755e7b9e43f483a51cf61a9a.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6607b2bd755e7b9e43f483a51cf61a9a.png)'
- en: Looking good already — we can already see magnifications showing up on their
    proper axes at this stage.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 已经看起来不错——在此阶段我们可以看到放大显示在正确的轴上。
- en: 'Step 3: Zoom Indicators'
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 3 步：缩放指示器
- en: Now it’s time to add zoom indicator boxes, a.k.a. `outset` “marquees,” to show
    how the scales of our auxiliary plots relate to the scale of the main plot.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候添加缩放指示框，也就是 `outset` 的“标牌”，以显示我们的辅助图的尺度与主图的尺度之间的关系。
- en: '[PRE6]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note the kwarg passed to allow outset plots to take on different aspect ratios
    from the main plot. This way, outset data can fully expanded to take advantage
    of all available axes space.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 注意传递给 `outset` 绘图的 kwarg，以允许插图图形采用与主图不同的纵横比。这样，插图数据可以完全扩展，以利用所有可用的轴空间。
- en: '![](../Images/0391d5d71e232ade77f1bed02bed12dc.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0391d5d71e232ade77f1bed02bed12dc.png)'
- en: We’re most of the way there — just a few finishing touches left at this point.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经完成了大部分工作——此时只剩下几个最后的修整。
- en: Et Voilà!
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 就这样！
- en: Our last business is to add a legend and switch out numeric *x* ticks for proper
    timestamps.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们最后要做的就是添加一个图例，并将数字 *x* 刻度更换为适当的时间戳。
- en: '[PRE7]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: With that, the plot is complete.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，图形就完成了。
- en: '![](../Images/3d66037b0c1430570d042b5fa9bd16d1.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3d66037b0c1430570d042b5fa9bd16d1.png)'
- en: That’s all there is to it, a zoom plot in 3 easy steps.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这么简单，通过 3 个简单步骤完成了缩放图。
- en: 'Bonus: Want Insets Instead?'
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 额外：想要插图而不是缩放？
- en: We can create insets by rearranging the magnification lattice axes into position
    over the main axes. Here’s how, using the *outset* library’s `inset_outsets` tool.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过重新排列放大网格轴的位置来创建插图。以下是使用 *outset* 库的 `inset_outsets` 工具的方法。
- en: '[PRE8]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: In this case, we’ve also used `outset.util.layout_inset_axes` for fine tuned
    control over inset sizing and positioning.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们还使用了 `outset.util.layout_inset_axes` 进行精细调整，以控制插图的大小和位置。
- en: '![](../Images/12894e93a41cc6bcce77d9640afac59e.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/12894e93a41cc6bcce77d9640afac59e.png)'
- en: And just like that, we’ve got three zoom inserts arranged in the upper left
    hand corner.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样，我们在左上角排列了三个缩放插图。
- en: Further Information
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步的信息
- en: There’s a lot more you can do with *outset*.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以用 *outset* 做很多其他事情。
- en: '![](../Images/53f3e996096a873d38afdce8cfcf3737.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/53f3e996096a873d38afdce8cfcf3737.png)'
- en: In addition to explicit zoom area specification, the *outset* library also provides
    a *seaborn*-like data-oriented API to infer zoom inserts containing categorical
    subsets of a dataframe. Extensive styling and layout customization options are
    also available.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 除了明确的缩放区域指定，*outset* 库还提供了类似于 *seaborn* 的数据导向 API，以推断包含数据框架分类子集的缩放插图。还提供了广泛的样式和布局自定义选项。
- en: Here’s a peek at some highlights from the library’s [gallery](https://mmore500.com/outset/gallery.html)…
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这是库[画廊](https://mmore500.com/outset/gallery.html)的一些亮点预览…
- en: '![](../Images/58eb3a43b859691b537fcef1bdcec4b8.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/58eb3a43b859691b537fcef1bdcec4b8.png)'
- en: You can learn more about using *outset* in the library’s documentation at [https://mmore500.com/outset](https://mmore500.com/outset).
    In particular, be sure to check out the [quickstart guide](https://mmore500.com/outset/quickstart.html).
    The project is open source on GitHub at [mmore500/outset](https://github.com/mmore500/outset)
    *— consider leaving a ⭐️!*
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[https://mmore500.com/outset](https://mmore500.com/outset)的库文档中了解有关*outset*的更多信息。特别是，一定要查看[快速入门指南](https://mmore500.com/outset/quickstart.html)。该项目在GitHub上的开源地址是[mmore500/outset](https://github.com/mmore500/outset)，*—
    不妨留下一个⭐️！*
- en: '*outset* can be installed via pip as `python3 -m pip install outset`.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '*outset*可以通过pip安装，命令为`python3 -m pip install outset`。'
- en: Authorship
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 作者
- en: This tutorial is contributed by me, [Matthew Andres Moreno](https://mmore500.com/).
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程由我贡献，[Matthew Andres Moreno](https://mmore500.com/)。
- en: '![](../Images/19f65ec0566492e40378b517ef0dcd91.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/19f65ec0566492e40378b517ef0dcd91.png)'
- en: I currently serve as a postdoctoral scholar at the [University of Michigan](https://umich.edu),
    where my work is supported by the Eric and Wendy Schmidt AI in Science Postdoctoral
    Fellowship, a Schmidt Futures program.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我目前在[密歇根大学](https://umich.edu)担任博士后学者，我的工作得到了Eric和Wendy Schmidt AI in Science博士后奖学金的支持，这是Schmidt
    Futures项目的一部分。
- en: My appointment is split between the university’s Ecology and Evolutionary Biology
    Department, the Center for the Study of Complexity, and the Michigan Institute
    for Data Science.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我的职位在大学的生态与进化生物学系、复杂性研究中心和密歇根数据科学研究所之间分配。
- en: Find me on Twitter as [@MorenoMatthewA](https://twitter.com/morenomatthewa)
    and on GitHub as [@mmore500](https://github.com/mmore500/).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在Twitter上可以找到我[@MorenoMatthewA](https://twitter.com/morenomatthewa)，在GitHub上可以找到我[@mmore500](https://github.com/mmore500/)。
- en: '*disclosure:* I am the author of the `outset` library.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '*声明：* 我是`outset`库的作者。'
- en: Citations
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引用
- en: '*Evett, Steven R.; Marek, Gary W.; Copeland, Karen S.; Howell, Terry A. Sr.;
    Colaizzi, Paul D.; Brauer, David K.; Ruthardt, Brice B. (2023). Evapotranspiration,
    Irrigation, Dew/frost — Water Balance Data for The Bushland, Texas Soybean Datasets.
    Ag Data Commons.* [*https://doi.org/10.15482/USDA.ADC/1528713.*](https://doi.org/10.15482/USDA.ADC/1528713.)
    *Accessed 2023–12–26.*'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '*Evett, Steven R.; Marek, Gary W.; Copeland, Karen S.; Howell, Terry A. Sr.;
    Colaizzi, Paul D.; Brauer, David K.; Ruthardt, Brice B. (2023). 蒸发蒸腾、灌溉、露水/霜 —
    The Bushland, Texas 大豆数据集的水分平衡数据。Ag Data Commons.* [*https://doi.org/10.15482/USDA.ADC/1528713.*](https://doi.org/10.15482/USDA.ADC/1528713.)
    *访问时间 2023–12–26。*'
- en: '*J. D. Hunter, “Matplotlib: A 2D Graphics Environment”, Computing in Science
    & Engineering, vol. 9, no. 3, pp. 90–95, 2007\.* [*https://doi.org/10.1109/MCSE.2007.55*](https://doi.org/10.1109/MCSE.2007.55)'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '*J. D. Hunter，“Matplotlib: A 2D Graphics Environment”，《计算科学与工程》，第9卷，第3期，90–95页，2007年*
    [*https://doi.org/10.1109/MCSE.2007.55*](https://doi.org/10.1109/MCSE.2007.55)'
- en: 'Marek, G. W., Evett, S. R., Colaizzi, P. D., & Brauer, D. K. (2021). Preliminary
    crop coefficients for late planted short-season soybean: Texas High Plains. Agrosystems,
    Geosciences & Environment, 4(2). [https://doi.org/10.1002/agg2.20177](https://doi.org/10.1002/agg2.20177)'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: Marek, G. W., Evett, S. R., Colaizzi, P. D., & Brauer, D. K. (2021). 迟播短季大豆的初步作物系数：德克萨斯州高平原。《农业系统、地球科学与环境》，4(2)。
    [https://doi.org/10.1002/agg2.20177](https://doi.org/10.1002/agg2.20177)
- en: '*Data structures for statistical computing in python, McKinney, Proceedings
    of the 9th Python in Science Conference, Volume 445, 2010\.* [*https://doi.org/*](https://doi.org/)
    *10.25080/Majora-92bf1922–00a*'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '*用于统计计算的Python数据结构，McKinney，《第9届Python科学会议论文集》，第445卷，2010年* [*https://doi.org/*](https://doi.org/)
    *10.25080/Majora-92bf1922–00a*'
- en: '*Matthew Andres Moreno. (2023). mmore500/outset. Zenodo.* [*https://doi.org/10.5281/zenodo.10426106*](https://doi.org/10.5281/zenodo.10426106)'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '*Matthew Andres Moreno. (2023). mmore500/outset. Zenodo.* [*https://doi.org/10.5281/zenodo.10426106*](https://doi.org/10.5281/zenodo.10426106)'
- en: '*Waskom, M. L., (2021). seaborn: statistical data visualization. Journal of
    Open Source Software, 6(60), 3021,* [*https://doi.org/10.21105/joss.03021.*](https://doi.org/10.21105/joss.03021.)'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '*Waskom, M. L.（2021）。seaborn: 统计数据可视化。《开源软件期刊》，6(60)，3021，* [*https://doi.org/10.21105/joss.03021.*](https://doi.org/10.21105/joss.03021.)'
- en: Appendix
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录
- en: You can find the entire code as a gist [here](https://gist.github.com/mmore500/9bdde8fc1a943e72f1659ac795323b06)
    and as a notebook [here](https://github.com/mmore500/outset/blob/d56c3d8f93c613e4f42e4f04aa81f5daaaea1dc1/docs/example-rain.ipynb).
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[这里](https://gist.github.com/mmore500/9bdde8fc1a943e72f1659ac795323b06)找到完整的代码，以及在[这里](https://github.com/mmore500/outset/blob/d56c3d8f93c613e4f42e4f04aa81f5daaaea1dc1/docs/example-rain.ipynb)找到笔记本。
- en: To install dependencies for this exercise,
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '*All images are works of the author.*'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
