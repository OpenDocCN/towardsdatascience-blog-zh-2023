- en: Use LangChain’s Output Parser with ChatGPT for Structured Outputs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/use-langchains-output-parser-with-chatgpt-for-structured-outputs-cf536f692685?source=collection_archive---------0-----------------------#2023-06-06](https://towardsdatascience.com/use-langchains-output-parser-with-chatgpt-for-structured-outputs-cf536f692685?source=collection_archive---------0-----------------------#2023-06-06)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Explained with an example use case.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://sonery.medium.com/?source=post_page-----cf536f692685--------------------------------)[![Soner
    Yıldırım](../Images/c589572e9d1ee176cd4f5a0008173f1b.png)](https://sonery.medium.com/?source=post_page-----cf536f692685--------------------------------)[](https://towardsdatascience.com/?source=post_page-----cf536f692685--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----cf536f692685--------------------------------)
    [Soner Yıldırım](https://sonery.medium.com/?source=post_page-----cf536f692685--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F2cf6b549448&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fuse-langchains-output-parser-with-chatgpt-for-structured-outputs-cf536f692685&user=Soner+Y%C4%B1ld%C4%B1r%C4%B1m&userId=2cf6b549448&source=post_page-2cf6b549448----cf536f692685---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----cf536f692685--------------------------------)
    ·6 min read·Jun 6, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fcf536f692685&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fuse-langchains-output-parser-with-chatgpt-for-structured-outputs-cf536f692685&user=Soner+Y%C4%B1ld%C4%B1r%C4%B1m&userId=2cf6b549448&source=-----cf536f692685---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fcf536f692685&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fuse-langchains-output-parser-with-chatgpt-for-structured-outputs-cf536f692685&source=-----cf536f692685---------------------bookmark_footer-----------)![](../Images/54a0133f94d54e24a9aacf811a4d7d6b.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Dmitry Ratushny](https://unsplash.com/@ratushny?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/wpi3sDUrSEk?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: ChatGPT and many other LLMs have led the way for creating LLM-based applications
    in different domains. These models are extremely powerful at processing text inputs
    and creating text outputs based on your queries. However, they’re not designed
    as a development framework.
  prefs: []
  type: TYPE_NORMAL
- en: LangChain is an open-source development framework for applications that use
    large language models (LLMs). It provides abstractions in the form of components
    to use LLMs in a more efficient or programmatic way.
  prefs: []
  type: TYPE_NORMAL
- en: 'These components are:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Models: ChatGPT or other LLMs'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Prompts: Prompt templates and output parsers'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Indexes: Ingests external data such as document loaders and vector stores'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Chains: Combines components to create end-to-end use cases. An example of a
    simple chain can be Prompt + LLM + Output Parser'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Agents: Makes LLMs use external tools'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The main idea behind LangChain is to chain multiple components together to extend
    the abilities of LLM and create more functional tools, or applications.
  prefs: []
  type: TYPE_NORMAL
