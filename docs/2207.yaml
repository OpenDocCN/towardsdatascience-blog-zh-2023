- en: An Introduction to OpenAI Function Calling
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: åŽŸæ–‡ï¼š[https://towardsdatascience.com/an-introduction-to-openai-function-calling-e47e7cd7680e?source=collection_archive---------1-----------------------#2023-07-09](https://towardsdatascience.com/an-introduction-to-openai-function-calling-e47e7cd7680e?source=collection_archive---------1-----------------------#2023-07-09)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: No more unstructured data outputs; turn ChatGPTâ€™s completions into structured
    JSON!
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://dkhundley.medium.com/?source=post_page-----e47e7cd7680e--------------------------------)[![David
    Hundley](../Images/1779ef96ec3d338f8fe4a9567ba7b194.png)](https://dkhundley.medium.com/?source=post_page-----e47e7cd7680e--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e47e7cd7680e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e47e7cd7680e--------------------------------)
    [David Hundley](https://dkhundley.medium.com/?source=post_page-----e47e7cd7680e--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: Â·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F82498630db6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fan-introduction-to-openai-function-calling-e47e7cd7680e&user=David+Hundley&userId=82498630db6&source=post_page-82498630db6----e47e7cd7680e---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e47e7cd7680e--------------------------------)
    Â·16 min readÂ·Jul 9, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe47e7cd7680e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fan-introduction-to-openai-function-calling-e47e7cd7680e&user=David+Hundley&userId=82498630db6&source=-----e47e7cd7680e---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe47e7cd7680e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fan-introduction-to-openai-function-calling-e47e7cd7680e&source=-----e47e7cd7680e---------------------bookmark_footer-----------)![](../Images/14ae6814c08319c738cd14cdd99e5771.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Title card created by the author
  prefs: []
  type: TYPE_NORMAL
- en: 'A few months ago, OpenAI released their API to the general public, which excited
    many developers who wanted to make use of ChatGPTâ€™s outputs in a systematic way.
    As exciting has this has been, itâ€™s equally been a bit of a nightmare since we
    programmers tend to work in the realm of **structured data types**. We like integers,
    booleans, and lists. The unstructured string can be unwieldy to deal with, and
    in order to get consistent results, a programmer is required to face their worst
    nightmare: developing a regular expression (Regex) for proper parsing. ðŸ¤¢'
  prefs: []
  type: TYPE_NORMAL
- en: 'Of course, prompt engineering can actually help quite a bit here, but itâ€™s
    still not perfect. For example, if you want to have ChatGPT analyze the sentiment
    of a movie review for positivity or negativity, you might structure a prompt that
    looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: This prompt honestly does pretty decently, but the results arenâ€™t precisely
    consistent. For example, I have seen ChatGPT produce outputs that look like the
    following in terms ofâ€¦
  prefs: []
  type: TYPE_NORMAL
