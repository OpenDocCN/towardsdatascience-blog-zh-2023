- en: How to bring custom ML Models into OpenMetadata
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何将自定义 ML 模型引入 OpenMetadata
- en: 原文：[https://towardsdatascience.com/how-to-bring-custom-ml-models-into-openmetadata-969311a16d91?source=collection_archive---------10-----------------------#2023-01-09](https://towardsdatascience.com/how-to-bring-custom-ml-models-into-openmetadata-969311a16d91?source=collection_archive---------10-----------------------#2023-01-09)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-bring-custom-ml-models-into-openmetadata-969311a16d91?source=collection_archive---------10-----------------------#2023-01-09](https://towardsdatascience.com/how-to-bring-custom-ml-models-into-openmetadata-969311a16d91?source=collection_archive---------10-----------------------#2023-01-09)
- en: Build custom CICD pipelines to put your ML assets on the map
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建自定义 CICD 管道，以便将您的 ML 资产展现出来
- en: '[](https://blog.metadata.coffee/?source=post_page-----969311a16d91--------------------------------)[![Pere
    Miquel Brull](../Images/2641b6f44310747aa3150fb720d8ff3f.png)](https://blog.metadata.coffee/?source=post_page-----969311a16d91--------------------------------)[](https://towardsdatascience.com/?source=post_page-----969311a16d91--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----969311a16d91--------------------------------)
    [Pere Miquel Brull](https://blog.metadata.coffee/?source=post_page-----969311a16d91--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://blog.metadata.coffee/?source=post_page-----969311a16d91--------------------------------)[![Pere
    Miquel Brull](../Images/2641b6f44310747aa3150fb720d8ff3f.png)](https://blog.metadata.coffee/?source=post_page-----969311a16d91--------------------------------)[](https://towardsdatascience.com/?source=post_page-----969311a16d91--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----969311a16d91--------------------------------)
    [Pere Miquel Brull](https://blog.metadata.coffee/?source=post_page-----969311a16d91--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5d3218cd196e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-bring-custom-ml-models-into-openmetadata-969311a16d91&user=Pere+Miquel+Brull&userId=5d3218cd196e&source=post_page-5d3218cd196e----969311a16d91---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----969311a16d91--------------------------------)
    ·5 min read·Jan 9, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F969311a16d91&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-bring-custom-ml-models-into-openmetadata-969311a16d91&user=Pere+Miquel+Brull&userId=5d3218cd196e&source=-----969311a16d91---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5d3218cd196e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-bring-custom-ml-models-into-openmetadata-969311a16d91&user=Pere+Miquel+Brull&userId=5d3218cd196e&source=post_page-5d3218cd196e----969311a16d91---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----969311a16d91--------------------------------)
    ·5 min read·2023年1月9日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F969311a16d91&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-bring-custom-ml-models-into-openmetadata-969311a16d91&user=Pere+Miquel+Brull&userId=5d3218cd196e&source=-----969311a16d91---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F969311a16d91&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-bring-custom-ml-models-into-openmetadata-969311a16d91&source=-----969311a16d91---------------------bookmark_footer-----------)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F969311a16d91&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-bring-custom-ml-models-into-openmetadata-969311a16d91&source=-----969311a16d91---------------------bookmark_footer-----------)'
- en: '[OpenMetadata](https://open-metadata.org/) is more than a data catalog. Built
    on standard definitions and APIs, the catalog is just one of many applications
    exploiting the **metadata** of your platform. Since the beginning, the goal of
    OpenMetadata has been to solve the metadata problem in the industry. Not having
    to figure out essential components such as metadata ingestion or how to bring
    back **collaboration** into data, teams can focus on improving their processes
    and automations.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[OpenMetadata](https://open-metadata.org/) 不仅仅是一个数据目录。基于标准定义和 API，这个目录只是众多利用您平台的**元数据**的应用程序之一。从一开始，OpenMetadata
    的目标就是解决行业中的元数据问题。团队无需解决诸如元数据摄取或如何将**协作**带回数据中的关键组件，可以专注于改进他们的流程和自动化。'
- en: This post aims to showcase how we can integrate multiple metadata sources, both
    from existing services and **in-house solutions**. With every action being powered
    by APIs, there is no difference between metadata coming from featured connectors
    such as Postgres or being sent via the **Python SDK**. This high degree of flexibility
    allows us to explore the metadata from custom-built ML Models and the tables feeding
    their features.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本文旨在展示我们如何集成多个元数据源，无论是来自现有服务还是**内部解决方案**。由于每个操作都是通过API驱动的，来自Postgres等特定连接器的元数据与通过**Python
    SDK**发送的元数据没有区别。这种高灵活性使我们能够探索来自自定义构建的机器学习模型及其特征源的元数据。
- en: '![](../Images/45ff0ea15bc22feba2315fb7d8d374e3.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/45ff0ea15bc22feba2315fb7d8d374e3.png)'
- en: Postgres and Custom ML Model ingestion schema. Image by the author.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Postgres和自定义机器学习模型摄取模式。图片来源于作者。
- en: If this sounds interesting, follow the steps with the material in this [repository](https://github.com/open-metadata/openmetadata-demo/tree/main/mlmodel-cicd).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这听起来有趣，请按照这个[仓库](https://github.com/open-metadata/openmetadata-demo/tree/main/mlmodel-cicd)中的材料进行操作。
- en: OpenMetadata and ML
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenMetadata与机器学习
- en: One of the main **challenges** of ML models’ lifecycle is closing the gap between
    the ML model and the Data Platform. We have tools that help us train, test, tune
    and deploy ML, but those tools rarely put ML Models in the context of the platform
    they live in.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习模型生命周期的主要**挑战**之一是弥合机器学习模型与数据平台之间的差距。我们有助于训练、测试、调整和部署机器学习的工具，但这些工具很少将机器学习模型放在其存在的平台的背景下。
- en: 'How all the pieces fit together is information that is usually held by Data
    Scientists or ML Engineers but hardly ever shared. Typical causes are:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如何将所有部分整合在一起的信息通常由数据科学家或机器学习工程师掌握，但很少共享。典型原因有：
- en: '**No generic approach** to how to define and maintain the metadata.'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**没有通用的方法**来定义和维护元数据。'
- en: '**No central place** to publish the results for users to explore.'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**没有中央位置**来发布结果供用户探索。'
- en: This lack of clarity and the work involved in the previous two tasks makes it
    hard to justify the **benefits** and measure the **impact**.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这种缺乏明确性以及前两个任务所涉及的工作使得很难证明**好处**并衡量**影响**。
- en: 'In this demo, we’ll follow a use case where:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在本演示中，我们将跟随一个用例，其中：
- en: We have an ML model using features from Postgres,
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们有一个使用Postgres特征的机器学习模型，
- en: The model is regularly updated and deployed,
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 模型会定期更新和部署，
- en: The documentation of the model is hosted as code,
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 模型的文档作为代码托管，
- en: We’ll use OpenMetadata’s Python SDK to create the ML Model assets and push them
    to OpenMetadata.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将使用OpenMetadata的Python SDK创建机器学习模型资产并将其推送到OpenMetadata中。
- en: 'Getting our models in OpenMetadata helps us share the documentation, keep track
    of metadata changes and versioning, discover lineage with the sources, drive discussions
    and collaboration… A few quick wins from bringing this holistic view on ML and
    AI assets are:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 将我们的模型纳入OpenMetadata可以帮助我们分享文档，跟踪元数据的变化和版本控制，发现源的血缘关系，推动讨论和合作……从将这种整体视角引入机器学习和人工智能资产中获得的一些快速成果包括：
- en: Teams can quickly start to **collaborate** instead of trying to reach similar
    outcomes in different ways,
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 团队可以快速开始**协作**，而不是尝试以不同的方式达到类似的结果，
- en: Knowledge gathering of the most used features to start building a **Feature
    Store** with the highest possible value for the whole organization.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收集最常用特征的知识，以开始构建具有最高价值的**特征存储**，服务于整个组织。
- en: ML teams can start building **Data Quality tests and alerts** directly in OpenMetadata
    to prevent feature drifts and performance decreases.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器学习团队可以直接在OpenMetadata中开始构建**数据质量测试和警报**，以防止特征漂移和性能下降。
- en: Ingesting Postgres metadata
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摄取Postgres元数据
- en: The first step will be ingesting Postgres metadata, as there, we have the sources
    for the ML features. You can follow these [steps](https://docs.open-metadata.org/connectors/database/postgres)
    to configure and deploy the Postgres metadata ingestion.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步将是获取Postgres元数据，因为我们在这里有机器学习特征的来源。你可以按照这些[步骤](https://docs.open-metadata.org/connectors/database/postgres)配置和部署Postgres元数据摄取。
- en: '![](../Images/6bd02ac8c663e3676c6a36e1d986362b.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6bd02ac8c663e3676c6a36e1d986362b.png)'
- en: Creating the Postgres service in OpenMetadata. Image by the author.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在OpenMetadata中创建Postgres服务。图片来源于作者。
- en: 'The OpenMetadata UI will guide us through the two main steps:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: OpenMetadata用户界面将引导我们完成两个主要步骤：
- en: 'Creating the **Database Service**: A service represents the source system we
    want to ingest. Here is where we will define the connection to Postgres, and this
    service will hold the assets that will be sent to OpenMetadata: databases, schemas,
    and tables.'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建**数据库服务**：服务表示我们要摄取的源系统。在这里我们将定义与Postgres的连接，这个服务将持有将发送到OpenMetadata的资产：数据库、模式和表。
- en: 'Creating and deploying the **Ingestion Pipelines**: which are internally handled
    by OpenMetadata using the [Ingestion Framework](https://pypi.org/project/openmetadata-ingestion/),
    a Python library holding the logic to connect to multiple sources, translate their
    original metadata into the OpenMetadata standard, and send it to the server using
    the [APIs](https://docs.open-metadata.org/swagger.html).'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建和部署**数据摄取管道**：这些管道由OpenMetadata使用[摄取框架](https://pypi.org/project/openmetadata-ingestion/)内部处理，该Python库包含连接到多个源、将其原始元数据转换为OpenMetadata标准并通过[API](https://docs.open-metadata.org/swagger.html)发送到服务器的逻辑。
- en: '![](../Images/2cad6199c7f4f7cae309642254fd4e06.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2cad6199c7f4f7cae309642254fd4e06.png)'
- en: Managing the ingestion pipeline in OpenMetadata. Image by the author.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在OpenMetadata中管理数据摄取管道。图像由作者提供。
- en: What’s interesting here is that the Ingestion Framework package can be directly
    used to configure and host the ingestion processes. Moreover, any operation in
    the UI or in the Ingestion Framework is entirely open and supported by the server
    APIs. This means full automation possibilities for any metadata-related activity,
    which can be achieved directly via REST or the [OpenMetadata SDKs](https://docs.open-metadata.org/sdk).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，摄取框架包可以直接用于配置和托管摄取流程。此外，UI或摄取框架中的任何操作完全开放，并得到服务器API的支持。这意味着任何与元数据相关的活动都可以实现全面自动化，这可以通过REST或[OpenMetadata
    SDKs](https://docs.open-metadata.org/sdk)直接实现。
- en: These are the capabilities we will exploit next when creating the CICD process.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是我们接下来在创建CICD流程时将利用的功能。
- en: Building a CICD pipeline
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建CICD管道
- en: 'In the discussion above, we highlighted two pains that usually become blockers
    to maintaining updated ML models’ metadata: No generic metadata definition and
    no single place to publish it. Thankfully, OpenMetadata takes care of both of
    these aspects.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述讨论中，我们强调了通常成为维护更新的机器学习模型元数据阻碍的两个问题：没有通用的元数据定义和没有一个地方来发布它。幸运的是，OpenMetadata解决了这两个问题。
- en: The missing piece for building a successful process? It should be **simple**
    to maintain and evolve. That’s why we base our example on a [YAML file](https://github.com/open-metadata/openmetadata-demo/blob/main/mlmodel-cicd/ml_model.yaml)
    checked out in the code repository. Therefore, Data Scientists and ML Engineers
    can rely on their deployment pipelines to update as well the metadata of their
    fresh production model.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 构建成功流程的缺失环节？它应该是**简单**维护和演变的。这就是为什么我们将示例基于一个[YAML 文件](https://github.com/open-metadata/openmetadata-demo/blob/main/mlmodel-cicd/ml_model.yaml)，该文件在代码库中检查出来。因此，数据科学家和机器学习工程师可以依靠他们的部署管道来更新其最新生产模型的元数据。
- en: '![](../Images/66394af9fb03e282e9097154839540fa.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/66394af9fb03e282e9097154839540fa.png)'
- en: Example YAML file with the ML model metadata. Image by the author.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 包含机器学习模型元数据的示例YAML文件。图像由作者提供。
- en: 'The CICD process will then have a specific step that will:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: CICD流程将有一个特定步骤：
- en: Read the YAML file with the metadata,
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 阅读包含元数据的YAML文件，
- en: Translate the structure of the YAML to the [ML Model](https://docs.open-metadata.org/main-concepts/metadata-standard/schemas/entity/data/mlmodel)
    Entity definition from the OpenMetadata standard,
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将YAML的结构转换为[ML模型](https://docs.open-metadata.org/main-concepts/metadata-standard/schemas/entity/data/mlmodel)实体定义，以符合OpenMetadata标准，
- en: Push the ML Model asset into OpenMetadata using the Python SDK.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Python SDK将机器学习模型资产推送到OpenMetadata。
- en: '[Here](https://github.com/open-metadata/openmetadata-demo/blob/main/mlmodel-cicd/mlmodel_cicd.py)
    you will find an example of such a pipeline. Hopefully, that will help you start
    putting your ML assets on the map!'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[这里](https://github.com/open-metadata/openmetadata-demo/blob/main/mlmodel-cicd/mlmodel_cicd.py)你会找到这样的管道示例。希望这能帮助你开始将你的机器学习资产纳入视野！'
- en: '![](../Images/86bbd7a379354568c95892e335d83fc7.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/86bbd7a379354568c95892e335d83fc7.png)'
- en: Example CICD pipelines. GIF by the author.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 示例CICD管道。GIF由作者提供。
- en: 'After the script has finished running, we’ll see our Revenue Predictions model
    in OpenMetadata as:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本运行完成后，我们将在OpenMetadata中看到我们的收入预测模型：
- en: '![](../Images/769179cb8842d8f0b811ddd353399505.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/769179cb8842d8f0b811ddd353399505.png)'
- en: Revenue Predictions model in OpenMetadata. Image by the author.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: OpenMetadata中的收入预测模型。图像由作者提供。
- en: One key benefit of having the metadata available in the platform is being able
    to see the lineage information between our models and the sources containing the
    features. In our example, we already ingested the Postgres metadata. Then, if
    we check the Lineage tab, we’ll be able to see all of our models’ dependencies.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在平台上可用的一个关键好处是能够查看我们模型与包含特征的数据源之间的血统信息。在我们的示例中，我们已经获取了Postgres元数据。然后，如果我们查看血统标签页，我们将能够看到我们所有模型的依赖关系。
- en: '![](../Images/fb56bb06bf9d02cb3e9bfcab601a0982.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fb56bb06bf9d02cb3e9bfcab601a0982.png)'
- en: Revenue Predictions lineage with Postgres tables. Image by the author.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 收入预测的血统与Postgres表格。作者提供的图片。
- en: Summary
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'In this post, we have:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们：
- en: Discussed the industry needs for a common approach to define, ingest and exploit
    metadata and how OpenMetadata covers those.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 讨论了行业对定义、获取和利用元数据的共同方法的需求，以及OpenMetadata如何满足这些需求。
- en: Ingested Postgres metadata directly from the ≈ UI.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从≈ UI直接获取了Postgres元数据。
- en: Built a CICD process that pushes custom-built ML Models metadata during the
    release process.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建了一个CICD过程，在发布过程中推送自定义构建的ML模型元数据。
- en: Putting ML Models into the [context](https://medium.com/openmetadata/ml-is-not-just-about-ml-c08eab242e84)
    of the Data Platform has essential benefits, such as exploring dependencies and
    fueling collaboration. If you need a simple approach to putting your ML assets
    on the map, OpenMetadata has you covered.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 将ML模型置于[上下文](https://medium.com/openmetadata/ml-is-not-just-about-ml-c08eab242e84)中具有重要的好处，比如探索依赖关系和促进协作。如果你需要一种简单的方法来展示你的ML资产，OpenMetadata可以满足你的需求。
