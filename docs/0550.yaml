- en: ML Engineering with DynamoDB
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/ml-engineering-with-dynamodb-398ff2e6394e?source=collection_archive---------13-----------------------#2023-02-07](https://towardsdatascience.com/ml-engineering-with-dynamodb-398ff2e6394e?source=collection_archive---------13-----------------------#2023-02-07)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: How to leverage this powerhouse NoSQL database for online inference
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@achad?source=post_page-----398ff2e6394e--------------------------------)[![Avi
    Chad-Friedman](../Images/d703a18c3cce123cbeeac789dc597598.png)](https://medium.com/@achad?source=post_page-----398ff2e6394e--------------------------------)[](https://towardsdatascience.com/?source=post_page-----398ff2e6394e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----398ff2e6394e--------------------------------)
    [Avi Chad-Friedman](https://medium.com/@achad?source=post_page-----398ff2e6394e--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F22da9d6fd08a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fml-engineering-with-dynamodb-398ff2e6394e&user=Avi+Chad-Friedman&userId=22da9d6fd08a&source=post_page-22da9d6fd08a----398ff2e6394e---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----398ff2e6394e--------------------------------)
    ·5 min read·Feb 7, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F398ff2e6394e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fml-engineering-with-dynamodb-398ff2e6394e&user=Avi+Chad-Friedman&userId=22da9d6fd08a&source=-----398ff2e6394e---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F398ff2e6394e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fml-engineering-with-dynamodb-398ff2e6394e&source=-----398ff2e6394e---------------------bookmark_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: Why consider DynamoDB?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When working with offline, batch ML systems, SQL-based workflows against a data
    warehouse like Snowflake constitute the backbone of business analytics, [descriptive
    statistics](/anomaly-detection-in-sql-2bcd8648f7a8), and predictive modeling.
    This is an ideal state, where complex transformations can be pushed to distributed
    database engines and features are defined in the same language where they’re marshaled
    for inference.
  prefs: []
  type: TYPE_NORMAL
- en: Avoid leaving this eden, unless you’re pushed out by the (real) requirement
    for real-time inference against real-time features. If you find yourself in this
    new, messy world, especially where relevant features change at high-volumes and
    you need low-latency reads and writes, you might need NoSQL.
  prefs: []
  type: TYPE_NORMAL
- en: AWS DynamoDB is an [extremely scalable](https://www.allthingsdistributed.com/files/amazon-dynamo-sosp2007.pdf),
    managed NoSQL database. Like other NoSQL databases, it trades consistency for
    availability, making it an ideal data store on top of which to build a low-latency
    ML predictor. The goal of this post is to demonstrate some design patterns with
    which you can build production workflows flexible enough to handle common ML access
    patterns.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/509e98e06ba6dc121d8d2fc4b316fb54.png)'
  prefs: []
  type: TYPE_IMG
- en: Imagine generated by author on [https://imgflip.com/](https://imgflip.com/)
  prefs: []
  type: TYPE_NORMAL
- en: '**Primer on indexes in DynamoDB**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
