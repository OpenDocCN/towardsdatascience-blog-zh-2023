- en: Building a Question Answering PDF Chatbot
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建一个问答PDF聊天机器人
- en: 原文：[https://towardsdatascience.com/building-a-question-answering-pdf-chatbot-3e3b6372528c?source=collection_archive---------0-----------------------#2023-04-09](https://towardsdatascience.com/building-a-question-answering-pdf-chatbot-3e3b6372528c?source=collection_archive---------0-----------------------#2023-04-09)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/building-a-question-answering-pdf-chatbot-3e3b6372528c?source=collection_archive---------0-----------------------#2023-04-09](https://towardsdatascience.com/building-a-question-answering-pdf-chatbot-3e3b6372528c?source=collection_archive---------0-----------------------#2023-04-09)
- en: LangChain + OpenAI + Panel + HuggingFace
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: LangChain + OpenAI + Panel + HuggingFace
- en: '[](https://sophiamyang.medium.com/?source=post_page-----3e3b6372528c--------------------------------)[![Sophia
    Yang, Ph.D.](../Images/c133f918245ea4857dc46df3a07fc2b1.png)](https://sophiamyang.medium.com/?source=post_page-----3e3b6372528c--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3e3b6372528c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3e3b6372528c--------------------------------)
    [Sophia Yang, Ph.D.](https://sophiamyang.medium.com/?source=post_page-----3e3b6372528c--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://sophiamyang.medium.com/?source=post_page-----3e3b6372528c--------------------------------)[![Sophia
    Yang, Ph.D.](../Images/c133f918245ea4857dc46df3a07fc2b1.png)](https://sophiamyang.medium.com/?source=post_page-----3e3b6372528c--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3e3b6372528c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3e3b6372528c--------------------------------)
    [Sophia Yang, Ph.D.](https://sophiamyang.medium.com/?source=post_page-----3e3b6372528c--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fae9cae9cbcd2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-question-answering-pdf-chatbot-3e3b6372528c&user=Sophia+Yang%2C+Ph.D.&userId=ae9cae9cbcd2&source=post_page-ae9cae9cbcd2----3e3b6372528c---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----3e3b6372528c--------------------------------)
    ·6 min read·Apr 9, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F3e3b6372528c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-question-answering-pdf-chatbot-3e3b6372528c&user=Sophia+Yang%2C+Ph.D.&userId=ae9cae9cbcd2&source=-----3e3b6372528c---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fae9cae9cbcd2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-question-answering-pdf-chatbot-3e3b6372528c&user=Sophia+Yang%2C+Ph.D.&userId=ae9cae9cbcd2&source=post_page-ae9cae9cbcd2----3e3b6372528c---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----3e3b6372528c--------------------------------)
    ·6分钟阅读·2023年4月9日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F3e3b6372528c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-question-answering-pdf-chatbot-3e3b6372528c&user=Sophia+Yang%2C+Ph.D.&userId=ae9cae9cbcd2&source=-----3e3b6372528c---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3e3b6372528c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-question-answering-pdf-chatbot-3e3b6372528c&source=-----3e3b6372528c---------------------bookmark_footer-----------)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3e3b6372528c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-question-answering-pdf-chatbot-3e3b6372528c&source=-----3e3b6372528c---------------------bookmark_footer-----------)'
- en: 'Let’s build a chatbot to answer questions about external PDF files. With 5
    simple steps, you should be able to build a question-answering PDF chatbot like
    this:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来构建一个用于回答外部PDF文件问题的聊天机器人。通过5个简单的步骤，你应该能够构建一个像这样的问答PDF聊天机器人：
- en: '![](../Images/04e327db177f82e78b649034568bb913.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/04e327db177f82e78b649034568bb913.png)'
- en: '😊 Want to try out this app? I hosted this app on Hugging Face: [https://sophiamyang-panel-pdf-qa.hf.space/LangChain_QA_Panel_App](https://sophiamyang-panel-pdf-qa.hf.space/LangChain_QA_Panel_App)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 😊 想试用这个应用吗？我已经在Hugging Face上托管了这个应用：[https://sophiamyang-panel-pdf-qa.hf.space/LangChain_QA_Panel_App](https://sophiamyang-panel-pdf-qa.hf.space/LangChain_QA_Panel_App)
- en: '[💻](https://emojipedia.org/laptop/) You can find all my code here:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[💻](https://emojipedia.org/laptop/) 你可以在这里找到我所有的代码：'
- en: '[https://huggingface.co/spaces/sophiamyang/Panel_PDF_QA/tree/main](https://huggingface.co/spaces/sophiamyang/Panel_PDF_QA/tree/main)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://huggingface.co/spaces/sophiamyang/Panel_PDF_QA/tree/main](https://huggingface.co/spaces/sophiamyang/Panel_PDF_QA/tree/main)'
- en: '📒 You can find my Notebook file here:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 📒 你可以在这里找到我的笔记本文件：
- en: '[https://huggingface.co/spaces/sophiamyang/Panel_PDF_QA/blob/main/LangChain_QA_Panel_App.ipynb](https://huggingface.co/spaces/sophiamyang/Panel_PDF_QA/blob/main/LangChain_QA_Panel_App.ipynb)'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://huggingface.co/spaces/sophiamyang/Panel_PDF_QA/blob/main/LangChain_QA_Panel_App.ipynb](https://huggingface.co/spaces/sophiamyang/Panel_PDF_QA/blob/main/LangChain_QA_Panel_App.ipynb)'
- en: Okay, let’s get started building this question-answering PDF chatbot!
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，开始构建这个问答 PDF 聊天机器人吧！
- en: 'Step 0: Set up'
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一步：设置
- en: Install needed packages
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装所需的包
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Import needed packages
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入所需的包
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Define OpenAI API key: Create an account at OpenAI and create an API key [https://platform.openai.com/account](https://platform.openai.com/account).
    Note that OpenAI API is not free. You will need to set up billing information
    there to be able to use OpenAI API. Alternatively, you can use models from HuggingFace
    Hub or other places. Check out my previous [blog post](/the-easiest-way-to-interact-with-language-models-4da158cfb5c5?sk=271c9c82a16282f93ef3df37f034babe)
    and [video](https://www.youtube.com/watch?v=kmbS6FDQh7c) on how to use other models.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义 OpenAI API 密钥：在 OpenAI 创建一个账户并生成 API 密钥 [https://platform.openai.com/account](https://platform.openai.com/account)。请注意，OpenAI
    API 不是免费的。你需要在这里设置账单信息才能使用 OpenAI API。或者，你可以使用 HuggingFace Hub 或其他地方的模型。查看我之前的
    [博客文章](/the-easiest-way-to-interact-with-language-models-4da158cfb5c5?sk=271c9c82a16282f93ef3df37f034babe)
    和 [视频](https://www.youtube.com/watch?v=kmbS6FDQh7c) 了解如何使用其他模型。
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Step 1:Define Panel widgets
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一步：定义 Panel 小部件
- en: 'To make this app, we will need the following widgets:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 为了制作这个应用程序，我们将需要以下小部件：
- en: '`file_input` to upload files'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`file_input` 用于上传文件'
- en: '`openaikey` to enter your OpenAI key'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`openaikey` 输入你的 OpenAI 密钥'
- en: '`widgets` combines all the other widgets: `prompt` for entering your questions
    as text, `run_button` for clicking and running the model, `select_k` for selecting
    the number of relevant chunks, and `select_chain_type` for selecting which chain
    type to use.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`widgets` 结合了所有其他小部件：`prompt` 用于输入问题文本，`run_button` 用于点击并运行模型，`select_k` 用于选择相关块的数量，以及
    `select_chain_type` 用于选择使用的链类型。'
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/13977854847cc63fd72ad272b5161716.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/13977854847cc63fd72ad272b5161716.png)'
- en: Step 2:Define question-answering function
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二步：定义问答函数
- en: We will be using LangChain with OpanAI to do question-answering. There are at
    least four ways to do question-answering in LangChain. Check out my previous blog
    post and video on 4 ways of question-answering in LangChain.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 LangChain 和 OpenAI 进行问答。在 LangChain 中至少有四种方式进行问答。查看我之前的博客文章和视频，了解 LangChain
    中的四种问答方式。
- en: 'In this function, we used RetrievalQA to retrieve relevant text chunks and
    then only pass those to the language model. We defined four parameters: —'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个函数中，我们使用了 RetrievalQA 来检索相关的文本块，然后仅将这些文本块传递给语言模型。我们定义了四个参数：—
- en: '`file` is the input PDF file that you are interested in interacting with'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`file` 是你感兴趣的输入 PDF 文件'
- en: '`query` is your question'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`query` 是你的问题'
- en: '`chain_type` lets you define the chain type as one of the four options: “stuff”,
    “map reduce”, “refine”, “map_rerank”. Check out my previous blog post to learn
    each chain type.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`chain_type` 让你将链类型定义为四种选项之一：“stuff”、“map reduce”、“refine”、“map_rerank”。查看我之前的博客文章以了解每种链类型。'
- en: '`k` defines the number of relevant text chunks'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`k` 定义了相关文本块的数量'
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Here is an example using this function:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个使用此函数的示例：
- en: '![](../Images/7e81186b8414586a4162c4160fc25212.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7e81186b8414586a4162c4160fc25212.png)'
- en: 'Step 3: show output as a Panel object'
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三步：将输出显示为 Panel 对象
- en: The function above returns the query, result, and source documents from the
    language model. In order to show the results and source documents in a Panel app,
    we need to turn them into a Panel object. In the function `qa_result`, I appended
    the query (`prompt_text`), result ( `result[“result”]`), and source documents
    (`result["source_documents"]`) in a list called `convos` and then turned it into
    a Panel object `pn.Column(*convos)`.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 上述函数返回语言模型的查询、结果和源文档。为了在 Panel 应用中显示结果和源文档，我们需要将它们转换为 Panel 对象。在 `qa_result`
    函数中，我将查询（`prompt_text`）、结果（`result[“result”]`）和源文档（`result["source_documents"]`）追加到一个名为
    `convos` 的列表中，然后将其转换为 Panel 对象 `pn.Column(*convos)`。
- en: '[PRE5]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Step 4:The run button runs the function
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四步：运行按钮执行函数
- en: Next, I’d like to make the `qa_result` function interactive, meaning that when
    I click the run button, I’d like to run this function. This is very easy to do
    in Panel. We use `pn.bind` to bind the `qa_result` function with the `run_button`
    widget. Note that in the `qa_result` function, we passed in a parameter `_` ,
    which is actually not used in the function. This is simply a placeholder to let
    `pn.bind` know that we can bind one widget to this function.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我想让 `qa_result` 函数具有交互性，也就是说，当我点击运行按钮时，我希望运行这个函数。这在 Panel 中非常简单。我们使用 `pn.bind`
    将 `qa_result` 函数绑定到 `run_button` 小部件。请注意，在 `qa_result` 函数中，我们传入了一个参数 `_`，实际上在函数中并未使用。这只是一个占位符，让
    `pn.bind` 知道我们可以将一个小部件绑定到这个函数上。
- en: '[PRE6]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'I then want to format my output in a box, so I used `pn.WidgetBox`:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我想将输出格式化到一个框中，因此我使用了 `pn.WidgetBox`：
- en: '[PRE7]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../Images/281ed418e8c7bb749853ea3c8785e738.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/281ed418e8c7bb749853ea3c8785e738.png)'
- en: 'Step 5: Define Layout'
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 5 步：定义布局
- en: Now we can combine all the widgets and output in a column using `pn.Column`.
    You can run `panel serve LangChain_QA_Panel_App.ipynb` to serve this app. Now
    you should have a ready-to-run app!
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以使用 `pn.Column` 将所有小部件和输出组合成一列。你可以运行 `panel serve LangChain_QA_Panel_App.ipynb`
    来服务这个应用程序。现在你应该有一个可以运行的应用程序！
- en: '[PRE8]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Final Step: Host on Hugging Face Space'
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最终步骤：托管到 Hugging Face Space
- en: 'As you can see from the beginning of my video, I hosted my app on Hugging Face:
    [https://sophiamyang-panel-pdf-qa.hf.space/LangChain_QA_Panel_App](https://sophiamyang-panel-pdf-qa.hf.space/LangChain_QA_Panel_App)'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，在我的视频开始时，我在 Hugging Face 上托管了我的应用：[https://sophiamyang-panel-pdf-qa.hf.space/LangChain_QA_Panel_App](https://sophiamyang-panel-pdf-qa.hf.space/LangChain_QA_Panel_App)
- en: Check out my previous [blog post](/how-to-deploy-a-panel-app-to-hugging-face-using-docker-6189e3789718?sk=9c2bbd9bdbc3917e39dbd1fc9d1a5771)
    and [video](https://www.youtube.com/watch?v=QQYq5rHgsa4) on how to host a Panel
    app on Hugging Face.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 查看我之前的 [博客文章](/how-to-deploy-a-panel-app-to-hugging-face-using-docker-6189e3789718?sk=9c2bbd9bdbc3917e39dbd1fc9d1a5771)
    和 [视频](https://www.youtube.com/watch?v=QQYq5rHgsa4)，了解如何在 Hugging Face 上托管 Panel
    应用。
- en: 'Here is what I did for this app:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我为这个应用程序所做的：
- en: I uploaded my [Jupyter Notebook file](https://huggingface.co/spaces/sophiamyang/Panel_PDF_QA/blob/main/LangChain_QA_Panel_App.ipynb)
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我上传了我的 [Jupyter Notebook 文件](https://huggingface.co/spaces/sophiamyang/Panel_PDF_QA/blob/main/LangChain_QA_Panel_App.ipynb)
- en: 'I created a [Dockerfile](https://huggingface.co/spaces/sophiamyang/Panel_PDF_QA/blob/main/LangChain_QA_Panel_App.ipynb).
    One thing special about this app is that this app creates a .chroma directory
    for the Chroma vector database. So we need to create this directory and give it
    permissions: `RUN mkdir .chroma` and `RUN chomd 777 .chroma`.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我创建了一个 [Dockerfile](https://huggingface.co/spaces/sophiamyang/Panel_PDF_QA/blob/main/LangChain_QA_Panel_App.ipynb)。这个应用程序的特别之处在于，它为
    Chroma 向量数据库创建了一个 .chroma 目录。因此，我们需要创建这个目录并赋予它权限：`RUN mkdir .chroma` 和 `RUN chomd
    777 .chroma`。
- en: I included all the needed packages in a `[requirements.txt](https://huggingface.co/spaces/sophiamyang/Panel_PDF_QA/blob/main/requirements.txt)`
    [file](https://huggingface.co/spaces/sophiamyang/Panel_PDF_QA/blob/main/requirements.txt)
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我在一个 `[requirements.txt](https://huggingface.co/spaces/sophiamyang/Panel_PDF_QA/blob/main/requirements.txt)`
    [文件](https://huggingface.co/spaces/sophiamyang/Panel_PDF_QA/blob/main/requirements.txt)
    中包含了所有所需的包
- en: Conclusion
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Hopefully, by the end of this article, you know how to build a question-answering
    PDF chatbot using LangChain, OpenAI, and Panel, and know how to deploy your app
    to Hugging Face Space.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 希望在这篇文章结束时，你能了解如何使用 LangChain、OpenAI 和 Panel 构建一个问答 PDF 聊天机器人，并知道如何将应用程序部署到
    Hugging Face Space。
- en: 'Acknowledgment:'
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 致谢：
- en: Thank you Jim Bednar and Philipp Rudiger for the guidance and feedback!
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢 Jim Bednar 和 Philipp Rudiger 的指导和反馈！
- en: '![](../Images/76672d3fd26b280ee1d8afa06e636c92.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/76672d3fd26b280ee1d8afa06e636c92.png)'
- en: Photo by [Volodymyr Hryshchenko](https://unsplash.com/de/@lunarts?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Volodymyr Hryshchenko](https://unsplash.com/de/@lunarts?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: . . .
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: . . .
- en: By [Sophia Yang](https://www.linkedin.com/in/sophiamyang/) on April 8, 2023
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 由 [Sophia Yang](https://www.linkedin.com/in/sophiamyang/) 于 2023 年 4 月 8 日发布
- en: Sophia Yang is a Senior Data Scientist. Connect with me on [LinkedIn](https://www.linkedin.com/in/sophiamyang/),
    [Twitter](https://twitter.com/sophiamyang), and [YouTube](https://www.youtube.com/SophiaYangDS)
    and join the DS/ML [Book Club](https://dsbookclub.github.io/) ❤️
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Sophia Yang 是一位高级数据科学家。通过 [LinkedIn](https://www.linkedin.com/in/sophiamyang/)、[Twitter](https://twitter.com/sophiamyang)
    和 [YouTube](https://www.youtube.com/SophiaYangDS) 联系我，并加入 DS/ML [书友会](https://dsbookclub.github.io/)
    ❤️
