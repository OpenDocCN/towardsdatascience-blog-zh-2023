- en: Python OPP, and Why repr() and str() Matter
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/python-opp-and-why-repr-and-str-matter-1cff584328f4?source=collection_archive---------6-----------------------#2023-11-03](https://towardsdatascience.com/python-opp-and-why-repr-and-str-matter-1cff584328f4?source=collection_archive---------6-----------------------#2023-11-03)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: PYTHON PROGRAMMING
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The article discovers various faces behind using repr() and str() for Python
    classes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@nyggus?source=post_page-----1cff584328f4--------------------------------)[![Marcin
    Kozak](../Images/d7faf62e48ed81dab5d8ad92819fff54.png)](https://medium.com/@nyggus?source=post_page-----1cff584328f4--------------------------------)[](https://towardsdatascience.com/?source=post_page-----1cff584328f4--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----1cff584328f4--------------------------------)
    [Marcin Kozak](https://medium.com/@nyggus?source=post_page-----1cff584328f4--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4762f0cff9b2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-opp-and-why-repr-and-str-matter-1cff584328f4&user=Marcin+Kozak&userId=4762f0cff9b2&source=post_page-4762f0cff9b2----1cff584328f4---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----1cff584328f4--------------------------------)
    ·14 min read·Nov 3, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1cff584328f4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-opp-and-why-repr-and-str-matter-1cff584328f4&user=Marcin+Kozak&userId=4762f0cff9b2&source=-----1cff584328f4---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1cff584328f4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-opp-and-why-repr-and-str-matter-1cff584328f4&source=-----1cff584328f4---------------------bookmark_footer-----------)![](../Images/f8fb381ea5c85aff97d6f167a83d2e54.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Python classes need string representation to provide the user and the developer
    with more information than just a mess of letters. Photo by [Surendran MP](https://unsplash.com/@sure_mp?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: 'Python classes have many faces. For instance, you can create an empty class:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'and it still can be of use, for instance, as [a sentinel value](https://en.wikipedia.org/wiki/Sentinel_value).
    You can add an `__init__()` method:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: It still will be a very simple class, but this time, it’ll keep a particular
    value.
  prefs: []
  type: TYPE_NORMAL
- en: 'A superb power of Python classes is that they can be used as types, as shown
    below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Remember that not implementing the `__init__()` method does not mean it doesn’t
    exist. In fact, we overloaded the `__init__()` method above, not just implemented
    it. This is another significant aspect of Python classes that you should know:
    you can overload many other methods, such as `__new__()`, `__eq__()`, and `__setattr__()`.
    If you do not overload these methods, some will have their default implementation
    (like `__init__()`, `__new__()`, `__setattr__()`, and `__eq__()`), while others
    will not (like `__lt__()` and all…'
  prefs: []
  type: TYPE_NORMAL
