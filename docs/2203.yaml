- en: Python water quality EDA and Potability analysis
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/python-water-quality-eda-and-potability-analysis-ebc1cf553081?source=collection_archive---------1-----------------------#2023-07-08](https://towardsdatascience.com/python-water-quality-eda-and-potability-analysis-ebc1cf553081?source=collection_archive---------1-----------------------#2023-07-08)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Understanding data analysis, visualization techniques
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://jamesmcneill06.medium.com/?source=post_page-----ebc1cf553081--------------------------------)[![James
    McNeill](../Images/5f71dfac8d1d37a1232d88c4ac04bf84.png)](https://jamesmcneill06.medium.com/?source=post_page-----ebc1cf553081--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ebc1cf553081--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ebc1cf553081--------------------------------)
    [James McNeill](https://jamesmcneill06.medium.com/?source=post_page-----ebc1cf553081--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb8007a8a59af&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-water-quality-eda-and-potability-analysis-ebc1cf553081&user=James+McNeill&userId=b8007a8a59af&source=post_page-b8007a8a59af----ebc1cf553081---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ebc1cf553081--------------------------------)
    ·11 min read·Jul 8, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Febc1cf553081&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-water-quality-eda-and-potability-analysis-ebc1cf553081&user=James+McNeill&userId=b8007a8a59af&source=-----ebc1cf553081---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Febc1cf553081&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-water-quality-eda-and-potability-analysis-ebc1cf553081&source=-----ebc1cf553081---------------------bookmark_footer-----------)![](../Images/49859d09e254d5e2afd55436ff59a6ec.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Amritanshu Sikdar](https://unsplash.com/@da_sikka_x?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: Being able to provide enough fresh drinking water is a core requirement. Within
    the climate change debate, one of the largest challenges is ensuring enough freshwater
    to survive. Water quality is a big concern that impacts all the specifies. Only
    about three percent of Earth’s water is freshwater. Of that, only 1.2 percent
    can be used as drinking water, with the remainder locked up in glaciers, ice caps,
    and permafrost, or buried deep in the ground. Using a data-driven approach to
    assess the features that impact the water quality could greatly improve our understanding
    of what makes water drinkable.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 能够提供足够的饮用水是一个核心要求。在气候变化辩论中，最大的挑战之一是确保足够的淡水供生存使用。水质是一个影响所有生物的重要问题。地球上只有约三百分之一的水是淡水。而其中只有1.2%可以作为饮用水，其余的被锁在冰川、冰盖和永久冻土中，或深埋在地下。使用数据驱动的方法来评估影响水质的特性，可以大大改善我们对使水可饮用的理解。
- en: 'At its most basic level, the potability of water relates to water safety. Data
    techniques can be used to review this target feature. Other questions emerge that
    are outside of our current review:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在最基本的层面上，水的可饮用性与水的安全性相关。数据技术可以用来审查这个目标特性。还有一些问题超出了我们目前的审查范围：
- en: '*Can we consume all types of freshwater?*'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '*我们可以饮用所有类型的淡水吗？*'
- en: '*What percentage of the world''s freshwater can be accessed?*'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*世界上可以获取的淡水比例是多少？*'
- en: '*Has the water table increased as sea levels have risen?*'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '*随着海平面上升，地下水位是否也增加了？*'
- en: In this article, we will go on a journey with a small water quality dataset.
    From the data, we will seek to find hidden insights with data analysis techniques
    using pandas and numpy. For the data visualizations, the matplotlib and seaborn
    libraries will be used. A range of exploratory data analysis (EDA) techniques
    will be employed to provide further clarity for the data quality.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将与一个小型水质数据集一起进行探讨。我们将通过使用pandas和numpy的数据分析技术，从数据中寻找隐藏的见解。对于数据可视化，将使用matplotlib和seaborn库。将采用一系列探索性数据分析（EDA）技术，以进一步明确数据质量。
- en: Each data visualization will aim to highlight different characteristics of the
    data. They will also provide the user with templates to apply to other challenges.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 每个数据可视化都旨在突出数据的不同特征。它们还将为用户提供模板，以应用于其他挑战。
- en: '**Dataset**'
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**数据集**'
- en: For this piece of analysis, the Water Quality dataset has been taken from Kaggle¹.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这项分析，水质数据集取自Kaggle¹。
- en: '[](https://www.kaggle.com/datasets/adityakadiwal/water-potability?source=post_page-----ebc1cf553081--------------------------------)
    [## Water Quality'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 水质](https://www.kaggle.com/datasets/adityakadiwal/water-potability?source=post_page-----ebc1cf553081--------------------------------)'
- en: Drinking water potability
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 饮用水的可饮用性
- en: www.kaggle.com](https://www.kaggle.com/datasets/adityakadiwal/water-potability?source=post_page-----ebc1cf553081--------------------------------)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[www.kaggle.com](https://www.kaggle.com/datasets/adityakadiwal/water-potability?source=post_page-----ebc1cf553081--------------------------------)'
- en: A jupyter notebook instance with Python code was used for processing.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 使用了带有Python代码的jupyter notebook实例进行处理。
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: After running the script above an output would show that version 3.7.10 of Python
    was used. To be able to replicate the results that follow, users should ensure
    that Python 3 is used within the working environment.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 运行上述脚本后，输出将显示使用了版本3.7.10的Python。为了能够复制接下来的结果，用户应确保在工作环境中使用Python 3。
- en: Understanding the data
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解数据
- en: Firstly, we need to understand the data that we are working with. As the file
    format is a csv file, the standard pandas import statement using read_csv will
    be used.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要了解我们正在使用的数据。由于文件格式为csv文件，将使用标准的pandas导入语句read_csv。
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Having imported the data, the code assigns the variable df with the DataFrame
    output results from the pandas method.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 导入数据后，代码将变量df分配为pandas方法生成的DataFrame输出结果。
- en: As with any dataset that you will process, reviewing a sample of records will
    help you to gain comfort. A DataFrame has a large number of methods associated
    with it, with the pandas API a great resource to use. Within the API a head method
    can be used. Output 1.1 shows the first 5 rows of the DataFrame by default. In
    order to produce a larger number of rows to be displayed a numeric value would
    be required inside the parenthesis. Two alternatives could be applied to sample
    the DataFrame with i) sample (df.sample()) selecting random rows from the index,
    or ii) tail (df.tail()) selecting the last n rows from the index.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 与任何数据集一样，查看样本记录将帮助你获得信心。DataFrame 具有大量与之相关的方法，pandas API 是一个很好的资源。在 API 中，可以使用
    head 方法。输出 1.1 默认显示 DataFrame 的前 5 行。为了显示更多的行，需要在括号内输入一个数值。可以应用两种替代方法来对 DataFrame
    进行采样：i) sample (df.sample()) 从索引中选择随机行，或者 ii) tail (df.tail()) 从索引中选择最后的 n 行。
- en: '![](../Images/8d3f9dbc3821806f7314bbf3cc0a7af8.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8d3f9dbc3821806f7314bbf3cc0a7af8.png)'
- en: Output 1.1 First five record details from the DataFrame
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 输出 1.1 DataFrame 的前五条记录详细信息
- en: When running any method, the parenthesis is included after the method name allowing
    the Python interpreter to produce the result.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 运行任何方法时，括号会在方法名后面出现，以便 Python 解释器产生结果。
- en: Displaying the memory of a DataFrame can be a common task, particularly when
    memory constraints are involved. An example is where the dataset to import is
    potentially larger than the memory available within the Python session. By using
    the pandas library a DataFrame is created in-memory so users should understand
    what memory can be used when performing these processing steps.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 显示 DataFrame 的内存可能是一个常见的任务，特别是在涉及内存限制时。例如，当要导入的数据集可能大于 Python 会话中可用的内存时。通过使用
    pandas 库，DataFrame 会在内存中创建，因此用户应该了解在执行这些处理步骤时可以使用的内存。
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The code above can be used as a method to display output 1.2\. With the inclusion
    of the keyword memory_usage, the Python interpreter is forced to do a deeper search
    to understand the memory usage that is displayed below. A default option would
    perform a general search to understand, so if accuracy in your assessment is required
    then ensure that the keyword phrase from above is applied.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的代码可以用作显示输出 1.2 的方法。通过包含关键字 `memory_usage`，Python 解释器会进行更深入的搜索，以了解下面显示的内存使用情况。默认选项会执行一般搜索，因此如果需要评估的准确性，请确保应用上述关键字短语。
- en: '![](../Images/9c5e2bebd9c986061fce22e0a8e32fb2.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9c5e2bebd9c986061fce22e0a8e32fb2.png)'
- en: Output 1.2 Provides an overview of the features and details of memory usage
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 输出 1.2 提供了内存使用情况的功能和详细信息概述
- en: From the results shown in output 1.2, it can show a range of details, from the
    column names and data types, to also confirming the class of the variable and
    number of non-null values. We can see that 3,276 rows are shown within the entire
    table. However, for the column Sulfate, there are only 2,495 non-null values present.
    Therefore, a number of missing values can be reviewed to understand if there is
    a pattern for these missing entries with other columns. We will review a data
    visualization technique later in the article that can help with pattern recognition.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 从输出 1.2 显示的结果中，可以查看一系列详细信息，从列名称和数据类型，到确认变量的类别和非空值的数量。我们可以看到整个表格中显示了 3,276 行。然而，对于
    Sulfate 列，只有 2,495 个非空值。因此，可以查看一些缺失值，以了解这些缺失条目是否与其他列存在模式。我们将在文章后面回顾一种数据可视化技术，可以帮助识别模式。
- en: Following the earlier import statement, users could have adjusted the Dtype
    of a column if the default options were not what was expected. The results above
    display that for decimal numbers the float Dtype is applied, with the whole number
    showing int. Also, the largest byte memory type for these numeric columns has
    been included in order to provide the full coverage of potential input values.
    Many times users should assess if these Dtypes are holding the correct range of
    values and if a smaller range is expected going forward then a smaller byte value
    could be assigned. Applying this logic would help to increase the memory efficiency
    of the DataFrame and aid with performance when processing.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 根据之前的导入语句，用户可以调整列的 Dtype，如果默认选项不符合预期的话。上述结果显示，对于十进制数字，应用了 float Dtype，而整数显示为
    int。此外，还包括了这些数字列的最大字节内存类型，以提供潜在输入值的全面覆盖。用户应当评估这些 Dtypes 是否保持了正确的值范围，如果未来预期的范围较小，则可以分配较小的字节值。应用这一逻辑将有助于提高
    DataFrame 的内存效率，并在处理时提升性能。
- en: One feature shown by the info method above that can be reviewed by a number
    of other methods is the structure of the DataFrame. Such metadata can allow programmers
    to review basic components of the number of rows and columns.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 上述 info 方法展示的一个特性是 DataFrame 的结构，这可以通过许多其他方法进行查看。这样的元数据可以让程序员查看行数和列数等基本组件。
- en: '[PRE3]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: When calling an attribute in Python such as shape, there will be no parenthesis
    required. An attribute is a data result that can be accessed by both a class and
    its object. Earlier we reviewed a method which is a function that is contained
    within a class. For further insights on the smaller details a deep dive into how
    Python class statements function would be required. However, we can continue with
    the code that is used and show that with output 1.3 a number of values have been
    displayed.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 中调用诸如 shape 这样的属性时，不需要加上括号。属性是可以通过类及其对象访问的数据结果。之前我们回顾了一个方法，它是包含在类中的一个函数。要进一步了解
    Python 类语句的细节，需要深入研究。然而，我们可以继续使用所展示的代码，并且展示了输出 1.3 中显示的一些值。
- en: '![](../Images/65af2c5a0bafa0e396cde82bf68d618b.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/65af2c5a0bafa0e396cde82bf68d618b.png)'
- en: Output 1.3 Metadata showing the structure of the DataFrame
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 输出 1.3 显示了 DataFrame 的结构的元数据
- en: The first row shows the shape output which is a tuple, that is represented by
    a parenthesis with two values. From the code shown above we are able to access
    the relative positions within this tuple to display the first and second position
    values. As Python uses a 0 indexing convention, the first value will be returned
    by applying the 0 inside square brackets. We can see that the tuple contained
    the number of rows in the first position, followed by the number of columns in
    the second. An alternative method to find the number of rows would be to use the
    function len, which displays the length of the DataFrame.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行显示了形状输出，这是一个元组，由两个值组成的括号表示。从上面展示的代码中，我们能够访问该元组中的相对位置，以显示第一个和第二个位置的值。由于 Python
    使用 0 索引约定，应用 0 在方括号内将返回第一个值。我们可以看到，元组中包含了第一位置的行数，第二位置的列数。找到行数的另一种方法是使用 len 函数，它显示
    DataFrame 的长度。
- en: Summary statistics
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 摘要统计
- en: Within this section, we start to review the summary details of the DataFrame
    columns. A simple describe method is available to perform high-level data analysis
    of the numeric columns. As our DataFrame only contains numeric columns all of
    the summary properties are produced. When a mixture of character and numeric columns
    are present other keyword parameters have to be included to display relevant outputs.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们开始回顾 DataFrame 列的摘要细节。一个简单的 describe 方法可以用于对数字列进行高层次的数据分析。由于我们的 DataFrame
    仅包含数字列，因此所有摘要属性都被生成。当存在字符和数字列的混合时，需要包含其他关键字参数以显示相关输出。
- en: '[PRE4]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Output 1.4 shows the default summary values for each column. The count values
    can be interpreted as the count of non-null values. With any total less than the
    total number of rows in the DataFrame showing columns with missing values. For
    each variable, we can see a range of values. We could use the four methods of
    moments to understand the i) Mean, ii) Variance, iii) Skewness, and iv) Kurtosis,
    based on the data displayed.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 输出1.4 显示每列的默认总结值。计数值可以解释为非空值的计数。任何总计小于DataFrame中行总数的显示列都有缺失值。对于每个变量，我们可以看到一系列值。我们可以使用四种矩方法来理解i)
    平均值，ii) 方差，iii) 偏度，和iv) 峰度，基于显示的数据。
- en: '![](../Images/7cc4275d2a8f4707d23332a104eb0f44.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7cc4275d2a8f4707d23332a104eb0f44.png)'
- en: Output 1.4 Standard details displaying high-level metrics for each feature in
    the DataFrame
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 输出1.4 标准细节显示DataFrame中每个特征的高级指标
- en: Having the external insight to understand feature properties is also crucial
    when reviewing summary details. We know from experience that a pH value should
    range between 0 and 14\. If a value were to fall outside this range then the feature
    values would have to be reviewed and corrected. With the data being used to assess
    water quality having an average and median (displayed by the 50th percentile)
    close to 7 is appropriate for the neutral properties of water.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在回顾总结细节时，具有外部视角来理解特征属性也是至关重要的。我们从经验中知道，pH值应在0到14之间。如果值超出此范围，则必须检查和更正特征值。用于评估水质的数据中，平均值和中位数（由第50百分位数显示）接近7是水的中性属性的适当值。
- en: If there is a larger number of features in the DataFrame then output from the
    previous code block can be difficult to interpret. The output can be spread horizontally
    across a wider range than is possible to display without scrolling.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果DataFrame中有更多特征，则前一个代码块的输出可能会很难解释。输出可能会横向扩展到比没有滚动显示的范围更宽的范围。
- en: '[PRE5]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Being able to transpose the output is a useful method to apply. Within the code
    block above chaining the T method produced output 1.5 below. It is now much easier
    for the user to review column names displayed on the row index with the summary
    metrics displayed as column headings. This small adjustment to the describe method
    works really well with a larger number of columns.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 能够转置输出是一种有用的方法。在上面的代码块中，链式调用T方法生成了下面的输出1.5。现在用户可以更容易地查看行索引上显示的列名以及以列标题显示的总结指标。这一小的调整使得describe方法在列数较多时效果很好。
- en: '![](../Images/20fec897c29e12c7e06e34cae556878e.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/20fec897c29e12c7e06e34cae556878e.png)'
- en: Output 1.5 Summary details transposed to display feature names along the row
    index
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 输出1.5 总结细节转置以显示沿行索引的特征名称
- en: To understand further details about the describe method we can interpret the
    docstring by using the jupyter notebook magic function of a question mark.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 要进一步了解describe方法的详细信息，我们可以通过使用jupyter notebook的问号魔法函数来解释文档字符串。
- en: '[PRE6]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: It will aid the user to review default parameter values (keyword and positional)
    for any method using this approach.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种方法将帮助用户查看任何方法的默认参数值（关键字和位置）。
- en: '![](../Images/b3864e4386345892571b7d9cfb0b20b1.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b3864e4386345892571b7d9cfb0b20b1.png)'
- en: Output 1.6 Details displayed within the jupyter console about the docstring
    and method parameters
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 输出1.6 在jupyter控制台中显示关于文档字符串和方法参数的详细信息
- en: Output 1.6 provides the inner workings of the method for the user to review.
    The range of default values for each parameter, as well as the definitions, help
    to aid with the application of the method. A range of jupyter magic functions
    is available that can help to increase a programmer's productivity.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 输出1.6 提供了方法的内部工作原理，供用户查看。每个参数的默认值范围以及定义，有助于方法的应用。提供了一系列jupyter魔法函数，可以帮助提高程序员的生产力。
- en: Missing values
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 缺失值
- en: As discussed earlier from the metadata and summary statistics there are a number
    of missing values within the DataFrame. To confirm if this is correct we can apply
    the code block below.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，从元数据和总结统计数据中可以看到DataFrame中存在一些缺失值。为了确认这一点，我们可以应用下面的代码块。
- en: '[PRE7]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The code chained the first isnull method with the sum method to create the number
    of missing values per column. An isnull assessment will review for non-null values
    in a column. The sum method is used to perform the count. Output 1.7 highlights
    that three columns display missing values.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 代码将第一个isnull方法与sum方法链在一起，以创建每列的缺失值数量。isnull评估将检查列中的非空值。sum方法用于执行计数。输出1.7 突出显示三列显示缺失值。
- en: '![](../Images/daa5726a8512b152c86f0796c1545b09.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/daa5726a8512b152c86f0796c1545b09.png)'
- en: Output 1.7 Missing value count per column
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 输出1.7 每列的缺失值计数
- en: Having the total count of rows with missing values is a great starting point.
    However, it would be better to review the proportion of missing values within
    a column.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有缺失值总行数是一个很好的起点。然而，更好的是审查每列中缺失值的比例。
- en: '[PRE8]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Creating the isnull_prop user-defined function enables us to create a dictionary
    of values for each column. With this function, we have produced the count value
    from above, as well as using the shape attribute to understand the percentage
    of missing values.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 创建isnull_prop用户定义函数使我们能够为每列创建一个值字典。通过此函数，我们生成了上述计数值，并使用shape属性理解缺失值的百分比。
- en: '![](../Images/cf2adfe6f43ed3b91847e53e053df0d5.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cf2adfe6f43ed3b91847e53e053df0d5.png)'
- en: Output 1.8 Applying the missing value percentage function to each column
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 输出1.8 将缺失值百分比函数应用于每列
- en: Output 1.8 displayed an output that is tricky to visualize. To ensure that we
    do not miss the final message a DataFrame could be produced.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 输出1.8显示的结果难以可视化。为确保不遗漏最终信息，可以生成一个DataFrame。
- en: '[PRE9]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Applying the dictionary variable to the pandas DataFrame method will make it
    easier to understand the differences for each column. Output 1.9 now includes
    the miss_percent column. We could now apply a threshold value to assess if the
    percentage of missing values is within our expected range to use the column. If
    the value is too high e.g., Sulfate value greater than 20%, a user-defined control
    could be in place that highlights this column needs to either be excluded from
    future use or reviewed in more detail.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 将字典变量应用于pandas DataFrame方法将使我们更容易理解每列的差异。输出1.9现在包括miss_percent列。我们现在可以应用阈值来评估缺失值的百分比是否在我们期望的范围内。如果值过高，例如硫酸盐值大于20%，可以设置用户定义的控制，以突出显示此列需要排除在未来使用之外或更详细地审查。
- en: '![](../Images/9503a37d63bb8c4bba23b4359091d357.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9503a37d63bb8c4bba23b4359091d357.png)'
- en: Output 1.9 Creating the DataFrame to understand missing percentage per column
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 输出1.9 创建DataFrame以了解每列的缺失百分比
- en: An alternative method to review if any patterns are present by missing values
    is to apply the heatmap method from the seaborn data visualization library.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种通过缺失值检查是否存在模式的方法是应用来自seaborn数据可视化库的热图方法。
- en: '[PRE10]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Applying the code block above will produce output 1.10\. Further context is
    provided within this visualization to see if a number of rows have a missing value
    for all three variables. It could be the case that the users populating data within
    the original dataset were consistently showing missing values. Having this insight
    would allow us to produce data-driven insights to target reviewing how to minimize
    the number of missing values more efficiently.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 应用上述代码块将生成输出1.10。此可视化提供了进一步的上下文，以查看是否有多个行对所有三个变量都有缺失值。这可能是因为填充数据的用户在原始数据集中一致地显示缺失值。获得这一见解将使我们能够生成数据驱动的洞察，以更有效地减少缺失值数量。
- en: '![](../Images/55f8f4a52c07f425e24eb14b3afaf512.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/55f8f4a52c07f425e24eb14b3afaf512.png)'
- en: Output 1.10 Using seaborn data visualization to produce a missing value heatmap
    per row for each column
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 输出1.10 使用seaborn数据可视化生成每列每行的缺失值热图
- en: Understanding the pH variable distribution
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解pH变量分布
- en: One final assessment would be to perform a review of a variable that we have
    prior external knowledge about. With the seaborn library, we are able to produce
    a histogram of the pH variable.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 最终评估将是对我们已知的变量进行审查。使用seaborn库，我们能够生成pH变量的直方图。
- en: '[PRE11]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Similar to the print statement from earlier, the f string statement allows us
    to add the mean, median, min, and max values to make it easier to review the distribution.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前的打印语句类似，f字符串语句允许我们添加均值、中位数、最小值和最大值，以便更容易地查看分布。
- en: '![](../Images/c6dd7091a57a02a15e508ce22ada5270.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c6dd7091a57a02a15e508ce22ada5270.png)'
- en: Output 1.11 Reviewing the pH variable distribution with a histogram
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 输出1.11 使用直方图查看pH变量分布
- en: Output 1.11 shows that the majority of pH values are close to the middle. With
    a distribution similar to a normal distribution, we could use this insight to
    help when presenting details to external users.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 输出1.11 显示大多数pH值接近中间。其分布类似于正态分布，我们可以利用这一见解在向外部用户展示细节时提供帮助。
- en: '**Conclusion**'
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**结论**'
- en: Throughout this article, we have aimed to review the early stages of an EDA
    assessment. Metadata on the imported data was initially reviewed to display early
    insights. A deeper dive into the summary statistics allowed us to focus on the
    missing values. Finally, we were able to review the histogram of the pH variable
    to ensure that the variable followed external expectations.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们旨在回顾 EDA 评估的早期阶段。最初审查了导入数据的元数据，以展示早期洞察。深入挖掘摘要统计数据让我们关注缺失值。最后，我们审查了 pH
    变量的直方图，以确保该变量符合外部预期。
- en: A follow-up article will continue the journey and seek to develop models that
    aim to predict water quality. Classification Machine Learning techniques will
    be used to provide baseline models.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 后续文章将继续这一旅程，并寻求开发旨在预测水质的模型。将使用分类机器学习技术提供基线模型。
- en: Leave your comments and thanks very much for reading!
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 留下你的评论，非常感谢你的阅读！
- en: '**You can reach out to me on** [**LinkedIn**](https://www.linkedin.com/in/james-mc-neill-180a9057/)
    **for a friendly chat about all things data. Other stories that I have shared:**'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '**你可以通过** [**LinkedIn**](https://www.linkedin.com/in/james-mc-neill-180a9057/)
    **与我联系，进行关于数据的一次友好聊天。其他我分享的故事包括：**'
- en: '[](/declaring-variables-within-sql-fe6a479a7f9c?source=post_page-----ebc1cf553081--------------------------------)
    [## Declaring Variables within SQL'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/declaring-variables-within-sql-fe6a479a7f9c?source=post_page-----ebc1cf553081--------------------------------)
    [## 在 SQL 中声明变量'
- en: Ensuring key variables are declared at the beginning of the SQL code can help
    to automate the re-use of the code.
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 确保在 SQL 代码的开头声明关键变量，可以帮助自动化代码的重用。
- en: towardsdatascience.com](/declaring-variables-within-sql-fe6a479a7f9c?source=post_page-----ebc1cf553081--------------------------------)
    [](/advanced-sql-operations-8856084a95a8?source=post_page-----ebc1cf553081--------------------------------)
    [## Advanced SQL operations
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/declaring-variables-within-sql-fe6a479a7f9c?source=post_page-----ebc1cf553081--------------------------------)
    [](/advanced-sql-operations-8856084a95a8?source=post_page-----ebc1cf553081--------------------------------)
    [## 高级 SQL 操作'
- en: Reviewing more advanced SQL operations to extract additional data insights from
    the Irish Weather dataset.
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 审查更高级的 SQL 操作，以从爱尔兰天气数据集中提取更多的数据洞察。
- en: towardsdatascience.com](/advanced-sql-operations-8856084a95a8?source=post_page-----ebc1cf553081--------------------------------)
    [](/developing-sql-tables-3f9b96bc21e1?source=post_page-----ebc1cf553081--------------------------------)
    [## Developing SQL tables
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/advanced-sql-operations-8856084a95a8?source=post_page-----ebc1cf553081--------------------------------)
    [](/developing-sql-tables-3f9b96bc21e1?source=post_page-----ebc1cf553081--------------------------------)
    [## 开发 SQL 表'
- en: By creating and developing SQL tables only then can we understand how to best
    use the memory available.
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 只有通过创建和开发 SQL 表，我们才能理解如何最佳利用可用内存。
- en: towardsdatascience.com](/developing-sql-tables-3f9b96bc21e1?source=post_page-----ebc1cf553081--------------------------------)
    [](/getting-started-with-nlp-in-python-6a14d0bf4cfe?source=post_page-----ebc1cf553081--------------------------------)
    [## Getting started with NLP in Python
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/developing-sql-tables-3f9b96bc21e1?source=post_page-----ebc1cf553081--------------------------------)
    [](/getting-started-with-nlp-in-python-6a14d0bf4cfe?source=post_page-----ebc1cf553081--------------------------------)
    [## Python 中的 NLP 入门'
- en: Beginning a journey into the Natural Language Processing space
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 开始进入自然语言处理领域
- en: towardsdatascience.com](/getting-started-with-nlp-in-python-6a14d0bf4cfe?source=post_page-----ebc1cf553081--------------------------------)
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/getting-started-with-nlp-in-python-6a14d0bf4cfe?source=post_page-----ebc1cf553081--------------------------------)'
- en: '[1] : Kaggle dataset water quality from [https://www.kaggle.com/datasets/adityakadiwal/water-potability](https://www.kaggle.com/datasets/adityakadiwal/water-potability),
    with a license agreement of [https://creativecommons.org/publicdomain/zero/1.0/](https://creativecommons.org/publicdomain/zero/1.0/)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] : Kaggle 数据集水质来自 [https://www.kaggle.com/datasets/adityakadiwal/water-potability](https://www.kaggle.com/datasets/adityakadiwal/water-potability)，许可证协议见
    [https://creativecommons.org/publicdomain/zero/1.0/](https://creativecommons.org/publicdomain/zero/1.0/)'
