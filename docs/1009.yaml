- en: Using Kafka with Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/using-kafka-with-python-54dc20717cf7?source=collection_archive---------2-----------------------#2023-03-20](https://towardsdatascience.com/using-kafka-with-python-54dc20717cf7?source=collection_archive---------2-----------------------#2023-03-20)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Learn how to create producers and consumers with Python and plot a dynamic scatter
    plot
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://weimenglee.medium.com/?source=post_page-----54dc20717cf7--------------------------------)[![Wei-Meng
    Lee](../Images/10fc13e8a6858502d6a7b89fcaad7a10.png)](https://weimenglee.medium.com/?source=post_page-----54dc20717cf7--------------------------------)[](https://towardsdatascience.com/?source=post_page-----54dc20717cf7--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----54dc20717cf7--------------------------------)
    [Wei-Meng Lee](https://weimenglee.medium.com/?source=post_page-----54dc20717cf7--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6599e1e08a48&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-kafka-with-python-54dc20717cf7&user=Wei-Meng+Lee&userId=6599e1e08a48&source=post_page-6599e1e08a48----54dc20717cf7---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----54dc20717cf7--------------------------------)
    ·7 min read·Mar 20, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F54dc20717cf7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-kafka-with-python-54dc20717cf7&user=Wei-Meng+Lee&userId=6599e1e08a48&source=-----54dc20717cf7---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F54dc20717cf7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-kafka-with-python-54dc20717cf7&source=-----54dc20717cf7---------------------bookmark_footer-----------)![](../Images/189593ad2da51f8a3bf4c211cfa02a53.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Markus Winkler](https://unsplash.com/@markuswinkler?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: In my previous article on Kafka, I introduced the use of Kafka for data streaming.
    I also showed how you can start a Kafka broker service and demonstrated how to
    use the Kafka producer console application to send messages and the Kafka consumer
    console application to receive messages.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this article, I am going to show you how to make use of Kafka using Python.
    Specifically, I will:'
  prefs: []
  type: TYPE_NORMAL
- en: Use Python to send messages to a Kafka broker service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use Python to receive messages from a Kafka broker service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Build a dynamic charting application to plot and update a scatter plot wherever
    new data is received from the broker service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using Python with Kafka
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are at least three Python libraries available for Python developers to
    interface with Kafka broker services. They are:'
  prefs: []
  type: TYPE_NORMAL
- en: Kafka-Python
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PyKafka
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Confluent Kafka Python
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For this article, I will make use of the **Confluent Kafka Python** package.
  prefs: []
  type: TYPE_NORMAL
- en: 'To install the **Confluent Kafka Python** package, use the `pip` command:'
  prefs: []
  type: TYPE_NORMAL
