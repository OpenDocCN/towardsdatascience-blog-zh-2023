["```py\nvar result[0 .. 25] : Array of Characters  // Assume at most 25 characters\n\n// The procedure takes integer 'N' to be printed, and fills its\n// decimal characters into 'result' array.\nprocedure print( N: Integer )\n    i := 0  // Index over 'result' array\n    while N > 0\n        result[ i ] := '0' + (N mod 10)  // Take the last digit\n        N := ⌊ N / 10 ⌋   // Pick out the last digit\n        i := i+1\n    result[ i ] := '\\0'  // Append the terminating 'null' character\n    reverse array result[0 .. i-1]\n```", "```py\nvar result[0 .. 25] : Array of Characters  // Assume at most 25 characters\n\n// The function takes integer 'N' to be printed, and returns position \n// of its converted first character in the 'result' array.\nfunction print( N: Integer ) : Integer\n    result[ 25 ] := '\\0'  // Place the terminating 'null' character at the end\n    i := 25  // Index over 'result' array\n    while N > 0\n        i := i-1  // Here we go to left, for placing the next digit\n        result[ i ] := '0' + (N mod 10)  // Take the last digit\n        N := ⌊ N / 10 ⌋  // Pick out the last digit\n    return i  // Position from where the converted integer starts\n```", "```py\nvar powers_of_10[0 .. 10] : Array of Integers \n  = { 1, 10, 100, 1'000, ..., 100'000'000, 1'000'000'000 }\n  // Precalculated powers of 10, which will be used during print\n\nvar result[0 .. 25] : Array of Characters  // Assume at most 25 characters\n\n// The procedure takes integer 'N' to be printed, and fills its\n// decimal characters into the 'result' array.\nprocedure print( N: Integer )\n    L := calculate_digits_count( N )\n    i := 0  // Index over 'result' array\n    while L > 0\n        digit := ⌊ N / powers_of_10[ L-1 ] ⌋  // Obtain left-most digit\n        result[ i ] := '0' + digit   // Write it to the 'result' array\n        N := N – digit * powers_of_10[ L-1 ]  // Calculate remaining part\n        L := L-1  // Adjust its count of digits accordingly\n        i := i+1\n    result[ i ] := '\\0'  // Append the terminating 'null' character\n```", "```py\n// The function takes integer 'N' and returns count of its digits.\nfunction calculate_digits_count( N: Integer ) : Integer\n    // Check case of numbers with maximal count of digits\n    if N >= powers_of_10[ 9 ]  // Compare with maximal power of 10\n        return 10  // Count of digits for such numbers\n    // Regular case\n    L := 0\n    while N >= powers_of_10[ L ] \n        L := L+1\n    return L\n```"]