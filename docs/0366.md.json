["```py\nfrom PIL import Image\nimport numpy as np\nnp.random.seed(0)\n\nim = Image.open('image.jpeg', mode='r')\nimage = np.array(im)\nH,W,C = image.shape\n\n# create artificial labels from image color channels\nlabel1 = image[:,:,0].astype(np.int32)//16\nlabel2 = image[:,:,1].astype(np.int32)//16\ndepth = (image[:,:,2]+np.random.normal(size=(H,W))).astype(np.float32)\n\n# write all data sample elements to file\nwith open('image.bin','wb') as f:\n    f.write(image.tobytes())\nwith open('label2.bin','wb') as f:\n    f.write(label2.tobytes())\nwith open('label1.bin','wb') as f:\n    f.write(label1.tobytes())\nwith open('depth.bin','wb') as f:\n    f.write(depth.tobytes())\n```", "```py\nimport tarfile\nwith tarfile.open(\"base.tar\", \"w\") as tar:\n    for name in [\"image.bin\", \"label1.bin\", \"label2.bin\", \"depth.bin\"]:\n        tar.add(name)\n```", "```py\nimport tarfile\nwith tarfile.open(\"base.bz2\", \"w:bz2\") as tar:\n    for name in [\"image.bin\", \"label1.bin\", \"label2.bin\", \"depth.bin\"]:\n        tar.add(name)\n```", "```py\nlabel1 = label1.astype(np.uint8)\nlabel2 = label2.astype(np.uint8)\ndepth_new = depth.astype(np.float16)\n\n# measure loss of quality\nfrom numpy import linalg as LA\nl_max = LA.norm((depth-depth_new.astype(np.float32)).flatten(),np.inf) # 0.12\nl_2 = LA.norm((depth-depth_new.astype(np.float32)).flatten(),2) # 10.47\n\nwith open('label1.bin','wb') as f:\n    f.write(label1.tobytes())\nwith open('label2.bin','wb') as f:\n    f.write(label2.tobytes())\nwith open('depth.bin','wb') as f:\n    f.write(depth_new.tobytes())\n```", "```py\n# compress\ncombined_label = (label2 * 16 + label1).astype(np.uint8)\n\n# restore\nlabel1 = combined_label % 16\nlabel2 = combined_label // 16\n```", "```py\nfrom PIL import Image\nfrom skimage.metrics import structural_similarity as SSIM\n\nImage.fromarray(combined_label).save('label.png')\nImage.fromarray(image).save('image.jpg',quality=95)\n\ndecoded = np.array(Image.open('image.jpg'))\n\nssim = SSIM(image, decoded, channel_axis=2)} # 0.996\n```", "```py\nimport tarfile\nfrom PIL import Image\n\ncombined_label = (label2 * 16 + label1).astype(np.uint8)\nImage.fromarray(combined_label).save('label.png')\nImage.fromarray(image).save('image.jpg',quality=95)\n\ndepth_new = depth.astype(np.float16)\nwith open('depth.bin','wb') as f:\n    f.write(depth_new.tobytes())\n\nwith tarfile.open(\"final.tar.bz2\", \"w:bz2\") as tar:\n    for name in [\"image.jpg\", \"label.png\", \"depth.bin\"]:\n        tar.add(name)\n```"]