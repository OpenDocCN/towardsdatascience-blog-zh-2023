- en: Time Series Classification for Fatigue Detection in Runners — A Tutorial
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/time-series-classification-for-fatigue-detection-in-runners-a-tutorial-d649e8eb322f?source=collection_archive---------2-----------------------#2023-12-07](https://towardsdatascience.com/time-series-classification-for-fatigue-detection-in-runners-a-tutorial-d649e8eb322f?source=collection_archive---------2-----------------------#2023-12-07)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A step-by-step walkthrough of inter-participant and intra-participant classification
    performed on wearable sensor data of runners
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@k.bahavathy?source=post_page-----d649e8eb322f--------------------------------)[![K
    Bahavathy](../Images/2c67d5d9cb787a50ef52a9d1b4111f9e.png)](https://medium.com/@k.bahavathy?source=post_page-----d649e8eb322f--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d649e8eb322f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d649e8eb322f--------------------------------)
    [K Bahavathy](https://medium.com/@k.bahavathy?source=post_page-----d649e8eb322f--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F8911deab0ef9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftime-series-classification-for-fatigue-detection-in-runners-a-tutorial-d649e8eb322f&user=K+Bahavathy&userId=8911deab0ef9&source=post_page-8911deab0ef9----d649e8eb322f---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d649e8eb322f--------------------------------)
    ·6 min read·Dec 7, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd649e8eb322f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftime-series-classification-for-fatigue-detection-in-runners-a-tutorial-d649e8eb322f&user=K+Bahavathy&userId=8911deab0ef9&source=-----d649e8eb322f---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd649e8eb322f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftime-series-classification-for-fatigue-detection-in-runners-a-tutorial-d649e8eb322f&source=-----d649e8eb322f---------------------bookmark_footer-----------)![](../Images/f1c145157577341e4a9022bf76d38667.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: Running data collected using wearable sensors can provide insights about a runner’s
    performance and overall technique. The data that comes from these sensors are
    usually time series by nature. This tutorial runs through a fatigue detection
    task where time series classification methods are used on a running dataset. In
    this tutorial, the time series data is used in its raw format rather than extracting
    features from the time series. This leads to an extra dimension in the data and
    hence traditional machine learning algorithms which use the data in a traditional
    vector format do not work well. Hence specific time series algorithms need to
    be used.
  prefs: []
  type: TYPE_NORMAL
- en: The data contains motion capture data from runners under normal and fatigued
    conditions. The data was collected using Inertial Measurement Units (IMU) at University
    College Dublin, Ireland. The data used in this tutorial can be found at [https://zenodo.org/records/7997851](https://zenodo.org/records/7997851)
    . The data presents a binary classification task where we try to predict between
    ‘Fatigued’ and ‘Non-Fatigued’. In this tutorial, we use the specialised Python
    packages, [Scikit-learn](https://scikit-learn.org/stable/); a toolkit for machine
    learning on python and [sktime](https://github.com/sktime/sktime); a library specifically
    created for machine learning for time series.
  prefs: []
  type: TYPE_NORMAL
- en: The dataset contains multiple channels of data. Here, we model the problem as
    a univariate problem for simplicity and hence only one channel of the data is
    used. We select the magnitude acceleration signal as it is the best performing
    signal [[1](http://xkdd2023.isti.cnr.it/papers/223.pdf), [2](https://ieeexplore.ieee.org/document/10331612)].
    The magnitude signal is the square root of the squared sum of each of the directional
    components.
  prefs: []
  type: TYPE_NORMAL
- en: More detailed information about the data collection and processing can be found
    in the following papers, [[1](http://xkdd2023.isti.cnr.it/papers/223.pdf), [2](https://ieeexplore.ieee.org/document/10331612)].
  prefs: []
  type: TYPE_NORMAL
- en: 'To summarize, in this tutorial:'
  prefs: []
  type: TYPE_NORMAL
- en: A time series classification task is performed using a state-of-the-art time
    series classification technique on wearable sensor collected data.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A comparison is made between the use of inter-participant models (globalised)
    and intra-participant models (personalised) for fatigue detection in runners.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setup of the classification task
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: First, we need to load the data required for the analysis. For this evaluation,
    we use the data from “Accel_mag_all.csv”. We use pandas to load the data. Make
    sure you have downloaded this file from [https://](https://zenodo.org/records/7997851)[10.5281/zenodo.7997850](https://zenodo.org/doi/10.5281/zenodo.7997850)
    .
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'A few functions from the sktime and sklearn packages are required so we load
    them below prior to beginning the analysis:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Next, we separate the labels and the participant number. Data will be represented
    by arrays from here.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: For this task, we are going to use the Rocket transform along with a Ridge Regression
    Classifier. Rocket is a state-of-the-art technique for time series classification
    [3]. Rocket works through the generation of random convolutional kernels which
    are convolved along the time series to produce a feature map. A simple linear
    classifier such as Ridge classifier is then used on this feature map. A pipeline
    can be created that first transforms the data using Rocket, standardizes the features,
    and finally uses the Ridge Classifier to do the classification.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Globalised Classification
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In applications where we have data from multiple participants, using all the
    data together would mean that an individual’s data can appear in both training
    and test sets. To avoid this, a leave-one-subject-out (LOSO) analysis is generally
    performed where the model is trained on all but one participant and tested on
    the one left-out participant. This is repeated for every participant. This method
    would test the ability of the model to generalise between participants.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Printing out a summary of results from above:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The output from the above code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: The accuracy from this LOSO analysis is notably low with some datasets yielding
    results that are as poor as random guessing. This suggests that the data from
    one participant may not generalise well to another participant. This is a commonly
    occurring issue when working with personal sensing data as the exercise technique
    and overall physiology are different from one individual to another. Furthermore,
    in this application, how one person compensates for fatigue may be different to
    how another person compensates for fatigue. Let’s see if we can improve the performance
    by personalising the models.
  prefs: []
  type: TYPE_NORMAL
- en: Personalised Classification
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When building personalised models, the prediction is made based on the individual’s
    data. While splitting time series data into train and test sets, it should be
    done in a way where the data is not shuffled. To do this, we split each class
    into individual train and test sets to preserve the proportion of each class in
    the train and test sets while also preserving the time series nature of the data.
    The data from the first two-thirds of the run is used to train the model to predict
    on the last one-third of the run.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Printing out a summary of the results above as before:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Output from the above code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: By personalising the models, a drastic improvement in the performance is seen.
    Hence, in this application, it is clear that there are difficulties in generalising
    from one person to another.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To perform a classification on the time series data from the wearable sensors,
    the state-of-the-art technique, Rocket was used. This analysis showed that in
    this domain personalising the models leads to better performing classification
    models.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/04d298758a397c3a3668a96122ee3054.png)'
  prefs: []
  type: TYPE_IMG
- en: Accuracy obtained through the global classification vs the personalised classification
    for each participant
  prefs: []
  type: TYPE_NORMAL
- en: The above figure shows a big improvement in performance from using personalised
    models where for many participants, the performance almost doubles. The differences
    in physiology and running technique from one person to another are likely to contribute
    to this behaviour. From an user point of view, both global and personalised models
    would have benefits depending on the application. For example, in clinical settings
    where an individual users exercise technique needs to be monitored, a personalised
    model may be useful. However, collecting enough data from a single individual
    for accurate prediction can be difficult and hence for many applications, global
    models would be ideal.
  prefs: []
  type: TYPE_NORMAL
- en: 'The code presented in this tutorial can also be found on github: [https://github.com/bahavathyk/TSC_for_Fatigue_Detection](https://github.com/bahavathyk/TSC_for_Fatigue_Detection.git)'
  prefs: []
  type: TYPE_NORMAL
- en: 'References:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] B. Kathirgamanathan, T. Nguyen, G. Ifrim, B. Caulfield, P. Cunningham.
    Explaining Fatigue in Runners using Time Series Analysis on Wearable Sensor Data,
    XKDD 2023: 5th International Workshop on eXplainable Knowledge Discovery in Data
    Mining, ECML PKDD, 2023, [http://xkdd2023.isti.cnr.it/papers/223.pdf](http://xkdd2023.isti.cnr.it/papers/223.pdf)'
  prefs: []
  type: TYPE_NORMAL
- en: '[2] B. Kathirgamanathan, B. Caulfield and P. Cunningham, “Towards Globalised
    Models for Exercise Classification using Inertial Measurement Units,” 2023 IEEE
    19th International Conference on Body Sensor Networks (BSN), Boston, MA, USA,
    2023, pp. 1–4, doi: 10.1109/BSN58485.2023.10331612.'
  prefs: []
  type: TYPE_NORMAL
- en: '[3] A. Dempster, F. Petitjean, and G. I.Webb. ROCKET: exceptionally fast and
    accurate time series classification using random convolutional kernels. Data Mining
    and Knowledge Discovery, 34(5):1454–1495, 2020.'
  prefs: []
  type: TYPE_NORMAL
