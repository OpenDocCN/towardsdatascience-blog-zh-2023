- en: 'Python OOP Tutorial: How to Create Classes and Objects'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/python-oop-tutorial-how-to-create-classes-and-objects-c36a92b01552?source=collection_archive---------19-----------------------#2023-01-04](https://towardsdatascience.com/python-oop-tutorial-how-to-create-classes-and-objects-c36a92b01552?source=collection_archive---------19-----------------------#2023-01-04)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: An easy guide to using classes and objects in Object-Oriented Programming (OOP)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@yazihejazi?source=post_page-----c36a92b01552--------------------------------)[![Yasmine
    Hejazi](../Images/1c280c78e49f62345b3cd0c30b185482.png)](https://medium.com/@yazihejazi?source=post_page-----c36a92b01552--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c36a92b01552--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c36a92b01552--------------------------------)
    [Yasmine Hejazi](https://medium.com/@yazihejazi?source=post_page-----c36a92b01552--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe2d3b1ba6be6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-oop-tutorial-how-to-create-classes-and-objects-c36a92b01552&user=Yasmine+Hejazi&userId=e2d3b1ba6be6&source=post_page-e2d3b1ba6be6----c36a92b01552---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c36a92b01552--------------------------------)
    ·6 min read·Jan 4, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc36a92b01552&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-oop-tutorial-how-to-create-classes-and-objects-c36a92b01552&user=Yasmine+Hejazi&userId=e2d3b1ba6be6&source=-----c36a92b01552---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc36a92b01552&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-oop-tutorial-how-to-create-classes-and-objects-c36a92b01552&source=-----c36a92b01552---------------------bookmark_footer-----------)![](../Images/0dde12a92beeefc82d69df98b05a3724.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Taylor Heery](https://unsplash.com/@taylorheeryphoto?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In Python programming, everything is an object. Variables and even functions
    are objects. **A class is a mold** that creates an object.
  prefs: []
  type: TYPE_NORMAL
- en: '*Think of a popsicle tray.* First, you manufacture the popsicle tray to create
    your desired size, shape, and depth; this is the **class**. Then, you can decide
    what to pour into your popsicle tray to freeze — maybe you add water and simply
    make ice, or maybe you add different kinds of fruit and juices to make popsicles.
    Each popsicle you create is an **object**, and objects can have different “data”
    or flavors associated with them.'
  prefs: []
  type: TYPE_NORMAL
- en: 'This article will demonstrate with code how to create your own class and use
    it in your Python code. The different components of a class can be broken down
    into the following: constructors, getters and setters, properties, decorators,
    privacy naming, class methods, attributes, and inheritance.'
  prefs: []
  type: TYPE_NORMAL
- en: '**When to use a class/object versus a module:**'
  prefs: []
  type: TYPE_NORMAL
- en: Use classes when you need a number of individual instances with similar behavior
    but different data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use classes when you want support for inheritance; modules do not…
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
