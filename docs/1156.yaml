- en: Finding Patterns in Convenience Store Locations with Geospatial Association
    Rule Mining
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/finding-patterns-in-convenience-store-locations-with-geospatial-association-rule-mining-5bad7e833299?source=collection_archive---------2-----------------------#2023-04-01](https://towardsdatascience.com/finding-patterns-in-convenience-store-locations-with-geospatial-association-rule-mining-5bad7e833299?source=collection_archive---------2-----------------------#2023-04-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Understanding spatial trends in the location of Tokyo convenience stores
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@elz1582?source=post_page-----5bad7e833299--------------------------------)[![Elliot
    Humphrey](../Images/62f398bd178bd4eae0fb5c4062972e23.png)](https://medium.com/@elz1582?source=post_page-----5bad7e833299--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5bad7e833299--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5bad7e833299--------------------------------)
    [Elliot Humphrey](https://medium.com/@elz1582?source=post_page-----5bad7e833299--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F13e1322246bb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-patterns-in-convenience-store-locations-with-geospatial-association-rule-mining-5bad7e833299&user=Elliot+Humphrey&userId=13e1322246bb&source=post_page-13e1322246bb----5bad7e833299---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----5bad7e833299--------------------------------)
    ·7 min read·Apr 1, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5bad7e833299&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-patterns-in-convenience-store-locations-with-geospatial-association-rule-mining-5bad7e833299&user=Elliot+Humphrey&userId=13e1322246bb&source=-----5bad7e833299---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5bad7e833299&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-patterns-in-convenience-store-locations-with-geospatial-association-rule-mining-5bad7e833299&source=-----5bad7e833299---------------------bookmark_footer-----------)![](../Images/f95c12ffb6708caef8d6d65c6ee57709.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Matt Liu](https://unsplash.com/@shams_of_tabiriz?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: When walking around Tokyo you will often pass numerous convenience stores, locally
    known as “konbinis”, which makes sense since there are **over** [**56,000**](https://www.statista.com/statistics/810901/japan-convenience-store-numbers/)
    convenience stores in Japan. Often there will be different chains of convenience
    store located very close to one another; it is not uncommon to see stores around
    the corner from each other or on opposite sides of the street. Given Tokyo’s population
    density, it is understandable for competing businesses to be forced closer to
    each other, however, **could there be any relationships between which chains of
    convenience stores are found near each other?**
  prefs: []
  type: TYPE_NORMAL
- en: Defining the task
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The goal will be to collect location data from numerous convenience store chains
    in a Tokyo neighbourhood, to understand if there are any relationships between
    which chains are co-located with each other. To do this will require:'
  prefs: []
  type: TYPE_NORMAL
- en: Ability to query the location of different convenience stores in Tokyo, in order
    to retrieve each store’s name and location
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finding which convenience stores are co-located with each other within a pre-defined
    radius
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using the data on co-located stores to derive association rules
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting and visualising results for inspection
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s begin!
  prefs: []
  type: TYPE_NORMAL
- en: 'Step One: Extracting data using OpenStreetMap'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For our use case we want to find convenience stores in Tokyo, so first we’ll
    need to do a little homework on what are the common store chains. A quick Google
    search tells me that the main stores are **FamilyMart, Lawson, 7-Eleven, Ministop,
    Daily Yamazaki and NewDays**.
  prefs: []
  type: TYPE_NORMAL
- en: Now we know what we are searching, lets go to [OSMNX](https://osmnx.readthedocs.io/en/stable/);
    a great Python package for searching data in OpenStreetMap (OSM). According the
    OSM’s schema, we should be able to find the store name in either the ***‘brand:en’***
    or ***‘brand’*** field.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can start by importing some useful libraries for getting our data, and defining
    a function to return a table of locations for a given convenience store chain
    within a specified area:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'We can pass each convenience store name and combine the results into a single
    table of store name, longitude and latitude. For our use case we can focus on
    the **Shinjuku** neighbourhood in Tokyo, and see what the abundance of each convenience
    store looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/acf50fec1bce19be4c37bc6c9b14dd1d.png)'
  prefs: []
  type: TYPE_IMG
- en: Frequency count of convenience stores. Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: 'Clearly FamilyMart and 7-Eleven dominate in the frequency of stores, but how
    does this look spatially? Plotting geospatial data is pretty straightforward when
    using [**Kepler.gl**](https://kepler.gl/), which includes a nice interface for
    creating visualisations which can be saved as html objects or visualised directly
    in Jupyter notebooks:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d847364d9f9ed3288317cf3be7dcaaa9.png)'
  prefs: []
  type: TYPE_IMG
- en: Location map of Shinjuku convenience stores, colour coded by store name. Image
    by author.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/63828fe9dac26fd66176363b3228fbd9.png)'
  prefs: []
  type: TYPE_IMG
- en: Location map of Shinjuku convenience stores, colour coded density in a two minute
    walking radius (168m). image by author.
  prefs: []
  type: TYPE_NORMAL
- en: 'Step Two: Finding nearest neighbours'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that we have our data, the next step will be to find nearest neighbours
    for each convenience store. To do this, we will be using Scikit Learn’s [‘BallTree’
    class](https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.BallTree.html)
    to find the names of the nearest convenience stores within a two minute walking
    radius. We are not interested in how many stores are considered nearest neighbours,
    so we will just look at which convenience store chains are within the defined
    radius.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: If we want to improve the accuracy of our work, we could replace the haversine
    distance measure for something more accurate (i.e., walking times calculated using
    [networkx](https://networkx.org/)), but we’ll keep things simple.
  prefs: []
  type: TYPE_NORMAL
- en: 'This will give us a DataFrame where each row corresponds to a location, and
    a binary count of which convenience store chains are nearby:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f50dbf61e63e86f931a1d11164981431.png)'
  prefs: []
  type: TYPE_IMG
- en: Sample DataFrame of convenience store nearest neighbours for each location.
    Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: 'Step Three: Association Rule Mining'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We now have a dataset ready to perform association rule mining. Using the [mlxtend](https://github.com/rasbt/mlxtend)
    library we can derive association rules using the [Apriori algorithm](https://www.geeksforgeeks.org/apriori-algorithm/).
    There is a minimum **support** of 5%, so that we can examine only the rules related
    to frequent occurrences in our dataset (i.e., co-located convenience store chains).
    We use the metric ‘lift’ when deriving rules; **lift** is the ratio of the proportion
    of locations that contain both the antecedent and consequent relative to the expected
    support under the assumption of independence.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'This gives us the following results table:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b88372e80f7e9e3833bedd411770f65a.png)'
  prefs: []
  type: TYPE_IMG
- en: Association rules for convenience store data. Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will now interpret these association rules to make some high level takeaway
    learnings. To interpret this table its best to read more about Association Rules,
    using these links:'
  prefs: []
  type: TYPE_NORMAL
- en: '***Complete Guide to Association Rules*** — [https://towardsdatascience.com/association-rules-2-aa9a77241654](/association-rules-2-aa9a77241654)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***Association Rules with Apriori Algorithm —*** [https://towardsdatascience.com/association-rules-with-apriori-algorithm-574593e35223](/association-rules-with-apriori-algorithm-574593e35223)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***Understanding Association Rules —*** [https://towardsdatascience.com/a-simple-way-to-understand-association-rule-from-the-customer-basket-analysis-use-case-c7bcd75bdec1](/a-simple-way-to-understand-association-rule-from-the-customer-basket-analysis-use-case-c7bcd75bdec1)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Okay, back to the table.
  prefs: []
  type: TYPE_NORMAL
- en: Support is telling us how often different convenience store chains are actually
    found together. Therefore we can say that 7-Eleven and FamilyMart are found together
    in ~31% of the data. A lift over 1 indicates that the presence of the antecedent
    increases the likelihood of the consequent, suggesting that the locations of the
    two chains are partially dependent. On the other hand, the association between
    7-Eleven and Lawson shows a higher lift but with a lower confidence.
  prefs: []
  type: TYPE_NORMAL
- en: Daily Yamazaki has a low support near our cutoff and shows a weak relationship
    with the location of FamilyMart, given by a lift slightly above 1.
  prefs: []
  type: TYPE_NORMAL
- en: Other rules are referring to combinations of convenience stores. For example
    when a 7-Eleven and FamilyMart are already co-located, there is a high lift value
    of 1.42 that suggests a strong association with Lawson.
  prefs: []
  type: TYPE_NORMAL
- en: So why is this useful?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If we had just stopped at finding the nearest neighbours for each store location,
    we would not have been able to determine anything about the relationships between
    these stores.
  prefs: []
  type: TYPE_NORMAL
- en: An example of why geospatial association rules can be insightful for businesses
    is in determining new store locations. If a convenience store chain is opening
    a new location, association rules can help to identify which stores are likely
    to co-occur.
  prefs: []
  type: TYPE_NORMAL
- en: The value in this becomes clear when tailoring marketing campaigns and pricing
    strategies, as it provides quantitative relationships about which stores are likely
    to compete. Since we know that FamilyMart and 7-Eleven often co-occur, which we
    demonstrate with association rules, it would make sense for both of these chains
    to pay more attention to how their products compete relative to other chains such
    as Lawson and Daily Yamazaki.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this article we have created geospatial association rules for convenience
    store chains in a Tokyo neighbourhood. This was done using data extraction from
    OpenStreetMap, finding nearest neighbour convenience store chains, visualising
    data on maps, and creating association rules using an Apriori algorithm.
  prefs: []
  type: TYPE_NORMAL
- en: Thanks for reading!
  prefs: []
  type: TYPE_NORMAL
