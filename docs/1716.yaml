- en: 2D Matrix Transformations for Computer Vision
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/2d-matrix-transformations-for-computer-vision-80b4a4f2120f?source=collection_archive---------18-----------------------#2023-05-23](https://towardsdatascience.com/2d-matrix-transformations-for-computer-vision-80b4a4f2120f?source=collection_archive---------18-----------------------#2023-05-23)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Scaling, rotation, and translation through transformation matrices for computer
    vision
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@JavierMtz5?source=post_page-----80b4a4f2120f--------------------------------)[![Javier
    Martínez Ojeda](../Images/5b5df4220fa64c13232c29de9b4177af.png)](https://medium.com/@JavierMtz5?source=post_page-----80b4a4f2120f--------------------------------)[](https://towardsdatascience.com/?source=post_page-----80b4a4f2120f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----80b4a4f2120f--------------------------------)
    [Javier Martínez Ojeda](https://medium.com/@JavierMtz5?source=post_page-----80b4a4f2120f--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F74d7213a71a8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F2d-matrix-transformations-for-computer-vision-80b4a4f2120f&user=Javier+Mart%C3%ADnez+Ojeda&userId=74d7213a71a8&source=post_page-74d7213a71a8----80b4a4f2120f---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----80b4a4f2120f--------------------------------)
    ·7 min read·May 23, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F80b4a4f2120f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F2d-matrix-transformations-for-computer-vision-80b4a4f2120f&user=Javier+Mart%C3%ADnez+Ojeda&userId=74d7213a71a8&source=-----80b4a4f2120f---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F80b4a4f2120f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F2d-matrix-transformations-for-computer-vision-80b4a4f2120f&source=-----80b4a4f2120f---------------------bookmark_footer-----------)![](../Images/53cd95c16308884aad48a8493ac3d1c4.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Elen Sher](https://unsplash.com/@lenochka210292?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: If you want to read this article without a Premium Medium account, you can do
    it from this friend link :)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[https://www.learnml.wiki/2d-matrix-transformations-for-computer-vision/](https://www.learnml.wiki/2d-matrix-transformations-for-computer-vision/)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'In Computer Vision, it is often necessary to scale, translate, or rotate an
    image. Libraries such as OpenCV allow you to perform these actions easily, however,
    understanding how these transformations work at a low level is vital to be able
    to apply more complex transformations, as well as to be able to use computer vision
    libraries in an optimal way. Therefore, this article explains the three simplest
    **2D Rigid-Body Transformation** types: **scaling**, **rotation** and **translation**,
    as well as examples of their application.'
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When you want to scale, rotate, or translate an image, the immediate solution
    is to apply the transformations to each of its pixels individually. By applying
    the same transformation to all pixels, the transformed pixels will create a new
    image, which will be the original image transformed.
  prefs: []
  type: TYPE_NORMAL
- en: This can be seen in the following image, where we have a square formed by 4
    pixels/vertices. As we want to rotate the square about…
  prefs: []
  type: TYPE_NORMAL
