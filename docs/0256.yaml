- en: Model Rollbacks Through Versioning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/model-rollbacks-through-versioning-7cdca954e1cc?source=collection_archive---------14-----------------------#2023-01-16](https://towardsdatascience.com/model-rollbacks-through-versioning-7cdca954e1cc?source=collection_archive---------14-----------------------#2023-01-16)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The Walmart Rollback isn’t the only kind that can save you money
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@jazmia.henry?source=post_page-----7cdca954e1cc--------------------------------)[![Jazmia
    Henry](../Images/b7616bcd0a6f2e4242411074cde703ae.png)](https://medium.com/@jazmia.henry?source=post_page-----7cdca954e1cc--------------------------------)[](https://towardsdatascience.com/?source=post_page-----7cdca954e1cc--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----7cdca954e1cc--------------------------------)
    [Jazmia Henry](https://medium.com/@jazmia.henry?source=post_page-----7cdca954e1cc--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F23c2e80e732a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmodel-rollbacks-through-versioning-7cdca954e1cc&user=Jazmia+Henry&userId=23c2e80e732a&source=post_page-23c2e80e732a----7cdca954e1cc---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----7cdca954e1cc--------------------------------)
    ·7 min read·Jan 16, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F7cdca954e1cc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmodel-rollbacks-through-versioning-7cdca954e1cc&user=Jazmia+Henry&userId=23c2e80e732a&source=-----7cdca954e1cc---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7cdca954e1cc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmodel-rollbacks-through-versioning-7cdca954e1cc&source=-----7cdca954e1cc---------------------bookmark_footer-----------)![](../Images/6b245b31a1a701a1e102657a55cd638b.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Using Model Rollbacks Is Fun!
  prefs: []
  type: TYPE_NORMAL
- en: 'There’s general consensus in the Machine Learning community that models can
    and have made biased decisions against traditionally marginalized groups. Ethical
    AI researchers from [Dr. Cathy O’Neil](https://www.ted.com/speakers/cathy_o_neil)
    to [Dr. Joy Buolamwini](https://www.ted.com/speakers/joy_buolamwini) have gone
    to great lengths to establish a pattern of faulty decision making rooted in biased
    and unrepresentative data that result in serious harms. Unfortunately, our “intelligent”
    learning algorithms are only as smart, capable and ethical as we make them and
    we are only at the beginning of understanding the long term effects of biased
    models. Fortunately, there are many strategies already at our disposal that we
    can use to mitigate harms when they arise. Today, we will focus on a very powerful
    strategy: Model Rollbacks through Versioning.'
  prefs: []
  type: TYPE_NORMAL
- en: 'When the average ML or AI practitioner has made models in the past, the priority
    of the model builder looked a lot like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d54c33a06eac044ecc3a93acd675649a.png)'
  prefs: []
  type: TYPE_IMG
- en: Traditional Data Workflow
  prefs: []
  type: TYPE_NORMAL
- en: You collect the Data from a cloud source, save the Data in a database, and then
    code a performant model sending the most well performing one off to an Operations
    or Engineering team to integrate into their larger codebase and deploy in their
    Web Applications.
  prefs: []
  type: TYPE_NORMAL
- en: 'This framework—while streamlined and tidy—failed in many ways:'
  prefs: []
  type: TYPE_NORMAL
- en: Model performance is judged by their scores or the KPIs pushed by the company
    to judge model success—not so much by the long term affect of the people using
    the model’s output.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The model builders are detached from the model integration process and the people
    deploying the model know very little about how the model makes decisions. This
    leads to a lack of transparency into the model building process that becomes exasperated
    down the line as Engineers that integrated the model are unable to detect if the
    deployed model is working as intended or potentially perpetuating harms.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Even if the model builders took the time to find representative Data and had
    a properly performing model that did no harms during the training process, being
    detached from the model deployment process means they little no visibility into
    the decisions that model makes in the face of new, and at time potentially biased,
    Data being ingested “in the wild”.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The recognition of these problems and more make the ethical case for a new
    type of model builder—one that recognized the value of building performant models
    while understanding the unique opportunity learning about model integration could
    bring to improve model performance post deployment while simultaneously reducing
    bias. These impeccable minds can be found on MLOps, AI, and Analytical Engineering
    teams all across Tech. Instead of working on models as above, their process is
    extended to include this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6307a72fc3547c835c58986b89e47cb7.png)'
  prefs: []
  type: TYPE_IMG
- en: MLOps Process
  prefs: []
  type: TYPE_NORMAL
- en: After data is ingested from a database, multiple models are created to solve
    a problem at the company and these models are containerized through a service
    such as Docker. An API is created that is pointed to the port host where the models
    are located where it can provide output to a Web Application for user interaction.
    All outputs are ingested into the cloud through a service such as MongoDB for
    further analysis and a monitoring system such as Grafana is attached to model
    output to provide alerts if the model is unable to generalize well to the world.
    This process allows for better visualization into how a model is performing post
    deployment and streamlines Model Versioning techniques easily.
  prefs: []
  type: TYPE_NORMAL
- en: 'Model Versioning: What is It?'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Model Versioning is a workflow that allows for Engineers to track software changes
    over time and is a Model-centric take on Version Control. When we include model
    builders into the model integration process we are able to track the models we
    use and adapt accordingly based on how they perform when integrated into a larger
    system.
  prefs: []
  type: TYPE_NORMAL
- en: The model building process is iterative—one that requires multiple changes across
    time. Every step of the model building process carries with it the possibility
    that what is currently being used to make the model performant may be switched,
    changed, or adjusted to improve performance down the line. Model Versioning will
    allow for a step by step snapshot of changes happening at every step of the process
    and saving prior iterations or versions of each model’s changes for the possibility
    of future use.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s what this may look like:'
  prefs: []
  type: TYPE_NORMAL
- en: Say you originally ingest data with thousands of features across a population,
    but after doing some feature engineering, you reduce your dataset down to the
    most “important” features across the population after running some feature importance
    algorithms. Model Versioning can be done on your Data to track the evolution of
    features chosen to be inside your model.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When training multiple models, you chose different parameters to tuning during
    the hyperparameter tuning process. Versioning can track the many versions of models
    you try during the model building process.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When integrating the model into a larger system, you chose model 1 to deploy
    to the public over model 2 or 3\. While model 1 is most performant during the
    training process, it fails to make appropriate decisions when integrated into
    the larger system. Model Versioning allows you to continue working on the model
    while its deployed and push forward a better model version or switch models chosen
    or even revert back to a prior model version without any disruption to your Web
    Application.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This is where Model Versioning allows for Model Rollbacks to come in.
  prefs: []
  type: TYPE_NORMAL
- en: 'Model Rollbacks: Another Great Way to Save'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Imagine you are working as a Machine Learning Manager and are given a task for
    your team to create a Machine Learning model that can make loan decisions based
    on people’s credit scores. In the status quo, there is a simple technical solution
    that has a threshold credit score under which customers are automatically denied
    and above which the credit application is sent to a credit risk analyst who makes
    the final decision. This process, while much better than an older system in which
    everyone had their applications read by a credit risk analyst before they made
    a decision, has problems.
  prefs: []
  type: TYPE_NORMAL
- en: There are far too many applications going to the credit risk analysts for them
    to be able to make decisions in a timely manner.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There are people with no credit being denied that may be a good candidate for
    a loan, but credit risk analysts aren’t even able to get to them because of the
    threshold technical solution.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There is a gendered and racial component where white men are more likely than
    anyone else to have their credit make it past the technical solution and everyone
    else is at greater risk of being auto denied because of credit alone.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There are a lot of people a few points off of the threshold number that are
    being lumped in to the people who have much lower credit scores and would present
    a much higher risk.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: These problems are costing your company a lot of revenue.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Your team gets to work creating a model that can address these concerns. You
    start with making sure your team finds what you consider to be representative
    Data. Once that is done, you have them create multiple models—one a heuristic,
    one a logistic regression model, and the last a random forest model—to see which
    one is most performant. You then hand off the model to a different team to integrate
    into the larger codebase. The company you are in exist in silos so you are unable
    to have any visibility into how the model is deployed nor do you care to know.
    After 6 months, the model appears to be going well — that is until an op-ed is
    released with the following headline “Credit Company’s Algorithm Discriminates
    Against Non-Binary and Non College Degree Holders”. Your boss calls you and tells
    you that the model will be taken off line immediately. When pushing your model
    forward, the simple technical solution was deprecated so it will take some time
    for it to go live again. In the meantime, all applications will go to the credit
    risk analysts.
  prefs: []
  type: TYPE_NORMAL
- en: This happens way more than necessary in the Data industry. Integrated teams
    that work with both the model builders and engineers or a brand new team that
    specifically uses model builders to integrate models into the codebase and use
    the power of Model Versioning would save a lot of this headache.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s how:'
  prefs: []
  type: TYPE_NORMAL
- en: During the Data collection process, versions of the dataset could be saved and
    tagged for transparency as well as opportunities for the model builders to reconsider
    in the future if needed.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: During model building, all versions of every model can be saved for model builders
    to reconsider different hyperparameter techniques if the deployed model begins
    making biased decisions when deployed.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Model Versioning during deployment would allow for the simple technical solution
    to stay up and running as the new model is deployed to the public. In the event
    something goes wrong, the model can be rolled back and the simple technical solution
    can be pushed forward as the Machine Learning team works to fix the problem.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: While fixing the problem with the model, the model builders would have greater
    visibility into what step of the process may have lead to this outcome. This can
    reduce the time it takes to improve the problem and save the company time, resources,
    and money in the long run.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Model Versioning allows for Model rollbacks that can save your company money
    long term, but more importantly, help reduce bias if and when it arises. However,
    this technique works best when you have a team of people that understand not only
    how to build a model, but how to optimize the model in production. To have this,
    you have to expand the visibility of your model building team into the model integration
    process by either collaboration between model builders and engineers or by creating
    a hybrid team of MLOps, AI, or Analytical Engineers.
  prefs: []
  type: TYPE_NORMAL
- en: Any thoughts? Share them in the comments below!
  prefs: []
  type: TYPE_NORMAL
- en: All images created by the author.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Suggested Reads
  prefs: []
  type: TYPE_NORMAL
- en: 'O’Neil, Cathy. *Weapons of Math Destruction: How Big Data Increases Inequality
    and Threatens Democracy*. New York: Penguin Books, 2018.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Gebru, Timnit, and Joy Buolamwini. *“*Gender Shades: Intersectional Accuracy
    Disparities in Commercial Gender Classification*.*” *Proceedings of Machine Learning
    Research* 81 (2018): 1- 15.'
  prefs: []
  type: TYPE_NORMAL
