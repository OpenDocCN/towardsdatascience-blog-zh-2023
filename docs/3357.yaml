- en: 'Make Python Faster by Caching Functions: Memoization'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使 Python 更快的方法：函数缓存技术——记忆化
- en: 原文：[https://towardsdatascience.com/make-python-faster-by-caching-functions-memoization-4fca250ab5f6?source=collection_archive---------5-----------------------#2023-11-11](https://towardsdatascience.com/make-python-faster-by-caching-functions-memoization-4fca250ab5f6?source=collection_archive---------5-----------------------#2023-11-11)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/make-python-faster-by-caching-functions-memoization-4fca250ab5f6?source=collection_archive---------5-----------------------#2023-11-11](https://towardsdatascience.com/make-python-faster-by-caching-functions-memoization-4fca250ab5f6?source=collection_archive---------5-----------------------#2023-11-11)
- en: PYTHON PROGRAMMING
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PYTHON 编程
- en: The article discusses memoization using the Python standard library. The functools.lru_cache
    decorator makes this so simple!
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文章讨论了使用 Python 标准库实现的记忆化技术。`functools.lru_cache` 装饰器使这一过程变得非常简单！
- en: '[](https://medium.com/@nyggus?source=post_page-----4fca250ab5f6--------------------------------)[![Marcin
    Kozak](../Images/d7faf62e48ed81dab5d8ad92819fff54.png)](https://medium.com/@nyggus?source=post_page-----4fca250ab5f6--------------------------------)[](https://towardsdatascience.com/?source=post_page-----4fca250ab5f6--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----4fca250ab5f6--------------------------------)
    [Marcin Kozak](https://medium.com/@nyggus?source=post_page-----4fca250ab5f6--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@nyggus?source=post_page-----4fca250ab5f6--------------------------------)[![Marcin
    Kozak](../Images/d7faf62e48ed81dab5d8ad92819fff54.png)](https://medium.com/@nyggus?source=post_page-----4fca250ab5f6--------------------------------)[](https://towardsdatascience.com/?source=post_page-----4fca250ab5f6--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----4fca250ab5f6--------------------------------)
    [Marcin Kozak](https://medium.com/@nyggus?source=post_page-----4fca250ab5f6--------------------------------)'
- en: ·
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4762f0cff9b2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-python-faster-by-caching-functions-memoization-4fca250ab5f6&user=Marcin+Kozak&userId=4762f0cff9b2&source=post_page-4762f0cff9b2----4fca250ab5f6---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----4fca250ab5f6--------------------------------)
    ·11 min read·Nov 11, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4fca250ab5f6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-python-faster-by-caching-functions-memoization-4fca250ab5f6&user=Marcin+Kozak&userId=4762f0cff9b2&source=-----4fca250ab5f6---------------------clap_footer-----------)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[跟随](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4762f0cff9b2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-python-faster-by-caching-functions-memoization-4fca250ab5f6&user=Marcin+Kozak&userId=4762f0cff9b2&source=post_page-4762f0cff9b2----4fca250ab5f6---------------------post_header-----------)
    发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----4fca250ab5f6--------------------------------)
    ·11 分钟阅读·2023 年 11 月 11 日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4fca250ab5f6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-python-faster-by-caching-functions-memoization-4fca250ab5f6&user=Marcin+Kozak&userId=4762f0cff9b2&source=-----4fca250ab5f6---------------------clap_footer-----------)'
- en: --
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4fca250ab5f6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-python-faster-by-caching-functions-memoization-4fca250ab5f6&source=-----4fca250ab5f6---------------------bookmark_footer-----------)![](../Images/e3774b4417d263b6337423d06fdb6a85.png)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4fca250ab5f6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-python-faster-by-caching-functions-memoization-4fca250ab5f6&source=-----4fca250ab5f6---------------------bookmark_footer-----------)![](../Images/e3774b4417d263b6337423d06fdb6a85.png)'
- en: You can request Python to remember what functions have returned already — and
    to use it. Photo by [Kelly Sikkema](https://unsplash.com/@kellysikkema?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以要求 Python 记住哪些函数已经返回过，并加以利用。[Kelly Sikkema](https://unsplash.com/@kellysikkema?utm_source=medium&utm_medium=referral)
    拍摄的照片，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: 'We all know Python can be slow:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们都知道 Python 可能会慢：
- en: '[](https://medium.com/pythoniq/the-speed-of-python-it-aint-that-bad-9f703dd2924e?source=post_page-----4fca250ab5f6--------------------------------)
    [## The Speed of Python: It Ain’t That Bad!'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/pythoniq/the-speed-of-python-it-aint-that-bad-9f703dd2924e?source=post_page-----4fca250ab5f6--------------------------------)
    [## Python 的速度：其实并不糟糕！'
- en: I hear all the time that Python is way too slow. Is it?
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我经常听到 Python 太慢了。真的吗？
- en: medium.com](https://medium.com/pythoniq/the-speed-of-python-it-aint-that-bad-9f703dd2924e?source=post_page-----4fca250ab5f6--------------------------------)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: medium.com](https://medium.com/pythoniq/the-speed-of-python-it-aint-that-bad-9f703dd2924e?source=post_page-----4fca250ab5f6--------------------------------)
- en: What usually takes most time in Python is calling functions and class methods
    that run expensive processes. Imagine for a second that you need to run such a
    function twice for the same arguments; it will need two times as much time even
    though you both calls lead to the very same output. Is it possible to just remember
    this output and use it once more whenever it’s needed?
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 通常在Python中最耗时的是调用执行昂贵处理的函数和类方法。试想一下，你需要对相同的参数运行这样的函数两次；即使两个调用产生相同的输出，也会需要两倍的时间。有没有可能记住这个输出，并在需要时再次使用它？
- en: 'Yes, you can! It’s called [memoization](https://en.wikipedia.org/wiki/Memoization),
    and it’s a common term in programming. You could implement your own memoization
    techniques, but the truth is, you don’t have to. Python offers you a powerful
    memoization tool, and it does so in the standard library: the `functools.lru_cache`
    decorator.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，你可以！这称为[memoization](https://en.wikipedia.org/wiki/Memoization)，这是编程中的一个常见术语。你可以实现自己的memoization技术，但实际上你不必这样做。Python提供了一个强大的memoization工具，并且它在标准库中存在：`functools.lru_cache`装饰器。
