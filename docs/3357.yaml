- en: 'Make Python Faster by Caching Functions: Memoization'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/make-python-faster-by-caching-functions-memoization-4fca250ab5f6?source=collection_archive---------5-----------------------#2023-11-11](https://towardsdatascience.com/make-python-faster-by-caching-functions-memoization-4fca250ab5f6?source=collection_archive---------5-----------------------#2023-11-11)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: PYTHON PROGRAMMING
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The article discusses memoization using the Python standard library. The functools.lru_cache
    decorator makes this so simple!
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@nyggus?source=post_page-----4fca250ab5f6--------------------------------)[![Marcin
    Kozak](../Images/d7faf62e48ed81dab5d8ad92819fff54.png)](https://medium.com/@nyggus?source=post_page-----4fca250ab5f6--------------------------------)[](https://towardsdatascience.com/?source=post_page-----4fca250ab5f6--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----4fca250ab5f6--------------------------------)
    [Marcin Kozak](https://medium.com/@nyggus?source=post_page-----4fca250ab5f6--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4762f0cff9b2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-python-faster-by-caching-functions-memoization-4fca250ab5f6&user=Marcin+Kozak&userId=4762f0cff9b2&source=post_page-4762f0cff9b2----4fca250ab5f6---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----4fca250ab5f6--------------------------------)
    ·11 min read·Nov 11, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4fca250ab5f6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-python-faster-by-caching-functions-memoization-4fca250ab5f6&user=Marcin+Kozak&userId=4762f0cff9b2&source=-----4fca250ab5f6---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4fca250ab5f6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-python-faster-by-caching-functions-memoization-4fca250ab5f6&source=-----4fca250ab5f6---------------------bookmark_footer-----------)![](../Images/e3774b4417d263b6337423d06fdb6a85.png)'
  prefs: []
  type: TYPE_NORMAL
- en: You can request Python to remember what functions have returned already — and
    to use it. Photo by [Kelly Sikkema](https://unsplash.com/@kellysikkema?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: 'We all know Python can be slow:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/pythoniq/the-speed-of-python-it-aint-that-bad-9f703dd2924e?source=post_page-----4fca250ab5f6--------------------------------)
    [## The Speed of Python: It Ain’t That Bad!'
  prefs: []
  type: TYPE_NORMAL
- en: I hear all the time that Python is way too slow. Is it?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: medium.com](https://medium.com/pythoniq/the-speed-of-python-it-aint-that-bad-9f703dd2924e?source=post_page-----4fca250ab5f6--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: What usually takes most time in Python is calling functions and class methods
    that run expensive processes. Imagine for a second that you need to run such a
    function twice for the same arguments; it will need two times as much time even
    though you both calls lead to the very same output. Is it possible to just remember
    this output and use it once more whenever it’s needed?
  prefs: []
  type: TYPE_NORMAL
- en: 'Yes, you can! It’s called [memoization](https://en.wikipedia.org/wiki/Memoization),
    and it’s a common term in programming. You could implement your own memoization
    techniques, but the truth is, you don’t have to. Python offers you a powerful
    memoization tool, and it does so in the standard library: the `functools.lru_cache`
    decorator.'
  prefs: []
  type: TYPE_NORMAL
