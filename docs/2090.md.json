["```py\ndef __getitem__(self, idx):\n  row = self.df.iloc[idx]\n  out = {}\n  if np.random.random() < 0.5:\n      out['input'] = row.word if np.random.random() < 0.2 else row.nikkud\n      out['target'] = row.transliteration\n  else:\n      out['input'] = randomly_remove_accent(row.transliteration, 0.5)\n      out['target'] = row.nikkud\n  return out\n```", "```py\npipe = pipeline(\"text2text-generation\", model='google/byt5-small', device_map='auto')\n```", "```py\nfor i in trange(epochs):\n  pipe.model.train()\n  for B in tqdm(dl):\n    optimizer.zero_grad()\n    loss = pipe.model(**B).loss\n    losses.append(loss.item())\n    loss.backward()\n    optimizer.step()\n  evaluate(i + 1)\n```", "```py\nEpoch 0 before training: kokoro => okoroo-oroa-oroa-oroa-oroa-oroa-oroa-oroa-oroa-oroa-oroa-oroa-oroa-oroa-oroa-oroa-oroa-oroa-oroa-o\nEpoch 0 before training: יִשְׂרָאֵל => אלאלאלאלאלאלאלאלאלאלאלאלאלאלאלאלאלאלאלאלאלאלאלאלא\nEpoch 0 before training: ajiliti => ajabiliti siti siti siti siti siti siti siti siti siti siti siti siti siti siti siti siti siti sit\n\nEpoch 1: kokoro => מְשִׁית\nEpoch 1: יִשְׂרָאֵל => mará\nEpoch 1: ajiliti => מְשִׁית\n\nEpoch 2: kokoro => כּוֹקוֹרְבּוֹרוֹר\nEpoch 2: יִשְׂרָאֵל => yishishál\nEpoch 2: ajiliti => אַדִּיטִי\n\nEpoch 5: kokoro => קוֹקוֹרוֹ\nEpoch 5: יִשְׂרָאֵל => yisraél\nEpoch 5: ajiliti => אֲגִילִיטִי\n\nEpoch 10 after training: kokoro => קוֹקוֹרוֹ\nEpoch 10 after training: יִשְׂרָאֵל => yisraél\nEpoch 10 after training: ajiliti => אָגִ'ילִיטִי\n```"]