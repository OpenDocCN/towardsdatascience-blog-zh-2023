- en: How To Correctly Perform Cross-Validation For Time Series
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-to-correctly-perform-cross-validation-for-time-series-b083b869e42c?source=collection_archive---------4-----------------------#2023-01-10](https://towardsdatascience.com/how-to-correctly-perform-cross-validation-for-time-series-b083b869e42c?source=collection_archive---------4-----------------------#2023-01-10)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Avoid the common pitfalls in applying cross-validation to time series and forecasting
    models.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@egorhowell?source=post_page-----b083b869e42c--------------------------------)[![Egor
    Howell](../Images/1f796e828f1625440467d01dcc3e40cd.png)](https://medium.com/@egorhowell?source=post_page-----b083b869e42c--------------------------------)[](https://towardsdatascience.com/?source=post_page-----b083b869e42c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----b083b869e42c--------------------------------)
    [Egor Howell](https://medium.com/@egorhowell?source=post_page-----b083b869e42c--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1cac491223b2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-correctly-perform-cross-validation-for-time-series-b083b869e42c&user=Egor+Howell&userId=1cac491223b2&source=post_page-1cac491223b2----b083b869e42c---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----b083b869e42c--------------------------------)
    ·5 min read·Jan 10, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb083b869e42c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-correctly-perform-cross-validation-for-time-series-b083b869e42c&user=Egor+Howell&userId=1cac491223b2&source=-----b083b869e42c---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb083b869e42c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-correctly-perform-cross-validation-for-time-series-b083b869e42c&source=-----b083b869e42c---------------------bookmark_footer-----------)![](../Images/7f3a6d6bf2bca0dd5fc4e9b0dbb20ffc.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [aceofnet](https://unsplash.com/@aceofnet?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Background
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Cross-validation](https://www.youtube.com/watch?v=1rZpbvSI26c&t=29s) is a
    staple process when building any statistical or machine learning model and is
    ubiquitous in data science. However, for the more niche area of [time series analysis](https://en.wikipedia.org/wiki/Time_series)
    and forecasting, it is very easy to *incorrectly* carry out cross-validation.'
  prefs: []
  type: TYPE_NORMAL
- en: In this post, I want to showcase the problem with applying regular cross-validation
    to time series models and common methods to alleviate the issues. We will also
    go through an example of using cross-validation for [*hyperparameter tuning*](/optimise-your-hyperparameter-tuning-with-hyperopt-861573239eb5)for
    a time series model in Python.
  prefs: []
  type: TYPE_NORMAL
- en: What Is Cross-Validation?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Cross-validation is a method to determine the best performing model and parameters
    through training and testing the model on different portions of the data. The
    most common and basic approach is the classic *train-test split*. This is where
    we split…
  prefs: []
  type: TYPE_NORMAL
