- en: Spider and Parallel Charts in R with the ggvanced Package
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/ggvanced-a-package-for-generating-advanced-data-visualizations-on-top-of-the-ggplot2-package-2a935763a4b?source=collection_archive---------11-----------------------#2023-06-20](https://towardsdatascience.com/ggvanced-a-package-for-generating-advanced-data-visualizations-on-top-of-the-ggplot2-package-2a935763a4b?source=collection_archive---------11-----------------------#2023-06-20)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: An R package for effective visualization of multiple variables
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@zvonimir.boban.mef?source=post_page-----2a935763a4b--------------------------------)[![Zvonimir
    Boban](../Images/cbad06b7e1f5d021ce9b2dc31b8a6a65.png)](https://medium.com/@zvonimir.boban.mef?source=post_page-----2a935763a4b--------------------------------)[](https://towardsdatascience.com/?source=post_page-----2a935763a4b--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----2a935763a4b--------------------------------)
    [Zvonimir Boban](https://medium.com/@zvonimir.boban.mef?source=post_page-----2a935763a4b--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe31978768a4e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fggvanced-a-package-for-generating-advanced-data-visualizations-on-top-of-the-ggplot2-package-2a935763a4b&user=Zvonimir+Boban&userId=e31978768a4e&source=post_page-e31978768a4e----2a935763a4b---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----2a935763a4b--------------------------------)
    ·5 min read·Jun 20, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2a935763a4b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fggvanced-a-package-for-generating-advanced-data-visualizations-on-top-of-the-ggplot2-package-2a935763a4b&user=Zvonimir+Boban&userId=e31978768a4e&source=-----2a935763a4b---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2a935763a4b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fggvanced-a-package-for-generating-advanced-data-visualizations-on-top-of-the-ggplot2-package-2a935763a4b&source=-----2a935763a4b---------------------bookmark_footer-----------)![](../Images/571c0055f4b47d8d0bd09ce34770e38e.png)'
  prefs: []
  type: TYPE_NORMAL
- en: A pretty spider chart. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: Motivation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: During one of my data analysis projects, I found myself in need of an effective
    way to compare groups across several variables at once. Of course, bar charts
    came to mind first, but I wanted something more eye-catching, something more interesting.
    After browsing the web a bit, I settled on two prime candidates — a spider chart
    and a parallel chart.
  prefs: []
  type: TYPE_NORMAL
- en: After this, I usually just find a dedicated R package producing the needed visualizations,
    but this time, this approach left me empty-handed.
  prefs: []
  type: TYPE_NORMAL
- en: A LIE — more experienced R users might say! Such visualizations can already
    be obtained using packages such as `fsmb` and `ggradar` for radar charts and `ggally`
    for parallel plots.
  prefs: []
  type: TYPE_NORMAL
- en: However, aside from just performing the ranked comparison of groups across variables,
    I also wanted to simultaneously display the range of values for each variable.
    And, you guess it, none of the aforementioned packages offered this. So, I decided
    to build my own :)
  prefs: []
  type: TYPE_NORMAL
- en: The ggvanced package
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '`ggvanced` is an R package for creating advanced multivariable plots such as
    spider/radar charts and parallel plots. The visualizations are created on top
    of the `ggplot2` package. The beauty of the `ggplot2` package is the underlying
    grammar of graphics, allowing for creation of graphs by stacking multiple layers
    on top of one another. This powerful concept lets us create essentially any visualization,
    as long as we know how to code it.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ccf03bb570da10ccab5f025f01ba0617.png)'
  prefs: []
  type: TYPE_IMG
- en: Creating visualizations using the grammar of graphics approach. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: The package is currently [available on GitHub](https://github.com/Ringomed/ggvanced)
    and can be installed by typing the `devtools::install_github("Ringomed/ggvanced")`
    command in R and calling `library(ggvanced)` afterwards.
  prefs: []
  type: TYPE_NORMAL
- en: If you are interested in the details of chart construction, in a recent post
    I showed the logic behind constructing a spider chart from scratch, so check out
    the story below or the detailed documentation on GitHub.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/how-to-make-a-spider-chart-in-r-using-ggplot2-85a4f1898cab?source=post_page-----2a935763a4b--------------------------------)
    [## How to Make a Spider Chart in R Using ggplot2'
  prefs: []
  type: TYPE_NORMAL
- en: A step-by-step construction of a spider/radar chart
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/how-to-make-a-spider-chart-in-r-using-ggplot2-85a4f1898cab?source=post_page-----2a935763a4b--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: For the rest of you, below are some examples detailing what the package functions
    can do.
  prefs: []
  type: TYPE_NORMAL
- en: Spider charts with ggspider()
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The `ggspider()` function creates spider charts which either a single shared
    axis scaled to a [0,1] range, or a separate axis with real values displayed for
    every displayed category. Let’s test the function on a couple of examples. First,
    we have to format the data so that the first column contains the group identifier,
    and other columns the descriptory variables. We will use the built-in `mtcars`
    and `iris` datasets.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '`Comparing car properties`'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/215be6dc5e57f2cdc3be7fede1109815.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: The key differences between the cars immediately stand out. As expected, compared
    to racing cars such as the Ferrari and Maserati, the Volvo has much less horsepowers
    (hp) and takes much longer to cover a quarter of a mile (qsec), but is also much
    more economical in terms of miles per gallon (mpg).
  prefs: []
  type: TYPE_NORMAL
- en: '`Visualizing differences bettween the Iris species`'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/ae65a43cc69d66563bc1b55a3fd516e4.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: Just like with the cars example, the spider chart is very effective for determining
    the differences between the iris species. We can immediately see that the Versicolor
    and Virginica species are much more similar, having essentailly the same ratios
    of petal and sepal lengths and widths and only differing in the total flower size.
    Conversely, the Setosa species has a much larger sepal width.
  prefs: []
  type: TYPE_NORMAL
- en: Radar charts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The function also allows for creation of traditional radar charts with a single
    common scaled axis by specifying the argument `scaled = TRUE` and switching to
    a round shape using `polygon = FALSE`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/e78cd4bb485f9edf241fff43b3a75539.png)'
  prefs: []
  type: TYPE_IMG
- en: The other function arguments are more aesthetic in nature, and cover aspects
    such as font size, position of the labels and so on. For more details, refer to
    the function documentation.
  prefs: []
  type: TYPE_NORMAL
- en: '`Parallel charts with ggparallel()`'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Although I prefer spider charts from an aesthetic viewpoint, parallel charts
    can make it easier to spot trends across variables. This is especially true when
    there are many variables or observations in the dataset.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/f19182f291e102d07a14dcf5784de2a9.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/e6f9beed3783d43c64552ce3bdb9862f.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: Playing with the aestehtics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The above charts are just barebone version. Of course, they can be “pimped up”
    just like any other `ggplot2` chart. Below is an example of a `ggvanced` spider
    chart after a couple of alterations.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/571c0055f4b47d8d0bd09ce34770e38e.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: And of course, the accompanying code. Enjoy! :)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this post, I covered key functions and options of `ggvanced` — a package
    I made in response to a need for more advanced spider and parallel charts in R.
  prefs: []
  type: TYPE_NORMAL
- en: The text goes through a couple of examples for each function and then show how
    the final result can look like after some additional customization.
  prefs: []
  type: TYPE_NORMAL
- en: I hope that the package will be useful to you as it is to me. If you have requests
    for any more custom visualizations to be implemented in R, please drop a comment,
    and I will do my best to create a separate function for it. :)
  prefs: []
  type: TYPE_NORMAL
