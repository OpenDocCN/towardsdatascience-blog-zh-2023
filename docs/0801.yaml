- en: 'Optimization, Newton’s Method, & Profit Maximization: Part 3 — Applied Profit
    Maximization'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/optimization-newtons-method-profit-maximization-part-3-applied-profit-maximization-23a8c16167cd?source=collection_archive---------15-----------------------#2023-03-01](https://towardsdatascience.com/optimization-newtons-method-profit-maximization-part-3-applied-profit-maximization-23a8c16167cd?source=collection_archive---------15-----------------------#2023-03-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/d17a89745a40cf803080e2086b011c88.png)'
  prefs: []
  type: TYPE_IMG
- en: All Images by Author
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to apply optimization & econometric techniques to solve an applied
    profit maximization problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@jakepenzak?source=post_page-----23a8c16167cd--------------------------------)[![Jacob
    Pieniazek](../Images/2d9c6295d39fcaaec4e62f11c359cb29.png)](https://medium.com/@jakepenzak?source=post_page-----23a8c16167cd--------------------------------)[](https://towardsdatascience.com/?source=post_page-----23a8c16167cd--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----23a8c16167cd--------------------------------)
    [Jacob Pieniazek](https://medium.com/@jakepenzak?source=post_page-----23a8c16167cd--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6f0948d99b1c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptimization-newtons-method-profit-maximization-part-3-applied-profit-maximization-23a8c16167cd&user=Jacob+Pieniazek&userId=6f0948d99b1c&source=post_page-6f0948d99b1c----23a8c16167cd---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----23a8c16167cd--------------------------------)
    ·19 min read·Mar 1, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F23a8c16167cd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptimization-newtons-method-profit-maximization-part-3-applied-profit-maximization-23a8c16167cd&user=Jacob+Pieniazek&userId=6f0948d99b1c&source=-----23a8c16167cd---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F23a8c16167cd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptimization-newtons-method-profit-maximization-part-3-applied-profit-maximization-23a8c16167cd&source=-----23a8c16167cd---------------------bookmark_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: This article is the **3rd**, and final, in a 3 part series. In the [1st part](https://medium.com/towards-data-science/optimization-newtons-method-profit-maximization-part-1-basic-optimization-theory-ff7c5f966565),
    we studied basic optimization theory. Then, in [pt. 2](https://medium.com/towards-data-science/optimization-newtons-method-profit-maximization-part-2-constrained-optimization-theory-dc18613c5770),
    we extended this theory to constrained optimization problems. Now, in pt. 3, we
    will apply the optimization theory covered, as well as econometric and economic
    theory, to solve a profit maximization problem.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Suppose, as a data scientist working for your company, you are tasked with estimating
    the optimal amount of money to allocate towards different advertising channels
    that will maximize the overall profit of a certain product line. Furthermore,
    suppose you are given constraints on these allocation decisions, such as the maximum
    total spend you have to allocate and/or minimum amounts that have to spent in
    certain channels. In this article, we are going to combine the optimization theory
    covered in [part 1](https://medium.com/towards-data-science/optimization-newtons-method-profit-maximization-part-1-basic-optimization-theory-ff7c5f966565)
    and [part 2](https://medium.com/towards-data-science/optimization-newtons-method-profit-maximization-part-2-constrained-optimization-theory-dc18613c5770)
    of this series, along with additional economic and econometric theory to tackle
    a theoretical profit maximization problem of this sorts — which we will flesh
    out in more detail in this article.
  prefs: []
  type: TYPE_NORMAL
- en: The goal of this article is to tie together what we have learned thus far and
    my hope is to motivate and inspire readers on how to incorporate these techniques
    into an applied setting. It is not meant to be a comprehensive solution to the
    problem covered as nuances and idiosyncrasies can, of course, complicate theoretical
    examples. Furthermore, many of the techniques covered have much more optimized
    implementations in python via packages such as [pyomo](https://www.pyomo.org/),
    [SciPy](https://docs.scipy.org/doc/scipy/tutorial/optimize.html), etc. Nevertheless,
    I hope to provide a strong framework for constructing applied optimization problems.
    Let’s dive into it!
  prefs: []
  type: TYPE_NORMAL
- en: '*In* [*part 1*](https://medium.com/towards-data-science/optimization-newtons-method-profit-maximization-part-1-basic-optimization-theory-ff7c5f966565)*,
    we covered basic optimization theory — including 1) setting up and solving a simple
    single variable optimization problem analytically, 2) iterative optimization schemes
    — namely, gradient descent & Newton’s Method, and 3) implementing Newton’s method
    by hand and in python for a multi-dimensional optimization problem. In* [*part
    2*](https://medium.com/towards-data-science/optimization-newtons-method-profit-maximization-part-2-constrained-optimization-theory-dc18613c5770)*,
    we covered constrained optimization theory — including 1) incorporating equality
    constraints and 2) incorporating inequality constraints into our optimization
    problems and solving them via Newton’s Method. This article is designed to be
    accessible for those who are already familiar with the content covered in* [*part
    1*](https://medium.com/towards-data-science/optimization-newtons-method-profit-maximization-part-1-basic-optimization-theory-ff7c5f966565)
    *and* [*part 2*](https://medium.com/towards-data-science/optimization-newtons-method-profit-maximization-part-2-constrained-optimization-theory-dc18613c5770)*.*'
  prefs: []
  type: TYPE_NORMAL
- en: Optimization Theory ([Part 1](https://medium.com/towards-data-science/optimization-newtons-method-profit-maximization-part-1-basic-optimization-theory-ff7c5f966565)
    & [Part 2](https://medium.com/towards-data-science/optimization-newtons-method-profit-maximization-part-2-constrained-optimization-theory-dc18613c5770)
    Recap)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A mathematical optimization problem can be formulated abstractly as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/91d0602859b3778af388eb855d77cd2a.png)'
  prefs: []
  type: TYPE_IMG
- en: (1)
  prefs: []
  type: TYPE_NORMAL
- en: 'where we choose real values of the vector **x** that minimize the *objective
    function* *f*(**x**) (or maximize -*f*(**x**)) subject to the *inequality constraints*
    *g*(**x**) and *equality constraints* *h*(**x**). In [part 2](/optimization-newtons-method-profit-maximization-part-2-constrained-optimization-theory-dc18613c5770),
    we discussed how to incorporate these constraints directly into our optimization
    problem. Notably, using Lagrange Multipliers and Logarithmic Barrier functions
    we can construct a new *objective function* ***O***(**x, Λ*,*** *ρ*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/46185c03e54a45fd89007a0ab112edb1.png)'
  prefs: []
  type: TYPE_IMG
- en: (2) Generalizable function for constrained optimization problems
  prefs: []
  type: TYPE_NORMAL
- en: 'where **Λ** is the vector of Lagrange multipliers associated with each *equality
    constraints* *h*(**x**) and*ρ* is the barrier parameter associated with all of
    the *inequality constraints* *g*(**x**). We can then solve this new *objective
    function* iterating by choose a starting value *ρ* (*note that large functional
    values of the objective function will require much larger starting values of ρ
    to scale the penalization*)*,* optimize the new objective function evaluated at
    *ρ* using Newton’s method iterative scheme, then update *ρ* by slowly decreasing
    it (*ρ* → 0), and repeat until convergence — where Newton’s Method iterative scheme
    is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/aeea601b1cde8c66b5fd09c5d76f1710.png)'
  prefs: []
  type: TYPE_IMG
- en: (3) Newton’s Method Iterative Scheme
  prefs: []
  type: TYPE_NORMAL
- en: 'where **H**(**x**)and **∇***f*(**x**) denote the Hessian and gradient ofour
    *objective function* ***O***(**x, Λ*,*** *ρ*), respectively. Convergence is obtained
    when we reach convergence across one or more of the following criteria:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/855991698a9b3c03d179ffcba7c2ef8c.png)'
  prefs: []
  type: TYPE_IMG
- en: (4) Convergence Criteria for Iterative Optimization Schemes
  prefs: []
  type: TYPE_NORMAL
- en: In python, utilizing [SymPy](https://www.sympy.org/en/index.html), we have 4
    functions. A function that obtains the gradient of our SymPy function, the Hessian
    of our SymPy function, solves unconstrained optimization problem via Newton’s
    method, and solves a constrained optimization problem via Newton’s method according
    to the generalization eq. (2) (see [part 1](https://medium.com/towards-data-science/optimization-newtons-method-profit-maximization-part-1-basic-optimization-theory-ff7c5f966565)
    and [part 2](https://medium.com/towards-data-science/optimization-newtons-method-profit-maximization-part-2-constrained-optimization-theory-dc18613c5770)
    of series for more in-depth coverage of this material). See the appendix for these
    functions.
  prefs: []
  type: TYPE_NORMAL
- en: 'To solve a constrained optimization problem, we can run the following code
    (Make sure starting values are in the feasible range of inequality constraints!):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'With the corresponding output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/50feae3f14b28f95d2f2da062f6e5c6d.png)![](../Images/5965f76b2276c8b3ecffa41085fc5f14.png)'
  prefs: []
  type: TYPE_IMG
- en: If the material above felt foreign or you need a more rigorous recap, then I
    recommend taking a look at [part 1](https://medium.com/towards-data-science/optimization-newtons-method-profit-maximization-part-1-basic-optimization-theory-ff7c5f966565)
    and [part 2](/optimization-newtons-method-profit-maximization-part-2-constrained-optimization-theory-dc18613c5770)
    of this series which will provide a more in-depth survey of the material above.
    For the remainder of this article, we will first discuss basic profit maximization
    & econometric theory and then move into solving the theoretical example.
  prefs: []
  type: TYPE_NORMAL
- en: Applied Profit Maximization
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Suppose we have a $100,000 advertising budget and all of it must be spent.
    We are tasked with choosing the optimal amount of this budget to allocate towards
    two types of advertisement channels (digital ads and television ads) that maximize
    the overall profit for a particular product line. Furthermore, suppose that we
    must allocate at a minimum of $20k to television advertising and $10k to digital
    advertising.*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Theoretical Formulation**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s now mathematically formulate the profit maximization problem we seek
    to solve:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/551a5821664dd68bc5bed9994ed29576.png)'
  prefs: []
  type: TYPE_IMG
- en: (5) [Link](https://math.embed.fun/8uidE7jJM8PZVuegURC75K)
  prefs: []
  type: TYPE_NORMAL
- en: 'where *π(*⋅)denotes the profit function, *δ* denotes digital ad spend, *τ*
    denotes television ad spend, and (⋅) is a placeholder for additional variables.​
    Note that we are minimizing the negative of *π(*⋅) which is equivalent to maximizing
    *π(*⋅). The profit function is defined as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0a5b5ecc92b703ba2c125df45da77799.png)'
  prefs: []
  type: TYPE_IMG
- en: (6) [Link](https://math.embed.fun/nUyUXLuje8daREdpVGejco)
  prefs: []
  type: TYPE_NORMAL
- en: 'where *p* denotes the price, *q(δ, τ,* ⋅) denotes the quantity demanded function,
    and C*(q(⋅), δ, τ)* denotes the cost function which, intuitively, is a direct
    function of the quantity (if we make more it will cost more to produce) and how
    much we spend on advertising. The cost function can also take on additional inputs,
    but for the sake of demonstration we will keep it as a function of quantity and
    advertising costs. Notice that our choices of *δ* and *τ* impact the profit function
    directly through theirimpact of quantity demanded and the cost function. In order
    to add tractability to our optimization problem, we will need to use econometric
    techniques to estimate our quantity function. Once we have specified our cost
    function and estimated the quantity function, we can then solve our optimization
    problem as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/da222d55a1b6237d33e88b62282b9d4b.png)'
  prefs: []
  type: TYPE_IMG
- en: (7) [Link](https://math.embed.fun/adaiCXKX3TzPu72P89yg2E)
  prefs: []
  type: TYPE_NORMAL
- en: 'where *q_hat* is our estimated econometric model for quantity demanded. Before
    we lay out the econometric specification of our quantity model, it is necessary
    that we discuss an important note regarding the required assumptions for this
    optimization problem to prove tractable. It is imperative that we obtain the *causal
    estimates* of digital and television advertising on the quantity demanded. In
    the economists jargon, digital and television advertising need be *exogenous*
    in the econometric model*.* That is, they are uncorrelated with the error in the
    model. Exogeneity can be achieved in two ways: 1) We have the correct structural
    specification of the econometric model for the impact of digital and television
    advertising on quantity demanded (i.e., we include all of the relevant variables
    that are correlated with both quantity demanded and digital & television advertising
    spend) *or* 2) We have random variation of digital & television advertising spend
    (this can be achieved from randomly varying spend over time to see how demand
    responds).'
  prefs: []
  type: TYPE_NORMAL
- en: Intuitively, exogeneity is required because it is necessary to capture the causal
    impact of changing advertising spend — that is, what will happen, on average,
    if we change the values of the advertising spend. If the effect we estimate is
    *not* causal then the changes we make in advertising spend will *not* correspond
    to the true change in quantity demanded. Note the model need not make the best
    predictions for quantity demanded, but rather accurately capture the causal relationship.
    See my [prior article](https://medium.com/towards-data-science/controlling-for-x-9cb51652f7ad)
    that discusses the exogeneity assumption in more depth.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s now suppose we specify the following econometric model for quantity demanded
    indexed by time *t*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a541fd2c7dca42039a2484286c4a780d.png)'
  prefs: []
  type: TYPE_IMG
- en: (8) [Link](https://math.embed.fun/ivouwfcw3QYx3ojZMXNt6n)
  prefs: []
  type: TYPE_NORMAL
- en: where *β* and *γ* are the estimates of the impact of the natural log of digital
    ad spend, *δ,* and television ad spend, *τ*, respectively. Additionally, *α* is
    our intercept, *ϕ*1 and *ϕ2* are estimates of the [autoregressive](https://en.wikipedia.org/wiki/Autoregressive_model)
    components of quantity demanded, ***S*** denotes seasonality, **X** is the set
    of all relevant covariates and lagged covariates along with the matrix of their
    coefficient estimates **Ω**, and*ϵ* is the error term*.* Furthermore, assume that
    digital and television advertising satisfy the exogeneity assumption *conditional*
    on **X**, ***S***, and the autoregressive components within our model. That is,
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/22a0120665e2fa3bdb6da7fc1bbde87d.png)'
  prefs: []
  type: TYPE_IMG
- en: (9) [Link](https://math.embed.fun/qaR3eKYoxckpQ16jLtVR2R)
  prefs: []
  type: TYPE_NORMAL
- en: 'Why the natural log of digital and television ad spend you may ask? This is
    by no means a required nor a definitive decision in this context, but I am seeking
    to demonstrate how variable transformations can capture hypotheses about the relationship
    between our choice variables and the outcomes of interest. In our case, suppose
    we hypothesize that the impact on ad spend increases sharply initially, but gradually
    levels out (ie, the law of diminishing returns). This is exactly what the logarithm
    transformation will allow us to model. Observe:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/422c7918c3906d59f06da82c68775485.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Note that the cost functional form can generally be more easily known internally.
    Thus, let’s also specify the functional form of our cost function:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/43b4263219befa1ccb0fc56aaf5b03f6.png)'
  prefs: []
  type: TYPE_IMG
- en: (10) [Link](https://math.embed.fun/bmuMitXmNJ8yHcHiLp2QuY)
  prefs: []
  type: TYPE_NORMAL
- en: Here we can see that we have a cost *ζ* associated with each unit produced and
    this cost is discounted as we produce more (think a discount for larger contracts
    or [economies of scale](https://en.wikipedia.org/wiki/Economies_of_scale)). We
    also simply sum digital ad spend and television ad spend into our total cost.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have developed the theoretical basis for our econometric profit
    maximization problem, let’s simulate some data and take this to python!
  prefs: []
  type: TYPE_NORMAL
- en: '**Data Simulation (Optional)**'
  prefs: []
  type: TYPE_NORMAL
- en: Note this section can be skipped without any loss of the primary content.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s first simulate monthly data over 10 years for quantity demanded, where
    the following variables included are as follows :'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Note that we include lag variables because it is highly plausible that today’s
    quantity demanded is a function of lagged values for many of the variables. We
    also control for seasonality effects by incorporation dummy variables for each
    month (this is one of many ways to incorporate seasonality into the model). We
    then specify the parameters associated with each variable as (note that these
    parameters are specifiedin the same order as the columns of the dataframe!):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'We can then simulate our econometric specification (eq. 8) of quantity demanded
    by running `quantity_demanded = np.array(df) @ params`. However, note that we
    are missing the autoregressive components, thus we also want quantity demanded
    to follow an [autoregressive process](https://en.wikipedia.org/wiki/Autoregressive_model)
    as mentioned above. That is, quantity demanded is also a function of its own lagged
    values. We include 2 lags here (AR(2) process) with respective coefficients *ϕ1*
    and *ϕ2*. Note, we can simulate this with initial conditions *q0* and *q-1* via
    the following system:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3243ebff8fe5a9cc6e1f9ad1ef350710.png)![](../Images/2cf576fa7a1f88525655c9e7e7aab78e.png)'
  prefs: []
  type: TYPE_IMG
- en: (11) [Link](https://math.embed.fun/mwCEwVTYD8Q824KTYYCyon)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**Econometric Estimation & Optimization**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s first use our framework in eq. (2) to transform our constrained optimization
    problem in eq. (7) to one in which we can solve utilizing our function `constrained_newton_method()`
    from above:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9fa50e97034f048af9d07293672ff031.png)'
  prefs: []
  type: TYPE_IMG
- en: (12) [Link](https://math.embed.fun/v1egYNfHrCeA6fX6PMv8vX)
  prefs: []
  type: TYPE_NORMAL
- en: 'As discussed before, we need to estimate our quantity demanded, *q_hat.* Let’s
    take a look at what our quantity demanded looks like over the 10 years simulated:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5840cecb9e6365ed27c49db279673b84.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We can clearly see some seasonality occurring towards the end of the years
    and it appears we are dealing with a [stationary process](https://en.wikipedia.org/wiki/Stationary_process)
    (this is all by construction). Now suppose that we have the following observed
    variables:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e2c2697ee4fe4fdd69263b7c1428589d.png)'
  prefs: []
  type: TYPE_IMG
- en: where, in eq. 8, our econometric specification, *quantity_demanded* is our outcome
    *q*, *log_digital_advertising* is our ln(δ), *log_television_advertising* is our
    ln(τ), *constant* is our *α*, *quantity_demanded_lag1* & *quantity_demanded_lag2*
    are our autoregressive components *q_t-1* & *q_t-2*, and the remainder are our
    additional covariates **X** including seasonality ***S***.
  prefs: []
  type: TYPE_NORMAL
- en: Now, with this data, we seek to estimate our econometric specification in eq.
    8\. We can estimate this structural model using OLS. For this we will use [statsmodels](https://www.statsmodels.org/stable/index.html#).
  prefs: []
  type: TYPE_NORMAL
- en: 'A great exercise would be to solve the linear regression using the Newton’s
    method code we have constructed and compare the results to statsmodels. Hint:
    the objective in a linear regression is to minimize the [Residual Sum of Squares](https://en.wikipedia.org/wiki/Residual_sum_of_squares).
    Note that the code we have written is by no means an efficient approach to solving
    a linear regression, but this is more oriented towards illustrating optimization
    theory in a model fitting (regression) context. Code for this will be provided
    at the end of the article!'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Note that we drop the first 2 observations as these are our first two lags
    and we drop July as a reference month:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/b35e2ba514da815113bc072eedf0c732.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now we have our estimated econometric specification for quantity demanded!
    A few observations:'
  prefs: []
  type: TYPE_NORMAL
- en: An increase in log digital ad spend and log television ad spend are associated
    with an increase in quantity demand
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: An increase price is associated with a decrease in quantity demand (this is
    expected behavior)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We see clear seasonality with increasing demand during Sep-Dec, this is consistent
    with our time series above
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We see that the first lag of quantity demanded is predictive of the present,
    in favor of autoregressive process
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*The results above can be verified and compared with the data construction
    above in the data simulation section*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let’s now specify our symbolic variables for our optimization problem (δ, τ,
    λ, and ρ), the values of our present variables at time *t*, and grab the lagged
    values from our data. We will then have everything necessary to construct our
    optimization problem:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'where our estimated quantity demanded from eq. 8 becomes:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b5015b545d08938e9ebf90ffd20382d6.png)'
  prefs: []
  type: TYPE_IMG
- en: Estimated Quantity Demanded Function
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we can construct our revenue, cost, and put them together to construct
    our profit function. Here our cost to produce each unit is $140 base and is discounted
    by $0.0001 for each additional unit produced:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/44c0cf47c361e7b63044c2df87cd4886.png)'
  prefs: []
  type: TYPE_IMG
- en: Estimated Profit Function
  prefs: []
  type: TYPE_NORMAL
- en: 'Plotting our profit as a function of digital ad spend and television ad spend,
    *π(*δ, τ):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6d167ea875235cbf343a4e4693ece278.png)'
  prefs: []
  type: TYPE_IMG
- en: Let’s now solve our optimization problem as formulated in eq. 12 via python
    using the optimization theory that we have learned from [part 1](https://medium.com/towards-data-science/optimization-newtons-method-profit-maximization-part-1-basic-optimization-theory-ff7c5f966565)
    and [part 2](https://medium.com/towards-data-science/optimization-newtons-method-profit-maximization-part-2-constrained-optimization-theory-dc18613c5770)
    of this series. *Note that the extremely high value of ρ is to account for the
    fact that the values of our objective function are extremely large thus we need
    to make sure penalization is large enough to avoid “jumping” out of constraints.*
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'with the corresponding output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ad878086b18364caf3f9b53ed3a77a39.png)![](../Images/755b734a39337c1d27087734dd0d9022.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Thus, our solution is to spend ~$66,831 on digital ad spend and ~$33,169 on
    television ad spend. These values correspond to:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/3d4f60e0c1fde63625410dd5dc9fa5e8.png)'
  prefs: []
  type: TYPE_IMG
- en: And there you have it!
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The profit maximization problem in this final article was by no means meant
    to be an entirely comprehensive solution. In fact, we did not need to even use
    Newton’s Method for such a simple optimization problem! But, as optimization problems
    increase in complexity and dimensionality, which is quite common in the real world,
    these tools become increasingly relevant. The goal was to take what we have learned
    in [part 1](https://medium.com/towards-data-science/optimization-newtons-method-profit-maximization-part-1-basic-optimization-theory-ff7c5f966565)
    and [part 2](/optimization-newtons-method-profit-maximization-part-2-constrained-optimization-theory-dc18613c5770)
    of this series and take a fun exploration into one of infinitely many applications
    of optimization theory.
  prefs: []
  type: TYPE_NORMAL
- en: If you have made it up to this point, thank you for taking time out of your
    day to read my article and I want to extend an extra thank you to those individuals
    that have read through all 3 parts of this series. I hope at this point you feel
    very comfortable with basic multi-dimensional optimization theory and extensions
    involving constraints on the objective function. As always, I hope you have enjoyed
    reading this as much as I enjoyed writing it. Please let me know what you thought
    of this article and the series as whole!
  prefs: []
  type: TYPE_NORMAL
- en: '**Bonus — Numerical and Analytical Solutions to Linear Regression**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As promised above, this section will provide code for solving the linear regression
    problem above utilizing Newton’s method and we will compare this result to the
    analytical solution (the one utilized by statsmodels). Recall that the objective
    for solving the linear regression is to minimize the [Residual Sum of Squares](https://en.wikipedia.org/wiki/Residual_sum_of_squares).
    That is, in terms of matrices,
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/aea487e9476419d077057c62aed6cd1a.png)'
  prefs: []
  type: TYPE_IMG
- en: (A1) Minimize Residual Sum of Squares
  prefs: []
  type: TYPE_NORMAL
- en: 'Thus, using our Newton method function and framework, we have:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'with the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ed65415b554d6469ad88913c4f5758c6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next we will compute the analytical solution. That is, if we take the derivative
    of eq. (A1*)* and set it equal to zero and solve for *β*, we obtain:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7fe14394521bb3091ef6ec2b1d8222b2.png)'
  prefs: []
  type: TYPE_IMG
- en: (A2) OLS Analytical Solution
  prefs: []
  type: TYPE_NORMAL
- en: 'Coding this, we have *(we also provide analytical standard errors to compare
    to statsmodels, but do not dive into this further — see the OLS* [*wiki page*](https://en.wikipedia.org/wiki/Ordinary_least_squares#Estimation)
    *if you are interested)*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Comparing all the results with statsmodels:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/d786ea544bc60459340b8c3e5c09f0cc.png)'
  prefs: []
  type: TYPE_IMG
- en: Appendix — Code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '*Access all the code via this GitHub Repo:* [https://github.com/jakepenzak/Blog-Posts](https://github.com/jakepenzak/Blog-Posts)'
  prefs: []
  type: TYPE_NORMAL
- en: '*I appreciate you reading my post! My posts on Medium seek to explore real-world
    and theoretical applications utilizing* ***econometric*** *and* ***statistical/machine
    learning*** *techniques. Additionally, I seek to provide posts on the theoretical
    underpinnings of various methodologies via theory and simulations. Most importantly,
    I write to learn! I hope to make complex topics slightly more accessible to all.
    If you enjoyed this post, please consider* [***following me on Medium***](https://medium.com/@jakepenzak)*!*'
  prefs: []
  type: TYPE_NORMAL
