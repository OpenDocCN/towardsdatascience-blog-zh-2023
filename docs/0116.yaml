- en: 'How To Fix TypeError: ObjectId Is Not JSON Serializable'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/pymongo-cursor-to-json-9f770740375a?source=collection_archive---------3-----------------------#2023-01-07](https://towardsdatascience.com/pymongo-cursor-to-json-9f770740375a?source=collection_archive---------3-----------------------#2023-01-07)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Converting a mongo cursor into JSON object in Python
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://gmyrianthous.medium.com/?source=post_page-----9f770740375a--------------------------------)[![Giorgos
    Myrianthous](../Images/ff4b116e4fb9a095ce45eb064fde5af3.png)](https://gmyrianthous.medium.com/?source=post_page-----9f770740375a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----9f770740375a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----9f770740375a--------------------------------)
    [Giorgos Myrianthous](https://gmyrianthous.medium.com/?source=post_page-----9f770740375a--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F76c21e75463a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpymongo-cursor-to-json-9f770740375a&user=Giorgos+Myrianthous&userId=76c21e75463a&source=post_page-76c21e75463a----9f770740375a---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----9f770740375a--------------------------------)
    ·4 min read·Jan 7, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F9f770740375a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpymongo-cursor-to-json-9f770740375a&user=Giorgos+Myrianthous&userId=76c21e75463a&source=-----9f770740375a---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9f770740375a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpymongo-cursor-to-json-9f770740375a&source=-----9f770740375a---------------------bookmark_footer-----------)![](../Images/eaab2de46fd1a4afdef1ebe34e4c49af.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Ciprian Boiciuc](https://unsplash.com/@ciprian?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/TrNSWatUW5g?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: Welcome to our tutorial on serializing PyMongo cursors into JSON. In this article,
    we will cover how to properly handle `ObjectId` and `datetime` objects, as well
    as any other object, using a custom `JSONEncoder`.
  prefs: []
  type: TYPE_NORMAL
- en: One common task when working with PyMongo is the need to serialize data for
    storage or for transfer over a network. In this tutorial, we will look at how
    to serialize a PyMongo cursor, which is a common data structure used to store
    results from a MongoDB query, into JSON format.
  prefs: []
  type: TYPE_NORMAL
- en: 'A commonly reported error when doing so, is the following `TyperError`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: We will also delve into how to properly handle complex data types such as `ObjectId`
    and datetime objects, which cannot be serialized directly into JSON. We will show
    you how to use a custom `JSONEncoder` to properly handle these objects and any
    other custom object types you may have in your PyMongo cursor.
  prefs: []
  type: TYPE_NORMAL
- en: So if you want to learn how to serialize PyMongo cursors into JSON and handle
    complex data types, keep reading!
  prefs: []
  type: TYPE_NORMAL
- en: Creating a custom `JSONEncoder`
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
