- en: 'Hands-on Generative AI with GANs using Python: DCGAN'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/hands-on-generative-ai-with-gans-using-python-dcgan-6077f0067ac3?source=collection_archive---------11-----------------------#2023-04-04](https://towardsdatascience.com/hands-on-generative-ai-with-gans-using-python-dcgan-6077f0067ac3?source=collection_archive---------11-----------------------#2023-04-04)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/a663051d751ad0481e8cc825db37cbd7.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Vinicius "amnx" Amano](https://unsplash.com/@viniciusamano?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Improving synthetic image generation with convolutional layers in PyTorch
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@marcellopoliti?source=post_page-----6077f0067ac3--------------------------------)[![Marcello
    Politi](../Images/484e44571bd2e75acfe5fef3146ab3c2.png)](https://medium.com/@marcellopoliti?source=post_page-----6077f0067ac3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----6077f0067ac3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----6077f0067ac3--------------------------------)
    [Marcello Politi](https://medium.com/@marcellopoliti?source=post_page-----6077f0067ac3--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7390355d40fe&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhands-on-generative-ai-with-gans-using-python-dcgan-6077f0067ac3&user=Marcello+Politi&userId=7390355d40fe&source=post_page-7390355d40fe----6077f0067ac3---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----6077f0067ac3--------------------------------)
    ·5 min read·Apr 4, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F6077f0067ac3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhands-on-generative-ai-with-gans-using-python-dcgan-6077f0067ac3&user=Marcello+Politi&userId=7390355d40fe&source=-----6077f0067ac3---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F6077f0067ac3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhands-on-generative-ai-with-gans-using-python-dcgan-6077f0067ac3&source=-----6077f0067ac3---------------------bookmark_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In my [previous article](https://medium.com/towards-data-science/hands-on-generative-ai-with-gans-using-python-image-generation-9a62e591c7c6),
    we have seen how to **use GANs to generate images** of the type of MNIST dataset.
    We achieved good results and succeeded in our intent. However, the two networks
    G (generator) and D (discriminator) were composed mostly of dense layers. At this
    point, you will know that usually when working with images we use CNNs (convolutional
    neural networks) since they use convolutional layers. So let us see how to **improve
    our GANs by using** these types of layers. GANs that use **convolutional layers
    are called DCGANs**.
  prefs: []
  type: TYPE_NORMAL
- en: What is transposed deconvolution?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Typically when we work with CNNs we are used to working with convolutional layers.
    In this case, though we also need the “inverse” operation the transposed deconvolution,
    sometimes also called deconvolution.
  prefs: []
  type: TYPE_NORMAL
- en: '**This operation allows us to upsample the feature space**. For example, if
    we have an image represented by a 5x5 grid we can “enlarge” this grid to make
    it 28x28.'
  prefs: []
  type: TYPE_NORMAL
- en: What you do in principle is quite simple, you **put zeros inside the elements
    of the initial feature map to enlarge it and then apply a normal convolution**…
  prefs: []
  type: TYPE_NORMAL
