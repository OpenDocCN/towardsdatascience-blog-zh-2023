- en: Create Your Own Stable Diffusion UI on AWS in Minutes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 AWS 上快速创建你自己的稳定扩散 UI
- en: 原文：[https://towardsdatascience.com/create-your-own-stable-diffusion-ui-on-aws-in-minutes-35480dfcde6a?source=collection_archive---------0-----------------------#2023-01-03](https://towardsdatascience.com/create-your-own-stable-diffusion-ui-on-aws-in-minutes-35480dfcde6a?source=collection_archive---------0-----------------------#2023-01-03)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/create-your-own-stable-diffusion-ui-on-aws-in-minutes-35480dfcde6a?source=collection_archive---------0-----------------------#2023-01-03](https://towardsdatascience.com/create-your-own-stable-diffusion-ui-on-aws-in-minutes-35480dfcde6a?source=collection_archive---------0-----------------------#2023-01-03)
- en: Deploy a text-to-image web app with just one command
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用一个命令部署文本到图像的 web 应用
- en: '[](https://heiko-hotz.medium.com/?source=post_page-----35480dfcde6a--------------------------------)[![Heiko
    Hotz](../Images/d08394d46d41d5cd9e76557a463be95e.png)](https://heiko-hotz.medium.com/?source=post_page-----35480dfcde6a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----35480dfcde6a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----35480dfcde6a--------------------------------)
    [Heiko Hotz](https://heiko-hotz.medium.com/?source=post_page-----35480dfcde6a--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://heiko-hotz.medium.com/?source=post_page-----35480dfcde6a--------------------------------)[![Heiko
    Hotz](../Images/d08394d46d41d5cd9e76557a463be95e.png)](https://heiko-hotz.medium.com/?source=post_page-----35480dfcde6a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----35480dfcde6a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----35480dfcde6a--------------------------------)
    [Heiko Hotz](https://heiko-hotz.medium.com/?source=post_page-----35480dfcde6a--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F993c21f1b30f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-your-own-stable-diffusion-ui-on-aws-in-minutes-35480dfcde6a&user=Heiko+Hotz&userId=993c21f1b30f&source=post_page-993c21f1b30f----35480dfcde6a---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----35480dfcde6a--------------------------------)
    ·8 min read·Jan 3, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F35480dfcde6a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-your-own-stable-diffusion-ui-on-aws-in-minutes-35480dfcde6a&user=Heiko+Hotz&userId=993c21f1b30f&source=-----35480dfcde6a---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F993c21f1b30f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-your-own-stable-diffusion-ui-on-aws-in-minutes-35480dfcde6a&user=Heiko+Hotz&userId=993c21f1b30f&source=post_page-993c21f1b30f----35480dfcde6a---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----35480dfcde6a--------------------------------)
    ·8 分钟阅读·2023年1月3日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F35480dfcde6a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-your-own-stable-diffusion-ui-on-aws-in-minutes-35480dfcde6a&user=Heiko+Hotz&userId=993c21f1b30f&source=-----35480dfcde6a---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F35480dfcde6a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-your-own-stable-diffusion-ui-on-aws-in-minutes-35480dfcde6a&source=-----35480dfcde6a---------------------bookmark_footer-----------)![](../Images/b851f45536bb5603bc1e28d8969d743e.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F35480dfcde6a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-your-own-stable-diffusion-ui-on-aws-in-minutes-35480dfcde6a&source=-----35480dfcde6a---------------------bookmark_footer-----------)![](../Images/b851f45536bb5603bc1e28d8969d743e.png)'
- en: Image by author — created with Stable Diffusion
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供 — 使用稳定扩散创建
- en: What is this about?
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这是什么内容？
- en: Stable Diffusion (SD) has quickly become one of the most popular text-to-image
    (a.k.a. “AI Art Generation”) models in 2022\. One key factor contributing to its
    success is that it has been made available as open-source software. This spawned
    a vibrant community that quickly built tools to make SD more accessible to anyone
    interested in it, regardless of their technical knowledge.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 稳定扩散（SD）在 2022 年迅速成为最受欢迎的文本生成图像（即“AI 艺术生成”）模型之一。成功的一个关键因素是它被作为开源软件发布。这促使一个充满活力的社区迅速建立工具，使
    SD 对任何对其感兴趣的人更加可及，无论其技术知识如何。
- en: One of those tools is the simple yet powerful web interface [stable-diffusion-webui
    by Automatic1111](https://github.com/AUTOMATIC1111/stable-diffusion-webui). It
    allows us to use all the features of SD without any coding and it is also open-source,
    which means anyone can download this Web UI as well as the SD model and deploy
    them anywhere they want. The challenge, however, is that SD still requires GPU
    power to run, lest we want to wait minutes for the generation of one image. And
    many of us don’t own GPUs powerful enough to run the model.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这些工具之一是简单而强大的 Web 界面 [stable-diffusion-webui by Automatic1111](https://github.com/AUTOMATIC1111/stable-diffusion-webui)。它允许我们在无需编程的情况下使用
    SD 的所有功能，并且它还是开源的，这意味着任何人都可以下载这个 Web UI 以及 SD 模型，并在任何他们想要的地方进行部署。然而，挑战在于 SD 仍然需要
    GPU 功率来运行，否则我们必须等待几分钟才能生成一张图像。而且我们许多人并不拥有足够强大的 GPU 来运行该模型。
- en: Thanks to Cloud Computing we don’t have to spend a small fortune on a GPU, we
    can just “rent” one instead. So, in this tutorial we will deploy the Automatic1111
    Web UI on an AWS EC2 instance equipped with a GPU powerful enough to run Stable
    Diffusion. And we will do this with just one command using an [AWS CloudFormation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/Welcome.html)
    template to set up all the infrastructure required.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 多亏了云计算，我们无需花费巨资购买 GPU，而是可以“租用”一个。因此，在本教程中，我们将部署 Automatic1111 Web UI 到配备足够强大
    GPU 以运行稳定扩散的 AWS EC2 实例上。我们将通过一个命令使用 [AWS CloudFormation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/Welcome.html)
    模板来设置所需的所有基础设施。
- en: As always you will find the [code](https://github.com/marshmellow77/stable-diffusion-webui)
    for this tutorial in my GitHub account.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 与往常一样，你可以在我的 GitHub 账户中找到本教程的 [代码](https://github.com/marshmellow77/stable-diffusion-webui)。
- en: Why is it important?
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么这很重要？
- en: Having the Stable Diffusion model and even Automatic’s Web UI available as open-source
    is an important step to democratising access to state-of-the-art AI tools. But
    it’s not sufficient because the GPU requirements to run these models are still
    prohibitively expensive for most consumers. The GPUs required to run these AI
    models can easily exceed $2,000.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有稳定扩散模型甚至是 Automatic 的 Web UI 作为开源工具，是民主化先进 AI 工具访问的重要一步。但这还不够，因为运行这些模型所需的
    GPU 对大多数消费者来说依然昂贵。运行这些 AI 模型所需的 GPU 价格很容易超过 $2,000。
- en: This tutorial shows how we can get started with just $0.53 per hour, which is
    the on-demand price for a *g4dn.xlarge* instance on AWS. It lets us use an NVIDIA
    T4 GPU with 16 GB of VRAM. That means we can run the app for a few hours to try
    it out and generate the images we want and then shut down the EC2 instance and
    not pay any more than what we used it for. And all of this with just one click
    of a button, no coding or Linux experience required, thanks to the AWS CloudFormation
    template.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程展示了如何以每小时仅 $0.53 的价格入门，这就是 AWS 上 *g4dn.xlarge* 实例的按需价格。它允许我们使用带有 16 GB VRAM
    的 NVIDIA T4 GPU。这意味着我们可以运行应用程序几个小时以进行试用，并生成我们想要的图像，然后关闭 EC2 实例，不需要支付超过实际使用时间的费用。而且这一切只需点击一个按钮，无需编程或
    Linux 经验，这得益于 AWS CloudFormation 模板。
- en: '*One disclaimer before we get started: I’m obviously biased towards AWS since
    I work there. But the key message I want you to take away from this tutorial is
    that state-of-the-art AI is more accessible and affordable than ever before through
    cloud computing, no matter which provider you end up choosing.*'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*在开始之前需要说明一点：由于我在 AWS 工作，我显然对 AWS 有偏见。但我希望你从本教程中获得的核心信息是，通过云计算，先进的 AI 比以往任何时候都更具可及性和实惠性，无论你最终选择哪个服务提供商。*'
- en: Prerequisites
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 先决条件
- en: To follow this tutorial we will need an AWS account, and that’s pretty much
    the only prerequisite. Having the [AWS Command Line Interface (CLI)](https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html)
    installed on your local machine makes things even easier, but I will also demonstrate
    how to follow the tutorial without it and just using the AWS console instead.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 跟随本教程，我们需要一个 AWS 账户，这几乎是唯一的先决条件。在本地机器上安装 [AWS 命令行界面 (CLI)](https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html)
    会使事情变得更简单，但我也会演示如何在没有 CLI 的情况下仅使用 AWS 控制台来跟随教程。
- en: Quickstart Guide
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 快速入门指南
- en: 'As mentioned in the intro we will be using a CloudFormation (CF) template to
    set everything up with just one comand. After launching the template it will take
    15–20 minutes until the app is ready, so here is my tip: Launch the template right
    now and then come back to this blog post to dive deeper into what is actually
    happening in the background 😉'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如引言中提到的，我们将使用 CloudFormation (CF) 模板通过一个命令来设置所有内容。启动模板后，应用程序需要 15–20 分钟才会准备好，所以这里有个提示：现在就启动模板，然后返回到这篇博客文章中，*深入了解*实际发生的背景情况
    😉
- en: Launching the app in AWS CLI
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 AWS CLI 中启动应用程序
- en: Copy the [CF template](https://raw.githubusercontent.com/marshmellow77/stable-diffusion-webui/master/sd-web-ui-cf-template.yaml)
    (or, alternatively, clone the entire [repo](https://github.com/marshmellow77/stable-diffusion-webui))
    and run the command below on your local machine. This will create a CF stack called
    “*sd-webui-stack*” in your AWS account.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 复制 [CF 模板](https://raw.githubusercontent.com/marshmellow77/stable-diffusion-webui/master/sd-web-ui-cf-template.yaml)（或者，克隆整个
    [仓库](https://github.com/marshmellow77/stable-diffusion-webui)）并在你的本地机器上运行下面的命令。这将会在你的
    AWS 账户中创建一个名为“*sd-webui-stack*”的 CF 堆栈。
- en: Launching the app in the AWS console
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 AWS 控制台中启动应用程序
- en: 'In the AWS console, navigate to the CloudFormation section, and choose “Create
    Stack -> With new resources”:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在 AWS 控制台中，导航到 CloudFormation 部分，选择“创建堆栈 -> 使用新资源”：
- en: '![](../Images/33425db65d459db3c5e47739c6078876.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/33425db65d459db3c5e47739c6078876.png)'
- en: Image by author
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: 'In the following dialogue, choose “Template is ready” and “Upload a template
    file”:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的对话框中，选择“模板已准备好”和“上传模板文件”：
- en: '![](../Images/1733866e3a8f514d0c34444e97c5ad55.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1733866e3a8f514d0c34444e97c5ad55.png)'
- en: Image by author
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Choose the CF template file from the repo to upload, name the stack “*sd-webui-stack*”,
    leave the default settings in the following dialogues, and click “Submit” in the
    last dialogue. This will create the stack with all the required resources in your
    AWS account.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 从仓库中选择 CF 模板文件进行上传，命名堆栈为“*sd-webui-stack*”，在接下来的对话框中保持默认设置，然后在最后一个对话框中点击“提交”。这将会在你的
    AWS 账户中创建一个包含所有所需资源的堆栈。
- en: A peek behind the curtain
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一探究竟
- en: Now that we have launched the CF template we can pull away the curtain and dive
    deeper into what is actually happening in the background.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经启动了 CF 模板，可以揭开帷幕，*深入了解*实际发生的背景情况。
- en: The CloudFormation Template
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CloudFormation 模板
- en: 'Let’s first have a look at the CF Template:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 首先让我们来看一下 CF 模板：
- en: This template sets up a few resources that are required for the application.
    First we create a “Security Group” to specify which ports will be open on the
    EC2 instance. We choose port 22 because we want to be able to connect to the instance
    via SSH and port 7860 because that’s where our app will be listening.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模板设置了一些应用程序所需的资源。首先，我们创建一个“安全组”来指定 EC2 实例上哪些端口将会开放。我们选择端口 22，因为我们希望能够通过 SSH
    连接到实例，同时选择端口 7860，因为我们的应用将在该端口监听。
- en: Next we set up the EC2 instance that will host the application. In this template
    I chose a Ubuntu Server 22.04 LTS distribution (AMI ID *ami-0574da719dca65348)*,
    simply because that’s what I’m most familiar with. You can change this to a different
    distribution if you’d like, but note that you would have to amend the setup script
    (discussed below) accordingly. We choose a *g4dn.xlarge* instance, as discussed
    above. We also provision 300 GB of disk space to make sure that we have enough
    space to host a number of different models. Finally we run the setup script on
    the EC2 instance, which we will discuss in the next section.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们设置将托管应用程序的 EC2 实例。在这个模板中，我选择了 Ubuntu Server 22.04 LTS 发行版（AMI ID *ami-0574da719dca65348*），仅仅因为这是我最熟悉的。你可以更改为其他发行版，但请注意你需要相应地修改设置脚本（详见下文）。我们选择了一个
    *g4dn.xlarge* 实例，如上所述。我们还配置了 300 GB 的磁盘空间，以确保有足够的空间来托管多个不同的模型。最后，我们在 EC2 实例上运行设置脚本，我们将在下一节中讨论。
- en: Next we create an Elastic IP address and assign it to our EC2 instance. This
    allows us to have a permanent IP address, so even when we shut down the EC2 instance
    and restart it at a later point our app will always be hosted on the same IP address.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们创建一个弹性 IP 地址，并将其分配给我们的 EC2 实例。这使我们能够拥有一个永久的 IP 地址，因此即使我们关闭 EC2 实例并在以后重新启动，它的应用程序也将始终托管在同一个
    IP 地址上。
- en: The setup script
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置脚本
- en: As mentioned, we are running a [setup script](https://github.com/marshmellow77/stable-diffusion-webui/blob/master/setup.sh)
    on the EC2 instance which will execute a number of commands to set everything
    up for the Web UI. Let’s go through it step by step.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，我们在 EC2 实例上运行一个 [setup script](https://github.com/marshmellow77/stable-diffusion-webui/blob/master/setup.sh)，该脚本将执行一些命令以为
    Web UI 设置一切。我们一步一步来看。
- en: 'The first section disables the Ubuntu restart dialogue after installing packages
    and then installs a number of packages that we will need:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 第一部分禁用 Ubuntu 安装包后的重启对话框，然后安装我们需要的一些包：
- en: 'This next section downloads and installs the CUDA driver so that we can access
    the GPU of the machine:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 下一部分下载并安装 CUDA 驱动程序，以便我们可以访问机器的 GPU：
- en: 'After that we need to install [Git Large File Storage](https://git-lfs.com/)
    because we will download a Stable Diffusion model which is about 5 GB:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们需要安装 [Git Large File Storage](https://git-lfs.com/)，因为我们将下载一个大约 5 GB 的
    Stable Diffusion 模型：
- en: Now that Git LFS is installed we can download the model from the Hugging Face
    Model Hub. Note that we enabled the option “skip-smudge” which allows us to just
    download the specific files we need. In this tutorial we are downloading SD v2.1
    (512px version) and move it into the directory that the Web UI expects the model
    to be.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在 Git LFS 已安装，我们可以从 Hugging Face Model Hub 下载模型。请注意，我们启用了“skip-smudge”选项，这允许我们仅下载所需的特定文件。在本教程中，我们下载了
    SD v2.1（512px 版本），并将其移动到 Web UI 期望模型所在的目录中。
- en: Note that you can change the script to download a differenct version of Stable
    Diffusion, for example version 1.5\. You can also add as many models you want
    into the UI at a later point by putting them into the odel directory.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，你可以更改脚本以下载不同版本的 Stable Diffusion，例如版本 1.5。你还可以在后续阶段通过将模型放入模型目录中，向 UI 添加任意多的模型。
- en: 'In addition to the model we also need a configuration file that is read by
    the WebUI. We download a config file from the [Stable Diffusion Github repo](https://github.com/Stability-AI/StableDiffusion)
    and rename it to match the model name and put it also into the same directory:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 除了模型之外，我们还需要一个由 WebUI 读取的配置文件。我们从 [Stable Diffusion Github repo](https://github.com/Stability-AI/StableDiffusion)
    下载一个配置文件，并将其重命名为与模型名称匹配，然后也放入相同的目录中：
- en: 'Lastly, we change the ownership of the WebUI to the user *ubuntu* and kick
    off the the server as that user (because user *root* is not allowed to start the
    application):'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将 WebUI 的所有权更改为用户 *ubuntu*，并以该用户身份启动服务器（因为用户 *root* 不允许启动应用程序）：
- en: Testing the Web UI
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试 Web UI
- en: 'After 15–20 minutes the deployment should be completed. We can retrieve the
    IP address of the EC2 instance by running the following command:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在 15–20 分钟后，部署应该完成。我们可以通过运行以下命令获取 EC2 实例的 IP 地址：
- en: 'We can also retrieve it by accessing the EC2 panel in the AWS console:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以通过访问 AWS 控制台中的 EC2 面板来检索它：
- en: '![](../Images/d105eeb215d5d99b126640657cff5f0f.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d105eeb215d5d99b126640657cff5f0f.png)'
- en: Image by author
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Once we have retrieved the IP address we can open the app by navigating in the
    browser to <IP address>:7860 (if the request times out the installation hasn’t
    finished yet). Once the installation is completed we can see that the app is up
    and running 🎉
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们获取了 IP 地址，就可以通过在浏览器中导航到 <IP address>:7860 打开应用程序（如果请求超时则说明安装尚未完成）。安装完成后，我们可以看到应用程序已经启动运行
    🎉
- en: '![](../Images/e4b94ae55fe28d8f22ef24473673b8d0.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e4b94ae55fe28d8f22ef24473673b8d0.png)'
- en: Shutting down the EC2 instance and restart the app
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关闭 EC2 实例并重新启动应用程序
- en: 'Even with only $0.53 per hour we obviously don’t want to run the instance when
    we don’t use it. We can stop the instance in the AWS console and restart it when
    we need it again without losing any of the installed apps. Once we restarted the
    EC2 instance we can log into it via SSH and restart the app with the following
    command:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 即使每小时仅需 $0.53，我们显然也不希望在不使用时运行实例。我们可以在 AWS 控制台中停止实例，并在需要时重新启动它，而不会丢失任何已安装的应用程序。一旦我们重新启动了
    EC2 实例，就可以通过 SSH 登录并使用以下命令重新启动应用程序：
- en: Deleting everything
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 删除所有内容
- en: 'If we want to delete all the resources we created (i.e. Security Group, EC2
    instance, Elastic IP), we can just delete the CF stack with the following command
    (or delete it in the AWS console):'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要删除所有创建的资源（即安全组、EC2 实例、弹性 IP），我们可以使用以下命令删除 CF 堆栈（或在 AWS 控制台中删除它）：
- en: Limitations
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 限制
- en: I would like to stress that this tutorial is a mere starting point for anyone
    who wants to try out using Stable Diffusion via a Web UI. There are several limitations
    in this approach which could be addressed if one wants to use this app in production.
    In particular I did not address any security concerns (note that the app is running
    over http), scaling concerns (if this app is supposed to serve many users at the
    same time), and many other aspects.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我想强调的是，这个教程只是一个起点，适合任何想尝试通过Web UI使用Stable Diffusion的人。这个方法有几个限制，如果想在生产环境中使用这个应用程序，可能需要解决这些限制。特别是，我没有涉及任何安全问题（请注意该应用程序运行在http上）、扩展问题（如果该应用程序需要同时服务多个用户）以及其他许多方面。
- en: If we wanted to use this app in production we could use the [AWS Well-Architected
    Framework](https://docs.aws.amazon.com/wellarchitected/latest/framework/welcome.html)
    as a starting point.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想在生产环境中使用这个应用程序，可以使用[AWS Well-Architected Framework](https://docs.aws.amazon.com/wellarchitected/latest/framework/welcome.html)作为起点。
- en: Conclusion
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In this tutorial we have set up a Web UI for Stable Diffusion with just one
    command thanks to the CF template. This allows us to access state-of-the-art AI
    models without having to commit to buying expensive hardware ourselves.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们利用CF模板通过一个命令设置了一个用于Stable Diffusion的Web UI。这使我们能够访问最先进的AI模型，而无需自己购买昂贵的硬件。
- en: There are many items in the backlog for this app, I listed them [here](https://github.com/marshmellow77/stable-diffusion-webui#todo-backlog).
    Any contributions to the repo are more than welcome ☺️
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这个应用程序的待办事项列表中有很多项目，我将它们列在了[这里](https://github.com/marshmellow77/stable-diffusion-webui#todo-backlog)。对这个仓库的任何贡献都非常欢迎☺️
- en: Heiko Hotz
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Heiko Hotz
- en: 👋 Follow me on [Medium](https://heiko-hotz.medium.com/) and [LinkedIn](https://www.linkedin.com/in/heikohotz/)
    to read more about Generative AI, Machine Learning, and Natural Language Processing.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 👋 关注我在[Medium](https://heiko-hotz.medium.com/)和[LinkedIn](https://www.linkedin.com/in/heikohotz/)上的文章，了解更多关于生成AI、机器学习和自然语言处理的内容。
- en: 👥 If you’re based in Lonon join one of our [NLP London Meetups](https://www.meetup.com/nlp_london/).
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 👥 如果你在伦敦，可以加入我们的[NLP London Meetups](https://www.meetup.com/nlp_london/)。
- en: 🤓 And if you’re interested in learning more about how I might potentially help
    with adopting AI & ML in your organisation, reach out on [aiml.consulting](https://www.aiml.consulting/).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 🤓 如果你对我如何可能帮助你在组织中采用AI和机器学习感兴趣，可以通过[aiml.consulting](https://www.aiml.consulting/)与我联系。
