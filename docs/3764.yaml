- en: Debugging and Tuning Amazon SageMaker Training Jobs with SageMaker SSH Helper
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调试和调整 Amazon SageMaker 训练任务与 SageMaker SSH 帮助工具
- en: 原文：[https://towardsdatascience.com/debugging-and-tuning-amazon-sagemaker-training-jobs-with-sagemaker-ssh-helper-51efeb4d03be?source=collection_archive---------6-----------------------#2023-12-27](https://towardsdatascience.com/debugging-and-tuning-amazon-sagemaker-training-jobs-with-sagemaker-ssh-helper-51efeb4d03be?source=collection_archive---------6-----------------------#2023-12-27)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/debugging-and-tuning-amazon-sagemaker-training-jobs-with-sagemaker-ssh-helper-51efeb4d03be?source=collection_archive---------6-----------------------#2023-12-27](https://towardsdatascience.com/debugging-and-tuning-amazon-sagemaker-training-jobs-with-sagemaker-ssh-helper-51efeb4d03be?source=collection_archive---------6-----------------------#2023-12-27)
- en: A new tool that increases the debuggability of managed training workloads
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一个新工具，提升了托管训练工作负载的调试能力
- en: '[](https://chaimrand.medium.com/?source=post_page-----51efeb4d03be--------------------------------)[![Chaim
    Rand](../Images/c52659c389f167ad5d6dc139940e7955.png)](https://chaimrand.medium.com/?source=post_page-----51efeb4d03be--------------------------------)[](https://towardsdatascience.com/?source=post_page-----51efeb4d03be--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----51efeb4d03be--------------------------------)
    [Chaim Rand](https://chaimrand.medium.com/?source=post_page-----51efeb4d03be--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://chaimrand.medium.com/?source=post_page-----51efeb4d03be--------------------------------)[![Chaim
    Rand](../Images/c52659c389f167ad5d6dc139940e7955.png)](https://chaimrand.medium.com/?source=post_page-----51efeb4d03be--------------------------------)[](https://towardsdatascience.com/?source=post_page-----51efeb4d03be--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----51efeb4d03be--------------------------------)
    [Chaim Rand](https://chaimrand.medium.com/?source=post_page-----51efeb4d03be--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F9440b37e27fe&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdebugging-and-tuning-amazon-sagemaker-training-jobs-with-sagemaker-ssh-helper-51efeb4d03be&user=Chaim+Rand&userId=9440b37e27fe&source=post_page-9440b37e27fe----51efeb4d03be---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----51efeb4d03be--------------------------------)
    ·10 min read·Dec 27, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F51efeb4d03be&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdebugging-and-tuning-amazon-sagemaker-training-jobs-with-sagemaker-ssh-helper-51efeb4d03be&user=Chaim+Rand&userId=9440b37e27fe&source=-----51efeb4d03be---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F9440b37e27fe&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdebugging-and-tuning-amazon-sagemaker-training-jobs-with-sagemaker-ssh-helper-51efeb4d03be&user=Chaim+Rand&userId=9440b37e27fe&source=post_page-9440b37e27fe----51efeb4d03be---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----51efeb4d03be--------------------------------)
    ·10分钟阅读·2023年12月27日[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F51efeb4d03be&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdebugging-and-tuning-amazon-sagemaker-training-jobs-with-sagemaker-ssh-helper-51efeb4d03be&user=Chaim+Rand&userId=9440b37e27fe&source=-----51efeb4d03be---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F51efeb4d03be&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdebugging-and-tuning-amazon-sagemaker-training-jobs-with-sagemaker-ssh-helper-51efeb4d03be&source=-----51efeb4d03be---------------------bookmark_footer-----------)![](../Images/480849dada98f2550913adfd745d3ba9.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F51efeb4d03be&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdebugging-and-tuning-amazon-sagemaker-training-jobs-with-sagemaker-ssh-helper-51efeb4d03be&source=-----51efeb4d03be---------------------bookmark_footer-----------)![](../Images/480849dada98f2550913adfd745d3ba9.png)'
- en: Photo by [James Wainscoat](https://unsplash.com/@tumbao1949?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [James Wainscoat](https://unsplash.com/@tumbao1949?utm_source=medium&utm_medium=referral)
    提供，来自 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Considering all the new Amazon SageMaker features announced over the past year
    (2023), including at the most recent [AWS re:invent](https://press.aboutamazon.com/2023/11/aws-announces-five-new-amazon-sagemaker-capabilities-for-scaling-with-models),
    it would have been easy to have overlooked [SageMaker SSH Helper](https://github.com/aws-samples/sagemaker-ssh-helper)
    — a new utility for connecting to remote SageMaker training environments. But
    **sometimes it is the quiet enhancements that have the potential to make the greatest
    impact on your daily development.** In this post we will review [SageMaker SSH
    Helper](https://github.com/aws-samples/sagemaker-ssh-helper) and demonstrate how
    it can increase your ability to 1) investigate and solve errors that arise in
    your training applications and 2) optimize their runtime performance.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到过去一年（2023）宣布的所有新 Amazon SageMaker 功能，包括最近的 [AWS re:invent](https://press.aboutamazon.com/2023/11/aws-announces-five-new-amazon-sagemaker-capabilities-for-scaling-with-models)，很容易忽视
    [SageMaker SSH Helper](https://github.com/aws-samples/sagemaker-ssh-helper) —
    一种用于连接到远程 SageMaker 培训环境的新工具。但 **有时正是这些安静的增强功能有潜力对你的日常开发产生最大的影响。** 在这篇文章中，我们将回顾
    [SageMaker SSH Helper](https://github.com/aws-samples/sagemaker-ssh-helper) 并展示它如何提高你
    1) 调查和解决培训应用程序中出现的错误的能力，以及 2) 优化其运行时性能。
- en: In [previous posts](/6-steps-to-migrating-your-machine-learning-project-to-the-cloud-6d9b6e4f18e0),
    we discussed at length the benefits of training in the cloud. Cloud-based managed
    training services, such as [Amazon SageMaker](https://aws.amazon.com/sagemaker/),
    have simplified many of the complexities surrounding AI model development and
    greatly increased accessibility to both AI-specific machinery and [pretrained
    AI models](https://docs.aws.amazon.com/sagemaker/latest/dg/studio-jumpstart.html).
    To train in Amazon SageMaker, all you need to do is define a training environment
    (including an instance type) and point to the code you wish to run, and the training
    service will 1) set up the requested environment, 2) deliver your code to the
    training machine, 3) run your training script, 4) copy the training output to
    persistent storage, and 5) tear everything down when the training completes (so
    that you pay only for what you need). Sounds easy… right? However, managed training
    is not without its flaws, one of which — the limited access it enables to the
    training environment — will be discussed in this post.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [之前的帖子](/6-steps-to-migrating-your-machine-learning-project-to-the-cloud-6d9b6e4f18e0)
    中，我们详细讨论了云端培训的好处。基于云的管理培训服务，如 [Amazon SageMaker](https://aws.amazon.com/sagemaker/)，简化了围绕
    AI 模型开发的许多复杂问题，并大大提高了对 AI 特定机器和 [预训练 AI 模型](https://docs.aws.amazon.com/sagemaker/latest/dg/studio-jumpstart.html)
    的可访问性。要在 Amazon SageMaker 中进行培训，你只需定义一个培训环境（包括实例类型）并指向你希望运行的代码，培训服务将 1) 设置请求的环境，2)
    将你的代码传送到培训机器，3) 运行你的培训脚本，4) 将培训输出复制到持久存储中，5) 在培训完成后拆除一切（以便你只需为你需要的部分付费）。听起来很简单…对吧？然而，管理培训也并非没有缺陷，其中之一
    — 它对培训环境的有限访问性 — 将在本文中讨论。
- en: Disclaimers
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 免责声明
- en: Please do not interpret our use of Amazon SageMaker, [SageMaker SSH Helper](https://github.com/aws-samples/sagemaker-ssh-helper),
    or any other framework or utility we should mention as an endorsement for their
    use. There are many different methodologies for developing AI models. The best
    solution for you will depend on the details of your project.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请不要将我们对 Amazon SageMaker、[SageMaker SSH Helper](https://github.com/aws-samples/sagemaker-ssh-helper)
    或任何其他框架或工具的使用解读为对它们使用的支持。开发 AI 模型有许多不同的方法。对你而言，最佳解决方案将取决于你的项目细节。
- en: Please be sure to verify the contents of this post, particularly the code samples,
    against the most up to date SW and documentation available at the time that you
    read this. The landscape of AI development tools is in constant flux and it is
    likely that some of the APIs we refer to will change over time.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请务必在阅读时核实本文内容，特别是代码示例，与当时可用的最新软件和文档。AI 开发工具的环境在不断变化，我们提到的一些 API 可能会随着时间而变化。
- en: Disadvantage of Managed Training — Inaccessibility of the Training Environment
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理培训的缺点 — 培训环境的不可访问性
- en: As seasoned developers are well aware, a significant chunk of the application
    development-time is actually spent on debugging. Rarely do our programs work “out
    of the box”; More often than not, they require hours of laborious debugging to
    get them to run as desired. Of course, to be able to debug effectively, you need
    to have direct access to your application environment. Trying to debug an application
    without access to its environment is like trying to fix a faucet without a wrench.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 正如经验丰富的开发者所知道的，应用开发时间的很大一部分实际上花在了调试上。我们的程序很少会“开箱即用”；更多时候，它们需要经过数小时的繁琐调试才能按预期运行。当然，要有效调试，你需要对应用环境有直接访问权限。尝试在没有环境访问权限的情况下调试应用程序，就像尝试修理水龙头却没有扳手一样。
- en: Another important step in AI model development is to tune the runtime performance
    of the training application. Training AI models can be expensive and our ability
    to maximize the utilization of our compute resources can have a decisive cost
    on training. In a [previous post](/cloud-ml-performance-checklist-caa51e798002)
    we described the iterative process of analyzing and optimizing training performance.
    Similar to debugging, direct access to the runtime environment will greatly increase
    and accelerate our ability to reach the best results.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: AI模型开发中的另一个重要步骤是调整训练应用的运行时性能。训练AI模型可能成本高昂，我们最大化计算资源利用的能力可能对训练成本产生决定性影响。在[之前的一篇文章](/cloud-ml-performance-checklist-caa51e798002)中，我们描述了分析和优化训练性能的迭代过程。类似于调试，直接访问运行时环境将大大提高并加速我们获得最佳结果的能力。
- en: Unfortunately, one of the side-effects of the “fire and forget” nature of training
    in SageMaker, is the lack of ability to freely connect to the training environment.
    Of course, you could always debug and optimize performance using the training
    job output logs and debug prints (i.e., add prints, study the output logs, modify
    your code, and repeat until you’ve solved all your bugs and reached the desired
    performance) but this would be a very primitive and time-consuming solution.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，SageMaker训练的“开火即忘”特性带来了一个副作用，那就是无法自由连接到训练环境。当然，你可以通过训练作业输出日志和调试打印（即，添加打印、研究输出日志、修改代码，并重复直到解决所有错误并达到所需性能）来调试和优化性能，但这将是一个非常原始且耗时的解决方案。
- en: There are a number of best practices that address the problem of debugging managed
    training workloads, each with its own advantages and disadvantages. We will review
    three of these, discuss their limitations, and then demonstrate how the new [SageMaker
    SSH Helper](https://github.com/aws-samples/sagemaker-ssh-helper) completely alters
    the playing field.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些最佳实践可以解决管理训练工作负载时的调试问题，每种方法都有其优缺点。我们将回顾其中的三种，讨论它们的局限性，然后展示新的[SageMaker SSH
    Helper](https://github.com/aws-samples/sagemaker-ssh-helper)如何彻底改变游戏规则。
- en: Debug in Your Local Environment
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在本地环境中调试
- en: It is recommended that you run a few training steps in your local environment
    before launching your job to the cloud. Although this may require a few modifications
    to your code (e.g., to enable training on a CPU device), it is usually worth the
    effort as it enables you to identify and fix silly coding errors. It is certainly
    more cost effective than discovering them on an expensive GPU machine in the cloud.
    Ideally, your local environment would be as similar to the SageMaker training
    environment (e.g., using the same versions of Python and Python packages) but
    in most cases there is a limit to the extent that this is possible.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 建议在将任务提交到云端之前，先在本地环境中运行几步训练。尽管这可能需要对代码进行一些修改（例如，为了在CPU设备上进行训练），但通常是值得的，因为它使你能够识别并修复一些简单的编码错误。显然，这比在云端昂贵的GPU机器上发现这些错误更具成本效益。理想情况下，你的本地环境应尽可能类似于SageMaker训练环境（例如，使用相同版本的Python和Python包），但在大多数情况下，这种相似性是有限的。
- en: Debug Locally within the SageMaker Docker Container
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在SageMaker Docker容器中本地调试
- en: The second option is to pull the [deep learning container (DLC) image](https://docs.aws.amazon.com/deep-learning-containers/latest/devguide/deep-learning-containers-images.html)
    that SageMaker uses and run your training script within the container on your
    local PC. This method allows you to get a good understanding of the SageMaker
    training environment including the packages (and package versions) that are installed.
    It is extremely useful in identifying missing dependencies and addressing dependency
    conflicts. Please see [the documentation](https://github.com/aws/deep-learning-containers/blob/master/available_images.md)
    for details on how to login and pull the appropriate image. Note that the SageMaker
    APIs support pulling and training within a DLC via its [local mode](https://sagemaker.readthedocs.io/en/stable/overview.html#local-mode)
    feature. However, running the image on your own will enable you to explore and
    study the image more freely.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个选项是拉取 SageMaker 使用的 [深度学习容器 (DLC) 镜像](https://docs.aws.amazon.com/deep-learning-containers/latest/devguide/deep-learning-containers-images.html)，并在你的本地
    PC 上的容器中运行你的训练脚本。这种方法可以让你很好地了解 SageMaker 训练环境，包括已安装的包（和包版本）。它在识别缺失的依赖项和解决依赖项冲突方面极为有用。请参见
    [文档](https://github.com/aws/deep-learning-containers/blob/master/available_images.md)
    以了解如何登录并拉取适当的镜像。请注意，SageMaker 的 API 支持通过其 [本地模式](https://sagemaker.readthedocs.io/en/stable/overview.html#local-mode)
    功能拉取和训练 DLC。然而，自己运行镜像将使你能够更自由地探索和研究镜像。
- en: Debug in the Cloud on an Unmanaged Instance
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在未管理的实例上在云中调试
- en: Another option is to train on an unmanaged [Amazon EC2](https://aws.amazon.com/ec2/)
    instance in the cloud. The advantage to this option is the ability to run on the
    same instance type that you use in SageMaker. This will enable you to reproduce
    issues that you may not be able to reproduce in your local environment, e.g.,
    issues related to your use of the GPU resources. The easiest way to do this would
    be to run your instance with a [machine image](https://aws.amazon.com/machine-learning/amis/)
    that is most similar to your SageMaker environment (e.g., the same OS, Python,
    and Python package versions). Alternatively, you could pull the SageMaker DLC
    and run it on the remote instance. However, keep in mind that although this also
    runs in the cloud, the runtime environment may still be significantly different
    than SageMaker’s environment. SageMaker configures a whole bunch of system settings
    during initialization. Trying to reproduce the same environment may require quite
    a bit of effort. Given that debugging in the cloud is more costly than the previous
    two methods, our goal should be to try to clean up our code as much as possible
    before resorting to this option.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个选择是在云中使用未管理的 [Amazon EC2](https://aws.amazon.com/ec2/) 实例进行训练。这个选项的优势在于可以在与你在
    SageMaker 中使用的相同实例类型上运行。这将使你能够重现可能在本地环境中无法重现的问题，例如，与你使用 GPU 资源相关的问题。最简单的方法是使用与
    SageMaker 环境（例如相同的操作系统、Python 和 Python 包版本）最相似的 [机器镜像](https://aws.amazon.com/machine-learning/amis/)
    来运行你的实例。或者，你可以拉取 SageMaker 的 DLC 并在远程实例上运行它。然而，尽管这也在云中运行，但运行时环境可能与 SageMaker 的环境有显著差异。SageMaker
    在初始化期间配置了一整套系统设置。尝试重现相同环境可能需要相当多的努力。鉴于在云中调试比前两种方法更昂贵，我们的目标应该是在求助于这一选项之前尽可能清理我们的代码。
- en: Debugging Limitations
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 调试限制
- en: Although each of the above options are useful for solving for certain types
    of bugs, none of them offer a way to perfectly replicate the SageMaker environment.
    Consequently, you may run into issues when running in SageMaker that you are not
    able to reproduce, and thus not able to correct, when using these methods. In
    particular, there are a number of features that are supported *only* when running
    in the SageMaker environment (e.g., SageMaker’s [Pipe input](https://aws.amazon.com/blogs/machine-learning/using-pipe-input-mode-for-amazon-sagemaker-algorithms/)
    and [Fast File](https://aws.amazon.com/about-aws/whats-new/2021/10/amazon-sagemaker-fast-file-mode/)
    modes for accessing data from Amazon S3). If your issue is related to one of those
    features, you will *not* be able to reproduce it outside of SageMaker.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管上述每个选项对解决某些类型的错误都很有用，但没有一个能完美地复制 SageMaker 环境。因此，当在 SageMaker 中运行时，你可能会遇到这些方法无法复现的问题，从而无法进行修正。特别是，有许多功能仅在
    SageMaker 环境中受支持（例如，SageMaker 的 [Pipe input](https://aws.amazon.com/blogs/machine-learning/using-pipe-input-mode-for-amazon-sagemaker-algorithms/)
    和 [Fast File](https://aws.amazon.com/about-aws/whats-new/2021/10/amazon-sagemaker-fast-file-mode/)
    模式来访问 Amazon S3 中的数据）。如果你的问题与这些功能相关，你将 *无法* 在 SageMaker 之外复现它。
- en: Tuning Limitations
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 调优限制
- en: In addition, the options above do not provide an effective solution for performance
    tuning. Runtime performance can be extremely susceptible to even the slightest
    changes in the environment. While a simulated environment might provide some general
    optimization hints (e.g., the comparative performance overhead of different data
    augmentations), an accurate profiling analysis can be performed only in the SageMaker
    runtime environment.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，上述选项未提供有效的性能调优解决方案。运行时性能对环境中的细微变化非常敏感。虽然模拟环境可能提供一些一般优化提示（例如，不同数据增强的比较性能开销），但准确的性能分析只能在
    SageMaker 运行时环境中进行。
- en: SageMaker SSH Helper
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SageMaker SSH Helper
- en: '[SageMaker SSH Helper](https://github.com/aws-samples/sagemaker-ssh-helper)
    introduces that ability to connect to the remote SageMaker training environment.
    This is enabled via an SSH connection over [AWS SSM](https://docs.aws.amazon.com/systems-manager/latest/userguide/ssm-agent.html).
    As we will demonstrate, the steps required to set this up are quite simple and
    very well worth the effort. The [official documentation](https://github.com/aws-samples/sagemaker-ssh-helper/tree/v2.1.0)
    includes comprehensive details on the value of this utility and how it can be
    used.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[SageMaker SSH Helper](https://github.com/aws-samples/sagemaker-ssh-helper)
    提供了连接到远程 SageMaker 训练环境的功能。这是通过 [AWS SSM](https://docs.aws.amazon.com/systems-manager/latest/userguide/ssm-agent.html)
    上的 SSH 连接实现的。正如我们将演示的，设置这个功能的步骤非常简单，值得花费精力。 [官方文档](https://github.com/aws-samples/sagemaker-ssh-helper/tree/v2.1.0)
    包含了关于此工具的价值及其使用方法的详细信息。'
- en: Example
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例
- en: In the code block below we demonstrate how to enable remote connection to a
    SageMaker training job using [sagemaker-ssh-helper](https://pypi.org/project/sagemaker-ssh-helper/)
    (version 2.1.0). We pass in our full code source directory but replace our usual
    *entry_point* (*train.py*)with a new *run_ssh.py* script that we place in the
    root of the *source_dir*. Note that we add the *SSHEstimatorWrapper* to the list
    of project dependencies since our *start_ssh.py* script will require it. Alternatively,
    we could have added [sagemaker-ssh-helper](https://pypi.org/project/sagemaker-ssh-helper/)
    to our *requirements.txt* file. Here we have set the *connection_wait_time_seconds*
    setting to two minutes. As we will see, this will impact the behavior of our training
    script.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码块中，我们演示了如何使用 [sagemaker-ssh-helper](https://pypi.org/project/sagemaker-ssh-helper/)（版本
    2.1.0）启用对 SageMaker 训练作业的远程连接。我们传入完整的代码源目录，但将通常的 *entry_point*（*train.py*）替换为一个新的
    *run_ssh.py* 脚本，该脚本放置在 *source_dir* 的根目录中。请注意，我们将 *SSHEstimatorWrapper* 添加到项目依赖项列表中，因为我们的
    *start_ssh.py* 脚本将需要它。或者，我们也可以将 [sagemaker-ssh-helper](https://pypi.org/project/sagemaker-ssh-helper/)
    添加到 *requirements.txt* 文件中。这里我们将 *connection_wait_time_seconds* 设置为两分钟。正如我们将看到的，这会影响训练脚本的行为。
- en: '[PRE0]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'As usual, the SageMaker service will allocate a machine instance, build the
    requested environment, download and unpack our source code, and install the requested
    dependencies. At that point, the runtime environment will be identical to the
    one in which we usually run our training script. Only now, instead of training
    we will run our *start_ssh.py* script:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 和往常一样，SageMaker 服务将分配一个机器实例，建立所请求的环境，下载并解压我们的源代码，并安装所请求的依赖项。此时，运行环境将与我们通常运行训练脚本的环境完全相同。只是现在，我们将运行我们的*start_ssh.py*脚本，而不是训练：
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The [*setup_and_start_ssh*](https://github.com/aws-samples/sagemaker-ssh-helper/blob/main/sagemaker_ssh_helper/__init__.py#L10)
    function will start the SSH service, then block for the allotted time we defined
    above (*connection_wait_time_seconds*) to allow an SSH client to connect, and
    then proceed with the rest of the script. In our case it will sleep for two hours
    and then exit the training job. During that time we can connect to the machine
    using the [*aws ssm start-session*](https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-sessions-start.html)
    command and the instance-id that was returned by the *ssh_wrapper* (which typically
    starts with an “*mi-”* prefix for “*managed instance*”) and play to our hearts
    desire. In particular, we can explicitly run our original training script (which
    was uploaded as part of the *source_dir*) and monitor the training behavior.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[*setup_and_start_ssh*](https://github.com/aws-samples/sagemaker-ssh-helper/blob/main/sagemaker_ssh_helper/__init__.py#L10)
    函数将启动 SSH 服务，然后在我们上面定义的分配时间（*connection_wait_time_seconds*）内阻塞，以允许 SSH 客户端连接，然后继续执行脚本的其余部分。在我们的例子中，它将睡眠两小时，然后退出训练作业。在这段时间里，我们可以使用[*aws
    ssm start-session*](https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-sessions-start.html)
    命令和由*ssh_wrapper* 返回的 instance-id（通常以“*mi-”*前缀开头，代表“*管理实例*”）连接到机器，尽情玩耍。特别是，我们可以显式运行我们原始的训练脚本（该脚本作为*source_dir*的一部分上传）并监控训练行为。'
- en: The method we have described, enables us to run our training script iteratively
    while we identify and fix bugs. It also provides an ideal setting for optimizing
    performance — one in which we can 1) run a few training steps, 2) identify performance
    bottlenecks (e.g., using [PyTorch Profiler](https://pytorch.org/tutorials/recipes/recipes/profiler_recipe.html)),
    3) tune our code to address them, and 4) repeat, until we achieve the desired
    runtime performance.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们描述的方法使我们能够在识别和修复错误的同时，迭代运行我们的训练脚本。它还提供了一个优化性能的理想环境——在这个环境中，我们可以 1) 运行几个训练步骤，2)
    识别性能瓶颈（例如，使用[PyTorch Profiler](https://pytorch.org/tutorials/recipes/recipes/profiler_recipe.html)），3)
    调整我们的代码以解决这些瓶颈，然后 4) 重复这个过程，直到我们实现所需的运行时性能。
- en: Importantly, keep in mind that the instance will be terminated as soon as the
    *start_ssh.py* script completes. Make sure to copy all important files (e.g.,
    code modifications, profile traces, etc.) to persistent storage before it is too
    late.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是，请记住，一旦*start_ssh.py* 脚本完成，实例将被终止。在为时已晚之前，确保将所有重要文件（例如，代码修改、配置文件跟踪等）复制到持久存储中。
- en: Port Forwarding Over AWS SSM
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过 AWS SSM 进行端口转发
- en: 'We can extend our *aws ssm start-session* command to enable [port forwarding](https://aws.amazon.com/blogs/aws/new-port-forwarding-using-aws-system-manager-sessions-manager/).
    This allows you to securely connect to server applications running on your cloud
    instance. This is particularly exciting for developers who are accustomed to using
    the [TensorBoard Profiler](https://pytorch.org/tutorials/intermediate/tensorboard_profiler_tutorial.html)
    plugin for analyzing runtime performance (as [we are](/pytorch-model-performance-analysis-and-optimization-10c3c5822869)).
    The command below demonstrates how to set up port forwarding over AWS SSM:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以扩展我们的*aws ssm start-session* 命令，以启用[端口转发](https://aws.amazon.com/blogs/aws/new-port-forwarding-using-aws-system-manager-sessions-manager/)。这允许您安全地连接到云实例上运行的服务器应用程序。这对于习惯使用[TensorBoard
    Profiler](https://pytorch.org/tutorials/intermediate/tensorboard_profiler_tutorial.html)
    插件分析运行时性能的开发人员尤其令人兴奋（正如[我们所做的](/pytorch-model-performance-analysis-and-optimization-10c3c5822869)）。下面的命令演示了如何通过
    AWS SSM 设置端口转发：
- en: '[PRE2]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Additional Modes of Use
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用的其他模式
- en: The [SageMaker SSH Helper documentation](https://github.com/aws-samples/sagemaker-ssh-helper/tree/v2.1.0)
    describes several different ways of using the SSH functionality. In the [basic
    example](https://github.com/aws-samples/sagemaker-ssh-helper/tree/v2.1.0#step-3-modify-your-training-script)
    the *setup_and_start_ssh* command is added to the top of the existing training
    script (instead of defining a dedicated script). This allows you time (as defined
    by the *connection_wait_time_seconds* setting) to connect to the machine before
    the training begins so that you can monitor its behavior (from a separate process)
    as it runs.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '[SageMaker SSH Helper 文档](https://github.com/aws-samples/sagemaker-ssh-helper/tree/v2.1.0)描述了几种使用
    SSH 功能的方法。在[基础示例](https://github.com/aws-samples/sagemaker-ssh-helper/tree/v2.1.0#step-3-modify-your-training-script)中，将
    *setup_and_start_ssh* 命令添加到现有训练脚本的顶部（而不是定义一个专门的脚本）。这使你有时间（根据 *connection_wait_time_seconds*
    设置定义）在训练开始前连接到机器，以便你可以在训练运行时（通过一个独立的进程）监控其行为。'
- en: The more [advanced examples](https://github.com/aws-samples/sagemaker-ssh-helper/tree/v2.1.0#pycharm-debug-server)
    include different methods for using SageMaker SSH Helper to debug the training
    script running in the SageMaker environment from an IDE running in our local environment.
    The setup is more complicated but may very well be worth the reward of being able
    to perform line-by-line debugging from a local IDE.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 更加[高级的示例](https://github.com/aws-samples/sagemaker-ssh-helper/tree/v2.1.0#pycharm-debug-server)包括使用
    SageMaker SSH Helper 从本地环境中的 IDE 调试运行在 SageMaker 环境中的训练脚本的不同方法。虽然设置更为复杂，但能够从本地
    IDE 进行逐行调试的奖励可能非常值得。
- en: Additional use cases cover [training in a VPC](https://github.com/aws-samples/sagemaker-ssh-helper/blob/v2.1.0/FAQ.md#im-running-sagemaker-in-a-vpc-do-i-need-to-make-extra-configuration),
    integration with [SageMaker Studio](https://github.com/aws-samples/sagemaker-ssh-helper/tree/v2.1.0#studio),
    [connecting to SageMaker inference endpoints](https://github.com/aws-samples/sagemaker-ssh-helper/tree/v2.1.0#connecting-to-sagemaker-inference-endpoints-with-ssm),
    and more. Please be sure to see the documentation for details.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 其他用例包括[在 VPC 中训练](https://github.com/aws-samples/sagemaker-ssh-helper/blob/v2.1.0/FAQ.md#im-running-sagemaker-in-a-vpc-do-i-need-to-make-extra-configuration)、与[SageMaker
    Studio](https://github.com/aws-samples/sagemaker-ssh-helper/tree/v2.1.0#studio)的集成、[连接到
    SageMaker 推理端点](https://github.com/aws-samples/sagemaker-ssh-helper/tree/v2.1.0#connecting-to-sagemaker-inference-endpoints-with-ssm)等。请务必查看文档以获取详细信息。
- en: When to Use SageMaker SSH Helper
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 何时使用 SageMaker SSH Helper
- en: Given the advantages of debugging with SageMaker SSH Helper, you might wonder
    if there is any reason to use the three debugging methods we described above.
    We would argue that, despite the fact that you *could* perform all of your debugging
    in the cloud, it is still highly recommended that you perform your initial development
    and experimentation phase — to the extent possible — in your local environment
    (using the first two methods we described). Only once you have exhausted your
    ability to debug locally, should you move to debugging in the cloud using SageMaker
    SSH Helper. The last thing you would want would be to spend hours cleaning up
    silly syntax errors on a super expensive cloud-based GPU machine.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到使用 SageMaker SSH Helper 进行调试的优势，你可能会想知道是否有理由使用我们上述描述的三种调试方法。我们认为，尽管你*可以*在云端进行所有调试，但仍然强烈建议你在本地环境中进行初步开发和实验阶段——尽可能地使用我们描述的前两种方法。只有在你已耗尽本地调试的能力后，才应转到使用
    SageMaker SSH Helper 在云端进行调试。你最不希望的就是在一个极其昂贵的云端 GPU 机器上花费数小时清理简单的语法错误。
- en: Contrary to debugging, analyzing and optimizing performance has little value
    *unless* it is performed directly on the target training environment. Thus, it
    *would* be advised to perform your optimization efforts on the SageMaker instance
    using SageMaker SSH Helper.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 与调试相反，性能分析和优化的价值不大*除非*它在目标训练环境中直接进行。因此，*建议*在使用 SageMaker SSH Helper 的 SageMaker
    实例上进行优化工作。
- en: Summary
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Until now, one of the most painful side effects of training on Amazon SageMaker
    has been the loss of direct access to the training environment. This restricted
    our ability to debug and tune our training workloads in an effective manner. The
    recent release of SageMaker SSH Helper and its support for unmediated access to
    the training environment opens up a wealth of new opportunities for developing,
    debugging, and tuning. These can have a distinctive impact on the efficiency and
    speed of your ML development life cycle. It is for this reason that SageMaker
    SSH Helper is one of our favorite new cloud-ML features of 2023.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 到现在为止，在 Amazon SageMaker 上训练的一个最痛苦的副作用就是失去了对训练环境的直接访问。这限制了我们有效调试和调整训练工作负载的能力。最近发布的
    SageMaker SSH Helper 以及对训练环境的直接访问支持，为开发、调试和调整提供了大量新的机会。这些机会可以对你的 ML 开发生命周期的效率和速度产生显著影响。这就是为什么
    SageMaker SSH Helper 是我们 2023 年最喜欢的新云 ML 功能之一。
