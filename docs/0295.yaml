- en: An Intuitive Explanation for Inverse Propensity Weighting in Causal Inference
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/an-intuitive-explanation-for-inverse-propensity-weighting-in-causal-inference-459a7e6fa94a?source=collection_archive---------9-----------------------#2023-01-18](https://towardsdatascience.com/an-intuitive-explanation-for-inverse-propensity-weighting-in-causal-inference-459a7e6fa94a?source=collection_archive---------9-----------------------#2023-01-18)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Understanding the roots of inverse propensity weighting through a simple example.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@murat.unal?source=post_page-----459a7e6fa94a--------------------------------)[![Murat
    Unal](../Images/9f00db7597d7ece01213a6b0589c87d8.png)](https://medium.com/@murat.unal?source=post_page-----459a7e6fa94a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----459a7e6fa94a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----459a7e6fa94a--------------------------------)
    [Murat Unal](https://medium.com/@murat.unal?source=post_page-----459a7e6fa94a--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F15a64c9fc55d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fan-intuitive-explanation-for-inverse-propensity-weighting-in-causal-inference-459a7e6fa94a&user=Murat+Unal&userId=15a64c9fc55d&source=post_page-15a64c9fc55d----459a7e6fa94a---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----459a7e6fa94a--------------------------------)
    ·8 min read·Jan 18, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F459a7e6fa94a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fan-intuitive-explanation-for-inverse-propensity-weighting-in-causal-inference-459a7e6fa94a&user=Murat+Unal&userId=15a64c9fc55d&source=-----459a7e6fa94a---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F459a7e6fa94a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fan-intuitive-explanation-for-inverse-propensity-weighting-in-causal-inference-459a7e6fa94a&source=-----459a7e6fa94a---------------------bookmark_footer-----------)![](../Images/2f18c8f2bb21617b7ebeb362476b6fe5.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Diego PH](https://unsplash.com/ko/@jdiegoph?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: One of the well-established methods for causal inference is based on the Inverse
    Propensity Weighting (IPW). In this post we will use a simple example to build
    an intuition for IPW. Specifically, we will see how IPW is derived from a simple
    weighted average in order to account for varying treatment assignment rates in
    causal evaluation.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s consider the simple example where we want to estimate the average effect
    of running a marketing coupon campaign on customer spending. We run the campaign
    in two stores by randomly assigning a coupon to existing customers. Suppose both
    stores have same number of customers and, unknown to us, spending among treated
    customers is distributed as *N(20,3²)* and *N(40,3²)* in stores 1 and 2, respectively.
  prefs: []
  type: TYPE_NORMAL
- en: 'Throughout the example *Yi*​(1) represents an individual’s spending if they
    receive a coupon, *Ti*​=1, and *Yi*​(0) represents their spending if they don’t,
    *Ti*​=0\. These random variables are called potential outcomes. The observed outcome
    *Yi*​ is related to potential outcomes as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Our estimand, the thing that we want to estimate, is the population mean spending
    given a coupon, *E*[*Yi*​(1)]. If we randomly assign coupons to the same number
    of customers in both stores, we can get an unbiased estimate of this by simply
    averaging the observed spending of the treated customers, which is 0.5∗$20+0.5∗$40=$30.
  prefs: []
  type: TYPE_NORMAL
- en: 'Mathematically, this looks as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'where the first equation is due to the potential outcomes, and the last equation
    follows from random assignment of treatment, which makes potential outcomes independent
    of treatment assignment:'
  prefs: []
  type: TYPE_NORMAL
- en: Simple Average
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let’s define a function that generates a sample of 2000 customers, randomly
    assigns 50% of them to treatment in both stores, and records their average spending.
    Let’s also run a simulation that calls this function for 1000 times.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The following plot shows that the distribution of the average spending is centered
    around the true mean.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1fb0f499bfe9d6eed91eb8e1303eedb2.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1 by author
  prefs: []
  type: TYPE_NORMAL
- en: Now, suppose for some reason the second store assigned coupons to 90% of the
    customers, whereas the first store assigned it to 50%. What happens if we ignore
    this and use the same approach as previously and take an average of all treated
    customers’ spending? Because customers of the second store have a higher treatment
    rate, their average spending will take a larger weight in our estimate and thereby
    result in an upward bias.
  prefs: []
  type: TYPE_NORMAL
- en: In other words, we no longer have a truly randomized experiment because the
    probability of receiving a coupon now depends on the store. Moreover, because
    treated customers in the two stores also have substantially different spending
    on average, the store a customer belongs to is a confounding variable in causal
    inference speak.
  prefs: []
  type: TYPE_NORMAL
- en: 'Mathematically, if we use the simple average spending of treated customers,
    this time, instead of having this:'
  prefs: []
  type: TYPE_NORMAL
- en: 'we end up with this:'
  prefs: []
  type: TYPE_NORMAL
- en: Indeed, repeating the simulation and plotting the results, we see that the distribution
    of the average spending is now centered far from the true mean.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/e6bd69402f8d95a266b510b1b598559d.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2 by author
  prefs: []
  type: TYPE_NORMAL
- en: Weighted Average
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'All is not lost, however. Since we know that our experiment was messed up because
    assignment rates were different between stores, we can correct it by taking a
    weighted average of treated customers’ spending, where weights represent the proportion
    of customers in each store. This means, we can reclaim random assignment of treatment
    once we condition on the store information:'
  prefs: []
  type: TYPE_NORMAL
- en: where *Xi* represents store membership of customer *i*
  prefs: []
  type: TYPE_NORMAL
- en: and obtain unbiased estimates of our causal estimand, *E[Yi(1)]*.
  prefs: []
  type: TYPE_NORMAL
- en: 'The math now works as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: where the first equation is due to the law of iterated expectations and the
    second one is due to conditional independence.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let *n1* and *n2* denote the number of customers in both stores. Similarly,
    let *n1T* and *n2T* represent the number of treated customers in both stores.
    Then the above estimator can be computed from the data as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Sure enough, if we repeat the previous sampling process
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: we see that the average of weighted averages is again right on the true mean.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3d6985c150c18c0287700c95460b953c.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3 by author
  prefs: []
  type: TYPE_NORMAL
- en: IPW
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let’s now do some algebraic manipulation by rewriting the mean spending in
    store 1:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Doing the same for store 2 and plugging them back in we have the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Denote the proportion of treated customers in store 1 as
  prefs: []
  type: TYPE_NORMAL
- en: 'and similarly for store 2, then we can simplify the previous equation into:'
  prefs: []
  type: TYPE_NORMAL
- en: where *p(Xi)* is the probability of receiving treatment conditional on the confounding
    variable, aka the **propensity score**,
  prefs: []
  type: TYPE_NORMAL
- en: Notice, we started with one weighted average and ended up with just another
    weighted average that uses
  prefs: []
  type: TYPE_NORMAL
- en: as weights. This is the well-known **inverse propensity weighted estimator.**
  prefs: []
  type: TYPE_NORMAL
- en: Running the previous analysis with this estimator
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: gives us the same unbiased estimate as before.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/89e6504f9a4fe34192bd7ba18a75f578.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4 by author
  prefs: []
  type: TYPE_NORMAL
- en: Estimating the Average Treatment Effect
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now, our ultimate goal is to learn the average incremental spending that the
    marketing campaign has generated, aka the average treatment effect. To do that
    we need to also estimate the the population mean spending not given a coupon,
    *E[Y_i(0)]* and compare it against *E[Y_i(1)]*. Our estimand is now this:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Towards this, first we repeat the same argument for non-treated and obtain
    an unbiased estimate for *E[Y_i(0)]* as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'and finally combine them into estimating the impact:'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s now extend our previous analysis into estimating the impact of the campaign.
    Suppose spending among non-treated customers is distributed as *N(10,2²)* in both
    stores, so that the true effect of the campaign is 0.5*$10 + 0.5*$30 = $20.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: As shown below, both the weighted average and the IPW estimator are centered
    around the true effect of $20, whereas the distribution of the simple average
    without controlling for store membership is centered around $23, 15% larger than
    the true effect.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0e115825533f1c87374aa618963ebdd4.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 5 by author
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The IPW estimator has a long history in causal inference. The goal of this post
    was to develop an intuition for this well-known estimator through a simple example.
    Using a marketing case we have seen that the hallmark of this method is to correct
    for unequal treatment assignment mechanisms. Moreover, we have shown that the
    method is an extension of the weighted average estimator.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] Richard K. Crump, V. Joseph Hotz, Guido W. Imbens, Oscar A. Mitnik. [Dealing
    with limited overlap in estimation of average treatment effects.](https://academic.oup.com/biomet/article-abstract/96/1/187/235329?redirectedFrom=fulltext&login=false)
    (2009), *Biometrika*.'
  prefs: []
  type: TYPE_NORMAL
- en: '[2] Stefan Wager, [Stats 361: Causal Inference](https://web.stanford.edu/~swager/stats361.pdf)
    (Spring 2020), *Stanford University.*'
  prefs: []
  type: TYPE_NORMAL
- en: Code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The code for this analysis can be found in my github [repository](https://github.com/muratunalphd/Blog-Posts).
  prefs: []
  type: TYPE_NORMAL
- en: Thanks for reading!
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: My goal is to record my own learning and share it with others who might find
    it useful. Please let me know if you find any mistakes or have any comments/suggestions.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
