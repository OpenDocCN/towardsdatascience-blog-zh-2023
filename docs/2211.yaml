- en: Analyzing Humanitarian Data Unstructured Excel Tables with ChatGPT Code Interpreter
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 ChatGPT 代码解释器分析人道主义数据的非结构化 Excel 表格
- en: 原文：[https://towardsdatascience.com/analyzing-humanitarian-data-unstructured-excel-tables-with-chatgpt-code-interpreter-ccb8cabfa146?source=collection_archive---------3-----------------------#2023-07-10](https://towardsdatascience.com/analyzing-humanitarian-data-unstructured-excel-tables-with-chatgpt-code-interpreter-ccb8cabfa146?source=collection_archive---------3-----------------------#2023-07-10)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/analyzing-humanitarian-data-unstructured-excel-tables-with-chatgpt-code-interpreter-ccb8cabfa146?source=collection_archive---------3-----------------------#2023-07-10](https://towardsdatascience.com/analyzing-humanitarian-data-unstructured-excel-tables-with-chatgpt-code-interpreter-ccb8cabfa146?source=collection_archive---------3-----------------------#2023-07-10)
- en: Some Initial Exploration with Code Interpreter
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用代码解释器的一些初步探索
- en: '[](https://medium.com/@astrobagel?source=post_page-----ccb8cabfa146--------------------------------)[![Matthew
    Harris](../Images/4fa3264bb8a028633cd8d37093c16214.png)](https://medium.com/@astrobagel?source=post_page-----ccb8cabfa146--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ccb8cabfa146--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ccb8cabfa146--------------------------------)
    [Matthew Harris](https://medium.com/@astrobagel?source=post_page-----ccb8cabfa146--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@astrobagel?source=post_page-----ccb8cabfa146--------------------------------)[![Matthew
    Harris](../Images/4fa3264bb8a028633cd8d37093c16214.png)](https://medium.com/@astrobagel?source=post_page-----ccb8cabfa146--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ccb8cabfa146--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ccb8cabfa146--------------------------------)
    [Matthew Harris](https://medium.com/@astrobagel?source=post_page-----ccb8cabfa146--------------------------------)'
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4a2cd25b8ff9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fanalyzing-humanitarian-data-unstructured-excel-tables-with-chatgpt-code-interpreter-ccb8cabfa146&user=Matthew+Harris&userId=4a2cd25b8ff9&source=post_page-4a2cd25b8ff9----ccb8cabfa146---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ccb8cabfa146--------------------------------)
    ·10 min read·Jul 10, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fccb8cabfa146&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fanalyzing-humanitarian-data-unstructured-excel-tables-with-chatgpt-code-interpreter-ccb8cabfa146&user=Matthew+Harris&userId=4a2cd25b8ff9&source=-----ccb8cabfa146---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[关注](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4a2cd25b8ff9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fanalyzing-humanitarian-data-unstructured-excel-tables-with-chatgpt-code-interpreter-ccb8cabfa146&user=Matthew+Harris&userId=4a2cd25b8ff9&source=post_page-4a2cd25b8ff9----ccb8cabfa146---------------------post_header-----------)
    发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ccb8cabfa146--------------------------------)
    · 10 min read · Jul 10, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fccb8cabfa146&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fanalyzing-humanitarian-data-unstructured-excel-tables-with-chatgpt-code-interpreter-ccb8cabfa146&user=Matthew+Harris&userId=4a2cd25b8ff9&source=-----ccb8cabfa146---------------------clap_footer-----------)'
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fccb8cabfa146&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fanalyzing-humanitarian-data-unstructured-excel-tables-with-chatgpt-code-interpreter-ccb8cabfa146&source=-----ccb8cabfa146---------------------bookmark_footer-----------)![](../Images/9a4db24a0029f8aac36fa5b615500686.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fccb8cabfa146&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fanalyzing-humanitarian-data-unstructured-excel-tables-with-chatgpt-code-interpreter-ccb8cabfa146&source=-----ccb8cabfa146---------------------bookmark_footer-----------)![](../Images/9a4db24a0029f8aac36fa5b615500686.png)'
- en: Created by DALL-E2 with prompt “child’s crayon drawing of a happy robot processing
    data, with graphs in the background”
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 由 DALL-E2 创建，提示为“儿童的蜡笔画，展示一个快乐的机器人处理数据，背景有图表”
- en: TL;DR
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: TL;DR
- en: '*The new experimental feature ‘*[*Code Interpreter*](https://openai.com/blog/chatgpt-plugins#code-interpreter)*’
    provides native support for generating and running Python code as part of using
    ChatGPT. It shows great potential for performing data engineering and analysis
    tasks, providing a conversational interface that non-technical users could potentially
    use. This article presents some tests of ChatGPT (GPT-4) Code Interpreter on an
    unstructured Excel table from my* [*previous blog post*](https://medium.com/towards-data-science/parsing-irregular-spreadsheet-tables-in-humanitarian-datasets-with-some-help-from-gpt-3-57efb3d80d45)*,
    to see if it is able to automatically convert this table to a more standard form
    that could be loaded into a database. With limited prompting, it was able to identify
    the hierarchical heading structure but was unable to generate code that would
    parse the table accurately. On adjusting the prompt to suggest using the openpyxl
    Python library to extract information about Excel merged cells, it was able to
    parse the table in one attempt. However, on repeating the task with the exact
    same prompt, it failed. With no control yet over the temperature parameter to
    make results more deterministic, Code Interpreter does not appear able to tackle
    this particular task consistently. It’s early days though and only a beta feature,
    the pattern for automated data processing using Large Language Models is likely
    here to stay and will no doubt improve over time.*'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: This week ChatGPT released a new feature called [Code Interpreter](https://openai.com/blog/chatgpt-plugins#code-interpreter),
    which allows ChatGPT to generate and call Python code, as well as upload data
    files to perform tasks such as data analysis. As I’ve explored in [previous blog
    posts](https://medium.com/me/stories/public), Large Language Models have the potential
    for simplifying data engineering and analysis tasks. The [LangChain](https://python.langchain.com/docs/get_started/introduction.html)
    project has [some great patterns](https://python.langchain.com/docs/use_cases/tabular),
    and there is already a lot of commercial activity in this area, so it’s interesting
    to see OpenAI starting to offer native support.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: There are many articles already available exploring OpenAI Code Interpreter,
    but I wondered how well it might perform using some of the tabular data I’ve previously
    explored as found on the amazing [Humanitarian Data Exchange](https://data.humdata.org/)
    (HDX). Being able to offer natural language interfaces for platforms such as HDX
    opens the way for less technical users to explore and understand this data, which
    has implications for anticipating and accelerating response times for humanitarian
    disaster events.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: Getting Access to Open AI’s Code Interpreter
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Code Interpreter is an ‘Alpha’ feature currently, meaning it’s in an early
    testing phase and not part of standard ChatGPT. To access it you will need to:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: Be a [ChatGPT+](https://openai.com/blog/chatgpt-plus) subscriber, costing $20
    per month
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 成为[ChatGPT+](https://openai.com/blog/chatgpt-plus)订阅者，费用为每月 $20
- en: Go to [https://chat.openai.com/](https://chat.openai.com/)
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问[https://chat.openai.com/](https://chat.openai.com/)
- en: Select the “…” next to your name bottom-left, and select “Settings”
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择左下角你名字旁的“…”并选择“设置”
- en: Click on “Beta Features” and activate “Code Interpreter”
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“Beta 功能”并激活“代码解释器”
- en: Back in the chat window hover over either GPT-3.5 or GPT-4 and select “Code
    Interpreter”
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 回到聊天窗口，将鼠标悬停在 GPT-3.5 或 GPT-4 上，并选择“代码解释器”
- en: It’s worth noting that originally you had to be on OpenAI’s plugin waitlist,
    but I’m not sure if that’s still the case. The features appeared for me even though
    I’ve not had confirmation of being given access via the list. If the above doesn’t
    work, you might [need to be added](https://openai.com/waitlist/plugins).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，最初你必须在 OpenAI 的插件等候名单上，但我不确定是否仍然如此。尽管我没有收到列表中的访问确认，但这些功能仍然出现在我这里。如果上述方法无效，你可能[需要被添加](https://openai.com/waitlist/plugins)。
- en: Analyzing Unstructured Tables in Excel Files
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析 Excel 文件中的非结构化表格
- en: As mentioned in a [previous blog post](https://medium.com/towards-data-science/parsing-irregular-spreadsheet-tables-in-humanitarian-datasets-with-some-help-from-gpt-3-57efb3d80d45),
    tables in Excel files can come in all sorts of wonderful forms with merged cells,
    blank rows, and other things which can make automated processing a bit of a challenge.
    For this article, I decided to try using [GPT-4](https://openai.com/research/gpt-4)
    with Code Interpreter to analyze a typical example of an Excel table as found
    on the Humanitarian Data Exchange (HDX) …
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如[之前的博客文章](https://medium.com/towards-data-science/parsing-irregular-spreadsheet-tables-in-humanitarian-datasets-with-some-help-from-gpt-3-57efb3d80d45)中提到的，Excel
    文件中的表格可以有各种奇妙的形式，包括合并单元格、空白行等，这些都可能使自动处理变得有些挑战。对于这篇文章，我决定尝试使用[GPT-4](https://openai.com/research/gpt-4)与代码解释器来分析在人道数据交换（HDX）中发现的
    Excel 表格的典型示例……
- en: '![](../Images/b8a93c73e798926ce23cb65154d977a4.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b8a93c73e798926ce23cb65154d977a4.png)'
- en: Example of an irregular table in Excel, with blank top rows, labels and merged
    cells. Perfectly readable for humans, but a challenge to parse for data science.
    This file was sourced from the [Humanitarian Data Exchange](https://data.humdata.org/dataset/kenya-number-of-acreage-under-irrigation-in-bomet-county)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Excel 中不规则表格的示例，包括空白的顶部行、标签和合并单元格。对人类来说完全可读，但对数据科学来说是一个挑战。这个文件来自[人道数据交换](https://data.humdata.org/dataset/kenya-number-of-acreage-under-irrigation-in-bomet-county)
- en: Though Code Interpreter has access to open datasets, it doesn’t yet include
    HDX and doesn’t have the ability to access the internet. I expect this will change
    quite soon, but in the meantime, I downloaded the file, started a session on [https://chat.openai.com/](https://chat.openai.com/)
    as described above, then uploaded this file by clicking the ‘+’ in the chat entry
    box …
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管代码解释器可以访问开放数据集，但它尚未包含 HDX，也没有访问互联网的能力。我预计这很快会有所改变，但在此期间，我下载了文件，按照上述描述在[https://chat.openai.com/](https://chat.openai.com/)上开始了一个会话，然后通过点击聊天输入框中的“+”上传了这个文件……
- en: '![](../Images/69cef3f4e5009e57a165eb41561b2d5a.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/69cef3f4e5009e57a165eb41561b2d5a.png)'
- en: After uploading, ChatGPT gets right into things by loading the data into Python
    Pandas and doing some initial analysis …
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 上传后，ChatGPT 立即开始工作，将数据加载到 Python Pandas 中，并进行一些初步分析……
- en: '![](../Images/e1126a39f78c6591b5a53c7caf0d2d4a.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e1126a39f78c6591b5a53c7caf0d2d4a.png)'
- en: Right away it has spotted that the table in the sheet is somewhat irregular,
    and immediately tries to address this …
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 它立刻发现表格在工作表中有些不规则，并立即尝试解决这个问题……
- en: '![](../Images/4041dba882323f06ada8ac2e75956f90.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4041dba882323f06ada8ac2e75956f90.png)'
- en: That’s actually spot on. In fact, it goes on to ask …
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这实际上非常准确。事实上，它接着询问了……
- en: '![](../Images/0cdf2a80d10e5b3e70743683aff7284b.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0cdf2a80d10e5b3e70743683aff7284b.png)'
- en: I responded …
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我回应道……
- en: '![](../Images/511ecc60bd475380521e6a2d567fd9f7.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/511ecc60bd475380521e6a2d567fd9f7.png)'
- en: It’s also possible to see how exactly it came to this conclusion by selecting
    the ‘Show Work’ dropdown under each response which provides the generated Python
    code and result …
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 通过选择每个响应下的“显示工作”下拉菜单，可以看到它是如何得出结论的，提供生成的 Python 代码和结果……
- en: '![](../Images/dcb4f53e273987c70f136b4e15d4de03.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dcb4f53e273987c70f136b4e15d4de03.png)'
- en: Its approach seems reasonable, but it’s worth noting that it doesn’t use native
    Excel information about merged cells, instead directly loading into Pandas.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 它的方法似乎合理，但值得注意的是，它没有使用关于合并单元格的原生 Excel 信息，而是直接加载到 Pandas 中。
- en: ChatGPT gets to work and automatically starts trying to process the data …
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT 开始工作并自动尝试处理数据……
- en: '![](../Images/0e09835b4509398a0717d8548a8c15de.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0e09835b4509398a0717d8548a8c15de.png)'
- en: But it fails at this right away. On selecting ‘Show Work’ we see that it has
    generated some Python for parsing our table …
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 但它立即失败了。在选择“显示工作”时，我们看到它生成了一些用于解析我们表格的 Python 代码……
- en: '[PRE0]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: But this leads to a bounds error …
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 但这导致了一个边界错误……
- en: '![](../Images/ca831e732e225558e82abbe5fcfceb76.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ca831e732e225558e82abbe5fcfceb76.png)'
- en: ChatGPT doesn’t give up and automatically starts debugging …
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT 没有放弃，自动开始调试……
- en: '![](../Images/38a360323a41acd9840296696e05f813.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/38a360323a41acd9840296696e05f813.png)'
- en: Which is pretty impressive in that it seems to have identified the issue correctly.
    However, it’s perhaps less than impressive given it had already identified the
    exact column hierarchy at the very start of the conversation and seems to have
    ‘Lost’ this information.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这相当令人印象深刻，因为它似乎正确识别了问题。然而，考虑到它在对话开始时已经准确识别了列层次结构，结果却似乎“丢失”了这些信息，这让人有些失望。
- en: Again, it gets back into things and automatically proceeds …
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，它回到了任务中并自动继续进行……
- en: '![](../Images/5be4ecced6a8e955a775e30d2adb7313.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5be4ecced6a8e955a775e30d2adb7313.png)'
- en: Which gives a table with headers like this …
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这生成了一个带有如下标题的表格……
- en: '![](../Images/fd2cb2b0f5d48f55d41978a7d543ea24.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fd2cb2b0f5d48f55d41978a7d543ea24.png)'
- en: Where we see data included in the column heading, suggesting it hasn’t identified
    where the column end and data starts. In fact, it even spots this and bravely
    continues …
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到数据被包括在列标题中，表明它没有识别出列的结束和数据的开始。事实上，它甚至发现了这一点并勇敢地继续……
- en: '![](../Images/ada16a2f8cdc66071e02c24c5560dbb8.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ada16a2f8cdc66071e02c24c5560dbb8.png)'
- en: At this point it gets itself into a bit of a confused state, trying out lots
    of things in cycles not displayed here.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，它陷入了一种有些混乱的状态，尝试了许多在此未显示的循环。
- en: Eventually, I think the token limit was breached and generation stopped, with
    the table looking like this …
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，我认为超出了令牌限制，生成停止了，表格看起来是这样的……
- en: '![](../Images/b014296ed8f16b4947f4af452e4c5cba.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b014296ed8f16b4947f4af452e4c5cba.png)'
- en: Spot-checking the above values in ‘Show Work’ output compared to the original
    table, we see that for the last ‘Total’ row the values look correct, but there
    are two ‘Bomet Central Femail N Bomet’ column headings. It spots this …
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在‘显示工作’输出中对比上述值与原始表格，我们看到最后一行“总计”的值看起来是正确的，但有两个“Bomet Central Femail N Bomet”列标题。它发现了这一点……
- en: '![](../Images/75dc691f421fd241fed49eab3ad61fe7.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/75dc691f421fd241fed49eab3ad61fe7.png)'
- en: Since it seemed so close, I asked ChatGPT to proceed …
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 由于它看起来非常接近，我要求 ChatGPT 继续……
- en: '![](../Images/1e8746bea8f473453660e9b633e86adf.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1e8746bea8f473453660e9b633e86adf.png)'
- en: I had left it a little while before asking it to continue which I suspect resulted
    in the code environment job being terminated. It seemed happy to start this back
    up again, but in doing so had lost some variables …
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我让它等了一会儿才要求继续，我怀疑这导致了代码环境任务被终止。它似乎很乐意再次开始，但这样做时丢失了一些变量……
- en: '![](../Images/ed955be875863af20a00540a879cb82d.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ed955be875863af20a00540a879cb82d.png)'
- en: I did what was prompted and reuploaded the file, and it picked things up again.
    Eventually, this is the table it produced …
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我按照提示重新上传了文件，它再次开始处理。最终，这是它生成的表格……
- en: '![](../Images/1a2528d93581eb11be7df04ef69d8449.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1a2528d93581eb11be7df04ef69d8449.png)'
- en: Which is great …. for *just* the Total rows from the original table. ChatGPT
    has lost all other rows where the data was split by acreage, so in fact, the parsing
    has failed.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这非常好……对于原始表格中的*仅*“总计”行。ChatGPT 丢失了所有其他被按面积拆分的数据行，因此解析实际上失败了。
- en: I pointed out that it was in fact missing a column related to land size, which
    it had in fact identified immediately after the first initial upload …
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我指出它实际上缺少一个与土地面积相关的列，而它在第一次初始上传后确实立即识别了这一点……
- en: '![](../Images/8692e5eab1494cc53943b27b626eeffb.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8692e5eab1494cc53943b27b626eeffb.png)'
- en: At this point ChatGPT started off on another quest, iterating through multiple
    attempts at parsing the sheet, none of which we ultimately successful. A full
    link to the chat can be found [here](https://chat.openai.com/share/891b77ef-411e-4b7b-85f1-7aa77438696f).
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，ChatGPT 开始了另一个任务，尝试解析表格的多个方法，但没有一个最终成功。聊天的完整链接可以在[这里](https://chat.openai.com/share/891b77ef-411e-4b7b-85f1-7aa77438696f)找到。
- en: I started a brand new chat session and [tried again](https://chat.openai.com/share/caad774e-c45e-415c-b3a2-1a881057058b),
    which resulted in different results, which has implications for the reproducibility
    of this technique. But no matter how much I tried, the results were never correct.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我开始了一个全新的聊天会话并[再次尝试](https://chat.openai.com/share/caad774e-c45e-415c-b3a2-1a881057058b)，这导致了不同的结果，这对该技术的可重复性有影响。但无论我尝试了多少次，结果从未正确。
- en: Giving ChatGPT Some Coding Suggestions
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 给 ChatGPT 一些编码建议
- en: In my [previous blog post](https://medium.com/towards-data-science/parsing-irregular-spreadsheet-tables-in-humanitarian-datasets-with-some-help-from-gpt-3-57efb3d80d45),
    I was able to achieve the most success in parsing tables like the example provided
    by using information extracted from Excel to indicate which cells had been merged.
    This is key to understanding the table heading hierarchy and what we humans use
    when looking at Excel tables. If using only Pandas Excel parsing — which is what
    ChatGPT did in our test — rather than interrogating the Excel structure cell-by-cell
    this information is lost, making it a lot harder to successfully parse tables
    with merged heading cells.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在我[之前的博客文章](https://medium.com/towards-data-science/parsing-irregular-spreadsheet-tables-in-humanitarian-datasets-with-some-help-from-gpt-3-57efb3d80d45)中，我能够通过使用从
    Excel 中提取的信息来表示哪些单元格已合并，来成功解析像提供的示例那样的表格。这对于理解表格标题的层次结构以及我们人类在查看 Excel 表格时的使用非常关键。如果仅使用
    Pandas Excel 解析——这就是 ChatGPT 在我们的测试中所做的——而不是逐个询问 Excel 结构，这些信息会丢失，使成功解析包含合并标题单元格的表格变得更加困难。
- en: So what about if we give ChatGPT a tip to use ‘openpyxl’ directly and to take
    into account merged cells?
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，如果我们给 ChatGPT 提示直接使用 'openpyxl' 并考虑合并单元格会怎么样呢？
- en: '![](../Images/294cc1891d315c91a516321057541a58.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/294cc1891d315c91a516321057541a58.png)'
- en: Just like last time, it gets things right from the start …
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 就像上次一样，它从一开始就正确处理了事情……
- en: '![](../Images/77409e101ae48f86c1ed7d3f701a6a64.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/77409e101ae48f86c1ed7d3f701a6a64.png)'
- en: And again proceeds with its analysis …
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 然后再次进行分析……
- en: '![](../Images/a872451a1b1ffe096695de0f1b989ef3.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a872451a1b1ffe096695de0f1b989ef3.png)'
- en: However, this time, having been provided some guidance regarding technique ….
    It flattened the table almost perfectly with just the single prompt above and
    no further intervention.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这一次，在提供了一些关于技术的指导后……它几乎完美地展平了表格，仅使用上述单一提示而无需进一步干预。
- en: '![](../Images/00cf3c49df26271ef69b2a24ab0d9547.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/00cf3c49df26271ef69b2a24ab0d9547.png)'
- en: Results of ChatGPT ‘Code Interpreter’ processing an unstructured Excel table
    into a form that might be loaded into a SQL Database. This was created with a
    prompt that suggested using the ‘openpyxl’ Python library to identify merged cells
    in column headings
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT '代码解释器' 处理一个未结构化的 Excel 表格，将其转换成可能被加载到 SQL 数据库中的形式。这个结果是通过提示使用 'openpyxl'
    Python 库来识别列标题中的合并单元格创建的。
- en: The only issue is that last row, but with further prompting we can remove this
    easily. To see the full interaction and generated code for this see [here](https://chat.openai.com/share/0afcb347-1abe-49d4-a015-b4ed80e12a13).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一的问题是最后一行，但通过进一步提示我们可以轻松去除。要查看完整的互动和生成的代码，请查看[这里](https://chat.openai.com/share/0afcb347-1abe-49d4-a015-b4ed80e12a13)。
- en: I asked ChatGPT to generate the full code to see what it finally came up with
    …
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我要求 ChatGPT 生成完整的代码以查看它最后得出了什么……
- en: '![](../Images/c7182af50e8a2d274d2809eb91b7d718.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c7182af50e8a2d274d2809eb91b7d718.png)'
- en: '[PRE1]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Which seems reasonable. It’s not generic and has lines specific to the file
    being processed. I suspect we would need more prompting to (maybe) make ChaGPT
    generate generic code, but for the task in this study it was able to parse the
    unstructured table nicely.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这似乎是合理的。它不是通用的，而是针对正在处理的文件具有特定的行。我怀疑我们可能需要更多的提示来（也许）使 ChatGPT 生成通用代码，但对于本研究中的任务，它能够很好地解析未结构化的表格。
- en: Great result!
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 很棒的结果！
- en: Given the fact in the first test that ChatGPT gave different results with the
    same prompt, I decided to repeat the exact same succsessful prompt to see how
    things behaved in the successful test. Sadly, it came up with an entirely different,
    and [incorrect answer](https://chat.openai.com/share/1fe1e956-b814-4210-a034-284fa7bef228)
    using the *exact same prompt.*
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于第一次测试中 ChatGPT 使用相同提示得出了不同的结果，我决定重复完全相同的成功提示以查看成功测试中的表现。遗憾的是，它得出了完全不同的且[不正确的答案](https://chat.openai.com/share/1fe1e956-b814-4210-a034-284fa7bef228)，使用了*完全相同的提示*。
- en: NOT a great result!
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 结果不太理想！
- en: In the API the model can be made more deterministic and produce repeatable results
    by decreasing the [temperature parameter](https://platform.openai.com/docs/api-reference/chat),
    but as Code Interpreter isn’t available in the API just yet, I was not able to
    experiment with this.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: Conclusions
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After initially failing, we were able to prompt ChatGPT to correctly parse an
    unstructured table by providing some coding tips about how one might do this in
    Python, which is a pretty amazing result actually. However, results were not reproducible
    with the exact same prompt failing on a second attempt. This is likely because
    we don’t yet have control over the model temperature parameter in this beta feature.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: Another interesting limitation was noted, for example when token limits are
    breached and completions stop before the task is complete, requiring another prompt
    to carry on. Also, the process is rather slow as ChatGPT goes through iterations
    trying out different chunks of code. It’s not yet a technique which could be applied
    to tasks requiring quick responses.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: Basically, Code Interpreter looks really impressive and shows great promise,
    but doesn’t appear ready just yet for the task attempted above.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: So for now at least, albeit a very short time … I have one up on ChatGPT. 😊
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
