["```py\nfrom sklearn.ensemble import BaggingClassifier \n\n# define base estimator \nest = LogisticRegression() # or est = SVC() or est = DecisionTreeClassifier\n\n# n_estimators defines the number of base estimators in the ensemble \n# max_samples defines number of samples to draw from X to train each base estimator \n\nbag_model = BaggingClassifier(base_estimator= est, n_estimators = 10, max_samples=1.0) \n\nbag_model = bag_model.fit(X_train, y_train) \n\nPrediction = bag_model.predict(X_test)\n```", "```py\nfrom sklearn.ensemble import AdaBoostClassifier\n\n# define base estimator (requires support for sample weighting)\nest = LogisticRegression() # or est = SVC() or est = DecisionTreeClassifier â€¦.\n\n# n_estimators defines maximum number of estimators at which boosting is terminated\n# learning_rate defines the weight applied to each classifier at each boosting iteration\nboost_model = AdaBoostClassifier(base_estimator= est, n_estimators = 10, learning_rate=1)\n\nboost_model = boost_model.fit(X_train, y_train)\n\nPrediction = boost_model.predict(X_test)\n```"]