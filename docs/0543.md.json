["```py\n(R.weights(V.I, V.J) <= (R.d_k, R.k(V.J).T, R.q(V.I))) | [F.product, F.softmax_agg(agg_terms=[V.J])],\n(R.attention(V.I) <= (R.weights(V.I, V.J), R.v(V.J)) | [F.product]\n```", "```py\n(R.weights(V.I, V.J) <= (\n    R.d_k, R.k(V.J).T, R.q(V.I), R.special.leq(V.J, V.I)\n)) | [F.product, F.softmax_agg(agg_terms=[V.J])],\n```", "```py\n(R.weights(V.I, V.J) <= (\n    R.d_k, R.k(V.J).T, R.q(V.I),\n    R.special.leq(V.D, 5), R.special.sub(V.I, V.J, V.D),\n)) | [F.product, F.softmax_agg(agg_terms=[V.J])],\n```", "```py\n(R.weights(V.I, V.J) <= (\n    R.d_k, R.k(V.J).T, R.q(V.I),\n    R.special.mod(V.D, 5, 0), R.special.sub(V.I, V.J, V.D),\n)) | [F.product, F.softmax_agg(agg_terms=[V.J])],\n```", "```py\n(R.weights(V.I, V.J) <= (R.d_k, R.k(V.I, V.J).T, R.q(V.I, V.J))) | [F.product, F.softmax_agg(agg_terms=[V.J])],\n(R.attention(V.I) <= (R.weights(V.I, V.J), R.v(V.I, V.J)) | [F.product],\n\nR.q(V.I, V.J) <= (R.n(V.I)[W_qn], R.e(V.I, V.J)[W_qe]),\nR.k(V.I, V.J) <= (R.n(V.J)[W_kn], R.e(V.I, V.J)[W_ke]),\nR.v(V.I, V.J) <= (R.n(V.J)[W_vn], R.e(V.I, V.J)[W_ve]),\n```", "```py\nR.q(V.I) <= R.input(V.I)[W_q],\nR.k(V.I) <= R.input(V.I)[W_k],\nR.v(V.I) <= R.input(V.I)[W_v],\n```", "```py\n(R.norm1(V.I) <= (R.attention(V.I), R.q(V.I))) | [F.norm],\n```", "```py\n(R.mlp(V.I)[W_2] <= (R.norm(V.I)[W_1])) | [F.relu],\n```", "```py\n(R.norm2(V.I) <= (R.mlp(V.I), R.norm1(V.I))) | [F.norm],\n```", "```py\nR.q(V.I) <= R.input(V.I)[W_q],\nR.k(V.I) <= R.input(V.I)[W_k],\nR.v(V.I) <= R.input(V.I)[W_v],\n\nR.d_k[1 / math.sqrt(embed_dim)],\n(R.weights(V.I, V.J) <= (R.d_k, R.k(V.J).T, R.q(V.I))) | [F.product, F.softmax_agg(agg_terms=[V.J])],\n(R.attention(V.I) <= (R.weights(V.I, V.J), R.v(V.J)) | [F.product],\n\n(R.norm1(V.I) <= (R.attention(V.I), R.q(V.I))) | [F.norm],\n(R.mlp(V.I)[W_2] <= (R.norm(V.I)[W_1])) | [F.relu],\n(R.norm2(V.I) <= (R.mlp(V.I), R.norm1(V.I))) | [F.norm],\n```"]