["```py\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport mne as mne\nsns.set_palette('pastel')\n\neeg = np.loadtxt('/Users/rodrigo/Post-Grad/Disciplines/Neural Signaling Processing/Aula_3/restEEG/OlhosAbertos.txt')\ncanais = pd.read_csv('/Users/rodrigo/Post-Grad/Disciplines/Neural Signaling Processing/Aula_3/restEEG/NOMEScanais.txt', dtype='str', header=None)\n\n# Sampling frequency 250Hz: \nHz = 250\n\neeg = pd.DataFrame(eeg, columns=canais.iloc[:,0].values)\neeg['Time(s)'] = np.arange(0, (1/Hz)*len(eeg), 1/Hz)\n```", "```py\n# Creating MNE object\nmne_info = mne.create_info(\n                    list(eeg.columns[:-1]),\n                    Hz,\n                    ch_types=['eeg']*len(eeg.columns[:-1]))\n\nmne_raw = mne.io.RawArray(eeg.iloc[:,:-1].values.T, mne_info)\n\n# Defining the electrodes architecture\nstandard_1020 = mne.channels.make_standard_montage('standard_1020')\nmne_raw.set_montage(standard_1020)\n```", "```py\n# Set filter parameters\nlowCut = 4 # Hz\nhighCut = 120 # Hz\nfreqNotch = 60 # Hz (eletric interference from the enviroment)\n\n# Apply bandpass and notch filter\nmne_raw.filter(lowCut, highCut, fir_design='firwin')\nmne_raw.notch_filter(freqNotch, fir_design='firwin')\n```", "```py\nica_obj = mne.preprocessing.ICA(\n                    n_components=0.95,\n                    method='infomax',\n                    max_iter=\"auto\",\n                    random_state=1,\n                    fit_params=dict(extended=True)).fit(mne_raw)\n\nica = ica_obj.get_sources(mne_raw).get_data()\n\nica_obj.plot_components(picks=None,show=True, inst=mne_raw)\n```"]