["```py\nisland_names = ['The Neglected Holm', 'The Barnacle Key', 'The Dancing Enclave',\n                'The Peaceful Island', 'Allerport Reef', 'Cresstead Archipelago',\n                'Petromeny Islet', 'Esterisle Peninsula', 'Traygami Cay',\n                'Savaside Peninsula']\n\nnew_island_names_loop = []\n\nfor island in island_names:\n    new_island = island.replace(' ', '')\n    new_island = new_island.replace('The', '')\n    # turns first letter into lowercase\n    new_island = new_island[0].lower() + new_island[1:]\n    new_island_names_loop.append(new_island)\n```", "```py\nisland_names = ['The Neglected Holm', 'The Barnacle Key', 'The Dancing Enclave',\n                'The Peaceful Island', 'Allerport Reef', 'Cresstead Archipelago',\n                'Petromeny Islet', 'Esterisle Peninsula', 'Traygami Cay',\n                'Savaside Peninsula']\n\n# This is incomprehensible and no one sane would approach the problem this way\n\nnew_island_incomprehensible_comprehenson = [\n    island.replace(' ', '').replace('The', '')[0].lower() +\n    island.replace(' ', '').replace('The', '')[1:]\n    for island in island_names]\n```", "```py\nisland_names = ['The Neglected Holm', 'The Barnacle Key', 'The Dancing Enclave',\n                'The Peaceful Island', 'Allerport Reef', 'Cresstead Archipelago',\n                'Petromeny Islet', 'Esterisle Peninsula', 'Traygami Cay',\n                'Savaside Peninsula']\n\n# Understanding that list comprehensions come from functional languages\n# helped me realize you're supposed to define a function for complex # transformations\n# This also helps improve code quality by putting the transformation logic inside\n# a function\n\ndef prep_island_name(island):\n    new_island = island.replace(' ', '')\n    new_island = new_island.replace('The', '')\n    return new_island[0].lower() + new_island[1:]\n\nnew_island_comprehension = [prep_island_name(island) for island in island_names]\n```", "```py\nisland_names = ['The Neglected Holm', 'The Barnacle Key', 'The Dancing Enclave', 'The Peaceful Island',\n                'Allerport Reef', 'Cresstead Archipelago', 'Petromeny Islet', 'Esterisle Peninsula', 'Traygami Cay',\n                'Savaside Peninsula']\n\nnew_island_dict = {}\nfor island in island_names:\n    new_island = island.replace(' ', '')\n    new_island = new_island.replace('The', '')\n    # turns first letter into lowercase\n    new_island_dict[new_island] = new_island[0].lower() + new_island[1:]\n```", "```py\nisland_names = ['The Neglected Holm', 'The Barnacle Key', 'The Dancing Enclave',\n                'The Peaceful Island', 'Allerport Reef', 'Cresstead Archipelago',\n                'Petromeny Islet', 'Esterisle Peninsula', 'Traygami Cay',\n                'Savaside Peninsula']\n\ndef prep_island_name(island):\n    new_island = island.replace(' ', '')\n    new_island = new_island.replace('The', '')\n    return new_island\n\ndef turn_first_letter_lowercase(string):\n    return string[0].lower() + string[1:]\n\n# One challenge of using a dictionary comprehension is that we can end up making\n# the same function call multiple times.\nnew_island_comprehension = {prep_island_name(island): \nturn_first_letter_lowercase(prep_island_name(island))\n                            for island in island_names}\n```", "```py\nisland_names = ['The Neglected Holm', 'The Barnacle Key', 'The Dancing Enclave',\n                'The Peaceful Island', 'Allerport Reef', 'Cresstead Archipelago',\n                'Petromeny Islet', 'Esterisle Peninsula', 'Traygami Cay',\n                'Savaside Peninsula']\n\ndef prep_island_name(island):\n    new_island = island.replace(' ', '')\n    new_island = new_island.replace('The', '')\n    return new_island\n\ndef turn_first_letter_lowercase(string):\n    return string[0].lower() + string[1:]\n\n# by using a walrus operator we can call the function once and then assign it a\n# variable name in the comprehension name space, avoiding redundant function\n# calls\nnew_island_comprehension_walrus = {\n    (new_island := prep_island_name(island)): turn_first_letter_lowercase(new_island)\n    for island in island_names}\n```"]