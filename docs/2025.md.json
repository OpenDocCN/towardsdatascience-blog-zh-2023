["```py\nimport pyspark\nfrom pyspark.sql import SparkSession\n\nspark = SparkSession.builder.appName('hospital-stay').getOrCreate()\nspk_df = spark.read.csv('./data/train_data.csv', \n                        header = True, inferSchema = True)\n```", "```py\nspk_df.createOrReplaceTempView(\"dataset_view\")\n```", "```py\nage = \"21-30\"\nsdf = spark.sql(f\"SELECT * FROM dataset_view WHERE Age=='{age}'\")\n```", "```py\npdf = sdf.toPandas()\n```", "```py\nfig = px.scatter(dff, x = x, y = y, color = color_feature)\n```", "```py\nfig = px.histogram(dff, x = x, y = y, color = color_feature)\n```", "```py\nfig = px.ine(dff, x = x, y = y, color = color_feature)\n```", "```py\ndff = spark.sql(f\"SELECT * FROM dataset_view WHERE Age=='{age}'\").toPandas()\nvc = dff[feature].value_counts()\nfig = px.bar(vc, x = vc.index, y = vc.values)\n```", "```py\nfig = px.line(vc, x = vc.index, y = vc.values)\n```", "```py\nfig = px.pie(vc, x = vc.index, y = vc.values)\n```", "```py\nimport plotly.express as px\nfrom dash import Dash, dcc, html, callback, Input, Output\n```", "```py\napp = Dash(__name__)\n```", "```py\napp.layout = html.Div([ # dashboard layout\n    html.Div([ # Part 1\n        html.Div([\n            html.Label(['Age:'], style={'font-weight': 'bold', \"text-align\": \"center\"}),\n            dcc.Dropdown(\n                ['0-10', '11-20', '21-30', '31-40', '41-50', \n                '51-60', '61-70', '71-80', '81-90', '91-100',\n                'More than 100 Days'],\n                value='21-30',\n                id='numerical_age'\n            ),\n        ],\n        style={'width': '20%', 'display': 'inline-block'}),\n\n        html.Div([\n            html.Label(['Numerical Feature x:'], style={'font-weight': 'bold', \"text-align\": \"center\"}),\n            dcc.Dropdown(\n                ['patientid', \n                 'Hospital_code',\n                 'City_Code_Hospital'],\n                value='patientid',\n                id='axis_x',\n            )\n        ], style={'width': '20%', 'display': 'inline-block'}),\n\n        html.Div([\n            html.Label(['Numerical Feature y:'], style={'font-weight': 'bold', \"text-align\": \"center\"}),\n            dcc.Dropdown(\n                ['Hospital_code',\n                 'Admission_Deposit',\n                 'Bed Grade',\n                 'Available Extra Rooms in Hospital',\n                 'Visitors with Patient',\n                 'Bed Grade',\n                 'City_Code_Patient'],\n                value='Admission_Deposit',\n                id='axis_y'\n            ),\n        ], style={'width': '20%', 'display': 'inline-block'}),\n\n        html.Div([\n            html.Label(['Color Feature:'], style={'font-weight': 'bold', \"text-align\": \"center\"}),\n            dcc.Dropdown(\n                ['Severity of Illness',\n                 'Stay',\n                 'Department',\n                 'Ward_Type',\n                 'Ward_Facility_Code',\n                 'Type of Admission',\n                 'Hospital_region_code'],\n                value='Type of Admission',\n                id='color_feature'\n            ),\n        ], style={'width': '20%', 'display': 'inline-block'}),\n\n        html.Div([\n            html.Label(['Graph Style:'], style={'font-weight': 'bold', \"text-align\": \"center\"}),\n            dcc.Dropdown(\n                ['scatter',\n                 'histogram',\n                 'line'],\n                value='histogram',\n                id='numerical_graph_style'\n            ),\n        ], style={'width': '20%', 'float': 'right', 'display': 'inline-block'})\n    ], \n    style={\n        'padding': '10px 5px'\n    }),\n\n    html.Div([\n        dcc.Graph(id='numerical-graph-content')\n    ]),\n......\n```", "```py\n......\nhtml.Div([ # Part 2\n        html.Div([\n            html.Label(['Age:'], style={'font-weight': 'bold', \"text-align\": \"center\"}),\n            dcc.Dropdown(\n                ['0-10', '11-20', '21-30', '31-40', '41-50', \n                '51-60', '61-70', '71-80', '81-90', '91-100',\n                'More than 100 Days'],\n                value='21-30',\n                id='categorical_age'\n            ),\n        ],\n        style={'width': '25%', 'display': 'inline-block'}),\n\n        html.Div([\n            html.Label(['Categorical Feature:'], style={'font-weight': 'bold', \"text-align\": \"center\"}),\n            dcc.Dropdown(\n                ['Severity of Illness',\n                 'Stay',\n                 'Department',\n                 'Ward_Type',\n                 'Ward_Facility_Code',\n                 'Type of Admission',\n                 'Hospital_region_code'],\n                value='Stay',\n                id='categorical_feature'\n            ),\n        ], \n        style={'width': '25%', 'display': 'inline-block'}),\n\n        html.Div([\n            html.Label(['Color:'], style={'font-weight': 'bold', \"text-align\": \"center\"}),\n            dcc.Dropdown(\n                ['red',\n                 'green',\n                 'blue',\n                 'orange',\n                 'purple',\n                 'black',\n                 'yellow'],\n                value='blue',\n                id='categorical_color'\n            ),\n        ], \n        style={'width': '25%', 'display': 'inline-block'}),\n\n        html.Div([\n            html.Label(['Graph Style:'], style={'font-weight': 'bold', \"text-align\": \"center\"}),\n            dcc.Dropdown([\n                 'histogram',\n                 'bar',\n                 'line',\n                 'pie'],\n                value='bar',\n                id='categorical_graph_style'\n            ),\n        ], \n        style={'width': '25%', 'float': 'right', 'display': 'inline-block'})\n    ], \n    style={\n        'padding': '10px 5px'\n    }),\n\n    html.Div([\n        dcc.Graph(id='categorical-graph-content')\n    ])\n]) # end of dashboard layout\n```", "```py\n@callback(\n    Output('numerical-graph-content', 'figure'),\n    Input('axis_x', 'value'),\n    Input('axis_y', 'value'),\n    Input('numerical_age', 'value'),\n    Input('numerical_graph_style', 'value'),\n    Input('color_feature', 'value')\n)\ndef update_numerical_graph(x, y, age, graph_style, color_feature):\n    dff = spark.sql(f\"SELECT * FROM dataset_view WHERE Age=='{age}'\").toPandas()\n\n    if graph_style == 'line':\n        fig = px.line(dff, \n                 x = x, \n                 y = y, \n                 color = color_feature\n                )\n    elif graph_style == 'histogram':\n        fig = px.histogram(dff, \n                 x = x, \n                 y = y, \n                 color = color_feature\n                )\n    else:\n        fig = px.scatter(dff, \n                 x = x, \n                 y = y, \n                 color = color_feature\n                )\n\n    fig.update_layout(\n        title=f\"Relationship between {x} vs. {y}\",\n    )\n\n    return fig\n```", "```py\n@callback(\n    Output('categorical-graph-content', 'figure'),\n    Input('categorical_feature', 'value'),\n    Input('categorical_age', 'value'),\n    Input('categorical_graph_style', 'value'),\n    Input('categorical_color', 'value')\n)\ndef update_categorical_graph(feature, age, graph_style, color):\n    dff = spark.sql(f\"SELECT * FROM dataset_view WHERE Age=='{age}'\").toPandas()\n    vc = dff[feature].value_counts()\n\n    if graph_style == 'bar':\n        fig = px.bar(vc, \n                 x = vc.index, \n                 y = vc.values\n                )\n    elif graph_style == 'histogram':\n        fig = px.histogram(vc, \n                 x = vc.index, \n                 y = vc.values\n                )\n    elif graph_style == 'line':\n        fig = px.line(vc, \n                 x = vc.index, \n                 y = vc.values\n                )\n    else:\n        fig = px.pie(vc, \n                 names = vc.index, \n                 values = vc.values\n                )\n\n    if graph_style == 'line':\n        fig.update_traces(line_color=color)\n    elif graph_style != 'pie':\n        fig.update_traces(marker_color=color)\n\n    fig.update_layout(\n        title=f\"Feature {feature} Value Counts\",\n        xaxis_title=feature,\n        yaxis_title=\"Count\"\n    )\n\n    return fig\n```", "```py\nif __name__ == \"__main__\":\n    app.run_server()\n```"]