- en: Integrate Distributed Ray Serve Deployment with Kafka
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/integrate-distributed-ray-serve-deployment-with-kafka-181403f4e194?source=collection_archive---------1-----------------------#2023-07-16](https://towardsdatascience.com/integrate-distributed-ray-serve-deployment-with-kafka-181403f4e194?source=collection_archive---------1-----------------------#2023-07-16)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Learn how to simply combine Ray Serve Deployment with asynchronous Kafka Consumer
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@slanjr?source=post_page-----181403f4e194--------------------------------)[![Rostyslav
    Neskorozhenyi](../Images/7d8616b6a3c60bcc29fde5d0a72f13c9.png)](https://medium.com/@slanjr?source=post_page-----181403f4e194--------------------------------)[](https://towardsdatascience.com/?source=post_page-----181403f4e194--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----181403f4e194--------------------------------)
    [Rostyslav Neskorozhenyi](https://medium.com/@slanjr?source=post_page-----181403f4e194--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F8c7f264e81e5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintegrate-distributed-ray-serve-deployment-with-kafka-181403f4e194&user=Rostyslav+Neskorozhenyi&userId=8c7f264e81e5&source=post_page-8c7f264e81e5----181403f4e194---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----181403f4e194--------------------------------)
    ·5 min read·Jul 16, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F181403f4e194&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintegrate-distributed-ray-serve-deployment-with-kafka-181403f4e194&user=Rostyslav+Neskorozhenyi&userId=8c7f264e81e5&source=-----181403f4e194---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F181403f4e194&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintegrate-distributed-ray-serve-deployment-with-kafka-181403f4e194&source=-----181403f4e194---------------------bookmark_footer-----------)![](../Images/86f8c4b46bf6189e1dc7d0edbd8945ac.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Image is generated by [Midjourney](https://www.midjourney.com/)
  prefs: []
  type: TYPE_NORMAL
- en: '[Ray](https://github.com/ray-project/ray) is a modern open source framework
    that allows you to create distributed applications in Python with ease. You can
    create simple training pipelines, do hyperparameter tuning, data processing and
    model serving.'
  prefs: []
  type: TYPE_NORMAL
- en: Ray allows you to create online inference APIs with [Ray Serve](https://docs.ray.io/en/latest/serve/index.html).
    You can easily combine several ML models and custom business logic in one application.
    Ray Serve automatically creates an HTTP interface for your deployments, taking
    care of fault tolerance and replication.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/93c068fcae1fe686691387d9f713af16.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Ray ecosystem. Source: [https://docs.ray.io/en/latest/ray-air/getting-started.html](https://docs.ray.io/en/latest/ray-air/getting-started.html)
    ([APACHE 2.0](https://github.com/ray-project/ray/blob/releases/2.6.1/LICENSE)
    licence )'
  prefs: []
  type: TYPE_NORMAL
- en: But there is one thing that **Ray Serve** misses for now. Many modern distributed
    applications communicate through [Kafka](https://kafka.apache.org/), but there
    is no out-of-the-box way to connect Ray Serve service to Kafka topic.
  prefs: []
  type: TYPE_NORMAL
- en: But don’t panic. It will not take too much effort to teach Ray Serve to communicate
    with Kafka. So, let’s begin.
  prefs: []
  type: TYPE_NORMAL
- en: First of all we will need to prepare our local environment. We will use a docker-compose
    file with Kafka and [Kafdrop UI](https://github.com/obsidiandynamics/kafdrop)
    docker containers to start and explore our local…
  prefs: []
  type: TYPE_NORMAL
