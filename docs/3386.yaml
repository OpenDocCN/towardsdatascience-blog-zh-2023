- en: 'The Hardest Part: Defining A Target For Classification'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/the-hardest-part-defining-a-target-for-classification-50c34d37e0b8?source=collection_archive---------8-----------------------#2023-11-14](https://towardsdatascience.com/the-hardest-part-defining-a-target-for-classification-50c34d37e0b8?source=collection_archive---------8-----------------------#2023-11-14)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: It isn’t labeled ‘Target_Variable’ in your Production Database!
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@chrisb-maven?source=post_page-----50c34d37e0b8--------------------------------)[![Chris
    Bruehl](../Images/72156a3ad97687e0ae9b7fd89f8f915e.png)](https://medium.com/@chrisb-maven?source=post_page-----50c34d37e0b8--------------------------------)[](https://towardsdatascience.com/?source=post_page-----50c34d37e0b8--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----50c34d37e0b8--------------------------------)
    [Chris Bruehl](https://medium.com/@chrisb-maven?source=post_page-----50c34d37e0b8--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F8ade87570fa3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-hardest-part-defining-a-target-for-classification-50c34d37e0b8&user=Chris+Bruehl&userId=8ade87570fa3&source=post_page-8ade87570fa3----50c34d37e0b8---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----50c34d37e0b8--------------------------------)
    ·6 min read·Nov 14, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F50c34d37e0b8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-hardest-part-defining-a-target-for-classification-50c34d37e0b8&user=Chris+Bruehl&userId=8ade87570fa3&source=-----50c34d37e0b8---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F50c34d37e0b8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-hardest-part-defining-a-target-for-classification-50c34d37e0b8&source=-----50c34d37e0b8---------------------bookmark_footer-----------)![](../Images/5125330cb509fd77f1424608c3f02fb1.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Kenny Eliason](https://unsplash.com/@neonbrand?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: What Is a Target Variable?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A target variable is the variable or metric you’re trying to predict with a
    supervised machine learning model. It is also often called the dependent variable,
    the response variable, the ‘y’ variable, or even simply the model output.
  prefs: []
  type: TYPE_NORMAL
- en: Regardless of which term you prefer (or were made to use in statistics class),
    this is the most important variable in any supervised modeling project. While
    this is obvious to most people who have machine learning experience — it’s worth
    reiterating why for newcomers.
  prefs: []
  type: TYPE_NORMAL
- en: From a technical perspective, the data type of your target variable determines
    what type of modeling project you are working on. Numeric target variables are
    the domain of regression models, while categorical variables mean you are working
    on a classification model.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5710ef981a1c11b75751c3f24f491b6d.png)'
  prefs: []
  type: TYPE_IMG
- en: A Regression Model with a Numeric Target Variable — image from my regression
    course
  prefs: []
  type: TYPE_NORMAL
- en: But even more importantly than model type, your target variable is the entire
    reason why you are building a model.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0978929564c7e063b567d6b8911fadf9.png)'
  prefs: []
  type: TYPE_IMG
- en: A (very) simple decision tree predicting whether a customer will churn (stop
    being a customer) — from Maven’s classification course
  prefs: []
  type: TYPE_NORMAL
- en: '**Defining A Target Variable for Classification**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: On the surface, defining a target variable for classification might seem easy.
    But your opinion might change if you get asked to build a model for data that’s
    never been modeled before.
  prefs: []
  type: TYPE_NORMAL
- en: When people begin learning machine learning, they are usually given relatively
    clean datasets that have clearly defined 0s and 1s they can use for classification
    modeling. But in my experience, it’s extremely rare to find a column in a relational
    database that perfectly aligns with what your final target variable will look
    like.
  prefs: []
  type: TYPE_NORMAL
- en: Of course, this makes perfect sense in the context of learning the ins and outs
    of ML algorithms, but I certainly had a rude awakening when I saw the SQL query
    that generated the first “real life” modeling dataset I had the opportunity to
    work on in my first data scientist job.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s look at a few examples of the types of transformations we might need to
    make to our data to generate a target variable, in the context customer churn
    for a subscription product. This could be an insurance policy, Netflix subscription,
    whatever. I’ve created some fake data that mimics data I’ve seen in production,
    but forgive me if it doesn’t align with how a data engineer would structure these
    tables.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example 1: Cancellation Date'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](../Images/fd3b1fc5fca210f551ce8f0eb7f19c80.png)'
  prefs: []
  type: TYPE_IMG
- en: There is no clear 1 or 0 indicating a customer has churned (subscription ended
    here), but in this example, it’s pretty straightforward to engineer one. If subscription_end_date
    is null, we might be able to assume the customer is still active. So we can apply
    some basic logic to assign a 1 if subscription end date is not null, and a 0 if
    it is, so that our target variable’s positive class is a churner.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/47cc89a573dc2a681129116d42918116.png)'
  prefs: []
  type: TYPE_IMG
- en: Easy enough. Now let’s look at a more complex example.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example 2: Renewal Date'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](../Images/c3c1e34572257d65d2f584383069eef6.png)'
  prefs: []
  type: TYPE_IMG
- en: Now imagine we have another column in our subscription table. If a customer
    becomes a paying subscriber again, we have a column to capture when that occurred.
  prefs: []
  type: TYPE_NORMAL
- en: Our first customer who had a subscription end never came back, so we can safely
    say they churned.
  prefs: []
  type: TYPE_NORMAL
- en: But what about customer 4? They resubscribed one day after their subscription
    ended. They may have had a monthly subscription end, or had a credit card expire,
    and as soon as they realized this reactivated their subscription. Is a one day
    lapse in membership enough to say this customer churned? Probably not. But what
    about a 7 day or 30 day lapse?
  prefs: []
  type: TYPE_NORMAL
- en: 'Customer 5 did resubscribe, but they were not a customer for over a year. It
    is probably fair to say they churned, but this is where talking to your stakeholders
    and subject matter experts is critical. We might settle on logic that defines
    a churner as someone who has lapsed for a period of a longer than 30 days, and
    end up with the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/cc5c6a89a73697611d57a6c3591e939d.png)'
  prefs: []
  type: TYPE_IMG
- en: This is not a trivial difference. Your target definition can have downstream
    impacts on which features successfully predict your target, the overall accuracy
    of your model, and ultimately the success of your project.
  prefs: []
  type: TYPE_NORMAL
- en: For example, if customer 4 was a very active user of our platform (they noticed
    immediately when they lost access), but the other two were not, the predictive
    power features that correlate to churn will be dampened by our shoddy target definition.
  prefs: []
  type: TYPE_NORMAL
- en: I considered adding more examples, but I think the broader point is well illustrated
    by these two. As food for thought, the logic of target creation is even more susceptible
    to error when we have transactional tables that have one row for each monthly
    payment, differing subscription types and lengths, customers who got a free subscription
    due to a promotion (we may want to filter them out altogether), and more.
  prefs: []
  type: TYPE_NORMAL
- en: A Bit of Advice
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Your model’s target is not simply a 0 or 1, it represents the foundational
    unit of success for your classification modeling project. As such, I have a few
    pieces of general advice for how to approach defining the target variable in your
    next project:'
  prefs: []
  type: TYPE_NORMAL
- en: Your target variable likely won’t be defined cleanly in a table for you
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Take time, and I’m talking several days, if not weeks, to think critically about
    how your target variable can be defined from the data at hand and how that definition
    relates to business goals. This is rarely a trivial task, and you are much better
    off putting in the time and effort up front than needing to shift the definition
    later.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Your target variable may not have an agreed on definition conceptually in your
    organization. “Churn” can be defined in many ways, and you may never have a perfect
    definition. But it’s important to get consensus on how you, as the modeler, define
    it, by talking to stakeholders. At the very least, you’re covering your own you-know-what
    in the case that it turns out the definition needs to change, and at best, you
    have set the foundation for building a successful model.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thank you for taking the time to read my thoughts — I know they are probably
    not groundbreaking to seasoned data scientists, but my hope is that folks new
    to this field gain awareness about the gaps between the classroom and the job,
    and understand that target variables shouldn’t be taken for granted — it’s tempting
    to move as quickly towards modeling as possible, but if you do — you might miss
    the… target.
  prefs: []
  type: TYPE_NORMAL
- en: '*If you enjoyed this article, give me a follow! I write regularly about topics
    like Python, Pandas, and transitioning from data analytics to data science. I
    also have courses on these topics available on the Maven Analytics Platform and
    Udemy — would love to see you there!*'
  prefs: []
  type: TYPE_NORMAL
