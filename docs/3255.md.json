["```py\nimport matplotlib.pyplot as plt\nimport seaborn as sns\ndata = sns.load_dataset('mpg')\n```", "```py\nfig = plt.figure(figsize=(10, 7))\n```", "```py\n(topfig, bottomfig) = fig.subfigures(2, 1)\n\ntopfig.set_facecolor('#cbe4c6ff')\ntopfig.suptitle('Top')\n\nbottomfig.set_facecolor('#c6c8e4ff')\nbottomfig.suptitle('Bottom')\n```", "```py\ntop_axs = topfig.subplots(2, 4)\nbottom_axs = bottomfig.subplots(3, 7)\n\nplt.show()\n```", "```py\nfigure = plt.figure(figsize=(10, 7))\nfigs = figure.subfigures(2, 2, height_ratios=(2,1), width_ratios=(2,1))\n\nfigs = figs.flatten()\n\nfor i, fig in enumerate(figs):\n fig.suptitle(f'Subfigure {i}')\n axs = fig.subplots(2, 2)\n\nplt.show()\n```", "```py\nfigure = plt.figure(figsize=(10, 7))\nfigs = figure.subfigures(2, 2, height_ratios=(2,1), width_ratios=(2,1))\n\nfigs = figs.flatten()\n\nfor i, fig in enumerate(figs):\n fig.suptitle(f'Subfigure {i}')\n axs = fig.subplots(2, 2)\n\nplt.tight_layout()\nplt.show()\n```", "```py\nfig = plt.figure(figsize=(10, 7))\n(topfig, bottomfig) = fig.subfigures(2, 1)\n\ntopfig.set_facecolor('#cbe4c6ff')\ntopfig.suptitle('Top')\nbottomfig.set_facecolor('#c6c8e4ff')\nbottomfig.suptitle('Bottom')\n\ntop_axs = topfig.subplots(2, 4)\nbottom_axs = bottomfig.subplots(3, 7)\n\n# Adding more space between plots and reducing the space to the sides\ntopfig.subplots_adjust(left=.1, right=.9, wspace=.5, hspace=.5)\n\n# We can also squeeze subplots to the bottom\nbottomfig.subplots_adjust(wspace=.5, hspace=.8, top=.7, bottom=.3)\n\nplt.show()\n```", "```py\nfig = plt.figure(figsize=(10, 7))\n(topfig, bottomfig) = fig.subfigures(2, 1)\n\ntopfig.set_facecolor('#cbe4c6ff')\ntopfig.suptitle('Top')\ntop_axs = topfig.subplots(2, 4)\n\n(bottomleft, bottomright) = bottomfig.subfigures(1, 2, width_ratios=(1,2))\n\nbottomleft.set_facecolor('#c6c8e4ff')\nbottomleft.suptitle('Bottom left')\nbottom_axs = bottomleft.subplots(2, 2)\n\nbottomright.set_facecolor('#aac8e4ff')\nbottomright.suptitle('Bottom right')\nbottom_axs = bottomright.subplots(3, 3)\n\n# Spacing between subplots\ntopfig.subplots_adjust(left=.1, right=.9, wspace=.4, hspace=.4)\nbottomleft.subplots_adjust(left=.2, right=.9, wspace=.5, hspace=.4)\nbottomright.subplots_adjust(left=.1, right=.9, wspace=.4, hspace=.4)\n\nplt.show()\n```", "```py\nfig = plt.figure(figsize=(10, 7))\n(topfig, bottomfig) = fig.subfigures(2, 1)\n\ntopfig.set_facecolor('#cbe4c6ff')\ntopfig.suptitle('Top')\ntop_axs = topfig.subplots(2, 4)\n\n# We are using the bottom left subfigure for the jointplot\n(bottomleft, bottomright) = bottomfig.subfigures(1, 2, width_ratios=(1,2))\n\n# This parameter defines the size ratio between the main plot and the margin plots\nratio=2\n\n# Defining a gridspec where the subplots are places\ngs = plt.GridSpec(ratio + 1, ratio + 1)\n# The main scatterplot\nax_joint  = bottomleft.add_subplot(gs[1:, :-1])\n# The margin plots are sharing an axis with the main plot\nax_marg_x = bottomleft.add_subplot(gs[0, :-1], sharex=ax_joint)\nax_marg_y = bottomleft.add_subplot(gs[1:, -1], sharey=ax_joint)\n\n# Axis labels and ticklabels for the margin plots are set to not visible\n# Since they are shared with the main plot,\n# removing them for the margin will also remove them from the main plot\nplt.setp(ax_marg_x.get_xticklabels(), visible=False)\nplt.setp(ax_marg_y.get_yticklabels(), visible=False)\nplt.setp(ax_marg_x.get_xticklabels(minor=True), visible=False)\nplt.setp(ax_marg_y.get_yticklabels(minor=True), visible=False)\n\n# Filling the plots with data:\nsns.scatterplot(data=data, y='horsepower', x='mpg', ax=ax_joint)\nsns.histplot(data=data, y='horsepower', ax=ax_marg_y)\nsns.histplot(data=data, x='mpg', ax=ax_marg_x)\n\nbottomright.set_facecolor('#aac8e4ff')\nbottomright.suptitle('Bottom right')\nbottom_axs = bottomright.subplots(3, 3)\n\n# Spacing between subplots\ntopfig.subplots_adjust(left=.1, right=.9, wspace=.4, hspace=.4)\nbottomright.subplots_adjust(left=.1, right=.9, wspace=.4, hspace=.4)\n\nplt.show()\n```", "```py\ndef letter_annotation(ax, xoffset, yoffset, letter):\n ax.text(xoffset, yoffset, letter, transform=ax.transAxes,\n         size=12, weight='bold')\n```", "```py\nfig = plt.figure(figsize=(10, 7))\n(topfig, bottomfig) = fig.subfigures(2, 1)\n\ntopfig.set_facecolor('#cbe4c6ff')\ntopfig.suptitle('Top')\ntop_axs = topfig.subplots(2, 4)\nletter_annotation(top_axs[0][0], -.2, 1.1, 'A')\n\n(bottomleft, bottomright) = bottomfig.subfigures(1, 2, width_ratios=(1,2))\n\nbottomleft.set_facecolor('#c6c8e4ff')\nbottomleft.suptitle('Bottom left')\nbottoml_axs = bottomleft.subplots(2, 2)\nletter_annotation(bottoml_axs[0][0], -.2, 1.1, 'B')\n\nbottomright.set_facecolor('#aac8e4ff')\nbottomright.suptitle('Bottom right')\nbottomr_axs = bottomright.subplots(3, 3)\nletter_annotation(bottomr_axs[0][0], -.2, 1.1, 'C')\n\n# Spacing between subplots\ntopfig.subplots_adjust(left=.1, right=.9, wspace=.4, hspace=.4)\nbottomleft.subplots_adjust(left=.2, right=.9, wspace=.5, hspace=.4)\nbottomright.subplots_adjust(left=.1, right=.9, wspace=.4, hspace=.4)\n\nplt.show()\n```", "```py\nfig = plt.figure(figsize=(10, 7))\n\n# Creating a subfigure for the first and second row\n(row1fig, row2fig) = fig.subfigures(2, 1, height_ratios=[1, 1])\n# Splitting the bottom row subfigure in two subfigures\n(fig_row2left, fig_row2right) = row2fig.subfigures(1, 2, wspace=.08, width_ratios = (1, 2))\n\n# #####\n# Row 1 plots\n# #####\n\n# Make 4 subplots for the first row subfigure\nrow1_axs = row1fig.subplots(1, 4)\n\nrow1fig.subplots_adjust(wspace=0.5, left=0, right=1, bottom=.16)\n\nax = row1_axs[0]\nsns.histplot(data=data, x='mpg', ax=ax)\nax.set_title('MPG')\n# Annotate plotots with letters\nletter_annotation(ax, -.25, 1, 'A')\n# Some styling for figures to make them look better \n# and have a standardized look\nsns.despine(offset=5, trim=False, ax=ax)\n\nax = row1_axs[1]\nsns.histplot(data=data, x='displacement', ax=ax)\nax.set_title('Displacement')\nletter_annotation(ax, -.25, 1, 'B')\nsns.despine(offset=5, trim=False, ax=ax)\n\nax = row1_axs[2]\nsns.histplot(data=data, x='weight', ax=ax)\nax.set_title('Weight')\nletter_annotation(ax, -.25, 1, 'C')\nsns.despine(offset=5, trim=False, ax=ax)\n\nax = row1_axs[3]\nsns.histplot(data=data, x='horsepower', ax=ax)\nax.set_title('Horsepower')\nletter_annotation(ax, -.25, 1, 'D')\nsns.despine(offset=5, trim=False, ax=ax)\n\n# #####\n# Row 2 plots\n# #####\n\n# ##\n# Seaborn jointplot\n# ##\n\n# Using code from the Seaborn JointGrid class\n\n# size ratio between the main plots and the margin plots\nratio=2\n# Defining a gridspec for inside the subfigure\ngs = plt.GridSpec(ratio + 1, ratio + 1)\nax_joint  = fig_row2left.add_subplot(gs[1:, :-1])\n# Share axis between the margin and main plots\nax_marg_x = fig_row2left.add_subplot(gs[0, :-1], sharex=ax_joint)\nax_marg_y = fig_row2left.add_subplot(gs[1:, -1], sharey=ax_joint)\n\n# Remove Axis labels and ticklabels for the margin plots\nplt.setp(ax_marg_x.get_xticklabels(), visible=False)\nplt.setp(ax_marg_y.get_yticklabels(), visible=False)\nplt.setp(ax_marg_x.get_xticklabels(minor=True), visible=False)\nplt.setp(ax_marg_y.get_yticklabels(minor=True), visible=False)\n\nsns.scatterplot(data=data, y='horsepower', x='mpg', ax=ax_joint)\nsns.histplot(data=data, y='horsepower', ax=ax_marg_y)\nsns.histplot(data=data, x='mpg', ax=ax_marg_x)\n\nsns.despine(offset=5, trim=False, ax=ax_joint)\nsns.despine(offset=5, trim=False, ax=ax_marg_y)\nsns.despine(offset=5, trim=False, ax=ax_marg_x)\n\n# Leaving some space to the right to remove overlaps\nfig_row2left.subplots_adjust(left=0, right=.8)\nletter_annotation(ax_marg_x, -.25, 1, 'E')\n\n# ##\n# Row 2 right plots\n# ##\n\ngs = plt.GridSpec(2, 3)\nax_left   = fig_row2right.add_subplot(gs[:, 0])\nax_middle = fig_row2right.add_subplot(gs[:, 1])\nax_up     = fig_row2right.add_subplot(gs[0, 2])\nax_down   = fig_row2right.add_subplot(gs[1, 2])\n\nfig_row2right.subplots_adjust(left=0, right=1, hspace=.5)\n\nax = ax_left\nsns.scatterplot(data=data, x='model_year', y='weight', hue='origin', ax=ax)\nsns.despine(offset=5, trim=False, ax=ax)\nletter_annotation(ax, -.3, 1, 'F')\n\nax = ax_middle\nsns.boxplot(data=data, x='origin', y='horsepower', ax=ax)\nsns.despine(offset=5, trim=False, ax=ax)\nletter_annotation(ax, -.3, 1, 'G')\n\nax = ax_up\nsns.kdeplot(data=data, x='mpg', y='acceleration', ax=ax)\nsns.despine(offset=5, trim=False, ax=ax)\nletter_annotation(ax, -.3, 1, 'H')\n\nax = ax_down\nsns.histplot(data=data, x='weight', y='horsepower', ax=ax)\nsns.despine(offset=5, trim=False, ax=ax)\nletter_annotation(ax, -.3, 1, 'I')\n\nplt.show()\n```"]