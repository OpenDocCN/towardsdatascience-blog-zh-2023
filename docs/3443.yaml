- en: Is Serverless Hard to Adopt?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/is-serverless-hard-to-adopt-56c35672b958?source=collection_archive---------2-----------------------#2023-11-20](https://towardsdatascience.com/is-serverless-hard-to-adopt-56c35672b958?source=collection_archive---------2-----------------------#2023-11-20)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Understand the simple measures to make your serverless adoption a success
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://sbrisals.medium.com/?source=post_page-----56c35672b958--------------------------------)[![Sheen
    Brisals](../Images/541db9c271828213fb9706d4dc344f30.png)](https://sbrisals.medium.com/?source=post_page-----56c35672b958--------------------------------)[](https://towardsdatascience.com/?source=post_page-----56c35672b958--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----56c35672b958--------------------------------)
    [Sheen Brisals](https://sbrisals.medium.com/?source=post_page-----56c35672b958--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F33d1209889d5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fis-serverless-hard-to-adopt-56c35672b958&user=Sheen+Brisals&userId=33d1209889d5&source=post_page-33d1209889d5----56c35672b958---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----56c35672b958--------------------------------)
    ·13 min read·Nov 20, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F56c35672b958&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fis-serverless-hard-to-adopt-56c35672b958&user=Sheen+Brisals&userId=33d1209889d5&source=-----56c35672b958---------------------clap_footer-----------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F56c35672b958&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fis-serverless-hard-to-adopt-56c35672b958&source=-----56c35672b958---------------------bookmark_footer-----------)![](../Images/7766fc865155f0c3390fa6d74abce0ff.png)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: Photo by Mikhail Nilov on [Pexels](https://www.pexels.com/photo/a-boy-wearing-long-sleeves-sweater-pulling-his-hair-7929277/)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: More than a year ago, hiking at some altitude in the September setting of Semmering,
    Austria, we were lost at a junction on our trail. As the signposts were inconclusive,
    I reached out to my mobile for clues. Amongst several Twitter (X) notifications,
    a reference to Paul Johnston’s article [*Learning Serverless (and why it is hard)*](https://pauldjohnston.medium.com/learning-serverless-and-why-it-is-hard-4a53b390c63d)just
    flashed past.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: On a normal day, I would’ve read it immediately. But given the location and
    the responsibility to guide my family out of the woods, I wasn’t ready to sacrifice
    a scenic Semmering morning for serverless.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: I read it on return, and in his article, Paul has courageously hit many nails
    straight on! I wanted to add my thoughts sooner but with the commitment to complete
    the book [*Serverless Development on AWS. Building Enterprise-Scale Serverless
    Solutions*](https://sbrisals.medium.com/the-serverless-book-2209ee13e619) (O’Reilly,
    2024), I am here a year later to borrow the hammer and hit a few nails of my own,
    to look at the issue from an overall perspective and not specifically on learning
    alone.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我重读了这一点，在他的文章中，保罗勇敢地击中了许多钉子！我本想更早地加入，但是为了完成《*AWS上的无服务器开发。构建企业级无服务器解决方案*》（O’Reilly,
    2024）这本书，我在一年后来借了这把锤子，来打自己的一些钉子，从整体角度来看问题，而不仅仅是学习本身。
- en: In this article, I will take you through some of the essential factors to become
    successful when developing applications using serverless technology — be it in
    commercial product development, building data-driven applications, AI, or machine
    learning.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我将带你了解使用无服务器技术开发应用程序时成功的一些关键因素 — 无论是在商业产品开发、构建数据驱动的应用程序、AI还是机器学习方面。
- en: '[](https://sbrisals.medium.com/the-serverless-book-2209ee13e619?source=post_page-----56c35672b958--------------------------------)
    [## The Serverless Book'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://sbrisals.medium.com/the-serverless-book-2209ee13e619?source=post_page-----56c35672b958--------------------------------)
    [## 无服务器开发'
- en: 'Serverless Development On AWS: Building Enterprise-Scale Serverless Solutions'
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AWS上的无服务器开发：构建企业级无服务器解决方案
- en: sbrisals.medium.com](https://sbrisals.medium.com/the-serverless-book-2209ee13e619?source=post_page-----56c35672b958--------------------------------)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[sbrisals.medium.com](https://sbrisals.medium.com/the-serverless-book-2209ee13e619?source=post_page-----56c35672b958--------------------------------)'
- en: Is Driving A Car Difficult?
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 驾驶汽车难吗？
- en: Is *driving* a manual transmission car difficult?
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*驾驶* 手动变速汽车难吗？'
- en: Is *learning to drive* a manual transmission car difficult?
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*学习* 手动变速汽车难吗？'
- en: The answer varies based on who you are. If you’ve been driving for a few years,
    your answer to the first question would be an affirmative ***no***. Because, over
    the years, you have become affluent with all the maneuvers, and they come naturally
    to you without needing to think about them.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 答案因人而异。如果你已经开车几年，对第一个问题的回答将是否定的 ***no***。因为多年来，你已经熟悉了所有的操作，它们已经变得自然而不需要考虑。
- en: However, when you were a learner, your answer to the second question would’ve
    been a definite ***yes***. When you learn to drive, there are several things to
    consider — actions that require coordination, activities that happen in a sequence,
    and observations to do in parallel. All these while you are in motion with the
    vehicle.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当你还是一名学习者时，你对第二个问题的回答肯定是 ***yes***。学习驾驶时，有许多事情需要考虑 —— 需要协调的动作、按顺序进行的活动以及需要并行进行的观察。所有这些都是在车辆运行时进行的。
- en: '**Your ability to turn the steering wheel alone won’t qualify you as a driver.**'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**仅仅掌握方向盘技能并不足以使你称为一名司机。**'
- en: If you now consider an automatic transmission car, your activities as a driver
    are somewhat reduced as the mechanics of the car take care of certain actions
    (like how the cloud provider takes care of some of the heavy lifting in serverless).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你现在考虑一个自动变速汽车，作为驾驶员的活动会有所减少，因为汽车的机械结构会处理某些动作（就像云提供商处理无服务器中的一些重活）。
- en: Many things in our daily lives are challenging, but we learn the skills and
    follow the proven path to become better at them. Serverless development is no
    different. It may sound a bit easy (like an automatic transmission car), but it
    won’t make you start the engine and jet off instantly.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们日常生活中有很多挑战，但我们学习技能并跟随已验证的路径来提升自己。无服务器开发也不例外。它可能听起来有点简单（就像自动变速汽车），但它不会让你即刻启动引擎并飞驰而去。
- en: '![](../Images/c356ac3c5f296c9e3223a22f4c686445.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c356ac3c5f296c9e3223a22f4c686445.png)'
- en: A tangled serverless implementation. Source author.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 一个混乱的无服务器实现。来源作者。
- en: There are many ways to do things wrongly in technology — more so in serverless.
    Building a tangled event-driven architecture using serverless services is easy
    and takes no time. However, architecting and developing a modular, observable,
    and sustainable solution requires knowledge and the right skills. This doesn’t
    mean serverless is hard.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在技术上有很多错误的做法 —— 无服务器更是如此。使用无服务器服务构建混乱的事件驱动架构非常容易且时间短。但是，构建和开发一个模块化、可观察且可持续的解决方案需要知识和正确的技能。这并不意味着无服务器很难。
- en: There are many ways to do things wrongly in technology — more so in serverless.
  id: totrans-27
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在技术领域中，有许多做错事的方法——尤其是在无服务器环境中。
- en: Serverless is hard if you don’t understand its ecosystem.
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如果你不理解其生态系统，无服务器将会很难。
- en: A car has many parts, from a high level to a granular level. The car engine
    is mainly written as a single unit but has several components. A functioning car
    needs a driver (ignoring the driverless one) and carries passengers. In a way,
    all these together form the ecosystem of a car.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 一辆车有许多部件，从高层次到细节层次。车发动机主要作为一个整体来书写，但有多个组件。一个正常运转的汽车需要一个司机（忽略无人驾驶的情况）并搭载乘客。从某种程度上讲，所有这些共同构成了汽车的生态系统。
- en: Too often, many portray serverless as an architecture blueprint, Function as
    a Service (FaaS), or a framework. To me, it is beyond all these and more than
    what we usually imagine it is. Serverless, in a way, is a technology ecosystem.
    When you and I work with serverless, we also become part of it — similar to how
    the driver and passengers are part of the automobile ecosystem of a car.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 很多时候，许多人将无服务器描绘成一种架构蓝图、函数即服务（FaaS）或框架。对我而言，它超越了这些概念，远超我们通常想象的。无服务器，某种程度上，是一个技术生态系统。当你和我使用无服务器时，我们也成为其中的一部分——类似于司机和乘客成为汽车生态系统的一部分。
- en: '![](../Images/6784f1c3fce5749693fa501b656cee16.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6784f1c3fce5749693fa501b656cee16.png)'
- en: The serverless ecosystem has many factors. Source author.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 无服务器生态系统包含许多因素。来源作者。
- en: As shown in the picture, the serverless ecosystem has several factors. Serverless
    technology brings its unique characteristics. The cloud platform and its managed
    services form the foundation. Developmental practices, tools, and frameworks enable
    the flow to bring value faster. Business stakeholders collaborate with engineers
    to build modern capabilities on serverless for customers. All these and more are
    part of that ecosystem.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如图所示，无服务器生态系统包含多个因素。无服务器技术带来了其独特的特性。云平台及其托管服务构成了基础。开发实践、工具和框架使流程更快地带来价值。业务利益相关者与工程师合作，为客户在无服务器上构建现代能力。所有这些以及更多内容都是生态系统的一部分。
- en: The purpose of the above portrayal is to make you think beyond writing functions
    or debating over an infrastructure tool. Think of the diversity Serverless brings
    to your organization, to your team, and to you, as you will be wearing multiple
    hats when you work with Serverless. Thoughts like the one below from [Lee Gilmore](https://twitter.com/LeeJamesGilmore)
    are more regular than in the past as we mature and become part of the serverless
    ecosystem.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 上述描绘的目的是让你超越编写函数或讨论基础设施工具的思维。考虑一下无服务器给你的组织、团队和你个人带来的多样性，因为你在使用无服务器时将会身兼多职。随着我们成熟并成为无服务器生态系统的一部分，像[Lee
    Gilmore](https://twitter.com/LeeJamesGilmore)这样的想法比以前更为常见。
- en: Serverless is hard if you start with the wrong mindset.
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如果你以错误的心态开始，无服务器将会很难。
- en: '*A couple of years ago, an engineer reached out for guidance on his serverless
    journey. A few minutes into the chat, it became clear that he wanted to implement
    the logic of his Lambda functions in a cloud-agnostic way so that his serverless
    applications could be readily deployed to a different cloud provider* ***if and
    when*** *the decision-makers of his organization wanted to switch.*'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '*几年前，一位工程师联系我寻求有关他无服务器旅程的指导。聊天几分钟后，很明显他希望以云无关的方式实现他的Lambda函数逻辑，以便他的无服务器应用程序可以在组织决策者希望切换时随时部署到不同的云提供商*
    ***如果及何时*** *决策者想要切换。*'
- en: '*Understanding his intention, I asked about his approach to the non-FaaS services
    and how he would make them cloud-agnostic. His explanation was some kind of grandeur
    implementation of the hexagonal architecture!*'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '*了解他的意图后，我询问了他对非FaaS服务的处理方法，以及他如何使其具有云无关性。他的解释是某种宏伟的六边形架构实现！*'
- en: '*Toward the end of the call, I realized he had yet to deploy any serverless
    workload in production!*'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '*在通话快结束时，我意识到他还没有在生产环境中部署任何无服务器工作负载！*'
- en: Though thoughts and approaches like the above please the board, the challenges
    and the value to the business are not assessed. Enterprises adopt technologies
    such as serverless to improve velocity, increase flow, and build a competitive
    advantage. Approaching serverless with the above mindset is like chasing a mirage
    and never getting anything done and delivered any time soon.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管类似上述的思想和方法让董事会满意，但挑战和对业务的价值却未被评估。企业采用诸如无服务器这样的技术，以提高速度、增加流量并建立竞争优势。以上述心态接触无服务器就像是在追逐海市蜃楼，永远无法完成并交付任何东西。
- en: Engineers often point to the multi-cloud configurations offered by frameworks
    as an example (or excuse). The fact is tools provide such capabilities so that
    everyone can use them, and you don’t make your multi-cloud decision based on what
    a framework offers. When such wrong strategies fail to produce value, you hear
    cries - switching to serverless is hard, confusing, and counterintuitive — as
    [Paul mentions in his article](https://pauldjohnston.medium.com/learning-serverless-and-why-it-is-hard-4a53b390c63d).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 工程师经常指出框架提供的多云配置作为例子（或借口）。事实上，工具提供这样的功能是为了让每个人都能使用它们，并且你不应该根据框架提供的内容做出多云决策。当这些错误的策略无法产生价值时，你会听到抱怨
    - 切换到 Serverless 是困难的、令人困惑的，并且违反直觉 — 正如[保罗在他的文章中提到的](https://pauldjohnston.medium.com/learning-serverless-and-why-it-is-hard-4a53b390c63d)。
- en: Development tools often support multi-cloud capabilities, but you don’t make
    your multi-cloud decision based on what a framework offers.
  id: totrans-41
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 开发工具经常支持多云能力，但你不应该基于框架提供的内容做出多云决策。
- en: Serverless is hard if you think it is too easy.
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如果你认为 Serverless 太简单，它就会变得困难。
- en: '*I was invited to a meeting to listen in and approve a serverless architecture
    proposal. An engineer presented a well-crafted virtual board and walked through
    their architecture. Lambda functions dominated the solution, with a couple of
    DynamoDB tables scattered around. I began to feel uncomfortable, and apologetically
    interrupted the conversation and asked the question-*'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '*我被邀请参加一个会议，听取并批准一个 Serverless 架构提案。一个工程师展示了一个精心制作的虚拟板，并详细解释了他们的架构。Lambda 函数主导了解决方案，周围散布着一些
    DynamoDB 表。我开始感到不舒服，并且抱歉地打断了谈话，问了这个问题 -*'
- en: '*Have you built serverless solutions before?*'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '*你以前构建过 Serverless 解决方案吗？*'
- en: '*And the engineer answered, Yes!*'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '*工程师回答说，是的！*'
- en: '*After asking a few more ‘Whys’ on some of the choices made in the design,
    the engineer admitted that previously, they had written Lambda functions for simple
    features and not architected nor built event-driven microservices.*'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '*在对设计中某些选择的几个“为什么”进行更多询问后，工程师承认之前他们只为简单功能编写了 Lambda 函数，而没有设计或构建事件驱动的微服务。*'
- en: My intention here is not to undermine the engineer but to highlight an important
    phase we all go through as we pick up and work with a new technology. Knowing
    how to write and operate Lambda functions is definitely the right start, but at
    the same time, you should not get carried away thinking everything is too easy
    in serverless. This attitude is what makes you implement tangled serverless applications.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我在这里的意图不是贬低工程师，而是强调我们在学习和使用新技术时都要经历的重要阶段。知道如何编写和操作 Lambda 函数绝对是正确的开始，但与此同时，你不应该认为
    Serverless 中的一切都太容易了。这种态度会导致你实现混乱的 Serverless 应用程序。
- en: I agree that for someone new to serverless, the knowledge of splitting the problem
    into microservices, identifying the synchronous and asynchronous parts of the
    application, thinking in terms of events, or designing for observability is complex.
    The fact is, many of these aspects are not new and not specific to serverless.
    The difference is, with the siloed team structures of the past, you, as a programmer,
    never got the exposure or were involved in the process.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我同意，对于新手来说，将问题分解为微服务、识别应用程序的同步和异步部分、以事件方式思考，或者设计可观察性都是复杂的。事实上，这些方面中的许多并不新鲜，也不特定于
    Serverless。不同之处在于，过去的隔离团队结构中，作为程序员的你从未接触过或参与其中。
- en: When you learn to drive, you take several lessons before you feel confident
    for the practical driving test. Similarly, it is necessary that you assess your
    serverless skills and undergo the necessary learning (discussed in a later section)
    alongside your job as a serverless engineer.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 学车时，你需要经过多次课程才能在实际驾驶测试中感到自信。同样，评估你的 Serverless 技能并在工作中作为 Serverless 工程师进行必要的学习（在后面的部分讨论）是必要的。
- en: Serverless is hard if you exclude engineers from architecture discussions.
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Serverless 是很难的，如果你排除工程师参与架构讨论。
- en: An approach I follow while guiding teams is to assign the ownership of a service
    or feature development to one or more engineers — from idea to production. They
    become part of the journey from early conversations with the product teams, stakeholders,
    and technical experts to gather knowledge about the solution they will be building.
    They sit through necessary ideation sessions and problem analysis and start drafting
    the architecture with guidance from seniors and experts before bringing out a
    [**Solution Design Document**](https://medium.com/lego-engineering/the-significance-of-solution-design-in-serverless-developments-part-i-58e0ef9dd24)
    for everyone to review. From here, implementation tickets get created and go into
    an iterative development and delivery phase.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我在指导团队时采用的方法是将一个服务或功能的开发所有权分配给一名或多名工程师 — 从想法到生产。他们从与产品团队、利益相关者和技术专家的早期交流开始，收集关于他们将要构建的解决方案的知识。他们参与必要的构思会议和问题分析，并在得到资深人员和专家指导后开始起草架构，然后发布一个[**解决方案设计文档**](https://medium.com/lego-engineering/the-significance-of-solution-design-in-serverless-developments-part-i-58e0ef9dd24)，供所有人审查。从这里开始，实施票据被创建并进入迭代开发和交付阶段。
- en: '[](https://sbrisals.medium.com/the-significance-of-solution-design-in-serverless-developments-part-i-58e0ef9dd24?source=post_page-----56c35672b958--------------------------------)
    [## The Significance Of Solution Design In Serverless Developments — Part I'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[**无服务器开发中解决方案设计的重要性 — 第一部分**](https://medium.com/lego-engineering/the-significance-of-solution-design-in-serverless-developments-part-i-58e0ef9dd24)'
- en: What does it bring, and why do we need it?
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 它带来了什么，我们为什么需要它？
- en: sbrisals.medium.com](https://sbrisals.medium.com/the-significance-of-solution-design-in-serverless-developments-part-i-58e0ef9dd24?source=post_page-----56c35672b958--------------------------------)
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '[**无服务器开发中解决方案设计的重要性 — 第一部分**](https://medium.com/lego-engineering/the-significance-of-solution-design-in-serverless-developments-part-i-58e0ef9dd24)'
- en: The above approach is intentional. Though there are drawbacks and criticisms,
    it brings many benefits to the team and to engineers’ professional growth. To
    educate engineers and make them part of the serverless ecosystem, you must stop
    feeding them with architecture blueprints. Instead, you evolve the architecture
    with them by feeding ideas and resources to make them learn, develop, and deliver.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 上述方法是有意为之的。尽管存在缺点和批评，但它为团队和工程师的职业成长带来了许多好处。要教育工程师并使他们成为无服务器生态系统的一部分，你必须停止向他们提供架构蓝图。相反，通过向他们提供思想和资源来与他们一起演进架构，使他们学习、开发和交付。
- en: Don’t craft your serverless architectures at the architects’ ivory tower but
    create them in your team’s engine room.
  id: totrans-56
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 不要在架构师的象牙塔中设计你的无服务器架构，而是在你团队的引擎室中创建它们。
- en: '*Once in an organization, there was a cross-team collaboration to bring out
    a new feature. There were a few ideation sessions with a bunch of people before
    agreeing on a high-level proposal that was good enough to be detailed in a solution
    design. Later, a couple of engineers were assigned a ticket to* ***implement***
    *their team’s part of the solution. However, these engineers were never part of
    the previous sessions, had no briefing, nor seen the virtual board that captured
    all the scribblings, drawings, and thoughts of the previous conversations.*'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '*曾经在一个组织中，进行了跨团队合作，以推出一个新功能。之前有几次构思会议，与一群人讨论后达成了一个高层提案，足够详细以在解决方案设计中详细描述。后来，几名工程师被指派一个票据来实现他们团队解决方案的一部分。然而，这些工程师从未参与过先前的会议，没有简要介绍，也没有看到捕捉到所有涂鸦、绘图和思绪的虚拟板。*'
- en: As you can imagine, the above engineers were put in a difficult situation. Regardless
    of the ability of engineers and the triviality of the problem, make sure your
    serverless development does not start with Visual Studio (VS) Code. If you do,
    there is no guarantee that your serverless experience is going to be any smoother.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 可以想象，上述工程师陷入了困境。无论工程师的能力如何以及问题的微不足道程度如何，请确保你的无服务器开发不是从Visual Studio (VS) Code开始的。如果你这样做，不能保证你的无服务器体验会更顺利。
- en: Regardless of the ability of engineers and the triviality of the problem, your
    serverless development does not start with VS Code.
  id: totrans-59
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 无论工程师的能力如何以及问题的微不足道程度如何，你的无服务器开发不应该从VS Code开始。
- en: Serverless is hard if you demand perfectionism over pragmatism.
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如果你追求完美主义而不是实用主义，无服务器开发就会很困难。
- en: In my talks on [How to Grow Your Serverless Teams](https://youtu.be/mESI6zoVJwk),
    I share a slide to show how a practical thinking team can accelerate with serverless
    while a purist-minded team that tries to make everything perfect with pessimistic
    views falls behind.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的演讲中，我分享了一张幻灯片，展示了一个实际思维的团队如何借助无服务器加速，而试图通过悲观的观点使一切完美的纯主义团队则落后。
- en: '![](../Images/4b0aa9d52e7f9afaca1e30590c7110b0.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4b0aa9d52e7f9afaca1e30590c7110b0.png)'
- en: Two types of serverless adoption camps. Source author.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 两种类型的无服务器采用派系。来源作者。
- en: Often, information overload and perfectionism of ivory tower architects with
    no practical engine room experience can make your serverless adoption hard and
    your experience bad.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下，信息过载和没有实际引擎室经验的象牙塔架构师的完美主义会使你的无服务器采用变得困难，你的经验变得糟糕。
- en: '*I once heard the story of two serverless teams during a community conversation.
    Both teams had commonalities. They operated inside their respective boundaries
    — i.e., the bounded contexts — developed event-driven microservices and had well-defined
    APIs.*'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '*我曾经在社区交流中听到过两支无服务器团队的故事。这两支团队有共同之处。它们都在各自的边界内运作 — 即有界上下文内 — 开发事件驱动的微服务，并且拥有明确定义的
    API。*'
- en: '*One team owned and operated their microservices in a single production AWS
    account (with separate accounts for test, QA, pre-prod, etc.), kept their Lambda
    functions outside of custom VPC (Virtual Private Cloud) and configured VPCs only
    where necessary, and hosted their APIs on Amazon API Gateway with the necessary
    Usage Plans. Their services are coordinated by a custom event bus on Amazon EventBridge.
    For this team, it sounded effortless to develop, deploy, and operate a new microservice.*'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '*其中一支团队在单个生产 AWS 账户中拥有和运行它们的微服务（测试、QA、预发布等有单独的账户），将它们的 Lambda 函数放置在自定义 VPC
    之外，并仅在必要时配置 VPC，将它们的 API 托管在 Amazon API Gateway 并配备必要的使用计划。他们的服务由 Amazon EventBridge
    上的自定义事件总线协调。对于这支团队来说，开发、部署和运营新的微服务听起来是轻而易举的。*'
- en: '*The second team, however, guided by a purist school of thought, chose to host
    each microservice in a separate AWS account and deployed their Lambda functions
    inside custom VPCs. In addition, all their APIs were hosted on a different gateway
    landing platform. With twenty and a growing number of microservices, they were
    struggling with the complexity involved.*'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '*然而，第二支团队遵循纯主义思想，选择在不同的 AWS 账户中托管每个微服务，并将其 Lambda 函数部署在自定义的 VPC 内。此外，它们所有的
    API 都托管在一个不同的网关着陆平台上。随着二十多个微服务的增加，它们在处理涉及的复杂性时陷入困境。*'
- en: Of course, there are situations when we make different choices and decisions,
    but we should evaluate and course correct to avoid falling into an unmanageable
    and no-going-back situation.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，在我们做出不同选择和决策的情况下，我们应该评估并纠正课程，以避免陷入难以管理且无法回头的局面。
- en: One of the primary motivations for adopting serverless is to offload the heavy
    lifting to the cloud provider, but if we go against serverless’ strengths with
    our strategies, serverless can only get harder.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 采用无服务器架构的主要动机之一是将繁重的工作交给云服务提供商，但如果我们的策略与无服务器的优势背道而驰，无服务器只会变得更加困难。
- en: Serverless is hard if you corrupt team boundaries.
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如果你侵蚀团队边界，无服务器将变得困难。
- en: When it comes to team boundaries, everyone thinks of the Bounded Context (as
    in Domain-Driven Design). However, other boundaries are relevant to autonomous
    two-pizza serverless teams, as listed below. Corrupting boundaries causes consequences
    that make your serverless experience difficult.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及团队边界时，每个人都会考虑有界上下文（如领域驱动设计中的概念）。然而，其他边界对于自治的两披萨无服务器团队同样重要，如下所列。破坏边界将导致使你的无服务器经验变得困难的后果。
- en: Bounded context boundary
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有界上下文边界
- en: Team responsibility boundary
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 团队责任边界
- en: Team ownership boundary
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 团队所有权边界
- en: Source code repository boundary
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 源代码仓库边界
- en: Cloud account boundary
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 云账户边界
- en: The first three are dependent and overlap. If your team is the custodian of
    a bounded context part of an organizational domain, you are in a great place.
    In this case, your team is responsible for everything inside this bounded context
    boundary and owns all the features, services, and implementation artifacts.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 前三者相互依赖且重叠。如果你的团队是组织领域的有界上下文的保护者，你就处于一个很好的位置。在这种情况下，你的团队负责有界上下文边界内的所有事物，并拥有所有功能、服务和实现工件。
- en: All your implementation artifacts for the assets you own are in a repository
    your team members contribute and share among themselves.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 所有你拥有资产的实现工件都在一个仓库中，你的团队成员在其中贡献并共享。
- en: The AWS cloud account boundary marks the operational boundary within which you
    deploy and operate your cloud and serverless assets.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 云账户边界标志着您部署和操作云及无服务器资产的运营边界。
- en: In an ideal world, you will have a one-to-one mapping between your team and
    these boundaries, as highlighted below.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在理想的世界中，您的团队与这些边界之间会有一对一的映射，如下所示。
- en: Your team exists because of the bounded context.
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的团队存在是因为有了有界上下文。
- en: Your team is responsible for and owns everything within the bounded context.
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的团队负责并拥有有界上下文中的所有内容。
- en: Your team has a repository to which your team alone contributes.
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的团队有一个仓库，只有您的团队贡献。
- en: Your team operates everything it owns in its dedicated cloud account.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的团队在其专用的云账户中操作其拥有的所有内容。
- en: '**Your life as a serverless engineer is as simple and enjoyable as it can be!**'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**您作为无服务器工程师的生活尽可能简单和愉快！**'
- en: Now, let’s start loosening up and open the boundaries, and imagine what might
    happen.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们开始放松并打开边界，想象可能会发生的事情。
- en: Say, due to business priorities and to meet delivery expectations, you bring
    engineers from another team to *share* the *responsibility* of contributing to
    your team’s boundary, forcing your team's focus areas to change.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 由于业务优先级和满足交付期望的需要，您将来自另一个团队的工程师*分享*对您团队边界的*责任*，迫使您团队的重点领域发生变化。
- en: '*How do you make sure the teams know each others’ ways of working?*'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*您如何确保团队了解彼此的工作方式？*'
- en: '*How do you make sure the code quality is uniform?*'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*您如何确保代码质量保持一致？*'
- en: '*How do you make sure the selection of AWS services and architectural patterns
    align?*'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*您如何确保选择的 AWS 服务和架构模式是对齐的？*'
- en: '*How do you make sure there are no gaps in the operational responsibilities?*'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*您如何确保操作责任没有漏洞？*'
- en: These teams can collaborate to address and ease the situation. But collaboration
    means more chats, pairing, reviews, discussions, meetings, etc., and these will
    impact both teams’ focus and efficiency.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 这些团队可以合作解决和缓解情况。但合作意味着更多的聊天、配对、审查、讨论、会议等，这些都会影响两个团队的关注和效率。
- en: Open team boundaries and shared responsibilities without adequate thought can
    have a negative impact on an organization. Serverless development can get harder,
    along with frustrating developer experience.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 开放团队边界和共享责任，如果没有充分的考虑，可能会对组织产生负面影响。无服务器开发会变得更加困难，开发者体验也会变得令人沮丧。
- en: Serverless is hard if you don’t invest in people's growth.
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如果不投入人员的成长，无服务器将变得困难。
- en: The world around us is filled with shortcuts. Several shortcut avenues teach
    you to write Lambda functions. This fast-food style of learning is good only up
    to and until the food lasts. To sustain your appetite, you need to keep ordering
    more.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们周围充满了捷径。几条捷径可以教您编写 Lambda 函数。这种快餐式的学习方法只在食物存在的时间内有效。为了满足您的胃口，您需要不断订购更多的食物。
- en: To be successful in serverless, you must keep learning.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 要在无服务器中取得成功，您必须不断学习。
- en: '[Paul’s article](https://pauldjohnston.medium.com/learning-serverless-and-why-it-is-hard-4a53b390c63d)
    focuses mainly on learning and how people who enter serverless often struggle
    to get grips with the technology and its ecosystem. As Paul describes, for someone
    new to serverless, even the concept of single-purpose Lambda functions itself
    takes time to digest.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '[Paul 的文章](https://pauldjohnston.medium.com/learning-serverless-and-why-it-is-hard-4a53b390c63d)
    主要关注学习以及进入无服务器领域的人们通常如何努力理解技术及其生态系统。正如 Paul 所描述的，对于一个新手来说，甚至单一用途的 Lambda 函数的概念本身也需要时间消化。'
- en: To be successful in serverless, you need to take many strides once you get to
    grips with single-purpose Lambda functions. Several areas act as stepping stones
    for you to progress towards a successful destination that requires many hops,
    and you gather many traits along the way.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 要在无服务器中取得成功，一旦掌握了单一用途的 Lambda 函数，您需要迈出许多步伐。几个领域充当您向成功目标迈进所需的跳板，并且您在此过程中积累了许多特质。
- en: I often highlight how serverless brings engineering diversity to teams. This
    realization is essential if you want to make serverless easy.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我经常强调无服务器如何为团队带来工程多样性。如果您想让无服务器变得简单，这种认识至关重要。
- en: Engineers should be guided, nurtured, mentored, or trained (or whatever the
    terminology is used in your organization) to make them understand stakeholder
    requirements, allow them to propose architectures, instill in them the benefits
    of single-purpose functions and microservices, show them how to incorporate security,
    teach them the observability principles, let them deploy to production, and tag
    them as owners of their services. These won’t come overnight or from watching
    a few videos on YouTube. This is where quality training and a long-term people
    growth strategy come in.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 工程师应该得到引导、培养、指导或培训（或者你的组织中使用的术语），让他们理解利益相关者的需求，允许他们提出架构方案，灌输单一功能和微服务的好处，展示如何融入安全性，教授可观察性原则，让他们部署到生产环境，并标记他们为服务的所有者。这不会一夜之间实现，也不会仅通过看几段YouTube视频就能达成。这正是质量培训和长期人才成长战略发挥作用的地方。
- en: '![](../Images/fdf71107e936f1aef98b56a066dc9b05.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fdf71107e936f1aef98b56a066dc9b05.png)'
- en: Traditional siloed specialists versus diverse serverless engineers. Source author.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的专业化专家与多样化的无服务器工程师。信息来源作者。
- en: Try not to restrain engineers with corporate bureaucracy. Allow them the freedom
    to learn new things, attend conferences, and be part of technical workshops and
    collaborative activities.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 不要用企业官僚主义限制工程师。让他们自由学习新知识，参加会议，并参与技术研讨会和协作活动。
- en: '*I was chatting to an engineering manager at a conference. She opined that
    workshops such as EventStorming and Architecture Katas that span for a couple
    of hours or more are a waste of time and affect the team’s productivity. So I
    asked her how she would handle productivity if a couple of opportunity-denied
    and disgruntled engineers called in sick for a day or two. She didn’t have an
    answer!*'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '*我在一次会议上与一位工程经理交谈。她认为像EventStorming和架构Katas这样跨越几个小时或更长时间的研讨会是浪费时间，并影响团队的生产力。于是我问她，如果有几位机会被拒绝和不满的工程师请了一两天病假，她怎么处理生产力问题。她没有答案！*'
- en: Serverless boot camps are a simple way to equip engineers with the basics of
    the serverless technology ecosystem. Some organizations have successfully implemented
    such programs. [Matt Coulter](https://www.linkedin.com/in/nideveloper/), an AWS
    Hero, once mentioned a successful program for new starters in place at Liberty
    Mutual. Organizations often deprioritise such initiatives citing budget constraints
    without even assessing the benefits they bring in.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 无服务器训练营是装备工程师掌握无服务器技术生态基础的简单方法。一些组织已成功实施了这类项目。[Matt Coulter](https://www.linkedin.com/in/nideveloper/)，一个AWS英雄，曾提到Liberty
    Mutual公司成功为新员工实施的一个项目。组织经常因预算约束而将此类倡议降级，甚至未评估其带来的好处。
- en: One of the challenges when it comes to serverless training is the quality and
    coverage of technical, developmental, architectural, and operational elements
    in the syllabus. Amongst several courses, I have heard great feedback on [Yan
    Cui’s](https://www.linkedin.com/in/theburningmonk/) [Production-Ready Serverless](https://productionreadyserverless.com/)
    training workshop. Yan is an AWS Serverless Hero and a powerhouse of serverless
    knowledge.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在无服务器培训中的一个挑战是课程大纲中技术、开发、架构和运营元素的质量和覆盖范围。在多个课程中，我听到了[Yan Cui](https://www.linkedin.com/in/theburningmonk/)的[《生产就绪的无服务器》](https://productionreadyserverless.com/)培训研讨会获得了很好的反馈。Yan是AWS无服务器英雄，也是无服务器知识的强大力量。
- en: '[](https://productionreadyserverless.com/?source=post_page-----56c35672b958--------------------------------)
    [## Production-Ready Serverless'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://productionreadyserverless.com/?source=post_page-----56c35672b958--------------------------------)
    [## 生产就绪的无服务器'
- en: Learn BEST PRACTICES for building production-ready serverless applications.
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 学习构建生产就绪无服务器应用的最佳实践。
- en: productionreadyserverless.com](https://productionreadyserverless.com/?source=post_page-----56c35672b958--------------------------------)
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: productionreadyserverless.com](https://productionreadyserverless.com/?source=post_page-----56c35672b958--------------------------------)
- en: Make engineers understand stakeholder requirements, allow them to propose architectures,
    instill in them the benefits of single-purpose functions and microservices, show
    them how to incorporate security, teach them the observability principles, let
    them deploy to production, and tag them as owners of their services.
  id: totrans-110
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 让工程师理解利益相关者的需求，允许他们提出架构方案，灌输单一功能和微服务的好处，展示如何融入安全性，教授可观察性原则，让他们部署到生产环境，并标记他们为服务的所有者。
- en: Serverless will become easier…
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 无服务器将变得更加简单…
- en: Like how driving gets better and easier with the hours behind the wheel, serverless
    becomes productive and enjoyable as you accumulate experience and become comfortable
    with its ecosystem.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 就像驾驶随着驾驶时间的增加变得更好更容易一样，随着你积累经验并熟悉其生态系统，无服务器变得更加高效和愉悦。
- en: '*Rollercoasters are not everyone’s favorite. The most common advice thrill
    seekers offer to others is —* ***You just gotta learn to let go!***'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '*过山车并非每个人的最爱。寻求刺激的人们常给他人的最常见建议是 —* ***你必须学会放手！***'
- en: You must learn to trust serverless technology to capitalize on the undifferentiated
    heavy lifting it offers. If AWS is offering managed solutions, make use of them
    to multiply business value. Why work against and build complex solutions you will
    never need?
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 你必须学会相信无服务器技术，以利用它提供的无差别重型工作。如果AWS提供托管解决方案，请利用它们来增加业务价值。为什么要反其道而行之，构建你永远不需要的复杂解决方案？
- en: Get inspiration from those who have successfully adopted serverless.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 从那些成功采用无服务器的人那里获取灵感。
- en: 'To close, I couldn’t find a better phrase than the theme of [Momento’s](https://www.gomomento.com/)
    AWS re: Invent 2023 [Community Party](https://events.gomomento.com/en-us/mo-23reinvent)-'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '要结束的时候，我找不到比[Momento的](https://www.gomomento.com/) AWS re: Invent 2023 [社区派对](https://events.gomomento.com/en-us/mo-23reinvent)主题更好的短语
    -'
- en: '**Believe in Serverless!**'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '**相信无服务器！**'
- en: Yes, believe in serverless and learn to let go!!
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，相信无服务器，并学会放手！
