["```py\n# Install and import the package\n!pip install pydicom\nimport pydicom\n\n# Reading a DICOM file from a specific path\ndcm_data = pydicom.dcmread('/content/drive/MyDrive/Datasets/Kaggle/DICOM/dicom_lung/000000.dcm')\ndcm_data\n```", "```py\nDataset.file_meta -------------------------------\n(0002, 0000) File Meta Information Group Length  UL: 196\n(0002, 0001) File Meta Information Version       OB: b'\\x00\\x01'\n(0002, 0002) Media Storage SOP Class UID         UI: CT Image Storage\n(0002, 0003) Media Storage SOP Instance UID      UI: 1.3.6.1.4.1.14519.5.2.1.7085.2626.214140401149739061368142942055\n(0002, 0010) Transfer Syntax UID                 UI: Explicit VR Little Endian\n(0002, 0012) Implementation Class UID            UI: 1.2.40.0.13.1.1.1\n(0002, 0013) Implementation Version Name         SH: 'dcm4che-1.4.35'\n-------------------------------------------------\n(0008, 0005) Specific Character Set              CS: 'ISO_IR 100'\n(0008, 0008) Image Type                          CS: ['ORIGINAL', 'PRIMARY', 'AXIAL', 'CT_SOM5 SPI']\n(0008, 0016) SOP Class UID                       UI: CT Image Storage\n(0008, 0018) SOP Instance UID                    UI: 1.3.6.1.4.1.14519.5.2.1.7085.2626.214140401149739061368142942055\n(0008, 0020) Study Date                          DA: '20100227'\n(0008, 0021) Series Date                         DA: '20100227'\n(0008, 0022) Acquisition Date                    DA: '20100227'\n(0008, 0023) Content Date                        DA: '20100227'\n(0008, 0030) Study Time                          TM: '161937.171'\n(0008, 0031) Series Time                         TM: '162536.14'\n(0008, 0032) Acquisition Time                    TM: '162203.028699'\n...\n```", "```py\n# Extract the SliceLocation and CTDIvol from DICOM files of Chest-CT\ndf = dicom2csv(extract = ['SliceLocation', 'CTDIvol'],\n          folder_path = '/content/drive/MyDrive/Datasets/Kaggle/DICOM/dicom_lung',\n          csv_file_name = 'data.csv', \n          return_dataframe = True)\n```", "```py\n# Sort the data frame to get the slices in order\ndf.sort_values(by='SliceLocation', inplace=True, ignore_index=True)\ndf\n```", "```py\n SliceLocation  CTDIvol\n0          -288.0    8.550\n1          -285.0    8.450\n2          -282.0    8.250\n3          -279.0    8.025\n4          -276.0    7.850\n..            ...      ...\n94           -6.0   12.450\n95           -3.0   12.325\n96            0.0   12.125\n97            3.0   11.925\n98            6.0   11.575\n\n[99 rows x 2 columns]\n```", "```py\n# Calculate the reconstruction interval from SliceLocation\n[df['SliceLocation'][i+1] - df['SliceLocation'][i] for i in range(0,len(df)-1)]\n```", "```py\nimport numpy as np\n# Calculating DPL = sum(CTDIvol * 0.3)\nprint('DLP = ',np.sum(df['CTDIvol'].values * 0.3), 'mGy*cm')\n```", "```py\nDLP =  239.90999999999994 mGy*cm\n```"]