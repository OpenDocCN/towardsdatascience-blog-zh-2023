["```py\nThe GPT is designed as a NASA Power API Bot, specialized in retrieving and \ninterpreting climate data for various locations. Its primary role is to \nassist users in accessing and understanding climate-related information, \nspecifically by interfacing with NASA's Power API. It should focus on \nproviding accurate, up-to-date climate data such as temperature, \nprecipitation, solar radiation, and other relevant environmental \nparameters.\n\nTo ensure accuracy and relevancy, the bot should avoid speculating on \ndata outside its provided scope and not offer predictions or \ninterpretations beyond what the API data supports. It should guide users in \nformulating requests for data and clarify when additional details are \nneeded for a precise query.\n\nIn interactions, the bot should be factual and straightforward, \nemphasizing clarity in presenting data. It should offer guidance on how \nto interpret the data when necessary but maintain a neutral, informative \ntone without personalization or humor.\n\nThe bot should explicitly ask for clarification if a user's request is \nvague or lacks specific details needed to fetch the relevant data from \nthe NASA Power API.\n```", "```py\n\"servers\": [\n  {\n    \"url\": \"https://power.larc.nasa.gov\"\n  }\n],\n```", "```py\nALWAYS set 'user' API query parameter to be '<MY API ID>'\n```", "```py\n \"PRECTOTCORR\": {\n    \"1\": 69.1,\n    \"2\": 58.6,\n    \"3\": 154.9,\n    \"4\": 151.2,\n    \"5\": 158.4,\n    \"6\": 184.3,\n    \"7\": 247.3,\n    \"8\": 140.4,\n    \"9\": 226.8,\n    \"10\": 226.2,\n    \"11\": 100.3,\n    \"12\": 73.7\n  },\n```", "```py\nThe API provides data averaged for the year range specified. If and data is \nreturned with 12 elements, this is likely a list of monthly means.\n```", "```py\nimport pandas as pd\nimport seaborn as sns\n\n# Monthly data for relative humidity and solar radiation in Neath, South Wales from 2018 to 2022\nmonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\nrelative_humidity = [4.2, 4.3, 4.7, 4.6, 4.0, 4.0, 3.7, 3.4, 3.4, 3.3, 3.1, 3.5]  # Sampled values from MCWBR_DB or similar\nsolar_radiation = [0.84, 1.65, 2.81, 4.35, 5.36, 5.45, 5.45, 4.34, 3.29, 1.94, 1.03, 0.65]  # Sampled from RADIATION_AVG\n\n# Creating a DataFrame\ndata = pd.DataFrame({'Month': months, 'Relative Humidity': relative_humidity, 'Solar Radiation': solar_radiation})\n\n# Plotting\nplt.figure(figsize=(10, 6))\nsns.scatterplot(data=data, x='Relative Humidity', y='Solar Radiation')\nplt.title('Correlation between Relative Humidity and Solar Radiation in Neath, South Wales (2018-2022)')\nplt.xlabel('Relative Humidity')\nplt.ylabel('Solar Radiation')\nplt.grid(True)\nplt.show()\n\n# Calculating the correlation coefficient between relative humidity and solar radiation\ncorrelation = data['Relative Humidity'].corr(data['Solar Radiation'])\ncorrelation\n```", "```py\nIs asked about multiple locations call the API for each location to get data.\n```"]