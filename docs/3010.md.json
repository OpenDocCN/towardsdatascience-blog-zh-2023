["```py\n!git clone https://github.com/princeton-vl/RAFT.git\n\n%cd RAFT\n!./download_models.sh\n%cd ..\n```", "```py\nsys.path.append('RAFT/core')\n```", "```py\nimport torch\nfrom raft import RAFT\nfrom utils import flow_viz\nfrom utils.utils import InputPadder\n\ndef process_img(img, device='cuda'):\n    return torch.from_numpy(img).permute(2, 0, 1).float()[None].to(device)\n\ndef load_model(weights_path, args):\n    \"\"\" Loads model to CUDA only \"\"\"\n    model = RAFT(args)\n    pretrained_weights = torch.load(weights_path, map_location=torch.device(\"cpu\"))\n    model = torch.nn.DataParallel(model)\n    model.load_state_dict(pretrained_weights)\n    model.to(\"cuda\")\n    return model\n\ndef inference(model, frame1, frame2, device='cuda', pad_mode='sintel',\n              iters=12, flow_init=None, upsample=True, test_mode=True):\n\n    model.eval()\n    with torch.no_grad():\n        # preprocess\n        frame1 = process_img(frame1, device)\n        frame2 = process_img(frame2, device)\n\n        padder = InputPadder(frame1.shape, mode=pad_mode)\n        frame1, frame2 = padder.pad(frame1, frame2)\n\n        # predict flow\n        if test_mode:\n          flow_low, flow_up = model(frame1,\n                                    frame2,\n                                    iters=iters,\n                                    flow_init=flow_init,\n                                    upsample=upsample,\n                                    test_mode=test_mode)\n          return flow_low, flow_up\n\n        else:\n            flow_iters = model(frame1,\n                               frame2,\n                               iters=iters,\n                               flow_init=flow_init,\n                               upsample=upsample,\n                               test_mode=test_mode)\n\n            return flow_iters\n\ndef get_viz(flo):\n    flo = flo[0].permute(1,2,0).cpu().numpy()\n    return flow_viz.flow_to_image(flo)\n```", "```py\n# class to interface with RAFT\nclass Args():\n  def __init__(self, model='', path='', small=False, \n               mixed_precision=True, alternate_corr=False):\n    self.model = model\n    self.path = path\n    self.small = small\n    self.mixed_precision = mixed_precision\n    self.alternate_corr = alternate_corr\n\n  \"\"\" Sketchy hack to pretend to iterate through the class objects \"\"\"\n  def __iter__(self):\n    return self\n\n  def __next__(self):\n    raise StopIteration\n```", "```py\nmodel = load_model(\"RAFT/models/raft-sintel.pth\", args=Args())\nflow_low, flow_up = inference(model, frame1, frame2, device='cuda', test_mode=True)\n```", "```py\n flow_iters = inference(model, frame1, frame2, device='cuda', pad_mode=None, iters=20, test_mode=False)\n```", "```py\n# get previous estimate at 1/8 res\nflow_lo, flow_up = inference(model, frame1, frame2, device='cuda', pad_mode=None, iters=20, test_mode=True)\n\n# 0 initialization\nflow_lo_cold, flow_up_cold = inference(model, frame2, frame3, device='cuda', pad_mode=None, flow_init=None, iters=20, test_mode=True)\n\n# warm initialization\nflow_lo_warm, flow_up_warm = inference(model, frame2, frame3, device='cuda', pad_mode=None, flow_init=flow_lo, iters=20, test_mode=True)\n```"]