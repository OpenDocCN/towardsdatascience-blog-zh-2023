- en: How To Deploy PyTorch Models as Production-Ready APIs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[https://towardsdatascience.com/how-to-deploy-pytorch-models-as-production-ready-apis-f61136fd0244?source=collection_archive---------7-----------------------#2023-04-03](https://towardsdatascience.com/how-to-deploy-pytorch-models-as-production-ready-apis-f61136fd0244?source=collection_archive---------7-----------------------#2023-04-03)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: An end-to-end use-case combining PyTorch Lightning and BentoML
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://ahmedbesbes.medium.com/?source=post_page-----f61136fd0244--------------------------------)[![Ahmed
    Besbes](../Images/93804d9291439715e578f204b79c9bdd.png)](https://ahmedbesbes.medium.com/?source=post_page-----f61136fd0244--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f61136fd0244--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f61136fd0244--------------------------------)
    [Ahmed Besbes](https://ahmedbesbes.medium.com/?source=post_page-----f61136fd0244--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ¬∑
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fadc8ea174c69&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-deploy-pytorch-models-as-production-ready-apis-f61136fd0244&user=Ahmed+Besbes&userId=adc8ea174c69&source=post_page-adc8ea174c69----f61136fd0244---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----f61136fd0244--------------------------------)
    ¬∑12 min read¬∑Apr 3, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff61136fd0244&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-deploy-pytorch-models-as-production-ready-apis-f61136fd0244&user=Ahmed+Besbes&userId=adc8ea174c69&source=-----f61136fd0244---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff61136fd0244&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-deploy-pytorch-models-as-production-ready-apis-f61136fd0244&source=-----f61136fd0244---------------------bookmark_footer-----------)![](../Images/3d420812acc306b94ced6405638c8222.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [SpaceX](https://unsplash.com/@spacex?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: As an ML engineer, I often encounter two main challenges when working with deep
    learning models in production.
  prefs: []
  type: TYPE_NORMAL
- en: The first one is the need to rewrite boilerplate code for each project to handle
    tasks like training loops, data loading, or metric computation. As this work often
    makes the codebase more complex with unnecessary abstractions, it slows down the
    iterative process.
  prefs: []
  type: TYPE_NORMAL
- en: The second challenge involves the wide range of skills or tools required to
    efficiently deploy trained models to the cloud. This includes Docker, APIs, or
    cloud services. Not to mention the knowledge related to GPU support, multithreading,
    or scalability.
  prefs: []
  type: TYPE_NORMAL
- en: If you‚Äôre a data scientist, you‚Äôre clearly not expected to know all this.
  prefs: []
  type: TYPE_NORMAL
- en: '*There are fortunately two Python frameworks designed to mitigate these issues:*
    [***Pytorch Lightning***](https://github.com/Lightning-AI/lightning) *and* [***BentoML***](https://github.com/bentoml/BentoML)*.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In this article, we will combine these frameworks together to build* ***a production-ready
    image classification service*** *deployed to a Kubernetes-native environment.*
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Let‚Äôs have a look üîç
  prefs: []
  type: TYPE_NORMAL
