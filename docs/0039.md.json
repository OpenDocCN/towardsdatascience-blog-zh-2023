["```py\n #  Attribute                     Domain\n   -- -----------------------------------------\n   1\\. Sample code number            id number\n   2\\. Clump Thickness               1 - 10\n   3\\. Uniformity of Cell Size       1 - 10\n   4\\. Uniformity of Cell Shape      1 - 10\n   5\\. Marginal Adhesion             1 - 10\n   6\\. Single Epithelial Cell Size   1 - 10\n   7\\. Bare Nuclei                   1 - 10\n   8\\. Bland Chromatin               1 - 10\n   9\\. Normal Nucleoli               1 - 10\n  10\\. Mitoses                       1 - 10\n  11\\. Class :                       (2 for benign, 4 for malignant)\n```", "```py\nfeatures = {\n   \"Sample code number\", \n   \"Clump Thickness\", \n   \"Uniformity of Cell Size\", \n    \"Uniformity of Cell Shape\",\n    \"Marginal Adhesion\",  \n   \"Single Epithelial Cell Size\" ,\n   \"Bare Nuclei\",\n   \"Bland Chromatin\",\n   \"Normal Nucleoli\",\n   \"Mitoses\",\n   \"Class\"\n   };\nfeatures = ToUpperCase[features];\nfeatures = StringReplace[features, \" \" -> \"_\"]\n\n---\n{\"SAMPLE_CODE_NUMBER\", \"CLUMP_THICKNESS\", \"UNIFORMITY_OF_CELL_SIZE\", \\\n\"UNIFORMITY_OF_CELL_SHAPE\", \"MARGINAL_ADHESION\", \\\n\"SINGLE_EPITHELIAL_CELL_SIZE\", \"BARE_NUCLEI\", \"BLAND_CHROMATIN\", \\\n\"NORMAL_NUCLEOLI\", \"MITOSES\", \"CLASS\"}\n```", "```py\nSetDirectory[\n  \"/data/uci_breast_cancer/\"];\ndata = Import[\n   \"/data/uci_breast_cancer/breast-cancer-wisconsin.data\"];\ndata = DeleteCases[data, {___, x_ /; ! NumberQ[x], ___}];\n```", "```py\n(* OBTAIN DATA LENGTH *)\nn = Length[data];\n\n(* SET THE RATIO BETWEEN TEST AND TRAINING, TEST IS 20 PERCENT *)\ntestFraction = 0.2;\n\n(* SET THE ALPHA VALUE *)\nalpha = 0.9;\n\n(* SHUFFLE THE DATA *)\nrandomizedData = RandomSample[data];\n\n(* EXTRACT THE TRAINING AND TEST SETS *)\ntestData = Take[randomizedData, Round[testFraction*n]];\ntrainingData = Drop[randomizedData, Round[testFraction*n]];\n\n(* GET THE LENGTHS OF EACH DATASET *)\nlengthTestData = Length[testData]\nlengthTrainingData = Length[trainingData]\n\n---\n137\n\n546\n```", "```py\nW = ConstantArray[1, Length[features[[2 ;; 10]]]]\n\n---\n{1, 1, 1, 1, 1, 1, 1, 1, 1}\n```", "```py\nnonZeroSign[x_] := If[x > 0.0, 1.0, -1.0];\nDo[\n  X = trainingData[[i, 2 ;; 10]];\n  Y = trainingData[[i, 11]] - 3;\n  EY = nonZeroSign[Dot[X, W]];\n  W = (W  + alpha (Y - EY) X);\n  , {i, 1, lengthTrainingData}\n  ];\nW\n\n---\n{-2.6, 42.4, 6.4, 20.8, -78.2, 19., -26., 53.2, 6.4}\n```", "```py\nresults = ConstantArray[0, lengthTestData];\nDo[\n  X = testData[[i, 2 ;; 10]];\n  results[[i]] = nonZeroSign[Dot[X, W]];\n  , {i, 1, lengthTestData}\n  ];\nY = testData[[All, 11]] - 3.0\nEY = results\n\n---\n{-1., -1., 1., -1., -1., -1., 1., 1., -1., -1., -1., -1., -1., -1., \\\n-1., -1., -1., -1., -1., -1., 1., 1., -1., -1., -1., -1., 1., -1., \\\n1., -1., -1., -1., -1., -1., -1., -1., 1., -1., -1., -1., -1., -1., \\\n-1., -1., -1., -1., 1., -1., -1., 1., 1., -1., 1., 1., 1., -1., 1., \\\n-1., 1., -1., -1., -1., -1., 1., -1., 1., -1., -1., -1., 1., -1., \\\n-1., -1., 1., 1., 1., 1., 1., -1., 1., -1., 1., -1., -1., 1., 1., \\\n-1., -1., 1., 1., -1., -1., 1., 1., 1., -1., -1., -1., 1., -1., 1., \\\n-1., -1., 1., 1., 1., -1., -1., -1., -1., -1., -1., -1., -1., -1., \\\n-1., -1., 1., -1., 1., 1., -1., 1., -1., 1., -1., -1., 1., -1., -1., \\\n-1., -1., -1., -1., -1., -1., -1.}\n\n{-1., -1., -1., -1., -1., -1., 1., 1., -1., -1., -1., -1., -1., -1., \\\n-1., -1., -1., -1., -1., 1., 1., 1., -1., -1., -1., -1., 1., -1., 1., \\\n-1., -1., -1., -1., -1., 1., 1., 1., -1., -1., -1., -1., 1., -1., 1., \\\n-1., 1., -1., 1., -1., -1., 1., -1., 1., 1., 1., -1., 1., -1., 1., \\\n1., -1., -1., -1., 1., 1., 1., 1., -1., -1., -1., -1., -1., -1., 1., \\\n1., 1., 1., -1., -1., 1., -1., 1., 1., -1., 1., 1., -1., 1., 1., 1., \\\n-1., -1., 1., 1., 1., -1., -1., 1., 1., -1., 1., -1., -1., 1., 1., \\\n-1., -1., -1., 1., -1., -1., 1., 1., 1., -1., -1., -1., 1., -1., 1., \\\n1., -1., 1., -1., 1., -1., -1., 1., -1., -1., -1., -1., -1., -1., 1., \\\n1., -1.}\n```", "```py\ntestDataHit = MapThread[Equal, {EY, Y}]\ntestDataHitCount = Count[testDataHit, True]\nEYAccuracy = testDataHitCount/Length[Y]*1.0\n\n---\n{True, True, False, True, True, True, True, True, True, True, True, \\\nTrue, True, True, True, True, True, True, True, False, True, True, \\\nTrue, True, True, True, True, True, True, True, True, True, True, \\\nTrue, False, False, True, True, True, True, True, False, True, False, \\\nTrue, False, False, False, True, False, True, True, True, True, True, \\\nTrue, True, True, True, False, True, True, True, True, False, True, \\\nFalse, True, True, False, True, True, True, True, True, True, True, \\\nFalse, True, True, True, True, False, True, True, True, True, False, \\\nTrue, True, True, True, True, True, True, True, True, False, True, \\\nTrue, True, True, True, True, True, False, True, True, False, True, \\\nTrue, False, False, False, True, True, True, True, True, True, True, \\\nTrue, True, True, True, True, True, True, True, True, True, True, \\\nTrue, True, False, False, True}\n\n112\n\n0.817518\n```", "```py\nrecall =\n Count[\n    Thread[Thread[Y == 1.0] && Thread[EY == 1.0]]\n    , True]/(\n    Count[\n      Thread[Thread[Y == 1.0] && Thread[EY == 1.0]]\n      , True]\n     +\n     Count[\n      Thread[Thread[Y == 1.0] && Thread[EY == -1.0]]\n      , True]\n    )*1.0\n\n---\n0.863636\n```", "```py\nbeningPredictedBening = \n Count[Thread[Thread[Y == -1.0] && Thread[EY == -1.0]], True]\nbeningPredictedMalignant = \n Count[Thread[Thread[Y == -1.0] && Thread[EY == 1.0]], True]\nmalignantPredictedBening = \n Count[Thread[Thread[Y == 1.0] && Thread[EY == -1.0]], True]\nmalignantPredictedMalignant = \n Count[Thread[Thread[Y == 1.0] && Thread[EY == 1.0]], True]\nMatrixPlot[\n {\n  {beningPredictedBening, beningPredictedMalignant},\n  {malignantPredictedBening, malignantPredictedMalignant}\n  },\n ImageSize -> 300,\n ColorFunction -> \"TemperatureMap\",\n FrameTicks -> {\n   {{1, \"TUMOUR\\nBENING\"}, {2, \"TUMOUR\\nMALIGNANT\"}},\n   {{1, \"PREDICTED\\nBENING\"}, {2, \"PREDICTED\\nMALIGNANT\"}},\n   {{1, \"\"}, {2, \"\"}},\n   {{1, \"\"}, {2, \"\"}}\n   },\n PlotLabel -> \"CONFUSSION MATRIX PERCEPTRON\",\n Epilog -> {\n   Text[beningPredictedBening, {1/2, 3/2}],\n   Text[beningPredictedMalignant, {3/2, 3/2}],\n   Text[malignantPredictedBening, {1/2, 1/2}],\n   Text[malignantPredictedMalignant, {3/2, 1/2}]}\n ]\n\n---\n74\n\n19\n\n6\n\n38\n```"]