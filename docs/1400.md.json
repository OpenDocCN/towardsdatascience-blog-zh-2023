["```py\nfrom geopy.geocoders import Nominatim\ngeolocator = Nominatim(user_agent=\"app\")\n\ndef get_coordinates(place):\n    \"\"\"Return the latitude and longitude of the place.\"\"\"\n    place_details = geolocator.geocode(place)\n    coordinates = (place_details[1][0], place_details[1][1])\n\n    return coordinates\n```", "```py\nbase_url = r”https://power.larc.nasa.gov/api/temporal/hourly/point?parameters=ALLSKY_SFC_SW_DWN&community=RE&time-standard=UTC&longitude={longitude}&latitude={latitude}&format=JSON&start=2020&end=2020\"\n```", "```py\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize = (20, 6))\nfig.suptitle(\"Solar irradiance on October 1, 2020\")\n\nax1.plot(df.loc[\"2020–10–01\"])\nax1.set_title(\"Based on UTC time zone\")\nax1.xaxis.set_ticks(ticks = df.loc[\"2020–10–01\"].index[::4], labels = np.arange(0, 24, 4))\n\ncities = df.columns.tolist()\nhandles = ax1.get_legend_handles_labels()[0]\nax1.legend(handles, labels = cities, loc = \"upper right\")\nax1.set_xlabel(\"Hour of day\")\nax1.set_ylabel(\"W/m$^2$\")\n\nax2.plot(df_chitwan.loc[\"2020–10–01\"].values.tolist())\nax2.plot(df_newyork.loc[\"2020–10–01\"].values.tolist())\nax2.plot(df_bonn.loc[\"2020–10–01\"].values.tolist())\nax2.plot(df_sydney.loc[\"2020–10–01\"].values.tolist())\nax2.xaxis.set_ticks(ticks = np.arange(0, 24, 4), labels = np.arange(0, 24, 4))\n\nhandles = ax2.get_legend_handles_labels()[0]\nax2.legend(handles, labels = cities)\nax2.set_title(\"Based on local time zone of each city/country\")\nax2.set_xlabel(\"Hour of day\")\nax2.set_ylabel(\"W/m$^2$\")\n\nplt.savefig(\"output/solar irradiance on october 1.jpeg\",\n dpi = 300)\nplt.show()\n```", "```py\ntime_in_nepal =  timezone(\"Asia/Kathmandu”).localize(datetime.now()) \n```", "```py\ngerman_timezone = timezone(“Europe/Berlin”)\ntime_in_germany = time_in_nepal.astimezone(german_timezone)\n```", "```py\ndf_utc = df.tz_localize(tz = “UTC”)\n```", "```py\ndf_nepal = df_utc.tz_convert(tz = “Asia/Kathmandu”)\n```"]