- en: Get Temperature Data by Location with Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/get-temperature-data-by-location-with-python-52ed872dd621?source=collection_archive---------7-----------------------#2023-05-18](https://towardsdatascience.com/get-temperature-data-by-location-with-python-52ed872dd621?source=collection_archive---------7-----------------------#2023-05-18)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Retrieve historical temperature data by latitude and longitude.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://gustavorsantos.medium.com/?source=post_page-----52ed872dd621--------------------------------)[![Gustavo
    Santos](../Images/a19a9f4525cdeb6e7a76cd05246aa622.png)](https://gustavorsantos.medium.com/?source=post_page-----52ed872dd621--------------------------------)[](https://towardsdatascience.com/?source=post_page-----52ed872dd621--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----52ed872dd621--------------------------------)
    [Gustavo Santos](https://gustavorsantos.medium.com/?source=post_page-----52ed872dd621--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4429d99b1245&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fget-temperature-data-by-location-with-python-52ed872dd621&user=Gustavo+Santos&userId=4429d99b1245&source=post_page-4429d99b1245----52ed872dd621---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----52ed872dd621--------------------------------)
    ·3 min read·May 18, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F52ed872dd621&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fget-temperature-data-by-location-with-python-52ed872dd621&user=Gustavo+Santos&userId=4429d99b1245&source=-----52ed872dd621---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F52ed872dd621&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fget-temperature-data-by-location-with-python-52ed872dd621&source=-----52ed872dd621---------------------bookmark_footer-----------)![](../Images/0a6e05461c10ccab94bd840c64e8f53b.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Tom Barrett](https://unsplash.com/es/@wistomsin?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/hgGplX3PFBg?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I have been working on some projects when I needed to find the average temperature
    by location to be able to add that as a possible variable to my model. After some
    time researching, I found this great and easy-to-use package in Python called
    `meteostat`.
  prefs: []
  type: TYPE_NORMAL
- en: 'This pack has some interesting methods and one was exactly what I needed: if
    I enter a latitude and longitude, it retrieves me the historical temperature for
    that place. Additionally, you can ask it by a timeframe. So, you can get only
    an year or multiple ones.'
  prefs: []
  type: TYPE_NORMAL
- en: Another cool feature is that you can request your data to be daily or monthly.
    Amazing!
  prefs: []
  type: TYPE_NORMAL
- en: Let’s see how the code works.
  prefs: []
  type: TYPE_NORMAL
- en: Code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: First, let’s install meteostat with `pip install meteostat`. Next, we can import
    the needed packages.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: If you visit the [documentation](https://dev.meteostat.net/python/#installation),
    you will see this *get started* code, which is basically what you need to make
    that work. We set a time frame — I used 2022\. Then we create a…
  prefs: []
  type: TYPE_NORMAL
