- en: Introduction to Hypothesis Testing with Examples
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[https://towardsdatascience.com/introduction-to-hypothesis-testing-with-examples-60a618fb1799?source=collection_archive---------2-----------------------#2023-01-05](https://towardsdatascience.com/introduction-to-hypothesis-testing-with-examples-60a618fb1799?source=collection_archive---------2-----------------------#2023-01-05)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A comprehensible guide on hypothesis testing with examples and visualizations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://ms-neerajkrishna.medium.com/?source=post_page-----60a618fb1799--------------------------------)[![Neeraj
    Krishna](../Images/7bea17130a09d3382cba3b12ca5e3d7b.png)](https://ms-neerajkrishna.medium.com/?source=post_page-----60a618fb1799--------------------------------)[](https://towardsdatascience.com/?source=post_page-----60a618fb1799--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----60a618fb1799--------------------------------)
    [Neeraj Krishna](https://ms-neerajkrishna.medium.com/?source=post_page-----60a618fb1799--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ¬∑
  prefs: []
  type: TYPE_NORMAL
- en: '[Follow](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F8d6b9cde0656&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-hypothesis-testing-with-examples-60a618fb1799&user=Neeraj+Krishna&userId=8d6b9cde0656&source=post_page-8d6b9cde0656----60a618fb1799---------------------post_header-----------)
    Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----60a618fb1799--------------------------------)
    ¬∑8 min read¬∑Jan 5, 2023[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F60a618fb1799&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-hypothesis-testing-with-examples-60a618fb1799&user=Neeraj+Krishna&userId=8d6b9cde0656&source=-----60a618fb1799---------------------clap_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F60a618fb1799&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-hypothesis-testing-with-examples-60a618fb1799&source=-----60a618fb1799---------------------bookmark_footer-----------)'
  prefs: []
  type: TYPE_NORMAL
- en: Most tutorials I‚Äôve seen on hypothesis testing start with a prior assumption
    of the distribution, list down some definitions and formulae, and directly apply
    them to solve a problem.
  prefs: []
  type: TYPE_NORMAL
- en: However, in this tutorial, we will learn from the first principles. This will
    be an example-driven tutorial where we start with a basic example and build our
    way up to understand the foundations of hypothesis testing.
  prefs: []
  type: TYPE_NORMAL
- en: Let‚Äôs get started.
  prefs: []
  type: TYPE_NORMAL
- en: Which die did you pick?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](../Images/b0ddcc52a615d3df8c01cd87ee086db8.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Brett Jordan](https://unsplash.com/ja/@brett_jordan?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Imagine there are two indistinguishable dice in front of you. One is fair, and
    the other is loaded. You randomly pick a die and toss it. After observing on which
    face it lands, can you determine which die you‚Äôve picked?
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'The probability distribution of the dice is shown below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: In binary hypothesis testing problems, we‚Äôll often be presented with two choices
    which we call hypotheses, and we‚Äôll have to decide whether to pick one or the
    other.
  prefs: []
  type: TYPE_NORMAL
- en: The hypotheses are represented by H‚ÇÄ and H‚ÇÅ and are called null and alternate
    hypotheses respectively. In hypothesis testing, we either reject or accept the
    null hypothesis.
  prefs: []
  type: TYPE_NORMAL
- en: In our example, die 1 and die 2 are null and alternate hypotheses respectively.
  prefs: []
  type: TYPE_NORMAL
- en: If you think about it intuitively, if the die lands on 1 or 2, it‚Äôs more likely
    die 2 because it has more probability to land on 1 or 2\. So the decision to accept
    or reject the null hypothesis depends on the distribution of the observations.
  prefs: []
  type: TYPE_NORMAL
- en: 'So we can say the goal of hypothesis testing is to draw a boundary and separate
    the observation space into two regions: the rejection region and the acceptance
    region.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8d5f436d057692a2eeeea483902637dd.png)'
  prefs: []
  type: TYPE_IMG
- en: If the observation falls in the rejection region, we reject the null hypothesis,
    else we accept it. Now, the decision boundary isn‚Äôt going to be perfect and we‚Äôre
    going to make errors. For example, it‚Äôs possible that die 1 lands on 1 or 2 and
    we mistake it for die 2; but there is less probability of this happening. We‚Äôll
    learn how to calculate the probabilities of errors in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: How do we determine the decision boundary? There‚Äôs a simple and effective method
    called the likelihood ratio test we‚Äôll discuss next.
  prefs: []
  type: TYPE_NORMAL
- en: Likelihood ratio test
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You‚Äôve got to realize first the distribution of the observations depends on
    the hypotheses. Below I‚Äôve plotted the distributions in our example under the
    two hypotheses:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e66604f6421d83c8cfe8d2f182dcbd29.png)'
  prefs: []
  type: TYPE_IMG
- en: Probability distributions of the observations under both hypotheses
  prefs: []
  type: TYPE_NORMAL
- en: Now, `P(X=x;H‚ÇÄ)` and `P(X=x;H‚ÇÅ)` represents the *likelihood* of observations
    under hypotheses H‚ÇÄ and H‚ÇÅ respectively. Their ratio tells us *how likely* one
    hypothesis is true over the other for different observations.
  prefs: []
  type: TYPE_NORMAL
- en: This ratio is called the likelihood ratio and is represented by `L(X)`. `L(X)`
    is a random variable that depends on the observation `x`.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0b6dfad392914d607c367f20c2fef996.png)'
  prefs: []
  type: TYPE_IMG
- en: Likelihood ratio
  prefs: []
  type: TYPE_NORMAL
- en: In the likelihood ratio test, we reject the null hypothesis if the ratio is
    above a certain value i.e, reject the null hypothesis if `L(X) > ùúâ`, else accept
    it. ùúâ is called the critical ratio.
  prefs: []
  type: TYPE_NORMAL
- en: 'So this is how we can draw a decision boundary: we separate the observations
    for which the likelihood ratio is greater than the critical ratio from the observations
    for which it isn‚Äôt.'
  prefs: []
  type: TYPE_NORMAL
- en: So the observations of the form `{x | L(x) > ùúâ}` fall into the rejection region
    while the rest of them fall into the acceptance region.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let‚Äôs illustrate it with our dice example. The likelihood ratio can be calculated
    as:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The plot of the likelihood ratio looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2fbdfa03000c5e2795b431f8255159ae.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now the placement of the decision boundary comes down to choosing the critical
    ratio. Let‚Äôs assume the critical ratio is a value between 3/2 and 3/4 i.e., `3/4
    < ùúâ < 3/2`. Then our decision boundary looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/95318d6315a49aef05a264551487e979.png)'
  prefs: []
  type: TYPE_IMG
- en: Rejection and Acceptance regions if the likelihood ratio is between 3/4 and
    3/2
  prefs: []
  type: TYPE_NORMAL
- en: Let‚Äôs discuss the errors associated with this decision. The first type of error
    occurs if observation *x* belongs to the rejection region but occurs under the
    null hypothesis. In our example, it means die 1 lands on 1 or 2.
  prefs: []
  type: TYPE_NORMAL
- en: 'This is called the false rejection error or the type 1 error. The probability
    of this error is represented by `ùõº` and can be computed as:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The second error occurs if observation *x* belongs to the acceptance region
    but occurs under the alternate hypothesis. This is called the false acceptance
    error or the type 2 error. The probability of this error is represented by `ùõΩ`
    and can be computed as:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'In our example, the false rejection and the false acceptance error can be calculated
    as:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Let‚Äôs consider two other scenarios where the critical ratio takes the following
    values: `ùúâ > 3/2` and `ùúâ < 3/4`.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5e2eee010d489c01b4724221afae7208.png)'
  prefs: []
  type: TYPE_IMG
- en: Critical ratio < 3/4
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/bab18d76a6311fca5ef66ee2705ef8c4.png)'
  prefs: []
  type: TYPE_IMG
- en: Critical ratio > 3/2
  prefs: []
  type: TYPE_NORMAL
- en: The type 1 and type 2 errors can be computed similarly.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Let‚Äôs plot both the errors for different values of ùúâ.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9977f5a8ac232948b631d4bbc90dbc94.png)'
  prefs: []
  type: TYPE_IMG
- en: As the critical value ùúâ increases, the rejection region becomes smaller. As
    a result, the false rejection probability ùõº decreases, while the false acceptance
    probability ùõΩ increases.
  prefs: []
  type: TYPE_NORMAL
- en: The likelihood ratio test offers the smallest errors
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We could draw a boundary in the observation space anywhere. Why do we need to
    compute the likelihood ratio and go through all that? Let‚Äôs see why.
  prefs: []
  type: TYPE_NORMAL
- en: Below I‚Äôve calculated the type I and type II errors for different boundaries.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'The plot of Type I and Type II errors with their sum for different boundaries
    looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/77a01f393e24d5ec68b1b7d246a65acf.png)'
  prefs: []
  type: TYPE_IMG
- en: We can see for the optimum value of the critical ratio obtained from the likelihood
    ratio test, the sum of type I and type II errors is the least.
  prefs: []
  type: TYPE_NORMAL
- en: In other words, for a given false rejection probability, the likelihood ratio
    test offers the smallest possible false acceptance probability.
  prefs: []
  type: TYPE_NORMAL
- en: This is called the Neyman-Pearson Lemma. I‚Äôve referenced the theoretical proof
    at the end of the article.
  prefs: []
  type: TYPE_NORMAL
- en: Likelihood ratio test for continuous distributions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the above example, we didn‚Äôt discuss how to choose the value of the critical
    ratio ùúâ. The probability distributions were discrete, so a small change in the
    critical ratio ùúâ will not affect the boundary.
  prefs: []
  type: TYPE_NORMAL
- en: When we are dealing with continuous distributions, we fix the value of the false
    rejection probability ùõº and calculate the critical ratio based on that.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: But again, the process would be the same. Once we obtain the value of the critical
    ratio, we separate the observation space.
  prefs: []
  type: TYPE_NORMAL
- en: Typical choices for ùõº are `ùõº = 0.01, ùõº = 0.05, or ùõº = 0.01`, depending on the
    degree of the undesirability of false rejection.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/09b7cae1d0096f945e43629631ba9316.png)'
  prefs: []
  type: TYPE_IMG
- en: For example, if we‚Äôre dealing with a normal distribution, we could standardize
    it and look up the Z-table to find ùúâ for a given ùõº.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this article, we‚Äôve looked at the idea behind hypothesis testing and the
    intuition behind the process. The whole process can be summarized in the diagram
    below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9d61d8dadf632e83cdbace6d1815e5f0.png)'
  prefs: []
  type: TYPE_IMG
- en: We start with two hypotheses H‚ÇÄ and H‚ÇÅ such that the distribution of the underlying
    data depends on the hypotheses. The goal is to prove or disprove the null hypothesis
    H‚ÇÄ by finding a decision rule that maps the realized value of the observation
    *x* to one of the two hypotheses. Finally, we calculate the errors associated
    with the decision rule.
  prefs: []
  type: TYPE_NORMAL
- en: However, in the real world, the distinction between the two hypotheses wouldn‚Äôt
    be straightforward. So we‚Äôd have to do some workarounds to perform hypothesis
    testing. Let‚Äôs discuss this in the next article.
  prefs: []
  type: TYPE_NORMAL
- en: Hope you‚Äôve enjoyed this article. Let‚Äôs connect.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Image and Diagram Credits
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: All the images, figures, and diagrams in this article are created by the author;
    unless explicitly mentioned in the caption.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 9 and section 3 of the book Introduction to Probability by Dimitri
    Bertsekas and John Tsitsiklis](https://www.amazon.in/Introduction-Probability-Dimitri-P-Bertsekas/dp/188652923X)'
  prefs: []
  type: TYPE_NORMAL
