- en: What’s new in Pandas 2.0?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Pandas 2.0 有什么新变化？
- en: 原文：[https://towardsdatascience.com/whats-new-in-pandas-2-0-5df366eb0197](https://towardsdatascience.com/whats-new-in-pandas-2-0-5df366eb0197)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/whats-new-in-pandas-2-0-5df366eb0197](https://towardsdatascience.com/whats-new-in-pandas-2-0-5df366eb0197)
- en: The five things to know about the big release
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于这次重大发布的五件事
- en: '[](https://jeffhale.medium.com/?source=post_page-----5df366eb0197--------------------------------)[![Jeff
    Hale](../Images/11d534200a7fdc5d997fa2ddbc66132b.png)](https://jeffhale.medium.com/?source=post_page-----5df366eb0197--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5df366eb0197--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5df366eb0197--------------------------------)
    [Jeff Hale](https://jeffhale.medium.com/?source=post_page-----5df366eb0197--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://jeffhale.medium.com/?source=post_page-----5df366eb0197--------------------------------)[![Jeff
    Hale](../Images/11d534200a7fdc5d997fa2ddbc66132b.png)](https://jeffhale.medium.com/?source=post_page-----5df366eb0197--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5df366eb0197--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5df366eb0197--------------------------------)
    [Jeff Hale](https://jeffhale.medium.com/?source=post_page-----5df366eb0197--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----5df366eb0197--------------------------------)
    ·5 min read·Apr 10, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----5df366eb0197--------------------------------)
    ·阅读时间 5 分钟·2023 年 4 月 10 日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: Pandas 2.0 hit general availability on April 3, 2023\. Let’s see what features
    are hotter than a Corgi in the sunshine. ☀️
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas 2.0 于 2023 年 4 月 3 日正式发布。让我们看看哪些功能比阳光下的柯基还要炙手可热。☀️
- en: '![](../Images/64c4f87ef9ed00d3cb56323cded1e96c.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/64c4f87ef9ed00d3cb56323cded1e96c.png)'
- en: 'Source: pixabay.com'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：pixabay.com
- en: Three years ago I wrote [What’s new in Pandas 1.0](/whats-new-in-pandas-1-0-ffa99bd43a58).
    One pandemic and a bunch of AI advances later, here we are with pandas 2.0.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 三年前，我写了 [Pandas 1.0 有什么新变化](/whats-new-in-pandas-1-0-ffa99bd43a58)。经历了一场大流行和一系列
    AI 进展之后，我们迎来了 pandas 2.0。
- en: Pandas is the standard, brain-friendly Python library for working with data.
    The 2.0 update is all about making pandas faster and more memory efficient. Memory
    is the number one reason people need to leave pandas for Dask, Ray, SQL databases,
    Spark DataFrames, and other tools. The more you can reduce memory use while working
    in pandas, the easier life is. 🙂
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas 是标准的、脑力友好的 Python 数据处理库。2.0 更新的重点是让 pandas 更快、更节省内存。内存是人们需要离开 pandas
    转向 Dask、Ray、SQL 数据库、Spark DataFrames 和其他工具的主要原因。减少内存使用会使 pandas 的使用变得更加轻松。🙂
- en: As you might expect with a major release version, pandas 2.0 has a number of
    significant changes. Let’s dig in!
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你可能期望的那样，作为一个主要版本，pandas 2.0 有许多显著的变化。让我们深入了解一下！
- en: pyarrow *🐍➡️*
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: pyarrow *🐍➡️*
- en: If there’s one word to sum up this release it’s *pyarrow.*
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用一个词来总结这次发布，那就是 *pyarrow*。
- en: Pandas was built using NumPy data structures for memory management. Now you
    have the option to us use [pyarrow](https://arrow.apache.org/docs/python/index.html)
    as your backing memory format.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas 是使用 NumPy 数据结构进行内存管理构建的。现在，你可以选择使用 [pyarrow](https://arrow.apache.org/docs/python/index.html)
    作为你的后备内存格式。
- en: Using pyarrow means you a speed up and makes for more memory-efficient operations,
    because you can take advantage of the C++ implementation of [Arrow](https://arrow.apache.org/docs/cpp/index.html).
    Fun fact, the creator of pandas, [Wes McKinney](https://en.wikipedia.org/wiki/Wes_McKinney)
    went on to work on Arrow in 2016, after open sourcing pandas in 2009.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 pyarrow 意味着你可以加快速度并提高内存使用效率，因为你可以利用 [Arrow](https://arrow.apache.org/docs/cpp/index.html)
    的 C++ 实现。有趣的是，pandas 的创始人 [Wes McKinney](https://en.wikipedia.org/wiki/Wes_McKinney)
    在 2009 年开源 pandas 后，于 2016 年开始参与 Arrow 的开发。
- en: What’s Arrow? [Sebastian Raschk](https://twitter.com/rasbt) explains that it’s
    “…an open-source and language-agnostic columnar data format to represent data
    in memory. It can enable zero-copy sharing of data between processes.”
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Arrow 是什么？ [Sebastian Raschk](https://twitter.com/rasbt) 解释道，它是“…一种开源且与语言无关的列式数据格式，用于在内存中表示数据。它可以实现进程间的数据零拷贝共享。”
- en: Columnar data stores group columns of data together in memory, making for faster
    operations on tasks such as returning the mean of a column. Arrow datatypes also
    incorporate such useful concepts as null values, as discussed above.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 列式数据存储将数据列组装在内存中，从而使得在诸如计算列均值等任务上操作更快。Arrow 数据类型还包含了如空值等有用的概念，如上所述。
- en: Is pandas with pyarrow faster than other pandas alternatives? On a few task
    [Sebastian Raschka showed pandas could be faster](https://twitter.com/rasbt/status/1632090412117532672)
    than [polars](https://github.com/pola-rs/polars), a relatively new “Lightning-fast
    DataFrame library for Rust and Python” that also uses Arrow.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 pyarrow 的 pandas 比其他 pandas 替代方案更快吗？在一些任务上，[Sebastian Raschka 显示 pandas 可能比](https://twitter.com/rasbt/status/1632090412117532672)
    [polars](https://github.com/pola-rs/polars) 更快，polars 是一个相对较新的“Rust 和 Python 的
    lightning-fast DataFrame 库”，也使用 Arrow。
- en: 'Then Ritchie Vink, the author of the polars library, ran a comparison test
    on the [TPCH-10 benchmark](https://docs.deistercloud.com/content/Databases.30/TPCH%20Benchmark.90/index.xml?embedded=true),
    a larger, more relevant test for real-world data. See some of the results and
    discussion below:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，polars 库的作者 Ritchie Vink 对 [TPCH-10 基准测试](https://docs.deistercloud.com/content/Databases.30/TPCH%20Benchmark.90/index.xml?embedded=true)
    进行了比较测试，这是一个更大、更相关的实际数据测试。请查看以下一些结果和讨论：
- en: 'Source: [https://twitter.com/RitchieVink/status/1632334005264580608](https://twitter.com/RitchieVink/status/1632334005264580608)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：[https://twitter.com/RitchieVink/status/1632334005264580608](https://twitter.com/RitchieVink/status/1632334005264580608)
- en: Looks like pandas may still have a ways to go and that polars might be worth
    checking out if you haven’t yet.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来 pandas 可能还有一段路要走，如果你还没有尝试过，polars 可能值得一试。
- en: Using [Numba](https://pandas.pydata.org/docs/user_guide/enhancingperf.html#pandas-numba-engine)
    inside pandas is another option if you feel the need for speed. Regardless, the
    general advice to avoid premature optimization is sound.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你觉得需要速度，[Numba](https://pandas.pydata.org/docs/user_guide/enhancingperf.html#pandas-numba-engine)
    是另一个选项。在任何情况下，避免过早优化的普遍建议是合理的。
- en: 'Here’s the code to use the pyrarrow backing format when reading in a CSV file:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是使用 pyrarrow 后端格式读取 CSV 文件的代码：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If you want to go deeper, Marc Garcia has a [nice post](https://datapythonista.me/blog/pandas-20-and-the-arrow-revolution-part-i)
    on the history of pandas memory structures and pyarrow support in pandas 2.0 (note
    that the syntax was updated between the pre-release version and general availability).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想深入了解，Marc Garcia 有一篇[不错的文章](https://datapythonista.me/blog/pandas-20-and-the-arrow-revolution-part-i)，介绍了
    pandas 内存结构的历史以及 pandas 2.0 中对 pyarrow 的支持（注意，在预发布版本和正式发布之间语法有所更新）。
- en: nullable dtypes from the get go
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从一开始就支持可空数据类型
- en: All has not been easy with missing (null) values in pandas. Pandas was built
    on NumPy and NumPy didn’t support null values for some data types.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在 pandas 中处理缺失（空）值并不总是那么容易。Pandas 是建立在 NumPy 上的，而 NumPy 对某些数据类型不支持空值。
- en: For example, NumPy integer dtypes couldn’t support null values. The introduction
    of a null value in an integer column led to automatic conversion of that column
    to a float dtype. One minute a column is an integer, the next minute it’s a float.
    This was suboptimal, to say the least.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，NumPy 整数数据类型无法支持空值。在整数列中引入空值会导致该列自动转换为浮点数据类型。一分钟列是整数，下一分钟变成浮点数。这至少可以说是不理想的。
- en: 'Pandas 1.0 gave us nullable dtypes, but they took some work to use. Now, when
    you read data into your DataFrame you can specify you want nullable NumPy-backed
    dtypes like this:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas 1.0 为我们提供了可空的数据类型，但使用起来需要一些工作。现在，当你将数据读取到 DataFrame 中时，你可以指定你想要可空的 NumPy
    支持的数据类型，如下所示：
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'UPDATE: Note that this syntax was updated since the 2.0 beta release.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 更新：注意，自2.0 beta版本以来，这种语法已被更新。
- en: Note that most, but not all `read_xxx` functions support nullable dtypes. See
    more [here](https://pandas.pydata.org/docs/whatsnew/v2.0.0.html#argument-dtype-backend-to-return-pyarrow-backed-or-numpy-backed-nullable-dtypes).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，大多数，但不是所有的 `read_xxx` 函数都支持可空的数据类型。更多信息请见[这里](https://pandas.pydata.org/docs/whatsnew/v2.0.0.html#argument-dtype-backend-to-return-pyarrow-backed-or-numpy-backed-nullable-dtypes)。
- en: The `pyarrow` dtype gives you nullability from the get-go.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`pyarrow` 数据类型从一开始就提供了空值支持。'
- en: More NumPy dtypes for indices
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多 NumPy 数据类型用于索引
- en: You now have a wider range of NumPy dtypes for pandas indices to reduce memory
    use. Now you can choose lower memory dtypes for indices. For example, you can
    specify the index to use 32-bit integers, saving 50% of the memory that you would
    have used previously, when 64-bit was the only option.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以为 pandas 索引选择更多的 NumPy 数据类型以减少内存使用。现在你可以选择更低内存的数据类型作为索引。例如，你可以指定索引使用 32
    位整数，从而节省之前只能使用 64 位整数时的一半内存。
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Read more [here](https://pandas.pydata.org/pandas-docs/version/2.0/whatsnew/v2.0.0.html#index-can-now-hold-numpy-numeric-dtypes).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读更多[这里](https://pandas.pydata.org/pandas-docs/version/2.0/whatsnew/v2.0.0.html#index-can-now-hold-numpy-numeric-dtypes)。
- en: copy-on-write mode
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 复制-on-写模式
- en: Pandas is getting lazy. In a good way. 🙂 A slew of DataFrame and Series methods
    will no longer create a copy of the pandas object until needed. For example `df.head()`
    won’t create a new DataFrame with the first five rows, but instead just return
    a view of the first five rows.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas 变得懒惰了。以一种好的方式。 🙂 大量 DataFrame 和 Series 方法在需要之前不会再创建 pandas 对象的副本。例如，`df.head()`
    不会创建一个包含前五行的新 DataFrame，而只是返回前五行的视图。
- en: 'These changes will save time and memory. Just use:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这些变化将节省时间和内存。只需使用：
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: There are a few other ways you can set this behavior, because pandas loves to
    give you multiple ways to do things. ❤️
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过几种其他方式设置这个行为，因为 pandas 喜欢给你多种方法来完成任务。 ❤️
- en: Installable extras
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可安装的额外功能
- en: Now you can install extra Python libraries that particular pandas callables
    rely on at the same time you install pandas. For example, running the following
    command will give you the libraries you need to work with Google Cloud Platform
    and Parquet file formats.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以在安装 pandas 时同时安装 pandas 需要的额外 Python 库。例如，运行以下命令将为你提供处理 Google Cloud Platform
    和 Parquet 文件格式所需的库。
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: ⚠️ Make sure you don’t forget the quotes!
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: ⚠️ 确保不要忘记引号！
- en: 'Here are the available install options:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是可用的安装选项：
- en: all (for all the extras)
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: all (所有附加功能)
- en: performance
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: performance
- en: computation
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: computation
- en: timezone
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: timezone
- en: fss
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: fss
- en: aws
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: aws
- en: gcp
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: gcp
- en: excel
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: excel
- en: parquet
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: parquet
- en: feather
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: feather
- en: hdf5
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: hdf5
- en: spss
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: spss
- en: postgresql
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: postgresql
- en: mysql
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: mysql
- en: sql-other
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: sql-other
- en: html
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: html
- en: xml
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: xml
- en: plot
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: plot
- en: output_formatting
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: output_formatting
- en: clipboard
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: clipboard
- en: compression
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: compression
- en: test
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: test
- en: Learn about the dependencies installed [here](https://pandas.pydata.org/docs/getting_started/install.html#install-dependencies).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 了解安装的依赖项请访问 [这里](https://pandas.pydata.org/docs/getting_started/install.html#install-dependencies)。
- en: Upgrading
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Upgrading
- en: 'To install pandas 2.0 in your virtual environment from PyPI, upgrade with this
    command:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 要在你的虚拟环境中从 PyPI 安装 pandas 2.0，请使用以下命令进行升级：
- en: '[PRE5]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Now you’re on your way to faster, more memory-efficient data manipulation! 🎉
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经开始更快、更节省内存的数据处理之旅了！ 🎉
- en: Wrap
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Wrap
- en: You’ve seen the biggest changes in pandas 2.0\. There are other changes such
    as new date parameter names for `read_csv` and similar functions. [Check out the
    release post for all the details](https://pandas.pydata.org/pandas-docs/version/2.0/whatsnew/v2.0.0.html#configuration-option-mode-dtype-backend-to-return-pyarrow-backed-dtypes).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经看到 pandas 2.0 的最大变化了。还有其他变化，比如 `read_csv` 和类似函数的新日期参数名称。 [查看发布帖子了解所有细节](https://pandas.pydata.org/pandas-docs/version/2.0/whatsnew/v2.0.0.html#configuration-option-mode-dtype-backend-to-return-pyarrow-backed-dtypes)。
- en: Even with the new changes there will be the times when you don’t have enough
    memory for your pandas DataFrame. For those times I shared eight tips to help
    in [this guide](/forgetful-pandas-98b50c1193a9).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 即使有了这些新变化，当你的 pandas DataFrame 没有足够的内存时也会出现问题。针对这种情况，我在 [这份指南](/forgetful-pandas-98b50c1193a9)
    中分享了八个帮助你应对的技巧。
- en: If you’re new to pandas, check out [Memorable Pandas](https://memorablepandas.com/),
    my introductory book on the library.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是 pandas 新手，可以查看我的入门书籍 [Memorable Pandas](https://memorablepandas.com/)。
- en: I hope you found this guide to pandas 2.0 changes to be helpful. If you did,
    please give it a share so other folks can find it, too! 🚀
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你觉得这份 pandas 2.0 变化指南对你有帮助。如果有，请分享给其他人，让他们也能找到它！ 🚀
- en: I write about Python, data, and other tech topics. If you’re into that stuff,
    [follow me](https://jeffhale.medium.com/) so you don’t miss out!
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我写关于 Python、数据和其他技术话题的文章。如果你对这些感兴趣，*跟随我* [follow me](https://jeffhale.medium.com/)，这样你就不会错过更新！
- en: '![](../Images/7a28dc434ef34199ac66bccca51578a1.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7a28dc434ef34199ac66bccca51578a1.png)'
- en: 'Source: pixabay.com'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：pixabay.com
- en: Happy coding!
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 编程愉快！
