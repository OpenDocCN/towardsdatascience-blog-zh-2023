- en: 6 New Booming Data Science Libraries You Must Learn To Boost Your Skill Set
    in 2023
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[https://towardsdatascience.com/6-new-booming-data-science-libraries-you-must-learn-to-boost-your-skill-set-in-2023-106b318d9fa](https://towardsdatascience.com/6-new-booming-data-science-libraries-you-must-learn-to-boost-your-skill-set-in-2023-106b318d9fa)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Data science isn't just Pandas, NumPy, and Scikit-learn anymore
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://ibexorigin.medium.com/?source=post_page-----106b318d9fa--------------------------------)[![Bex
    T.](../Images/516496f32596e8ad56bf07f178a643c6.png)](https://ibexorigin.medium.com/?source=post_page-----106b318d9fa--------------------------------)[](https://towardsdatascience.com/?source=post_page-----106b318d9fa--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----106b318d9fa--------------------------------)
    [Bex T.](https://ibexorigin.medium.com/?source=post_page-----106b318d9fa--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ¬∑Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----106b318d9fa--------------------------------)
    ¬∑7 min read¬∑Jan 9, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0b5fb524bf17c8dd47cc6609ec4019cd.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Photo by** [**Tobit Nazar Nieto Hernandez**](https://www.pexels.com/photo/white-dirt-bike-3046023/)'
  prefs: []
  type: TYPE_NORMAL
- en: Motivation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: With 2023 just in, it is time to discover new data science and machine learning
    trends. While the old stuff is still essential, knowing Pandas, NumPy, Matplotlib,
    and Scikit-learn won't just be enough anymore.
  prefs: []
  type: TYPE_NORMAL
- en: '[Last year''s version of this post](/8-booming-data-science-libraries-you-must-watch-out-in-2022-cec2dbb42437)
    was more about classic ML, including libraries like CatBoost, LightGBM, Optuna,
    or UMAP.'
  prefs: []
  type: TYPE_NORMAL
- en: In 2022, I observed many more "My lovely connections, I am happy to announce
    I am an MLOps engineer" posts than in 2021\. Correspondingly, there was much more
    content on MLOps, and there was a massive increase in the popularity of MLOps
    tools.
  prefs: []
  type: TYPE_NORMAL
- en: So, this year's article is on the six rising stars in the MLOps ecosystem; tools
    focused on producing best-performing models in the most efficient way possible
    and then throwing them into production.
  prefs: []
  type: TYPE_NORMAL
- en: 1\. BentoML
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You are probably tired of hearing, "Machine learning models don''t live in
    Jupyter Notebooks". If you aren''t, I will go ahead and say it once again:'
  prefs: []
  type: TYPE_NORMAL
- en: Machine learning models don‚Äôt live inside Jupyter, gathering rust.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: They live in production, doing what they are actually supposed to do ‚Äî predicting
    new data.
  prefs: []
  type: TYPE_NORMAL
- en: One of the best libraries I found last year to deploy models is BentoML. BentoML
    is an all-in-one framework to maintain, package and deploy models of any framework
    to any cloud provider as API services.
  prefs: []
  type: TYPE_NORMAL
- en: It supports saving/loading models in a unified format (versioned and tagged),
    enabling you to build an organized model registry.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/75aec22bf2542f47b4649b8afb1173f8.png)'
  prefs: []
  type: TYPE_IMG
- en: Screenshot by author with permission of BentoML
  prefs: []
  type: TYPE_NORMAL
- en: 'From there, you can build a Docker image of your best model with a single command
    and serve it locally:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Or deploy it to any cloud provider with a few commands without leaving the
    CLI. Here is an example for AWS Sagemaker:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Here is a step-by-step tutorial where I show how to deploy an XGBoost model
    to AWS Lambda:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/comprehensive-guide-to-deploying-any-ml-model-as-apis-with-python-and-aws-lambda-b441d257f1ec?source=post_page-----106b318d9fa--------------------------------)
    [## Comprehensive Guide to Deploying Any ML Model as APIs With Python And AWS
    Lambda'
  prefs: []
  type: TYPE_NORMAL
- en: People say that the best thing about Python is the abundance of its open-source
    libraries. I beg to differ. Having many‚Ä¶
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/comprehensive-guide-to-deploying-any-ml-model-as-apis-with-python-and-aws-lambda-b441d257f1ec?source=post_page-----106b318d9fa--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: 'Stats and links:'
  prefs: []
  type: TYPE_NORMAL
- en: '[GitHub (4.4k ‚≠ê)](https://github.com/bentoml/BentoML)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Docs üìö](https://docs.bentoml.org/en/latest/#)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 2\. MLFlow
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before deploying your best model into production, you must produce it via experimentation.
    Typically, this may take dozens or even hundreds of iterations.
  prefs: []
  type: TYPE_NORMAL
- en: As the number of iterations grows, it gets harder and harder to keep track of
    what configurations you've already tried and which of the past experiments look
    promising.
  prefs: []
  type: TYPE_NORMAL
- en: To help you with the process, you need a reliable framework to keep track of
    code, data, models, hyperparameters, and metrics simultaneously.
  prefs: []
  type: TYPE_NORMAL
- en: Building that framework manually (or using Excel like a caveman) is the worst
    idea in the world, as there are so many superb Python libraries for the job.
  prefs: []
  type: TYPE_NORMAL
- en: 'One of those is MLFlow, my personal favorite. By adding the following line
    of code to a script that trains a scikit-learn model, MLFlow will capture everything
    ‚Äî the model itself, its hyperparameters, and any metric you calculate using `sklearn.metrics`
    functions:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Once you finish tinkering around, you run `mlflow ui` on the terminal, and
    it brings up an experiments dashboard with controls to sort and visualize your
    experiments:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/315b268111bdde55b4d3b55c7c2848cd.png)'
  prefs: []
  type: TYPE_IMG
- en: Screenshot by author
  prefs: []
  type: TYPE_NORMAL
- en: MLFlow has a `mlflow.framework.autolog()` feature for more frameworks than you
    can name. It is so simple and useful that you cannot *not* use it.
  prefs: []
  type: TYPE_NORMAL
- en: Here is my tutorial on the framework, discussing its features and integration
    with the rest of the tools in the data ecosystem.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/complete-guide-to-experiment-tracking-with-mlflow-and-dagshub-a0439479e0b9?source=post_page-----106b318d9fa--------------------------------)
    [## Complete Guide to Experiment Tracking With MLFlow and DagsHub'
  prefs: []
  type: TYPE_NORMAL
- en: Edit description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/complete-guide-to-experiment-tracking-with-mlflow-and-dagshub-a0439479e0b9?source=post_page-----106b318d9fa--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: 'Stats and links:'
  prefs: []
  type: TYPE_NORMAL
- en: '[GitHub (13.3k ‚≠ê)](https://github.com/mlflow/mlflow)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Docs üìö](https://mlflow.org/docs/latest/index.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3\. DVC
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In a sentence, DVC is Git for data.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/431deee96ceb93077ca92a961fc90b63.png)'
  prefs: []
  type: TYPE_IMG
- en: Screenshot by author
  prefs: []
  type: TYPE_NORMAL
- en: 'DVC (Data Version Control) is becoming a go-to data and model versioning library.
    It can:'
  prefs: []
  type: TYPE_NORMAL
- en: Track gigabyte-sized datasets or models like Git tracks lightweight scripts.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create branches of the main code base for safe experimentation without duplicating
    the large files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When you track a large file or directory with `dvc add directory`, a lightweight
    `directory.dvc` metadata file is created. Then, DVC manages these light files
    as placeholders for the original, heavy-weight files.
  prefs: []
  type: TYPE_NORMAL
- en: DVC lifts the weights, while Git handles the small stuff like your scripts.
    Together, they make a perfect duo.
  prefs: []
  type: TYPE_NORMAL
- en: Another selling point of DVC is smart workflow pipelines. A typical machine
    learning workflow involves steps like collecting data, cleaning it, feature engineering,
    and training a model.
  prefs: []
  type: TYPE_NORMAL
- en: DVC can create a smart pipeline from all these steps so you can run them all
    with two keywords ‚Äî `dvc repro`.
  prefs: []
  type: TYPE_NORMAL
- en: What's the smart part? DVC only executes modified steps of the pipeline, saving
    you hours of time and computing resources.
  prefs: []
  type: TYPE_NORMAL
- en: Add MLFlow to your training scripts, track the model artifacts with DVC, and
    you have the perfect trio (Git, DVC, MLFlow).
  prefs: []
  type: TYPE_NORMAL
- en: 'Check out my beginner-friendly tutorial on DVC to get started:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/how-to-version-gigabyte-sized-datasets-just-like-code-with-dvc-in-python-5197662e85bd?source=post_page-----106b318d9fa--------------------------------)
    [## Data Version Control in DVC: Learn What Other Data Scientists Are Ignoring'
  prefs: []
  type: TYPE_NORMAL
- en: Edit description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/how-to-version-gigabyte-sized-datasets-just-like-code-with-dvc-in-python-5197662e85bd?source=post_page-----106b318d9fa--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: 'Stats and links:'
  prefs: []
  type: TYPE_NORMAL
- en: '[GitHub (10.8k ‚≠ê)](https://github.com/iterative/dvc)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Docs üìö](https://dvc.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[](https://ibexorigin.medium.com/membership?source=post_page-----106b318d9fa--------------------------------)
    [## Join Medium with my referral link - BEXGBoost'
  prefs: []
  type: TYPE_NORMAL
- en: Get exclusive access to all my ‚ö°premium‚ö° content and all over Medium without
    limits. Please, support my work by buying me a‚Ä¶
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: ibexorigin.medium.com](https://ibexorigin.medium.com/membership?source=post_page-----106b318d9fa--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Weights & Biases
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Another fully open-source experiment tracking framework is Weights & Biases
    (wandb.ai). The only difference? It is provided by a company with over $200M in
    funding and a client base that contains OpenAI, NVIDIA, Lyft, BMW, Samsung, and
    so on.
  prefs: []
  type: TYPE_NORMAL
- en: 'Their main selling points are:'
  prefs: []
  type: TYPE_NORMAL
- en: Excellent integration with the rest of the ML ecosystem, just like MLFlow
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The most beautiful UI for tracking and comparing experiments (personally)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/a707c96917455ff0056ce1a39689e302.png)'
  prefs: []
  type: TYPE_IMG
- en: Screenshot by author
  prefs: []
  type: TYPE_NORMAL
- en: Collaborative reports and dashboards
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hyperparameter optimization (not possible in MLFlow)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: And the best part is, all the above features are available straight through
    Jupyter. This means you don't have to ditch your favorite IDE and move into scripts
    just to track experiments.
  prefs: []
  type: TYPE_NORMAL
- en: So, your perfect trio might actually be Git, DVC, and Weights & Biases.
  prefs: []
  type: TYPE_NORMAL
- en: 'Stats and links:'
  prefs: []
  type: TYPE_NORMAL
- en: '[GitHub (5.2k ‚≠ê)](https://github.com/wandb/wandb)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Docs üìö](https://docs.wandb.ai/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 5\. NannyML
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Deploying models is only part of the story. To maintain a successful ML-powered
    product, you must consistently monitor their performance.
  prefs: []
  type: TYPE_NORMAL
- en: The problem with monitoring is that you won't have nice, fat, red errors when
    models fail. Their predictions may become worse and worse as time passes, leading
    to a phenomenon called a silent model failure.
  prefs: []
  type: TYPE_NORMAL
- en: For example, you deployed a model that detects Nike clothes from images. Fashion
    is fast-changing, so Nike constantly improves its designs.
  prefs: []
  type: TYPE_NORMAL
- en: Since your model training didn't include the new designs, it starts to miss
    Nike clothes from images more and more. You won't receive errors, but your model
    will soon be useless.
  prefs: []
  type: TYPE_NORMAL
- en: NannyML helps solve this exact problem. Using a novel [Confidence-Based Performance
    Estimation](https://nannyml.readthedocs.io/en/stable/how_it_works/performance_estimation.html)
    algorithm they developed and a few other robust statistical tests, they can detect
    performance drops or silent model failures in production.
  prefs: []
  type: TYPE_NORMAL
- en: NannyML also features smart alerting so you can always stay in tune with what's
    happening in your production environment.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a hands-on tutorial to get you started:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/data-drift-explainability-interpretable-shift-detection-with-nannyml-83421319d05f?source=post_page-----106b318d9fa--------------------------------)
    [## Data Drift Explainability: Interpretable Shift Detection with NannyML'
  prefs: []
  type: TYPE_NORMAL
- en: Edit description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/data-drift-explainability-interpretable-shift-detection-with-nannyml-83421319d05f?source=post_page-----106b318d9fa--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: 'Stats and links:'
  prefs: []
  type: TYPE_NORMAL
- en: '[GitHub (1.3k ‚≠ê)](https://github.com/NannyML/nannyml)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Docs üìö](https://nannyml.readthedocs.io/en/stable/index.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 6\. Poetry
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You've probably heard Python programmers whine about `pip` and its dependency
    issues a thousand times already, and I was one of those whiners until I saw Poetry.
  prefs: []
  type: TYPE_NORMAL
- en: Poetry is a game-changing open-source Python packaging and dependency management
    framework. In its simplest use case, Poetry can detect dependency conflicts BEFORE
    you install libraries so that you can avoid dependency hell entirely.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a91c2418419cbffdc66aca5d9bf66f5b.png)'
  prefs: []
  type: TYPE_IMG
- en: Screenshot by author
  prefs: []
  type: TYPE_NORMAL
- en: You can also configure your Python projects as *packages* with `pyproject.toml`
    files, and Poetry will take care of virtual environments, building and publishing
    the repo to PyPI with simple commands.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/744c203627d29b4cedcb47796890f4b1.png)'
  prefs: []
  type: TYPE_IMG
- en: Screenshot by author
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a comprehensive Real Python tutorial on Poetry:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://realpython.com/dependency-management-python-poetry/?source=post_page-----106b318d9fa--------------------------------)
    [## Dependency Management With Python Poetry - Real Python'
  prefs: []
  type: TYPE_NORMAL
- en: Before diving into the nitty-gritty of Python Poetry, you'll take care of some
    prerequisites. First, you'll read a‚Ä¶
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: realpython.com](https://realpython.com/dependency-management-python-poetry/?source=post_page-----106b318d9fa--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: 'Stats and links:'
  prefs: []
  type: TYPE_NORMAL
- en: '[GitHub (23.1k ‚≠ê)](https://github.com/python-poetry/poetry)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Docs üìö](https://python-poetry.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The field of data science is constantly evolving, and new tools and libraries
    are being developed at a blazing pace. The pressure to keep up is harder than
    ever. In this post, I did my best to narrow your focus to one area of machine
    learning that's promised to skyrocket in 2023\. Thank you for reading!
  prefs: []
  type: TYPE_NORMAL
- en: Loved this article and, let‚Äôs face it, its bizarre writing style? Imagine having
    access to dozens more just like it, all written by a brilliant, charming, witty
    author (that‚Äôs me, by the way :).
  prefs: []
  type: TYPE_NORMAL
- en: For only 4.99$ membership, you will get access to not just my stories, but a
    treasure trove of knowledge from the best and brightest minds on Medium. And if
    you use [my referral link](https://ibexorigin.medium.com/membership), you will
    earn my supernova of gratitude and a virtual high-five for supporting my work.
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://ibexorigin.medium.com/membership?source=post_page-----106b318d9fa--------------------------------)
    [## Join Medium with my referral link ‚Äî Bex T.'
  prefs: []
  type: TYPE_NORMAL
- en: Get exclusive access to all my ‚ö°premium‚ö° content and all over Medium without
    limits. Support my work by buying me a‚Ä¶
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: ibexorigin.medium.com](https://ibexorigin.medium.com/membership?source=post_page-----106b318d9fa--------------------------------)
    ![](../Images/a01b5e4fb641db5f35b8172a4388e821.png)
  prefs: []
  type: TYPE_NORMAL
