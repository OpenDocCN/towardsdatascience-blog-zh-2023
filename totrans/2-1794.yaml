- en: Rotating Rasters with Rasterio
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Rasterio旋转栅格
- en: 原文：[https://towardsdatascience.com/rotating-rasters-with-rasterio-dc36e42b01dd](https://towardsdatascience.com/rotating-rasters-with-rasterio-dc36e42b01dd)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/rotating-rasters-with-rasterio-dc36e42b01dd](https://towardsdatascience.com/rotating-rasters-with-rasterio-dc36e42b01dd)
- en: Using Python to rotate satellite images while maintaining geolocation accuracy
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Python旋转卫星图像，同时保持地理位置准确性
- en: '[](https://conorosullyds.medium.com/?source=post_page-----dc36e42b01dd--------------------------------)[![Conor
    O''Sullivan](../Images/2dc50a24edb12e843651d01ed48a3c3f.png)](https://conorosullyds.medium.com/?source=post_page-----dc36e42b01dd--------------------------------)[](https://towardsdatascience.com/?source=post_page-----dc36e42b01dd--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----dc36e42b01dd--------------------------------)
    [Conor O''Sullivan](https://conorosullyds.medium.com/?source=post_page-----dc36e42b01dd--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://conorosullyds.medium.com/?source=post_page-----dc36e42b01dd--------------------------------)[![Conor
    O''Sullivan](../Images/2dc50a24edb12e843651d01ed48a3c3f.png)](https://conorosullyds.medium.com/?source=post_page-----dc36e42b01dd--------------------------------)[](https://towardsdatascience.com/?source=post_page-----dc36e42b01dd--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----dc36e42b01dd--------------------------------)
    [Conor O''Sullivan](https://conorosullyds.medium.com/?source=post_page-----dc36e42b01dd--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----dc36e42b01dd--------------------------------)
    ·6 min read·Aug 7, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----dc36e42b01dd--------------------------------)
    ·6分钟阅读·2023年8月7日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/d2f08f5cf0abfedc0fe7d88da8e9039b.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d2f08f5cf0abfedc0fe7d88da8e9039b.png)'
- en: '(source: author)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: （来源：作者）
- en: Raster data is similar to normal image data. Except every pixel is linked to
    a location on the Earth’s surface. This complicates things. If we want to rotate
    the data we must also consider the underlying coordinate reference system (CRS).
    Distorting a raster without adjusting its geolocation will lead to inaccurate
    spatial analysis.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 栅格数据类似于普通图像数据。不同之处在于每个像素都与地球表面上的位置相关联。这使得问题复杂化。如果我们想要旋转数据，还必须考虑基础的坐标参考系统（CRS）。在不调整地理位置的情况下扭曲栅格会导致空间分析不准确。
- en: 'Adjusting geolocation is not straightforward. Thankfully, [Rasterio](https://rasterio.readthedocs.io/en/stable/)
    can help. It is a popular Python library for geospatial data analysis. We will
    use the package to:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 调整地理位置并不简单。幸运的是，[Rasterio](https://rasterio.readthedocs.io/en/stable/)可以提供帮助。这是一个流行的用于地理空间数据分析的Python库。我们将使用该包来：
- en: '**rotate** a raster'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**旋转**栅格'
- en: and **reproject** the image to the correct CRS.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 并**重新投影**图像到正确的坐标参考系统（CRS）。
- en: Along the way, we will discuss the Python code and you can find the full project
    on [GitHub](https://github.com/conorosully/medium-articles/blob/master/src/remote%20sensing/rotating_rasters.ipynb).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在此过程中，我们将讨论Python代码，你可以在[GitHub](https://github.com/conorosully/medium-articles/blob/master/src/remote%20sensing/rotating_rasters.ipynb)上找到完整的项目。
- en: This article assumes basic knowledge of raster data and working with their CRS.
    Check out the article below if you want to brush up. It goes into more detail
    on reprojecting raster data.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本文假设读者具有基本的栅格数据知识和处理其CRS的经验。如果你想复习，可以查看下面的文章。它详细介绍了栅格数据的重新投影。
- en: '[](/how-to-plot-coordinates-on-landsat-satellite-images-with-python-5671613887aa?source=post_page-----dc36e42b01dd--------------------------------)
    [## How to Plot Coordinates on Landsat Satellite Images with Python'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/how-to-plot-coordinates-on-landsat-satellite-images-with-python-5671613887aa?source=post_page-----dc36e42b01dd--------------------------------)
    [## 如何在Landsat卫星图像上绘制坐标'
- en: Mapping pixel positions to geographic coordinates using Landsat metadata and
    Rasterio
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Landsat元数据和Rasterio将像素位置映射到地理坐标
- en: towardsdatascience.com](/how-to-plot-coordinates-on-landsat-satellite-images-with-python-5671613887aa?source=post_page-----dc36e42b01dd--------------------------------)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/how-to-plot-coordinates-on-landsat-satellite-images-with-python-5671613887aa?source=post_page-----dc36e42b01dd--------------------------------)
- en: Downloading Landsat scenes
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载Landsat场景
- en: 'For our raster data, we’ll be working with satellite images. Specifically,
    Landsat scenes. You can download one of these using the [EarthExplorer](https://earthexplorer.usgs.gov/)
    portal. Alternatively, if you want to use Python, the article below takes you
    through the process:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的栅格数据，我们将处理卫星图像。具体来说，是Landsat场景。你可以通过[EarthExplorer](https://earthexplorer.usgs.gov/)门户下载其中之一。或者，如果你想使用Python，下面的文章将带你完成这个过程：
- en: '[](/downloading-landsat-satellite-images-with-python-a2d2b5183fb7?source=post_page-----dc36e42b01dd--------------------------------)
    [## Downloading Landsat Satellite Images with Python'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/downloading-landsat-satellite-images-with-python-a2d2b5183fb7?source=post_page-----dc36e42b01dd--------------------------------)
    [## 使用Python下载Landsat卫星图像'
- en: Streamline Landsat scene downloads with the landsatxplore Python package
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用landsatxplore Python包简化Landsat场景下载
- en: towardsdatascience.com](/downloading-landsat-satellite-images-with-python-a2d2b5183fb7?source=post_page-----dc36e42b01dd--------------------------------)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/downloading-landsat-satellite-images-with-python-a2d2b5183fb7?source=post_page-----dc36e42b01dd--------------------------------)'
- en: In the end, you should have a folder containing all the files available for
    a [Landsat level 2 science product](https://www.usgs.gov/landsat-missions/landsat-collection-2-level-2-science-products).
    We’ll be working with the red visible light band. For Landsat 8 or 9 scenes, this
    is given by band B4.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，你应该会有一个包含所有文件的文件夹，这些文件是[Landsat 2级科学产品](https://www.usgs.gov/landsat-missions/landsat-collection-2-level-2-science-products)。我们将使用红色可见光波段。对于Landsat
    8或9场景，这由波段B4表示。
- en: Opening a raster file
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 打开栅格文件
- en: We use the code below to open and display this band. ID gives the Landsat scene
    ID for this particular scene (line 8). All the available bands will be in a folder
    with this ID as a name. We open the red band using rasterio (line 11) and display
    it using matplotlib (lines 14–15). As seen in **Figure 1,** it is typical for
    Landsat scenes to be rotated inside their bounding box.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用下面的代码来打开和显示这个波段。ID给出了这个特定场景的Landsat场景ID（第8行）。所有可用的波段都将存放在一个以此ID命名的文件夹中。我们使用rasterio打开红色波段（第11行），并使用matplotlib显示它（第14-15行）。如**图1**所示，Landsat场景通常在其边界框内被旋转。
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](../Images/7ff4672b4e2738ffe7c4eccd8eeb6259.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7ff4672b4e2738ffe7c4eccd8eeb6259.png)'
- en: 'Figure 1: visualisation of the red visible light band (source: author)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 图1：红色可见光波段的可视化（来源：作者）
- en: Rotating a raster
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 旋转栅格
- en: The key to rotating a raster is its transform function. Rasterio uses an Affine
    transformation to convert array positions to geolocations. For our Landsat scene,
    the geolocations are given in UTM coordinates. If we rotate pixels in a raster
    we must also adjust this transformation.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 旋转栅格的关键在于其变换函数。Rasterio使用仿射变换将数组位置转换为地理位置。对于我们的Landsat场景，地理位置是以UTM坐标给出的。如果我们旋转栅格中的像素，我们还必须调整此变换。
- en: The affine transformation matrix for our satellite image is given below (line
    2). The xy() function uses this matrix to convert array positions to UTM coordinates.
    The output in Figure 2 shows the array position (1000,2000) is linked to the geolocation
    (222900,-3617400) on the Earth’s surface.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的卫星图像的仿射变换矩阵如下所示（第2行）。xy()函数使用此矩阵将数组位置转换为UTM坐标。图2中的输出显示了数组位置（1000,2000）与地球表面上的地理位置（222900,-3617400）相关联。
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/e8d1aa7cb721aedbbdeef3c5bcb407c1.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e8d1aa7cb721aedbbdeef3c5bcb407c1.png)'
- en: 'Figure 2: output from the above code snippet (source: author)'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图2：上述代码片段的输出（来源：作者）
- en: We adjust the matrix in the **rotate_raster** function. The most important parameter
    is the **angle** of rotation. We use this by first creating a rotate affine matrix
    (line 22). We then multiply this with the original transform matrix (line 27).
    Now, when points are converted to UTM they will also be rotated and visa versa.
    The new raster is then reprojected with this CRS (lines 52–58). We’ll discuss
    the other parameters in the next sections.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在**rotate_raster**函数中调整矩阵。最重要的参数是**旋转角度**。我们首先通过创建一个旋转仿射矩阵（第22行）来使用此参数。然后将其与原始变换矩阵相乘（第27行）。现在，当点转换为UTM时，它们也将被旋转，反之亦然。新的栅格随后使用此CRS进行重投影（第52-58行）。我们将在接下来的部分中讨论其他参数。
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: For now, let’s see how the function works. Our input file is the same red band
    as shown in Figure 1 (line 1). We define a new file path in this location (line
    2). We input these into our **rotate_raster** function along with a 12-degree
    angle of rotation (line 4). You can see the resulting raster in Figure 3\. It
    is no longer rotated within its bounding box. Importantly, you will still be able
    to [plot coordinates](/how-to-plot-coordinates-on-landsat-satellite-images-with-python-5671613887aa)
    on the new raster.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看该函数的工作原理。我们的输入文件与图1中显示的红色波段相同（第1行）。我们在此位置定义一个新的文件路径（第2行）。我们将这些输入到我们的**rotate_raster**函数中，并设置12度的旋转角度（第4行）。你可以在图3中看到结果栅格。它不再在其边界框内旋转。重要的是，你仍然可以在新的栅格上[绘制坐标](/how-to-plot-coordinates-on-landsat-satellite-images-with-python-5671613887aa)。
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/257c62e5f901a277e1fd8389f414ba95.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/257c62e5f901a277e1fd8389f414ba95.png)'
- en: 'Figure 3: rotated Landsat image (source: author)'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3：旋转后的 Landsat 图像（来源：作者）
- en: Shifting the raster
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 移动栅格
- en: You may have noticed the **shift_x** and **shift_y** parameters in the above
    code. These move the raster in the x and y directions within its bounding box.
    We need these parameters as the raster is rotated around its top left corner.
    At the same time, the original height and width are used. The result is part of
    the satellite image being rotated out of its bounding box. You can see what we
    mean in **Figure 4**.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到上面的代码中有**shift_x**和**shift_y**参数。这些参数在其边界框内沿 x 和 y 方向移动栅格。我们需要这些参数，因为栅格是围绕其左上角旋转的。同时，使用了原始的高度和宽度。结果是卫星图像的一部分被旋转到其边界框之外。你可以在**图
    4**中看到我们所指的内容。
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/56513aa770aca09f65fb41e5b8563ebb.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/56513aa770aca09f65fb41e5b8563ebb.png)'
- en: 'Figure 4: comparison of rasters that have and have not been shifted (source:author)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4：移动前后栅格的对比（来源：作者）
- en: Adjusting the dimensions
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调整尺寸
- en: In some cases, we may also have to adjust the height and width of the raster.
    This can happen if we rotate it in a way that it does not fit the original dimensions.
    You can see this in Figure 5 where the raster has been rotated by 30 degrees.
    Unless we add 800 pixels to the width and height, it will not fit in its bounding
    box.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，我们可能还需要调整栅格的高度和宽度。如果我们以不适合原始尺寸的方式旋转它，就会发生这种情况。你可以在图 5 中看到这一点，其中栅格已旋转了
    30 度。除非我们将宽度和高度增加 800 像素，否则它将无法适应其边界框。
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/16d83820b3e36525003b988533a7521e.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/16d83820b3e36525003b988533a7521e.png)'
- en: 'Figure 5: comparison of rasters that have and have not been adjusted (source:author)'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5：调整前后栅格的对比（来源：作者）
- en: In the rotate_raster function, we change the dimensions of the raster by updating
    its metadata (**dst_kwargs).** Along with the width and height, you will see that
    we change the transform function (**dst_transform**). This will be the original
    transform multiplied by the **rotation**, **trans_x** and **trans_y** affine matrices.
    The final change is the **nodata** element. Setting this to 0 ensures that any
    new bounding box pixels will be black.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在 rotate_raster 函数中，我们通过更新其元数据（**dst_kwargs**）来改变栅格的尺寸。除了宽度和高度，你会看到我们还更改了变换函数（**dst_transform**）。这将是原始变换乘以**旋转**、**trans_x**和**trans_y**仿射矩阵。最终的变化是**nodata**元素。将其设置为
    0 确保任何新的边界框像素将是黑色的。
- en: It is possible to adjust the rotation, shift and dimension adjustment parameters
    so the entire bounding box is removed. However, keep in mind that any transformations
    will “warp” the pixels. Pixel values are resampled using the nearest neighbour
    method (i.e. **Resampling.nearest).** Unless necessary for visualisations, it
    is better to do spatial analysis with the original rasters.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 可以调整旋转、偏移和尺寸调整参数，以便去掉整个边界框。然而，请记住，任何变换都会“扭曲”像素。像素值使用最近邻方法进行重采样（即**Resampling.nearest**）。除非用于可视化，否则最好使用原始栅格进行空间分析。
- en: I hope you enjoyed this article! You can find me on [Mastodon](https://sigmoid.social/@conorosully)
    | [Twitter](https://twitter.com/conorosullyDS) | [YouTube](https://www.youtube.com/channel/UChsoWqJbEjBwrn00Zvghi4w)
    | [Newsletter](https://mailchi.mp/aa82a5ce1dc0/signup) — sign up for FREE access
    to a [Python SHAP course](https://adataodyssey.com/courses/shap-with-python/)
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你喜欢这篇文章！你可以在 [Mastodon](https://sigmoid.social/@conorosully) | [Twitter](https://twitter.com/conorosullyDS)
    | [YouTube](https://www.youtube.com/channel/UChsoWqJbEjBwrn00Zvghi4w) | [Newsletter](https://mailchi.mp/aa82a5ce1dc0/signup)
    上找到我——免费注册以获取 [Python SHAP 课程](https://adataodyssey.com/courses/shap-with-python/)。
- en: '[](https://conorosullyds.medium.com/membership?source=post_page-----dc36e42b01dd--------------------------------)
    [## Join Medium with my referral link — Conor O’Sullivan'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 加入 Medium 使用我的推荐链接 — Conor O’Sullivan](https://conorosullyds.medium.com/membership?source=post_page-----dc36e42b01dd--------------------------------)'
- en: As a Medium member, a portion of your membership fee goes to writers you read,
    and you get full access to every story…
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 作为 Medium 会员，你的一部分会员费用会分配给你阅读的作者，你还可以全面访问所有故事……
- en: conorosullyds.medium.com](https://conorosullyds.medium.com/membership?source=post_page-----dc36e42b01dd--------------------------------)
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[conorosullyds.medium.com](https://conorosullyds.medium.com/membership?source=post_page-----dc36e42b01dd--------------------------------)'
- en: References
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考文献
- en: Rasterio documentation **Reprojection** [https://rasterio.readthedocs.io/en/stable/topics/reproject.html](https://rasterio.readthedocs.io/en/stable/topics/reproject.html)
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Rasterio 文档 **Reprojection** [https://rasterio.readthedocs.io/en/stable/topics/reproject.html](https://rasterio.readthedocs.io/en/stable/topics/reproject.html)
