["```py\nclass Coin():\n  def __init__(self): # Constructor\n    self.sideup = \"Heads\"\n\n  def toss(self): # Method\n    if(random.randint(0, 1) == 0):\n      self.sideup = \"Heads\"\n    else:\n      self.sideup = \"Tails\"\n\n  def get_sideup(self): # Method\n    return self.sideup\n```", "```py\nmy_coin = Coin() # Creates the object\nmy_coin.toss()\nprint(\"This side is up: \", my_coin.get_sideup())\n```", "```py\nclass Person():\n  def __init__(self, name):\n    self.name = name\n```", "```py\nme = Person(\"Author\")\nme.name    # --> \"Author\"\n\nyou = Person(\"Reader\")\nyou.name   # --> \"Reader\"\n```", "```py\nclass Duck():\n  def __init__(self, input_name):\n    self.hidden_name = input_name # The user won't know to try duck.hidden_name\n\n  def get_name(self): # Getter\n    print(\"inside the getter\") \n    return self.hidden_name\n\n  def set_name(self, input_name): # Setter\n    print(\"inside the setter\") \n    self.hidden_name = input_name\n\n  name = property(get_name, set_name)\n```", "```py\npet = Duck(\"Donald\")\npet.name\n  # --> inside the getter\n  # --> \"Harold\"\npet.name = \"Daffy\"\n  # --> inside the setter\n```", "```py\nclass Duck():\n  def __init__(self, input_name):\n    self.hidden_name = input_name # The user won't know to try duck.hidden_name\n\n  @property \n  def name(self): # Getter\n    print(\"inside the getter\") \n    return self.hidden_name\n\n  @name.setter\n  def name(self, input_name): # Setter\n    print(\"inside the setter\") \n    self.hidden_name = input_name\n\n  name = property(get_name, set_name)\n```", "```py\n@classmethod\ndef count_objects(cls):\n  print(\"The class has\", cls.count, \"objects\") \n```", "```py\n@staticmethod\ndef commercial():\n  print(\"This product is brought to you by Medium.\") \n```", "```py\nclass Student():\n  isHuman = True   # --> class attribute\n\n  def __init__(self, ...):\n    ...\n```", "```py\nclass Animal():\n  def eat(self):\n    print(\"Munch munch\")\n\n  def sleep(self):\n    print(\"Zzz...\")\n\nclass Cat(Animal):\n  def meow(self):\n    print(\"Meow!\")\n```", "```py\nclass Person():\n  def __init__(self, name):\n    self.name = name\n\nclass EmailPerson(Person):\n  def __init__(self, name, email):\n    super().__init__(name)\n    self.email = email\n```"]