- en: Create MySQL and Postgres instances using AWS Cloudformation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[https://towardsdatascience.com/create-mysql-and-postgres-instances-using-aws-cloudformation-d3af3c46c22a](https://towardsdatascience.com/create-mysql-and-postgres-instances-using-aws-cloudformation-d3af3c46c22a)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Infrastructure as Code for database practitioners
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://mshakhomirov.medium.com/?source=post_page-----d3af3c46c22a--------------------------------)[![üí°Mike
    Shakhomirov](../Images/bc6895c7face3244d488feb97ba0f68e.png)](https://mshakhomirov.medium.com/?source=post_page-----d3af3c46c22a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d3af3c46c22a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d3af3c46c22a--------------------------------)
    [üí°Mike Shakhomirov](https://mshakhomirov.medium.com/?source=post_page-----d3af3c46c22a--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ¬∑Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d3af3c46c22a--------------------------------)
    ¬∑7 min read¬∑Mar 20, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/21d6c29d19d4d9e6c31365437e7443f2.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
- en: Photo by [Yunqing Leo](https://unsplash.com/@leoo0oo?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: With these two simple **Cloudformation templates**, we will learn how to deploy
    Postgres and MySQL Aurora database instances with just one command CLI command.
    I have optimised template files reducing the number of properties to a minimum
    so it‚Äôs easier to comprehend.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: I know that Infrastructure as Code might seem a little bit hard for intermediate
    users who are not familiar with that concept but believe me this is the right
    way to go. Career-wise it will bring a lot of benefits.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: Who is this tutorial for?
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This story is for beginner and intermediate-level data and software engineers
    who would like to get into data engineering and learn a few advanced things, such
    as **infrastructure as code.**
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: I hope this tutorial will be useful for everyone involved in software engineering
    where a cloud database is required to store your application data.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: '**Prerequisites**'
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Basic knowledge **of Bash** scripting
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bash/Shell scripting might seem a bit advanced for beginners but it is necessary
    to deploy AWS services, i.e. RDS.
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: AWS Command line tool installed (AWS CLI).
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'All shell commands provided in this article can be run either from the command
    line or as a `.sh` script, i.e. simply run a file from your command line like
    so: `$ ./deploy.sh`'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: AWS account.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This is free to register and there is a free tier so it shouldn‚Äôt have any significant
    charges unless you deploy a really big database and forget to delete it.
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Why Infrastructure as code (IAC)?
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'IAC is gaining popularity very quickly as it helps to manage cloud platform
    resources using **template files (JSON or yaml code)** consistently in a reproducible
    way. We can apply CI/CD pipelines and use Github integration to create production
    and staging environments for example. Infrastructure as code is a deployment and
    resource management standard these days and I previously wrote about it here:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://levelup.gitconnected.com/infrastructure-as-code-for-beginners-a4e36c805316?source=post_page-----d3af3c46c22a--------------------------------)
    [## Infrastructure as Code for Beginners'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: Deploy Data Pipelines like a pro with these templates
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: levelup.gitconnected.com](https://levelup.gitconnected.com/infrastructure-as-code-for-beginners-a4e36c805316?source=post_page-----d3af3c46c22a--------------------------------)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: That story explained how to deploy and provision AWS resources for our data
    lake, i.e. AWS S3 and AWS Lambda.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: Data-wise, Infrastructure as code is a brilliant way to separate data environments
    and provision data pipeline resources. Using it we can create any data pipeline
    we need.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: Why and when do we use Relational databases in data pipelines?
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Typically, relational databases consist of row-based tables with columns that
    connect related data pieces using normalised schema.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: This **data architecture type aims to** capture the data quickly and optimise
    the system to swiftly retrieve the most recent of it required by the application.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: Because RDS database tables and joins are ‚Äúnormalised,‚Äù they are more complex
    compared to a typical data warehouse design. However, this is a trade-off required
    by functional requirements.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: 'Hence, the main difference between a ‚Äúconventional database‚Äù and a ‚Äúdata warehouse‚Äù
    is that the former is created and optimised to ‚Äúrecord‚Äù data, whilst the latter
    is created and built to ‚Äúreact to analytics‚Äù. I previously wrote about it here:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: '[](/data-platform-architecture-types-f255ac6e0b7?source=post_page-----d3af3c46c22a--------------------------------)
    [## Data Platform Architecture Types'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: How well does it answer your business needs? Dilemma of a choice.
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/data-platform-architecture-types-f255ac6e0b7?source=post_page-----d3af3c46c22a--------------------------------)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: Popular relational databases are MySQL, Microsoft SQL Server, Oracle and PostgreSQL.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: Create MySQL Aurora instance
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To create an Aurora-engined database instance we would need a cluster first.
    The thing is that Aurora instances have to be associated with a **AWS::RDS::DBCluster**
    via **DBClusterIdentifier.** If we have no cluster in our stack file we will be
    getting some generic Cloudfomation errors that don‚Äôt make much sense.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use this Cloudformation template file:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: 'If everything is correct then in AWS Console you will see something like this:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5885f152c3638e461fed34b03b85ab66.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
- en: Cloudformation events. Image by author
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: Create a Postgres database instance in AWS
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To create a simple Postges instance we can use this command and the template
    below:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: 'And the template would be this:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: So as you can see, Postges is a bit easier as it doesn‚Äôt require a cluster.
  id: totrans-45
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/4ab43d6bfdec947abd4883e8b4004cc9.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
- en: Postgres instance created. Image by author.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: What if something goes wrong?
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We can always take a look at the **events** section. Then Google it. I know,
    I know‚Ä¶ AWS Cloudformation documentation is not perfect. This is life and we have
    to comply. Unfortunately.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, if something goes wrong and you bump into an error like:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: '‚ÄúDS does not support creating a DB instance with the following combination:
    DBInstanceClass=db.t2.micro, Engine=postgres, EngineVersion=13.3‚Ä¶‚Äù'
  id: totrans-51
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'You will have to find the supported engine and version 13.3 for your region.
    To do so you can use this bash command:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Best practices to deploy RDS instances
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The templates we used above are very simple. This is intentional so we can deploy
    them successfully with ease and start adding new features from there.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: What else can we do?
  id: totrans-56
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Keep passwords in Secrets Manager
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This is a really good idea so we would probably want to change our password
    property in the template to this:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'And then we can use it in our template like so:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We can do the same thing with database password:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'And then refer to it from the template:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: What is RDSDBClusterParameterGroup?
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'It has a Type: ‚ÄòAWS::RDS::DBClusterParameterGroup‚Äô'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: In this attribute, we specify the name of the parameter group for the database
    cluster that will be connected to it. By doing so we associate our database instances
    and the Aurora database cluster.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: 'We then reference it in **AWS::RDS::DBCluster** resource, i.e.:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This is important because every time you need to update a parameter in the future,
    you must build a new parameter group and link it to the cluster.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: To implement the modification, the primary database instance in the cluster
    has to be restarted.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: Deletion protection
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'It‚Äôs always a good idea to set our database cluster DeletionProtection: true'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: This prevents the accedental deletion of an RDS instance. It also prevents any
    instance replacements if we change some template file properties that would normally
    require resource replacements.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: DBInstanceClass
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This is an important one as it has a direct impact on costs related to our
    database. It goes under Type: ‚ÄòAWS::RDS::DBInstance‚Äô in the template.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: Always choose the smallest one for testing purposes. Search for`db.r6g.large`in
    your template and change to `db.t2.small` or `db.t3.micro`
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Also if we don‚Äôt need a big storage for the database in `staging` is always
    a good idea to provision only the required minimum:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Provision VPC resources in a separate stack template
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We probably would want to deploy our database cluster in the Virtual Private
    Cloud (VPC). It‚Äôs a good idea to create a separate stack for these types of resources
    and then use it in our database stack like so:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: DBInstanceIdentifier
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The database instance is identified by this **name**.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: Amazon CloudFormation will create a special default physical ID and uses it
    as the name if you don‚Äôt provide one.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: Â¶ÇÊûú‰Ω†Ê≤°ÊúâÊèê‰æõÂêçÁß∞ÔºåAmazon CloudFormation Â∞ÜÂàõÂª∫‰∏Ä‰∏™ÁâπÊÆäÁöÑÈªòËÆ§Áâ©ÁêÜ ID Âπ∂Â∞ÜÂÖ∂Áî®‰ΩúÂêçÁß∞„ÄÇ
- en: '**AWS::RDS::DBParameterGroup**'
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**AWS::RDS::DBParameterGroup**'
- en: We should create this resource type for the same reason we created it for `'AWS::RDS::DBClusterParameterGroup'`
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: Êàë‰ª¨Â∫îËØ•Âá∫‰∫é‰∏éÂàõÂª∫ `'AWS::RDS::DBClusterParameterGroup'` Áõ∏ÂêåÁöÑÂéüÂõ†Êù•ÂàõÂª∫ËøôÁßçËµÑÊ∫êÁ±ªÂûã„ÄÇ
- en: It might be problematic for a production database to associate a new database
    parameter group later since doing so requires a database restart.
  id: totrans-90
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: ÂØπ‰∫éÁîü‰∫ßÊï∞ÊçÆÂ∫ìÊù•ËØ¥ÔºåÁ®çÂêéÂ∞ÜÊñ∞ÁöÑÊï∞ÊçÆÂ∫ìÂèÇÊï∞ÁªÑÂÖ≥ËÅîËµ∑Êù•ÂèØËÉΩ‰ºöÂ≠òÂú®ÈóÆÈ¢òÔºåÂõ†‰∏∫ËøôÊ†∑ÂÅöÈúÄË¶ÅÈáçÊñ∞ÂêØÂä®Êï∞ÊçÆÂ∫ì„ÄÇ
- en: We also might want to create a different AWS::RDS::DBParameterGroup for write
    and replica instances, i.e.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: Êàë‰ª¨‰πüÂèØËÉΩÈúÄË¶Å‰∏∫ÂÜôÂÖ•ÂíåÂâØÊú¨ÂÆû‰æãÂàõÂª∫‰∏çÂêåÁöÑ `AWS::RDS::DBParameterGroup`ÔºåÂç≥Ôºö
- en: '[PRE9]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Database monitoring
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Êï∞ÊçÆÂ∫ìÁõëÊéß
- en: It is highly recommended to set up database monitoring during the initial setup.
    Many [metrics,](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.AuroraMySQL.Monitoring.Metrics.html)
    both at the cluster and database levels, are sent by default by **Aurora to CloudWatch**.
    So we can subscribe to RDS events by using [AWS::RDS::EventSubscription](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-eventsubscription.html)
    resource.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: Âº∫ÁÉàÂª∫ËÆÆÂú®ÂàùÂßãËÆæÁΩÆÊúüÈó¥ËÆæÁΩÆÊï∞ÊçÆÂ∫ìÁõëÊéß„ÄÇËÆ∏Â§ö[ÊåáÊ†á](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.AuroraMySQL.Monitoring.Metrics.html)ÔºåÊó†ËÆ∫ÊòØÂú®ÈõÜÁæ§ËøòÊòØÊï∞ÊçÆÂ∫ìÂ±ÇÁ∫ßÔºåÈªòËÆ§ÊÉÖÂÜµ‰∏ãÈÉΩ‰ºöÁî±**AuroraÂèëÈÄÅÂà∞CloudWatch**„ÄÇÂõ†Ê≠§ÔºåÊàë‰ª¨ÂèØ‰ª•ÈÄöËøá‰ΩøÁî®
    [AWS::RDS::EventSubscription](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-eventsubscription.html)
    ËµÑÊ∫êÊù•ËÆ¢ÈòÖRDS‰∫ã‰ª∂„ÄÇ
- en: '[PRE10]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'After that we can create Cloudwatch metric filter and set Cloudwatch alarms
    like so:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: ‰πãÂêéÔºåÊàë‰ª¨ÂèØ‰ª•ÂàõÂª∫ CloudWatch ÊåáÊ†áËøáÊª§Âô®ÔºåÂπ∂ÂÉèËøôÊ†∑ËÆæÁΩÆ CloudWatch Ë≠¶Êä•Ôºö
- en: '[PRE11]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: EnablePerformanceInsights
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: EnablePerformanceInsights
- en: It‚Äôs a helpful tool for gaining an understanding about database performance.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: ËøôÊòØ‰∏Ä‰∏™ÊúâÂä©‰∫é‰∫ÜËß£Êï∞ÊçÆÂ∫ìÊÄßËÉΩÁöÑÂ∑•ÂÖ∑„ÄÇ
- en: It has no extra charges if enabled to keep data for 7 days only.
  id: totrans-100
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Â¶ÇÊûú‰ªÖÂêØÁî®‰øùÁïô7Â§©ÁöÑÊï∞ÊçÆÔºåÂàô‰∏ç‰ºö‰∫ßÁîüÈ¢ùÂ§ñË¥πÁî®„ÄÇ
- en: '[PRE12]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: This feature has to be enabled separately on both primary and replica instances.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: Ëøô‰∏™ÂäüËÉΩÂøÖÈ°ªÂú®‰∏ªÂÆû‰æãÂíåÂâØÊú¨ÂÆû‰æã‰∏äÂàÜÂà´ÂêØÁî®„ÄÇ
- en: Conclusion
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ÁªìËÆ∫
- en: In this story, you can find two simplified Cloudformation templates to deploy
    Postgres and MySQL database instances in the cloud. I hope you will find best
    practices covered in this article useful and it will help you to develop those
    templates into something bigger that suits your needs.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: Âú®Ëøô‰∏™ÊïÖ‰∫ã‰∏≠Ôºå‰Ω†ÂèØ‰ª•ÊâæÂà∞‰∏§‰∏™ÁÆÄÂåñÁöÑ CloudFormation Ê®°ÊùøÔºåÁî®‰∫éÂú®‰∫ë‰∏≠ÈÉ®ÁΩ≤ Postgres Âíå MySQL Êï∞ÊçÆÂ∫ìÂÆû‰æã„ÄÇÊàëÂ∏åÊúõ‰Ω†‰ºöÂèëÁé∞Êú¨Êñá‰∏≠Ê∂µÁõñÁöÑÊúÄ‰Ω≥ÂÆûË∑µÊúâÁî®ÔºåÂπ∂‰∏îÂÆÉÂ∞ÜÂ∏ÆÂä©‰Ω†Â∞ÜËøô‰∫õÊ®°ÊùøÂèëÂ±ïÊàêÁ¨¶Âêà‰Ω†ÈúÄÊ±ÇÁöÑÊõ¥Â§ßÂÜÖÂÆπ„ÄÇ
- en: 'RDS databases are crucial for any data platform design and it is important
    to understand how they are being created. They are used in many data pipeline
    design patterns, i.e. batch and change data capture:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: RDS Êï∞ÊçÆÂ∫ìÂØπ‰∫é‰ªª‰ΩïÊï∞ÊçÆÂπ≥Âè∞ËÆæËÆ°Ëá≥ÂÖ≥ÈáçË¶ÅÔºåÁêÜËß£ÂÆÉ‰ª¨ÊòØÂ¶Ç‰ΩïÂàõÂª∫ÁöÑ‰πüÂæàÈáçË¶Å„ÄÇÂÆÉ‰ª¨Âú®ËÆ∏Â§öÊï∞ÊçÆÁÆ°ÈÅìËÆæËÆ°Ê®°Âºè‰∏≠Ë¢´‰ΩøÁî®ÔºåÂç≥ÊâπÂ§ÑÁêÜÂíåÂèòÊõ¥Êï∞ÊçÆÊçïËé∑Ôºö
- en: '[](/data-pipeline-design-patterns-100afa4b93e3?source=post_page-----d3af3c46c22a--------------------------------)
    [## Data pipeline design patterns'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/data-pipeline-design-patterns-100afa4b93e3?source=post_page-----d3af3c46c22a--------------------------------)
    [## Êï∞ÊçÆÁÆ°ÈÅìËÆæËÆ°Ê®°Âºè'
- en: Choosing the right architecture with examples
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ÈÄâÊã©ÂêàÈÄÇÁöÑÊû∂ÊûÑÂèäÂÖ∂Á§∫‰æã
- en: towardsdatascience.com](/data-pipeline-design-patterns-100afa4b93e3?source=post_page-----d3af3c46c22a--------------------------------)
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/data-pipeline-design-patterns-100afa4b93e3?source=post_page-----d3af3c46c22a--------------------------------)
- en: Applying some of the features mentioned in best practices might be useful to
    gain database performance insights as well.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: Â∫îÁî®‰∏Ä‰∫õÂú®ÊúÄ‰Ω≥ÂÆûË∑µ‰∏≠ÊèêÂà∞ÁöÑÂäüËÉΩ‰πüÂèØËÉΩÊúâÂä©‰∫éËé∑ÂæóÊï∞ÊçÆÂ∫ìÊÄßËÉΩÊ¥ûÂØü„ÄÇ
- en: 'Recommended read:'
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Êé®ËçêÈòÖËØªÔºö
- en: '[](/data-pipeline-design-patterns-100afa4b93e3?source=post_page-----d3af3c46c22a--------------------------------)
    [## Data pipeline design patterns'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/data-pipeline-design-patterns-100afa4b93e3?source=post_page-----d3af3c46c22a--------------------------------)
    [## Êï∞ÊçÆÁÆ°ÈÅìËÆæËÆ°Ê®°Âºè'
- en: Choosing the right architecture with examples
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ÈÄâÊã©ÂêàÈÄÇÁöÑÊû∂ÊûÑÂèäÂÖ∂Á§∫‰æã
- en: towardsdatascience.com](/data-pipeline-design-patterns-100afa4b93e3?source=post_page-----d3af3c46c22a--------------------------------)  [##
    AWS::SecretsManager::Secret
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/data-pipeline-design-patterns-100afa4b93e3?source=post_page-----d3af3c46c22a--------------------------------)
    [## AWS::SecretsManager::Secret
- en: Creates a new secret. A secret can be a password, a set of credentials such
    as a user name and password, an OAuth‚Ä¶
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑÂØÜÈí•„ÄÇÂØÜÈí•ÂèØ‰ª•ÊòØ‰∏Ä‰∏™ÂØÜÁ†Å„ÄÅ‰∏ÄÁªÑÂá≠ËØÅÔºàÂ¶ÇÁî®Êà∑ÂêçÂíåÂØÜÁ†ÅÔºâ„ÄÅOAuth‚Ä¶
- en: docs.aws.amazon.com](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html?source=post_page-----d3af3c46c22a--------------------------------)  [##
    Working with parameter groups
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: Database parameters specify how the database is configured. For example, database
    parameters can specify the amount of‚Ä¶
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: docs.aws.amazon.com](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_WorkingWithParamGroups.html?source=post_page-----d3af3c46c22a--------------------------------)  [##
    AWS::RDS::EventSubscription
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: The AWS::RDS::EventSubscription resource allows you to receive notifications
    for Amazon Relational Database Service‚Ä¶
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: docs.aws.amazon.com](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-eventsubscription.html?source=post_page-----d3af3c46c22a--------------------------------)
    [](https://aws.amazon.com/rds/performance-insights/?source=post_page-----d3af3c46c22a--------------------------------)
    [## Amazon RDS Performance Insights | Cloud Relational Database | Amazon Web Services
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: Analyze and tune Amazon RDS database performance Amazon RDS Performance Insights
    is a database performance tuning and‚Ä¶
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: aws.amazon.com](https://aws.amazon.com/rds/performance-insights/?source=post_page-----d3af3c46c22a--------------------------------)
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
