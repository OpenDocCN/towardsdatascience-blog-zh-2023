["```py\n# This bash script can be added to CI/CD pipeline definition:\nPROFILE=Named_AWS_profile \n# Get date and time for our build package:\ndate\nTIME=`date +\"%Y%m%d%H%M%S\"`\n# Get current directory to name our packge file:\nbase=${PWD##*/}\nzp=$base\".zip\"\necho $zp\n# Tidy up if any old files exist:\nrm -f $zp\n\n# Install required packages:\npip install --target ./package pyyaml==6.0 \n# Go inside the package folder and add all dependencies to zip archive:\ncd package\nzip -r ../${base}.zip .\n# Go to the previous folder and package the Lambda code:\ncd $OLDPWD\nzip -r $zp ./pipeline_manager\n# upload Lambda package to S3 artifact buacket (we can deploy our Lambda from there):\naws --profile $PROFILE s3 cp ./${base}.zip s3://datalake-lambdas.aws/pipeline_manager/${base}${TIME}.zip\n```", "```py\nSTACK_NAME=PipelinaManagerStaging\naws --profile $PROFILE \\\ncloudformation deploy \\\n--template-file stack_simple_service_and_role.yaml \\\n--stack-name $STACK_NAME \\\n--capabilities CAPABILITY_IAM \\\n--parameter-overrides \"StackPackageS3Key\"=\"pipeline_manager/${base}${TIME}.zip\"\n# Additionally we night want to provide any infrastructure resources relevant only for staging. They must be mentioned in our Cloudformation stack file stack_simple_service_and_role.yaml\n```", "```py\n STACK_NAME=SimpleCICDWithLambdaAndRoleLive\naws \\\ncloudformation deploy \\\n--template-file stack_cicd_service_and_role.yaml \\\n--stack-name $STACK_NAME \\\n--capabilities CAPABILITY_IAM \\\n--parameter-overrides \\\n\"StackPackageS3Key\"=\"pipeline_manager/${base}${TIME}.zip\" \\\n\"Environment\"=\"live\" \\\n\"Testing\"=\"false\"\n```", "```py\n.\n├── LICENSE\n├── README.md\n└── stack\n    ├──.github\n    |   └──workflows\n    |       ├──deploy_staging.yaml\n    |       └──deploy_live.yaml\n    ├── deploy.sh\n    ├── event.json\n    ├── package\n    ├── pipeline_manager\n    │   ├── app.py\n    │   ├── config\n    │   └── env.json\n    └── stack_cicd_service_and_role.yaml\n```"]