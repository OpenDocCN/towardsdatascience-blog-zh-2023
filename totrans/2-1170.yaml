- en: How to Effectively Start Coding in the Era of ChatGPT
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-to-effectively-start-coding-in-the-era-of-chatgpt-cfc5151e1c42](https://towardsdatascience.com/how-to-effectively-start-coding-in-the-era-of-chatgpt-cfc5151e1c42)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Some advice to use ChatGPT to learn to program while actually learning it
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://federicotrotta.medium.com/?source=post_page-----cfc5151e1c42--------------------------------)[![Federico
    Trotta](../Images/e997e3a96940c16ab5071629016d82fd.png)](https://federicotrotta.medium.com/?source=post_page-----cfc5151e1c42--------------------------------)[](https://towardsdatascience.com/?source=post_page-----cfc5151e1c42--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----cfc5151e1c42--------------------------------)
    [Federico Trotta](https://federicotrotta.medium.com/?source=post_page-----cfc5151e1c42--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----cfc5151e1c42--------------------------------)
    ·11 min read·Jun 5, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/798f47ae83cd1fe10d15404d5b3ca636.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by [StockSnap](https://pixabay.com/it/users/stocksnap-894430/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=2557468)
    on [Pixabay](https://pixabay.com/it//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=2557468)
  prefs: []
  type: TYPE_NORMAL
- en: If you’d like to start to program but you’re afraid AI will steal your job,
    then this article is definitely for you. Especially if you’re thinking about changing
    your career to become a Software Engineer or a Data Professional, I really feel
    how uncomfortable you are right now.
  prefs: []
  type: TYPE_NORMAL
- en: I started to program about 3 years ago when I was 30 with no prior experience,
    and this helped me find my first remote work in IT.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, 3 years ago ChatGPT didn’t exist and I know you’re vexed with questions
    like: “What if I invest months learning and practicing to program and then I don’t
    find an actual job because of AI?”.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Well, let me tell you one thing: don’t be afraid of the recent layoffs in Big
    Techs: they’re not directly related to the increase of AI. Also, none really knows
    if AI will replace developers in 5 years, so here’s my opinion: AI will replace
    developers that can’t actually code. So, if you effectively learn how to code,
    you’ll find AI as a tool that helps you speed up your daily tasks, not an enemy
    that will replace you.'
  prefs: []
  type: TYPE_NORMAL
- en: So, in this article, we’ll see how ChatGPT can actually be an added value for
    you if you're thinking to start to program today, regardless of how old you are
    and what’s is your current career status.
  prefs: []
  type: TYPE_NORMAL
- en: 'This is what you’ll find here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Rule number 1: how to correctly ask questions to ChatGPT'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first thing to learn is how to correctly ask ChatGPT the right questions.
  prefs: []
  type: TYPE_NORMAL
- en: When I started learning to program I thought that developers were nerdy people
    who started to program at 5 years old and had a huge knowledge of programming,
    having in mind all the code they needed.
  prefs: []
  type: TYPE_NORMAL
- en: 'And you know what? I couldn’t be more wrong. Here’s a harsh truth:'
  prefs: []
  type: TYPE_NORMAL
- en: A lot of developers started to learn to program in their 20s and 30s.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The majority of developers work by searching stuff on Google and StackOverflow
    (and today, they ask questions to ChatGPT).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: So, first of all, if you’re starting to program right now don’t be ashamed to
    spend a lot of time on Google, StackOverflow, or ChatGPT. It’s completely normal.
    You just need to know how to correctly do so because you’ll never have in mind
    all the code you need (you’ll have in mind just the methods and functions you
    use the most, of course).
  prefs: []
  type: TYPE_NORMAL
- en: Anyway, the difference between today and the 90s is that in the 90s the Internet
    barely existed, so developers hadn’t all the support that have today thanks to
    global communities, forums, websites, and AI.
  prefs: []
  type: TYPE_NORMAL
- en: This led developers to learn to program the hard way, not rarely spending days
    to solve a problem (finding a bug or finding the right piece of code).
  prefs: []
  type: TYPE_NORMAL
- en: 'Today, you have a great opportunity: you have a senior developer available
    24/7 and this is ChatGPT, but you have to treat it like so, not like an oracle.'
  prefs: []
  type: TYPE_NORMAL
- en: 'So, here’re some guidelines on how you should correctly query ChatGPT if you’re
    starting to program today:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Learn the basics first**. Before using ChatGPT, my advice is that you need
    to learn the basics first for a simple reason: ChatGPT often gives you code that
    you need to refactor, for any reason. This means that you need to have prior knowledge
    of coding: you can’t just ask ChatGPT to create some code for you to solve an
    actual problem. The kind of developers that will be replaced by AI is properly
    the ones that ask questions to ChatGPT with no prior (or with poor) knowledge
    of coding. So, before prompting, get a course and start practicing.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Ask questions, then learn**. When we’re children we are very curious and
    our questioning makes us grow because we’re genuinely interested in the answers.
    This is the state of mind we’d always have as Software Professionals: having an
    answer and just copying and pasting it won’t make us learn how to program. If
    the code we get from ChatGPT works you should, at least, ask it to explain the
    code it used and why it is used it. As a beginner, in fact, your role is to learn
    so that in the future you can use ChatGPT less and be more independent: this is
    why you should always ask for code explanations.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Solve actual problems**. When programming, we can solve the same problem
    with different methods: this is why it doesn’t make any sense to just ask ChatGPT
    to generate some random code. We absolutely need to ask it something related to
    a project we are making or a problem we need to solve.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Don’t blindly trust it**. As a generative AI system, ChatGPT is prone to
    errors. While today with GTP-4 models we’ve seen very good improvements, there
    are still errors in the code. Also, errors are often due to the prompts that may
    be incomplete or somehow misleading. This is why, even if the code works, you
    can’t blindly trust the answers and need to understand deeply the code you get.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Rule number 2: always refer to the documentation'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](../Images/3685d24e2d759466df2efbf5bea7cc11.png)'
  prefs: []
  type: TYPE_IMG
- en: The learning workflow while coding. Image by Federico Trotta.
  prefs: []
  type: TYPE_NORMAL
- en: 'I created the above image for some content I wrote on Linkedin some months
    ago (oh, and by the way: [here’s my profile](https://www.linkedin.com/in/federico-trotta/)
    if you want to get in touch).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s the moral of the story: regardless of where you’re searching for the
    information you need to solve your coding issue, you always need to read the documentation.
    Always.'
  prefs: []
  type: TYPE_NORMAL
- en: This is the Gospel for us Developers/Data Professionals. We always need to read
    the documentation.
  prefs: []
  type: TYPE_NORMAL
- en: 'In fact, if we find a snippet of code that can solve a problem we’re facing,
    if we don''t understand the code we won’t be able to generalize the code we’re
    using. This means that in the future we won''t be able to solve a similar problem
    because we haven’t learned anything: we just copied and pasted the code.'
  prefs: []
  type: TYPE_NORMAL
- en: 'And this is particularly true with ChatGPT, especially because sometimes it
    invents libraries that don’t exist. Yes, you read it right: sometimes ChatGPT
    invents libraries.'
  prefs: []
  type: TYPE_NORMAL
- en: We have to say that, thanks to GPT-4, OpenAI made a lot of improvements. But
    in the last months, it happened to me at least a couple of times that ChatGPT
    invented some unexisting libraries.
  prefs: []
  type: TYPE_NORMAL
- en: 'And you know how we can see if a library doesn’t exist? There are some possibilities:'
  prefs: []
  type: TYPE_NORMAL
- en: You know what you’re doing and asking ChatGPT. But this will happen after months
    of practice when you gained some experience.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You get the code from ChatGPT, read it, try to understand it, ask ChatGPT for
    some explanation on the usage, go online to read the documentation and find no
    reference.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You try the code and get an error, and you learn your lesson the hard way.
    But don’t be ashamed of it: it happened even to me.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Remember: there’s nothing bad in the urge to solve a problem as soon as possible.
    So, you can even try the code and get an error. Well, the truth is that the error
    can even be due to a bad prompt, and this happens very frequently.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Anyway, remember: if your job is done because you solved the actual problem,
    then, please: go read the documentation for more understanding. You may also discover
    that your issue can be solved with less code.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Rule number 3: troubleshooting and debugging'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ChatGPT is a great tool even for troubleshooting and debugging your code. However,
    even in this case, you must learn how to use it correctly, if you’re starting
    your learning-how-to-code path.
  prefs: []
  type: TYPE_NORMAL
- en: First of all, if you’re using an IDE like VS CODE or PYCHARM to program, then
    use their debugging features. They have integrated debugging features thanks to
    which you can just push a button, and they debug your code, showing you (eventual)
    troubles in your code.
  prefs: []
  type: TYPE_NORMAL
- en: 'At this stage, but even later (I’m still using this method), the best idea
    is to follow this path:'
  prefs: []
  type: TYPE_NORMAL
- en: Write your program.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Debug your code in the IDE.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Read the eventual warnings you get from the debugger if something doesn’t work.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Paste the warnings on Google if you don’t know how to solve them.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Paste the warnings on ChatGPT if Googling doesn’t solve your problem.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Paste the whole code in ChatGPT if you still haven't solved your issue.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go read the documentation if the previous point solved your issue.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'I’ll never get tired to repeat it: we **always** need to refer to the documentation
    when Google or ChatGPT solve an issue we have with our code.'
  prefs: []
  type: TYPE_NORMAL
- en: 'So, please: don’t blindly paste the code into ChatGPT asking to search for
    troubles in your code: first, strive to find them on your own the hard way because
    this is the only way you’ll learn things. There’s no other way to learn stuff,
    and I know you know it.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, an **important note**: remember that ChatGPT works in the cloud and,
    also, it may use your prompts to train its algorithms (with recent changes in
    the data privacy usage you should be able to change the settings, and choose not
    to give consent to OpenAI to train its algorithms with your prompts).'
  prefs: []
  type: TYPE_NORMAL
- en: 'However, an important thing to keep in mind is to not paste into ChatGPT code
    to debug with sensible information: due to data breaches and other related security
    issues, it’s better to keep yourself safe.'
  prefs: []
  type: TYPE_NORMAL
- en: Examples in Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now, let’s see some examples of prompts we should write on ChatGPT to learn
    how to code.
  prefs: []
  type: TYPE_NORMAL
- en: 'I’ve asked ChatGPT the following: “*How can we print in Python?*”'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s the answer:'
  prefs: []
  type: TYPE_NORMAL
- en: In Python, you can use the `print()` function to display output on the console
    or terminal. The `print()` function takes one or more arguments and prints them
    as text.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Here are a few examples of using the `print()` function:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Printing a simple string:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '2\. Printing variables:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '3\. Printing multiple arguments separated by a specific character:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '4\. Printing formatted output using f-strings (Python 3.6 and above):'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: These are just a few examples to demonstrate the usage of the `print()` function.
    You can pass various types of objects as arguments to the `print()` function,
    and it will automatically convert them into a string representation before printing.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Now, a question: which method would you use?'
  prefs: []
  type: TYPE_NORMAL
- en: Exactly, here’s the problem! The prompt we made was too generic so ChatGPT gave
    us a generic answer.
  prefs: []
  type: TYPE_NORMAL
- en: 'So, here’s another lesson: **prompts must be very specific**. One could be:
    *“I have a list with some strings in Python: how can I print them efficiently?”*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s the answer:'
  prefs: []
  type: TYPE_NORMAL
- en: To print a list of strings efficiently in Python, you can use the `join()` method
    along with the `print()` function. The `join()` method concatenates all the strings
    in the list into a single string using a specified separator. Then you can simply
    pass this concatenated string to the `print()` function to display it.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Here’s an example:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: In the example above, the `join()` method joins the strings in `my_list` using
    a space `' '` as the separator. Then the `print()` function is used to display
    the concatenated string.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: By using the `join()` method, you avoid the overhead of multiple calls to the
    `print()` function, resulting in more efficient string concatenation and printing.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'And here we are: with a specific question we got a specific answer.'
  prefs: []
  type: TYPE_NORMAL
- en: 'And now, you know what we have to do? Yes, you know: if we don’t know how it
    works, we have to ask ChatGPT some more explanations on the `join()` method. We
    can do it in the same chat like so: “*What is the method ‘join()’ and how does
    it work?”*'
  prefs: []
  type: TYPE_NORMAL
- en: 'And here’s the answer:'
  prefs: []
  type: TYPE_NORMAL
- en: The `join()` method is a string method in Python that concatenates the elements
    of an iterable (such as a list, tuple, or set) into a single string using a specified
    separator. It returns a new string that contains all the elements joined together.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'The syntax for using the `join()` method is as follows:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Here, `separator` is the string that will be used to join the elements, and
    `iterable` is the collection of elements to be joined.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: When `join()` is called on a separator string, it iterates over the elements
    of the iterable and concatenates them, inserting the separator string between
    each pair of elements. The separator is not added at the beginning or the end
    of the resulting string.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Here’s an example to illustrate how the `join()` method works:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: In the example above, the `join()` method is called on the separator string
    `' '`. It iterates over the elements of `my_list` and concatenates them, inserting
    a space between each pair of elements. The resulting string `'Hello World Python'`
    is then printed.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: It’s worth noting that the `join()` method is a more efficient way to concatenate
    multiple strings compared to using the `+` operator in a loop. This is because
    `join()` internally optimizes the process of concatenation, resulting in better
    performance, especially when dealing with a large number of strings.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Now, at this point, you should do other two things:'
  prefs: []
  type: TYPE_NORMAL
- en: Searching for “join() Python” on Google and see some other examples and read
    the documentation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As we can see, ChatGPT tells us that this method is more efficient than using
    the `+` operator with a loop to solve this problem. You should continue the chat
    and ask for an example (then, read the documentation that may come with the next
    examples).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Conclusions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I hope you find useful this article on how to start your programming journey
    with the help of ChatGPT.
  prefs: []
  type: TYPE_NORMAL
- en: 'Remember: don’t take anything for granted. Use it to learn, not as an oracle.
    And after you solved your issue, write a specific prompt, read the documentation,
    learn the code and, if possible, make practice with the code you get as an answer.'
  prefs: []
  type: TYPE_NORMAL
- en: '**FREE PYTHON EBOOK:**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Started learning Python Data Science but struggling with it? [***Subscribe
    to my newsletter and get my free ebook: this will give you the right learning
    path to follow to learn Python for Data Science with hands-on experience.***](https://federico-trotta.ck.page/a3970f33f4)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Enjoyed the story? Become a Medium member for 5$/month [through my referral
    link](https://medium.com/@federicotrotta/membership): I’ll earn a small commission
    to no additional fee to you:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://federicotrotta.medium.com/membership?source=post_page-----cfc5151e1c42--------------------------------)
    [## Join Medium with my referral link - Federico Trotta'
  prefs: []
  type: TYPE_NORMAL
- en: Read every story from Federico Trotta (and thousands of other writers on Medium).
    Your membership fee directly supports…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: federicotrotta.medium.com](https://federicotrotta.medium.com/membership?source=post_page-----cfc5151e1c42--------------------------------)
  prefs: []
  type: TYPE_NORMAL
