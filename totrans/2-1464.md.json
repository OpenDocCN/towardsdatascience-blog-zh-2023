["```py\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\n\n# Load the data:\ndf = pd.read_csv('https://bit.ly/3raML6h',\n                 usecols=['season', 'weekday', 'hr', 'cnt'])\n\n# Define a dictionary to map numerical values to day names\nday_mapping = {0: 'Sunday', 1: 'Monday', \n               2: 'Tuesday', 3: 'Wednesday', \n               4: 'Thursday', 5: 'Friday',\n               6: 'Saturday'}\n\n# Map weekday numbers to names and create a new column:\ndf['Day'] = df['weekday'].map(day_mapping)\ndf = df.rename(columns={'hr': 'Hour', 'cnt': 'count'})\ndf.head(3)\n```", "```py\n# Create a new DataFrame for the summer season:\ndf_summer = (df[(df['season'] == 2)].copy()\n             .groupby(['Day', 'Hour'])['count']\n             .sum().reset_index())\n```", "```py\nfig, ax = plt.subplots(figsize=(8, 5))\nax = sns.scatterplot(data=df_summer, \n                     x='Hour', \n                     y='Day', \n                     size='count',\n                     color='k', \n                     alpha=0.7,\n                     sizes=(1, 300))\nax.legend(loc='right', \n          shadow=True, \n          bbox_to_anchor=(1.2, 0.8), \n          ncol=1)\nax.set_xticks(range(24)) \nax.set_xticklabels(list(range(24)))\nax.set_title('Washington D.C. Summer Bike Share Rentals (2011-12)');\n\n# Optional code to add a grid:\n# sns.set_style('whitegrid')\n# ax.grid(True)\n\n# Optional code to save figure as an image:\n# plt.savefig('file_name.png', bbox_inches='tight', dpi=600)\n```", "```py\n# Add shading for rush hour:\nax.text(x=6, y=0.6, s='Rush Hour', c='firebrick')\nax.axvspan(xmin=6, xmax=9, facecolor='red', alpha=0.3)\nax.text(x=16, y=0.6, s='Rush Hour', c='firebrick')\nax.axvspan(xmin=16, xmax=19, facecolor='red', alpha=0.3);\n```", "```py\n# Add shading for weekend:\nax.axhspan(ymin='Sunday', ymax='Saturday', fc='grey', alpha=0.3)\nax.text(x=1, y=2.6, s='Weekend', c='k');\n```", "```py\n# Create a new dataframe for summer season:\ndf_summer_days = (df[(df['season'] == 2)].copy()\n                  .groupby(['Day'])['count'].sum().reset_index())\ndf_summer_days = df_summer_days.sort_values('count')\n\nprint(df_summer_days)\n```", "```py\nsns.barplot(data=df_summer_days, x='Day', y='count', color='grey');\n```"]