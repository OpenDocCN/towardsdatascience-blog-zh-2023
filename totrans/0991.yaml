- en: How to Set GOOGLE_APPLICATION_CREDENTIALS in Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/google-application-credentials-python-ace518208a7](https://towardsdatascience.com/google-application-credentials-python-ace518208a7)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Configuring Application Default Credentials and fixing `oauth2client.client.ApplicationDefaultCredentialsError`
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://gmyrianthous.medium.com/?source=post_page-----ace518208a7--------------------------------)[![Giorgos
    Myrianthous](../Images/ff4b116e4fb9a095ce45eb064fde5af3.png)](https://gmyrianthous.medium.com/?source=post_page-----ace518208a7--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ace518208a7--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ace518208a7--------------------------------)
    [Giorgos Myrianthous](https://gmyrianthous.medium.com/?source=post_page-----ace518208a7--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ace518208a7--------------------------------)
    ·3 min read·Jan 19, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/481b848f924c744cbd3a67c44800e6fb.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Daniel K Cheung](https://unsplash.com/@danielkcheung?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/ZqqlOZyGG7g?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: Welcome to our tutorial on configuring Application Default Credentials for Google
    Cloud and Python. In this article, we will cover how to properly set `GOOGLE_APPLICATION_CREDENTIALS`
    in Python.
  prefs: []
  type: TYPE_NORMAL
- en: In order to be able to programmatically interact with Google Cloud Platform
    services, such as Google BigQuery, you first need to properly authenticate the
    application and grant all the required permissions. This is achieved by defining
    Application Default Credentials to point to a file with the required credentials.
  prefs: []
  type: TYPE_NORMAL
- en: A commonly reported error when missing this step is the following
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[**Subscribe to Data Pipeline**](https://thedatapipeline.substack.com/welcome)**,
    a newsletter dedicated to Data Engineering**'
  prefs: []
  type: TYPE_NORMAL
- en: How Application Default Credentials work in Google Cloud
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Application Default Credentials (ADC) is the strategy used on Google Cloud
    in order to infer credentials based on the application environment. This means
    that the application code can run in different environments without requiring
    to change the way your code authenticates to GCP services or Application Programming
    Interfaces (APIs).
  prefs: []
  type: TYPE_NORMAL
- en: 'For local development, there are typically two different ways to provide credentials
    to ADC:'
  prefs: []
  type: TYPE_NORMAL
- en: User Credentials
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Service Account keys
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating the credentials JSON file
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In order to create the JSON file containing the required credentials, you first
    need to ensure you have `[gcloud](https://cloud.google.com/sdk/docs/install)`
    [CLI installed](https://cloud.google.com/sdk/docs/install) on your host machine.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now for local development, the best option you have is to use *user credentials*
    which are associated to you personal Google Cloud account.To do so, you’ll have
    to run the following command, that will display a login prompt on your (default)
    browser:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Once you login to Google Cloud, your credentials will be stored in a JSON file,
    under the following default locations:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Mac/Linux: `$HOME/.config/gcloud/application_default_credentials.json`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Windows: `%APPDATA%\gcloud\application_default_credentials.json`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alternatively, if you are using a Service Account, you can generate the JSON
    token by visiting the [Service Account service on GCP](http://console.cloud.google.com/iam-admin/serviceaccounts).
    **Note however that service account keys create a security risk and are not recommended.
    Some more powerful and perhaps more secure approaches include impersonation and**
    [**Workload Identity Pool**](https://cloud.google.com/iam/docs/workload-identity-federation#providers)**.**
  prefs: []
  type: TYPE_NORMAL
- en: Setting GOOGLE_APPLICATION_CREDENTIALS env variable
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In order to provide the location of the credentials JSON file, you need to make
    use of the `GOOGLE_APPLICATION_CREDENTIALS` environment variable.
  prefs: []
  type: TYPE_NORMAL
- en: 'Therefore, when working with Python, you can programmatically set the environment
    variable using the code snippet below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Alternatively, you can also create an instance of `google.oath2.service_account.Credentials`
    and then pass it to the Google client before start interacting with it.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following example, demonstrates how to authenticate the Gmail Client in
    Python:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '*Note that the above code snippets assume that your JSON credentials file is
    stored under the default directory when creating them with* `*gcloud*`*. Make
    sure to point to the right directory if this is different from the default one.*'
  prefs: []
  type: TYPE_NORMAL
- en: Final Thoughts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In conclusion, this tutorial covered how to properly set Application Default
    Credentials (ADC) for Google Cloud and Python in order to authenticate the application
    and grant all the required permissions for programmatic interactions with Google
    Cloud Platform services.
  prefs: []
  type: TYPE_NORMAL
- en: The ADC is a strategy used on Google Cloud to infer credentials based on the
    application environment, allowing for code to run in different environments without
    requiring changes to the authentication process.
  prefs: []
  type: TYPE_NORMAL
- en: In this tutorial we also covered how to create the required JSON credentials
    file, either by using user credentials or a Service Account, and how to set the
    `GOOGLE_APPLICATION_CREDENTIALS` environment variable to provide the location
    of the file.
  prefs: []
  type: TYPE_NORMAL
- en: '[**Subscribe to Data Pipeline**](https://thedatapipeline.substack.com/welcome)**,
    a newsletter dedicated to Data Engineering**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related articles you may also like**'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/diagrams-as-code-python-d9cbaa959ed5?source=post_page-----ace518208a7--------------------------------)
    [## Diagrams as Code in Python'
  prefs: []
  type: TYPE_NORMAL
- en: Creating cloud system architecture diagrams with Python
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/diagrams-as-code-python-d9cbaa959ed5?source=post_page-----ace518208a7--------------------------------)
    [](/bigquery-anti-patterns-dacb61f8a3f?source=post_page-----ace518208a7--------------------------------)
    [## SQL Anti-Patterns for BigQuery
  prefs: []
  type: TYPE_NORMAL
- en: Best practices and things to avoid when running SQL on Google Cloud BigQuery
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/bigquery-anti-patterns-dacb61f8a3f?source=post_page-----ace518208a7--------------------------------)
    [](/standard-vs-legacy-sql-bigquery-6d01fa3046a9?source=post_page-----ace518208a7--------------------------------)
    [## Standard vs Legacy SQL in BigQuery
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the difference between standard and legacy SQL in the context
    of Google Cloud BigQuery
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/standard-vs-legacy-sql-bigquery-6d01fa3046a9?source=post_page-----ace518208a7--------------------------------)
  prefs: []
  type: TYPE_NORMAL
