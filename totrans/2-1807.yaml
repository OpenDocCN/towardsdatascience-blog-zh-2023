- en: Say Goodbye to Flat Maps with Pydeck
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/say-goodbye-to-flat-maps-with-pydeck-5ce440177bcd](https://towardsdatascience.com/say-goodbye-to-flat-maps-with-pydeck-5ce440177bcd)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Elevate your mapping skills with 3D visualization
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@lee_vaughan?source=post_page-----5ce440177bcd--------------------------------)[![Lee
    Vaughan](../Images/9f6b90bb76102f438ab0b9a4a62ffa3f.png)](https://medium.com/@lee_vaughan?source=post_page-----5ce440177bcd--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5ce440177bcd--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5ce440177bcd--------------------------------)
    [Lee Vaughan](https://medium.com/@lee_vaughan?source=post_page-----5ce440177bcd--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----5ce440177bcd--------------------------------)
    ·9 min read·Jul 18, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6a954c5dab844b92ab97e64cc81a7215.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
- en: Image by Google-Deepmind on Unsplash
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: 'A *3D extrusion map* is a type of data visualization where 3D bars or columns
    are positioned on a map based on their geographic coordinates. The height of each
    bar represents a *numerical value*, such as population or temperature, associated
    with that specific location. Here’s an example showing urban population density
    on the Hawaiian Islands:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7acc43ad9c0b782ab41528f83d97a031.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
- en: Population density (people/square kilometer) for Hawaii (all remaining images
    by the author)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: Maps of this type are presented with a “tilted” perspective so that the height
    of the bars is apparent. By combining the geographical information provided by
    the map with the vertical dimension represented by the bars, a 3D extrusion map
    can convey information and patterns in an interesting spatial context. *Relative
    relationships* are often more important than *absolute values*.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: In this *Quick Success Data Science* project, we’ll use Python and the pydeck
    library to easily create 3D extrusion maps for population distribution in the
    United States and Australia. After finishing this short tutorial, you’ll have
    no problem creating stunning visualizations of your own geospatial datasets.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: The Population Datasets
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this project, we’ll plot population data for the United States and Australia.
    For the US, we’ll use the free *Basic* *United States Cities Database* at [*simplemaps.com*](https://simplemaps.com/data/us-cities)
    [1].
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: This dataset contains information on 30,844 towns and cities that make up the
    bulk of the US population as of January 31, 2023\. It’s provided under a *Creative
    Commons Attribution 4.0* license and can be redistributed and used commercially.
    For convenience, I’ve already downloaded the data and stored it in a [Gist](https://gist.github.com/rlvaugh/a8c2fd019a33e347be2542320a942210).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: For Australia, we’ll use a 2020 [Kaggle dataset](https://www.kaggle.com/datasets/maryamalizadeh/worldcities-australia)
    derived from the *simplemaps.com* [*World Cities Database*](https://simplemaps.com/data/world-cities)[2].
    It includes 1,035 prominent cities in Australia that contain most of its population.
    It’s released for free under an [MIT license](https://opensource.org/license/mit/)
    and *Creative Commons Attribution 4.0* license. For convenience, this dataset
    has also been stored in a [Gist](https://gist.github.com/rlvaugh/f5d08b0ef8fae288e4bbcfcf5af9bf89).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 对于澳大利亚，我们将使用 2020 年的 [Kaggle 数据集](https://www.kaggle.com/datasets/maryamalizadeh/worldcities-australia)，该数据集源于
    *simplemaps.com* 的 [*World Cities Database*](https://simplemaps.com/data/world-cities)[2]。它包含了澳大利亚的大多数人口的
    1,035 个主要城市。它以 [MIT 许可证](https://opensource.org/license/mit/) 和 *Creative Commons
    Attribution 4.0* 许可证免费发布。为方便起见，该数据集还存储在 [Gist](https://gist.github.com/rlvaugh/f5d08b0ef8fae288e4bbcfcf5af9bf89)
    中。
- en: The pydeck Library
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pydeck 库
- en: The [*pydeck*](https://pypi.org/project/pydeck/)graphics library is a set of
    Python bindings, optimized for a Jupyter Notebook environment, for making spatial
    visualizations using [*deck.gl*](https://deck.gl/). The latter is a WebGL (GPU)-powered
    framework for visually exploring large datasets using a layered approach.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[*pydeck*](https://pypi.org/project/pydeck/) 图形库是一组 Python 绑定，优化用于 Jupyter
    Notebook 环境，用于使用 [*deck.gl*](https://deck.gl/) 进行空间可视化。后者是一个 WebGL（GPU）驱动的框架，使用分层方法视觉上探索大型数据集。'
- en: The pydeck library grants you access to the full deck.gl layer catalog in Python.
    You can create beautiful deck.gl maps without using a lot of JavaScript, and you
    can embed these maps in a Jupyter notebook or export them to a stand-alone HTML
    file. The library uses [Carto](https://carto.com/) by default but can also work
    well with other base map providers, like Mapbox.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: pydeck 库使你可以在 Python 中访问完整的 deck.gl 图层目录。你可以创建美丽的 deck.gl 地图，而无需使用大量 JavaScript，并可以将这些地图嵌入
    Jupyter notebook 或将其导出为独立的 HTML 文件。该库默认使用 [Carto](https://carto.com/)，但也可以与其他基础地图提供商（如
    Mapbox）良好配合使用。
- en: A pydeck thematic map is meant to be used *interactively*. Like Plotly Express
    maps, you can pan and zoom the maps. Passing the cursor over a bar will also launch
    a hover data window revealing details such as the name of the data point, its
    value, location, and so on.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: pydeck 主题地图旨在*交互式*使用。像 Plotly Express 地图一样，你可以平移和缩放地图。将光标悬停在柱状图上，也会弹出一个悬停数据窗口，显示诸如数据点名称、值、位置等详细信息。
- en: 'To install pydeck with conda, enter the following in the command line:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 conda 安装 pydeck，请在命令行中输入以下内容：
- en: '`conda install -c conda-forge pydeck`'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '`conda install -c conda-forge pydeck`'
- en: 'To install with pip enter:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 pip 安装，请输入：
- en: '`pip install pydeck`'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '`pip install pydeck`'
- en: For more on installing pydeck, and to see the gallery of examples, visit [Gallery
    — pydeck 0.6.1 documentation](https://pydeck.gl/).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 有关安装 pydeck 的更多信息，以及查看示例库，请访问 [Gallery — pydeck 0.6.1 documentation](https://pydeck.gl/)。
- en: The Code
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码
- en: The following code was entered into JupyterLab *by cell*.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码是在 JupyterLab *单元格中* 输入的。
- en: Importing Libraries
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入库
- en: 'In addition to pydeck, we’ll use the *pandas* data analysis library to load
    and manipulate the data. You can install it with either:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 pydeck，我们还将使用 *pandas* 数据分析库来加载和操作数据。你可以通过以下方式安装它：
- en: '`conda install pandas`'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`conda install pandas`'
- en: or
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 或
- en: '`pip install pandas`'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '`pip install pandas`'
- en: 'Here are the imports:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这是导入内容：
- en: '[PRE0]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Preparing the US Population Data
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备美国人口数据
- en: The following code reads the US cities dataset into a pandas DataFrame and keeps
    only columns for the city name, its latitude, longitude, estimated population,
    and density (in population per square kilometer). Because there is such a huge
    range in population values, it also makes a new column by dividing the population
    value by 100\. This will make it easier to compare 3D bars between the US and
    Australia, which we’ll do later in the project.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码将美国城市数据集读取到 pandas 数据框中，并仅保留城市名称、纬度、经度、估计人口和密度（以每平方公里人口为单位）的列。由于人口值的范围非常大，它还通过将人口值除以
    100 来创建一个新列。这将使我们能够更容易地比较美国和澳大利亚之间的 3D 柱状图，这将在项目后续部分进行。
- en: '[PRE1]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/d400b11c6b630fec23d547b9debacc95.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d400b11c6b630fec23d547b9debacc95.png)'
- en: Display of the US cities DataFrame
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 显示美国城市数据框
- en: Plotting the US Population Data
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绘制美国人口数据
- en: The following code creates the thematic map in three steps. The first step instantiates
    a pydeck `Layer` object. The second step sets the `ViewState` parameters, such
    as the map's center point location, zoom level, pitch angle, and bearing. The
    final step instantiates a `Deck` object and renders the map in HTML.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码分三步创建主题地图。第一步实例化一个pydeck `Layer`对象。第二步设置`ViewState`参数，如地图的中心点位置、缩放级别、俯视角度和方向。最后一步实例化一个`Deck`对象并在HTML中渲染地图。
- en: The first argument used in the `Layer()` class is `type`. Here, we use the `ColumnLayer`
    type, which creates bars (technically, cylindrical columns). To see other options,
    such as heatmap layers and icon layers, visit the pydeck [gallery](https://deckgl.readthedocs.io/en/latest/).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`Layer()`类中使用的第一个参数是`type`。在这里，我们使用`ColumnLayer`类型，它创建条形图（严格来说是圆柱形列）。要查看其他选项，如热图层和图标层，请访问pydeck
    [gallery](https://deckgl.readthedocs.io/en/latest/)。'
- en: Among the other important arguments for the `Layer()` class are `get_elevation`,
    which is the DataFrame column used for the bar height; `elevation_scale`, which
    scales the bar height; `pickable`, which turns on hover data when the cursor lands
    on a bar; and `coverage`, which sets the width of the bar. These arguments, along
    with the one for `get_fill_color`, will let you fine-tune the appearance of the
    map.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`Layer()`类的其他重要参数包括`get_elevation`，它是用于条形图高度的DataFrame列；`elevation_scale`，用于缩放条形图的高度；`pickable`，在光标悬停在条形图上时启用数据提示；以及`coverage`，用于设置条形图的宽度。这些参数，加上`get_fill_color`的参数，将帮助你最终调整地图的外观。'
- en: The `ViewState()` class arguments are straightforward. The `bearing` controls
    the view orientation, and `pitch` sets the view angle (`0` = straight down).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`ViewState()`类的参数非常简单。`bearing`控制视图的方向，`pitch`设置视图角度（`0` = 直接向下）。'
- en: '[PRE2]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/d9992d1e9d63c0856391b759a15990ba.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d9992d1e9d63c0856391b759a15990ba.png)'
- en: Population map for 30,000+ US cities
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 超过30,000个美国城市的人口地图
- en: Although we’re only plotting about a third of the cities in the US, the map
    is still impressive. One of the most obvious features is the [100th Meridian](https://medium.com/better-programming/tell-a-climate-story-with-plotly-express-bca33a723bc4),
    an imaginary vertical line that divides the more populated eastern half of the
    US from the more sparsely populated western interior.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们只绘制了美国约三分之一的城市，但这张地图仍然令人印象深刻。最明显的特点之一是[100度经线](https://medium.com/better-programming/tell-a-climate-story-with-plotly-express-bca33a723bc4)，这是一条虚拟的垂直线，将人口更密集的美国东半部与人口更稀少的西部内陆地区分开。
- en: A somewhat misleading aspect is the ultra-tall columns for places like New York
    City and Los Angeles. The free version of the database we’re using provides *urban*
    populations, rather than *municipal* populations, which means it reports the population
    of the municipality and its surrounding suburbs and industrial areas, known as
    the *greater metropolitan area*. This is a bit of double-dipping, but it can be
    useful in its own right, as you don’t have to identify and sum up the components
    of this larger area.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个稍微误导的方面是像纽约市和洛杉矶这样的地方的极高列。我们使用的数据库免费版本提供的是*城市*人口，而不是*市区*人口，这意味着它报告的是市区及其周围的郊区和工业区的人口，即*大都市区*。这有点重复，但从另一个角度看是有用的，因为你不需要识别和合计这个更大区域的组成部分。
- en: As far as functionality goes, you can intuitively manipulate this map using
    your mouse or keyboard. The scroll wheel lets you zoom. The first mouse button
    (MB1) will let you pan. SHIFT-MB1 lets you tilt the viewing angle or rotate the
    map. Finally, you can hover over a bar with your mouse to get detailed information
    on the data point (you’ll probably want to zoom in first).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在功能方面，你可以直观地使用鼠标或键盘操作这张地图。滚轮让你缩放。第一个鼠标按钮（MB1）让你平移。SHIFT-MB1让你倾斜视图角度或旋转地图。最后，你可以将鼠标悬停在条形图上，以获取数据点的详细信息（你可能首先需要缩放）。
- en: '![](../Images/0451366dead5218cdb26fb1cf60c1441.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0451366dead5218cdb26fb1cf60c1441.png)'
- en: The “pickable” pop-up window for the city of Cut and Shoot, Texas
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: “pickable”弹出窗口，显示德克萨斯州Cut and Shoot城市
- en: 'Note: to make a color bar or legend in pydeck you have to use an external library
    like Matplotlib and then render it *beside* your pydeck visualization rather than
    *within* it. You can learn about standalone Matplotlib color bars [here](https://matplotlib.org/stable/tutorials/colors/colorbar_only.html).'
  id: totrans-53
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意：在pydeck中创建颜色条或图例需要使用像Matplotlib这样的外部库，然后将其*放置在*你的pydeck可视化旁边，而不是*在*其中。你可以在[这里](https://matplotlib.org/stable/tutorials/colors/colorbar_only.html)了解有关独立Matplotlib颜色条的信息。
- en: Plotting the US Population Density Data
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绘制美国人口密度数据
- en: The following code plots the density data. I’ve tweaked some of the arguments
    to improve the display.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码绘制了密度数据。我调整了一些参数以改善显示效果。
- en: '[PRE3]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/5ce0b9bb068f0aafee4e262e9a076c64.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5ce0b9bb068f0aafee4e262e9a076c64.png)'
- en: Population density map for 30,000+ US cities
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 30,000+ 美国城市的**人口密度地图**
- en: '![](../Images/d636d74265abb98e3225e0bcc7eaa9a7.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d636d74265abb98e3225e0bcc7eaa9a7.png)'
- en: The map zoomed to show the population density in the northeastern US
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 地图放大显示了美国东北部的**人口密度**
- en: In the preceding figure, the tallest bar is for the island of Manhattan in New
    York City, which houses a whopping 28,654 people per square kilometer. But this
    is nothing compared to Manila, which has the world’s highest population density
    at 46,178 people per square kilometer.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图中，最高的柱状图代表的是纽约市的曼哈顿岛，每平方公里居住了高达**28,654**人。但这与马尼拉相比则显得微不足道，马尼拉的世界最高人口密度为每平方公里**46,178**人。
- en: Preparing the Australian Population Data
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备澳大利亚人口数据
- en: The following code reads the Australian cities dataset into a pandas DataFrame
    and keeps only columns for the city name, its latitude and longitude, and its
    estimated population. Because there is such a huge range in population values,
    it also makes a new column by dividing the population value by 100\. This will
    make it easier to compare 3D bars between the US and Australia later.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码将澳大利亚城市数据集读取到 pandas DataFrame 中，并仅保留城市名称、经度和纬度及其估计人口的列。由于人口值范围非常广，因此还会通过将人口值除以100来创建一个新列。这将使得稍后比较美国和澳大利亚的3D柱状图更容易。
- en: '[PRE4]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/44e95c5b587a39776387689753d05fbd.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/44e95c5b587a39776387689753d05fbd.png)'
- en: Display of the Australian cities DataFrame
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 显示澳大利亚城市的 DataFrame
- en: Plotting the Australian Population Data
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绘制澳大利亚人口数据
- en: To plot the Australian data, we just repeat the plotting code with arguments
    tailored to the dataset. An important one is changing the view state’s longitude
    and latitude!
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 要绘制澳大利亚数据，我们只需重复绘图代码，并根据数据集调整参数。一个重要的参数是更改视图状态的经度和纬度！
- en: '[PRE5]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/4db86ae0f2be4bb2d9a9524e11fac053.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4db86ae0f2be4bb2d9a9524e11fac053.png)'
- en: Population map for 1,000+ Australian cities
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 1,000+ 澳大利亚城市的**人口地图**
- en: Australia has been described as a collection of coastal city-states and you
    can see why. About 86% of the population lives in urban areas, with 72% in major
    cities, such as Melbourne, Sydney, and Perth. There’s a reason for this, of course.
    The interior is barren, and they don’t call it “The Red Center” for nothing!
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 澳大利亚被描述为沿海城市国家的集合，你可以明白为什么。大约86%的人口居住在城市地区，其中72%居住在主要城市，如墨尔本、悉尼和珀斯。这个现象是有原因的，内陆荒凉，他们称其为“红色中心”是有原因的！
- en: Changing the Map Style
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更改地图样式
- en: By default, pydeck plots using a dark background (specifically, Carto’s “Dark
    Matter” map). This is set using the `map_style` parameter of the `Deck()` class.
    To change the background to white, pass it `pdk.map_styles.LIGHT`. Other options
    are for satellite, roads, or the dark and light versions with no labels.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，pydeck 绘图使用深色背景（具体来说，是 Carto 的“Dark Matter”地图）。这可以通过`map_style`参数在`Deck()`类中设置。要将背景改为白色，请传入`pdk.map_styles.LIGHT`。其他选项包括卫星图、道路图，或无标签的深色和浅色版本。
- en: 'Here’s an example of the US dataset plotted with a light background, the elevation
    set to the `popl_div_100` column, and the bar fill color set to black (using the
    RGB color code `[0, 0, 0]`):'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个示例，展示了使用浅色背景绘制的美国数据集，海拔设置为`popl_div_100`列，柱状图填充颜色设置为黑色（使用 RGB 颜色代码`[0, 0,
    0]`）：
- en: '[PRE6]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/03bf9e007d51a1f97acc63945f4a7694.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/03bf9e007d51a1f97acc63945f4a7694.png)'
- en: The US cities population map with a light background and black bars
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 带有浅色背景和黑色条形图的美国城市人口地图
- en: Comparing the Populations of Australia and the United States
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 比较澳大利亚和美国的人口
- en: 'If you repeat the previous code using the `df_au` DataFrame with a `longitude`
    of 138 and `latitude` of -26, you''ll produce a map of Australia that can be compared
    to the previous map of the US:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用`df_au` DataFrame 重复前面的代码，`longitude` 为 138 和 `latitude` 为 -26，你将生成一张可以与之前的美国地图进行比较的澳大利亚地图：
- en: '![](../Images/2f3219bc39728b3100b7840655825d1c.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2f3219bc39728b3100b7840655825d1c.png)'
- en: Comparison of the populations of US and Australian cities at the same scale
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在相同尺度下对比美国和澳大利亚城市的人口
- en: Despite being similar in size to the continental United States, Australia is
    much less populated. Its two largest cities hold 5–6 million each and are comparable
    in population to American cities like Houston, Miami, and Atlanta.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管与大陆美国面积相近，澳大利亚的人口却少得多。它的两个最大城市每个都拥有500万到600万人口，与美国城市如休斯顿、迈阿密和亚特兰大的人口相当。
- en: Summary
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: '*Thematic* maps, such as 3D extrusions, help you highlight a specific theme
    tied to a physical space. All the relevant geospatial data is extracted and projected
    on the map, enabling your audience to quickly grasp the connection between the
    theme and the locations.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '*主题*地图，如3D拉伸图，帮助你突出与物理空间相关的特定主题。所有相关的地理空间数据都会被提取并投影到地图上，使你的观众能够快速理解主题与位置之间的联系。'
- en: The pydeck library makes it easy to create interesting 3D thematic visualizations
    with Python. It’s optimized for working with Jupyter Notebook, popular libraries
    like pandas, and large datasets.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: pydeck库使得使用Python创建有趣的3D主题可视化变得简单。它针对Jupyter Notebook、流行的pandas库以及大型数据集进行了优化。
- en: 'Python has a large ecosystem of geospatial libraries in addition to pydeck.
    To see a summary of the most important ones — including guidance on how to pick
    the best one for your needs — check out my latest book, [*Python Tools for Scientists:
    An Introduction to Using Anaconda, JupyterLab, and Python’s Scientific Libraries*](https://a.co/d/1aFyztS).'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 除了pydeck，Python还有一个大型的地理空间库生态系统。要查看最重要库的总结——包括如何选择最适合你需求的库——请参考我的最新书籍，[*Python工具箱：Anaconda、JupyterLab和Python科学库使用指南*](https://a.co/d/1aFyztS)。
- en: Citations
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引用
- en: US Cities Database (2023), [*https://simplemaps.com/data/us-cities*](https://simplemaps.com/data/us-cities).
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 美国城市数据库（2023），[*https://simplemaps.com/data/us-cities*](https://simplemaps.com/data/us-cities)。
- en: '[Australia Cities Database | Kaggle](https://www.kaggle.com/datasets/maryamalizadeh/worldcities-australia)
    (2020), from [*https://simplemaps.com/data/world-cities*](https://simplemaps.com/data/world-cities)'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[澳大利亚城市数据库 | Kaggle](https://www.kaggle.com/datasets/maryamalizadeh/worldcities-australia)（2020），来自[*https://simplemaps.com/data/world-cities*](https://simplemaps.com/data/world-cities)'
- en: Thanks!
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 谢谢！
- en: Thanks for reading and please follow me for more *Quick Success Data Science*
    projects in the future.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读，请关注我以获取更多未来的*快速成功数据科学*项目。
