["```py\n# imports\nlibrary(tidyverse)\nlibrary(psych)\n\n# dataset\ndata(\"mtcars\")\n```", "```py\n# Bartlett Test\ncortest.bartlett(mtcars)\n\n# RESULT\n$chisq\n[1] 408.0116\n\n$p.value\n[1] 2.226927e-55\n\n$df\n[1] 55\n```", "```py\n#PCA\npca <- pca(mtcars, nfactors=dim(mtcars)[2], rotate='none')\n```", "```py\n# Scree Plot\nbarplot(pca$Vaccounted[2,], col='gold')\n```", "```py\n# Eigenvalues\npca$values\n\n[1] 6.60840025 2.65046789 0.62719727 0.26959744 0.22345110 0.21159612\n[7] 0.13526199 0.12290143 0.07704665 0.05203544 0.02204441\n```", "```py\n# PCA after Kaiser's rule applied\npca2 <- pca(mtcars, nfactors=2, rotate='none')\n\n# Variance\npca2$Vaccounted\n\n                            PC1       PC2\nProportion Var        0.6007637 0.2409516\nCumulative Var        0.6007637 0.8417153\n```", "```py\n# PCA Not rotated\nloadings <- as.data.frame(unclass(pca2$loadings))\n# Adding row names as a column\nloadings <- loadings %>% rownames_to_column('vars')\n\n# RESULT\n   vars        PC1         PC2\n1   mpg -0.9319502  0.02625094\n2   cyl  0.9612188  0.07121589\n3  disp  0.9464866 -0.08030095\n4    hp  0.8484710  0.40502680\n5  drat -0.7561693  0.44720905\n6    wt  0.8897212 -0.23286996\n7  qsec -0.5153093 -0.75438614\n8    vs -0.7879428 -0.37712727\n9    am -0.6039632  0.69910300\n10 gear -0.5319156  0.75271549\n11 carb  0.5501711  0.67330434\n```", "```py\n# Plot variables\nggplot(loadings, aes(x = PC1, y = PC2, label = vars)) +\n  geom_point(color='purple', size=3) +\n  geom_text_repel() +\n  theme_classic()\n```", "```py\n# Rotation Varimax\nprin2 <- pca(mtcars, nfactors=2, rotate='varimax')\n\n# Variance\nprin2$Vaccounted\n                            RC1       RC2\nProportion Var        0.4248262 0.4168891\nCumulative Var        0.4248262 0.8417153\n\n# PCA Rotated\nloadings2 <- as.data.frame(unclass(prin2$loadings))\nloadings2 <- loadings2 %>% rownames_to_column('vars')\n\n# Plot\nggplot(loadings2, aes(x = RC1, y = RC2, label = vars))+\n  geom_point(color='tomato', size=8)+\n  geom_text_repel() +\n  theme_classic()\n```", "```py\n# Comparison of communalities\ncommunalities <- as.data.frame(unclass(pca2$communality)) %>%\n  rename(comm_no_rot = 1) %>%\n  cbind(unclass(prin2$communality)) %>% \n  rename(comm_varimax = 2)\n\n     comm_no_rot comm_varimax\nmpg    0.8692204    0.8692204\ncyl    0.9290133    0.9290133\ndisp   0.9022852    0.9022852\nhp     0.8839498    0.8839498\ndrat   0.7717880    0.7717880\nwt     0.8458322    0.8458322\nqsec   0.8346421    0.8346421\nvs     0.7630788    0.7630788\nam     0.8535166    0.8535166\ngear   0.8495148    0.8495148\ncarb   0.7560270    0.7560270\n```", "```py\n### Rankings ####\n\n#Prop. Variance Not rotated\nvariance <- pca2$Vaccounted[2,]\n\n# Scores\nfactor_scores <- as.data.frame(pca2$scores)\n\n# Rank\nmtcars <- mtcars %>% \n  mutate(score_no_rot = (factor_scores$PC1 * variance[1] + \n                           factor_scores$PC2 * variance[2]))\n\n#Prop. Variance Varimax\nvariance2 <- prin2$Vaccounted[2,]\n\n# Scores Varimax\nfactor_scores2 <- as.data.frame(prin2$scores)\n\n# Rank Varimax\nmtcars <- mtcars %>% \n  mutate(score_rot = (factor_scores2$RC1 * variance2[1] + \n                        factor_scores2$RC2 * variance2[2]))\n\n# Numbered Ranking\nmtcars <- mtcars %>% \n  mutate(rank1 = dense_rank(desc(score_no_rot)),\n         rank2 = dense_rank(desc(score_rot)) )\n```", "```py\n# Use only MPG and drat, am\n\n# PCA after Kaiser's rule applied: Keep eigenvalues > 1\npca3 <- pca(mtcars[,c(1,5,9)], nfactors=2, rotate='none')\n\n#Prop. Variance Not rotated\nvariance3 <- pca3$Vaccounted[2,]\n\n# Scores\nfactor_scores3 <- as.data.frame(pca3$scores)\n\n# Rank\nmtcars <- mtcars %>% \n  mutate(score_ = (factor_scores3$PC1 * variance3[1] + \n                           factor_scores3$PC2 * variance3[2])) %>% \n  mutate(rank = dense_rank(desc(score_)) )\n```"]