- en: How to Display Data From GeoJSON Files Using the Folium Python Library
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-to-display-data-from-geojson-files-using-the-folium-python-library-f7284cb2a256](https://towardsdatascience.com/how-to-display-data-from-geojson-files-using-the-folium-python-library-f7284cb2a256)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Creating Interactive Maps of UKCS Oil and Gas Field Outlines
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://andymcdonaldgeo.medium.com/?source=post_page-----f7284cb2a256--------------------------------)[![Andy
    McDonald](../Images/df11d647be032aeb3d31852affb33a64.png)](https://andymcdonaldgeo.medium.com/?source=post_page-----f7284cb2a256--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f7284cb2a256--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f7284cb2a256--------------------------------)
    [Andy McDonald](https://andymcdonaldgeo.medium.com/?source=post_page-----f7284cb2a256--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----f7284cb2a256--------------------------------)
    ·5 min read·Feb 24, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/cf2058ec1c0bf14870580e90c3d94af0.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Photo by Aksonsat Uanthoeng](https://www.pexels.com/photo/close-up-photo-of-assorted-color-of-push-pins-on-map-1078850/),
    downloaded from Pexels.'
  prefs: []
  type: TYPE_NORMAL
- en: '[**Folium**](https://python-visualization.github.io/folium/) is an excellent
    python library that makes it easy to visualise geospatial data on interactive
    maps using the power of [**Leaflet.js**](https://leafletjs.com/)**.** In my [**previous
    article,**](https://medium.com/towards-data-science/folium-mapping-displaying-markers-on-a-map-6bd56f3e3420)
    I covered how to display individual markers on a folium map, but we can use folium
    also display data that has been stored within a GeoJSON file.'
  prefs: []
  type: TYPE_NORMAL
- en: '[**GeoJSON is a commonly used file format**](https://stevage.github.io/geojson-spec/)for
    storing geospatial data and uses JavaScript Object Notation. These files can store
    location data, shapes, points, surfaces, etc.'
  prefs: []
  type: TYPE_NORMAL
- en: Within this article, we will see how to display polygons of UK North Sea oil
    and gas fields that have been stored within a GeoJSON file format.
  prefs: []
  type: TYPE_NORMAL
- en: The data for this article is sourced from data.gov.uk and is licenced under
    the [**Open Government Licence**](https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/)**.**
    The data can be viewed and downloaded from the following website.
  prefs: []
  type: TYPE_NORMAL
- en: '[## OGA Offshore Fields WGS84'
  prefs: []
  type: TYPE_NORMAL
- en: We use cookies to collect information about how you use data.gov.uk. We use
    this information to make the website work…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: www.data.gov.uk](https://www.data.gov.uk/dataset/c544e9ee-ceab-417b-a872-20ddb4d10912/oga-offshore-fields-wgs84?source=post_page-----f7284cb2a256--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the Libraries and Displaying a Basic Folium Map
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Installing Folium
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you don’t already have folium installed, you can install it via pip:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Or Anaconda:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Once you have the library installed, the first step is to import the folium
    library into our Jupyter Notebook:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: To keep things simple, we will assign the location of the GeoJSON file to a
    variable. This makes things simpler when we want to call upon it later or change
    it for another file without changing the rest of the code directly.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Next, we need to initialise a folium map with some basic parameters.
  prefs: []
  type: TYPE_NORMAL
- en: The created map will be centred around a latitude of 58 degrees N and a longitude
    of 5 degrees E. We will also set the `zoom_start` to 6 to allow us to view most
    of the UK North Sea.
  prefs: []
  type: TYPE_NORMAL
- en: There are several other parameters we can use when creating a folium map. If
    you want to learn more, check out the help documentation on the [**folium.map**](https://python-visualization.github.io/folium/modules.html)
    class.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'When we call upon the folium map object using the variable `m` we will get
    the following map displayed:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a4c657a596069d13328ee9866b293bbb.png)'
  prefs: []
  type: TYPE_IMG
- en: Base folium map centred over the North Sea. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: This generated map looks bare, so the next step is to add some shapes to identify
    the UK offshore oil and gas fields.
  prefs: []
  type: TYPE_NORMAL
- en: Adding GeoJSON Data to a Folium Map
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To display the data from a GeoJSON file, we need to call upon `folium.geojson`
    and pass in a few parameters.
  prefs: []
  type: TYPE_NORMAL
- en: The first parameter is the location of the GeoJSON file, which we assigned to
    the variable `field_locations`. This is then followed by the `tooltip` parameter,
    which allows us to display information in the tooltip when any of the shapes are
    hovered over. In this example, we will set the fields to be displayed to the name
    of the oil or gas field (`FIELDNAME`).
  prefs: []
  type: TYPE_NORMAL
- en: Finally, to make the objects appear, we need to add the extension `add_to(m)`
    at the end.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'We are presented with the following map when we call upon the folium map object:
    `m`.'
  prefs: []
  type: TYPE_NORMAL
- en: From the generated map, we can see the locations of all of the UK North Sea
    oil and gas fields.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8841669bdc502c8507ae64a09d41ed24.png)'
  prefs: []
  type: TYPE_IMG
- en: Folium map showing the outlines of the UK North Sea oil and Gas fields. Image
    by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Applying Custom Colours to GeoJson Shapes in Folium
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If we want to add some styling to the shapes on the map, we can do so by first
    creating a function which will be used to control the colour of the shape.
  prefs: []
  type: TYPE_NORMAL
- en: From this dataset, we will be using the type of field to choose the colours
    that we want to display. Any oil fields will be displayed in green, gas fields
    shown in red, and condensate fields will be displayed in orange.
  prefs: []
  type: TYPE_NORMAL
- en: The following code was derived from this [**StackOverflow post**](https://stackoverflow.com/questions/63960271/folium-geojson-custom-color-map)**.**
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Now that we have the conditional function set up, we need to add a new parameter
    to our call to `folium.GeoJson` called `style_function`. Within this parameter,
    we pass in a lambda function containing a dictionary for the styling properties.
  prefs: []
  type: TYPE_NORMAL
- en: When it comes to the `fillColor` property, we call upon the function we created
    above and pass in our `feature`.
  prefs: []
  type: TYPE_NORMAL
- en: We can also pass additional styling properties to the dictionary. For this example,
    we will set the `fillOpacity` to 0.9 and the weight, which controls the line around
    the shapes, to 0.
  prefs: []
  type: TYPE_NORMAL
- en: If we don’t want to include the shapes from the previous section, we need to
    recreate the folium map again.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: When we call upon `m`, we are presented with the following map.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/eba39a95d96abd2501c366c326340465.png)'
  prefs: []
  type: TYPE_IMG
- en: Folium map of the UK North Sea oil and gas fields, coloured by field type. Image
    by the author.
  prefs: []
  type: TYPE_NORMAL
- en: We can now see that each shape/field that is on the map is coloured based on
    the primary type of hydrocarbon that is contained within the reservoir section.
  prefs: []
  type: TYPE_NORMAL
- en: Adding Additional Information to the Folium Tooltip
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Within the GeoJSON file, we have several additional properties for each shape.
    These can easily be added to the existing tooltip by including them within the
    list for the `fields` parameter.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: When we rerun the code, we can now see that we get the extra properties when
    we hover over each of the shapes. In this case, we can see the field name, the
    date production started, and the current operator of the field.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/105ec9047057adb567695db70ef454f0.png)'
  prefs: []
  type: TYPE_IMG
- en: Folium map showing the outlines of the UK Oil and Gas fields with additional
    properties appearing when each area is hovered over—image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Within this short article, we have seen how easy it is to display data stored
    within a GeoJSON file on an interactive folium map. This allows us to quickly
    display shapes and outlines that may be stored within this type of file.
  prefs: []
  type: TYPE_NORMAL
- en: '*Thanks for reading. Before you go, you should definitely subscribe to my content
    and get my articles in your inbox.* [***You can do that here!***](https://andymcdonaldgeo.medium.com/subscribe)*Alternatively,
    you can* [***sign up for my newsletter***](https://fabulous-founder-2965.ck.page/2ca286e572)
    *to get additional content straight into your inbox for free.*'
  prefs: []
  type: TYPE_NORMAL
- en: '*Secondly, you can get the full Medium experience and support me and thousands
    of other writers by signing up for a membership. It only costs you $5 a month,
    and you have full access to all of the fantastic Medium articles and the chance
    to make money with your writing. If you sign up using* [***my link***](https://andymcdonaldgeo.medium.com/membership)***,***
    *you will support me directly with a portion of your fee, and it won’t cost you
    more. If you do so, thank you so much for your support!*'
  prefs: []
  type: TYPE_NORMAL
