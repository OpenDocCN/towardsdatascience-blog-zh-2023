["```py\nimport pandas as pd\n\n# Create data\n\ndata = {\"fruit\":[\"banana\", \"apple\", \"pear\", \"orange\"],\n      \"color\":[\"yellow\", \"red\", \"green\", \"orange\"],\n      \"weight(kg)\":[0.3, 0.1, 0.1, 0.2]\n\n}\n\n# Transform data to data frame\ndf = pd.DataFrame(data)\n```", "```py\n# Save data frame to xlsx file\ndf.to_excel(\"fruit.xlsx\")\n```", "```py\n**NOTE:** This methodology of saving files that Pandas gives us is very useful.\nFor example, we can use it to convert CSV files into XLSX; We did it\nin [this article here](/how-to-convert-a-csv-file-into-an-xlsx-one-with-python-and-pandas-27aabc279d69).\n```", "```py\nimport pandas as pd\n\n# Import data\ndf = pd.read_excel(\"fruit.xlsx\")\n\n# Filter for pear\ndata_frame = df[df[\"fruit\"].str.contains(\"pea\")]\n\n# Show filtered data\ndata_frame.head()\n```", "```py\n# User input\nfruit = input(\"filter the data for the kind of fruit: \")\n```", "```py\nimport pandas as pd\n\n# User input\nfruit = input(\"filter the data for the kind of fruit: \")\n\n# Import data\ndf = pd.read_excel(\"fruit.xlsx\")\n\n# Filter for user input\ndata_frame = df[df[\"fruit\"].str.contains(fruit)]\n\n# Print results\nprint(data_frame)\n```", "```py\n**NOTE:**\nlook at the difference of how we've pasted the arguments in the method\nstr.contains(). Aboved we've passed \"pea\" with quotes because we were\nsearching directly for a string.\nIn this case, insetead, we have passed \"fruit\" without quotes because\nwe have used \"fruit\" as a variable to invoke the input() function so it\nhas to be passed as is (with no quotes).\n```", "```py\nimport pandas as pd\nfrom tabulate import tabulate\n\n# User input\nfruit = input(\"filter the data for the kind of fruit: \")\n\n# Import data\ndf = pd.read_excel(\"fruit.xlsx\")\n\n# Filter for user input\ndata_frame = df[df[\"fruit\"].str.contains(fruit)]\n\n# Print results\nprint(tabulate(data_frame, headers='keys', tablefmt='psql'))\n```"]