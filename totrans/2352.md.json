["```py\nimport numpy as np\nfrom scipy import stats\n\n# input: number of clicks and number of misses\nclicks = 1\nmisses = 4\n\n# get 1000 equally spaced points between 0 and 1 for plotting purposes\nx = np.linspace(start = 0, stop = 1, num = 1_000)\n\n# calculate probability distribution function of beta\nbeta_pdf = stats.beta(a = clicks, b = misses).pdf(x = x)\n```", "```py\nimport numpy as np\nfrom scipy import stats\n\n# input: number of clicks and number of misses\nclicks = 1\nmisses = 4\n\n# compute n and click rate\nn = clicks + misses\nclick_rate = clicks / n\n\n# get 1000 equally spaced points between 0 and 1 for plotting purposes\nx = np.linspace(start = 0, stop = 1, num = 1_000)\n\n# calculate the probability distribution function of beta\nbeta_pdf = stats.beta(a = clicks, b = misses).pdf(x = x)\n\n# calculate the probability distribution function of normal\nnormal_pdf = stats.norm(\n  loc = click_rate, \n  scale = np.sqrt(click_rate * (1 - click_rate) / n)\n).pdf(x = x)\n```", "```py\nimport numpy as np\n\ndef draw_from_beta(clicks, misses):\n  \"\"\"Draw a random number from Beta.\"\"\"\n\n  if min(clicks, misses) == 0:\n    clicks += 1\n    misses += 1\n\n  return np.random.beta(a=clicks, b=misses)\n```"]