- en: What Are ACID Transactions?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: åŽŸæ–‡ï¼š[https://towardsdatascience.com/acid-transactions-866265b54031](https://towardsdatascience.com/acid-transactions-866265b54031)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Understanding ACID properties in the context of database transactions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://gmyrianthous.medium.com/?source=post_page-----866265b54031--------------------------------)[![Giorgos
    Myrianthous](../Images/ff4b116e4fb9a095ce45eb064fde5af3.png)](https://gmyrianthous.medium.com/?source=post_page-----866265b54031--------------------------------)[](https://towardsdatascience.com/?source=post_page-----866265b54031--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----866265b54031--------------------------------)
    [Giorgos Myrianthous](https://gmyrianthous.medium.com/?source=post_page-----866265b54031--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: Â·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----866265b54031--------------------------------)
    Â·3 min readÂ·Jul 5, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3d32ef5f17f84fc39dd7972aa55efea2.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Michal Matlon](https://unsplash.com/@michalmatlon?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/_4VlY7cW86M?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: In the context of database operations, a transaction refers to an operation
    that is considered to be a single logical unit of work and aims to leave the underlying
    system in a consistent state.
  prefs: []
  type: TYPE_NORMAL
- en: Consistency is maintained by ensuring that all the operations are executed upon
    successful completion, or none are performed when any of the operations fail for
    one reason or another.
  prefs: []
  type: TYPE_NORMAL
- en: The ACID properties
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Database transactions should be compliant to the so-called ACID properties.
    Such systems are called transactional and ensure that every operation, including
    read, write or update comply to ACID properties. ACID acronym stands for **A**tomiciy,
    **C**onsistency, **I**solation and **D**urability.
  prefs: []
  type: TYPE_NORMAL
- en: '**Atomicity**:This property refers to a transaction that is treated as a single
    unit of work. If any operation defined within the transaction fails, then no operation
    will be committed and previously executed operations will be rolled back (if any)
    and the underlying system will be reverted back to its previous state. Atomicity
    prevents data loss or data corruption since transactions will only be committed
    if every single statement is applied successfully.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Consistency**: This property ensures that all transactions adhere predefined
    rules such that every transaction is executed in a predictable way that will always
    leave the underlying system in a consistent state once it gets committed.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Isolation**: A transactional database system allows multiple users to interact
    with it at the same time. This property ensures that concurrent transactions initiated
    by multiple users wonâ€™t interfere with each other such that data integrity is
    maintained. Any operation within a single transaction will therefore not be visible
    outside of that context, until the transaction is committed.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Durability**: This last property ensures that whenever a transaction gets
    committed it will be saved and its effects will be permanent even in the event
    of a system failure.'
  prefs: []
  type: TYPE_NORMAL
- en: How to write transactions in SQL
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that we have a basic understanding of the four ACID properties, letâ€™s write
    a SQL transaction to see them in action. Note that I will be using BigQuery syntax
    which may also work for many other SQL flavours but this is not guaranteed.
  prefs: []
  type: TYPE_NORMAL
- en: In the example shared below, we create a transaction that cosnists of two statements.
    The first statement will insert a new record into the table `mydataset.mytable`
    whilst the second statement will (intentionally) raise an error since it attempts
    to perform a division by zero.
  prefs: []
  type: TYPE_NORMAL
- en: In the second part of our code snippet, we define the rollback logc that will
    revert all changes made prior to the failure. Since the `SELECT 1/0` statement
    will raise an execption, the `INSERT INTO` statement will be rolled back and the
    new record wonâ€™t be added to the destination table.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Final Thoughts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: ACID properties are among the most fundamental concepts that transactional database
    systems must adhere to in order to ensure and maintain data integrity, consistency
    and reliability. Furthermore, these concepts enable multiple users to interact
    with the underlying systems concurrently without risking these characteristics.
  prefs: []
  type: TYPE_NORMAL
- en: If your day-to-day work requires interaction with transactional database systems
    itâ€™s extremely important to familiarize yourself with these concepts. ACID properties
    offered by database transactions will ensure data integrity and allow you to handle
    failures and errors in a proper way that wonâ€™t affect other operations and users.
  prefs: []
  type: TYPE_NORMAL
- en: ðŸ‘‰ [**Become a member**](https://gmyrianthous.medium.com/membership) **and read
    every story on Medium. Your membership fee directly supports me and other writers
    you read. Youâ€™ll also get full access to every story on Medium.**
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://gmyrianthous.medium.com/membership?source=post_page-----866265b54031--------------------------------)
    [## Join Medium with my referral link â€” Giorgos Myrianthous'
  prefs: []
  type: TYPE_NORMAL
- en: As a Medium member, a portion of your membership fee goes to writers you read,
    and you get full access to every storyâ€¦
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: gmyrianthous.medium.com](https://gmyrianthous.medium.com/membership?source=post_page-----866265b54031--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: ðŸ‘‡**Related articles you may also like** ðŸ‘‡
  prefs: []
  type: TYPE_NORMAL
- en: '[](/etl-vs-elt-68e221d78719?source=post_page-----866265b54031--------------------------------)
    [## ETL vs ELT: Whatâ€™s the Difference?'
  prefs: []
  type: TYPE_NORMAL
- en: A comparison between ETL and ELT in the context of Data Engineering
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/etl-vs-elt-68e221d78719?source=post_page-----866265b54031--------------------------------)
    [](/dbt-55b35c974533?source=post_page-----866265b54031--------------------------------)
    [## What is dbt (data build tool)
  prefs: []
  type: TYPE_NORMAL
- en: A gentle introduction to dbt that is taking over the data world
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/dbt-55b35c974533?source=post_page-----866265b54031--------------------------------)
    [](/diagrams-as-code-python-d9cbaa959ed5?source=post_page-----866265b54031--------------------------------)
    [## Diagrams as Code in Python
  prefs: []
  type: TYPE_NORMAL
- en: Creating cloud system architecture diagrams with Python
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/diagrams-as-code-python-d9cbaa959ed5?source=post_page-----866265b54031--------------------------------)
  prefs: []
  type: TYPE_NORMAL
