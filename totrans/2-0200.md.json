["```py\nCREATE VIEW orders_aggregated AS (\n  SELECT \n    order_date, \n    COUNT(DISTINCT order_id) AS orders,\n    COUNT(DISTINCT customer_id) AS customers\n  FROM orders\n  GROUP BY order_date\n )\n```", "```py\nDELETE FROM orders_aggregated \nWHERE order_date BETWEEN \"2023-07-17 08:00:00\" AND \"2023-07-17 08:30:00\";\nINSERT INTO orders_aggregated (\n  SELECT \n    order_date, \n    COUNT(DISTINCT order_id) AS orders,\n    COUNT(DISTINCT customer_id) AS customers\n  FROM orders\n  WHERE order_date BETWEEN \"2023-07-17 08:00:00\" AND \"2023-07-17 08:30:00\"\n  GROUP BY order_date\n )\n```", "```py\nCREATE MATERIALIZED VIEW orders_aggregated AS (\n  SELECT \n    order_date, \n    COUNT(DISTINCT order_id) AS orders,\n    COUNT(DISTINCT customer_id) AS customers\n  FROM orders\n  GROUP BY order_date\n )\n```", "```py\nIncremental materialized views do not support the DISTINCT clause for aggregation function 'count'\n```", "```py\nCREATE MATERIALIZED VIEW orders_aggregated AS (\n  SELECT \n    order_date, \n    APPROX_COUNT_DISTINCT(order_id) AS orders,\n    APPROX_COUNT_DISTINCT(customer_id) AS customers\n  FROM orders\n  GROUP BY order_date\n )\n```", "```py\nCREATE VIEW orders_aggregated_lv1 AS (\n  -- Batch layer\n  SELECT \n    *\n  FROM orders_aggregated\n  WHERE DATETIME(order_date) < \"2023-07-17\"\n\n  UNION ALL \n  -- Stream layer\n  SELECT \n    order_date, \n    COUNT (DISTINCT order_id) AS orders,\n    COUNT(DISTINCT customer_id) AS customers\n  FROM orders\n  WHERE DATETIME(order_date) >= \"2023-07-17\"\n  GROUP BY order_date\n\n )\n```", "```py\nSELECT *\nFROM orders_aggregated_lv1\nWHERE DATETIME(order_date) = \"2023-07-15\"\n```", "```py\nCREATE  VIEW orders_aggregated_lv2 AS (\n  -- Batch layer\n  SELECT \n    *\n  FROM orders_aggregated\n  WHERE DATETIME(order_date) < \"2023-07-17\"\n\n  UNION ALL \n  -- Stream layer\n  SELECT \n    DATE(\"2023-07-17\") as order_date, \n    COUNT (DISTINCT order_id) AS orders,\n    COUNT(DISTINCT customer_id) AS customers\n  FROM orders\n  WHERE DATETIME(order_date) = \"2023-07-17\"\n  GROUP BY order_date\n )\n```", "```py\nSELECT *\nFROM orders_aggregated_lv2\nWHERE DATETIME(order_date) = \"2023-07-15\"\n```", "```py\nCREATE VIEW orders_aggregated_lv3 AS (\n  -- Batch layer\n  SELECT \n    *\n  FROM orders_aggregated\n  WHERE DATETIME(order_date) < \"2023-07-17\"\n\n  UNION ALL \n  -- Stream layer\n  SELECT \n    DATE(\"2023-07-17\") as order_date, \n    COUNT (DISTINCT order_id) AS orders,\n    COUNT(DISTINCT customer_id) AS customers\n  FROM orders\n  WHERE DATETIME(order_date) = \"2023-07-17\"\n  GROUP BY order_date\n\n    UNION ALL \n  -- Stream layer\n  SELECT \n    DATE(\"2023-07-18\") as order_date, \n    COUNT (DISTINCT order_id) AS orders,\n    COUNT(DISTINCT customer_id) AS customers\n  FROM orders\n  WHERE DATETIME(order_date) = \"2023-07-18\"\n  GROUP BY order_date\n\n )\n```"]