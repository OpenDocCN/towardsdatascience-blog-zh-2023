- en: SQL on Pandas — My New Favorite for 10X Speed.
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/sql-on-pandas-usign-duckdb-f7cd238a0a5a](https://towardsdatascience.com/sql-on-pandas-usign-duckdb-f7cd238a0a5a)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Bringing the best of both worlds together
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://thuwarakesh.medium.com/?source=post_page-----f7cd238a0a5a--------------------------------)[![Thuwarakesh
    Murallie](../Images/44f1a14a899426592bbd8c7f73ce169d.png)](https://thuwarakesh.medium.com/?source=post_page-----f7cd238a0a5a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f7cd238a0a5a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f7cd238a0a5a--------------------------------)
    [Thuwarakesh Murallie](https://thuwarakesh.medium.com/?source=post_page-----f7cd238a0a5a--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----f7cd238a0a5a--------------------------------)
    ·5 min read·Mar 23, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c3fe425569b86a13bbb8b061d74d222e.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Akira Hojo](https://unsplash.com/@joephotography?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: I’m keen on finding ways to speed up analytical tasks.
  prefs: []
  type: TYPE_NORMAL
- en: I’ve written several posts in the past about measuring memory usage, running
    time, and tips to speed up data-intensive tasks. Since we use Pandas primarily
    daily, I keep researching for improved performance.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/fuzzy-string-matching-in-pandas-2c185a24617f?source=post_page-----f7cd238a0a5a--------------------------------)
    [## How to Do Fuzzy String Matching in Pandas Dataframes'
  prefs: []
  type: TYPE_NORMAL
- en: Matching text where there’s no perfect match
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/fuzzy-string-matching-in-pandas-2c185a24617f?source=post_page-----f7cd238a0a5a--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: This impressive Python library is feature rich and reliable. But speed is not
    one of its superpowers. With a bit of optimization, we can gain some speed. But
    those techniques, too, have their issues.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/3-important-sql-optimization-technique-d6da3e9c8442?source=post_page-----f7cd238a0a5a--------------------------------)
    [## 3 SQL Optimization Techniques That Can Instantly Boost Query Speed'
  prefs: []
  type: TYPE_NORMAL
- en: Simple hacks to try before moving to a different data model altogether
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/3-important-sql-optimization-technique-d6da3e9c8442?source=post_page-----f7cd238a0a5a--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: New replacements, such as Polars, are gaining momentum too. But I still prefer
    Pandas, like many other data professionals.
  prefs: []
  type: TYPE_NORMAL
- en: This is one reason why we use databases instead of dataframes in memory. Databases
    are designed to retrieve data from disk and perform computations efficiently.
  prefs: []
  type: TYPE_NORMAL
- en: However, you don’t need a database for most data science projects. It’s like
    using a sledgehammer to crack a nut. This is where in-memory databases such as
    SQLite come.
  prefs: []
  type: TYPE_NORMAL
- en: In memory, databases don’t have a separate process running, or they don’t need
    a complex setup. The latest versions of Python come with SQLite.
  prefs: []
  type: TYPE_NORMAL
- en: But SQLite, too, has its drawbacks. Although you can use SQL to query the database,
    the speed benefit isn’t significant.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/3-ways-to-deploy-machine-learning-models-in-production-cdba15b00e?source=post_page-----f7cd238a0a5a--------------------------------)
    [## 3 Ways to Deploy Machine Learning Models in Production'
  prefs: []
  type: TYPE_NORMAL
- en: Deploy ML models and make them available to users or other components of your
    project.
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/3-ways-to-deploy-machine-learning-models-in-production-cdba15b00e?source=post_page-----f7cd238a0a5a--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: However, we have a modern solution for this — DuckDB. Like SQLite, the setup
    is super simple, and you can port the database along with your code. And you can
    have far more speed than in Pandas API and SQLite.
  prefs: []
  type: TYPE_NORMAL
- en: Querying a Pandas dataframe with SQL — using DuckDB.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'DuckDB is a database on its own. However, you can also turn any dataframe into
    a DuckDB table and query on it. But before doing all of them, here’s how we install
    it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: This might surprise you. But that is how we install DuckDB. Although it’s a
    database, it’s a Python package to install.
  prefs: []
  type: TYPE_NORMAL
- en: Since this is a simple in-memory database, there are no other complex configurations
    like you see with Postgres and other regular databases. There are a handful of
    parameters you can set, which you can find in the [documentation](https://duckdb.org/docs/sql/configuration).
  prefs: []
  type: TYPE_NORMAL
- en: Let’s suppose we have a taxi driving duration dataset. We need to compute the
    average trip duration of those trips that started west of longitude -73.95.
  prefs: []
  type: TYPE_NORMAL
- en: If you’re following along with this, you can generate a test dataset using the
    below code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: We used the [timing decorator](/python-decorators-for-data-science-6913f717669a)
    to measure the time it takes to run.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/python-decorators-for-data-science-6913f717669a?source=post_page-----f7cd238a0a5a--------------------------------)
    [## 5 Python Decorators I Use in Almost All My Data Science Projects'
  prefs: []
  type: TYPE_NORMAL
- en: Decorators provide a new and convenient way for everything from caching to sending
    notifications
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/python-decorators-for-data-science-6913f717669a?source=post_page-----f7cd238a0a5a--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The above code took 0.2 seconds to run on my computer. Here’s the same query
    using DuckDB API instead of the Pandas API:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: As you can see, using the Duck DB API has run ten times faster than the native
    Pandas API.
  prefs: []
  type: TYPE_NORMAL
- en: How does DuckDB differ from SQLite’s Performance?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: SQLite is the most popular in-memory database right now. That’s why we get it
    with Python out of the box.
  prefs: []
  type: TYPE_NORMAL
- en: But DuckDB does well in two areas. One, if you don’t have to persist, you don’t
    have to create it either. You can directly query your Pandas dataframe like a
    database table. This is what we’ve done in the previous example.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/5-python-gui-frameworks-to-create-desktop-web-and-even-mobile-apps-c25f1bcfb561?source=post_page-----f7cd238a0a5a--------------------------------)
    [## 6 Python GUI Frameworks to Create Desktop, Web, and Even Mobile Apps.'
  prefs: []
  type: TYPE_NORMAL
- en: You could build beautiful apps purely in Python.
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/5-python-gui-frameworks-to-create-desktop-web-and-even-mobile-apps-c25f1bcfb561?source=post_page-----f7cd238a0a5a--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: The other benefit is that DuckDB is still faster than SQLite. In fact, replicating
    our example in this post to SQLite runs slower than Pandas. This makes SQLite
    the last option when performance is considered a priority. But it still does a
    great job of persisting and porting data and your code.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s the SQLite version of our example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: As you can see, running SQL on Pandas using SQLite requires us to create a separate
    instance of the database on disk and insert data into it. All these steps are
    not necessary if we’re using DuckDB.
  prefs: []
  type: TYPE_NORMAL
- en: Also, it took .51 seconds, whereas Pandas API took only .49 seconds.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Pandas, beyond argument, is one of the miracles that made Python a popular choice
    for data science. However, this matured library makes data-wrangling tasks slow.
  prefs: []
  type: TYPE_NORMAL
- en: In this post, we discussed using a simple query API from DuckDB to improve speed.
    If you know SQL, without a complex setup, you can directly query your Pandas dataframe
    with SQL instead of Pandas API.
  prefs: []
  type: TYPE_NORMAL
- en: While DuckDB has advantages, it is not a cure-all.
  prefs: []
  type: TYPE_NORMAL
- en: You still need scalable databases such as Postgres for large-scale projects.
    And using Pandas API may be quicker to develop, and everyone who understands Python
    can understand them.
  prefs: []
  type: TYPE_NORMAL
- en: Thanks for reading, friend! If you enjoyed my article, let’s keep in touch on
    [**LinkedIn**](https://www.linkedin.com/in/thuwarakesh/), [**Twitter**](https://twitter.com/Thuwarakesh),
    and [**Medium**](https://thuwarakesh.medium.com/).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Not a Medium member yet? Please use this link to [**become a member**](https://thuwarakesh.medium.com/membership)
    because, at no extra cost for you, I earn a small commission for referring you.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
