- en: 'FinOps: Four Ways to Reduce Your BigQuery Storage Cost'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: FinOps：降低 BigQuery 存储成本的四种方法
- en: 原文：[https://towardsdatascience.com/finops-four-ways-to-reduce-your-bigquery-storage-cost-82d99c47f139](https://towardsdatascience.com/finops-four-ways-to-reduce-your-bigquery-storage-cost-82d99c47f139)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/finops-four-ways-to-reduce-your-bigquery-storage-cost-82d99c47f139](https://towardsdatascience.com/finops-four-ways-to-reduce-your-bigquery-storage-cost-82d99c47f139)
- en: Don’t overlook the cloud storage cost
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 不要忽视云存储成本
- en: '[](https://medium.com/@xiaoxugao?source=post_page-----82d99c47f139--------------------------------)[![Xiaoxu
    Gao](../Images/8712a7e5f3bad0d2abd7e04792fad66f.png)](https://medium.com/@xiaoxugao?source=post_page-----82d99c47f139--------------------------------)[](https://towardsdatascience.com/?source=post_page-----82d99c47f139--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----82d99c47f139--------------------------------)
    [Xiaoxu Gao](https://medium.com/@xiaoxugao?source=post_page-----82d99c47f139--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@xiaoxugao?source=post_page-----82d99c47f139--------------------------------)[![Xiaoxu
    Gao](../Images/8712a7e5f3bad0d2abd7e04792fad66f.png)](https://medium.com/@xiaoxugao?source=post_page-----82d99c47f139--------------------------------)[](https://towardsdatascience.com/?source=post_page-----82d99c47f139--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----82d99c47f139--------------------------------)
    [小徐高](https://medium.com/@xiaoxugao?source=post_page-----82d99c47f139--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----82d99c47f139--------------------------------)
    ·9 min read·Jan 30, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----82d99c47f139--------------------------------)
    ·9分钟阅读·2023年1月30日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/4ae5fa9251fd278ef8b86e5381d1c56e.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4ae5fa9251fd278ef8b86e5381d1c56e.png)'
- en: Photo by [Nathan Dumlao](https://unsplash.com/@nate_dumlao) on [Unsplash](https://unsplash.com/)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Nathan Dumlao](https://unsplash.com/@nate_dumlao) 在 [Unsplash](https://unsplash.com/)
- en: With the current state of the economic situation, it’s more important than ever
    to maximize our cash on hand and develop a series of cost optimization strategies.
    The growing use of cloud services has brought not only many opportunities for
    the business but also the potential for management challenges that can lead to
    cost overruns and other issues.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在当前经济形势下，最大限度地利用现金并制定一系列成本优化策略比以往任何时候都更加重要。云服务的广泛使用不仅带来了许多商业机会，还带来了管理挑战的潜在风险，可能导致成本超支等问题。
- en: FinOps, a newly introduced concept, is an evolving operational framework and
    cultural shift that allows organizations to get maximum business value by bringing
    technology, finance, and business together through cloud transformation. One of
    its key pillars is spend control. It’s not about cutting business but being more
    aware of the possibilities on the cloud and optimizing resources to achieve the
    same goal with less spending.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: FinOps 是一个新引入的概念，是一个不断发展的操作框架和文化转变，它通过云转型将技术、财务和业务结合起来，使组织能够获得最大业务价值。其关键支柱之一是支出控制。它并不是要削减业务，而是更清楚地了解云上的可能性，并优化资源，以更少的支出实现相同的目标。
- en: The area we are looking at today is BigQuery storage cost. Many people believe
    that storage is cheap, which is not entirely wrong. According to Backblaze, a
    cloud storage and data backup company, the cost per Gigabyte has dropped by 90%
    since 2009.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们今天关注的领域是 BigQuery 存储成本。许多人认为存储便宜，这并非完全错误。根据云存储和数据备份公司 Backblaze 的数据，自 2009
    年以来，每千兆字节的成本已经下降了 90%。
- en: '![](../Images/b8adc4aa83841b1e18f0b7b1f0d22044.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b8adc4aa83841b1e18f0b7b1f0d22044.png)'
- en: 'Source: [Backblaze](https://www.backblaze.com/blog/hard-drive-cost-per-gigabyte/)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：[Backblaze](https://www.backblaze.com/blog/hard-drive-cost-per-gigabyte/)
- en: Does it mean that we will spend less and less money on storage? No, the truth
    is data volume growth has gone through the roof in 10 years with an [increase
    of 1900%](https://www.statista.com/statistics/871513/worldwide-data-created/),
    and the [cloud storage price has stagnated for the past five years](https://www.storj.io/blog/the-high-price-of-traditional-cloud-storage).
    With the inflation going on, many providers have even increased their storage
    prices for 2023\. So, make sure you have a (near) real-time billing dashboard
    at all layers in your organization to have this insight.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这是否意味着我们在存储上花费的钱会越来越少？不，事实是数据量在过去10年里激增了[1900%的增长](https://www.statista.com/statistics/871513/worldwide-data-created/)，而且[云存储价格在过去五年里停滞不前](https://www.storj.io/blog/the-high-price-of-traditional-cloud-storage)。由于通货膨胀的影响，许多供应商甚至提高了2023年的存储价格。因此，请确保在组织的所有层级中都有一个（接近）实时的计费仪表板，以获得这些洞察。
- en: In this article, I want to introduce four ways to help your organization reduce
    BigQuery storage costs. You will be surprised at the result!
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我想介绍四种方法来帮助你的组织降低BigQuery存储成本。你会对结果感到惊讶！
- en: 'I’ve a few other articles about cost optimization: [7 Cost Optimization Practices
    for BigQuery](https://medium.com/towards-data-science/7-cost-optimization-practices-for-bigquery-6f776582e62d),
    [How I build a Real-time BigQuery Pipeline for Cost Saving and Capacity Planning](https://medium.com/towards-data-science/how-i-build-a-real-time-bigquery-pipeline-for-cost-saving-and-capacity-planning-15712c97f058).
    Feel free to checkout them out as well.'
  id: totrans-15
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我还有一些关于成本优化的文章：[BigQuery的7种成本优化实践](https://medium.com/towards-data-science/7-cost-optimization-practices-for-bigquery-6f776582e62d)，[我如何构建一个实时BigQuery管道以节省成本和进行容量规划](https://medium.com/towards-data-science/how-i-build-a-real-time-bigquery-pipeline-for-cost-saving-and-capacity-planning-15712c97f058)。也可以随时查看它们。
- en: BigQuery storage pricing model
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: BigQuery存储定价模型
- en: 'Let’s first see the pricing model of BigQuery storage (price in Jan 2023).
    BigQuery offers two pricing models: Logical and Physical. It is a property on
    the dataset level called `[storage_billing_model](https://cloud.google.com/bigquery/docs/updating-datasets#update_storage_billing_models)`
    :'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先看看BigQuery存储的定价模型（2023年1月的价格）。BigQuery提供两种定价模型：逻辑和物理。它是数据集级别的一个属性，称为`[storage_billing_model](https://cloud.google.com/bigquery/docs/updating-datasets#update_storage_billing_models)`：
- en: 'Logical: This is the default billing model of a dataset. The data size is calculated
    based on the data types of the individual columns. For example, `INT64` type takes
    8 logical bytes.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 逻辑：这是数据集的默认计费模型。数据大小是根据各个列的数据类型来计算的。例如，`INT64` 类型占用8个逻辑字节。
- en: 'Physical: The data size is calculated based on the data stored on the disk
    after compression. It’s worth noting that it includes the bytes used for [time
    travel](https://cloud.google.com/bigquery/docs/time-travel) storage (7 days by
    default).'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 物理：数据大小是根据压缩后存储在磁盘上的数据来计算的。值得注意的是，它包括用于[时间旅行](https://cloud.google.com/bigquery/docs/time-travel)存储的字节（默认7天）。
- en: '![](../Images/32aa262d5869fed4b25bd0414a8eaf63.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/32aa262d5869fed4b25bd0414a8eaf63.png)'
- en: BigQuery storage pricing model (Created by author)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: BigQuery存储定价模型（作者创建）
- en: In both pricing models, we pay for active storage and long-term storage with
    different price tags. BigQuery automatically labels data as active or long-term
    based on modifications.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两种定价模型中，我们为活跃存储和长期存储支付不同的价格。BigQuery根据修改自动标记数据为活跃或长期。
- en: 'Active: Table or table partition that has been modified in the last 90 days.
    Actions include loading, copying, and streaming data into a table and using DML,
    DDL, etc. Simply querying the table won’t make it active.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 活跃：在过去90天内被修改过的表或表分区。操作包括将数据加载、复制和流式传输到表中，以及使用DML、DDL等。仅仅查询表不会使其变为活跃状态。
- en: 'Long-term: Table or table partition that hasn’t been modified for 90 consecutive
    days. There is no difference in performance, durability, or availability between
    active storage and long-term storage.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 长期：在90天内没有被修改的表或表分区。活跃存储和长期存储在性能、耐久性或可用性上没有区别。
- en: Switch storage_billing_model to physical
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将 storage_billing_model 切换到物理
- en: BigQuery stores data in a columnar format — [Capacitor](https://cloud.google.com/blog/products/bigquery/inside-capacitor-bigquerys-next-generation-columnar-storage-format),
    which can achieve a very high compression ratio of up to 1:10 and high scan throughput.
    Physical model charges the compressed bytes, but is it always cheaper than logical?
    Let’s see a few examples from [BigQuery public datasets](https://cloud.google.com/bigquery/public-data).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: BigQuery 以列式格式存储数据 — [Capacitor](https://cloud.google.com/blog/products/bigquery/inside-capacitor-bigquerys-next-generation-columnar-storage-format)，这可以实现高达1:10的压缩比和高扫描吞吐量。物理模型按压缩字节收费，但它总是比逻辑模型便宜吗？让我们来看几个
    [BigQuery 公共数据集](https://cloud.google.com/bigquery/public-data) 的例子。
- en: '`bigquery-public-data.cloud_storage_geo_index.landsat_index` — This table is
    recreated every day, so every byte is an active byte, and it doesn’t have time-travel
    data. The table has ~3GB logical bytes and ~480MB physical bytes. The compression
    ratio is almost 86%. Pretty impressive! In terms of the price, physical model
    is much cheaper because it doesn’t have time-travel bytes, and the compression
    ratio is more than 50%.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bigquery-public-data.cloud_storage_geo_index.landsat_index` — 这个表每天都会重新创建，因此每个字节都是活动字节，它没有时间旅行数据。这个表有大约3GB的逻辑字节和约480MB的物理字节。压缩率接近86%。相当令人印象深刻！就价格而言，物理模型要便宜得多，因为它没有时间旅行字节，且压缩率超过50%。'
- en: '![](../Images/3e4a6d09fe0bc05a684627ac34103c06.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3e4a6d09fe0bc05a684627ac34103c06.png)'
- en: Storage info of `landsat_index` table
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '`landsat_index` 表的存储信息'
- en: '`bigquery-public-data.google_cloud_release_notes.release_note` — This table
    is updated daily. The total physical bytes are more than logical bytes because
    it includes time-travel data. As every byte is active, switching to physical pricing
    model actually costs more.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bigquery-public-data.google_cloud_release_notes.release_note` — 这个表每天更新。总的物理字节数多于逻辑字节数，因为它包括时间旅行数据。由于每个字节都是活动的，切换到物理计费模型实际上会花费更多。'
- en: '![](../Images/105e6d917f0f5dbf7b554c7323679155.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/105e6d917f0f5dbf7b554c7323679155.png)'
- en: Storage info of `release_note` table
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '`release_note` 表的存储信息'
- en: '`bigquery-public-data.crypto_bitcoin.transactions` — This table is updated
    daily, and more than 90% of its storage is labeled as long-term. For the price,
    the physical model is slightly cheaper.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bigquery-public-data.crypto_bitcoin.transactions` — 这个表每天都会更新，超过90%的存储被标记为长期存储。就价格而言，物理模型稍微便宜一些。'
- en: '![](../Images/5f9f63fc7ad36e536ebf08556ea54faa.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5f9f63fc7ad36e536ebf08556ea54faa.png)'
- en: Storage info of ``transactions`` table
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '``transactions`` 表的存储信息'
- en: 'We can’t make the conclusion now that one billing model is more cost-effective
    than the other because it depends on how tables in the dataset are modified. But
    here are a few rules to help you decide: (assume compression rate is more than
    50%).'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 目前我们不能得出一个计费模型比另一个更具成本效益的结论，因为这取决于数据集中的表是如何被修改的。但这里有一些规则可以帮助你决定：（假设压缩率超过50%）。
- en: If the table has no (or very few) time-travel bytes, then choose physical.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果表没有（或很少有）时间旅行字节，那么选择物理模型。
- en: If the table only has active bytes and it has the default time-travel setting,
    then think about keeping it logical.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果表只有活动字节并且使用默认的时间旅行设置，那么考虑保持逻辑模型。
- en: If the table has a high percentage of long-term bytes and default time-travel
    setting, physical might be cheaper but not that significant.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果表中有高比例的长期字节并且使用默认的时间旅行设置，物理模型可能会更便宜，但差别不大。
- en: An important note is that if you change a dataset’s storage billing model to
    use physical bytes, you can’t change it back to using logical bytes. So, make
    the switch with caution.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 一个重要的注意事项是，如果你将数据集的存储计费模型更改为使用物理字节，你不能将其更改回使用逻辑字节。因此，切换时请谨慎。
- en: If you are not sure about the switch, you can use BigQuery `information_schema.table_storage_timeline_by_project`
    table to monitor the storage metadata daily or monthly and make the switch when
    the trend is more stable.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不确定是否切换，可以使用 BigQuery `information_schema.table_storage_timeline_by_project`
    表来每天或每月监控存储元数据，并在趋势更加稳定时进行切换。
- en: Use table clone/snapshot instead of table copy
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用表克隆/快照而不是表复制
- en: 'This tip is helpful if you often need to copy tables. You may copy the table
    daily to keep the history or copy the table from prod to test for testing purposes.
    There are four ways to copy tables:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你经常需要复制表，这个提示会很有帮助。你可以每天复制表以保持历史记录，或者将表从生产环境复制到测试环境以供测试。有四种方式可以复制表：
- en: Data transfer service
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据传输服务
- en: Table copy
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表复制
- en: Table clone
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表克隆
- en: Table snapshot
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表快照
- en: '[Data transfer service](https://cloud.google.com/bigquery/docs/dts-introduction)
    automates data movement into BigQuery on a scheduled, managed basis. It can copy
    tables and datasets and import data from external sources into BigQuery. [Table
    copy](https://cloud.google.com/bigquery/docs/managing-tables#copy-table) is a
    table-level operation that creates a full copy of the table. In both approaches,
    the copied tables have type “BASE TABLE”. It means that BigQuery will charge the
    full storage amount of the copied table.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[数据传输服务](https://cloud.google.com/bigquery/docs/dts-introduction)可以在计划管理的基础上自动将数据移动到
    BigQuery 中。它可以复制表格和数据集，并将外部数据导入 BigQuery。[表格复制](https://cloud.google.com/bigquery/docs/managing-tables#copy-table)是一种表级操作，会创建表格的完整副本。在这两种方法中，复制的表格都是“BASE
    TABLE”类型。这意味着 BigQuery 将按复制表格的完整存储量收费。'
- en: We can find out table type from `information_schema.tables`.
  id: totrans-49
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我们可以从 `information_schema.tables` 中找出表格类型。
- en: '[**Table clone**](https://cloud.google.com/bigquery/docs/table-clones-intro)'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '[**表克隆**](https://cloud.google.com/bigquery/docs/table-clones-intro)'
- en: Table clone is a lightweight, writeable copy of the base table. The best part
    is that you are only charged for the storage of data in the table clone that differs
    from the base table. So, initially, there is no storage cost for a table clone!
    The following graph illustrates the costs.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 表克隆是基表的轻量、可写副本。最棒的是，你只为表克隆中与基表不同的数据存储付费。因此，初始时表克隆没有存储成本！以下图表说明了成本情况。
- en: '![](../Images/c500f2eeac6316307aaabb84703ac8a9.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c500f2eeac6316307aaabb84703ac8a9.png)'
- en: Storage difference between base table and table clone (Created by author)
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 基表与表克隆之间的存储差异（作者创建）
- en: Initially, when you clone the table, there is no storage cost for the new table
    because it’s the same as the base table. It only charges when there is a difference,
    and here is the formula.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 初始时，当你克隆表格时，新表格没有存储成本，因为它与基表相同。只有当存在差异时才会收费，以下是公式。
- en: '[PRE0]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: It’s worth noting that some changes to a base table can result in you being
    charged the full storage amount for a table clone. For example, if you modify
    a base table with clustering, you are charged the full storage amount of the updated
    partition in any cloned tables of that base table. In the following graph, one
    value change in P2 updates the entire P2, so it charges the entire partition.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，对基表的一些更改可能导致你为表克隆支付全部存储费用。例如，如果你修改了带有集群的基表，你将为该基表的任何克隆表中更新的分区支付全部存储费用。在以下图表中，P2
    中的一个值更改更新了整个 P2，因此收费整个分区。
- en: '![](../Images/aac10c215e5a3d6079fc59d92975c4e9.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/aac10c215e5a3d6079fc59d92975c4e9.png)'
- en: Storage difference when base table is partitioned and clustered (Created by
    author)
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 基表分区和集群化时的存储差异（作者创建）
- en: Having partitions can always help reduce storage costs for table clones because
    BigQuery only charges the partitions with modified data instead of the entire
    table.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有分区可以始终帮助降低表克隆的存储成本，因为 BigQuery 仅对修改过的数据分区收费，而不是整个表格。
- en: Table clone is recommended when you copy the table to a test project for testing
    purposes, and you only update part of the table (e.g., 20%). In that case, you
    can save 80% of the original storage cost. In the worst case, when you update
    the entire table, the storage cost of the table clone will be the same as if you
    use the normal table copy. Thus, it’s definitely worth a try!
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 当你将表复制到测试项目中用于测试目的，并且只更新表格的一部分（例如 20%）时，推荐使用表克隆。在这种情况下，你可以节省原始存储成本的 80%。在最坏的情况下，当你更新整个表格时，表克隆的存储成本将与使用普通表格复制相同。因此，绝对值得一试！
- en: But there are a few limitations. For example, you can’t create a clone of a
    view, materialized view, or an external table. The table clone must be in the
    same region as the base table. This feature is currently in the Preview stage
    (Jan 2023), which might have limited support.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 但有一些限制。例如，你不能创建视图、物化视图或外部表的克隆。表克隆必须与基表位于同一地区。此功能目前处于预览阶段（2023 年 1 月），可能支持有限。
- en: '[**Table snapshot**](https://cloud.google.com/bigquery/docs/table-snapshots-intro)'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '[**表快照**](https://cloud.google.com/bigquery/docs/table-snapshots-intro)'
- en: 'Another variation of table clone is called table snapshot. The difference between
    table clone and table snapshot is that table snapshot is read-only. It preserves
    the content of a base table at a particular time. For the storage cost, BigQuery
    only charges for data in a table snapshot that no longer exists in its base table
    or that has changed in its base table. For example:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 表克隆的另一种变体称为表快照。表克隆和表快照之间的区别在于表快照是只读的。它保留了基表在特定时间的内容。对于存储费用，BigQuery 仅对基表中不再存在或已更改的数据收取费用。例如：
- en: '![](../Images/7859d111c476d1a55cbe3f0476fc0821.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7859d111c476d1a55cbe3f0476fc0821.png)'
- en: Storage difference between base table and table snapshot (Created by author)
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 基表与表快照之间的存储差异（作者创建）
- en: Similar to table clone, there is no initial storage cost. Here is the cost when
    there is an update in the base table.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于表克隆，初始存储成本为零。以下是基表更新时的费用。
- en: '[PRE1]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Having partitions in the base table also helps reduce storage costs for table
    snapshots. In terms of the limitations, they are similar to table clone. But table
    snapshot is a GA feature, so it has more documentation and receives more support
    from GCP.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 基表中的分区也有助于降低表快照的存储成本。在限制方面，它们类似于表克隆。但表快照是GA功能，因此有更多文档支持，并获得GCP的更多支持。
- en: Table snapshot is beneficial if you want to preserve the table history for longer
    than 7 days. With BigQuery time travel, you can only access table’s data from
    7 days ago. Table snapshot can preserve read-only data for as long as you want.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望保留表的历史记录超过 7 天，表快照是有益的。通过 BigQuery 时间旅行，您只能访问 7 天前的表数据。表快照可以根据您的需要保留只读数据。
- en: Set table expiration
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置表过期时间
- en: One of the easiest cost-saving tips is to delete unused tables or table partitions.
    We often have such tables in a test environment. BigQuery allows us to set expiration
    on partition-level, table-level, and dataset-level.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 节省成本的一个简单方法是删除未使用的表或表分区。我们经常在测试环境中遇到这样的表。BigQuery 允许我们在分区级、表级和数据集级别设置过期时间。
- en: '[PRE2]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: After the expiration date, tables or partitions will be automatically deleted.
    Note that if you update the default table expiration for a dataset, it will only
    apply to the new tables created.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 到期后，表或分区将自动删除。请注意，如果您更新数据集的默认表过期时间，它只会适用于新创建的表。
- en: Keep old data in BigQuery rather than exporting it
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将旧数据保留在 BigQuery 中，而不是导出
- en: BigQuery is not a traditional data warehouse. It’s grown into a data lakehouse
    which is a new architecture that combines the best elements of a data warehouse
    and data lake.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: BigQuery 不是传统的数据仓库。它已经发展成一个数据湖仓，这是一个结合了数据仓库和数据湖最佳元素的新架构。
- en: We can sense this by looking at their pricing model. The storage costs of active
    and long-term bytes in the logical model are the same as standard and nearline
    storage types in Cloud Storage. However, cloud storage has operation charges,
    as shown in the following table.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过查看它们的定价模型来感知这一点。逻辑模型中的活动和长期字节的存储成本与云存储中的标准和近线存储类型相同。然而，云存储有操作费用，如下表所示。
- en: '![](../Images/e3a6d3e3770463ebf35c1362a34fa2a7.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e3a6d3e3770463ebf35c1362a34fa2a7.png)'
- en: GCP Cloud storage pricing model (Created by author)
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: GCP 云存储定价模型（作者创建）
- en: BigQuery doesn’t have such operation charges, and simply querying a long-term
    table won’t change it to active. So, from the cost and operation perspective,
    keeping old data in BigQuery is a preferable option.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: BigQuery 没有这种操作费用，简单查询长期表不会将其更改为活动状态。因此，从成本和操作的角度来看，将旧数据保留在 BigQuery 是一个更可取的选择。
- en: Conclusion
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: As always, I hope you find this article inspiring and useful. 2022 has been
    one of the hardest years ever to run a business. All sorts of challenges pushed
    engineers to look at their technical stacks from different perspectives, thinking
    from how to scale the system to how to control the cost to make the business more
    resilient.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 一如既往，希望您觉得这篇文章鼓舞人心且有用。2022年是运营业务最艰难的一年之一。各种挑战促使工程师从不同的角度审视他们的技术堆栈，从如何扩展系统到如何控制成本以提高业务的韧性。
- en: If you use BigQuery, share these four tips with your colleagues. I’m sure that
    they can bring a huge impact on your business and allow the company to allocate
    the money to more critical domains. If you have any thoughts, please let me know
    in the comment. Cheers!
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用 BigQuery，请与您的同事分享这四个小贴士。我相信它们能对您的业务产生巨大影响，并使公司能够将资金分配到更关键的领域。如果您有任何想法，请在评论中告知我。谢谢！
