["```py\nhelp([object]) -> display documentation\n```", "```py\n#Start help utility\nhelp()\n```", "```py\nWelcome to Python 3.7's help utility!\n\nIf this is your first time using Python, you should definitely check out\nthe tutorial on the Internet at https://docs.python.org/3.7/tutorial/.\n\nEnter the name of any module, keyword, or topic to get help on writing\nPython programs and using Python modules.  To quit this help utility and\nreturn to the interpreter, just type \"quit\".\n\nTo get a list of available modules, keywords, symbols, or topics, type\n\"modules\", \"keywords\", \"symbols\", or \"topics\".  Each module also comes\nwith a one-line summary of what it does; to list the modules whose name\nor summary contain a given string such as \"spam\", type \"modules spam\".\n\nhelp>\n```", "```py\nhelp> map\n```", "```py\nHelp on class map in module builtins:\n\nclass map(object)\n |  map(func, *iterables) --> map object\n |  \n |  Make an iterator that computes the function using arguments from\n |  each of the iterables.  Stops when the shortest iterable is exhausted.\n |  \n |  Methods defined here:\n |  \n |  __getattribute__(self, name, /)\n |      Return getattr(self, name).\n |  \n |  __iter__(self, /)\n |      Implement iter(self).\n |  \n |  __next__(self, /)\n |      Implement next(self).\n |  \n |  __reduce__(...)\n |      Return state information for pickling.\n |  \n |  ----------------------------------------------------------------------\n |  Static methods defined here:\n |  \n |  __new__(*args, **kwargs) from builtins.type\n |      Create and return a new object.  See help(type) for accurate signature.\n```", "```py\nhelp([object])\n```", "```py\n#Find documentation of Python map() function\nhelp(map)\n```", "```py\nHelp on class map in module builtins:\n\nclass map(object)\n |  map(func, *iterables) --> map object\n |  \n |  Make an iterator that computes the function using arguments from\n |  each of the iterables.  Stops when the shortest iterable is exhausted.\n |  \n |  Methods defined here:\n |  \n |  __getattribute__(self, name, /)\n |      Return getattr(self, name).\n |  \n |  __iter__(self, /)\n |      Implement iter(self).\n |  \n |  __next__(self, /)\n |      Implement next(self).\n |  \n |  __reduce__(...)\n |      Return state information for pickling.\n |  \n |  ----------------------------------------------------------------------\n |  Static methods defined here:\n |  \n |  __new__(*args, **kwargs) from builtins.type\n |      Create and return a new object.  See help(type) for accurate signature.\n```", "```py\n#Define a function\ndef add(x, y):\n    '''\n    This function adds two given integer arguments\n\n    Parameters:\n    x : integer\n    y : integer\n\n    Output:\n    val: integer\n    '''\n\n    val = x + y\n\n    return val\n```", "```py\n#Define a function\ndef add(x, y):\n    '''\n    This function adds two given integer arguments\n\n    Parameters:\n    x : integer\n    y : integer\n\n    Output:\n    val: integer\n    '''\n\n    val = x + y\n\n    return val\n\n#Find documentation of user defined function add()\nhelp(add)\n```", "```py\nHelp on function add in module __main__:\n\nadd(x, y)\n    This function adds two given integer arguments\n\n    Parameters:\n    x : integer\n    y : integer\n\n    Output:\n    val: integer\n```"]