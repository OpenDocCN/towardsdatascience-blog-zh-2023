["```py\nWITH\n  orders AS (\n  SELECT\n    1 AS order_id,\n    1 AS product_id,\n    100 AS price,\n    10 AS quantity,\n    50 AS shipping_cost,\n    3 AS delivery_time\n  UNION ALL\n  SELECT\n    2 AS order_id,\n    2 AS product_id,\n    200 AS price,\n    20 AS quantity,\n    100 AS shipping_cost,\n    5 AS delivery_time\n  UNION ALL\n  SELECT\n    3 AS order_id,\n    3 AS product_id,\n    300 AS price,\n    30 AS quantity,\n    150 AS shipping_cost,\n    7 AS delivery_time\n  ),\n  parameters AS (\n  SELECT\n    min_price,\n    min_quantity,\n    max_delivery_time\n  FROM\n    UNNEST(GENERATE_ARRAY(100, 300, 100)) AS min_price,\n    UNNEST(GENERATE_ARRAY(10, 30, 10)) AS min_quantity,\n    UNNEST(GENERATE_ARRAY(3, 7, 2)) AS max_delivery_time\n  )\nSELECT\n  min_price,\n  min_quantity,\n  max_delivery_time,\n  SUM(price * quantity) AS total_revenue,\n  SUM(price * quantity - shipping_cost) AS total_profit,\n  SAFE_DIVIDE(SUM(price * quantity - shipping_cost), SUM(price * quantity)) AS profit_margin\nFROM\n  orders,\n  parameters\nWHERE\n  price >= min_price\n  AND quantity >= min_quantity\n  AND delivery_time <= max_delivery_time\nGROUP BY\n  min_price,\n  min_quantity,\n  max_delivery_time\nORDER BY\n  profit_margin DESC;\n```", "```py\nwith myTable as (\n  select id, x, y\n  from machineLearning.table1\n), trainSample as (\n  select id, x, y\n  from myTable\n  where mod(abs(farm_fingerprint(id)) < 70)\n), testSample as (\n  select id, x, y\n  from myTable\n  where mod(abs(farm_fingerprint(id)) >=70)\n)\n\nselect ...\n// do your training here\n```"]