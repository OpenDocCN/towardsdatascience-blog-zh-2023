- en: Downloading Landsat Satellite Images with Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/downloading-landsat-satellite-images-with-python-a2d2b5183fb7](https://towardsdatascience.com/downloading-landsat-satellite-images-with-python-a2d2b5183fb7)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Streamline Landsat scene downloads with the landsatxplore Python package
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://conorosullyds.medium.com/?source=post_page-----a2d2b5183fb7--------------------------------)[![Conor
    O''Sullivan](../Images/2dc50a24edb12e843651d01ed48a3c3f.png)](https://conorosullyds.medium.com/?source=post_page-----a2d2b5183fb7--------------------------------)[](https://towardsdatascience.com/?source=post_page-----a2d2b5183fb7--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----a2d2b5183fb7--------------------------------)
    [Conor O''Sullivan](https://conorosullyds.medium.com/?source=post_page-----a2d2b5183fb7--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----a2d2b5183fb7--------------------------------)
    ·6 min read·May 9, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9b6d132a1cbec04005db3935f410aec1.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [NASA](https://unsplash.com/@nasa?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Landsat satellites are among the most commonly used sources of Earth observation
    data. They have been providing high-quality images of the planet’s surface for
    over four decades. However, manually downloading these images can be tedious!
    Fortunately, with the [landsatxplore](https://github.com/yannforget/landsatxplore)
    package, you can easily download and process Landsat scenes with a few lines of
    code.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will explore the landsatxplore package and walk through the steps to download
    Landsat satellite images using Python. This includes:'
  prefs: []
  type: TYPE_NORMAL
- en: Setting up API access with a USGS account
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Searching and filtering Landsat scenes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Downloading and working with the scenes in Python
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Say goodbye to manual downloads and hello to an automated, efficient workflow!
  prefs: []
  type: TYPE_NORMAL
- en: Setting up landsatxplore
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Step 1: Register for USGS'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To start, you will need to [setup a USGS account](https://ers.cr.usgs.gov/).
    This is the same account you use to download scenes with [EarthExplorer](http://earthexplorer.usgs.gov).
    Keep your **username** and **password** as we will need it later.
  prefs: []
  type: TYPE_NORMAL
- en: Once you are registered, you can use the [USGS M2M API](https://m2m.cr.usgs.gov/api/docs/json/).
    However, this would require some work to set it up. Instead, we will use the lansatxplore
    package. It abstracts away most of the technical details for you.
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 2: Install lansatxplore'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Follow the instructions on the [GitRepo](https://github.com/yannforget/landsatxplore).
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 3: Check the API connection'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Use the code below to confirm that everything is set up correctly. You should
    replace the **username** and **password** with the details you used to register
    your USGS account.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The output of the response should look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '{‘EE’: ‘EarthExplorer’, ‘GV’: ‘GloVis’, ‘HDDS’: ‘HDDS Explorer’}'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: These are the datasets available through the API. For this tutorial, we’re only
    considering the EarthExplorer dataset.
  prefs: []
  type: TYPE_NORMAL
- en: Searching from scenes with EarthExplorer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before we move on to downloading scenes with the API, we’ll do a manual search
    with EarthExplorer. This is so we can compare the results to what we see using
    Python. If you are not familiar with the EarthExplorer portal then [this tutorial](https://www.youtube.com/watch?v=eAmTxsg6ZYE&ab_channel=USGS)
    may help.
  prefs: []
  type: TYPE_NORMAL
- en: 'We search for scenes using the following criteria:'
  prefs: []
  type: TYPE_NORMAL
- en: They must contain the point at the given latitude and longitude. This point
    falls on Bull Island in Dublin.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Taken between **01/01/2020** to **12/31/2022**
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maximum cloud cover of **50%**
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Part of the Level 2 Landsat 8 or 9 collection
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/49b1b8d5156c633660d99eda80efb613.png)'
  prefs: []
  type: TYPE_IMG
- en: 'EarthExplorer search criteria (source: author)'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can see the results of the search below. We note some things to compare
    to our Python search:'
  prefs: []
  type: TYPE_NORMAL
- en: There are **54 scenes** that match the search criteria.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are **2 tiles** that contain the point on Bull Island. These have path
    and row values of **(206, 023)** and **(205,023).**
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The first scene’s ID is **LC08_L2SP_206023_20221118_20221128_02_T1\.** If you
    are interested in what this ID means then see the [Landsat naming convention](https://www.usgs.gov/faqs/what-naming-convention-landsat-collections-level-1-scenes).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/ebaf7cd31704ff0aac9f38cf6a4968fd.png)'
  prefs: []
  type: TYPE_IMG
- en: 'EarthExplorer search results (source: author)'
  prefs: []
  type: TYPE_NORMAL
- en: Using the lansatxplore Python Package
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Searching for scenes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let’s do the equivalent search using landsatxplore. We do this using the search
    function below:'
  prefs: []
  type: TYPE_NORMAL
- en: '**dataset** — defines which satellite we want scenes for. The value we used
    is the Dataset ID for Landsat 8 and 9\. See the [GitRepo](https://github.com/yannforget/landsatxplore)
    for the ID for Landsat 5 and 7.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The **latitude** and **longitude** give the same point on Bull Island. Except
    we have [converted the coordinates to decimals](https://www.latlong.net/degrees-minutes-seconds-to-decimal-degrees).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The **start_date**, **end_date** and **max_cloud_cover** are also the same as
    before.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The search result will return information in a JSON dictionary. We convert this
    to a Pandas DataFrame (line 4) where every row will represent a unique scene.
    A lot of metadata is returned! So, we filter what is necessary for this application
    (line 5). Lastly, we order this by the **acquisition_date** — the date the scene
    was captured by Landsat.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: You can see a snapshot of this dataset below. Comparing this to our search using
    EarthExplorer, we can be certain that the results are the same. This dataset has
    **54 rows** and there are two unique **wrs_path** and **wrs_row** pairs — **(206,
    23)** and **(205,23)**.The first **display_id** is also the same as what we saw
    before.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/50ce75368bd6a69b2e9d87552062dbab.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Snapshot of df_scenes dataset (source: author)'
  prefs: []
  type: TYPE_NORMAL
- en: If we wanted, we could filter that dataset further. We could use the **satellite**
    column to select only images from Landsat 8 or 9\. Additionally, the **cloud_cover**
    column gives the percentage of the image covered by clouds. When you are happy
    with the final list of scenes, you can move on to downloading them.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Below, we have the code used to download a Landsat scene. We use the EarthExplorer
    function (line 5). This is initialised in the same way as before — using your
    USGS credentials. To download a scene, we need to use its **display_id** and define
    the output directory (line 12). We are using the **display_id** of the first scene
    we mentioned above (line 8).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: You may have noticed the additional error handling above. This is because of
    an [issue](https://github.com/yannforget/landsatxplore/issues/98) with the package.
    In some cases, scenes will be downloaded correctly but an error is still raised.
    The additional error handling double-checks that a scene’s file exists.
  prefs: []
  type: TYPE_NORMAL
- en: Working with the data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A scene will be downloaded as a tar file. The name of the file will be the
    **display_id** followed by **.tar**:'
  prefs: []
  type: TYPE_NORMAL
- en: '*LC08_L2SP_206023_20221118_20221128_02_T1.tar*'
  prefs: []
  type: TYPE_NORMAL
- en: We can work with this data directly in Python. To start, we need to unzip the
    tarfile (lines 4–6). The name of the new folder is set to the scene’s **display_id**
    (line 5).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: You can see the unzipped folder and all the available files below. This includes
    all the information available for Lansat [level-2 science products](https://www.usgs.gov/landsat-missions/landsat-collection-2-level-2-science-products).
    The applications for this data are endless! For one example, we’ll visualise this
    scene using the visible light bands. These are available in the files highlighted
    below.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d51501c4f632e43786fbe114f4043bac.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Landsat level-2 science product files (source: author)'
  prefs: []
  type: TYPE_NORMAL
- en: We load the blue, green and red bands (lines 6–8). We stack these bands (line
    11), [scale them](https://www.usgs.gov/faqs/how-do-i-use-scale-factor-landsat-level-2-science-products)
    (line 12) and [clip them to enhance the contrast](/visualising-the-rgb-channels-of-satellite-images-with-python-6d541af1f98d)
    (line 15). Finally, we display this image using matplotlib (lines 18–20). You
    can see this image below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/9100ebc8db02704ce759853912341a66.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Visualising the RGB channels of the Landsat scene (source: author)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Check out this article, if you want more details on working with the RGB channels
    of satellite images:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/visualising-the-rgb-channels-of-satellite-images-with-python-6d541af1f98d?source=post_page-----a2d2b5183fb7--------------------------------)
    [## Visualising the RGB Channels of Satellite Images with Python'
  prefs: []
  type: TYPE_NORMAL
- en: How to deal with multiple spectral bands, large pixel values and skewed RGB
    channels when visualising satellite images
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/visualising-the-rgb-channels-of-satellite-images-with-python-6d541af1f98d?source=post_page-----a2d2b5183fb7--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Visualizing RGB channels is only the beginning. After downloading the data,
    we can do any remote sensing task — from calculating indices and training models.
    The best part is we can do this all without leaving our Python notebook.
  prefs: []
  type: TYPE_NORMAL
- en: I hope you enjoyed this article! You can support me by becoming one of my [**referred
    members**](https://conorosullyds.medium.com/membership) **:)**
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://conorosullyds.medium.com/membership?source=post_page-----a2d2b5183fb7--------------------------------)
    [## Join Medium with my referral link — Conor O’Sullivan'
  prefs: []
  type: TYPE_NORMAL
- en: As a Medium member, a portion of your membership fee goes to writers you read,
    and you get full access to every story…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: conorosullyds.medium.com](https://conorosullyds.medium.com/membership?source=post_page-----a2d2b5183fb7--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: '| [Twitter](https://twitter.com/conorosullyDS) | [YouTube](https://www.youtube.com/channel/UChsoWqJbEjBwrn00Zvghi4w)
    | [Newsletter](https://mailchi.mp/aa82a5ce1dc0/signup) — sign up for FREE access
    to a [Python SHAP course](https://adataodyssey.com/courses/shap-with-python/)'
  prefs: []
  type: TYPE_NORMAL
