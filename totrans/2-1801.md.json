["```py\n!pip install jupysql duckdb-engine --quiet\n```", "```py\n%load_ext sql\n```", "```py\n%sql duckdb://\n```", "```py\n%sql SELECT * FROM airports.csv ORDER by STATE\n```", "```py\n%%sql\nSELECT \n    count(*) as Count, STATE \nFROM airports.csv \nGROUP BY STATE \nORDER BY Count \nDESC LIMIT 5\n```", "```py\n%%sql --save boston \nSELECT \n    * \nFROM boston.csv\n```", "```py\n%%sql --save boston --no-execute\nSELECT \n    * \nFROM boston.csv\n```", "```py\n*  duckdb://\nSkipping execution...\n```", "```py\n%sqlplot histogram --column age medv --table boston --with boston\n```", "```py\n%%sql --save titanic \nSELECT \n   *\nFROM titanic_train.csv WHERE age NOT NULL AND embarked NOT NULL\n```", "```py\n%sqlplot histogram --column age --bins 10 --table titanic --with titanic\n```", "```py\nax = %sqlplot histogram --column age --bins 10 --table titanic --with titanic\nax.grid()\nax.set_title(\"Distribution of Age on Titanic\")\n_ = ax.set_xlabel(\"Age\")\n```", "```py\n%sqlplot boxplot --column age fare --table titanic --with titanic\n```", "```py\n%sqlplot boxplot --column sibsp parch --table titanic --with titanic\n```", "```py\nairports_states = %sql SELECT count(*) as Count, STATE FROM airports.csv GROUP BY STATE ORDER BY Count DESC LIMIT 5\nprint(type(airports_states))\n```", "```py\nairports_states.DataFrame()\n```", "```py\nimport seaborn\n# https://seaborn.pydata.org/generated/seaborn.color_palette.html\npalette_color = seaborn.color_palette('pastel')\n\ntotal = airports_states.DataFrame()['Count'].sum()\ndef fmt(x):    \n    return '{:.4f}%\\n({:.0f} airports)'.format(x, total * x / 100)\n\nairports_states.pie(colors=palette_color, autopct=fmt)\n```", "```py\npalette_color = seaborn.color_palette('husl')\nairports_states.bar(color=palette_color)\n```", "```py\napple = %sql SELECT Date, High, Low FROM AAPL.csv\n\n# apple.plot() is of type matplotlib.axes._subplots.AxesSubplot\napple.plot().legend(['High','Low'])\n```", "```py\nfrom getpass import getpass\n\npassword = getpass()\nusername = 'user1'\nhost = 'localhost'\ndb = 'Insurance'\n\n# Connection strings are SQLAlchemy URL standard\nconnection_string = f\"mysql://{username}:{password}@{host}/{db}\"\n```", "```py\n%sql $connection_string\n```", "```py\n%sql\n```", "```py\n%sql SELECT * FROM Insurance\n```", "```py\nregions_count = %sql SELECT region, count(*) FROM Insurance GROUP BY region\nregions_count.bar(color=palette_color)\n```"]