- en: Type Hints in Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python中的类型提示
- en: 原文：[https://towardsdatascience.com/type-hints-in-python-1c096f44f375](https://towardsdatascience.com/type-hints-in-python-1c096f44f375)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/type-hints-in-python-1c096f44f375](https://towardsdatascience.com/type-hints-in-python-1c096f44f375)
- en: Your code will no longer be a mystery
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你的代码将不再是一个谜
- en: '[](https://polmarin.medium.com/?source=post_page-----1c096f44f375--------------------------------)[![Pol
    Marin](../Images/a4f69a96717d453db9791f27b8f85e86.png)](https://polmarin.medium.com/?source=post_page-----1c096f44f375--------------------------------)[](https://towardsdatascience.com/?source=post_page-----1c096f44f375--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----1c096f44f375--------------------------------)
    [Pol Marin](https://polmarin.medium.com/?source=post_page-----1c096f44f375--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://polmarin.medium.com/?source=post_page-----1c096f44f375--------------------------------)[![Pol
    Marin](../Images/a4f69a96717d453db9791f27b8f85e86.png)](https://polmarin.medium.com/?source=post_page-----1c096f44f375--------------------------------)[](https://towardsdatascience.com/?source=post_page-----1c096f44f375--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----1c096f44f375--------------------------------)
    [Pol Marin](https://polmarin.medium.com/?source=post_page-----1c096f44f375--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----1c096f44f375--------------------------------)
    ·7 min read·Jul 11, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----1c096f44f375--------------------------------)
    ·阅读时间7分钟·2023年7月11日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/645e61c388600f7ac62f741fec4cf3ab.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/645e61c388600f7ac62f741fec4cf3ab.png)'
- en: Photo by [Agence Olloweb](https://unsplash.com/@olloweb?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Agence Olloweb](https://unsplash.com/@olloweb?utm_source=medium&utm_medium=referral)
    在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: The other day I was trying to decipher how a script I built in the past worked.
    I knew what it did, it was pretty well explained and documented, but understanding
    the how was more troublesome.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 前几天我试图解读我过去编写的一个脚本如何工作。我知道它做了什么，它的解释和文档都很充分，但理解其工作原理更为麻烦。
- en: The code was tedious and complex, with some comments here and there but lacking
    proper styling. That’s when I decided to learn about PEP 8[1] and integrate it
    into my code.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 代码繁琐且复杂，虽然有些注释，但缺乏适当的样式。这时我决定学习PEP 8[1]并将其融入我的代码中。
- en: In case you don’t know what PEP 8 is, it’s basically a document that provides
    guidelines, coding conventions, and best practices on how to write Python code.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不知道PEP 8是什么，它基本上是一个提供指导方针、编码约定和最佳实践的文档，用于编写Python代码。
- en: The solution to our incomprehensible codes is right there. Yet most of us have
    never invested our time to read it and integrate those guidelines into our daily
    practices.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们难以理解的代码的解决方案就在那儿。然而，我们大多数人从未花时间去阅读它并将这些指导方针融入日常实践中。
- en: It takes time and a lot of mistakes, but trust me it’s worth it. I’ve learned
    so much and my codes are now starting to look better.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这需要时间和很多错误，但相信我，这是值得的。我学到了很多东西，代码现在开始变得更好了。
- en: One of my favorite findings was the **type hints** (or **type annotations**)
    — which will be the topic of today’s post. In fact, type hints already appeared
    on PEP 3107[2], back in 2006, and were revisited and fully documented in the 484[3]
    version (in 2014). Since then, it’s been improved several times on new PEP versions
    and it’s almost become a classic.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我最喜欢的发现之一是**类型提示**（或**类型注释**）——这将是今天帖子的主题。实际上，类型提示已经出现在PEP 3107[2]中，回到2006年，并在484[3]版本（2014年）中重新审视并全面记录。从那时起，它在新的PEP版本中得到了多次改进，几乎成为经典。
- en: So, an old topic yet very new for many.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，对于许多人来说，这是一个老话题但又非常新鲜。
- en: What is Type Hinting?
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是类型提示？
- en: Type hints indicate the datatypes of both the inputs and outputs in functions
    (it applies to class methods as well).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 类型提示指示函数（同样适用于类方法）的输入和输出的数据类型。
- en: 'A problem many Python users complain about is the freedom we have to change
    a variable type. In other languages such as C and many others, you need to declare
    a variable specifying its type: char, integer…'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 许多Python用户抱怨的一个问题是我们可以自由地更改变量类型。在C语言和许多其他语言中，你需要声明一个变量并指定其类型：字符、整数等。
- en: Each one will have their own opinion — some might love Python’s freedom (and
    its effects on memory management) and some others will prefer the restriction
    of old-school languages because it makes their code more readable.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 每个人都会有自己的看法——有些人可能喜欢 Python 的自由（以及对内存管理的影响），而另一些人则更喜欢传统语言的限制，因为这使他们的代码更具可读性。
- en: Anyway.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何。
- en: Type hints are here to make your Python code more readable, an approach that
    I’m sure most of us appreciate. However, these are meant to clarify, they don’t
    make the datatype a requirement for the variable.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 类型提示旨在使你的 Python 代码更具可读性，我相信我们大多数人都很欣赏这种方法。然而，它们旨在澄清，它们并不强制变量的数据类型。
- en: '**If the variable’s type isn’t what we expect, no errors will be raised.**'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果变量的类型不是我们预期的，程序不会引发错误。**'
- en: Why Should Data Scientists Consider Using Them?
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么数据科学家应该考虑使用它们？
- en: To be honest, any Python programmer would benefit from type annotations. But
    it probably makes even more sense for data scientists and other data-related professionals.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 说实话，任何 Python 程序员都能从类型注解中受益。但这对数据科学家和其他与数据相关的专业人士来说可能更有意义。
- en: That’s because we work with all kinds of data. Not just the simple strings,
    lists, or tuples. We use data that can end up being about super complex structures
    and type hints have the potential to save us a lot of time trying to know what
    type of data was expected on a given function.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 那是因为我们处理各种数据。不仅仅是简单的字符串、列表或元组。我们使用的数据可能涉及超级复杂的结构，而类型提示有潜力节省我们很多时间，帮助我们了解函数预期的数据类型。
- en: For example, let’s imagine we have a structure that is dictionary-based. Its
    keys are tuples and its values are nested dictionaries with string keys and set
    values.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设我们有一个基于字典的结构。它的键是元组，值是具有字符串键和集合值的嵌套字典。
- en: Good luck trying to remember that when you revisit the code some months later!
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 祝好运，希望几个月后你重访代码时能记住这一点！
- en: The good part is that type hints are extremely easy to understand and easy to
    use. We have no excuse not to use them, and there are no perks in not doing so.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 好的一点是，类型提示非常容易理解和使用。我们没有理由不使用它们，而且不使用它们也没有任何好处。
- en: So, let’s go ahead and start seeing some code.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们继续并开始查看一些代码。
- en: 1\. First Overview
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. 首先概述
- en: I’ll be using Python 3.11, but most of the examples will work on previous versions
    of Python 3.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我将使用 Python 3.11，但大多数示例适用于之前的 Python 3 版本。
- en: 'Let’s use a sample and dummy function:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用一个示例和虚拟函数：
- en: '[PRE0]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This is stupid. But it has everything we need and we’ll be adding variations
    just now.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这很愚蠢。但它包含了我们需要的一切，我们现在将添加一些变体。
- en: We don’t have any type annotations here. Just a function that takes two parameters
    and returns a string. I’m sure you know that the `name` parameter is supposed
    to be a string while the parameter `age` is expected to be an integer (or float
    even).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们这里没有任何类型注解。只有一个接受两个参数并返回字符串的函数。我相信你知道 `name` 参数应该是字符串，而 `age` 参数则预期是整数（甚至是浮点数）。
- en: But you know it because it’s a really simple function. It’s hardly ever that
    simple. That’s why adding some hints might be wise.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 但你知道，因为这是一个非常简单的函数。很少会如此简单。这就是为什么添加一些提示可能是明智的。
- en: 'Here’s the update:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这是更新：
- en: '[PRE1]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'In this case, I specified `age` should be an integer. Let’s try to run the
    function:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我指定 `age` 应该是一个整数。让我们尝试运行这个函数：
- en: '[PRE2]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To illustrate what I said at the end of the previous section:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明我在上一节末尾说的内容：
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: It worked well even though 22.4 is a float (and not an integer which is expected).
    As said, these are just type hints, nothing more.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 即使22.4是浮点数（而不是预期的整数），它也工作得很好。如前所述，这些只是类型提示，仅此而已。
- en: Okay, basics covered. Let’s start making some variations.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，基础知识已经涵盖。让我们开始制作一些变体。
- en: 2\. Multiple Data Types
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. 多种数据类型
- en: 'Suppose we want to allow both integers and floats as data types for the age
    argument. We can do so using **Union**, from the typing module[4]:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们希望允许整数和浮点数作为年龄参数的数据类型。我们可以使用**Union**，来自 typing 模块[4]：
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'It’s simple: `Union[int, float]` means that we expect either an integer or
    a float.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 很简单：`Union[int, float]` 表示我们期望值是整数或浮点数。
- en: 'However, if you find yourself using Python 3.10 or higher, there’s another
    approach you can use to do the same without even using Union:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果你使用的是 Python 3.10 或更高版本，还有另一种方法可以在不使用 Union 的情况下实现相同功能：
- en: '[PRE5]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: It’s just a simple OR operator. Easier to understand in my opinion.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是一个简单的 OR 运算符。在我看来，更容易理解。
- en: 3\. Advanced Data Types
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. 高级数据类型
- en: 'Suppose now we were to play with more complex parameters such as dictionaries
    or lists. Let’s now use the next function, which uses the `meet_someone` function:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在假设我们要处理更复杂的参数，比如字典或列表。接下来我们使用下一个函数，它使用了`meet_someone`函数：
- en: '[PRE6]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This is a really simple function still, but now the argument might not be as
    clear as we previously saw. If you actually inspect the code, you’ll see we expect
    a dictionary.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这仍然是一个非常简单的函数，但现在参数可能不像我们之前看到的那样清晰。如果你实际检查代码，你会看到我们期望的是一个字典。
- en: But wouldn’t it be better if we didn’t have to guess? Again, that’s the power
    of type hints.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 但如果我们不需要猜测会不会更好？这就是类型提示的力量。
- en: 'At this point, if I asked you to add type hints yourself, you’d probably be
    doing something like this:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止，如果我让你自己添加类型提示，你可能会做这样的事情：
- en: '[PRE7]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This is good. But we’re not using its full potential. We’re specifying we want
    a `dict` here but not the types of its keys and values. Here’s an improved version:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这很好。但是我们还没有充分利用它的全部潜力。我们在这里指定了想要一个`dict`，但没有指定它的键和值的类型。这是一个改进版：
- en: '[PRE8]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Here, we’re saying that we expect `people` to be a dictionary with keys as
    strings and values as integers. Something like `{''Pol'': 23, ''Marc'': 21}`.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '在这里，我们说我们期望`people`是一个字典，键是字符串，值是整数。类似于`{''Pol'': 23, ''Marc'': 21}`。'
- en: But remember that we want to accept ages as either integers or floats…
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 但记住我们想要接受年龄为整数或浮点数…
- en: '[PRE9]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: We can just use what we learned in section 2! Cool huh?
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以直接使用我们在第2部分学到的内容！很酷吧？
- en: 'Oh, and it doesn’t just work on the built-in data types. You can use any data
    type you want. For example, imagine we want a list of Pandas data frames for a
    function that doesn’t return anything:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 哦，它不仅适用于内置数据类型。你可以使用任何你想要的数据类型。例如，假设我们想要一个Pandas数据框的列表，用于一个不返回任何东西的函数：
- en: '[PRE10]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: What I did here was declare the data type, which is just a list of data frames,
    and use it as a type hint.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我在这里做的是声明数据类型，它只是一个数据框的列表，并将其用作类型提示。
- en: Also, something we haven’t seen before today, this function doesn't return anything.
    That’s why the output data type is None.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有我们今天之前没有见过的，这个函数不会返回任何东西。这就是为什么输出数据类型是None。
- en: 4\. The Optional Operator
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4. Optional运算符
- en: It’s often that we create functions in which some arguments aren’t required
    — they’re optional.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们经常创建一些参数不是必需的——它们是可选的。
- en: 'Given all we’ve seen until now, here’s how we could code a function with optional
    parameters:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经了解了这些，下面是如何编写一个带有可选参数的函数：
- en: '[PRE11]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'I’ve updated the returned message but the important part is the type hint for
    the last parameter, `last_name`. See how here I’m saying: “`last_name` is either
    a string or a Null value. It’s optional and by default, it’s a None.”'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经更新了返回的消息，但重要的部分是最后一个参数`last_name`的类型提示。看看我这里怎么说：“`last_name`要么是一个字符串，要么是一个Null值。它是可选的，默认情况下是None。”
- en: This is cool and pretty intuitive, but imagine a parameter with several possible
    data types… It can get very long.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这很酷，也很直观，但想象一下一个参数有几种可能的数据类型……这可能会很长。
- en: 'That’s why the Optional operator is useful here, it basically allows us to
    skip the `None` hint:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么Optional运算符在这里很有用，它基本上允许我们跳过`None`提示：
- en: '[PRE12]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Conclusion & Next Steps
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论与下一步
- en: I hope I’ve transmitted how useful type hints are to improve the readability
    and comprehension of our codes. Not just for our fellow programmers, but for our
    future selves too!
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望我已经传达了类型提示在提高代码可读性和理解方面的有用性。不仅仅是为了我们的同事程序员，也是为了我们未来的自己！
- en: I’ve covered the basics here, but I suggest you keep inspecting what the typing
    module offers. There are several classes there that can make your code look better
    than ever.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经介绍了基础知识，但我建议你继续查看typing模块提供的内容。那里有几类可以让你的代码看起来更好。
- en: '[PRE13]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'If you’d like to support me further, consider subscribing to Medium’s Membership
    through the link you find below: it won’t cost you any extra penny but will help
    me through this process.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想进一步支持我，请考虑通过下面的链接订阅Medium会员：这不会花费你额外的钱，但会帮助我完成这个过程。
- en: '[](https://medium.com/@polmarin/membership?source=post_page-----1c096f44f375--------------------------------)
    [## Join Medium with my referral link - Pol Marin'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@polmarin/membership?source=post_page-----1c096f44f375--------------------------------)
    [## 通过我的推荐链接加入Medium - Pol Marin'
- en: Read every story from Pol Marin (and thousands of other writers on Medium).
    Your membership fee directly supports Pol…
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阅读Pol Marin的每一篇故事（以及Medium上成千上万其他作家的文章）。你的会员费用直接支持Pol…
- en: medium.com](https://medium.com/@polmarin/membership?source=post_page-----1c096f44f375--------------------------------)
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '[medium.com](https://medium.com/@polmarin/membership?source=post_page-----1c096f44f375--------------------------------)'
- en: Resources
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 资源
- en: '[1] [PEP 8 — Style Guide for Python Code](https://peps.python.org/pep-0008/)
    | peps.python.org'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] [PEP 8 — Python 代码风格指南](https://peps.python.org/pep-0008/) | peps.python.org'
- en: '[2] [3107 — Function Annotations](https://peps.python.org/pep-3107/)| peps.python.org'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] [3107 — 函数注解](https://peps.python.org/pep-3107/) | peps.python.org'
- en: '[3] [484 — Type Hints| peps.python.org](https://peps.python.org/pep-0484/)'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[3] [484 — 类型提示 | peps.python.org](https://peps.python.org/pep-0484/)'
- en: '[4] [typing — Support for type hints](https://docs.python.org/3/library/typing.html)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[4] [typing — 对类型提示的支持](https://docs.python.org/3/library/typing.html)'
