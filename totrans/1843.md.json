["```py\nSELECT year, country_name, life_ladder,\n  AVG(life_ladder) OVER (\n    PARTITION BY country_name\n    ORDER BY year\n    ROWS BETWEEN 2 PRECEDING AND CURRENT ROW\n  ) AS rolling_average\nFROM public.happiness_index; \n```", "```py\nSELECT year, country_name, life_ladder,\nAVG(life_ladder) OVER (\n    PARTITION BY country_name\n    ORDER BY year\n    ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW\n  ) AS rolling_average\nFROM public.happiness_index\n```", "```py\nSELECT \n  year, \n  country_name, \n  life_ladder, \n  100 * (life_ladder - AVG(life_ladder) OVER (PARTITION BY country_name ORDER BY year ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) / AVG(life_ladder) OVER (PARTITION BY country_name ORDER BY year ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS percentage_change\nFROM \n  public.happiness_index\n```", "```py\nSELECT country_name, regional_indicator, log_gdppercapita,\n  round((PERCENT_RANK() OVER (\n    PARTITION BY regional_indicator\n    ORDER BY log_gdppercapita\n  ))::numeric,2) AS percentile_rank\nFROM public.happiness_index\nwhere year = 2008;\n```", "```py\nSELECT year, \nROUND(AVG(CASE WHEN regional_indicator LIKE '%Asia%' THEN life_ladder \n  ELSE null END)::numeric,2) AS Asia, \nROUND(AVG(CASE WHEN regional_indicator LIKE '%Europe%' THEN life_ladder \n  ELSE null END)::numeric,2) AS Europe, \nround(AVG(CASE WHEN regional_indicator LIKE '%Africa%' THEN life_ladder \n  ELSE null END)::numeric,2) AS Africa,\nround(AVG(CASE WHEN regional_indicator LIKE '%America%' THEN life_ladder \n  ELSE null END)::numeric,2) AS America\nFROM public.happiness_index\nGROUP BY 1\nORDER BY 1\n```", "```py\nWITH tbl AS \n(SELECT year, \nROUND(AVG(CASE WHEN regional_indicator LIKE '%Asia%' THEN life_ladder \n  ELSE null END)::numeric,2) AS Asia, \nROUND(AVG(CASE WHEN regional_indicator LIKE '%Europe%' THEN life_ladder \n  ELSE null END)::numeric,2) AS Europe, \nround(AVG(CASE WHEN regional_indicator LIKE '%Africa%' THEN life_ladder \n  ELSE null END)::numeric,2) AS Africa,\nround(AVG(CASE WHEN regional_indicator LIKE '%America%' THEN life_ladder \n  ELSE null END)::numeric,2) AS America\nFROM public.happiness_index\nGROUP BY 1\nORDER BY 1)\n\nSELECT year, \n'Asia' AS region\n, asia AS avg_life_ladder\nFROM tbl\n    UNION ALL\nSELECT year, \n'Europe' AS region\n, europe AS avg_life_ladder\nFROM tbl\n    UNION ALL\nSELECT year, \n'Africa' AS region\n,africa AS avg_life_ladder\nFROM tbl\n    UNION ALL\nSELECT year, \n'America' AS region\n, america AS avg_life_ladder\nFROM tbl\n;\n```", "```py\nWITH tbl AS \n(SELECT year, \nROUND(AVG(CASE WHEN regional_indicator LIKE '%Asia%' THEN life_ladder \n  ELSE null END)::numeric,2) AS Asia, \nROUND(AVG(CASE WHEN regional_indicator LIKE '%Europe%' THEN life_ladder \n  ELSE null END)::numeric,2) AS Europe, \nround(AVG(CASE WHEN regional_indicator LIKE '%Africa%' THEN life_ladder \n  ELSE null END)::numeric,2) AS Africa,\nround(AVG(CASE WHEN regional_indicator LIKE '%America%' THEN life_ladder \n  ELSE null END)::numeric,2) AS America\nFROM public.happiness_index\nGROUP BY 1\nORDER BY 1)\n\nSELECT \nyear, \nUNNEST(ARRAY['Asia', 'Europe', 'Africa', 'Ameria']) AS region,\nUNNEST(ARRAY[asia, europe, africa, america]) AS life_ladder\nFROM tbl\n;\n```", "```py\nSELECT * FROM crosstab(\n  'SELECT year, region, round(AVG(life_ladder)::NUMERIC,2)::FLOAT as life_ladder\n   FROM (SELECT *, \nCASE WHEN regional_indicator LIKE ''%Asia%'' THEN ''Asia''  \n     WHEN regional_indicator LIKE ''%Europe%'' THEN ''Europe''  \n     WHEN regional_indicator LIKE ''%Africa%'' THEN ''Africa'' \n     WHEN regional_indicator LIKE ''%America%'' THEN ''America'' \n  ELSE ''Commonwealth_of_Independent_States'' END AS region\nFROM public.happiness_index) a\n  GROUP BY 1,2\n   ORDER BY 1, 2') AS region_life_ladder (year int, Asia FLOAT, Europe FLOAT, Africa FLOAT, America FLOAT, Commonwealth_of_Independent_States FLOAT)\n```"]