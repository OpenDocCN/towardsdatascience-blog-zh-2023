- en: Test Data Pipelines the Fun and Easy Way
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 以有趣和简单的方式测试数据管道
- en: 原文：[https://towardsdatascience.com/test-data-pipelines-the-fun-and-easy-way-d0f974a93a59](https://towardsdatascience.com/test-data-pipelines-the-fun-and-easy-way-d0f974a93a59)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/test-data-pipelines-the-fun-and-easy-way-d0f974a93a59](https://towardsdatascience.com/test-data-pipelines-the-fun-and-easy-way-d0f974a93a59)
- en: 'Beginners guide: Why unit and integration tests are so important for your data
    platform'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 初学者指南：为什么单元测试和集成测试对你的数据平台如此重要
- en: '[](https://mshakhomirov.medium.com/?source=post_page-----d0f974a93a59--------------------------------)[![💡Mike
    Shakhomirov](../Images/bc6895c7face3244d488feb97ba0f68e.png)](https://mshakhomirov.medium.com/?source=post_page-----d0f974a93a59--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d0f974a93a59--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d0f974a93a59--------------------------------)
    [💡Mike Shakhomirov](https://mshakhomirov.medium.com/?source=post_page-----d0f974a93a59--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://mshakhomirov.medium.com/?source=post_page-----d0f974a93a59--------------------------------)[![💡Mike
    Shakhomirov](../Images/bc6895c7face3244d488feb97ba0f68e.png)](https://mshakhomirov.medium.com/?source=post_page-----d0f974a93a59--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d0f974a93a59--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d0f974a93a59--------------------------------)
    [💡Mike Shakhomirov](https://mshakhomirov.medium.com/?source=post_page-----d0f974a93a59--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d0f974a93a59--------------------------------)
    ·10 min read·Feb 22, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d0f974a93a59--------------------------------)
    ·阅读时间10分钟·2023年2月22日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/ec79de49e60c28a7517c3d1f8392b35b.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ec79de49e60c28a7517c3d1f8392b35b.png)'
- en: Photo by [Simon Wilkes](https://unsplash.com/@simonfromengland?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 照片来自 [Simon Wilkes](https://unsplash.com/@simonfromengland?utm_source=medium&utm_medium=referral)
    在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: This story is for those who would like to learn how to code and how to run **tests,
    automate CI/CD checks and run them in any environment including locally.**
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这个故事适合那些希望学习如何编写代码以及如何运行 **测试、自动化 CI/CD 检查并在包括本地在内的任何环境中运行它们的人。**
- en: '**Unit testing** is an essential must-have skill for machine learning engineers
    these days. It looks great on your CV and increases the chances of getting employed.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**单元测试** 现在是机器学习工程师必备的技能。这在你的简历上看起来很棒，并且提高了就业的机会。'
- en: 'I’m a Data Engineer and very often I need to create microservices **to process
    the data (ETL).** Depending on the task we might want to do the following (not
    an extensive list):'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我是一个数据工程师，通常需要创建微服务 **来处理数据（ETL）。** 根据任务的不同，我们可能会做以下工作（不是详尽无遗的列表）：
- en: Extract data from one source and pass it to another.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从一个源提取数据并将其传递到另一个源。
- en: Transform the data along the way, i.e. change format, PII masking, etc.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在处理数据的过程中进行转换，例如：更改格式、个人信息遮蔽等。
- en: Load the data somewhere else, i.e. data warehouse solution.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将数据加载到其他地方，例如数据仓库解决方案。
- en: In each of these cases, we would want to guarantee that our data services perform
    as required, and as we make changes, automated tests are run to ensure logic consistency.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些情况下，我们希望保证我们的数据服务按要求执行，并且随着我们进行更改，会运行自动化测试以确保逻辑一致性。
- en: Simplify
  id: totrans-15
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 简化
- en: I use a simple atomic design for each part of the data pipeline I have in mind
    and deploy it with AWS Lambda or Cloud Functions (Google Cloud Platform). In this
    way, we can orchestrate it with ease and ML Ops becomes a trivial task.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用简单的原子设计来构建我构思中的数据管道的每个部分，并通过 AWS Lambda 或 Cloud Functions（Google Cloud Platform）进行部署。通过这种方式，我们可以轻松地进行编排，ML
    Ops 变得轻而易举。
- en: Types of tests
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试类型
- en: In unit testing code behaviour is tested using tiny, independent units, or unit
    tests.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在单元测试中，代码行为通过微小的、独立的单元或单元测试进行测试。
- en: 'So what we want to test depends on our microservice logic and infrastructure
    but in general it would be this:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要测试的内容取决于我们的微服务逻辑和基础设施，但通常是这样的：
- en: Simple **unit tests** for function logic, i.e. `processEvent()` function inside
    your microservice.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单的 **单元测试** 用于函数逻辑，例如你微服务中的 `processEvent()` 函数。
- en: We would want to make sure that this particular function returns the expected
    result consistently when we provide some input for it.
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们希望确保这个特定的函数在提供输入时始终返回预期的结果。
- en: '**Integration tests**'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**集成测试**'
- en: This would be the case when we need to test how our service works in conjunction
    with some other services, i.e. it sends a request and receives something back
    in return (response).
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将是我们需要测试服务如何与其他服务协同工作时的情况，即它发送请求并收到响应。
- en: What makes a good unit test?
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是好的单元测试？
- en: It should test expected vs actual results
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它应该测试预期结果与实际结果。
- en: Should describe the script’s logic corresponding to use cases.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应该描述脚本逻辑，以对应使用场景。
- en: It should be automated.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它应该是自动化的。
- en: Be Independent (tests should not do setup or teardown for one another)
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保持独立（测试不应相互进行设置或拆解）
- en: It should be easy to implement.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应该易于实现。
- en: 'Be Repeatable: Anyone should be able to run it in any environment.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保持可重复性：任何人都应该能够在任何环境中运行它。
- en: Once it’s written, it should remain for future use.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦编写完成，它应该保留以备将来使用。
- en: 'Let’s imagine a simple **scenario** where we were tasked to create a data pipeline
    to transfer the data from one cloud platform to another, i.e. from GCP to AWS
    and do some ETL along the way:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们设想一个简单的 **场景**，我们被要求创建一个数据管道，将数据从一个云平台转移到另一个云平台，例如从 GCP 转移到 AWS，并在过程中进行一些
    ETL 操作：
- en: '![](../Images/11aeb1ce49ace677c1fd6ed88456ca37.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/11aeb1ce49ace677c1fd6ed88456ca37.png)'
- en: Service architecture with tests. Image by author.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 服务架构及测试。图片由作者提供。
- en: We can create a simple **microservice** with AWS Lambda or Cloud Functions that
    will process that pipeline.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 AWS Lambda 或 Cloud Functions 创建一个简单的 **微服务** 来处理该管道。
- en: This can be anything pipeline wise and this way we can deploy as many data pipelines
    as we need.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以是任何管道，采用这种方式我们可以根据需要部署任意数量的数据管道。
- en: '[](/data-pipeline-design-patterns-100afa4b93e3?source=post_page-----d0f974a93a59--------------------------------)
    [## Data pipeline design patterns'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/data-pipeline-design-patterns-100afa4b93e3?source=post_page-----d0f974a93a59--------------------------------)
    [## 数据管道设计模式'
- en: Choosing the right architecture with examples
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择合适的架构示例
- en: towardsdatascience.com](/data-pipeline-design-patterns-100afa4b93e3?source=post_page-----d0f974a93a59--------------------------------)
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/data-pipeline-design-patterns-100afa4b93e3?source=post_page-----d0f974a93a59--------------------------------)
- en: Creating a data service
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建数据服务
- en: This will be a simple atomic design for a serverless microservice to perform
    one single operation.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这将是一个简单的原子设计，用于执行单一操作的无服务器微服务。
- en: If you are a Python user don’t worry, I have a similar story in Python on how
    to write **integration** tests with **Python** and **AWS Lambda. Anyways this
    story is just to demonstrate how to perform tests for your data pipelines.**
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是 Python 用户，不必担心，我有一个类似的故事，讲述如何用 **Python** 和 **AWS Lambda** 编写 **集成** 测试。不过，这个故事只是为了展示如何为你的数据管道执行测试。**
- en: Let’s create our service…
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建我们的服务……
- en: 'In your command line run:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在命令行中运行：
- en: '[PRE0]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '*Now we can open it in the code editor and start coding…*'
  id: totrans-46
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*现在我们可以在代码编辑器中打开它并开始编码……*'
- en: Our App structure
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们的应用结构
- en: '[PRE1]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Let’s create our `app.js`
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建我们的 `app.js`
- en: '[PRE2]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Simple, right? We are learning to code. Let’s start with simple things and we
    can always add lots of other useful features later.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 简单，对吧？我们正在学习编码。让我们从简单的事情开始，之后总是可以添加许多其他有用的功能。
- en: To *initialise* your App you can run `npm init` or simply copy my package.json
    file and then run `npm install` command.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 要 *初始化* 你的应用，你可以运行 `npm init` 或简单地复制我的 package.json 文件，然后运行 `npm install` 命令。
- en: 'These are the packages we are going to use:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是我们将要使用的包：
- en: '[PRE3]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Again, it is simple, right? Indeed, we are going to use only what’s necessary
    moving
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，这很简单，对吧？实际上，我们只会使用必要的内容继续前进。
- en: '`aws-sdk` to devDependencies so it will never go into our Lambda package zip.
    AW services use this package by default in their `runtime` and there is no need
    to install it.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`aws-sdk`添加到开发依赖中，这样它就不会进入我们的 Lambda 包 zip。AW 服务默认使用此包，在其`runtime`中没有必要单独安装。'
- en: '`eslint`- related packages are good for development and there is no need to
    explain why.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`eslint` 相关包适用于开发，不需要解释原因。'
- en: '*it makes your code look nice and consistent.*'
  id: totrans-58
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*这使你的代码看起来既漂亮又一致。*'
- en: '`run-local-lambda` is just an alternative to run lambda locally for demonstration
    purposes.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`run-local-lambda` 只是一个用于本地演示目的的 Lambda 运行替代方案。'
- en: '`mocha` & `chai` is finally what we need for testing.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mocha` 和 `chai` 是我们最终需要的测试工具。'
- en: Add an event to invoke the service
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加一个事件以触发服务
- en: Our data engineering jobs/tasks to run will be coming from the `event` that
    will invoke our service. This event can be fired by another data service, i.e.
    orchestrator Lambda or AWS Cloudwatch to run it simply on a schedule.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的数据工程任务将来自于触发我们服务的`event`。这个事件可以由另一个数据服务触发，例如 orchestrator Lambda 或 AWS Cloudwatch，以便按计划运行。
- en: 'Let''s create `./test/event.js` i.e.:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建 `./test/event.js` 即：
- en: '[PRE4]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In this example, we define a job configuration to move data from one cloud to
    another, i.e. from Google Cloud Storage to AWS S3\. This is a trivial task in
    data engineering performed almost daily. We also supply `configOverride` parameter
    to tell our service whether we want to use a custom event or the one defined in
    the config file. For example, it can be a task that has to be run daily, hourly,
    etc.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们定义了一个作业配置，以将数据从一个云服务迁移到另一个，即从 Google Cloud Storage 到 AWS S3。这是数据工程中几乎每天都要执行的简单任务。我们还提供
    `configOverride` 参数，以告诉我们的服务是否使用自定义事件或配置文件中定义的事件。例如，它可以是需要每天、每小时等运行的任务。
- en: Add processEvent() function
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加 processEvent() 函数
- en: Now let’s add `processEvent()` function. It will do something simple with event
    data, i.e. return current `DATE`
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们添加 `processEvent()` 函数。它将对事件数据做一些简单的处理，即返回当前 `DATE`
- en: '[PRE5]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now let’s add this to our app.js:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们将这段代码添加到 `app.js`：
- en: '[PRE6]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'And finally, let’s add a new script to our `package.json` file to use `run-local-lambda`
    with event supplied from `./test/event.json` :'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们在 `package.json` 文件中添加一个新脚本，以便使用来自 `./test/event.json` 的事件运行 `run-local-lambda`：
- en: '[PRE7]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Now we can run `npm run local` in our command line to test Lambda locally:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以在命令行中运行 `npm run local` 来本地测试 Lambda：
- en: '![](../Images/88786befe1a55274437424c3438e6bd3.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/88786befe1a55274437424c3438e6bd3.png)'
- en: Image by author.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: So we see that it works and Lambda returns something when we run it locally.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们看到它在本地运行时工作正常并返回了一些内容。
- en: That’s great news but how do we `unit-test` it?
  id: totrans-77
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这真是个好消息，但我们如何进行 `unit-test`？
- en: Use Mocha and Chai to unit test our data service
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Mocha 和 Chai 对我们的数据服务进行单元测试
- en: '![](../Images/9ab5af6af672ddc9d7aea1caee5a2b88.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9ab5af6af672ddc9d7aea1caee5a2b88.png)'
- en: First of all, why use `mocha` and `chai`?
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，为什么使用 `mocha` 和 `chai`？
- en: '**Mocha** is a great framework for testing where we can run all tests from
    the test folder recursively, i.e. `npm run test` will run `test1.js`, `test2.js`,...,
    `testN.js`. It enables the following:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**Mocha** 是一个出色的测试框架，我们可以递归地运行测试文件夹中的所有测试，即 `npm run test` 将运行 `test1.js`、`test2.js`、...、`testN.js`。它实现了以下功能：'
- en: use of any assertion library (this is where we will use Chai)
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用任何断言库（这就是我们将使用 Chai 的地方）
- en: asynchronous testing
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 异步测试
- en: test coverage reports
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试覆盖率报告
- en: '**Chai** is an assertion library for NodeJS that can be paired with Mocha to
    raise assertions in our tests.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**Chai** 是一个 NodeJS 的断言库，可以与 Mocha 配合使用，以在我们的测试中提出断言。'
- en: '![](../Images/1536452ca32105a5410fd8973ca0fb67.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1536452ca32105a5410fd8973ca0fb67.png)'
- en: Image by author.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: Let’s add a couple of unit tests. One will test that Lambda return results with
    `runTime` and the second one will check that Lambda returns a response with the
    correct status codes.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们添加几个单元测试。一个将测试 Lambda 是否返回带有 `runTime` 的结果，另一个将检查 Lambda 是否返回具有正确状态码的响应。
- en: 'Let’s create `stack/js-lambda-unit-tests/test/unit/runTimeTest.js` :'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建 `stack/js-lambda-unit-tests/test/unit/runTimeTest.js`：
- en: '[PRE8]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now let’s add this single unit test to scripts in our `package.json` as sometimes
    we might need to run only one test:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们将这个单元测试添加到 `package.json` 的脚本中，因为有时我们可能只需要运行一个测试：
- en: '[PRE9]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Now if we run in the command line `npm run test-lambda-runtime`
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在如果我们在命令行中运行 `npm run test-lambda-runtime`
- en: '![](../Images/b90c204b93c5c9c86a80781e223f90d0.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b90c204b93c5c9c86a80781e223f90d0.png)'
- en: Image by author.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: Now let’s add the second test but now we would want to add new behaviour to
    our lambda, i.e.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们添加第二个测试，但这次我们希望给我们的 lambda 添加新行为，即：
- en: it must return status `400` on error.
  id: totrans-97
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 它在出错时必须返回状态 `400`。
- en: 'To emulate the error we will supply an event with a missing job `name`. Our
    `./test/unit/lambdaResponseTest.js` should look like that:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 为了模拟错误，我们将提供一个缺少作业 `name` 的事件。我们的 `./test/unit/lambdaResponseTest.js` 应该是这样的：
- en: '[PRE10]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'And let’s add error handling to our `app.js`:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在 `app.js` 中添加错误处理：
- en: '[PRE11]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'So the final `app.js` must look like so:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 所以最终的 `app.js` 应该是这样的：
- en: '[PRE12]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now let’s change our package.json scripts to this:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们将 `package.json` 脚本更改为以下内容：
- en: '[PRE13]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '```'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'You probably noticed a new script to run commands recursively in `./test/unit`
    folder. `npm run test-unit` will run all tests:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能注意到了一个新的脚本，用于递归运行 `./test/unit` 文件夹中的命令。 `npm run test-unit` 将运行所有测试：
- en: '![](../Images/ec9de236f8b5ed0d7aa6eb3f7ce82a83.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ec9de236f8b5ed0d7aa6eb3f7ce82a83.png)'
- en: Image by author.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: 'You probably noticed an integration test script in `package.json` More about
    integration tests can be found here:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能注意到 `package.json` 中有一个集成测试脚本。有关集成测试的更多信息可以在这里找到：
- en: '[](https://mydataschool.com/blog/data-platform-unit-and-integration-tests-explained/?source=post_page-----d0f974a93a59--------------------------------)
    [## Data Platform Unit and Integration Tests Explained'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://mydataschool.com/blog/data-platform-unit-and-integration-tests-explained/?source=post_page-----d0f974a93a59--------------------------------)
    [## 数据平台单元测试和集成测试解释'
- en: How to do this exercise and how to apply it to our data pipelines? This is a
    good question I asked myself at the very…
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何进行这个练习以及如何将其应用于我们的数据管道？这是我在非常初期时问自己的一个好问题……
- en: mydataschool.com](https://mydataschool.com/blog/data-platform-unit-and-integration-tests-explained/?source=post_page-----d0f974a93a59--------------------------------)
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: mydataschool.com](https://mydataschool.com/blog/data-platform-unit-and-integration-tests-explained/?source=post_page-----d0f974a93a59--------------------------------)
- en: An integration test is when we test how our application interacts with something
    else, i.e. another service or API.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 集成测试是指测试我们的应用程序如何与其他东西互动，即另一个服务或 API。
- en: Conclusion
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In data engineering and machine learning, tests are frequently used to ensure
    that new code changes do not create unintended modifications and to assist describe
    the fundamental core functionality of the data platform.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据工程和机器学习中，测试常常用于确保新代码更改不会引入意外修改，并帮助描述数据平台的基本核心功能。
- en: It is a must-have skill for any machine learning engineer. Getting used to reading
    tests might be uncomfortable but you’ll benefit from developing it today throughout
    your path into coding!
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何机器学习工程师来说，这是一个必备技能。习惯于阅读测试可能会让人不舒服，但你会受益于今天开始培养这项技能。
- en: It looks great on every CV and the idea is the same for any programming language.
    Make sure you add **Pytest**, Mocha, Chai, Sinon and things like Mock to your
    testing tools.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在每份简历上看起来都很棒，并且任何编程语言的理念都是相同的。确保你将**Pytest**、Mocha、Chai、Sinon及类似Mock的工具添加到你的测试工具中。
- en: Github repository
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Github 仓库
- en: '[https://github.com/mshakhomirov/js-lambda-unit-tests.git](https://github.com/mshakhomirov/js-lambda-unit-tests.git)'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/mshakhomirov/js-lambda-unit-tests.git](https://github.com/mshakhomirov/js-lambda-unit-tests.git)'
- en: Recommended read
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 推荐阅读
- en: '[https://mochajs.org/](https://mochajs.org/)'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://mochajs.org/](https://mochajs.org/)'
- en: '[https://www.chaijs.com/api/bdd/](https://www.chaijs.com/api/bdd/)'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://www.chaijs.com/api/bdd/](https://www.chaijs.com/api/bdd/)'
- en: '[https://stackoverflow.com/questions/52019039/how-to-test-aws-lambda-handler-locally-using-nodejs](https://stackoverflow.com/questions/52019039/how-to-test-aws-lambda-handler-locally-using-nodejs)'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://stackoverflow.com/questions/52019039/how-to-test-aws-lambda-handler-locally-using-nodejs](https://stackoverflow.com/questions/52019039/how-to-test-aws-lambda-handler-locally-using-nodejs)'
- en: '[https://stackoverflow.com/questions/54846513/lambda-trigger-callback-vs-context-done](https://stackoverflow.com/questions/54846513/lambda-trigger-callback-vs-context-done)'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://stackoverflow.com/questions/54846513/lambda-trigger-callback-vs-context-done](https://stackoverflow.com/questions/54846513/lambda-trigger-callback-vs-context-done)'
- en: '[http://opensourceforgeeks.blogspot.com/2019/03/writing-unit-tests-for-aws-lambda-in.html](http://opensourceforgeeks.blogspot.com/2019/03/writing-unit-tests-for-aws-lambda-in.html)'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[http://opensourceforgeeks.blogspot.com/2019/03/writing-unit-tests-for-aws-lambda-in.html](http://opensourceforgeeks.blogspot.com/2019/03/writing-unit-tests-for-aws-lambda-in.html)'
- en: '[https://dashbird.io/blog/test-javascript-lambda-functions/](https://dashbird.io/blog/test-javascript-lambda-functions/)'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://dashbird.io/blog/test-javascript-lambda-functions/](https://dashbird.io/blog/test-javascript-lambda-functions/)'
- en: '[https://docs.aws.amazon.com/lambda/latest/dg/nodejs-context.html](https://docs.aws.amazon.com/lambda/latest/dg/nodejs-context.html)'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://docs.aws.amazon.com/lambda/latest/dg/nodejs-context.html](https://docs.aws.amazon.com/lambda/latest/dg/nodejs-context.html)'
- en: '[https://www.google.com/search?client=firefox-b-d&q=aws+lambda+test+TypeError%3A+context.done+is+not+a+function](https://www.google.com/search?client=firefox-b-d&q=aws+lambda+test+TypeError%3A+context.done+is+not+a+function)'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://www.google.com/search?client=firefox-b-d&q=aws+lambda+test+TypeError%3A+context.done+is+not+a+function](https://www.google.com/search?client=firefox-b-d&q=aws+lambda+test+TypeError%3A+context.done+is+not+a+function)'
