["```py\npip install upgini\n```", "```py\nimport pandas as pd\nimport numpy as np\n\n# read full data\ndf_full = pd.read_csv(\"/content/Reviews.csv\")\n# convert Time to datetime column\ndf_full['Time'] = pd.to_datetime(df_full['Time'], unit='s')\n# re-order columns\n0df_full = df_full[['Time', 'ProfileName', 'Summary', 'Text', 'HelpfulnessNumerator', 'HelpfulnessDenominator', 'Score' ]]\n```", "```py\ndf_full = df_full[(df_full['HelpfulnessDenominator'] > 10) & \n                  (df_full['Time'] >= '2011-01-01')]\n```", "```py\ndf_full.loc[:, 'Helpful'] = np.where(df_full.loc[:, 'HelpfulnessNumerator'] / df_full.loc[:, 'HelpfulnessDenominator'] > 0.50, 1, 0)\n```", "```py\ndf_full[\"combined\"] = f\"Title: {df_full['Summary'].str.strip()} ; Content: {df_full['Text'].str.strip()}\"\ndf_full.drop(['Summary', 'Text', 'HelpfulnessNumerator', 'HelpfulnessDenominator' ], axis=1, inplace=True)\ndf_full.drop_duplicates(subset=['combined'], inplace=True)\ndf_full.reset_index(drop=True, inplace=True)\n```", "```py\nfrom upgini import FeaturesEnricher, SearchKey\n```", "```py\nenricher = FeaturesEnricher(search_keys={'Time': SearchKey.DATE})\nenricher.fit(df_full[['Time', 'ProfileName', 'Score', 'combined']], df_full['Helpful'])\n```", "```py\nenricher = FeaturesEnricher(\n    search_keys={'Time': SearchKey.DATE}, \n    generate_features=['combined', 'ProfileName']\n    )\nenricher.fit(df_full[['Time','ProfileName','Score','combined']], df_full['Helpful'])\n```", "```py\ndf_full_enrich = enricher.transform(df_full)\n```"]