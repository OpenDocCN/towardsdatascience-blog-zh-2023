- en: Single Python package to cover 99% of your Path needs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/single-python-package-to-cover-99-of-your-path-needs-babdaf30a1a0](https://towardsdatascience.com/single-python-package-to-cover-99-of-your-path-needs-babdaf30a1a0)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Pathlib: the library you have always dreamed of'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@arli94?source=post_page-----babdaf30a1a0--------------------------------)[![Arli](../Images/7027413407fa83ce2f9b3d7e9cb008e8.png)](https://medium.com/@arli94?source=post_page-----babdaf30a1a0--------------------------------)[](https://towardsdatascience.com/?source=post_page-----babdaf30a1a0--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----babdaf30a1a0--------------------------------)
    [Arli](https://medium.com/@arli94?source=post_page-----babdaf30a1a0--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----babdaf30a1a0--------------------------------)
    ·5 min read·Jan 12, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '*If you like to experience Medium yourself, consider supporting me and thousands
    of other writers by* [***signing up for a membership***](https://medium.com/@arli94/membership)*.
    It only costs $5 per month, it supports us, writers, greatly, and you get to access
    all the amazing stories on Medium.*'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3c0a5685f8c3c20cb4214c4c801e2afd.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Alice Donovan Rouse](https://unsplash.com/@alicekat?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Manipulating paths is a fundamental task in any production project. You may
    need to load files from distant servers that conform to a specific pattern, move
    or store different processed files and versions across your pipeline, or simply
    read or write files.
  prefs: []
  type: TYPE_NORMAL
- en: 'For all of these steps, you will encounter the manipulation of paths. Often,
    you will find yourself repeatedly searching the internet for solutions to common
    problems such as:'
  prefs: []
  type: TYPE_NORMAL
- en: '*how do I get all files from a folder?*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*how to check if a folder exists?*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*how to create a folder in Python?*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: While the answers to these questions are easy to find, what you will encounter
    is an inconsistency of code throughout your pipeline. One part of the code may
    use `os.path`, another may use `shutil`, and another may use `glob` ..
  prefs: []
  type: TYPE_NORMAL
- en: In order to avoid this inconsistency, I recommend you using the `pathlib` module,
    which offers a consistent way of working with paths across different operating
    systems and provides an object-oriented interface, making it more readable, simpler
    and more consistent than `os.path` or `shutil` module.
  prefs: []
  type: TYPE_NORMAL
- en: pathlib and Path object
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '`pathlib` is a module that simplifies working with file paths in Python. It
    provides a `Path` class that represents a file or directory path, and offers a
    range of methods for performing various operations on paths.'
  prefs: []
  type: TYPE_NORMAL
- en: One key advantage of `pathlib` is its object-oriented approach to working with
    paths. Instead of using separate functions to manipulate paths as strings, `pathlib`
    provides a single `Path` class with a range of methods that can be used to perform
    various operations on a path. This makes it easier to understand and work with
    paths, as all the relevant functionality is contained within a single object.
  prefs: []
  type: TYPE_NORMAL
- en: Another advantage of `pathlib` is its unified interface for working with paths.
    It provides a single set of methods that can be used to perform various operations
    on different types of paths, such as local file paths, FTP/SFTP paths, and more.
    This makes it easier to write code that works with different types of paths, as
    you don't have to use different functions or libraries for each type of path.
  prefs: []
  type: TYPE_NORMAL
- en: 'To show you how to manipulate all the functions later, we will need to define
    a path that is pointing to *“origin/data/for_arli”,* let’s do it by defining one
    `Path` object:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: You are set to work with the methods of `Path` objects and you will see, it
    is super simple.
  prefs: []
  type: TYPE_NORMAL
- en: Path existence and type
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In many situations, we want to check if a folder or a file is available in a
    given path, and if it does not exist we want to operate a certain operation like
    raising an Error.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: This code will check if the path `*'origin/data/for_arli'*` exists, and if it
    does, it will check whether it is a file or a directory. If the path does not
    exist, it will print a raise an Error indicating that the path does not exist.
  prefs: []
  type: TYPE_NORMAL
- en: File and directory operations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Suppose now that we are interested in listing all the files/folders from the
    path, we can do it with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: It will iterate through the path and print every file or folder that is in it.
    You could use it in combination with the previous `is_dir()` and `is_file()` methods
    to list either files or directories.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now suppose that we want to erase the path we can do it with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: As you notice, this command will only work if the path is empty.
  prefs: []
  type: TYPE_NORMAL
- en: 'Therefore you will need a method to remove all the files from a folder before:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Here we are removing the files that are in the path with `unlink()`. Now you
    can remove the folder without any issue with `rmdir()`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Oh and if you want to recreate the folder:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Notice that `mkdir()` has very useful arguments like:'
  prefs: []
  type: TYPE_NORMAL
- en: '*parents=True* to create any missing parents of the path'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*exists=True* if the folder already exists, will ignore any Errors'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'You could also rename the file or directory with the command below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Manipulation and information
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'One of the most used methods of `Path` is surely `joinpath()` to concatenate
    the path with string (it also handles the join between two `Path` objects):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'You could also sometimes want some crucial information on your files or folders
    like statistics (creation time, modification time) or owners (user or group).
    For that, you can use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Input/Ouput
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It is also possible to use `pathlib` to either read or write files.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `open()` method is used to open a file at the specified path and return
    a file object. This method works similarly to the built-in `open()`: You can use
    the file object to read or write to the file. Here is an example of writing a
    file with `write()` method from `Path`.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Notice that you do not need to create manually *example.txt.*
  prefs: []
  type: TYPE_NORMAL
- en: 'For the read operation, the principle is the same, but with the method `read()`
    :'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Overall, `pathlib` is a useful library for Python developers as it provides
    an object-oriented interface for representing file paths and performing various
    operations on them in a consistent way across different operating systems. It
    makes working with file paths and directories more convenient, straightforward
    and easy to understand with its unified set of methods. Additionally,`pathlib`
    object-oriented design allows for more readable and maintainable code, compared
    to using string-based path manipulation libraries like `os.path` or `shutil`.
  prefs: []
  type: TYPE_NORMAL
- en: '*With no extra costs, you can subscribe to Medium via my referral link.*'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/@arli94/membership?source=post_page-----babdaf30a1a0--------------------------------)
    [## Join Medium with my referral link — Arli'
  prefs: []
  type: TYPE_NORMAL
- en: Read every story from Arli and thousands of other writers on Medium. Your membership
    fee directly supports Arli and…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: medium.com](https://medium.com/@arli94/membership?source=post_page-----babdaf30a1a0--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: '*Or you can get all my posts in your inbox.*[***Do that here****!*](https://arli94.medium.com/subscribe)'
  prefs: []
  type: TYPE_NORMAL
- en: '*If you like to experience Medium yourself, consider supporting me and thousands
    of other writers by* [***signing up for a membership***](https://arli94.medium.com/membership)*.
    It only costs $5 per month, it supports us, writers, greatly, and you get to access
    all the amazing stories on Medium.*'
  prefs: []
  type: TYPE_NORMAL
