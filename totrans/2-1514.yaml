- en: 'Metrics Layer: A Single Source of Truth for All KPI Definitions'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[https://towardsdatascience.com/metrics-layer-a-single-source-of-truth-for-all-kpi-definitions-671c9aa04a91](https://towardsdatascience.com/metrics-layer-a-single-source-of-truth-for-all-kpi-definitions-671c9aa04a91)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/219549fd84cf4d6f79fad72adfd89ed4.png)'
  prefs: []
  type: TYPE_IMG
- en: Image generated with Midjourney
  prefs: []
  type: TYPE_NORMAL
- en: Learn why implementing a metrics layer will make gathering data-driven insights
    much more robust in your organization!
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://eryk-lewinson.medium.com/?source=post_page-----671c9aa04a91--------------------------------)[![Eryk
    Lewinson](../Images/56e09e19c0bbfecc582da58761d15078.png)](https://eryk-lewinson.medium.com/?source=post_page-----671c9aa04a91--------------------------------)[](https://towardsdatascience.com/?source=post_page-----671c9aa04a91--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----671c9aa04a91--------------------------------)
    [Eryk Lewinson](https://eryk-lewinson.medium.com/?source=post_page-----671c9aa04a91--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ¬∑Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----671c9aa04a91--------------------------------)
    ¬∑8 min read¬∑Aug 8, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: Metrics layer is a framework that empowers organizations to unlock valuable
    insights and drive data-informed decision-making by consolidating, analyzing,
    and visualizing key performance indicators in a unified and intuitive manner.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, we‚Äôll explore the significance of the metrics layer, its benefits,
    key differences as compared to the semantics layer, and requirements for a successful
    implementation.
  prefs: []
  type: TYPE_NORMAL
- en: What is the metrics layer?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A **metrics** **layer** (also known as the **metrics** **store** or **headless**
    **BI**) is a framework for standardizing metrics, i.e., to centralize how a company
    calculates its metrics. It can be seen as the single source of truth when it comes
    to defining KPIs (or metrics, we will use those terms interchangeably) used within
    the organization.
  prefs: []
  type: TYPE_NORMAL
- en: 'üí° ***Bonus trivia***: In case you were wondering, the term ‚Äúheadless BI‚Äù derives
    from the fact that these solutions enable various BI tools to connect to an API
    for accessing metrics. Consequently, they provide the flexibility to swap out
    tools while maintaining the integrity of metric definitions.'
  prefs: []
  type: TYPE_NORMAL
- en: In essence, the concept of metrics layer is not entirely unfamiliar. For instance,
    you already store a project‚Äôs codebase in a central repository, versioned with
    Git. Similarly, the organization‚Äôs data warehouse or data lake serves as the single
    source of truth for all data. Analogously, the metrics layer functions as the
    single source of truth for the definitions of all KPIs used within the organization.
  prefs: []
  type: TYPE_NORMAL
- en: As illustrated in the schema below, the metrics layer should reside between
    the data warehouse (or the data source in a broader sense) and all the relevant
    applications (such as dashboards, reports, AI models, etc.) that consume these
    metrics.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2d409481c7168600b5f01bd13069c9e3.png)'
  prefs: []
  type: TYPE_IMG
- en: Let‚Äôs further expand on this definition. The metrics layer not only stores all
    the metric definitions but also translates the requests generated by applications
    into SQL. Then, the layer executes the requests against the data warehouse/lake
    to retrieve the desired metrics.
  prefs: []
  type: TYPE_NORMAL
- en: Why do you need the metrics layer?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You probably have heard some variation of the following sentences in your organization:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Why is the value of this metric different on dashboards X, Y, and Z?*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*It appears that this dashboard is using a different definition of metric X.
    Can we quickly align all of our dashboards to convey the same story?*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Somebody from management asked about the definition of this metric. Could
    you investigate the custom queries in this dashboard and determine how we actually
    calculate it?*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unfortunately, these examples illustrate the types of questions data scientists
    or data analysts frequently encounter during their daily jobs.
  prefs: []
  type: TYPE_NORMAL
- en: Such questions signal that metrics have become unmanageable, causing chaos for
    users, whether they are fellow data professionals or non-technical stakeholders.
  prefs: []
  type: TYPE_NORMAL
- en: What makes it even worse is that these users must often make critical business
    decisions based on these metrics.
  prefs: []
  type: TYPE_NORMAL
- en: The hidden complexity of simple metrics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As businesses grow and develop, the metrics they monitor also evolve. With the
    increased volume of data collected, its complexity grows as well.
  prefs: []
  type: TYPE_NORMAL
- en: What might initially seem counterintuitive is that even seemingly simple tasks
    like counting become challenging in analytics, as numerous complexities arise
    when aggregating raw data.
  prefs: []
  type: TYPE_NORMAL
- en: 'To illustrate that, let‚Äôs consider a relatable example for many organizations:
    counting the number of users for an app or service. It should be straightforward,
    right?'
  prefs: []
  type: TYPE_NORMAL
- en: 'However, the following issues may arise when attempting to count users:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Determining the time frame for counting users**: Should it be done on a daily,
    weekly, monthly, yearly, or other basis?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Segmenting users by geographic area**: If segmentation is required, what
    level of detail should be used? Continent, country, state, city, etc.?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Defining** **an** **active** **user**: How do we identify an active user?
    Should a user be considered inactive if there have been no transactions after
    a specific period? If so, what is that specific period? Additionally, how should
    users who log in and use the service but make no purchases be handled? The definition
    of ‚Äúactive users‚Äù can vary significantly.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Applying data filters or excluding specific users**: Should certain users
    be excluded based on specific flags? For example, should test accounts used by
    company employees be excluded?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Even a seemingly simple task like counting users involves numerous complexities.
  prefs: []
  type: TYPE_NORMAL
- en: Ensuring accuracy in these metrics is crucial, as inconsistent KPIs across multiple
    outlets, such as dashboards or reports, can make the stakeholders lose trust in
    the data. Moreover, it can be extremely challenging for the data team to identify
    all the different locations where varying and often conflicting metric definitions
    are used.
  prefs: []
  type: TYPE_NORMAL
- en: In such scenarios, the biggest problem is that there is no central repository
    for storing metric definitions. These definitions are scattered across various
    BI tools and custom SQL queries that populate views or dashboards. Consequently,
    they are often recreated and reused without proper oversight and consistency.
  prefs: []
  type: TYPE_NORMAL
- en: That‚Äôs where the metrics layer comes to your rescue. Next, let‚Äôs look at the
    benefits of setting up a single source of truth for your KPIs.
  prefs: []
  type: TYPE_NORMAL
- en: The advantages of the metrics layer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Implementing a metrics layer ensures that multiple individuals within the organization
    receive consistent answers when they ask questions about a certain metric to different
    data and non-data professionals.
  prefs: []
  type: TYPE_NORMAL
- en: Let‚Äôs explore some additional advantages of implementing a metrics layer.
  prefs: []
  type: TYPE_NORMAL
- en: '**Promotes consistency and builds trust**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: By enabling clear and reusable business definitions, the metrics layer fosters
    consistency within the organization. This consistency strengthens stakeholders‚Äô
    trust in the data.
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, it allows for the inspection of metric lineage ‚Äî an understanding
    of how metrics are constructed and which data sources are used.
  prefs: []
  type: TYPE_NORMAL
- en: '**Embraces the DRY (Don‚Äôt Repeat Yourself) principle**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Using the metrics layer eliminates the need to define the business logic for
    each metric in multiple locations. This avoids unnecessary repetition and ensures
    efficiency in managing metric definitions.
  prefs: []
  type: TYPE_NORMAL
- en: '**Facilitates adherence to software engineering best practices**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Since the metrics layer is defined using code, it becomes easier to follow established
    best practices. Additionally, industry-standard solutions can be employed to version
    control the metrics layer, thus ensuring proper tracking.
  prefs: []
  type: TYPE_NORMAL
- en: '**Future-proofs data consumption outlets**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: With a metrics layer in place, the risk of using outdated metric definitions
    is mitigated across various instances. This empowers developers to build analytics
    features and data-powered applications, all while maintaining consistent and up-to-date
    metric definitions.
  prefs: []
  type: TYPE_NORMAL
- en: '**Supports a variety of tools**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The centralized architecture of the metrics layer allows it to seamlessly integrate
    with a range of tools such as CRMs, BI tools, and internally developed solutions.
  prefs: []
  type: TYPE_NORMAL
- en: Regardless of the tool being used or its internal logic, the end result is based
    on standardized metric logic.
  prefs: []
  type: TYPE_NORMAL
- en: '**Provides a single interface for metrics definitions**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The centralized architecture of the metrics layer offers a unified interface
    where all data stakeholders throughout the organization can inspect how specific
    metrics are defined. This promotes transparency and ensures a shared understanding
    of metric definitions.
  prefs: []
  type: TYPE_NORMAL
- en: Setting the stage for a successful metrics layer implementation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Having explored the what and why of a metrics layer, it‚Äôs now time to dive into
    the how.
  prefs: []
  type: TYPE_NORMAL
- en: Let‚Äôs look into the requirements for a successful implementation of the metrics
    layer. There are several off-the-shelf solutions available for implementation,
    each with its own strengths and weaknesses.
  prefs: []
  type: TYPE_NORMAL
- en: However, let‚Äôs take a step back and shift our focus to the key characteristics
    that any implementation of a metrics layer should possess in order to effectively
    fulfill its role within a modern data stack.
  prefs: []
  type: TYPE_NORMAL
- en: 'For a successful metrics layer implementation, you need five core attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: A powerful semantics layer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integration capabilities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance optimization for low latency
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deployment flexibility
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enterprise capabilities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let‚Äôs delve into the nitty-gritty of each attribute, beginning with one aspect
    that can often lead to confusion: the semantic layer, also known as the semantic
    model or logical model.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7e6d349dc7e9bec961c9d7bbce82955a.png)'
  prefs: []
  type: TYPE_IMG
- en: Metrics layer vs semantic layer
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The **semantic layer** serves as a mapping between the tables and columns within
    the data warehouse and meaningful business entities. The semantic layer is where
    businesses can define dimensions, measures, and metrics using business-friendly
    language.
  prefs: []
  type: TYPE_NORMAL
- en: üí° It‚Äôs important to note that the semantic layer is just one component of the
    metrics layer and should not be mistaken for the metrics layer itself.
  prefs: []
  type: TYPE_NORMAL
- en: Ideally, these definitions should be easily crafted through an intuitive user
    interface (UI) and stored in version-controlled text files, usually in formats
    like YAML or JSON.
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, to facilitate automation, the implementation should offer a declarative
    API.
  prefs: []
  type: TYPE_NORMAL
- en: In addition to the strong semantic layer, there are several other attributes
    that are crucial for a well-rounded metrics layer implementation, as mentioned
    above. Let‚Äôs explore these further.
  prefs: []
  type: TYPE_NORMAL
- en: Integration capabilities
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To ensure consistent metric definitions, a headless BI solution should have
    the flexibility to integrate with popular BI tools, programming languages, ML
    frameworks, and other relevant technologies.
  prefs: []
  type: TYPE_NORMAL
- en: This requires broad support for standards-based data protocols, APIs, and SDKs.
  prefs: []
  type: TYPE_NORMAL
- en: Performance optimizations for low latency
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The metrics layer should be designed for high-performance querying, enabling
    real-time access to metrics at scale.
  prefs: []
  type: TYPE_NORMAL
- en: This is essential for powering automation features such as email triggers and
    personalized product experiences.
  prefs: []
  type: TYPE_NORMAL
- en: Deployment flexibility
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The metrics layer should support a wide range of deployment options, including
    fully hosted services and cloud-native deployments across different providers.
  prefs: []
  type: TYPE_NORMAL
- en: This flexibility allows organizations to choose the deployment model that best
    suits their specific needs and infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: Enterprise capabilities
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Considerations such as governance, security, access control, performance, scalability,
    and high availability are crucial for many organizations.
  prefs: []
  type: TYPE_NORMAL
- en: As the metrics layer becomes a mission-critical component for various applications,
    tools, and processes, it should possess enterprise-grade features to meet the
    organization‚Äôs requirements.
  prefs: []
  type: TYPE_NORMAL
- en: By considering these requirements, organizations can ensure a comprehensive
    and successful implementation of the metrics layer within their modern data stack.
  prefs: []
  type: TYPE_NORMAL
- en: Wrapping up
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Many companies are still in the early stages of their data science and machine
    learning journeys. As such, improving business intelligence and reporting can
    address about 90% of the data-related challenges they face.
  prefs: []
  type: TYPE_NORMAL
- en: That‚Äôs why it‚Äôs crucial for these companies to establish consistent and centralized
    metric definitions.
  prefs: []
  type: TYPE_NORMAL
- en: The metrics layer serves as the authoritative source for all KPI definitions
    used within the organization. It acts as a bridge between the data source and
    the various applications (dashboards, reports, AI models, etc.) that rely on these
    metrics.
  prefs: []
  type: TYPE_NORMAL
- en: Implementing a metrics layer offers numerous benefits. It ensures consistency
    and trust in the data, enhances operational efficiency, promotes adherence to
    best practices, future-proofs data analyses, integrates with different tools,
    and provides stakeholders with unified access to metric definitions.
  prefs: []
  type: TYPE_NORMAL
- en: By leveraging a metrics layer, companies can improve the precision, reliability,
    and overall effectiveness of their data-driven decision-making processes.
  prefs: []
  type: TYPE_NORMAL
- en: '*Liked the article? Become a Medium member to continue learning by reading
    without limits. If you use* [*this link*](https://eryk-lewinson.medium.com/membership)
    *to become a member, you will support me at no extra cost to you. Thanks in advance
    and see you around!*'
  prefs: []
  type: TYPE_NORMAL
- en: 'You might also be interested in one of the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/a-comprehensive-guide-on-interaction-terms-in-time-series-forecasting-16bfa468ae?source=post_page-----671c9aa04a91--------------------------------)
    [## A Comprehensive Guide on Interaction Terms in Time Series Forecasting'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to improve the fit of your linear models by making them more flexible
    to trend changes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/a-comprehensive-guide-on-interaction-terms-in-time-series-forecasting-16bfa468ae?source=post_page-----671c9aa04a91--------------------------------)
    [](/unlocking-the-power-of-interaction-terms-in-linear-regression-ba30c2cf158f?source=post_page-----671c9aa04a91--------------------------------)
    [## Unlocking the Power of Interaction Terms in Linear Regression
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to make your linear models more flexible by including interaction
    terms
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/unlocking-the-power-of-interaction-terms-in-linear-regression-ba30c2cf158f?source=post_page-----671c9aa04a91--------------------------------)
    [](/the-minimalists-guide-to-experiment-tracking-with-dvc-f07e4636bdbb?source=post_page-----671c9aa04a91--------------------------------)
    [## The Minimalist‚Äôs Guide to Experiment Tracking with DVC
  prefs: []
  type: TYPE_NORMAL
- en: The bare minimum guide to get you started with experiment tracking
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/the-minimalists-guide-to-experiment-tracking-with-dvc-f07e4636bdbb?source=post_page-----671c9aa04a91--------------------------------)
    [](/a-comprehensive-overview-of-regression-evaluation-metrics-6264af0926db?source=post_page-----671c9aa04a91--------------------------------)
    [## A Comprehensive Overview of Regression Evaluation Metrics
  prefs: []
  type: TYPE_NORMAL
- en: An extensive reference into commonly used regression evaluation metrics and
    their practical applications across various‚Ä¶
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/a-comprehensive-overview-of-regression-evaluation-metrics-6264af0926db?source=post_page-----671c9aa04a91--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[https://humansofdata.atlan.com/2022/05/metrics-layer-drew-banin-nick-handel/](https://humansofdata.atlan.com/2022/05/metrics-layer-drew-banin-nick-handel/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All images, unless noted otherwise, are by the author.
  prefs: []
  type: TYPE_NORMAL
- en: '*Originally published at* [*Atlan‚Äôs blog*](https://atlan.com/metrics-layer/)
    *on August 2nd, 2023*'
  prefs: []
  type: TYPE_NORMAL
