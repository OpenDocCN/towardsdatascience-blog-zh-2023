- en: How to use OpenAI’s Code Interpreter to Analyze Data
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用OpenAI的代码解释器来分析数据
- en: 原文：[https://towardsdatascience.com/how-to-use-openais-code-interpreter-to-analyze-data-45f5b2c57c1e](https://towardsdatascience.com/how-to-use-openais-code-interpreter-to-analyze-data-45f5b2c57c1e)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-use-openais-code-interpreter-to-analyze-data-45f5b2c57c1e](https://towardsdatascience.com/how-to-use-openais-code-interpreter-to-analyze-data-45f5b2c57c1e)
- en: Exploring SaaS Revenue Multiples with the Help of AI
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在AI的帮助下探索SaaS收入倍数
- en: '[](https://michaeltauberg.medium.com/?source=post_page-----45f5b2c57c1e--------------------------------)[![Michael
    Tauberg](../Images/06288c1c9559d79132c535201660984f.png)](https://michaeltauberg.medium.com/?source=post_page-----45f5b2c57c1e--------------------------------)[](https://towardsdatascience.com/?source=post_page-----45f5b2c57c1e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----45f5b2c57c1e--------------------------------)
    [Michael Tauberg](https://michaeltauberg.medium.com/?source=post_page-----45f5b2c57c1e--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://michaeltauberg.medium.com/?source=post_page-----45f5b2c57c1e--------------------------------)[![Michael
    Tauberg](../Images/06288c1c9559d79132c535201660984f.png)](https://michaeltauberg.medium.com/?source=post_page-----45f5b2c57c1e--------------------------------)[](https://towardsdatascience.com/?source=post_page-----45f5b2c57c1e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----45f5b2c57c1e--------------------------------)
    [Michael Tauberg](https://michaeltauberg.medium.com/?source=post_page-----45f5b2c57c1e--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----45f5b2c57c1e--------------------------------)
    ·6 min read·Jul 17, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----45f5b2c57c1e--------------------------------)
    ·阅读时间6分钟·2023年7月17日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/4d4890c28cee22c5291208b1f30cb9b9.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4d4890c28cee22c5291208b1f30cb9b9.png)'
- en: photo generated by OpenAI Dall-E tool
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 由OpenAI Dall-E工具生成的照片
- en: I’ve put off writing new data analysis posts for a while now. The return on
    investment seemed too low. Gathering data, cleaning it, and writing fine-tuned
    plotting code takes a long time and involves lots of tedious work.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经暂时搁置了新的数据分析文章。投资回报率似乎太低了。收集数据、清洗数据和编写精细的绘图代码需要很长时间，并且涉及大量枯燥的工作。
- en: But times have changed! I saw that OpenAI finally releasing their [Code Interpreter
    tool](https://openai.com/blog/chatgpt-plugins), potentially freeing me from the
    need to do boring and repetetive data tasks. Let’s see how AI can help me on a
    project I’ve been putting off for monts — a follow up of to my story [SaaS Revenue
    Multiples, Interest Rates, and Modeling in R](/saas-revenue-multiples-and-modeling-in-r-29ce10905488)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 但时代变了！我看到OpenAI终于发布了他们的[代码解释器工具](https://openai.com/blog/chatgpt-plugins)，这可能解放了我，使我不再需要做枯燥和重复的数据任务。让我们看看AI如何在一个我拖延了几个月的项目上帮助我——对我的故事[《SaaS收入倍数、利率与R建模》](/saas-revenue-multiples-and-modeling-in-r-29ce10905488)的后续跟进
- en: Getting the Data
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取数据
- en: 'This is the one area where Code Interpreter can’t yet help. I had to go out
    myself and collect data from the following sources:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这是代码解释器目前无法帮助的一个领域。我不得不自己出门收集数据，来源如下：
- en: Stock Price-to-Sales from [Macrotrends](https://www.macrotrends.net/stocks/charts/CRM/salesforce/price-sales)
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Macrotrends](https://www.macrotrends.net/stocks/charts/CRM/salesforce/price-sales)上的股票价格与销售数据'
- en: Federal Funds Rates from the [St Louis Federal Reserve](https://fred.stlouisfed.org/series/fedfunds)
    page
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[圣路易斯联邦储备银行](https://fred.stlouisfed.org/series/fedfunds)页面上的联邦基金利率'
- en: Treasury yield data from the [Deptartmen of the Treasury](https://home.treasury.gov/policy-issues/financing-the-government/interest-rate-statistics)
    site
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[财政部](https://home.treasury.gov/policy-issues/financing-the-government/interest-rate-statistics)网站上的国债收益率数据'
- en: Without the help of AI, I also wrote the python code to parse and combine these
    sources into a single csv file. Here too, I should have used AI tools. ChatGPT
    for example is great at generating python pandas code for data manipulation.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 没有AI的帮助，我还编写了Python代码来解析和合并这些来源到一个CSV文件中。在这里，我也应该使用AI工具。例如，ChatGPT在生成用于数据处理的Python
    pandas代码方面表现出色。
- en: Anyways, here is a snapshot of the data that we will be feeding into our robot
    friend. Over 2000 Price/Sales datapoints from over 10 years and almost 100 companies.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，这里是我们将输入到机器人朋友中的数据快照。来自10多年和近100家公司中的2000多个价格/销售数据点。
- en: '[typhon/saasrevenuewinterestrates | Workspace | data.world](https://data.world/typhon/saasrevenuewinterestrates/workspace/file?filename=min_df.csv)'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[typhon/saasrevenuewinterestrates | 工作区 | data.world](https://data.world/typhon/saasrevenuewinterestrates/workspace/file?filename=min_df.csv)'
- en: '![](../Images/9c2ee1236c4cd751754d4dc07a77f79b.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9c2ee1236c4cd751754d4dc07a77f79b.png)'
- en: Enabling The Interpreter
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启用解释器
- en: If you pay for ChatGPT like I do, then you should have access to Code Interpreter.
    Just go to settings to enable this Beta feature.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你像我一样为 ChatGPT 付费，那么你应该可以访问代码解释器。只需前往设置启用此 Beta 功能。
- en: '![](../Images/472ab96d462b46fee99d5edb82ccd732.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/472ab96d462b46fee99d5edb82ccd732.png)'
- en: Loading the Data
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加载数据
- en: 'With Interpreter Enabled, we can now upload our csv and ask the Interpreter
    questions about it. There is also a new “show work” tab that will let us see the
    python code that Interpreter generates. For example:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 启用解释器后，我们现在可以上传我们的 CSV 文件，并询问解释器关于它的问题。还有一个新的“展示工作”标签，可以让我们查看解释器生成的 Python 代码。例如：
- en: '![](../Images/046934a3b39f7e48c9af3e1f724a83ff.png)![](../Images/d9db28d6fff26e7aac490c51654745df.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/046934a3b39f7e48c9af3e1f724a83ff.png)![](../Images/d9db28d6fff26e7aac490c51654745df.png)'
- en: The interpreter is able to figure out what the dataset is and to correctly interpret
    the column names. In particular, the `3 Mo`, `6 Mo`, `1 Yr`, `2 Yr`, `3 Yr`, `5
    Yr`, `7 Yr`, `10 Yr`, `20 Yr`, `30 Yr` columns are indeed US Treasury yield figures
    while FedFundsRate is the rate of interest paid by the federal reserve to banks.
    It also figured out that growth_rolling_avg is a growth rate metric (in our case
    of company revenue).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 解释器能够弄清楚数据集是什么，并正确解释列名。特别是，`3 Mo`、`6 Mo`、`1 Yr`、`2 Yr`、`3 Yr`、`5 Yr`、`7 Yr`、`10
    Yr`、`20 Yr`、`30 Yr` 列确实是美国国债收益率数据，而 FedFundsRate 是联邦储备银行支付给银行的利率。它还弄清楚了 growth_rolling_avg
    是一个增长率指标（在我们公司的收入情况下）。
- en: Basic Analysis
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本分析
- en: You can talk to Code Interpreter just like you do ChatGPT. Here, I ask it one
    of the first questions of exploratory data analysis, are there any nice correlations?
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以像和 ChatGPT 交流一样与代码解释器对话。在这里，我问了探索性数据分析的第一个问题之一，即是否存在任何有趣的相关性？
- en: '![](../Images/e6cea46eb0b714239be9edaa5fe060c1.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e6cea46eb0b714239be9edaa5fe060c1.png)'
- en: Not only does Interpreter produce good code, but the descriptions it provides
    are also largely correct.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 解释器不仅生成了良好的代码，它提供的描述也大体上是正确的。
- en: '![](../Images/aef1dc03d217827d7f32632805cf7435.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/aef1dc03d217827d7f32632805cf7435.png)'
- en: Code interpreter even identifies possible ***reasons*** for the above correlations
    For example that companies with more recent IPOs have had higher P/S ratios and
    that higher M2 Money supply leads to higher stock prices.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 代码解释器甚至识别了上述相关性的可能***原因***。例如，较新上市的公司通常具有更高的 P/S 比率，而更高的 M2 货币供应量会导致更高的股票价格。
- en: The oddest correlation which the tool does not pontificate on is the one between
    price/sales and price itself. My guess is that this reflects a secular trend of
    increasing P/S. Adobe is an old stock which highlights this well.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 工具没有对价格/销售与价格本身之间的最奇怪的相关性进行推测。我的猜测是，这反映了 P/S 比率逐渐上升的长期趋势。Adobe 是一个很好的例子，突出了这一点。
- en: '![](../Images/26532ce131bae50fb9dfde412b8b804b.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/26532ce131bae50fb9dfde412b8b804b.png)'
- en: Plotting
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 绘图
- en: Let’s use our new AI friend to test out the theory that companies with more
    recent IPOs have a higher price-to-sales ratios.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用新的 AI 朋友来测试一个理论，即最近上市的公司拥有更高的价格/销售比率。
- en: '![](../Images/ece4869e6c7da2f2b27724663c897ad1.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ece4869e6c7da2f2b27724663c897ad1.png)'
- en: Whoops we hit a snag. I can see why this thing is still in Beta.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 哎呀，我们遇到了一些问题。我可以理解为什么这个东西还在 Beta 阶段。
- en: '![](../Images/637be665414ff4a644c6602a66ead93b.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/637be665414ff4a644c6602a66ead93b.png)'
- en: Luckily after starting a new session and re-uploading, Interpreter performs
    flawlessly.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，在开始新的会话并重新上传后，解释器表现完美。
- en: '![](../Images/29e77956cd612751d77d8f796c7044a0.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/29e77956cd612751d77d8f796c7044a0.png)'
- en: We get a nice graphic showing that the most egregious P/S numbers occurred in
    2021 and that they mostly involved companies with recent IPOs.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到了一张很好的图形，显示了最极端的 P/S 数字出现在 2021 年，而且这些数字主要涉及最近上市的公司。
- en: 'We can also see the code it used to generate this plot:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以看到生成此图的代码：
- en: '![](../Images/c35024ab39419b43be5e1af95880dcf0.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c35024ab39419b43be5e1af95880dcf0.png)'
- en: I personally think the use of “hue” to color ipo_year points is a bit confusing
    since year is a discrete variable. Let’s see if we can cajole the interpreter
    to do something better.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我个人认为，使用“色调”来着色 ipo_year 点有点令人困惑，因为年份是一个离散变量。让我们看看是否能说服解释器做得更好。
- en: Despite my typo, it gets the job done
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管有我的拼写错误，但它完成了工作。
- en: '![](../Images/676aa63f4a3e7bfa96931a964e7f6bf4.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/676aa63f4a3e7bfa96931a964e7f6bf4.png)'
- en: Next, let’s see if Code Interpreter can figure out what I want without me asking
    directly. Can It decide what sort of plot is best? Can it figure out the correct
    variables to use on the axes?
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看代码解释器能否在我不直接询问的情况下弄清楚我想要什么。它能决定哪种图表最佳吗？它能找出轴上使用的正确变量吗？
- en: '![](../Images/09ee0a65dd2598d1189f5a723253d17a.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/09ee0a65dd2598d1189f5a723253d17a.png)'
- en: Amazing! Just what I was looking for. The only thing missing is the trendline,
    which the tool easily added after I asked for it.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！正是我想要的。唯一缺少的是趋势线，工具在我要求后轻松添加了。
- en: '![](../Images/683d7a3f1ff98ffc17a09554d3bbfd83.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/683d7a3f1ff98ffc17a09554d3bbfd83.png)'
- en: As expected, the crazy P/S multiples in our data disappear once the 30Yr yield
    goes above 2.5%.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 正如预期的那样，一旦 30 年期收益率超过 2.5%，数据中的疯狂 P/S 倍数就消失了。
- en: Advanced Analysis
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高级分析
- en: So far Code Interpreter has successfully done the job of a junior data analyst.
    Now let’s see if it can tackle the work of a real Data Scientist.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，代码解释器成功地完成了初级数据分析师的工作。现在让我们看看它能否处理真正的数据科学家工作。
- en: '![](../Images/c11b046f9b651c95dcc739e6a1b0836e.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c11b046f9b651c95dcc739e6a1b0836e.png)'
- en: thankfully my typos can’t stop Code Interpreter
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是我的拼写错误无法阻止代码解释器
- en: Ok, now this is getting interesting. Code Interpreter can help us generate a
    nice linear regression model. Of course, we have to be careful with machines.
    It was over-indexing on my last prompt and only used the 30Yr yield as an input
    parameter. As expected, such a simple (one variable) model has a huge margin of
    error.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，这变得有趣了。代码解释器可以帮助我们生成一个不错的线性回归模型。当然，我们必须对机器保持警惕。它在我上一个提示上过度索引，只使用了 30 年期收益率作为输入参数。正如预期的那样，这样一个简单（单变量）的模型误差范围很大。
- en: '![](../Images/1030af0c6b7233cde13b5f031c02e39c.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1030af0c6b7233cde13b5f031c02e39c.png)'
- en: With a little cajoling though, it expanded the linear model to include these
    features (which are highly correlated to price-to-sales)
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 不过经过一点劝说，它扩展了线性模型以包含这些特征（与价格销售比高度相关）
- en: '![](../Images/00cf03c8e5bcef3c702a918c61d05e0e.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/00cf03c8e5bcef3c702a918c61d05e0e.png)'
- en: And now our results are looking much better.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的结果看起来好多了。
- en: '![](../Images/414f9e8b9e0e743da6292d6083265f75.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/414f9e8b9e0e743da6292d6083265f75.png)'
- en: Of course, we’re cheating a bit using ps_prev (the price-to-sales from the previous
    quarter). With this info, the growth rate, and data on monetary conditions, Code
    Interpreter’s model can predict Price/Sales within about 2 units. Not bad but
    not great either.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们在使用 ps_prev（上一季度的价格销售比）时有点作弊。凭借这些信息、增长率和货币条件的数据，代码解释器的模型可以在大约 2 个单位内预测价格/销售比。不算差，但也不算好。
- en: And to be fair this isn’t Code Interpreter’s fault. The dataset is too small
    and too volatile to do accurate P/S predictions. Fancier models I’ve tried can’t
    do much better, but Code Interpreter got to this conclusion much, much faster.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 公平地说，这并不是代码解释器的错。数据集太小且波动太大，无法进行准确的 P/S 预测。我尝试过的更复杂模型效果也不比这好，但代码解释器得出这个结论的速度快得多。
- en: Final Thoughts
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最终思考
- en: OpenAI’s new Code Interpreter tool really is amazing. More than anything it
    is ***FAST***. You can explore your data, do simple analysis, and leverage auto-generated
    code to do more fine-grained analysis. In general, I highly recommend this tool
    to speed up your work.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: OpenAI 的新代码解释器工具确实很棒。最重要的是它***快速***。你可以探索数据，进行简单分析，并利用自动生成的代码进行更精细的分析。总的来说，我强烈推荐这个工具来加快你的工作进度。
- en: However, caution is particularly important when using AI tools. They don’t necessarily
    understand your goals or the domain you’re working in. They make mistakes. It
    is always easy to shoot oneself in the foot in a data analysis project. Code Interprter
    makes this easier than ever. Junior analysts in particular should not trust everything
    the tool spits out and try interacting directly with the generated code.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，使用 AI 工具时特别需要谨慎。它们不一定理解你的目标或你所工作的领域。它们会犯错误。在数据分析项目中，总是容易自找麻烦。代码解释器使得这一点比以往任何时候都容易。特别是初级分析师不应完全信任工具的输出，应该尝试直接与生成的代码互动。
- en: Nevertheless, a seasoned data analyst should see their productivity skyrocket
    with AI tools like these. And as we are freed from busy work, perhaps we will
    have time to solve new problems and delve even deeper into the worlds of numbers
    around us.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，经验丰富的数据分析师应能通过这些 AI 工具显著提高工作效率。随着我们摆脱繁琐的工作，也许我们会有时间解决新问题，*更深入*地探究我们周围的数字世界。
