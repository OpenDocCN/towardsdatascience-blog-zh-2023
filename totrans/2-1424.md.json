["```py\nSELECT \n  rainfall, \n  CASE \n    WHEN temperature IS NULL \n    THEN regr_slope(temperature, rainfall) * rainfall \n         + regr_intercept(temperature, rainfall) \n    ELSE temperature \n  END AS temperature\nFROM \n  weather;\n```", "```py\n-- Populate the table with predicted temperature values\nINSERT INTO predicted_temperature (rainfall, temperature)\nSELECT \n  t1.rainfall, \n  CASE \n    WHEN t1.temperature IS NULL \n    THEN regr_slope(t2.temperature, t2.rainfall) * t1.rainfall \n         + regr_intercept(t2.temperature, t2.rainfall) \n    ELSE t1.temperature \n  END AS temperature\nFROM \n  weather t1\n  LEFT JOIN weather t2 ON t1.rainfall = t2.rainfall\nWHERE \n  t1.temperature IS NULL;\n```", "```py\nCREATE MATERIALIZED VIEW predicted_temperature_mv AS\nSELECT \n  rainfall, \n  CASE \n    WHEN temperature IS NULL \n    THEN regr_slope(temperature, rainfall) * rainfall \n         + regr_intercept(temperature, rainfall) \n    ELSE temperature \n  END AS temperature\nFROM \n  weather;\n```"]