- en: 'Args vs kwargs: which is the fastest way to call a function in Python?'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Args与kwargs：在Python中调用函数的最快方式是什么？
- en: 原文：[https://towardsdatascience.com/args-vs-kwargs-which-is-the-fastest-way-to-call-a-function-in-python-afb2e817120](https://towardsdatascience.com/args-vs-kwargs-which-is-the-fastest-way-to-call-a-function-in-python-afb2e817120)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/args-vs-kwargs-which-is-the-fastest-way-to-call-a-function-in-python-afb2e817120](https://towardsdatascience.com/args-vs-kwargs-which-is-the-fastest-way-to-call-a-function-in-python-afb2e817120)
- en: A clear demonstration of the timeit module
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`timeit`模块的清晰演示'
- en: '[](https://mikehuls.medium.com/?source=post_page-----afb2e817120--------------------------------)[![Mike
    Huls](../Images/8f9f55a0d25db00799c5d37383b7f5b6.png)](https://mikehuls.medium.com/?source=post_page-----afb2e817120--------------------------------)[](https://towardsdatascience.com/?source=post_page-----afb2e817120--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----afb2e817120--------------------------------)
    [Mike Huls](https://mikehuls.medium.com/?source=post_page-----afb2e817120--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://mikehuls.medium.com/?source=post_page-----afb2e817120--------------------------------)[![Mike
    Huls](../Images/8f9f55a0d25db00799c5d37383b7f5b6.png)](https://mikehuls.medium.com/?source=post_page-----afb2e817120--------------------------------)[](https://towardsdatascience.com/?source=post_page-----afb2e817120--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----afb2e817120--------------------------------)
    [Mike Huls](https://mikehuls.medium.com/?source=post_page-----afb2e817120--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----afb2e817120--------------------------------)
    ·3 min read·Feb 6, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----afb2e817120--------------------------------)
    ·阅读时间3分钟·2023年2月6日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/f6dccb8745eef8fdb949b1245807f318.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f6dccb8745eef8fdb949b1245807f318.png)'
- en: Time for a showdown (image by author)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 决战时刻（作者提供的图片）
- en: 'Have you ever wondered if it’s slower to call a function with keywords than
    without? In other words: which is faster; **positional arguments** (`myfunc(''mike'',
    33)`) or **kwargs** (`myfunc(name=''mike'', age=33)`)?'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 你是否曾经想过使用关键字调用函数是否比不使用关键字更慢？换句话说：**位置参数**（`myfunc('mike', 33)`）和**kwargs**（`myfunc(name='mike',
    age=33)`）哪个更快？
- en: In this short and simple article we find out if it is worth sacrificing the
    readability of passing **keywords arguments** vs passing arguments **positionally**.
    We set up a benchmark with the `timeit` module and compare the results. Nothing
    too complicated; let’s code!
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇简短的文章中，我们将探讨牺牲传递**关键字参数**的可读性与按**位置**传递参数是否值得。我们使用`timeit`模块设置基准测试并比较结果。没有太复杂的内容；让我们开始编码吧！
- en: The function
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 该函数
- en: 'To benchmark the performance of function calls we first need a function that
    we can call:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 为了基准测试函数调用的性能，我们首先需要一个可以调用的函数：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The function contains nothing more than a `pass` meaning that the function in
    itself does nothing. This ensures that we can single out and compare the way we
    call the function (i.e. positionally or with kwargs).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数仅包含一个`pass`语句，意味着这个函数本身什么都不做。这确保了我们可以单独分析和比较调用函数的方式（即按位置调用还是使用kwargs）。
- en: '[](/cython-for-absolute-beginners-30x-faster-code-in-two-simple-steps-bbb6c10d06ad?source=post_page-----afb2e817120--------------------------------)
    [## Cython for absolute beginners: 30x faster code in two simple steps'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/cython-for-absolute-beginners-30x-faster-code-in-two-simple-steps-bbb6c10d06ad?source=post_page-----afb2e817120--------------------------------)
    [## Cython入门：两步实现30倍速度提升的代码'
- en: Easy Python code compilation for blazingly fast applications
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 轻松的Python代码编译，实现飞快的应用程序
- en: towardsdatascience.com](/cython-for-absolute-beginners-30x-faster-code-in-two-simple-steps-bbb6c10d06ad?source=post_page-----afb2e817120--------------------------------)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/cython-for-absolute-beginners-30x-faster-code-in-two-simple-steps-bbb6c10d06ad?source=post_page-----afb2e817120--------------------------------)
- en: The benchmarking script
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基准测试脚本
- en: 'Next we’ll need some code that calls the function a number of times and records
    the time it takes for the function to execute:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要一些代码来多次调用函数并记录函数执行所需的时间：
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This is where the `timeit` module comes in. We use `timeit.repeat` to time
    running a function a `number` of times. We define the function call in `stmt`
    and map the `func` in the stmt to the function we’ve defined earlier using the
    `globals` dict. Then we repeat the experiment a number of times using the `repeat`
    argument. We end up with an array of 10 floats: each representing running the
    function call 25 million times.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: '[](/image-analysis-for-beginners-creating-a-motion-detector-with-opencv-4ca6faba4b42?source=post_page-----afb2e817120--------------------------------)
    [## Detecting motion with OpenCV — image analysis for beginners'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: How to detect and analyze moving objects with OpenCV
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/image-analysis-for-beginners-creating-a-motion-detector-with-opencv-4ca6faba4b42?source=post_page-----afb2e817120--------------------------------)
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: Checking out the results
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With the code below we take the list of floats that `timeit` provides us with
    and display the min, max and average execution time.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Done! Let’s do some benchmarking!
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: '[](/how-to-make-a-database-connection-in-python-for-absolute-beginners-e2bfd8e4e52?source=post_page-----afb2e817120--------------------------------)
    [## How to Make a Database Connection in Python for Absolute Beginners'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: 3 steps (+examples) to connect to MS SQL Server, MySQL, Oracle and many other
    databases
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/how-to-make-a-database-connection-in-python-for-absolute-beginners-e2bfd8e4e52?source=post_page-----afb2e817120--------------------------------)
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: The results
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The results are in:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: It seems that, on average, positional arguments are faster by **0.39 seconds**
    or a little over **16.5%**. Realise, however, that positional arguments are 0.39
    seconds faster in calling the function ***25 million*** times.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: This means that choosing positional arguments over keyword arguments saves you
    about **16 nano-seconds**; the time it takes for light to cross a distance of
    about 4.8 meters (16 feet).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: '[](/why-is-python-so-slow-and-how-to-speed-it-up-485b5a84154e?source=post_page-----afb2e817120--------------------------------)
    [## Why Python is so slow and how to speed it up'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: Take a look under the hood to see where Python’s bottlenecks lie
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/why-is-python-so-slow-and-how-to-speed-it-up-485b5a84154e?source=post_page-----afb2e817120--------------------------------)
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let’s start with the **main conclusion: don’t stop using kwargs over performance
    concerns**! Personally I like to use keyword arguments because it keeps my code
    readable and reduces the change of mixing up arguments. In this article we’ve
    seen that using keyword arguments come with a negligible performance increase.
    Go for readability for the price of a few nano seconds speed penalty.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: 'I hope this article was as clear as I hope it to be but if this is not the
    case please let me know what I can do to clarify further. In the meantime, check
    out my [other articles](https://mikehuls.com/articles?tags=python) on all kinds
    of programming-related topics like these:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望这篇文章的内容能够达到我的期望，但如果没有，请告诉我如何进一步澄清。同时，查看我关于各种编程相关话题的[其他文章](https://mikehuls.com/articles?tags=python)，例如：
- en: '[Git for absolute beginners: understanding Git with the help of a video game](https://mikehuls.medium.com/git-for-absolute-beginners-understanding-git-with-the-help-of-a-video-game-88826054459a)'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Git 初学者指南：通过视频游戏理解 Git](https://mikehuls.medium.com/git-for-absolute-beginners-understanding-git-with-the-help-of-a-video-game-88826054459a)'
- en: '[Create and publish your own Python package](https://mikehuls.medium.com/create-and-publish-your-own-python-package-ea45bee41cdc)'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[创建并发布你自己的 Python 包](https://mikehuls.medium.com/create-and-publish-your-own-python-package-ea45bee41cdc)'
- en: '[Create a fast auto-documented, maintainable, and easy-to-use Python API in
    5 lines of code with FastAPI](https://mikehuls.medium.com/create-a-fast-auto-documented-maintainable-and-easy-to-use-python-api-in-5-lines-of-code-with-4e574c00f70e)'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 FastAPI 在 5 行代码中创建一个快速的自动文档、可维护、易用的 Python API](https://mikehuls.medium.com/create-a-fast-auto-documented-maintainable-and-easy-to-use-python-api-in-5-lines-of-code-with-4e574c00f70e)'
- en: Happy coding!
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 编程愉快！
- en: — Mike
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: — Mike
- en: '*P.S: like what I’m doing?* [*Follow me!*](https://mikehuls.medium.com/membership)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '*附言：喜欢我做的事情吗？* [*关注我！*](https://mikehuls.medium.com/membership)'
- en: '[](https://mikehuls.medium.com/membership?source=post_page-----afb2e817120--------------------------------)
    [## Join Medium with my referral link — Mike Huls'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://mikehuls.medium.com/membership?source=post_page-----afb2e817120--------------------------------)
    [## 通过我的推荐链接加入 Medium — Mike Huls'
- en: Read every story from Mike Huls (and thousands of other writers on Medium).
    Your membership fee directly supports Mike…
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阅读 Mike Huls 和数千名其他 Medium 作者的所有故事。你的会员费直接支持 Mike…
- en: mikehuls.medium.com](https://mikehuls.medium.com/membership?source=post_page-----afb2e817120--------------------------------)
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: mikehuls.medium.com](https://mikehuls.medium.com/membership?source=post_page-----afb2e817120--------------------------------)
