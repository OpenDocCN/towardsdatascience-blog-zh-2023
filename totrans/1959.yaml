- en: What is Harmonic Regression for Time Series Forecasting?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/take-your-forecasting-to-the-next-level-with-harmonic-regression-5a8515f63295](https://towardsdatascience.com/take-your-forecasting-to-the-next-level-with-harmonic-regression-5a8515f63295)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Unveiling the fascinating relationship between Fourier Series and Time Series
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@egorhowell?source=post_page-----5a8515f63295--------------------------------)[![Egor
    Howell](../Images/1f796e828f1625440467d01dcc3e40cd.png)](https://medium.com/@egorhowell?source=post_page-----5a8515f63295--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5a8515f63295--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5a8515f63295--------------------------------)
    [Egor Howell](https://medium.com/@egorhowell?source=post_page-----5a8515f63295--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----5a8515f63295--------------------------------)
    ·6 min read·Mar 29, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/22e584d1ffdab7db6faabde247cdda72.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Pawel Czerwinski](https://unsplash.com/@pawel_czerwinski?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Background & Problem
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When we want to model [***seasonality***](https://medium.com/towards-data-science/seasonality-of-time-series-5b45b4809acd)
    in our time series we often turn to the [***SARIMA***](https://medium.com/towards-artificial-intelligence/how-to-forecast-with-sarima-d4b4c98fca7b)
    model. This adds seasonality components to the [***ARIMA***](https://medium.com/towards-data-science/how-to-forecast-with-arima-96b3d4db111a)
    model by finding [***autoregressors***](https://medium.com/towards-data-science/how-to-forecast-time-series-using-autoregression-1d45db71683)
    and [***moving-averages***](https://medium.com/towards-data-science/how-to-forecast-with-moving-average-models-6f3c9cbba60d)
    at certain specific lag indexes. For example, monthly data with yearly seasonality
    will fit autoregressors and moving averages at multiples of ***12***. You can
    read more about this process in my previous article here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://pub.towardsai.net/how-to-forecast-with-sarima-d4b4c98fca7b?source=post_page-----5a8515f63295--------------------------------)
    [## How To Forecast With SARIMA'
  prefs: []
  type: TYPE_NORMAL
- en: A deep dive into the SARIMA model and its applications
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: pub.towardsai.net](https://pub.towardsai.net/how-to-forecast-with-sarima-d4b4c98fca7b?source=post_page-----5a8515f63295--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: However, what if we have daily data with a yearly seasonality of ***365.25 days***?
    Or even weekly data with a seasonality of ***52.14***?
  prefs: []
  type: TYPE_NORMAL
- en: Unfortunately, SARIMA can’t handle this as it is *non-integer* and also [*struggles
    computationally*](https://otexts.com/fpp2/dhr.html) due to the memory required
    to find patterns in ***365*** data points each season.
  prefs: []
  type: TYPE_NORMAL
- en: '*So, what do we do?*'
  prefs: []
  type: TYPE_NORMAL
- en: Income [***Fourier series***](https://en.wikipedia.org/wiki/Fourier_series)
    to save the day!
  prefs: []
  type: TYPE_NORMAL
- en: Supplemental Video.
  prefs: []
  type: TYPE_NORMAL
- en: What Is Fourier Series?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Intuition
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Fourier series is one of the most interesting discoveries in mathematics which
    states [that](https://mathworld.wolfram.com/FourierSeries.html):'
  prefs: []
  type: TYPE_NORMAL
- en: Any periodic function can be decomposed into a sum of sine and cosine waves
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This is a very simple statement but its implications are very significant.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, shown below are the functions ***sin(2x)*** and ***cos(3x)***
    and their corresponding summation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a183f5e7a6b960ebee5a7c0da7b0f444.png)'
  prefs: []
  type: TYPE_IMG
- en: Plot generated by author in Python.
  prefs: []
  type: TYPE_NORMAL
- en: Notice that the functions of ***sin(2x)*** and ***cos(3x)*** are very uniform
    and simple functions yet their summation (red line) leads to a more complex pattern.
    This is the main idea behind the Fourier series.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can even use the Fourier series to construct a [***square wave***](https://en.wikipedia.org/wiki/Square_wave)
    by summing sine waves ([***harmonics***](https://electronics.stackexchange.com/questions/32310/what-exactly-are-harmonics-and-how-do-they-appear))
    of different *odd number* frequencies and amplitudes:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0371b9c3f215a468de4e9619c39073fb.png)'
  prefs: []
  type: TYPE_IMG
- en: Equation by author in LaTeX.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ec07ecb0dd2cbc496d12451f330adb28.png)'
  prefs: []
  type: TYPE_IMG
- en: Plot generated by author in Python.
  prefs: []
  type: TYPE_NORMAL
- en: What’s staggering about this result is that we have generated a sharp and straight
    line plot from smooth sine functions. This shows the true power of the Fourier
    series to construct any periodic function.
  prefs: []
  type: TYPE_NORMAL
- en: 'The code used to make these plots is available on my GitHub here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://github.com/egorhowell/Medium-Articles/blob/main/Time%20Series/Time%20Series%20Tools/fourier_series.py?source=post_page-----5a8515f63295--------------------------------)
    [## Medium-Articles/fourier_series.py at main · egorhowell/Medium-Articles'
  prefs: []
  type: TYPE_NORMAL
- en: Code I use in my medium blog/articles. Contribute to egorhowell/Medium-Articles
    development by creating an account on…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: github.com](https://github.com/egorhowell/Medium-Articles/blob/main/Time%20Series/Time%20Series%20Tools/fourier_series.py?source=post_page-----5a8515f63295--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Theory
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As we said above, the Fourier series states that any periodic function can
    be broken down into a sum of sine and cosine waves. Mathematically, this is written
    as:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b5d85fb61a2151e425aa2b03b2994768.png)'
  prefs: []
  type: TYPE_IMG
- en: Equation by author in LaTeX.
  prefs: []
  type: TYPE_NORMAL
- en: 'Where:'
  prefs: []
  type: TYPE_NORMAL
- en: '***A_0:*** *average value of the given periodic function*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***A_n:*** *coefficients of the cosine components*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***B_n:*** *coefficients of the sine components*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***n:*** *the**order which is the frequency of the sine or cosine wave, this
    is referred to as the ‘*[***harmonics***](https://electronics.stackexchange.com/questions/32310/what-exactly-are-harmonics-and-how-do-they-appear)*’*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***P:*** *period of the function*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The period, ***P***, and order, ***n***, are known ahead of time. However, the
    coefficients (***A_0, A_n, B_n***) need to be calculated to determine which sine
    and cosine components combined produce the given periodic function. These are
    normally deduced through integration (see [*here*](https://www.mathsisfun.com/calculus/fourier-series.html)
    for an example of this), but luckily most Python data science packages do this
    process for us!
  prefs: []
  type: TYPE_NORMAL
- en: Link to Forecasting
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Are you wondering how does the Fourier series fit into time series forecasting?
    Well, remember that **Fourier series deal with periodic functions and we often
    find that time series contain some periodic structure (typically seasonality)**.
    Therefore, we can use the Fourier series to model any complex seasonal pattern
    in our time series data!
  prefs: []
  type: TYPE_NORMAL
- en: '**Pros of using the Fourier series to model seasonality are:**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Any season length*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Model multiple seasonal patterns*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*The sensitivity of the Fourier seasonality can be tuned through the order
    and amplitudes of the sine and cosine components*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Computationally efficient when seasonal periods* [*are greater than ~200*](https://otexts.com/fpp2/dhr.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Many of these advantges **cannot** be achieved with the SARIMA model as it only
    accepts integer seasonality, a single season, and often runs out of memory when
    the [seasonal period is more than ~200.](https://otexts.com/fpp2/dhr.html)
  prefs: []
  type: TYPE_NORMAL
- en: '**Cons of using the Fourier series to model seasonality are:**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Assumes seasonal patterns and cycles remain fixed*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The question now begs, how do we add it to our model?
  prefs: []
  type: TYPE_NORMAL
- en: ARIMAX & Exogenous Features
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Intuition
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For ARIMA models we can add **extra external features** to aid in the forecasting.
    These features are called [***exogenous features***](https://en.wikipedia.org/wiki/Exogenous_and_endogenous_variables)
    and make the ARIMA model become an [***ARIMAX***](https://365datascience.com/tutorials/python-tutorials/arimax/)model.
    For example, we may use the current interest rates as an exogenous feature when
    forecasting the value of a house.
  prefs: []
  type: TYPE_NORMAL
- en: You can think of the ARIMAX model as just like regular [***linear regression***](/why-gradient-descent-is-so-common-in-data-science-def3e6515c5c)
    with the addition of [***autoregressors***](https://medium.com/towards-data-science/how-to-forecast-time-series-using-autoregression-1d45db71683)
    and [***moving-average***](https://medium.com/towards-data-science/how-to-forecast-with-moving-average-models-6f3c9cbba60d)
    components ([***endogenous variables***](https://timeseriesreasoning.com/contents/exogenous-and-endogenous-variables/)).
    The trick here is to allow the Fourier series to be one of these exogenous features
    or an [***explanatory variable***](https://www.statisticshowto.com/probability-and-statistics/types-of-variables/explanatory-variable/)
    as is often described in linear regression.
  prefs: []
  type: TYPE_NORMAL
- en: As we are dealing with time series, the exogenous features need to be time indexed
    just like the autoregressors and moving-averages. They also need to be known at
    the point of the forecast. For example, if we want to forecast the value of a
    house in May, we need to know what the interest rates are in May if we want them
    as an exogenous feature.
  prefs: []
  type: TYPE_NORMAL
- en: Theory
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Mathematically](https://robjhyndman.com/hyndsight/arimax/), the exogenous
    features are added to the classic ARIMA model in the following way:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d72261ce1c04be637e8f92201ccf8cce.png)'
  prefs: []
  type: TYPE_IMG
- en: Equation by author in LaTeX.
  prefs: []
  type: TYPE_NORMAL
- en: '***y:*** *time-series/lags at different time steps*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***x:*** *exogenous feature*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***β****: coefficient for exogenous feature*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***ϕ:*** *coefficients of the* [*autoregressive components (lags)*](/towards-data-science/how-to-forecast-time-series-using-autoregression-1d45db71683)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***p:*** *number of autoregressive components*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***ε:*** *forecast* [*error terms*](https://en.wikipedia.org/wiki/White_noise)*,
    the* [*moving-average components*](/towards-data-science/how-to-forecast-with-moving-average-models-6f3c9cbba60d)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***θ:*** *coefficients of the lagged forecast errors*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***q:*** *number of lagged error components*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fourier Series Features
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To add the Fourier series as exogenous to an ARIMA model is relatively simple
    as the coefficients/amplitudes, ***β***, are deduced for us and all we need to
    provide are the corresponding sine and cosine terms. In pseudo-code, this is equivalent
    to:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'As an example, let’s say we have monthly data with a yearly seasonality and
    we want the Fourier components for May. This, in pseudo-code, would be:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: May is the 5th month and there are 12 months in a year.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: However, we still have the frequency (the order) value to deduce. This is typically
    found by [passing numerous sine and cosine component](https://robjhyndman.com/hyndsight/longseasonality/)
    orders and letting the model find the most useful ones. In the Python example
    below we will illustrate this process.
  prefs: []
  type: TYPE_NORMAL
- en: Python Implementation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We will now use harmonic regression and ARIMAX to carry out some real-world
    forecasting! We will use the [US airline passenger dataset from Kaggle](https://www.kaggle.com/datasets/ashfakyeafi/air-passenger-data-for-time-series-analysis).
  prefs: []
  type: TYPE_NORMAL
- en: Data [from Kaggle](https://www.kaggle.com/datasets/ashfakyeafi/air-passenger-data-for-time-series-analysis)
    with a CC0 licence.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Gist by author.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/25f528d9b656162b74d50b7c68ef910f.png)'
  prefs: []
  type: TYPE_IMG
- en: Plot generated by author in Python.
  prefs: []
  type: TYPE_NORMAL
- en: As we can see, the Fourier orders have captured the seasonality quite nicely!
  prefs: []
  type: TYPE_NORMAL
- en: 'Note: in the above code we used the Box-Cox transform to make the variance
    stationary. You can learn more about that process [here](https://medium.com/towards-data-science/box-cox-transform-for-time-series-cc45f26082c6).'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Summary and Thoughts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When the seasonality of your time series is a non-integer, has numerous patterns,
    or is very long (>50 points) then it is preferable to use the Fourier series to
    model this seasonality component. This can be achieved by adding the Fourier series
    as an exogenous feature to a regular ARIMA model to make it an ARIMAX. These exogenous
    features are external covariates that aid in the forecasting of the time series.
  prefs: []
  type: TYPE_NORMAL
- en: 'The full code can be found at my GitHub here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://github.com/egorhowell/Medium-Articles?source=post_page-----5a8515f63295--------------------------------)
    [## GitHub - egorhowell/Medium-Articles: Code I use in my medium blog/articles.'
  prefs: []
  type: TYPE_NORMAL
- en: You can't perform that action at this time. You signed in with another tab or
    window. You signed out in another tab or…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: github.com](https://github.com/egorhowell/Medium-Articles?source=post_page-----5a8515f63295--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Another Thing!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I have a free newsletter, [**Dishing the Data**](https://dishingthedata.substack.com/),
    where I share weekly tips for becoming a better Data Scientist. There is no “fluff”
    or “clickbait,” just pure actionable insights from a practicing Data Scientist.
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://newsletter.egorhowell.com/?source=post_page-----5a8515f63295--------------------------------)
    [## Dishing The Data | Egor Howell | Substack'
  prefs: []
  type: TYPE_NORMAL
- en: How To Become A Better Data Scientist. Click to read Dishing The Data, by Egor
    Howell, a Substack publication with…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: newsletter.egorhowell.com](https://newsletter.egorhowell.com/?source=post_page-----5a8515f63295--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Connect With Me!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[**YouTube**](https://www.youtube.com/@egorhowell)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**LinkedIn**](https://www.linkedin.com/in/egor-howell-092a721b3/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**Twitter**](https://twitter.com/EgorHowell)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**GitHub**](https://github.com/egorhowell)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: References and Further Reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Forecasting: Principles and Practice:* [https://otexts.com/fpp2/](https://otexts.com/fpp3/arima.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
