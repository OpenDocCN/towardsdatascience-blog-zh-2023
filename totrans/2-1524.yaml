- en: ML model registry — the “interface” that binds model experiments and model deployment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ML模型注册中心——绑定模型实验和模型部署的“接口”
- en: 原文：[https://towardsdatascience.com/ml-model-registry-the-interface-that-binds-model-experiments-and-model-deployment-f6df00f0b695](https://towardsdatascience.com/ml-model-registry-the-interface-that-binds-model-experiments-and-model-deployment-f6df00f0b695)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/ml-model-registry-the-interface-that-binds-model-experiments-and-model-deployment-f6df00f0b695](https://towardsdatascience.com/ml-model-registry-the-interface-that-binds-model-experiments-and-model-deployment-f6df00f0b695)
- en: MLOps in Practice — A deep- dive into ML model registries, model versioning
    and model lifecycle management
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实践中的MLOps——深入探讨ML模型注册中心、模型版本控制和模型生命周期管理
- en: '[](https://medium.com/@weiyunna91?source=post_page-----f6df00f0b695--------------------------------)[![YUNNA
    WEI](../Images/ffd0dd5c697dd2b4640ade49274d2bf9.png)](https://medium.com/@weiyunna91?source=post_page-----f6df00f0b695--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f6df00f0b695--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f6df00f0b695--------------------------------)
    [YUNNA WEI](https://medium.com/@weiyunna91?source=post_page-----f6df00f0b695--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@weiyunna91?source=post_page-----f6df00f0b695--------------------------------)[![YUNNA
    WEI](../Images/ffd0dd5c697dd2b4640ade49274d2bf9.png)](https://medium.com/@weiyunna91?source=post_page-----f6df00f0b695--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f6df00f0b695--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f6df00f0b695--------------------------------)
    [YUNNA WEI](https://medium.com/@weiyunna91?source=post_page-----f6df00f0b695--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----f6df00f0b695--------------------------------)
    ·8 min read·Feb 16, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [数据科学之路](https://towardsdatascience.com/?source=post_page-----f6df00f0b695--------------------------------)
    ·阅读时间8分钟·2023年2月16日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '**Background**'
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**背景**'
- en: 'In my previous article:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在我之前的文章中：
- en: '[MLOps in Practice — De-constructing an ML Solution Architecture into 10 components](/mlops-in-practice-de-constructing-an-ml-solution-architecture-into-10-components-c55c88d8fc7a?sk=a14ce7ead68a2f90868d7a063eea84e3)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[实践中的MLOps——将ML解决方案架构拆解为10个组件](/mlops-in-practice-de-constructing-an-ml-solution-architecture-into-10-components-c55c88d8fc7a?sk=a14ce7ead68a2f90868d7a063eea84e3)'
- en: I talked about the architectural importance of managing model metadata and artifacts
    generated by ML experiment runs. We all know that the model training process produces
    many artifacts for further ML model performance tuning, as well as for subsequent
    ML model deployment. These artifacts include the trained models themselves as
    well as model parameters and hyperparameters, metrics, codes, notebooks, configurations
    and so on. Central management and leveraging these model artifacts and metadata
    is critical for a robust MLOps architecture. Therefore, in today’s article, I
    will discuss the ML model registry store, which performs as the “interface” that
    binds model experiments and model deployment.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我谈到了管理ML实验运行中生成的模型元数据和工件的架构重要性。我们都知道，模型训练过程会产生许多工件，用于进一步调优ML模型性能以及后续的ML模型部署。这些工件包括训练后的模型、模型参数和超参数、指标、代码、笔记本、配置等。集中管理和利用这些模型工件和元数据对于构建稳健的MLOps架构至关重要。因此，在今天的文章中，我将讨论ML模型注册中心，它作为绑定模型实验和模型部署的“接口”。
- en: 'Specifically, today’s article will focus on the following aspects:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 今天的文章将重点讨论以下方面：
- en: The question of …… what is an ML registry store, as well as the key functions
    performed by a ML registry store
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ML注册中心是什么？以及ML注册中心执行的关键功能
- en: The key benefits brought by an ML model registry store
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ML模型注册中心带来的关键好处
- en: How to integrate an ML model registry into an end-to-end MLOps solution
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何将ML模型注册中心集成到端到端的MLOps解决方案中
- en: The technologies behind a ML registry store and popular open source solutions
    for a ML registry store
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ML注册中心背后的技术以及流行的开源ML注册中心解决方案
- en: '![](../Images/e5ac4442dd93d7bac0482abd94be00af.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e5ac4442dd93d7bac0482abd94be00af.png)'
- en: Photo by [Robert Anasch](https://unsplash.com/ko/@diesektion?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Robert Anasch](https://unsplash.com/ko/@diesektion?utm_source=medium&utm_medium=referral)
    通过 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: What is an ML registry ?
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是ML注册中心？
- en: An ML registry is a centralized place to store all your ML artifacts along with
    their metadata from early-stage experiments to production-ready models. Similar
    to container registries like DockerHub or Python package registries like PyPi,
    an ML registry allows data scientists and ML practitioners to publish and share
    ML models and artifacts. Generally, an ML registry provides a User Interface (UI),
    as well as set of APIs for ML admins and users to register, discover, share, version,
    and manage permissions and lifecycle of ML models.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: ML 注册表是一个集中存储所有 ML 工件及其元数据的地方，从早期阶段的实验到生产就绪的模型。类似于 DockerHub 这样的容器注册表或 PyPi
    这样的 Python 包注册表，ML 注册表允许数据科学家和 ML 从业者发布和共享 ML 模型及工件。通常，ML 注册表提供一个用户界面（UI），以及一套
    API，供 ML 管理员和用户注册、发现、共享、版本控制和管理 ML 模型的权限和生命周期。
- en: 'The information kept within an ML registry store, can be summarized into the
    following categories:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 存储在 ML 注册表中的信息可以总结为以下几类：
- en: '**Model metadata** including model name, model annotations and descriptions,
    model tags, model creation time, model modification time and model schema (model
    input schema and output schema);'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型元数据** 包括模型名称、模型注释和描述、模型标签、模型创建时间、模型修改时间和模型架构（模型输入架构和输出架构）；'
- en: '**Model lifecycle management** encompasses all stages of a model’s life, from
    its creation to its retirement. For example, [MLflow](https://mlflow.org/) provides
    predefined stages for common use-cases such as Staging, Production and Archived.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型生命周期管理** 包括模型生命周期的所有阶段，从创建到退役。例如，[MLflow](https://mlflow.org/) 提供了预定义的阶段，适用于常见的用例，如
    Staging、Production 和 Archived。'
- en: '**Model versioning.** It is almost 100% certain that there will be multiple
    versions for any registered ML model. The reason is that ML models need to be
    constantly monitored and updated to reflect how the business context and data
    changes. Model versioning is more than just providing a version number, but a
    mechanism to align each version of the ML model with the corresponding data, features
    and codes used to train it for end-to-end model lineage.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型版本控制。** 对于任何注册的 ML 模型，几乎可以肯定会有多个版本。原因是 ML 模型需要不断监控和更新，以反映业务环境和数据的变化。模型版本控制不仅仅是提供版本号，而是一种将
    ML 模型的每个版本与用于训练的相应数据、特征和代码对齐的机制，实现端到端的模型沿袭。'
- en: '**Model governance —** including managing model permissions (controlling who
    can manage and update models), auditing model activities and usage trails, reviewing
    and approving models before deploying into production, notifications for critical
    model changes and model lineage.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型治理 —** 包括管理模型权限（控制谁可以管理和更新模型）、审计模型活动和使用记录、在部署到生产环境之前审查和批准模型、关键模型变更的通知以及模型沿袭。'
- en: '**Model serving**. Model registry can facilitate model serving by providing
    webhooks that enable ML engineers to listen for model registry events. When a
    particular event happens, corresponding actions can be automatically triggered.
    You can use webhooks to automate and integrate your ML pipelines with existing
    CI/CD tools and workflows. For example, you can trigger CI builds when a new model
    version is created, or notify your team members through Slack each time a model
    transition to production is requested.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型服务**。模型注册表可以通过提供 Webhooks 来促进模型服务，使 ML 工程师能够监听模型注册表事件。当特定事件发生时，可以自动触发相应的操作。你可以使用
    Webhooks 来自动化并将你的 ML 流水线与现有的 CI/CD 工具和工作流集成。例如，当创建新版本的模型时，你可以触发 CI 构建，或在每次请求模型转移到生产时通过
    Slack 通知你的团队成员。'
- en: '**Model monitoring and debugging**. After an ML model is deployed into production,
    monitoring how the model performs is necessary. An ML model registry provides
    the mechanism for data scientists to test against the deployed models with production
    data to closely monitor how the model performs. If any model degradation is identified,
    data scientists can leverage the model linage information to identify root causes.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型监控和调试**。在 ML 模型部署到生产环境后，监控模型的性能是必要的。ML 模型注册表提供了数据科学家使用生产数据测试已部署模型的机制，以密切监控模型的表现。如果发现模型降级，数据科学家可以利用模型沿袭信息来识别根本原因。'
- en: '![](../Images/552fea98b636c845b90b95cdac652d4d.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/552fea98b636c845b90b95cdac652d4d.png)'
- en: Key components of a ML model registry | Image by Author
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: ML 模型注册表的关键组件 | 图片来源：作者
- en: Key benefits brought by an ML model registry store
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ML 模型注册表存储带来的主要好处
- en: '**Productivity** — A central ML registry significantly removes the silos where
    each data science / ML team manages their own ML models and artifacts. An ML registry
    can perform like an ML model marketplace where teams can publish, share and reuse
    the work of other teams. Overall, this can significantly improve the team productivity
    and have more ML applications developed with less resources.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**生产力** — 一个中央 ML 注册表显著地消除了每个数据科学/ML 团队管理自己 ML 模型和工件的孤岛。一个 ML 注册表可以像一个 ML 模型市场一样运作，团队可以在其中发布、分享和重用其他团队的工作。总体而言，这可以显著提高团队的生产力，并且用更少的资源开发更多的
    ML 应用。'
- en: '**Governance** — Responsible AI and ML governance have been critical topics
    for many organizations from regulatory, ethical, social, and legal perspectives.
    A central ML registry can assist the AI/ML governance effort, by providing information
    such as model permissions, model usage trails, model auditing reports, and model
    linage to raw and features.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**治理** — 负责任的 AI 和 ML 治理一直是许多组织在监管、伦理、社会和法律方面的重要话题。一个中央 ML 注册表可以通过提供模型权限、模型使用记录、模型审计报告以及模型从原始数据和特征的血统等信息来协助
    AI/ML 治理工作。'
- en: '**Collaboration** —An ML model registry is the single and unified interface
    shared by both data scientists and ML engineers, which can facilitate and streamline
    the handoff between data scientists and ML engineers. When data scientists are
    happy with the overall model performance after rounds of experiments, they will
    hand over the code and model to ML engineers for production deployment. Having
    the ML model registry in place, ML engineers have good visibility of understanding
    how the model is trained, what data and features are used, and what the feature
    engineering logics are. This significantly reduces the communication effort between
    data scientists and ML engineers and improves the collaboration among teams.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**协作** — 一个 ML 模型注册表是数据科学家和 ML 工程师共享的单一统一接口，可以促进和简化数据科学家与 ML 工程师之间的交接。当数据科学家对经过多轮实验后的整体模型性能感到满意时，他们将把代码和模型交给
    ML 工程师进行生产部署。拥有 ML 模型注册表，ML 工程师可以清晰地了解模型是如何训练的、使用了哪些数据和特征以及特征工程逻辑是什么。这显著减少了数据科学家和
    ML 工程师之间的沟通工作，提高了团队之间的协作。'
- en: '![](../Images/86c924d8f744970f8422d290f1dff5fa.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/86c924d8f744970f8422d290f1dff5fa.png)'
- en: Key benefits brought by an ML model registry store | Image by Author
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: ML 模型注册表存储带来的关键好处 | 作者提供的图像
- en: The technologies behind an ML registry store
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ML 注册表存储背后的技术
- en: 'Under the hood, model registries generally comprise the following two elements:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在幕后，模型注册表通常包括以下两个元素：
- en: One is an ML entities (metadata) store — The entities store, stores the metadata
    of ML entities, such as ML experiments, runs, parameters, metrics, tags, notes,
    sources, lifecycle stages, as well as ML artifact locations. An ML entities store
    is normally implemented by a SQL relational database, such as PostgreSQL, MySQL,
    MSSQL and SQLite.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个是 ML 实体（元数据）存储 — 实体存储存储 ML 实体的元数据，例如 ML 实验、运行、参数、指标、标签、备注、来源、生命周期阶段以及 ML 工件位置。ML
    实体存储通常由 SQL 关系数据库实现，如 PostgreSQL、MySQL、MSSQL 和 SQLite。
- en: The other is an ML artifacts store — The artifacts store persists artifacts
    files, models, images, in-memory objects, model summary or any objects that are
    logged to the ML registry store. The artifact store is a location suitable for
    large data and is where clients log their artifact output (for example, models).
    The artifact store implementation is generally backed up by a persistent file
    system, such as Amazon S3 and S3-compatible storage, Azure Blob Storage, Google
    Cloud Storage, FTP server, SFTP Server, NFS and HDFS.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 另一个是 ML 工件存储 — 工件存储持久化工件文件、模型、图像、内存对象、模型摘要或任何记录到 ML 注册表存储的对象。工件存储是一个适合大数据的位置，是客户端记录其工件输出（例如模型）的地方。工件存储的实现通常由持久文件系统支持，如
    Amazon S3 和 S3 兼容存储、Azure Blob 存储、Google Cloud 存储、FTP 服务器、SFTP 服务器、NFS 和 HDFS。
- en: '![](../Images/7caf11682d37e4f2d9b114270a2f2534.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7caf11682d37e4f2d9b114270a2f2534.png)'
- en: The technologies behind an ML registry store | Image by Author
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: ML 注册表存储背后的技术 | 作者提供的图像
- en: Integrate an ML model registry into an end-to-end MLOps solution
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将 ML 模型注册表集成到端到端 MLOps 解决方案中
- en: 'An ML model registry plays a very important role for the 3 critical stages
    of an end-to-end MLOps solution:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 一个 ML 模型注册表在端到端 MLOps 解决方案的 3 个关键阶段中扮演着非常重要的角色：
- en: The first is **model development** — Model development is very iterative and
    experimental, meaning data scientists need to try various algorithms, frameworks,
    and different combinations of features, parameters and hyperparameters for these
    algorithms, in order to find out what works best for the problem. Therefore being
    able to reproduce ML experiments runs can significantly improve data scientist’s
    productivity and help them to more quickly find the most ideal solution. An ML
    model registry provides lineage capabilities that allow data scientists to trace
    back from a registered ML model to the training runs that produce the model, so
    that they can either reproduce the model or make necessary changes to retrain
    a newer version of the ML model.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个是**模型开发**——模型开发是非常迭代和实验性的，这意味着数据科学家需要尝试各种算法、框架以及这些算法的不同特征、参数和超参数组合，以找出最适合问题的方案。因此，能够重现机器学习实验的运行可以显著提高数据科学家的生产力，帮助他们更快地找到最理想的解决方案。机器学习模型注册提供了谱系功能，使数据科学家可以从注册的机器学习模型追溯到产生模型的训练运行，以便他们可以重现模型或做出必要的更改以重新训练模型的新版本。
- en: The second is **model deployment** — Model registry events (such as a new model
    version being created for the associated model or a model version’s stage being
    changed from staging to production) can be leveraged to automatically trigger
    ML model deployment. For example, you can trigger CI builds when a new model version
    is created, or notify your team members through Slack each time a model transition
    to production is requested. You can also integrate the model registry events to
    automatically trigger existing CI/CD pipleines and workflows.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二个是**模型部署**——模型注册事件（例如，为相关模型创建新模型版本或将模型版本的阶段从测试阶段更改为生产阶段）可以被利用来自动触发机器学习模型的部署。例如，你可以在创建新模型版本时触发CI构建，或者每次请求模型转生产时通过Slack通知团队成员。你还可以将模型注册事件集成到现有的CI/CD管道和工作流中，以自动触发这些过程。
- en: The third is **model in production** — Model registry provides a holistic view
    of all the models in production and allows the ML operation teams to monitor these
    models accordingly. ML models are extremely data reliant. Therefore, ML models
    can have deteriorated performance not only due to suboptimal coding, but also
    due to constantly evolving data landscapes. Once model performance deterioration
    is identified, an ML registry service can help ML operations team debug and retrain
    the model by providing necessary model artifacts and model lineage capability.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三个是**生产中的模型**——模型注册提供了所有生产中模型的整体视图，并允许ML操作团队相应地监控这些模型。机器学习模型非常依赖数据。因此，机器学习模型的性能可能会因数据环境的不断变化而恶化，而不仅仅是由于编码不佳。一旦识别出模型性能恶化，ML注册服务可以通过提供必要的模型工件和模型谱系功能，帮助ML操作团队调试和重新训练模型。
- en: Therefore, MLOps in it’s entirety, cannot be done fully and correctly until
    you have a state-of-the-art Model Registry.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，MLOps的整体实现，直到你拥有一个最先进的模型注册系统，才能完全且正确地进行。
- en: '![](../Images/0d65ddb593fceda9a275ed5a14dc2e53.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0d65ddb593fceda9a275ed5a14dc2e53.png)'
- en: Integrate an ML model registry into an end-to-end MLOps solution | Image by
    Author
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 将机器学习模型注册集成到端到端的MLOps解决方案中 | 图片作者
- en: The popular solutions for a ML registry store
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 流行的机器学习注册存储解决方案
- en: '[MLflow Model Registry](https://mlflow.org/docs/latest/model-registry.html)
    — MLflow is an open source platform to manage the ML lifecycle, including experimentation,
    reproducibility, deployment, and a central model registry. The fourth major component
    of MLflow is the model registry. With MLflow, you can build a registry store in
    your local file system of the machine where MLflow is running, or you can spin
    up a remote central tracking server where teams can centrally register and share
    ML model artifacts. If you are already on Databricks, you would have access to
    a hosted tracking server available to you.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[MLflow模型注册](https://mlflow.org/docs/latest/model-registry.html)——MLflow是一个开源平台，用于管理机器学习生命周期，包括实验、可重复性、部署和集中模型注册。MLflow的第四个主要组件是模型注册。使用MLflow，你可以在运行MLflow的机器的本地文件系统中建立一个注册存储，或者你可以启动一个远程的中央跟踪服务器，团队可以在其中集中注册和共享机器学习模型工件。如果你已经在Databricks上，你将可以访问一个托管的跟踪服务器。'
- en: '[VertaAI ModelDB](https://github.com/VertaAI/modeldb) — An open-source system
    for Machine Learning model versioning, metadata, and experiment management. The
    Verta library comes with a model catalog component where users can find, publish,
    and use ML models or ML model pipeline components.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[VertaAI ModelDB](https://github.com/VertaAI/modeldb)——一个开源系统，用于机器学习模型版本控制、元数据和实验管理。Verta
    库提供了一个模型目录组件，用户可以在其中查找、发布和使用 ML 模型或 ML 模型管道组件。'
- en: '[Amazon SageMaker Model Registry](https://docs.aws.amazon.com/sagemaker/latest/dg/model-registry.html)
    — As is well-known, SageMaker is AWS’s ML manager, that provides various components
    for users to build, train and deploy ML models. SageMaker also has a model registry
    service that users can catalog versions of an ML model into predefined model package
    groups. If you have built your ML platform on top of SageMaker, SageMaker’s native
    model registry could be a good option.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Amazon SageMaker Model Registry](https://docs.aws.amazon.com/sagemaker/latest/dg/model-registry.html)——众所周知，SageMaker
    是 AWS 的 ML 管理工具，提供各种组件供用户构建、训练和部署 ML 模型。SageMaker 还有一个模型注册服务，用户可以将 ML 模型的版本编入预定义的模型包组。如果您在
    SageMaker 上构建了您的 ML 平台，那么 SageMaker 原生的模型注册表可能是一个不错的选择。'
- en: Summary
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: The ML model registry is a central component of MLOps that assists to minimize
    the well-known gap between model experiments, activities and model production
    activities. It’s a fact, I believe, that MLOps cannot be done right until you
    have a state-of-the-art Model Registry.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: ML 模型注册表是 MLOps 的核心组件，有助于减少模型实验、活动和模型生产活动之间的已知差距。我相信，MLOps 只有在拥有先进的模型注册表时才能做到正确。
- en: Please feel free to let me know if you have any comments and questions on this
    topic or other MLOps related topics! I generally publish 1 article related to
    data and AI every week. Please feel free to follow me on Medium so that you can
    get notified when these articles are published.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对这个话题或其他 MLOps 相关话题有任何意见或问题，请随时告诉我！我通常每周发布 1 篇与数据和 AI 相关的文章。请随时在 Medium 上关注我，以便在这些文章发布时获得通知。
- en: If you want to see more guides, deep dives, and insights around modern and efficient
    data+AI stack, please subscribe to my free newsletter — [***Efficient Data+AI
    Stack***](https://yunnawei.substack.com/), thanks!
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想查看更多关于现代高效数据+AI 堆栈的指南、深入探讨和见解，请订阅我的免费新闻通讯——[***Efficient Data+AI Stack***](https://yunnawei.substack.com/)，谢谢！
- en: 'Note: Just in case you haven’t become a Medium member yet, and you really should,
    as you’ll get unlimited access to Medium, you can sign up using my [referral link](https://medium.com/@weiyunna91/membership)!'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：如果您还没有成为 Medium 会员，而且您真的应该成为会员，因为您将获得对 Medium 的无限访问权限，您可以使用我的[推荐链接](https://medium.com/@weiyunna91/membership)注册！
- en: Thanks so much for your support!
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 非常感谢您的支持！
- en: References
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考资料
- en: '[https://mlflow.org/docs/latest/model-registry.html](https://mlflow.org/docs/latest/model-registry.html)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://mlflow.org/docs/latest/model-registry.html](https://mlflow.org/docs/latest/model-registry.html)'
- en: '[https://docs.databricks.com/mlflow/model-registry-webhooks.html](https://docs.databricks.com/mlflow/model-registry-webhooks.html)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.databricks.com/mlflow/model-registry-webhooks.html](https://docs.databricks.com/mlflow/model-registry-webhooks.html)'
- en: '[https://www.tensorflow.org/tfx/guide/mlmd](https://www.tensorflow.org/tfx/guide/mlmd)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.tensorflow.org/tfx/guide/mlmd](https://www.tensorflow.org/tfx/guide/mlmd)'
- en: '[https://docs.aws.amazon.com/sagemaker/latest/dg/model-registry.html](https://docs.aws.amazon.com/sagemaker/latest/dg/model-registry.html)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.aws.amazon.com/sagemaker/latest/dg/model-registry.html](https://docs.aws.amazon.com/sagemaker/latest/dg/model-registry.html)'
- en: '[https://github.com/VertaAI/modeldb](https://github.com/VertaAI/modeldb)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/VertaAI/modeldb](https://github.com/VertaAI/modeldb)'
