["```py\n# Import pandas\nimport pandas as pd\n\n# Assuming 'df' is your DataFrame\naverage_sales = df.groupby('store')['last_week_sales'].mean()\n```", "```py\n# Calculate profit per product\ndf['last_month_profit'] = (df['price'] - df['cost']) * df['last_month_sales']\n\n# Calculate total profit per store\ntotal_profit = df.groupby('store')['last_month_profit'].sum()\n```", "```py\n# Calculate the average stock quantity per store\naverage_stock_qty_per_store = df.groupby('store')['stock_qty'].transform('mean')\n\n# Replace missing values in 'stock_qty' with the average stock quantity of that store\ndf['stock_qty'].fillna(average_stock_qty_per_store, inplace=True)\n```", "```py\n# First, sort the DataFrame by 'store' and 'last_month_sales'\ndf_sorted = df.sort_values(['store', 'last_month_sales'], ascending=[True, False])\n\n# Then, group by 'store' and use the apply method to select the top 3 rows for each group\ntop_3_products = df_sorted.groupby('store').head(3)\n```", "```py\ndef top_3_products(group):\n    return group.nlargest(3, 'last_month_sales')\n\ntop_3_df = df.groupby('store').apply(top_3_products)\n```", "```py\n# Calculate total sales for each store in the last week and last month\ntotal_sales_last_week = df.groupby('store')['last_week_sales'].sum()\ntotal_sales_last_month = df.groupby('store')['last_month_sales'].sum()\n\n# Create a new DataFrame to store this information\nperformance_df = pd.DataFrame({\n    'LastWeekSales': total_sales_last_week,\n    'LastMonthSales': total_sales_last_month,\n})\n\n# Calculate the change in sales from last month to last week\nperformance_df['SalesChange'] = performance_df['LastWeekSales'] - (performance_df['LastMonthSales'] / 4)\n```", "```py\n# first option\ndf['critical_stock'] = df['stock_qty'].apply(lambda x: 1 if x < 500 else 0)\n\n# second option\nimport numpy as np\n\ndf['critical_stock'] = np.where(df['stock_qty'] < 500, 1, 0)\n```", "```py\n# Import necessary libraries\nimport pandas as pd\n\n# DataFrame size\nprint(\"DataFrame Size:\")\nprint(df.shape)\nprint(\"\\n\")\n\n# Missing values\nprint(\"Missing Values:\")\nprint(df.isnull().sum())\nprint(\"\\n\")\n\n# Data types\nprint(\"Data Types:\")\nprint(df.dtypes)\nprint(\"\\n\")\n\n# Column statistics\nprint(\"Column Statistics:\")\nprint(df.describe(include='all'))\n```"]