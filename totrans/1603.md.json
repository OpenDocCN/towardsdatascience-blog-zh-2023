["```py\nselect\n  ad_id AS facebook_ad_id,\n  account_id,\n  ad_name AS ad_name_1,\n  adset_name,\n  month(date) AS month_created_at,\n  date::timestamp_ntz AS created_at,\n  spend\nfrom {{ source('facebook', 'basic_ad')}}\n```", "```py\ncreate or replace view data_mart_dev.base.base_facebook_ads \n  as (\n\n    select\n      ad_id AS facebook_ad_id,\n      account_id,\n      ad_name AS ad_name_1,\n      adset_name,\n      month(date) AS month_created_at,\n      date::timestamp_ntz AS created_at,\n      spend\n    from raw.facebook.basic_ad\n\n    );\n```", "```py\nwith\n\n  fb_spend_unioned AS (\n\n    select created_at, spend, 'company_1' AS source from {{   ref('base_fb_ads_company1')}}\n    UNION ALL\n    select created_at, spend, 'company_2' AS source from {{ ref('base_fb_ads_company2')}}\n\n  ),\n\n  fb_spend_summed AS (\n\n    select\n      month(created_at) AS spend_month,\n      year(created_at) AS spend_year,\n      created_at AS spend_date,\n      sum(spend) AS spend\n    from fb_spend_unioned \n    where spend != 0\n    group by\n      created_at,\n      month(created_at),\n      year(created_at)\n\n  )\n\n  select * from fb_spend_summed\n```", "```py\ncreate or replace table data_mart_dev.core.fb_spend_summed\n\n  as (\n\n    with \n\n    fb_spend_unioned AS (\n\n    select created_at, spend, 'company_1' AS source from {{   ref('base_fb_ads_company1')}}\n    UNION ALL\n    select created_at, spend, 'company_2' AS source from {{ ref('base_fb_ads_company2')}}\n\n),\n\n  fb_spend_summed AS (\n\n    select\n      month(created_at) AS spend_month,\n      year(created_at) AS spend_year,\n      created_at AS spend_date,\n      sum(spend) AS spend\n    from fb_spend_unioned \n    where spend != 0\n    group by\n      created_at,\n      month(created_at),\n      year(created_at)\n\n  )\n\n  select * from fb_spend_summed\n\n  );\n```"]