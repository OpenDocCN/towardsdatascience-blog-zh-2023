- en: Creating and Publishing Your Own Python Package for Absolute Beginners
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为绝对初学者创建和发布自己的Python包
- en: 原文：[https://towardsdatascience.com/creating-and-publishing-your-own-python-package-for-absolute-beginners-7656c893f387](https://towardsdatascience.com/creating-and-publishing-your-own-python-package-for-absolute-beginners-7656c893f387)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/creating-and-publishing-your-own-python-package-for-absolute-beginners-7656c893f387](https://towardsdatascience.com/creating-and-publishing-your-own-python-package-for-absolute-beginners-7656c893f387)
- en: Create, build an publish a Python Package in 5 minutes
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在5分钟内创建、构建和发布一个Python包
- en: '[](https://mikehuls.medium.com/?source=post_page-----7656c893f387--------------------------------)[![Mike
    Huls](../Images/8f9f55a0d25db00799c5d37383b7f5b6.png)](https://mikehuls.medium.com/?source=post_page-----7656c893f387--------------------------------)[](https://towardsdatascience.com/?source=post_page-----7656c893f387--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----7656c893f387--------------------------------)
    [Mike Huls](https://mikehuls.medium.com/?source=post_page-----7656c893f387--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://mikehuls.medium.com/?source=post_page-----7656c893f387--------------------------------)[![Mike
    Huls](../Images/8f9f55a0d25db00799c5d37383b7f5b6.png)](https://mikehuls.medium.com/?source=post_page-----7656c893f387--------------------------------)[](https://towardsdatascience.com/?source=post_page-----7656c893f387--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----7656c893f387--------------------------------)
    [Mike Huls](https://mikehuls.medium.com/?source=post_page-----7656c893f387--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----7656c893f387--------------------------------)
    ·6 min read·Sep 23, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----7656c893f387--------------------------------)
    ·阅读时间6分钟·2023年9月23日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/376b56645a3b29e6dba99d79a2a5fd01.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/376b56645a3b29e6dba99d79a2a5fd01.png)'
- en: (image by [Erda Estremera](https://unsplash.com/@erdaest) on [Unsplash](https://unsplash.com/photos/sxNt9g77PE0))
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: (图片由[Erda Estremera](https://unsplash.com/@erdaest)提供，来源于[Unsplash](https://unsplash.com/photos/sxNt9g77PE0))
- en: Python packages are collections of reusable code that can be easily shared and
    implemented across projects. We can write our code once and use it many times
    in many places. Packages allow us to share our code with colleagues or even the
    global developer community. As a data scientist, instead of sharing Jupyter notebooks,
    you can share packages to ensure easy updates, reusability and version control.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Python包是可以在多个项目中轻松共享和实现的可重用代码集合。我们可以编写一次代码，然后在许多地方多次使用。包允许我们与同事或甚至全球开发者社区共享我们的代码。作为数据科学家，你可以分享包，而不是分享Jupyter笔记本，以确保便于更新、重用和版本控制。
- en: In this article we’ll detail the modern approach for creating, building, and
    publishing your own package to the Python Package Index (PyPI; where you `pip
    install` from). We’ll create a [real package called “**mikes-toolbox2**”](https://pypi.org/project/mikes-toolbox2/)
    and deploy it to PyPI so that we can pip install `mikes-toolbox2` it. Let’s code!
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将详细讲述创建、构建和发布你自己的包到Python包索引（PyPI；你从中`pip install`）的现代方法。我们将创建一个名为“**mikes-toolbox2**”的[真实包](https://pypi.org/project/mikes-toolbox2/)，并将其部署到PyPI，以便我们可以通过`pip
    install mikes-toolbox2`来安装它。开始编码吧！
- en: Before we begin…
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在我们开始之前…
- en: This article details how to publish packages to a *public* Python Package Index.
    This means that, once published, your package is available to anyone. I’m in the
    process of writing an article on how to set up your own, private PyPI so make
    sure to [**follow me**](http://mikehuls.medium.com/membership)if you’re interested.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本文详细讲述了如何将包发布到*公共* Python包索引。这意味着，一旦发布，你的包就对任何人开放。我正在撰写一篇关于如何设置你自己的私人PyPI的文章，如果你感兴趣，请确保[**关注我**](http://mikehuls.medium.com/membership)。
- en: 'If you get lost in the code examples in this article: [**check out the source
    code here**](https://github.com/mike-huls/mikes-toolbox2).'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在本文的代码示例中迷路了：[**在这里查看源代码**](https://github.com/mike-huls/mikes-toolbox2)。
- en: 1\. Set up a Python Package project
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1. 设置Python包项目
- en: In this section we’ll prepare our project by making a folder and installing
    our virtual environment and packages.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将通过创建一个文件夹并安装我们的虚拟环境和包来准备我们的项目。
- en: 'We’ll start by **creating a folder** at `c:/my_packages/new_package` and opening
    this folder in a code editor. Next we’ll need to **set up our virtual environment**.
    See the article below for a deep dive on how to do this. In short: you can let
    PyCharm handle it or use `python -m venv venv`.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: '[](/virtual-environments-for-absolute-beginners-what-is-it-and-how-to-create-one-examples-a48da8982d4b?source=post_page-----7656c893f387--------------------------------)
    [## Virtual environments for absolute beginners — what is it and how to create
    one (+ examples)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: A deep dive into Python virtual environments, pip and avoiding entangled dependencies
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/virtual-environments-for-absolute-beginners-what-is-it-and-how-to-create-one-examples-a48da8982d4b?source=post_page-----7656c893f387--------------------------------)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: Lastly we’ll need to **install Poetry**. This package makes dependency management
    and packaging very easy. Install with `pip install poetry`.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Package requirements
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A Python package needs certain **files and folders** to be present in order
    to be a valid package so let’s create these. Make sure your folder looks like
    this:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '*Technically we don’t need the* `*src*` *folder between* `*new_package*` *and*
    `*mikes_toolbox2*` *but I like to do so anyway because it isolates the package-code
    a bit more from the source directory. I think this structure is more explicit,
    cleaner and easier to manage but it’s optional; you can leave out the* `*src*`
    *folder.*'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: '[](/no-need-to-ever-write-sql-again-sqlalchemys-orm-for-absolute-beginners-107be0b3148f?source=post_page-----7656c893f387--------------------------------)
    [## No Need to Ever Write SQL Again: SQLAlchemy’s ORM for Absolute Beginners'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: With this ORM you can create a table, insert, read, delete and update data without
    writing a single line of SQL
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/no-need-to-ever-write-sql-again-sqlalchemys-orm-for-absolute-beginners-107be0b3148f?source=post_page-----7656c893f387--------------------------------)
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: After creating our files and folders we need a `**pyproject.toml**`. This is
    universal configuration file for Python projects that is designed to be used by
    all kinds of tools like build systems, package managers and linters. Poetry uses
    `pyproject.toml` to keep track of dependencies.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: 'Creating a `pyproject.toml` is easy since Poetry helpys us generate one with
    `poetry init` . Just answer the prompts and the pyproject is generated:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b642fd9ee4e82dfbabf8279bc3f2e4eb.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
- en: '[poetry init] promps us for details about our Package (image by author)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: The `pyproject.toml` should be located in the root of your project directory.
    So in my case it’s [located](https://github.com/mike-huls/mikes-toolbox2) at `c:/my_packages/new_pacakge/pyproject.toml`.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: 'Maybe our project or package **needs dependencies**; how do we go about installing
    these? Poetry uses `pyproject.toml` to keep track of dependencies (among other
    things). I’ll demonstrate by installing two packages: `requests` and `black`.
    We use these packages a bit differently:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 也许我们的项目或包**需要依赖**；我们如何安装这些呢？Poetry使用`pyproject.toml`来跟踪依赖（以及其他事项）。我将演示如何安装两个包：`requests`和`black`。我们以不同的方式使用这些包：
- en: '`request` is used by our package itself'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`request`由我们自己的包使用'
- en: '`black` is used by us, the developer, to lint the package'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`black`由我们开发者使用来对包进行代码检查'
- en: The difference is that `black` is a ***dev dependency***, we only need it while
    developing the dependency itself. So when someone pip installs our package, `requests`
    needs to be installed as well, but `black` doesn’t.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 区别在于`black`是***开发依赖***，我们只在开发依赖时需要它。因此，当有人用pip安装我们的包时，`requests`也需要被安装，但`black`则不需要。
- en: 'Here’s how to install the packages in the different ways:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是如何以不同方式安装包：
- en: '[PRE1]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'In the same way I will install `pytest` as a dev dependency. At the end our
    `pyproject.toml` will contain the following groups of dependencies:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我会将`pytest`作为开发依赖进行安装。最终我们的`pyproject.toml`将包含以下几组依赖：
- en: '![](../Images/ff4ecec6cc709a2ded84abdb825fb248.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ff4ecec6cc709a2ded84abdb825fb248.png)'
- en: package dependencies and dev dependencies in pyproject.toml (image by author)
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在`pyproject.toml`中的包依赖和开发依赖（作者提供的图片）
- en: '[](/create-a-fast-auto-documented-maintainable-and-easy-to-use-python-api-in-5-lines-of-code-with-4e574c00f70e?source=post_page-----7656c893f387--------------------------------)
    [## Create a fast auto-documented, maintainable and easy-to-use Python API in
    5 lines of code with…'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/create-a-fast-auto-documented-maintainable-and-easy-to-use-python-api-in-5-lines-of-code-with-4e574c00f70e?source=post_page-----7656c893f387--------------------------------)
    [## 创建一个快速的自动文档、可维护且易于使用的Python API，只需5行代码'
- en: Perfect for (unexperienced) developers who just need a complete, working, fast
    and secure API
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 非常适合（经验不足的）开发人员，他们只需要一个完整的、工作良好、快速且安全的API
- en: towardsdatascience.com](/create-a-fast-auto-documented-maintainable-and-easy-to-use-python-api-in-5-lines-of-code-with-4e574c00f70e?source=post_page-----7656c893f387--------------------------------)
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/create-a-fast-auto-documented-maintainable-and-easy-to-use-python-api-in-5-lines-of-code-with-4e574c00f70e?source=post_page-----7656c893f387--------------------------------)
- en: 3 Package content and testing
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3 包内容和测试
- en: 'Let’s **package our functions**! I’ve added the `mess_up_casing` function below
    in `c:/my_pacakges/new_pacakge/src/mikes_toolbox2/my_toolbox.py`:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们**打包我们的函数**吧！我在`c:/my_pacakges/new_pacakge/src/mikes_toolbox2/my_toolbox.py`中添加了`mess_up_casing`函数：
- en: '[PRE2]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Next we can **test** this piece of code. In order to do so I’ve written a [small
    unit test](https://github.com/mike-huls/mikes-toolbox2/blob/main/tests/test_toolbox_functions.py)
    in the `tests` folder. Just call `pytest` and check if all tests succeed. Lastly
    we can even **format** all of our code with `black src`.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们可以**测试**这段代码。为此，我在`tests`文件夹中编写了一个[小的单元测试](https://github.com/mike-huls/mikes-toolbox2/blob/main/tests/test_toolbox_functions.py)。只需调用`pytest`并检查所有测试是否成功。最后，我们甚至可以用`black
    src`**格式化**我们所有的代码。
- en: '[](/why-is-python-so-slow-and-how-to-speed-it-up-485b5a84154e?source=post_page-----7656c893f387--------------------------------)
    [## Why Python is so slow and how to speed it up'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/why-is-python-so-slow-and-how-to-speed-it-up-485b5a84154e?source=post_page-----7656c893f387--------------------------------)
    [## 为什么Python这么慢，如何加速'
- en: Take a look under the hood to see where Python’s bottlenecks lie
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 深入了解Python的瓶颈所在
- en: towardsdatascience.com](/why-is-python-so-slow-and-how-to-speed-it-up-485b5a84154e?source=post_page-----7656c893f387--------------------------------)
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/why-is-python-so-slow-and-how-to-speed-it-up-485b5a84154e?source=post_page-----7656c893f387--------------------------------)
- en: 4\. Building and publishing our package
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4\. 构建和发布我们的包
- en: 'Building our package has become pretty easy now that poetry is set up correctly:
    `poetry build`.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，构建我们的包变得非常简单，只需`poetry build`即可。
- en: After your build succeeds you’ll see a new `dist` folder with a `.tar.gz` and
    a `.whl` file. These are the files we want to upload to pypi.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 构建成功后，你会看到一个新的`dist`文件夹，其中包含一个`.tar.gz`和一个`.whl`文件。这些就是我们想要上传到pypi的文件。
- en: To do so, first you’ll need to **register** at [pypi.org](https://pypi.org/account/register/).
    After logging in you can go to your account settings and **create an API token**.
    You’ll need this token to authenticate when publishing a package. Make sure to
    save the token somewhere since you cannot see it again after you’ve closed the
    window.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: 'Next we’ll need to **configure Poetry** since we’re going to use it for publishing
    our package; Poetry must know how to authenticate to your pypi.org account. We
    use the previously created **API token** for this:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: '`poetry config pypi-token.pypi THETOKEN`.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '**Publishing our package** is easy now that we have a correct project structure
    and we’ve configured Poetry. We can just call: `poetry publish` and we’re done!
    After this step you can `pip install mikes-toolbox2`.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: '[](/thread-your-python-program-with-two-lines-of-code-3b474407dbb8?source=post_page-----7656c893f387--------------------------------)
    [## Thread Your Python Program with Two Lines of Code'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: Speed up your program by doing multiple things simultaneously
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/thread-your-python-program-with-two-lines-of-code-3b474407dbb8?source=post_page-----7656c893f387--------------------------------)
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this article we’ve seen that Poetry makes it very easy to package and publish
    code to PyPI.org. Are you interested in packaging your code but don’t want to
    publish it to a public PyPI? It’s also possible to host your own Python Package
    Index, [follow me](http://mikehuls.medium.com/membership) to stay tuned for a
    future article on this.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: 'I hope this article was as clear as I hope it to be but if this is not the
    case please let me know what I can do to clarify further. In the meantime, check
    out my [other articles](https://mikehuls.com/articles) on all kinds of programming-related
    topics like these:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: '[Git for absolute beginners: understanding Git with the help of a video game](https://mikehuls.medium.com/git-for-absolute-beginners-understanding-git-with-the-help-of-a-video-game-88826054459a)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Create and publish your own Python package](https://mikehuls.medium.com/create-and-publish-your-own-python-package-ea45bee41cdc)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Create a fast auto-documented, maintainable, and easy-to-use Python API in
    5 lines of code with FastAPI](https://mikehuls.medium.com/create-a-fast-auto-documented-maintainable-and-easy-to-use-python-api-in-5-lines-of-code-with-4e574c00f70e)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A complete guide to using environment variables and files with docker and
    compose](https://mikehuls.medium.com/a-complete-guide-to-using-environment-variables-and-files-with-docker-and-compose-4549c21dc6af)'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Happy coding!
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: — Mike
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: '*P.S: like what I’m doing?* [*Follow me!*](https://mikehuls.medium.com/membership)'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://mikehuls.medium.com/membership?source=post_page-----7656c893f387--------------------------------)
    [## Join Medium with my referral link — Mike Huls'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: Read every story from Mike Huls (and thousands of other writers on Medium).
    Your membership fee directly supports Mike…
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: mikehuls.medium.com](https://mikehuls.medium.com/membership?source=post_page-----7656c893f387--------------------------------)
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '[mikehuls.medium.com](https://mikehuls.medium.com/membership?source=post_page-----7656c893f387--------------------------------)'
