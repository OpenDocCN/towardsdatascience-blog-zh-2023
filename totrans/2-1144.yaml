- en: How to Create Beautiful Bar Charts with Seaborn and Matplotlib (Including Animation)
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用 Seaborn 和 Matplotlib 创建美丽的条形图（包括动画）
- en: 原文：[https://towardsdatascience.com/how-to-create-beautiful-bar-charts-with-seaborn-and-matplotlib-including-animation-c2bc9ade1d7c](https://towardsdatascience.com/how-to-create-beautiful-bar-charts-with-seaborn-and-matplotlib-including-animation-c2bc9ade1d7c)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-create-beautiful-bar-charts-with-seaborn-and-matplotlib-including-animation-c2bc9ade1d7c](https://towardsdatascience.com/how-to-create-beautiful-bar-charts-with-seaborn-and-matplotlib-including-animation-c2bc9ade1d7c)
- en: Graph Tutorial
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图表教程
- en: A data visualization tutorial for Python
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python 数据可视化教程
- en: '[](https://medium.com/@oscarleo?source=post_page-----c2bc9ade1d7c--------------------------------)[![Oscar
    Leo](../Images/7733c9147bad2875a35155fca3903aa8.png)](https://medium.com/@oscarleo?source=post_page-----c2bc9ade1d7c--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c2bc9ade1d7c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c2bc9ade1d7c--------------------------------)
    [Oscar Leo](https://medium.com/@oscarleo?source=post_page-----c2bc9ade1d7c--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@oscarleo?source=post_page-----c2bc9ade1d7c--------------------------------)[![Oscar
    Leo](../Images/7733c9147bad2875a35155fca3903aa8.png)](https://medium.com/@oscarleo?source=post_page-----c2bc9ade1d7c--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c2bc9ade1d7c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c2bc9ade1d7c--------------------------------)
    [Oscar Leo](https://medium.com/@oscarleo?source=post_page-----c2bc9ade1d7c--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c2bc9ade1d7c--------------------------------)
    ·7 min read·Jun 15, 2023
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c2bc9ade1d7c--------------------------------)
    ·7 分钟阅读·2023年6月15日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/0a763b4611b2c631030faccd3c320cbe.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0a763b4611b2c631030faccd3c320cbe.png)'
- en: Graph created by the author
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 作者创建的图表
- en: Hi, and welcome to my first Matplotlib and Seaborn tutorial. Today, I will show
    you how to turn a default bar chart into a stunning visual with icons and animation.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你好，欢迎来到我的第一个 Matplotlib 和 Seaborn 教程。今天，我将向你展示如何将默认条形图转变为令人惊叹的视觉效果，配有图标和动画。
- en: Let me know if you like this kind of content. If that’s the case, I can create
    more of the same! :)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢这种内容，请告诉我。如果是这样，我可以创建更多类似的内容！ :)
- en: 'You can find the code and preprocessed data in this repository: [simple-bar-chart-tutorial](https://github.com/oscarleoo/simple-bar-chart-tutorial).'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在这个仓库中找到代码和预处理数据：[simple-bar-chart-tutorial](https://github.com/oscarleoo/simple-bar-chart-tutorial)。
- en: Let’s get started.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧。
- en: 'Step 1: Creating a default bar chart'
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第1步：创建默认条形图
- en: For this tutorial, I’ve created a simple dataset with the total number of stars
    over time for three popular open-source deep-learning frameworks (`Tensorflow`
    , `PyTorch` , and `Keras`).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本教程，我创建了一个简单的数据集，其中包含三个流行的开源深度学习框架（`Tensorflow`、`PyTorch` 和 `Keras`）随时间变化的星级总数。
- en: '![](../Images/fbc9983d68b8d3d52d22ac17ccfe9c15.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fbc9983d68b8d3d52d22ac17ccfe9c15.png)'
- en: Screenshot by the author
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截图
- en: And here’s a simple function that creates a simple barplot for one row in the
    DataFrame.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的函数，它为数据框中的一行创建一个简单的条形图。
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: To create a first visual, I run the code above like this.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建第一个视觉效果，我像这样运行上述代码。
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Here’s the default bar chart I get if I run this function for the last row in
    the dataset with the color orange.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我对数据集的最后一行运行这个函数，并使用橙色，这就是我得到的默认条形图。
- en: '![](../Images/71e1b79a4cd419a70a95e19b156d00dd.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/71e1b79a4cd419a70a95e19b156d00dd.png)'
- en: Bar chart created by the author
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 作者创建的条形图
- en: In the following steps, I will create additional functions that we can run together
    with the code above to improve the charts.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的步骤中，我将创建一些额外的函数，我们可以与上述代码一起运行，以改进图表。
- en: Let’s try to create something more beautiful.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试创建一些更美丽的东西。
- en: 'Step 2: Creating a theme'
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第2步：创建主题
- en: First, I want to create a function that allows me to test different colors and
    fonts for my charts.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我想创建一个函数，允许我测试图表的不同颜色和字体。
- en: There are a ton of methods in both Matplotlib and Seaborn that will enable you
    to alter the looks of your graphs.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Matplotlib 和 Seaborn 中有大量的方法，可以帮助你改变图表的外观。
- en: I prefer to first create a theme by using `sns.set_style()`. Here’s a code snippet
    I use to create a new theme quickly.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我更喜欢首先通过使用 `sns.set_style()` 来创建主题。下面是我用来快速创建新主题的代码片段。
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: There are a few more options for `sns.set_style()`, and you might want to use
    it differently. But this is the setup that works best for me.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '`sns.set_style()` 还有更多选项，你可能会想以不同的方式使用它。但这是最适合我的设置。'
- en: I often go to [colorhunt.co](https://colorhunt.co) or [canva.com](https://www.canva.com/colors/color-palettes)
    for inspiration to create a color scheme. When I have base colors I like, I go
    to [coolors.co](https://coolors.co/) if I need a few more.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我经常去 [colorhunt.co](https://colorhunt.co) 或 [canva.com](https://www.canva.com/colors/color-palettes)
    寻找灵感以创建配色方案。当我有喜欢的基础颜色时，如果还需要更多颜色，我会去 [coolors.co](https://coolors.co/)。
- en: Here’s the color palette I created for this tutorial (And yes, I like purple).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我为本教程创建的颜色调色板（是的，我喜欢紫色）。
- en: '![](../Images/16859174bd444096d52ae74915938758.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/16859174bd444096d52ae74915938758.png)'
- en: Screenshot by the author
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截图
- en: My font of choice is “PT Mono”, and with that decision, I can run the following
    code.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我选择的字体是“PT Mono”，根据这个决定，我可以运行以下代码。
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: If I now run the original code to create a bar chart, I get the following.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我现在运行原始代码以创建条形图，我得到以下结果。
- en: '![](../Images/af163bf5e829f5021c670cc5a3257d7c.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/af163bf5e829f5021c670cc5a3257d7c.png)'
- en: Bar chart created by the author
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 作者创建的条形图
- en: It’s a clear improvement, but not good enough. Let’s continue by formatting
    the title text and the axes labels.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一项明显的改进，但还不够好。让我们继续格式化标题文本和轴标签。
- en: 'Step 3: Text formatting'
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '步骤 3: 文本格式化'
- en: The first thing I notice is that the axes labels need to be larger. All information
    displayed in a chart should be easy to see straight away.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我首先注意到的是轴标签需要更大。图表中显示的所有信息都应该易于一眼看清。
- en: And I don’t like the way the numbers look on the x-axis. Instead of writing
    75000, I want to write 75K to get a less intimidating look.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我不喜欢 x 轴上数字的显示方式。我想用 75K 替代 75000，以获得一个更不令人畏惧的外观。
- en: That’s why I created this function.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我创建这个函数的原因。
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: For the title, I add parameters to increase the font size and adjust the position.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 对于标题，我添加了参数以增加字体大小并调整位置。
- en: Here’s the code to create the chart with my new modifications.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这是创建带有我新修改的图表的代码。
- en: '[PRE5]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: And here’s the result.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这是结果。
- en: '![](../Images/28eea820ca81b91c76fcff470f51aad2.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/28eea820ca81b91c76fcff470f51aad2.png)'
- en: Bar chart created by the author
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 作者创建的条形图
- en: It’s starting to look pretty good, but now it’s time to add some icon magic.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 现在看起来相当不错，但现在是时候添加一些图标魔法了。
- en: 'Step 4: Adding icons'
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '步骤 4: 添加图标'
- en: Adding images and icons to charts is fun but tricky. It’s not always straightforward
    to put them in the perfect location or with the ideal size.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 向图表中添加图像和图标很有趣，但也很棘手。将它们放在完美的位置或以理想的大小显示并不总是那么简单。
- en: The following function adds icons to the end of each bar in my graph by using
    `xycoords="data"` and the values from my DataFrame.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 以下函数通过使用`xycoords="data"`和来自我的数据框的值，将图形中每个条形的末尾添加图标。
- en: The `boxstyle` parameter inside `bboxprops` creates a white circular background.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`bboxprops`中的`boxstyle`参数创建了一个白色圆形背景。'
- en: '[PRE6]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: I want to put the icon on a white circle and add a border in the same dark purple
    as the chart background.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我想将图标放在一个白色圆圈上，并用与图表背景相同的深紫色添加边框。
- en: So far, I haven’t found a good way to handle the `zoom` parameter dynamically,
    so I tune it manually to get the correct sizes.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我还没有找到一种好的方法来动态处理`zoom`参数，所以我手动调整以获得正确的尺寸。
- en: Now my code for creating the chart looks like this.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我创建图表的代码如下。
- en: '[PRE7]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: And this is what I get.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我得到的结果。
- en: '![](../Images/01dfe35feb8f42b8b302a71ad09db829.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/01dfe35feb8f42b8b302a71ad09db829.png)'
- en: Bar chart created by the author
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 作者创建的条形图
- en: To add the star, I’ve created another function that adds a custom icon anywhere
    on the chart using `xycoords="axes fraction"`.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 为了添加星形图标，我创建了另一个函数，它使用 `xycoords="axes fraction"` 在图表上的任意位置添加自定义图标。
- en: '[PRE8]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: In this next trick, I make room for the star icon by adding additional spaces
    to the title and adjusting the `x` and `y` parameters to place the icon in the
    correct location.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个技巧中，我通过在标题中添加额外的空格并调整`x`和`y`参数，为星形图标留出空间，以将图标放置在正确的位置。
- en: '[PRE9]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Now our bar chart looks like this, and we’re almost finished.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的条形图是这样的，我们快完成了。
- en: '![](../Images/5b8829c09db2e4836942f792e9ed87bf.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5b8829c09db2e4836942f792e9ed87bf.png)'
- en: Bar chart created by the author
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 作者创建的条形图
- en: It’s looking excellent, but now I want to turn the chart into a more versatile
    format.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来很棒，但现在我想将图表转换为更通用的格式。
- en: And let’s do something about that squeezed look by adding some padding.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过添加一些填充来解决那个被挤压的外观问题。
- en: 'Step 5: Turning the chart into an Image'
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '步骤 5: 将图表转换为图像'
- en: For this part, I’ve created a function that takes the figure and turns it into
    a PIL Image. A PIL Image is easier to work with for the last steps of our tutorial.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我创建了一个函数，它将图形转换为PIL图像。PIL图像在我们教程的最后步骤中更易于操作。
- en: '[PRE10]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: I’ve also created the following function to add padding around the chart.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我还创建了以下函数，以在图表周围添加填充。
- en: '[PRE11]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Here’s a new version of the code to generate the chart where I’ve replaced the
    standard `plt.show()` with our new methods.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这是生成图表的新版本代码，我用我们的新方法替代了标准的`plt.show()`。
- en: '[PRE12]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: And here’s the result.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这是结果。
- en: '![](../Images/0a763b4611b2c631030faccd3c320cbe.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0a763b4611b2c631030faccd3c320cbe.png)'
- en: Bar chart created by the author
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 作者创建的条形图
- en: Fantastic!
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！
- en: We’ve now turned the default bar chart into something much more beautiful.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经把默认的条形图变成了更美丽的样子。
- en: Let’s finish things off with a bonus section.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用一个额外的部分结束。
- en: 'Bonus: Creating an animation'
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 额外部分：创建动画
- en: Because we’ve separated the code into reusable functions, it’s pretty easy to
    create an animation.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我们把代码分成了可重用的函数，所以创建动画相当简单。
- en: All we have to do is to run the code multiple times with different values and
    stitch the frames together.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要做的就是多次运行代码，使用不同的值，并将帧拼接在一起。
- en: Here’s a for loop where I take 200 of the last 2000 rows in the dataset. I’m
    also fixing the x-axis by setting `xlim=(0, 185000)` to avoid flickering values.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个循环，我从数据集中取了最后2000行中的200行。我还通过设置`xlim=(0, 185000)`来修复x轴，以避免值闪烁。
- en: '[PRE13]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Next, I use `imageio` to create a GIF.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我使用`imageio`来创建一个GIF。
- en: '[PRE14]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Here’s the result.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这是结果。
- en: '![](../Images/fbbc22098563ad0256383123f7151ed3.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fbbc22098563ad0256383123f7151ed3.png)'
- en: Visualization created by the author
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 作者创建的可视化
- en: That marks the end of this tutorial, and I hope you liked it. If you did, please
    share this story and subscribe to my [channel](https://medium.com/@oscarleo).
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这标志着本教程的结束，希望你喜欢。如果喜欢，请分享这个故事并订阅我的[频道](https://medium.com/@oscarleo)。
- en: 'You should also follow me on Twitter: [@oscarle3o](https://twitter.com/oscarl3o)'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以在Twitter上关注我：[@oscarle3o](https://twitter.com/oscarl3o)
- en: Thank you for reading.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读。
- en: See you next time! :)
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 下次见！ :)
