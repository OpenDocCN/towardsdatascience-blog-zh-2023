["```py\nimport pandas as pd\nfrom functools import reduce\n\ndf = pd.read_csv(\"/Users/byrondolon/Desktop/Updated_sales.csv\")\ndf.columns = [i.replace(\" \", \"_\") for i in df.columns]py\n```", "```py\nSELECT * FROM df\n```", "```py\ndf\n```", "```py\nSELECT * FROM df WHERE Order_ID IS NOT NULL\n```", "```py\n# Option 1\ndf.dropna(subset=\"Order_ID\")\n\n# Option 2\ndf.loc[df[\"Order_ID\"].notna()]\n```", "```py\nSELECT Order_ID, Product, Quantity_Ordered FROM df\n```", "```py\ndf[[\"Order_ID\", \"Product\", \"Quantity_Ordered\"]]\n```", "```py\ntarget_cols = [\"Order_ID\", \"Product\", \"Quantity_Ordered\"]\ndf[target_cols]\n```", "```py\nSELECT \n    Product, \n    COUNT(Order_ID)\nFROM df\nWHERE Order_ID IS NOT NULL\nGROUP BY Product\n```", "```py\ndf[df[\"Order_ID\"].notna()].groupby([\"Product\"])[\"Order_ID\"].count()\n```", "```py\ncondition = df[\"Order_ID\"].notna()\ngrouped_df = (\n    df.loc[condition]\n    .groupby(\"Product\")\n    [\"Order_ID\"]  # select column to count\n    .count()\n)\ngrouped_df\n```", "```py\nSELECT \n    Product,\n    COUNT(Order_ID)\nFROM df\nWHERE Order_ID IS NOT NULL\nAND Purchase_Address LIKE \"%Los Angeles%\"\nAND Quantity_Ordered == 1\nGROUP BY Product\nORDER BY COUNT(Order_ID) DESC\n```", "```py\nFILTER_CONDITIONS = [\n    df[\"Order_ID\"].notna(),\n    df[\"Purchase_Address\"].str.contains(\"Los Angeles\"),\n    df[\"Quantity_Ordered\"] == \"1\",\n]\n```", "```py\ndf.loc[condition_1 & condition_2 & condition_3]\n```", "```py\ndf.loc[FILTER_CONDITIONS]  \n# doesn't work -> you can't just pass a list into loc\n```", "```py\nreduce(lambda x, y: f\"{x} & {y}\", [\"condition_1\", \"condition_2\", \"condition_3\"])\n```", "```py\n>>> 'condition_1 & condition_2 & condition_3'\n```", "```py\nreduce(lambda x, y: x & y, FILTER_CONDITIONS)\n```", "```py\ndf[\"Order_ID\"].notna() & df[\"Purchase_Address\"].str.contains(\"Los Angeles\") & df[\"Quantity_Ordered\"] == \"1\"\n```", "```py\nfinal_df = (\n    df\n    .loc[reduce(lambda x, y: x & y, FILTER_CONDITIONS)]\n    .groupby(\"Product\")\n    .size()\n    .sort_values(ascending=False)\n)\n```", "```py\nfinal_df = (\n    df\n    .loc[reduce(lambda x, y: x & y, FILTER_CONDITIONS)]\n    .groupby(\"Product\")\n    [\"Order_ID\"].count()\n    .sort_values(ascending=False)\n)\n```", "```py\nfinal_df.reset_index()\n```"]