- en: 'Devil is in the detail: Become a Power BI champion by thinking out of the box'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 细节决定成败：通过跳出框框思维成为 Power BI 大师
- en: 原文：[https://towardsdatascience.com/devil-is-in-the-detail-become-a-power-bi-champion-by-thinking-out-of-the-box-54c173a07733](https://towardsdatascience.com/devil-is-in-the-detail-become-a-power-bi-champion-by-thinking-out-of-the-box-54c173a07733)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/devil-is-in-the-detail-become-a-power-bi-champion-by-thinking-out-of-the-box-54c173a07733](https://towardsdatascience.com/devil-is-in-the-detail-become-a-power-bi-champion-by-thinking-out-of-the-box-54c173a07733)
- en: Power Bi is full of “unsung heroes”! One of them, Analytics panel, combined
    with changing the visual type, helped me significantly improve the performance
    of the Power BI report
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Power BI 中充满了“无名英雄”！其中之一，分析面板，结合更改可视化类型，帮助我显著提升了 Power BI 报告的性能
- en: '[](https://datamozart.medium.com/?source=post_page-----54c173a07733--------------------------------)[![Nikola
    Ilic](../Images/9fab894b9696c0dfd80c5173188b720b.png)](https://datamozart.medium.com/?source=post_page-----54c173a07733--------------------------------)[](https://towardsdatascience.com/?source=post_page-----54c173a07733--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----54c173a07733--------------------------------)
    [Nikola Ilic](https://datamozart.medium.com/?source=post_page-----54c173a07733--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://datamozart.medium.com/?source=post_page-----54c173a07733--------------------------------)[![Nikola
    Ilic](../Images/9fab894b9696c0dfd80c5173188b720b.png)](https://datamozart.medium.com/?source=post_page-----54c173a07733--------------------------------)[](https://towardsdatascience.com/?source=post_page-----54c173a07733--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----54c173a07733--------------------------------)
    [Nikola Ilic](https://datamozart.medium.com/?source=post_page-----54c173a07733--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----54c173a07733--------------------------------)
    ·5 min read·Jul 7, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----54c173a07733--------------------------------)
    ·阅读时间 5 分钟·2023 年 7 月 7 日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/f684b4174148291c4fbc04b52f8c0e21.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f684b4174148291c4fbc04b52f8c0e21.png)'
- en: '[Photo by Alice Dietrich on Unsplash](https://unsplash.com/de/fotos/FwF_fKj5tBo)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[照片由 Alice Dietrich 提供，来源于 Unsplash](https://unsplash.com/de/fotos/FwF_fKj5tBo)'
- en: 'A few weeks ago, I was working on [performance tuning of the Power BI report](https://data-mozart.com/mastering-dp-500-implement-performance-improvements-in-power-query-and-data-sources/)
    for one of my clients. The report page was rendering super slow (15+ seconds).
    To provide you with a little background: the report uses a live connection to
    a tabular model hosted in SSAS Tabular 2016.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 几周前，我正在为我的一个客户进行[Power BI 报告的性能调优](https://data-mozart.com/mastering-dp-500-implement-performance-improvements-in-power-query-and-data-sources/)。报告页面的渲染非常缓慢（超过
    15 秒）。为了给你一点背景：该报告使用了与托管在 SSAS Tabular 2016 中的表格模型的实时连接。
- en: What if I tell you that I managed to speed up the performance of the report
    page more than twice, without changing a single line of DAX code behind the calculations?!
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如果我告诉你，我在没有更改任何 DAX 代码的情况下，将报告页面的性能提升了两倍，你会如何反应？
- en: Keep reading and you’ll see why very often the devil is in the detail and how
    thinking outside of the box may help you become a true Power BI champ:)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 继续阅读，你会发现为什么细节往往隐藏着问题，以及跳出框框思维如何帮助你成为真正的 Power BI 大师:)
- en: '![](../Images/1e6d958a420a66586a912bcac7d23c93.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1e6d958a420a66586a912bcac7d23c93.png)'
- en: Image by author
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: Let me quickly explain the illustration above. There is a Line and clustered
    column chart visual, where the four lines represent the user choice from the slicers
    on the left (Reporting threshold and three layers), while the columns are the
    total sales amount. Data is broken down per year and product. Each of the lines
    is calculated using DAX (by the way, there is no [SELECTEDVALUE function](https://data-mozart.com/display-selected-slicers-in-power-bi/)
    available in SSAS 2016).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 让我快速解释上面的插图。这里有一个折线图和簇状柱形图，其中四条线代表用户从左侧的切片器中选择（报告阈值和三个层次），而柱形图则是总销售额。数据按年份和产品进行细分。每条线都使用
    DAX 计算（顺便提一下，SSAS 2016 中没有[SELECTEDVALUE 函数](https://data-mozart.com/display-selected-slicers-in-power-bi/)）。
- en: 'I’ve turned on Performance Analyzer, grabbed the DAX query and executed it
    in the DAX Studio:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我已启用性能分析器，获取了 DAX 查询并在 DAX Studio 中执行了它：
- en: '![](../Images/70ab7ff401b4127da2b08fbab7ebbb25.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/70ab7ff401b4127da2b08fbab7ebbb25.png)'
- en: Image by author
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: As you may see, the query takes 13.5 seconds to execute (with cache cleared
    before run), whereas most of the time was spent within the [Formula Engine](https://data-mozart.com/vertipaq-brain-muscles-behind-power-bi/)
    (76%). This is important, because we’ll compare this result with an improved version
    of the report page.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，查询执行时间为13.5秒（在运行前清除缓存），而大部分时间花费在[公式引擎](https://data-mozart.com/vertipaq-brain-muscles-behind-power-bi/)中（76%）。这很重要，因为我们将把这个结果与改进后的报告页面进行比较。
- en: So, what would an experienced Power BI developer do to optimize this scenario?
    Rewrite DAX? WRONG!
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，一个有经验的 Power BI 开发人员会怎么做来优化这个场景？重写DAX？错误！
- en: Let’s see what can be done without changing the DAX logic!
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 让我们看看在不更改DAX逻辑的情况下可以做些什么！
- en: In case you didn’t know, Power BI offers you an undervalued feature, or let’s
    think of it as an “unsung hero”, which is called the Analytics panel.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不知道，Power BI 提供了一个被低估的功能，或者我们可以称之为“无名英雄”，即分析面板。
- en: '![](../Images/dc45c4bc2ba263747e3e84e43bd0674b.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dc45c4bc2ba263747e3e84e43bd0674b.png)'
- en: Image by author
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Most of us obviously spend the majority of our Power BI development time in
    the other two panels — data and format. So, you would be surprised how many Power
    BI developers are not even aware of this third panel, or even when aware, very
    rarely using it.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，我们中的大多数人将 Power BI 开发时间花在了另外两个面板——数据和格式上。所以，你会惊讶于有多少 Power BI 开发人员甚至不知道这个第三个面板，或者即使知道，也很少使用它。
- en: Without going deep into details, this panel lets you add additional analytic
    ingredients to your visuals — such as Min, Max, Average, Median lines, error bars,
    etc. Depending on the visual type, not all options are available! And, this was
    important in my use case.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 不深入细节，这个面板让你可以向你的可视化中添加额外的分析成分——如最小值、最大值、平均值、中位数线、误差条等。根据可视化的类型，并非所有选项都可用！在我的使用案例中，这一点非常重要。
- en: 'Once I opened the Analytics panel, only Error bars were available:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当我打开分析面板时，只能看到误差条：
- en: '![](../Images/8171688838a9b45cfccf5504e8b01a2c.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8171688838a9b45cfccf5504e8b01a2c.png)'
- en: Image by author
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Essentially, the idea here is, since these four lines are not changing based
    on the numbers in the visual itself (they have constant value based on the slicer
    selection), to leverage the Constant line feature from the Analytics panel. Since
    no Constant line is available with Line and clustered column chart visual, let’s
    duplicate our visual and change its type to a regular Clustered column chart.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 本质上，这里的想法是，由于这四条线的值不会根据可视化中的数字变化（它们的值是基于切片器选择的常量值），因此利用分析面板中的常量线功能。由于在折线图和聚合柱状图中没有常量线选项，我们将复制我们的可视化并将其类型更改为常规的聚合柱状图。
- en: '![](../Images/539e16094ec6dbc6608e832b31eff3a8.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/539e16094ec6dbc6608e832b31eff3a8.png)'
- en: Image by author
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: 'As you see, the “numbers” are here, but we are missing our lines. Let’s switch
    to the Analytics panel and create 4 constant lines, each based on the DAX measure
    produced by the slicer selection:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，“数字”在这里，但我们的线条却不见了。让我们切换到分析面板，创建4条常量线，每条基于切片器选择生成的DAX度量：
- en: '![](../Images/9b9bb7f5120dec3d92f2a9ec83c6a875.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9b9bb7f5120dec3d92f2a9ec83c6a875.png)'
- en: Image by author
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: The first step is to add a constant line. Next, expand the Line property and
    as a value, choose the “fX” button, which enables you to set the value of the
    constant line based on expression (in our case, that’s the expression generated
    by the DAX measure). Repeat the process for all four lines.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是添加一条常量线。接下来，展开“折线”属性，并选择“fX”按钮，允许你基于表达式（在我们这里是由DAX度量生成的表达式）设置常量线的值。对所有四条线重复此过程。
- en: '***I’m reminding you once again, please be aware that I haven’t touched the
    DAX code at all!***'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '***我再提醒你一次，请注意我完全没有触及DAX代码！***'
- en: 'Once I turned off the Y axis, this is how my “twin” visual looks:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我关闭了Y轴，这就是我的“副本”可视化的样子：
- en: '![](../Images/a7c290be769629e7369a7eb3d6be1091.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a7c290be769629e7369a7eb3d6be1091.png)'
- en: Image by author
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Pretty much the same, right?
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上是一样的，对吧？
- en: 'Ok, let’s now check the performance of this visual:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，现在让我们检查一下这个可视化的性能：
- en: '![](../Images/bc5b43fd15f309e59815037967229cc0.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bc5b43fd15f309e59815037967229cc0.png)'
- en: Image by author
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: It’s more than 5 seconds faster than the original one! If you carefully compare
    the previous DAX Studio screenshot, you will notice that the number of [Storage
    Engine queries](https://data-mozart.com/inside-vertipaq-compress-for-success/)
    is exactly the same as in the previous case (and SE time is practically the same),
    which means that the Storage Engine has exactly the same amount of work to do
    to retrieve the data.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 比原始版本快了超过 5 秒！如果你仔细对比之前的 DAX Studio 截图，你会注意到 [存储引擎查询](https://data-mozart.com/inside-vertipaq-compress-for-success/)
    的数量与之前的情况完全相同（而 SE 时间几乎相同），这意味着存储引擎需要完成的工作量完全相同以检索数据。
- en: The key difference is between the Formula Engine times — unlike in the original
    visual, where 75% of the total query time was spent in FE, this time it’s reduced
    to below 60%!
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 关键区别在于公式引擎的时间——与原始可视化中 75% 的总查询时间花费在 FE 上不同，这次减少到不到 60%！
- en: I was curious to see why is that happening and what is the main difference between
    the two query plans generated by the Formula Engine.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我很好奇为什么会发生这种情况，以及公式引擎生成的两个查询计划之间的主要区别是什么。
- en: '![](../Images/d3e7af005949bd5a51f0438276cb0487.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d3e7af005949bd5a51f0438276cb0487.png)'
- en: Slower query — part of the DAX code
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 较慢查询——DAX 代码部分
- en: '![](../Images/de6c1f4141f7af3f572cd664221291c0.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/de6c1f4141f7af3f572cd664221291c0.png)'
- en: Faster query — part of the DAX code
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 较快查询——DAX 代码部分
- en: 'The “only” difference between the two query plans — in the slower version,
    two virtual tables were created: one to calculate the value of the “column” in
    the visual (_ScopedCoreI0), and another to calculate the value for the lines in
    the same visual (_ScopedCoreDM0). Finally, these two tables were joined using
    the NATURALLEFTOUTERJOIN function.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 两个查询计划之间的“唯一”区别——在较慢的版本中，创建了两个虚拟表：一个用于计算可视化中的“列”值（_ScopedCoreI0），另一个用于计算同一可视化中的行值（_ScopedCoreDM0）。最后，这两个表使用
    NATURALLEFTOUTERJOIN 函数连接。
- en: In the faster version, there is no second table that calculates the lines’ value.
    Additionally, measures that calculate the lines’ value were wrapped with the [IGNORE](https://dax.guide/ignore/)
    function, which tags the measure(s) within the SUMMARIZECOLUMNS expression to
    be omitted from the evaluation of the non-blank rows.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在更快的版本中，没有计算行值的第二个表。此外，计算行值的度量值被包装在 [IGNORE](https://dax.guide/ignore/) 函数中，该函数标记
    SUMMARIZECOLUMNS 表达式中的度量值以便从非空行的评估中省略。
- en: Conclusion
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: As you have witnessed, changing the visual type, combined with the usage of
    the “unsung hero”, Analytics panel, ensured a significant performance improvement
    in this scenario. It’s not by coincidence that people say that “the devil is in
    the detail” — therefore, more often than not, thinking outside of the box will
    lead to some creative solutions.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，更改可视化类型，加上“无名英雄”分析面板的使用，确保了在这种情况下显著的性能提升。人们常说“魔鬼在细节中”绝非偶然——因此，往往跳出框框思考会带来一些创新的解决方案。
- en: Thanks for reading!
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读！
- en: '[Become a member and support thousands of authors on Medium!](https://datamozart.medium.com/membership)'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[成为会员并支持 Medium 上的成千上万位作者！](https://datamozart.medium.com/membership)'
