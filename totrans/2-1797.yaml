- en: Run Interactive Sessions With ChatGPT In Jupyter Notebook
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[https://towardsdatascience.com/run-interactive-sessions-with-chatgpt-in-jupyter-notebook-87e00f2ee461](https://towardsdatascience.com/run-interactive-sessions-with-chatgpt-in-jupyter-notebook-87e00f2ee461)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Use LangChain and IPyWidgets to run conversational sessions with ChatGPT about
    custom documents in Jupyter Notebook
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://konstantin-rink.medium.com/?source=post_page-----87e00f2ee461--------------------------------)[![Konstantin
    Rink](../Images/41bfc069d7382a0fd56f081eea7eb2d9.png)](https://konstantin-rink.medium.com/?source=post_page-----87e00f2ee461--------------------------------)[](https://towardsdatascience.com/?source=post_page-----87e00f2ee461--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----87e00f2ee461--------------------------------)
    [Konstantin Rink](https://konstantin-rink.medium.com/?source=post_page-----87e00f2ee461--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ¬∑Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----87e00f2ee461--------------------------------)
    ¬∑6 min read¬∑May 4, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3e2944ef6748fadb370f0238766a8a0f.png)'
  prefs: []
  type: TYPE_IMG
- en: Original photo by [Charles Etoroma](https://unsplash.com/@charlesetoroma?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    from [Unsplash](https://unsplash.com/de/fotos/ddPTOSMa-MI?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText).
  prefs: []
  type: TYPE_NORMAL
- en: In March 2023, OpenAI released its API for developers to access ChatGPT and
    its Whisper models. Since then, developers can integrate these services and models
    into their applications and products via their API. Many great tutorials have
    then been published on how to create your own ChatGPT Chat web app using their
    API together with Streamlit or Streamlit Chat.
  prefs: []
  type: TYPE_NORMAL
- en: This article proposes a **lighter-weight approach**. Instead of running or hosting
    a Streamlit server or working with Docker containers, **all the work is done in
    a Jupyter Notebook**.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, you will learn **how to run interactive sessions about your
    custom documents** **with** OpenAI‚Äôs LargeLanguageModel (LLM) **ChatGPT in Jupyter
    Notebook** by using **LangChain** and **IPyWidgets**.
  prefs: []
  type: TYPE_NORMAL
- en: 'The final result will look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/43e468f126b37e2c69924176c1f375f1.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1\. Demo of the final result (image by author).
  prefs: []
  type: TYPE_NORMAL
- en: The following chapters will explain each part of the code separately.
  prefs: []
  type: TYPE_NORMAL
- en: üíæ [Here](https://github.com/darinkist/MediumArticle_InteractiveChatGPTSessionsInJupyterNotebook)
    you can find the complete code as a Notebook.
  prefs: []
  type: TYPE_NORMAL
- en: Prerequisites
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before we can start working on our conversational sessions with ChatGPT, some
    things need to be done first.
  prefs: []
  type: TYPE_NORMAL
- en: OpenAI API key üîë
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Since we want to use ChatGPT, we first need a valid OpenAI API key. The needed
    key can be created under this [link](https://platform.openai.com/account/api-keys)
    and then by clicking on the
  prefs: []
  type: TYPE_NORMAL
- en: '`+ Create new secret key` button.'
  prefs: []
  type: TYPE_NORMAL
- en: OpenAI offers a free trial period before you charge money. The prices are super
    fair in my opinion, considering that hosting your own LLM is more expensive in
    many cases.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Installing the OpenAI package üì¶
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Once we have the key, we also need to install the official OpenAI package by
    running the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Installing the LangChain package ü¶úÔ∏èüîó
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: LangChain is a relatively new framework built on top of LLMs like ChatGPT. Its
    goal is to chain different components together to create more advanced use cases
    around LLM like question-answering over specific documents or chatbots.
  prefs: []
  type: TYPE_NORMAL
- en: 'To install it, run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Install or update Jupyter Widgets ü™ê
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you are using Jupyter Notebook or Jupyter Lab, ipywidgets should be already
    installed. However, it could be the case that you are using an older version of
    the package. This article uses the (latest) version `8.0.5`.
  prefs: []
  type: TYPE_NORMAL
- en: 'To install or update ipywidgets, run the command below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: After the successful installation, do a restart of your Jupyter Notebook/Lab.
  prefs: []
  type: TYPE_NORMAL
- en: '**Off-topic**: ‚Ä¶I know‚Ä¶ Jupiter does not have a ring ‚Äî its Saturn ü™ê :P'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Data üìë
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As promised above, we will not only create an interactive session with ChatGPT
    but also send our own document to ChatGPT and then ask questions about them. The
    document we use as an example is a Wikipedia article about the [Collapse of Silicon
    Valley Bank](https://en.wikipedia.org/wiki/Collapse_of_Silicon_Valley_Bank) (Wikipedia
    contributors, [CC BY-SA 3.0](https://en.wikipedia.org/wiki/Wikipedia:Text_of_the_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License))
  prefs: []
  type: TYPE_NORMAL
- en: '**Note**: I downloaded the mentioned article as a text file using the [wikipedia
    package](https://pypi.org/project/wikipedia/). Of course you can use any text
    files or DocumentLoaders you like.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Project structure
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Our project has the following folder structure
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Integrating ChatGPT with LangChain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that we have all the packages and tools we need, we can work on combining
    or using ChatGPT with LangChain. As mentioned above, LangChain has a number of
    helpful features to load documents and start conversation sessions with ChatGPT.
  prefs: []
  type: TYPE_NORMAL
- en: The code below shows the logic that we later combine with Jupyter Widgets.
  prefs: []
  type: TYPE_NORMAL
- en: In `line 10` we have to set our OpenAI API key. `Lines 12-13` load all text
    documents (in this example only one) from the specified `/documents` path.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chroma](https://github.com/chroma-core/chroma) ( `lines 15-16`) is an in-memory
    embedding database that contains our text document in the form of embeddings using
    `OpenAIEmbeddings`.'
  prefs: []
  type: TYPE_NORMAL
- en: After we initialized ChatGPT in `line 18`, we create a `ConversationalRetrievalChain`
    (`line 21`). To start a conversation with ChatGPT, we need to specify a question
    and a chat history (`lines 24‚Äì29 and line 31`) so that it remembers the previous
    conversations, for example, in case we reference in a follow-up question to a
    previous answer.
  prefs: []
  type: TYPE_NORMAL
- en: '**Note**: If you have the choice between Jupyter Notebook and Jupyter Lab,
    go for the latter one. With Jupyter Lab, you have more options to debug your code
    (i.e., the log console)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Combining it with an interactive design
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With the logic above, we could already start a conversation. However, it would
    not be interactive. For each new question, we would have to create a new cell
    with the code from `lines 24‚Äì29 and line 31`.
  prefs: []
  type: TYPE_NORMAL
- en: To make our conversation interactive, we will use Jupyter widgets, CSS, and
    optionally two avatar images and a loading animation gif.
  prefs: []
  type: TYPE_NORMAL
- en: I used the avatar images ([bear](https://www.flaticon.com/free-icon/bear_3940403?term=animal+bear&page=1&position=21&origin=search&related_id=3940403),
    [cat](https://www.flaticon.com/free-icon/cat_4322991?term=animal+cat&page=1&position=60&origin=search&related_id=4322991))from
    [Animal icons created by Freepik ‚Äî Flaticon](https://www.flaticon.com/free-icons/animal)
    (*Flaticon license Free for personal and commercial use with attribution*)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: And the [loading animation](https://loading.io/spinner/bars/-bounce-bar-column-chart-equalizer-histogram-rectangle-block-progress-facebook)
    ([free license](https://loading.io/license/#free-license)) from loading.io.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All images are located in the `images/` folder.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The following CSS and HTML was used from [Bootstrap snippet. chat app](https://www.bootdey.com/snippets/view/chat-app)
    ([MIT license](https://www.bootdey.com/license))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code snippet below shows the libraries we need to import first
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: After the import, we add the following code to a new cell. This is necessary
    because we use the `%%html` cell magic.
  prefs: []
  type: TYPE_NORMAL
- en: The code below shows how the logic from above (Integrating ChatGPT with LangChain)
    is combined with HTML code.
  prefs: []
  type: TYPE_NORMAL
- en: To make our session interactive, we need to create a method that is trigged
    by changes to the Jupyter Text Widget (our input filed).
  prefs: []
  type: TYPE_NORMAL
- en: We have to set the `text.continuous_update` to `False`. Otherwise, our defined
    method would be triggered with every single character we type in.
  prefs: []
  type: TYPE_NORMAL
- en: Last but not least, we define the appearance or layout of the input field, output,
    and loading bar.
  prefs: []
  type: TYPE_NORMAL
- en: We use the `flex_flow="column-reverse"` here to always have the scroll bar at
    the bottom, so we don‚Äôt have to scroll down for each new message.
  prefs: []
  type: TYPE_NORMAL
- en: That‚Äôs it! Now we can start an interactive session!
  prefs: []
  type: TYPE_NORMAL
- en: The complete code can be found [here](https://github.com/darinkist/MediumArticle_InteractiveChatGPTSessionsInJupyterNotebook)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Demo Session
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As mentioned above, I used for this demo an article about the Silicon Valley
    Bank‚Äôs collapse. Since this event happened after ChatGPT‚Äôs latest update or refresh,
    it is not aware of the collapse.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let‚Äôs find it out by using the official console (figure 2):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1d08f289be2476ab9c7172aef8dec88b.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2\. ChatGPT‚Äôs ([ChatGPT Mar 23 Version](https://help.openai.com/en/articles/6825453-chatgpt-release-notes))
    answer (image by author).
  prefs: []
  type: TYPE_NORMAL
- en: 'We can see that the current version (March 23) is not aware of the collapse.
    Let‚Äôs start our interactive session:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/faf1cc78574e8db19129b5f05bcfd2e3.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3\. Interactive output (image by author).
  prefs: []
  type: TYPE_NORMAL
- en: B√ÑM! With the information we provided via LangChain, ChatGPT can provide more
    detailed answers about the collapse.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you are looking for a lightweight alternative to create your own ChatGPT
    chat web application, then this approach could be a pretty good alternative. All
    the needed work can be done in a Jupyter Notebook with LangChain, IPyWidgets,
    and HTML/CSS. Since LangChain is relatively new, I expect many updates and possible
    code changes soon.
  prefs: []
  type: TYPE_NORMAL
- en: Sources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Wikipedia contributors. (2023, May 1). Collapse of Silicon Valley Bank. In *Wikipedia,
    The Free Encyclopedia*. Retrieved 18:56, May 1, 2023, from [https://en.wikipedia.org/w/index.php?title=Collapse_of_Silicon_Valley_Bank&oldid=1152681730](https://en.wikipedia.org/w/index.php?title=Collapse_of_Silicon_Valley_Bank&oldid=1152681730)
  prefs: []
  type: TYPE_NORMAL
