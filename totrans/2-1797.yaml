- en: Run Interactive Sessions With ChatGPT In Jupyter Notebook
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Jupyter Notebook 中与 ChatGPT 运行交互式会话
- en: 原文：[https://towardsdatascience.com/run-interactive-sessions-with-chatgpt-in-jupyter-notebook-87e00f2ee461](https://towardsdatascience.com/run-interactive-sessions-with-chatgpt-in-jupyter-notebook-87e00f2ee461)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/run-interactive-sessions-with-chatgpt-in-jupyter-notebook-87e00f2ee461](https://towardsdatascience.com/run-interactive-sessions-with-chatgpt-in-jupyter-notebook-87e00f2ee461)
- en: Use LangChain and IPyWidgets to run conversational sessions with ChatGPT about
    custom documents in Jupyter Notebook
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 LangChain 和 IPyWidgets 在 Jupyter Notebook 中与 ChatGPT 进行关于自定义文档的对话
- en: '[](https://konstantin-rink.medium.com/?source=post_page-----87e00f2ee461--------------------------------)[![Konstantin
    Rink](../Images/41bfc069d7382a0fd56f081eea7eb2d9.png)](https://konstantin-rink.medium.com/?source=post_page-----87e00f2ee461--------------------------------)[](https://towardsdatascience.com/?source=post_page-----87e00f2ee461--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----87e00f2ee461--------------------------------)
    [Konstantin Rink](https://konstantin-rink.medium.com/?source=post_page-----87e00f2ee461--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://konstantin-rink.medium.com/?source=post_page-----87e00f2ee461--------------------------------)[![Konstantin
    Rink](../Images/41bfc069d7382a0fd56f081eea7eb2d9.png)](https://konstantin-rink.medium.com/?source=post_page-----87e00f2ee461--------------------------------)[](https://towardsdatascience.com/?source=post_page-----87e00f2ee461--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----87e00f2ee461--------------------------------)
    [Konstantin Rink](https://konstantin-rink.medium.com/?source=post_page-----87e00f2ee461--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----87e00f2ee461--------------------------------)
    ·6 min read·May 4, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----87e00f2ee461--------------------------------)
    ·阅读时间 6 分钟·2023年5月4日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/3e2944ef6748fadb370f0238766a8a0f.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3e2944ef6748fadb370f0238766a8a0f.png)'
- en: Original photo by [Charles Etoroma](https://unsplash.com/@charlesetoroma?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    from [Unsplash](https://unsplash.com/de/fotos/ddPTOSMa-MI?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 原始照片由 [Charles Etoroma](https://unsplash.com/@charlesetoroma?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    提供，来自 [Unsplash](https://unsplash.com/de/fotos/ddPTOSMa-MI?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)。
- en: In March 2023, OpenAI released its API for developers to access ChatGPT and
    its Whisper models. Since then, developers can integrate these services and models
    into their applications and products via their API. Many great tutorials have
    then been published on how to create your own ChatGPT Chat web app using their
    API together with Streamlit or Streamlit Chat.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 2023年3月，OpenAI 发布了其 API，供开发者访问 ChatGPT 和 Whisper 模型。从那时起，开发者可以通过 API 将这些服务和模型集成到他们的应用程序和产品中。许多精彩的教程随后发布了如何使用其
    API 结合 Streamlit 或 Streamlit Chat 创建自己的 ChatGPT 聊天 web 应用程序。
- en: This article proposes a **lighter-weight approach**. Instead of running or hosting
    a Streamlit server or working with Docker containers, **all the work is done in
    a Jupyter Notebook**.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本文提出了一种 **更轻量级的方法**。无需运行或托管 Streamlit 服务器或使用 Docker 容器，**所有工作都在 Jupyter Notebook
    中完成**。
- en: In this article, you will learn **how to run interactive sessions about your
    custom documents** **with** OpenAI’s LargeLanguageModel (LLM) **ChatGPT in Jupyter
    Notebook** by using **LangChain** and **IPyWidgets**.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，你将学习 **如何使用 OpenAI 的大型语言模型（LLM）ChatGPT 在 Jupyter Notebook 中运行关于自定义文档的交互式会话**，方法是使用
    **LangChain** 和 **IPyWidgets**。
- en: 'The final result will look like this:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 最终结果将如下所示：
- en: '![](../Images/43e468f126b37e2c69924176c1f375f1.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/43e468f126b37e2c69924176c1f375f1.png)'
- en: Figure 1\. Demo of the final result (image by author).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1\. 最终结果的演示（图片来自作者）。
- en: The following chapters will explain each part of the code separately.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 以下章节将分别解释代码的每一部分。
- en: 💾 [Here](https://github.com/darinkist/MediumArticle_InteractiveChatGPTSessionsInJupyterNotebook)
    you can find the complete code as a Notebook.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 💾 [这里](https://github.com/darinkist/MediumArticle_InteractiveChatGPTSessionsInJupyterNotebook)
    你可以找到完整的代码 Notebook。
- en: Prerequisites
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 先决条件
- en: Before we can start working on our conversational sessions with ChatGPT, some
    things need to be done first.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始与 ChatGPT 的对话之前，需要先完成一些准备工作。
- en: OpenAI API key 🔑
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: OpenAI API 密钥 🔑
- en: Since we want to use ChatGPT, we first need a valid OpenAI API key. The needed
    key can be created under this [link](https://platform.openai.com/account/api-keys)
    and then by clicking on the
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们想要使用 ChatGPT，首先需要一个有效的 OpenAI API 密钥。所需的密钥可以在 [此链接](https://platform.openai.com/account/api-keys)
    中创建，然后点击
- en: '`+ Create new secret key` button.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '`+ 创建新的密钥` 按钮。'
- en: OpenAI offers a free trial period before you charge money. The prices are super
    fair in my opinion, considering that hosting your own LLM is more expensive in
    many cases.
  id: totrans-21
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: OpenAI 提供了一个免费的试用期，之后才收费。在我看来，价格非常公平，考虑到在许多情况下，托管你自己的 LLM 更为昂贵。
- en: Installing the OpenAI package 📦
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 OpenAI 包 📦
- en: 'Once we have the key, we also need to install the official OpenAI package by
    running the following command:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们拥有密钥，我们还需要通过运行以下命令来安装官方 OpenAI 包：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Installing the LangChain package 🦜️🔗
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 LangChain 包 🦜️🔗
- en: LangChain is a relatively new framework built on top of LLMs like ChatGPT. Its
    goal is to chain different components together to create more advanced use cases
    around LLM like question-answering over specific documents or chatbots.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: LangChain 是一个相对较新的框架，建立在 ChatGPT 等 LLMs 之上。它的目标是将不同的组件链式连接在一起，以创建更高级的使用案例，例如特定文档上的问答或聊天机器人。
- en: 'To install it, run the following command:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装它，请运行以下命令：
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Install or update Jupyter Widgets 🪐
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装或更新 Jupyter Widgets 🪐
- en: If you are using Jupyter Notebook or Jupyter Lab, ipywidgets should be already
    installed. However, it could be the case that you are using an older version of
    the package. This article uses the (latest) version `8.0.5`.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用 Jupyter Notebook 或 Jupyter Lab，ipywidgets 应该已经安装。然而，可能你正在使用旧版本的包。本文使用的是（最新）版本
    `8.0.5`。
- en: 'To install or update ipywidgets, run the command below:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装或更新 ipywidgets，请运行下面的命令：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: After the successful installation, do a restart of your Jupyter Notebook/Lab.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 安装成功后，重启你的 Jupyter Notebook/Lab。
- en: '**Off-topic**: …I know… Jupiter does not have a ring — its Saturn 🪐 :P'
  id: totrans-34
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**题外话**：…我知道… 木星没有光环 — 这是土星 🪐 :P'
- en: Data 📑
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据 📑
- en: As promised above, we will not only create an interactive session with ChatGPT
    but also send our own document to ChatGPT and then ask questions about them. The
    document we use as an example is a Wikipedia article about the [Collapse of Silicon
    Valley Bank](https://en.wikipedia.org/wiki/Collapse_of_Silicon_Valley_Bank) (Wikipedia
    contributors, [CC BY-SA 3.0](https://en.wikipedia.org/wiki/Wikipedia:Text_of_the_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License))
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 正如上面承诺的，我们不仅会创建一个与 ChatGPT 的互动会话，还会将自己的文档发送给 ChatGPT，然后询问有关这些文档的问题。我们用作示例的文档是关于
    [硅谷银行倒闭](https://en.wikipedia.org/wiki/Collapse_of_Silicon_Valley_Bank) 的 Wikipedia
    文章（Wikipedia 贡献者，[CC BY-SA 3.0](https://en.wikipedia.org/wiki/Wikipedia:Text_of_the_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License)）
- en: '**Note**: I downloaded the mentioned article as a text file using the [wikipedia
    package](https://pypi.org/project/wikipedia/). Of course you can use any text
    files or DocumentLoaders you like.'
  id: totrans-37
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意**：我使用 [wikipedia package](https://pypi.org/project/wikipedia/) 下载了提到的文章作为文本文件。当然，你也可以使用任何你喜欢的文本文件或
    DocumentLoaders。'
- en: Project structure
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目结构
- en: Our project has the following folder structure
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的项目有以下文件夹结构
- en: '[PRE3]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Integrating ChatGPT with LangChain
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 ChatGPT 与 LangChain 集成
- en: Now that we have all the packages and tools we need, we can work on combining
    or using ChatGPT with LangChain. As mentioned above, LangChain has a number of
    helpful features to load documents and start conversation sessions with ChatGPT.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经拥有了所需的所有包和工具，我们可以着手将 ChatGPT 与 LangChain 结合使用。正如上面提到的，LangChain 具有许多有用的功能来加载文档和开始与
    ChatGPT 的对话会话。
- en: The code below shows the logic that we later combine with Jupyter Widgets.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码展示了我们稍后将与 Jupyter Widgets 结合的逻辑。
- en: In `line 10` we have to set our OpenAI API key. `Lines 12-13` load all text
    documents (in this example only one) from the specified `/documents` path.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `line 10` 中，我们必须设置我们的 OpenAI API 密钥。`Lines 12-13` 从指定的 `/documents` 路径加载所有文本文件（在本例中只有一个）。
- en: '[Chroma](https://github.com/chroma-core/chroma) ( `lines 15-16`) is an in-memory
    embedding database that contains our text document in the form of embeddings using
    `OpenAIEmbeddings`.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[Chroma](https://github.com/chroma-core/chroma) （`lines 15-16`）是一个内存中的嵌入数据库，包含我们以
    `OpenAIEmbeddings` 形式的文本文档。'
- en: After we initialized ChatGPT in `line 18`, we create a `ConversationalRetrievalChain`
    (`line 21`). To start a conversation with ChatGPT, we need to specify a question
    and a chat history (`lines 24–29 and line 31`) so that it remembers the previous
    conversations, for example, in case we reference in a follow-up question to a
    previous answer.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们初始化 ChatGPT 的 `line 18` 后，我们创建了一个 `ConversationalRetrievalChain` （`line 21`）。要开始与
    ChatGPT 对话，我们需要指定一个问题和聊天记录（`lines 24–29 和 line 31`），以便它记住之前的对话，例如，当我们在后续问题中引用之前的答案时。
- en: '**Note**: If you have the choice between Jupyter Notebook and Jupyter Lab,
    go for the latter one. With Jupyter Lab, you have more options to debug your code
    (i.e., the log console)'
  id: totrans-47
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意**：如果你在选择 Jupyter Notebook 和 Jupyter Lab 之间犹豫，请选择后者。使用 Jupyter Lab，你有更多的选项来调试代码（即，日志控制台）。'
- en: Combining it with an interactive design
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将其与交互设计结合起来。
- en: With the logic above, we could already start a conversation. However, it would
    not be interactive. For each new question, we would have to create a new cell
    with the code from `lines 24–29 and line 31`.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 根据上述逻辑，我们已经可以开始对话了。然而，这将不会是互动式的。对于每个新问题，我们都需要创建一个新单元格，包含`lines 24–29 and line
    31`中的代码。
- en: To make our conversation interactive, we will use Jupyter widgets, CSS, and
    optionally two avatar images and a loading animation gif.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使我们的对话具有互动性，我们将使用 Jupyter 小部件、CSS，并可以选择使用两个头像图像和一个加载动画 gif。
- en: I used the avatar images ([bear](https://www.flaticon.com/free-icon/bear_3940403?term=animal+bear&page=1&position=21&origin=search&related_id=3940403),
    [cat](https://www.flaticon.com/free-icon/cat_4322991?term=animal+cat&page=1&position=60&origin=search&related_id=4322991))from
    [Animal icons created by Freepik — Flaticon](https://www.flaticon.com/free-icons/animal)
    (*Flaticon license Free for personal and commercial use with attribution*)
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我使用了头像图像（[熊](https://www.flaticon.com/free-icon/bear_3940403?term=animal+bear&page=1&position=21&origin=search&related_id=3940403)，[猫](https://www.flaticon.com/free-icon/cat_4322991?term=animal+cat&page=1&position=60&origin=search&related_id=4322991)）来自[Freepik
    创建的动物图标 — Flaticon](https://www.flaticon.com/free-icons/animal)（*Flaticon 许可，个人和商业使用均免费，需署名*）。
- en: And the [loading animation](https://loading.io/spinner/bars/-bounce-bar-column-chart-equalizer-histogram-rectangle-block-progress-facebook)
    ([free license](https://loading.io/license/#free-license)) from loading.io.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以及来自 loading.io 的[加载动画](https://loading.io/spinner/bars/-bounce-bar-column-chart-equalizer-histogram-rectangle-block-progress-facebook)（[免费许可](https://loading.io/license/#free-license)）。
- en: All images are located in the `images/` folder.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有图像都位于`images/`文件夹中。
- en: The following CSS and HTML was used from [Bootstrap snippet. chat app](https://www.bootdey.com/snippets/view/chat-app)
    ([MIT license](https://www.bootdey.com/license))
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下 CSS 和 HTML 来自[Bootstrap snippet. chat app](https://www.bootdey.com/snippets/view/chat-app)（[MIT
    许可](https://www.bootdey.com/license)）。
- en: The code snippet below shows the libraries we need to import first
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码片段展示了我们需要首先导入的库。
- en: '[PRE4]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: After the import, we add the following code to a new cell. This is necessary
    because we use the `%%html` cell magic.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 导入后，我们将以下代码添加到一个新单元格中。这是必要的，因为我们使用了`%%html`单元格魔法。
- en: The code below shows how the logic from above (Integrating ChatGPT with LangChain)
    is combined with HTML code.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码展示了如何将上述逻辑（将 ChatGPT 与 LangChain 集成）与 HTML 代码结合起来。
- en: To make our session interactive, we need to create a method that is trigged
    by changes to the Jupyter Text Widget (our input filed).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使我们的会话具有互动性，我们需要创建一个由 Jupyter Text Widget（我们的输入字段）更改触发的方法。
- en: We have to set the `text.continuous_update` to `False`. Otherwise, our defined
    method would be triggered with every single character we type in.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须将`text.continuous_update`设置为`False`。否则，我们定义的方法将在每个字符输入时被触发。
- en: Last but not least, we define the appearance or layout of the input field, output,
    and loading bar.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 最后但同样重要的是，我们定义了输入字段、输出和加载条的外观或布局。
- en: We use the `flex_flow="column-reverse"` here to always have the scroll bar at
    the bottom, so we don’t have to scroll down for each new message.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里使用`flex_flow="column-reverse"`，以便始终将滚动条置于底部，这样我们就不必为每条新消息向下滚动。
- en: That’s it! Now we can start an interactive session!
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 就这些！现在我们可以开始一个互动会话了！
- en: The complete code can be found [here](https://github.com/darinkist/MediumArticle_InteractiveChatGPTSessionsInJupyterNotebook)
  id: totrans-64
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 完整代码可以在[这里](https://github.com/darinkist/MediumArticle_InteractiveChatGPTSessionsInJupyterNotebook)找到。
- en: Demo Session
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 演示会话
- en: As mentioned above, I used for this demo an article about the Silicon Valley
    Bank’s collapse. Since this event happened after ChatGPT’s latest update or refresh,
    it is not aware of the collapse.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所述，我为这个演示使用了一篇关于硅谷银行倒闭的文章。由于此事件发生在 ChatGPT 最近的更新或刷新之后，它无法了解这次倒闭。
- en: 'Let’s find it out by using the official console (figure 2):'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过使用官方控制台（图 2）来找出答案：
- en: '![](../Images/1d08f289be2476ab9c7172aef8dec88b.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1d08f289be2476ab9c7172aef8dec88b.png)'
- en: Figure 2\. ChatGPT’s ([ChatGPT Mar 23 Version](https://help.openai.com/en/articles/6825453-chatgpt-release-notes))
    answer (image by author).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2\. ChatGPT 的（[ChatGPT Mar 23 版本](https://help.openai.com/en/articles/6825453-chatgpt-release-notes)）回答（图片由作者提供）。
- en: 'We can see that the current version (March 23) is not aware of the collapse.
    Let’s start our interactive session:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到当前版本（3月23日）尚未了解倒闭情况。让我们开始我们的互动环节：
- en: '![](../Images/faf1cc78574e8db19129b5f05bcfd2e3.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/faf1cc78574e8db19129b5f05bcfd2e3.png)'
- en: Figure 3\. Interactive output (image by author).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图3\. 互动输出（作者提供的图片）。
- en: BÄM! With the information we provided via LangChain, ChatGPT can provide more
    detailed answers about the collapse.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: BÄM！通过我们提供的信息，ChatGPT能够提供关于倒闭的更详细回答。
- en: Conclusion
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: If you are looking for a lightweight alternative to create your own ChatGPT
    chat web application, then this approach could be a pretty good alternative. All
    the needed work can be done in a Jupyter Notebook with LangChain, IPyWidgets,
    and HTML/CSS. Since LangChain is relatively new, I expect many updates and possible
    code changes soon.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在寻找一个轻量级的替代方案来创建你自己的ChatGPT聊天网页应用，那么这个方法可能是一个相当不错的选择。所有需要的工作都可以在Jupyter Notebook中通过LangChain、IPyWidgets和HTML/CSS完成。由于LangChain相对较新，我预计不久会有许多更新和可能的代码更改。
- en: Sources
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 来源
- en: Wikipedia contributors. (2023, May 1). Collapse of Silicon Valley Bank. In *Wikipedia,
    The Free Encyclopedia*. Retrieved 18:56, May 1, 2023, from [https://en.wikipedia.org/w/index.php?title=Collapse_of_Silicon_Valley_Bank&oldid=1152681730](https://en.wikipedia.org/w/index.php?title=Collapse_of_Silicon_Valley_Bank&oldid=1152681730)
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 维基百科贡献者。（2023年5月1日）。硅谷银行倒闭。在*维基百科，自由百科全书*中。检索于2023年5月1日18:56，来自[https://en.wikipedia.org/w/index.php?title=Collapse_of_Silicon_Valley_Bank&oldid=1152681730](https://en.wikipedia.org/w/index.php?title=Collapse_of_Silicon_Valley_Bank&oldid=1152681730)
