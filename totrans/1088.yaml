- en: How Many Keys Are Enough to Play the Piano?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-many-keys-are-enough-to-play-the-piano-639916f47a22](https://towardsdatascience.com/how-many-keys-are-enough-to-play-the-piano-639916f47a22)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Finding an answer with Python, MIDI, and Matplotlib
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://dmitryelj.medium.com/?source=post_page-----639916f47a22--------------------------------)[![Dmitrii
    Eliuseev](../Images/7c48f0c016930ead59ddb785eaf3e0e6.png)](https://dmitryelj.medium.com/?source=post_page-----639916f47a22--------------------------------)[](https://towardsdatascience.com/?source=post_page-----639916f47a22--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----639916f47a22--------------------------------)
    [Dmitrii Eliuseev](https://dmitryelj.medium.com/?source=post_page-----639916f47a22--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----639916f47a22--------------------------------)
    ·9 min read·Dec 23, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c44ccfaa64fbed9efdb75a2dc66e3bf7.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo made by Cedrik Malabanan, [Unsplash](https://unsplash.com/@ohboyced)
  prefs: []
  type: TYPE_NORMAL
- en: 'Learning to play the piano is a challenging and fun process, but every novice
    will have a dilemma: what kind of instrument to buy? The choice in the market
    is wide, from the tiny two-octave instruments like in the photo above to 70kg
    full-size keyboards in a wooden cabinet. On the one hand, having extra keys will
    never hurt; on the other hand, there is always a trade-off between size, weight,
    and price.'
  prefs: []
  type: TYPE_NORMAL
- en: Obviously, one of the ways is to just ask a teacher about what he or she can
    recommend, but maybe most musicians just never thought about music from that perspective.
    Is there any more quantitative way to find an answer? Actually, the answer is
    yes; we can easily make a musical note distribution using Python.
  prefs: []
  type: TYPE_NORMAL
- en: This tutorial can be useful for beginners in data science; it does not require
    any complex math or libraries, and the results are easy to interpret. It can also
    be useful for those who want to learn to play music but have not yet decided what
    kind of instrument to buy.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s get into it!
  prefs: []
  type: TYPE_NORMAL
- en: Data Source
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For data analysis, I will be using [MIDI](https://en.wikipedia.org/wiki/MIDI)
    files. It’s a pretty old format; the first MIDI (Musical Instrument Digital Interface)
    specification was published in 1983\. The key feature of MIDI files is that they
    store the music not as raw audio but in the “original” notation form. Every record
    in a midi file contains the instrument type, pitch, timing, and other parameters.
    For example, I can open a *Bagatelle in C minor* written by Beethoven in a free
    [MuseScore](https://github.com/musescore/MuseScore) application and see something
    like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7ebeee591b4fd2cbb2918453dc68c3ad.png)'
  prefs: []
  type: TYPE_IMG
- en: MuseScore editor, Screenshot by author
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s open the same file in Python and dump its content:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The output looks like this (a full file is longer; here, I print only the first
    lines from each track):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'As we can see, the file contains three tracks, the first has only the metadata,
    and the other two contain some extra data and musical notes. To find how many
    different notes the music piece has, we will use only`note_on` records. Each MIDI
    note has a digital code in the 21..108 range:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a34009f56ad10fc8baf17b0fd047aa26.png)'
  prefs: []
  type: TYPE_IMG
- en: MIDI note codes, Image source [Wikipedia](https://fr.wikipedia.org/wiki/Musical_Instrument_Digital_Interface)
  prefs: []
  type: TYPE_NORMAL
- en: 'Using this information, let’s make a function that extracts all notes from
    a MIDI file into the Python list:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'As a next step, let’s create another function that processes all MIDI files
    in a folder:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: We will also need some MIDI files. These files, especially for classical music
    (which is in the public domain), are often available for free, and it is easy
    to find them. For my analysis, I was using files from [http://www.piano-midi.de](http://www.piano-midi.de/)
    (CC BY-SA German license).
  prefs: []
  type: TYPE_NORMAL
- en: Distribution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'At this point, we have a method that extracts all musical notes from a set
    of MIDI files. We can easily see which notes are used more often using a **histogram**
    in Matplotlib:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The output looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fc5a9cea18e481bf0c8b122e56cf285d.png)'
  prefs: []
  type: TYPE_IMG
- en: Notes distribution, Image by author
  prefs: []
  type: TYPE_NORMAL
- en: The `plt.hist` method is doing all the needed jobs to calculate value distribution
    from the list and plot it. As we can see, the distribution looks normal. The most
    used keys are located in the center of the keyboard, which makes sense.
  prefs: []
  type: TYPE_NORMAL
- en: Visualization
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Keyboard** Technically speaking, the problem is solved, and using only about
    20 lines of Python code, we can see the note distribution for different music
    pieces. But practically, it’s not convenient, especially for musicians, and we
    can do it much better. A Matplotlib library can draw more than just scientific
    graphs. Let’s draw a piano keyboard:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The output looks like this, which is much better than a histogram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5c74b603d9ca342ff0cf4d1a2bd9fc0f.png)'
  prefs: []
  type: TYPE_IMG
- en: Piano keyboard in Matplotlib, Image by author
  prefs: []
  type: TYPE_NORMAL
- en: '**Heatmap** The next step is to visualize the distribution. A convenient way
    to do it is to use a heatmap that we can draw over our keyboard. First, we need
    a method to convert key names (C3, D3, etc.) to MIDI codes. It’s just a simple
    linear conversion:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Second, we can use Python’s `Counter` class to know how often each note was
    used:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Using this code, we can use an occurrence frequency for each note as an alpha
    channel for a heatmap:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: The same logic applies to the black keys; for the sake of simplicity, I’ll omit
    this code here.
  prefs: []
  type: TYPE_NORMAL
- en: Results
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let’s finally answer the question in the title of the story. How many piano
    keys do we need to learn to play the piano?
  prefs: []
  type: TYPE_NORMAL
- en: To get an answer, we first need to find a proper repertoire. Lots of books with
    piano lessons are available on Amazon, and usually, their first pages can be viewed
    for free, which is enough to collect the list of titles. With a title, it is easy
    to find a MIDI file. Well, let’s see some results.
  prefs: []
  type: TYPE_NORMAL
- en: 'The **first year of study:** **Good King Wenceslas** (a Christmas carol):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6daf23bb9e9e4aaf5533ea393d02a840.png)'
  prefs: []
  type: TYPE_IMG
- en: Screenshot by author
  prefs: []
  type: TYPE_NORMAL
- en: As we can see, the melody is simple, it mostly uses only white keys, and the
    real note range is about 3 octaves. But there are no pianos with a 3-octave range
    available, and the closest one has four octaves.
  prefs: []
  type: TYPE_NORMAL
- en: 'A **second year of study: Bagatelle in C minor, WoO 52** (Beethoven)'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/eb2e419e4cbf559c84d5ad4f374858b5.png)'
  prefs: []
  type: TYPE_IMG
- en: Screenshot by author
  prefs: []
  type: TYPE_NORMAL
- en: As we can see, it’s more complex, more black keys are used, and the range of
    this piece is about 4.5 octaves.
  prefs: []
  type: TYPE_NORMAL
- en: 'A **third year of study: Consolations, S. 172** (Franz Liszt)'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f97e6642005aff0e6b3eceb5eec3bf73.png)'
  prefs: []
  type: TYPE_IMG
- en: Screenshot by author
  prefs: []
  type: TYPE_NORMAL
- en: In this case, the range is wider; almost all 7 octaves are required to play
    this piece.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In this article, I showed how to process MIDI files and make a musical note
    distribution in the form of a histogram and piano keyboard heatmap. It can be
    useful not only to answer a question like “How many keys do we need?”. Converting
    a melody or the list of files to a heatmap allows us to compare the styles of
    different pieces, different composers, or different genres, like classical and
    pop. It can be part of a larger analysis in the musicology or cultural anthropology
    domains. For example, this is a note distribution in J.S. Bach''s music, and it
    is clearly visible that the range is smaller:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/583f5f7e7e784e5babf1b4ce2a61c229.png)'
  prefs: []
  type: TYPE_IMG
- en: J.S. Bach note distribution, Image by author
  prefs: []
  type: TYPE_NORMAL
- en: 'Readers may wonder why, and the answer is easy: Bach was writing music for
    the [harpsichord](https://en.wikipedia.org/wiki/Harpsichord), and the modern piano
    was not invented yet at that time. It is interesting that now, more than 300 years
    later, we can easily see this in the heatmap!'
  prefs: []
  type: TYPE_NORMAL
- en: As for piano lessons, I must admit that my initial idea that the instrument
    with a 4-octave range is enough to learn to play the piano is wrong. It can be
    okay for the first year of education, but as we can see from the heatmap, at least
    a 6-octave range is required to play music, even during the second year of study.
  prefs: []
  type: TYPE_NORMAL
- en: 'Those who are interested in social data analysis are also welcome to read other
    articles:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Exploratory Data Analysis: What Do We Know About YouTube Channels](/exploratory-data-analysis-what-do-we-know-about-youtube-channels-3688c5cbc438)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Housing Rental Market in Germany: Exploratory Data Analysis with Python](https://medium.com/towards-data-science/housing-rental-market-in-germany-exploratory-data-analysis-with-python-3975428d07d2)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What People Write about Climate: Twitter Data Clustering in Python](https://medium.com/towards-data-science/what-people-write-about-climate-twitter-data-clustering-in-python-2fbbd2b95906)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Finding Temporal Patterns in Twitter Posts: Exploratory Data Analysis with
    Python](https://medium.com/towards-data-science/finding-temporal-patterns-in-twitter-posts-exploratory-data-analysis-with-python-8aac618c8699)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Python Data Analysis: What Do We Know About Pop Songs?](https://blog.devgenius.io/python-data-analysis-what-do-we-know-about-pop-songs-b6197d85d4)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you enjoyed this story, feel free [to subscribe](https://medium.com/@dmitryelj/membership)
    to Medium, and you will get notifications when my new articles will be published,
    as well as full access to thousands of stories from other authors. Full source
    code and a Jupyter notebook for this article are also available on my [Patreon
    page](https://www.patreon.com/deliuseev).
  prefs: []
  type: TYPE_NORMAL
- en: Thanks for reading.
  prefs: []
  type: TYPE_NORMAL
