["```py\nnpx create-react-app fuel-station-front\n```", "```py\nfuel-station-front/\n  |-- node_modules/\n  |-- public/\n       |-- index.html\n       |-- favicon.ico\n       |-- ...\n  |-- src/\n       |-- App.js\n       |-- index.js\n       |-- ...\n  |-- package.json\n  |-- package-lock.json\n  |-- README.md\n```", "```py\nnpm start\n```", "```py\nnpm install react-plotly.js plotly.js\n```", "```py\n|-- src/\n   |-- App.js\n   |-- index.js\n   |-- App.test.js\n   |-- reportWebVitals.js\n   |-- setupTests.js\n   |-- index.css\n   |-- App.css\n   |-- logo.svg\n```", "```py\n|-- src/\n  |-- App.js\n  |-- App.css\n  |-- AppComponents/\n    |-- StationsFilter/\n      |-- StationsFilter.js\n      |-- StationsFilter.css\n      |-- CustomTextBoxes/\n        |-- ...\n    |-- StationsMap/\n      |-- StationsMap.js\n      |-- StationsMap.css\n    |-- StationsTable/\n      |-- ...\n  |-- index.js\n  |-- ...\n```", "```py\nexport default function App() {\n  return (\n    // the gray box, we want its \"organisation\" to be in column\n    <div className=\"App\">\n      //the header, being the first blue box\n      <header className=\"header\">\n        <h1 className=\"h1-searchbar\">Gas Station Finder</h1>\n      </header>\n      //the second blue box, containing the main components, which will be organised in row\n      <div className=\"main-components\">\n        //Inside that blue box, we have another box \"left-section\" (the orange box) containing the Filter and the Table\n        <div className=\"left-section\">\n          <StationsFilter />\n          <StationsTable />\n        </div>\n        //Finally we also have the other component, our map, inside the second blue box\n        <StationsMap />\n      </div>\n    </div>\n  );\n}\n```", "```py\n.main-components{\n  height:90vh;\n  width:100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n.left-section{\n  height:100%;\n  width: 39%;\n  background-color: #f4f4f4;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n```", "```py\nimport \"./StationsFilter.css\";\n```", "```py\nexport default function StationsFilter() {\n  return (\n    <div>StationsFilter</div>\n  );\n}\n```", "```py\nimport StationsFilter from 'pathtofile/StationsFilter';\n```", "```py\n<StationsFilter />\n```", "```py\nimport \"./StationsFilter.css\";\nexport default function StationsFilter() {\n\n  const fuelTypes = [\"E10\",\"E85\",\"Gazole\",\"GPLc\",\"SP95\",\"SP98\"]\n\n  return (\n      <form className=\"search-form\">\n        <input type=\"text\" placeholder=\"Postal Code\" className=\"general-input\" />\n        <select value=\"SP98\" className=\"general-input\">\n          {fuelTypes.map(e => <option value={e}>{e}</option>)}\n        </select>\n        <button className=\"send-request-button\">Find Stations</button>\n      </form>\n  );\n}\n```", "```py\nconst fuelTypes = [\"E10\",\"E85\",\"Gazole\",\"GPLc\",\"SP95\",\"SP98\"]\n<select value=\"SP98\" className=\"general-input\">\n   {fuelTypes.map(e => <option value={e}>{e}</option>)}\n</select>\n```", "```py\nconst fuelTypes = [\"E10\",\"E85\",\"Gazole\",\"GPLc\",\"SP95\",\"SP98\"]\n<select value=\"SP98\" className=\"general-input\">\n    <option value=\"E10\">E10</option>\n    <option value=\"E85\">E85</option>\n    <option value=\"Gazole\">Gazole</option>\n    <option value=\"GPLc\">GPLc</option>\n    <option value=\"SP95\">SP95</option>\n    <option value=\"SP98\">SP98</option>\n</select>\n```", "```py\nfig_json_path = \"fig.json\"\n\n#Convert the file to a json string, and saved in in the computer\nfig_as_json = fig.to_json()\nwith open(fig_json_path, 'w') as f:\n    f.write(fig_as_json)\n```", "```py\n{\n \"data\":[trace1, trace2 ...],\n \"layout\":figure_layout\n}\n```", "```py\ntrace_stations = {\n    'lat': stations_lat,\n    'lon': stations_lon,\n    'marker': {'color': stations_price,\n    'colorscale': colorscale\n    'size': 40},\n    'mode': 'markers',\n    'opacity': 0.7,\n    'showlegend': False,\n    'text': stations_price,\n    'type': 'scattermapbox',\n    'uid': '911aadec-c42e-4eb7-968a-6e489606224e'\n}\n\nfigure_layout = {\n    'height': 600,\n    'width': 600\n    'mapbox': {'accesstoken': token,\n    'center': {'lon': center_lon, 'lat': center_lat},\n    'style': 'streets',\n    'zoom': zoom,\n    'bearing': 0,\n    'pitch': 0},\n}\n```", "```py\n|-- src/\n  |-- App.js\n  |-- App.css\n  |-- AppComponents/\n    |-- StationsHeader/\n    |-- StationsMap/\n      |-- StationsMap.js\n      |-- StationsMap.css\n      |-- fig.json\n```", "```py\nimport \"./StationsMap.css\"\nimport Plot from \"react-plotly.js\";\nimport figJson from \"./fig.json\"\nexport default function StationsMap() {\n\n  const data = figJson[\"data\"]\n  const layout = figJson[\"layout\"]\n\n  layout[\"autosize\"]=true\n  layout[\"margin\"]={\"b\":0,\"t\":0,\"l\":0,\"r\":0}\n  delete layout.template\n  delete layout.width\n  delete layout.height\n\n  return (\n    <Plot\n    data={data}\n    layout={layout}\n    style={{ height: \"100%\", width: \"100%\" }}\n    useResizeHandler={true}\n    />\n  )\n}\n```", "```py\nimport figJson from \"./fig.json\"\n```", "```py\n layout[\"autosize\"]=true\n  layout[\"margin\"]={\"b\":0,\"t\":0,\"l\":0,\"r\":0}\n  delete layout.template\n  delete layout.width\n  delete layout.height\n```", "```py\nreturn (\n    <Plot\n    data={data}\n    layout={layout}\n    style={{ height: \"100%\", width: \"100%\" }}\n    useResizeHandler={true}\n    />\n  )\n```", "```py\n<MyComponent param1={param1} param2={param2} />\n```", "```py\ndataTable = [\n    {\n     \"address\":address1, \"price_per_L\":price_per_L1, \"price_tank\":price_tank1, \n     \"delta_average\":delta_average1,\"google_map_link\":google_map_link\n    }, \n    {\n     \"address\":address2, \"price_per_L\":price_per_L2, \"price_tank\":price_tank2, \n     \"delta_average\":delta_average2, \"google_map_link\":google_map_link\n    },\n    etc...\n]\n```", "```py\nwith open(\"sample_table.json\", \"w\") as f:\n    json.dump(df.to_dict(\"records\"), f)\n```", "```py\n|-- src/\n  |-- App.js\n  |-- App.css\n  |-- AppComponents/\n    |-- StationsHeader/\n    |-- StationsMap/\n    |-- StationsTable/\n      |-- StationsTable.js\n      |-- StationsTable.css\n      |-- sample_table.json\n```", "```py\n<table className=\"price-table\">\n  <thead>\n    <tr>\n      <th>Address</th>\n      <th>Price</th>\n      <th>Full Tank</th>\n      <th>Saved</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td \n        <td>Some values</td>\n        <td>Some values</td>\n        <td>Some values</td>\n        <td>Some values</td>\n      </tr>\n      <tr>...</tr>\n      <tr>...</tr>\n  </tbody>\n</table>\n```", "```py\nimport tableJson from \"./sample_table.json\"\n```", "```py\n<tbody>\n  {tableJson.map((row) => {\n    return (\n      <tr key={row.address}>\n        <td>{row.address}</td>\n        <td>{row.price_per_L.toString()+\" €/L\"}</td>\n        <td>{row.price_tank.toString()+\" €\"}</td>\n        <td>{row.delta_average+\" €\" }</td>\n      </tr>\n  )})}\n</tbody>\n```", "```py\ngoogle_link = f'https://www.google.com/maps/search/?api=1&query={address.replace(\" \",\"+\")}'\n```", "```py\n <td>\n    <a href={row.google_map_link}>{row.address}</a>\n  </td>\n```", "```py\n if (row.better_average == 1) {\n      color = \"green\";\n    } else if (row.better_average == -1) {\n      color = \"red\";\n    }\n\n    ...\n\n    <td style={{ color: color }}>{row.delta_average + \" €\"}</td>\n```", "```py\nexport default function App() {\n  return (\n    // the gray box, we want its \"organisation\" to be in column\n    <div className=\"App\">\n      //the header, being the first blue box\n      <header className=\"header\">\n        <h1 className=\"h1-searchbar\">Gas Station Finder</h1>\n      </header>\n      //the second blue box, containing the main components, which will be organised in row\n      <div className=\"main-components\">\n        //Inside that blue box, we have another box \"left-section\" (the orange box) containing the Filter and the Table\n        <div className=\"left-section\">\n          <StationsFilter />\n          <StationsTable />\n        </div>\n        //Finally we also have the other component, our map, inside the second blue box\n        <StationsMap />\n      </div>\n    </div>\n  );\n}\n```"]