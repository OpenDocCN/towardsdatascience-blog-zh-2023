- en: How to Create a Custom NER in Spacy 3.5
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何在Spacy 3.5中创建自定义NER
- en: 原文：[https://towardsdatascience.com/how-to-create-a-custom-ner-in-spacy-3-5-c9942aab3c91](https://towardsdatascience.com/how-to-create-a-custom-ner-in-spacy-3-5-c9942aab3c91)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-create-a-custom-ner-in-spacy-3-5-c9942aab3c91](https://towardsdatascience.com/how-to-create-a-custom-ner-in-spacy-3-5-c9942aab3c91)
- en: Natural Language Processing
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自然语言处理
- en: A quick tutorial on extracting custom entities from a text
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从文本中提取自定义实体的**快速教程**
- en: '[](https://alod83.medium.com/?source=post_page-----c9942aab3c91--------------------------------)[![Angelica
    Lo Duca](../Images/45aa2e2e504bb3af6d3b8009dc6f030e.png)](https://alod83.medium.com/?source=post_page-----c9942aab3c91--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c9942aab3c91--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c9942aab3c91--------------------------------)
    [Angelica Lo Duca](https://alod83.medium.com/?source=post_page-----c9942aab3c91--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://alod83.medium.com/?source=post_page-----c9942aab3c91--------------------------------)[![Angelica
    Lo Duca](../Images/45aa2e2e504bb3af6d3b8009dc6f030e.png)](https://alod83.medium.com/?source=post_page-----c9942aab3c91--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c9942aab3c91--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c9942aab3c91--------------------------------)
    [Angelica Lo Duca](https://alod83.medium.com/?source=post_page-----c9942aab3c91--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c9942aab3c91--------------------------------)
    ·5 min read·Apr 25, 2023
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----c9942aab3c91--------------------------------)
    ·5分钟阅读·2023年4月25日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/82aa2292c77d5ad1b40112b7c88ed4f5.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/82aa2292c77d5ad1b40112b7c88ed4f5.png)'
- en: Photo by [Max Chen](https://unsplash.com/ja/@maxchen2k?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由[Max Chen](https://unsplash.com/ja/@maxchen2k?utm_source=medium&utm_medium=referral)拍摄，[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Are you tired of using generic named entity recognition (NER) models that don’t
    quite fit your specific needs? Look no further! This article will guide you through
    creating a custom NER in Spacy 3.5.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你是否厌倦了使用不符合你特定需求的通用命名实体识别（NER）模型？不必再找了！本文将指导你如何在Spacy 3.5中创建自定义NER。
- en: With a few tweaks and training data, you can have a model that accurately identifies
    entities specific to your domain or use case. Say goodbye to one-size-fits-all
    NER models and hello to customized precision. Let’s dive in!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 通过一些调整和训练数据，你可以拥有一个准确识别特定领域或用例实体的模型。告别“一刀切”的NER模型，迎接定制化的精准识别。让我们深入探讨吧！
- en: 'We’ll cover:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将涵盖：
- en: A very quick introduction to spaCy and its competitors
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对spaCy及其竞争对手的**快速介绍**
- en: Problem setting
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题设置
- en: Generating a training set
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成训练集
- en: Generating and training the model
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成和训练模型
- en: Testing your model.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试你的模型。
- en: A very quick introduction to spaCy and its competitors
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对spaCy及其竞争对手的**快速介绍**
- en: If it’s the first time you’ve heard of spaCy, know it’s a popular open-source
    library for natural language processing (NLP) in Python. It provides efficient
    and fast NLP capabilities, such as tokenization, part-of-speech tagging, entity
    recognition, dependency parsing, and more. SpaCy’s main strength lies in its speed
    and memory efficiency, making it an ideal choice for large-scale text processing
    tasks.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你第一次听说spaCy，请知道它是一个流行的开源自然语言处理（NLP）库，提供高效且快速的NLP功能，如分词、词性标注、实体识别、依赖解析等。SpaCy的主要优势在于其速度和内存效率，使其成为大规模文本处理任务的理想选择。
- en: 'Some alternatives to spaCy include:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: spaCy的一些替代品包括：
- en: '**NLTK** (Natural Language Toolkit), one of the oldest and most comprehensive
    NLP libraries, offers a wide range of tools for text analysis, including sentiment
    analysis, stemming, and lemmatization.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NLTK**（自然语言工具包），是最古老和最全面的NLP库之一，提供广泛的文本分析工具，包括情感分析、词干提取和词形还原。'
- en: '**Stanford CoreNLP** supports multiple languages, including English, German,
    and French, with robust features such as named entity recognition and co-reference
    resolution.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Stanford CoreNLP** 支持包括英语、德语和法语在内的多种语言，具有强大的功能，如命名实体识别和共指解析。'
- en: '**Spark NLP** provides production-grade, scalable, and trainable versions of
    the latest NLP research for Python, Java, and Scala.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Spark NLP** 提供生产级、可扩展和可训练的最新NLP研究版本，支持Python、Java和Scala。'
- en: Problem setting
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题设置
- en: Let’s imagine we have a text from which we want to extract entities (people,
    places, etc.). If the entities are classic, such as people, places, dates, etc.,
    we can easily use a pre-trained NER made available by spaCy.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们有一段文本，希望从中提取实体（人、地点等）。如果实体是经典的，比如人、地点、日期等，我们可以使用 spaCy 提供的预训练 NER 模型。
- en: However, a pre-trained generic model can no longer extract specific entities
    from our text. Examples of specific entities are dog breeds, the names of bacteria,
    etc. We need a model adapted to our domain to recognize this entity type.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，预训练的通用模型无法再从我们的文本中提取特定实体。特定实体的例子包括狗的品种、细菌的名称等。我们需要一个适应我们领域的模型来识别这种实体类型。
- en: 'The following figure shows the workflow to build a new custom NER model:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了构建新的自定义 NER 模型的工作流程：
- en: '![](../Images/6fab28d05d87bf669186171a7cab85a8.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6fab28d05d87bf669186171a7cab85a8.png)'
- en: Image by Author
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图像
- en: We start with a generic, already **pre-trained NER model** and then adapt it
    to our domain, providing the model with additional training data.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从一个通用的、已经**预训练的 NER 模型**开始，然后将其适应我们的领域，为模型提供额外的训练数据。
- en: Therefore, the first thing to do is to build the training set with the texts
    annotated exactly with the entities to be extracted. We then build the model and
    train it with our annotated texts.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，首先需要构建一个训练集，其中的文本需要准确标注待提取的实体。然后，我们构建模型并用标注好的文本进行训练。
- en: Finally, we use the new data model to predict new texts.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们使用新数据模型来预测新文本。
- en: Now let’s see how to implement the described workflow in Python and spaCy practically.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们实际了解如何在 Python 和 spaCy 中实现所描述的工作流程。
- en: Generating a training set
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成训练集
- en: 'Start by defining the entity types you want to extract. For example, you could
    extract the animal type: dog, cat, horse, etc. Then, split your dataset into training
    and test sets. Annotate only the training set.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 首先定义你想要提取的实体类型。例如，你可以提取动物类型：狗、猫、马等。然后，将数据集拆分为训练集和测试集。仅对训练集进行标注。
- en: 'Follow the steps described below to generate a training set you can use as
    input to spaCy:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤生成你可以作为 spaCy 输入的训练集：
- en: First, annotate your text. Use [https://tecoholic.github.io/ner-annotator/](https://tecoholic.github.io/ner-annotator/)
    to perform the annotation.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，标注你的文本。使用 [https://tecoholic.github.io/ner-annotator/](https://tecoholic.github.io/ner-annotator/)
    进行标注。
- en: Export the annotated file, say it `annotations.json`
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导出标注文件，命名为 `annotations.json`
- en: 'Open the `annotations.json` file and remove the first part, where there are
    the classes. Keep the JSON consistent (remove `{}` braces if needed). Save the
    file. In the example below, remove the `classes`:'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打开`annotations.json`文件，删除开头部分的类定义。保持 JSON 一致性（如有必要，删除 `{}` 括号）。保存文件。在下面的示例中，删除`classes`：
- en: '![](../Images/fa8136c1b7f1660ad16e3f70f6192e28.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fa8136c1b7f1660ad16e3f70f6192e28.png)'
- en: Image by Author
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图像
- en: Convert the JSON file to the spaCy format. Use the following code, originally
    implemented by [Zachary Lim](https://medium.com/u/e7a41934a7cc?source=post_page-----c9942aab3c91--------------------------------)
    in his [article](/using-spacy-3-0-to-build-a-custom-ner-model-c9256bea098).
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 JSON 文件转换为 spaCy 格式。使用以下代码，最初由 [Zachary Lim](https://medium.com/u/e7a41934a7cc?source=post_page-----c9942aab3c91--------------------------------)
    在他的 [文章](/using-spacy-3-0-to-build-a-custom-ner-model-c9256bea098) 中实现。
- en: Now your training set is stored in a file named `train.spacy`.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你的训练集保存在一个名为 `train.spacy` 的文件中。
- en: Generating and training the model
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成和训练模型
- en: 'To generate the training model, follow the steps described below:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 要生成训练模型，请按照以下步骤操作：
- en: Point to [https://spacy.io/usage/training](https://spacy.io/usage/training)
    and fill in the form to build your `config_base.cfg` file
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问 [https://spacy.io/usage/training](https://spacy.io/usage/training) 并填写表单以构建你的
    `config_base.cfg` 文件
- en: '![](../Images/cf165b3a6c69ddd426c5238cc2497d9d.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cf165b3a6c69ddd426c5238cc2497d9d.png)'
- en: Image extracted from the Spacy website
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Spacy 网站提取的图像
- en: Download the file by clicking on the bottom-right download button. Save the
    model in the same folder as the `annotations.json`.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过点击右下角的下载按钮下载文件。将模型保存在与`annotations.json`相同的文件夹中。
- en: 'Download the base model you will use to train your data. Open `config_base.cfg`
    to see which pre-trained model you are using. The following example downloads
    the `it_core_news_lg model`:'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载你将用来训练数据的基础模型。打开 `config_base.cfg` 查看你使用的是哪个预训练模型。以下示例下载 `it_core_news_lg
    model`：
- en: '[PRE0]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Run the following command to initialize the model:'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行以下命令以初始化模型：
- en: '[PRE1]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Train the model:'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 训练模型：
- en: '[PRE2]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The command requires a `dev.spacy` file containing the test set. If you don’t
    have a test set, use your training set (`train.spacy`).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 命令需要一个包含测试集的 `dev.spacy` 文件。如果你没有测试集，可以使用你的训练集（`train.spacy`）。
- en: 'The training process may require some time. At the end of the training process,
    you should see an output similar to the following one:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 训练过程可能需要一些时间。在训练过程结束时，你应该看到类似于以下的输出：
- en: '![](../Images/29ace0d23d2fdaf640f561479d8dcd9e.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/29ace0d23d2fdaf640f561479d8dcd9e.png)'
- en: Image by Author
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Testing your model
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试你的模型
- en: 'Now your model is saved in the `output/model-best` directory. Load it as follows
    in a Python script:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你的模型已经保存在 `output/model-best` 目录中。在 Python 脚本中按如下方式加载它：
- en: '[PRE3]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now use your just-trained model to extract some entities:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在使用你刚刚训练的模型来提取一些实体：
- en: '[PRE4]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Summary
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Congratulations! You have just learned how to train your custom model for NER
    in spaCy!
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你刚刚学会了如何在 spaCy 中训练自定义模型进行命名实体识别（NER）！
- en: Creating a custom NER in Spacy 3.5 is an easy process that requires only the
    right setup and coding knowledge. Now that you know how to create a custom NER
    with Python and Spacy, you can start developing your models for whatever application
    you need them for.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Spacy 3.5 中创建自定义 NER 是一个简单的过程，只需正确的设置和编码知识。现在你已经知道如何使用 Python 和 Spacy 创建自定义
    NER，你可以开始为你需要的任何应用程序开发模型。
- en: Related articles
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 相关文章
- en: '[](/how-to-install-spark-nlp-5fcd36fab378?source=post_page-----c9942aab3c91--------------------------------)
    [## How to Install Spark NLP'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/how-to-install-spark-nlp-5fcd36fab378?source=post_page-----c9942aab3c91--------------------------------)
    [## 如何安装 Spark NLP'
- en: A step-by-step tutorial on how to make Spark NLP work on your local computer
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关于如何使 Spark NLP 在本地计算机上工作的逐步教程
- en: towardsdatascience.com](/how-to-install-spark-nlp-5fcd36fab378?source=post_page-----c9942aab3c91--------------------------------)
    [](/how-to-add-new-data-to-a-pretrained-model-in-scikit-learn-ce16911afe33?source=post_page-----c9942aab3c91--------------------------------)
    [## How to Add New Data to a Pretrained Model in Scikit-learn
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/how-to-install-spark-nlp-5fcd36fab378?source=post_page-----c9942aab3c91--------------------------------)
    [](/how-to-add-new-data-to-a-pretrained-model-in-scikit-learn-ce16911afe33?source=post_page-----c9942aab3c91--------------------------------)
    [## 如何向 Scikit-learn 中的预训练模型添加新数据
- en: A step-by-step tutorial on how to use warm_start=True and partial_fit() in scikit-learn
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关于如何在 scikit-learn 中使用 warm_start=True 和 partial_fit() 的逐步教程
- en: towardsdatascience.com](/how-to-add-new-data-to-a-pretrained-model-in-scikit-learn-ce16911afe33?source=post_page-----c9942aab3c91--------------------------------)
    [](https://heartbeat.comet.ml/how-to-use-the-comet-registry-to-track-your-machine-learning-models-4b18e7f61500?source=post_page-----c9942aab3c91--------------------------------)
    [## How to Use the Comet Registry to Track Your Machine Learning Models
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/how-to-add-new-data-to-a-pretrained-model-in-scikit-learn-ce16911afe33?source=post_page-----c9942aab3c91--------------------------------)
    [](https://heartbeat.comet.ml/how-to-use-the-comet-registry-to-track-your-machine-learning-models-4b18e7f61500?source=post_page-----c9942aab3c91--------------------------------)
    [## 如何使用 Comet 注册表跟踪你的机器学习模型
- en: A tutorial on the power of the Comet Registry
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关于 Comet 注册表功能的教程
- en: heartbeat.comet.ml](https://heartbeat.comet.ml/how-to-use-the-comet-registry-to-track-your-machine-learning-models-4b18e7f61500?source=post_page-----c9942aab3c91--------------------------------)
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: heartbeat.comet.ml](https://heartbeat.comet.ml/how-to-use-the-comet-registry-to-track-your-machine-learning-models-4b18e7f61500?source=post_page-----c9942aab3c91--------------------------------)
