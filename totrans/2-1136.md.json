["```py\nimport numpy as np\nimport pandas as pd\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom PIL import Image\nfrom matplotlib.lines import Line2D\n```", "```py\nFONT_FAMILY = \"serif\"\nBACKGROUND_COLOR = \"#FAE8E0\"\nTEXT_COLOR = \"#33261D\"\nBAR_COLOR = \"#EF7C8E\"\n\nsns.set_style({\n    \"axes.facecolor\": BACKGROUND_COLOR,\n    \"figure.facecolor\": BACKGROUND_COLOR,\n    \"text.color\": TEXT_COLOR,\n    \"font.family\": FONT_FAMILY,\n    \"xtick.bottom\": False,\n    \"xtick.top\": False,\n    \"ytick.left\": False,\n    \"ytick.right\": False,\n    \"axes.spines.left\": False,\n    \"axes.spines.bottom\": False,\n    \"axes.spines.right\": False,\n    \"axes.spines.top\": False,\n})\n```", "```py\ndf = pd.read_csv(\n    \"https://raw.githubusercontent.com/oscarleoo/matplotlib-tutorial-data/main/mortality-and-decease.csv\"\n)\n```", "```py\ndef add_bars(ax, x, width, alpha, label):\n    sns.barplot(\n        ax=ax, x=x, y=[i for i in range(len(x))], label=label,\n        width=width, alpha=alpha,\n        color=BAR_COLOR,\n        edgecolor=TEXT_COLOR,\n        orient=\"h\"\n    )\n```", "```py\nfig, ax = plt.subplots(nrows=1, ncols=1, figsize=(18, 2.7 * len(df)))\n\nadd_bars(\n    ax=ax, x=df[\"2000\"] / df[\"2000\"],\n    width=0.55, alpha=0.2, label=\"2000\"\n)\nadd_bars(\n    ax=ax, x=df[\"latest_value\"] / df[\"2000\"],\n    width=0.7, alpha=1, label=\"Latest\"\n)\n```", "```py\ndef split_name(name, limit=20):\n    split = name.split()\n    s = \"\"\n    for s_ in split:\n        if len(s.split(\"\\n\")[-1] + s_) > limit:\n            s += \"\\n\" + s_\n        else:\n            s += \" \" + s_\n    return s.strip()\n```", "```py\nfig, ax = plt.subplots(nrows=1, ncols=1, figsize=(18, 2.7 * len(df)))\n...\n\nax.set(xlabel=None, ylabel=None, xticks=[])\nax.tick_params(\"y\", labelsize=28, pad=32)\nax.tick_params(\"x\", labelsize=20, pad=16)\n\nax.set_yticks(\n    ticks=[i for i in range(len(df))],\n    labels=[split_name(n, limit=19) for n in df[\"indicator_name\"]],\n    linespacing=1.7, va=\"center\"\n)\n```", "```py\ndef add_info_text(ax, row, index):\n    value = round(row[\"latest_value\"], 1)\n    per = row[\"per\"]\n    year = row[\"latest_year\"]\n    text = \"{:,} out of\\n{:,} ({})\".format(value, per, year)\n\n    ax.annotate(\n        text=text, \n        xy=(0.02, index), \n        color=\"#fff\", \n        fontsize=24,\n        va=\"center\", \n        linespacing=1.7\n    )\n```", "```py\ndef add_change_text(ax, row, index):\n    change = round(100 * row[\"change\"], 1)\n    text = \"{:,}%\".format(change)\n    x = row[\"latest_value\"] / row[\"2000\"] + 0.02\n\n    ax.annotate(\n        text=\"{:,}%\".format(change), xy=(x, index), fontsize=22,\n        va=\"center\",  linespacing=1.7\n    )\n```", "```py\nfig, ax = plt.subplots(nrows=1, ncols=1, figsize=(18, 2.7 * len(df)))\n...\n\nfor index, row in df.reset_index().iterrows():\n    add_info_text(ax, row, index)\n    add_change_text(ax, row, index)\n```", "```py\nfig, ax = plt.subplots(nrows=1, ncols=1, figsize=(18, 2.7 * len(df)))\n...\n\nline = Line2D([-0.33, 1.0], [-0.9, -0.9], color=TEXT_COLOR)\nline.set_clip_on(False)\nax.add_artist(line)\ntitle = \"Lipstick Chart - Relative\\nDecreases Compared\\nto 2000\"\nplt.title(title, x=-0.32, y=1.11, fontsize=58, ha=\"left\", linespacing=1.6)\nplt.legend(bbox_to_anchor=(0.75, 1.14), loc='lower center', borderaxespad=0, ncol=1, fontsize=44, edgecolor=\"#FAE8E0\")\n```", "```py\ndef create_image_from_figure(fig):\n    plt.tight_layout()\n\n    fig.canvas.draw()\n    data = np.frombuffer(fig.canvas.tostring_rgb(), dtype=np.uint8)\n    data = data.reshape((fig.canvas.get_width_height()[::-1]) + (3,))\n\n    plt.close() \n    return Image.fromarray(data)\n```", "```py\ndef add_padding_to_chart(chart, left, top, right, bottom, background):\n    size = chart.size\n    image = Image.new(\"RGB\", (size[0] + left + right, size[1] + top + bottom), background)\n    image.paste(chart, (left, top))\n    return image\n```", "```py\nfig, ax = plt.subplots(nrows=1, ncols=1, figsize=(18, 2.7 * len(df)))\n\nadd_bars(\n    ax=ax, x=df[\"2000\"] / df[\"2000\"],\n    width=0.55, alpha=0.2, label=\"2000\"\n)\n\nadd_bars(\n    ax=ax, x=df[\"latest_value\"] / df[\"2000\"],\n    width=0.7, alpha=1, label=\"Latest\"\n)\n\nax.set(xlabel=None, ylabel=None, xticks=[])\nax.tick_params(\"y\", labelsize=28, pad=32)\nax.tick_params(\"x\", labelsize=20, pad=16)\n\nax.set_yticks(\n    ticks=[i for i in range(len(df))],\n    labels=[split_name(n, limit=20) for n in df[\"indicator_name\"]],\n    linespacing=1.7, va=\"center\"\n)\n\nfor index, row in df.reset_index().iterrows():\n    add_info_text(ax, row, index)\n    add_change_text(ax, row, index)\n\nline = Line2D([-0.35, 1.0], [-0.9, -0.9], color=TEXT_COLOR)\nline.set_clip_on(False)\nax.add_artist(line)\n\ntitle = \"Lipstick Chart - Relative\\nDecreases Compared\\nto 2000\"\nplt.title(title, x=-0.32, y=1.11, fontsize=58, ha=\"left\", linespacing=1.6)\nplt.legend(bbox_to_anchor=(0.75, 1.14), loc='lower center', borderaxespad=0, ncol=1, fontsize=44, edgecolor=\"#FAE8E0\")\n\nimage = create_image_from_figure(fig)\nimage = add_padding_to_chart(image, 20, 50, 10, 50, BACKGROUND_COLOR)\n```"]