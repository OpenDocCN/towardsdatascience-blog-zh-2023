- en: Jazz Chords Parsing with Transformers
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '爵士和弦解析与变压器  '
- en: 原文：[https://towardsdatascience.com/jazz-chords-parsing-with-transformers-d75031a976f2](https://towardsdatascience.com/jazz-chords-parsing-with-transformers-d75031a976f2)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '原文：[https://towardsdatascience.com/jazz-chords-parsing-with-transformers-d75031a976f2](https://towardsdatascience.com/jazz-chords-parsing-with-transformers-d75031a976f2)  '
- en: A Data-Driven Approach to Tree-Based Music Analysis
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '基于数据的树形音乐分析方法  '
- en: '[](https://medium.com/@foscarin.francesco?source=post_page-----d75031a976f2--------------------------------)[![Francesco
    Foscarin](../Images/f4d238b54771adc6d03c9a62f28d3152.png)](https://medium.com/@foscarin.francesco?source=post_page-----d75031a976f2--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d75031a976f2--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d75031a976f2--------------------------------)
    [Francesco Foscarin](https://medium.com/@foscarin.francesco?source=post_page-----d75031a976f2--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@foscarin.francesco?source=post_page-----d75031a976f2--------------------------------)[![Francesco
    Foscarin](../Images/f4d238b54771adc6d03c9a62f28d3152.png)](https://medium.com/@foscarin.francesco?source=post_page-----d75031a976f2--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d75031a976f2--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d75031a976f2--------------------------------)
    [Francesco Foscarin](https://medium.com/@foscarin.francesco?source=post_page-----d75031a976f2--------------------------------)  '
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d75031a976f2--------------------------------)
    ·11 min read·Aug 1, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '·发布在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d75031a976f2--------------------------------)
    ·阅读时间11分钟·2023年8月1日  '
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '--  '
- en: '![](../Images/12225dc1bc607140dfc63b87d3353462.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/12225dc1bc607140dfc63b87d3353462.png)  '
- en: In this article, I summarize part of my research paper [“Predicting Music Hierarchies
    with a Graph-Based Neural Decoder”](https://arxiv.org/abs/2306.16955) which presents
    a data-driven system able to parse jazz chord sequences.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '在这篇文章中，我总结了我的研究论文[“使用基于图的神经解码器预测音乐层级”](https://arxiv.org/abs/2306.16955)的一部分，该论文提出了一种能够解析爵士和弦序列的数据驱动系统。  '
- en: 'This research is **motivated by my frustration with Grammar-based parsing**
    systems (which were the only option available for music data):'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '这项研究是**由于我对基于语法的解析**系统感到挫败而激发的（这些系统是处理音乐数据的唯一选择）：  '
- en: The grammar-building phase requires a lot of domain knowledge
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '语法构建阶段需要大量的领域知识  '
- en: The parser will fail in case of some unseen configurations or noisy data
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '解析器在面对一些未见过的配置或嘈杂数据时会失败  '
- en: It is challenging to account for multiple musical dimensions in a single grammar
    rule
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '在单一语法规则中考虑多个音乐维度是具有挑战性的。  '
- en: There is no well-supported active Python framework to help with the development
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '目前没有一个得到广泛支持的活跃Python框架来帮助开发  '
- en: '**My approach** (inspired by similar works in Natural Language Processing)**,**
    instead, **doesn’t rely on any grammar**, **produces partial results for noisy
    inputs**, t**rivially handles multiple musical dimensions, and is implemented
    in PyTorch**.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**我的方法**（受自然语言处理领域类似工作的启发），**不依赖于任何语法**，**对嘈杂输入产生部分结果**，**可以轻松处理多个音乐维度，并且在PyTorch中实现**。  '
- en: If you are not familiar with parsing and grammars, or simply need to refresh
    your knowledge, I’ll now take a step back.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '如果你不熟悉解析和语法，或者只是需要刷新你的知识，我现在会退后一步。  '
- en: '*What is “parsing”?*'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '*什么是“解析”？*'
- en: The term *parsing* refers to predicting/inferring a tree (the mathematical structure)
    whose leaves are the elements of the sequences.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '*解析*一词指的是预测/推断出一棵树（数学结构），其叶子节点是序列中的元素。  '
- en: '![](../Images/ec15d890b913a95826badedfa7d9c999.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ec15d890b913a95826badedfa7d9c999.png)  '
- en: '*Ok then, but why would we need a tree?*'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*好吧，但我们为什么需要树呢？*  '
- en: Let’s start with the following sequence of jazz chords (section A of “Take the
    A Train”).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '让我们从以下的爵士和弦序列（《Take the A Train》的A部分）开始。  '
- en: '![](../Images/ec20411eb5d32ae7ca6e775f9a00cc66.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ec20411eb5d32ae7ca6e775f9a00cc66.png)  '
- en: In Jazz music chords are connected by a complex system of perceptual relations.
    For example, the Dm7 is a preparation for the dominant chord G7\. This means that
    the Dm7 is less important than the G7 and it could, for example, be omitted in
    a different reharmonization. Similarly, the D7 is a secondary dominant (a dominant
    of a dominant) also referring to G7.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '在爵士音乐中，和弦通过复杂的感知关系系统连接。例如，Dm7是对主和弦G7的预备。这意味着Dm7的作用不如G7重要，它可以在不同的和声重构中被省略。类似地，D7是一个次级主和弦（主和弦的主和弦），也指向G7。  '
- en: This kind of harmonic relation **can be expressed with a tree** and **can be
    useful for music analysis or while performing tasks like reharmonization**. However,
    since chords in music pieces are available mostly as a sequence, we want a **system
    which is able to automatically build such a tree structure**.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这种和声关系**可以用树来表达**，并且**对音乐分析或执行诸如再和声等任务非常有用**。然而，由于音乐作品中的和弦大多以序列形式存在，我们希望一个**能够自动构建这种树结构的系统**。
- en: Constituent vs Dependency Trees
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 组成树与依赖树
- en: Before continuing we need to differentiate between two kinds of trees.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，我们需要区分两种类型的树。
- en: Musicologist tends to use what is called *constituent trees*, which you can
    see in the picture below. Constituent trees contain leaves (chords in blue — elements
    of the input sequence), and internal nodes (chords in orange — reductions of the
    children’s leaves).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 音乐学家倾向于使用所谓的*组成树*，你可以在下面的图片中看到。组成树包含叶子（蓝色和弦——输入序列的元素），以及内部节点（橙色和弦——子叶的简化）。
- en: '![](../Images/003a5e6db70993604e1955e2f26622f7.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/003a5e6db70993604e1955e2f26622f7.png)'
- en: In this work instead, we consider another kind of tree, called *dependency tree*.
    This kind of tree does not have internal nodes, but only directed arcs connecting
    the elements of the sequence.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 而在这项工作中，我们考虑另一种树，称为*依赖树*。这种树没有内部节点，只有连接序列元素的有向弧。
- en: '![](../Images/3e9e922b40dbb3dd581e9eb468a47f12.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3e9e922b40dbb3dd581e9eb468a47f12.png)'
- en: We can produce the dependency tree from the constituent tree, with some algorithms
    that will be discussed later.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过一些稍后讨论的算法从组成树生成依赖树。
- en: Dataset
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据集
- en: Since this is a data-driven approach, we need a dataset of chord sequences (the
    input data) associated with a dataset of trees (the ground truth) for training
    and testing. We use the Jazz Treebank¹ which is publicly available in [this](https://github.com/DCMLab/JazzHarmonyTreebank)
    GitHub repository (it can be freely used for non-commercial applications, and
    I obtained the author’s permission to use it in this article). In particular,
    they provide a JSON file with all chords and annotations.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这是数据驱动的方法，我们需要一个和弦序列的数据集（输入数据），以及一个树的数据集（真实标签）用于训练和测试。我们使用的是Jazz Treebank¹，公开在[这个](https://github.com/DCMLab/JazzHarmonyTreebank)
    GitHub 仓库中（它可以自由用于非商业应用，并且我获得了作者的许可在本文中使用它）。特别是，他们提供了一个包含所有和弦和注释的JSON文件。
- en: 'We model each chord in input to our system, with three features:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将输入到系统中的每个和弦建模为三个特征：
- en: The root, an integer in [0..11], where C -> 0, C# ->1, etc…
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根节点，是[0..11]中的一个整数，其中C -> 0，C# ->1，依此类推……
- en: The basic form, an integer in [0..5], which select among major, minor, augmented,
    half-diminished, diminished, and suspended (sus).
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 基本形式是[0..5]中的一个整数，用于选择大调、小调、增和弦、半减和弦、减和弦和挂留和弦（sus）。
- en: The extension, an integer in [0,1,2] which selects among 6, minor 7, or major
    7.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扩展，是[0,1,2]中的一个整数，用于选择6、次要7或大调7。
- en: To produce the **chord features** from a chord label (a string), we can use
    a regular expression as follows (note that this code work for this dataset, as
    the format may vary in other chord datasets).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 要从和弦标签（一个字符串）中生成**和弦特征**，我们可以使用如下的正则表达式（注意，这段代码适用于这个数据集，因为在其他和弦数据集中格式可能会有所不同）。
- en: '[PRE0]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Finally, we need to produce the dependency tree. The JHT dataset only contains
    constituent trees, encoded as a nested dictionary. We import them and transform
    them into dependency trees with a recursive function. The mechanism of our function
    can be described as follows.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要生成依赖树。JHT数据集只包含组成树，以嵌套字典形式编码。我们导入它们，并通过递归函数将它们转换为依赖树。我们函数的机制可以描述如下。
- en: We start from a fully formed constituent tree and a dependency tree without
    any dependency arcs, consisting only of the nodes labelled with sequence elements.
    The algorithm groups all internal tree nodes with their primary child (which all
    have the same label) and uses all secondary child relations originating from each
    group to create dependency arcs between the group label and the secondary child
    label.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从一个完全形成的组成树和一个没有任何依赖弧的依赖树开始，这个依赖树仅由标记为序列元素的节点组成。算法将所有内部树节点与其主要子节点（它们都具有相同的标签）进行分组，并使用每个组中所有次要子节点关系来创建组标签和次要子节点标签之间的依赖弧。
- en: '[PRE1]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Dependency Parsing Model
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 依赖解析模型
- en: 'Our parsing model functioning mechanism is pretty simple: we consider all possible
    arcs and use an *arc predictor* (a simple binary classifier) to predict whether
    this arc should be part of the tree or not.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的解析模型的工作机制相当简单：我们考虑所有可能的弧，并使用*弧预测器*（一个简单的二分类器）来预测该弧是否应该成为树的一部分。
- en: However, it is pretty hard to make this choice only based on the two chords
    we are trying to connect. We need some *context*. We build such context with a
    transformer encoder.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，仅根据我们试图连接的两个和弦来做出这个选择是相当困难的。我们需要一些*上下文*。我们通过构建一个变换器编码器来提供这样的上下文。
- en: 'To resume, our parsing model act in two steps:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 总结而言，我们的解析模型分为两个步骤：
- en: the input sequence is passed through a transformer encoder to enrich it with
    contextual information;
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入序列通过变换器编码器传递，以丰富其上下文信息；
- en: a binary classifier evaluates the graph of all possible dependency arcs to filter
    out the unwanted arcs.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个二分类器评估所有可能的依赖弧图，以过滤掉不需要的弧。
- en: '![](../Images/796be2efed7a8dacf7ca36559f18f340.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/796be2efed7a8dacf7ca36559f18f340.png)'
- en: The Transformer Encoder follows the standard architecture. We use a learnable
    embedding layer to map each categorical input feature to points in a continuous
    multidimensional space. All embeddings are then summed together, so it is up to
    the network to “decide” the dimension to use for each feature.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 变换器编码器遵循标准架构。我们使用可学习的嵌入层将每个分类输入特征映射到一个连续的多维空间中的点。然后将所有嵌入加在一起，因此网络可以“决定”每个特征使用的维度。
- en: '[PRE2]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The arc predictor is just a linear layer taking as input the concatenation of
    the hidden features of the two chords. The classification step for all the arcs
    is done in parallel thanks to the power of matrix multiplication.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 弧预测器只是一个线性层，它的输入是两个和弦的隐藏特征的连接。由于矩阵乘法的强大功能，所有弧的分类步骤都是并行完成的。
- en: '[PRE3]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We can put the transformer encoder and the arc predictor in a single torch module
    to simplify its usage.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将变换器编码器和弧预测器放在一个单独的 PyTorch 模块中，以简化其使用。
- en: '[PRE4]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Loss Function
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 损失函数
- en: 'As a loss function, we use the sum of two losses:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 作为损失函数，我们使用两个损失的和：
- en: 'The binary cross entropy loss: the idea is to see our problem as a binary classification
    problem, where each arc can be predicted or not.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 二元交叉熵损失：这个思想是将我们的问题视为一个二分类问题，每个弧都可以被预测或不被预测。
- en: 'The cross-entropy loss: the idea is to see our problem as a multiclass classification
    problem, where for each head in a head → dep arc, we need to predict which one
    is the correct dependent among all other chords'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交叉熵损失：这个思想是将我们的问题视为一个多分类问题，在一个头 → 依赖弧中，我们需要预测所有其他和弦中哪个是正确的依赖。
- en: '[PRE5]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Postprocessing
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 后处理
- en: 'There is one problem that we still have to solve. The fact that the predicted
    arcs should form a tree structure is not enforced at any point during our training.
    Therefore we could have an invalid configuration such as an arc loop. Fortunately,
    there is an algorithm that we can use to ensure that this does not happen: the
    Eisner algorithm.²'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个问题我们仍然需要解决。在训练过程中，并没有强制要求预测的弧必须形成树结构。因此，我们可能会遇到像弧循环这样的无效配置。幸运的是，我们可以使用一种算法来确保这种情况不会发生：Eisner
    算法。²
- en: Instead of just assuming that an arc exists if its predicted probability is
    bigger than 0.5, we save all predictions in a square matrix (the *adjacency matrix*)
    of size (number of chords, number of chords) and we run the Eisner algorithm on
    it.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不再只是简单地假设弧存在的概率大于 0.5，而是将所有预测结果保存在一个大小为（和弦数，和弦数）的方形矩阵（*邻接矩阵*）中，然后在该矩阵上运行 Eisner
    算法。
- en: '[PRE6]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Conclusions
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: I presented a system for the dependency parsing of chord sequences which uses
    a transformer to build contextual chord hidden representations, and a classifier
    to select whether two chords should be linked by an arc.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我提出了一种用于和弦序列依赖解析的系统，该系统使用变换器构建上下文和弦隐藏表示，并使用分类器来选择两个和弦是否应该通过弧连接。
- en: The main advantage with respect to competing systems is that this approach **does
    not rely on any particular symbolic grammar**, therefore it can consider multiple
    musical features simultaneously, make use of sequential context information, and
    produce partial results for noisy inputs.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 相较于竞争系统，主要的优点在于该方法**不依赖于任何特定的符号语法**，因此它可以同时考虑多种音乐特征，利用序列上下文信息，并对噪声输入产生部分结果。
- en: To keep this article of a reasonable size, both the explanation and the code
    focus on the most interesting part of the system. You can find a more complete
    explanation in [this scientific article](https://arxiv.org/abs/2306.16955) and
    all the code on [this GitHub repository](https://github.com/fosfrancesco/musicparser).
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保持文章的适当长度，解释和代码都集中在系统中最有趣的部分。你可以在[这篇科学文章](https://arxiv.org/abs/2306.16955)中找到更完整的解释，所有代码都可以在[这个GitHub仓库](https://github.com/fosfrancesco/musicparser)中找到。
- en: '*(All images are by the author.)*'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '*(所有图片均由作者提供。)*'
- en: '**References**'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**参考文献**'
- en: D. Harasim, C. Finkensiep, P. Ericson, T. J. O’Donnell, and M. Rohrmeier, “The
    jazz harmony treebank,” in Proceedings of the International Society for Music
    Information Retrieval Conference (ISMIR), 2020, pp. 207–215.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: D. Harasim, C. Finkensiep, P. Ericson, T. J. O’Donnell, 和 M. Rohrmeier，“爵士和声树库”，载于国际音乐信息检索会议（ISMIR）论文集，2020年，第207–215页。
- en: 'J. M. Eisner, “Three new probabilistic models for dependency parsing: An exploration,”
    in Proceedings of the International Conference on Computational Linguistics (COLING),
    1996.'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: J. M. Eisner，“依存解析的三种新概率模型：一种探索”，载于国际计算语言学大会（COLING）论文集，1996年。
