- en: How to Perform Multivariate Outlier Detection in Python PyOD for Machine Learning
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何在 Python 的 PyOD 中进行多变量异常值检测
- en: 原文：[https://towardsdatascience.com/how-to-perform-multivariate-outlier-detection-in-python-pyod-for-machine-learning-b0a9c557a21c](https://towardsdatascience.com/how-to-perform-multivariate-outlier-detection-in-python-pyod-for-machine-learning-b0a9c557a21c)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-perform-multivariate-outlier-detection-in-python-pyod-for-machine-learning-b0a9c557a21c](https://towardsdatascience.com/how-to-perform-multivariate-outlier-detection-in-python-pyod-for-machine-learning-b0a9c557a21c)
- en: Outlier detection series, part 3
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 异常值检测系列，第 3 部分
- en: '[](https://ibexorigin.medium.com/?source=post_page-----b0a9c557a21c--------------------------------)[![Bex
    T.](../Images/516496f32596e8ad56bf07f178a643c6.png)](https://ibexorigin.medium.com/?source=post_page-----b0a9c557a21c--------------------------------)[](https://towardsdatascience.com/?source=post_page-----b0a9c557a21c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----b0a9c557a21c--------------------------------)
    [Bex T.](https://ibexorigin.medium.com/?source=post_page-----b0a9c557a21c--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://ibexorigin.medium.com/?source=post_page-----b0a9c557a21c--------------------------------)[![Bex
    T.](../Images/516496f32596e8ad56bf07f178a643c6.png)](https://ibexorigin.medium.com/?source=post_page-----b0a9c557a21c--------------------------------)[](https://towardsdatascience.com/?source=post_page-----b0a9c557a21c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----b0a9c557a21c--------------------------------)
    [Bex T.](https://ibexorigin.medium.com/?source=post_page-----b0a9c557a21c--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----b0a9c557a21c--------------------------------)
    ·9 min read·Feb 7, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----b0a9c557a21c--------------------------------)
    ·9 分钟阅读·2023年2月7日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/f1e3a4d96c11ab2134a5310a7737a0d8.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f1e3a4d96c11ab2134a5310a7737a0d8.png)'
- en: Photo by [Takashi Miyazaki](https://unsplash.com/@miyatankun?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/backgrounds/art/abstract?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Takashi Miyazaki](https://unsplash.com/@miyatankun?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    提供，出处 [Unsplash](https://unsplash.com/backgrounds/art/abstract?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
- en: Motivation
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 动机
- en: 'Below is a *very* suspicious boxplot:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个*非常*可疑的箱型图：
- en: '![](../Images/567acd70936349dc6af5c43bb04d9a66.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/567acd70936349dc6af5c43bb04d9a66.png)'
- en: Image by the author.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片。
- en: It depicts the relationship between diamonds' quality and their price. The six
    quality categories are given in descending order, so the best diamonds are in
    the *Ideal,* and the lowest quality diamonds are in the *Fair* category.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 它描绘了钻石品质与价格之间的关系。六个品质类别按降序排列，因此最好的钻石在*理想*类别中，而最低质量的钻石在*公平*类别中。
- en: Now, here are the strange parts. First, all categories have many outliers, marked
    with dark spots above the whiskers.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这里是一些奇怪的部分。首先，所有类别都有许多异常值，这些异常值用胡须上方的暗点标记。
- en: Second, even though Ideal diamonds are supposed to be the best, their median
    price is lower than any other category (the median is given as the line inside
    the boxes).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，尽管理想钻石应该是最好的，但它们的中位数价格却低于任何其他类别（中位数以箱子内部的线表示）。
- en: 'This strange relationship between diamond qualities and their prices begs us
    the question: are those outliers *actually* outliers?'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这种钻石品质与价格之间的奇怪关系让我们提出了一个问题：那些异常值*真的*是异常值吗？
- en: Today, we will answer that exact question, or in other words, we will learn
    how to differentiate multivariate outliers and how we can detect them.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，我们将回答这个确切的问题，换句话说，我们将学习如何区分多变量异常值以及如何检测它们。
- en: 'This is the third part of our outlier detection series. Check out the first
    two below:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们异常值检测系列的第三部分。请查看下面的前两部分：
- en: '[](/how-to-perform-outlier-detection-in-python-in-easy-steps-for-machine-learning-1-8f9a3e6c88b5?source=post_page-----b0a9c557a21c--------------------------------)
    [## How to Perform Outlier Detection in Python for Machine Learning: Part 1'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/how-to-perform-outlier-detection-in-python-in-easy-steps-for-machine-learning-1-8f9a3e6c88b5?source=post_page-----b0a9c557a21c--------------------------------)
    [## 如何在 Python 中进行异常值检测：第 1 部分'
- en: Earth is an outlier — the theory
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 地球是一个异常值——这个理论
- en: towardsdatascience.com](/how-to-perform-outlier-detection-in-python-in-easy-steps-for-machine-learning-1-8f9a3e6c88b5?source=post_page-----b0a9c557a21c--------------------------------)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/how-to-perform-outlier-detection-in-python-in-easy-steps-for-machine-learning-1-8f9a3e6c88b5?source=post_page-----b0a9c557a21c--------------------------------)
- en: More on multivariate outliers
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多关于多变量异常值的内容
- en: In the [first part](https://medium.com/towards-data-science/how-to-perform-outlier-detection-in-python-in-easy-steps-for-machine-learning-1-8f9a3e6c88b5)
    of our series, we made the following points.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的 [第一部分](https://medium.com/towards-data-science/how-to-perform-outlier-detection-in-python-in-easy-steps-for-machine-learning-1-8f9a3e6c88b5)
    中，我们提出了以下观点。
- en: Univariate outliers, as the name suggests, only exist in single distributions
    or individual columns of datasets. They are much easier to detect with methods
    like z-scores or Median Absolute Deviation. An example is a highly tall person
    in a dataset that records only people's heights (single column).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 单变量异常值，顾名思义，仅存在于单个分布或数据集的单独列中。它们通过 z 分数或中位数绝对偏差等方法更容易检测。例如，在记录仅有人身高（单列）的数据集中，一个非常高的人。
- en: Multivariate outliers are harder to find as they usually emerge when you simultaneously
    look at many dataset columns.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 多变量异常值更难发现，因为它们通常在同时查看多个数据集列时才会出现。
- en: 'For example, let''s say we have a dataset of hospital records. Its columns
    are the physical characteristics of patients and the type of disease they have.
    Now, we are looking at Henry''s records:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设我们有一个医院记录的数据集。它的列包括病人的身体特征和他们所患的疾病类型。现在，我们查看亨利的记录：
- en: 'Age: 18 Height: 178 cm Weight: 65 kg Non-smoker: Yes Disease: Lung cancer'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 年龄：18 身高：178 厘米 体重：65 公斤 非吸烟者：是 疾病：肺癌
- en: If we consider Henry's attributes individually, they seem ordinary within the
    context of our dataset. In our dataset, there are many 18 year-olds and many people
    that are 178 cm tall or weigh 65 kg.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们单独考虑亨利的特征，它们在我们的数据集上下文中看起来很普通。在我们的数据集中，有许多 18 岁的人，也有许多人身高 178 厘米或体重 65 公斤。
- en: Also, many non-smoking 18-year-olds or people with lung cancer are in the hospital.
    BUT, we do NOT have any non-smoking 18-year-olds with lung cancer that weigh 65
    kg and are 178 cm tall.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，许多不吸烟的 18 岁青少年或肺癌患者都在医院。但是，我们没有任何一个不吸烟的 18 岁青少年，同时体重 65 公斤且身高 178 厘米且患有肺癌。
- en: The fact that Henry was a multivariate outlier came to light only when we considered
    all his physical attributes simultaneously.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 只有当我们同时考虑亨利的所有身体特征时，亨利作为多变量异常值的事实才会浮出水面。
- en: Similar cases of Henry's might emerge across dozens or even hundreds of attributes
    in another dataset. Therefore, we must learn more sophisticated methods to detect
    multivariate outliers.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 亨利的类似案例可能会出现在另一个数据集中的几十个甚至几百个属性中。因此，我们必须学习更复杂的方法来检测多变量异常值。
- en: This is where machine learning methods, specifically outlier classifiers, come
    into play.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是机器学习方法，特别是异常值分类器，发挥作用的地方。
- en: Loading the dataset
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加载数据集
- en: 'Let''s first load the dataset we will be working with. It is the same Diamonds
    dataset from the last tutorial:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先加载我们将要使用的数据集。这是上一个教程中相同的 Diamonds 数据集：
- en: '[PRE0]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](../Images/143af438d5bead17872f4ddaec9cb5c2.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/143af438d5bead17872f4ddaec9cb5c2.png)'
- en: Image by the author
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: 'We perform a small preprocessing step where we encode the categoricals with
    the OrdinalEncoder class of Sklearn:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们进行一个小的预处理步骤，将类别特征编码为 Sklearn 的 OrdinalEncoder 类：
- en: '[PRE1]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Now, let's begin! (rubs hands together)
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们开始吧！（搓手）
- en: Multivariate outlier detection with PyOD
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 PyOD 进行多变量异常检测
- en: 'Even though the theory may be a bit hard, performing multivariate outlier detection
    in code is very easy thanks to the Python Outlier Detection (PyOD) library. Let''s
    see an example using the Local Outlier Factor algorithm:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管理论可能有些困难，但得益于 Python Outlier Detection (PyOD) 库，执行多变量异常检测在代码中非常简单。让我们通过 Local
    Outlier Factor 算法来看一个例子：
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: After importing the `LOF` estimator from `pyod`, we initialize it with 30 neighbors
    and fit to `X` (don't worry about the details of `LOF`, we'll talk about that
    later).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在从 `pyod` 中导入 `LOF` 估算器后，我们用 30 个邻居初始化它，并拟合到 `X`（不用担心 `LOF` 的细节，我们稍后会讨论）。
- en: 'Then, we access its `labels_` attribute, which returns 0 (inliers) or 1 (outliers)
    for each row of `X`. Let''s count the outliers:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们访问它的 `labels_` 属性，该属性返回 `X` 每一行的 0（正常值）或 1（异常值）。让我们来计算一下异常值：
- en: '[PRE3]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Hmm, we have got 5394 outliers, or exactly 10% of the dataset. Is this a coincidence?
    Let''s try the same operation with another outlier classifier, Isolation Forest:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，我们发现了 5394 个异常值，正好占数据集的 10%。这是不是巧合？让我们尝试使用另一个异常值分类器 Isolation Forest 进行相同的操作：
- en: '[PRE5]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: We get the same suspicious 10%. This can't be a coincidence (actually, nothing
    is — Oogway).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到了相同的可疑 10%。这不可能是巧合（实际上，没有什么是巧合的 — 乌龟大师）。
- en: What is contamination in outlier detection?
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 异常检测中的污染是什么？
- en: 'Outlier classifier algorithms like Isolation Forest or Local Outlier Factor
    aren''t actually classifiers. When they are fit to a dataset, their internal algorithms
    calculate anomaly scores for each row in the dataset. Here is an example with
    IForest:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 像隔离森林或局部异常因子这样的异常值分类算法实际上并不是分类器。当它们拟合到数据集时，其内部算法会计算数据集中每一行的异常分数。以下是IForest的一个示例：
- en: '[PRE7]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Using the `decision_scores_` attribute, you can access the anomaly scores of
    any algorithm once they are fit.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`decision_scores_`属性，你可以访问任何算法的异常分数，一旦它们被拟合。
- en: 'These scores tell us how anomalous each sample in the dataset is. By default,
    all algorithms in PyOD mark the samples with the top 10% highest anomaly scores
    as outliers. This is given as the *contamination* parameter:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这些分数告诉我们数据集中每个样本的异常程度。默认情况下，PyOD中的所有算法将具有最高10%异常分数的样本标记为异常点。这是作为*contamination*参数提供的：
- en: '![](../Images/186ae0b8082ab23c040aa06a6d072b75.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/186ae0b8082ab23c040aa06a6d072b75.png)'
- en: Image by the author
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Basically, outlier classifiers are saying to us, "Here is how anomalous I think
    each sample is. For now, I will select the 10% of most anomalous samples as outliers,
    but you can always change that with my contamination parameter".
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，异常值分类器对我们说：“这是我认为每个样本的异常程度。现在，我将选择10%最异常的样本作为异常点，但你可以随时通过我的污染参数进行更改。”
- en: Basically, `contamination` is a hyperparameter of all classifiers that controls
    the number of produced outliers.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，`contamination`是所有分类器的超参数，用于控制产生的异常点数量。
- en: Now, this may seem paradoxical — we want to detect outliers using classifiers,
    but classifiers are telling us to decide how we choose those outliers. That right
    there is the biggest challenge of outlier detection.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这可能看起来有些矛盾——我们想要使用分类器检测异常点，但分类器却告诉我们如何选择这些异常点。这正是异常值检测的最大挑战。
- en: You, the machine learning engineer, are behind the wheel — you make all the
    decisions. YOU have to decide what percentage to set for contamination using your
    experience, domain knowledge, intuition, and trial and error.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 你，作为机器学习工程师，掌握着所有决策——你需要使用你的经验、领域知识、直觉和试错来决定设置污染的百分比。
- en: Probability confidence
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概率置信度
- en: If finding the correct value for contamination sounds complicated, there is
    a workaround that enables us to ditch contamination. And the workaround is outlier
    probability scores.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果找到正确的污染值听起来很复杂，有一个解决方法可以让我们摆脱污染。这个解决方法就是异常值概率分数。
- en: Once a PyOD estimator is fit to a dataset, it will have `predict_proba` method
    available. It returns two columns for each sample; the first column is the probability
    of the sample being an inlier and the second is the probability of the sample
    being an outlier. Let's call those inlier probability and outlier probability
    for short.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦PyOD估计器拟合到数据集，它将拥有`predict_proba`方法。它为每个样本返回两列；第一列是样本为内点的概率，第二列是样本为异常点的概率。我们简称这些为内点概率和异常点概率。
- en: '[PRE9]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: These probabilities are generated by normalizing the `decision_scores_` array
    using MinMax scaling, also called normalization.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这些概率是通过使用MinMax缩放（也称为规范化）对`decision_scores_`数组进行规范化生成的。
- en: 'Normalizing an array will force it to be within the range of 0 and 1, which
    means we can interpret anomaly scores as probabilities of samples being an outlier.
    So, here is how `predict_proba` is written under the hood:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 规范化数组将强制其在0到1的范围内，这意味着我们可以将异常分数解释为样本为异常点的概率。所以，`predict_proba`在后台的实现如下：
- en: '[PRE11]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now, instead of selecting outliers based on contamination, we can select them
    based on probability confidence. Instead of choosing 10% of most anomalous samples,
    we can select samples that have at least 80%, 90%, or n% outlier probability.
    Here is what it would look like:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以基于概率置信度来选择异常点，而不是基于污染。我们可以选择至少有80%、90%或n%异常点概率的样本，而不是选择10%最异常的样本。下面是示例：
- en: '[PRE13]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Using the probability confidence method, we only find 12 outliers, instead of
    over 5000\. And the best part is that we are 90% sure those 12 outliers are actually
    outliers!
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 使用概率置信度方法，我们只找到了12个异常点，而不是超过5000个。最棒的是，我们有90%的把握这12个异常点确实是异常点！
- en: How to choose the right probability threshold
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何选择合适的概率阈值
- en: Choosing a probability threshold depends on several factors like dataset size,
    the task you are trying to solve, and the business domain.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 选择概率阈值取决于多个因素，如数据集大小、你试图解决的任务和业务领域。
- en: If you have a small dataset, you want to make absolutely sure the outliers you
    are isolating are actually outliers. By dropping them, you don't want to lose
    important information and patterns in your small dataset which will inevitably
    affect machine learning models. For such cases, you should set a high threshold
    like 80–90%.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有一个小型数据集，你需要确保你所隔离的异常值确实是异常值。通过删除它们，你不希望丢失在小型数据集中重要的信息和模式，这些都不可避免地会影响机器学习模型。对于这种情况，你应该设置一个较高的阈值，比如80%–90%。
- en: If you are dealing with sensitive data like medical records where it is critical
    to avoid false positives, you should aim for over 90%. 95% and 99% are pretty
    common as well.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你处理的是像医疗记录这样的敏感数据，在这种情况下，避免假阳性是至关重要的，你应该将阈值设定为超过90%。95% 和 99% 也是比较常见的。
- en: It all depends on how confident about outliers you want or must be while solving
    the business problem with the data at hand.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 一切都取决于你在解决手头业务问题时对异常值的信心或必须有的信心。
- en: How to choose the right outlier classifier
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何选择合适的异常值分类器
- en: In a supervised-learning task, your job would be easy. You would evaluate a
    bunch of algorithms using metrics like RMSE or accuracy and choose the one that
    looks most promising.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在监督学习任务中，你的工作会简单一些。你可以使用像 RMSE 或准确率这样的度量标准来评估一系列算法，并选择最有前途的那个。
- en: However, since outlier detection is an unsupervised-learning problem, you won't
    really be able to compare one algorithm to another because you can't measure their
    performance with metrics.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，由于异常检测是一个无监督学习问题，你实际上无法将一个算法与另一个算法进行比较，因为你无法用度量标准来衡量它们的表现。
- en: However, there are some algorithms that consistently perform well if used correctly.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，有一些算法如果使用得当，表现始终良好。
- en: '[Isolation Forest](https://pyod.readthedocs.io/en/latest/pyod.models.html#module-pyod.models.iforest):
    works on almost any type of dataset but is specifically designed for high-dimensional,
    complex ones. Even though it is a collection of different type of decision trees,
    called ITrees, it is fast and has a high performance. It can also handle data
    with irregular, non-normal distributions.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[孤立森林](https://pyod.readthedocs.io/en/latest/pyod.models.html#module-pyod.models.iforest)：适用于几乎任何类型的数据集，但特别设计用于高维和复杂的数据集。尽管它是不同类型的决策树的集合，称为
    ITrees，但它速度快且性能高。它还可以处理具有不规则、非正态分布的数据。'
- en: '[Local Outlier Factor](https://pyod.readthedocs.io/en/latest/pyod.models.html#module-pyod.models.lof):
    particularly good for datasets with data points that are clustered together as
    it calculates anomaly scores using local density. It works well with high-dimensional
    data and can be faster than IForest.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[局部异常因子](https://pyod.readthedocs.io/en/latest/pyod.models.html#module-pyod.models.lof)：特别适用于数据点被聚集在一起的数据集，因为它通过局部密度来计算异常分数。它对高维数据表现良好，并且比
    IForest 更快。'
- en: If you want to learn more about how to choose the right classifier, check out
    [my Anomaly Detection course on DataCamp](https://app.datacamp.com/learn/courses/anomaly-detection-in-python)
    where I teach close to 10 outlier classifiers, how and when to use them, and how
    to tune their hyperparameters.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多关于如何选择合适的分类器，可以查看[我在 DataCamp 上的异常检测课程](https://app.datacamp.com/learn/courses/anomaly-detection-in-python)，在课程中我讲解了近10种异常值分类器，如何以及何时使用它们，以及如何调整它们的超参数。
- en: Also, [this page](https://pyod.readthedocs.io/en/latest/pyod.models.html#) of
    PyOD documentation lists over 40 algorithms. You can see how they perform by looking
    at this [table](https://pyod.readthedocs.io/en/latest/benchmark.html) where they
    list the performance of the 10 best outlier classifiers on more than 15 datasets.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，[这个页面](https://pyod.readthedocs.io/en/latest/pyod.models.html#) 的 PyOD 文档列出了超过40种算法。你可以通过查看这个[表格](https://pyod.readthedocs.io/en/latest/benchmark.html)来了解它们的表现，表格中列出了10种最佳异常值分类器在15个数据集上的表现。
- en: Conclusion
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: This article covered the topic of multivariate outlier detection in machine
    learning and demonstrated how it can be done using PyOD in Python. By transforming
    anomaly scores into probability confidence, selecting the best outlier classifier,
    and determining the right probability threshold, you can enhance your machine
    learning models by removing outliers from the data. With this knowledge, you are
    now ready to perform efficient outlier detection in your own projects.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 本文讨论了机器学习中的多变量异常检测主题，并展示了如何使用 Python 中的 PyOD 实现。通过将异常分数转化为概率置信度，选择最佳的异常值分类器，并确定合适的概率阈值，你可以通过从数据中去除异常值来提升你的机器学习模型。有了这些知识，你现在可以在自己的项目中进行高效的异常检测。
- en: Loved this article and, let’s face it, its bizarre writing style? Imagine having
    access to dozens more just like it, all written by a brilliant, charming, witty
    author (that’s me, by the way :).
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 喜欢这篇文章吗？让我们面对现实吧，它的写作风格确实很奇特。想象一下拥有更多类似的文章，全部由一位聪明、迷人、机智的作者（顺便说一下，就是我 :）。
- en: For only 4.99$ membership, you will get access to not just my stories, but a
    treasure trove of knowledge from the best and brightest minds on Medium. And if
    you use [my referral link](https://ibexorigin.medium.com/membership), you will
    earn my supernova of gratitude and a virtual high-five for supporting my work.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 仅需4.99$的会员资格，你将不仅能访问我的故事，还能获得来自Medium上最优秀头脑的知识宝库。如果你使用[我的推荐链接](https://ibexorigin.medium.com/membership)，你将获得我的超级感激以及一个虚拟的击掌，感谢你对我工作的支持。
- en: '[](https://ibexorigin.medium.com/membership?source=post_page-----b0a9c557a21c--------------------------------)
    [## Join Medium with my referral link — Bex T.'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://ibexorigin.medium.com/membership?source=post_page-----b0a9c557a21c--------------------------------)
    [## 使用我的推荐链接加入Medium — Bex T.'
- en: Get exclusive access to all my ⚡premium⚡ content and all over Medium without
    limits. Support my work by buying me a…
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 获得对我所有⚡高级⚡内容以及Medium上所有内容的无限制访问。通过给我买一杯咖啡来支持我的工作……
- en: ibexorigin.medium.com](https://ibexorigin.medium.com/membership?source=post_page-----b0a9c557a21c--------------------------------)
    ![](../Images/95a45f54ecebc1b690dfd77f973617d2.png)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: ibexorigin.medium.com](https://ibexorigin.medium.com/membership?source=post_page-----b0a9c557a21c--------------------------------)
    ![](../Images/95a45f54ecebc1b690dfd77f973617d2.png)
