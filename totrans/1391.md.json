["```py\n!pip install langchain\n!pip install openai\n\nfrom langchain import LLMMathChain, SerpAPIWrapper\nfrom langchain.agents import AgentType, initialize_agent\nfrom langchain.chat_models import ChatOpenAI\nfrom langchain.tools import BaseTool, StructuredTool, Tool, tool\nimport os\n\nos.environ[\"OPENAI_API_KEY\"] = ... # insert your API_TOKEN here\n\nllm = ChatOpenAI(temperature=0)\n```", "```py\nsearch = SerpAPIWrapper()\ntools = [\n    Tool.from_function(\n        func=search.run,\n        name=\"Search\",\n        description=\"useful for when you need to answer questions about current events\"\n    ),\n]\n```", "```py\nagent = initialize_agent(\n    tools, llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True\n)\n\nagent.run(\n    \"Who is Bob Dylan's girlfriend?\n)\n```", "```py\nclass CustomTool(BaseTool):\n    name = \"custom_tool\"\n    description = \"useful for when you need to answer questions about medium articles\"\n\n    def _run(\n        self, query: str, run_manager: Optional[CallbackManagerForToolRun] = None\n    ) -> str:\n        \"\"\"Use the tool.\"\"\"\n        return \"I am not a Medium expert, but I know that Marcello is pretty good! :I)\"\n\n    async def _arun(\n        self, query: str, run_manager: Optional[AsyncCallbackManagerForToolRun] = None\n    ) -> str:\n        \"\"\"Use the tool asynchronously.\"\"\"\n        raise NotImplementedError(\"custom_search does not support async\")\n```", "```py\nclass CustomTool(BaseTool):\n    name = \"custom_tool\"\n    description = \"useful for when you need to answer questions about medium articles\"\n    return_direct=True\n\n    def _run(\n        self, query: str, run_manager: Optional[CallbackManagerForToolRun] = None\n    ) -> str:\n        \"\"\"Use the tool.\"\"\"\n        return \"I am not a Medium expert, but I know that Marcello is pretty good! :I)\"\n\n    async def _arun(\n        self, query: str, run_manager: Optional[AsyncCallbackManagerForToolRun] = None\n    ) -> str:\n        \"\"\"Use the tool asynchronously.\"\"\"\n        raise NotImplementedError(\"custom_search does not support async\")\n```", "```py\nimport pandas as pd\n\nclass WorkingHours(BaseTool):\n    name = \"working_hours\"\n    description = \"useful for when you need to answer questions about working hours of the medical staff\"\n    return_direct=True+\n\n    def _run(\n        self, query: str, run_manager: Optional[CallbackManagerForToolRun] = None\n    ) -> str:\n        \"\"\"Use the tool.\"\"\"\n        df = pd.read_csv(\"working_hours.csv\") #maybe you need to retieve some real time data from a DB\n        return df\n\n    async def _arun(\n        self, query: str, run_manager: Optional[AsyncCallbackManagerForToolRun] = None\n    ) -> str:\n        \"\"\"Use the tool asynchronously.\"\"\"\n        raise NotImplementedError(\"custom_search does not support async\")\n```"]