- en: Solving All Python Dependency Issues on Apple Silicon
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/solving-all-python-dependency-issues-on-apple-silicon-29a2171d1d7c](https://towardsdatascience.com/solving-all-python-dependency-issues-on-apple-silicon-29a2171d1d7c)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A guide to managing multiple Python architectures on the Mac M1 using pyenv
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://david-farrugia.medium.com/?source=post_page-----29a2171d1d7c--------------------------------)[![David
    Farrugia](../Images/082ed61e24c7c26a4ae1c77343a87824.png)](https://david-farrugia.medium.com/?source=post_page-----29a2171d1d7c--------------------------------)[](https://towardsdatascience.com/?source=post_page-----29a2171d1d7c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----29a2171d1d7c--------------------------------)
    [David Farrugia](https://david-farrugia.medium.com/?source=post_page-----29a2171d1d7c--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----29a2171d1d7c--------------------------------)
    ·4 min read·Feb 21, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/35b90b1468e13b350e7dfa0cc53604f6.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Jonathan Francisca](https://unsplash.com/@jonathan_francisca?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: I love MacOS.
  prefs: []
  type: TYPE_NORMAL
- en: Perhaps its the certified Unix trait, its simplicity and elegance, or its seamless
    integration. But I love MacOS.
  prefs: []
  type: TYPE_NORMAL
- en: From my experience, things just work.
  prefs: []
  type: TYPE_NORMAL
- en: At the start of my professional career, I was a predominantly Windows user (and
    playing with Linux distributions on the side). Once I switched to Apple, as cliche
    as it might be, I never looked back.
  prefs: []
  type: TYPE_NORMAL
- en: Long gone where the days of following step-by-step tutorials only to face weird
    errors.
  prefs: []
  type: TYPE_NORMAL
- en: Long gone where the days of having to find boilerplate code for some Python
    packages to make them work specifically on a Windows system.
  prefs: []
  type: TYPE_NORMAL
- en: And this happened often. As a data scientist, I am constantly experimenting
    and trying out new Python packages.
  prefs: []
  type: TYPE_NORMAL
- en: I’ve been crunching numbers on my trusted 2019 Macbook Pro since its release.
    But lately, I’ve got the opportunity to spend some time working on a 2020 Macbook
    Pro M1.
  prefs: []
  type: TYPE_NORMAL
- en: I was excited. I’ve heard awesome news on how much more powerful the M1 chip
    was in comparison to the Intel chip.
  prefs: []
  type: TYPE_NORMAL
- en: Now, first things first. What a chip! The M1 is stupidly fast, power efficient,
    and miles ahead of the competition. The difference in performance from my older
    system is immediately noticeable.
  prefs: []
  type: TYPE_NORMAL
- en: However, as I started to set up my machine for data science and machine learning,
    I quickly realised that the one thing I loved most about Macs has quickly disappeared.
    I was unable to complete the most rudimentary of things — installing Python packages
    through pip. The M1 was throwing me all sorts of dependancy errors and weird conflicts.
  prefs: []
  type: TYPE_NORMAL
- en: This is primarily due to the switch from x86 to ARM64\. Although the situation
    is drastically improved nowadays, with a lot of developers updating their packages
    to support ARM64 systems, a significant number of Python packages are still not
    updated.
  prefs: []
  type: TYPE_NORMAL
- en: Enter pyenv
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[](https://github.com/pyenv/pyenv?source=post_page-----29a2171d1d7c--------------------------------)
    [## GitHub - pyenv/pyenv: Simple Python version management'
  prefs: []
  type: TYPE_NORMAL
- en: pyenv lets you easily switch between multiple versions of Python. It's simple,
    unobtrusive, and follows the UNIX…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: github.com](https://github.com/pyenv/pyenv?source=post_page-----29a2171d1d7c--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: During my research, I cam across Pyenv — a Python version manager.
  prefs: []
  type: TYPE_NORMAL
- en: Similar to how we use `conda`or `venv`to manage different packages and environments,
    Pyenv allows us to have multiple Python versions on the same machine. Besides
    the actual version (for example, Python 3.8.1 and Python 3.9.7), using Pyenv we
    can also decide whether we want the x86 version of Python or not.
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, on a single machine, we can have an x86 version of Python 3.9.7 and
    an ARM64 version of Python 3.9.7\. We can switch between the different Python
    versions as if they were native to our system.
  prefs: []
  type: TYPE_NORMAL
- en: We can still use `conda` or `venv` with them as well.
  prefs: []
  type: TYPE_NORMAL
- en: So, how can we get started with Pyenv.
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 1: Install xcode on your system**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**Step 2: Install Homebrew**'
  prefs: []
  type: TYPE_NORMAL
- en: Make sure that you have `brew` installed. You can run `brew help` in your terminal
    to see if it is installed.
  prefs: []
  type: TYPE_NORMAL
- en: If you need to install brew, you can follow the instructions on their page.
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://brew.sh/?source=post_page-----29a2171d1d7c--------------------------------)
    [## Homebrew'
  prefs: []
  type: TYPE_NORMAL
- en: The Missing Package Manager for macOS (or Linux).
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: brew.sh](https://brew.sh/?source=post_page-----29a2171d1d7c--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 3: Install Pyenv**'
  prefs: []
  type: TYPE_NORMAL
- en: 'We can install Pyenv through Homebrew as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Step 4: Update Shell Profiles**'
  prefs: []
  type: TYPE_NORMAL
- en: We need to update our shell profiles PATH (e.g., ~/.bash_profile, ~/.zshrc,
    etc.) to include Pyenv.
  prefs: []
  type: TYPE_NORMAL
- en: Also, to enable Pyenv to load up by default, we need to initialise it.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Step 5: Install a Python Version**'
  prefs: []
  type: TYPE_NORMAL
- en: 'To list all available versions, we can use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'To install a specific Python version, we can use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: After installation, we can also set the new version as our global Python version.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '**Step 6: Install Packages**'
  prefs: []
  type: TYPE_NORMAL
- en: Once everything is setup, we can now start using our new Python version as if
    its native to our machine. We can create different virtual environments, and install
    different packages through `pip`or `setup.py` as we normally would.
  prefs: []
  type: TYPE_NORMAL
- en: But, what about x86 Python environments?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We can use Rosetta and Pyenv to setup x86 Python versions on Apple silicon.
  prefs: []
  type: TYPE_NORMAL
- en: Rosetta is a tool bult by Apple to translate x86 architecture to ARM64.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can install Rosetta using:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Once installed, we can set our terminal to open using Rosetta. This will convert
    our terminal to be x86.
  prefs: []
  type: TYPE_NORMAL
- en: To do this, right click on your Terminal application, click `Get Info` and tick
    `Open using Rosetta`.
  prefs: []
  type: TYPE_NORMAL
- en: '**TIP:** duplicate the Terminal application so that you will have one that
    opens up using Rosetta (i.e., x86), and the other for ARM64.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: You can now follow the same process as mentioned above on the x86 terminal to
    get access to x86 Python environments.
  prefs: []
  type: TYPE_NORMAL
- en: Concluding Remarks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this post we go through a simple yet effective solution to working with x86
    Python versions on Apple silicon using Pyenv. Besides this benefit, Pyenv also
    offers a number of advantages, including the management of multiple Python versions
    on a single machine.
  prefs: []
  type: TYPE_NORMAL
- en: '**Did you enjoy this post? For $5/month, you can become a member to unlock
    unlimited access to Medium. You will be directly supporting me and all your other
    favourite writers on Medium. So huge thanks for that!**'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://david-farrugia.medium.com/membership?source=post_page-----29a2171d1d7c--------------------------------)
    [## Join Medium with my referral link - David Farrugia'
  prefs: []
  type: TYPE_NORMAL
- en: Read every story from David Farrugia (and thousands of other writers on Medium).
    Your membership fee directly supports…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: david-farrugia.medium.com](https://david-farrugia.medium.com/membership?source=post_page-----29a2171d1d7c--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: '**Perhaps you might also consider subscribing to my email list to get notified
    whenever I publish new content. It’s free :)**'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://david-farrugia.medium.com/subscribe?source=post_page-----29a2171d1d7c--------------------------------)
    [## Get an email whenever David Farrugia publishes.'
  prefs: []
  type: TYPE_NORMAL
- en: Get an email whenever David Farrugia publishes. By signing up, you will create
    a Medium account if you don't already…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: david-farrugia.medium.com](https://david-farrugia.medium.com/subscribe?source=post_page-----29a2171d1d7c--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Want to Get in Touch?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I would love to hear your thoughts on the topic, or anything AI and Data.
  prefs: []
  type: TYPE_NORMAL
- en: Drop me an email at ***davidfarrugia53@gmail.com*** should you wish to get in
    touch.
  prefs: []
  type: TYPE_NORMAL
- en: '[Linkedin](https://www.linkedin.com/in/david-farrugia/)'
  prefs: []
  type: TYPE_NORMAL
