- en: np.stack() — How To Stack two Arrays in Numpy And Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: np.stack() — 如何在Numpy和Python中堆叠两个数组
- en: 原文：[https://towardsdatascience.com/np-stack-how-to-stack-two-arrays-in-numpy-and-python-fc910dd2d57a](https://towardsdatascience.com/np-stack-how-to-stack-two-arrays-in-numpy-and-python-fc910dd2d57a)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/np-stack-how-to-stack-two-arrays-in-numpy-and-python-fc910dd2d57a](https://towardsdatascience.com/np-stack-how-to-stack-two-arrays-in-numpy-and-python-fc910dd2d57a)
- en: '**Beginner and advanced examples of Stacking in Numpy — Learn how to join a
    sequence of arrays easily**'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**Numpy中堆叠的初学者和高级示例——学习如何轻松地连接数组序列**'
- en: '[](https://medium.com/@radecicdario?source=post_page-----fc910dd2d57a--------------------------------)[![Dario
    Radečić](../Images/41882a3b30bab9da43d66a59f1df366b.png)](https://medium.com/@radecicdario?source=post_page-----fc910dd2d57a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----fc910dd2d57a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----fc910dd2d57a--------------------------------)
    [Dario Radečić](https://medium.com/@radecicdario?source=post_page-----fc910dd2d57a--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@radecicdario?source=post_page-----fc910dd2d57a--------------------------------)[![Dario
    Radečić](../Images/41882a3b30bab9da43d66a59f1df366b.png)](https://medium.com/@radecicdario?source=post_page-----fc910dd2d57a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----fc910dd2d57a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----fc910dd2d57a--------------------------------)
    [Dario Radečić](https://medium.com/@radecicdario?source=post_page-----fc910dd2d57a--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----fc910dd2d57a--------------------------------)
    ·7 min read·Jan 10, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----fc910dd2d57a--------------------------------)
    ·阅读时间7分钟·2023年1月10日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/cc7b5581c52b6ae2e275765250b5f008.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cc7b5581c52b6ae2e275765250b5f008.png)'
- en: Photo by [Brigitte Tohm](https://unsplash.com/@brigittetohm?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[Brigitte Tohm](https://unsplash.com/@brigittetohm?utm_source=medium&utm_medium=referral)提供，来源于[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Numpy is an amazing library for data science and machine learning, so there’s
    no way around it if you want to become a data professional. Mastering the ins
    and outs of the package is mandatory because there’s no point in reinventing the
    wheel — pretty much anything you can think of has already been implemented.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Numpy是一个在数据科学和机器学习中非常出色的库，因此如果你想成为数据专业人士，就必须掌握它。掌握这个包的方方面面是必要的，因为重新发明轮子是没有意义的——几乎你能想到的任何东西都已经实现了。
- en: Today you’ll learn all about np stack — or the Numpy’s `stack()` function. Put
    simply, it allows you to join arrays row-wise (default) or column-wise, depending
    on the parameter values you specify. We'll go over the fundamentals and the function
    signature, and then jump into examples in Python.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 今天你将了解所有关于np stack的信息——即Numpy的`stack()`函数。简单来说，它允许你按行（默认）或按列连接数组，具体取决于你指定的参数值。我们将讨论基础知识和函数签名，然后进入Python中的示例。
- en: What is np stack?
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是np stack？
- en: Numpy’s np stack function is used to stack/join arrays along a new axis. It
    will return a single array as a result of stacking multiple sequences with the
    same shape. You can stack multidimensional arrays as well, and you’ll learn how
    shortly.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Numpy的np stack函数用于在新轴上堆叠/连接数组。它将返回一个单一数组，作为堆叠多个形状相同的序列的结果。你也可以堆叠多维数组，稍后你将很快学到这一点。
- en: But first, let’s explain the difference between horizontal and vertical stacking.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 但首先，让我们解释一下水平堆叠和垂直堆叠的区别。
- en: Horizontal vs. vertical stack in Numpy
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Numpy中的水平堆叠与垂直堆叠
- en: Stacking arrays horizontally means that you take arrays of the same dimensions
    and stack them on top of each other. Each *input* array will be a row in the resulting
    array.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 水平堆叠数组意味着你将具有相同维度的数组堆叠在彼此之上。每个*输入*数组将在结果数组中成为一行。
- en: 'Take a look at the following image for a better understanding:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 查看下面的图像以更好地理解：
- en: '![](../Images/a5137d122d777abd80ff78805805b475.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a5137d122d777abd80ff78805805b475.png)'
- en: Image 1 — Horizontal stacking explained (image by author)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 图1 — 解释水平堆叠（图像由作者提供）
- en: Vertical stacking works just the opposite. One row of two vertically stacked
    arrays contains corresponding elements from both.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 垂直堆叠则完全相反。两个垂直堆叠数组的一行包含来自两个数组的对应元素。
- en: For example, the first row of a vertically stacked array Z will contain the
    first elements of the input arrays X and Y.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，垂直堆叠数组Z的第一行将包含输入数组X和Y的第一个元素。
- en: 'Maybe you’ll find it easier to grasp visually:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 也许你会发现视觉上更容易理解：
- en: '![](../Images/93e2dee696bd3fc31ca2483bb669fa26.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/93e2dee696bd3fc31ca2483bb669fa26.png)'
- en: Image 2 — Vertical stacking explained (image by author)
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2 — 垂直堆叠解释（图片由作者提供）
- en: And with that out the way, let’s go over the np stack function signature.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 说到这里，让我们看看 `np.stack` 函数的签名。
- en: Function parameters explained
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 函数参数解释
- en: 'The np stack function can take up to three parameters, of which only the first
    one is mandatory:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '`np.stack` 函数最多可以接受三个参数，其中只有第一个是必需的：'
- en: '`arrays` - sequence of arrays, or array of arrays you want to stack'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`arrays` - 数组的序列，或你想要堆叠的数组数组'
- en: '`axis` - integer, the axis along which you want to stack the arrays (0 = row-wise
    stacking, 1 = column-wise stacking for 1D arrays, or use -1 to use the last axis)'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`axis` - 整数，沿着你想要堆叠数组的轴（0 = 按行堆叠，1 = 对于一维数组按列堆叠，或使用 -1 使用最后一个轴）'
- en: '`out` - optional destination to place the results. If provided, the output
    array shape must match the stacking result shape'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`out` - 可选的结果存放位置。如果提供，输出数组的形状必须与堆叠结果的形状匹配'
- en: Enough theory! Let’s now go over some practical examples.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 理论讲解够了！现在我们来看看一些实际的示例。
- en: Numpy Stack in Action — Function Examples
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Numpy 堆叠实战 — 函数示例
- en: We’ve talked a lot about horizontal and vertical stacking, so let’s see how
    it works in practice.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们讨论了很多关于水平和垂直堆叠的内容，所以让我们看看它在实践中的表现。
- en: Numpy horizontal stacking (row-wise)
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Numpy 水平堆叠（按行）
- en: 'To stack two numpy arrays horizontally, you just need to call the np.stack
    function and pass in the arrays. No other parameters are required:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 要水平堆叠两个 numpy 数组，只需调用 `np.stack` 函数并传入这些数组。无需其他参数：
- en: '[PRE0]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Here’s the resulting output:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这是得到的结果：
- en: '![](../Images/a5f646f2a2966c7f2c71184b562fbd60.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a5f646f2a2966c7f2c71184b562fbd60.png)'
- en: Image 3 — Horizontal stacking in Numpy (1) (image by author)
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3 — Numpy 中的水平堆叠 (1)（图片由作者提供）
- en: As you can see, the output looks a lot like a Numpy version of a Pandas DataFrame,
    which means one array pretty much equals one row of the matrix.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，输出看起来很像 Pandas DataFrame 的 Numpy 版本，这意味着一个数组几乎等于矩阵的一行。
- en: 'To be more explicit, you can achieve the same results by writing `axis=0` as
    the second parameter:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 更明确地说，你可以通过将 `axis=0` 作为第二个参数来实现相同的结果：
- en: '[PRE1]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The results are identical:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是相同的：
- en: '![](../Images/38290d54455c7f60690fcc27e6ed8efa.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/38290d54455c7f60690fcc27e6ed8efa.png)'
- en: Image 4 — Horizontal stacking in Numpy (2) (image by author)
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4 — Numpy 中的水平堆叠 (2)（图片由作者提供）
- en: Next, let’s explore vertical stacking.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们探索垂直堆叠。
- en: Numpy vertical stacking (column-wise)
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Numpy 垂直堆叠（按列）
- en: 'To stack two numpy arrays vertically, just change the value of the `axis` parameter
    to 1:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 要垂直堆叠两个 numpy 数组，只需将 `axis` 参数的值更改为 1：
- en: '[PRE2]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now the arrays are stacked as columns, meaning you’ll have as many columns
    as you have provided arrays:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，数组按列堆叠，这意味着你将有与提供的数组数量相等的列：
- en: '![](../Images/4cc49dfc8d296fbeffa1787209cc078d.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4cc49dfc8d296fbeffa1787209cc078d.png)'
- en: Image 5 — Vertical stacking in Numpy (1) (image by author)
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5 — Numpy 中的垂直堆叠 (1)（图片由作者提供）
- en: 'With simple 1D arrays, you can also set `axis=-1` to stack the arrays vertically:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 使用简单的一维数组，你还可以设置 `axis=-1` 来垂直堆叠数组：
- en: '[PRE3]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The results are identical:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是相同的：
- en: '![](../Images/e8a44fb25d9c9c0250ca1f9108443495.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e8a44fb25d9c9c0250ca1f9108443495.png)'
- en: Image 6 — Vertical stacking in Numpy (2) (image by author)
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6 — Numpy 中的垂直堆叠 (2)（图片由作者提供）
- en: Next, let’s discuss some more on stacking N-dimensional arrays.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们讨论一些关于堆叠 N 维数组的内容。
- en: Join 1D arrays with stack()
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 `stack()` 合并一维数组
- en: 'You’ve already seen how to stack 1-dimensional arrays, but here’s a recap:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经看到如何堆叠一维数组了，下面是回顾：
- en: '[PRE4]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'And the output:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 输出结果：
- en: '![](../Images/55554d84f2c83a54c9ae6c9935f8312e.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/55554d84f2c83a54c9ae6c9935f8312e.png)'
- en: Image 7 — Stacking 1D arrays (image by author)
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7 — 堆叠一维数组（图片由作者提供）
- en: Remember that you can change the value of the `axis` parameter if you want to
    stack the arrays column-wise.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，如果你想按列堆叠数组，可以更改 `axis` 参数的值。
- en: Join 2D arrays with stack()
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 `stack()` 合并二维数组
- en: 'The procedure is identical for stacking 2D arrays with np stack. Here’s an
    example:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 对于使用 `np.stack` 堆叠二维数组，过程是一样的。这是一个示例：
- en: '[PRE5]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We now get a 3-dimensional array back, each element being a 2-dimensional array
    of two horizontally stacked arrays:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在得到一个三维数组，每个元素是两个水平堆叠数组的二维数组：
- en: '![](../Images/472cd0b04cc67e9a45d78c94f34c840d.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/472cd0b04cc67e9a45d78c94f34c840d.png)'
- en: Image 8 — Stacking 2D arrays (1) (image by author)
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8 — 堆叠二维数组 (1)（图片由作者提供）
- en: 'As per usual, you can stack 2-dimensional arrays vertically:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 一如既往，你可以垂直堆叠二维数组：
- en: '[PRE6]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Here’s the output:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是输出结果：
- en: '![](../Images/b2321559bc1233efd356fe708a6851ca.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b2321559bc1233efd356fe708a6851ca.png)'
- en: Image 9 — Stacking 2D arrays (2) (image by author)
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图像 9 — 堆叠 2D 数组（2）（作者提供的图像）
- en: That’s pretty much all there is to numpy stacking, at least for the basics.
    Up next, we’ll go over some advanced usage examples and frequently asked questions.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是 numpy 堆叠的基本知识了。接下来，我们将介绍一些高级用法示例和常见问题。
- en: 'Advanced: np stack in a loop'
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高级：循环中的 np stack
- en: 'One of the commonly asked questions is how can you use np stack in a loop.
    Here’s an example — it will first combine two 2-dimensional arrays into a 3-dimensional
    one:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 常见的问题之一是如何在循环中使用 np stack。这里有一个示例 —— 它将两个二维数组首先合并为一个三维数组：
- en: '[PRE7]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This is the intermediary output:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这是中间输出：
- en: '![](../Images/7105695fd055423354c0d911316f009b.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7105695fd055423354c0d911316f009b.png)'
- en: Image 10 — Numpy stacking in a loop (1) (image by author)
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图像 10 — 循环中的 Numpy 堆叠（1）（作者提供的图像）
- en: 'And now to produce a single 2-dimensional array with the elements stacked horizontally,
    you can use a loop:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，要生成一个水平堆叠元素的二维数组，你可以使用循环：
- en: '[PRE8]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Here’s the result:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![](../Images/8afad6984a1a81d591cc76bf4f7c4c85.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8afad6984a1a81d591cc76bf4f7c4c85.png)'
- en: Image 11 — Numpy stacking in a loop (2) (image by author)
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图像 11 — 循环中的 Numpy 堆叠（2）（作者提供的图像）
- en: We’ll now cover some frequently asked questions about the np stack function
    in Python.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将讨论一些关于 Python 中 np stack 函数的常见问题。
- en: FAQ
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 常见问题
- en: What is the difference between stack and concatenate?
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: stack 和 concatenate 有什么区别？
- en: Put simply, np stack function will return a 2D array when two 1D arrays are
    passed in. The np concatenate function takes elements of all input arrays and
    returns them as a single 1D array.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，当传入两个一维数组时，np stack 函数将返回一个二维数组。而 np concatenate 函数则将所有输入数组的元素合并为一个一维数组。
- en: What is numpy dstack?
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是 numpy dstack？
- en: 'The numpy dstack function allows you to combine arrays index by index and store
    the results like a stack. Here’s an example:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: numpy dstack 函数允许你按索引合并数组，并将结果存储为堆栈。这是一个示例：
- en: '[PRE9]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'And the output:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 输出结果：
- en: '![](../Images/50acd2c2ee1067adec52f816bf6b3c2b.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/50acd2c2ee1067adec52f816bf6b3c2b.png)'
- en: Image 12 — Numpy dstack (image by author)
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图像 12 — Numpy dstack（作者提供的图像）
- en: So, we had two 1x4 arrays coming in, and `dstack` combined them vertically into
    a 3-dimensional array format. Neat for some use cases.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们有两个 1x4 的数组进来，`dstack` 将它们垂直地合并成一个三维数组格式。这对于某些用例来说非常方便。
- en: '*Loved the article? Become a* [*Medium member*](/@radecicdario/membership)
    *to continue learning without limits. I’ll receive a portion of your membership
    fee if you use the following link, with no extra cost to you.*'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '*喜欢这篇文章吗？成为* [*Medium 会员*](/@radecicdario/membership) *以继续无限学习。如果你使用以下链接，我将获得你的会员费的一部分，但对你没有额外费用。*'
- en: '[https://medium.com/@radecicdario/membership](https://medium.com/@radecicdario/membership)'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://medium.com/@radecicdario/membership](https://medium.com/@radecicdario/membership)'
- en: '*Originally published at* [*https://betterdatascience.com*](https://betterdatascience.com/np-stack/)
    *on January 10, 2023.*'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '*最初发表于* [*https://betterdatascience.com*](https://betterdatascience.com/np-stack/)
    *，日期为 2023 年 1 月 10 日。*'
