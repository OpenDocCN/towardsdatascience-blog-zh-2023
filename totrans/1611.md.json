["```py\npip install pantsbuild.pants==2.15.1\n```", "```py\n[GLOBAL]\npants_version = \"2.15.1\"\nbackend_packages = [\n    \"pants.backend.python\",\n]\n\n[source]\nroot_patterns = [\"/\"]\n\n[python]\ninterpreter_constraints = [\"==3.9.*\"]\n```", "```py\npython_sources(\n    name=\"python\",\n    resolve=\"mnist\",\n    sources=[\"**/*.py\"],\n)\n```", "```py\npython_requirements(\n    name=\"reqs\",\n    source=\"requirements.txt\",\n    resolve=\"mnist\",\n)\n```", "```py\npants tailor --check update-build-files --check ::\n```", "```py\n[python]\ninterpreter_constraints = [\"==3.9.*\"]\nenable_resolves = true\ndefault_resolve = \"mnist\"\n\n[python.resolves]\nmnist = \"mnist/mnist.lock\"\n```", "```py\npants generate-lockfiles\n```", "```py\nCompleted: Generate lockfile for mnist\nWrote lockfile for the resolve `mnist` to mnist/mnist.lock\n```", "```py\n[GLOBAL]\npants_version = \"2.15.1\"\ncolors = true\nbackend_packages = [\n    \"pants.backend.python\",\n    \"pants.backend.python.lint.docformatter\",\n    \"pants.backend.python.lint.black\",\n]\n```", "```py\npants lint ::\n```", "```py\nCompleted: Format with docformatter - docformatter made no changes.\nCompleted: Format with Black - black made no changes.\n✓ black succeeded.\n✓ docformatter succeeded.\n```", "```py\npants fmt ::\n```", "```py\n[isort]\nargs = [\n    \"-l=88\",\n ]\n```", "```py\n[test]\noutput = \"all\"\nreport = false\nuse_coverage = true\n\n[coverage-py]\nglobal_report = true\n\n[pytest]\nargs = [\"-vv\", \"-s\", \"-W ignore::DeprecationWarning\", \"--no-header\"]\n```", "```py\npython_tests(\n    name=\"tests\",\n    resolve=\"mnist\",\n    sources=[\"test_*.py\"],\n)\n```", "```py\npants test ::\n```", "```py\n✓ mnist/tests/test_data.py:../tests succeeded in 3.83s.\n✓ mnist/tests/test_model.py:../tests succeeded in 2.26s.\nName                               Stmts   Miss  Cover\n------------------------------------------------------\n__global_coverage__/no-op-exe.py       0      0   100%\nmnist/src/data.py                     14      0   100%\nmnist/src/model.py                    15      0   100%\nmnist/tests/test_data.py              21      1    95%\nmnist/tests/test_model.py             20      1    95%\n------------------------------------------------------\nTOTAL                                 70      2    97%\n```", "```py\n✓ mnist/tests/test_data.py:../tests succeeded in 3.83s (memoized).\n✓ mnist/tests/test_model.py:../tests succeeded in 2.26s (memoized).\n```", "```py\n[mypy]\nargs = [\n    \"--ignore-missing-imports\",\n    \"--local-partial-types\",\n    \"--pretty\",\n    \"--color-output\",\n    \"--error-summary\",\n    \"--show-error-codes\",\n    \"--show-error-context\",\n]\n```", "```py\nCompleted: Typecheck using MyPy - mypy - mypy succeeded.\nSuccess: no issues found in 6 source files\n✓ mypy succeeded.\n```", "```py\n[docker]\nbuild_args = [\"SHORT_SHA\"]\nenv_vars = [\"DOCKER_CONFIG=%(env.HOME)s/.docker\", \"HOME\", \"USER\", \"PATH\"]\n```", "```py\nfiles(\n    name=\"module_files\",\n    sources=[\"**/*\"],\n)\n\ndocker_image(\n    name=\"train_mnist\",\n    dependencies=[\"mnist:module_files\"],\n    registries=[\"docker.io\"],\n    repository=\"michaloleszak/mnist\",\n    image_tags=[\"latest\", \"{build_args.SHORT_SHA}\"],\n)\n```", "```py\nSHORT_SHA=$(git rev-parse --short HEAD) pants package mnist:train_mnist\n```", "```py\nCompleted: Building docker image docker.io/michaloleszak/mnist:latest +1 additional tag.\nBuilt docker images: \n  * docker.io/michaloleszak/mnist:latest\n  * docker.io/michaloleszak/mnist:0185754\n```", "```py\ndocker images\n```", "```py\nREPOSITORY            TAG       IMAGE ID       CREATED              SIZE\nmichaloleszak/mnist   0185754   d86dca9fb037   About a minute ago   3.71GB\nmichaloleszak/mnist   latest    d86dca9fb037   About a minute ago   3.71GB\n```", "```py\nSHORT_SHA=$(git rev-parse --short HEAD) pants publish mnist:train_mnist\n```", "```py\npants tailor --check update-build-files --check ::\npants lint ::\npants --changed-since=main --changed-dependees=transitive check\npants test ::\n```", "```py\npants --changed-since=HEAD^ --changed-dependees=transitive --filter-target-type=docker_image publish\n```"]