- en: How to Build Simple ETL Pipelines With GitHub Actions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: åŽŸæ–‡ï¼š[https://towardsdatascience.com/etl-github-actions-cron-383f618704b6](https://towardsdatascience.com/etl-github-actions-cron-383f618704b6)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ETLs donâ€™t have to be complex. If thatâ€™s the case, use GitHub Actions.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://thuwarakesh.medium.com/?source=post_page-----383f618704b6--------------------------------)[![Thuwarakesh
    Murallie](../Images/44f1a14a899426592bbd8c7f73ce169d.png)](https://thuwarakesh.medium.com/?source=post_page-----383f618704b6--------------------------------)[](https://towardsdatascience.com/?source=post_page-----383f618704b6--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----383f618704b6--------------------------------)
    [Thuwarakesh Murallie](https://thuwarakesh.medium.com/?source=post_page-----383f618704b6--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: Â·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----383f618704b6--------------------------------)
    Â·6 min readÂ·May 5, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a24a64f85f7450f2509f91f3562ef550.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Roman Synkevych ðŸ‡ºðŸ‡¦](https://unsplash.com/@synkevych?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: If youâ€™re into software development, youâ€™d know what GitHub actions are. Itâ€™s
    a utility by GitHub to automate dev tasks. Or, in popular language, a DevOps tool.
  prefs: []
  type: TYPE_NORMAL
- en: But people hardly use it for building ETL pipelines.
  prefs: []
  type: TYPE_NORMAL
- en: The first thing that comes to mind when discussing ETLs is Airflow, Prefect,
    or related tools. They are, without a doubt, the best in the market for task orchestration.
    But many ETLs we build are simple, and hosting a separate tool for them is often
    overkill.
  prefs: []
  type: TYPE_NORMAL
- en: You can use GitHub Actions instead.
  prefs: []
  type: TYPE_NORMAL
- en: This article focuses on GitHub Actions. But if youâ€™re on Bitbucket or GitLab,
    you could use their respective alternatives too.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/black-with-git-hub-actions-4ffc5c61b5fe?source=post_page-----383f618704b6--------------------------------)
    [## Maintain Clean Python Code With Black and GitHub Actions.'
  prefs: []
  type: TYPE_NORMAL
- en: Nobody wants a messy codebase; few have the patience to clean it.
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/black-with-git-hub-actions-4ffc5c61b5fe?source=post_page-----383f618704b6--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: We can run our Python, R, or Julia scripts on GitHub Actions. So as a data scientist,
    you donâ€™t have to learn a new language or tool for this matter. You could even
    get email notifications when any of your ETL tasks fail.
  prefs: []
  type: TYPE_NORMAL
- en: You can still enjoy 2000min of computation monthly if youâ€™re on a free account.
    You can try GitHub action if you can estimate your ETL workload within this range.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/remove-file-from-git-history-ce404d7463d3?source=post_page-----383f618704b6--------------------------------)
    [## How to Remove Sensitive Data You Accidentally Uploaded To Github.'
  prefs: []
  type: TYPE_NORMAL
- en: And how to avoid them getting in there? â€” A surprisingly simple technique to
    handle it.
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/remove-file-from-git-history-ce404d7463d3?source=post_page-----383f618704b6--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: How do we start building ETLs on GitHub Actions?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Getting started with the GitHub actions is simple. You could follow the [official
    doc](https://docs.github.com/en/actions/quickstart). Or the three simple steps
    are as follows.
  prefs: []
  type: TYPE_NORMAL
- en: In your repository, create a directory at `.github/workflows` . Then create
    the YAML config file `actions.yaml` inside it with the following content.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The above YAML automates an ETL (Extract, Transform, Load) pipeline. The workflow
    is triggered every day at 12:00 AM UTC, and it consists of a single job that runs
    on the `ubuntu-latest` environment (Whatever thatâ€™s available at the time.)
  prefs: []
  type: TYPE_NORMAL
- en: The steps of these configurations are simple.
  prefs: []
  type: TYPE_NORMAL
- en: 'The job has five steps: the first two steps check out the code and set up the
    Python environment, respectively, while the next three steps execute the `extract.py`,
    `transform.py`, and `load.py` Python scripts sequentially.'
  prefs: []
  type: TYPE_NORMAL
- en: This workflow provides an automated and efficient way of extracting, transforming,
    and loading data on a daily basis using GitHub Actions.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/python-decorators-for-data-science-6913f717669a?source=post_page-----383f618704b6--------------------------------)
    [## 5 Python Decorators I Use in Almost All My Data Science Projects'
  prefs: []
  type: TYPE_NORMAL
- en: Decorators provide a new and convenient way for everything from caching to sending
    notifications.
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/python-decorators-for-data-science-6913f717669a?source=post_page-----383f618704b6--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: The Python scripts may vary depending on the scenario. Hereâ€™s one of many ways.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The above scripts read from a dummy API and push it to a Postgres database.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/fast-load-data-to-sql-from-python-2d67aea946c0?source=post_page-----383f618704b6--------------------------------)
    [## Python To SQL â€” I Can Now Load Data 20X Faster'
  prefs: []
  type: TYPE_NORMAL
- en: The good, bad, and ugly ways of uploading large batches of data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/fast-load-data-to-sql-from-python-2d67aea946c0?source=post_page-----383f618704b6--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Things to consider when deploying ETL pipelines to GitHub Actions.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**1\. Security:** Keep your secrets secure by using GitHubâ€™s secret store and
    avoid hardcoding secrets into your workflows.'
  prefs: []
  type: TYPE_NORMAL
- en: Have you already noticed that the sample code Iâ€™ve given above has database
    credentials? Itâ€™s not right for a production system.
  prefs: []
  type: TYPE_NORMAL
- en: We have other ways to securely embed secrets, like database credentials.
  prefs: []
  type: TYPE_NORMAL
- en: If you donâ€™t encrypt your secrets in GitHub Actions, they will be visible to
    anyone who has access to the repositoryâ€™s source code. This means that if an attacker
    gains access to the repository or the repositoryâ€™s source code is leaked; the
    attacker will be able to see your secret values.
  prefs: []
  type: TYPE_NORMAL
- en: To protect your secrets, GitHub provides a feature called encrypted secrets,
    which allows you to store your secret values securely in the repository settings.
    Encrypted secrets are only accessible to authorized users and are never exposed
    in plaintext in your GitHub Actions workflows.
  prefs: []
  type: TYPE_NORMAL
- en: Hereâ€™s how it works.
  prefs: []
  type: TYPE_NORMAL
- en: In the repository settings sidebar, you can find the secrets and variables for
    Actions. You can create your variables here.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2a69869f31b645e2075fffa99085e609.png)'
  prefs: []
  type: TYPE_IMG
- en: Screenshot by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Secrets created here are not visible to anyone. They are encrypted and can be
    used in the workflow. Even you canâ€™t read them. But you can update them with a
    new value.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you created the secrets, you can pass in them using the GitHub Actions
    configuration as an environment variable. Hereâ€™s how it works:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Now, we can modify the Python scripts to read credentials from environment variables.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**2\. Dependencies**: Make sure to use the correct version of dependencies
    to avoid any issues.'
  prefs: []
  type: TYPE_NORMAL
- en: Your Python project may already have a requirements.txt file that specifies
    dependencies along with their versions. Or, for more sophisticated projects, you
    may be using modern dependency management tools like Poetry.
  prefs: []
  type: TYPE_NORMAL
- en: You should have a step to set up your environment before you run the other pieces
    of your ETL. You can do this by specifying the following in your YAML configuration.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '3\. **Timezone settings**: GitHub actions use UTC timezone, and as of writing
    this post, you canâ€™t change it.'
  prefs: []
  type: TYPE_NORMAL
- en: Thus you must ensure youâ€™re using the correct timezone. You can use an online
    converter or manually adjust your local time to UTC before configuring.
  prefs: []
  type: TYPE_NORMAL
- en: The biggest caveat of GitHub action scheduling is its uncertainty in the execution
    time. Even though youâ€™ve configured it to run at a specific point in time, if
    the demand is high at that point, your job will be qued. Thus, there will be a
    short delay in the actual job starting time.
  prefs: []
  type: TYPE_NORMAL
- en: If your job depends on exact execution time, using GitHub Actions scheduling
    is probably not a good option. Using a s[elf-hosted runner](https://docs.github.com/en/actions/hosting-your-own-runners/managing-self-hosted-runners/about-self-hosted-runners)
    in GitHub actions may help.
  prefs: []
  type: TYPE_NORMAL
- en: '**4\. Resource Usage:** Avoid overloading the resources provided by GitHub.'
  prefs: []
  type: TYPE_NORMAL
- en: Even though [GitHub actions, even with a free account, has 2000 minutes](https://docs.github.com/en/billing/managing-billing-for-github-actions/about-billing-for-github-actions)
    of free run time, if you use a different OS than Linux, rules change a bit.
  prefs: []
  type: TYPE_NORMAL
- en: If youâ€™re using a Windows runtime, youâ€™ll get only half of it. In a MacOS environment,
    youâ€™ll only get one-tenth of it.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/github-automated-testing-python-fdfe5aec9446?source=post_page-----383f618704b6--------------------------------)
    [## How to Run Python Tests on Every Commit Using GitHub Actions?'
  prefs: []
  type: TYPE_NORMAL
- en: Automate the boring stuff and ensure your code quality with a CI pipeline.
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/github-automated-testing-python-fdfe5aec9446?source=post_page-----383f618704b6--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: GitHub actions is a DevOps tool. But we can use it to run any scheduled tasks.
    In this post, weâ€™ve discussed how to create an ETL that periodically fetches an
    API and pushes the data to a dataframe.
  prefs: []
  type: TYPE_NORMAL
- en: For simple ETLs, this approach is easy to develop and deploy.
  prefs: []
  type: TYPE_NORMAL
- en: But scheduled jobs in GitHub actions donâ€™t have to run at the exact same time.
    Hence for time bounded tasks, this isnâ€™t suitable.
  prefs: []
  type: TYPE_NORMAL
- en: Thanks for reading, friend! Say Hi to me on [**LinkedIn**](https://www.linkedin.com/in/thuwarakesh/),
    [**Twitter**](https://twitter.com/Thuwarakesh), and [**Medium**](https://thuwarakesh.medium.com/).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Not a Medium member yet? Please use this link to [**become a member**](https://thuwarakesh.medium.com/membership)
    because, at no extra cost for you, I earn a small commission for referring you.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
