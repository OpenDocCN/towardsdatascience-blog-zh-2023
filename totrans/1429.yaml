- en: How To List All BigQuery Datasets and Tables with Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: åŽŸæ–‡ï¼š[https://towardsdatascience.com/list-bigquery-ds-tables-python-b92063ad0be3](https://towardsdatascience.com/list-bigquery-ds-tables-python-b92063ad0be3)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Programmatically list all datasets and tables using BigQuery API and Python
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://gmyrianthous.medium.com/?source=post_page-----b92063ad0be3--------------------------------)[![Giorgos
    Myrianthous](../Images/ff4b116e4fb9a095ce45eb064fde5af3.png)](https://gmyrianthous.medium.com/?source=post_page-----b92063ad0be3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----b92063ad0be3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----b92063ad0be3--------------------------------)
    [Giorgos Myrianthous](https://gmyrianthous.medium.com/?source=post_page-----b92063ad0be3--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: Â·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----b92063ad0be3--------------------------------)
    Â·5 min readÂ·May 15, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c7fe779b864a72382bc66ab76d39ab86.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Joanna Kosinska](https://unsplash.com/@joannakosinska?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/PbgY3ptgA4A?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: BigQuery is the managed Data Warehousing service on Google Cloud Platform that
    lets users store, manage and query data. A big part of Data and/or Analytics Engineering
    is the automation of certain tasks, including some interactions with BigQuery.
    Such automations usually require us to make use of the BigQuery API that enables
    developers programmatically interact with the service on GCP.
  prefs: []
  type: TYPE_NORMAL
- en: In todayâ€™s article we will demonstrate how to use BigQuery API and Google Python
    client in order to programmatically fetch all tables and datasets under a single
    GCP project.
  prefs: []
  type: TYPE_NORMAL
- en: Prerequisites
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In order to follow along the steps outlined in this tutorial, make sure to
    install the Google-provided Python client library. To do so, we need to install
    `google-cloud-bigquery` via `pip` :'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Additionally, youâ€™ll have to authenticate the client via Application Default
    Credentials (ADC). To do so, you will first need to make sure that you have already
    [installed](https://cloud.google.com/sdk/gcloud) `[gcloud](https://cloud.google.com/sdk/gcloud)`
    [Command Line Interface (CLI)](https://cloud.google.com/sdk/gcloud). Now since
    we are developing our code on our local machines, all we need to do is authenticate
    via ADC, as outlined below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: After running the command, a new tab in your browser will open, asking you to
    login using your Google account. Note that you will make sure that your personal
    Google Cloud account has sufficient permissions to perform the operations we will
    be running in the next few sections.
  prefs: []
  type: TYPE_NORMAL
- en: Listing all BigQuery datasets
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First, letâ€™s start by creating an instance of a BigQuery client:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: We can now use the client to featch all BigQuery datasets by calling `list_datasets()`
    method that returns an iterator pointing to objects of type `[DaasetListItem](https://cloud.google.com/python/docs/reference/bigquery/latest/google.cloud.bigquery.dataset.DatasetListItem)`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Now we can iterate over `bq_datasets` object and print the BigQuery datasets
    for the project we used when instantiating the client.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Hereâ€™s a complete version of the code, combining all the code snippets we discussed
    earlier.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Lastly, this is a sample output generated by our script:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Listing all BigQuery tables
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Similarly, in order to list all the tables in the BigQuery project of interest,
    we will once again have to iterate through the datasets, and then list all tables
    included in every single dataset.
  prefs: []
  type: TYPE_NORMAL
- en: To do so, weâ€™ll need to call `client.list_tables()` for every dataset in order
    to get an iterator pointing to objects of type `[TableListItem](https://cloud.google.com/python/docs/reference/bigquery/latest/google.cloud.bigquery.table.TableListItem)`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Hereâ€™s the full code consiting of all steps required to print to the standard
    output all table names in a BigQuery project.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Counting number of datasets and tables in BigQuery
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that you know how to use the Python client to interact with BigQuery, you
    can also infer the number of datasets in a single project.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Similarly, we can even count the number of tables per dataset, or per project:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Final Thoughts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this quick tutorial, we outlined the steps required in order to make use
    of the BigQuery API, via the Google provided Python client, including both the
    installation and the authentication steps.
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, we demonstrated how to make use of the BigQuery Python client in
    order to programatically list datasets and tables in a BigQuery GCP project. Lastly,
    we also created a couple of scripts you can use to count the number of datasets
    or tables.
  prefs: []
  type: TYPE_NORMAL
- en: I hope you found this article useful. If by any chance you are having troubles
    running the code shared in the tutorial, let me know in the comments and will
    try my best to help you debug and run the code succesfully.
  prefs: []
  type: TYPE_NORMAL
- en: ðŸ‘‰ [**Become a member**](https://gmyrianthous.medium.com/membership) **and read
    every story on Medium. Your membership fee directly supports me and other writers
    you read. Youâ€™ll also get full access to every story on Medium.**
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://gmyrianthous.medium.com/membership?source=post_page-----b92063ad0be3--------------------------------)
    [## Join Medium with my referral link â€” Giorgos Myrianthous'
  prefs: []
  type: TYPE_NORMAL
- en: As a Medium member, a portion of your membership fee goes to writers you read,
    and you get full access to every storyâ€¦
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: gmyrianthous.medium.com](https://gmyrianthous.medium.com/membership?source=post_page-----b92063ad0be3--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: ðŸ‘‡**Related articles you may also like** ðŸ‘‡
  prefs: []
  type: TYPE_NORMAL
- en: '[](/dbt-55b35c974533?source=post_page-----b92063ad0be3--------------------------------)
    [## What is dbt (data build tool)'
  prefs: []
  type: TYPE_NORMAL
- en: A gentle introduction to dbt that is taking over the data world
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/dbt-55b35c974533?source=post_page-----b92063ad0be3--------------------------------)
    [](/bigquery-anti-patterns-dacb61f8a3f?source=post_page-----b92063ad0be3--------------------------------)
    [## SQL Anti-Patterns for BigQuery
  prefs: []
  type: TYPE_NORMAL
- en: Best practices and things to avoid when running SQL on Google Cloud BigQuery
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/bigquery-anti-patterns-dacb61f8a3f?source=post_page-----b92063ad0be3--------------------------------)
    [](/pyproject-python-9df8cc092f61?source=post_page-----b92063ad0be3--------------------------------)
    [## What is pyproject.toml in Python
  prefs: []
  type: TYPE_NORMAL
- en: Managing Python project dependencies in pyproject.toml files
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/pyproject-python-9df8cc092f61?source=post_page-----b92063ad0be3--------------------------------)
  prefs: []
  type: TYPE_NORMAL
