- en: Quick and Dirty Way to Fit Regression Models Using (Only) SQL
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/linear-regression-in-sql-62eaf4861290](https://towardsdatascience.com/linear-regression-in-sql-62eaf4861290)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: You don’t always need Python or R to fit models — Postgresql has covered the
    basics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://thuwarakesh.medium.com/?source=post_page-----62eaf4861290--------------------------------)[![Thuwarakesh
    Murallie](../Images/44f1a14a899426592bbd8c7f73ce169d.png)](https://thuwarakesh.medium.com/?source=post_page-----62eaf4861290--------------------------------)[](https://towardsdatascience.com/?source=post_page-----62eaf4861290--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----62eaf4861290--------------------------------)
    [Thuwarakesh Murallie](https://thuwarakesh.medium.com/?source=post_page-----62eaf4861290--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----62eaf4861290--------------------------------)
    ·4 min read·Apr 13, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3e40d3bde4f1c8617942b444355401a4.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Michael Dziedzic](https://unsplash.com/@lazycreekimages?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: SQL programmers hardly fit any ML models.
  prefs: []
  type: TYPE_NORMAL
- en: Someone else will do it unless they have either Python or R knowledge. While
    Python and scikit-learn are often my go-to tools for machine learning, it is worth
    noting that SQL can also do some quick and dirty model fitting.
  prefs: []
  type: TYPE_NORMAL
- en: Regression models are a common one almost everyone needs. I remember using it
    in high school physics for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: In such situations, if you have your data in a Postgres table, you don’t have
    to leave your SQL environment to fit such trivial models.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/3-important-sql-optimization-technique-d6da3e9c8442?source=post_page-----62eaf4861290--------------------------------)
    [## 3 SQL Optimization Techniques That Can Instantly Boost Query Speed'
  prefs: []
  type: TYPE_NORMAL
- en: Simple hacks to try before moving to a different data model altogether
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/3-important-sql-optimization-technique-d6da3e9c8442?source=post_page-----62eaf4861290--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Here’s how we do this.
  prefs: []
  type: TYPE_NORMAL
- en: Regression modeling in SQL
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Postgres has **built-in** utilities to work with regression models. You don’t
    have to install or activate any special modules.
  prefs: []
  type: TYPE_NORMAL
- en: We can easily fit linear regression models quickly and make predictions using
    them.
  prefs: []
  type: TYPE_NORMAL
- en: A linear regression model is about finding the equation of a line that generalizes
    the dataset. Thus, we only need to find the line's intercept and slope.
  prefs: []
  type: TYPE_NORMAL
- en: The `regr_slope` and `regr_intercept` functions help us with this task.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s suppose we have a table with the rainfall and temperature columns. And
    we need to predict the missing values in the temperature column using the rainfall
    information.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here''s a SELECT statement that retrieves the rainfall and temperature values
    from the weather table, where missing temperature values are filled with predictions
    using the `regr_slope` and `regr_intercept` functions:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: We use a `CASE` statement to check if the temperature value is missing (i.e.,
    NULL). If it is missing, we use the `regr_slope` and `regr_intercept` Functions
    to predict the temperature value based on the corresponding rainfall value. Otherwise,
    we use the original temperature value.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/5-advanced-sql-techniques-for-real-life-projects-f2db9b6680e2?source=post_page-----62eaf4861290--------------------------------)
    [## These 5 SQL Techniques Cover ~80% of Real-Life Projects'
  prefs: []
  type: TYPE_NORMAL
- en: Speed up your SQL learning curve.
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/5-advanced-sql-techniques-for-real-life-projects-f2db9b6680e2?source=post_page-----62eaf4861290--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Persisting the predictions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If I want to fill in the missing values in the table permanently, I can use
    a slightly modified version of the above code. You can create a materialized view
    for the predictions or insert the forecasts into a different table.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: And here’s the same but creating a materialized view. Materialized views are
    simply queries saved in the database along with their results from the latest
    run.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[](/fast-load-data-to-sql-from-python-2d67aea946c0?source=post_page-----62eaf4861290--------------------------------)
    [## Python To SQL — I Can Now Load Data 20X Faster'
  prefs: []
  type: TYPE_NORMAL
- en: The good, bad, and ugly ways of uploading large batches of data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/fast-load-data-to-sql-from-python-2d67aea946c0?source=post_page-----62eaf4861290--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Limitations of fitting regression models in SQL
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Anyone who worked on regression models before could attest that the above examples
    still need to be completed. Fitting a correct model is more complex than what
    we’ve discussed here.
  prefs: []
  type: TYPE_NORMAL
- en: Especially in real-life situations, we should consider more than one independent
    variable to predict the dependent one. Sometimes we have to use polynomial order
    in fitting the regression models rather than the linear one. We may also need
    to use them both.
  prefs: []
  type: TYPE_NORMAL
- en: Postgres’s regression utilities aren’t capable of handling such complex modeling.
    **We can only build a linea regressor with one independent variable.**
  prefs: []
  type: TYPE_NORMAL
- en: '[](/sql-on-pandas-usign-duckdb-f7cd238a0a5a?source=post_page-----62eaf4861290--------------------------------)
    [## SQL on Pandas — My New Favorite for 10X Speed.'
  prefs: []
  type: TYPE_NORMAL
- en: Bringing the best of both worlds together
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/sql-on-pandas-usign-duckdb-f7cd238a0a5a?source=post_page-----62eaf4861290--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Linear regression models are probably the most used ones for predicting continuous
    data. Data scientists often use it as a starting point for more complex ML modeling.
  prefs: []
  type: TYPE_NORMAL
- en: Although we need the support of programming languages such as Python for more
    sophisticated machine-learning tasks, simple tasks like linear regressions can
    be done inside SQL itself.
  prefs: []
  type: TYPE_NORMAL
- en: I hope this little technique discussed in this post will help you in your daily
    work.
  prefs: []
  type: TYPE_NORMAL
- en: Thanks for reading, friend! If you enjoyed my article, let’s keep in touch on
    [**LinkedIn**](https://www.linkedin.com/in/thuwarakesh/), [**Twitter**](https://twitter.com/Thuwarakesh),
    and [**Medium**](https://thuwarakesh.medium.com/).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Not a Medium member yet? Please use this link to [**become a member**](https://thuwarakesh.medium.com/membership)
    because, at no extra cost for you, I earn a small commission for referring you.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
