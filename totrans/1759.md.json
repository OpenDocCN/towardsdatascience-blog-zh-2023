["```py\n\"\"\"\\\nYour task is to formulate exactly {num_questions} questions from given context and provide the answer to each one.\n\nEnd each question with a '?' character and then in a newline write the answer to that question using only \nthe context provided.\nSeparate each question/answer pair by \"XXX\"\nEach question must start with \"question:\".\nEach answer must start with \"answer:\".\n\nThe question must satisfy the rules given below:\n1.The question should make sense to humans even when read without the given context.\n2.The question should be fully answered from the given context.\n3.The question should be framed from a part of context that contains important information. It can also be from tables,code,etc.\n4.The answer to the question should not contain any links.\n5.The question should be of moderate difficulty.\n6.The question must be reasonable and must be understood and responded by humans.\n7.Do no use phrases like 'provided context',etc in the question\n8.Avoid framing question using word \"and\" that can be decomposed into more than one question.\n9.The question should not contain more than 10 words, make of use of abbreviation wherever possible.\n\ncontext: {context}\n\"\"\"\n```", "```py\n|    | question                                           | ground_truths                                      |\n|---:|:---------------------------------------------------|:---------------------------------------------------|\n|  8 | What is the difference between lists and tuples in | ['Lists are mutable and cannot be used as          |\n|    | Python?                                            | dictionary keys, while tuples are immutable and    |\n|    |                                                    | can be used as dictionary keys if all elements are |\n|    |                                                    | immutable.']                                       |\n|  4 | What is the name of the Python variant optimized   | ['MicroPython and CircuitPython']                  |\n|    | for microcontrollers?                              |                                                    |\n| 13 | What is the name of the programming language that  | ['ABC programming language']                       |\n|    | Python was designed to replace?                    |                                                    |\n| 17 | How often do bugfix releases occur?                | ['Bugfix releases occur about every 3 months.']    |\n|  3 | What is the significance of Python's release       | ['Python 2.0 was released in 2000, while Python    |\n|    | history?                                           | 3.0, a major revision with limited backward        |\n|    |                                                    | compatibility, was released in 2008.']             |\n```", "```py\nfrom langchain.document_loaders import WikipediaLoader\ntopic = \"python programming\"\nwikipedia_loader = WikipediaLoader(\n    query=topic,\n    load_max_docs=1,\n    doc_content_chars_max=100000,\n)\ndocs = wikipedia_loader.load()\ndoc = docs[0]\n```", "```py\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\n\nCHUNK_SIZE = 512\nCHUNK_OVERLAP = 128\nsplitter = RecursiveCharacterTextSplitter(\n    chunk_size=CHUNK_SIZE,\n    chunk_overlap=CHUNK_OVERLAP,\n    separators=[\". \"],\n)\nsplits = splitter.split_documents([doc])\n```", "```py\nimport pinecone\n\npinecone.init(\n    api_key=os.environ.get(\"PINECONE_API_KEY\"),\n    environment=os.environ.get(\"PINECONE_ENV\"),\n)\nindex_name = topic.replace(\" \", \"-\")\npinecone.init(\n    api_key=os.environ.get(\"PINECONE_API_KEY\"),\n    environment=os.environ.get(\"PINECONE_ENV\"),\n)\nif index_name in pinecone.list_indexes():\n    pinecone.delete_index(index_name)\npinecone.create_index(index_name, dimension=768)\n```", "```py\nfrom langchain.vectorstores import Pinecone\n\ndocsearch = Pinecone.from_documents(\n    splits,\n    embedding_model,\n    index_name=index_name,\n)\n```", "```py\nfrom langchain.embeddings import VertexAIEmbeddings\nfrom langchain.llms import VertexAI\nfrom testset_generator import TestsetGenerator\n\ngenerator_llm = VertexAI(\n    location=\"europe-west3\",\n    max_output_tokens=256,\n    max_retries=20,\n)\nembedding_model = VertexAIEmbeddings()\ntestset_generator = TestsetGenerator(\n    generator_llm=generator_llm,\n    documents=splits,\n    embedding_model=embedding_model,\n    index_name=index_name,\n    key=\"text\",\n)\n```", "```py\nsynthetic_dataset = testset_generator.generate(\n    num_contexts=10,\n    num_questions_per_context=2,\n)\n```", "```py\n|    | question                                           | ground_truths                                      |\n|---:|:---------------------------------------------------|:---------------------------------------------------|\n|  8 | What is the difference between lists and tuples in | ['Lists are mutable and cannot be used as          |\n|    | Python?                                            | dictionary keys, while tuples are immutable and    |\n|    |                                                    | can be used as dictionary keys if all elements are |\n|    |                                                    | immutable.']                                       |\n|  4 | What is the name of the Python variant optimized   | ['MicroPython and CircuitPython']                  |\n|    | for microcontrollers?                              |                                                    |\n| 13 | What is the name of the programming language that  | ['ABC programming language']                       |\n|    | Python was designed to replace?                    |                                                    |\n| 17 | How often do bugfix releases occur?                | ['Bugfix releases occur about every 3 months.']    |\n|  3 | What is the significance of Python's release       | ['Python 2.0 was released in 2000, while Python    |\n|    | history?                                           | 3.0, a major revision with limited backward        |\n|    |                                                    | compatibility, was released in 2008.']             |\n```", "```py\nfrom rag import RAG\n\nrag = RAG(\n    index_name,\n    \"text-bison\",\n    embedding_model,\n    \"text\",\n)\n```", "```py\nrag_answers = []\ncontexts = []\n\nfor i, row in synthetic_dataset.iterrows():\n    question = row[\"question\"]\n    prediction = rag.predict(question)\n    rag_answer = prediction[\"answer\"]\n    rag_answers.append(rag_answer)\n    source_documents = prediction[\"source_documents\"]\n    contexts.append([s.page_content for s in source_documents])\nsynthetic_dataset_rag = synthetic_dataset.copy()\nsynthetic_dataset_rag[\"answer\"] = rag_answers\nsynthetic_dataset_rag[\"contexts\"] = contexts\n```", "```py\n|    | question                                                                    | ground_truths               | answer                                                                                                     | contexts                                           |\n|---:|:----------------------------------------------------------------------------|:----------------------------|:-----------------------------------------------------------------------------------------------------------|:---------------------------------------------------|\n|  7 | What are the two types of classes that Python supported before version 3.0? | ['old-style and new-style'] | Before version 3.0, Python had two kinds of classes (both using the same syntax): old-style and new-style. | ['. New instances of classes are constructed by    |\n|    |                                                                             |                             |                                                                                                            | calling the class (for example, SpamClass() or     |\n|    |                                                                             |                             |                                                                                                            | EggsClass()), and the classes are instances of the |\n|    |                                                                             |                             |                                                                                                            | metaclass type (itself an instance of itself),     |\n|    |                                                                             |                             |                                                                                                            | allowing metaprogramming and reflection.\\nBefore   |\n|    |                                                                             |                             |                                                                                                            | version 3.0, Python had two kinds of classes (both |\n|    |                                                                             |                             |                                                                                                            | using the same syntax): old-style and new-style,   |\n|    |                                                                             |                             |                                                                                                            | current Python versions only support the semantics |\n|    |                                                                             |                             |                                                                                                            | new style.\\nPython supports optio     ..........   |\n```", "```py\nfrom datasets import Dataset\nfrom ragas.llms import LangchainLLM\nfrom ragas.metrics import (\n    answer_correctness,\n    answer_relevancy,\n    answer_similarity,\n    context_precision,\n    context_recall,\n    context_relevancy,\n    faithfulness,\n)\n\nsynthetic_ds_rag = Dataset.from_pandas(synthetic_dataset_rag)\n```", "```py\nmetrics = [\n    answer_relevancy,\n    context_precision,\n    faithfulness,\n    answer_correctness,\n    answer_similarity,\n]\n\nfor m in metrics:\n    m.__setattr__(\"llm\", ragas_vertexai_llm)\n    if hasattr(m, \"embeddings\"):\n        m.__setattr__(\"embeddings\", vertexai_embeddings)\nanswer_correctness.faithfulness = faithfulness\nanswer_correctness.answer_similarity = answer_similarity\n```", "```py\nfrom ragas import evaluate\n\nresults_rag = evaluate(\n    synthetic_ds_rag,\n    metrics=[\n        answer_relevancy,\n        context_precision,\n        faithfulness,\n        answer_correctness,\n    ],\n)\n```", "```py\n{\n  'answer_correctness': 0.86875,\n  'answer_relevancy': 0.9709101875947284,\n  'context_precision': 0.8541666666143055,\n  'faithfulness': 0.9375\n}\n```", "```py\n|    | question                                                                          | contexts   | answer                                            | ground_truths                                     |   answer_relevancy |   context_precision |   faithfulness |   answer_correctness |\n|---:|:----------------------------------------------------------------------------------|:-----------|:--------------------------------------------------|:--------------------------------------------------|-------------------:|--------------------:|---------------:|---------------------:|\n|  1 | What is the difference between lists and tuples in Python?                        | ...        | Lists are mutable, while tuples are immutable.    | ['Lists and tuples are both ordered sequences of  |           0.987162 |            1        |              1 |             0.75     |\n|    |                                                                                   |            | This means that the elements of a list can be     | elements in Python. However, lists are mutable,   |                    |                     |                |                      |\n|    |                                                                                   |            | changed, while the elements of a tuple cannot.    | meaning their elements can be changed, while      |                    |                     |                |                      |\n|    |                                                                                   |            | Additionally, tuples can be used as keys in       | tuples are immutable, meaning their elements      |                    |                     |                |                      |\n|    |                                                                                   |            | dictionaries, while lists cannot.                 | cannot be changed.']                              |                    |                     |                |                      |\n|  5 | What is the name of the Python runtime that uses just-in-time compilation?        | ...        | The name of the Python runtime that uses just-in- | ['Pyston']                                        |           1        |            1        |              1 |             1        |\n|    |                                                                                   |            | time compilation is Pyston.                       |                                                   |                    |                     |                |                      |\n| 13 | What is the name of the programming language that Python was designed to replace? | ...        | The programming language that Python was designed | ['ABC programming language']                      |           0.982582 |            0.416667 |              1 |             0.5      |\n|    |                                                                                   |            | to replace is called ABC.                         |                                                   |                    |                     |                |                      |\n|  2 | What is Python's approach to type checking?                                       | ...        | Python uses a combination of dynamic typing and   | [\"Python follows dynamic typing, where type       |           0.890692 |            0.916667 |              1 |             0.666667 |\n|    |                                                                                   |            | duck typing, with optional static type checking   | constraints are not checked at compile time but   |                    |                     |                |                      |\n|    |                                                                                   |            | available through the use of type annotations and | may result in operational failures if an object's |                    |                     |                |                      |\n|    |                                                                                   |            | the mypy type checker.                            | type is unsuitable.\"]                             |                    |                     |                |                      |\n| 12 | Which programming language has been the most popular since 2003?                  | ...        | According to the TIOBE Programming Community      | ['Python']                                        |           0.899585 |            0.5      |              1 |             0.75     |\n|    |                                                                                   |            | Index, Python has consistently ranked in the top  |                                                   |                    |                     |                |                      |\n|    |                                                                                   |            | ten most popular programming languages since 2003 |                                                   |                    |                     |                |                      |\n|    |                                                                                   |            | and as of December 2022, it was the most popular  |                                                   |                    |                     |                |                      |\n|    |                                                                                   |            | language.                                         |                                                   |                    |                     |                |                      |\n```"]