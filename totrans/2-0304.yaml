- en: Analyze performance when aggregating data in Power BI and DAX Queries
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析在 Power BI 和 DAX 查询中聚合数据的性能
- en: 原文：[https://towardsdatascience.com/analyze-performance-when-aggregating-data-in-power-bi-and-dax-queries-fc00027950a3](https://towardsdatascience.com/analyze-performance-when-aggregating-data-in-power-bi-and-dax-queries-fc00027950a3)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/analyze-performance-when-aggregating-data-in-power-bi-and-dax-queries-fc00027950a3](https://towardsdatascience.com/analyze-performance-when-aggregating-data-in-power-bi-and-dax-queries-fc00027950a3)
- en: '*We aggregate data in Power BI all the time. Sometimes we want to query our
    data model manually or need intermediary tables within our Measures. Let’s look
    at how we can do this.*'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*我们在 Power BI 中经常聚合数据。有时我们需要手动查询数据模型，或者在度量中需要中间表。让我们看看如何做到这一点。*'
- en: '[](https://medium.com/@salvatorecagliari?source=post_page-----fc00027950a3--------------------------------)[![Salvatore
    Cagliari](../Images/a24b0cefab6e707cfee06cde9e857559.png)](https://medium.com/@salvatorecagliari?source=post_page-----fc00027950a3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----fc00027950a3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----fc00027950a3--------------------------------)
    [Salvatore Cagliari](https://medium.com/@salvatorecagliari?source=post_page-----fc00027950a3--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@salvatorecagliari?source=post_page-----fc00027950a3--------------------------------)[![Salvatore
    Cagliari](../Images/a24b0cefab6e707cfee06cde9e857559.png)](https://medium.com/@salvatorecagliari?source=post_page-----fc00027950a3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----fc00027950a3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----fc00027950a3--------------------------------)
    [Salvatore Cagliari](https://medium.com/@salvatorecagliari?source=post_page-----fc00027950a3--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----fc00027950a3--------------------------------)
    ·8 min read·May 1, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----fc00027950a3--------------------------------)
    ·8 分钟阅读·2023年5月1日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/e798626b974acc167cbccbdc87b18161.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e798626b974acc167cbccbdc87b18161.png)'
- en: Photo by [Isaac Smith](https://unsplash.com/@isaacmsmith?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[Isaac Smith](https://unsplash.com/@isaacmsmith?utm_source=medium&utm_medium=referral)
    拍摄的照片，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)'
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: 'Have you ever asked yourself:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你是否曾经问过自己：
- en: What happens behind the scenes of a Power BI Visual?
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Power BI 视觉效果背后发生了什么？
- en: Or
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 或者
- en: How can I write a query to get the result shown in a Power BI Visual?
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我如何编写查询以获得在 Power BI 视觉效果中显示的结果？
- en: OK, you can catch the Query with Performance Analyzer and copy the Query in
    a Text Editor or, even better, in DAX Studio.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，你可以用性能分析器捕捉查询，并将查询复制到文本编辑器中，或者更好地使用 DAX Studio。
- en: But do you understand what happens in the Query?
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 但你是否理解查询中发生了什么？
- en: 'When you look at the function documentation for DAX, either in the [Microsoft
    DAX function Reference](https://learn.microsoft.com/en-us/dax/dax-function-reference)
    or on [DAX.Guide](https://dax.guide/), you will find at least five functions to
    generate tables in a query:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 当你查看 DAX 的函数文档时，无论是在 [Microsoft DAX 函数参考](https://learn.microsoft.com/en-us/dax/dax-function-reference)
    还是在 [DAX.Guide](https://dax.guide/)，你会发现至少有五个函数用于在查询中生成表：
- en: '[SELECTCOLUMNS()](https://dax.guide/selectcolumns/) and [ADDCOLUMNS()](https://dax.guide/addcolumns/)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SELECTCOLUMNS()](https://dax.guide/selectcolumns/) 和 [ADDCOLUMNS()](https://dax.guide/addcolumns/)'
- en: '[SUMMARIZE()](https://dax.guide/summarize/)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SUMMARIZE()](https://dax.guide/summarize/)'
- en: '[SUMMARIZECOLUMNS()](https://dax.guide/summarizecolumns/)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SUMMARIZECOLUMNS()](https://dax.guide/summarizecolumns/)'
- en: '[CALCULATETABLE()](https://dax.guide/calculatetable/)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[CALCULATETABLE()](https://dax.guide/calculatetable/)'
- en: In this article, I will set the scene with a Base Query. Then I will use the
    different functions to rebuild the Query from scratch and look at the differences
    between these functions.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我将通过基础查询来设定场景。然后，我将使用不同的函数从头重建查询，并观察这些函数之间的差异。
- en: I will look at the functional differences and the differences regarding efficiency
    and performance.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我将研究功能差异以及在效率和性能方面的差异。
- en: Base Query
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基础查询
- en: Let’s start with the base query.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从基础查询开始。
- en: 'Look at the following Matrix in Power BI:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 查看 Power BI 中的以下矩阵：
- en: '![](../Images/fc4fa958091472c0605a0e9de17b9b89.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fc4fa958091472c0605a0e9de17b9b89.png)'
- en: Figure 1 — Starting Visual (Figure by the Author)
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图1 — 起始视觉效果（图由作者提供）
- en: 'I extracted the query with Performance Analyzer and, after removing all the
    Subtotal Stuff needed by Power BI to calculate the totals at the Country and Continent
    Level, the remaining is the following:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我用 Performance Analyzer 提取了查询，并在移除 Power BI 在计算国家和大陆级别的总数时需要的所有小计内容后，剩下的结果如下：
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The Key function here is [SUMMARIZECOLUMNS()](https://dax.guide/summarizecolumns/).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的关键函数是 [SUMMARIZECOLUMNS()](https://dax.guide/summarizecolumns/)。
- en: This function gets the distinct values from the two columns [ContinentName]
    and [RegionCountryName] and executes the Measure [Sum Online Sales] for each row
    while applying the filter defined in the Variable __DS0FilterTable.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数从两个列 [ContinentName] 和 [RegionCountryName] 中获取唯一值，并对每一行执行 Measure [Sum Online
    Sales]，同时应用在 Variable __DS0FilterTable 中定义的过滤器。
- en: In all the following examples, I will (try to) keep the definition of the __DS0FilterTable
    as shown above.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的所有示例中，我将（尝试）保持 __DS0FilterTable 的定义，如上所示。
- en: SELECTCOLUMNS() and ADDCOLUMNS()
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SELECTCOLUMNS() 和 ADDCOLUMNS()
- en: With [SELECTCOLUMNS()](https://dax.guide/selectcolumns/), I can add calculated
    columns to an input table, for example, with a Measure.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 [SELECTCOLUMNS()](https://dax.guide/selectcolumns/)，我可以将计算列添加到输入表中，例如，通过
    Measure。
- en: The input table can be an existing table or the result of a table function.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 输入表可以是一个现有的表或表函数的结果。
- en: 'Let’s try this form:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试这个形式：
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This is the result of this Query:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这是这个查询的结果：
- en: '![](../Images/45d7ad7b9cc68201bd2cb30581e068cf.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/45d7ad7b9cc68201bd2cb30581e068cf.png)'
- en: Figure 2 — Part of the result for ADDCOLUMNS() (Figure by the Author)
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2 — ADDCOLUMNS() 的部分结果（作者提供的图）
- en: As you can see, I get all rows from the Geography tables, even though I selected
    only two columns for the query, even those without results.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，即使我仅为查询选择了两列，我仍然从地理表中获得了所有行，包括那些没有结果的行。
- en: I want something else.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我想要其他东西。
- en: Another problem is that with SELECTCOLUMNS(), I cannot introduce the Filter
    above.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个问题是，使用 SELECTCOLUMNS() 时，我不能引入上面的过滤器。
- en: 'Anyway, when looking at the Server Timings, this query doesn’t look that bad:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 不管怎样，查看服务器时间，这个查询看起来还不错：
- en: '![](../Images/01c802c59bcd9f27337296565ccbfb6b.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/01c802c59bcd9f27337296565ccbfb6b.png)'
- en: Figure 3 — Server Timings for ADDCOLUMNS() (Figure by the Author)
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3 — ADDCOLUMNS() 的服务器时间（作者提供的图）
- en: Most of the work is done in the Storage Engine, and the parallelism is excellent
    at almost 7.5.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 大部分工作在存储引擎中完成，并且并行度接近 7.5，非常出色。
- en: When copying this result to Excel, we can remove the Empty Rows without problems.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 当将结果复制到 Excel 时，我们可以毫无问题地删除空行。
- en: '[SELECTCOLUMNS()](https://dax.guide/selectcolumns/) is very similar to [ADDCOLUMNS()](https://dax.guide/addcolumns/).'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[SELECTCOLUMNS()](https://dax.guide/selectcolumns/) 与 [ADDCOLUMNS()](https://dax.guide/addcolumns/)
    非常相似。'
- en: According to DAX.guide, the difference is that SELECTCOLUMNS() starts with an
    empty table, then adds the given columns, while ADDCOLUMNS() starts with all input
    table columns.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 根据 DAX.guide，区别在于 SELECTCOLUMNS() 从一个空表开始，然后添加给定的列，而 ADDCOLUMNS() 从所有输入表列开始。
- en: 'When we try this query:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们尝试这个查询时：
- en: '[PRE2]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We get a table with all columns of the Geography table, and for each row, the
    result of the Measure.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到一个包含所有地理表列的表，并且对于每一行，计算 Measure 的结果。
- en: I need specific functions to create a table because I can define only one input
    table.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我需要特定的函数来创建一个表，因为我只能定义一个输入表。
- en: I will come back to this issue later in this article.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我将在本文后面回到这个问题。
- en: SUMMARIZE()
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SUMMARIZE()
- en: The function [SUMMARIZE()](https://dax.guide/summarize/) allows me to get a
    table summarizing the given columns and adding computed columns, for example,
    with a Measure.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 函数 [SUMMARIZE()](https://dax.guide/summarize/) 允许我获取一个总结给定列并添加计算列（例如，通过 Measure）的表。
- en: 'Based on the example above, the query will look like this:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 基于上面的示例，查询将如下所示：
- en: '[PRE3]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Again, we cannot add a Filter to this query.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，我们不能在这个查询中添加过滤器。
- en: 'So, we will get the result for all years:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我们将获取所有年份的结果：
- en: '![](../Images/30680cb2c702f399ef8a8089b2491286.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/30680cb2c702f399ef8a8089b2491286.png)'
- en: Figure 4 — Result with SUMMARIZE() (Figure by the Author)
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4 — 使用 SUMMARIZE() 的结果（作者提供的图）
- en: But, again, I will get a list of all countries, including those without value.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 但再一次，我将得到所有国家的列表，包括那些没有值的。
- en: 'The Server Timings look good as well:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器时间看起来也不错：
- en: '![](../Images/d9f04632751c6a305cc89e77d6808b56.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d9f04632751c6a305cc89e77d6808b56.png)'
- en: Figure 5 — Server Timings for SUMMARIZE() (Figure by the Author)
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5 — SUMMARIZE() 的服务器时间（作者提供的图）
- en: But there are some issues with the SUMMARIZE() functions.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 但在使用 SUMMARIZE() 函数时存在一些问题。
- en: You can find the articles describing these issues in the References section
    below.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在下面的参考部分找到描述这些问题的文章。
- en: Now, I will show you how to complete the job with the correct form.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我将向你展示如何使用正确的形式完成任务。
- en: SUMMARIZECOLUMNS()
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SUMMARIZECOLUMNS()
- en: The [SUMMARIZECOLUMNS()](https://dax.guide/summarizecolumns/) function combines
    the strengths of ADDCOLUMN() and SUMMARIZE() into one powerful function.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '[SUMMARIZECOLUMNS()](https://dax.guide/summarizecolumns/) 函数将 ADDCOLUMN() 和
    SUMMARIZE() 的优点结合成一个强大的函数。'
- en: I can pass multiple columns to the function used as the summarization columns
    and add calculated columns. And I can pass a filter to the function.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以将多个列传递给用作汇总列的函数并添加计算列。我也可以向该函数传递筛选器。
- en: 'Look at this example:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 看看这个例子：
- en: '[PRE4]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: When you look at the query at the beginning of this article, you will find precisely
    this query.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 当你查看本文开头的查询时，你会发现正是这个查询。
- en: 'The result is the following:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![](../Images/86ead1887ad3080e8c42b73da1b6ec5c.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/86ead1887ad3080e8c42b73da1b6ec5c.png)'
- en: Figure 6 — Result with SUMMARIZECOLUMNS() (Figure by the Author)
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6 — 使用 SUMMARIZECOLUMNS() 的结果（作者提供的图）
- en: This is the result we expected from our query.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们期望的查询结果。
- en: 'The Server Timings are impressive:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器时间令人印象深刻：
- en: '![](../Images/b207c653a0b03e24997fb3caee0b606d.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b207c653a0b03e24997fb3caee0b606d.png)'
- en: Figure 7- Server Timings for SUMMARIZECOLUMNS() (Figure by the Author)
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7 — SUMMARIZECOLUMNS() 的服务器时间（作者提供的图）
- en: Done, isn’t it?
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 完成了，不是吗？
- en: '![](../Images/9fd90500575cb44248c04d36b775b31b.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9fd90500575cb44248c04d36b775b31b.png)'
- en: Photo by [Zac Durant](https://unsplash.com/@zacdurant?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Zac Durant](https://unsplash.com/@zacdurant?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: No, wait a moment.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 不，稍等一下。
- en: What if I try adding a Filter to the above query to restrict my data to one
    year?
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我尝试在上述查询中添加筛选器以将数据限制为一年会怎么样？
- en: It turns out that I cannot do that, and I can pass only a table as a filter
    to SUMMARIZECOLUMNS().
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是，我无法这样做，我只能将一个表作为筛选器传递给 SUMMARIZECOLUMNS()。
- en: CALCULATETABLE()
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CALCULATETABLE()
- en: '[CALCULATETABLE()](https://dax.guide/calculatetable/) is different from the
    other three functions.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '[CALCULATETABLE()](https://dax.guide/calculatetable/) 与其他三个函数不同。'
- en: I can use CALCULATETABLE() in the same way as I use [CALCULATE()](https://dax.guide/calculate/).
    But I use a table as the first parameter instead of an aggregation function or
    another Measure. Then I can add filters as additional parameters.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以像使用 [CALCULATE()](https://dax.guide/calculate/) 一样使用 CALCULATETABLE()。但我将表作为第一个参数，而不是聚合函数或其他度量。然后，我可以将筛选器作为附加参数添加。
- en: 'So, let’s try to restrict the result from the last query to one year:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们尝试将上一个查询的结果限制为一年：
- en: '[PRE5]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: As you can see, I used the SUMMARIZECOLUMNS() function as the Input to CALCULATETABLE()
    and added a column filter to the query.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，我将 SUMMARIZECOLUMNS() 函数作为 CALCULATETABLE() 的输入，并在查询中添加了列筛选器。
- en: 'The result is the following:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![](../Images/cf255442e3dae69dcfd335b648861771.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cf255442e3dae69dcfd335b648861771.png)'
- en: Figure 8 — Result with CALCULATETABLE() (Figure by the Author)
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8 — 使用 CALCULATETABLE() 的结果（作者提供的图）
- en: 'And the Server Timings are highly efficient with only one SE Query:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器时间非常高效，仅需一个 SE 查询：
- en: '![](../Images/6c694e0fb8f138937a284dcbe439354c.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6c694e0fb8f138937a284dcbe439354c.png)'
- en: Figure 9 — Server Timings for CALCULATETABLE() (Figure by the Author)
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9 — CALCULATETABLE() 的服务器时间（作者提供的图）
- en: CALCULATETABLE() can combine the entire DAX Query into one SE Query, making
    it very efficient.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: CALCULATETABLE() 可以将整个 DAX 查询合并为一个 SE 查询，使其非常高效。
- en: But don’t expect that CALCULATETABLE() always has the effect of improving efficiency.
    Later, we will see an example where this function hasn’t the same effect.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 但不要指望 CALCULATETABLE() 总是能提高效率。稍后，我们将看到一个示例，其中这个函数没有达到相同的效果。
- en: Combining the functions
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 组合函数
- en: Another way to generate the needed result is to combine the functions ADDCOLUMNS()
    and SUMMARIZE() as described in the Article published by SQLBI (See the Reference
    section below).
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 生成所需结果的另一种方法是将 ADDCOLUMNS() 和 SUMMARIZE() 函数结合使用，如 SQLBI 发布的文章中所述（参见下面的参考部分）。
- en: '[PRE6]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Please take notice of how I add the Measure to the Result. I use CALCULATE to
    include the Filter table using [KEEPFILTERS()](https://dax.guide/keepfilters/).
    I must do it that way, as the result will be wrong without it.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意我如何将度量添加到结果中。我使用 CALCULATE 来包含使用 [KEEPFILTERS()](https://dax.guide/keepfilters/)
    的筛选表。必须这样做，否则结果将是错误的。
- en: Again, please read the SQLBI Article below regarding ADDCOLUMNS() and SUMMARIZE()
    for the exact explanation of why this is necessary.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，请阅读下面的 SQLBI 文章，以准确解释为什么这样做是必要的。
- en: 'The values in the result are correct, but again, we see all Countries instead
    of only the Countries with a result:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 结果中的值是正确的，但我们再次看到所有国家，而不仅仅是有结果的国家：
- en: '![](../Images/4f8454ce0a050e72a4d41146ba0443c7.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4f8454ce0a050e72a4d41146ba0443c7.png)'
- en: Figure 10 — Result from combining ADDCOLUMNS with SUMMARIZE (Figure by the Author)
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10 — 结合 ADDCOLUMNS 和 SUMMARIZE 的结果（作者提供的图）
- en: 'And when we look at the Server Timings, we see that DAX needs three SE queries
    to complete this query:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们查看服务器时间时，我们会发现 DAX 需要三个 SE 查询来完成这个查询：
- en: '![](../Images/a8ebaf37ece0118f709d6430dc53d09f.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a8ebaf37ece0118f709d6430dc53d09f.png)'
- en: Figure 11 — Server Timings from combining ADDCOLUMNS() with SUMMARIZE() (Figure
    by the Author)
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11 — 结合 ADDCOLUMNS() 和 SUMMARIZE() 的服务器时间（作者提供的图）
- en: 'Another way to do this is to use CALULATETABLE() to introduce the filter:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种方法是使用 CALCULATETABLE() 引入过滤器：
- en: '[PRE7]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The result is still the same, and the Server Timings have not been improved.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 结果仍然是相同的，服务器时间没有得到改善。
- en: This is proof that CALCULATETABLE() only sometimes improves efficiency. But
    it can make the query more readable instead of using KEEPFILTERS(), for which
    I still struggle to understand all effects.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这证明了 CALCULATETABLE() 只是有时能提高效率。但它可以使查询更具可读性，而不是使用 KEEPFILTERS()，对于 KEEPFILTERS()
    的所有效果我仍然难以理解。
- en: Conclusion
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: SELECTCOLUMNS()/ADDCOLUMNS() is a good starting point when adding calculated
    columns to a table.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: SELECTCOLUMNS()/ADDCOLUMNS() 是向表中添加计算列的良好起点。
- en: But I need SUMMARIZE()/SUMMARIZECOLUMNS() to summarize only selected columns
    and be able to add calculated columns to the result.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 但是我需要 SUMMARIZE()/SUMMARIZECOLUMNS() 仅对选定的列进行汇总，并能够向结果中添加计算列。
- en: But SUMMARIZE() has reduced capabilities when we want to add a filter to a table
    expression.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 但是当我们想要向表表达式添加过滤器时，SUMMARIZE() 的能力有所减少。
- en: In this case, SUMMARIZECOLUMNS() is the correct function to use.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，SUMMARIZECOLUMNS() 是正确的函数。
- en: Even though I need CALCULATETABLE() to add certain filter types to the query
    (e. g. a filter on a single column).
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 即使我需要 CALCULATETABLE() 来向查询添加某些类型的过滤器（例如，对单列的过滤器）。
- en: During my work, I always need to write queries to compare the results to the
    data from the source system to validate the results.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的工作中，我总是需要编写查询来将结果与源系统中的数据进行比较，以验证结果。
- en: And it’s much easier to document a validation via a query and the corresponding
    result instead of a screenshot of all the filters set for a specific result in
    Power BI and export the data from the visual.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 通过查询和相应结果来记录验证要比截取 Power BI 中设置特定结果的所有过滤器的屏幕截图并从可视化中导出数据要容易得多。
- en: A query is helpful when you want to automate the generation of a report which
    should be executed automatically and sent to a user.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 当你希望自动生成一个报告并自动执行并发送给用户时，查询是非常有用的。
- en: Plenty of use cases exist when writing a query is a good choice instead of doing
    it in Power BI.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，编写查询比在 Power BI 中直接操作要更为合适。
- en: I hope I have inspired you to explore the possibilities of DAX queries.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望我能激发你探索 DAX 查询的可能性。
- en: '![](../Images/74c898ccb5ccd13d9fe26c953dfad619.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/74c898ccb5ccd13d9fe26c953dfad619.png)'
- en: Photo by [Casey Horner](https://unsplash.com/@mischievous_penguins?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '[Casey Horner](https://unsplash.com/@mischievous_penguins?utm_source=medium&utm_medium=referral)
    在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral) 提供的照片'
- en: References
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: 'In case you want to learn more about measuring performance in DAX Studio, read
    the following article:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多关于在 DAX Studio 中测量性能的内容，请阅读以下文章：
- en: '[](/how-to-get-performance-data-from-power-bi-with-dax-studio-b7f11b9dd9f9?source=post_page-----fc00027950a3--------------------------------)
    [## How to get performance data from Power BI with DAX Studio'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 如何使用 DAX Studio 从 Power BI 获取性能数据](https://example.org/how-to-get-performance-data-from-power-bi-with-dax-studio-b7f11b9dd9f9?source=post_page-----fc00027950a3--------------------------------)'
- en: Sometimes we have a slow Report, and we need to figure out why. We will see
    how to collect performance data and the…
  id: totrans-134
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 有时我们会遇到运行缓慢的报告，需要找出原因。我们将学习如何收集性能数据以及……
- en: towardsdatascience.com](/how-to-get-performance-data-from-power-bi-with-dax-studio-b7f11b9dd9f9?source=post_page-----fc00027950a3--------------------------------)
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](https://example.org/how-to-get-performance-data-from-power-bi-with-dax-studio-b7f11b9dd9f9?source=post_page-----fc00027950a3--------------------------------)'
- en: On [Articles — SQLBI](https://www.sqlbi.com/articles/), you can find more in-depth
    articles on these functions and why using one function over another.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [Articles — SQLBI](https://www.sqlbi.com/articles/) 上，你可以找到关于这些函数的更多深入文章以及为什么要选择一个函数而不是另一个。
- en: 'For example, the issues with the SUMMARIZE() functions are documented here:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，SUMMARIZE() 函数的问题在这里有记录：
- en: '[All the secrets of SUMMARIZE (SQLBI.com)](https://www.sqlbi.com/articles/all-the-secrets-of-summarize/)'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SUMMARIZE 的所有秘密 (SQLBI.com)](https://www.sqlbi.com/articles/all-the-secrets-of-summarize/)'
- en: '[Best Practices Using SUMMARIZE and ADDCOLUMNS (SQLBI.com)](https://www.sqlbi.com/articles/best-practices-using-summarize-and-addcolumns/)'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 SUMMARIZE 和 ADDCOLUMNS 的最佳实践 (SQLBI.com)](https://www.sqlbi.com/articles/best-practices-using-summarize-and-addcolumns/)'
- en: I use the Contoso sample dataset, like in my previous articles. You can download
    the ContosoRetailDW Dataset for free from Microsoft [here](https://www.microsoft.com/en-us/download/details.aspx?id=18279).
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用 Contoso 示例数据集，就像我之前的文章中一样。你可以从 Microsoft [这里](https://www.microsoft.com/en-us/download/details.aspx?id=18279)
    免费下载 ContosoRetailDW 数据集。
- en: The Contoso Data can be freely used under the MIT License, as described [here](https://github.com/microsoft/Power-BI-Embedded-Contoso-Sales-Demo).
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: Contoso 数据可以在 MIT 许可证下自由使用，如 [此处](https://github.com/microsoft/Power-BI-Embedded-Contoso-Sales-Demo)
    所述。
- en: I enlarged the dataset to make the DAX engine work harder.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 我扩大了数据集，以使 DAX 引擎更加高效地工作。
- en: The Online Sales table contains 71 million rows (instead of 12.6 million rows),
    and the Retail Sales table contains 18.5 million rows (instead of 3.4 million
    rows).
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在线销售表包含 7100 万行（而不是 1260 万行），零售销售表包含 1850 万行（而不是 340 万行）。
- en: '[](https://medium.com/@salvatorecagliari/membership?source=post_page-----fc00027950a3--------------------------------)
    [## Join Medium with my referral link - Salvatore Cagliari'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@salvatorecagliari/membership?source=post_page-----fc00027950a3--------------------------------)
    [## 使用我的推荐链接加入 Medium - Salvatore Cagliari'
- en: Read every story from Salvatore Cagliari (and thousands of other writers on
    Medium). Your membership fee directly…
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阅读 Salvatore Cagliari 的每一个故事（以及 Medium 上成千上万其他作者的故事）。你的会员费用直接...
- en: medium.com](https://medium.com/@salvatorecagliari/membership?source=post_page-----fc00027950a3--------------------------------)
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: medium.com](https://medium.com/@salvatorecagliari/membership?source=post_page-----fc00027950a3--------------------------------)
