- en: How You Can (and Why You Should) Access Amazon S3 Resources with Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何通过 Python 访问 Amazon S3 资源（及其必要性）
- en: 原文：[https://towardsdatascience.com/how-you-can-and-why-you-should-access-amazon-s3-resources-with-python-86462c6a8f97](https://towardsdatascience.com/how-you-can-and-why-you-should-access-amazon-s3-resources-with-python-86462c6a8f97)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-you-can-and-why-you-should-access-amazon-s3-resources-with-python-86462c6a8f97](https://towardsdatascience.com/how-you-can-and-why-you-should-access-amazon-s3-resources-with-python-86462c6a8f97)
- en: Use automation to move data to and from the cloud
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用自动化将数据移动到云端和从云端移出
- en: '[](https://medium.com/@aashishnair?source=post_page-----86462c6a8f97--------------------------------)[![Aashish
    Nair](../Images/23f4b3839e464419332b690a4098d824.png)](https://medium.com/@aashishnair?source=post_page-----86462c6a8f97--------------------------------)[](https://towardsdatascience.com/?source=post_page-----86462c6a8f97--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----86462c6a8f97--------------------------------)
    [Aashish Nair](https://medium.com/@aashishnair?source=post_page-----86462c6a8f97--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@aashishnair?source=post_page-----86462c6a8f97--------------------------------)[![Aashish
    Nair](../Images/23f4b3839e464419332b690a4098d824.png)](https://medium.com/@aashishnair?source=post_page-----86462c6a8f97--------------------------------)[](https://towardsdatascience.com/?source=post_page-----86462c6a8f97--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----86462c6a8f97--------------------------------)
    [Aashish Nair](https://medium.com/@aashishnair?source=post_page-----86462c6a8f97--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----86462c6a8f97--------------------------------)
    ·7 min read·Jan 24, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----86462c6a8f97--------------------------------)
    ·阅读时间 7 分钟·2023年1月24日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/206b4eb369a3a357dd723f699da2f412.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/206b4eb369a3a357dd723f699da2f412.png)'
- en: Photo by [Lia Trevarthen](https://unsplash.com/@melodi2?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[Lia Trevarthen](https://unsplash.com/@melodi2?utm_source=medium&utm_medium=referral)
    拍摄的照片，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)'
- en: Amazon Simple Storage Service (S3) provides users with cheap, secure, and easy-to-manage
    storage infrastructure. It is viable to move files in and out of S3 buckets with
    the AWS console itself, but AWS offers the option to facilitate these operations
    with code as well.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊简单存储服务（S3）为用户提供了廉价、安全且易于管理的存储基础设施。虽然可以通过 AWS 控制台直接移动文件进出 S3 桶，但 AWS 也提供了通过代码简化这些操作的选项。
- en: For Python, the AWS software development kit (SDK) offers boto3, which allows
    users to create, configure, and utilize S3 buckets and objects with code. Here,
    we delve into the basic boto3 functions for S3 resources and consider how they
    can be used to automize operations.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Python，AWS 软件开发工具包（SDK）提供了 boto3，允许用户通过代码创建、配置和利用 S3 桶及对象。在这里，我们将深入探讨基本的
    boto3 功能，并考虑如何利用它们来自动化操作。
- en: Why Boto3?
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么选择 Boto3？
- en: You might be wondering if there is any point in learning to use yet another
    tool when you can already access the S3 service through the AWS console. Granted,
    with AWS’s simple and user-friendly user interface (UI), it is easy to move files
    to and from S3 buckets.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会想，既然可以通过 AWS 控制台访问 S3 服务，学习使用另一个工具是否还有意义。的确，借助 AWS 简单且用户友好的用户界面（UI），将文件移动到
    S3 桶以及从 S3 桶中移出很容易。
- en: However, using the typical click-and-drag approach isn’t viable when operations
    need to scale up. It’s one thing to handle 1-10 files at a time, but would you
    fare with 100s or 1000s of files? Such an undertaking would naturally be time-consuming
    if done manually.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当操作需要扩展时，典型的点击和拖放方法就不可行了。处理 1-10 个文件是一回事，但处理 100 或 1000 个文件呢？如果手动操作，这样的任务自然会耗时。
- en: Furthermore, manual tasks also leave users prone to making mistakes. When moving
    large quantities of data around manually, can you guarantee that you won’t mistakenly
    omit or include the wrong files?
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，手动任务还使用户容易出错。当手动移动大量数据时，你能保证不会错误地遗漏或包括错误的文件吗？
- en: Those that value efficiency or consistency will no doubt see the merit in using
    Python scripts to automate the use of S3 resources.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 那些重视效率或一致性的人无疑会看到使用 Python 脚本自动化 S3 资源的优点。
- en: Prerequisites
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 前提条件
- en: Let’s start with the prerequisites for using boto3.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从使用 boto3 的前提条件开始。
- en: '**1\. Installation**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**1\. 安装**'
- en: To use boto3, you’ll have to install the AWS SDK if you haven’t already with
    the following command.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 boto3，你需要使用以下命令安装 AWS SDK（如果尚未安装）。
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**2\. IAM user**'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**2\. IAM用户**'
- en: You will also need an IAM user account with permission to use S3 resources.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 您还需要一个具有使用S3资源权限的IAM用户账户。
- en: To get a user identity, log in to AWS with the root user account. Head to the
    Identity and Access Management (IAM) section and add a new user. Assign this user
    identity a policy that will grant access to S3 resources. The simplest option
    is to select the “AmazonS3FullAccess” permission policy, but you can find or create
    policies that are more tailored to your needs.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取用户身份，请使用root用户账户登录AWS。前往身份与访问管理（IAM）部分，添加一个新用户。为该用户身份分配一个将授予S3资源访问权限的策略。最简单的选项是选择“AmazonS3FullAccess”权限策略，但您可以找到或创建更符合您需求的策略。
- en: '![](../Images/7d15f42d09f3e2e9133f7af27e76d55e.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7d15f42d09f3e2e9133f7af27e76d55e.png)'
- en: AmasonS3FullAccess Policy (Created By Author)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: AmazonS3FullAccess策略（作者创建）
- en: After picking the policy, complete the remaining prompts and create the user
    identity. You should be able to see your newly created identity in the console.
    In this example, we use a user identity called “s3_demo”.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 选择策略后，完成其余提示并创建用户身份。您应该能够在控制台中看到您新创建的身份。在此示例中，我们使用名为“s3_demo”的用户身份。
- en: '![](../Images/b6e864a43d0120b55d948d9ad02a1079.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b6e864a43d0120b55d948d9ad02a1079.png)'
- en: Next, click on the user name (not the check box) and go to the security credentials
    tab. In the access key section, select “create access key” and answer all prompts.
    You will then receive your access key and secret access key.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，点击用户名（而不是复选框），然后转到安全凭证选项卡。在访问密钥部分，选择“创建访问密钥”并回答所有提示。然后，您将收到您的访问密钥和秘密访问密钥。
- en: '![](../Images/e810b4460031006880daf76ad3ee6e65.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e810b4460031006880daf76ad3ee6e65.png)'
- en: These keys are required for accessing the S3 resources with boto3, so they will
    naturally be incorporated into the Python script.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这些密钥是使用boto3访问S3资源所必需的，因此它们将自然地被纳入Python脚本中。
- en: Basic commands
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基本命令
- en: Boto3 comprises functions that can provision and configure various AWS resources,
    but the focus of this article will be on handling S3 buckets and objects. The
    key benefit of boto3 is that it executes tasks like uploading and downloading
    files with a simple one-liner.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Boto3包含可以配置和管理各种AWS资源的函数，但本文的重点将放在处理S3桶和对象上。boto3的关键好处是，它可以用简单的一行代码来执行如上传和下载文件等任务。
- en: Creating a client
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建客户端
- en: To access S3 resources with boto3 (or any AWS resource), a low-level service
    client needs to be created first.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用boto3（或任何AWS资源）访问S3资源，首先需要创建一个低级服务客户端。
- en: Creating a client requires inputting the service name, region name, access key,
    and secret access key.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 创建客户端需要输入服务名称、区域名称、访问密钥和秘密访问密钥。
- en: Creating a bucket
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建桶
- en: Let’s start by creating a bucket, which we will call “a-random-bucket-2023”.
    This can be achieved with the `create_bucket` function.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始创建一个名为“a-random-bucket-2023”的桶。这可以通过`create_bucket`函数实现。
- en: If you refresh the S3 section on the AWS console, you should see the newly created
    bucket.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您刷新AWS控制台上的S3部分，您应该能看到新创建的桶。
- en: '![](../Images/4e540bf3df69b26e50fdd3d2b04c5a69.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4e540bf3df69b26e50fdd3d2b04c5a69.png)'
- en: Creating a Bucket (Created By Author)
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 创建桶（作者创建）
- en: Listing buckets
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 列出桶
- en: To list the available buckets, users can use the `list_buckets` function. This
    returns a dictionary with many key-value pairs. To see just the names of the buckets,
    retrieve the value of the ‘Buckets’ key in the dictionary.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 要列出可用的桶，用户可以使用`list_buckets`函数。这会返回一个包含许多键值对的字典。要查看仅桶的名称，请检索字典中‘Buckets’键的值。
- en: '![](../Images/126bcdf1b4db7ff7737dd3f80b7d1623.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/126bcdf1b4db7ff7737dd3f80b7d1623.png)'
- en: Code Output (Created By Author)
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 代码输出（作者创建）
- en: Upload a file to a bucket
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将文件上传到桶
- en: Files can be uploaded with the `upload_file` function. In this case, let’s upload
    “mock_data.xlsx” to the bucket.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`upload_file`函数上传文件。在这种情况下，我们将“mock_data.xlsx”上传到桶中。
- en: It’s worth distinguishing the difference between the `Filename` and `Key` parameters.
    `Filename` refers to the name of the file that is being transferred, while `Key`
    refers to the name that is assigned to the object stored in the bucket.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 值得区分`Filename`和`Key`参数之间的差异。`Filename`指的是正在传输的文件的名称，而`Key`指的是分配给存储在桶中的对象的名称。
- en: Since “First Mock Data.xlsx” was assigned to the `Key` parameter, that will
    be the name of the object when it is uploaded to the bucket.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 由于“First Mock Data.xlsx”被分配给了`Key`参数，所以这将是上传到桶中时对象的名称。
- en: '![](../Images/49b5fd4d6469d067446f2b440030d7a4.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/49b5fd4d6469d067446f2b440030d7a4.png)'
- en: Adding an Object (Created By Author)
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 添加对象（由作者创建）
- en: Uploading a Pandas data frame to a bucket
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将 Pandas 数据框上传到存储桶
- en: Since we’re working on Python, it’s worth knowing how to upload a Pandas data
    frame directly to the bucket. This can be achieved with the io module. In the
    following snippet, we upload the data frame “df” to the bucket.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们正在使用 Python，因此值得了解如何直接将 Pandas 数据框上传到存储桶。这可以通过 io 模块实现。在以下代码片段中，我们将数据框“df”上传到存储桶。
- en: '![](../Images/5418fe0dc2eb05393e62a53aa96016b5.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5418fe0dc2eb05393e62a53aa96016b5.png)'
- en: Uploading a Pandas Data Frame (Created By Author)
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 上传 Pandas 数据框（由作者创建）
- en: List objects
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 列出对象
- en: The objects in a given bucket can be listed with the `list_objects` function.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用 `list_objects` 函数列出给定存储桶中的对象。
- en: The output of the function itself is a large dictionary with a bunch of metadata,
    but the object names can be found by accessing the “Contents” key.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 函数本身的输出是一个包含大量元数据的大字典，但可以通过访问“Contents”键找到对象名称。
- en: '![](../Images/98160b3dcea31cf20ed03b1abbb42d66.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/98160b3dcea31cf20ed03b1abbb42d66.png)'
- en: Code Output (Created By Author)
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 代码输出（由作者创建）
- en: Download files
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载文件
- en: Objects can be downloaded from a bucket with the `download_file` function.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用 `download_file` 函数从存储桶中下载对象。
- en: Deleting objects
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 删除对象
- en: Objects can be deleted with the `deleted_object` function.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用 `deleted_object` 函数删除对象。
- en: '![](../Images/9442266dab87360ca06c05172d0d0922.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9442266dab87360ca06c05172d0d0922.png)'
- en: Deleting an Object (Created By Author)
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 删除对象（由作者创建）
- en: Deleting buckets
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 删除存储桶
- en: Finally, users can delete buckets with the `delete_bucket` function.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，用户可以使用 `delete_bucket` 函数删除存储桶。
- en: '![](../Images/b3bd6671a5b85e13ccb3eb24213deceb.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b3bd6671a5b85e13ccb3eb24213deceb.png)'
- en: Deleting a Bucket (Created By Author)
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 删除存储桶（由作者创建）
- en: Case Study
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 案例研究
- en: We’ve explored some of the basic boto3 functions for using S3 resources. However,
    performing a case study is the best way to demonstrate why boto3 is such a powerful
    tool.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经探索了一些用于使用 S3 资源的基本 boto3 函数。然而，进行案例研究是展示 boto3 为什么是如此强大工具的最佳方式。
- en: '**Problem Statement 1:** We are interested in the books that are being published
    on different dates. Obtain data on published books using the [NYT Books API](https://developer.nytimes.com/docs/books-product/1/overview)
    and upload it to an S3 bucket.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题陈述 1：** 我们对不同日期出版的书籍感兴趣。使用 [NYT Books API](https://developer.nytimes.com/docs/books-product/1/overview)
    获取出版书籍的数据并将其上传到 S3 存储桶。'
- en: Once again, we start by creating a low-level service client.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们再次开始创建一个低级服务客户端。
- en: Next, we create a bucket that will contain all of these files.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们创建一个存储所有这些文件的存储桶。
- en: '![](../Images/50b284e8ca13c3c91068df58efad9fcc.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/50b284e8ca13c3c91068df58efad9fcc.png)'
- en: Creating a Bucket (Created By Author)
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 创建存储桶（由作者创建）
- en: 'Next, we need to pull the data with the NYT Books API and upload them to the
    bucket. We can perform a data pull for a given date with the following `get_data`
    function:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要使用 NYT Books API 拉取数据并将其上传到存储桶。我们可以使用以下 `get_data` 函数进行指定日期的数据拉取：
- en: 'Here is a preview of what the output of the `get_data` function looks like:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 `get_data` 函数输出的预览：
- en: '![](../Images/556947ff5f22c2473a6798db4f04c458.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/556947ff5f22c2473a6798db4f04c458.png)'
- en: Code Output (Created By Author)
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 代码输出（由作者创建）
- en: There are many ways to utilize this function for data collection. One option
    is to use to run this function and upload the output to the S3 bucket every day
    (or use a job scheduler). Another option is to use loops to collect data for books
    published in multiple days.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多方法可以利用这个函数进行数据收集。一个选项是每天运行这个函数并将输出上传到 S3 存储桶（或使用作业调度程序）。另一个选项是使用循环收集多个日期出版的书籍数据。
- en: 'If we are interested in books published in the last 7 days, we can parse through
    each day with a loop. For each day, we:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们对过去 7 天内出版的书籍感兴趣，可以使用循环逐天解析。对于每一天，我们：
- en: make a call with the API
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 API 进行调用
- en: store the response into a data frame
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将响应存储到数据框中
- en: upload the data frame to the bucket
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将数据框上传到存储桶
- en: 'These steps are executed with the following snippet:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这些步骤可以通过以下代码片段执行：
- en: '![](../Images/a56a0a59a3d6ce5d3225c51cfa247cc2.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a56a0a59a3d6ce5d3225c51cfa247cc2.png)'
- en: Uploading Files to the Bucket(Created By Author)
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 上传文件到存储桶（由作者创建）
- en: With just several lines of code, we are able to make multiple API calls and
    upload the responses to the bucket in one well swoop!
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 只需几行代码，我们就能进行多次 API 调用，并将响应一次性上传到存储桶！
- en: At some point, there might be a need to extract some insight from the data uploaded
    to a bucket. It’s natural for data analysts to receive ad hoc requests pertaining
    to the data they collect.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些时候，可能需要从上传到桶中的数据中提取一些见解。数据分析师通常会收到有关他们收集的数据的临时请求。
- en: '**Problem statement 2:** Find the book title, author, and publisher of the
    highest-ranking books for all dates and store the results locally .'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题陈述2：** 查找所有日期排名最高的书籍的书名、作者和出版社，并将结果存储到本地。'
- en: With Python, we can store multiple S3 objects into Pandas data frames, process
    the data frames, and load the output into a flat file.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Python，我们可以将多个S3对象存储到Pandas数据框中，处理这些数据框，并将输出加载到平面文件中。
- en: There are two key advantages of using boto3 that are showcased in this case
    study. The first advantage of this method is that it scales well; the difference
    in time and effort needed to upload/download 1 file and 1000 files is negligible.
    The second advantage is that it allows users to seamlessly tie in other processes
    (e.g., data collection, filtering) when moving data to or from S3 buckets.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 使用boto3有两个主要优点，这在这个案例研究中得到了展示。第一个优点是它具有良好的可扩展性；上传/下载1个文件和1000个文件所需的时间和精力差异可以忽略不计。第二个优点是，它允许用户在将数据移动到或从S3桶时，无缝地结合其他过程（例如数据收集、过滤）。
- en: Conclusion
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: '![](../Images/dd4343dd7b4376960806899faac2061b.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dd4343dd7b4376960806899faac2061b.png)'
- en: Photo by [Prateek Katyal](https://unsplash.com/fr/@prateekkatyal?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[Prateek Katyal](https://unsplash.com/fr/@prateekkatyal?utm_source=medium&utm_medium=referral)拍摄，来源于[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)。
- en: Hopefully, this brief boto3 primer has not only introduced you to the basic
    Python commands for managing S3 resources but also shown how they can be used
    to automate processes.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 希望这份简要的boto3入门指南不仅向你介绍了管理S3资源的基本Python命令，还展示了它们如何用于自动化过程。
- en: With the AWS SDK for Python, users will be able to move data to and from the
    cloud with greater efficiency and consistency. Even if you are currently content
    with provisioning and utilizing resources with AWS’s UI, you’ll no doubt run into
    cases where scalability is a priority. Knowing the basics of boto3 will ensure
    that you are well prepared for such situations.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 使用AWS SDK for Python，用户将能够更高效、一致地在云端移动数据。即使你现在对使用AWS的UI进行资源配置和利用感到满意，你也无疑会遇到可扩展性优先的情况。了解boto3的基础知识将确保你为这些情况做好充分准备。
- en: Thank you for reading!
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读！
