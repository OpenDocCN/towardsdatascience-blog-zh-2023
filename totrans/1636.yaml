- en: Parsing HL7 with Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/parsing-hl7-with-python-961e19c4d962](https://towardsdatascience.com/parsing-hl7-with-python-961e19c4d962)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A Guide for Extracting Health Level 7 Data with python-hl7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@terrah27?source=post_page-----961e19c4d962--------------------------------)[![Tara
    (Boyle) Hunter](../Images/8ef82ac6fd14f95810dacc9981871872.png)](https://medium.com/@terrah27?source=post_page-----961e19c4d962--------------------------------)[](https://towardsdatascience.com/?source=post_page-----961e19c4d962--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----961e19c4d962--------------------------------)
    [Tara (Boyle) Hunter](https://medium.com/@terrah27?source=post_page-----961e19c4d962--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----961e19c4d962--------------------------------)
    ·4 min read·Mar 6, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0d69d501b5083c1b37d8376348218dd6.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Christina Victoria Craft](https://unsplash.com/@victoriabcphotographer?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/s/photos/medical?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: Parsing HL7 messages is an essential task for many data professionals in the
    healthcare space. HL7 is commonly used in hospitals and other healthcare facilities
    to exchange patient data between different systems, applications, and providers.
  prefs: []
  type: TYPE_NORMAL
- en: According to [Wikipedia](https://en.wikipedia.org/wiki/Health_Level_7), HL7
    or Health Level 7 “refers to a set of international standards for exchanging electronic
    health information between software applications used by various healthcare providers”.
    These standards allow healthcare providers to share clinical information in a
    consistent and easy to interpret manner.
  prefs: []
  type: TYPE_NORMAL
- en: Here we will learn how to parse HL7 messages with Python.
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before we begin parsing, we need to have a basic understanding of the HL7 message
    structure. While there are different versions of HL7, here we will focus on the
    most commonly used version, the 2.x series.
  prefs: []
  type: TYPE_NORMAL
- en: HL7 messages are often created and sent in response to a patient event such
    as an admit, discharge, or transfer.
  prefs: []
  type: TYPE_NORMAL
- en: An HL7 message consists of several sections. Each line is called a segment.
    Segments are identified by a three character label and delimited by a carriage
    return (\r). Segments contain fields that are separated by a pipe (|). Fields
    contain components that are separated by a caret (^). Finally, components can
    contain subcomponents that are separated by the ampersand (&).
  prefs: []
  type: TYPE_NORMAL
- en: Common HL7 Segments
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'MSH — The Message Header: The first segment of the message, containing information
    about the sending and receiving systems, the message type, and the message control
    ID.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'PID — Patient Identification: This segment contains patient identification
    information including patient ID, name, and date of birth.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'DG1 — Diagnosis: This segment contains information pertaining to patient diagnoses.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Z-Segments: These segments are not part of the original HL7 standard. They
    are used to create custom messages and add to the flexibility of HL7\. It is up
    to the sending and receiving applications to agree on the format and content of
    custom segments.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More information about these and other segment types can be found [here](https://hl7-definition.caristix.com/v2/HL7v2.5.1/Segments).
  prefs: []
  type: TYPE_NORMAL
- en: Sample Message
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here we will work with this fictional admit message:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: In this message, the MSH segment contains message header information including
    sending application, sending facility, receiving application, and receiving facility.
  prefs: []
  type: TYPE_NORMAL
- en: The EVN segment contains event information, indicating that this is an ADT A01
    message and was sent at 11:19:24 on January 31, 2023.
  prefs: []
  type: TYPE_NORMAL
- en: The PID segment contains patient identification information including patient
    identifier, name, date of birth, and address.
  prefs: []
  type: TYPE_NORMAL
- en: The PV1 segment contains patient visit information such as patient location
    and attending physician.
  prefs: []
  type: TYPE_NORMAL
- en: The DG1 segment follows with a fictional diagnosis code of “123456789” and a
    description of “Diagnosis”. The diagnosis is marked as “Confirmed” in the diagnosis
    status field.
  prefs: []
  type: TYPE_NORMAL
- en: Finally we see the custom ZCP segment with a segment ID of “ZCP” and two data
    fields containing “1” and “Custom Segment Data”.
  prefs: []
  type: TYPE_NORMAL
- en: Parsing HL7 Messages
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that we have a basic understanding of HL7 messages lets begin parsing!
  prefs: []
  type: TYPE_NORMAL
- en: Here we will use the `[python-hl7](https://python-hl7.readthedocs.io/en/latest/)`
    [library](https://python-hl7.readthedocs.io/en/latest/). It provides straightforward
    methods for parsing HL7 messages with Python.
  prefs: []
  type: TYPE_NORMAL
- en: '`python-hl7` can be installed easily with `pip`.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'After installing we can import the library and parse our sample message:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/e844389e207dcb2dec03958110b36720.png)'
  prefs: []
  type: TYPE_IMG
- en: Parsed HL7 Message — Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'Here we can see our parsed message. We can check the length of the message
    to make sure it was parsed as expected:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Here we see the length of our parsed message is 1\. This doesn’t seem correct
    as we can count 6 different segments in the message above.
  prefs: []
  type: TYPE_NORMAL
- en: 'This is due to our line breaks. `python-hl7` is expecting the line break to
    be a carriage return (\r) and not a new line (\n). We can solve this by replacing
    the new line characters with carriage returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: This looks much better! We now have a length of 6 which aligns with our visual
    inspection of the message.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let’s extract the patient’s name:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: We successfully extracted the patient’s full name and first name only!
  prefs: []
  type: TYPE_NORMAL
- en: 'We can also access this information by specifying the segment:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: A benefit of this method is that it can make our code easier to understand.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Here we learned about HL7 messages and how to parse them with Python’s `python-hl7`
    library.
  prefs: []
  type: TYPE_NORMAL
- en: This library provides a convenient way to read HL7 messages using Python, and
    it supports most HL7 message types and segments.
  prefs: []
  type: TYPE_NORMAL
- en: With the right tools, developers can parse HL7 messages with Python effectively
    and efficiently! With HL7 being a widely-used standard in healthcare, knowledge
    of parsing these messages is a valuable skill for data professionals working in
    the healthcare industry.
  prefs: []
  type: TYPE_NORMAL
