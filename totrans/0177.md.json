["```py\nimport numpy as np\nimport pandas as pd\n\nfrom sklearn.linear_model import LinearRegression\n\nimport seaborn as sns \nimport matplotlib.pyplot as plt\n```", "```py\n# for reproducibility\nnp.random.seed(42)\n\n# generate the DataFrame with dates\nrange_of_dates = pd.date_range(\n    start=\"2010-01-01\",\n    end=\"2019-12-30\"\n)\ndf = pd.DataFrame(index=range_of_dates)\n\n# create a sequence of day numbers\ndf[\"linear_trend\"] = range(len(df))\ndf[\"trend\"] = 0.004 * df[\"linear_trend\"].values[::-1]\ndf.loc[\"2017-01-01\":, \"trend\"] = 4\n\n# generate the components of the target\nsignal_1 = 10 + 4 * np.sin(df[\"linear_trend\"] / 365 * 2 * np.pi)\nnoise = np.random.normal(0, 0.85, len(df))\n\n# combine them to get the target series\ndf[\"target\"] = signal_1 + noise + df[\"trend\"]\n\n# plot\ndf[\"target\"].plot(title=\"Generated time series\");\n```", "```py\nX = df[[\"linear_trend\"]]\ny = df[[\"target\"]]\n\nlm = LinearRegression()\nlm.fit(X, y)\n\ndf[\"model_1\"] = lm.predict(X)\n\ndf[[\"target\", \"model_1\"]].plot(title=\"Linear trend\");\n```", "```py\ndf[\"after_2017_breakpoint\"] = np.where(df.index >= pd.Timestamp('2017-01-01'), 1, 0)\n\nX = df[[\"linear_trend\", \"after_2017_breakpoint\"]]\ny = df[[\"target\"]]\n\nlm = LinearRegression()\nlm.fit(X, y)\n\ndf[\"model_2\"] = lm.predict(X)\n\ndf[[\"target\", \"model_2\"]].plot(title=\"Linear trend + breakpoint\");\n```", "```py\ndf[\"interaction_term\"] = df[\"after_2017_breakpoint\"] * df[\"linear_trend\"]\n\nX = df[[\"linear_trend\", \"after_2017_breakpoint\", \"interaction_term\"]]\ny = df[[\"target\"]]\n\nlm = LinearRegression()\nlm.fit(X, y)\n\ndf[\"model_3\"] = lm.predict(X)\n\ndf[[\"target\", \"model_3\"]].plot(title=\"Linear trend + breakpoint + interaction term\"); \n```"]