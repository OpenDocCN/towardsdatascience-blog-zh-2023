- en: How to Debug Python Scripts with the Logging Module
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用日志模块调试 Python 脚本
- en: 原文：[https://towardsdatascience.com/how-to-troubleshoot-python-scripts-with-the-logging-module-aaf630c35fe3](https://towardsdatascience.com/how-to-troubleshoot-python-scripts-with-the-logging-module-aaf630c35fe3)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-troubleshoot-python-scripts-with-the-logging-module-aaf630c35fe3](https://towardsdatascience.com/how-to-troubleshoot-python-scripts-with-the-logging-module-aaf630c35fe3)
- en: Print statements can only take you so far…
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 打印语句只能带你走到一定程度…
- en: '[](https://medium.com/@aashishnair?source=post_page-----aaf630c35fe3--------------------------------)[![Aashish
    Nair](../Images/23f4b3839e464419332b690a4098d824.png)](https://medium.com/@aashishnair?source=post_page-----aaf630c35fe3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----aaf630c35fe3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----aaf630c35fe3--------------------------------)
    [Aashish Nair](https://medium.com/@aashishnair?source=post_page-----aaf630c35fe3--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@aashishnair?source=post_page-----aaf630c35fe3--------------------------------)[![Aashish
    Nair](../Images/23f4b3839e464419332b690a4098d824.png)](https://medium.com/@aashishnair?source=post_page-----aaf630c35fe3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----aaf630c35fe3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----aaf630c35fe3--------------------------------)
    [Aashish Nair](https://medium.com/@aashishnair?source=post_page-----aaf630c35fe3--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----aaf630c35fe3--------------------------------)
    ·7 min read·Aug 26, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----aaf630c35fe3--------------------------------)
    ·阅读时间 7 分钟·2023年8月26日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/88282bab14f50541e0bba68c4d0cf0bc.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/88282bab14f50541e0bba68c4d0cf0bc.png)'
- en: 'Photo by Tima Miroshnichenko: [https://www.pexels.com/photo/a-person-writing-on-a-notebook-5336909/](https://www.pexels.com/photo/a-person-writing-on-a-notebook-5336909/)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '图片来源：Tima Miroshnichenko: [https://www.pexels.com/photo/a-person-writing-on-a-notebook-5336909/](https://www.pexels.com/photo/a-person-writing-on-a-notebook-5336909/)'
- en: Table of Contents
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 目录
- en: ∘ [Introduction](#cb4a)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [介绍](#cb4a)
- en: ∘ [The Logging Module](#3486)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [日志模块](#3486)
- en: ∘ [The Levels of Logging](#21ff)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [日志级别](#21ff)
- en: ∘ [Configuring Levels](#5e80)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [配置级别](#5e80)
- en: ∘ [Configuring Levels for Debugging](#0153)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [调试级别配置](#0153)
- en: ∘ [Creating Log Files](#a8c5)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [创建日志文件](#a8c5)
- en: ∘ [Formatting Log Messages](#9e39)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [格式化日志消息](#9e39)
- en: ∘ [Key Takeaways](#968a)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [关键要点](#968a)
- en: Introduction
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍
- en: 'Consider the following scenario: You’ve written a piece of code that either
    returns an error or yields an unexpected value.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下情况：你编写了一段代码，该代码要么返回错误，要么产生意外的值。
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: To find the erroneous line of code, you write a print statement…
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 为了找出错误的代码行，你会写一个打印语句…
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Then add another print statement…
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 然后再添加一个打印语句…
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Then follow it up with another print statement.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 然后再跟进另一个打印语句。
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Once you’ve identified and fixed the issue, these print statements are useless.
    So, you delete or comment out each of them one by one:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你识别并修复了问题，这些打印语句就变得无用。所以，你一个个地删除或注释掉它们：
- en: '[PRE4]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: If your troubleshooting experience resembles the scenario above, you’re already
    familiar with the frustration of using print statements to deal with erroneous
    lines of code.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的故障排除经验类似于上述场景，你一定对使用打印语句处理错误代码行的挫败感感同身受。
- en: 'Fortunately, there is a tool in Python that offers a much more effective strategy
    for debugging code: the logging module.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，Python 中有一个工具提供了更有效的调试策略：日志模块。
- en: Here, we delve into the basic functionalities of the logging module and explore
    the features that make it such a powerful troubleshooting tool.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们深入探讨日志模块的基本功能，并探索使其成为强大故障排除工具的特点。
- en: The Logging Module
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 日志模块
- en: The logging module is designed for programmers looking to track certain events
    in their programs effectively.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 日志模块是为那些希望有效跟踪程序中某些事件的程序员设计的。
- en: Fortunately, there aren’t any prerequisites to learning to use the tool, especially
    if you’re already familiar with Python’s print statements.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，学习使用该工具没有任何前提条件，特别是如果你已经熟悉 Python 的打印语句。
- en: In terms of syntax, the logging module’s commands are very similar to print
    statements, allowing users to generate messages with simple one-liners.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 从语法上看，日志模块的命令与打印语句非常相似，允许用户使用简单的一行代码生成消息。
- en: '[PRE5]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/cfb5aa4dd8e09a88fb20087738a2030d.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cfb5aa4dd8e09a88fb20087738a2030d.png)'
- en: Code Output (Created by Author)
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 代码输出（由作者创建）
- en: That being said, logging includes features that are not provided by regular
    print statements, which we will now cover.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，日志记录包括了常规print语句所不提供的功能，我们现在将介绍这些功能。
- en: The Levels of Logging
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 日志等级
- en: In the logging module, all messages are *not* equal. Events in the logging module
    are broken down into different levels of importance.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在日志模块中，并非所有消息都是*相等*的。日志模块中的事件被分解为不同的重要性等级。
- en: The logging module’s [documentation](https://docs.python.org/3/library/logging.html)
    lists the 5 levels of logging and explains when they should be used.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 日志模块的[文档](https://docs.python.org/3/library/logging.html)列出了5个日志等级，并解释了它们的使用场景。
- en: '![](../Images/0465e1d48a4b88bd3e482395b22fbe69.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0465e1d48a4b88bd3e482395b22fbe69.png)'
- en: Levels of Logging (Created by Author)
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 日志等级（作者创建）
- en: In other words, when users use logging to write messages, they also get to set
    the importance of said message. An INFO message is best for monitoring the status
    of an event, a WARNING message is best for issuing a warning, and an ERROR message
    is best for reporting an error.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，当用户使用日志记录消息时，他们还可以设置该消息的重要性。INFO消息最适合监控事件状态，WARNING消息最适合发出警告，而ERROR消息最适合报告错误。
- en: Thus, users can assign importance to their messages by using levels depending
    on their purpose. For example, when loading a dataset, one can write messages
    with INFO and ERROR levels.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，用户可以根据消息的目的使用等级来分配其消息的重要性。例如，在加载数据集时，可以编写INFO和ERROR等级的消息。
- en: '[PRE6]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: With different levels of importance assigned to messages, users can *define*
    the threshold for the importance of messages that they want to or do not want
    to see.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 通过对消息分配不同的重要性等级，用户可以*定义*他们希望看到或不希望看到的消息的重要性阈值。
- en: By default, the logging module only considers logs that are at the level WARNING
    or above.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，日志模块只考虑WARNING及以上等级的日志。
- en: '![](../Images/08354bb0fac575276cfb8b2163a96dd7.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/08354bb0fac575276cfb8b2163a96dd7.png)'
- en: Levels of Logging (Created by Author)
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 日志等级（作者创建）
- en: This means that logging a message without additional configuration does not
    return messages at the DEBUG and INFO levels.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着，未进行额外配置的消息记录不会返回DEBUG和INFO等级的消息。
- en: '![](../Images/24c3353aee9ff74e3c7fa500650c135e.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/24c3353aee9ff74e3c7fa500650c135e.png)'
- en: Code Output (Created by Author)
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 代码输出（作者创建）
- en: As shown in the output, only the messages at levels WARNING, ERROR, and CRITICAL
    are actually generated.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如输出所示，实际上只有WARNING、ERROR和CRITICAL等级的消息被生成。
- en: Configuring Levels
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置等级
- en: Unlike print statements, logging allows users to configure the importance levels
    of messages that should be generaed.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 与print语句不同，日志允许用户配置应该生成的消息的重要性等级。
- en: For instance, suppose that we need to record messages at levels INFO and above.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设我们需要记录INFO及以上等级的消息。
- en: '![](../Images/ee69937bacb51685334abe11c844f4e0.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ee69937bacb51685334abe11c844f4e0.png)'
- en: Levels of Logging (Created by Author)
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 日志等级（作者创建）
- en: 'We can instruct the program to generate INFO level messages by using the `basicConfig`
    method and defining the `level` parameter:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过使用`basicConfig`方法并定义`level`参数来指示程序生成INFO等级的消息：
- en: Now, all messages at levels INFO and above will be shown.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，所有INFO及以上等级的消息都会被显示。
- en: '![](../Images/b2bc07db37eb40e5967110a343b9922e.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b2bc07db37eb40e5967110a343b9922e.png)'
- en: Code Output (Created by Author)
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 代码输出（作者创建）
- en: Since the program has been configured to accept logs at INFO and above, all
    logs that are not at the DEBUG level are recorded.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 由于程序已配置为接受INFO及以上等级的日志，因此记录了所有非DEBUG等级的日志。
- en: '**Configuring Levels for Debugging**'
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**调试等级配置**'
- en: Through the `basicConfig` method, users can shift the threshold for logging
    levels to include the desired levels while omitting the undesired levels.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 通过`basicConfig`方法，用户可以调整日志等级的阈值，以包含所需等级而忽略不需要的等级。
- en: 'For instance, let’s suppose that we are performing transformations on a variable
    and wish to find the value of the variable after each transformation. Here, we
    perform mathematical operations on variable x:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设我们正在对一个变量进行转换，并希望在每次转换后找到该变量的值。在这里，我们对变量x执行数学运算：
- en: '[PRE7]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The threshold logging level has been set to DEBUG, which means that all of
    the logging messages will be created. Running the code will return the following:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 阈值日志等级已设置为DEBUG，这意味着所有日志消息都会被创建。运行代码将返回如下结果：
- en: '![](../Images/ead65573e741b39b7b40ad6c5d81b5ba.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ead65573e741b39b7b40ad6c5d81b5ba.png)'
- en: Code Output (Created by Author)
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 代码输出（作者创建）
- en: These messages can be helpful, but once the debugging is complete, they provide
    no value. So, how do we stop these messages from being generated in future iterations?
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这些消息可能很有用，但一旦调试完成，它们便没有任何价值。那么，我们如何阻止这些消息在未来的迭代中被生成呢？
- en: If we were working with print statements, the solution would be to delete or
    comment out each and every unwanted print statement. Thankfully, with logging,
    the unwanted debug messages can be removed by simply modifying the logging level
    threshold using the `basicConfig` method.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们使用打印语句，解决方案是删除或注释掉每一个不需要的打印语句。幸运的是，使用日志记录时，可以通过简单地修改`basicConfig`方法中的日志级别阈值来移除不需要的调试消息。
- en: We can now change the logging level to INFO, thereby omitting all log messages
    with the DEBUG level importance.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以将日志级别更改为INFO，从而省略所有DEBUG级别重要性的日志消息。
- en: '[PRE8]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](../Images/8423850df155d0c9d7b699a22598cc87.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8423850df155d0c9d7b699a22598cc87.png)'
- en: Code Output (Created by Author)
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 代码输出（由作者创建）
- en: This time, even though the logging commands are still in place, they are omitted
    as the DEBUG level is lower than the assigned INFO level threshold.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这一次，即使日志命令仍在使用，它们也会被省略，因为DEBUG级别低于分配的INFO级别阈值。
- en: 'Similarly, when we wish to start the debugging process, we can use logging
    to do the opposite: lower the threshold importance level for log messages so that
    the program generates messages with lower importance levels.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，当我们希望开始调试过程时，我们可以使用日志记录来做相反的事情：降低日志消息的阈值重要性，以便程序生成较低重要性的消息。
- en: Creating Log Files
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建日志文件
- en: When using print statements, messages are shown on a command line or console
    but are not stored in any location.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 使用打印语句时，消息会显示在命令行或控制台上，但不会存储在任何位置。
- en: Using the logging module’s `basicConfig` method, users can create a file dedicated
    to recording all messages created with the module.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 使用日志模块的`basicConfig`方法，用户可以创建一个专门记录所有由模块创建的消息的文件。
- en: For instance, the following snippet uses the `basicConfig` method to save all
    messages in a newly created file named “demo.log”.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以下代码片段使用`basicConfig`方法将所有消息保存到一个名为“demo.log”的新创建的文件中。
- en: '[PRE9]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Now, no messages will show up in the console when the script is run. Instead,
    the messages will be stored directly in the “demo.log” file.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当运行脚本时，控制台不会显示任何消息。相反，消息将直接存储在“demo.log”文件中。
- en: '![](../Images/c99c75915c4ac7911131a7d9bd887a14.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c99c75915c4ac7911131a7d9bd887a14.png)'
- en: demo.log (Created by Author)
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: demo.log（由作者创建）
- en: Furthermore, these recorded messages are not overwritten; they remain in the
    “demo.log” file when additional logs are added. If we run the same script again,
    the new log messages will be added in new lines.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，这些记录的消息不会被覆盖；当添加更多日志时，它们会保留在“demo.log”文件中。如果我们再次运行相同的脚本，新日志消息将会被添加到新的一行中。
- en: '![](../Images/047e5706bfa4ac5f610eb7561c402344.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/047e5706bfa4ac5f610eb7561c402344.png)'
- en: demo.log (Created by Author)
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: demo.log（由作者创建）
- en: Formatting Log Messages
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 格式化日志消息
- en: The messages in logs are not always that informative and readable.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 日志中的消息并不总是那么具有信息性和可读性。
- en: To generate messages more fitting for the given use case, users can configure
    the format of their messages with the `basicConfig` method.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 为了生成更适合给定用例的消息，用户可以使用`basicConfig`方法配置消息的格式。
- en: In the snippet below, we configure the messages to be composed of the timestamp,
    the logging level, and the message.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码片段中，我们配置消息的格式为时间戳、日志级别和消息内容。
- en: '[PRE10]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![](../Images/bd4a19bd578a493db50bcec4894254b5.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bd4a19bd578a493db50bcec4894254b5.png)'
- en: Code Output (Created by Author)
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 代码输出（由作者创建）
- en: Establishing the format of your logs can make the generated messages both informative
    and readable. Of course, the ideal format depends on the programmers’ personal
    preference.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 确立日志的格式可以使生成的消息既具有信息性又具有可读性。当然，理想的格式取决于程序员的个人偏好。
- en: Key Takeaways
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关键要点
- en: '![](../Images/9916e1f7b6d3302c5e191eea149e4b56.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9916e1f7b6d3302c5e191eea149e4b56.png)'
- en: Photo by [Prateek Katyal](https://unsplash.com/@prateekkatyal?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由[Prateek Katyal](https://unsplash.com/@prateekkatyal?utm_source=medium&utm_medium=referral)提供，来源于[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Overall, while print statements tend to be treated as the go-to tool for examining
    or troubleshooting code, the logging module is a more fitting tool for such purposes.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，尽管打印语句通常被视为检查或调试代码的首选工具，但日志模块是更合适的工具。
- en: Logging offers a system that categorizes messages into different levels of importance.
    Moreover, they boast features that enable users to easily configure what messages
    to generate, how they should be formatted, and where they should be stored.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 日志提供了一个系统，将消息分类为不同的重要级别。此外，它们还具备一些功能，使用户能够轻松配置生成哪些消息、如何格式化这些消息以及它们应该存储在哪里。
- en: The logging module has the capacity to make the debugging experience quicker
    and stress-free, so consider adopting it if you are tired of using plain, generic
    print statements.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 日志模块能够让调试过程更快捷、无压力，因此，如果你厌倦了使用普通的、通用的打印语句，考虑采用它。
- en: Thank you for reading!
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读！
