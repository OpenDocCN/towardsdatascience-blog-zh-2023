["```py\nforecaster = ForecastingCascade(\n    RandomForestRegressor(30, random_state=42, n_jobs=-1),\n    lags=lags,\n    use_exog=False,\n)\n\nmodel_y1 = clone(forecaster).fit(None, df_train['y1'])\nmodel_y2 = clone(forecaster).fit(None, df_train['y2'])\n\ny1_pred = np.concatenate([\n    model_y1.predict(\n        [[0.]],\n        last_y=df['y1'].iloc[:i]\n    ) for i in range(len(df_train), len(df_train) + len(df_test))\n])\ny2_pred = np.concatenate([\n    model_y2.predict(\n        [[0.]],\n        last_y=df['y2'].iloc[:i]\n    ) for i in range(len(df_train), len(df_train) + len(df_test))\n])\n```", "```py\nforecaster = ForecastingCascade(\n    make_pipeline(\n        FunctionTransformer(\n            lambda x: x[:,1:]  # remove current values of exog series\n        ),\n        RandomForestRegressor(30, random_state=42, n_jobs=-1)\n    ),\n    lags=lags,\n    use_exog=True,\n    exog_lags=lags,\n)\n\nmodel_y1y2 = clone(forecaster).fit(df_train[['y2']], df_train['y1'])\nmodel_y2y1 = clone(forecaster).fit(df_train[['y1']], df_train['y2'])\n\ny1y2_pred = np.concatenate([\n    model_y1y2.predict(\n        pd.DataFrame({'y2': [0.]}),\n        last_y=df['y1'].iloc[:i],\n        last_X=df[['y2']].iloc[:i]\n    ) for i in range(len(df_train), len(df_train) + len(df_test))\n])\ny2y1_pred = np.concatenate([\n    model_y2y1.predict(\n        pd.DataFrame({'y1': [0.]}),\n        last_y=df['y2'].iloc[:i],\n        last_X=df[['y1']].iloc[:i]\n    ) for i in range(len(df_train), len(df_train) + len(df_test))\n])\n```"]