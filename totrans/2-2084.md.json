["```py\nimport re\n\n# Defining the string upon which we'll run some regex operations\ns = \"Paris is the capital of France. Also, Paris is a beautiful city.\"\n\n# Search\nre.search(\"Paris\", s)\n>>> <re.Match object; span=(0, 5), match='Paris'>\n\n# Find All\nre.findall(\"Paris\", s)\n>>> ['Paris', 'Paris']\n\n# Sub\nre.sub(\"Paris\", \"Rome\", s)\n>>> 'Rome is the capital of France. Also, Rome is a beautiful city.'\n\n# Split\nre.split(\"\\. \", s)\n>>> ['Paris is the capital of France', 'Also, Paris is a beautiful city.']\n```", "```py\nimport re\nimport pandas as pd\n\ndf = pd.read_csv(\"sample.csv\")\n\n# Define pattern that matches the email format firstname.lastname@gmail.com\npattern = \"^[a-z]+\\.+[a-z]+@gmail.com$\"\n\n# Iterate through rows and print those that do not match\nfor index, row in df.iterrows():\n    match = re.search(pattern, row.Email)\n    if match == None:\n        print(index, *row)\n\n# Output\n>>> 0 johnsmith@gmail.com Pasadena California 91103\n>>> 3 matt.hawkins@hotmail.com Kailua Hawaii 96734\n```", "```py\n# Define pattern that matches 5-character strings comprised of all digits\npattern = \"^\\d{5}$\" \n\nfor index, row in df.iterrows():\n    match = re.search(pattern, row.ZIP)\n    if match == None:\n        print(index, *row)\n\n# Output\n>>> 2 Kirkland Washington 9560\n```", "```py\nimport re\n\n# Define pattern capable of handling some obfuscations of \"jackpot\"\npattern = \"^j[a@]ckp[o0]t$\"\n\nre.search(pattern, \"j@ckpot\")\nre.search(pattern, \"jackp0t\")\nre.search(pattern, \"j@ckp0t\")\n\n# Outputs\n>>> <re.Match object; span=(0, 7), match='j@ckpot'>\n>>> <re.Match object; span=(0, 7), match='jackp0t'>\n>>> <re.Match object; span=(0, 7), match='j@ckp0t'>\n```", "```py\nimport re\n\nstring = \"I have a dentist appointment on 04/06/2023 at 10:00 AM.\"\n\n# Define pattern capable of capturing data format\npattern = \"(\\d{1,2}/)(\\d{1,2}/)(\\d{4})\"\n\n# Substitute days and months\nre.sub(pattern, r\"\\2\\1\\3\", string)\n\n# Output\n>>> 'I have a dentist appointment on 06/04/2023 at 10:00 AM.'\n```", "```py\nimport re\n\n# Define pattern capable of matching the above-mentioned motif\npattern = \".C[DA]GG[^Y]\"\n\nproteins = ['AARKYL', 'LELCDGGPG', 'RAAANCDD', 'LYYRCAGGEGPGG', 'CAEELR']  \n\nfor prot in proteins:\n    match = re.search(p, prot)\n    if match:\n        print(prot, match)\n\n# Output\n>>> LELCDGGPG <re.Match object; span=(2, 8), match='LCDGGP'>\n>>> LYYRCAGGEGPGG <re.Match object; span=(3, 9), match='RCAGGE'>\n```"]