["```py\ndef create_rankings(df, columns):\n    rank_columns = [\"rank_{}\".format(i) for i in range(len(columns))]\n    for i, column in enumerate(columns):\n        df[rank_columns[i]] = df[column].rank(ascending=False)\n\n    return df, rank_columns\n```", "```py\ndef set_style(font_family, background_color, grid_color, text_color):\n    sns.set_style({\n        \"axes.facecolor\": background_color,\n        \"figure.facecolor\": background_color,\n\n        \"axes.grid\": True,\n        \"axes.axisbelow\": True,\n\n        \"grid.color\": grid_color,\n\n        \"text.color\": text_color,\n        \"font.family\": font_family,\n\n        \"xtick.bottom\": False,\n        \"xtick.top\": False,\n        \"ytick.left\": False,\n        \"ytick.right\": False,\n\n        \"axes.spines.left\": False,\n        \"axes.spines.bottom\": False,\n        \"axes.spines.right\": False,\n        \"axes.spines.top\": False,\n    }\n)\n```", "```py\nfont_family = \"PT Mono\"\nbackground_color = \"#FAF0F1\"\ntext_color = \"#080520\"\ngrid_color = \"#E4C9C9\"\n\nset_style(font_family, background_color, grid_color, text_color)\n```", "```py\ndef format_ticks(ax, years, padx=0.25, pady=0.5, y_label_size=20, x_label_size=24):\n    ax.set(xlim=(-padx, len(years) -1 + padx), ylim=(-len(df) - pady, - pady))\n\n    xticks = [i for i in range(len(years))]\n    ax.set_xticks(ticks=xticks, labels=years)\n\n    yticks = [-i for i in range(1, len(df) + 1)]\n    ylabels = [\"{}\".format(i) for i in range(1, len(df) + 1)]\n    ax.set_yticks(ticks=yticks, labels=ylabels)\n\n    ax.tick_params(\"y\",labelsize=y_label_size, pad=16)\n    ax.tick_params(\"x\", labeltop=True, labelsize=x_label_size, pad=8)\n```", "```py\n# Load data\nyears = [\"2000\", \"2005\", \"2010\", \"2015\", \"2020\", \"2022\"]\ndf = pd.read_csv(\"rankings.csv\", index_col=None)\ndf, rank_columns = create_rankings(df, years)\n\n# Create chart\nfig, ax = plt.subplots(nrows=1, ncols=1, figsize=(15, 1.6*len(df)))\nformat_ticks(ax, years)\n```", "```py\ndef add_line(ax, row, columns, linewidth=3):\n    x = [i for i in range(len(columns))]\n    y = [-row[rc] for rc in columns]\n\n    ax.add_artist(\n        Line2D(x, y, linewidth=linewidth, color=text_color)\n    )\n```", "```py\n# Load data\nyears = [\"2000\", \"2005\", \"2010\", \"2015\", \"2020\", \"2022\"]\ndf = pd.read_csv(\"rankings.csv\", index_col=None)\ndf, rank_columns = create_rankings(df, years)\n\n# Create chart\nfig, ax = plt.subplots(nrows=1, ncols=1, figsize=(15, 1.6*len(df)))\nformat_ticks(ax, years)\n\n# Draw lines\nfor i, row in df.iterrows():\n    add_line(ax, row, rank_columns)\n```", "```py\ndef add_pie(ax, x, y, ratio, size=572, zoom=0.1):\n    image = Image.new('RGBA', (size, size))\n    draw = ImageDraw.Draw(image)\n\n    draw.pieslice((0, 0, size, size), start=-90, end=360*ratio-90, fill=text_color, outline=text_color)\n    im = OffsetImage(image, zoom=zoom, interpolation=\"lanczos\", resample=True, visible=True)\n\n    ax.add_artist(AnnotationBbox(\n        im, (x, y), frameon=False,\n        xycoords=\"data\",\n    ))\n```", "```py\n# Load data\nyears = [\"2000\", \"2005\", \"2010\", \"2015\", \"2020\", \"2022\"]\ndf = pd.read_csv(\"rankings.csv\", index_col=None)\ndf, rank_columns = create_rankings(df, years)\n\n# Create chart\nfig, ax = plt.subplots(nrows=1, ncols=1, figsize=(15, 1.6*len(df)))\nformat_ticks(ax, years)\n\n# Draw lines\nfor i, row in df.iterrows():\n    add_line(ax, row, rank_columns)\n\n    for j, rc in enumerate(rank_columns):\n        add_pie(ax, j, -row[rc], ratio=row[years[j]] / row[years].max())\n```", "```py\ndef add_pie_and_flag(ax, x, y, name, ratio, size=572, zoom=0.1):\n    flag = Image.open(\"<location>/{}.png\".format(name.lower()))\n    image = Image.new('RGBA', (size, size))\n    draw = ImageDraw.Draw(image)\n    pad = int((size - 512) / 2)\n\n    draw.pieslice((0, 0, size, size), start=-90, end=360*ratio-90, fill=text_color, outline=text_color)\n    image.paste(flag, (pad, pad), flag.split()[-1])\n\n    im = OffsetImage(image, zoom=zoom, interpolation=\"lanczos\", resample=True, visible=True)\n\n    ax.add_artist(AnnotationBbox(\n        im, (x, y), frameon=False,\n        xycoords=\"data\",\n    ))\n```", "```py\n# Load data\nyears = [\"2000\", \"2005\", \"2010\", \"2015\", \"2020\", \"2022\"]\ndf = pd.read_csv(\"rankings.csv\", index_col=None)\ndf, rank_columns = create_rankings(df, years)\n\n# Create chart\nfig, ax = plt.subplots(nrows=1, ncols=1, figsize=(15, 1.6*len(df)))\nformat_ticks(ax, years)\n\n# Draw lines\nfor i, row in df.iterrows():\n    add_line(ax, row, rank_columns)\n\n    for j, rc in enumerate(rank_columns):\n        add_pie_and_flag(\n            ax, j, -row[rc], \n            name=row.country_name,\n            ratio=row[years[j]] / row[years].max()\n        )\n```", "```py\ndef add_text(ax, value, max_value, y):\n    trillions = round(value / 1e12, 1)\n    ratio_to_max = round(100 * value / max_value, 1)\n\n    text = \"{}\\n${:,}T ({}%)\".format(\n        row.country_name, \n        trillions,\n        ratio_to_max\n    )\n\n    ax.annotate(\n        text, (1.03, y), \n        fontsize=20,\n        linespacing=1.7,\n        va=\"center\",\n        xycoords=(\"axes fraction\", \"data\")\n    )\n```", "```py\nyears = [\"2000\", \"2005\", \"2010\", \"2015\", \"2020\", \"2022\"]\ndf = pd.read_csv(\"rankings.csv\", index_col=None)\ndf, rank_columns = create_rankings(df, years)\n\nfig, ax = plt.subplots(nrows=1, ncols=1, figsize=(15, 1.6*len(df)))\nformat_ticks(ax, years)\n\nfor i, row in df.iterrows():\n    add_line(ax, row, rank_columns)\n\n    for j, rc in enumerate(rank_columns):\n        add_pie_and_flag(\n            ax, j, -row[rc], \n            name=row.country_name,\n            ratio=row[years[j]] / row[years].max()\n        )\n\n    add_text(ax, value=row[years[-1]], max_value=df.iloc[0][years[-1]], y=-(i + 1))\n    plt.title(\"Comparing Today's Largest Economies\\nGDP (constant 2015 us$)\", linespacing=1.8, fontsize=32, x=0.58, y=1.12)\n```"]