- en: Bridge the Gap Between Data and Humanity With the Power of This Python Library
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/bridge-the-gap-between-data-and-humanity-with-the-power-of-this-python-library-553a9f55908b](https://towardsdatascience.com/bridge-the-gap-between-data-and-humanity-with-the-power-of-this-python-library-553a9f55908b)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Make your Python outputs more understandable to humans
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://zoumanakeita.medium.com/?source=post_page-----553a9f55908b--------------------------------)[![Zoumana
    Keita](../Images/34a15c1d03687816dbdbc065f5719f80.png)](https://zoumanakeita.medium.com/?source=post_page-----553a9f55908b--------------------------------)[](https://towardsdatascience.com/?source=post_page-----553a9f55908b--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----553a9f55908b--------------------------------)
    [Zoumana Keita](https://zoumanakeita.medium.com/?source=post_page-----553a9f55908b--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----553a9f55908b--------------------------------)
    ·4 min read·Feb 22, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We don’t need to rely on any statistics to realize that Python is one of the
    most used programming languages by Software developers, Data Scientists, and more.
    This is not only because of its flexibility, and ease of use, but also the wide
    range of libraries out there that makes our day-to-day tasks easier.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: 'This article introduces another powerful library: `humanize.`It helps bridge
    the gap between humans and Python outputs, by making them more understandable.
    Let’s have a look at some illustrations.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: Getting started
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To be able to use `humanize` the first step is to install it using the Python
    package manager`pip` as follows:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Next, you need to import the following libraries relevant to successfully perform
    the tutorial.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: '`getsize()` from `os` library for getting the size of a given file.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`datetime` used to work with time.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: And finally, the `humanize` library, which is the center of this article.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Everything set up to start the exploration, starting with Big numbers.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: Make big numbers more readable
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: What is this number 1034503576643 ?
  id: totrans-19
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: It requires some mental effort to effectively understand whether this number
    is in the range of a billion or a trillion. This is the type of burden that `humanizer`
    tries to soften by providing the user with a nicer output.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: 'One way of doing it is separating it using the correct comma `**'',''**` and
    this is done using the `intcomma` function as follows:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The output of the code above is ***1,034,503,576,643***, which is way better
    that the original number without a separator.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: 'Furthermore, the result can be generated in natural language format using the
    `intword` function as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This gives the following result: `1.0 trillion.`'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: Working with DateTime
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 2022/9/6 (YYYY/MM/DD format) is Sep 06 2022
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The second format (Sep 6 2022) is much easier for anyone to understand than
    the first YYYY/MM/DD format because it lies in our day-to-day verbal communication
    as human beings. Such a result can be obtained using the `naturaldate` function.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种格式（Sep 6 2022）比第一种YYYY/MM/DD格式更容易被理解，因为它符合我们日常的口头交流。这种结果可以通过`naturaldate`函数获得。
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This generates the following result: `Sep 06 2022.`'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成以下结果：`Sep 06 2022`。
- en: Instead of using `naturaldate`, the result can be limited to the month and the
    date using the `naturalday` function.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`naturalday`函数将结果限制为月份和日期，而不是使用`naturaldate`。
- en: '[PRE5]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The result is `Sep 06`
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是`Sep 06`
- en: Working with duration
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理持续时间
- en: Similar to DateTime, it is also possible to make duration human-readable by
    using the `naturaltime` function as illustrated below.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于 DateTime，也可以使用`naturaltime`函数使持续时间具有可读性，如下所示。
- en: '[PRE6]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The previous code generates `3 days ago` which anyone can understand.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的代码生成了`3 days ago`，这是任何人都可以理解的。
- en: Get the size and unit of files
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 获取文件的大小和单位
- en: My file size is 278.
  id: totrans-40
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我的文件大小是278。
- en: The most obvious question from this statement is
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这个声明最明显的问题是
- en: What unit are you using? Bytes, KiloBytes, Megabytes, Gigabytes, Terabytes?
  id: totrans-42
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你使用的是什么单位？字节、千字节、兆字节、千兆字节、太字节？
- en: 'This mystery can be solved using the `naturalsize` function as shown below:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这个谜题可以通过使用`naturalsize`函数解决，如下所示：
- en: First, get the size of the `CSV` file using the `getsize` function.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，使用`getsize`函数获取`CSV`文件的大小。
- en: Then the `naturalsize`function is used to generate a more appropriate output.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后使用`naturalsize`函数生成更合适的输出。
- en: '[PRE7]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The result before humanization is 278.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 人性化处理前的结果是278。
- en: After humanization, we get **278 Bytes**.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 人性化处理后，我们得到了**278 Bytes**。
- en: Scientific notation and fractions
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 科学记数法和分数
- en: The scientific notation of a given number can be more useful in some scenarios,
    like when using `power of the ten` notations. This can be achieved using the `scientific`
    function.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 给定数字的科学记数法在某些场景中可能更有用，例如使用`power of the ten`记法。这可以通过使用`scientific`函数来实现。
- en: With the `precision` parameter, the user can specify the number of precision
    values to consider after the decimals. When not specified, the precision value
    is 2.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`precision`参数，用户可以指定小数点后的精度值数量。如果未指定，精度值为2。
- en: Below is an illustration.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个示例。
- en: '[PRE8]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The outputs are given in the same order of the `print` statements.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 输出结果按`print`语句的顺序给出。
- en: 'Using the default function: 2.30 x 10⁶'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用默认函数：2.30 x 10⁶
- en: 'With the `precision` parameter: 2.30436 x 10⁶'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`precision`参数：2.30436 x 10⁶
- en: What do you think is the fractional representation of 0.4646?
  id: totrans-57
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你认为0.4646的分数表示是什么？
- en: 'Save yourself from too much mathematical computation and just use the `fractional`function
    as follows:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 避免过多的数学计算，只需使用`fractional`函数，如下所示：
- en: '[PRE9]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The answer is 105/226\. That’s really cool, isn’t it!
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 答案是105/226。这真的很酷，不是吗！
- en: What if I am dealing with another language
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如果我处理的是另一种语言怎么办
- en: All the previous results are in English. The same could be achieved in other
    languages such as French, Russian, and more.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的所有结果都是用英语给出的。其他语言如法语、俄语等也可以实现相同的效果。
- en: The first step to reach that is to activate internationalization (`i18n`) feature
    using the `i18n.activate` function.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 实现这一点的第一步是使用`i18n.activate`函数激活国际化（`i18n`）功能。
- en: For instance, it is possible to create a time delta object with a duration of
    3 seconds, but this time in `French`.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，可以创建一个持续时间为3秒的时间差对象，但这次用`法语`。
- en: '[PRE10]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The result is `il y a 3 secondes` which means `3 seconds ago` in English.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是`il y a 3 secondes`，这在英语中表示`3 seconds ago`。
- en: Conclusion
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Thank you for reading! 🎉 🍾
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读！ 🎉 🍾
- en: I hope you found this article helpful!
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你觉得这篇文章有帮助！
- en: Also, If you like reading my stories and wish to support my writing, consider
    [becoming a Medium member](https://zoumanakeita.medium.com/membership). With a
    $ 5-a-month commitment, you unlock unlimited access to stories on Medium.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢阅读我的故事并希望支持我的写作，可以考虑[成为 Medium 会员](https://zoumanakeita.medium.com/membership)。通过每月$5的承诺，你可以无限制访问
    Medium 上的故事。
- en: Would you like to buy me a coffee ☕️? → [Here you go](http://www.buymeacoffee.com/zoumanakeig)!
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 你想请我喝咖啡吗☕️？→ [在这里请我](http://www.buymeacoffee.com/zoumanakeig)!
- en: Feel free to follow me on [Medium](https://zoumanakeita.medium.com/), [Twitter](https://twitter.com/zoumana_keita_),
    and [YouTube](https://www.youtube.com/channel/UC9xKdy8cz6ZuJU5FTNtM_pQ), or say
    Hi on [LinkedIn](https://www.linkedin.com/in/zoumana-keita/). It is always a pleasure
    to discuss AI, ML, Data Science, NLP, and MLOps stuff!
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 随时欢迎关注我的 [Medium](https://zoumanakeita.medium.com/)、[Twitter](https://twitter.com/zoumana_keita_)
    和 [YouTube](https://www.youtube.com/channel/UC9xKdy8cz6ZuJU5FTNtM_pQ)，或者在 [LinkedIn](https://www.linkedin.com/in/zoumana-keita/)
    上打个招呼。讨论人工智能、机器学习、数据科学、自然语言处理和MLOps的内容总是很愉快的！
- en: 'Before you leave find the last two parts of this series below:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在你离开之前，请查看下面的该系列的最后两部分：
- en: '[Pandas & Python Tricks for Data Science & Data Analysis — Part 1](https://medium.com/towards-data-science/pandas-and-python-tips-and-tricks-for-data-science-and-data-analysis-1b1e05b7d93a)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '[Pandas 和 Python 数据科学与数据分析技巧 — 第1部分](https://medium.com/towards-data-science/pandas-and-python-tips-and-tricks-for-data-science-and-data-analysis-1b1e05b7d93a)'
- en: '[Pandas & Python Tricks for Data Science & Data Analysis — Part 2](https://medium.com/towards-data-science/pandas-python-tricks-for-data-science-data-analysis-part-2-dc36460de90d)'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '[Pandas 和 Python 数据科学与数据分析技巧 — 第2部分](https://medium.com/towards-data-science/pandas-python-tricks-for-data-science-data-analysis-part-2-dc36460de90d)'
- en: '[Pandas & Python Tricks for Data Science & Data Analysis — Part 3](/pandas-python-tricks-for-data-science-data-analysis-part-3-462d0e952925)'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '[Pandas 和 Python 数据科学与数据分析技巧 — 第3部分](/pandas-python-tricks-for-data-science-data-analysis-part-3-462d0e952925)'
