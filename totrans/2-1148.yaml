- en: How to Create United States Data Maps With Python and Matplotlib
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-to-create-data-maps-of-the-united-states-with-python-and-matplotlib-5dfb425bd87d](https://towardsdatascience.com/how-to-create-data-maps-of-the-united-states-with-python-and-matplotlib-5dfb425bd87d)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Matplotlib Tutorial
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Creating maps that capture the eye
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@oscarleo?source=post_page-----5dfb425bd87d--------------------------------)[![Oscar
    Leo](../Images/7733c9147bad2875a35155fca3903aa8.png)](https://medium.com/@oscarleo?source=post_page-----5dfb425bd87d--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5dfb425bd87d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5dfb425bd87d--------------------------------)
    [Oscar Leo](https://medium.com/@oscarleo?source=post_page-----5dfb425bd87d--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----5dfb425bd87d--------------------------------)
    ·7 min read·Sep 7, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1c56f212ab80ea66082213e3c6beb392.png)'
  prefs: []
  type: TYPE_IMG
- en: Map created by the author
  prefs: []
  type: TYPE_NORMAL
- en: Hello, and welcome to this tutorial.
  prefs: []
  type: TYPE_NORMAL
- en: Today, I will teach you to create the data visualization you see above using
    geo data and the Facebook Connectivity Index (both data sources are public domain
    and free to use).
  prefs: []
  type: TYPE_NORMAL
- en: Maps like this are great for visualizing geographic information, and if you
    select suitable colors, they will capture anyone’s interest immediately.
  prefs: []
  type: TYPE_NORMAL
- en: Typical use cases are to compare countries (or US states) by the size of their
    economies, populations, or other metrics like longevity on a world map.
  prefs: []
  type: TYPE_NORMAL
- en: The maps often reveal patterns based on geographic locations you can’t see in
    other visualizations.
  prefs: []
  type: TYPE_NORMAL
- en: If that sounds intriguing, you’re in the right place.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s get started with the tutorial.
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 1: Download data'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before we begin, we need to download a dataset exciting enough for this tutorial
    and geo-data to draw accurate maps of the United States.
  prefs: []
  type: TYPE_NORMAL
- en: For the maps, I’m using shape files from [Cencus.gov](https://www.census.gov/).
    You can use the following links to download both [states](https://www2.census.gov/geo/tiger/GENZ2018/shp/cb_2018_us_state_500k.zip)
    and [counties](https://www2.census.gov/geo/tiger/GENZ2018/shp/cb_2018_us_county_500k.zip).
  prefs: []
  type: TYPE_NORMAL
- en: To have a complementary dataset, I’ve selected the Facebook Connectivity Index,
    which measures the likelihood that two people in different counties are connected
    on Facebook.
  prefs: []
  type: TYPE_NORMAL
- en: You can download the connectivity data using [this link](https://data.humdata.org/dataset/e9988552-74e4-4ff4-943f-c782ac8bca87/resource/c59fd5ac-0458-4e83-b6be-5334f0ea9a69/download/us-counties-us-counties-fb-social-connectedness-index-october-2021.zip).
  prefs: []
  type: TYPE_NORMAL
- en: Once the downloads have finished, unzip them and put them in a good location.
    I’m using `./data` in the tutorial, but you can do whatever you like.
  prefs: []
  type: TYPE_NORMAL
- en: It should look something like this.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6486f1c60e1955e7406d0c1ef2f94260.png)'
  prefs: []
  type: TYPE_IMG
- en: Screenshot by the author
  prefs: []
  type: TYPE_NORMAL
- en: Let’s write some code.
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 2: Import libraries and prepare Seaborn'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The only new library (if you’ve done any of my other [Matplotlib Tutorials](https://medium.com/@oscarleo/list/matplotlib-tutorials-262e5d7f0847))
    is `geopandas`, which we will use to draw maps.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Next, let’s define a few features about the style using `seaborn`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Now it’s time to learn how to draw a map.
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 3: Load and prepare geo-data'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: I use `geopandas` to load the data and remove “unincorporated territories” such
    as Guam, Puerto Rico, and American Samoa.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: A `geopandas` data frame has a `geometry` column that defines the shape of each
    row. It allows us to draw a map by calling `counties.plot()` or `states.plot()`
    like this.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Here, I start by drawing the counties with transparent borders, and then I reuse
    `ax` when I call `states.plot()` so that I don’t draw separate maps.
  prefs: []
  type: TYPE_NORMAL
- en: This is what I get.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/64a41d918eed9ca9b992c7e6ddd092cb.png)'
  prefs: []
  type: TYPE_IMG
- en: Map created by the author
  prefs: []
  type: TYPE_NORMAL
- en: The map doesn’t look great, but I will make a few quick adjustments to get us
    on the right track.
  prefs: []
  type: TYPE_NORMAL
- en: The first adjustment is to change the map projection to one centered on the
    United States. You can do that with `geopandas` by calling `to_crs()`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Here’s the difference.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/dc357875cc33f965eb0aed35e91a69b4.png)'
  prefs: []
  type: TYPE_IMG
- en: Map created by the author
  prefs: []
  type: TYPE_NORMAL
- en: It’s common to draw Alaska and Hawaii underneath the mainland when drawing data
    maps of the United States, and that’s what we will do as well.
  prefs: []
  type: TYPE_NORMAL
- en: With `geopandas`, you can translate, scale, and rotate geometries with built-in
    functions. Here’s a helpful function to do that.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: I calculate a center point for the entire data frame that defines the origin
    of rotation and scaling. If I don’t, `geopandas` does that automatically for each
    row, which makes the map look completely messed up.
  prefs: []
  type: TYPE_NORMAL
- en: This next function takes our current data frames, separates Hawaii and Alaska,
    calls `translate_geometries()` to adjust their geometries, and put them back into
    new data frames.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: We add `adjust_maps()` to our code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: And our map now looks like this.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1e701cffb432e56cbc90bfb9867e68ac.png)'
  prefs: []
  type: TYPE_IMG
- en: Map created by the author
  prefs: []
  type: TYPE_NORMAL
- en: Time for the next step.
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 4: Adding data'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To add data, we start by loading the Facebook connectivity data. I’m turning
    the `user_loc` and `fr_loc` columns into strings and adding leading zeros to make
    them consistent with the geo data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: The `user_loc` and `fr_loc` columns define a county pair, and the third column,
    `scaled_sci`, is the value we want to display.
  prefs: []
  type: TYPE_NORMAL
- en: There are 3,227 counties in the dataset, which means there are a total of 10,413,529
    pairs, but we will show the connectivity indexes for one county at a time.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Next, I define a `selected_color` and `data_breaks` which contains percentiles,
    colors, and legend texts for later.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: The following function defines the color for each row using a `county_df` and
    the `data_breaks` we just defined.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: We calculate the correct values and add `create_color()` like this.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Here’s what we get.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/51091bf62add6210d4f9ab6752b4d09e.png)'
  prefs: []
  type: TYPE_IMG
- en: Map created by the author
  prefs: []
  type: TYPE_NORMAL
- en: It looks fantastic, but we need to add some information.
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 5: Adding information'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The first piece of information we need is a title to explain what the data visualization
    is about.
  prefs: []
  type: TYPE_NORMAL
- en: Here’s a function that does that.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Next, we need a legend and supporting information that explains the data since
    it’s a bit complex.
  prefs: []
  type: TYPE_NORMAL
- en: The function for adding a legend uses the `data_breaks` and the `selected_color`
    to create `Patch(es)` that we add using `plt.legend()`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: I also have a simple function to add some additional information below the legend.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Lastly, I have the `add_circle()` function to indicate which county we’re looking
    at by drawing a circle around it.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: We add all of them below the rest of the code under the `# Create data map`
    comment.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Here’s the finished data visualization.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1c56f212ab80ea66082213e3c6beb392.png)'
  prefs: []
  type: TYPE_IMG
- en: Map created by the author
  prefs: []
  type: TYPE_NORMAL
- en: Congratulations, you now know how to create fantastic data maps of the United
    States in Matplotlib! :)
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Data maps are fantastic when you want to visualize geographic information in
    a way that captures the user’s eye.
  prefs: []
  type: TYPE_NORMAL
- en: This time, we worked with the Social Connectedness Index from Facebook, but
    you can change that to anything else with geographic information.
  prefs: []
  type: TYPE_NORMAL
- en: I’ve written more about the visualization and dataset in my new free newsletter,
    [Data Wonder](https://datawonder.substack.com/p/investigating-the-facebook-connectivity).
  prefs: []
  type: TYPE_NORMAL
- en: If you enjoy this tutorial, make sure to take a look at my other ones as well.
  prefs: []
  type: TYPE_NORMAL
- en: '![Oscar Leo](../Images/a3badd168c6bfbbdc3d060f9191ca1d2.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Oscar Leo](https://medium.com/@oscarleo?source=post_page-----5dfb425bd87d--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: Matplotlib Tutorials
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[View list](https://medium.com/@oscarleo/list/matplotlib-tutorials-262e5d7f0847?source=post_page-----5dfb425bd87d--------------------------------)8
    stories![](../Images/51b77b8f6d7ea69abdcd113427d4a52a.png)![](../Images/56c078b5447338a07b7bce2b23cf7133.png)![](../Images/c3088ee7cd4994f027ddddbc6ae423cd.png)'
  prefs: []
  type: TYPE_NORMAL
- en: See you next time.
  prefs: []
  type: TYPE_NORMAL
