- en: 'Seamless CI/CD Pipelines with GitHub Actions on GCP: Your Tools for Effective
    MLOps'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用GitHub Actions在GCP上实现无缝CI/CD管道：你进行有效MLOps的工具
- en: 原文：[https://towardsdatascience.com/seamless-ci-cd-pipelines-with-github-actions-on-gcp-your-tools-for-effective-mlops-96f676f72012](https://towardsdatascience.com/seamless-ci-cd-pipelines-with-github-actions-on-gcp-your-tools-for-effective-mlops-96f676f72012)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/seamless-ci-cd-pipelines-with-github-actions-on-gcp-your-tools-for-effective-mlops-96f676f72012](https://towardsdatascience.com/seamless-ci-cd-pipelines-with-github-actions-on-gcp-your-tools-for-effective-mlops-96f676f72012)
- en: '[THE FULL STACK 7-STEPS MLOPS FRAMEWORK](https://towardsdatascience.com/tagged/full-stack-mlops)'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[完整的7步骤MLOps框架](https://towardsdatascience.com/tagged/full-stack-mlops)'
- en: 'Lesson 7: Deploy All the ML Components to GCP. Build a CI/CD Pipeline Using
    Github Actions.'
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第7节：将所有机器学习组件部署到GCP。使用Github Actions构建CI/CD管道。
- en: '[](https://pauliusztin.medium.com/?source=post_page-----96f676f72012--------------------------------)[![Paul
    Iusztin](../Images/d07551a78fa87940220b49d9358f3166.png)](https://pauliusztin.medium.com/?source=post_page-----96f676f72012--------------------------------)[](https://towardsdatascience.com/?source=post_page-----96f676f72012--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----96f676f72012--------------------------------)
    [Paul Iusztin](https://pauliusztin.medium.com/?source=post_page-----96f676f72012--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://pauliusztin.medium.com/?source=post_page-----96f676f72012--------------------------------)[![Paul
    Iusztin](../Images/d07551a78fa87940220b49d9358f3166.png)](https://pauliusztin.medium.com/?source=post_page-----96f676f72012--------------------------------)[](https://towardsdatascience.com/?source=post_page-----96f676f72012--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----96f676f72012--------------------------------)
    [Paul Iusztin](https://pauliusztin.medium.com/?source=post_page-----96f676f72012--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----96f676f72012--------------------------------)
    ·19 min read·Jun 15, 2023
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----96f676f72012--------------------------------)
    ·19分钟阅读·2023年6月15日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/7c34e9ba645996ba5d4b808f1f130f93.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7c34e9ba645996ba5d4b808f1f130f93.png)'
- en: Photo by [Hassan Pasha](https://unsplash.com/@hpzworkz?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[哈桑·帕沙](https://unsplash.com/@hpzworkz?utm_source=medium&utm_medium=referral)提供，来源于[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: This tutorial represents **lesson 7 out of a 7-lesson course** that will walk
    you step-by-step through how to **design, implement, and deploy an ML system**
    using **MLOps good practices**. During the course, you will build a production-ready
    model to forecast energy consumption levels for the next 24 hours across multiple
    consumer types from Denmark.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程是**7节课程中的第7节**，将逐步指导你如何**设计、实施和部署一个机器学习系统**，使用**MLOps良好实践**。在课程期间，你将构建一个生产就绪的模型，以预测丹麦多个消费者类型在未来24小时内的能源消耗水平。
- en: '*By the end of this course, you will understand all the fundamentals of designing,
    coding and deploying an ML system using a batch-serving architecture.*'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '*到课程结束时，你将了解设计、编码和部署机器学习系统的所有基础知识，使用批量服务架构。*'
- en: This course *targets mid/advanced machine learning engineers* who want to level
    up their skills by building their own end-to-end projects.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本课程*面向中级/高级机器学习工程师*，那些希望通过构建自己的端到端项目来提升技能的人。
- en: Nowadays, certificates are everywhere. Building advanced end-to-end projects
    that you can later show off is the best way to get recognition as a professional
    engineer.
  id: totrans-12
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 现在，证书无处不在。构建高级端到端项目，并在之后展示出来，是获得专业工程师认可的最佳方式。
- en: 'Table of Contents:'
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 目录：
- en: Course Introduction
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 课程介绍
- en: Course Lessons
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 课程内容
- en: Data Source
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据源
- en: 'Lesson 7: Deploy All the ML Components to GCP. Build a CI/CD Pipeline Using
    Github Actions.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第7节：将所有机器学习组件部署到GCP。使用Github Actions构建CI/CD管道。
- en: 'Lesson 7: Code'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第7节：代码
- en: Conclusion
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结论
- en: References
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参考文献
- en: Course Introduction
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 课程介绍
- en: '***At the end of this 7 lessons course, you will know how to:***'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '***在这个7节课程的最后，你将知道如何：***'
- en: design a batch-serving architecture
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计一个批量服务架构
- en: use Hopsworks as a feature store
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Hopsworks作为特征存储
- en: design a feature engineering pipeline that reads data from an API
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计一个从API读取数据的特征工程管道
- en: build a training pipeline with hyper-parameter tunning
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建一个带有超参数调优的训练管道
- en: use W&B as an ML Platform to track your experiments, models, and metadata
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用W&B作为机器学习平台来跟踪你的实验、模型和元数据
- en: implement a batch prediction pipeline
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现一个批量预测管道
- en: use Poetry to build your own Python packages
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Poetry 来构建你自己的 Python 包
- en: deploy your own private PyPi server
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署你自己的私人 PyPi 服务器
- en: orchestrate everything with Airflow
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用 Airflow 编排一切
- en: use the predictions to code a web app using FastAPI and Streamlit
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用预测来编写一个使用 FastAPI 和 Streamlit 的 web 应用
- en: use Docker to containerize your code
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Docker 来容器化你的代码
- en: use Great Expectations to ensure data validation and integrity
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Great Expectations 来确保数据验证和完整性
- en: monitor the performance of the predictions over time
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控预测性能的变化
- en: deploy everything to GCP
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将一切部署到 GCP
- en: build a CI/CD pipeline using GitHub Actions
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 GitHub Actions 构建 CI/CD 流水线
- en: If that sounds like a lot, don't worry. After you cover this course, you will
    understand everything I said before. Most importantly, you will know WHY I used
    all these tools and how they work together as a system.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这听起来有点多，不用担心。完成本课程后，你将理解我之前所说的一切。最重要的是，你将知道我为什么使用这些工具以及它们如何作为一个系统协同工作。
- en: '**If you want to get the most out of this course,** [**I suggest you access
    the GitHub repository**](https://github.com/iusztinpaul/energy-forecasting) **containing
    all the lessons'' code. This course is designed to quickly read and replicate
    the code along the articles.**'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果你想充分利用本课程，** [**我建议你访问包含所有课程代码的 GitHub 仓库**](https://github.com/iusztinpaul/energy-forecasting)
    **。本课程设计旨在快速阅读和复制文章中的代码。**'
- en: By the end of the course, you will know how to implement the diagram below.
    Don't worry if something doesn't make sense to you. I will explain everything
    in detail.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 到课程结束时，你将知道如何实现下面的图示。如果有任何内容让你困惑，不用担心，我会详细解释。
- en: '![](../Images/4b5c3b0b8e2162ea8fd268ca745199ec.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4b5c3b0b8e2162ea8fd268ca745199ec.png)'
- en: Diagram of the architecture you will build during the course [Image by the Author].
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 你将在课程中构建的架构图 [作者提供的图片]。
- en: By the **end of Lesson 7**, you will know how to manually deploy the 3 ML pipelines
    and the web app to GCP. Also, you will build a CI/CD pipeline that will automate
    the deployment process using GitHub Actions.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 到**第 7 节课结束时**，你将知道如何手动将 3 个 ML 流水线和 web 应用部署到 GCP。此外，你还将构建一个 CI/CD 流水线，使用 GitHub
    Actions 自动化部署过程。
- en: 'Course Lessons:'
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 课程内容：
- en: '[Batch Serving. Feature Stores. Feature Engineering Pipelines.](https://medium.com/towards-data-science/a-framework-for-building-a-production-ready-feature-engineering-pipeline-f0b29609b20f)'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[批量服务。特征存储。特征工程流水线。](https://medium.com/towards-data-science/a-framework-for-building-a-production-ready-feature-engineering-pipeline-f0b29609b20f)'
- en: '[Training Pipelines. ML Platforms. Hyperparameter Tuning.](https://medium.com/towards-data-science/a-guide-to-building-effective-training-pipelines-for-maximum-results-6fdaef594cee)'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[训练流水线。ML 平台。超参数调优。](https://medium.com/towards-data-science/a-guide-to-building-effective-training-pipelines-for-maximum-results-6fdaef594cee)'
- en: '[Batch Prediction Pipeline. Package Python Modules with Poetry.](https://medium.com/towards-data-science/unlock-the-secret-to-efficient-batch-prediction-pipelines-using-python-a-feature-store-and-gcs-17a1462ca489)'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[批量预测流水线。用 Poetry 打包 Python 模块。](https://medium.com/towards-data-science/unlock-the-secret-to-efficient-batch-prediction-pipelines-using-python-a-feature-store-and-gcs-17a1462ca489)'
- en: '[Private PyPi Server. Orchestrate Everything with Airflow.](/unlocking-mlops-using-airflow-a-comprehensive-guide-to-ml-system-orchestration-880aa9be8cff)'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[私人 PyPi 服务器。用 Airflow 编排一切。](/unlocking-mlops-using-airflow-a-comprehensive-guide-to-ml-system-orchestration-880aa9be8cff)'
- en: '[Data Validation for Quality and Integrity using GE. Model Performance Continuous
    Monitoring.](/ensuring-trustworthy-ml-systems-with-data-validation-and-real-time-monitoring-89ab079f4360)'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[使用 GE 进行数据验证以确保质量和完整性。模型性能持续监控。](/ensuring-trustworthy-ml-systems-with-data-validation-and-real-time-monitoring-89ab079f4360)'
- en: '[Consume and Visualize your Model''s Predictions using FastAPI and Streamlit.
    Dockerize Everything.](https://medium.com/towards-data-science/fastapi-and-streamlit-the-python-duo-you-must-know-about-72825def1243)'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[使用 FastAPI 和 Streamlit 消费和可视化你的模型预测。将一切 Docker 化。](https://medium.com/towards-data-science/fastapi-and-streamlit-the-python-duo-you-must-know-about-72825def1243)'
- en: '**Deploy All the ML Components to GCP. Build a CI/CD Pipeline Using Github
    Actions.**'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**将所有机器学习组件部署到 GCP。使用 Github Actions 构建 CI/CD 流水线。**'
- en: '[[Bonus] Behind the Scenes of an ‘Imperfect’ ML Project — Lessons and Insights](https://medium.com/towards-data-science/imperfections-unveiled-the-intriguing-reality-behind-our-mlops-course-creation-6ff7d52ecb7e)'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[[附加内容] 一个‘不完美’的 ML 项目的幕后 — 经验与见解](https://medium.com/towards-data-science/imperfections-unveiled-the-intriguing-reality-behind-our-mlops-course-creation-6ff7d52ecb7e)'
- en: As Lesson 7 focuses on teaching you how to deploy all the components to GCP
    and build a CI/CD pipeline around it, for the full experience, we recommend you
    watch the other lessons of the [course](https://towardsdatascience.com/tagged/full-stack-mlops).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 由于第 7 课专注于教你如何将所有组件部署到 GCP 并围绕它构建 CI/CD 管道，因此为了获得完整体验，我们建议你观看 [课程](https://towardsdatascience.com/tagged/full-stack-mlops)
    的其他课程。
- en: Check out [Lesson 4](/unlocking-mlops-using-airflow-a-comprehensive-guide-to-ml-system-orchestration-880aa9be8cff)
    to learn how to orchestrate the 3 ML pipelines using Airflow and [Lesson 6](https://medium.com/towards-data-science/fastapi-and-streamlit-the-python-duo-you-must-know-about-72825def1243)
    to see how to consume the model's predictions using FastAPI and Streamlit.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 查看 [第 4 课](/unlocking-mlops-using-airflow-a-comprehensive-guide-to-ml-system-orchestration-880aa9be8cff)
    了解如何使用 Airflow 编排 3 个机器学习管道，查看 [第 6 课](https://medium.com/towards-data-science/fastapi-and-streamlit-the-python-duo-you-must-know-about-72825def1243)
    了解如何使用 FastAPI 和 Streamlit 消耗模型的预测。
- en: Data Source
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据来源
- en: We used a free & open API that provides hourly energy consumption values for
    all the energy consumer types within Denmark [1].
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了一个免费的开放 API，提供了丹麦所有能源消费者类型的每小时能耗值 [1]。
- en: They provide an intuitive interface where you can easily query and visualize
    the data. [You can access the data here](https://www.energidataservice.dk/tso-electricity/ConsumptionDE35Hour)
    [1].
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 它们提供了一个直观的界面，你可以轻松查询和可视化数据。 [你可以在这里访问数据](https://www.energidataservice.dk/tso-electricity/ConsumptionDE35Hour)
    [1]。
- en: 'The data has 4 main attributes:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 数据有 4 个主要属性：
- en: '**Hour UTC:** the UTC datetime when the data point was observed.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**小时 UTC：** 数据点被观察到的 UTC 日期时间。'
- en: '**Price Area:** Denmark is divided into two price areas: DK1 and DK2 — divided
    by the Great Belt. DK1 is west of the Great Belt, and DK2 is east of the Great
    Belt.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**价格区域：** 丹麦被分为两个价格区域：DK1 和 DK2——由大贝尔特海峡分隔。DK1 在大贝尔特西侧，DK2 在大贝尔特东侧。'
- en: '**Consumer Type:** The consumer type is the Industry Code DE35, owned and maintained
    by Danish Energy.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**消费者类型：** 消费者类型是行业代码 DE35，由丹麦能源公司拥有和维护。'
- en: '**Total Consumption:** Total electricity consumption in kWh'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**总消费量：** 总电力消耗，单位为千瓦时。'
- en: '**Note:** The observations have a lag of 15 days! But for our demo use case,
    that is not a problem, as we can simulate the same steps as it would in real-time.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 观察数据有 15 天的滞后！但对于我们的演示用例，这不是问题，因为我们可以模拟与实时情况相同的步骤。'
- en: '![](../Images/4eab6debdb7ba94406b8d0a8e28e3438.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4eab6debdb7ba94406b8d0a8e28e3438.png)'
- en: A screenshot from our web app showing how we forecasted the energy consumption
    for area = 1 and consumer_type = 212 [Image by the Author].
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的 Web 应用截图，展示了我们如何预测区域 = 1 和消费者类型 = 212 的能耗 [作者提供的图片]。
- en: 'The data points have an hourly resolution. For example: "2023–04–15 21:00Z",
    "2023–04–15 20:00Z", "2023–04–15 19:00Z", etc.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 数据点的分辨率为每小时。例如：“2023–04–15 21:00Z”，“2023–04–15 20:00Z”，“2023–04–15 19:00Z”等等。
- en: We will model the data as multiple time series. Each unique **price area** and
    **consumer type tuple represents its** unique time series.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将数据建模为多个时间序列。每个独特的**价格区域**和**消费者类型元组代表其**唯一的时间序列。
- en: Thus, we will build a model that independently forecasts the energy consumption
    for the next 24 hours for every time series.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们将构建一个模型，独立预测每个时间序列的未来 24 小时的能耗。
- en: '*Check out the video below to better understand what the data looks like* 👇'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '*查看下面的视频以更好地了解数据的样子* 👇'
- en: Course & data source overview [Video by the Author].
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 课程与数据源概述 [作者提供的视频]。
- en: 'Lesson 7: Deploy All the ML Components to GCP. Build a CI/CD Pipeline Using
    Github Actions.'
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 7 课：将所有机器学习组件部署到 GCP。使用 GitHub Actions 构建 CI/CD 管道。
- en: The goal of Lesson 7
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第 7 课的目标
- en: 'Within Lesson 7, I will teach you 2 things:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在第 7 课中，我将教你 2 件事：
- en: How to manually deploy the 3 ML pipelines and the web app to GCP.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何手动将 3 个机器学习管道和 Web 应用部署到 GCP。
- en: How to automate the deployment process with a CI/CD pipeline using GitHub Actions.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何使用 GitHub Actions 自动化部署过程。
- en: '![](../Images/a0fb9d4a6918ea3cfabd95f66a8c7fc3.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a0fb9d4a6918ea3cfabd95f66a8c7fc3.png)'
- en: Diagram of the final architecture with the Lesson 7 components highlighted in
    blue [Image by the Author].
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 最终架构图，Lesson 7 的组件以蓝色突出显示 [作者提供的图片]。
- en: In other words, you will take everything you have done so far and show it to
    the world.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，你将展示到目前为止所做的一切。
- en: As long your work sits on your computer, it can be the best ML solution in the
    world, but unfortunately, it won't add any value.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 只要你的工作停留在你的计算机上，它可能是世界上最好的机器学习解决方案，但不幸的是，它不会带来任何价值。
- en: Knowing how to deploy your code is critical to any project.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 了解如何部署你的代码对任何项目至关重要。
- en: So remember…
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 所以记住…
- en: We will use GCP as the cloud provider and GitHub Actions as the CI/CD tool.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 GCP 作为云提供商，GitHub Actions 作为 CI/CD 工具。
- en: Theoretical Concepts & Tools
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理论概念与工具
- en: '**CI/CD:** CI/CD stands for continuous integration and continuous delivery.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**CI/CD:** CI/CD 代表持续集成和持续交付。'
- en: The CI step mainly consists of building and testing your code every time you
    push code to git.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: CI 步骤主要包括每次你将代码推送到 git 时构建和测试你的代码。
- en: 'The CD step automatically deploys your code to multiple environments: dev,
    staging, and production.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: CD 步骤会自动将你的代码部署到多个环境：开发、测试和生产。
- en: Depending on your specific software requirements, you need or do not need all
    the specifications of a standard CI/CD pipeline.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你的具体软件需求，你可能需要或不需要标准 CI/CD 管道的所有规范。
- en: For example, you might work on a proof of concept. Then a staging environment
    might be overkill. But having a dev and production CD pipeline will drastically
    improve your productivity.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你可能正在进行一个概念验证。然后测试环境可能会显得多余。但拥有一个开发和生产 CD 管道将极大地提高你的生产力。
- en: '**GitHub Actions:** GitHub Actions is one of the most popular CI/CD tools out
    there in the wild. It is directly integrated into your GitHub repository. The
    sweet part is that you don''t need any VMs to run your CI/CD pipeline. Everything
    is running on GitHub''s computers.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**GitHub Actions:** GitHub Actions 是目前最流行的 CI/CD 工具之一。它直接集成在你的 GitHub 仓库中。最棒的是你不需要任何虚拟机来运行
    CI/CD 管道。一切都在 GitHub 的计算机上运行。'
- en: You need to specify a set of rules within a YAML file, and GitHub Actions will
    take care of the rest. I will show you how it works in this article.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要在 YAML 文件中指定一组规则，GitHub Actions 将处理其余的部分。我将在本文中向你展示它是如何工作的。
- en: '***GitHub Actions*** *is entirely* ***free*** *for public repositories. How
    awesome is that?*'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '***GitHub Actions*** *完全* ***免费*** *用于公共仓库。这多么棒啊？*'
- en: As a side note. Using GitHub Actions, you can trigger any job based on various
    repository events, but using it as a CI/CD tool is the most common use case.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便提一下。使用 GitHub Actions，你可以基于各种仓库事件触发任何作业，但将其作为 CI/CD 工具使用是最常见的用例。
- en: 'Lesson 7: Code'
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第七课：代码
- en: '[You can access the GitHub repository here.](https://github.com/iusztinpaul/energy-forecasting)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '[你可以在这里访问 GitHub 仓库。](https://github.com/iusztinpaul/energy-forecasting)'
- en: '**Note:** All the installation instructions are in the READMEs of the repository.
    Here you will jump straight to the code.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 所有的安装说明都在仓库的 README 中。这里你将直接跳转到代码部分。'
- en: '*The code and instructions for Lesson 7 are under the following:*'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '*第七课的代码和说明在以下位置：*'
- en: '[***deploy/***](https://github.com/iusztinpaul/energy-forecasting/tree/main/deploy)—
    Docker and shell deploying files'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[***deploy/***](https://github.com/iusztinpaul/energy-forecasting/tree/main/deploy)—
    Docker 和 shell 部署文件'
- en: '[***.github/workflows***](https://github.com/iusztinpaul/energy-forecasting/tree/main/.github/workflows)
    — GitHub Actions CI/CD workflows'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[***.github/workflows***](https://github.com/iusztinpaul/energy-forecasting/tree/main/.github/workflows)
    — GitHub Actions CI/CD 工作流'
- en: '[***README_DEPLOY***](https://github.com/iusztinpaul/energy-forecasting/blob/main/README_DEPLOY.md)
    — README dedicated to deploying the code to GCP'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[***README_DEPLOY***](https://github.com/iusztinpaul/energy-forecasting/blob/main/README_DEPLOY.md)
    — 用于将代码部署到 GCP 的 README'
- en: '***README_CICD*** — README dedicated to setting up the CI/CD pipeline'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***README_CICD*** — 用于设置 CI/CD 管道的 README'
- en: Prepare Credentials
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备凭证
- en: Directly storing credentials in your git repository is a huge security risk.
    That is why you will inject sensitive information using a **.env** file.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 直接在你的 git 仓库中存储凭证是巨大的安全隐患。这就是为什么你需要通过 **.env** 文件注入敏感信息。
- en: The **.env.default** is an example of all the variables you must configure.
    It is also helpful to store default values for attributes that are not sensitive
    (e.g., project name).
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**.env.default** 是你必须配置的所有变量的示例。它也有助于存储非敏感属性的默认值（例如，项目名称）。'
- en: '![](../Images/87b81fc121cea9485a6b41dd4d656eb8.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/87b81fc121cea9485a6b41dd4d656eb8.png)'
- en: A screenshot of the .env.default file [Image by the Author].
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: .env.default 文件的截图 [作者提供的图片]。
- en: To replicate this article, you must set up all the infrastructure and services
    used during the [course](https://towardsdatascience.com/tagged/full-stack-mlops).
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 要复制这篇文章，你必须设置课程期间使用的所有基础设施和服务 [课程](https://towardsdatascience.com/tagged/full-stack-mlops)。
- en: '*2 main components can be deployed separately.*'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '*2 个主要组件可以单独部署。*'
- en: '**#1\. The 3 ML pipelines:**'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**#1\. 三个 ML 管道：**'
- en: Feature Pipeline
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 特征管道
- en: Training Pipeline
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 训练管道
- en: Batch Prediction Pipeline
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 批量预测管道
- en: 'For **#1.**, you have to set up the following:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 **#1.**，你需要设置以下内容：
- en: '[*Hopsworks*](https://www.hopsworks.ai/) *(free)* — Feature Store: [Lesson
    1](/a-framework-for-building-a-production-ready-feature-engineering-pipeline-f0b29609b20f)'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*Hopsworks*](https://www.hopsworks.ai/) *(免费)* — 特征存储：[Lesson 1](/a-framework-for-building-a-production-ready-feature-engineering-pipeline-f0b29609b20f)'
- en: '[*W&B*](https://wandb.ai/site) *(free)*— ML Platform: [Lesson 2](/a-guide-to-building-effective-training-pipelines-for-maximum-results-6fdaef594cee)'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*W&B*](https://wandb.ai/site) *(免费)*— ML平台：[Lesson 2](/a-guide-to-building-effective-training-pipelines-for-maximum-results-6fdaef594cee)'
- en: '[*GCS buckets*](https://cloud.google.com/storage) *(free)* — Storage on GCP:
    [Lesson 3](/unlock-the-secret-to-efficient-batch-prediction-pipelines-using-python-a-feature-store-and-gcs-17a1462ca489)'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*GCS桶*](https://cloud.google.com/storage) *(免费)* — GCP上的存储：[Lesson 3](/unlock-the-secret-to-efficient-batch-prediction-pipelines-using-python-a-feature-store-and-gcs-17a1462ca489)'
- en: '[*Airflow*](https://airflow.apache.org/) *(free)*— Open source orchestration
    tool: [Lesson 4](/unlocking-mlops-using-airflow-a-comprehensive-guide-to-ml-system-orchestration-880aa9be8cff)'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*Airflow*](https://airflow.apache.org/) *(免费)*— 开源编排工具：[Lesson 4](/unlocking-mlops-using-airflow-a-comprehensive-guide-to-ml-system-orchestration-880aa9be8cff)'
- en: '**#2\. Web App:**'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '**#2\. Web应用：**'
- en: '[*FastAPI*](https://fastapi.tiangolo.com/) *backend (free)*: [Lesson 6](https://medium.com/towards-data-science/fastapi-and-streamlit-the-python-duo-you-must-know-about-72825def1243)'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*FastAPI*](https://fastapi.tiangolo.com/) *后端（免费）*：[Lesson 6](https://medium.com/towards-data-science/fastapi-and-streamlit-the-python-duo-you-must-know-about-72825def1243)'
- en: '[*Streamlit*](https://streamlit.io/) *Predictions Dashboard (free)*: [Lesson
    6](https://medium.com/towards-data-science/fastapi-and-streamlit-the-python-duo-you-must-know-about-72825def1243)'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*Streamlit*](https://streamlit.io/) *预测仪表盘（免费）*：[Lesson 6](https://medium.com/towards-data-science/fastapi-and-streamlit-the-python-duo-you-must-know-about-72825def1243)'
- en: '[*Streamlit*](https://streamlit.io/) *Monitoring Dashboard (free)*: [Lesson
    6](https://medium.com/towards-data-science/fastapi-and-streamlit-the-python-duo-you-must-know-about-72825def1243)'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*Streamlit*](https://streamlit.io/) *监控仪表盘（免费）*：[Lesson 6](https://medium.com/towards-data-science/fastapi-and-streamlit-the-python-duo-you-must-know-about-72825def1243)'
- en: Fortunately, for **#2.**, you have to set up only the GCP [GCS buckets](https://cloud.google.com/storage)
    used as storage.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，对于**#2.**，你只需要设置用作存储的GCP [GCS桶](https://cloud.google.com/storage)。
- en: But note that if you do only section **#2.**, you won't have any data to consume
    within your web app.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 但请注意，如果你只完成**#2.**部分，你的Web应用中不会有任何数据可供使用。
- en: We don't want to overflow this article with boring stuff, such as setting up
    credentials. Still, fortunately, if you're going to implement and replicate the
    entire [course](https://towardsdatascience.com/tagged/full-stack-mlops), you have
    step-by-step instructions in previous articles and the [GitHub README](https://github.com/iusztinpaul/energy-forecasting).
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不想让这篇文章充满无聊的内容，比如设置凭证。不过幸运的是，如果你打算实现和复制整个[课程](https://towardsdatascience.com/tagged/full-stack-mlops)，你可以在之前的文章中找到一步步的说明和[GitHub
    README](https://github.com/iusztinpaul/energy-forecasting)。
- en: If you want to see (and not replicate) how we deployed our code to GCP and built
    the GitHub Actions workflows, you don't have to bother with any of the credentials.
    Just proceed to the following sections ✌️
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想查看（而不是复制）我们如何将代码部署到GCP并构建GitHub Actions工作流，你无需担心任何凭证。只需继续查看以下部分 ✌️
- en: '**NOTE:** The only service that doesn’t have a freemium plan is within this
    lesson. *When I wrote this course, deploying and testing the infrastructure on
    GCP cost me ~20$.* But I had a brand new GCP account that offered me 300$ in GCP
    credits, thus indirectly making it free of charge. Just remember to delete all
    the GCP resources when you are done, and you will be OK.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 唯一没有免费计划的服务就在这个课程中。*当我编写这个课程时，部署和测试GCP上的基础设施花费了我大约20美元。* 但我有一个全新的GCP账户，提供了300美元的GCP信用，因此间接使其免费。只要记得在完成后删除所有GCP资源，你就会没问题的。'
- en: Manually Deploy to GCP
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 手动部署到GCP
- en: 'So, let''s manually deploy the *2 main components* to GCP:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，让我们手动将*2个主要组件*部署到GCP：
- en: ML Pipeline
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ML管道
- en: Web App
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web应用
- en: But, as a first step, let's *set up all the GCP resources we need for the deployment*.
    After, you will SSH to your machines and deploy your code.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，作为第一步，让我们*设置所有部署所需的GCP资源*。之后，你将通过SSH连接到你的机器并部署你的代码。
- en: '[*For more info, access the GitHub deployment README.*](https://github.com/iusztinpaul/energy-forecasting/blob/main/README_DEPLOY.md)'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '[*更多信息，请访问GitHub部署README。*](https://github.com/iusztinpaul/energy-forecasting/blob/main/README_DEPLOY.md)'
- en: '***Set Up Resources***'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '***设置资源***'
- en: 'Let’s go to your GCP *energy_consumption* project and create the following
    resources:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们去你的GCP *energy_consumption* 项目中创建以下资源：
- en: Admin VM Service Account with IAP Access
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 具有IAP访问权限的Admin VM服务账户
- en: Expose Ports Firewall Rule
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 公开端口的防火墙规则
- en: IAP for TCP Tunneling Firewall Rule
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: IAP 用于 TCP 隧道的防火墙规则
- en: VM for the Pipeline
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用于管道的 VM
- en: VM for the Web App
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用于 Web 应用的 VM
- en: External Static IP
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 外部静态 IP
- en: Don’t get discouraged by the fancy names. You will have access to step-by-step
    guides using this article + the GCP documentation I will provide.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 不要被华丽的名称吓到。您将通过这篇文章和我提供的 GCP 文档访问逐步指南。
- en: '**Note:** If you don’t plan to replicate the infrastructure on your GCP infrastructure,
    skip the ***“Set Up Resources”*** section and go directly to “***Deploy the ML
    Pipeline”***.'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 如果您不打算在您的 GCP 基础设施上复制该基础设施，请跳过 ***“设置资源”*** 部分，直接进入“***部署 ML 管道”***。'
- en: '*#1\. Admin VM Service Account with IAP Access*'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '*#1\. 具有 IAP 访问权限的管理员 VM 服务账户*'
- en: We need a new GCP service account with admin rights & IAP access to the GCP
    VMs.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要一个新的 GCP 服务账户，具有管理员权限和对 GCP VMs 的 IAP 访问权限。
- en: 'You have to create a new service account and assign to it the following roles:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须创建一个新的服务账户并分配以下角色：
- en: Compute Instance Admin (v1)
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算实例管理员 (v1)
- en: IAP-secured Tunnel User
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IAP 保护的隧道用户
- en: Service Account Token Creator
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务账户令牌创建者
- en: Service Account User
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务账户用户
- en: 'IAP stands for Identity-Aware Proxy. It is a way to create tunnels that route
    TCP traffic inside your private network. For your knowledge, you can read more
    about this topic using the following docs (you don''t have to understand it to
    proceed to the next steps):'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: IAP 代表身份感知代理。这是一种创建隧道以在您的私有网络内部路由 TCP 流量的方式。为了您的了解，您可以通过以下文档了解更多信息（您不必理解它才能继续下一步）：
- en: '[Using IAP for TCP forwarding](https://cloud.google.com/iap/docs/using-tcp-forwarding)
    [2]'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 IAP 进行 TCP 转发](https://cloud.google.com/iap/docs/using-tcp-forwarding)
    [2]'
- en: '[Overview of TCP forwarding](https://cloud.google.com/iap/docs/tcp-forwarding-overview)
    [3]'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[TCP 转发概述](https://cloud.google.com/iap/docs/tcp-forwarding-overview) [3]'
- en: '*#2\. Expose Ports Firewall Rule*'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '*#2\. 公开端口的防火墙规则*'
- en: 'Create a firewall rule that exposes the following TCP ports: 8501, 8502, and
    8001.'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个防火墙规则，公开以下 TCP 端口：8501、8502 和 8001。
- en: Also, add a *target tag* called *energy-forecasting-expose-ports*.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，添加一个名为 *energy-forecasting-expose-ports* 的 *目标标签*。
- en: 'Here are 2 docs that helped us create and configure the ports for the firewall
    rule:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有 2 个文档帮助我们创建和配置防火墙规则的端口：
- en: '[How to open a specific port such as 9090 in Google Compute Engine](https://stackoverflow.com/questions/21065922/how-to-open-a-specific-port-such-as-9090-in-google-compute-engine)
    [4]'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何在 Google Compute Engine 中打开特定端口，例如 9090](https://stackoverflow.com/questions/21065922/how-to-open-a-specific-port-such-as-9090-in-google-compute-engine)
    [4]'
- en: '[How to Open Firewall Ports on a GCP Compute Engine Instance](https://www.howtogeek.com/devops/how-to-open-firewall-ports-on-a-gcp-compute-engine-instance/)
    [5]'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何在 GCP Compute Engine 实例上打开防火墙端口](https://www.howtogeek.com/devops/how-to-open-firewall-ports-on-a-gcp-compute-engine-instance/)
    [5]'
- en: Here is what our firewall rule looks like 👇
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们的防火墙规则的样子 👇
- en: '![](../Images/97e2efc2f96dec4a2003b681538dc4a1.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/97e2efc2f96dec4a2003b681538dc4a1.png)'
- en: Screenshot of the GCP "expose ports" firewall rule [Image by the Author].
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: GCP "公开端口" 防火墙规则的截图 [作者提供的图片]。
- en: '*#3\. IAP for TCP Tunneling Firewall Rule*'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '*#3\. IAP 用于 TCP 隧道的防火墙规则*'
- en: Now we will create a firewall rule allowing IAP for TCP Tunneling on all the
    VMs connected to the *default* network.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将创建一个防火墙规则，允许 IAP 对所有连接到 *default* 网络的 VM 进行 TCP 隧道。
- en: '[Step-by-step guide on how to create the IAP for TCP tunneling Firewall rule](https://cloud.google.com/iap/docs/using-tcp-forwarding#preparing_your_project_for_tcp_forwarding)
    [6].'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '[如何创建用于 TCP 隧道的 IAP 防火墙规则的逐步指南](https://cloud.google.com/iap/docs/using-tcp-forwarding#preparing_your_project_for_tcp_forwarding)
    [6]。'
- en: Here is what our firewall rule looks like 👇
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们的防火墙规则的样子 👇
- en: '![](../Images/b62ecb6aa11acc85634ecba689e6e98e.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b62ecb6aa11acc85634ecba689e6e98e.png)'
- en: Screenshot of the GCP "IAP TCP forwarding" firewall rule [Image by the Author].
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: GCP "IAP TCP 转发" 防火墙规则的截图 [作者提供的图片]。
- en: '*#4\. VM for the Pipeline*'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '*#4\. 用于管道的 VM*'
- en: Go to your GCP *energy_consumption* project -> VM Instances -> Create Instance.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 转到您的 GCP *energy_consumption* 项目 -> VM 实例 -> 创建实例。
- en: 'Choose *e2-standard-2: 2 vCPU cores — 8 GB RAM* as your VM instance type.'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '选择 *e2-standard-2: 2 vCPU 核心 — 8 GB RAM* 作为您的 VM 实例类型。'
- en: 'Call it: *ml-pipeline*'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 命名为：*ml-pipeline*
- en: Change the disk to *20 GB Storage*.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 将磁盘更改为 *20 GB 存储*。
- en: Pick region *europe-west3 (Frankfurt)*` and zone *europe-west3-c.* Here,you
    can pick any other region & zone, but if it is your first time doing this, we
    suggest you do it like us.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 选择区域 *europe-west3 (法兰克福)*` 和区域 *europe-west3-c.* 在这里，您可以选择任何其他区域和区域，但如果这是您第一次这样做，我们建议您像我们一样操作。
- en: 'Network: *default*'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 网络：*default*
- en: Also, check the *HTTP* and *HTTPS* boxes and add the *energy-forecasting-expose-ports*
    custom firewall rule we did a few steps back.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，勾选 *HTTP* 和 *HTTPS* 选项，并添加我们在几步前创建的 *energy-forecasting-expose-ports* 自定义防火墙规则。
- en: 'Here are 2 docs that helped me create and configure the ports for the firewall
    rule:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有两个文档帮助我创建和配置防火墙规则的端口：
- en: '[How to open a specific port such as 9090 in Google Compute Engine](https://stackoverflow.com/questions/21065922/how-to-open-a-specific-port-such-as-9090-in-google-compute-engine)
    [4]'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何在Google Compute Engine中打开特定端口，如9090](https://stackoverflow.com/questions/21065922/how-to-open-a-specific-port-such-as-9090-in-google-compute-engine)
    [4]'
- en: '[How to Open Firewall Ports on a GCP Compute Engine Instance](https://www.howtogeek.com/devops/how-to-open-firewall-ports-on-a-gcp-compute-engine-instance/)
    [5]'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何在GCP Compute Engine实例上打开防火墙端口](https://www.howtogeek.com/devops/how-to-open-firewall-ports-on-a-gcp-compute-engine-instance/)
    [5]'
- en: '*#5\. VM for the Web App*'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '*#5\. Web应用程序的VM*'
- en: Now let's repeat a similar process for the Web App VM, but with slightly different
    settings.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们对Web应用程序VM重复类似的过程，但设置略有不同。
- en: 'This time choose *e2-micro: 0.25 2 vCPU — 1 GB memory* as your VM instance
    type.'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '这次选择 *e2-micro: 0.25 2 vCPU — 1 GB memory* 作为你的VM实例类型。'
- en: 'Call it: *app*'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 命名为：*app*
- en: Change the disk to *15 GB standard persisted disk*
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 将磁盘更改为 *15 GB标准持久磁盘*
- en: Pick region *europe-west3 (Frankfurt)* and zone *europe-west3-c.*
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 选择区域 *europe-west3 (Frankfurt)* 和区域 *europe-west3-c*。
- en: 'Network: *default*'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 网络：*default*
- en: Also, check the *HTTP* and *HTTPS* boxes and add the *energy-forecasting-expose-ports*
    custom firewall rule we created a few steps back.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，勾选 *HTTP* 和 *HTTPS* 选项，并添加我们在几步前创建的 *energy-forecasting-expose-ports* 自定义防火墙规则。
- en: '*#6\. External Static IP*'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '*#6\. 外部静态IP*'
- en: This is the last piece of the puzzle.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 这是最后一块拼图。
- en: If we want the external IP for our web app to be static (aka not to change),
    we have to attach a static address to our web app VM.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们希望我们的Web应用程序的外部IP保持静态（即不更改），我们必须为Web应用程序VM附加静态地址。
- en: We suggest adding it only to the *app* VM we created a few steps ahead.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 我们建议将其仅添加到我们之前创建的*app* VM中。
- en: Also, adding a static external IP to the ml-pipeline VM is perfectly fine.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，为ml-pipeline VM添加静态外部IP是完全可以的。
- en: '[Docs on reserving a static external IP address](https://cloud.google.com/compute/docs/ip-addresses/reserve-static-external-ip-address)
    [7].'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '[保留静态外部IP地址的文档](https://cloud.google.com/compute/docs/ip-addresses/reserve-static-external-ip-address)
    [7]。'
- en: '*Now that the boring part is finished let''s start deploying the code 👇*'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '*现在枯燥的部分结束了，我们开始部署代码 👇*'
- en: '**Deploy the ML Pipeline**'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '**部署ML管道**'
- en: As a first step, we must install the [gcloud GCP CLI tool](https://cloud.google.com/sdk/docs/install)
    to talk between our computer and the GCP VMs.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们必须安装 [gcloud GCP CLI工具](https://cloud.google.com/sdk/docs/install) 以便在我们的计算机和GCP
    VM之间进行通信。
- en: To authenticate, we will use the service account configured with admin rights
    for VMs and IAP access to SSH.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进行身份验证，我们将使用配置了VM和IAP SSH访问管理员权限的服务帐户。
- en: Now, we must tell the *gcloud GCP CLI* to use that *service account*.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们必须告诉 *gcloud GCP CLI* 使用那个 *service account*。
- en: To do so, you must create a key for your service account and download it as
    a JSON file. Same as you did for the buckets service accounts — [here are some
    docs to refresh your mind](https://cloud.google.com/iam/docs/keys-create-delete)
    [8].
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，你必须为你的服务帐户创建一个密钥并将其下载为JSON文件。与为存储桶服务帐户所做的相同——[这里有一些文档可以刷新你的记忆](https://cloud.google.com/iam/docs/keys-create-delete)
    [8]。
- en: 'After you download the file, you have to run the following *gcloud* command
    in your terminal:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 下载文件后，你需要在终端中运行以下 *gcloud* 命令：
- en: '[PRE0]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[Check out this doc for more details about the *gcloud* auth command](https://cloud.google.com/sdk/gcloud/reference/auth/activate-service-account).'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '[查看此文档以获取有关 *gcloud* 身份验证命令的更多详细信息](https://cloud.google.com/sdk/gcloud/reference/auth/activate-service-account)。'
- en: Now whenever you run commands with *gcloud*, it will use this service account
    to authenticate.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，每当你使用 *gcloud* 运行命令时，它将使用此服务帐户进行身份验证。
- en: 'Now let''s connect through SSH to the *ml-pipeline* GCP VM you created a few
    steps ahead:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们通过SSH连接到你在几步前创建的*ml-pipeline* GCP VM：
- en: '[PRE1]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**NOTE 1:** Change the *zone* if you haven''t created a VM within the same
    zone as us.'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**注意 1：** 如果你还没有在与我们相同的区域创建VM，请更改 *zone*。'
- en: '**NOTE 2:** Your *project-id* is NOT your *project name*. Go to your GCP projects
    list and find the project id.'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**注意 2：** 你的 *project-id* 不是你的 *project name*。前往你的GCP项目列表，找到项目ID。'
- en: Starting this point, if you configured the firewalls and service account correctly,
    as everything is Dockerized, all the steps will be 99% similar to those from the
    rest of the articles.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 从此点开始，如果你正确配置了防火墙和服务账户，由于一切都已 Docker 化，所有步骤将与其余文章中的步骤 99% 相似。
- en: Check out the Github README — [*Set Up Additional Tools*](https://github.com/iusztinpaul/energy-forecasting#tools)
    and [*Usage*](https://github.com/iusztinpaul/energy-forecasting#usage) sections
    for step-by-step instructions.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 查看 Github README — [*设置附加工具*](https://github.com/iusztinpaul/energy-forecasting#tools)
    和 [*使用*](https://github.com/iusztinpaul/energy-forecasting#usage) 部分获取逐步说明。
- en: You can follow the same steps while you are connected with SSH to the *ml-pipeline*
    GCP machine.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 当你通过 SSH 连接到 *ml-pipeline* GCP 机器时，可以按照相同的步骤操作。
- en: Note that the GCP machine is using Linux as its OS. Thus, you can directly copy
    & paste the commands from the README regardless of the OS you use on your local
    device.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，GCP 机器使用的是 Linux 操作系统。因此，无论你在本地设备上使用什么操作系统，都可以直接复制和粘贴 README 中的命令。
- en: '![](../Images/32e7843fcd3316cc38aaff22d935fa92.png)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/32e7843fcd3316cc38aaff22d935fa92.png)'
- en: Screenshot of connecting to the "app" VM using *gcloud* [Screenshot by the Author].
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 连接到 “app” 虚拟机的截图，使用 *gcloud* [作者提供的截图]。
- en: You can safely repeat all the steps you've done setting *The Pipeline* locally
    using this SSH connection, ***but you have to keep in mind the following 3 edge
    cases*:**
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以安全地重复你在本地设置 *流水线* 时所做的所有步骤，使用这个 SSH 连接，***但你必须注意以下 3 个边界情况*：**
- en: '*#1\. Clone the code in the home directory of the VM*'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '*#1\. 将代码克隆到虚拟机的主目录中*'
- en: 'Just SHH to the VM and run:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 只需 SSH 到虚拟机并运行：
- en: '[PRE2]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '*#2\. Install Docker using the following commands:*'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '*#2\. 使用以下命令安装 Docker：*'
- en: 'Install Docker:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Docker：
- en: '[PRE3]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Add sudo access to Docker:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 为 Docker 添加 sudo 权限：
- en: '[PRE4]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Login again to your machine:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 再次登录到你的机器：
- en: '[PRE5]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[Check out these docs for the full instructions](https://tomroth.com.au/gcp-docker/)
    [9].'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '[查看这些文档获取完整的说明](https://tomroth.com.au/gcp-docker/) [9]。'
- en: '*#3\. Replace all* ***cp*** *commands with* ***gcloud******compute******scp****:*'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '*#3\. 用* ***gcloud******compute******scp**** *替换所有* ***cp*** *命令：*'
- en: This command will help you to copy files from your local machine to the VM.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令将帮助你将文件从本地机器复制到虚拟机中。
- en: 'For example, instead of running:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，代替运行：
- en: '[PRE6]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Run in a different terminal (not the one connected with SSH to your VM):'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 在不同的终端中运行（不是连接到虚拟机的 SSH 终端）：
- en: '[PRE7]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This command will copy your local *admin-buckets.json* file to the *ml-pipeline*
    VM.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令将把你本地的 *admin-buckets.json* 文件复制到 *ml-pipeline* 虚拟机中。
- en: After setting up your code on the *ml-pipeline GCP VM,*go to your VM view from
    GCP and the *Network tags* section. There you will find the *External IP address*
    column, as shown in the image below. Copy that IP and attach port *8080* to it.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 在你设置好代码之后，前往 GCP 的虚拟机视图和 *网络标签* 部分。在那里你会找到 *外部 IP 地址* 列，如下图所示。复制该 IP 并将端口 *8080*
    附加到它上面。
- en: 'For example, based on the *External IP address* from the image below, I accessed
    Airflow using this address: *35.207.134.188:8080*.'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，根据下面图片中的 *外部 IP 地址*，我使用以下地址访问了 Airflow：*35.207.134.188:8080*。
- en: '*Congrats! You connected to your own self-hosted Airflow application.*'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '*恭喜！你已连接到你自己托管的 Airflow 应用。*'
- en: '**Note:** If it doesn''t connect, give it a few seconds to load properly.'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 如果无法连接，请稍等几秒钟以便正确加载。'
- en: '![](../Images/761ce29a89b33a55d06a796a2a7a6037.png)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/761ce29a89b33a55d06a796a2a7a6037.png)'
- en: Screenshot of the "app" GCP VM configurations [Image by the Author].
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: “app” GCP 虚拟机配置的截图 [作者提供的图片]。
- en: '**Deploy the Web App**'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '**部署 Web 应用**'
- en: 'Let''s connect using SSH to the *“app” GCP VM* you created a few steps ahead:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用 SSH 连接到你在前面几步创建的 *“app” GCP 虚拟机*：
- en: '[PRE8]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**NOTE 1:** Change the *zone* if you haven''t created a VM within the same
    zone as us.'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**注意 1：** 如果你没有在与我们相同的区域创建虚拟机，请更改 *区域*。'
- en: '**NOTE 2:** Your *project-id* is NOT your *project name*. Go to your GCP projects
    list and find the project id.'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**注意 2：** 你的 *project-id* 不是你的 *项目名称*。请前往你的 GCP 项目列表，找到项目 ID。'
- en: Here the process is similar to the one described in the *“****Deploy the ML
    Pipeline”*** section*.*
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的过程与 *“****部署 ML 流水线”*** 部分描述的类似*。
- en: You can deploy the web app following the steps described in [Lesson 6](https://medium.com/towards-data-science/fastapi-and-streamlit-the-python-duo-you-must-know-about-72825def1243)
    or in the GitHub repository's [Set Up Additional Tools](https://github.com/iusztinpaul/energy-forecasting#tools)
    & [Usage](https://github.com/iusztinpaul/energy-forecasting#usage) sections.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以按照 [Lesson 6](https://medium.com/towards-data-science/fastapi-and-streamlit-the-python-duo-you-must-know-about-72825def1243)
    或 GitHub 仓库的 [设置附加工具](https://github.com/iusztinpaul/energy-forecasting#tools)
    和 [使用方法](https://github.com/iusztinpaul/energy-forecasting#usage) 部分来部署 Web 应用。
- en: But don’t forget to keep in mind the 3 edge cases described in the “**Deploy
    the ML Pipeline” section.**
  id: totrans-244
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 但不要忘记关注 “**部署 ML 流水线**” 部分描述的 3 个边界情况。
- en: Please excuse me for referring you to so much external documentation on how
    to set up this stuff. The article is too long, and I didn't want to replicate
    the GCP Google documentation here.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 请原谅我参考了这么多关于如何设置这些内容的外部文档。文章太长了，我不想在这里重复 GCP Google 的文档。
- en: CI/CD Pipeline Using GitHub Actions (free)
  id: totrans-246
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 GitHub Actions 的 CI/CD 流水线（免费）
- en: The GitHub Actions YAML files are under the [***.github/workflows***](https://github.com/iusztinpaul/energy-forecasting/tree/main/.github/workflows)
    directory.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Actions YAML 文件位于 [***.github/workflows***](https://github.com/iusztinpaul/energy-forecasting/tree/main/.github/workflows)
    目录下。
- en: Firstly, let me explain the main components you have to know about a GitHub
    Actions file 👇
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我解释一下你需要了解的 GitHub Actions 文件的主要组件 👇
- en: Using the "**on -> push -> branches:"** section, you specify which branch to
    listen to for events. In this case, the GitHub Action is triggered when new code
    is committed to the **"main"** branch.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 "**on -> push -> branches:"** 部分，你指定要监听的分支事件。在这种情况下，当有新代码提交到 **"main"** 分支时，GitHub
    Action 将被触发。
- en: 'In the "**env: "**section, you can declare the environment variables you need
    inside the script.'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: '在 "**env: "** 部分，你可以在脚本中声明所需的环境变量。'
- en: In the **"jobs -> ci_cd -> steps:"** section, you will declare the CI/CD pipeline
    steps, which will run sequentially.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 在 **"jobs -> ci_cd -> steps:"** 部分，你将声明 CI/CD 流水线步骤，这些步骤将按顺序运行。
- en: In the **"jobs -> ci_cd -> runs-on:"** section, you specify the image of the
    VM you want the steps to run on.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 在 **"jobs -> ci_cd -> runs-on:"** 部分，你需要指定步骤要运行的虚拟机镜像。
- en: Now, let's take a look at some actual GitHub Action files 🔥
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看一些实际的 GitHub Action 文件 🔥
- en: '[**ML Pipeline GitHub Actions YAML file**](https://github.com/iusztinpaul/energy-forecasting/blob/main/.github/workflows/ci_cd_ml_pipeline.yml)'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '[**ML Pipeline GitHub Actions YAML 文件**](https://github.com/iusztinpaul/energy-forecasting/blob/main/.github/workflows/ci_cd_ml_pipeline.yml)'
- en: The action will be triggered when new code is committed to the **"main"** branch,
    except for the web app directories and the YAML and Markdown files.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 当新代码提交到 **"main"** 分支时，除了 Web 应用目录和 YAML 及 Markdown 文件外，该操作将被触发。
- en: We added environment variables that contain information about the GCP project
    and VM.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 我们添加了包含 GCP 项目和 VM 信息的环境变量。
- en: 'As for the CI/CD steps, we mainly do 2 things:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 CI/CD 步骤，我们主要做两件事：
- en: configure the credentials & authenticate to GCP,
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置凭证并认证到 GCP，
- en: 'connect with SSH on the given GCP VM and run a command that: goes to the code
    directory, pulls the latest changes, builds the Python packages, and deploys them
    to the PyPi registry. Now Airflow will use the new Python packages the next time
    it runs.'
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过 SSH 连接到指定的 GCP VM 并运行一个命令，该命令：进入代码目录，拉取最新更改，构建 Python 包，并将其部署到 PyPi 注册表。现在，Airflow
    下次运行时将使用新的 Python 包。
- en: Basically, it does what you would have done manually, but now, everything is
    nicely automated using GitHub Actions.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，它做了你手动完成的工作，但现在，一切都通过 GitHub Actions 自动化了。
- en: Note that you don't have to remember or know how to write a GitHub Actions file
    from scratch, as you can find already written templates for most of the use cases.
    For example, here is the [*google-github-actions/ssh-compute*](https://github.com/google-github-actions/ssh-compute)
    [11] repository we used to write the YAML file below.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，你不必记住或知道如何从零编写 GitHub Actions 文件，因为你可以找到大多数使用场景的现成模板。例如，这里是我们用来编写下面 YAML
    文件的 [*google-github-actions/ssh-compute*](https://github.com/google-github-actions/ssh-compute)
    [11] 仓库。
- en: You will find similar templates for almost any use case you have in mind.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以找到几乎任何你想到的使用场景的类似模板。
- en: '[**Web App GitHub Actions YAML file**](https://github.com/iusztinpaul/energy-forecasting/blob/main/.github/workflows/ci_cd_web_app.yml)'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '[**Web App GitHub Actions YAML 文件**](https://github.com/iusztinpaul/energy-forecasting/blob/main/.github/workflows/ci_cd_web_app.yml)'
- en: 'The Web App actions file is 90% the same as the one used for the ML pipeline,
    except for the following:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: Web 应用的 actions 文件与用于 ML 流水线的文件 90% 相同，除了以下内容：
- en: we ignore the ML pipeline files;
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们忽略了 ML 流水线文件；
- en: we run a docker command that builds and runs the web app.
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们运行一个构建和运行 Web 应用的 Docker 命令。
- en: 'But where does the "**${{ vars… }}"** weird syntax come from? I will explain
    in just a sec, but what you have to know now is the following:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 但“**${{ vars… }}"** 这种奇怪的语法来自哪里？我马上会解释，但你现在需要知道的是：
- en: “**${{ vars.<name> }}”:**variables set inside GitHub;
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '"**${{ vars.<name> }}":** 在 GitHub 内部设置的变量；'
- en: '![](../Images/206d07d81bb7ac16fc28daae15a6d535.png)'
  id: totrans-269
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/206d07d81bb7ac16fc28daae15a6d535.png)'
- en: “**${{ secrets.<name> }}":** secrets set inside GitHub. Once a secret is set,
    you can't see it anymore (the variables you can);
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '"**${{ secrets.<name> }}":** 在 GitHub 内部设置的秘密。一旦设置了秘密，你将无法再看到它（你可以看到变量）；'
- en: '![](../Images/d2e0ca9a85083a9bb94604bdf3f1ce92.png)'
  id: totrans-271
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d2e0ca9a85083a9bb94604bdf3f1ce92.png)'
- en: '"**${{ env.<name> }}":** environment variables set in the "env:" section.'
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '"**${{ env.<name> }}":** 在 "env:" 部分设置的环境变量。'
- en: '**Important Observation**'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '**重要观察**'
- en: The YAML file above doesn't contain the CI part, only the CD one.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的 YAML 文件不包含 CI 部分，仅包含 CD 部分。
- en: To follow good practices for a robust CI pipeline, you should run an action
    that builds the Docker images and pushes them to a Docker registry.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 为了遵循稳健 CI 流水线的最佳实践，你应该运行一个构建 Docker 镜像并将其推送到 Docker 注册表的操作。
- en: Afterward, you would SSH to a testing environment and run your test suit. As
    a final step, you would SSH to the production VM, pull the images and run them.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，你将通过 SSH 进入测试环境并运行测试套件。最后一步，你将通过 SSH 进入生产虚拟机，拉取镜像并运行它们。
- en: The series got too long, and we wanted to keep it simple, but *the good news
    is that you learned all the necessary tools and principles to do what we described
    above*.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 系列太长了，我们想保持简单，但 *好消息是你已经学会了执行上述操作所需的所有工具和原则*。
- en: Set Secrets and Variables
  id: totrans-278
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 Secrets 和 Variables
- en: At this point, you have to fork the [energy-consumption repository](https://github.com/iusztinpaul/energy-forecasting/tree/main)
    to configure the GitHub Actions credentials with your own.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，你需要 fork [energy-consumption 仓库](https://github.com/iusztinpaul/energy-forecasting/tree/main)
    以用你自己的凭据配置 GitHub Actions。
- en: '[Check out this doc to see how to fork a repository on GitHub](https://docs.github.com/en/get-started/quickstart/fork-a-repo)
    [10].'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '[查看这篇文档以了解如何在 GitHub 上 fork 一个仓库](https://docs.github.com/en/get-started/quickstart/fork-a-repo)
    [10]。'
- en: '**Set Actions Variables**'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '**设置 Actions 变量**'
- en: 'Go to your forked repository. After click on: *"Settings -> Secrets and variables
    -> Actions."*'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 进入你的 fork 仓库。点击 *"Settings -> Secrets and variables -> Actions"*。
- en: Now, click "*Variables."* You can create a new variable by clicking *"New repository
    variable."* See the image below 👇
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，点击 "*Variables"*。你可以通过点击 *"New repository variable"* 来创建一个新变量。见下图 👇
- en: '![](../Images/77290affdaf28b1c0a7e8e582dde9ed8.png)'
  id: totrans-284
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/77290affdaf28b1c0a7e8e582dde9ed8.png)'
- en: Screenshot of how to create a new repository variable [Image by the Author].
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 创建新仓库变量的截图 [作者提供的图片]。
- en: '*You have to create 5 variables that the GitHub Actions scripts will use:*'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '*你需要创建 5 个 GitHub Actions 脚本将使用的变量：*'
- en: '***APP_INSTANCE_NAME***: the name of the web app VM. In our case, it is called
    "*app"*. The default should be OK if you use our recommended naming conventions.'
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***APP_INSTANCE_NAME***: Web 应用虚拟机的名称。在我们的例子中，它被称为 "*app"*。如果你使用我们推荐的命名约定，默认值应该没问题。'
- en: '**GCLOUD_PROJECT**: the ID of your GCP Project. Here, you have to change it
    with your project ID.'
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GCLOUD_PROJECT**: 你 GCP 项目的 ID。在这里，你需要用你的项目 ID 替换它。'
- en: '**ML_PIPELINE_INSTANCE_NAME**: the name of the ML pipeline VM. In our case,
    it is "*ml-pipeline"*. The default should be OK if you use our recommended naming
    conventions.'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ML_PIPELINE_INSTANCE_NAME**: ML 流水线虚拟机的名称。在我们的例子中，它是 "*ml-pipeline"*。如果你使用我们推荐的命名约定，默认值应该没问题。'
- en: '**USER:** the user you used to connect to the VMs while settings up the machine
    using the SSH connection. Mine was "*pauliusztin,"* but you must change it with
    yours. Go to the VM and run `echo $USER` .'
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**USER:** 你用来通过 SSH 连接到虚拟机的用户。在设置机器时我用的是 "*pauliusztin,*" 但你必须用你自己的用户名替换它。去虚拟机上运行
    `echo $USER`。'
- en: '**ZONE**: the zone where you deployed the VMs. The default should be OK if
    you use our recommended naming conventions.'
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ZONE**: 你部署虚拟机的区域。如果你使用我们推荐的命名约定，默认值应该没问题。'
- en: '**Set Action Secrets**'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: '**设置 Action 密钥**'
- en: In the same *"Secrets and variables/Actions"* section, hit the *"Secrets"* tab.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 在相同的 *"Secrets and variables/Actions"* 部分，点击 *"Secrets"* 标签。
- en: You can create a new secret by pressing the “*New repository secret”* button.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过点击 "*New repository secret*" 按钮来创建一个新的秘密。
- en: These are similar to the variables we just completed, but after you fill in
    their values, you can't see them anymore. That is why these are called secrets.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 这些类似于我们刚刚完成的变量，但在你填写它们的值后，你将无法再看到它们。这就是为什么这些被称为秘密的原因。
- en: Here is where you add all your sensitive information. In our case, the GCP credentials
    and private keys. See the image below 👇
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是你添加所有敏感信息的地方。在我们的案例中，即 GCP 凭据和私钥。请参见下面的图片 👇
- en: '![](../Images/711957b341193790f0d96ab36562a3cb.png)'
  id: totrans-297
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/711957b341193790f0d96ab36562a3cb.png)'
- en: Screenshot of how to create a new repository secret [Image by the Author].
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 创建新仓库秘密的截图 [图片来源：作者]。
- en: The *GCP_CREDENTIALS* secret contains the content of the JSON key of your VM
    admin service account. By settings this up, the CI/CD pipeline will use that service
    account to authenticate to the VMs.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '*GCP_CREDENTIALS* 秘密包含了你虚拟机管理员服务账户的 JSON 密钥内容。通过设置这一点，CI/CD 流水线将使用该服务账户来对虚拟机进行身份验证。'
- en: 'Because the content of the file is in JSON format, to format it properly, you
    have to do the following steps:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 由于文件内容是 JSON 格式，为了正确格式化它，你需要执行以下步骤：
- en: 'Install the ***jq*** CLI tool:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 ***jq*** CLI 工具：
- en: '[PRE9]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Format your JSON key file:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 格式化你的 JSON 密钥文件：
- en: '[PRE10]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Take the output of this command and create your *GCP_CREDENTIALS* secret with
    it.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 获取此命令的输出并用它创建你的 *GCP_CREDENTIALS* 秘密。
- en: The *GCP_SSH_PRIVATE_KEY* is your GCP private SSH key (not your personal one
    — GCP creates an additional one automatically), which was created on your local
    computer when you used SSH to connect to the GCP VMs.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '*GCP_SSH_PRIVATE_KEY* 是你的 GCP 私有 SSH 密钥（不是你的个人密钥 — GCP 会自动创建一个额外的），它是在你使用 SSH
    连接到 GCP 虚拟机时在本地计算机上创建的。'
- en: 'To copy it, run the following:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 要复制它，请运行以下命令：
- en: '[PRE11]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Copy the output from the terminal and create the *GCP_SSH_PRIVATE_KEY* variable.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 复制终端中的输出并创建 *GCP_SSH_PRIVATE_KEY* 变量。
- en: '**Run the CI/CD Pipeline**'
  id: totrans-310
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**运行 CI/CD 流水线**'
- en: Now make any change to the code, push it to the main branch, and the GitHub
    Actions files should trigger automatically.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 现在对代码进行任何更改，推送到主分支，GitHub Actions 文件应该会自动触发。
- en: Check your GitHub repository's *“Actions”* tab to see their results.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 检查你 GitHub 仓库的 *“Actions”* 标签页以查看其结果。
- en: '![](../Images/2f0dbd5116f137e359a12e45ba458765.png)'
  id: totrans-313
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2f0dbd5116f137e359a12e45ba458765.png)'
- en: Screenshot of the GitHub Actions running logs on GitHub [Image by the Author].
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Actions 运行日志的截图 [图片来源：作者]。
- en: Two actions will be triggered. One will build and deploy the *ml-pipeline* modules
    to your *ml-pipeline GCP VM*, and one will build and deploy the *web app* to your
    *app GCP VM*.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 将触发两个动作。其中一个将构建和部署 *ml-pipeline* 模块到你的 *ml-pipeline GCP VM*，另一个将构建和部署 *web app*
    到你的 *app GCP VM*。
- en: Conclusion
  id: totrans-316
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Congratulations! You finished the **last lesson** from the **Full Stack 7-Steps
    MLOps Framework** course. It means that now you are a full-stack ML engineer 🔥
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜你！你完成了 **Full Stack 7-Steps MLOps Framework** 课程的**最后一课**。这意味着你现在是一名全栈 ML
    工程师 🔥
- en: I apologize again for the highly technical article. It isn't a very entertaining
    read but a crucial step for finalizing this series.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这篇高度技术性的文章，我再次表示歉意。它可能不是一篇非常有趣的阅读材料，但却是完成本系列的关键步骤。
- en: 'In lesson 7, you learned how to:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 在第 7 课中，你学习了如何：
- en: manually deploy the 3 ML pipelines to GCP;
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手动将 3 个 ML 流水线部署到 GCP；
- en: manually deploy the web app to GCP;
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手动将 Web 应用程序部署到 GCP；
- en: build a CI/CD pipeline to automate the deployment process using GitHub Actions.
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建一个 CI/CD 流水线，以使用 GitHub Actions 自动化部署过程。
- en: Now that you understand how to add real business value by deploying your ML
    system and putting it to work, it is time to build your awesome ML project.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你明白了如何通过部署你的 ML 系统并使其工作来增加实际业务价值，是时候构建你的精彩 ML 项目了。
- en: '*No project is perfectly built, and this one is no exception.*'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '*没有项目是完美构建的，这个项目也不例外。*'
- en: Thus, [check out our bonus lesson](https://medium.com/towards-data-science/imperfections-unveiled-the-intriguing-reality-behind-our-mlops-course-creation-6ff7d52ecb7e)
    of **The** **Full Stack 7-Steps MLOps Framework** course, where we will *openly
    discuss other design choices* we could have taken to *improve the ML system built
    during this course*.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，[查看我们额外的课程](https://medium.com/towards-data-science/imperfections-unveiled-the-intriguing-reality-behind-our-mlops-course-creation-6ff7d52ecb7e)
    **The** **Full Stack 7-Steps MLOps Framework** 课程，我们将 *公开讨论其他设计选择*，这些选择可以用来 *改善在本课程中构建的
    ML 系统*。
- en: I sincerely appreciate that you chose my course to learn MLE & MLOps✌️
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 我真诚地感谢你选择我的课程来学习 MLE 和 MLOps✌️
- en: Let’s connect on [LinkedIn](https://www.linkedin.com/in/pauliusztin/), and let
    me know if you have any questions or just share the awesome projects you built
    after this course.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [LinkedIn](https://www.linkedin.com/in/pauliusztin/) 上联系我，并告诉我如果你有任何问题，或者分享你在完成这个课程后构建的精彩项目。
- en: '[***Access the GitHub repository here.***](https://github.com/iusztinpaul/energy-forecasting)'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '[***在这里访问 GitHub 仓库。***](https://github.com/iusztinpaul/energy-forecasting)'
- en: 💡 My goal is to help machine learning engineers level up in designing and productionizing
    ML systems. Follow me on [LinkedIn](https://www.linkedin.com/in/pauliusztin/)
    or subscribe to my [weekly newsletter](https://pauliusztin.substack.com/) for
    more insights!
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 💡 我的目标是帮助机器学习工程师在设计和生产机器学习系统方面提升水平。关注我 [LinkedIn](https://www.linkedin.com/in/pauliusztin/)
    或订阅我的 [每周通讯](https://pauliusztin.substack.com/) 以获取更多见解！
- en: 🔥 If you enjoy reading articles like this and wish to support my writing, consider
    [becoming a Medium member](https://pauliusztin.medium.com/membership). Using [my
    referral link](https://pauliusztin.medium.com/membership), you can support me
    without extra cost while enjoying limitless access to Medium's rich collection
    of stories.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 🔥 如果你喜欢阅读这样的文章并希望支持我的写作，考虑 [成为 Medium 会员](https://pauliusztin.medium.com/membership)。使用
    [我的推荐链接](https://pauliusztin.medium.com/membership)，你可以在不增加额外费用的情况下支持我，同时享受对 Medium
    丰富故事库的无限访问。
- en: '[](https://pauliusztin.medium.com/membership?source=post_page-----96f676f72012--------------------------------)
    [## Join Medium with my referral link - Paul Iusztin'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://pauliusztin.medium.com/membership?source=post_page-----96f676f72012--------------------------------)
    [## 使用我的推荐链接加入 Medium - 保罗·尤斯丁'
- en: 🤖 Join to get exclusive content about designing and building production-ready
    ML systems 🚀 Unlock full access to…
  id: totrans-332
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 🤖 加入以获取关于设计和构建生产就绪的机器学习系统的独家内容 🚀 解锁完整访问…
- en: pauliusztin.medium.com](https://pauliusztin.medium.com/membership?source=post_page-----96f676f72012--------------------------------)
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: pauliusztin.medium.com](https://pauliusztin.medium.com/membership?source=post_page-----96f676f72012--------------------------------)
- en: Thank you ✌🏼 !
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 谢谢 ✌🏼 ！
- en: References
  id: totrans-335
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考资料
- en: '[1] [Energy Consumption per DE35 Industry Code from Denmark API](https://www.energidataservice.dk/tso-electricity/ConsumptionDE35Hour),
    [Denmark Energy Data Service](https://www.energidataservice.dk/about/)'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] [丹麦 API 的 DE35 行业代码能源消耗](https://www.energidataservice.dk/tso-electricity/ConsumptionDE35Hour)，[丹麦能源数据服务](https://www.energidataservice.dk/about/)'
- en: '[2] [Using IAP for TCP forwarding](https://cloud.google.com/iap/docs/using-tcp-forwarding),
    GCP Docs'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] [使用 IAP 进行 TCP 转发](https://cloud.google.com/iap/docs/using-tcp-forwarding)，GCP
    文档'
- en: '[3] [Overview of TCP forwarding](https://cloud.google.com/iap/docs/tcp-forwarding-overview),
    GCP Docs'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '[3] [TCP 转发概述](https://cloud.google.com/iap/docs/tcp-forwarding-overview)，GCP
    文档'
- en: '[4] Google Cloud Collective, [How to open a specific port such as 9090 in Google
    Compute Engine](https://stackoverflow.com/questions/21065922/how-to-open-a-specific-port-such-as-9090-in-google-compute-engine)
    (2017), Stackoverflow'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: '[4] Google Cloud Collective，[如何在 Google Compute Engine 中打开特定端口如 9090](https://stackoverflow.com/questions/21065922/how-to-open-a-specific-port-such-as-9090-in-google-compute-engine)
    (2017)，Stackoverflow'
- en: '[5] ANTHONY HEDDINGS, [How to Open Firewall Ports on a GCP Compute Engine Instance](https://www.howtogeek.com/devops/how-to-open-firewall-ports-on-a-gcp-compute-engine-instance/)
    (2020), How-To Geek'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: '[5] ANTHONY HEDDINGS，[如何在 GCP Compute Engine 实例上打开防火墙端口](https://www.howtogeek.com/devops/how-to-open-firewall-ports-on-a-gcp-compute-engine-instance/)
    (2020)，How-To Geek'
- en: '[6] [Preparing your project for IAP TCP forwarding](https://cloud.google.com/iap/docs/using-tcp-forwarding#preparing_your_project_for_tcp_forwarding),
    GCP Docs'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: '[6] [为 IAP TCP 转发准备您的项目](https://cloud.google.com/iap/docs/using-tcp-forwarding#preparing_your_project_for_tcp_forwarding)，GCP
    文档'
- en: '[7] [Reserve a static external IP address](https://cloud.google.com/compute/docs/ip-addresses/reserve-static-external-ip-address),
    GCP Docs'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: '[7] [保留一个静态外部 IP 地址](https://cloud.google.com/compute/docs/ip-addresses/reserve-static-external-ip-address)，GCP
    文档'
- en: '[8] [Create and delete service account keys](https://cloud.google.com/iam/docs/keys-create-delete),
    GCP Docs'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: '[8] [创建和删除服务账号密钥](https://cloud.google.com/iam/docs/keys-create-delete)，GCP
    文档'
- en: '[9] Tom Roth, [Install Docker on a Google Cloud virtual machine](https://tomroth.com.au/gcp-docker/)
    (2018), Tom Roth Blog'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: '[9] Tom Roth，[在 Google Cloud 虚拟机上安装 Docker](https://tomroth.com.au/gcp-docker/)
    (2018)，Tom Roth 博客'
- en: '[10] [Fork a repo](https://docs.github.com/en/get-started/quickstart/fork-a-repo),
    GitHub Docs'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: '[10] [分叉一个仓库](https://docs.github.com/en/get-started/quickstart/fork-a-repo)，GitHub
    文档'
- en: '[11] [GCP GitHub Actions Repository](https://github.com/google-github-actions/ssh-compute),
    GitHub'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: '[11] [GCP GitHub Actions 仓库](https://github.com/google-github-actions/ssh-compute)，GitHub'
