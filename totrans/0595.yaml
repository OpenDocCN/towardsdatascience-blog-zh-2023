- en: Create Tailor-Made Tourist Maps with Folium
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/create-tailor-made-tourist-maps-with-folium-954706cc04e8](https://towardsdatascience.com/create-tailor-made-tourist-maps-with-folium-954706cc04e8)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Jazz up your next vacation!
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@lee_vaughan?source=post_page-----954706cc04e8--------------------------------)[![Lee
    Vaughan](../Images/9f6b90bb76102f438ab0b9a4a62ffa3f.png)](https://medium.com/@lee_vaughan?source=post_page-----954706cc04e8--------------------------------)[](https://towardsdatascience.com/?source=post_page-----954706cc04e8--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----954706cc04e8--------------------------------)
    [Lee Vaughan](https://medium.com/@lee_vaughan?source=post_page-----954706cc04e8--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----954706cc04e8--------------------------------)
    ·7 min read·May 17, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1cfaa27bc421326f160d3d3bc945c27f.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Kayla Duhon](https://unsplash.com/@kayla_marie?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/zsqF_j9ZHXw?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: 'I’m a sucker for tacky tourist maps. You know the ones I’m talking about: those
    colorful, cartoony maps with 3-D renderings of castles, monuments, and the London
    Eye. Wouldn’t it be great to make a customized version for your own vacation?
    Well, hang on to your passport, because if you know Python, that’s just what we’re
    going to do!'
  prefs: []
  type: TYPE_NORMAL
- en: In this *Quick Success Data Science* project, we’ll use the *Folium* library
    to make a customized tourist map for my Iceland vacation. We’ll use custom icons
    for volcanoes and waterfalls, overlay terrain and road maps, and mark the accommodation
    locations. Don’t fret if you’re never going to Iceland, because you can use this
    project as a template for your *own* trips.
  prefs: []
  type: TYPE_NORMAL
- en: Key Programming Subjects Covered
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This project isn’t all fun and games. You’ll also learn a few useful geospatial
    techniques such as:'
  prefs: []
  type: TYPE_NORMAL
- en: How to stack base map tiles in Folium to show multiple feature types on the
    same map.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How to use your own custom markers for features on the map.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How to add static text to a Folium map and change its size and color (it’s not
    as straightforward as you might think).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How to add an index map.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Folium
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The open-source [Folium](https://python-visualization.github.io/folium/) library
    lets you visualize maps using [*Leaflet.JS*](https://leafletjs.com/), a powerful
    JavaScript library for building interactive web-mapping applications on mobile
    and desktop platforms. First released in 2013, Folium is extremely popular, and
    you’ll find a wealth of material on the internet to help you learn how to use
    it and customize it to your needs.
  prefs: []
  type: TYPE_NORMAL
- en: With Folium, you can select *tilesets* from mapping services like OpenStreetMap,
    Mapbox, and Stamen. These tilesets are collections of raster or vector data broken
    up into a uniform grid of square tiles with up to 22 preset zoom levels. They
    let you produce beautiful leaflet maps with little effort.
  prefs: []
  type: TYPE_NORMAL
- en: 'To install Folium in a conda environment, use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '`conda install -c conda-forge folium`'
  prefs: []
  type: TYPE_NORMAL
- en: 'To install Folium with pip use:'
  prefs: []
  type: TYPE_NORMAL
- en: '`pip install folium`'
  prefs: []
  type: TYPE_NORMAL
- en: 'For convenience, we’ll also use the open-source [*pandas* library](https://pandas.pydata.org/docs/).
    You can install it with the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '`conda install pandas`'
  prefs: []
  type: TYPE_NORMAL
- en: or
  prefs: []
  type: TYPE_NORMAL
- en: '`pip install pandas`'
  prefs: []
  type: TYPE_NORMAL
- en: The Code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The following code was entered into Jupyter Notebook and is described by cell.
  prefs: []
  type: TYPE_NORMAL
- en: Importing Libraries
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Folium is designed for dynamic, interactive mapping in web applications. However,
    for this project, we’re going to use it to make a *static* map that we can print
    on paper and shove in a backpack.
  prefs: []
  type: TYPE_NORMAL
- en: We’ll use Folium’s `plugins` module to make an index map that places the mapped
    area in a larger context. The `DivIcon` module will permit us to use custom icons
    for objects like waterfalls and volcanoes.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Loading the Volcano Database
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Iceland could easily have been named, “Volcanoland,” because it has around 130
    volcanic mountains of which over 30 are classified as “active.” I’ve compiled
    a `CSV` file of some of these with their names and coordinates and saved it as
    a Gist. For convenience, we'll import this file as a pandas DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/e4504087709bec530f6877bef63021b4.png)'
  prefs: []
  type: TYPE_IMG
- en: The Volcano DataFrame (image by the author)
  prefs: []
  type: TYPE_NORMAL
- en: Accommodations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It’s easy to lose track of time on a long vacation, so we’ll record the location
    of each night’s accommodation as “Day 1,” “Day 2,” and so on (you could easily
    use the actual date or something else). To generate a plottable database, I performed
    an online search for the latitude and longitude of each town and entered it as
    a Python dictionary.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Waterfalls
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Iceland could also be called “Waterfallland,” as it has over 10,000 waterfalls.
    Fortunately, I only plan to visit six, so we’ll enter these as a Python dictionary,
    as we did for the accommodations.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Custom Icons
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Icons* are visual representations of features on a map. A familiar example
    is the upside-down teardrop used to mark locations on Google Maps. For this project,
    we’ll use custom icons for volcanoes and waterfalls. For accommodations, we’ll
    use Folium’s standard *circle marker*.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2bb55f6d3e704d49d5aa227bc3dd9021.png)'
  prefs: []
  type: TYPE_IMG
- en: Icons used in this project (image by the author)
  prefs: []
  type: TYPE_NORMAL
- en: To represent waterfalls, I used the royalty-free waterfall icon that came with
    my Microsoft 365 subscription. For volcanoes, I used an icon from [*ICONFINDER*](https://www.iconfinder.com/search?q=volcano).
    I paid for this icon so it would be licensed for [commercial use](https://www.iconfinder.com/search?q=volcano&license=gte__1)
    without attribution.
  prefs: []
  type: TYPE_NORMAL
- en: I can’t provide these particular icons to you, so you’ll have to supply your
    own. Just do an online search for “waterfall icons” and “volcano icons.” Of course,
    you’ll want to be sure that these icons are properly licensed for whatever you
    intend to use them for.
  prefs: []
  type: TYPE_NORMAL
- en: Folium supports multiple file types, like PNG and JPG, and permits the scaling
    of icon images, so you don’t have to worry about the size of the icon. Save the
    icons in the same folder as your notebook or Python script.
  prefs: []
  type: TYPE_NORMAL
- en: Plotting the Map
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The final notebook cell plots the map. At a high level, we’ll first pick a center
    point location for the map, then overlay tilesets at a predetermined zoom level.
    We’ll then loop through the volcano, waterfall, and accommodations databases and
    post the icons and corresponding names. We’ll finish by adding an index map. A
    more detailed explanation follows the code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: The first step is to assign lat-lon coordinates for the map’s center point to
    a variable called `center_location`. Next, we call the Folium `Map` class and
    pass it the location, the tile to use, and a starting zoom level. The `control_scale`
    parameter activates the map's scale bar.
  prefs: []
  type: TYPE_NORMAL
- en: While the `Stamen Terrain` tile includes roads, they are faint and hard to see,
    so we overlay the terrain tile with the darker `Stamen Toner` tile. By setting
    the toner tile’s opacity to a low value like 0.3, the terrain tile is only partially
    obscured.
  prefs: []
  type: TYPE_NORMAL
- en: To see additional map tiles available in Folium, check out this [blog](https://deparkes.co.uk/2016/06/10/folium-map-tiles/).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: We next loop through the volcanoes DataFrame and post its contents. The `folium.features.CustomIcon()`
    method lets us use our custom volcano icon and control its size. The `folium.Marker()`
    class actually posts each volcano icon on the map.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s the hard part. Folium is designed for dynamic, interactive web maps,
    so doing something as seemingly basic as posting static text is a little fiddly.
    We have to use the `html` argument and pass it `f''<div style="font-size: 8pt">%s</div>''
    % str(row[''Volcano Name''])`. We use this html format to not only post the name
    but to control its font size. Note how the text must be converted into a string
    before it can be plotted.'
  prefs: []
  type: TYPE_NORMAL
- en: Plotting the waterfall and accommodation locations follows the same basic format.
    A difference is that we use the `html` argument to change the text color for waterfalls
    to blue.
  prefs: []
  type: TYPE_NORMAL
- en: We finish by adding an index map (`mini_map`). This map will dynamically reposition
    itself as you zoom in and out.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s the final map:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9d9ac83c09466e8a2f3272b404256ab1.png)'
  prefs: []
  type: TYPE_IMG
- en: The final tourist map (image by the author)
  prefs: []
  type: TYPE_NORMAL
- en: An important consideration when making a tourist map is to tailor the icons
    and text to the *final zoom level* that you want to print. Ideally, this will
    be the zoom level passed to the `zoom_start` argument when calling `folium.Map()`.
    While Folium will let you zoom the map in and out, the relative size of the icons
    will change, and you may not be pleased with the results.
  prefs: []
  type: TYPE_NORMAL
- en: Printing the Map
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As mentioned previously, Folium maps are meant to be used *online*. While it’s
    possible to save them as an image programmatically, it’s easier just to do a screen
    capture. You can then paste the result into a program like Microsoft PowerPoint
    or Publisher for additional embellishments before printing.
  prefs: []
  type: TYPE_NORMAL
- en: For busy areas where icons and/or text overlap, you can zoom in and print “local”
    maps. Note that you may want to use a new notebook cell to readjust the icon and
    text sizes for this new zoom level.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/eb743982148575f8902bd1efbbcd4f9e.png)'
  prefs: []
  type: TYPE_IMG
- en: A zoomed, “local” map of the southern coast (image by the author)
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Tourist maps are a fun way to explore a new area. By combining Folium’s wonderful
    tilesets with your own custom icons and text, you can make personalized maps to
    both *plan* your trip and *record* your adventures.
  prefs: []
  type: TYPE_NORMAL
- en: Thanks!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Thanks for reading and please follow me for more *Quick Success Data Science*
    projects in the future.
  prefs: []
  type: TYPE_NORMAL
