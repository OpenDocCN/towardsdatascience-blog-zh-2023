["```py\nCREATE TABLE countries (\n  id INT,\n  name VARCHAR(50),\n  population INTEGER,\n);\n\nINSERT INTO countries (id, name, population) VALUES\n    (1, 'Armenia', 2978763),\n    (2, 'Belgium', 11730997),\n    (3, 'Canada', 37742154),\n    (4, 'Denmark', 5792202),\n    (5, 'Egypt', 102334404),\n    (6, 'Ghana', 31072940),\n    (7, 'Hungary', 9660351),\n    (8, 'Iraq', 40222493),\n    (9, 'Kiribati', 119449),\n    (10, 'Liechtenstein', 38128);\n```", "```py\n-- small countries (pop < 1M)\nSELECT name FROM countries WHERE population < 1000000 \n-->  Kiribati & Liechtenstein\n\n-- c-countries (name contains a c)\nSELECT name FROM countries WHERE NAME LIKE '%c%' \n--> Canada and Liechtenstein\n```", "```py\nSELECT name FROM countries WHERE population < 1000000 \nEXCEPT\nSELECT name FROM countries WHERE NAME LIKE '%c%' \n--> Kiribati\n```", "```py\nSELECT name FROM countries WHERE population < 1000000 \nINTERSECT\nSELECT name FROM countries WHERE NAME LIKE '%c%'\n--> Liechtenstein\n```", "```py\nSELECT name FROM countries WHERE population < 1000000 \nUNION\nSELECT name FROM countries WHERE NAME LIKE '%c%'\n--> Canada, Kiribati, Liechtenstein\n\nSELECT name FROM countries WHERE population < 1000000 \nUNION ALL\nSELECT name FROM countries WHERE NAME LIKE '%c%'\n--> Kiribati, Liechtenstein, Canada, Liechtenstein\n```", "```py\n-- FAILS: Conversion failed when converting the varchar value 'Canada' to data type int.\nSELECT id FROM countries WHERE population < 1000000 \nEXCEPT\nSELECT name FROM countries WHERE NAME LIKE '%c%'\n```", "```py\n-- All queries combined using a UNION, INTERSECT or EXCEPT operator must have an equal number of expressions in their target lists.\nSELECT id, name FROM countries WHERE population < 1000000 \nEXCEPT\nSELECT name FROM countries WHERE NAME LIKE '%c%'\n```", "```py\nSELECT id FROM countries WHERE population < 1000000 \nINTERSECT\nSELECT population FROM countries WHERE NAME LIKE '%c%'\n--> returns no rows (id and population match nowhere)\n```", "```py\nSELECT id FROM countries WHERE population < 1000000\nUNION\nSELECT population FROM countries WHERE NAME LIKE '%c%'\n```", "```py\nSELECT id as product_id FROM products WHERE price < 100\nEXCEPT\nSELECT product_id FROM sales WHERE country = 'Netherlands'\n--> Results in product_id 3\n```", "```py\nSELECT product_id FROM sales WHERE country = 'USA'\nINTERSECT\nSELECT product_id from returns\n--> Results in product_id 2\n```", "```py\nSELECT id as product_id FROM products WHERE price < 100\nUNION\nSELECT product_id FROM sales WHERE country = 'Netherlands'\nUNION\nSELECT product_id from returns\n--> Returns product_id 1, 2, and 3\n```"]