["```py\nconda create -n ai-models python=3.10\nconda activate ai-models\nconda install cudatoolkit\npip install ai-models\n```", "```py\npip install ai-models-panguweather\npip install ai-models-fourcastnet\n```", "```py\nai-models --download-assets --assets assets-panguweather panguweather\nai-models --download-assets --assets assets-fourcastnet  fourcastnet\nai-models --download-assets --assets assets-graphcast    graphcast\n```", "```py\nai-models --input cds --date 20230920 --time 0000 --assets assets-panguweather panguweather\n```", "```py\n2023-09-26 12:06:45,724 INFO Loading assets-panguweather/pangu_weather_24.onnx: 26 seconds.\n2023-09-26 12:07:10,289 INFO Loading assets-panguweather/pangu_weather_6.onnx: 24 seconds.\n2023-09-26 12:07:10,289 INFO Model initialisation: 52 seconds\n2023-09-26 12:07:10,290 INFO Starting inference for 40 steps (240h).\n```", "```py\n2023-09-26 12:10:27,260 INFO Done 1 out of 40 in 3 minutes 16 seconds (6h), ETA: 2 hours 11 minutes 18 seconds.\n```", "```py\nai-models --download-assets --assets assets-fourcastnet --input cds --date 20230920 --time 0000 fourcastnet\n```", "```py\n2023-09-26 13:23:48,633 INFO Using device 'CUDA'. The speed of inference depends greatly on the device.\n2023-09-26 13:23:59,710 INFO Loading assets-fourcastnet/backbone.ckpt: 13 seconds.\n2023-09-26 13:24:10,673 INFO Loading assets-fourcastnet/precip.ckpt: 10 seconds.\n2023-09-26 13:24:10,733 INFO Model initialisation: 46 seconds\n2023-09-26 13:24:10,733 INFO Starting inference for 40 steps (240h).\n2023-09-26 13:24:14,247 INFO Done 1 out of 40 in 3 seconds (6h), ETA: 2 minutes 20 seconds.\n```", "```py\nai-models --download-assets --assets assets-graphcast --input cds --date 20230920 --time 0000 graphcast\n```", "```py\nimport xarray as xr\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\nimport cartopy.crs as ccrs\n\n# load data\nds_fourcast = xr.open_dataset('fourcastnet.grib')\n\nix_step = 3  # 0 = first step in weather prediction\nix_level = 0 # 0 = surface pressure level\ntemp_degC = ds_fourcast['t'][ix_step, ix_level] - 273.15 # subtract 273.15 to convert from Kelvin to Celsius.\n\n# plot settings\nsns.set_style('ticks')\ntmin = -45\ntmax = +45\nnlev = 19\n\n# generate figure\nfig = plt.figure()\nax = fig.add_subplot(1, 1, 1, projection=ccrs.PlateCarree())\nax.set_global()\nax.coastlines('110m', alpha=0.1)\n\n# contour plot\nimg = ax.contourf(ds_fourcast.longitude.values, ds_fourcast.latitude.values, \n                  temp_degC.values, \n                  levels = np.linspace(tmin, tmax, nlev),\n                  cmap='RdBu_r',\n                  transform=ccrs.PlateCarree()\n                 )\n\n# hours passed since initialization\ndt_hours = ((ds_fourcast['valid_time'][ix_step] - ds_fourcast['time']).values / 1e9 / 3600).astype(float)\n\n# annotation text\nax.text(-180, 90, \n        f'After {dt_hours} hours ({ds_fourcast[\"valid_time\"][ix_step].values})', \n        transform=ccrs.PlateCarree(),\n        va='bottom', ha='left',\n       )\n\nplt.colorbar(img, orientation='horizontal', label='850 hPa temperature (Â°C)')\nplt.show()\n```", "```py\nimport xarray as xr\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\nimport cartopy.crs as ccrs\n\n# load data\n#ds_pangu = xr.open_dataset('/home/k/k202141/rootgit/ai-models/panguweather.grib')\n\nix_step = 3  # 0 = first step in weather prediction\nix_level = 8 # 0 = surface pressure level, 2 - 850 hPa level\nwindspeed = (ds_pangu['u'][ix_step, ix_level]**2 + ds_pangu['u'][ix_step, ix_level]**2)**0.5\n\n# plot settings\nsns.set_style('ticks')\ntmin = 0\ntmax = 150\nnlev = 16\n\n# generate figure\nfig = plt.figure()\nax = fig.add_subplot(1, 1, 1, projection=ccrs.Orthographic(central_latitude=-30))\nax.set_global()\nax.coastlines('110m', alpha=1.0)\n\n# contour plot\nimg = ax.contourf(ds_pangu.longitude.values, ds_pangu.latitude.values, \n                  windspeed.values, \n                  levels = np.linspace(tmin, tmax, nlev),\n                  cmap='gist_ncar',\n                  transform=ccrs.PlateCarree()\n                 )\n\n# hours passed since initialization\ndt_hours = ((ds_pangu['valid_time'][ix_step] - ds_pangu['time']).values / 1e9 / 3600).astype(float)\nprint(dt_hours)\n\nplt.colorbar(img, orientation='horizontal', label='Wind speed (m/s)', shrink=0.5)\nplt.show()\n```"]