["```py\ndf.lazy()\n  .with_columns([(pl.col(\"col\") * 10).alias(\"new_col\")])\n  #...\n  .collect()\n```", "```py\npip install polars\n```", "```py\nimport polars as pl\nimport pandas as pd\n```", "```py\n# Example expressions that work both with Pandas and Polars\ndf.head() # Get the first n rows\ndf.tail() # Get the last n rows\ndf.unique() # Get unique values of this expression. \n```", "```py\n# Pandas\npd.read_csv('example.csv')\n\n# Polars\npl.read_csv('example.csv')\n```", "```py\n# Pandas\ndf[['col1', 'col2']] \n\n# The above code will run with Polars as well, \n# but the correct way in Polars is:\ndf.select(pl.col(['col1', 'col2'])) \n```", "```py\n# Pandas\ndf.query('col1 > 5')\n\n# Polars\ndf.filter(pl.col('col') > 5)\n```", "```py\n# Pandas\ndf_pd[\"new_col\"] = df_pd[\"col\"] * 10\n\n# Polars\ndf.with_columns([(pl.col(\"col\") * 10).alias(\"new_col\")])\n\n# Polars for multiple columns\n# df.with_columns([(pl.col(\"col\") * 10).alias(\"new_col\"), ...])\n```", "```py\n# Pandas\ndf_pd.groupby('col1')['col2'].agg('mean')\n\n# Polars\n# df.groupby('col1').agg([pl.col('col2').mean()]) # As suggested in Polars docs\ndf.groupby('col1').agg([pl.mean('col2')]) # Shorter\n```", "```py\n# Pandas\ndf['col2'].fillna(-999)\n\n# Polars\n# df_pd.with_column(pl.col('col2').fill_null(pl.lit(-999))) # As suggested in Polars docs\ndf_pd.with_column(pl.col('col2').fill_null(-999)) # Shorter\n```"]