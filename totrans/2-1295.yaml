- en: If engineers start to use AI coding tools, what happens to our product teams?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如果工程师开始使用 AI 编码工具，我们的产品团队会发生什么？
- en: 原文：[https://towardsdatascience.com/if-engineers-start-to-use-ai-coding-tools-what-happens-to-our-product-teams-acd55fb273dd](https://towardsdatascience.com/if-engineers-start-to-use-ai-coding-tools-what-happens-to-our-product-teams-acd55fb273dd)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/if-engineers-start-to-use-ai-coding-tools-what-happens-to-our-product-teams-acd55fb273dd](https://towardsdatascience.com/if-engineers-start-to-use-ai-coding-tools-what-happens-to-our-product-teams-acd55fb273dd)
- en: '![](../Images/2b3ec4603842162f2ba89abb0a2a354d.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2b3ec4603842162f2ba89abb0a2a354d.png)'
- en: Image by author using Midjourney
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 作者使用 Midjourney 制作的图片
- en: The Impact of AI on Product Engineering teams — Part 3
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AI 对产品工程团队的影响——第3部分
- en: '[](https://mark-ridley.medium.com/?source=post_page-----acd55fb273dd--------------------------------)[![Mark
    Ridley](../Images/b7331b7e94c2500040bb55b462d0f6b6.png)](https://mark-ridley.medium.com/?source=post_page-----acd55fb273dd--------------------------------)[](https://towardsdatascience.com/?source=post_page-----acd55fb273dd--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----acd55fb273dd--------------------------------)
    [Mark Ridley](https://mark-ridley.medium.com/?source=post_page-----acd55fb273dd--------------------------------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://mark-ridley.medium.com/?source=post_page-----acd55fb273dd--------------------------------)[![Mark
    Ridley](../Images/b7331b7e94c2500040bb55b462d0f6b6.png)](https://mark-ridley.medium.com/?source=post_page-----acd55fb273dd--------------------------------)[](https://towardsdatascience.com/?source=post_page-----acd55fb273dd--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----acd55fb273dd--------------------------------)
    [Mark Ridley](https://mark-ridley.medium.com/?source=post_page-----acd55fb273dd--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----acd55fb273dd--------------------------------)
    ·10 min read·Jul 27, 2023
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----acd55fb273dd--------------------------------)
    ·10 min read·2023年7月27日
- en: --
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '*This is the third part of a six part series investigating how generative AI
    productivity tools aimed at developers, like Github Copilot, ChatGPT and Amazon
    CodeWhisperer might impact the structure of entire product engineering teams.*'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*这是一个六部分系列的第三部分，调查像 Github Copilot、ChatGPT 和 Amazon CodeWhisperer 这样的生成性 AI
    生产力工具可能如何影响整个产品工程团队的结构。*'
- en: 'In [Part 2](https://medium.com/@mark-ridley/the-proliferation-of-generative-ai-coding-tools-and-how-product-engineering-teams-will-use-them-48787ebfcaaa),
    we explored:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [第2部分](https://medium.com/@mark-ridley/the-proliferation-of-generative-ai-coding-tools-and-how-product-engineering-teams-will-use-them-48787ebfcaaa)
    中，我们探讨了：
- en: How generative AI tools like ChatGPT are redefining the way product engineering
    teams approach coding — from generating user stories to writing the actual code.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成性 AI 工具如 ChatGPT 如何重新定义产品工程团队处理编码的方式——从生成用户故事到实际编写代码。
- en: How tasks often perceived as tedious by developers, like writing tests and documentation,
    can now be easily and efficiently handled by AI, making the entire coding process
    more streamlined.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 诸如编写测试和文档等开发者通常认为繁琐的任务，现在可以由 AI 轻松高效地处理，从而使整个编码过程更加流畅。
- en: The crucial importance of tests and the potential future of prompt-engineered
    applications that might be initiated with thoughtful test design.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试的重要性以及经过深思熟虑的测试设计可能会启动的 prompt-engineered 应用的潜在未来。
- en: A vision of the future where Generative AI tools reshape the roles within product
    engineering teams and the profound implications for engineers and leaders.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对未来的愿景，其中生成性 AI 工具重塑了产品工程团队内的角色，以及对工程师和领导者的深远影响。
- en: How will Generative AI tools transform team structure?
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成性 AI 工具将如何改变团队结构？
- en: The idea that I’ve been consumed with for the past few months is that the impact
    of Generative AI tools on product engineering teams is going to cause a fundamental
    shift in the ratio of product to technical roles. In part one of this series,
    I reflected that a common ratio for engineers to product managers in many product
    teams was five engineers to one product manager.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我过去几个月一直沉迷的想法是，生成性 AI 工具对产品工程团队的影响将导致产品角色与技术角色的比例发生根本性变化。在本系列的第一部分中，我反思了许多产品团队中工程师与产品经理的常见比例是五名工程师对一名产品经理。
- en: 'Now, when I’m feeling either particularly bold or particularly fatalist, that
    hypothesis becomes:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当我感到特别大胆或特别宿命论时，这一假设变成了：
- en: '**“Current product engineering teams require five engineers to one product
    manager. Next-gen product engineering teams will require only one senior engineer
    for each product manager’**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**“当前的产品工程团队需要五个工程师对应一个产品经理。下一代产品工程团队只需要一个高级工程师对应一个产品经理”**'
- en: This is what I’d like to put to the test.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我想要验证的内容。
- en: In the previous articles in this series we’ve discussed the individual impact
    of these developer and productivity tools, but I’d now like to pull your gaze
    back to a more strategic view — the impact that enhanced developer productivity
    will have on a team, and even the whole organisation.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在本系列的前几篇文章中，我们讨论了这些开发者和生产力工具的个体影响，但现在我想将你的视线拉回到更战略的角度——增强的开发者生产力对团队，甚至整个组织的影响。
- en: Suspending disbelief for the sake of a thought experiment, let’s assume that
    we are open to the argument that Generative AI tools, like Github Copilot, may
    enhance the productivity of a single developer by around 50%. Let’s also work
    on the assumption that in the current status quo (and as we described in [Part
    1](https://mark-ridley.medium.com/how-generative-ai-will-impact-product-engineering-teams-83a5eaa8fc60))
    one product manager for each five engineers is a reasonable ratio. If these two
    things are held to be true, we can infer that the longstanding 5:1 ratio is going
    to need to change.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 为了思维实验的目的，假设我们接受这样的观点：像Github Copilot这样的生成性AI工具可以提高单个开发者约50%的生产力。还假设在当前的状态下（如我们在[第1部分](https://mark-ridley.medium.com/how-generative-ai-will-impact-product-engineering-teams-83a5eaa8fc60)中所述）一个产品经理对应五个工程师是一个合理的比例。如果这两个条件成立，我们可以推断长期以来的5:1比例将需要改变。
- en: I believe that it is reasonable to expect that the advances we’ve seen since
    Copilot was released in 2022 will continue, especially with the firehose of VC
    cash being turned on GenAI startups instead of the Metaverse and Web3.0.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信，自2022年Copilot发布以来，我们所见的进展将会继续，特别是在风险投资资金流向生成性AI初创公司而不是元宇宙和Web3.0的情况下。
- en: A flood of new tools has started to hit [ProductHunt](https://www.producthunt.com/topics/artificial-intelligence)
    daily, like [Bifrost](https://www.bifrost.so/), and [Locofy](https://www.locofy.ai/)
    (both of which turn Figma designs into working React code, like [Amazon’s Amplify
    Studio](https://aws.amazon.com/amplify/studio/)), and it will be interesting to
    see how quickly, and with who, they gain traction.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 一大批新工具每天开始在[ProductHunt](https://www.producthunt.com/topics/artificial-intelligence)上出现，如[Bifrost](https://www.bifrost.so/)和[Locofy](https://www.locofy.ai/)（这两者都将Figma设计转化为可工作的React代码，类似于[Amazon的Amplify
    Studio](https://aws.amazon.com/amplify/studio/)），有趣的是看看这些工具能多快以及与谁一起获得 traction。
- en: It’s unlikely that developers in larger teams will drive the adoption of this
    new type of code automation tool because of historic suspicions about code quality
    and corporate risk-aversion. What’s more likely is that startup founders, innovation-focused
    product managers and smaller marketing teams will be the early adopters, attracted
    by the lower cost and faster speed to market of auto-generated websites and apps.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 开发者在大型团队中不太可能推动这种新型代码自动化工具的采用，因为对代码质量的历史疑虑和企业风险规避。更可能的是，初创公司创始人、以创新为导向的产品经理和较小的营销团队将成为早期采纳者，被自动生成的网站和应用的较低成本和更快上市速度所吸引。
- en: I can hear a sigh swelling from the engineers still reading, “*Of course* ***my***
    *application is too unique and* ***my*** *problem too intricate for these types
    of basic, Lego brick applications to take my job”*. But as Kelsey Hightower (one
    of the original contributors to Kubernetes and formerly a Google distinguished
    engineer) [said](https://twitter.com/kelseyhightower/status/1676267543638720512),
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我能听到仍在阅读的工程师发出叹息，“*当然* ***我的*** *应用程序太独特，* ***我的*** *问题太复杂，这些基本的、像乐高积木一样的应用程序无法取代我的工作”*。但正如Kelsey
    Hightower（Kubernetes的原始贡献者之一，曾是Google的杰出工程师）[所说](https://twitter.com/kelseyhightower/status/1676267543638720512)的那样，
- en: “Stick to boring architecture for as long as possible, and spend the majority
    of your time, and resources, building something your customers are willing to
    pay for”.
  id: totrans-25
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “尽可能长时间坚持使用单调的架构，并将大部分时间和资源用于构建客户愿意支付的东西。”
- en: 'If you still think that your application is unique and beautiful, [this followup
    tweet](https://twitter.com/dneighbors/status/1676292417044221953) from Derek Neighbours
    neatly summarised exactly who that ‘boring architecture’ comment should be aimed
    at: **almost everyone**.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你仍然认为你的应用是独特而美丽的，[这条跟进推文](https://twitter.com/dneighbors/status/1676292417044221953)来自
    Derek Neighbours，清楚地总结了那句“无聊架构”评论应该指向的对象：**几乎每个人**。
- en: The number of companies needing non-boring architecture is pretty close to none.
    Nothing funnier than a startup with 12 customers copying scaling patterns from
    Netflix or Google.
  id: totrans-27
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 需要非无聊架构的公司数量几乎接近零。没有什么比一个拥有 12 个客户的初创公司从 Netflix 或 Google 复制扩展模式更滑稽的了。
- en: Let’s get back to my hypothesis; most engineers will be more productive, most
    architectures shouldn’t be complex and Generative AI tools will improve considerably
    from their 2023 state. If these are true, then the job of engineers will shift
    from basic plumbing and maintenance to more serious issues like architecture,
    solution design, performance, security and managing increasingly complex internal
    ecosystems.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 回到我的假设；大多数工程师将变得更有生产力，大多数架构不应该复杂，生成 AI 工具将比 2023 年状态有显著提升。如果这些都成立，那么工程师的工作将从基础的管道和维护转向更严肃的问题，如架构、解决方案设计、性能、安全以及管理日益复杂的内部生态系统。
- en: Instead of test driven development, we may begin to see ***test driven solution
    design***, where the role of the engineer is to specify the functionality of the
    application in a way that the Generative AI tools can be prompted to produce both
    the tests and a working application. The tests created as part of the design phase
    will then continue to prove that the application meets the needs of the company
    and the customer, and self-document the application.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可能会开始看到 ***测试驱动解决方案设计***，其中工程师的角色是以一种方式指定应用程序的功能，使得生成 AI 工具可以被提示生成测试和一个可工作的应用程序。在设计阶段创建的测试将继续证明应用程序满足公司和客户的需求，并自我记录应用程序。
- en: How code productivity tools can take on more than just obvious tasks
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码生产力工具如何承担更多显而易见的任务之外的工作
- en: We’ve spoken about the impact of Generative AI tools on new product and feature
    development, but for most engineers this only makes up a portion of their day
    job. For a lot of engineers, ‘business as usual’, maintenance and operational
    tasks take up a lot of their working week. Refactoring, bug fixes, small change
    requests and minor version upgrades can consume a lot of valuable developer time.
    The tools we’ve been discussing are just as powerful when considering these mundane
    tasks as they are with the exciting new product development work.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经讨论了生成 AI 工具对新产品和功能开发的影响，但对大多数工程师来说，这只占据了他们日常工作的一个部分。对于很多工程师来说，“业务照常”中的维护和操作任务占据了他们的大部分工作时间。重构、修复错误、小改动请求和小版本升级可能消耗大量宝贵的开发时间。当考虑到这些平凡的任务时，我们讨论的工具也同样强大，就像它们在令人兴奋的新产品开发工作中一样。
- en: A few years ago, I was working with a team that was confronted with an old database
    which needed to be upgraded. The team was now very modern and microservicey (yes,
    that’s now an adjective), and there was no-one with experience in archaic SQL
    or deprecated versions of the ancient database engine. This type of thing isn’t
    uncommon, and often causes a minor emergency as teams scrabble to find anyone
    with the mystical knowledge required. What should have been a relatively simple
    task suddenly overturned all of the careful roadmap planning.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 几年前，我和一个团队一起处理一个需要升级的旧数据库。团队现在非常现代，采用微服务（是的，这现在是一个形容词），而且没有人有古老 SQL 或过时的古老数据库引擎的经验。这种情况并不罕见，经常会引发小型紧急情况，因为团队急于找到具备神秘知识的人。原本应该是相对简单的任务突然颠覆了所有精心策划的路线图。
- en: Teams regularly face these types of problems — whether it’s rewriting something
    old and forgotten, or having to upgrade from one major version of a framework
    to another — they have to comb through obsolete and often poorly documented code
    to learn something new (or relearn something frustratingly old).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 团队经常面临这些问题——无论是重写旧的和被遗忘的东西，还是需要从一个主要版本升级到另一个版本——他们必须仔细查阅过时且通常文档不佳的代码，以学习新的东西（或重新学习令人沮丧的旧事物）。
- en: But these code assistant tools [don’t really care what language they’re given](https://www.zdnet.com/article/i-used-chatgpt-to-write-the-same-routine-in-12-top-programming-languages-heres-how-it-did/)
    (and yes I have asked ChatGPT to write both [brainf*ck](https://saketupadhyay.medium.com/how-to-code-in-brainf-ck-without-losing-your-mind-6a8fd67b36b4)
    and machine code for giggles). The LLMs have been trained on all the docs, [billions
    of lines of code](https://www.zdnet.com/article/is-github-copilots-code-legal-ethically-right/)
    examples and all the flame wars on [Stack Overflow](https://stackoverflow.com/)
    (probably). For an LLM, rewriting even undocumented code is not really a big deal.
    What’s even better is that it is easy to ask the tools to write tests for both
    the old and the new code.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 但是这些代码助手工具[并不在乎它们接收到什么语言](https://www.zdnet.com/article/i-used-chatgpt-to-write-the-same-routine-in-12-top-programming-languages-heres-how-it-did/)（是的，我确实让
    ChatGPT 写过[brainf*ck](https://saketupadhyay.medium.com/how-to-code-in-brainf-ck-without-losing-your-mind-6a8fd67b36b4)和机器码以图乐趣）。这些
    LLM 已经接受了所有文档，[数十亿行代码](https://www.zdnet.com/article/is-github-copilots-code-legal-ethically-right/)示例和所有关于[Stack
    Overflow](https://stackoverflow.com/)的争论（可能）。对于 LLM 来说，重写即使是未记录的代码也并不是什么大事。更好的是，可以很容易地要求这些工具为旧代码和新代码编写测试。
- en: To check that I wasn’t just hallucinating that this was possible, I went to
    find some [random old Perl code on the internet](https://www.perlmonks.org/?node_id=11101494)
    and fed it into GPT4\. After asking it to explain what the code did, I followed
    up by asking what language we might replace Perl with. It suggested Python, and
    then immediately produced the code. With one more prompt, we had some tests to
    check the code was running.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确认我没有产生幻觉这个任务是可能的，我去找了一些[互联网上的随机旧 Perl 代码](https://www.perlmonks.org/?node_id=11101494)，然后将其输入到
    GPT4 中。在让它解释代码功能后，我接着询问可以用什么语言替换 Perl。它建议使用 Python，并立即生成了相应的代码。经过一次提示，我们得到了一些测试来检查代码是否正常运行。
- en: As a bonus for ten, I thought I’d see if we could then port it to Rust, one
    of Stack Overflow’s [‘most loved languages](https://insights.stackoverflow.com/survey/2019)’
    for the past few years. As you’d probably guess, it didn’t really have any issues
    with the request.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 作为额外奖励，我想看看我们是否可以将其移植到 Rust，这是 Stack Overflow 过去几年[‘最受喜爱的语言](https://insights.stackoverflow.com/survey/2019)’之一。正如你可能猜到的那样，它确实没有遇到什么问题。
- en: '![](../Images/9e2e10abc625e62bad67316c025ec926.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9e2e10abc625e62bad67316c025ec926.png)'
- en: Getting ChatGPT to randomly refactor [stuff I found on the internet](https://www.perlmonks.org/?node_id=11101494).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 让 ChatGPT 随机重构[我在互联网上找到的东西](https://www.perlmonks.org/?node_id=11101494)。
- en: If the removal of simple but time consuming tasks like documentation and test
    creation, and the automation of routine engineering tasks like version upgrades
    and refactoring can be taken by AI tools, what is the outcome? Almost certainly
    a change in that 5:1 ratio.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果像文档和测试创建这样的简单但耗时的任务，以及版本升级和重构等常规工程任务可以由 AI 工具来完成，那么结果会是什么？几乎可以肯定的是，这会改变那 5:1
    的比例。
- en: The strange world of web and mobile app teams
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络和移动应用团队的奇怪世界
- en: In organisations that have chosen to build both a website and a mobile application,
    we sometimes come across a slightly odd dysfunction. Although the functionality
    and the customer value of both the web and mobile versions is often identical,
    we find ourselves having to separate the teams that build the different applications.
    Even in organisations that strive to align their teams around value streams, the
    split of expertise and systems almost always leads to the creation of a dedicated
    team.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在那些选择同时构建网站和移动应用程序的组织中，我们有时会遇到一种稍微奇怪的功能失调。虽然网站和移动版本的功能和客户价值通常是相同的，但我们发现自己不得不将构建不同应用程序的团队分开。即使在那些努力围绕价值流对齐团队的组织中，专业知识和系统的分裂几乎总是导致了专门团队的形成。
- en: This isn’t an issue for companies where the product is a redesigned web interface
    displayed on the mobile device (something called ‘responsive design’), but can
    be an issue even where companies have chosen to build ‘[hybrid](https://applover.com/blog/native-vs-hybrid-vs-pwa-mobile-apps-which-should-you-choose)’
    mobile apps, where the app is developed in a web-adjacent framework like React
    Native. At least in these hybrid applications, there can be some similarity in
    the code, and the skills required to release both mobile and web products are
    broadly transferable.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这对于产品是重新设计的移动设备网页界面的公司（即所谓的‘响应式设计’）不是问题，但即使是那些选择构建‘[混合](https://applover.com/blog/native-vs-hybrid-vs-pwa-mobile-apps-which-should-you-choose)’移动应用的公司，这种情况也可能成为问题，其中应用程序在像
    React Native 这样的网页相邻框架中开发。至少在这些混合应用中，代码可以有一定的相似性，发布移动和网页产品所需的技能也可以广泛转移。
- en: Native mobile apps — those apps that are specifically built for Android and
    iOS — can complicate things further. For businesses that have decided that native
    apps are important, and that customers with both Android and iPhones should get
    the same great experience, we often have an additional requirement for skills,
    with a requirement for engineers who have expertise in either Java or Kotlin (for
    Android) or Swift/Objective-C(for iOS) in the mobile team.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 原生移动应用——那些专门为 Android 和 iOS 构建的应用——可能会进一步复杂化问题。对于那些认为原生应用很重要的企业，且希望 Android
    和 iPhone 用户获得相同优质体验的企业，我们通常需要额外的技能要求，需要具有 Java 或 Kotlin（针对 Android）或 Swift/Objective-C（针对
    iOS）专业知识的工程师。
- en: There’s a lot of duplication of effort and corresponding cost increases taken
    on by companies that have chosen to deliver native mobile apps as well as web
    interfaces.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 选择交付原生移动应用以及网页界面的公司面临大量重复的努力和相应的成本增加。
- en: As we’ve seen, our generative AI coding assistants could leverage their language
    agnosticism in this context, to create well designed, well tested applications
    in multiple languages. The potential impact of this is that we may no longer need
    to split mobile and app teams because of their skillsets, but rather only where
    the web and mobile applications have significantly different features and functionality.
    In some companies this could be a massive simplification and a big cost saving
    of up to half of their engineering budget.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所见，在这种情况下，我们的生成式 AI 编码助手可以利用它们的语言无关性，创建多种语言的设计良好、测试充分的应用程序。这可能的影响是，我们可能不再需要因技能集的不同而拆分移动和应用团队，而仅仅是在网页和移动应用具有显著不同功能和特性时才需要分开。在一些公司，这可能会大大简化流程，并节省多达一半的工程预算。
- en: '**What’s the impact on junior and mid level developers (especially in startups
    and small businesses)?**'
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**对初级和中级开发者（尤其是在初创公司和小型企业中）有什么影响？**'
- en: In leading up to writing this article, I’ve had the discussion about the potential
    impact of these coding tools with a lot of people working in tech and product.
    Almost unanimously, after I have described what the possible impact of the tools
    could be, an accusatory finger is waggled at me and I’m asked *“But what’s going
    to happen to all the junior developers?”*
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文之前，我与许多从事技术和产品的人讨论了这些编码工具可能产生的影响。几乎一致地，在我描述了这些工具可能的影响后，都会有人指责地问我*“那么所有的初级开发者会发生什么？”*
- en: Every great engineering manager or tech leader I have worked with has had an
    outsized concern for developing junior talent. Good engineers write good applications,
    but great engineers teach other people. It’s no surprise that one of the first
    reactions I’ve been getting to this discussion is a concern for the next generation.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我曾与之共事的每位优秀工程经理或技术领导者都非常关注培养初级人才。优秀的工程师编写优秀的应用程序，而伟大的工程师则教导他人。因此，我得到的对这个讨论的最初反应之一就是对下一代的担忧。
- en: To be honest, I’m worried in the short term. As we’ll see more of in Part 4,
    one potential impact is that companies decide to cut their budgets and team sizes,
    and although contractors and outsourced development teams will likely be the first
    to be cut, mid and junior developers will be the next in line.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 说实话，我在短期内感到担忧。正如我们将在第4部分中看到的那样，一种潜在的影响是公司决定削减预算和团队规模，尽管承包商和外包开发团队可能会首先被裁减，但中级和初级开发者将会是下一个被裁减的对象。
- en: I’m concerned that there is a possibility that these changes cause a generational
    ‘ring-barking’ of our tech talent, where an entire cohort of junior developers
    is unable to find work in a team. The technical skills required to build an application,
    at least in early-adopting companies, will be those possessed by senior engineers
    — experience with solution and architecture design, security and weird edge cases.
    Even skilled junior and mid level engineers won’t have had this experience, by
    definition of the role that they’re doing and how long they’ve been doing it.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我担心这些变化可能会导致我们技术人才的代际“剥皮”，即整个初级开发人员群体无法在团队中找到工作。构建应用程序所需的技术技能，至少在早期采用公司中，是资深工程师所具备的——包括解决方案和架构设计、安全性以及奇特的边缘案例。即便是技能娴熟的初级和中级工程师，也因为其角色定义和从业时间的限制，无法获得这种经验。
- en: If the generative AI tools are doing the basic work, it’s the skills of senior
    developers and solution architects that are most needed.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果生成式AI工具在完成基本工作，那么最需要的就是资深开发人员和解决方案架构师的技能。
- en: However, while the impact on junior developers is a real concern, it’s not all
    bleak. Using Copilot recently while I tried to learn React and Django, it was
    mind-blowing how different my experience was to when I was at the beginning of
    my career. The opportunity to have a real time discussion about what a piece of
    code did, or where an error might be, transformed my learning experience. I wish
    I had access to ChatGPT when I was learning to code.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，尽管对初级开发人员的影响确实令人担忧，但并非全然黑暗。我最近在尝试学习React和Django时使用Copilot，发现我的体验与职业生涯初期时截然不同。能够实时讨论一段代码的作用或错误所在，彻底改变了我的学习体验。我希望在我学习编码时能够使用ChatGPT。
- en: But while being able to write code is obviously an important skill in a developer,
    it’s not the ineffable quality we really need in our teams. There is a reason
    that the best engineers can move with relative ease from one language to another;
    **great engineers aren’t taught to code. They’re taught how to think**. I still
    believe that the ability to think both creatively, and with a systems-thinking
    mindset will continue to be the benchmark of what engineers bring to their team.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 但尽管编写代码显然是开发人员的一项重要技能，但这并不是我们团队真正需要的那种难以言喻的品质。最好的工程师能够相对轻松地从一种语言转到另一种语言，是有原因的；**优秀的工程师不是被教会编程的，而是被教会如何思考的**。我仍然相信，创造性思维和系统思维能力将继续成为工程师为团队带来的标准。
- en: I am worried about the impact of these changes on junior developers, but I’m
    also hopeful. I don’t yet see a future that doesn’t require skilled engineers
    working alongside skilled designers and product managers to build great products.
    Even if the number of developers per team is reduced, perhaps we’ll move more
    towards a model like some traditional artisanal industries, where a junior is
    apprenticed more specifically to one senior mentor for a longer period.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我担心这些变化对初级开发人员的影响，但我也抱有希望。我尚未看到一个不需要技能熟练的工程师与技能熟练的设计师和产品经理共同工作来构建优秀产品的未来。即使每个团队的开发人员数量减少，也许我们会更倾向于类似某些传统手工业的模式，即初级人员在较长时间内更专门地向一位资深导师学习。
- en: The German term, “[Wanderjahre](https://en.wikipedia.org/wiki/Journeyman_years)”
    referred to a practice dating back to medieval times in which a young craftsperson
    would move from place to place after their apprenticeship. A large component of
    this journey was to experience different workshops and cultures, developing skills
    and mindset as part of the quest to finally deliver their *Meisterstück (*masterpiece).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 德语词汇“[Wanderjahre](https://en.wikipedia.org/wiki/Journeyman_years)”指的是一种可以追溯到中世纪的实践，年轻的工匠在学徒期后会从一个地方迁移到另一个地方。这段旅程的一个重要组成部分是体验不同的工作坊和文化，发展技能和思维方式，作为最终交付他们的*Meisterstück*（杰作）的追求的一部分。
- en: Perhaps this ancient approach to passing on engineering ‘mastery’ might become
    more appropriate for our next generation product teams.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 或许这种古老的传授工程“精通”方法将更适合我们下一代产品团队。
- en: '**In Part 4 you can read about:**'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**在第4部分中，您可以阅读到：**'
- en: The significant shift Generative AI presents for organisations amidst economic
    downturns and diminished venture capital funding.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成式AI在经济衰退和风险投资资金减少的情况下，对组织造成的重大转变。
- en: 'A thought experiment examining three scenarios: potential growth, cost-cutting,
    and maintaining current budgets with the introduction of Generative AI productivity
    tools.'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个思想实验，考察三种情境：潜在增长、削减成本以及在引入生成式AI生产力工具的情况下维持现有预算。
- en: Hypothetical consequences and challenges, like drastically altered team compositions
    and what these changes could mean for roles such as product managers and engineers.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设的后果和挑战，比如团队组成的剧烈变化，以及这些变化可能对产品经理和工程师等角色意味着什么。
- en: A reflection on the true impact of these tools on productivity and team dynamics,
    providing a foundation for ongoing industry discussions.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对这些工具对生产力和团队动态的真实影响的反思，为持续的行业讨论提供了基础。
- en: Read Part 4 when it’s released
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读第4部分，当它发布时
- en: '**Other articles in this series:**'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**本系列的其他文章：**'
- en: '[Part 1](https://mark-ridley.medium.com/how-generative-ai-will-impact-product-engineering-teams-83a5eaa8fc60)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第1部分](https://mark-ridley.medium.com/how-generative-ai-will-impact-product-engineering-teams-83a5eaa8fc60)'
- en: '[Part 2](https://medium.com/@mark-ridley/the-proliferation-of-generative-ai-coding-tools-and-how-product-engineering-teams-will-use-them-48787ebfcaaa)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第2部分](https://medium.com/@mark-ridley/the-proliferation-of-generative-ai-coding-tools-and-how-product-engineering-teams-will-use-them-48787ebfcaaa)'
- en: P.S. If you’re enjoying these articles on teams, check out my [Teamcraft podcast](https://www.teamcraft.uk/),
    where my co-host Andrew Maclaren and I talk to guests about what makes teams work.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 附注：如果你喜欢这些关于团队的文章，可以查看我的[Teamcraft播客](https://www.teamcraft.uk/)，在这里我和我的共同主持人Andrew
    Maclaren与嘉宾讨论什么使团队有效。
