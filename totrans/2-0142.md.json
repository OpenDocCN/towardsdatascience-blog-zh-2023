["```py\nfrom sklearn.model_selection import train_test_split\n\ndef split_dataset(data, target, train_size=0.5, random_state=42):\n    # Splitting the dataset into training set and remaining data\n    X_train, remaining_data, y_train, remaining_target = train_test_split(\n        data, target, train_size=train_size, random_state=random_state\n    )\n\n    # Splitting the remaining data equally into test and validation sets\n    X_val, X_test, y_val, y_test = train_test_split(\n        remaining_data, remaining_target, test_size=0.5, random_state=random_state\n    )\n\n    return X_train, X_val, X_test, y_train, y_val, y_test\n```", "```py\nfrom sklearn.dummy import DummyClassifier\n\nclf = DummyRegressor().fit(X_train, y_train)\nclf.score(X_test, y_test)\n```", "```py\nimport sklearn\n\nsklearn.metrics.SCORERS.keys()\n```"]