- en: 'Breaking Boundaries: Exploring Function Calling for LLMs'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 打破界限：探索 LLM 的函数调用
- en: 原文：[https://towardsdatascience.com/breaking-boundaries-exploring-function-calling-for-llms-73d063d46fcb](https://towardsdatascience.com/breaking-boundaries-exploring-function-calling-for-llms-73d063d46fcb)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/breaking-boundaries-exploring-function-calling-for-llms-73d063d46fcb](https://towardsdatascience.com/breaking-boundaries-exploring-function-calling-for-llms-73d063d46fcb)
- en: How function calling paves the way for seamless integration of Large Language
    Models with external tools and APIs
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 函数调用如何为大型语言模型（LLM）与外部工具和 API 的无缝集成铺平道路
- en: '[](https://dpoulopoulos.medium.com/?source=post_page-----73d063d46fcb--------------------------------)[![Dimitris
    Poulopoulos](../Images/ce535a1679779f5a2ec8b024e6691e50.png)](https://dpoulopoulos.medium.com/?source=post_page-----73d063d46fcb--------------------------------)[](https://towardsdatascience.com/?source=post_page-----73d063d46fcb--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----73d063d46fcb--------------------------------)
    [Dimitris Poulopoulos](https://dpoulopoulos.medium.com/?source=post_page-----73d063d46fcb--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://dpoulopoulos.medium.com/?source=post_page-----73d063d46fcb--------------------------------)[![Dimitris
    Poulopoulos](../Images/ce535a1679779f5a2ec8b024e6691e50.png)](https://dpoulopoulos.medium.com/?source=post_page-----73d063d46fcb--------------------------------)[](https://towardsdatascience.com/?source=post_page-----73d063d46fcb--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----73d063d46fcb--------------------------------)
    [Dimitris Poulopoulos](https://dpoulopoulos.medium.com/?source=post_page-----73d063d46fcb--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----73d063d46fcb--------------------------------)
    ·8 min read·Aug 10, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----73d063d46fcb--------------------------------)
    ·阅读时间 8 分钟·2023 年 8 月 10 日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/c2db4889afc4841fc06a779401048f6c.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c2db4889afc4841fc06a779401048f6c.png)'
- en: Image generated with SDXL
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 SDXL 生成的图像
- en: The moment I discovered that Large Language Models (LLMs) had gained the ability
    to interact with external tools and APIs, I knew nothing would ever be the same.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 当我发现大型语言模型（LLM）具备与外部工具和 API 互动的能力时，我知道一切将不再相同。
- en: 'Does this move us closer to achieving Artificial General Intelligence (AGI)?
    Maybe not, but it undeniably ushers in a whole new era for AI: one where LLMs
    can execute anything that you can put in a function. Now, this may seem heretical,
    but for me, this brings us closer to my vision of AGI , since I’m not one to fantasize
    about sentient machines or other sci-fi narratives.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这是否使我们更接近实现人工通用智能（AGI）？也许没有，但它无疑开启了人工智能的全新时代：一个 LLM 可以执行任何你能放入函数中的任务的时代。现在，这可能看起来有些异端，但对我来说，这使我们更接近我对
    AGI 的愿景，因为我不是那种幻想有意识机器或其他科幻叙事的人。
- en: 'Just picture this: an AI agent that takes full ownership of a task, communicates
    with other agents operating online, fetches data, and returns with exactly what
    you wished for. This transformative capability not only redefines our interaction
    with the internet, but it reshapes our thought processes as well.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下这样一个场景：一个人工智能代理完全掌控一个任务，与你在线运行的其他代理进行沟通，获取数据，并返回你所期望的结果。这种变革性的能力不仅重新定义了我们与互联网的互动方式，而且还重塑了我们的思维过程。
- en: 'Fast forward a few years: imagine wanting to plan a vacation. The first step
    won’t be to search for tickets online, but rather, to instruct an AI agent to
    plan and organize everything, from start to finish. You’ll only know it’s done
    when a couple of confirmation emails land in your inbox — that’s if email is still
    a thing — and your credit card shows a charge.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 快进几年：假设你想计划一次假期。第一步不是在网上搜索票务，而是指示一个 AI 代理从头到尾规划和组织一切。你只有在收到几封确认邮件时才会知道任务完成了——如果邮件仍然存在的话——并且你的信用卡上显示了一笔费用。
- en: But let’s not get too far ahead. Even in our current reality, you can create
    agents that execute whatever is programmatically possible. It requires some effort
    on your part, though. You’ll need to familiarize yourself with the new function-calling
    ability of the OpenAI model family, and create the custom tool that your model
    will utilize.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 但我们不要走得太远。即使在我们当前的现实中，你也可以创建能够执行任何程序上可能的任务的代理。不过，这需要你付出一些努力。你需要熟悉 OpenAI 模型系列的新函数调用能力，并创建模型将使用的自定义工具。
- en: That’s where this blog post comes in. Consider this a hands-on guide to bring
    your AI agent to life — one that can create events on your personal Google Calendar
    account. However, by simply changing the function the LLM calls, the world is
    your oyster. Ready to dive in?
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是这篇博客文章的用武之地。把它当作一个动手指南，帮助你将 AI 代理变为现实——一个可以在你的个人 Google Calendar 账户上创建事件的代理。然而，通过简单地更改
    LLM 调用的函数，世界将由你掌控。准备好深入了吗？
- en: '[Learning Rate](https://www.dimpo.me/newsletter?utm_source=medium&utm_medium=article&utm_campaign=function-calling)
    is a newsletter for those who are curious about the world of ML and MLOps. If
    you want to learn more about topics like this subscribe [here](https://www.dimpo.me/newsletter?utm_source=medium&utm_medium=article&utm_campaign=function-calling).
    You’ll hear from me on the last Sunday of every month with updates and thoughts
    on the latest MLOps news and articles!'
  id: totrans-14
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[学习率](https://www.dimpo.me/newsletter?utm_source=medium&utm_medium=article&utm_campaign=function-calling)
    是一本面向对 ML 和 MLOps 世界感兴趣的人的通讯。如果你想了解更多类似的主题，请 [订阅](https://www.dimpo.me/newsletter?utm_source=medium&utm_medium=article&utm_campaign=function-calling)。你将在每个月的最后一个星期天收到我的更新和关于最新
    MLOps 新闻和文章的想法！'
- en: The Toolkit
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工具包
- en: First up on our to-do list is building the tool, the function our LLM will call
    to create new calendar events. Our weapon of choice? LangChain — quite possibly
    the fastest growing Python library out there.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们待办事项的首要任务是构建工具，即我们的 LLM 将调用的函数来创建新的日历事件。我们的选择武器？LangChain——可能是发展最快的 Python
    库。
- en: LangChain already comes armed with a multitude of ready-to-use [tools](https://python.langchain.com/docs/integrations/tools/).
    However, its arsenal does not offer a tool for integrating LLMs with the Google
    Calendar API. But hey, no sweat — we’ll create it ourselves!
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: LangChain 已经配备了大量现成的 [工具](https://python.langchain.com/docs/integrations/tools/)。然而，它的武器库中没有提供将
    LLM 与 Google Calendar API 集成的工具。但没关系——我们自己来创建！
- en: 'We kick things off by diving into the Google Calendar Event [reference guide](https://developers.google.com/calendar/api/v3/reference/events).
    This helps us outline what our function signature should resemble. But remember,
    we don’t need a value for everything, so let’s mark what we think to be the most
    crucial arguments and define our function’s input. A small heads up: LangChain
    expects us to use a Pydantic model for this:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从深入了解 Google Calendar Event [参考指南](https://developers.google.com/calendar/api/v3/reference/events)
    开始。这有助于我们概述函数签名的样子。但请记住，我们并不需要为每一项提供值，所以让我们标记出我们认为最关键的参数，并定义函数的输入。小提示：LangChain
    期望我们使用 Pydantic 模型来实现这一点。
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'As you notice, we’re expecting our model to provide a variety of details for
    the event: a summary, location, attendees, start and end times, and so forth.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，我们期望我们的模型提供事件的各种细节：摘要、位置、参与者、开始和结束时间等等。
- en: 'Some of these fields are simple types, such as strings or lists, while others
    require us to roll up our sleeves and define Python classes. So, without further
    ado, let’s dive into that next:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这些字段有些是简单的类型，如字符串或列表，而其他字段则要求我们挽起袖子定义 Python 类。那么，事不宜迟，让我们深入探讨下一步：
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Fantastic, we’ve got our function model ready. Now, onto the next step — crafting
    the custom tool. Our task here is to create a class that inherits from LangChain’s
    `BaseTool` class, and at the very least, implement either `_run` or `_arun`.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 很好，我们已经准备好函数模型。接下来一步——制作自定义工具。我们的任务是创建一个继承自 LangChain 的 `BaseTool` 类的类，至少需要实现
    `_run` 或 `_arun` 方法。
- en: 'We also need to set a few crucial values such as the tool’s `name`, a `description`
    (which nudges the model on when to use it), and the `args_schema` property, which
    outlines the tool’s schema — the one we defined previously. Let’s do it:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要设置一些关键值，如工具的 `name`、`description`（提示模型何时使用它），以及 `args_schema` 属性，后者描述了工具的模式——我们之前定义的模式。让我们开始吧：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Our tool is quite straightforward. We’ve just defined the `_run`function, as
    there’s no need for us to support async calls for this task. The `_run` function’s
    role is to assemble the request body and call another private function, aptly
    named `_create_event`.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的工具非常简单。我们只定义了 `_run` 函数，因为我们不需要为这个任务支持异步调用。`_run` 函数的作用是组装请求体并调用另一个私有函数，恰如其分地命名为
    `_create_event`。
- en: 'Let’s tackle this bit by bit. First off, we need to define the `create_request_body`
    utility function:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐步处理。首先，我们需要定义 `create_request_body` 实用函数：
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Our `create_request_body` function depends on a couple of other utility functions
    to create the JSON object. We define these private function a few lines above
    it.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的`create_request_body`函数依赖于几个其他的实用函数来创建JSON对象。我们在它上面几行定义了这些私有函数。
- en: 'Our next destination? The `_create_event` function. This function constructs
    the service we’ll use to carry out the API call. To get this done, you’ll need
    to secure a credentials file. Not sure how? Just follow this guide: [OAuth Client
    ID credentials](https://developers.google.com/workspace/guides/create-credentials#oauth-client-id).
    Once you download the JSON file, rename it to `credentials.json` and use the function
    below to fetch and store a token:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的下一个目标？`_create_event`函数。这个函数构建了我们将用于执行API调用的服务。为了完成这项工作，你需要获取一个凭据文件。不确定怎么做？只需遵循这个指南：[OAuth客户端ID凭据](https://developers.google.com/workspace/guides/create-credentials#oauth-client-id)。下载JSON文件后，将其重命名为`credentials.json`，然后使用下面的函数来获取和存储令牌：
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Putting all that code together should equip you with the tool you need. This
    may seem like a handful but it’s nothing that you cannot do yourselves, right?
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 将所有这些代码整合在一起应该能为你提供所需的工具。这看起来可能有点复杂，但这不是你自己无法做到的，对吧？
- en: Now, let’s switch gears and create an AI agent that can put this tool to good
    use.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们换个方向，创建一个可以有效利用这个工具的AI代理。
- en: The Agent
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代理
- en: 'LangChain really takes the guesswork out of this part. All you need to do is
    initialize a new agent of the `[OPENAI_FUNCTIONS](https://python.langchain.com/docs/modules/agents/agent_types/openai_functions_agent)`
    type. Next, you’ll need to equip this agent with the tools it can access and then
    run it on a user query. Sounds exciting? Let’s jump right into it:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: LangChain确实消除了这一部分的猜测。你只需初始化一个新的`[OPENAI_FUNCTIONS](https://python.langchain.com/docs/modules/agents/agent_types/openai_functions_agent)`类型的代理。接下来，你需要为这个代理提供可以访问的工具，然后在用户查询上运行它。听起来很激动人心？那就让我们直接进入吧：
- en: '[PRE5]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Last but not least, it’s time to put this all to the test. Run your Python
    file and try out a test query like:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 最后但同样重要的是，是时候将这一切付诸实践了。运行你的Python文件，并尝试一个测试查询，例如：
- en: “Create a new event for my meeting with John, on the 10th of August, at noon
    (Athens/Greece). Don’t forget to invite John ([john@example.com](mailto:john@example.com))
    and set up an online meeting room.”
  id: totrans-38
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “为我与John的会议创建一个新的事件，时间定在8月10日中午（雅典/希腊）。别忘了邀请John（[john@example.com](mailto:john@example.com)）并设置一个在线会议室。”
- en: Chances are this will work like a charm, though you might need a bit of prompt
    engineering. But there you have it — you’ve done it! Now, you’re equipped to create
    AI agents that can execute anything you can capture in code. How exhilarating
    is that?
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能会非常顺利，不过你可能需要一些提示工程。但是你做到了！现在，你已经具备了创建可以执行任何你能编写代码的AI代理的能力。这有多令人兴奋？
- en: Conclusion
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In this exciting journey, we explored how OpenAI’s Large Language Models (LLMs)
    integrate with external tools and APIs. We delved into how this game-changing
    feature is set to redefine our interaction with AI and the internet, promising
    a future where AI agents can seamlessly execute any task that can be programmatically
    defined.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在这次激动人心的旅程中，我们探索了OpenAI的大型语言模型（LLMs）如何与外部工具和API集成。我们*深入探讨*了这一改变游戏规则的特性如何重新定义我们与AI和互联网的互动，承诺未来AI代理可以无缝地执行任何可以编程定义的任务。
- en: From understanding the crucial arguments of function signatures to defining
    Python classes, we took a hands-on approach to creating a model that can interact
    with the Google Calendar API, using LangChain, an rapidly growing Python library.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 从理解函数签名的重要参数到定义Python类，我们采取了实践的方法来创建一个可以与Google日历API交互的模型，使用了一个快速发展的Python库LangChain。
- en: The result of our venture is an AI agent capable of creating events on a personal
    Google Calendar. However, you should now be able to create an agent that can do
    anything that you can put in a function.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的尝试结果是一个能够在个人Google日历上创建事件的AI代理。然而，你现在应该能够创建一个可以执行任何你能放入函数中的任务的代理。
- en: The future of AI and its interaction with the digital world is bright, and as
    we continue to harness the power of AI, the possibilities for what we can achieve
    are boundless. Let’s see what you will build next!
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: AI的未来以及它与数字世界的互动前景光明，随着我们继续利用AI的力量，我们可以实现的可能性是无限的。让我们看看你接下来会构建什么！
- en: About the Author
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于作者
- en: My name is [Dimitris Poulopoulos](https://www.dimpo.me/?utm_source=medium&utm_medium=article&utm_campaign=function-calling),
    and I’m a machine learning engineer working for [HPE](https://www.hpe.com/us/en/home.html).
    I have designed and implemented AI and software solutions for major clients such
    as the European Commission, IMF, the European Central Bank, IKEA, Roblox and others.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我的名字是 [Dimitris Poulopoulos](https://www.dimpo.me/?utm_source=medium&utm_medium=article&utm_campaign=function-calling)，我是一名在
    [HPE](https://www.hpe.com/us/en/home.html) 工作的机器学习工程师。我为主要客户如欧盟委员会、国际货币基金组织、欧洲中央银行、宜家、Roblox
    等设计和实施了人工智能和软件解决方案。
- en: If you are interested in reading more posts about Machine Learning, Deep Learning,
    Data Science, and DataOps, follow me on [Medium](https://towardsdatascience.com/medium.com/@dpoulopoulos/follow),
    [LinkedIn](https://www.linkedin.com/in/dpoulopoulos/), or [@james2pl](https://twitter.com/james2pl)
    on Twitter.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对阅读更多关于机器学习、深度学习、数据科学和数据操作的文章感兴趣，可以在 [Medium](https://towardsdatascience.com/medium.com/@dpoulopoulos/follow)、[LinkedIn](https://www.linkedin.com/in/dpoulopoulos/)
    或在 Twitter 上关注 [@james2pl](https://twitter.com/james2pl)。
- en: Opinions expressed are solely my own and do not express the views or opinions
    of my employer.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 所表达的观点仅代表我个人，并不反映我雇主的观点或意见。
