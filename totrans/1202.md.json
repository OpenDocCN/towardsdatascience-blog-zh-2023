["```py\nkubectl create namespace docker-registry\n```", "```py\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: docker-registry-pv-claim\n  namespace: docker-registry\nspec:\n  accessModes:\n    - ReadWriteOnce\n  volumeMode: Filesystem\n  resources:\n    requests:\n      storage: 60Gi\n  storageClassName: csi-cinder-classic\n```", "```py\nkubectl apply -f registry-pvc.yamlb\n```", "```py\nkubectl get pvc docker-registry-pv-claim -n docker-registry\n\n# NAME                   STATUS   VOLUME  CAPACITY   ACCESS MODES   STORAGECLASS\n# docker-registry-pv-claim  Bound    ***   60Gi       RWO            csi-cinder-classic\n```", "```py\nexport REGISTRY_USER=admin\nexport REGISTRY_PASS=registryPass\nexport DESTINATION_FOLDER=./registry-creds\n\n# Backup credentials to local files (in case you'll forget them later on)\nmkdir -p ${DESTINATION_FOLDER}\necho ${REGISTRY_USER} >> ${DESTINATION_FOLDER}/registry-user.txt\necho ${REGISTRY_PASS} >> ${DESTINATION_FOLDER}/registry-pass.txt\n\ndocker run --entrypoint htpasswd registry:2.7.0 \\\n    -Bbn ${REGISTRY_USER} ${REGISTRY_PASS} \\\n    > ${DESTINATION_FOLDER}/htpasswd\n\nunset REGISTRY_USER REGISTRY_PASS DESTINATION_FOLDER\n```", "```py\nsh gen-pass.sh\n```", "```py\nhelm repo add twuni https://helm.twun.io\n```", "```py\nhelm repo update\n```", "```py\nhelm search repo docker-registry\n# NAME                    CHART VERSION   APP VERSION     DESCRIPTION\n# twuni/docker-registry   2.2.2           2.8.1           A Helm chart for Docker Registry\n```", "```py\n---\nreplicaCount: 1\npersistence:\n  enabled: true\n  size: 60Gi\n  deleteEnabled: true\n  storageClass: csi-cinder-classic\n  existingClaim: docker-registry-pv-claim\nsecrets:\n  htpasswd: admin:$2y$05$Gh/3ppmkuIXJIVyBBtHf0ug.wnnJvbtSEzlXz6z/7oO7XvF/xq7Ni\n```", "```py\nhelm install -f .\\registry-chart.yaml docker-registry --namespace docker-registry twuni/docker-registry\n```", "```py\nkubectl get pods -n docker-registry\n# NAME                              READY   STATUS    RESTARTS\n# docker-registry-9fa1234ba-gaf16   1/1     Running   0\n```", "```py\nhelm upgrade -f .\\registry-chart.yaml docker-registry --namespace docker-registry twuni/docker-registry\n```", "```py\nhelm uninstall docker-registry --namespace docker-registry\n```", "```py\nkubectl delete namespace docker-registry\n```", "```py\n---\nkind: IngressRoute\napiVersion: traefik.containo.us/v1alpha1\nmetadata:\n  name: docker-registry\n  namespace: docker-registry\n\nspec:\n  entryPoints:\n    - websecure\n  routes:\n    - match: Host(`YOUR_DOMAIN`)\n      kind: Rule\n      services:\n        - name: docker-registry\n          port: 5000\n```", "```py\nkubectl apply -f ingressroute.yaml\n```", "```py\nkubectl describe ingressroute docker-registry -n docker-registry\n```", "```py\ndocker login \\\n   -u $(cat ./registry-creds/registry-user.txt) \\\n   -p $(cat ./registry-creds/registry-pass.txt) \\\n   YOUR_DOMAIN\n```", "```py\ndocker pull nginx\n```", "```py\ndocker tag nginx YOUR_DOMAIN/my-nginx\n```", "```py\ndocker push YOUR_DOMAIN/my-nginx\n```", "```py\nkubectl create namespace test\n```", "```py\nkubectl create secret docker-registry regcred --docker-server=YOUR_DOMAIN --docker-username=admin --docker-password=registryPass -n test\n```", "```py\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  namespace: test\nspec:\n  selector:\n    matchLabels:\n      app: nginx\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: YOUR_DOMAIN/my-nginx\n        ports:\n        - containerPort: 80\n      imagePullSecrets:\n        - name: regcred\n```", "```py\nkubectl apply -f test-nginx.yaml\n```", "```py\nkubectl create namespace docker-registry\nkubectl apply -f registry-pvc.yaml\nhelm repo add twuni https://helm.twun.io\nhelm repo update\nhelm search repo docker-registry\nhelm install -f values.yaml docker-registry --namespace docker-registry twuni/docker-registry\nkubectl apply -f registry-ingressroute.yaml\n```"]