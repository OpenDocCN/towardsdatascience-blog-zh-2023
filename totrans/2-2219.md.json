["```py\n-- Sample transactional table\nCREATE TABLE Pricing_info (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(50),\n    Quantity INT,\n    UnitPrice DECIMAL(10, 2),\n    OperationDate DATE\n);\n```", "```py\n-- Create a Staging table without constraints\nCREATE TABLE StagingTable_pricing (\n    ProductID INT,\n    ProductName VARCHAR(50),\n    Quantity INT,\n    UnitPrice DECIMAL(10, 2),\n    OperationDate DATE,\n    OperationType VARCHAR(10)\n);\n```", "```py\n-- Create the trigger\nCREATE TRIGGER TransactionTrigger_pricing_Insert\nON Pricing_info\n--Trigger Event\nAFTER INSERT\nAS\nBEGIN\n    -- Insert new records into the staging table\n    INSERT INTO StagingTable_pricing (ID, Column1, Column2, OperationType)\n    SELECT ID, Column1, Column2, 'INSERT'\n    FROM inserted\nEND;\n```", "```py\n-- Create the trigger\nCREATE TRIGGER TransactionTrigger_pricing_update\nON Pricing_info\n--Trigger Event\nAFTER UPDATE\nAS\nBEGIN\n\n    -- Insert record in the staging table with the data that was updated\n    INSERT INTO StagingTable_pricing (ID, Column1, Column2, OperationType)\n    SELECT ID, Column1, Column2, 'UPDATE'\n    FROM inserted\nEND;\n```", "```py\n-- Create the trigger\nCREATE TRIGGER TransactionTrigger_pricing_Delete\nON Pricing_info\n--Trigger Event\nAFTER DELETE\nAS\nBEGIN\n    -- Insert record in the staging table with the data that was deleted\n    INSERT INTO StagingTable_pricing (ID, Column1, Column2, OperationType)\n    SELECT ID, Column1, Column2, 'DELETE'\n    FROM deleted\nEND;\n```", "```py\nUPDATE TABLE Pricing_info SET OperationDate=OperationDate\n```"]