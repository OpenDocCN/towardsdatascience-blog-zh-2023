["```py\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom adjustText import adjust_text\n```", "```py\ndf = pd.read_csv('Data/LithologySummary.csv', index_col='WELL')\n```", "```py\nzechstein_well_intersections = pd.read_csv('Data/Zechstein_WellIntersection.csv')\n```", "```py\nlith_names = list(df.columns)\n```", "```py\n# Set the number of columns for your subplot grid\nnum_cols = 3\n\n# Get the number of wells (rows in the DataFrame)\nnum_wells = len(df)\n\n# Calculate the number of rows needed for the subplot grid\nnum_rows = np.ceil(num_wells / num_cols).astype(int)\n```", "```py\nindexes = list(range(0, len(lith_names)))\nwidth = 2*np.pi / len(lith_names)\nangles = [element * width for element in indexes]\n\ncolours = [\"#ae1241\", \"#5ba8f7\", \"#c6a000\", \"#0050ae\", \n\"#9b54f3\", \"#ff7d67\", \"#dbc227\", \"#008c5c\"]\n\nlabel_loc = np.linspace(start=0, stop=2 * np.pi, num=len(lith_names))\n```", "```py\n# Create a figure\nfig = plt.figure(figsize=(20, num_rows * 7), linewidth=10,\n                 edgecolor='#393d5c', \n                 facecolor='#25253c')\n```", "```py\n# Create a grid layout\ngrid = plt.GridSpec(num_rows, num_cols, wspace=0.5, hspace=0.5)\n```", "```py\n# Loop over each row in the DataFrame\nfor i, (index, row) in enumerate(df.iterrows()):\n    ax = fig.add_subplot(grid[i // num_cols, i % num_cols], projection='polar')\n\n    bars = ax.bar(x=angles, height=row.values, width=width, \n                  edgecolor='white', zorder=2, alpha=0.8, color=colours[i])\n\n    bars_bg = ax.bar(x=angles, height=100, width=width, color='#393d5c',\n                     edgecolor='#25253c', zorder=1)\n\n    ax.set_title(index, pad=35, fontsize=22, fontweight='bold', color='white')\n    ax.set_ylim(0, 100)\n    ax.set_yticklabels([])\n    ax.set_xticks([])\n    ax.grid(color='#25253c')\n    for angle, height, lith_name in zip(angles, row.values, lith_names):\n        rotation_angle = np.degrees(angle)\n        if angle < np.pi:\n            rotation_angle -= 90\n        elif angle == np.pi:\n            rotation_angle -= 90\n        else:\n            rotation_angle += 90\n        ax.text(angle, 110, lith_name.upper(), \n                ha='center', va='center', \n                rotation=rotation_angle, rotation_mode='anchor', fontsize=12, \n                fontweight='bold', color='white')\n```", "```py\n# Add the scatter plot in the last subplot (subplot 9)\nax = fig.add_subplot(grid[num_rows - 1, num_cols - 1], facecolor='#393d5c')\nax.scatter(zechstein_well_intersections['X_LOC'], \nzechstein_well_intersections['Y_LOC'], c=colours, s=60)\n\nax.grid(alpha=0.5, color='#25253c')\nax.set_axisbelow(True)\nax.set_ylabel('NORTHING', fontsize=12, \n                fontweight='bold', color='white')\nax.set_xlabel('EASTING', fontsize=12, \n                fontweight='bold', color='white')\n\nax.tick_params(axis='both', colors='white')\nax.ticklabel_format(style='plain')\nax.set_title('WELL LOCATIONS', pad=35, fontsize=22, fontweight='bold', color='white')\n\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white') \nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\nax.text(0.0, -0.2, 'Well 16/11-1 ST3 does not contain location information', ha='left', va='bottom', fontsize=10,\n        color='white', transform=ax.transAxes)\n\nlabels = []\nfor i, row in zechstein_well_intersections.iterrows():\n    labels.append(ax.text(row['X_LOC'], row['Y_LOC'], row['WELL'], color='white', fontsize=14))\n```", "```py\nadjust_text(labels, expand_points=(1.2, 1.2), expand_objects=(1.2, 1.2))\n```", "```py\nfootnote = \"\"\"\nData Source: \nBormann, Peter, Aursand, Peder, Dilib, Fahad, Manral, Surrender, & Dischington, Peter. (2020). FORCE 2020 Well well log and lithofacies dataset for\nmachine learning competition [Data set]. Zenodo. https://doi.org/10.5281/zenodo.4351156\n\nFigure Created By: Andy McDonald\n\"\"\"\n\nplt.suptitle('LITHOLOGY VARIATION WITHIN THE ZECHSTEIN GP.', size=36, fontweight='bold', color='white')\nplot_sub_title = \"\"\"CHARTS OF LITHOLOGY PERCENTAGES ACROSS 8 WELLS FROM THE NORWEGIAN CONTINENTAL SHELF\"\"\"\n\nfig.text(0.5, 0.95, plot_sub_title, ha='center', va='top', fontsize=18, color='white', fontweight='bold')\nfig.text(0.1, 0.01, footnote, ha='left', va='bottom', fontsize=14, color='white')\n\nplt.show()\n```", "```py\n# Set the number of columns for your subplot grid\nnum_cols = 3\n\n# Get the number of wells (rows in the DataFrame)\nnum_wells = len(df)\n\n# Calculate the number of rows needed for the subplot grid\nnum_rows = np.ceil(num_wells / num_cols).astype(int)\n\nindexes = list(range(0, len(lith_names)))\nwidth = 2*np.pi / len(lith_names)\nangles = [element * width for element in indexes]\n\ncolours = [\"#ae1241\", \"#5ba8f7\", \"#c6a000\", \"#0050ae\", \"#9b54f3\", \"#ff7d67\", \"#dbc227\", \"#008c5c\"]\n\nlabel_loc = np.linspace(start=0, stop=2 * np.pi, num=len(lith_names))\n\n# Create a figure\nfig = plt.figure(figsize=(20, num_rows * 7), linewidth=10,\n                 edgecolor='#393d5c', \n                 facecolor='#25253c')\n\n# Create a grid layout\ngrid = plt.GridSpec(num_rows, num_cols, wspace=0.5, hspace=0.5)\n\n# Loop over each row in the DataFrame to create the radial bar charts per well\nfor i, (index, row) in enumerate(df.iterrows()):\n    ax = fig.add_subplot(grid[i // num_cols, i % num_cols], projection='polar')\n    bars = ax.bar(x=angles, height=row.values, width=width, \n                  edgecolor='white', zorder=2, alpha=0.8, color=colours[i])\n\n    bars_bg = ax.bar(x=angles, height=100, width=width, color='#393d5c',\n                     edgecolor='#25253c', zorder=1)\n\n    # Set up labels, ticks and grid\n    ax.set_title(index, pad=35, fontsize=22, fontweight='bold', color='white')\n    ax.set_ylim(0, 100)\n    ax.set_yticklabels([])\n    ax.set_xticks([])\n    ax.grid(color='#25253c')\n\n    #Set up the lithology / category labels to appear at the correct angle\n    for angle, height, lith_name in zip(angles, row.values, lith_names):\n        rotation_angle = np.degrees(angle)\n        if angle < np.pi:\n            rotation_angle -= 90\n        elif angle == np.pi:\n            rotation_angle -= 90\n        else:\n            rotation_angle += 90\n        ax.text(angle, 110, lith_name.upper(), \n                ha='center', va='center', \n                rotation=rotation_angle, rotation_mode='anchor', fontsize=12, \n                fontweight='bold', color='white')\n\n# Add the scatter plot in the last subplot (subplot 9)\nax = fig.add_subplot(grid[num_rows - 1, num_cols - 1], facecolor='#393d5c')\nax.scatter(zechstein_well_intersections['X_LOC'], zechstein_well_intersections['Y_LOC'], c=colours, s=60)\nax.grid(alpha=0.5, color='#25253c')\nax.set_axisbelow(True)\n\n# Set up the labels and ticks for the scatter plot\nax.set_ylabel('NORTHING', fontsize=12, \n                fontweight='bold', color='white')\nax.set_xlabel('EASTING', fontsize=12, \n                fontweight='bold', color='white')\n\nax.tick_params(axis='both', colors='white')\nax.ticklabel_format(style='plain')\nax.set_title('WELL LOCATIONS', pad=35, fontsize=22, fontweight='bold', color='white')\n\n# Set the outside borders of the scatter plot to white\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white') \nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Add a footnote to the scatter plot explaining missing well\nax.text(0.0, -0.2, 'Well 16/11-1 ST3 does not contain location information', ha='left', va='bottom', fontsize=10,\n        color='white', transform=ax.transAxes)\n\n# Set up and display well name labels\nlabels = []\nfor i, row in zechstein_well_intersections.iterrows():\n    labels.append(ax.text(row['X_LOC'], row['Y_LOC'], row['WELL'], color='white', fontsize=14))\n\n# Use adjust text to ensure text labels do not overlap with each other or the data points\nadjust_text(labels, expand_points=(1.2, 1.2), expand_objects=(1.2, 1.2))\n\n# Create a footnote explaining data source\n\nfootnote = \"\"\"\nData Source: \nBormann, Peter, Aursand, Peder, Dilib, Fahad, Manral, Surrender, & Dischington, Peter. (2020). FORCE 2020 Well well log and lithofacies dataset for\nmachine learning competition [Data set]. Zenodo. https://doi.org/10.5281/zenodo.4351156\n\nFigure Created By: Andy McDonald\n\"\"\"\n\n# Display overall infographic title and footnote\nplt.suptitle('LITHOLOGY VARIATION WITHIN THE ZECHSTEIN GP.', size=36, fontweight='bold', color='white')\nplot_sub_title = \"\"\"CHARTS OF LITHOLOGY PERCENTAGES ACROSS 8 WELLS FROM THE NORWEGIAN CONTINENTAL SHELF\"\"\"\n\nfig.text(0.5, 0.95, plot_sub_title, ha='center', va='top', fontsize=18, color='white', fontweight='bold')\nfig.text(0.1, 0.01, footnote, ha='left', va='bottom', fontsize=14, color='white')\n\nplt.show()\n```"]