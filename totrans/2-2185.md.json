["```py\n# Listing 1\n\nnp.random.seed(2)\nsample_size = 100\nmu1 = 5\nsigma1 = 1\nmu2 = 9\nsigma2 = 0.8\ndist1 = norm.rvs(loc = mu1, scale = sigma1, size=sample_size)\ndist2 = norm.rvs(loc = mu2, scale = sigma2, size=sample_size)\n\nx = np.arange(0, 13, 0.01)\npdf1 = norm.pdf(x, loc = mu1, scale = sigma1)\npdf2 = norm.pdf(x, loc = mu2, scale = sigma2)\nmix_coeffs = [0.7, 0.3]\npdf = mix_coeffs[0]*pdf1+mix_coeffs[1]*pdf2\n\ndata = np.zeros((sample_size, 2))\ndata[:, 0] = dist1\ndata[:, 1] = dist2\n\nrandom_idx = np.random.choice(np.arange(2),\n                 size=(sample_size,), p=mix_coeffs)\nsample = data[np.arange(sample_size), random_idx]\n\nplt.figure(figsize=(8, 5))\nnum_bins = 40\nplt.plot(sample, np.zeros(len(sample)), marker='|', markersize=15,\n         linestyle='None', alpha=1)\nplt.plot(x, pdf, color='red', linewidth=2, label=\"PDF\")\nplt.xlim([0, 13])\nplt.xlabel('$x$', fontsize=16)\nplt.ylabel('Probability density', fontsize=16)\nplt.legend(loc='best', fontsize=14)\n\nplt.show()\n```", "```py\n# Listing 2\nplt.figure(figsize=(8, 5))\nnum_bins = 20\nplt.hist(sample, density=True, bins = num_bins,\n         edgecolor='black', linewidth=1)\nplt.plot(x, pdf, color='red', linewidth=2, label=\"PDF\")\nplt.xlim([0, 13])\nplt.xlabel('$x$', fontsize=16)\nplt.ylabel('Probability density', fontsize=16)\nplt.legend(loc='best', fontsize=14)\nplt.savefig('fig2.png', dpi=300, bbox_inches='tight')\nplt.show()\n```", "```py\nplt.hist(sample, density=True, bins = num_bins,\n         edgecolor='black', linewidth=1)\n```", "```py\nbin_width = (max(sample) - min(sample)) / num_bins\nplt.hist(sample, density=True, \n         bins = np.arange(min(sample), max(sample) + bin_width, bin_width),\n         edgecolor='black', linewidth=1)\n```", "```py\n# Listing 4\n\nfig, (ax1, ax2) = plt.subplots(2, 1, figsize=(10,10))\nplt.subplots_adjust(hspace=0.4)\nnum_bins = 20\nbin_width = (max(sample) - min(sample)) / num_bins\nax1.hist(sample, density=True, \n         bins = np.arange(min(sample), max(sample) + bin_width, bin_width),\n         edgecolor='black', linewidth=1)\nax1.plot(x, pdf, color='red', linewidth=2, label=\"PDF\")\nax1.set_xlim([0, 13])\nax1.set_ylim([0, 0.45])\nax1.set_xlabel('$x$', fontsize=16)\nax1.set_ylabel('Probability density', fontsize=16)\nax1.legend(loc='best', fontsize=14)\nax1.set_title('a={}, b={}'.format(np.round(min(sample), 3),\n                                  np.round(max(sample), 3)), fontsize=16)\n\nax2.hist(sample, density=True, \n         bins = np.arange(1.15, 12 + bin_width, bin_width),\n         edgecolor='black', linewidth=1)\nax2.plot(x, pdf, color='red', linewidth=2, label=\"PDF\")\nax2.set_xlim([0, 13])\nax2.set_ylim([0, 0.45])\nax2.set_xlabel('$x$', fontsize=16)\nax2.set_ylabel('Probability density', fontsize=16)\nax2.legend(loc='best', fontsize=14)\nax2.set_title('a={}, b={}'.format(1.15, 12), fontsize=16)\n\nplt.plot()\n```", "```py\n# Listing 5\n\nnp.random.seed(0)\nn_samples = 100\nsample_size = 80\nh_list = np.arange(0.2, 2.7, 0.15)\nmu = 5\nsigma = 1\nsamples = norm.rvs(loc = mu, scale = sigma,\n                   size=n_samples*sample_size).reshape(n_samples, sample_size)\n\nxt_list = np.arange(mu-3*sigma, mu+3*sigma, 0.05)\nf_xt = norm.pdf(xt_list, loc = mu, scale = sigma)\navg_mse_list = []\navg_var_list = []\navg_bias_sq_list =[]\nfor h in h_list:\n    fhat_xt_list = []\n    for i in range(n_samples):\n        (ni, bins) = np.histogram(samples[i], density=True,\n                                  bins = np.arange(min(samples[i]),\n                                  max(samples[i]) + h, h))\n        fhat_xt_ind = np.digitize(xt_list, bins)-1\n        fhat_xt = np.pad(ni, [1,1], 'constant',\n                         constant_values=0).take(fhat_xt_ind+1, mode='clip') \n        fhat_xt_list.append(fhat_xt)\n    avg_bias_sq_list.append(((np.vstack(fhat_xt_list).mean(axis=0)-f_xt)**2).mean())\n    avg_var_list.append(np.vstack(fhat_xt_list).var(axis=0).mean())\n    avg_mse_list.append(np.mean((np.vstack(fhat_xt_list)-f_xt)**2).mean())\n\nplt.plot(h_list, avg_var_list, \"-o\", label=\"Var\")\nplt.plot(h_list, avg_bias_sq_list, \"-o\", label=\"$Bias^2$\")\nplt.plot(h_list, avg_mse_list, \"-o\", label=\"MSE\")\nplt.xlabel(\"h\", fontsize=14)\nplt.ylabel(\"Avg MSE, Avg Var, Avg $Bias^2$\", fontsize=14)\nplt.legend(loc=\"best\")\nplt.show()\n```", "```py\n# Listing 6\n\nh_list = [2.3, 0.8, 0.15]\nlabels = [\"Underfitting\", \"Right fit\", \"Overfitting\"]\nx = np.arange(1, 10, 0.01)\nf_x = norm.pdf(x, loc = mu, scale = sigma)\nfig, ax = plt.subplots(1, 3, figsize=(17,6))\nfor i in range(len(ax)):\n    p = 3\n    ax[i].hist(samples[p], density=True,\n               bins = np.arange(min(samples[p]),\n                                max(samples[p]) + h_list[i], h_list[i]),\n               edgecolor='black', linewidth=1)  \n    ax[i].plot(x, f_x, color='red', label=\"PDF\", linewidth=2)\n    ax[i].set_xlabel('$x$', fontsize=24)\n    ax[i].set_title(\"{} (h={})\".format(labels[i], h_list[i]), fontsize=22)\n    ax[i].legend(loc='best', fontsize=15)\nax[0].set_ylabel('Probability density', fontsize=24)\nplt.plot()\n```", "```py\n(3.5*samples.std(axis=1, ddof=1)*samples.shape[1]**(-1/3)).mean()\n```", "```py\n0.8005\n```", "```py\n# Listing 7\n\ndef kde(x, data, h, dist=norm(0, 1)):\n    n = len(data)\n    K = dist.pdf((x.repeat(n).reshape(len(x), n) - data) / h)\n    return np.sum(K, axis=1) / n / h\n\nh = 0.75\nx = np.arange(0, 13, 0.01)\nfhat = kde(x, sample, h, dist=uniform(loc=-1, scale=2))\n\nplt.figure(figsize=(14, 5))\nplt.plot(x, fhat, label='KDE')\nplt.plot(x, pdf, color='red', linewidth=2, label=\"PDF\")\nplt.xlim([0, 13])\nplt.xlabel('$x$', fontsize=20)\nplt.ylabel('Probability density', fontsize=20)\nplt.legend(loc='best', fontsize=18)\nplt.show()\n```", "```py\n# Listing 8\n\ndef plot_kernel(x, data, h):\n    n = len(data)\n    K = norm(0,1).pdf((x.repeat(n).reshape(len(x), n) - data) / h) / h \n    for i in range(K.shape[1]-1):\n        plt.plot(x, K[:,i], color=\"grey\", alpha=0.3)\n    plt.plot(x, K[:,i+1], color=\"grey\", alpha=0.3, label=\"$K_h(x-X_i)$\")\n\nh=0.75\nx = np.arange(0, 13, 0.01)\nfhat = kde(x, sample, h)  \n\nplt.figure(figsize=(14, 5))\nplt.plot(x, fhat, label='KDE', linewidth=2)\nplt.plot(x, pdf, color='red', linewidth=2, label=\"PDF\")\nplot_kernel(x, sample, h)\nplt.xlim([0, 13])\nplt.xlabel('$x$', fontsize=20)\nplt.ylabel('Probability density', fontsize=20)\nplt.legend(loc='best', fontsize=15)\nplt.show()\n```", "```py\n# Listing 9\n\nnp.random.seed(5)\nn_samples = 100\nsample_size = 500\nh_list = np.arange(0.14, 0.52, 0.02)\nmu = 5\nsigma = 1\nsamples = norm.rvs(loc = mu, scale = sigma,\n                   size=n_samples*sample_size).reshape(n_samples, sample_size)\n\nxt_list = np.arange(mu-4*sigma, mu+4*sigma, 0.02)\nf_xt = norm.pdf(xt_list, loc = mu, scale = sigma)\navg_mse_list = []\navg_var_list = []\navg_bias_sq_list =[]\nfor h in h_list:\n    fhat_xt_list = []\n    for i in range(n_samples):\n        fhat_xt = fhat = kde(xt_list, samples[i], h)  \n        fhat_xt_list.append(fhat_xt)\n    avg_bias_sq_list.append(((np.vstack(fhat_xt_list).mean(axis=0)-f_xt)**2).mean())\n    avg_var_list.append(np.vstack(fhat_xt_list).var(axis=0).mean())\n    avg_mse_list.append(np.mean((np.vstack(fhat_xt_list)-f_xt)**2).mean())\n\nplt.plot(h_list, avg_var_list, \"-o\", label=\"Var\")\nplt.plot(h_list, avg_bias_sq_list, \"-o\", label=\"$Bias^2$\")\nplt.plot(h_list, avg_mse_list, \"-o\", label=\"MSE\")\nplt.xlabel(\"h\", fontsize=14)\nplt.ylabel(\"Avg MSE, Avg Var, Avg $Bias^2$\", fontsize=14)\nplt.legend(loc=\"best\")\nplt.show()\n```", "```py\n(1.06*samples.std(axis=1, ddof=1)*samples.shape[1]**(-1/5)).mean()\n```", "```py\n0.3060\n```", "```py\n# Listing 10\n\nh_list = [0.1, 0.31, 1]\nlabels = [\"Underfitting\", \"Right fit\", \"Overfitting\"]\nx = np.arange(1, 10, 0.01)\nf_x = norm.pdf(x, loc = mu, scale = sigma)\nfig, ax = plt.subplots(1, 3, figsize=(17,6))\nfor i in range(len(ax)):\n    ax[i].plot(x, f_x, color='red', label=\"PDF\", linewidth=2)\n    fhat = kde(x, samples[1], h_list[i])  \n    ax[i].plot(x, fhat, linewidth=2, linestyle=\"--\", label=\"KDE\")\n    ax[i].set_xlabel('$x$', fontsize=24)\n    ax[i].legend(loc='best', fontsize=15)\n    ax[i].set_title('h={}'.format(h_list[i]), fontsize=22)\nax[0].set_ylabel('Probability density', fontsize=24)\nplt.plot()\n```", "```py\n# Listing 11\n\nx = np.arange(0, 13, 0.01)\nf_x = norm.pdf(x, loc = mu, scale = sigma)\nh1 = 1.06 * sample.std(ddof=1) * len(sample)**(-1/5)\nh2 = sample.std(ddof=1) * len(sample)**(-1/5)\nplt.figure(figsize=(10, 7))\nplt.plot(x, pdf, color='red', label=\"PDF\", linewidth=1)\nfhat1 = kde(x, sample, h1)  \nfhat2 = kde(x, sample, h2)  \nsns.kdeplot(data=sample, color=\"green\", linewidth=2, label=\"KDE, SciPy\")\nplt.plot(x, fhat1, linewidth=2, linestyle=\"--\", color= \"blue\",\n         label=\"KDE, $h=1.06\\hat{\\sigma}n^{-1/5}$\")\nplt.plot(x, fhat2, linewidth=2, linestyle=\"--\", color=\"black\",\n         label=\"KDE, $h=\\hat{\\sigma}n^{-1/5}$\")\n\nplt.xlim([0, 13])\nplt.xlabel('$x$', fontsize=20)\nplt.legend(loc='best', fontsize=13)\nplt.ylabel('Probability density', fontsize=20)\nplt.plot()\n```"]