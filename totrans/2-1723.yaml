- en: Python getattr() Function Explained
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/python-getattr-function-explained-pyshark-cc7f49c59b2e](https://towardsdatascience.com/python-getattr-function-explained-pyshark-cc7f49c59b2e)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In this article we will explore how to use the Python getattr() function
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://pyshark.medium.com/?source=post_page-----cc7f49c59b2e--------------------------------)[![Misha
    Sv](../Images/d3f9605e2c7020246ff793869728e218.png)](https://pyshark.medium.com/?source=post_page-----cc7f49c59b2e--------------------------------)[](https://towardsdatascience.com/?source=post_page-----cc7f49c59b2e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----cc7f49c59b2e--------------------------------)
    [Misha Sv](https://pyshark.medium.com/?source=post_page-----cc7f49c59b2e--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----cc7f49c59b2e--------------------------------)
    ·4 min read·Mar 20, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a5e64fb6704e20c5a2c1070c9a117bc2.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Shane Aldendorff](https://unsplash.com/@pluyar?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/3AzL-IR3v7Y?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: '**Table of Contents**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Accessing attributes of objects dynamically using getattr()
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Building dynamic APIs using getattr()
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Loading modules dynamically using getattr()
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Python **getattr()** function is a built-in function that allows to dynamically
    access attributes of an object. Specifically, it is used to retrieve names attributes
    of Python objects.
  prefs: []
  type: TYPE_NORMAL
- en: 'The syntax of the Python **getattr()** function is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'where:'
  prefs: []
  type: TYPE_NORMAL
- en: '*object* — Python object from which we want to retrieve an attribute'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*name* — name of the named attribute of a Python object'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*default* — optional parameter to specify the return value if the named attribute
    is not found. If it’s not specified, the code will return an **AttributeError**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The **getattr()** function, when called, searches for a specified named attribute
    of a given Python object and returns its value.
  prefs: []
  type: TYPE_NORMAL
- en: In the following sections we will explore some of the common use cases for **getattr()**
    function.
  prefs: []
  type: TYPE_NORMAL
- en: Accessing attributes of objects dynamically using getattr()
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the most popular use cases for the Python **getattr()** function is accessing
    attributes of an object dynamically.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s start by creating a new Python object **Car** that has three attributes
    ( *make*, *model*, *price*):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, we will create an instance of this class with some sample values:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Now we can use **getattr()** function to access attributes of this class dynamically.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, let’s say we want to retrieve the **price** attribute for the
    **car** object we just created:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'and you should get:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: In case you try to retrieve the attribute that the object doesn’t have, you
    will see an **AttributeError**.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, this object has no attribute **colour**, so let’s see what happens
    when we try to retrieve it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'and you should get:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: This approach is very useful if you are working with multiple classes where
    you don’t know whether they necessarily have the attributes you are looking for,
    and it can save a lot of time and code amount to quickly run these tests to retrieve
    attributes’ values.
  prefs: []
  type: TYPE_NORMAL
- en: Building Dynamic APIs using getattr()
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Another use cases for the Python **getattr()** function is building dynamic
    APIs in Python.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s start by creating a simple **Calculator** class with a few methods that
    perform mathematical calculations:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Now we can build an API around this **Calculator** class, that will allow to
    call any of the methods dynamically (using Python **getattr()** function):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Once the API is built, we can test it with different calculations like addition
    and subtraction and check the results:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'and you should get:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: In this example we use the Python **getattr()** function to dynamically access
    the required method of a Python class.
  prefs: []
  type: TYPE_NORMAL
- en: Loading modules dynamically using getattr()
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Another use cases for the Python **getattr()** function is loading modules dynamically
    at runtime in Python.
  prefs: []
  type: TYPE_NORMAL
- en: In this example we will use a built-in Python module , which is an implementation
    of the **import** statement. Specifically, we will work with **import_module()**
    function for programmatic importing.
  prefs: []
  type: TYPE_NORMAL
- en: We will use the **getattr()** function to access specific functions in the loaded
    module.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s say we want to build a small program that asks the user which module to
    import, which function from that module to access, and what operation to perform.
  prefs: []
  type: TYPE_NORMAL
- en: For example, we want to import the math module, access the **sqrt()** function
    and find the square root of 25.
  prefs: []
  type: TYPE_NORMAL
- en: 'We are going to load the module and function programmatically and perform the
    calculation:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'And you should get:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: While this is a very simplistic example that doesn’t look like a useful application
    of the **sqrt()** function, it illustrates the general idea of loading modules
    and functions dynamically.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this article we explored the Python **getattr()** function.
  prefs: []
  type: TYPE_NORMAL
- en: Now that you know the basic functionality, you can practice using it in your
    projects to add more functionality to the code.
  prefs: []
  type: TYPE_NORMAL
- en: Feel free to leave comments below if you have any questions or have suggestions
    for some edits and check out more of my [Python Functions](https://pyshark.com/category/python-functions/)
    tutorials.
  prefs: []
  type: TYPE_NORMAL
- en: '*Originally published at* [*https://pyshark.com*](https://pyshark.com/python-getattr-function/)
    *on March 20, 2023.*'
  prefs: []
  type: TYPE_NORMAL
