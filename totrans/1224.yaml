- en: 'How to Perform Outlier Detection in Python for Machine Learning: Part 1'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-to-perform-outlier-detection-in-python-in-easy-steps-for-machine-learning-1-8f9a3e6c88b5](https://towardsdatascience.com/how-to-perform-outlier-detection-in-python-in-easy-steps-for-machine-learning-1-8f9a3e6c88b5)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Earth is an outlier — the theory
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://ibexorigin.medium.com/?source=post_page-----8f9a3e6c88b5--------------------------------)[![Bex
    T.](../Images/516496f32596e8ad56bf07f178a643c6.png)](https://ibexorigin.medium.com/?source=post_page-----8f9a3e6c88b5--------------------------------)[](https://towardsdatascience.com/?source=post_page-----8f9a3e6c88b5--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----8f9a3e6c88b5--------------------------------)
    [Bex T.](https://ibexorigin.medium.com/?source=post_page-----8f9a3e6c88b5--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----8f9a3e6c88b5--------------------------------)
    ·6 min read·Jan 28, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/da07cff3f5f613c032464ed39dcf1906.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by [0fjd125gk87](https://pixabay.com/users/0fjd125gk87-51581/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=1784245)
    from [Pixabay](https://pixabay.com//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=1784245)
  prefs: []
  type: TYPE_NORMAL
- en: What are outliers?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We live on an outlier. Earth is the only hump of rock with life in the Milky
    Way galaxy. Other planets in our galaxy are inliers or normal data points in a
    so-called database of stars and planets.
  prefs: []
  type: TYPE_NORMAL
- en: There are many definitions of outliers. In simple terms, we define outliers
    as data points that are significantly different than the majority in a dataset.
    Outliers are the rare, extreme samples that don't conform or align with the inliers
    in a dataset.
  prefs: []
  type: TYPE_NORMAL
- en: Statistically speaking, outliers come from a different distribution than the
    rest of the samples in a feature. They present statistically significant abnormalities.
  prefs: []
  type: TYPE_NORMAL
- en: These definitions depend on what we consider "normal". For example, it is perfectly
    normal for CEOs to make millions of dollars, but if we add their salary information
    to a dataset of household incomes, they become abnormal.
  prefs: []
  type: TYPE_NORMAL
- en: Outlier detection is the field of statistics and machine learning that uses
    various techniques and algorithms to detect such extreme samples.
  prefs: []
  type: TYPE_NORMAL
- en: 'Check out the second part of the series here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/how-to-perform-univariate-outlier-detection-in-python-for-machine-learning-b9fb05e72661?source=post_page-----8f9a3e6c88b5--------------------------------)
    [## How to Perform Univariate Outlier Detection in Python for Machine Learning'
  prefs: []
  type: TYPE_NORMAL
- en: Univariate outlier detection, clearly explained
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/how-to-perform-univariate-outlier-detection-in-python-for-machine-learning-b9fb05e72661?source=post_page-----8f9a3e6c88b5--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Why bother with outlier detection?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: But why, though? Why do we need to find them? What's the harm in them? Well,
    consider this distribution of 12 numbers ranging from 50 to 100\. One of the data
    points is 2534, which is clearly an outlier.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Mean and standard deviation are two of the most heavily-used and critical attributes
    of a distribution, so we must feed realistic values of these two metrics when
    fitting machine learning models.
  prefs: []
  type: TYPE_NORMAL
- en: Let's calculate them for our sample distribution.
  prefs: []
  type: TYPE_NORMAL
- en: 'The mean:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The standard deviation:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, let''s do the same, removing the outlier:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: As you can see, the outlier-free distribution has a 3.6 times smaller mean and
    almost 45 times smaller standard deviation.
  prefs: []
  type: TYPE_NORMAL
- en: Apart from skewing the actual values of mean and STD, outliers also create noise
    in training data. They create trends and attributes in distributions that distract
    machine learning models from actual patterns in the data, resulting in performance
    losses.
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, it is paramount to find outliers, explore the reasons for their presence,
    and remove them if appropriate.
  prefs: []
  type: TYPE_NORMAL
- en: What you will learn in this tutorial
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once you understand the important theory behind the process, outlier detection
    is straightforward to perform in code with libraries like PyOD or Sklearn. For
    example, here is how to do outlier detection using a popular Isolation Forest
    algorithm.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: It only takes a few lines of code.
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, this tutorial will focus more on theory. Specifically, we will look
    at outlier detection in the context of unsupervised learning, the concept of contamination
    in datasets, the difference between anomalies, outliers, and novelties, and univariate/multivariate
    outliers.
  prefs: []
  type: TYPE_NORMAL
- en: Let's get started.
  prefs: []
  type: TYPE_NORMAL
- en: Outlier detection is an unsupervised problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Unlike many other ML tasks, outlier detection is an unsupervised learning problem.
    What do we mean by that?
  prefs: []
  type: TYPE_NORMAL
- en: For example, in classification, we have a set of features that map to specific
    outputs. We have labels that tell us which sample is a dog and which one is a
    cat.
  prefs: []
  type: TYPE_NORMAL
- en: In outlier detection, that's not the case. We have no prior knowledge of outliers
    when we are presented with a new dataset. This causes several challenges (but
    nothing we can't handle).
  prefs: []
  type: TYPE_NORMAL
- en: First, we won't have an easy way of measuring the effectiveness of outlier detection
    methods. In classification, we used metrics such as accuracy or precision to measure
    how well the algorithm fits to our training dataset. In outlier detection, we
    can't use these metrics because we won't have any labels that allow us to compare
    predictions to ground truth.
  prefs: []
  type: TYPE_NORMAL
- en: And since we can't use traditional metrics to measure performance, we can't
    efficiently perform hyperparameter tuning. This makes it even hard to find the
    best outlier classifier (an algorithm that returns inlier/outlier labels for each
    dataset row) for the task at hand.
  prefs: []
  type: TYPE_NORMAL
- en: However, don't despair. We will see two excellent workarounds in the next tutorial.
  prefs: []
  type: TYPE_NORMAL
- en: Anomalies vs. outliers vs. novelties
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You'll see the terms "anomalies" and "novelties" often cited next to outliers
    in many sources. Even though they are close in meaning, there are important distinctions.
  prefs: []
  type: TYPE_NORMAL
- en: An anomaly is a general term that encompasses anything out of the ordinary and
    abnormal. Anomalies can refer to irregularities in either training or test sets.
  prefs: []
  type: TYPE_NORMAL
- en: As for outliers, they only exist in training data. Outlier detection refers
    to finding abnormal data points from the training set. Outlier classifiers only
    perform a `fit` to the training data and return inlier/outlier labels.
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, novelties exist only in the test set. In novelty detection,
    you have a clean, outlier-free dataset, and you are trying to see if new, unseen
    observations have different attributes than the training samples. Hence, irregular
    instances in a test set become novelties.
  prefs: []
  type: TYPE_NORMAL
- en: In short, anomaly detection is the parent field of both outlier and novelty
    detection. While outliers only refer to abnormal samples in the training data,
    novelties exist in the test set.
  prefs: []
  type: TYPE_NORMAL
- en: This distinction is essential for when we start using outlier classifiers in
    the next tutorial.
  prefs: []
  type: TYPE_NORMAL
- en: Univariate vs. multivariate outliers
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Univariate and multivariate outliers refer to outliers in different types of
    data.
  prefs: []
  type: TYPE_NORMAL
- en: As the name suggests, univariate outliers only exist in single distributions.
    An example is a very tall person in a dataset of height measurements.
  prefs: []
  type: TYPE_NORMAL
- en: Multivariate outliers are a bit tricky. They refer to outliers with two or more
    attributes, which, when looked at individually, don't appear anomalous but only
    become outliers when all attributes are considered in unison.
  prefs: []
  type: TYPE_NORMAL
- en: An example multivariate outlier can be an old car with very low mileage. The
    attributes of this car may be normal when looked at individually, but when combined,
    you'll realize that old cars usually have high mileage proportional to their age.
    (There are many old cars and many cars with low mileage, but there are few cars
    that are both old and have low mileage).
  prefs: []
  type: TYPE_NORMAL
- en: When choosing an algorithm to detect them, the distinction between types of
    outliers becomes important.
  prefs: []
  type: TYPE_NORMAL
- en: As univariate outliers exist in datasets with only one column, you can use simple
    and lightweight methods such as [z-scores](https://en.wikipedia.org/wiki/Standard_score)
    or [modified z-scores](https://en.wikipedia.org/wiki/Median_absolute_deviation).
  prefs: []
  type: TYPE_NORMAL
- en: Multivariate outliers pose a more significant challenge since they may only
    surface across many dataset columns. For that reason, you must take out big guns
    such as Isolation Forest, KNN, Local Outlier Factor, etc.
  prefs: []
  type: TYPE_NORMAL
- en: In the coming tutorials, we'll see how to use some of the above methods.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There you go! You now know all the essential terminology and theory behind outlier
    detection, and the only thing left is applying them in practice using outlier
    classifiers.
  prefs: []
  type: TYPE_NORMAL
- en: In the next parts of the article, we will cover some of the most popular and
    robust outlier classifiers using the PyOD library. Stay tuned!
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://ibexorigin.medium.com/membership?source=post_page-----8f9a3e6c88b5--------------------------------)
    [## Join Medium with my referral link - Bex T.'
  prefs: []
  type: TYPE_NORMAL
- en: Get exclusive access to all my ⚡premium⚡ content and all over Medium without
    limits. Support my work by buying me a…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: ibexorigin.medium.com](https://ibexorigin.medium.com/membership?source=post_page-----8f9a3e6c88b5--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: More articles from…
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/geekculture/5-excellent-julia-features-that-python-developers-can-only-wish-they-had-e1531a596239?source=post_page-----8f9a3e6c88b5--------------------------------)
    [## 5 Excellent Julia Features That Python Developers Can Only Wish They Had'
  prefs: []
  type: TYPE_NORMAL
- en: Continuation of Julia vs. Python debate
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: medium.com](https://medium.com/geekculture/5-excellent-julia-features-that-python-developers-can-only-wish-they-had-e1531a596239?source=post_page-----8f9a3e6c88b5--------------------------------)
    [](/5-best-python-synthetic-data-generators-and-how-to-use-them-when-you-lack-data-f62bcf62d43c?source=post_page-----8f9a3e6c88b5--------------------------------)
    [## 5 Best Python Synthetic Data Generators And How to Use Them When You Lack
    Data
  prefs: []
  type: TYPE_NORMAL
- en: Let's get even more data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'towardsdatascience.com](/5-best-python-synthetic-data-generators-and-how-to-use-them-when-you-lack-data-f62bcf62d43c?source=post_page-----8f9a3e6c88b5--------------------------------)
    [](https://pub.towardsai.net/bentoml-vs-fastapi-the-best-ml-model-deployment-framework-and-why-its-bentoml-f0ed26cae88d?source=post_page-----8f9a3e6c88b5--------------------------------)
    [## Bentoml vs. Fastapi: The Best ML Model Deployment Framework and Why It''s
    Bentoml'
  prefs: []
  type: TYPE_NORMAL
- en: Detailed comparison between BentoML and FastAPI for model deployment.
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: pub.towardsai.net](https://pub.towardsai.net/bentoml-vs-fastapi-the-best-ml-model-deployment-framework-and-why-its-bentoml-f0ed26cae88d?source=post_page-----8f9a3e6c88b5--------------------------------)
    [](https://pub.towardsai.net/how-to-create-highly-organized-ml-projects-anyone-can-reproduce-with-dvc-pipelines-fc3ac7867d16?source=post_page-----8f9a3e6c88b5--------------------------------)
    [## How To Create Highly-Organized ML Projects Anyone Can Reproduce With DVC Pipelines
  prefs: []
  type: TYPE_NORMAL
- en: What is a machine learning pipeline?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: pub.towardsai.net](https://pub.towardsai.net/how-to-create-highly-organized-ml-projects-anyone-can-reproduce-with-dvc-pipelines-fc3ac7867d16?source=post_page-----8f9a3e6c88b5--------------------------------)
  prefs: []
  type: TYPE_NORMAL
