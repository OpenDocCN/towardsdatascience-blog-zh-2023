- en: Exploring emotions with Artificial Intelligence, OpenAI, and Exploratory Data
    Analysis
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索情感与人工智能、OpenAI 和探索性数据分析的关系
- en: 原文：[https://towardsdatascience.com/exploring-emotions-with-artificial-intelligence-openai-and-exploratory-data-analysis-36a3882d3f11](https://towardsdatascience.com/exploring-emotions-with-artificial-intelligence-openai-and-exploratory-data-analysis-36a3882d3f11)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/exploring-emotions-with-artificial-intelligence-openai-and-exploratory-data-analysis-36a3882d3f11](https://towardsdatascience.com/exploring-emotions-with-artificial-intelligence-openai-and-exploratory-data-analysis-36a3882d3f11)
- en: Here’s how to visualize emotion in text with Python using OpenAI and Exploratory
    Data Analysis
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 以下是如何使用 Python 通过 OpenAI 和探索性数据分析在文本中可视化情感
- en: '[](https://piero-paialunga.medium.com/?source=post_page-----36a3882d3f11--------------------------------)[![Piero
    Paialunga](../Images/de2185596a49484698733e85114dd1ff.png)](https://piero-paialunga.medium.com/?source=post_page-----36a3882d3f11--------------------------------)[](https://towardsdatascience.com/?source=post_page-----36a3882d3f11--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----36a3882d3f11--------------------------------)
    [Piero Paialunga](https://piero-paialunga.medium.com/?source=post_page-----36a3882d3f11--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://piero-paialunga.medium.com/?source=post_page-----36a3882d3f11--------------------------------)[![Piero
    Paialunga](../Images/de2185596a49484698733e85114dd1ff.png)](https://piero-paialunga.medium.com/?source=post_page-----36a3882d3f11--------------------------------)[](https://towardsdatascience.com/?source=post_page-----36a3882d3f11--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----36a3882d3f11--------------------------------)
    [Piero Paialunga](https://piero-paialunga.medium.com/?source=post_page-----36a3882d3f11--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----36a3882d3f11--------------------------------)
    ·9 min read·Dec 12, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----36a3882d3f11--------------------------------)
    ·阅读时间9分钟·2023年12月12日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/417d5e40aed1306a713601d76c61dcc4.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/417d5e40aed1306a713601d76c61dcc4.png)'
- en: Image by author made using [Midjourney](https://www.midjourney.com/home?callbackUrl=%2Fexplore)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 作者使用 [Midjourney](https://www.midjourney.com/home?callbackUrl=%2Fexplore) 制作的图片
- en: I want to start by saying that I am a fan of old Disney movies more than the
    new ones.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我想首先说的是，我更喜欢旧版迪士尼电影，而不是新版的。
- en: I think that it has something to do with the fact that I was a kid when I watched
    older Disney movies and I have this feeling of nostalgia about the moment itself.
    Even if, by all means, I am not a movie expert, I also have the feeling that the
    old Disney movies are the ones with the best plots.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我觉得这和我小时候看旧版迪士尼电影有关，我对那一刻有一种怀旧的感觉。即使我并不是电影专家，我也觉得旧版迪士尼电影的情节最好。
- en: 'There is one remarkable exception though, and that is [**Inside Out**](https://movies.disney.com/inside-out).
    I watched that movie in the theater and was in love with it. I don’t want to spoil
    anything, I’ll say that the movie is about the idea that inside all of us there
    is a range of emotions:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，有一个显著的例外，那就是 [**脑内飞**](https://movies.disney.com/inside-out)。我在影院看了这部电影，并且非常喜欢。我不想剧透，只想说这部电影探讨了我们内心中存在的一系列情感：
- en: '**Rage**'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**愤怒**'
- en: '**Disgust**'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**厌恶**'
- en: '**Joy**'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**快乐**'
- en: '**Fear**'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**恐惧**'
- en: '**Sadness**'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**悲伤**'
- en: And these emotions sometimes talk, like they are real people, inside of us.
    It’s an incredibly sweet movie with, I think, an amazing plot. When I heard that
    the new movie, Inside Out 2, is about to come out, I was so excited and I’m counting
    the days. :)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这些情感有时像真正的人一样在我们内心交谈。这是一部令人非常温馨的电影，我认为情节非常出色。当我听说新电影《脑内飞》即将上映时，我非常兴奋，正在倒计时。:)
- en: 'Now, let me anticipate your question:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我猜测一下你的问题：
- en: “What does it have to do with AI?
  id: totrans-18
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “这跟人工智能有什么关系呢？”
- en: When I was watching the trailer, I thought
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 当我在看预告片的时候，我想到
- en: “Can we generate what emotions would say?”
  id: totrans-20
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “我们能生成情感会说什么吗？”
- en: “Can we use the ChatGPT technologies to simulate what emotion “rage” would say
    if they were a person?”
  id: totrans-21
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “我们能否使用 ChatGPT 技术来模拟如果情感‘愤怒’是一个人的话，他们会说什么？”
- en: “Can we explore emotions as vectors in a N dimensional space? And if that, can
    we plot it?
  id: totrans-22
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “我们能否将情感作为 N 维空间中的向量来探索？如果可以，我们能否将其绘制出来？”
- en: So buckle up, and let’s see what we can do 😏
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 所以系好安全带，让我们看看能做些什么吧 😏
- en: '**Before we dive in,** I want to highlight that this is a “game” based on the
    movie. I think that a world where emotions are replaced by AI would be a pretty
    sad one, and I’m not claiming that the procedure will do any of that in the first
    place.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**在我们深入之前，** 我想强调这是一个基于电影的“游戏”。我认为一个情感被AI取代的世界会非常悲伤，我并不声称这个过程会在第一时间做到这一点。'
- en: 'This story is divided into 4 parts:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这个故事分为4部分：
- en: 0\. The structure of the code
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 0\. 代码结构
- en: 1\. The first part of the code, generating emotions. High focus on the code
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 代码的第一部分，生成情感。高度关注代码
- en: 2\. The second part of the code. This is less ***actually*****based on the code**.
    It is more based on the Exploration of the dataset. This is where the fun starts!
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 代码的第二部分。这部分的内容少有***实际上基于代码***。它更多地基于数据集的探索。这是乐趣开始的地方！
- en: 3\. A summary
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 总结
- en: 4\. The conclusions
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. 结论
- en: '***This blog will be code-based and it is meant to be useful for developers.***
    If you are not a developer, you can jump straight to chapter 3, where I will describe
    the result of the Emotion inspection using AI :)'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '***这个博客将以代码为基础，旨在对开发者有用。*** 如果你不是开发者，可以直接跳到第3章，我将在那里描述使用AI进行情感检测的结果 :)'
- en: 0\. The structure
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 0\. 结构
- en: 'This work is divided into two chapters:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这项工作分为两章：
- en: '**The generation of the “emotion” data**: It will be a module with a main.py
    script that generates sentences. These sentences will be “movie-like” sentences
    like the Inside Out ones. We will generate 150 sentences per emotion: 150x5 =
    750 sentences with OpenAI.'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**“情感”数据的生成**：它将是一个包含main.py脚本的模块，用于生成句子。这些句子将类似于《头脑特工队》中的电影句子。我们将用OpenAI生成每种情感150个句子：150x5
    = 750个句子。'
- en: '**Exploratory Data Analysis:** This will be a notebook that will do the data
    exploration on the Open AI generated sentences.'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**探索性数据分析：** 这将是一个笔记本，用于对OpenAI生成的句子进行数据探索。'
- en: Let’s describe how we are doing it…
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们描述一下我们是如何做到的……
- en: The whole code is available on my GitHub page ([https://github.com/PieroPaialungaAI/Emotion_AI/](https://github.com/PieroPaialungaAI/Emotion_AI/tree/main/EmotionAI))
  id: totrans-37
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 整个代码可以在我的GitHub页面上找到 ([https://github.com/PieroPaialungaAI/Emotion_AI/](https://github.com/PieroPaialungaAI/Emotion_AI/tree/main/EmotionAI))
- en: 1\. Emotion AI
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 情感AI
- en: We call the generation of the emotion data as **EmotionAI.**
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们称情感数据的生成为**EmotionAI**。
- en: 'In EmotionAI, I created 4 Python scripts:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在EmotionAI中，我创建了4个Python脚本：
- en: '**constants.py**'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**constants.py**'
- en: '**main.py**'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**main.py**'
- en: '**util.py**'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**util.py**'
- en: '**emotionai.py**'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**emotionai.py**'
- en: 'You can find that in [this Github folder](https://github.com/PieroPaialungaAI/Emotion_AI/tree/main/EmotionAI).
    Let’s start from the bottom, by describing the main.py file:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[这个Github文件夹](https://github.com/PieroPaialungaAI/Emotion_AI/tree/main/EmotionAI)中找到。让我们从底部开始，描述main.py文件：
- en: 1.1 Main.py
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.1 Main.py
- en: The **main.py** file has the idea of creating the emotions’ sentences.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**main.py**文件的构思是创建情感句子。'
- en: It does it using a class named AIEmotionGenerator, which is part of the **emotionai.py**
    code. Using AIEmotionGenerator, you first **create the folders** where you will
    store the sentences (50x3 per emotion), and then you **generate the sentences
    and store them.** Pretty easy, right?
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 它使用一个名为AIEmotionGenerator的类来完成，AIEmotionGenerator是**emotionai.py**代码的一部分。使用AIEmotionGenerator，你首先**创建文件夹**，存储句子（每种情感50x3），然后**生成句子并存储它们**。很简单，对吧？
- en: 'The dirty work is done by **emotionai.py** let’s give a look:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 肮脏的工作由**emotionai.py**完成，来看看：
- en: 1.2 emotionai.py
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.2 emotionai.py
- en: '**emotionai.py** builds a class, named AIEmotionGenerator.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**emotionai.py**构建了一个名为AIEmotionGenerator的类。'
- en: 'This class does two things:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这个类有两个功能：
- en: Build the folder for you (**boring**) 🥱
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为你创建文件夹（**无聊**）🥱
- en: Generate the sentence given an emotion (**very interesting**) 🤩
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成给定情感的句子（**非常有趣**）🤩
- en: I generated emotions giving a hint to OpenAI’s GPT, which is the real sentences
    said by the emotions of the movie Inside Out. Let’s see what they are in **constants.py**
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我通过给OpenAI的GPT一个提示来生成情感，这些提示是真实的《头脑特工队》中的情感句子。让我们在**constants.py**中看看它们是什么。
- en: 1.3 constants.py
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.3 constants.py
- en: So, this is the constants.py. In this file we have the sentences that we use
    to make GPT understand more about the task. You should fill it with your [Open
    AI API](https://openai.com/blog/openai-api) key too… this is crucial to make it
    work*.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，这就是constants.py。在这个文件中，我们有用于让GPT更好地理解任务的句子。你也应该在其中填入你的[Open AI API](https://openai.com/blog/openai-api)密钥……这对使其工作至关重要*。
- en: '*The OpenAI API key will cost you money eventually, but I spent like $0.11
    for this project. Keep an eye on the usage page of OpenAI, but don’t be stressed
    about it. It’s not an investment. :)'
  id: totrans-58
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*OpenAI API密钥最终会花费你一些钱，但我为这个项目花了大约$0.11。关注OpenAI的使用页面，但不要为此感到压力。这不是一项投资。 :)'
- en: The sentences come from a movie. Notice that OpenAI is programmed not to give
    you answers that are ANGRY, or SAD, that’s why I changed the emotion to “Goofy
    Sadness” and “Funny Anger”… It’s a little bit frustrating that these technologies
    pretend that the world is all rainbow and ice cream if you ask me, but it did
    the trick.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这些句子来自电影。注意到OpenAI被编程为不提供愤怒或悲伤的回答，这就是为什么我将情感改为“搞笑的悲伤”和“有趣的愤怒”……如果你问我，这些技术假装世界总是充满彩虹和冰淇淋，这有点令人沮丧，但它确实起到了作用。
- en: 2\. EDA on the Emotion Sentences
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2. 情感句子的EDA
- en: 'Ok, so after you have generated the emotions, you will have your folders and
    they will look like this:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，一旦你生成了情感，你将会有你的文件夹，它们将会是这样的：
- en: '![](../Images/35e19e0140cd28015ffb959c52381431.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/35e19e0140cd28015ffb959c52381431.png)'
- en: Image by author
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自作者
- en: 'We need to extract the .txt files and explore them. Let’s do it step by step:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要提取.txt文件并进行探索。让我们一步一步来：
- en: 2.0 Libraries
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.0 库
- en: 'I used my long life friends: 👻'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用了我的老朋友们：👻
- en: Notice that EmotionAI is in the library, we will need to use it (especially
    for the constants)
  id: totrans-67
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意EmotionAI在库中，我们需要使用它（特别是用于常量）
- en: 2.1 Importing the text
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.1 导入文本
- en: This part is a little bit boring but necessary, we import the text from the
    folders and fix it in a dataframe manner.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这一部分有点无聊但必要，我们从文件夹中导入文本，并以数据框的形式整理。
- en: Unfortunately, the OpenAI response can be a little random, especially in the
    format. So please review the .txt files and delete stuff like “Sure! Let me give
    you the answer” or “I’m sorry that you feel sad, this is the list of answers”…
  id: totrans-70
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 不幸的是，OpenAI的响应可能会有些随机，特别是在格式上。所以请检查.txt文件，并删除类似“当然！让我给你答案”或“对不起你感到难过，这是答案列表”之类的内容……
- en: 'Once you have done it your dataset will look like this:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你完成了，你的数据集将会如下所示：
- en: '2.2 Visualization: WordCloud!'
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.2 可视化：词云！
- en: 'The wordcloud is a method to see the frequency of words in a text. This is
    what we will use, class by class (or emotion by emotion) to visualize the texts:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 词云是一种查看文本中词频的方法。这就是我们将用来逐类（或逐情感）可视化文本的方法：
- en: '![](../Images/76a94b38fcf54a208b262e776ba408b8.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/76a94b38fcf54a208b262e776ba408b8.png)'
- en: This is super fun. The disgust has the most said word “SMELL” and “SOCK”. The
    Joy has world like “LAUGHTER” and “DELIGHT”. The Sadness has words like “STUCK”,
    “ACCIDENTALLY”, “NEVER”. Fear has words like “SCARED”, “MIGHT”, WORRY”.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这非常有趣。厌恶情感中出现频率最高的词是“SMELL”和“SOCK”。快乐情感中有“LAUGHTER”和“DELIGHT”这样的词。悲伤情感中有“STUCK”、“ACCIDENTALLY”、“NEVER”这些词。恐惧情感中有“SCARED”、“MIGHT”、“WORRY”这些词。
- en: We are getting good stuff. Let’s keep going!
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在取得好成果。让我们继续前进！
- en: 2.3 Embedding
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.3 嵌入
- en: Embedding is the idea of transforming words into numbers… or better… SENTENCES
    into SEQUENCES of NUMBERS. Like this!
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌入的思想是将单词转换为数字……或者更好……将句子转换为数字序列。就像这样！
- en: '![](../Images/042a07f593c5d4a2fcd8dcf89fcf759a.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/042a07f593c5d4a2fcd8dcf89fcf759a.png)'
- en: The sentences with **Awful** and **Terrible** are close, the sentence with **Beautiful**
    is further away!
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 带有**糟糕**和**非常糟糕**的句子比较接近，而带有**美丽**的句子则远离！
- en: You can do the embedding step in so many ways, I chose to do it with OpenAI,
    mainly cause it’s quick and efficient, but choose your own method!
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以用很多方法来进行嵌入步骤，我选择了使用OpenAI，主要因为它快速而高效，但你可以选择你自己的方法！
- en: 'This is how you embed each sentence in your dataset, so that you have every
    sentence as a vector, just like this:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是你如何在数据集中嵌入每个句子，从而将每个句子表示为一个向量，就像这样：
- en: '![](../Images/d601a441f876ce27402d20fe24f8fb7b.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d601a441f876ce27402d20fe24f8fb7b.png)'
- en: P.S. I’d be mad too if you replaced my Ice Cream with Broccoli…
  id: totrans-84
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 附注：如果你用西兰花替换我的冰淇淋，我也会生气的……
- en: 2.4 Reduce the vectors dimensions…
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.4 降低向量维度……
- en: Now we want to visualize the vectors. To do it, as our brain can only process
    2 or 3D things, let’s us the PCA to reduce the dimensionality from 1500+ (vector
    dimensionality using GPT Embedding) to 2*.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们想要可视化向量。为了做到这一点，因为我们的脑袋只能处理2D或3D的事物，让我们使用PCA将维度从1500+（使用GPT嵌入的向量维度）降到2*。
- en: '**Preprocess** the input vectors:'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预处理**输入向量：'
- en: '**Train the PCA**:'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**训练PCA**：'
- en: '**Apply the PCA** to the original vector'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用PCA**到原始向量'
- en: '*I made this [article](/hands-on-image-compression-using-principal-component-analysis-with-python-1cd6cad72366)
    about Principal Component Analysis if you want to understand how it works… :)'
  id: totrans-90
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*我写了这篇[文章](/hands-on-image-compression-using-principal-component-analysis-with-python-1cd6cad72366)来介绍主成分分析，如果你想了解它是如何工作的……
    :)'
- en: 2.5 See the rainbow!
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.5 看彩虹！
- en: Now that we have our 2D dataset we can plot them and understand what’s going
    on. Let’s do it!
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了二维数据集，可以对其进行绘制并了解发生了什么。让我们开始吧！
- en: That’s pretty nice… you can distinguish…
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这很不错……你可以区分……
- en: '**Sadness** in the lower part of the dataset, as a long stripe'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**悲伤**在数据集的下部分，呈长条形。'
- en: '**Disgust** in the right upper part of the dataset, as a diagonal stripe'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**厌恶**在数据集的右上部分，呈对角条形。'
- en: '**Anger** in the left upper part of the dataset, as a circle like structure'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**愤怒**在数据集的左上部分，以圆形结构呈现。'
- en: Let’s see how “Joy” is doing.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看“快乐”怎么样。
- en: 'Fear and Joy are pretty separated, which is good, except for an area in the
    middle. I suspect that is because “Fear” can be “Joyful” when you see sentence
    like:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 恐惧和快乐之间有相当大的分隔，这很好，除了中间的一个区域。我怀疑那是因为“恐惧”在看到类似这样的句子时会变得“快乐”：
- en: “I am so HAPPY that the spider didn’t approach me. I am terrified by spider”
  id: totrans-99
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “我非常高兴蜘蛛没有接近我。我对蜘蛛感到恐惧。”
- en: That is like a Joy/Fear situation indeed 🙃
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这确实像是一个快乐/恐惧的情况 🙃
- en: 'In this case, we also applied the PCA to the embedded Sentence of Fear in the
    movie, and we see that the sentence that Fear says in the movie (which was):'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们也对电影中的恐惧句子应用了PCA，我们看到恐惧在电影中说的句子（是）：
- en: “I sure am glad you told me earthquakes are a myth Joy, otherwise i’d be terrified
    right now.”
  id: totrans-102
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “我真高兴你告诉我地震是神话，快乐，否则我现在会很害怕。”
- en: Is pretty much between the orange fellas of the “Fear” sentences.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上在“恐惧”句子的橙色点之间。
- en: If we do the same with the disgust sentence, we see that the disgust is correctly
    in between the green points, which is what we want.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们对反感的句子做同样的处理，我们可以看到反感确实位于绿色点之间，这正是我们想要的效果。
- en: 'The disgust sentence was:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 反感的句子是：
- en: “Okay, Caution, There Is A Dangerous Smell, People.”
  id: totrans-106
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “好吧，小心，这里有一种危险的气味，人们。”
- en: And even this one is kind of a Disgust/Fear situation. That is because emotions
    are not black and white, and you can feel a lot of emotions at the same time.
    If you were ever in love, you know this very well ❤
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 即使这个情况也有点像厌恶/恐惧。这是因为情感不是非黑即白的，你可以同时感受到很多情感。如果你曾经恋爱过，你会非常明白这一点 ❤
- en: 3\. Conclusions
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3. 结论
- en: Thank you so much for reading this story. I had so much fun doing it. I love
    Inside Out and I think it’s very fun when we try to see if a computer can generate
    emotion-like sentences.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 非常感谢你阅读这个故事。我在做这个过程中非常开心。我喜欢《头脑特工队》，我认为当我们尝试看看计算机是否能生成类似情感的句子时，非常有趣。
- en: 'In this story we:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个故事中我们：
- en: '**Establish that Inside Out is amazing**, and we used it as a starting point
    for the idea of making emotion “say things”. If “fear” could talk, what would
    it say?'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**确定《头脑特工队》很棒**，我们以此作为创建情感“表达”想法的出发点。如果“恐惧”能说话，它会说什么？'
- en: Used the GPT technology of OpenAI to generate sentences, **based on the original
    ones of the movies.** We made OpenAI generate 150 disgust-like sentences, 150
    fear-like sentences, 150 joy-like sentences, and 150 sadness-like sentences.
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用了OpenAI的GPT技术来生成句子，**基于电影中的原始句子**。我们让OpenAI生成了150个类似反感的句子、150个类似恐惧的句子、150个类似快乐的句子和150个类似悲伤的句子。
- en: Used Exploratory Data Analysis techniques like **wordcloud, embedding, and PCA
    to visualize the results.**
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用了**词云、嵌入和主成分分析（PCA）技术来可视化结果**。
- en: The sentences that GPT took out were pretty funny.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: GPT提取出的句子非常有趣。
- en: 'Fear said:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 恐惧说：
- en: “I am scared that my own shadow might come alive and start chasing me.”
  id: totrans-116
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “我害怕自己的影子可能会活过来并开始追赶我。”
- en: 'While Sadness said:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 而悲伤说：
- en: “I once got stuck in a revolving door because I forgot to push”
  id: totrans-118
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “我曾经因为忘记推而被困在旋转门里。”
- en: The wordcloud was amazing too, as it highlighted as the Sadness has that sense
    of Fear and uses words like “Never”, while the disgust is almost related to the
    “smell” of things, which is pretty accurate.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 词云也很棒，因为它突出了悲伤具有恐惧感，并使用了像“从不”这样的词汇，而反感几乎与“气味”相关，这非常准确。
- en: When we visualized the sentences, we saw that the sentences formed clear clusters
    and that the original sentences of the movie were pretty much in the corresponding
    cluster. This is a sign of consistency and good prompting.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们可视化这些句子时，我们看到句子形成了清晰的簇，并且电影中的原始句子基本上在对应的簇中。这是连贯性和良好提示的标志。
- en: 'This work could be useful for many things like:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 这项工作可能对许多事情有用，比如：
- en: Suggesting the movie director new sentences using this technology
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用这项技术向电影导演建议新的句子
- en: Understand the consistency of the characters by tracking their vectors
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过追踪角色的向量来理解角色的一致性
- en: Create new emotions and feelings
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创造新的情感和感觉
- en: Your ideas (comment on this post)
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的想法（评论此帖子）
- en: 4\. About me!
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4. 关于我！
- en: Thank you again for your time. It means a lot ❤
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 再次感谢你的时间。这对我意义重大❤
- en: 'My name is Piero Paialunga and I’m this guy here:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我是Piero Paialunga，我是这里的那个人：
- en: '![](../Images/636991027461e453b326924e6e606f79.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/636991027461e453b326924e6e606f79.png)'
- en: 'I am a Ph.D. student at the University of Cincinnati Aerospace Engineering
    Department. I talk about AI, and Machine Learning in my blog posts and on Linkedin.
    If you liked the article and want to know more about machine learning and follow
    my studies you can:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 我是辛辛那提大学航空航天工程系的博士生。我在博客文章和Linkedin上谈论AI和机器学习。如果你喜欢这篇文章，想了解更多关于机器学习的内容并关注我的研究，你可以：
- en: A. Follow me on [**Linkedin**](https://www.linkedin.com/in/pieropaialunga/),
    where I publish all my stories
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: A. 在[**Linkedin**](https://www.linkedin.com/in/pieropaialunga/)上关注我，我会在这里发布我所有的故事
- en: B. Subscribe to my [**newsletter**](https://piero-paialunga.medium.com/subscribe).
    It will keep you updated about new stories and give you the chance to text me
    to receive all the corrections or doubts you may have.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: B. 订阅我的[**新闻通讯**](https://piero-paialunga.medium.com/subscribe)。它会让你了解最新故事，并给你机会给我发消息，以便收到你可能有的所有修正或疑问。
- en: C. Become a [**referred member**](https://piero-paialunga.medium.com/membership),
    so you won’t have any “maximum number of stories for the month” and you can read
    whatever I (and thousands of other Machine Learning and Data Science top writers)
    write about the newest technology available.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: C. 成为一个[**推荐会员**](https://piero-paialunga.medium.com/membership)，这样你就不会有“每月最大故事数”的限制，可以阅读我（以及成千上万其他机器学习和数据科学顶级作家）关于最新技术的文章。
- en: 'If you want to ask me questions or start a collaboration, leave a message here:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想问我问题或开始合作，请在这里留言：
- en: '***piero.paialunga@hotmail.com***'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '***piero.paialunga@hotmail.com***'
- en: Ciao ❤️
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 再见❤️
