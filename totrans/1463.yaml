- en: Make a Nested Bar Chart with Seaborn
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/make-a-nested-bar-chart-with-seaborn-9a9988e30dca](https://towardsdatascience.com/make-a-nested-bar-chart-with-seaborn-9a9988e30dca)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: I Quick Success Data Science
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Benchmarking the accuracy of college football polls
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@lee_vaughan?source=post_page-----9a9988e30dca--------------------------------)[![Lee
    Vaughan](../Images/9f6b90bb76102f438ab0b9a4a62ffa3f.png)](https://medium.com/@lee_vaughan?source=post_page-----9a9988e30dca--------------------------------)[](https://towardsdatascience.com/?source=post_page-----9a9988e30dca--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----9a9988e30dca--------------------------------)
    [Lee Vaughan](https://medium.com/@lee_vaughan?source=post_page-----9a9988e30dca--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----9a9988e30dca--------------------------------)
    ·9 min read·Oct 19, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/374d6c5dd302c2d2c0047599a38579a3.png)'
  prefs: []
  type: TYPE_IMG
- en: An example of a nested bar chart (by author)
  prefs: []
  type: TYPE_NORMAL
- en: A *nested bar chart* is a visualization method that compares multiple measurements
    within categories. One of these measurements represents a secondary or *background*
    measure, such as a *target* or *previous* value. The primary measurement represents
    the *actual* or *current* value.
  prefs: []
  type: TYPE_NORMAL
- en: The secondary measure is usually presented in a *diminished capacity*, thus
    providing context for the primary measurement. Placing a wider and darker primary
    bar on top of a narrower and lighter secondary bar yields an attractive and compact
    chart. It also explains why this graphic is sometimes referred to as a *lipstick
    bar chart*.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5556ea6fec96d5bba13e831b46480f10.png)'
  prefs: []
  type: TYPE_IMG
- en: Lipstick image by Onder Ortel on Unsplash
  prefs: []
  type: TYPE_NORMAL
- en: Of course, for this to work properly, the primary bar should *never* be *longer*
    than the secondary bar. Thus, you’ll want to use nested bar charts to plot examples
    of *diminishing* values per category, such as a drop in house prices, or a decrease
    in disease rates due to a new vaccine.
  prefs: []
  type: TYPE_NORMAL
- en: In this *Quick Success Data Science* project, we’ll look at how well the famous
    *Associated Press College Football Top 25 poll* does at picking the 25 best American
    college football teams at the start of each season. Since the number of teams
    picked in the preseason can’t exceed the final number of teams in the ranking,
    this is a good application for a nested bar chart.
  prefs: []
  type: TYPE_NORMAL
- en: The AP College Football Top 25 Poll
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The AP releases their *preseason* poll around August or September of each year
    and then updates it every week throughout the season. Over 60 reputable sports
    writers and broadcasters across the country are called on to cast their votes
    for the best teams.
  prefs: []
  type: TYPE_NORMAL
- en: They start by creating a list of what they believe are the 25 best teams (out
    of 133) and assign each team a number of votes, awarding the best team a maximum
    of 25 points. The AP then combines these votes to rank the teams in descending
    order. After the bowl season and College Football Playoff, it releases a *final*
    poll for the year.
  prefs: []
  type: TYPE_NORMAL
- en: You can find these polls on the AP’s website and on sports sites such as [Sports
    Illustrated](https://www.si.com/), the [NCAA](http://www.ncaa.com), and [Sports
    Reference](https://www.sports-reference.com/). For convenience, I’ve already compiled
    the preseason and final polls for the last 20 years (2002–2022) and stored them
    as a CSV file in this [Gist](https://gist.github.com/rlvaugh/047dc3b39a712fabccd3e509cb94174e).
  prefs: []
  type: TYPE_NORMAL
- en: The Code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following code was inspired by a recent article on lipstick charts by Oscar
    Leo:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/how-to-create-a-lipstick-chart-with-matplotlib-2fde5412fee9?source=post_page-----9a9988e30dca--------------------------------)
    [## How to Create a Lipstick Chart with Matplotlib'
  prefs: []
  type: TYPE_NORMAL
- en: A data visualization when the lower the value, the better
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/how-to-create-a-lipstick-chart-with-matplotlib-2fde5412fee9?source=post_page-----9a9988e30dca--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: In this article, we’ll build on Oscar’s Python code for setting up a color palette,
    an attractive seaborn style, and a function for plotting horizontal bars with
    different widths and alphas, as required for nesting bars. We’ll tweak some of
    this code and add some more for loading and preparing the data and for making
    the final display.
  prefs: []
  type: TYPE_NORMAL
- en: Importing Libraries and Setting the Style
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For this project, we’ll need matplotlib and seaborn for plotting and pandas
    for data loading and preparation. You can find the current installation instructions
    for each by searching for *install <library name>*.
  prefs: []
  type: TYPE_NORMAL
- en: For the color palette, I chose “footbally” greens and browns from the helpful
    [Color Hunt site](https://colorhunt.co/palette/186f65b5cb99fce09bb2533e) recommended
    in Oscar Leo’s article.
  prefs: []
  type: TYPE_NORMAL
- en: Seaborn has a method for setting run configuration style parameters that will
    automatically be applied to every figure. This functionality is helpful if you
    want to make multiple figures with the same parameters, or if you want to “unclutter”
    your plotting code by abstracting these details to another cell or location. Obviously,
    you won’t need this code if you’re using seaborn’s *default* plotting parameters.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Loading the Data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The following code uses pandas’ `read_csv()` method to load the CSV-formatted
    poll data from the gist. It then displays the first three lines for quality control.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/4f67103c276a4fd82da4c09a475d6ff9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Note: Since we’re going to be comparing team *names*, it’s good to check that
    they’re *consistent* from poll to poll. In this case, a few polls included the
    team’s *record* in parentheses after the team''s name. This was a minor issue
    that I’ve already cleaned up, but you should be aware of it if you want to expand
    on this project in the future.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Preparing the Data for Plotting the Top 25 Results
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We’ll start by looking at the number of teams in the *preseason* poll that made
    it to the *final* poll at the end of the season. To do this, we’ll lean on Python’s
    `set` data type.
  prefs: []
  type: TYPE_NORMAL
- en: Just as in classical mathematics, a `set` can contain only unique values (no
    duplicates) and you can use built-in functions to find the *intersection* of two
    sets. This means that we can extract items (teams) that are shared between the
    preseason and final polls.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/b99d34d4d739abf8ec2f335c21a91ffe.png)'
  prefs: []
  type: TYPE_IMG
- en: Defining a Function to Plot Bars
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The following code defines a function that calls seaborn’s `barplot()` method.
    Its arguments give you control over the parameters used to generate a nested bar
    chart. For example, you need the axes object (`ax_obj`) to overlay bars in the
    same figure, `width` to make the primary bar wider than the secondary bar, and
    `alpha` to adjust the transparency of each bar so that the primary bar is darker.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Plotting the Top 25 Nested Bar Chart
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the code that follows, we set up a figure and then call the `add_bars()`
    function twice, tweaking the arguments, to make the primary and secondary bars.
    The `label` argument is used in the legend.
  prefs: []
  type: TYPE_NORMAL
- en: To make the display more informative, we’ll use the `bar_label()` method to
    add text about the percentage of preseason predictions that were correct. We’ll
    *pad* this to the left to ensure that the text is visually associated with the
    correct bar.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/f02579bc53368f5ee08689bd424a125e.png)'
  prefs: []
  type: TYPE_IMG
- en: Nested bar chart showing the number of preseason teams that made it into the
    final poll (by author)
  prefs: []
  type: TYPE_NORMAL
- en: Of the 500 teams ranked in the last 20 years, 313 of the ones picked in the
    preseason made the final cut, a success rate of about 63%.
  prefs: []
  type: TYPE_NORMAL
- en: Is that a good result? I’m not sure. American college football is dominated
    by multiple powerhouse programs that regularly appear in the final polls, so picking
    these is fairly easy and reliable. One interesting observation, however, is the
    downward trend beginning in 2011.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/168d0c464b298acc7367fa7f153c63f2.png)'
  prefs: []
  type: TYPE_IMG
- en: The general downward trend in prediction results beginning in 2011 (by author)
  prefs: []
  type: TYPE_NORMAL
- en: This trend could be a coincidence or a function of multiple factors including
    changing game rules, conference realignments, the introduction of NIL (Name, Image,
    and Likeness) payments, and the opening of the transfer portal.
  prefs: []
  type: TYPE_NORMAL
- en: Preparing the Data for Plotting the Top 4 Results
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Starting in 2014, the *National Collegiate Athletic Association (NCAA)* adopted
    a four-team playoff tournament to determine the national champion for the *Division
    1 Football Bowl Subdivision*. Let’s revisit our previous code and select the Top
    4 teams, to see how well the polls did in selecting the final champion. Here’s
    a spoiler: the preseason poll selected the final champion in only 2 of the last
    20 years, a success rate of only 10 percent!'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/d5c9ea48a83374a0313bfbad9f2c9e45.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: One thing to note here is that we had to pad the bar labels to the *right* this
    time. The problem is that none of the preseason teams made it into the final poll
    in 2010 and 2013\. If we pad the labels to the left, as we did in the previous
    display, the annotations will “fall off the edge” and post over the y-axis values.
    As you can imagine, having a combination of very short and very long primary bars
    is not ideal for annotating nested bar charts.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1f386c33610961ba3456db229522fa95.png)'
  prefs: []
  type: TYPE_IMG
- en: Nested bar chart of teams starting and finishing in the Top 4 of the AP College
    Football Poll (by author)
  prefs: []
  type: TYPE_NORMAL
- en: Of the 80 teams landing in the Top 4 over the past 20 years, the preseason poll
    has identified about 42% of them. In 2011 and 2020 it got 3 out of 4 correct.
    In 2010 and 2013 it was incorrect for all four.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Nested bar charts are a clean and compact way to compare categorical measurements
    where one measurement is consistently lower than the other. By including *bar
    labels* that provide additional information, you can easily turn these into attractive
    infographics that convey *meaning* as well as *information*.
  prefs: []
  type: TYPE_NORMAL
- en: Thanks!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Thanks for reading and please follow me for more *Quick Success Data Science*
    projects in the future.
  prefs: []
  type: TYPE_NORMAL
