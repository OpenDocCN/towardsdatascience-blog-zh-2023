["```py\nimport numpy as np\n\narr1 = np.array([1, 2, 3, 4])\narr2 = np.array([5, 6, 7, 8])\n\n# Horizontal (row-wise) stacking #1\narr_stacked = np.stack([arr1, arr2])\nprint('Numpy horizontal stacking method #1')\nprint('-----------------------------------')\nprint(arr_stacked)\n```", "```py\nimport numpy as np\n\narr1 = np.array([1, 2, 3, 4])\narr2 = np.array([5, 6, 7, 8])\n\n# Horizontal (row-wise) stacking #2\narr_stacked = np.stack([arr1, arr2], axis=0)\nprint('Numpy horizontal stacking method #2')\nprint('-----------------------------------')\nprint(arr_stacked)\n```", "```py\nimport numpy as np\n\narr1 = np.array([1, 2, 3, 4])\narr2 = np.array([5, 6, 7, 8])\n\n# Vertical (column-wise) stacking #1\narr_stacked = np.stack([arr1, arr2], axis=1)\nprint('Numpy vertical stacking method #1')\nprint('---------------------------------')\nprint(arr_stacked)\n```", "```py\nimport numpy as np\n\narr1 = np.array([1, 2, 3, 4])\narr2 = np.array([5, 6, 7, 8])\n\n# Vertical (column-wise) stacking #2\narr_stacked = np.stack([arr1, arr2], axis=-1)\nprint('Numpy vertical stacking method #2')\nprint('---------------------------------')\nprint(arr_stacked)\n```", "```py\nimport numpy as np\n\narr1 = np.array([1, 2, 3, 4])\narr2 = np.array([5, 6, 7, 8])\n\n# Stacking 1D arrays\narr_stacked = np.stack([arr1, arr2])\nprint('Numpy stacking 1D arrays')\nprint('------------------------')\nprint(arr_stacked)\n```", "```py\nimport numpy as np\n\narr1 = np.array([\n    [1, 2, 3, 4],\n    [5, 6, 7, 8]\n])\narr2 = np.array([\n    [9, 10, 11, 12],\n    [13, 14, 15, 16]\n])\n\n# Stacking 2D arrays #1\narr_stacked = np.stack([arr1, arr2])\nprint('Numpy stacking 2D arrays method #1')\nprint('----------------------------------')\nprint(arr_stacked)\n```", "```py\nimport numpy as np\n\narr1 = np.array([\n    [1, 2, 3, 4],\n    [5, 6, 7, 8]\n])\narr2 = np.array([\n    [9, 10, 11, 12],\n    [13, 14, 15, 16]\n])\n\n# Stacking 2D arrays #2\narr_stacked = np.stack([arr1, arr2], axis=1)\nprint('Numpy stacking 2D arrays method #2')\nprint('----------------------------------')\nprint(arr_stacked)\n```", "```py\nimport numpy as np\n\narr1 = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]])\narr2 = np.array([[13, 14, 15], [16, 17, 18]])\nmatrix = [arr1, arr2]\n\nprint('Numpy stacking in a loop - intermediary matrix')\nprint('----------------------------------------------')\nprint(matrix)\n```", "```py\narr3 = np.empty(shape=[0, matrix[0].shape[1]])\n\nfor m in matrix:\n    arr3 = np.append(arr3, m, axis=0)\n\nprint('Numpy stacking in a loop')\nprint('------------------------')\nprint(arr3)\n```", "```py\nimport numpy as np\n\narr1 = np.array([1, 2, 3, 4])\narr2 = np.array([5, 6, 7, 8])\n\n# Numpy depth stacking - dstack\narr_stacked = np.dstack([arr1, arr2])\nprint('Numpy depth stacking')\nprint('--------------------')\nprint(arr_stacked)\nprint()\nprint(f'Shape = {arr_stacked.shape}')\n```"]