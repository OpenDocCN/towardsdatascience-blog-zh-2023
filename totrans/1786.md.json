["```py\nconda create -n \"hr-data\" python=3.10 pandas tabulate -y\n\n-- installation logs --\n\nconda activate hr-data\n```", "```py\nimport pandas as pd\n\ndf = pd.read_csv(\"Employees_Base.csv\")\ndf\n```", "```py\nsample_md = df.sample(50).to_markdown()\nprint(sample_md)\n```", "```py\nCould you :\n- identify the categorical columns within this dataset as well as confidential ones\n- suggest a database schema with different tables (pay attention to creating a separate table for confidential data)\n- for the tables with categorical data, please provide the SQL script to create them, including their content (Key and Values)\n- for the remaining tables, please provide the script to create their scheme\n- for each column of each table, suggest some data quality checks\n```", "```py\nCategorical columns: Department, Country, Location, Education\nConfidential columns: Email, Salary, Annual_Performance\n```", "```py\nDatabase schema:\n\nEmployee_Details (Employee_ID, First_Name, Last_Name, Age, Department_ID, Country_ID, Location_ID, Education_ID)\nConfidential_Data (Employee_ID, Email, Salary, Annual_Performance)\nDepartments (Department_ID, Department_Name)\nCountries (Country_ID, Country_Name)\nLocations (Location_ID, Location_Name)\nEducation_Levels (Education_ID, Education_Level)\n```", "```py\nCREATE TABLE Departments (\n    Department_ID INT PRIMARY KEY,\n    Department_Name VARCHAR(255) NOT NULL\n);\nINSERT INTO\n    Departments (Department_ID, Department_Name)\nVALUES\n    (1, 'Digital'),\n    (2, 'Manufacturing'),\n    (3, 'Finance'),\n    (4, 'R&D'),\n    (5, 'Legal'),\n    (6, 'Sales'),\n    (7, 'Human Ressources'),\n    (8, 'Procurement'),\n    (9, 'Supply-Chain');\n\nCREATE TABLE Countries (\n        Country_ID INT PRIMARY KEY,\n        Country_Name VARCHAR(255) NOT NULL\n    );\nINSERT INTO\n    Countries (Country_ID, Country_Name)\nVALUES\n    (1, 'USA'),\n    (2, 'UK'),\n    (3, 'Canada');\n\nCREATE TABLE Locations (\n        Location_ID INT PRIMARY KEY,\n        Location_Name VARCHAR(255) NOT NULL\n    );\nINSERT INTO\n    Locations (Location_ID, Location_Name)\nVALUES\n    (1, 'New-York'),\n    (2, 'Detroit'),\n    (3, 'San Fransisco'),\n    (4, 'London'),\n    (5, 'Birmingham'),\n    (6, 'Montreal'),\n    (7, 'Quebec'),\n    (8, 'Toronto'),\n    (9, 'Brighton');\n\nCREATE TABLE Education_Levels (\n        Education_ID INT PRIMARY KEY,\n        Education_Level VARCHAR(255) NOT NULL\n    );\nINSERT INTO\n    Education_Levels (Education_ID, Education_Level)\nVALUES\n    (1, 'Bachelor''s Degree'),\n    (2, 'Master''s Degree'),\n    (3, 'Doctoral Degree'),\n    (4, 'Certificate'),\n    (5, 'Associate Degree');\n```", "```py\nCREATE TABLE Confidential_Data (  \n    Employee_ID VARCHAR(255) PRIMARY KEY,  \n    Email VARCHAR(255) NOT NULL,  \n    Salary INT NOT NULL,  \n    Annual_Performance INT NOT NULL  \n);  \n\nCREATE TABLE Employee_Details (  \n    Employee_ID VARCHAR(255) PRIMARY KEY,  \n    First_Name VARCHAR(255) NOT NULL,  \n    Last_Name VARCHAR(255) NOT NULL,  \n    Age INT NOT NULL,  \n    Department_ID INT NOT NULL,  \n    Country_ID INT NOT NULL,  \n    Location_ID INT NOT NULL,  \n    Education_ID INT NOT NULL,  \n    FOREIGN KEY (Employee_ID) REFERENCES Confidential_Data(Employee_ID),  \n    FOREIGN KEY (Department_ID) REFERENCES Departments(Department_ID),  \n    FOREIGN KEY (Country_ID) REFERENCES Countries(Country_ID),  \n    FOREIGN KEY (Location_ID) REFERENCES Locations(Location_ID),  \n    FOREIGN KEY (Education_ID) REFERENCES Education_Levels(Education_ID)  \n); \n```", "```py\nData quality checks for each column of each table:\n\nConfidential_Data\nEmployee_ID: Check for duplicates and NULL values\nEmail: Check for valid email format, duplicates, and NULL values\nSalary: Check for negative values and NULL values\nAnnual_Performance: Check for values outside the valid range (e.g., 1-5) and NULL values\n\nEmployee_Details\nEmployee_ID: Check for duplicates and NULL values\nFirst_Name: Check for non-alphabetic characters and NULL values\nLast_Name: Check for non-alphabetic characters and NULL values\nAge: Check for values outside the valid range (e.g., 18-65) and NULL values\nDepartment_ID: Check for invalid department IDs and NULL values\nCountry_ID: Check for invalid country IDs and NULL values\nLocation_ID: Check for invalid location IDs and NULL values\nEducation_ID: Check for invalid education IDs and NULL values\n\nDepartments\nDepartment_ID: Check for duplicates and NULL values\nDepartment_Name: Check for duplicates and NULL values\nCountries\nCountry_ID: Check for duplicates and NULL values\nCountry_Name: Check for duplicates and NULL values\nLocations\nLocation_ID: Check for duplicates and NULL values\nLocation_Name: Check for duplicates and NULL values\nEducation_Levels\nEducation_ID: Check for duplicates and NULL values\nEducation_Level: Check for duplicates and NULL values\n```", "```py\nCategorical columns:\n\nEmployee_ID: This is a unique identifier for each employee. It is a numeric column and should be unique for each employee.\nFirst_Name: This is the employee's first name. It is a text column and should be alphabetic.\nLast_Name: This is the employee's last name. It is a text column and should be alphabetic.\n\nDepartment: This is the department where the employee works. It is a text column and should be one of the following values:\n  Digital\n  Manufacturing\n  R&D\n  Legal\n  Human Ressources\n  Procurement\n  Sales\n  Supply-Chain\n\nCountry: This is the country where the employee works. It is a text column and should be one of the following values:\n  USA\n  UK\n  Canada\n\nLocation: This is the city where the employee works. It is a text column.\n\nEducation: This is the highest level of education the employee has completed. It is a text column and should be one of the following values:\n  Bachelor's Degree\n  Master's Degree\n  Doctoral Degree\n  Associate Degree\n  Certificate\n\nConfidential columns:\n\nSalary: This is the employee's salary. It is a numeric column and should be kept confidential.\nAnnual_Performance: This is the employee's annual performance rating. It is a numeric column and should be kept confidential.\n```", "```py\nCREATE TABLE employees (\n  employee_id INT NOT NULL AUTO_INCREMENT,\n  first_name VARCHAR(255) NOT NULL,\n  last_name VARCHAR(255) NOT NULL,\n  department VARCHAR(255) NOT NULL,\n  country VARCHAR(255) NOT NULL,\n  location VARCHAR(255),\n  education VARCHAR(255) NOT NULL,\n  salary INT NOT NULL,\n  annual_performance INT NOT NULL,\n  PRIMARY KEY (employee_id)\n);\n\nCREATE TABLE confidential_data (\n  employee_id INT NOT NULL,\n  salary INT NOT NULL,\n  annual_performance INT NOT NULL,\n  CONSTRAINT fk_employees_confidential_data\n    FOREIGN KEY (employee_id)\n    REFERENCES employees (employee_id)\n    ON DELETE CASCADE\n);\n```", "```py\nData quality checks for each column of each table:\n\nEmployee_ID:\nThe employee ID should be unique for each employee.\nThe employee ID should be a positive integer.\n\nFirst_Name:\nThe first name should be a string of characters.\nThe first name should not be longer than 255 characters.\n\nLast_Name:\nThe last name should be a string of characters.\nThe last name should not be longer than 255 characters.\n\nDepartment:\nThe department should be one of the following values:\n  Digital\n  Manufacturing\n  R&D\n  Legal\n  Human Ressources\n  Procurement\n  Sales\n  Supply-Chain\n\nCountry:\nThe country should be one of the following values:\n  USA\n  UK\n  Canada\n\nLocation:\nThe location can be any string of characters.\n\nEducation:\nThe education should be one of the following values:\n  Bachelor's Degree\n  Master's Degree\n  Doctoral Degree\n  Associate Degree\n  Certificate\n\nSalary:\nThe salary should be a positive integer.\n\nAnnual_Performance:\nThe annual performance should be a number between 1 and 5.\n```"]