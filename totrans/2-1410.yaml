- en: Level Up Your Data Storytelling with Animated Bar Charts in Plotly
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Plotly 中提升你的数据讲述能力，使用动画柱状图
- en: 原文：[https://towardsdatascience.com/level-up-your-data-storytelling-with-animated-bar-charts-in-plotly-f9ace6d73f27](https://towardsdatascience.com/level-up-your-data-storytelling-with-animated-bar-charts-in-plotly-f9ace6d73f27)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/level-up-your-data-storytelling-with-animated-bar-charts-in-plotly-f9ace6d73f27](https://towardsdatascience.com/level-up-your-data-storytelling-with-animated-bar-charts-in-plotly-f9ace6d73f27)
- en: Transforming static plots into captivating narratives
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将静态图表转变为引人入胜的叙述
- en: '[](https://brian-mattis.medium.com/?source=post_page-----f9ace6d73f27--------------------------------)[![Brian
    Mattis](../Images/40296183ee475462f7699b65f3a30eba.png)](https://brian-mattis.medium.com/?source=post_page-----f9ace6d73f27--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f9ace6d73f27--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f9ace6d73f27--------------------------------)
    [Brian Mattis](https://brian-mattis.medium.com/?source=post_page-----f9ace6d73f27--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://brian-mattis.medium.com/?source=post_page-----f9ace6d73f27--------------------------------)[![Brian
    Mattis](../Images/40296183ee475462f7699b65f3a30eba.png)](https://brian-mattis.medium.com/?source=post_page-----f9ace6d73f27--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f9ace6d73f27--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f9ace6d73f27--------------------------------)
    [Brian Mattis](https://brian-mattis.medium.com/?source=post_page-----f9ace6d73f27--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----f9ace6d73f27--------------------------------)
    ·6 min read·Dec 2, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----f9ace6d73f27--------------------------------)
    ·6 分钟阅读·2023 年 12 月 2 日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/4e12d61700b107cf6c44cc6091ebec87.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4e12d61700b107cf6c44cc6091ebec87.png)'
- en: Photo by [Teemu Paananen](https://unsplash.com/@xteemu?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Teemu Paananen](https://unsplash.com/@xteemu?utm_source=medium&utm_medium=referral)
    在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Plotly supports an excellent foundation for animated plots. I highly recommend
    their basic tutorial [here](https://plotly.com/python/animations/). However, plotly
    animations are primarily set up to add another dimension to the visualization
    — usually time. This is fantastic for adding more meaning to a plot.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Plotly 支持动画图表的**优秀基础**。我强烈推荐他们的基础教程 [这里](https://plotly.com/python/animations/)。然而，plotly
    动画主要是为了给可视化添加另一个维度——通常是时间。这对为图表增添更多意义非常棒。
- en: Animation, however, *doesn’t have to be used to add complexity to a plot*. The
    ability to **emphasize** with animation is powerful. When we have the pivotal
    graph for our audience, we want to pull in their attention without explicitly
    shouting “This is the plot you should really pay attention to!” Our eyes are naturally
    drawn to things moving, and animated plots can have a way of building up anticipation.
    Your audience engages and mentally tries to anticipate next bar or line in real
    time. Imagine if key business decisions hinge on this plot — your audience waits
    with baited breath while the results unfold before their eyes!
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，*动画不必用于增加图表的复杂性*。利用动画进行**强调**是非常强大的。当我们为观众准备好关键图表时，我们希望吸引他们的注意，而不是明确地喊出“这是你应该特别关注的图表！”我们的视线自然会被移动的东西吸引，动画图表可以在某种程度上营造出期待感。你的观众会参与其中，试图实时预测下一条柱状图或线条。如果关键业务决策依赖于这个图表——你的观众会屏息以待，眼睁睁看着结果展开！
- en: 'To put it in perspective — imagine you’re 20 minutes into a colleague’s presentation
    — which graph grabs your attention? This simple (pandas-generated) graph:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解——想象一下你已经看了同事的演示文稿 20 分钟——哪个图表吸引了你的注意？这个简单的（pandas 生成的）图表：
- en: '![](../Images/9f8ff96c7540f05c923ad44140386e00.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9f8ff96c7540f05c923ad44140386e00.png)'
- en: Basic bar plot — Image by Author
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 基本柱状图——作者提供的图像
- en: 'Or this animated graph of the same data:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 或者这张相同数据的动画图表：
- en: '![](../Images/ffbeeee8afa37382e4c7e854e7600139.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ffbeeee8afa37382e4c7e854e7600139.png)'
- en: Custom Plotly animated bar plot — Image by Author
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义 Plotly 动画柱状图——作者提供的图像
- en: Building in Plotly
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Plotly 中构建
- en: 'To pull this off in Plotly, we actually have to reshuffle our data a bit. Again,
    Plotly animations are set up to step with some sequence (usually time). So, we’re
    going to stretch our data to effectively make a frame for each data point. Here
    we go:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Plotly 中实现这一点，我们实际上需要稍微重新排列数据。同样，Plotly 动画的设置是按某种顺序（通常是时间）进行的。因此，我们将扩展数据以有效地为每个数据点制作一个帧。来吧：
- en: 'First, let’s import the plotly package (install with pip if you haven’t already),
    and create a dummy data set to work with:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们导入 plotly 包（如果还没有安装，请使用 pip 安装），并创建一个虚拟数据集进行操作：
- en: 'To use plotly’s animation directly, we’ll need to augment our data set into
    this:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要直接使用 plotly 的动画，我们需要将数据集增强为以下内容：
- en: '![](../Images/73e28d4e10301c794f68cd18faf1f64d.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/73e28d4e10301c794f68cd18faf1f64d.png)'
- en: Data transformation for animated bars — Image by Author
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 动画条形图的数据转换 — 图片来自作者
- en: 'We’ll want to effectively stack copies of our dataframe, with the number of
    copies being the length of our original dataframe. With each copy, we’ll want
    to add a Frame value to set its sequence in the animation. Where it gets tricky
    is that we want more bars to appear with each step of the sequence. We want to
    start with no bars showing on our plot, so for the first Frame we’ll set all of
    the values to 0\. Then, on the second Frame we’ll set all of them to zero ***except***
    the first data point (A: 10). This method continues until the last Frame (Frame
    #6 in this case) shows all of the values from our original data.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '我们需要有效地堆叠数据框的副本，副本的数量与原始数据框的长度相同。对于每个副本，我们需要添加一个 Frame 值来设置其在动画中的序列。问题在于，我们希望每一步序列中出现更多的条形图。我们希望在绘图中开始时不显示任何条形图，因此对于第一个
    Frame，我们将所有值设置为 0。然后，在第二个 Frame 上，我们将所有值设置为 0 ***除了*** 第一个数据点（A: 10）。这个方法一直持续到最后一个
    Frame（在这种情况下是 Frame #6）显示我们原始数据中的所有值。'
- en: 'At this point we have set up individual “Frame” elements for Plotly to smoothly
    animate between. Note that we **are not** coding every frame of the animation,
    we simply are snapshotting the final value for each Label, one-by-one, and letting
    Plotly fill in the blanks. Now we just need a helper function so we can apply
    this transformation concept to any simple dataframe:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止，我们已经为 Plotly 设置了单独的“Frame”元素，以便平滑地动画过渡。请注意，我们**没有**为动画编码每一帧，我们只是逐个快照每个
    Label 的最终值，让 Plotly 填补空白。现在我们只需要一个辅助函数，这样我们就可以将这个转换概念应用于任何简单的数据框：
- en: Dataframe stacking and sequencing function
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 数据框堆叠和排序函数
- en: In this code, we start my creating our blank destination dataframe, which will
    be the returned output. We loop through for as many times as there are elements
    in the passed-in dataframe — `range(len(starting_df)+1)`. We add 1 here, as the
    first Frame will have all values zeroed out so that our plot starts out empty.
    Within the for loop, we start with a deep copy of the original dataframe. This
    means that changes we make to this copy won’t propagate back to the original.
    On this free-and-clear copy we add a Frame value, and zero out some of the data
    points, depending on which loop we’re on. Finally, we can add this copy to the
    end of the final dataframe we’re constructing.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在这段代码中，我们首先创建一个空白的目标数据框，它将作为返回的输出。我们循环遍历传入数据框中的元素数量 — `range(len(starting_df)+1)`。我们在这里加了
    1，因为第一个 Frame 将所有值都置为零，以便我们的图开始时为空。在循环内部，我们从原始数据框的深拷贝开始。这意味着我们对这个副本所做的更改不会传递回原始数据框。在这个干净的副本上，我们添加一个
    Frame 值，并根据我们所在的循环次数将一些数据点置为零。最后，我们可以将这个副本添加到我们正在构建的最终数据框的末尾。
- en: Plotting
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 绘图
- en: 'From here we’re ready to start plotting. If we just use the stock plotly function,
    it looks something like this:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里开始我们准备开始绘图。如果我们只是使用默认的 plotly 函数，它看起来会像这样：
- en: '![](../Images/390f7cfac691f0ebb596a05707ad2729.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/390f7cfac691f0ebb596a05707ad2729.png)'
- en: Default plotting setup — Image by Author
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 默认绘图设置 — 图片来自作者
- en: 'As you can see, it gets a little wonky at the get-go. This mainly has to do
    with how the plot autoscales the y-axis as the data appears. It’s not particularly
    surprising, as when it first plots (Frame=0), all of the values are zero. On top
    of that, the speed of the sequence may not be what you want. Maybe you want it
    to draw the bars a bit slower? Maybe it’d be nice to have a pause between drawing
    bars? These are all modifiable parameters. Best of all, with plotly, we don’t
    even have to have the bars grow linearly — there are a broad set transition settings
    you can use. To clean this plot into something I’d want to present, I’ll alter
    the:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，开始时有点怪异。这主要与绘图如何自动缩放 y 轴以适应数据有关。这并不特别令人惊讶，因为在它第一次绘制时（Frame=0），所有值都是零。除此之外，序列的速度可能不是你想要的。也许你想让条形图绘制得慢一点？也许在绘制条形图之间有一个暂停会很好？这些都是可调整的参数。最好的部分是，使用
    plotly，我们甚至不需要条形图线性增长 — 你可以使用一系列的过渡设置。为了将这个图形清理成我想展示的样子，我将调整：
- en: Y-axis range (take the max value in the dataframe and add 10%)
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Y轴范围（取数据框中的最大值并加上10%）
- en: Figure size and aspect ratio
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图形大小和纵横比
- en: Duration of each Frame and the time between Frames
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每帧的持续时间和帧之间的时间
- en: The animation movement itself (transition)
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 动画移动本身（过渡）
- en: '![](../Images/b5aaa768847c84bedf9fe3ceb36050b4.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b5aaa768847c84bedf9fe3ceb36050b4.png)'
- en: Formatted animated bar plot using the “quad-out” animation — Image by Author
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 使用“quad-out”动画格式化的动画条形图——作者提供的图像
- en: In this case, I used the “quad-out” transition, but there are bunch to chose
    from that can impact the visualization. Check out the documentation [here](https://plotly.com/python/reference/layout/sliders/#layout-sliders-items-slider-transition-easing)
    and give a few a try — “bounce” in particular is pretty entertaining (though maybe
    not the most professional). There are also lots of [settings](https://plotly.com/python/reference/layout/sliders/)
    you can alter to modify or remove the buttons below the plot, though depending
    on how you export your graph, it may not be necessary.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我使用了“quad-out”过渡效果，但还有很多可以选择的效果，这些效果会影响可视化效果。可以查看文档 [这里](https://plotly.com/python/reference/layout/sliders/#layout-sliders-items-slider-transition-easing)
    并尝试几种效果——特别是“bounce”效果相当有趣（尽管可能不是最专业的）。还有许多可以调整的 [设置](https://plotly.com/python/reference/layout/sliders/)，可以用来修改或移除图表下方的按钮，不过这可能取决于你导出图表的方式，有时可能并不必要。
- en: Export to GIF
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导出为 GIF
- en: Now for the bad news — there’s no built-in way to extract these animations in
    Plotly. You’ll have to do a work-around for now. There are packages you can use
    to extract to a movie file like `moviepy`, but this is a bit overkill if we’re
    looking to put this into a powerpoint or web-based customer dashboard. An animated
    GIF is really what we’re after here. While extracting the animation frames as
    pngs with Plotly’s graph_objects and using other packages to build the GIF inline
    is an option, it’s a bit out of scope for this post. For now, it’s easy to use
    a basic GIF screen-capture software on the Jupyter Notebook window. There are
    lots of options out there — [here](https://www.screentogif.com/) is a free one
    that worked for me.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在有个坏消息——Plotly没有内置的方法来提取这些动画。你现在需要做一些变通的方法。有些包可以用来提取成电影文件，如 `moviepy`，但如果我们要将其放入演示文稿或基于网页的客户仪表板中，这可能有些过于复杂。我们真正需要的是一个动画
    GIF。虽然使用 Plotly 的 graph_objects 提取动画帧为 PNG 并使用其他包在线生成 GIF 是一个选项，但这超出了本帖的范围。现在，可以使用基本的
    GIF 屏幕捕捉软件在 Jupyter Notebook 窗口上进行操作。这里有很多选择——[这里](https://www.screentogif.com/)
    有一个免费的软件对我有效。
- en: Extra Credit
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 额外加分
- en: 'Of course, this sequence is made to draw the bars from left to right. Should
    we want the opposite, Frame #1 would have a value for F (16) and A would still
    be 0\. This may come in handy for line plots, where multiple lines can grow from
    different sides of the plot. 🤯'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这个序列是为了从左到右绘制条形图。如果我们想要相反的效果，帧#1的F值将为16，而A值仍为0。这在绘制折线图时可能会很有用，其中多条线可以从图表的不同侧面生长。🤯
- en: Conclusion
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: I hope you can see how adding a bit of animation can make a simple plot much
    more impactful to our audience. By using this relatively simple function we can
    quickly and easily transition our static plots into images that are dramatically
    more engaging. Of course, this is just the start! As followers of my channel know,
    I love enhancing plots with meaningful [bar color gradients](https://medium.com/towards-data-science/beautiful-bars-scaled-gradient-fill-on-bar-plots-e4da4cdae033)
    and [background transitions](https://medium.com/towards-data-science/custom-matplotlib-colormaps-for-danger-zone-plots-62310983eb67)
    to intuitively communicate more to our audience. More on that coming soon.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望你能看到添加一点动画如何使简单的图表对观众更具影响力。通过使用这个相对简单的功能，我们可以快速而轻松地将静态图表转换成极具吸引力的图像。当然，这只是一个开始！正如我频道的粉丝所知道的，我喜欢用有意义的
    [条形颜色渐变](https://medium.com/towards-data-science/beautiful-bars-scaled-gradient-fill-on-bar-plots-e4da4cdae033)
    和 [背景过渡](https://medium.com/towards-data-science/custom-matplotlib-colormaps-for-danger-zone-plots-62310983eb67)
    来直观地向观众传达更多信息。更多内容即将到来。
- en: As usual, the entire code walk-through notebook can be [snagged from my github](https://github.com/bamattis/Blog/tree/main/Plotly_animation).
    ***Please follow me if you found this useful!*** Cheers, and happy coding out
    there.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 和往常一样，整个代码演示笔记本可以 [从我的 github 获取](https://github.com/bamattis/Blog/tree/main/Plotly_animation)。***如果你觉得这有用，请关注我！***
    祝好，编码愉快。
