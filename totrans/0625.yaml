- en: D-Tale for Fast and Easy Exploratory Data Analysis of Well Log Data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/d-tale-for-fast-and-easy-exploratory-data-analysis-of-well-log-data-a2ffca5295b6](https://towardsdatascience.com/d-tale-for-fast-and-easy-exploratory-data-analysis-of-well-log-data-a2ffca5295b6)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Speeding Up The Exploratory Data Analysis Workflow With The D-Tale Python Library
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://andymcdonaldgeo.medium.com/?source=post_page-----a2ffca5295b6--------------------------------)[![Andy
    McDonald](../Images/df11d647be032aeb3d31852affb33a64.png)](https://andymcdonaldgeo.medium.com/?source=post_page-----a2ffca5295b6--------------------------------)[](https://towardsdatascience.com/?source=post_page-----a2ffca5295b6--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----a2ffca5295b6--------------------------------)
    [Andy McDonald](https://andymcdonaldgeo.medium.com/?source=post_page-----a2ffca5295b6--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----a2ffca5295b6--------------------------------)
    ·9 min read·Feb 13, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/69731dfd474498c1868f43295fad17d5.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by [Photo Mix](https://pixabay.com/users/photomix-company-1546875/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=1433427)
    from [Pixabay](https://pixabay.com//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=1433427)
  prefs: []
  type: TYPE_NORMAL
- en: Exploratory Data Analysis (EDA) can be a time consuming but crucial part of
    the data science and machine learning workflow. It is through this process that
    we become familiar with our datasets, understand their contents, have an overview
    of the statistics of the data and much more. It is at this stage that we spend
    the majority of our time on many projects. [In some cases, this can be up to 90%
    of the available project time](https://www.researchgate.net/publication/357867454_Data_Quality_Considerations_for_Petrophysical_Machine-Learning_Models).
  prefs: []
  type: TYPE_NORMAL
- en: When carrying out EDA in Python, we often rely on libraries like pandas and
    matplotlib to explore our data. Oftentimes, this can lead to writing significant
    pieces of code to get a plot to display how we want it to. For example, [creating
    well log plots with matplotlib takes time to work out and display the data the
    correct way.](https://medium.com/@andymcdonaldgeo/loading-and-displaying-well-log-data-b9568efd1d8)
  prefs: []
  type: TYPE_NORMAL
- en: There are several libraries out there for Python which can speed up the EDA
    phase of a project significantly. One of these is [D-Tale](https://pypi.org/project/dtale/).
  prefs: []
  type: TYPE_NORMAL
- en: '[D-Tale](https://pypi.org/project/dtale/) is a powerful exploratory data analysis
    Python library that makes it easy for you to interactively view, analyse, and
    edit data contained within pandas dataframes. If you want to explore the functionality
    of D-Tale without downloading it, check out this [live example](http://alphatechadmin.pythonanywhere.com/dtale/main/1).'
  prefs: []
  type: TYPE_NORMAL
- en: To get started with D-Tale on your own system, you install it using your terminal
    and running the following command.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'If you are using Anaconda, you will need to use the following command instead:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Importing Libraries and Loading Data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first step with any python project is to import the libraries we will be
    working with. In this case, all we need is [pandas](https://pandas.pydata.org/)
    to load in our data from a CSV file and [D-Tale](https://pypi.org/project/dtale/)
    to carry out the analysis.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Once the libraries have been imported, we can import our data. For this example,
    we will be using well log measurements that have been acquired from numerous oil
    and gas wells off the Norwegian coast. The dataset we are using for this tutorial
    is a subset of a training dataset used as part of a Machine Learning competition
    run by Xeek and FORCE 2020 *(Bormann et al., 2020)*. It is released under a NOLD
    2.0 licence from the Norwegian Government, details of which can be found here:
    [Norwegian Licence for Open Government Data (NLOD) 2.0](https://data.norge.no/nlod/en/2.0/).
    The full dataset can be accessed [here](https://doi.org/10.5281/zenodo.4351155).'
  prefs: []
  type: TYPE_NORMAL
- en: 'To read the data, we call upon the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Loading Data into D-Tale
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Once the data has been loaded, we can start exploring the dataset. Normally
    when working with data we would be using several pandas functions. However, all
    we have to do with D-Tale, is call upon the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Once we call upon `dtale.show(df)` we will be presented with an interactive
    data table similar to the one below. This provides a much better and more friendly
    experience than basic pandas functions we are used to.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5d92cb47381e5bbd8790395e84b6b233.png)'
  prefs: []
  type: TYPE_IMG
- en: Interactive dataframe created by D-Tale of well log measurements. Image by the
    author.
  prefs: []
  type: TYPE_NORMAL
- en: In the top left of the display, we can see two numbers. The bottom one (17717)
    represents the number of rows present in the dataframe and the right one (12)
    represents the number of columns.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/32503a8dedad58905a7df15a19a05c58.png)'
  prefs: []
  type: TYPE_IMG
- en: D-Tale row and column count info. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: If we click on the triangle that points to the right, we will see the following
    menu, which is packed with features to make data analysis easier.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a51bf7f285db2c272359a0b56e61acf5.png)'
  prefs: []
  type: TYPE_IMG
- en: Menu options contained within D-Tale. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: As there are so many options available within D-Tale, we are only going to focus
    on a few of them.
  prefs: []
  type: TYPE_NORMAL
- en: Data Summaries with D-Tale
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When working with [pandas](https://pandas.pydata.org/), we often call on the
    `[.describe()](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.describe.html)`
    [method](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.describe.html)
    to get some summary statistics of our dataset. With D-Tale, we can also do this,
    but at the same time, we will get significantly more information.
  prefs: []
  type: TYPE_NORMAL
- en: From the menu shown above, all we need to select is Describe. This will open
    up a new page with a summary.
  prefs: []
  type: TYPE_NORMAL
- en: In the example below, we can see that when the WELL column is selected, we get
    information about the content of that column. As this column is of data type string,
    we have information about the characters, the length of the strings, and even
    details about the unique values contained within that column.
  prefs: []
  type: TYPE_NORMAL
- en: This is especially handy if you are dealing with a CSV file that contains information
    from multiple wells, and you need to know which wells they are.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/53c1e0a3d7ec2dca10be258f26764def.png)'
  prefs: []
  type: TYPE_IMG
- en: Well column summary created using D-Tale. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: If we go to the LITH column, we will see the same kind of summary, but we will
    now see all of the lithologies that are present within that column.
  prefs: []
  type: TYPE_NORMAL
- en: Again, this is handy when exploring well log data, as we are often interested
    in certain lithologies for our petrophysical and well log analysis.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ac2c73cd2467c5c22eb9c8fe99cb2552.png)'
  prefs: []
  type: TYPE_IMG
- en: Lithology column summary created using D-Tale. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: We can go one step further in exploring the LITH data by clicking on the Value
    Counts button. This will present us with a nice bar graph illustrating the occurrence
    of each lithology within the dataset.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c5c215d48a7279b6ea2e464a33329ca8.png)'
  prefs: []
  type: TYPE_IMG
- en: Bar charts within D-Tale showing the occurrence of different lithologies within
    a well. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: If we do the same with numerical data, we get a few extra options for visualising
    our dataset.
  prefs: []
  type: TYPE_NORMAL
- en: For example, if we look at the DTC (acoustic compressional slowness) column
    in our dataset, we get the key statistics about the data, including the mean,
    percentiles, standard deviation etc.
  prefs: []
  type: TYPE_NORMAL
- en: We also get a nice boxplot showing the distribution of our data.
  prefs: []
  type: TYPE_NORMAL
- en: At the bottom of the summary, we have information about the unique values within
    that column and the option to view any outlier values.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/729fe3e3ba0803407aeb8e19d70ba9cc.png)'
  prefs: []
  type: TYPE_IMG
- en: Data summary of a numeric curve created with D-Tale. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: If we click on the Histogram button, we can view the distribution of values
    within the DTC column on a combined histogram and KDE plot. This is a very common
    data visualisation and allows us to view the distribution of our data. In the
    example below, we have a bimodal distribution with a peak of around 85 us/ft and
    a second of around 157 us/ft.
  prefs: []
  type: TYPE_NORMAL
- en: On this page, we also have the option to change the number of bins for our histogram.
    This is great if we want to increase the level of detail we want to see or reduce
    it.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2dbb2f34539cd9d074591510a409bb13.png)'
  prefs: []
  type: TYPE_IMG
- en: Interactive histogram within the Describe module of D-Tale. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: One great feature within the Describe section of D-Tale, is the ability to view
    values by categories.
  prefs: []
  type: TYPE_NORMAL
- en: When carrying out petrophysical or well log analysis, we often want to see how
    values differ between different geological formations or between lithologies.
    This plot provides some of that functionality and enables us to have a quick understanding
    of the values encountered within each group.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7465be125d98d405fadcbd7736455b43.png)'
  prefs: []
  type: TYPE_IMG
- en: Easily visualise the data by categories such as lithology or geological formation.
    Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Visualising Data Completeness With D-Tale
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When working with datasets, [it is essential to consider how complete your dataset
    is before you begin to apply advanced analytics or machine learning to it](https://medium.com/towards-data-science/data-quality-considerations-for-machine-learning-models-dcbe9cab34cb).
    There are a few libraries available for this; one of my favourites is [missingno](https://github.com/ResidentMario/missingno)
    — which is simple to use python library and has been integrated with D-Tale.
  prefs: []
  type: TYPE_NORMAL
- en: If we go to the menu and select Visualise followed by Missing Analysis, we will
    be able to see the [missingno](https://github.com/ResidentMario/missingno) plots.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0ebe018dfb77bdef628c9f29a4090db7.png)'
  prefs: []
  type: TYPE_IMG
- en: Analysing and understanding data completeness within a well log dataset with
    D-Tale. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: For more information on each of these plots, check out my article below, where
    I explore the functionality of this library.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/using-the-missingno-python-library-to-identify-and-visualise-missing-data-prior-to-machine-learning-34c8c5b5f009?source=post_page-----a2ffca5295b6--------------------------------)
    [## Using the missingno Python library to Identify and Visualise Missing Data
    Prior to Machine Learning'
  prefs: []
  type: TYPE_NORMAL
- en: An example using petrophysical well log measurements
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/using-the-missingno-python-library-to-identify-and-visualise-missing-data-prior-to-machine-learning-34c8c5b5f009?source=post_page-----a2ffca5295b6--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Visualising Data Using Interactive Charts with D-Tale
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the key aspects of data science and petrophysics is visualising your
    data. This allows you to get a feel for the data compared to looking at raw numbers
    within a table.
  prefs: []
  type: TYPE_NORMAL
- en: To access the charts, we need to navigate to Visualise → Charts within the D-Tale
    menu. Once selected, a new browser tab will open up.
  prefs: []
  type: TYPE_NORMAL
- en: From here, we have a huge range of options for us to choose from.
  prefs: []
  type: TYPE_NORMAL
- en: Creating Line Charts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: One of the key charts used within petrophysics is a log plot. This is essentially
    a line chart with depth plotted along one axis and a logging measurement plotted
    along the other. This allows us to visualise how the measurement changes along
    the wellbore and, subsequently, allows us to interpret the geology that has been
    drilled through.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c53e526f4cf3597e94d72339378c5851.png)'
  prefs: []
  type: TYPE_IMG
- en: Simple log plot generated using a line chart in D-Tale. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: We can even plot multiple curves per line plot and control their scales. This
    is extremely useful for creating a density-neutron line plot. Unfortunately, we
    are unable to apply lithology shading to this chart, but that is a minor issue.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/54b3f6c3e52255c7cff2cf00bbacff67.png)'
  prefs: []
  type: TYPE_IMG
- en: Density-neutron log plot track created using D-Tale. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: However, one very useful feature is being able to colour the line by categories.
    This is especially great when trying to understand the log responses within different
    formations.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2b864f1c5870962e3a5237c88c684e8d.png)'
  prefs: []
  type: TYPE_IMG
- en: A log plot track / line plot created using D-Tale shows a bulk density log coloured
    by different formations. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Creating Scatter Plots (Crossplots) with D-Tale
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Scatter plots (also known as crossplots in petrophysics) allow us to take two
    variables and plot them against each other. This allows us to identify trends,
    key interpretation parameters for petrophysical equations, and relationships between
    data.
  prefs: []
  type: TYPE_NORMAL
- en: Within D-Tale, we can easily create a very common petrophysical plot. The density-neutron
    crossplot.
  prefs: []
  type: TYPE_NORMAL
- en: D-Tale provides numerous options to customise what data is plotted. Once we
    have picked the x and y axis variables, we can then select a third variable to
    colour our plot with.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3891e62b439fde20b9a4613e0d712704.png)'
  prefs: []
  type: TYPE_IMG
- en: Scatter plot showing density and neutron porosity data within the Charts module
    of D-Tale. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: One of the nice things with this interface is that we can remove groups we do
    not want to plot to allow us to focus on the group(s) that do matter.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/33d93f8bc5e1a8de8de9f0a78cf95e87.png)'
  prefs: []
  type: TYPE_IMG
- en: Scatter plot showing density and neutron porosity data within the Charts module
    of D-Tale after removing some groups. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: One slight annoyance with this setup is we can’t control the size or shape of
    the markers. It would be nice to be able to make the marker smaller so that we
    can see more of the data points.
  prefs: []
  type: TYPE_NORMAL
- en: Pearson Correlation Matrix with D-Tale
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When looking to build a machine learning model for petrophysical property prediction,
    we want to identify if any of the predictors we are going to use are strongly
    correlated with each other — an issue known as multi-colinearity. We also want
    to be able to identify the most suitable variables to use within our model to
    predict our target variable.
  prefs: []
  type: TYPE_NORMAL
- en: To display the correlation matrix, we can go to the menu and select Correlations.
    This will return a heatmap with the Pearson’s correlation score for each numeric
    variable.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/16bbad28f77897512d5d800135e7fad0.png)'
  prefs: []
  type: TYPE_IMG
- en: Correlation between well log measurements using D-Tale. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: From the returned table, we can see a few of the logging measurements have high
    correlations with each other. For example, RHOB and DTC have a strong negative
    correlation, which is as expected. The more porous the rock, the lower the density
    (RHOB) value and the higher the acoustic compressional slowness (DTC).
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The D-Tale python library is very powerful for exploratory data analysis and
    can be very useful for well log measurement quality control and early analysis.
    This article has only covered a small fraction of the features available within
    D-Tale, but they are very powerful and could significantly speed up the data QC
    and exploration phase within well log datasets. It is a library you should have
    in your data science toolkit.
  prefs: []
  type: TYPE_NORMAL
- en: '*Thanks for reading. Before you go, you should subscribe to my content and
    get my articles in your inbox.* [***You can do that here!***](https://andymcdonaldgeo.medium.com/subscribe)*Alternatively,
    you can* [***sign up for my newsletter***](https://fabulous-founder-2965.ck.page/2ca286e572)
    *to get additional content straight into your inbox for free.*'
  prefs: []
  type: TYPE_NORMAL
- en: '*Secondly, you can get the full Medium experience and support thousands of
    other writers and me by signing up for a membership. It only costs you $5 a month,
    and you have full access to all of the fantastic Medium articles, as well as the
    chance to make money with your writing.*'
  prefs: []
  type: TYPE_NORMAL
- en: '*If you sign up using* [***my link***](https://andymcdonaldgeo.medium.com/membership)***,***
    *you will support me directly with a portion of your fee, and it won’t cost you
    more. If you do so, thank you so much for your support.*'
  prefs: []
  type: TYPE_NORMAL
