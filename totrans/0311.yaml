- en: Animate Maps with Plotly Express
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/animate-maps-with-plotly-express-d783127afcd0](https://towardsdatascience.com/animate-maps-with-plotly-express-d783127afcd0)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Invigorate Your Infographics!
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@lee_vaughan?source=post_page-----d783127afcd0--------------------------------)[![Lee
    Vaughan](../Images/9f6b90bb76102f438ab0b9a4a62ffa3f.png)](https://medium.com/@lee_vaughan?source=post_page-----d783127afcd0--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d783127afcd0--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d783127afcd0--------------------------------)
    [Lee Vaughan](https://medium.com/@lee_vaughan?source=post_page-----d783127afcd0--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d783127afcd0--------------------------------)
    ·9 min read·Jul 11, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c173db5b859806e3f3e30abb0f52171a.png)'
  prefs: []
  type: TYPE_IMG
- en: Selected states colored by the year they entered the union (all images by the
    author unless otherwise noted)
  prefs: []
  type: TYPE_NORMAL
- en: Animated maps are a great tool for grabbing attention and conveying information.
    Whether you’re a businessperson preparing a presentation, a journalist preparing
    infographics, or a teacher preparing class lessons, animations will increase your
    audience’s engagement, focus, and level of retention. And even if you don’t plan
    to show a live animation, the functionality is still useful for preparing static
    displays over different time frames.
  prefs: []
  type: TYPE_NORMAL
- en: In this *Quick Success Data Science* project, we’ll use Python, pandas, and
    Plotly Express to visualize the evolution of the United States. Specifically,
    we’ll use [choropleth maps](https://en.wikipedia.org/wiki/Choropleth_map) to animate
    the entry of US states into the union by day, by year, and over larger timeframes.
  prefs: []
  type: TYPE_NORMAL
- en: The Code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The following code was written in Jupyter Lab and is presented *by cell*.
  prefs: []
  type: TYPE_NORMAL
- en: Installing and Importing Libraries
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Plotly Express is a high-level version of the Plotly graphing library and requires
    Plotly as a dependency. You can install it with either conda or pip.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s the conda installation:'
  prefs: []
  type: TYPE_NORMAL
- en: '`conda install -c plotly plotly_express`'
  prefs: []
  type: TYPE_NORMAL
- en: 'And here’s the pip version:'
  prefs: []
  type: TYPE_NORMAL
- en: '`pip install plotly`'
  prefs: []
  type: TYPE_NORMAL
- en: 'To install the pandas data analysis package, use either:'
  prefs: []
  type: TYPE_NORMAL
- en: '`conda install pandas`'
  prefs: []
  type: TYPE_NORMAL
- en: 'or:'
  prefs: []
  type: TYPE_NORMAL
- en: '`pip install pandas`'
  prefs: []
  type: TYPE_NORMAL
- en: We’ll also need the NumPy (Numerical Python) library. You shouldn’t need to
    install it directly as it’s included with pandas.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are the imports. We’re using aliases for easier typing:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Loading and Preparing the Data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For convenience, I’ve created a CSV file of the required data and stored it
    in this [Gist](https://gist.github.com/rlvaugh/13b17ae878cb1ef10146d6ebf42d4858).
    The file includes columns for the state name, its official abbreviation, the date
    it entered the union, and the order in which it entered. The file is sorted in
    ascending order by date. We’ll load it as a pandas DataFrame because Plotly Express
    plays very well with pandas.
  prefs: []
  type: TYPE_NORMAL
- en: In addition to the *day*, we’ll want to animate the data using the *year* of
    statehood. This will make it easier to recognize states that entered the union
    in the same year. To do this, we’ll make a new DataFrame column, named `Year`,
    and typecast it as an integer.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/9f1bfc3c0aff78df4959c2fbbe9ebe0b.png)'
  prefs: []
  type: TYPE_IMG
- en: The head of the DataFrame (all images by author unless noted otherwise)
  prefs: []
  type: TYPE_NORMAL
- en: Plotting a Static Choropleth Map Colored by Date of Entry
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Creating a choropleth map in Plotly Express couldn’t be easier. Just call the
    built-in `[choropleth()](https://plotly.com/python/choropleth-maps/)` method.
  prefs: []
  type: TYPE_NORMAL
- en: The first argument is the DataFrame that we want to animate. After that, we
    just need to reference *columns* in the DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: Plotly Express also comes with some built-in geospatial datasets. To select
    the one for American states, we’ll use the `scope`, `locationmode`, and `locations`
    parameters. The `abbr` argument, used with the `locations` parameter, represents
    the state’s official [abbreviation](https://en.wikipedia.org/wiki/List_of_U.S._state_and_territory_abbreviations),
    such as NY for New York and TX for Texas.
  prefs: []
  type: TYPE_NORMAL
- en: For color, I chose the `Portland` color scale. if you want to try something
    different, then visit the Plotly [docs](https://plotly.com/python/builtin-colorscales/)
    to see the available options.
  prefs: []
  type: TYPE_NORMAL
- en: 'Pro Tip: to reverse a Plotly color bar, append “_r” to the end of its name.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/17334114ca1b87fae242baa06f37b5d2.png)'
  prefs: []
  type: TYPE_IMG
- en: The static map with an active hover window over Colorado.
  prefs: []
  type: TYPE_NORMAL
- en: The resulting map is currently static (non-animated), but it comes with many
    interactive features. You can hover the cursor over a state to see a pop-up window
    of its metadata. The toolbar at the upper right permits actions such as taking
    a screenshot, zooming, panning, box selecting, and resetting to the “home” screen.
  prefs: []
  type: TYPE_NORMAL
- en: Despite all this functionality, the map is a little boring. Let’s jazz it up
    by adding animation.
  prefs: []
  type: TYPE_NORMAL
- en: Animating by Entry Date
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can animate the previous map with just one extra parameter, `animation_frame`.
    Here, we animate using the `data_entered` column, which captures the date the
    state entered the union.
  prefs: []
  type: TYPE_NORMAL
- en: To ensure that the color bar includes the data’s minimum and maximum values,
    we need to include an argument for the `range_color` parameter. Otherwise, the
    scale will default to the value of the state actively being displayed. This time,
    I chose the `Earth` color bar, because it has an antique, “historical” look.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/07665ae503ba9f5ee723bb89d0a71530.png)'
  prefs: []
  type: TYPE_IMG
- en: Map animated on the date of statehood
  prefs: []
  type: TYPE_NORMAL
- en: To run the animation, either press the play button or use the slider. Only one
    state will display at a time. The interesting thing here is that the states don’t
    enter in a logical progression from east to west, but “jump around” a lot from
    north to south and from east to west.
  prefs: []
  type: TYPE_NORMAL
- en: Animating by Entry Year
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To see all the states that entered the union in a given year, just change the
    `animation_frame` argument to the `Year` column.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/a525ea8a0c3e2597fb78113a56d303aa.png)'
  prefs: []
  type: TYPE_IMG
- en: Map animated by year
  prefs: []
  type: TYPE_NORMAL
- en: Animating the States Grouped Over a Large Timeframe
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'While animating the states by their day or year of entry is interesting, it’s
    hard to get the big picture. In the following example, we’ll lump the states together
    over four significant timespans:'
  prefs: []
  type: TYPE_NORMAL
- en: When the thirteen original colonies entered the union
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The subsequent expansion up to the Civil War
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The settling of the wild west
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The 20th century
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To group the states over these timespans, we’ll use NumPy’s `select()` method
    to create a new column in the DataFrame. This requires three steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a list of the conditions for the new column using date ranges,
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a list of values for the new column for each condition,
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create the new column by calling the `np.select()` method and passing it the
    lists from the two previous steps.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We’ll name the new column `Timespan`. To use it for the animation, change the
    `animation_frame` argument to `Timespan`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/a205676ff0eb65fc7bf310d9d60ce145.png)'
  prefs: []
  type: TYPE_IMG
- en: Map animated by timespan
  prefs: []
  type: TYPE_NORMAL
- en: Note that we changed the *speed* of the animation (in milliseconds) in the last
    line. You can use this code with any previous animations if you find them too
    fast.
  prefs: []
  type: TYPE_NORMAL
- en: Making Static Infographics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: What if you want to capture the results as *static images*, for example, to
    make handouts?
  prefs: []
  type: TYPE_NORMAL
- en: Well, for jobs like this, I like to “hardwire” the results by copying and editing
    the master DataFrame and then looping through the copies to plot the maps. This
    provides for better control over things like figure titles and color bar ranges.
  prefs: []
  type: TYPE_NORMAL
- en: And to ensure that the color bar includes the *end members* for each time period,
    we’ll provide four lists that specify the dates we want to see annotated.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/41b1cc196bc4075753bf439e2048e8cf.png)'
  prefs: []
  type: TYPE_IMG
- en: Static map of the original 13 colonies colored by year of entry
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/15b6c3e65274cc5c7b2c6035f4d2389c.png)'
  prefs: []
  type: TYPE_IMG
- en: Static map of the antebellum expansion period states colored by year of entry
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4a9b10a6eb77d2feae03f2c869360f54.png)'
  prefs: []
  type: TYPE_IMG
- en: Static map of the westward expansion period states colored by year of entry
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fd90c4772b4cd1571a49dcea576b1733.png)'
  prefs: []
  type: TYPE_IMG
- en: Static map of the 20th century period states colored by year of entry
  prefs: []
  type: TYPE_NORMAL
- en: Static Maps with Persistence
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We’re still not getting the (truly) big picture. It would be nice to see *all*
    the states in the union on a given date.
  prefs: []
  type: TYPE_NORMAL
- en: The code in the following cell “builds up” the map over time. The states added
    in *previous* timeframes remain *visible* on the map so that the last map shows
    *all* the states of the union.
  prefs: []
  type: TYPE_NORMAL
- en: To accomplish this, we need to refilter the master DataFrame so that the minimum
    value preserved is *always* 1787\. We’ll also need a new `dates` list better suited
    for this new visualization.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/e66ba484946edbf6490ecf74ee57b84d.png)'
  prefs: []
  type: TYPE_IMG
- en: Example of a persistent map showing states that entered the union between 1787-1860
  prefs: []
  type: TYPE_NORMAL
- en: For brevity, I’m only showing one of the four maps generated by the previous
    cell.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'With only a single parameter, Plotly Express lets you convert beautiful *static*
    maps into beautiful *moving* maps. Besides being engaging, these animated maps
    also make it easy to spot outliers in a dataset. For example, despite being an
    American and fairly well-versed in history, I was surprised to see that:'
  prefs: []
  type: TYPE_NORMAL
- en: Delaware was the first state to ratify the Constitution and is thus the first
    state in the union (who knew?),
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maine, though part of New England, was a relatively late addition,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Oklahoma did not become a state until the 20th century,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arizona and New Mexico did not become states until 1912, despite being part
    of the Mexican Cessation of 1848.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other datasets that would be fun to explore are the states ordered by secession
    during the American Civil War, the states ordered by population, or the states
    ordered by electoral college votes.
  prefs: []
  type: TYPE_NORMAL
- en: And if you want to use Plotly Express to build animated choropleths for other
    countries, here’s an example of how to do this for the [Canadian provinces](https://mahshadn.medium.com/animated-choropleth-map-with-discrete-colors-using-python-and-plotly-styling-5e208e5b6bf8).
    The province polygons are built with [Geojson](https://en.wikipedia.org/wiki/GeoJSON)
    files.
  prefs: []
  type: TYPE_NORMAL
- en: Thanks!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Thanks for reading and please follow me for more *Quick Success Data Science*
    projects in the future.
  prefs: []
  type: TYPE_NORMAL
