- en: Decision Analysis and Trees in Python — The Case of the Oakland A’s
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/decision-analysis-and-trees-in-python-the-case-of-the-oakland-as-786d746cdfb2](https://towardsdatascience.com/decision-analysis-and-trees-in-python-the-case-of-the-oakland-as-786d746cdfb2)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Using decision trees in Python to extract insight into the A’s decision to move
    to Las Vegas
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@gspmalloy?source=post_page-----786d746cdfb2--------------------------------)[![Giovanni
    Malloy](../Images/e94218e244fab1af845c68e63e5706a1.png)](https://medium.com/@gspmalloy?source=post_page-----786d746cdfb2--------------------------------)[](https://towardsdatascience.com/?source=post_page-----786d746cdfb2--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----786d746cdfb2--------------------------------)
    [Giovanni Malloy](https://medium.com/@gspmalloy?source=post_page-----786d746cdfb2--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----786d746cdfb2--------------------------------)
    ·17 min read·May 24, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fda332094a2d44ad8e99df3197d1ac42.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Rick Rodriguez](https://unsplash.com/@rickro?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Just recently, the owner of the Oakland Athletics baseball team, John Fischer,
    announced that the team had purchased close to 50 acres of land in Las Vegas,
    Nevada. [1] This puts the future of Oakland’s last remaining professional sports
    team in jeopardy. In the last 5 years, Oakland has seen the Golden State Warriors
    (NBA) and Las Vegas Raiders (NFL) depart for newer shinier stadiums in other cities
    (although, Golden State just went across the Bay Bridge to San Francsico). While
    the decision-making process in the Oakland A’s front office remains a mystery
    to me, data science and decision analysis in tandem can reveal a great deal about
    John Fischer’s motives to move to Las Vegas.
  prefs: []
  type: TYPE_NORMAL
- en: Decision analysis is important for all data scientists to understand because
    it is the bridge between the highly technical work of probability and statistical
    models and business decisions. Understanding how business decisions are made can
    help frame our work and the presentation of our findings to non-technical audiences
    as we provide actionable recommendations and findings. The Institute for Operations
    Research and Management Science (INFORMS) even has an [entire society dedicated
    to Decision Analysis](https://connect.informs.org/das/home).
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, machine learning can help generalize the results of decision analysis
    by unlocking insight from probabilistic sensitivity analyses. After initially
    constructing a model dissecting the Oakland vs. Las Vegas scenarios using decision
    analysis, we will use machine learning to mine for patterns that could help reveal
    actionable recommendations for the A’s should the circumstances of the decision
    change.
  prefs: []
  type: TYPE_NORMAL
- en: '**What is decision analysis?**'
  prefs: []
  type: TYPE_NORMAL
- en: Decision analysis is the field of study dedicated to a “systematic, quantitative,
    and visual approach to addressing and evaluating important choices.” [2] It can
    be a powerful tool in a low data environment and help individuals use a mix of
    subject matter expertise and prior knowledge to improve the expected value of
    complex decisions. It is used in a wide range of fields, such as economics, management,
    and policy analysis.
  prefs: []
  type: TYPE_NORMAL
- en: 'Generally, in the world of decision analysis, we take a Bayesian perspective
    of the world. The fundamental theorem of Bayes is the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f74841dd37ceed626b736d7317c62d88.png)'
  prefs: []
  type: TYPE_IMG
- en: Image created by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Where P(A) is the probability of event A occurring, P(B) is the probability
    of event B occurring, P(A|B) is the probability of event A occurring given that
    event B occurred, and P(B|A) is the probability of event B occurring given that
    event A occurred. Typically, P(A) represents a prior belief about the chance of
    A occurring and B represents some new data. P(A|B) is an updated posterior belief
    about the chance of A occurring after you observed B.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, let’s suppose that we go to the Oakland-Alameda County Coliseum
    to watch a ballgame, but we haven’t been keeping track of player statistics. We
    start with the knowledge that outfielders get on base with probability 0.35, infielders
    get on base with probability 0.25, and designated hitters get on base with probability
    0.4\. Let A be the event that the next batter is an outfielder, B be the event
    that the next batter is an infielder, and C be the event that the next batter
    is the designated hitter. Since we know the roster of a baseball team, we already
    know that P(A) = 0.33, P(B) = 0.56, and P(C) = 0.11\. Now, that next batter comes
    up to the plate, and to our delight, gets on base (event D)! From our earlier
    knowledge of baseball, we know P(D|A) = 0.35, P(D|B) = 0.25, and P(D|C) = 0.4\.
    Using the law of total probability, we can calculate P(D) = P(D|A)P(A) + P(D|B)P(D)
    + P(D|C)P(C) = 0.3\. Now, we can update our beliefs about which type of player
    the batter was: P(A|D) = 0.39, P(B|D) = 0.47, and P(C|D) = 0.15\. After seeing
    the player get on base, we now are more likely to believe the player was not an
    infielder. Now that you are in the right frame of mind, let’s continue.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The key tool in decision analysis is a decision tree (not to be confused with
    the machine learning algorithm by the same name). [3] The decision tree features
    two basic components: a decision node and a choice node. [3] In this blog, I’m
    going to show you how to construct a decision tree, evaluate it in Python, and
    understand the Oakland A’s decision to move to Las Vegas.'
  prefs: []
  type: TYPE_NORMAL
- en: '**What is the decision?**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Howard and Abbas define a decision as “a choice between two or more alternatives
    that involves an irrevocable allocation of resources.” [3] This is a broad definition,
    but in our example of the Oakland A’s the decision is: *should the Athletics baseball
    team stay in Oakland or move to Las Vegas?* In this case, the decision is irrevocable
    because they will be building a new stadium regardless of the city chosen.'
  prefs: []
  type: TYPE_NORMAL
- en: '**What are the uncertainties?**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Uncertainties surround every decision we make. In the decision of whether to
    stay in Oakland or move to Las Vegas, the A’s are uncertain about new stadium
    costs and subsequent operating revenues: 1) how much public money they will receive
    to fund their new stadium, 2) how much revenue they will generate in ticket sales,
    and 3) how much revenue they will generate in local television deals.'
  prefs: []
  type: TYPE_NORMAL
- en: The A’s are currently hoping to build a $1.5 billion stadium in Las Vegas. [1]
    Back in 2021, the organization had asked for $855 million in public money to help
    build their new stadium in Oakland despite previously agreeing with the city and
    county that the new stadium in Oakland would be privately funded. [1] Therefore,
    we can reasonably assume, the cost of building the stadium is roughly the same
    in both localities. The only uncertainty here is how much taxpayer money will
    go towards funding the stadium.
  prefs: []
  type: TYPE_NORMAL
- en: Estimated revenue from ticket sales varies tremendously between teams from $27
    million — $131 million with a median of around $75 million. [4] Oakland was estimated
    to have a ticket revenue of approximately $55 million. [4]
  prefs: []
  type: TYPE_NORMAL
- en: Television revenues in the MLB are evenly distributed for national television
    deals negotiated by the MLB. However, an important component of individual team
    television revenue comes through regional sports networks (RSNs). The teams get
    to keep much of the revenue from local television deals, although there is still
    a great deal of revenue sharing. After revenue sharing, television contract revenue
    from RSNs varied from $36 million — $131 million with all but the most valuable
    teams making less than $60 million. [4]
  prefs: []
  type: TYPE_NORMAL
- en: Thanks to the Raiders’ (NFL) move to Las Vegas from Oakland several years ago,
    we know that the city of Las Vegas was willing to provide $750 million in public
    funds to build a brand-new football stadium. [5] We also know that both locals
    and tourists alike are prepared to join in and cheer on a new professional team,
    as the Raiders led the NFL in ticket revenue in 2021 at $119 million for the year.
    [6]
  prefs: []
  type: TYPE_NORMAL
- en: There are methods that are beyond the scope of this blog to solicit the decision
    maker prior beliefs on likely outcomes of these uncertainties and the probabilities
    of each. Additionally, I doubt John Fischer is prepared to comment for my blog.
    So, in the meantime, I will use the information I have pulled together from these
    web sources to provide several possible scenarios for each uncertainty.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8db6b85299ccb28725ecc4bcb052395b.png)'
  prefs: []
  type: TYPE_IMG
- en: Image created by author.
  prefs: []
  type: TYPE_NORMAL
- en: '**What is our decision time horizon?**'
  prefs: []
  type: TYPE_NORMAL
- en: Of course, revenues are annual figures, and the stadium should last much longer
    than a year. Time horizons can differ by the context of the decision and how the
    decision maker views the likelihood of change over the landscape. In data science
    terms, this is congruent to data drift where the data used to train the model
    is different than current data. For now, let’s assume that these estimates will
    remain fairly steady over the decade and use a 10-year time horizon with a 3%
    discount rate on our annual costs.
  prefs: []
  type: TYPE_NORMAL
- en: '**What does the decision tree look like?**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now that we have defined all of the components of our decision tree, it is
    time to build the tree. Conceptually, here is what it looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/55b5251e3b9a98062e0c5da4eac20c80.png)'
  prefs: []
  type: TYPE_IMG
- en: Image created by author.
  prefs: []
  type: TYPE_NORMAL
- en: The square node is the decision node, the circular nodes are the chance nodes,
    and the triangular nodes are the terminal nodes. Due to space limitations, the
    entire tree is not visible in the image, but each node has an associated probability
    and value, as well.
  prefs: []
  type: TYPE_NORMAL
- en: '**How do we build the model in Python?**'
  prefs: []
  type: TYPE_NORMAL
- en: In decision analysis, after establishing the construction of our decision tree,
    we can identify the best decision by “rolling back” the tree. In this example,
    we assume a rational (aka expected value) decision maker. So, we start by tabulating
    the value associated with the terminal state, if applicable. This will become
    our running total or expected value. In this case, it is not applicable, so we
    start with a total of $0\. Then, we iteratively calculate the expected value of
    each set of nodes to the left of the terminal nodes and add it to the running
    total or expected value. In the end, we will end up with one expected value of
    the decision to stay in Oakland and one expected value of the decision to move
    to Las Vegas.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s start with a simple setup of our base case scenario. We are going to take
    the approach of creating a data frame of all possible combinations of decision,
    public money, ticket sales, and RSN revenue scenarios.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, if you print your decision tree, you’ll get a pandas dataframe of 54 rows
    and 10 columns. We can easily roll back the decision tree with a creative use
    of groupby and merge functions. Let’s start with tabulating the expected value
    from RSN revenue for every combination of decision, stadium money, and ticket
    sales:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The resulting table has shrunk, and now you can visually see the expected value
    of the rolled back RSN revenue nodes.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1a3394ba9afa06104144b0ac5a58bd7c.png)'
  prefs: []
  type: TYPE_IMG
- en: Image created by author
  prefs: []
  type: TYPE_NORMAL
- en: 'Repeating the process with ticket sales. We have the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'And output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fbc3e995b4b6060e007ea2ead80a543c.png)'
  prefs: []
  type: TYPE_IMG
- en: Image created by author.
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, repeating for the stdium public money contribution:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/4c15bf30e63ee87c0429263a6c29679d.png)'
  prefs: []
  type: TYPE_IMG
- en: Image created by author
  prefs: []
  type: TYPE_NORMAL
- en: Here, we can see that the model calculates that over a 10-year time horizon,
    the expected value of staying put in Oakland is $4.7 billion while the expected
    value of moving to Las Vegas is $5.2 billion.
  prefs: []
  type: TYPE_NORMAL
- en: '**How can we generalize the model?**'
  prefs: []
  type: TYPE_NORMAL
- en: Of course, there is uncertainty in both our data and our model, and there are
    many different scenarios which we could test. Naturally, we may look to define
    some thresholds or scenarios at which the decision changes from staying in Oakland
    to moving to Las Vegas (or vice versa). These decision points can serve as a helpful
    set of “business rules” for decision makers and can help us as data scientists
    extract actionable recommendations from our analysis.
  prefs: []
  type: TYPE_NORMAL
- en: There are many ways to achieve this end, but in this blog, we will use machine
    learning meta-modeling. Meta-modeling involves developing a faster (and sometimes
    simpler) model of an original mathematical or simulation model which takes the
    same inputs and produces very similar outputs [7]. In this case, we will use probabilistic
    sensitivity analysis to test a large parameter space of the decision analysis
    decision tree and note the resulting decision of each parameter set. Then we will
    train a machine learning decision tree classification model using the parameter
    set as the features and the resulting decision as the labels for our machine learning
    model. The benefit of the machine learning model is that it will uncover complex
    relationships for us that would be difficult to decipher with multivariate sensitivity
    analysis alone. The hope is that we can get enough accuracy from a shallow tree
    to describe the scenarios in which the A’s should stay in Oakland versus move
    to Las Vegas.
  prefs: []
  type: TYPE_NORMAL
- en: First, we start by designing a probabilistic sensitivity analysis. For this
    example, we will assume that the dollar values of the chance nodes will remain
    the same, but the probabilities of the various outcomes will vary. Since we know
    that probabilities will vary between values of 0 and 1, we will assume that all
    scenario probabilities are equally likely and model them using a uniform distribution
    with minimum value 0 and maximum value 1\. After sampling three times from the
    uniform distribution (one for each optimistic, neutral, and pessimistic scenario),
    we will normalize the results such that the sum of the three probabilities adds
    to 1.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Now we can put the results into a new data frame which we can use to train
    our machine learning model:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: We will now train a basic machine learning decision tree using the [sci-kit
    learn package](https://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html#sklearn.tree.DecisionTreeClassifier).
    Since the input data are probabilities between 0 and 1 and we are using a tree-based
    model, we won’t have to do any feature scaling or engineering. For visualization
    purposes for the blog, I restricted the tree to a depth of 3\. However, the deeper
    the tree depth, the more likely you will be to achieve greater accuracy.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Our model ended up with a decent but not perfect AUC of almost 0.8\. (AUC is
    a way of measuring model accuracy based on the true and false positive rates.
    For more on model accuracy measures, check out my previous blog on assessing the
    accuracy of ESPN fantasy football predicted scores [here](https://medium.com/dev-genius/ml-model-evaluation-measuring-the-accuracy-of-espn-fantasy-football-projections-in-python-9c81780b1625).)
    This is respectable enough for us to continue with the excercise. Of course, there
    are a number of ways to make the decision tree classifier more accurate including
    increasing the maximum depth, hyperparamter tuning, or running more simulations
    to increase the quantity of data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Now that we are satisfied with performance, we can visually examine the train
    decision tree. Each split in the tree represents another dimension of a set of
    business rules. In each box (or leaf) of the printed tree, the first line will
    represent the rule the model used to split the data, the second line is the Gini
    Index which describes the distribution of classes in the leaf (where 0.5 represents
    an equal number of each class and 0 or 1 represents only one class), the third
    line shows the number of samples of each class, and the fourth line shows the
    label that the model assigns to all the samples in that leaf. We can print out
    the resulting tree below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/298d85480f2458fcfaaaf9251f89ad07.png)'
  prefs: []
  type: TYPE_IMG
- en: Image created by the author.
  prefs: []
  type: TYPE_NORMAL
- en: From our machine learning decision tree, we can see that the classification
    of whether the A’s should stay put in Oakland or move to Las Vegas rested first
    on the probability of optimistic RSN revenue and then on the probabilities associated
    with Oakland ticket sales.
  prefs: []
  type: TYPE_NORMAL
- en: 'Las Vegas is likely the preferred destination when:'
  prefs: []
  type: TYPE_NORMAL
- en: The probability of optimistic RSN revenue in Las Vegas is greater than 0.4 (except
    when the probability of optimistic RSN revenue in Oakland is grater than 0.341
    AND the probability of optimistic ticket sales in Oakland is greater than 0.355)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OR the probability of optimistic RSN revenue in Oakland is less than or equal
    to 0.468 AND the probability of optimistic ticket sales in Las Vegas is greater
    than 0.438.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interestingly, despite all of the media chatter about public or private funding
    for a new stadium, our model points to RSN revenue and ticket sales. The difference
    could be due to our 10 year time horizon or could be due to the organization looking
    for an MLB-approved excuse to leave Oakland. Either way, *this approach highlights
    an important insight that a data science team can take to decision makers in order
    to inform business strategy.* Methods like this can take your model from interesting
    theoretical exercise to changing minds in the C-suite.
  prefs: []
  type: TYPE_NORMAL
- en: '**How do we validate the machine learning model?**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Given that we are trying to inform a hugely important decision, it is important
    to make sure our model was robust to differences in the input data or an imbalanced
    class set of labels. To account for the latter, you will notice, we included class_weight
    = ‘balanced’ in the creation of our machine learning model. To account for the
    former and for model validation, we can use the cross-validation score to see
    what other train/test split performance metrics would be:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'The output is the following: array([0.724, 0.722, 0.718, 0.72 , 0.722, 0.708,
    0.732, 0.726, 0.76, 0.702]) which tells us that across 10 different possible train/test
    splits, our model had similar performance.'
  prefs: []
  type: TYPE_NORMAL
- en: '**What did we learn?**'
  prefs: []
  type: TYPE_NORMAL
- en: With that, we have gone from a business question about the relocation of the
    A’s baseball team to rolling back a decision analysis decision tree model to unveil
    why the A’s might be heading to Las Vegas to leveraging a machine learning decision
    tree to generalize our results into digestible business rules that management
    can use to decide whether or not to re-locate. Hopefully, you’ll be able to utilize
    a similar methodology or approach in order to inform decision makers in your own
    organization or in your daily life.
  prefs: []
  type: TYPE_NORMAL
- en: '**References**'
  prefs: []
  type: TYPE_NORMAL
- en: '[1] Sutelan, E, [Athletics Las Vegas relocation timeline: Stadium stumbles,
    funding failures on road to A’s Oakland departure](https://www.sportingnews.com/us/mlb/news/athletics-las-vegas-relocation-timeline-oakland-stadium-funding/dp4vrey0rmq53jnjdudl7e3d)
    (2023), The Sporting News'
  prefs: []
  type: TYPE_NORMAL
- en: '[2] Kenton, W, [Decision Analysis (DA): Definition, Uses, and Examples](https://www.investopedia.com/terms/d/decision-analysis.asp)
    (2022), Investopedia'
  prefs: []
  type: TYPE_NORMAL
- en: '[3] Howard, R. and Abbas, A, *Foundations of Decision Analysis* (2014)'
  prefs: []
  type: TYPE_NORMAL
- en: '[4] Morss, E., [Major League Baseball Finances: What the Numbers Tell Us](https://www.morssglobalfinance.com/major-league-baseball-finances-what-the-numbers-tell-us/)
    (2019), Morss Global Finance'
  prefs: []
  type: TYPE_NORMAL
- en: '[5] Greer, J., [Why did the Raiders move to Las Vegas? Explaining franchise’s
    2020 shift from Oakland to Sin City](https://www.sportingnews.com/us/nfl/news/raiders-las-vegas-move-explained/26kge720q0dv1stx8mwfqij0q)
    (2020), The Sporting News'
  prefs: []
  type: TYPE_NORMAL
- en: '[6] Andre, D. [Report: Raiders first in 2021 NFL ticket revenue](https://www.fox5vegas.com/2022/07/20/report-raiders-first-2021-nfl-ticket-revenue/)
    (2022), Fox 5 Las Vegas'
  prefs: []
  type: TYPE_NORMAL
- en: '[7] Malloy, G. and Brandeau, M. [When Is Mass Prophylaxis Cost-Effective for
    Epidemic Control? A Comparison of Decision Approaches](https://journals.sagepub.com/doi/abs/10.1177/0272989X221098409?journalCode=mdma)
    (2022), *Medical Decision Making*'
  prefs: []
  type: TYPE_NORMAL
- en: Interested in my content? Please consider [following me on Medium](https://medium.com/@gspmalloy).
  prefs: []
  type: TYPE_NORMAL
- en: 'All the code and data can be found on GitHub here: [gspmalloy/oakland_as_decision_trees:
    Code for my blog “Decision analysis and trees in Python — The case of the Oakland
    A’s” (github.com)](https://github.com/gspmalloy/oakland_as_decision_trees)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow me on Twitter: @malloy_giovanni'
  prefs: []
  type: TYPE_NORMAL
- en: Do you think the A’s should stay in Oakland? Move to Vegas? Maybe try a different
    city? What has your experience been using machine learning for meta-modeling.
    I would love to hear your thoughts! Keep the discussion going by commenting.
  prefs: []
  type: TYPE_NORMAL
