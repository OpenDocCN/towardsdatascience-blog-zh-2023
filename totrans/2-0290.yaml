- en: An Easy Way to Speed Up your dbt Runs on BigQuery
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/an-easy-way-to-speed-up-your-dbt-runs-on-bigquery-24238ac20f8a](https://towardsdatascience.com/an-easy-way-to-speed-up-your-dbt-runs-on-bigquery-24238ac20f8a)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*Speed up dbt runs using concurrent queries*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@tobisam?source=post_page-----24238ac20f8a--------------------------------)[![Tobi
    Sam](../Images/daffb5aeec33842e42fd8ad68fc94b72.png)](https://medium.com/@tobisam?source=post_page-----24238ac20f8a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----24238ac20f8a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----24238ac20f8a--------------------------------)
    [Tobi Sam](https://medium.com/@tobisam?source=post_page-----24238ac20f8a--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----24238ac20f8a--------------------------------)
    ·3 min read·Apr 11, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/dd8787608c94122a0e69e49364a7e974.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: When building and testing out data models in your dbt project, you might have
    realised that you have to wait quite a while to see the results of your SQL transformations,
    usually after a `dbt build` or `dbt run`, and especially when you have a medium
    to large dbt project.
  prefs: []
  type: TYPE_NORMAL
- en: There is a little known feature in dbt that could speed up your dbt runs significantly!
    This can come in handy especially if you have a large dbt project with many models
    and you would like to view or run results quicker or just to ensure downstream
    business stakeholders get to see the results of your transformations faster.
  prefs: []
  type: TYPE_NORMAL
- en: This feature is called Threads.
  prefs: []
  type: TYPE_NORMAL
- en: Threads
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: dbt has a configuration feature called “[**threads**](https://docs.getdbt.com/docs/get-started/connection-profiles#understanding-threads)”
    which determines the maximum number of models dbt can build at the time. You can
    find it in your `profiles.yml` file.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Threads help **parallelize** node execution in the dbt directed acyclic graph
    [(DAG)](https://docs.getdbt.com/terms/dag). The default number of threads is currently
    4, but there is no maximum and dbt will allow you **go up to your database’s maximum
    limit.**
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a96c8affad68f0f68049dcaa18242904.png)'
  prefs: []
  type: TYPE_IMG
- en: Directed Acyclic Graph (DAG ) — Image by author
  prefs: []
  type: TYPE_NORMAL
- en: In the DAG above, there is a maximum of 3 models that can be run at the same
    time without violating dependencies, which means that dbt can only run a maximum
    of 3 threads/queries at a time. Increasing the threads to 10, will not decrease
    your dbt runtime.
  prefs: []
  type: TYPE_NORMAL
- en: But if you had 10+ models that could be run at the same time (without violating
    dependencies), increasing the number of threads to 10 or more, decreases the total
    execution time, which is great!
  prefs: []
  type: TYPE_NORMAL
- en: '**Maximum number of queries on BigQuery**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: BigQuery has limits on the number of query jobs you can run at a time. ***Jobs***
    are “jobs” BigQuery runs on your behalf whether they are run by using Google Cloud
    console, the `bq` command-line tool, or programmatically using the REST API or
    client libraries.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are **two types of query jobs** in BigQuery:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Interactive query jobs** (this is BigQuery’s default behaviour): Jobs that
    BigQuery runs on demand, which is, as soon as possible.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Batch queries jobs**: which are jobs that BigQuery waits to run until idle
    compute resources are available (typically, queries are queued for only a few
    minutes.)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Your project can [**run up to 100 concurrent interactive queries**](https://cloud.google.com/bigquery/quotas#concurrent_rate_batch_queries)on
    BigQuery. Bear in mind that queries with results that are returned from the [query
    cache](https://cloud.google.com/bigquery/docs/cached-results) count against this
    limit for the duration it takes for BigQuery to determine that it is a cache hit.
  prefs: []
  type: TYPE_NORMAL
- en: Your project can run **up to 10 concurrent batch queries** (I haven’t seen batch
    queries being used a lot in projects, but this is still helpful to know).
  prefs: []
  type: TYPE_NORMAL
- en: Somethings to consider
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Increasing the threads will increase the load on your data warehouse and **may**
    affect other tools relying on your data-warehouse **at the time of execution.**
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If the database/warehouse has a small limit, this will affect how many models
    can be actively built at a time.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In my opinion, these are not deal-breaking points, as the benefits far out-way
    the limitations.
  prefs: []
  type: TYPE_NORMAL
- en: I hope you found this helpful.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[BigQuery Concurrent Queries](https://cloud.google.com/bigquery/quotas#concurrent_rate_batch_queries)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[DBT Threads](https://docs.getdbt.com/docs/core/connection-profiles#understanding-threads)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
