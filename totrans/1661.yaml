- en: How To Plot Vertical And Horizontal Lines in Matplotlib
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/plot-vertical-horizontal-lines-matplotlib-34cf7fe86ce](https://towardsdatascience.com/plot-vertical-horizontal-lines-matplotlib-34cf7fe86ce)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Drawing horizontal and vertical lines in Python plots with matplotlib
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://gmyrianthous.medium.com/?source=post_page-----34cf7fe86ce--------------------------------)[![Giorgos
    Myrianthous](../Images/ff4b116e4fb9a095ce45eb064fde5af3.png)](https://gmyrianthous.medium.com/?source=post_page-----34cf7fe86ce--------------------------------)[](https://towardsdatascience.com/?source=post_page-----34cf7fe86ce--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----34cf7fe86ce--------------------------------)
    [Giorgos Myrianthous](https://gmyrianthous.medium.com/?source=post_page-----34cf7fe86ce--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----34cf7fe86ce--------------------------------)
    ·5 min read·Jan 9, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8981960da03285b8fc0bad6ff64a379f.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Kelly Sikkema](https://unsplash.com/@kellysikkema?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Matplotlib is the most commonly used library for plotting static or interactive
    visualizations in Python. One common task when working with plots and graphs is
    the need to draw lines at specific locations in the plot. For example, you may
    want to draw a horizontal or vertical line to mark a threshold value or simply
    to highlight a particular data point.
  prefs: []
  type: TYPE_NORMAL
- en: In this tutorial, we will demonstrate how to use `matplotlib` functions to plot
    vertical and horizontal lines in an existing plot. We will also discuss some of
    the options and considerations you should keep in mind when adding lines to your
    plots.
  prefs: []
  type: TYPE_NORMAL
- en: First, let’s create a base plot that visualises sin — a well known trigonometric
    function — that we will be referencing throughout this article in order to demonstrate
    how to plot additional lines.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'And here’s the output plot (I hope it looks familiar to you!):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b97b13daf295356a5425d24f290081e8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Using matplotlib to visualise the sin (trigonometric function) — Source: Author'
  prefs: []
  type: TYPE_NORMAL
- en: Plot a horizontal line
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now in order to plot a horizontal line across the axis, we can make use of
    the `[matplotlib.pyplot.axhline()](https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.axhline.html)`
    function that takes the following three arguments:'
  prefs: []
  type: TYPE_NORMAL
- en: '`y` : This is the exact data point on the y-axis where the horizontal line
    will be positioned.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`xmin`: This is a float taking values between 0 and 1 and denotes the line’s
    starting point with respect to the x-axis. For example, if set to `0.5`, the horizontal
    line will start from the middle of the plot, at the specified `y` location. The
    value of `0` denotes teh far left of the plot, whereas `1` corresponds to the
    far left of the plot.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`xmax`: Similarly, this is a float parameter ranging from 0 and 1 and denotes
    the endpoint of the plotted horizontal line. In the same way, the value of `0`
    denotes the far left of the plot, whereas `1` corresponds to the far left of the
    plot'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In the example below, we add a horizontal line at the `0.75` y-axis point,
    starting and ending from the specified `xmin` and `xmax` values:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The resulting plot should look like the one shared below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d4442495308c7b0a03103ce8d3d88e3c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The sin graph with a horizontal line — Source: Author'
  prefs: []
  type: TYPE_NORMAL
- en: If we would like to plot a line without limiting it to the `xmin` and `xmax`
    positions (they default to `0` and `1` respectively), we could simply rearrange
    the function call into
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/b85b7d52ba83ac382cd52c35bf783897.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Horizontal line with no xmin and xmax — Source: Author'
  prefs: []
  type: TYPE_NORMAL
- en: Plot a vertical line
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Likewise, to plot a vertical line across the axis we need to call the `[matplotlib.pyplot.axvline()](https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.axvline.html)`
    function that takes the following three arguments:'
  prefs: []
  type: TYPE_NORMAL
- en: '`x`: This is the exact data point on the y-axis where the horizontal line will
    be positioned.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ymin`: This is a float taking values between 0 and 1 and denotes the line’s
    starting point with respect to the y-axis. The value of `0` denotes bottom of
    the plot, whereas `1` corresponds to the top of the plot.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ymax`: Similarly, this is a float parameter ranging from 0 and 1 and denotes
    the endpoint of the plotted vertical line. In the same way, the value of `0` denotes
    the bottom of the plot, whereas `1` corresponds to the top of the plot'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now let’s assume that we would like to plot a vertical line to our existing
    graph that would cross the x-axis at the `7.5` value.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The `axvline()` function will create a vertical line at the specified point,
    from the top to the very bottom of the graph (since we haven’t specified `ymin`
    and `ymax`):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a3b691359fe215bc87accb97d6f0f92a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'A vertical line plotted with `axvline — Source: Author`'
  prefs: []
  type: TYPE_NORMAL
- en: Final Thoughts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In conclusion, the Matplotlib library in Python allows for the creation of horizontal
    and vertical lines in plots and graphs through the use of the `axhline()` and
    `axvline()` functions, respectively.
  prefs: []
  type: TYPE_NORMAL
- en: These functions take arguments for the position of the line on the x or y axis,
    as well as optional arguments for the starting and ending points of the line relative
    to the plot. By using these functions, it is easy to highlight specific data points
    or add thresholds to plots and graphs in Python.
  prefs: []
  type: TYPE_NORMAL
- en: '[**Become a member**](https://gmyrianthous.medium.com/membership) **and read
    every story on Medium. Your membership fee directly supports me and other writers
    you read. You’ll also get full access to every story on Medium.**'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://gmyrianthous.medium.com/membership?source=post_page-----34cf7fe86ce--------------------------------)
    [## Join Medium with my referral link — Giorgos Myrianthous'
  prefs: []
  type: TYPE_NORMAL
- en: As a Medium member, a portion of your membership fee goes to writers you read,
    and you get full access to every story…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: gmyrianthous.medium.com](https://gmyrianthous.medium.com/membership?source=post_page-----34cf7fe86ce--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: '**Related articles you may also like**'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/legend-outside-the-plot-matplotlib-5d9c1caa9d31?source=post_page-----34cf7fe86ce--------------------------------)
    [## How to Place the Legend Outside the Plot in Matplotlib'
  prefs: []
  type: TYPE_NORMAL
- en: Showcasing how to place the legend outside of the plot using matplotlib and
    Python
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/legend-outside-the-plot-matplotlib-5d9c1caa9d31?source=post_page-----34cf7fe86ce--------------------------------)
    [](/plot-logarithmic-axes-matplotlib-python-bb8533f430c0?source=post_page-----34cf7fe86ce--------------------------------)
    [## How to Plot Logarithmic Axes With Matplotlib in Python
  prefs: []
  type: TYPE_NORMAL
- en: Understanding when and how to visualise data on a logarithmic scale
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/plot-logarithmic-axes-matplotlib-python-bb8533f430c0?source=post_page-----34cf7fe86ce--------------------------------)
    [](/save-plots-matplotlib-1a16b3432d8a?source=post_page-----34cf7fe86ce--------------------------------)
    [## How to Save Plots To Image Files Using Matplotlib
  prefs: []
  type: TYPE_NORMAL
- en: Understanding how to save matplotlib figures and plots to image files
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/save-plots-matplotlib-1a16b3432d8a?source=post_page-----34cf7fe86ce--------------------------------)
  prefs: []
  type: TYPE_NORMAL
