["```py\nimport pandas as pd\nfrom plotnine import *\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error as mae\nfrom pmdarima.datasets import load_ausbeer  # GPL>=2 licence\n\nfrom statsforecast import StatsForecast\nfrom statsforecast.models import (\n    AutoARIMA,\n    HoltWinters,\n    AutoTheta,\n    AutoETS,\n    DynamicOptimizedTheta as DOT,\n    SeasonalNaive\n)\n\n# https://github.com/vcerqueira/blog/tree/main/src/\nfrom src.plots.forecasts import train_test_yhat_plot\nfrom src.plots.barplots import err_barplot\n\n# quarterly data\nPERIOD = 4\n# forecasting the final 3 years of data\nTEST_SIZE = 12\n\n# loading the beer time series\nseries = load_ausbeer(as_series=True).dropna()\nseries.index = pd.date_range(start='1956Q1', end='2008Q3', freq='QS')\n\n# train/test split\ntrain, test = train_test_split(series, test_size=TEST_SIZE, shuffle=False)\n\n# transforming the train data to the required format for statsforecast\ntrain_df = train.reset_index()\ntrain_df.columns = ['ds', 'y']\ntrain_df['unique_id'] = '1'\n\n# setting up the models\nmodels = [\n    AutoARIMA(season_length=PERIOD),\n    HoltWinters(season_length=PERIOD),\n    SeasonalNaive(season_length=PERIOD),\n    AutoTheta(season_length=PERIOD),\n    DOT(season_length=PERIOD),\n    AutoETS(season_length=PERIOD),\n]\n\nsf = StatsForecast(\n    df=train_df,\n    models=models,\n    freq='Q',\n    n_jobs=1,\n    fallback_model=SeasonalNaive(season_length=PERIOD)\n)\n\n# training the models\nsf.fit(train_df)\n\n# forecasting\nforecasts = sf.predict(h=TEST_SIZE)\nforecasts = forecasts.reset_index(drop=True).set_index('ds')\n\n# averaging the forecasts to make the ensemble predictions\nforecasts['Ensemble'] = forecasts.mean(axis=1)\n```"]