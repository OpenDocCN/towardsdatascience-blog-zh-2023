- en: 'Taming Text with string2string: A Powerful Python Library for String-to-String
    Algorithms'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用string2string驯服文本：一个强大的Python库，用于字符串对字符串算法
- en: 原文：[https://towardsdatascience.com/tutorial-string2string-python-pkg-f9126b8474c5](https://towardsdatascience.com/tutorial-string2string-python-pkg-f9126b8474c5)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/tutorial-string2string-python-pkg-f9126b8474c5](https://towardsdatascience.com/tutorial-string2string-python-pkg-f9126b8474c5)
- en: TUTORIAL
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 教程
- en: Leverage string2string for Natural Language Processing Tasks
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 利用string2string进行自然语言处理任务
- en: '[](https://medium.ealizadeh.com/?source=post_page-----f9126b8474c5--------------------------------)[![Essi
    Alizadeh](../Images/be2244231732f93bcadf09682ef8ca37.png)](https://medium.ealizadeh.com/?source=post_page-----f9126b8474c5--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f9126b8474c5--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f9126b8474c5--------------------------------)
    [Essi Alizadeh](https://medium.ealizadeh.com/?source=post_page-----f9126b8474c5--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.ealizadeh.com/?source=post_page-----f9126b8474c5--------------------------------)[![Essi
    Alizadeh](../Images/be2244231732f93bcadf09682ef8ca37.png)](https://medium.ealizadeh.com/?source=post_page-----f9126b8474c5--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f9126b8474c5--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f9126b8474c5--------------------------------)
    [Essi Alizadeh](https://medium.ealizadeh.com/?source=post_page-----f9126b8474c5--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----f9126b8474c5--------------------------------)
    ·8 min read·May 11, 2023
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----f9126b8474c5--------------------------------)
    ·阅读时间8分钟·2023年5月11日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/1cd63dbedcd4c1523f491ef2b3927751.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1cd63dbedcd4c1523f491ef2b3927751.png)'
- en: Wordcloud of concepts available in string2string library in addition to an example
    (Image by Author).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: string2string库中的概念词云以及一个示例（作者提供的图片）。
- en: The `string2string` library is an open-source tool that has a full set of efficient
    methods for string-to-string problems. String pairwise alignment, distance measurement,
    lexical and semantic search, and similarity analysis are all covered in this library.
    Additionally, a variety of useful visualization tools and metrics that make it
    simpler to comprehend and evaluate the findings of these approaches are also included.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '`string2string`库是一个开源工具，提供了一整套高效的字符串对字符串问题解决方法。该库涵盖了字符串配对比对、距离测量、词汇和语义搜索以及相似性分析。此外，还包括了各种有用的可视化工具和度量标准，使得理解和评估这些方法的结果更加简单。'
- en: The library has well-known algorithms like the Smith-Waterman, Hirschberg, Wagner-Fisher,
    BARTScore, BERTScore, Knuth-Morris-Pratt, and Faiss search. It can be used for
    many jobs and problems in natural-language processing, bioinformatics, and computer
    social studies [1].
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这个库包含了如Smith-Waterman、Hirschberg、Wagner-Fisher、BARTScore、BERTScore、Knuth-Morris-Pratt和Faiss搜索等知名算法。它可以用于自然语言处理、生物信息学和计算机社会研究中的许多工作和问题[1]。
- en: The [Stanford NLP group](https://nlp.stanford.edu/), which is part of the Stanford
    AI Lab, has developed the library and introduced it in [1]. The library’s GitHub
    repository has several [tutorials](https://github.com/stanfordnlp/string2string/tree/main#tutorials)
    that you may find useful.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[斯坦福NLP小组](https://nlp.stanford.edu/)，作为斯坦福AI实验室的一部分，开发了这个库，并在[1]中介绍了它。该库的GitHub仓库有几个[教程](https://github.com/stanfordnlp/string2string/tree/main#tutorials)，你可能会觉得有用。'
- en: A *string* is a sequence of characters (letters, numbers, and symbols) that
    stands for a piece of data or text. From everyday phrases to DNA sequences, and
    even computer programs, strings may be used to represent just about everything
    [[](https://ealizadeh.com/blog/tutorial-string2string/#ref-suzgun2023string2string)1].
  id: totrans-12
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*字符串*是代表一段数据或文本的字符（字母、数字和符号）序列。从日常短语到DNA序列，甚至计算机程序，字符串可以用来表示几乎一切[[](https://ealizadeh.com/blog/tutorial-string2string/#ref-suzgun2023string2string)1]。'
- en: Table of Contents
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 目录
- en: '[Installation](#3d0b)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[安装](#3d0b)'
- en: '[Pairwise Alignment](#8c12)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[配对比对](#8c12)'
- en: – [Needleman-Wunsch Algorithm for Global Alignment](#f0e7)
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: – [用于全局比对的Needleman-Wunsch算法](#f0e7)
- en: – [Dynamic Time Warping](#0a4b)
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: – [动态时间规整](#0a4b)
- en: '[Search Problems](#793b)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[搜索问题](#793b)'
- en: – [Lexical Search (exact-match search)](#5915)
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: – [词汇搜索（精确匹配搜索）](#5915)
- en: – [Semantic Search](#795d)
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: – [语义搜索](#795d)
- en: –– [Semantic Search via Faiss](#a554)
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: –– [通过Faiss的语义搜索](#a554)
- en: '[Distance](#5e77)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[距离](#5e77)'
- en: – [Levenshtein edit distance](#2726)
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: – [Levenshtein编辑距离](#2726)
- en: – [Jaccard Index](#5130)
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: – [Jaccard指数](#5130)
- en: '[Similarity Analysis](#eb49)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[相似性分析](#eb49)'
- en: '[Conclusion](#e244)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[结论](#e244)'
- en: '[References](#1b7b)'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[参考文献](#1b7b)'
- en: Installation
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装
- en: You can install the library via pip by running `pip install string2string`.
    For more information, visit the library’s [GitHub Page](https://github.com/stanfordnlp/string2string).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过运行 `pip install string2string` 来安装该库。有关更多信息，请访问该库的 [GitHub 页面](https://github.com/stanfordnlp/string2string)。
- en: Pairwise Alignment
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 成对对齐
- en: String pairwise alignment is a method used in NLP and other disciplines to compare
    two strings, or sequences of characters, by highlighting their shared and unique
    characteristics. The two strings are aligned, and a similarity score is calculated
    based on the number of shared characters, as well as the number of shared gaps
    and mismatches. This procedure is useful for locating sequences of characters
    that share similarities and calculating the “distance” between two sets of strings.
    Spell checking, text analysis, and bioinformatics sequence comparison (e.g., DNA
    sequence alignment) are just some of the many uses for it.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 字符串成对对齐是一种在 NLP 和其他学科中用于比较两个字符串或字符序列的方法，通过突出它们的共享和独特特征。两个字符串被对齐，并根据共享字符的数量以及共享间隙和不匹配的数量计算相似度分数。这个过程对于定位共享相似性的字符序列和计算两个字符串集合之间的“距离”非常有用。拼写检查、文本分析和生物信息学序列比较（例如
    DNA 序列对齐）只是其中的一些用途。
- en: 'Currently, the `string2string` package provides the following alignment techniques:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，`string2string` 包提供了以下对齐技术：
- en: Needleman-Wunsch for global alignment
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Needleman-Wunsch 用于全局对齐
- en: Smith-Waterman for local alignment
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Smith-Waterman 用于局部对齐
- en: Hirchberg’s algorithm for linear space global alignment
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hirchberg 的线性空间全局对齐算法
- en: Longest common subsequence
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最长公共子序列
- en: Longest common substring
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最长公共子字符串
- en: Dynamic time warping (DTW) for time series alignment
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 动态时间规整（DTW）用于时间序列对齐
- en: 'In this post, we’ll look at two examples: one for global alignment and one
    for time series alignment.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们将看两个示例：一个用于全局对齐，一个用于时间序列对齐。
- en: Needleman-Wunsch Algorithm for Global Alignment
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Needleman-Wunsch 算法用于全局对齐
- en: The Needleman-Wunsch algorithm is a type of dynamic programming algorithm that
    is often used in bioinformatics to match two DNA or protein sequences, globally.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Needleman-Wunsch 算法是一种动态规划算法，通常用于生物信息学中全局匹配两个 DNA 或蛋白质序列。
- en: '[PRE0]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: For a more informative comparison, we can use `plot_pairwise_alignment()` function
    in the library.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进行更具信息性的比较，我们可以使用库中的 `plot_pairwise_alignment()` 函数。
- en: '![](../Images/6b2de8646275c91a71c808577929131f.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6b2de8646275c91a71c808577929131f.png)'
- en: 'Figure 1: Global alignment between “ACGTGGA” and “AGCTCGC” (Image by Author).'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1： “ACGTGGA” 与 “AGCTCGC” 之间的全局对齐（图像由作者提供）。
- en: Dynamic Time Warping
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 动态时间规整
- en: DTW is a useful tool to compare two time series that might differ in speed,
    duration, or both. It discovers the path across these distances that minimizes
    the total difference between the sequences by calculating the “distance” between
    each pair of points in the two sequences.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: DTW 是一个有用的工具，用于比较两个可能在速度、持续时间或两者都不同的时间序列。它通过计算两个序列中每对点之间的“距离”，发现最小化序列之间总差异的路径。
- en: Let’s go over an example using the `alignment` module in the `string2string`
    library.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过使用 `string2string` 库中的 `alignment` 模块来举个例子。
- en: '[PRE1]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Above is an example borrowed from my previous post, [*An Illustrative Introduction
    to Dynamic Time Warping*](https://ealizadeh.com/blog/introduction-to-dynamic-time-warping/#example-1).
    For those looking to delve deeper into the topic, in [2], I explained the core
    concepts of DTW in a visual and accessible way.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 上面是一个借用我之前文章的示例，[*动态时间规整的插图介绍*](https://ealizadeh.com/blog/introduction-to-dynamic-time-warping/#example-1)。对于那些希望深入探讨这一主题的人，在
    [2] 中，我以直观和易于理解的方式解释了 DTW 的核心概念。
- en: Search Problems
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 搜索问题
- en: 'String search is the task of finding a pattern substring within another string.
    The library offers two types of search algorithms: lexical search and semantic
    search.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 字符串搜索是找到模式子字符串在另一个字符串中的任务。该库提供了两种搜索算法：词汇搜索和语义搜索。
- en: Lexical Search (exact-match search)
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 词汇搜索（精确匹配搜索）
- en: Lexical search, in layman’s terms, is the act of searching for certain words
    or phrases inside a text, analogous to searching for a word or phrase in a dictionary
    or a book.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 词汇搜索，通俗地说，就是在文本中搜索某些单词或短语，类似于在字典或书籍中查找一个单词或短语。
- en: Instead of trying to figure out what a string of letters or words means, it
    just tries to match them exactly. When it comes to search engines and information
    retrieval, lexical search is a basic strategy to finding relevant resources based
    on the keywords or phrases users enter, without any attempt at comprehending the
    linguistic context of the words or phrases in question.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 与其尝试理解一串字母或词语的意思，不如直接尝试准确匹配。在搜索引擎和信息检索中，词汇搜索是一种基本策略，用于根据用户输入的关键词或短语找到相关资源，而不试图理解这些词或短语的语言上下文。
- en: 'Currently, the `string2string` library provides the following lexical search
    algorithm:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，`string2string`库提供了以下词汇搜索算法：
- en: Naive (brute-force) search algorithm
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 朴素（暴力）搜索算法
- en: Rabin-Karp search algorithm
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rabin-Karp搜索算法
- en: Knuth-Morris-Pratt (KMP) search algorithm (see the example below)
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Knuth-Morris-Pratt（KMP）搜索算法（见下例）
- en: Boyer-Moore search algorithm
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Boyer-Moore搜索算法
- en: '[PRE2]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Semantic Search
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 语义搜索
- en: Semantic search is a more sophisticated method of information retrieval that
    goes beyond simple word or phrase searches. It employs NLP (natural language processing)
    to decipher a user’s intent and return accurate results.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 语义搜索是一种更复杂的信息检索方法，它超越了简单的词或短语搜索。它利用自然语言处理（NLP）来解读用户的意图，并返回准确的结果。
- en: To put it another way, let’s say you’re interested in “how to grow apples.”
    While a lexical search may produce results including the terms “grow” and “apples,”
    a semantic search will recognize that you are interested in the cultivation of
    apple trees and deliver results accordingly. The search engine would then prioritize
    results that not only included the phrases it was looking for but also gave relevant
    information about planting, trimming, and harvesting apple trees.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，假设你对“如何种植苹果”感兴趣。虽然词汇搜索可能会产生包含“grow”和“apples”这两个词的结果，但语义搜索会识别出你对苹果树栽培的兴趣，并据此提供相关结果。搜索引擎会优先展示那些不仅包含所查短语，还提供关于种植、修剪和收获苹果树的相关信息的结果。
- en: Semantic Search via Faiss
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过Faiss进行语义搜索
- en: Faiss (Facebook AI Similarity Search) is an efficient similarity search tool
    that is useful for dealing with high-dimensional data with numerical representations
    [3]. The `string2string` library has a wrapper for the FAISS library developed
    by Facebook (see [GitHub repository](https://github.com/facebookresearch/faiss)).
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Faiss（Facebook AI Similarity Search）是一个高效的相似性搜索工具，适用于处理具有数值表示的高维数据[3]。`string2string`库为Facebook开发的FAISS库提供了一个封装（见[GitHub仓库](https://github.com/facebookresearch/faiss)）。
- en: In short, Faiss search ranks its results based on a "score,” representing the
    degree to which two objects are similar to one another. The score makes it possible
    to interpret and prioritize search results based on how close/relevant they are
    to the desired target.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，Faiss搜索根据“得分”对结果进行排名，得分表示两个对象之间的相似程度。得分使得根据搜索结果与目标的接近/相关程度来解释和优先排序搜索结果成为可能。
- en: Let’s see how the Faiss search is used in the `string2string` library. Here,
    we have a corpus (a corpus is a large and structured collections of texts used
    for linguistic research, NLP and ML applications) of 11 sentences, and we will
    do a semantic search by querying a target sentence to see how close/relevant it
    is to these sentences.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看`string2string`库中如何使用Faiss搜索。这里，我们有一个包含11个句子的语料库（语料库是用于语言学研究、NLP和机器学习应用的大型结构化文本集合），我们将通过查询一个目标句子来进行语义搜索，以查看它与这些句子的接近/相关程度。
- en: '[PRE3]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Let’s initialize the `FaissSearch` object. Facebook's BART Large model is the
    default model and tokenizer for the `FaissSearch` object.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们初始化`FaissSearch`对象。Facebook的BART Large模型是`FaissSearch`对象的默认模型和分词器。
- en: Let’s find the top 3 most similar sentences in the corpus to the query and print
    them, as well as their similarity scores.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在语料库中找到与查询最相似的前3个句子，并打印它们及其相似度得分。
- en: '[PRE4]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Distance
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 距离
- en: 'String distance is the task of quantifying the degree to which two supplied
    strings differ using a distance function. Currently, the `string2string` library
    offers the following distance functions:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 字符串距离是量化两个提供的字符串之间差异程度的任务。当前，`string2string`库提供了以下距离函数：
- en: Levenshtein edit distance
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Levenshtein编辑距离
- en: Damerau-Levenshtein edit distance
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Damerau-Levenshtein编辑距离
- en: Hamming distance
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 汉明距离
- en: Jaccard distance
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jaccard距离
- en: Levenshtein edit distance
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Levenshtein编辑距离
- en: Levenshtein edit distance, or simply the edit distance, is the minimal number
    of insertions, deletions, or substitutions needed to convert one string into another.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 莱文斯坦编辑距离，简称编辑距离，是将一个字符串转换成另一个字符串所需的最小插入、删除或替换次数。
- en: '[PRE5]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Jaccard Index
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Jaccard 指数
- en: The Jaccard index can be used to quantify the similarity between sets of words
    or tokens and is commonly used in tasks such as document similarity or topic modeling.
    For example, the Jaccard index can be used to measure the overlap between the
    sets of words in two different documents or to identify the most similar topics
    across a collection of documents.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Jaccard 指数可用于量化词汇或标记集之间的相似性，通常用于文档相似性或主题建模等任务。例如，Jaccard 指数可以用来衡量两个不同文档中词汇集的重叠情况，或识别一组文档中最相似的主题。
- en: '[PRE6]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Similarity Analysis
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 相似性分析
- en: 'To put it simply, string similarity determines the degree to which two strings
    of text (or sequences of characters) are linked or similar to one another. Take,
    as an example, the following pair of sentences:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，字符串相似性决定了两段文本（或字符序列）之间的关联程度或相似性。例如，考虑以下这对句子：
- en: “The cat sat on the mat.”
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “猫坐在垫子上。”
- en: “The cat was sitting on the rug.”
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “猫坐在地毯上。”
- en: Although not identical, these statements share vocabulary and convey a connected
    sense. Methods based on string similarity analysis reveal and quantify the degree
    of similarity between such text pairings.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管不完全相同，这些陈述共享词汇，并传达了连贯的意义。基于字符串相似性分析的方法揭示并量化了这种文本配对之间的相似度。
- en: There is a *duality* between string *similarity* and *distance* measures, meaning
    that they can be used interchangeably [[1]](https://ealizadeh.com/blog/tutorial-string2string/#ref-suzgun2023string2string).
  id: totrans-90
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 字符串 *相似性* 和 *距离* 测量之间存在*双重性*，意味着它们可以互换使用 [[1]](https://ealizadeh.com/blog/tutorial-string2string/#ref-suzgun2023string2string)。
- en: 'The `similarly` module of the `string2string` library currently offers the
    following algorithms:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '`string2string` 库的 `similarly` 模块目前提供以下算法：'
- en: Cosine similarity
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 余弦相似性
- en: BERTScore
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BERTScore
- en: BARTScore
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BARTScore
- en: Jaro similarity
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jaro 相似性
- en: LCSubsequence similarity
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LCSubsequence 相似性
- en: 'Let’s go over an example of the BERTScore similarity algorithm with the following
    four sentences:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过以下四个句子的 BERTScore 相似性算法示例来了解一下：
- en: The bakery sells a variety of delicious pastries and bread.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 面包店出售各种美味的糕点和面包。
- en: The park features a playground, walking trails, and picnic areas.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 公园有一个游乐场、步道和野餐区。
- en: The festival showcases independent movies from around the world.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该节日展示了来自世界各地的独立电影。
- en: A range of tasty bread and pastries are available at the bakery.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 面包店提供一系列美味的面包和糕点。
- en: Sentences 1 and 2 are similar semantically, as both are about bakery and pastry.
    Hence, we should expect a high similarity score between the two.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 句子 1 和 2 在语义上是相似的，因为它们都涉及面包店和糕点。因此，我们应该预期它们之间会有较高的相似度评分。
- en: Let’s implement the above example in the library.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在库中实现上述示例。
- en: We can visualize the similarity between every pair of sentences using the `plot_heatmap()`
    function provided in the library.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用库中提供的 `plot_heatmap()` 函数可视化每对句子之间的相似性。
- en: '![](../Images/ef168487ec83656d65f641afb0973fdc.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ef168487ec83656d65f641afb0973fdc.png)'
- en: Semantic similarity (BERTScore) between sentences (Image by Author).
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 句子之间的语义相似性（BERTScore）（图由作者提供）。
- en: As can be seen above, sentences 1 and 4 are much more similar (using the BERTScore
    algorithm) as we expected.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所示，句子 1 和 4 的相似性远高于我们的预期（使用 BERTScore 算法）。
- en: Conclusion
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: 'The `string2string` Python library is an open-source tool that provides a full
    set of efficient methods for string-to-string problems. In particular, the library
    has four main modules that address the following tasks: 1\. *pairwise alignment,*
    including both global and local alignments; 2\. *distance measurement*; 3\. *lexical
    and semantic search*; and 4\. *similarity analysis*. The library offers various
    algorithms in each category and provides helpful visualization tools.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '`string2string` Python 库是一个开源工具，提供了一整套高效的方法用于字符串对字符串问题。特别是，该库有四个主要模块，分别处理以下任务：1.
    *成对比对*，包括全局对齐和局部对齐；2. *距离测量*；3. *词汇和语义搜索*；4. *相似性分析*。该库在每个类别中提供了各种算法，并提供了有用的可视化工具。'
- en: 📓 *You can find the notebook for this post on* [*GitHub*](https://github.com/e-alizadeh/data-science-blog/blob/master/notebooks/string2string-tutorial.ipynb)*.*
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 📓 *您可以在* [*GitHub*](https://github.com/e-alizadeh/data-science-blog/blob/master/notebooks/string2string-tutorial.ipynb)*找到本帖的笔记本*。
- en: Thanks for reading! 📚
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读！ 📚
- en: I’m a senior data scientist 📊 and engineer, writing about statistics, machine
    learning, Python, and more.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我是高级数据科学家 📊 和工程师，撰写关于统计学、机器学习、Python 等方面的内容。
- en: 🌱 I also curate a weekly newsletter called [**AI Sprout**](https://aisprout.beehiiv.com/subscribe)
    where I provide hands-on reviews and analysis of the latest AI tools and innovations.
    [Subscribe](https://aisprout.beehiiv.com/subscribe) to explore emerging AI with
    me!
  id: totrans-113
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 🌱 我还策划了一份每周通讯，名为 [**AI Sprout**](https://aisprout.beehiiv.com/subscribe)，在其中提供最新
    AI 工具和创新的实际评测和分析。[订阅](https://aisprout.beehiiv.com/subscribe) 与我一起探索新兴的 AI！
- en: '[*Follow me on Medium*](https://medium.com/@ealizadeh) *👋 to get my latest
    post*'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*在 Medium 上关注我*](https://medium.com/@ealizadeh) *👋 以获取我最新的帖子*'
- en: '*Subscribe to* [*my mailing list*](https://ealizadeh.com/) *✉️ for updates
    right to your inbox*'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*订阅* [*我的邮件列表*](https://ealizadeh.com/) *✉️ 获取直接发送到您收件箱的更新*'
- en: '*Let’s connect on* [*LinkedIn*](https://www.linkedin.com/in/alizadehesmaeil/)
    *and* [*Twitter*](https://twitter.com/es_alizadeh) *🤝*'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*让我们在* [*LinkedIn*](https://www.linkedin.com/in/alizadehesmaeil/) *和* [*Twitter*](https://twitter.com/es_alizadeh)
    *上联系* 🤝'
- en: '[](https://medium.ealizadeh.com/membership?source=post_page-----f9126b8474c5--------------------------------)
    [## Join Medium with my referral link - Esmaeil Alizadeh'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.ealizadeh.com/membership?source=post_page-----f9126b8474c5--------------------------------)
    [## 使用我的推荐链接加入 Medium - Esmaeil Alizadeh'
- en: 📖 Read every story from Esmaeil Alizadeh (and thousands of other writers on
    Medium). Subscribe to Medium to get full…
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 📖 阅读 Esmaeil Alizadeh 以及其他成千上万名 Medium 作家的每一个故事。订阅 Medium 获取完整内容……
- en: medium.ealizadeh.com](https://medium.ealizadeh.com/membership?source=post_page-----f9126b8474c5--------------------------------)
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: medium.ealizadeh.com](https://medium.ealizadeh.com/membership?source=post_page-----f9126b8474c5--------------------------------)
- en: References
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[1] M. Suzgun, S. M. Shieber, and D. Jurafsky, “string2string: A modern python
    library for string-to-string algorithms,” 2023, Available: [http://arxiv.org/abs/2304.14395](http://arxiv.org/abs/2304.14395)'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] M. Suzgun, S. M. Shieber, and D. Jurafsky, “string2string: A modern python
    library for string-to-string algorithms,” 2023, Available: [http://arxiv.org/abs/2304.14395](http://arxiv.org/abs/2304.14395)'
- en: '[2] E. Alizadeh, “An Illustrative Introduction to Dynamic Time Warping,” 2020\.
    [https://ealizadeh.com/blog/introduction-to-dynamic-time-warping/](https://ealizadeh.com/blog/introduction-to-dynamic-time-warping/)'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] E. Alizadeh, “动态时间规整的插图式介绍，” 2020\. [https://ealizadeh.com/blog/introduction-to-dynamic-time-warping/](https://ealizadeh.com/blog/introduction-to-dynamic-time-warping/)'
- en: '[3] J. Johnson, M. Douze, and H. Jégou, “Billion-scale similarity search with
    GPUs,” *IEEE Transactions on Big Data*, vol. 7, no. 3, pp. 535–547, 2019.'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '[3] J. Johnson, M. Douze, and H. Jégou, “Billion-scale similarity search with
    GPUs,” *IEEE Transactions on Big Data*, vol. 7, no. 3, pp. 535–547, 2019.'
- en: '*Originally published at* [*https://ealizadeh.com*](https://ealizadeh.com/blog/tutorial-string2string/)*.*'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '*最初发布于* [*https://ealizadeh.com*](https://ealizadeh.com/blog/tutorial-string2string/)*。*'
