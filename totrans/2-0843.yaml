- en: Experiment Orchestration From Scratch
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从零开始的实验编排
- en: 原文：[https://towardsdatascience.com/experiment-orchestration-from-scratch-4a9e460944d8](https://towardsdatascience.com/experiment-orchestration-from-scratch-4a9e460944d8)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/experiment-orchestration-from-scratch-4a9e460944d8](https://towardsdatascience.com/experiment-orchestration-from-scratch-4a9e460944d8)
- en: Developing a custom experiment orchestrator to solve complex modeling problems.
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开发自定义实验编排器以解决复杂建模问题。
- en: '[](https://medium.com/@danielwarfield1?source=post_page-----4a9e460944d8--------------------------------)[![Daniel
    Warfield](../Images/c1c8b4dd514f6813e08e401401324bca.png)](https://medium.com/@danielwarfield1?source=post_page-----4a9e460944d8--------------------------------)[](https://towardsdatascience.com/?source=post_page-----4a9e460944d8--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----4a9e460944d8--------------------------------)
    [Daniel Warfield](https://medium.com/@danielwarfield1?source=post_page-----4a9e460944d8--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@danielwarfield1?source=post_page-----4a9e460944d8--------------------------------)[![Daniel
    Warfield](../Images/c1c8b4dd514f6813e08e401401324bca.png)](https://medium.com/@danielwarfield1?source=post_page-----4a9e460944d8--------------------------------)[](https://towardsdatascience.com/?source=post_page-----4a9e460944d8--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----4a9e460944d8--------------------------------)
    [Daniel Warfield](https://medium.com/@danielwarfield1?source=post_page-----4a9e460944d8--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----4a9e460944d8--------------------------------)
    ·9 min read·Jul 31, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----4a9e460944d8--------------------------------)
    ·9分钟阅读·2023年7月31日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/2306ab1174fda8c768e328e89117e1b9.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2306ab1174fda8c768e328e89117e1b9.png)'
- en: Orchestration by Daniel Warfield using p5.js. All images are created by the
    author unless otherwise stated.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 由Daniel Warfield使用p5.js进行编排。除非另有说明，否则所有图像均由作者创建。
- en: In this post we will explore why experiment orchestration is important, existing
    orchestration solutions, how to build your own orchestrator with MongoDB, and
    why that might be beneficial in some use cases.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们将探讨为什么实验编排很重要，现有的编排解决方案，如何使用MongoDB构建自己的编排器，以及在某些用例中这样做的好处。
- en: '**Who is this useful for?** Anyone trying to fit models to data; and consequently
    needs a way to organize those experiments.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**这对谁有用？** 任何试图将模型拟合到数据上的人；因此需要一种组织这些实验的方法。'
- en: '**How advanced is this post?** The idea of orchestration is fairly simple,
    and is accessible to virtually any skill level. The example should be accessible
    to backend developers or data scientists trying to branch out.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**这篇文章有多先进？** 编排的想法相当简单，几乎任何技能水平的人都能理解。这个例子应该对尝试拓展领域的后端开发人员或数据科学家有用。'
- en: '**Pre-requisites:** A working understanding of core networking principles,
    like databases and servers, as well as core data science concepts, like hyperparameters.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**前提条件：** 对核心网络原理（如数据库和服务器）以及核心数据科学概念（如超参数）的基本理解。'
- en: '**Code:** Full code can be found [here](https://github.com/DanielWarfield1/TabularExperimentTracker).
    Note: this repo is a WIP at the time of writing this article.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码：** 完整代码可以在[这里](https://github.com/DanielWarfield1/TabularExperimentTracker)找到。注意：在撰写本文时，这个仓库仍在开发中。'
- en: What is Experiment Orchestration?
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是实验编排？
- en: 'By “experiment orchestration” I am referring to a wide number of tasks consisting
    of the same general concept. The most common form of experiment orchestration
    is hyperparameter sweeps: where, given some range of hyperparameter values, you
    want to sweep through that range and find the best hyperparameter set for a given
    modeling problem. The organization of these types of planned experiments is generally
    referred to as orchestration.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 所谓“实验编排”，指的是许多任务，尽管它们有相同的基本概念。最常见的实验编排形式是超参数搜索：在给定一系列超参数值的情况下，你希望在这些值中进行搜索，找到适用于特定建模问题的最佳超参数集合。这些计划实验的组织通常被称为编排。
- en: '![](../Images/4110d35dcbb4c31ec93fc29049be2cdb.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4110d35dcbb4c31ec93fc29049be2cdb.png)'
- en: An example of a hyperparameter sweep. A space of hyperparameters is defined.
    Then, specific hyperparameter sets are extracted from that hyperparameter space
    and tested in some way. The best combination of hyperparameters can then be identified.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一个超参数搜索的例子。定义一个超参数的空间。然后，从这个超参数空间中提取特定的超参数集合，并以某种方式进行测试。然后可以识别出最佳的超参数组合。
- en: Simple sweeps get the job done most of the time, but as modeling problems become
    more complex it is common to have more complex experiments. You may find yourself
    needing to experiment with multiple model types, each with their own hyperparameter
    space, across multiple datasets.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 简单的实验大多数情况下能完成任务，但随着建模问题的复杂性增加，通常需要更复杂的实验。你可能会发现自己需要在多个数据集上试验多种模型类型，每种模型都有自己的超参数空间。
- en: For instance, I’m currently conducting research on the performance of different
    modeling strategies within non-homogenous modeling applications. I’m not interested
    in “what is the best set of hyperparameters to solve a particular problem”, but
    rather “how do multiple model types, each with their own hyperparameter space,
    perform across numerous classification and regression tasks”.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我目前正在研究不同建模策略在非同质建模应用中的表现。我不是在寻找“解决特定问题的最佳超参数集合”，而是“多种模型类型，每种模型都有其自己的超参数空间，在多个分类和回归任务中的表现如何”。
- en: The goal of an experiment orchestrator is to function as a central hub of the
    experiment, no matter how complex the experiment’s definition is, such that a
    single worker, or perhaps a group of workers, can run sub-sets of the experiment.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 实验编排器的目标是作为实验的中心枢纽，无论实验定义多么复杂，使得单个工作人员或一组工作人员可以运行实验的子集。
- en: '![](../Images/d56ccad55e0f9e12b5d6659b6d01bb0d.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d56ccad55e0f9e12b5d6659b6d01bb0d.png)'
- en: The goal of the experiment orchestrator, which allows workers to know what to
    work on, and allows workers to record results.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 实验编排器的目标是使工作人员知道需要做什么，并允许工作人员记录结果。
- en: We will be building a system like this using MongoDB Data Services to store
    results, and MongoDB Application Services as the server which hosts the logic
    and networking of the system. While this is incredibly powerful, it’s also incredibly
    simple; I had the whole thing tied up over a single weekend.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用MongoDB Data Services来存储结果，并使用MongoDB Application Services作为承载系统逻辑和网络的服务器来构建类似的系统。尽管这非常强大，但也非常简单；我在一个周末就把整个系统搞定了。
- en: What Solutions Exist?
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 现存的解决方案
- en: '[Weights and Biases](https://wandb.ai/site) is an obvious choice.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[Weights and Biases](https://wandb.ai/site) 是一个明显的选择。'
- en: 'For [W&B Sweeps](https://wandb.ai/site/sweeps), you define a sweep, an agent
    (training and validation code), and log results while the agent is running. Those
    steps are pretty straightforward, and look something like this:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 对于[W&B Sweeps](https://wandb.ai/site/sweeps)，你需要定义一个实验，一个代理（训练和验证代码），并在代理运行时记录结果。这些步骤都相当直接，类似于这样：
- en: Defining A Sweep
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义一个实验
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 2\. Defining an Agent
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 定义一个代理
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 3\. Log Results
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 记录结果
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This is sufficient for 90% of use cases, and is the generally recommended approach
    for experiment orchestration. This approach didn’t work with my use case, however.
    The following section presents my solution.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这对于90%的使用案例是足够的，通常是实验编排的推荐方法。然而，这种方法不适用于我的使用案例。接下来的部分将介绍我的解决方案。
- en: The Case for Building Your Own Orchestrator
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自建编排器的理由
- en: Again for 90% of applications (especially business applications) the method
    described above is more than adequate. Relying on an existing system means relying
    on robustness and feature maturity which surpasses any feasible quick and dirty
    solution.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 对于90%的应用程序（尤其是商业应用），上述方法通常已经足够。依赖现有系统意味着依赖其超越任何可行的粗糙解决方案的稳健性和功能成熟度。
- en: That said, systems like W&B seem designed to find “solutions”. They operate
    under the assumption that you have a specific dataset and want to explore solutions
    with the objective of finding a specific solution which is best for that dataset.
    For me, and my research needs, managing things like multiple datasets, multiple
    models, and the compatibility between the two, was frustratingly cumbersome in
    W&B.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 也就是说，像W&B这样的系统似乎被设计用于寻找“解决方案”。它们在假设你有一个特定数据集并希望探索解决方案，以找到适合该数据集的最佳解决方案的目标下运行。对我而言，以及我的研究需求，管理多个数据集、多个模型及其之间的兼容性，在W&B中令人感到非常麻烦。
- en: '![](../Images/16e1d9c9e0bfefcbe948e708fb72c7fd.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/16e1d9c9e0bfefcbe948e708fb72c7fd.png)'
- en: A square peg in a round hole. In software it’s incredibly common for a minor
    design incongruity to cause massive issues later down the line. That’s why, in
    some applications, remaking a technology can be easier than integrating with existing
    implementation, even if the original “mostly” fits.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 方孔中的圆钉。在软件中，设计上的轻微不一致常常会在之后引发严重问题。这就是为什么在某些应用中，重新制作技术可能比与现有实现集成更容易，即使原始的“基本上”适用。
- en: to use W&B it seemed like I would have to build an orchestrator of orchestrators
    by somehow organizing and managing multiple sweeps across multiple datasets. On
    top of an already complex task, I would need to deal with integration issues as
    well. It was around this point I decided that building W&B sweeps from scratch,
    paired with a few minor modifications for my needs, would be the best fit.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 使用W&B时，似乎我需要通过某种方式组织和管理多个数据集上的多个搜索，从而构建一个协调器的协调器。在一个已经很复杂的任务基础上，我还需要处理集成问题。正是在这一点上，我决定从头开始构建W&B搜索，并进行一些小的修改，以满足我的需求，这将是最合适的选择。
- en: Building a Custom Orchestrator in a Weekend
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在一个周末构建一个自定义协调器
- en: I implemented an orchestrator for my specific problem. While the solution is
    problem specific, the general idea should be flexible to most machine learning
    experimentation needs.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我为我的特定问题实现了一个协调器。虽然解决方案是特定于问题的，但一般思路应该对大多数机器学习实验需求是灵活的。
- en: Defining The Problem
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义问题
- en: I have a collection of around 45 tabular datasets across a variety of domain
    spaces. Each of these datasets can be considered a “task” that any given model
    could be good or bad at. some tasks might be regression tasks, while others might
    be classification tasks.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我有大约45个表格数据集，涵盖了各种领域。这些数据集中的每一个都可以被视为一个“任务”，任何给定的模型可能会表现良好或不佳。有些任务可能是回归任务，而其他任务可能是分类任务。
- en: The general idea is to build an orchestrator which can manage the application
    of a family of models to a family of datasets. This orchestrator should aggregate
    these results for further analysis.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 一般思路是构建一个协调器，该协调器可以管理一组模型对一组数据集的应用。这个协调器应该汇总这些结果以便进一步分析。
- en: Also, naturally, the objective of this orchestrator is to solve problems, not
    become a problem. The idea is to cut some corners where I can while solving the
    problems that I have. As a result, this solution is pretty bare-bones, and a bit
    hacky.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，自然地，这个协调器的目标是解决问题，而不是成为问题。想法是在解决我遇到的问题时，尽可能简化某些方面。因此，这个解决方案非常简陋，有点像是小修小补。
- en: Choice of Technology
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 技术选择
- en: For this solution I used MongoDB Application Services and MongoDB Data Service,
    or whatever it’s called. MongoDB has been going through a lot of re-branding in
    the last year. The system I’m using used to be called MongoDB Atlas and Realm,
    but now Realm might be part of Atlas? I’m not sure.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个解决方案，我使用了MongoDB应用服务和MongoDB数据服务，或者叫什么都无所谓。MongoDB在过去一年中经历了很多品牌重塑。我使用的系统曾经叫做MongoDB
    Atlas和Realm，但现在Realm可能是Atlas的一部分？我不太确定。
- en: Regardless, MongoDB on the cloud is essentially a backend in a box. You can
    set up a database, application layer, and api layer super quickly with minimal
    overhead. In my experience, because of confusing documentation, getting something
    production ready can be an uphill battle. However, for rapid prototyping of backend
    resources, I have yet to find a better alternative.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，云上的MongoDB本质上是一个“盒子中的后端”。你可以非常迅速地设置数据库、应用层和API层，几乎没有额外开销。在我的经验中，由于文档混乱，使得将东西准备好生产环境可能是一场艰苦的战斗。然而，对于快速原型开发后端资源，我还未找到更好的替代方案。
- en: The next few sections describe how I broke the problem of orchestration into
    Experiments and Runs, and what those practically look like.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的几个部分描述了我如何将协调问题拆解成实验和运行，以及这些在实际中是什么样的。
- en: '![](../Images/cbc1e5ea85d25e84c012b482ce892f34.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cbc1e5ea85d25e84c012b482ce892f34.png)'
- en: A screenshot of the database, which includes a collection for “Experiments”,
    “Runs”, and “UserData”
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库的屏幕截图，包括“实验”、“运行”和“用户数据”集合
- en: '![](../Images/3876d51f09814a5a41c164c8a478e381.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3876d51f09814a5a41c164c8a478e381.png)'
- en: A simple HTTP API allowing for communication with the orchestrator
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 一个允许与协调器通信的简单HTTP API
- en: Defining an Experiment
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义实验
- en: In this custom approach I essentially co-opted W&B’s design of sweeps and added
    some of my own ideas. The core system runs on an “Experiment”, which describes
    models, hyperparameter spaces, datasets, and how the three should be associated
    together.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种自定义方法中，我基本上借用了W&B的搜索设计，并加入了一些自己的想法。核心系统运行在一个“实验”上，该实验描述了模型、超参数空间、数据集以及这三者如何关联在一起。
- en: '[PRE3]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This experiment then gets broken down into a list of tasks: individual explorations
    which some worker needs to run. These are done by looking through all associations
    and listing all model/dataset pairs.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这个实验随后被拆解为一个任务列表：一些工人需要执行的独立探索。这些通过查看所有关联并列出所有模型/数据集对来完成。
- en: '![](../Images/9bbe1b1687cab651ddd17668bbb48106.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9bbe1b1687cab651ddd17668bbb48106.png)'
- en: each task called an mtpair (model-task pair) in the implimentation. This keeps
    track of the model, the task (an individual dataset), and all the successful and
    completed runs for that mtpair. This image contains 2 mtpairs.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 每个任务在实现中称为 mtpair（模型-任务对）。这跟踪模型、任务（一个数据集）以及所有成功和完成的 mtpair 运行。此图像包含 2 个 mtpair。
- en: This all gets created by calling the “/registerExperiment” api endpoint, and
    passing it the model definition.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这一切都是通过调用 **“/registerExperiment”** API 端点并传递模型定义来创建的。
- en: I opted to make experiments “declarative”, kind of like a terraform script if
    you’re familiar with that. When you register an experiment you either create a
    new one, or get an existing one, on a experiment-name basis. That way you can
    use the same script on multiple workers. The first one will create the experiment,
    and others will simply use the one which has already been created. (or, at least
    that’s the idea. You have to be careful about race conditions with this line of
    thinking).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我选择将实验设置为“声明式”，有点像你熟悉的 terraform 脚本。当你注册一个实验时，你要么创建一个新的实验，要么根据实验名称获取一个现有的实验。这样，你可以在多个工作者上使用相同的脚本。第一个工作者将创建实验，而其他工作者将简单地使用已经创建的实验。（或者，至少是这个想法。你需要小心这种思路下的竞争条件。）
- en: Runs
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行
- en: 'Now that the experiment has been defined, along with individual model/task
    pairs which need to be run, we can start runs. This is where the rubber meets
    the road for the orchestrator. We have to:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在实验已经定义好，以及需要运行的各个模型/任务对，我们可以开始运行。这是调度器的实际操作部分。我们必须：
- en: Decide which model/task pair a worker should work on
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 决定工作者应该处理哪个模型/任务对
- en: 2\. Get hyperparameters from that models hyperparameter space for the worker
    to use
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 从该模型的超参数空间中获取供工作者使用的超参数
- en: 3\. Record ongoing results
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 记录正在进行的结果
- en: 4\. Manage runs which have been completed (separating those which might have
    failed).
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. 管理已完成的运行（将可能失败的运行分开）。
- en: The “run” construct exists within the orchestrator to record this information.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: “运行”构造存在于调度器中，以记录这些信息。
- en: '![](../Images/14669f31f336c089e5e6ef60d59a1262.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/14669f31f336c089e5e6ef60d59a1262.png)'
- en: An example of a run in the “Runs” collection
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: “运行”集合中的一个运行示例
- en: A run is directly associated with a model/task pair (mtpair), the experiment
    that mtpair exists in, who created the experiment, the model, the task, the specific
    hyperparameter space point, and the logged results on a per-epoch basis. This
    is done with the “/beginRun”, “/updateRun”, and “/endRun” endpoints.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 一个运行直接与一个模型/任务对（mtpair）、该 mtpair 所在的实验、谁创建了实验、模型、任务、特定的超参数空间点以及按每个纪元记录的结果相关联。这是通过
    **“/beginRun”**、**“/updateRun”** 和 **“/endRun”** 端点完成的。
- en: '**/beginRun** looks at all the existing runs and creates a new run on the mtpair
    with the least amount of completed and initated runs. /beginRun, after deciding
    which model-task pair to prioritize, uses random search to convert that models
    hyperparameter space into a specific set of hyperparameters. It then passes a
    handler for that run.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**/beginRun** 查看所有现有的运行，并在完成和启动的运行最少的 mtpair 上创建一个新的运行。**/beginRun** 在决定优先处理哪个模型-任务对之后，使用随机搜索将该模型的超参数空间转化为一组具体的超参数。然后，它会传递一个处理程序来处理该运行。'
- en: '**/updateRun** allows you to register metrics on a per-epoch basis. Every epoch
    you call /updateRun and pass a dictionary of metrics for that run. Those can be
    pretty much whatever the user feels is appropriate.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**/updateRun** 允许你按每个纪元注册指标。每个纪元，你调用 **/updateRun** 并传递一个包含该运行指标的字典。这些可以是用户认为合适的任何内容。'
- en: '**/endRun** does a few quality of life things. ended runs can’t be continued,
    so it allows the code to declare when a run has been completed. It also updates
    the record for the run within the experiment, and marks the run as successfully
    completed. Runs which unexpectedly fail will not be marked as ended, and thus
    implimenting this webhook allows the orchestrator to be tollerant of faulty workers.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**/endRun** 做了一些提升生活质量的事情。结束的运行无法继续，因此它允许代码声明运行已经完成。它还会更新实验中运行的记录，并将运行标记为成功完成。意外失败的运行不会被标记为结束，因此实现这个
    webhook 使调度器能够容忍故障工作者。'
- en: Security
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全
- en: This system uses JSON web tokens (JWTs) to create some rudamentary authentication.
    Realistically the risk profile of a project like this, from a research perspective,
    is pretty low. That said this system does validate API tokens associated on a
    per-user basis, and provides some security measures to ensure data integrity while
    allowing for collaboration.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这个系统使用JSON Web Tokens (JWTs)来创建一些基础的身份验证。从研究的角度来看，这样一个项目的风险配置相当低。尽管如此，这个系统确实会根据每个用户验证API令牌，并提供一些安全措施以确保数据完整性，同时允许协作。
- en: Also, in terms of security for my wallet, I’m using the free tier and got that
    set up without needing to register a payment method. (MongoDB on the cloud is
    quirky, but it really is pretty amazing for prototyping)
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在钱包的安全性方面，我使用了免费套餐，并且设置时不需要注册支付方式。（MongoDB云服务有些古怪，但在原型设计上确实非常惊人）
- en: And that’s it!
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 就这些了！
- en: Normally I include code, but it’s a whole repo which would kind of be a slog
    to put in an article. Again, if you want to check out the repo you can look [here](https://github.com/DanielWarfield1/TabularExperimentTracker).
    Specifically, you can look at the [function definitions here](https://github.com/DanielWarfield1/TabularExperimentTracker/tree/master/functions),
    which are essentially the whole thing in a nutshell.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 通常我会包含代码，但这是一个完整的代码库，放在文章里有些繁琐。如果你想查看代码库，可以点击[这里](https://github.com/DanielWarfield1/TabularExperimentTracker)。具体来说，你可以查看[函数定义](https://github.com/DanielWarfield1/TabularExperimentTracker/tree/master/functions)，这些定义基本上就是整个内容的精华。
- en: Updates
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新
- en: I added a webhook called **beginRunSticky** which begins a new run, but accepts
    a dataset to be “stuck” to. It prioritizes giving workers a new run with the specified
    task, thus allowing multiple runs to execute without needing to load a new dataset.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我添加了一个名为**beginRunSticky**的webhook，它开始一个新的运行，但接受一个要“粘贴”的数据集。它优先给工人分配一个具有指定任务的新运行，从而允许多个运行执行而无需加载新的数据集。
- en: Follow For More!
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关注以获取更多！
- en: In future posts, I’ll also describing several landmark papers in the ML space,
    with an emphasis on practical and intuitive explanations.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在未来的帖子中，我还将描述机器学习领域的几篇重要论文，重点放在实际和直观的解释上。
- en: '**Attribution:** All of the images in this document were created by Daniel
    Warfield, unless a source is otherwise provided. You can use any images in this
    post for your own non-commercial purposes, so long as you reference this article,
    [https://danielwarfield.dev](https://danielwarfield.dev/), or both.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**署名：** 本文档中的所有图片均由**丹尼尔·沃菲尔德**创建，除非另有来源说明。你可以在自己的非商业用途上使用本文中的任何图片，只要引用了这篇文章，[https://danielwarfield.dev](https://danielwarfield.dev/)，或两者兼而有之。'
