- en: How to Measure the Carbon Footprint using Python and Vertex AI Pipelines
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用Python和Vertex AI Pipelines测量碳足迹
- en: 原文：[https://towardsdatascience.com/how-to-mesure-the-carbon-footprint-using-vertex-ai-pipelines-3d6bc9695e7b](https://towardsdatascience.com/how-to-mesure-the-carbon-footprint-using-vertex-ai-pipelines-3d6bc9695e7b)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-mesure-the-carbon-footprint-using-vertex-ai-pipelines-3d6bc9695e7b](https://towardsdatascience.com/how-to-mesure-the-carbon-footprint-using-vertex-ai-pipelines-3d6bc9695e7b)
- en: A step-by-step guide on tracking carbon emissions using Vertex AI Pipelines
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于使用Vertex AI Pipelines跟踪碳排放的逐步指南
- en: '[](https://medium.com/@anna.bildea?source=post_page-----3d6bc9695e7b--------------------------------)[![Ana
    Bildea, PhD](../Images/60567c2b09bd0be5b25e508905dfe4c6.png)](https://medium.com/@anna.bildea?source=post_page-----3d6bc9695e7b--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3d6bc9695e7b--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3d6bc9695e7b--------------------------------)
    [Ana Bildea, PhD](https://medium.com/@anna.bildea?source=post_page-----3d6bc9695e7b--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@anna.bildea?source=post_page-----3d6bc9695e7b--------------------------------)[![Ana
    Bildea, PhD](../Images/60567c2b09bd0be5b25e508905dfe4c6.png)](https://medium.com/@anna.bildea?source=post_page-----3d6bc9695e7b--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3d6bc9695e7b--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3d6bc9695e7b--------------------------------)
    [Ana Bildea, PhD](https://medium.com/@anna.bildea?source=post_page-----3d6bc9695e7b--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----3d6bc9695e7b--------------------------------)
    ·9 min read·Jan 31, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----3d6bc9695e7b--------------------------------)
    ·9分钟阅读·2023年1月31日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/6f604577434a098bfe1758e826444eb3.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6f604577434a098bfe1758e826444eb3.png)'
- en: image generated by the Author with Midjourney.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者使用Midjourney生成。
- en: Motivation
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动机
- en: Machine learning has become a regular part of our daily lives, therefore it
    is time to consider its potential impacts on the environment. Otherwise, Mother
    Nature might just give us an ‘*I told you so’* in the form of natural disasters
    leading to severe human suffering. One way we can help combat climate change is
    by starting to measure and reduce the carbon footprint of our machine-learning
    models. The carbon footprint measures the total greenhouse gas emissions caused
    by services, products, persons, organizations, or events. In the case of machine
    learning, it includes the energy required to train and run models, as well as
    the energy used by the hardware on which they’re running.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习已经成为我们日常生活的一部分，因此是时候考虑它对环境的潜在影响了。否则，大自然可能会以自然灾害的形式给我们一个‘*我早就说过了*’的教训，导致严重的人类痛苦。我们可以通过开始测量和减少机器学习模型的碳足迹来帮助应对气候变化。碳足迹衡量的是服务、产品、个人、组织或事件造成的温室气体排放总量。在机器学习的情况下，它包括训练和运行模型所需的能源，以及运行这些模型的硬件所用的能源。
- en: In this article, I will provide feedback on two open-source Python libraries,
    [CodeCarbon](https://pypi.org/project/codecarbon/) and [CarbonTracker](https://github.com/lfwa/carbontracker),
    which are able to estimate the carbon footprint. I will also include a step-by-step
    guide for using them in Vertex AI pipelines. Lastly, I will list practical considerations
    for reducing the carbon footprint. So, let’s start doing our part in saving the
    planet before it’s too late! 💚
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我将对两个开源Python库 [CodeCarbon](https://pypi.org/project/codecarbon/) 和 [CarbonTracker](https://github.com/lfwa/carbontracker)
    提供反馈，它们能够估算碳足迹。我还将包括一个在Vertex AI管道中使用它们的逐步指南。最后，我将列出减少碳足迹的实际考虑因素。所以，让我们在为时已晚之前开始为拯救地球贡献自己的力量吧！💚
- en: I. Carbon Footprint in Python 📗
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: I. Python中的碳足迹 📗
- en: Two of the most popular libraries for measuring the carbon footprint in Python
    are [CodeCarbon](https://pypi.org/project/codecarbon/) and [CarbonTracker](https://github.com/lfwa/carbontracker).
    The truth is that we do not have many open-source alternatives. But I believe
    we will have more options available once the community begins to integrate carbon
    footprint into the machine learning systems.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 用于测量Python中碳足迹的两个最流行的库是 [CodeCarbon](https://pypi.org/project/codecarbon/) 和
    [CarbonTracker](https://github.com/lfwa/carbontracker)。事实是我们没有很多开源的替代方案。但我相信，一旦社区开始将碳足迹集成到机器学习系统中，我们将会有更多的选择。
- en: Let’s say a few words about the libraries.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先说几句关于库的内容。
- en: CodeCarbon
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CodeCarbon
- en: It is an open-source Python library that estimates the CO2 produced while running
    the code. The project was initiated by Yoshua Bengio. One of the things I appreciate
    most about it is that is very easy to use, has good documentation, and nice [Dashboard](https://dashboard.codecarbon.io/).
    The estimation is done by measuring the power consumption of the total GPUs, CPUs,
    and RAM. Then it applies the [regional carbon intensity of electricity](https://ourworldindata.org/grapher/carbon-intensity-electricity)
    of your [cloud](https://github.com/mlco2/codecarbon/blob/master/codecarbon/data/cloud/impact.csv)
    provider or [country](https://github.com/mlco2/codecarbon/blob/master/codecarbon/data/private_infra/eu-carbon-intensity-electricity.csv)
    if you are using a local machine or on-premise cluster. Refer to the table below
    to see the carbon intensity across various energy sources.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 它是一个开源Python库，用于估算运行代码时产生的CO2。该项目由Yoshua Bengio发起。我最欣赏的一点是它非常易于使用，文档良好，并且有一个很棒的[仪表盘](https://dashboard.codecarbon.io/)。估算通过测量总GPU、CPU和RAM的功耗来完成。然后，它应用您的[云](https://github.com/mlco2/codecarbon/blob/master/codecarbon/data/cloud/impact.csv)提供商或[国家](https://github.com/mlco2/codecarbon/blob/master/codecarbon/data/private_infra/eu-carbon-intensity-electricity.csv)的[区域碳强度](https://ourworldindata.org/grapher/carbon-intensity-electricity)，如果您使用本地计算机或本地集群。请参考下表以查看各种能源来源的碳强度。
- en: '![](../Images/e20e8c07b5ad541c58a06916294dd5b6.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e20e8c07b5ad541c58a06916294dd5b6.png)'
- en: '@[CodeCarbon](https://mlco2.github.io/codecarbon/methodology.html#) source'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '@[CodeCarbon](https://mlco2.github.io/codecarbon/methodology.html#) 来源'
- en: 'The carbon dioxide emissions estimation (CO₂eq) is calculated as below:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 二氧化碳排放估算（CO₂eq）计算如下：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note that CodeCarbon uses a world average of [**475 gCO2.eq/KWh**](https://www.iea.org/reports/global-energy-co2-status-report-2019/emissions)
    when the carbon intensity is not available. The emissions are saved into a CSV
    file named `emissions.csv.`
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，当碳强度不可用时，CodeCarbon使用世界平均值[**475 gCO2.eq/KWh**](https://www.iea.org/reports/global-energy-co2-status-report-2019/emissions)。排放量被保存到名为`emissions.csv.`的CSV文件中。
- en: In terms of supported infrastructure, it is compatible with NVIDIA GPUs that
    support [NVIDIA Management Library (NVML](https://developer.nvidia.com/nvidia-management-library-nvml))
    and Intel CPUs that [support Intel RAPL](http://web.eece.maine.edu/~vweaver/projects/rapl/rapl_support.html)
    . If your CPU is not on the [list of supported CPUs](https://github.com/mlco2/codecarbon/blob/master/codecarbon/data/hardware/cpu_power.csv)
    then it will estimate the power consumption of the CPUs as 50% of their thermal
    design power(TDP) using a default TDP average of 85W.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在支持的基础设施方面，它兼容支持[NVIDIA管理库（NVML）](https://developer.nvidia.com/nvidia-management-library-nvml)的NVIDIA
    GPU和支持[Intel RAPL](http://web.eece.maine.edu/~vweaver/projects/rapl/rapl_support.html)的Intel
    CPU。如果您的CPU不在[支持的CPU列表](https://github.com/mlco2/codecarbon/blob/master/codecarbon/data/hardware/cpu_power.csv)上，它将估算CPU的功耗为其热设计功耗（TDP）的50%，默认TDP平均值为85W。
- en: 'To install it use pip:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 使用pip安装：
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'It supports two modes: `online mode` or `offline mode` .'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 它支持两种模式：`在线模式` 或 `离线模式`。
- en: '`The Online mode` needs an internet connection to retrieve your geographical
    location. See below an example of using it with or without a decorator:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '`在线模式` 需要互联网连接来获取您的地理位置。请参见下面使用它的示例，带有或不带装饰器：'
- en: '`The Offline mode` can be used when your setup doesn’t have access to the internet.
    It requires specifying the 3-letter alphabet ISO Code of the country. You can
    find a list of country **ISO** codes on [Wikipedia](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes).'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '`离线模式` 可以在您的设置无法访问互联网时使用。它需要指定国家的3个字母ISO代码。您可以在[维基百科](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes)上找到国家**ISO**代码的列表。'
- en: CarbonTracker
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CarbonTracker
- en: '[CarbonTracker](https://arxiv.org/abs/2007.03051) is an open-source library
    aiming to estimate the carbon footprint of training a deep learning model by measuring
    the power consumption of the hardware used for training. Currently, it supports
    GPU, CPU, and DRAM components. It is compatible with NVIDIA GPUs that support
    [NVIDIA Management Library (NVML](https://developer.nvidia.com/nvidia-management-library-nvml),
    Intel CPUs that support [Intel RAP](http://web.eece.maine.edu/~vweaver/projects/rapl/rapl_support.html)L,
    Slurm, and Google Colab / Jupyter Notebook. It is easy to use but unfortunately,
    the documentation is limited.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[CarbonTracker](https://arxiv.org/abs/2007.03051) 是一个开源库，旨在通过测量训练所用硬件的功耗来估算训练深度学习模型的碳足迹。目前，它支持
    GPU、CPU 和 DRAM 组件。它与支持[NVIDIA 管理库 (NVML)](https://developer.nvidia.com/nvidia-management-library-nvml)的
    NVIDIA GPU、支持[Intel RAP](http://web.eece.maine.edu/~vweaver/projects/rapl/rapl_support.html)的
    Intel CPU、Slurm 和 Google Colab / Jupyter Notebook 兼容。使用起来很简单，但不幸的是，文档有限。'
- en: 'To estimate the carbon footprint it uses the formula :'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 为了估算碳足迹，它使用以下公式：
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The `Energy Consumption`is computed based on PUE (Power Usage Effectiveness),
    a metric used to measure the energy efficiency of data centers. It is calculated
    by dividing the total amount of energy used by a data center by the energy used
    by the IT equipment (e.g. servers, storage, etc.).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '`Energy Consumption` 是基于 PUE（功耗使用效率）计算的，这是一种用于衡量数据中心能源效率的指标。它通过将数据中心使用的总能量除以
    IT 设备（如服务器、存储等）使用的能量来计算。'
- en: It uses the same `Carbon Intensity` per [cloud](https://github.com/mlco2/codecarbon/blob/master/codecarbon/data/cloud/impact.csv)
    or [country](https://github.com/mlco2/codecarbon/blob/master/codecarbon/data/private_infra/eu-carbon-intensity-electricity.csv)
    as `codecarbon.` It applies a world average of [**475 gCO2.eq/KWh**](https://www.iea.org/reports/global-energy-co2-status-report-2019/emissions)when
    the carbon intensity is not available.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 它使用与 `codecarbon` 相同的每个[云](https://github.com/mlco2/codecarbon/blob/master/codecarbon/data/cloud/impact.csv)或[国家](https://github.com/mlco2/codecarbon/blob/master/codecarbon/data/private_infra/eu-carbon-intensity-electricity.csv)的
    `Carbon Intensity`。当碳强度不可用时，应用[**475 gCO2.eq/KWh**](https://www.iea.org/reports/global-energy-co2-status-report-2019/emissions)的全球平均值。
- en: 'Can be installed with pip:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过 pip 安装：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The usage is simple as you can see in the example below:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 使用方法如下面的示例所示：
- en: 'It has also the capability to gather and store logs in a defined directory:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 它还具备在指定目录中收集和存储日志的能力：
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Now that we have an idea about CodeCarbon and CarbonTracker we are going to
    use them in a Vertex AI Pipeline.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对 CodeCarbon 和 CarbonTracker 有了一定了解，接下来我们将在 Vertex AI Pipeline 中使用它们。
- en: II. Case study with Vertex AI Pipelines👷
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: II. 使用 Vertex AI Pipelines 的案例研究👷
- en: The fun part begins right now 😄
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 有趣的部分现在开始 😄
- en: Before proceeding with the Vertex AI Pipelines, I invite you to read [**my article**](https://medium.com/towards-data-science/how-to-set-up-custom-vertex-ai-pipelines-step-by-step-467487f81cad)
    which shows how to use Vertex AI Pipelines.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续 Vertex AI Pipelines 之前，我邀请你阅读[**我的文章**](https://medium.com/towards-data-science/how-to-set-up-custom-vertex-ai-pipelines-step-by-step-467487f81cad)，该文章展示了如何使用
    Vertex AI Pipelines。
- en: 'Next, I will demonstrate how to track the carbon footprint in two scenarios:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我将演示如何在两种场景中跟踪碳足迹：
- en: 1\. Supervised machine learning with CodeCarbon only (CarbonTracker supports
    only deep learning).
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1\. 仅使用 CodeCarbon 进行的监督学习（CarbonTracker 仅支持深度学习）。
- en: 2\. Deep learning with CodeCarbon & CarbonTracker.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2\. 使用 CodeCarbon 和 CarbonTracker 进行深度学习。
- en: '*1\. Carbon Footprint on supervised machine learning on CPU*'
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*1\. CPU 上监督学习的碳足迹*'
- en: We are going to track the carbon emissions while training a Random Forest algorithm
    to **“*Predict the wine quality*”.** The data is downloaded from [UCI Machine
    Learning Repository](https://archive.ics.uci.edu/ml/datasets/wine+quality) @source
    [Cortez et al., 2009]. Check the section [The Use Case](https://medium.com/towards-data-science/how-to-set-up-custom-vertex-ai-pipelines-step-by-step-467487f81cad)
    in my article for more details on the dataset. The notebook is available on [GitHub](https://github.com/anabild/mlops/tree/main/notebook).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将跟踪训练随机森林算法以**“*预测葡萄酒质量*”**时的碳排放。数据从[UCI 机器学习库](https://archive.ics.uci.edu/ml/datasets/wine+quality)下载，@source
    [Cortez 等, 2009]。有关数据集的更多细节，请查看我的文章中的[用例](https://medium.com/towards-data-science/how-to-set-up-custom-vertex-ai-pipelines-step-by-step-467487f81cad)部分。笔记本可在[GitHub](https://github.com/anabild/mlops/tree/main/notebook)上获取。
- en: 'To measure the carbon emissions during training we need to modify the `train_winequality`
    custom Kubeflow component in the notebook as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测量训练期间的碳排放，我们需要按如下方式修改笔记本中的 `train_winequality` 自定义 Kubeflow 组件：
- en: Add `codecarbon`to `packages_to_install`list.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 `codecarbon` 添加到 `packages_to_install` 列表中。
- en: Add a metric to track the value of the CO2 estimations `kpi_co2:Output[Metrics].`
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加一个指标以跟踪 CO2 估算值 `kpi_co2:Output[Metrics].`
- en: Import `OfflineEmissionsTracker` to use the offline mode (no internet connection
    on the setup).
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入 `OfflineEmissionsTracker` 以使用离线模式（设置时没有互联网连接）。
- en: Instantiate the codecarbon tracker `tracker = OfflineEmissionsTracker(country_iso_code=”BEL”).`
    BEL stands for Belgium. Pay attention that the country should match the selected
    Google Cloud region, `europe-west1` in our case.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实例化 codecarbon 跟踪器 `tracker = OfflineEmissionsTracker(country_iso_code=”BEL”).`
    BEL 代表比利时。注意国家代码应与所选的 Google Cloud 区域匹配，在我们的例子中是 `europe-west1`。
- en: Start tracking with `tracker.start().`
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `tracker.start().` 开始跟踪。
- en: Start training the model using .fit() method.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 .fit() 方法开始训练模型。
- en: Stop tracking with `tracker.stop()`
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `tracker.stop()` 停止跟踪
- en: Log the emissions `kpi_co2.log_metric(“emissions”, float(emissions)).`
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记录排放 `kpi_co2.log_metric(“emissions”, float(emissions)).`
- en: See below my example.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 请参见下方我的示例。
- en: Once you update the `train_winequality` component and run again the notebook
    you should see the `kpi_co2` metric artifact on the pipeline graph.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你更新 `train_winequality` 组件并重新运行笔记本，你应该会在管道图上看到 `kpi_co2` 指标工件。
- en: '![](../Images/472f269f1a098b40451796a2a78c2caa.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/472f269f1a098b40451796a2a78c2caa.png)'
- en: image by the author
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Then, go under the NODE INFO tab to check the value of the estimation of the
    CO2 emissions in kg/kWh.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，进入 NODE INFO 标签以检查 CO2 排放估算值（以 kg/kWh 为单位）。
- en: '![](../Images/1fb66273dede602228515c1be85dc6bd.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1fb66273dede602228515c1be85dc6bd.png)'
- en: ❗️ Be aware that to create a Vertex AI Pipeline without monitoring until completion
    you can use **submit** instead of **run**.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: ❗️ 请注意，要创建一个 Vertex AI Pipeline 并在完成之前不进行监控，你可以使用 **submit** 而不是 **run**。
- en: Now let’s do the exercise using a deep-learning algorithm.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们使用深度学习算法进行练习。
- en: '**2\. Carbon Footprint using deep learning on GPU**'
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**2. 碳足迹使用 GPU 上的深度学习**'
- en: In this exercise, we are going to train a deep-learning model using [Keras](https://keras.io/)
    (open-source Python deep-learning library) and [Tensorflow](https://www.tensorflow.org/)
    (open-source machine learning framework). The goal is to determine if a photo
    includes any of the labels listed in Table 1\. To achieve this we perform image
    classification using a custom *Convolutional Neural Networks* (CNN) architecture.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将使用 [Keras](https://keras.io/)（开源 Python 深度学习库）和 [Tensorflow](https://www.tensorflow.org/)（开源机器学习框架）训练深度学习模型。目标是确定照片是否包含表
    1 中列出的任何标签。为此，我们使用自定义的 *卷积神经网络*（CNN）架构进行图像分类。
- en: '**2.1 Data description**'
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**2.1 数据描述**'
- en: 'We use the Fashion-MNIST held by Zalando SE dataset available in Keras licensed
    under the [MIT license](https://github.com/zalandoresearch/fashion-mnist/blob/master/LICENSE).
    It includes 60,000 images for training and 10.000 for testing. Each image is a
    28x28 grayscale of 10 different fashion categories labeled with one of the 10
    classes as follows:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用 Keras 提供的由 Zalando SE 提供的 Fashion-MNIST 数据集，该数据集基于[MIT 许可证](https://github.com/zalandoresearch/fashion-mnist/blob/master/LICENSE)。它包括
    60,000 张用于训练的图片和 10,000 张用于测试的图片。每张图片都是一个 28x28 的灰度图像，属于 10 种不同的时尚类别，并标记为以下 10
    个类别之一：
- en: '![](../Images/8726bb05aeb51ca2fd2d1963e3ac4a9e.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8726bb05aeb51ca2fd2d1963e3ac4a9e.png)'
- en: 'Table 1: Contains the labels of the photos.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 表 1：包含照片的标签。
- en: 2.2 Set up the environment
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.2 设置环境
- en: Vertex AI Workbench
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vertex AI Workbench
- en: Python 3
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 3
- en: Kubeflow pipeline components
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kubeflow 管道组件
- en: Pre-build images using NVIDIA TESLA T4 GPU
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 NVIDIA TESLA T4 GPU 预构建镜像
- en: Tensorflow 2.11
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tensorflow 2.11
- en: Codecarbon
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Codecarbon
- en: CarbonTracker
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CarbonTracker
- en: Then install Google Cloud Pipeline Components and TensorFlow with pip.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 然后使用 pip 安装 Google Cloud Pipeline 组件和 TensorFlow。
- en: '[PRE5]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Import the libraries.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 导入库。
- en: Define global variables.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 定义全局变量。
- en: 2.3 Create a custom deep-learning component
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.3 创建自定义深度学习组件
- en: I’ll be using as base image the `tf-gpu.2–11:latest` pre-built docker image
    that contains TensorFlow and GPU in Artifact Registry. See the available pre-built
    images for [prediction](https://console.cloud.google.com/artifacts/docker/vertex-ai/europe/prediction)
    and [training](https://console.cloud.google.com/artifacts/docker/vertex-ai/europe/training)
    in Europe. Note that Google released pre-build images also the [Container Registry.](https://console.cloud.google.com/gcr/images/deeplearning-platform-release/GLOBAL)
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我将使用`tf-gpu.2–11:latest`作为基础镜像，该镜像包含TensorFlow和GPU，存储在Artifact Registry中。请参见欧洲的[预测](https://console.cloud.google.com/artifacts/docker/vertex-ai/europe/prediction)和[训练](https://console.cloud.google.com/artifacts/docker/vertex-ai/europe/training)的预构建镜像。请注意，Google还在[Container
    Registry](https://console.cloud.google.com/gcr/images/deeplearning-platform-release/GLOBAL)中发布了预构建镜像。
- en: 'To enable `codecarbon` and `carbontracker` we are going to proceed as follows:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 为了启用`codecarbon`和`carbontracker`，我们将按如下步骤进行：
- en: Add `codecarbon and carbontracker`to `packages_to_install`list.
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将`codecarbon和carbontracker`添加到`packages_to_install`列表中。
- en: Add metric to track the estimations `kpi_co2:Output[Metrics].`
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加度量来跟踪估计值`kpi_co2:Output[Metrics]`。
- en: Import CarbonTracker and the log parser.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入CarbonTracker和日志解析器。
- en: Define a directory to redirect the logs of the `carbontracker` e.g `DIR_LOG="log"`
    .
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义一个目录来重定向`carbontracker`的日志，例如`DIR_LOG="log"`。
- en: Load train images and rescale them.
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加载训练图像并进行缩放。
- en: Use `keras.Sequential` API to define the layers of your CNN.
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`keras.Sequential` API来定义CNN的层。
- en: Compile the model.
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编译模型。
- en: Start `codecarbon` and specify the ISO code NLD for Netherlands region.
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动`codecarbon`并指定荷兰地区的ISO代码NLD。
- en: Specifythe number of epochs and the log directory for carbontracker `carbontracker
    = CarbonTracker(epochs=epochs, log_dir=”./”+DIR_LOG+”/”).`
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指定epochs的数量和carbontracker的日志目录`carbontracker = CarbonTracker(epochs=epochs,
    log_dir=”./”+DIR_LOG+”/”)`。
- en: Start carbontracker `carbontracker.epoch_start().`
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动carbontracker `carbontracker.epoch_start()`。
- en: Fit model on the training data.
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在训练数据上拟合模型。
- en: 'Stop carbontracker : `carbontracker.epoch_end()` & codecarbon `codecarbon.stop().`'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 停止carbontracker：`carbontracker.epoch_end()` & codecarbon `codecarbon.stop()`。
- en: Log the emissions values and save the model.
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记录排放值并保存模型。
- en: 2.4 Evaluate the model
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.4 评估模型
- en: The evaluation component relies on a pre-compiled GPU Tensorflow 2.11 base image.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 评估组件依赖于预编译的GPU Tensorflow 2.11基础镜像。
- en: It takes in input the trained model. Then it loads the `fashion.mist` test dataset.
    It resizes and reshapes the test images, evaluates the model, and computes the
    accuracy, loss, and confusion matrix.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 输入经过训练的模型。然后加载`fashion.mist`测试数据集。它调整和重塑测试图像，评估模型，并计算准确率、损失和混淆矩阵。
- en: 2.5 Create and submit the pipeline
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.5 创建并提交管道
- en: The pipeline facilitates the orchestration of a serverless workflow. Our pipeline
    has two steps training (deep_learning_mist_task) and evaluation (model _evaluation_task).
    It takes as input a few parameters like the learning_rate, the number of epochs,
    the batch_size, the API endpoint, the project id, and the serving URI.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 该管道促进了无服务器工作流的编排。我们的管道有两个步骤：训练（deep_learning_mist_task）和评估（model_evaluation_task）。它接受一些参数，如learning_rate、epochs的数量、batch_size、API端点、项目ID和服务URI。
- en: 'To specify the machine configuration for a pipeline step use:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 要为管道步骤指定机器配置，请使用：
- en: '[PRE6]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The available values for GPU_TYPE are:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: GPU_TYPE的可用值包括：
- en: NVIDIA_TESLA_A100,
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NVIDIA_TESLA_A100，
- en: NVIDIA_TESLA_K80,
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NVIDIA_TESLA_K80，
- en: NVIDIA_TESLA_P4,
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NVIDIA_TESLA_P4，
- en: NVIDIA_TESLA_P100,
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NVIDIA_TESLA_P100，
- en: NVIDIA_TESLA_T4,
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NVIDIA_TESLA_T4，
- en: NVIDIA_TESLA_V10.
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NVIDIA_TESLA_V10。
- en: The GPU_LIMIT is a positive number indicating the GPU limit.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: GPU_LIMIT是一个表示GPU限制的正数。
- en: 'Once the pipeline is executed you should see the following graph:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 执行管道后，你应该会看到以下图表：
- en: '![](../Images/3b69ee5a1987773220d77ba6dbc929ca.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3b69ee5a1987773220d77ba6dbc929ca.png)'
- en: image by the Author
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Go to the ***Summary*** tab to see the estimation of the CO2 emissions during
    training.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 转到***总结***选项卡以查看训练期间CO2排放的估算值。
- en: '![](../Images/03640f96a2246f6a34e2668a7c9a9617.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/03640f96a2246f6a34e2668a7c9a9617.png)'
- en: image by the Author
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: We can notice that the CO2 estimations are different because the energy consumption
    formula differs between the two libraries. To be honest, I prefer Codecarbon as
    it has more compatibility and better documentation.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以注意到CO2估算值不同，因为两个库之间的能耗公式不同。说实话，我更喜欢Codecarbon，因为它有更好的兼容性和文档。
- en: III. Few practices to reduce Carbon Footprint 💡
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: III. 减少碳足迹的几个实践💡
- en: I suggest taking into account some practical considerations while designing
    AI algorithms.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议在设计AI算法时考虑一些实际问题。
- en: Consider integrating carbon footprint into the **entire lifecycle of a machine
    learning model**, from data collection to model deployment.
  id: totrans-122
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 考虑将碳足迹整合到**机器学习模型的整个生命周期**中，从数据收集到模型部署。
- en: ''
  id: totrans-123
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Look for machines equipped with appropriate processors** (CPU/GPU/TPU)s that
    fit your use case.'
  id: totrans-124
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**寻找配备适当处理器**（CPU/GPU/TPU）的机器，以适应你的用例。'
- en: ''
  id: totrans-125
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Choose a cloud region with a low carbon footprint.** For instance, Google
    Cloud Platform indicates for each available region if it is low CO2.'
  id: totrans-126
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**选择碳足迹较低的云区域**。例如，Google Cloud Platform 会指示每个可用区域是否低 CO2。'
- en: ''
  id: totrans-127
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Integrate carbon footprint trackers** in your ML ecosystem.'
  id: totrans-128
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在你的机器学习生态系统中**集成碳足迹跟踪器**。
- en: ''
  id: totrans-129
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Select efficient model architecture**s. Have a look at [sparse models](https://ai.googleblog.com/2021/03/constructing-transformers-for-longer.html)
    that may reduce energy consumption.'
  id: totrans-130
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**选择高效的模型架构**。查看可能减少能耗的[sparse models](https://ai.googleblog.com/2021/03/constructing-transformers-for-longer.html)。'
- en: ''
  id: totrans-131
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Encourage teams to use the cloud**, as it has been shown to be [more energy-efficient](https://www.morganclaypool.com/doi/10.2200/S00874ED3V01Y201809CAC046).'
  id: totrans-132
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**鼓励团队使用云**，因为研究表明它[更具能源效率](https://www.morganclaypool.com/doi/10.2200/S00874ED3V01Y201809CAC046)。'
- en: ''
  id: totrans-133
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Use pre-built models** as much as possible rather than training from scratch.'
  id: totrans-134
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 尽可能**使用预构建模型**，而不是从头开始训练。
- en: ''
  id: totrans-135
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Share datasets, feature stores, and pre-build** specialized models across
    the organization.'
  id: totrans-136
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**在组织中共享数据集、特征库和预构建**的专业模型。'
- en: Key takeaways
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关键要点
- en: In conclusion, I recommend using Codecarbon as it performs well on both machine
    learning (CPUs) and deep learning algorithms (GPUs) and has more infrastructure
    compatibility. Regarding CarbonTraker, I encountered difficulties with getting
    it to run on Google Cloud CPUs getting CPUs unsupported errors, leading to wasted
    time. If you plan to use a GPU keep in mind to verify the GPU [availabilit](https://cloud.google.com/compute/docs/gpus/gpu-regions-zones)y
    before using it. Additionally, I strongly suggest checking t[he GPU pricing](https://cloud.google.com/compute/gpus-pricing#gpu-pricing)
    to aim for lower costs. Lastly, it’s important to remember that reducing carbon
    footprint in machine learning is a continuous process and new techniques and technologies
    are being constantly developed to address it. Make sure to keep track of updates
    regarding carbon footprint reduction strategies.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，我推荐使用Codecarbon，因为它在机器学习（CPU）和深度学习算法（GPU）上表现良好，并且具有更好的基础设施兼容性。关于CarbonTraker，我在Google
    Cloud CPU上遇到了无法运行的错误，导致浪费时间。如果你打算使用GPU，记得在使用前验证GPU[可用性](https://cloud.google.com/compute/docs/gpus/gpu-regions-zones)。此外，我强烈建议检查[GPU定价](https://cloud.google.com/compute/gpus-pricing#gpu-pricing)以期望更低的成本。最后，重要的是要记住，减少机器学习中的碳足迹是一个持续的过程，新技术和技术不断发展以应对这一问题。确保跟踪有关碳足迹减少策略的更新。
- en: The notebooks are available on my [GitHub](https://github.com/anabild/mlops/tree/main/notebook)
    account.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 笔记本可以在我的[GitHub](https://github.com/anabild/mlops/tree/main/notebook)账户中找到。
- en: I hope you enjoyed the article.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你喜欢这篇文章。
- en: Thank you for reading!
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 谢谢阅读！
- en: Don’t forget to [subscribe](https://medium.com/subscribe/@anna.bildea) if you
    want to get my future stories in your inbox.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想在收件箱中收到我的未来故事，别忘了[订阅](https://medium.com/subscribe/@anna.bildea)。
- en: '*If you enjoy reading my story and want to support me as a writer, consider
    signing up to become a Medium member and gain access to thousands of Data Engineering
    and Data Science articles.*'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你喜欢阅读我的故事并希望支持我成为作者，请考虑注册成为Medium会员，并获得数千篇数据工程和数据科学文章的访问权限。*'
- en: '[](https://medium.com/@anna.bildea/membership?source=post_page-----3d6bc9695e7b--------------------------------)
    [## Join Medium with my referral link — Bildea Ana'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@anna.bildea/membership?source=post_page-----3d6bc9695e7b--------------------------------)
    [## 使用我的推荐链接加入Medium — Bildea Ana'
- en: As a Medium member, a portion of your membership fee goes to writers you read,
    and you get full access to every story…
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 作为Medium会员，你的会员费的一部分将用于你阅读的作者，并且你可以完全访问每一个故事……
- en: medium.com](https://medium.com/@anna.bildea/membership?source=post_page-----3d6bc9695e7b--------------------------------)
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: medium.com](https://medium.com/@anna.bildea/membership?source=post_page-----3d6bc9695e7b--------------------------------)
- en: '*Find me on* [*LinkedIn*](https://www.linkedin.com/in/ana-bildea-phd-2339b728/)
    *and* [Twitter](https://twitter.com/AnaBildea)!'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '*在* [*LinkedIn*](https://www.linkedin.com/in/ana-bildea-phd-2339b728/) *和*
    [Twitter](https://twitter.com/AnaBildea) *上找到我！*'
- en: See my collection of MLops articles
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 查看我的MLops文章集合
- en: '![Ana Bildea, PhD](../Images/acaa243e5f1e9f9254c32b65042c822b.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![Ana Bildea, PhD](../Images/acaa243e5f1e9f9254c32b65042c822b.png)'
- en: '[Ana Bildea, PhD](https://medium.com/@anna.bildea?source=post_page-----3d6bc9695e7b--------------------------------)'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '[安娜·比尔迪亚博士](https://medium.com/@anna.bildea?source=post_page-----3d6bc9695e7b--------------------------------)'
- en: MLOps - AI in Production
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MLOps - AI在生产中
- en: '[View list](https://medium.com/@anna.bildea/list/mlops-ai-in-production-04b6c81c50c8?source=post_page-----3d6bc9695e7b--------------------------------)4
    stories![](../Images/8fbedcb9f3f75894caff649172adece1.png)![](../Images/d5014b3b3843fc4b2172bef517cccaa4.png)![](../Images/2dba051abf51711268415c3f1e055a60.png)'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '[查看列表](https://medium.com/@anna.bildea/list/mlops-ai-in-production-04b6c81c50c8?source=post_page-----3d6bc9695e7b--------------------------------)4
    个故事![](../Images/8fbedcb9f3f75894caff649172adece1.png)![](../Images/d5014b3b3843fc4b2172bef517cccaa4.png)![](../Images/2dba051abf51711268415c3f1e055a60.png)'
