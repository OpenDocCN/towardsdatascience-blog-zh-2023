- en: Decision Tree Regressor — A Visual Guide with Scikit Learn
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/decision-tree-regressor-a-visual-guide-with-scikit-learn-2aa9e01f5d7f](https://towardsdatascience.com/decision-tree-regressor-a-visual-guide-with-scikit-learn-2aa9e01f5d7f)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/1c7a634936cbcb80db53a4f5a26d81d1.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [niko photos](https://unsplash.com/@niko_photos?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Understanding Decision Trees without Math
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@angela.shi?source=post_page-----2aa9e01f5d7f--------------------------------)[![Angela
    and Kezhan Shi](../Images/a89d678f2f3887c0c2ff3928f9d767b4.png)](https://medium.com/@angela.shi?source=post_page-----2aa9e01f5d7f--------------------------------)[](https://towardsdatascience.com/?source=post_page-----2aa9e01f5d7f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----2aa9e01f5d7f--------------------------------)
    [Angela and Kezhan Shi](https://medium.com/@angela.shi?source=post_page-----2aa9e01f5d7f--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----2aa9e01f5d7f--------------------------------)
    ·5 min read·Mar 27, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: In this article, we will implement the DecisionTreeRegressor from scikit-learn
    in python to visualize how this model works. We will not use any mathematical
    terms, but we will use visualization to demonstrate how a decision tree regressor
    works, and the impact of some hyperparameters.
  prefs: []
  type: TYPE_NORMAL
- en: For the context, a Decision Tree Regressor tries to predict a continuous target
    variable by cutting the feature variables into small zones, and each zone will
    have one prediction. We will begin with one continuous variable and then two continuous
    variables. We will not use categorical variables since for decision trees, continuous
    variables are ultimately treated like categorical data when the splits are made.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will mainly study the impact of two hyperparameters that can be quite intuitive
    to understand: max depth and min_samples_leaf. Other hyperparameters are similar,
    the main idea is to limit the size of the rules.'
  prefs: []
  type: TYPE_NORMAL
- en: One Non-Linear variable
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let’s use some simple data, with only feature variable x.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: And we can visualize the data in an (x,y) plot
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'And in the following image, for the first cut, we can visually guess two possible
    splits as shown below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b58bce69f055039ca6a6f37874b689b1.png)'
  prefs: []
  type: TYPE_IMG
- en: Decision tree regressor visualization — image by author
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, the Decision Tree Regressor model determines exactly which split is better.
    Let’s specify the argument max_depth=1, to get only one split:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/97af2310fceac27e1a94629d551e194f.png)'
  prefs: []
  type: TYPE_IMG
- en: Decision tree regressor visualization — image by author
  prefs: []
  type: TYPE_NORMAL
- en: 'If we decide to get 4 regions, we can try max_depth=2, and we get:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5d66c6e3292184eaccdcec67b5e190ad.png)'
  prefs: []
  type: TYPE_IMG
- en: Decision tree regressor visualization — image by author
  prefs: []
  type: TYPE_NORMAL
- en: 'We can then visualize how the max_depth hyperparameter impacts the final model
    with the image below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ce425193980e93660c02103190c00dbc.png)'
  prefs: []
  type: TYPE_IMG
- en: Decision tree regressor visualization — image by author
  prefs: []
  type: TYPE_NORMAL
- en: We can also plot the same with another hyperparameter min_samples_leaf, which
    is the minimum number of observations that should be in the final regions (that
    we call leaves because at the end of a tree’s ramification, we find leaves!)
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d58646d30f99a295c1f1ef77d0073a20.png)'
  prefs: []
  type: TYPE_IMG
- en: Decision tree regressor visualization — image by author
  prefs: []
  type: TYPE_NORMAL
- en: One “Linear” Feature
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Decision Tree Regressor is a non-linear regressor. We can see how it behaves/models
    the data from the previous examples. What happens to “linear” data?
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s take this simple example of perfectly linear data:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'You can see that the relationship is very simple: y = x!'
  prefs: []
  type: TYPE_NORMAL
- en: If we use the classic decision tree visualization, you may immediately see how
    the model behaves.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0ea68877d86d3bc534a1c0ec93e4f674.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, we can create the same plot below. And sometimes people are surprised to
    SEE that a Decision Tree divides the perfect line into regions and gives a few
    values for the predictions, even for a linear dataset.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/92b8a490a9d1f32e66712b9c5ba74f35.png)'
  prefs: []
  type: TYPE_IMG
- en: Then people would comment by saying that the model is not adapted at all for
    this dataset, and we should not use it.
  prefs: []
  type: TYPE_NORMAL
- en: Now, the truth is that you can not know the behavior of the dataset in advance.
    And that is what the No Free Lunch Theory is all about.
  prefs: []
  type: TYPE_NORMAL
- en: And in practice, you can apply several models such as linear regression and
    decision trees. If there is one model that is significant more performant than
    another, then you can conclude about the linear vs. non-linear behavior of the
    data.
  prefs: []
  type: TYPE_NORMAL
- en: Two continuous features
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For two continuous variables, we have to create a 3D plot.
  prefs: []
  type: TYPE_NORMAL
- en: First, let’s generate some data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Then can create the model:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Finally, we can create the 3D plot with plotly
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'We can compare different values of depth as shown in the image below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/09ea949b7b5c69c74fc3f7487fef5f52.png)'
  prefs: []
  type: TYPE_IMG
- en: Decision tree regressor visualization — image by author
  prefs: []
  type: TYPE_NORMAL
- en: If you create a plot with python, you can manipulate it to see the visualization
    from different angles.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Visualizing the prediction of a model for simple datasets is an excellent way
    to understand how the models work.
  prefs: []
  type: TYPE_NORMAL
- en: In the case of decision trees, they already are quite intuitive to understand
    with the visualization of the rules in form of a tree. The classic visualization
    with x,y (and z) can be complementary.
  prefs: []
  type: TYPE_NORMAL
- en: We also can SEE that the model is highly non-linear. And the dataset does not
    need any scaling.
  prefs: []
  type: TYPE_NORMAL
- en: 'I write about machine learning and data science and I explain complex concepts
    in a clear way. Please follow me with the link below and get full access to my
    articles: [https://medium.com/@angela.shi/membership](https://medium.com/@angela.shi/membership)'
  prefs: []
  type: TYPE_NORMAL
