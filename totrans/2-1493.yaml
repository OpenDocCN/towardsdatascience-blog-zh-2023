- en: Mastering Prompt Engineering to Unleash ChatGPT‚Äôs Potential
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[https://towardsdatascience.com/mastering-prompt-engineering-to-unleash-chatgpts-potential-9578a3fe799c](https://towardsdatascience.com/mastering-prompt-engineering-to-unleash-chatgpts-potential-9578a3fe799c)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Explore best practices and enhance your prompts for better results
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://idilismiguzel.medium.com/?source=post_page-----9578a3fe799c--------------------------------)[![Idil
    Ismiguzel](../Images/6846628535770a9f3e13ebb555e82abd.png)](https://idilismiguzel.medium.com/?source=post_page-----9578a3fe799c--------------------------------)[](https://towardsdatascience.com/?source=post_page-----9578a3fe799c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----9578a3fe799c--------------------------------)
    [Idil Ismiguzel](https://idilismiguzel.medium.com/?source=post_page-----9578a3fe799c--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ¬∑Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----9578a3fe799c--------------------------------)
    ¬∑11 min read¬∑Jun 24, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/52dd3ad43a95bc716d909e6ec941534c.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [L√©onard Cotte](https://unsplash.com/@ettocl?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Prompt engineering has quickly become a part of our lives, just like a breeze,
    all thanks to ChatGPT and other large language models. Although it‚Äôs not a completely
    new field, it‚Äôs currently experiencing great popularity. That said, I think now
    is the perfect moment to enhance your skills and become better at prompt engineering.
  prefs: []
  type: TYPE_NORMAL
- en: If you‚Äôre wondering what prompt engineering is all about, let‚Äôs just ask ChatGPT!
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/697309aeec7d823ecb2db576f671d729.png)'
  prefs: []
  type: TYPE_IMG
- en: According to [Google Trends data](https://trends.google.com/trends/explore?q=prompt+engineering&hl=en-GB),
    ‚Äúprompt engineering‚Äù reached its peak in search interest in the past few months.
    Users who searched for ‚Äúprompt engineering‚Äù were interested in follow-up topics
    such as ‚Äúcourse,‚Äù ‚Äúlearning,‚Äù and ‚Äúsalary‚Äù ü§ë. There is a breakout in the number
    of queries for ‚Äúprompt engineering courses‚Äù.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7938b16a8fc169364572b20b8c087d02.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Google Trends in the past 12 months for ‚Äúprompt engineering‚Äù](https://trends.google.com/trends/explore?q=prompt+engineering&hl=en-GB).
    A value of 100 represents the highest level of popularity for the term. Here I‚Äôve
    filtered for the past 12 months, but you can adjust it.'
  prefs: []
  type: TYPE_NORMAL
- en: Regardless of whether you‚Äôre utilizing prompt engineering for simple daily queries,
    finding recipe inspirations, or planning your next trip using the web user interface
    (e.g. ChatGPT UI), or if you‚Äôre involved in developing applications that access
    large language model APIs (e.g. ChatGPT API), improving your prompt writing skills
    will significantly enhance the quality of responses you get. Understanding prompt
    engineering also provides useful insights into the workings of large language
    models and their capabilities and limitations.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, I will delve into the insights I gained and provide some examples
    to show key concepts. Let‚Äôs get started! üí¨ ü§ñ
  prefs: []
  type: TYPE_NORMAL
- en: Getting started with prompt engineering
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Prompt engineering plays an important role in getting the most out of Large
    Language Models (LLMs). When prompts are written well, responses get more accurate,
    relevant, and useful.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8f5aa0255d6bcbc44ab0098d7bac3c34.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Here are some common sense guidelines while writing prompts:'
  prefs: []
  type: TYPE_NORMAL
- en: '**üîñ Be clear and specific:** Clearly communicate what you expect from the model
    and provide specific instructions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**üîñ Include essential content and desired output style:** Include all the necessary
    information and specify the format or style you want the response to be in.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**üîñ Provide examples whenever possible:** Including examples can assist the
    model in understanding desired response structure.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'There are also some important considerations to keep in mind:'
  prefs: []
  type: TYPE_NORMAL
- en: üìçResponses may contain errors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: üìçResponses to the same prompt can vary
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: üìçModel‚Äôs knowledge is based on the time when training data was collected (e.g.
    ChatGPT‚Äôs knowledge cutoff date is September 2021)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Five super powerful prompt patterns
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We will now cover five very important prompt patterns that you can follow while
    interacting with LLMs.
  prefs: []
  type: TYPE_NORMAL
- en: '**1\. Persona pattern**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Using persona pattern, you can ask ChatGPT to `act as a specific Persona and
    perform a specific task.`
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/722b9167827cf4aef108404442f3a3d3.png)![](../Images/9f043f19c95d5398bead888c39bf2197.png)![](../Images/205615c5dd185738b9b9d00ee027cec9.png)'
  prefs: []
  type: TYPE_IMG
- en: Not bad at all! (German language learning plan by ChatGPT.)
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also reverse engineer this pattern and ask ChatGPT to assume you are
    Persona X. For example: ‚ÄúCreate a German language learning plan for me and assume
    I have a degree in Linguistics.‚Äù'
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Question refinement pattern
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Using the question refinement pattern, you can request ChatGPT to `generate
    follow-up questions and use the answers for those questions to accurately answer
    the initial question.`
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/76de7b79af467bc3d2e075d116a123d6.png)![](../Images/11caa333936da420ec00c7e2a609c9e6.png)'
  prefs: []
  type: TYPE_IMG
- en: Prompt writing with question refinement pattern
  prefs: []
  type: TYPE_NORMAL
- en: Using this method, we can gain insights about which factors ChatGPT considers
    when composing an answer. We can also provide additional context beyond what was
    included in the initial prompt.
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Template pattern
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We can provide a template and instruct ChatGPT to generate a response following
    the template. To demonstrate, I will provide several paragraphs from the [Wikipedia
    page on Large Language Models](https://en.wikipedia.org/wiki/Large_language_model).
    Using those paragraphs, ChatGPT will generate five questions & answers following
    the template.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c7ac4a2e944da257019b966cc5e5c72e.png)![](../Images/d856af0f562f73de92e499fe09c3c1c7.png)'
  prefs: []
  type: TYPE_IMG
- en: Using markdown you can format the text; such as ***word*** for **word**
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Zero-shot prompting
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As we know, LLMs can follow instructions and they are capable of learning patterns
    from the prompt and follow that in the response. Here is an example task for ***zero-shot
    learning***, where we can teach how to classify classes that the model hasn‚Äôt
    encountered before. Let‚Äôs take an example from the [Disneyland customer reviews
    datase](https://www.kaggle.com/datasets/arushchillar/disneyland-reviews)t and
    ask the model to determine the sentiment of a specific review.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/cc64a26837309cd770ebbf8e240de576.png)'
  prefs: []
  type: TYPE_IMG
- en: As you can see the response is ‚Äúpositive‚Äù.
  prefs: []
  type: TYPE_NORMAL
- en: 5\. Chain-of-thought prompting
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Rather than providing just the final answer, especially for math problems, chain-of-thought
    prompting aims to make step-by-step explanations.
  prefs: []
  type: TYPE_NORMAL
- en: In the following example, I posed a trick question to ChatGPT, and it initially
    made a mistake in its response. However, when I requested ChatGPT to provide its
    full reasoning leading up to the answer, it was able to deliver the correct solution.
  prefs: []
  type: TYPE_NORMAL
- en: This approach is also a great example to understand how large language models
    generate text by predicting each subsequent word.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/55d921f55aa3eceecdb6ab7b7436026f.png)'
  prefs: []
  type: TYPE_IMG
- en: As you can see the answer is incorrect. It should be 9 gummies and not 8\. Now
    we will solve this by improving our prompt and making sure ChatGPT follows a template
    where it can make more assessments.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/12456484b3823d35bcefb2c21d16caab.png)'
  prefs: []
  type: TYPE_IMG
- en: When ChatGPT needs to write a reasoning walkthrough it finds the correct answer.
  prefs: []
  type: TYPE_NORMAL
- en: With open-ended responses, we only see the destination; with chain-of-thought
    prompting, we understand the journey. ü§ì
  prefs: []
  type: TYPE_NORMAL
- en: Utilizing ChatGPT API for building data applications
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 1\. Summarize text and extract information
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Summarizing information can be a time-saving technique, especially when you
    need to extract key points or specific details. With the ChatGPT API, we can leverage
    its capabilities to generate summaries for large volumes of text.
  prefs: []
  type: TYPE_NORMAL
- en: Taking the example of the Disneyland reviews dataset, which consists of 42,000
    reviews, we can ease the evaluation process by utilizing summaries. Although I
    will demonstrate with just one review, the approach can easily be scaled to handle
    larger quantities of text.
  prefs: []
  type: TYPE_NORMAL
- en: To use ChatGPT API, you will need to login into your OpenAI account and generate
    your API key by navigating to ‚ÄúView API Keys‚Äù section from the right top corner.
    Once you created your API key, you need to store it in a safe place and not display
    it.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: We will now generate a helper function that will take our prompt and return
    a completion for that prompt.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]{review}[PRE4]'
  prefs: []
  type: TYPE_NORMAL
- en: Disneyland Hong Kong is too small with few rides and attractions. Food and souvenirs
    are expensive. Good for small children and first-time visitors. Crowded with rude
    people and poorly managed.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The summary is pretty great and around 30 words as we asked in the prompt. If
    we want we can also focus on a specific element in the summaries e.g. price and
    value.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]{review}'''''''
  prefs: []
  type: TYPE_NORMAL
- en: '"""'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: response = get_completion(prompt)
  prefs: []
  type: TYPE_NORMAL
- en: print(response)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: prompt = f"""
  prefs: []
  type: TYPE_NORMAL
- en: 'Identify the following items from the review:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- Sentiment (positive or negative)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- Which Disney park was reviewed'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- Is the reviewer expressing disappointment? (true or false)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- Is the reviewer expressing happiness? (true or false)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Format your response as a JSON object with
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '"Sentiment", "Park", "Anger" and "Happiness" as the keys.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Format the Anger and Happiness value as a boolean.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Keep the answers short.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Review: [PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '"""'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: response = get_completion(prompt)
  prefs: []
  type: TYPE_NORMAL
- en: print(response)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: prompt = f"""
  prefs: []
  type: TYPE_NORMAL
- en: Your task is to summarise the following review.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Summarize the review below in at most 10 words.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Print the summary in English, Italian and German
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Review: [PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '"""'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: response = get_completion(prompt)
  prefs: []
  type: TYPE_NORMAL
- en: print(response)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: prompt = f"""
  prefs: []
  type: TYPE_NORMAL
- en: Your task is to write an email reply to the customer.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Given the customer email delimited by [PRE11]{review}[PRE12]
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Dear valued customer,
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Thank you for taking the time to share your experience at Disneyland Hong Kong.
    We appreciate your feedback and are sorry to hear that your visit did not meet
    your expectations.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: We apologize for any inconvenience caused by the limited number of rides and
    attractions, as well as the higher prices for souvenirs, food, and tickets. We
    understand that these factors can impact your overall experience at the park.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: We are glad to hear that you found the food choices acceptable and that the
    parade was enjoyable. We also appreciate your feedback regarding the crowds and
    rude behavior of some guests. We take these concerns seriously and will work to
    improve our management of the park to ensure a more enjoyable experience for all
    guests.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: If you have any further concerns or would like to provide additional feedback,
    please do not hesitate to contact our customer service team at [insert contact
    information]. We value your feedback and hope to have the opportunity to provide
    a better experience for you in the future.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Thank you again for your review.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Best regards,
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: AI customer agent
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Good job, AI customer agent! ‚úâÔ∏è
  prefs: []
  type: TYPE_NORMAL
- en: What is next?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With the ever-expanding capabilities of Large Language Models and our proficiency
    in writing effective prompts, it becomes crucial to ensure that the content generated
    by AI models adheres to specific moderation guidelines and rules.
  prefs: []
  type: TYPE_NORMAL
- en: üåµIn my following article, I delve into OpenAI‚Äôs moderation endpoint, which allows
    us to assess content compliance with usage policies. I highly recommend checking
    it out to learn more about this content moderation!
  prefs: []
  type: TYPE_NORMAL
- en: '[](/enhance-content-moderation-with-openais-moderation-api-bb0b865d883b?source=post_page-----9578a3fe799c--------------------------------)
    [## Enhance Content Moderation with OpenAI‚Äôs Moderation API'
  prefs: []
  type: TYPE_NORMAL
- en: Seamlessly integrate a moderation endpoint into your pipelines with ChatGPT
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/enhance-content-moderation-with-openais-moderation-api-bb0b865d883b?source=post_page-----9578a3fe799c--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this article, we explored the best practices of prompt engineering using
    both the web UI and API. We discussed several effective prompt patterns, including
    persona patterns, question refinement, templates, zero-shot, and chain-of-thought
    prompting. Additionally, we delved into utilizing the ChatGPT API by generating
    our secret key and explored its capabilities in text summarization, translation,
    and expansion.
  prefs: []
  type: TYPE_NORMAL
- en: I hope this tutorial inspires you to use large language models to boost your
    creativity and productivity. I am sure, it can help you to generate ideas, gain
    new insights, solve complex problems ‚Äî and enhance your daily work at many levels.
    The possibilities are vast! ü§ñ‚ú®
  prefs: []
  type: TYPE_NORMAL
- en: üçì If you enjoy reading articles like this and wish to support my writing, you
    may consider [becoming a Medium member](https://idilismiguzel.medium.com/membership)!
    Medium members get full access to articles from all writers and if you use [my
    referral link](https://idilismiguzel.medium.com/membership), you will be directly
    supporting my writing.
  prefs: []
  type: TYPE_NORMAL
- en: üçì If you are already a member and interested to read my articles, you can [subscribe
    to be notified](https://medium.com/subscribe/@idilismiguzel) or [follow me on
    Medium](https://idilismiguzel.medium.com/). Let me know if you have any questions
    or suggestions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Additional resources I recommend after this article:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before writing this article, I finished two online courses focused on mastering
    prompt engineering. The first course, [ChatGPT Prompt Engineering for Developers](https://www.deeplearning.ai/short-courses/chatgpt-prompt-engineering-for-developers/)
    provided by DeepLearning.AI is a great resource especially if you are a developer
    and working with the APIs. The second course, [Prompt Engineering for ChatGPT](https://www.coursera.org/learn/prompt-engineering)
    offered by Coursera is really useful if you are writing prompts on the web UI.
    Most of the learnings in this article came from these two valuable resources,
    I highly recommend having a look if you are interested!
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[Google trends for prompt engineering](https://trends.google.com/trends/explore?q=prompt+engineering&hl=en-GB)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Disneyland customer reviews dataset](https://www.kaggle.com/datasets/arushchillar/disneyland-reviews),
    License: [CC0: Public Domain](https://creativecommons.org/publicdomain/zero/1.0/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[ChatGPT Prompt Engineering for Developers](https://www.deeplearning.ai/short-courses/chatgpt-prompt-engineering-for-developers/)
    course provided by DeepLearning.AI'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Prompt Engineering for ChatGPT](https://www.coursera.org/learn/prompt-engineering)
    offered by Coursera'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Header photo by [L√©onard Cotte](https://unsplash.com/@ettocl?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: All other images are by the Author
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
