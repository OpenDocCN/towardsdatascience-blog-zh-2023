["```py\nFastAPI-Azure-Container-Apps\n├─ fastapp\n│  └─ app.py\n├─ model\n│  ├─ heart-disease.joblib\n│  └─ train.py\n├─ data\n│  └─ heart-disease.csv\n├─ Dockerfile\n├─ requirements.txt\n└─ .dockerignore\n```", "```py\nimport pathlib\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom joblib import dump\n\nprint ('Load Data')\ndf = pd.read_csv(pathlib.Path('data/heart-disease.csv'))\ny = df.pop('condition')\nX = df.loc[:, ['age', 'sex', 'cp', 'trestbps', 'chol']].to_numpy()\n\nprint ('Train-Test Split')\nX_train, X_test, y_train, y_test = train_test_split(X,y, test_size = 0.2)\n\nprint ('Train Model')\ngbc = GradientBoostingClassifier()\ngbc.fit(X_train, y_train)\n\nprint ('Save Model')\ndump(gbc, pathlib.Path('model/heart-disease.joblib'))\n```", "```py\npython model/train.py\n```", "```py\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\nimport numpy as np\nfrom joblib import load\nimport pathlib\n\napp = FastAPI(title = 'Heart Disesase Prediction', version = '0.1.0')\nmodel = load(pathlib.Path('model/heart-disease.joblib'))\n\nclass ModelData(BaseModel):\n    age:int=30\n    sex:int=0\n    cp:int=2\n    trestbps:int=115\n    chol:int=0\n\nclass ResponseData(BaseModel):\n    prediction_result:float=0.1\n\n@app.post('/predict', response_model = ResponseData)\ndef predict(data:ModelData):\n    input_data = np.array([v for k,v in data.dict().items()]).reshape(1,-1)\n    prediction_result = model.predict_proba(input_data)[:,-1]\n\n    return {'prediction_result':prediction_result}\n```", "```py\n# CLI\nuvicorn fastapp.app:app --reload\n```", "```py\nINFO:     Uvicorn running on <http://127.0.0.1:8000> (Press CTRL+C to quit)\n```", "```py\nfastapi>=0.68.0,<0.69.0\npydantic>=1.8.0,<2.0.0\nuvicorn>=0.15.0,<0.16.0\nnumpy == 1.19.5\nscikit-learn==0.23.2\njoblib==1.1.0\nnest_asyncio == 1.5.5\n```", "```py\ndata/\nmodel/train.py\n```", "```py\nFROM python:3.8\nWORKDIR /app\nCOPY . /app\nRUN pip install -r requirements.txt\nCMD [\"uvicorn\", \"fastapp.app:app\", \"--host\", \"0.0.0.0\", \"--port\", \"80\"]\n```", "```py\ndocker build . -t heart-disease-app\n```", "```py\ndocker run -p 8080:80 -it heart-disease-app\n```", "```py\naz group create --location eastus --name heartdisease_rg\n```", "```py\naz acr create --name heartdisease --resource-group heartdisease_rg --sku Basic\n```", "```py\naz acr list --resource-group heartdisease_rg\n```", "```py\n...\n\"location\": \"eastus\",\n\"loginServer\": \"heartdisease.azurecr.io\",\n\"name\": \"heartdisease\"\n...\n```", "```py\ndocker tag heart-disease-app heartdisease.azurecr.io/heart-disease-app:v0.1.0\n```", "```py\naz acr login -n heartdisease\n```", "```py\ndocker push heartdisease.azurecr.io/heart-disease-app:v0.1.0\n```", "```py\naz containerapp env create --name heartdiseaseenv --resource-group heartdisease_rg --location eastus\n```", "```py\naz containerapp create --name heart-disease-container-app --resource-group heartdisease_rg --environment heartdiseaseenv --image heartdisease.azurecr.io/heart-disease-app:v0.1.0 --target-port 80 --ingress external --query properties.configuration.ingress.fqdn --registry-identity system --registry-server heartdisease.azurecr.io\n```", "```py\nContainer app created. Access your app at <https://heart-disease-container-app.nicehill-f0509673.eastus.azurecontainerapps.io/>\n```", "```py\ncurl -X 'POST' \\\\\n  '<https://heart-disease-container-app.nicehill-f0509673.eastus.azurecontainerapps.io/predict>' \\\\\n  -H 'accept: application/json' \\\\\n  -H 'Content-Type: application/json' \\\\\n  -d '{\n  \"age\": 64,\n  \"sex\": 1,\n  \"cp\": 3,\n  \"trestbps\": 120,\n  \"chol\": 267\n}'\n```", "```py\nimport requests\nresponse = requests.post(url = '<https://heart-disease-container-app.nicehill-f0509673.eastus.azurecontainerapps.io/predict>', \n                        json = {\"age\": 64,\n                                \"sex\": 1,\n                                \"cp\": 3,\n                                \"trestbps\": 120,\n                                \"chol\": 267\n                        )\nprint (response.json())\n# {'prediction_result': 0.8298846604381431}\n```"]