- en: Plotting Chord Diagrams in Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/plotting-chord-diagrams-in-python-72fd71b3eef0](https://towardsdatascience.com/plotting-chord-diagrams-in-python-72fd71b3eef0)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: How to use Holoviews to plot chord diagrams to show relationships between various
    data attributes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://weimenglee.medium.com/?source=post_page-----72fd71b3eef0--------------------------------)[![Wei-Meng
    Lee](../Images/10fc13e8a6858502d6a7b89fcaad7a10.png)](https://weimenglee.medium.com/?source=post_page-----72fd71b3eef0--------------------------------)[](https://towardsdatascience.com/?source=post_page-----72fd71b3eef0--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----72fd71b3eef0--------------------------------)
    [Wei-Meng Lee](https://weimenglee.medium.com/?source=post_page-----72fd71b3eef0--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----72fd71b3eef0--------------------------------)
    ·7 min read·Feb 15, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/142065796e10c421ec28bd82450a0dbf.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: So far when we talk about data visualisation, a few usual types of charts come
    to mind — bar charts, pie charts, histograms, etc. However, there is another type
    that is very interesting but seldom discussed — **chord diagram**. So what is
    a chord diagram?
  prefs: []
  type: TYPE_NORMAL
- en: A chord diagram represents the flows or connections between several entities
    (known as nodes). Using a chord diagram, you can easily visualize the connections
    or relationships between various data points in your dataset. Consider the flights
    delay dataset. It contains detailed information of flights from one airport to
    another. If you want to visualize the relationships between the various airports,
    a chord diagram (see the figure at the start of this article) is an excellent
    way to present this information.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, I will show you how you can plot a chord diagram using a third-party
    library known as **HoloViews**.
  prefs: []
  type: TYPE_NORMAL
- en: All images by author unless otherwise stated.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Installing Holoviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**HoloViews** is an open-source Python library designed to make data analysis
    and visualization seamless and simple. HoloViews is dependent on two other Python
    libraries — **pyviz** and **bokeh**. So the best way to install HoloViews is to
    use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Using the Flights Delay Dataset
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As usual, my favourite dataset to use for illustrating concepts is the 2015
    Flights Delay dataset. You can download the dataset from: [https://www.kaggle.com/datasets/usdot/flight-delays](https://www.kaggle.com/datasets/usdot/flight-delays).'
  prefs: []
  type: TYPE_NORMAL
- en: '*Licensing:* [*CC0: Public Domain*](https://creativecommons.org/publicdomain/zero/1.0/)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In this article, all code samples will be run using Jupyter Notebook.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'First, load the **flights.csv** file using Pandas:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Here’s the dataframe:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/286285e97551d41bc8ea9ef762be3b7c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'For this article, we are going to need two specific columns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**ORIGIN_AIRPORT**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**DESTINATION_AIRPORT**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We are interested to see the relationships between the origin and destination
    airports.
  prefs: []
  type: TYPE_NORMAL
- en: Finding the Relationships between Origin and Destination Airports
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The next thing to do would be to find the unique combinations of origin and
    destination airports. You could do this using the `groupby()` function, followed
    by the `count()` function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The output is a multi-index dataframe:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/22a8d757ceab7bc736d7d9400307f307.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Apparently, you only need one of the non-index columns. So let’s extract the
    **YEAR** column and rename it as **COUNT**, and then reset the index:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'So the output now contains the count of flights from one airport to another:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3bc6c0a85b91a0a31db6c2dc391d7356.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Notice that some of the airport codes are 5 digit numbers (e.g. 10135, 10397,
    etc). These are actually FAA’s Airport ID, and are used as replacement values
    for IATA codes (such as XNA, SFO, SLC, etc). Ideally, we should replace all these
    5-digit Airport IDs with the actual IATA codes, but to keep things simple in this
    article, we shall remove them:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'And now you have a much clearer idea of what we are trying to achieve. For
    example, there are a total of 898 flights from ABE to ATL, and there are a total
    of 711 flights from ABE to DTW, and so on:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6e2e49153673754680aa7bcf949fc5a7.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Observe that there are altogether 4693 combinations, and it would be very messy
    to generate a chord diagram with so many combinations. And so, let’s sort them
    in descending order:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/fbd3fc401c45f9aabbd4172abc02b1cc.png)'
  prefs: []
  type: TYPE_IMG
- en: 'And let’s extract the top 40 combinations:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'With the top 40 combinations, there are a total of 18 originating airports:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Displaying the Chord Diagram
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We are now ready to display the chord diagram. First, import `holoviews` and
    specify `bokeh` as the extension:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'HoloViews uses the `%%opts` cell magic to modify how the cell is executed to
    display its output. You use the `Chord` class to display a chord diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'The following output shows the relationships between the top 40 flights combinations:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b058d40e175f753474570c927f613146.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Each circle (known as a node) on the chord diagram represents an airport. To
    see the relationships between airports, hover your mouse over a circle:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/920e46d35ce6d672c12b838a116d4a40.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The above diagram shows the flights originating from the **DFW** (Dallas/Fort
    Worth International Airport). Apparently, it is not possible to see what the destination
    airports are. So, let’s get the list of origin and destination airports and then
    use it to create a `hv.Dataset` object:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'To display the names of the airports at each node, set the `labels` attribute
    in the `%%opts` cell magic and pass the `airports_dataset` variable into the `Chord`
    class initializer:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Take note that the `df_between_airports` and `airports_dataset` variables are
    wrapped as a tuple.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'The chord diagram now has the airport code displayed on each node:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b094155cb8fa68ee1a85fb0fda308910.png)'
  prefs: []
  type: TYPE_IMG
- en: 'When you now hover over DFW, you can now see clearly that flights from DFW
    flys to ORD (O’Hare International Airport) and ATL (Hartsfield-Jackson Atlanta
    International Airport):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0fbb2824c367002c23b56fffeee57956.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If you click on the **DFW** node, the rest of the flight paths are greyed out:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/429b6ffc37b0ffca2d901bee62dcc6d7.png)'
  prefs: []
  type: TYPE_IMG
- en: Applying Colors to the Chord Diagram
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The chord diagram supports Bokeh Palettes. You can see the list of palette colors
    at [https://docs.bokeh.org/en/latest/docs/reference/palettes.html](https://docs.bokeh.org/en/latest/docs/reference/palettes.html).
  prefs: []
  type: TYPE_NORMAL
- en: The Bokeh Palettes provides a collection of palettes for color mapping.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Here are two commonly used Bokeh palettes:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d7010940164415c021ff09dae0ceb82a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [https://docs.bokeh.org/en/latest/docs/reference/palettes.html](https://docs.bokeh.org/en/latest/docs/reference/palettes.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s now apply colors to our chord diagram by adding another `%%opts` cell
    magic statement:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'The `node_cmap` indicates the palette to apply to the nodes while the `edge_color`
    indicates the palette to apply for the edge of the chord diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/00bdd8b19c2f91f8ef6e0b9b6bcccb8b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Here is another example with different palettes applied:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/b6a866d09882e7945c5e307d1bd155a6.png)'
  prefs: []
  type: TYPE_IMG
- en: Confirming the Relationships in the Chord Diagram
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For the final section in this article, I just want to ensure that the chord
    diagram is displaying the correct information. Selecting **JFK** shows that flights
    are flying to **LAX** and **SFO**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/351a514bd0c30b9d987e8a8531ae75bf.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To confirm this, use the following statement:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'The output confirms the answer in the chord diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4b087c792dfa941138ca5849efb096cc.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Selecting **ORD** in the chord diagram shows that flights are flying to:'
  prefs: []
  type: TYPE_NORMAL
- en: '**LGA**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**LAX**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**DFW**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SFO**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/add832376889302164c80c9ee68c344b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The following statement confirms what we have seen:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/4662ce2da269b129fe8b492c811f5cf0.png)'
  prefs: []
  type: TYPE_IMG
- en: If you like reading my articles and that it helped your career/study, please
    consider signing up as a Medium member. It is $5 a month, and it gives you unlimited
    access to all the articles (including mine) on Medium. If you sign up using the
    following link, I will earn a small commission (at no additional cost to you).
    Your support means that I will be able to devote more time on writing articles
    like this.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://weimenglee.medium.com/membership?source=post_page-----72fd71b3eef0--------------------------------)
    [## Join Medium with my referral link - Wei-Meng Lee'
  prefs: []
  type: TYPE_NORMAL
- en: Read every story from Wei-Meng Lee (and thousands of other writers on Medium).
    Your membership fee directly supports…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: weimenglee.medium.com](https://weimenglee.medium.com/membership?source=post_page-----72fd71b3eef0--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now that you have seen how to create chord diagrams using HoloViews, when do
    you use it? You should use chord diagram in the following scenarios:'
  prefs: []
  type: TYPE_NORMAL
- en: When you want to use a simple representation to show the interconnections between
    large datasets.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When you want to create eye-catching visual representation that is aesthetically
    pleasing.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When you need to find and compare interrelationships between groups of data.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Have fun with chord diagram and remember to let me know how you are using it
    in your real-life projects!
  prefs: []
  type: TYPE_NORMAL
