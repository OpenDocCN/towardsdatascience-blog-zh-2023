- en: 4 Pandas Functions for Element-Wise Comparison of DataFrames
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4 个 Pandas 函数用于 DataFrame 的逐元素比较
- en: 原文：[https://towardsdatascience.com/4-pandas-functions-for-element-wise-comparison-of-dataframes-c7e06e51d399](https://towardsdatascience.com/4-pandas-functions-for-element-wise-comparison-of-dataframes-c7e06e51d399)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/4-pandas-functions-for-element-wise-comparison-of-dataframes-c7e06e51d399](https://towardsdatascience.com/4-pandas-functions-for-element-wise-comparison-of-dataframes-c7e06e51d399)
- en: Explained with examples.
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过示例进行解释。
- en: '[](https://sonery.medium.com/?source=post_page-----c7e06e51d399--------------------------------)[![Soner
    Yıldırım](../Images/c589572e9d1ee176cd4f5a0008173f1b.png)](https://sonery.medium.com/?source=post_page-----c7e06e51d399--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c7e06e51d399--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c7e06e51d399--------------------------------)
    [Soner Yıldırım](https://sonery.medium.com/?source=post_page-----c7e06e51d399--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://sonery.medium.com/?source=post_page-----c7e06e51d399--------------------------------)[![Soner
    Yıldırım](../Images/c589572e9d1ee176cd4f5a0008173f1b.png)](https://sonery.medium.com/?source=post_page-----c7e06e51d399--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c7e06e51d399--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c7e06e51d399--------------------------------)
    [Soner Yıldırım](https://sonery.medium.com/?source=post_page-----c7e06e51d399--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c7e06e51d399--------------------------------)
    ·4 min read·Jun 10, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c7e06e51d399--------------------------------)
    ·4 分钟阅读·2023 年 6 月 10 日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/79a6153d096edfc0b646b5adb84002bf.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/79a6153d096edfc0b646b5adb84002bf.png)'
- en: Photo by [NordWood Themes](https://unsplash.com/@nordwood?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/E9tFH39iRPE?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [NordWood Themes](https://unsplash.com/@nordwood?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    在 [Unsplash](https://unsplash.com/photos/E9tFH39iRPE?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    提供
- en: Pandas DataFrames are two dimensional data structures with labeled rows and
    columns.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas DataFrame 是具有标签的行和列的二维数据结构。
- en: '![](../Images/e7756b0352e79032b25187b5be0e23cb.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e7756b0352e79032b25187b5be0e23cb.png)'
- en: DataFrame with 3 rows and 3 columns (image by author)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 具有 3 行 3 列的 DataFrame（图片由作者提供）
- en: 'We sometimes need to do an element-wise comparison of two DataFrames. For example:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有时需要对两个 DataFrame 进行逐元素比较。例如：
- en: Update values in a DataFrame using the values in another one.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用另一个 DataFrame 中的值来更新 DataFrame 中的值。
- en: Compare values and pick the bigger or smaller value.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比较值并选择较大或较小的值。
- en: In this article, we’ll learn four different Pandas functions that can be used
    for such tasks. We’ll also do examples to better understand the difference as
    well as similarities among them.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将学习四种不同的 Pandas 函数，这些函数可以用于此类任务。我们还将通过示例更好地理解它们之间的差异和相似之处。
- en: '*If you’d like to learn more about Pandas, visit my course* [*500 Exercises
    to Master Python Pandas*](https://www.udemy.com/course/500-exercises-to-master-python-pandas/learn/lecture/37842166#overview)*.*'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你想了解更多关于 Pandas 的内容，请访问我的课程* [*500 道练习掌握 Python Pandas*](https://www.udemy.com/course/500-exercises-to-master-python-pandas/learn/lecture/37842166#overview)*。*'
- en: Let’s first create two DataFrames to be used in the examples.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先创建两个 DataFrame 以用于示例。
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](../Images/f142324f2e4a8073908c2acaeedf547a.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f142324f2e4a8073908c2acaeedf547a.png)'
- en: (image by author)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: （图片由作者提供）
- en: 1\. combine
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. **结合**
- en: The `combine` function does an element-wise comparison based on the given function.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '`combine` 函数根据给定的函数进行逐元素比较。'
- en: For instance, we can select the maximum value out of two values for each position.
    It’ll be more clear when we do the example.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以在每个位置选择两个值中的最大值。当我们做例子时会更清楚。
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/9953c9a1ccdef4469b6be83a2176a0ee.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9953c9a1ccdef4469b6be83a2176a0ee.png)'
- en: (image by author)
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: （图片由作者提供）
- en: Take a look at the value in the first row and first column. The combined DataFrame
    has the bigger one of 5 and 2.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 查看第一行第一列的值。合并的 DataFrame 取 5 和 2 中较大的值。
- en: If one of the values is `NaN` (i.e. missing value), the combined DataFrame at
    this position has `NaN` as well because Pandas can’t compare a value with a missing
    value.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果其中一个值是 `NaN`（即缺失值），那么合并后的 DataFrame 在这个位置也会是 `NaN`，因为 Pandas 无法比较带有缺失值的值。
- en: We can choose a constant value to be used in the case of missing values by using
    the `fill_value` parameter. Missing values are filled with this value before comparing
    them to the values in the other DataFrame.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过使用`fill_value`参数来选择一个常量值以处理缺失值。在比较之前，缺失值会被这个值填充。
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/97958df9142d176939f62c5f79fa45d5.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/97958df9142d176939f62c5f79fa45d5.png)'
- en: (image by author)
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: (图片由作者提供)
- en: There are two `NaN` values in df1, which are filled with 0 and then compared
    to the values in the same position of `df2`.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '`df1`中有两个`NaN`值，它们被填充为0，然后与`df2`中相同位置的值进行比较。'
- en: 2\. combine_first
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. combine_first
- en: The `combine_first` function updates `NaN` values with the values in the same
    position of the other DataFrame.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`combine_first`函数用另一个数据框相同位置的值更新`NaN`值。'
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/6fbad36a2da560af5f4b39a6f6bcd0a1.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6fbad36a2da560af5f4b39a6f6bcd0a1.png)'
- en: (image by author)
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: (图片由作者提供)
- en: As we see in the screenshot above, `combined_df` has the same values as `df1`
    except for the `NaN` values, which are filled with values from `df2` .
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如上图所示，`combined_df`的值与`df1`相同，除了`NaN`值，这些值被`df2`中的值填充。
- en: It is important to note that the `combine_first` function does not update the
    values in `df1` and `df2` . It only returns an updated version of the first DataFrame.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，`combine_first`函数不会更新`df1`和`df2`中的值。它仅返回第一个数据框的更新版本。
- en: 3\. update
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. update
- en: The `update` function updates the missing value in a DataFrame using the values
    in the same location of another DataFrame.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '`update`函数使用另一个数据框中相同位置的值来更新数据框中的缺失值。'
- en: It sounds the same thing as what the `combine_first` function does. However,
    there is an important difference.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这听起来和`combine_first`函数的作用一样。然而，有一个重要的区别。
- en: The `update` function does not return anything but updates in place. Thus, the
    original DataFrame is modified (or updated). It’ll be more clear with an example.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`update`函数不返回任何内容，而是就地更新。因此，原始数据框会被修改（或更新）。用一个例子来看会更清楚。'
- en: 'We have two DataFrames as shown below:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有两个数据框，如下所示：
- en: '![](../Images/434db78de9c9dcb341c387a4ba4278ee.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/434db78de9c9dcb341c387a4ba4278ee.png)'
- en: (image by author)
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: (图片由作者提供)
- en: Let’s use the `update` function on `df1` .
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们来对`df1`使用`update`函数。
- en: '[PRE4]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This line of code does not return anything but it updates `df1` . The updated
    version is:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这行代码不返回任何内容，但它更新了`df1`。更新后的版本是：
- en: '![](../Images/d24111d3fd18b88082a513c9b57cb487.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d24111d3fd18b88082a513c9b57cb487.png)'
- en: (image by author)
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: (图片由作者提供)
- en: '`df1` does not include missing values anymore, which have been updated using
    the values from `df2` .'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '`df1`不再包含缺失值，这些值已经使用`df2`中的值进行更新。'
- en: 4\. compare
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4\. compare
- en: The `compare` function compares the values at the same location and returns
    a DataFrame showing them side-by-side.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '`compare`函数比较相同位置的值，并返回一个数据框，将它们并排显示。'
- en: '[PRE5]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/10f254be2e1191ee5f5b29b8dbca30f7.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/10f254be2e1191ee5f5b29b8dbca30f7.png)'
- en: (image by author)
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: (图片由作者提供)
- en: If the values at a particular location are the same, the comparison shows them
    as `NaN` (e.g. second row, first column). We can change this behavior by using
    the `keep_equal` parameter.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果某个特定位置的值相同，比较会显示为`NaN`（例如第二行，第一列）。我们可以通过使用`keep_equal`参数来更改这一行为。
- en: '[PRE6]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/eb488dc39349a4b4f56becd55164f69c.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/eb488dc39349a4b4f56becd55164f69c.png)'
- en: (image by author)
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: (图片由作者提供)
- en: Conclusion
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: We learned four different Pandas functions that perform element-wise comparison
    of values in two DataFrames. They all have different purposes. Some are used for
    updating values whereas some just do a comparison.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们学习了四种不同的Pandas函数，用于对两个数据框中的值进行逐元素比较。它们各有不同的目的。有些用于更新值，而有些只是进行比较。
- en: There will be cases where a particular one of these functions is appropriate
    to use. Hence, it’s best to get to know all of them.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，这些函数中的某一个可能是最合适的使用方式。因此，最好了解所有这些函数。
- en: '*You can become a* [*Medium member*](https://sonery.medium.com/membership)
    *to unlock full access to my writing, plus the rest of Medium. If you already
    are, don’t forget to* [*subscribe*](https://sonery.medium.com/subscribe) *if you’d
    like to get an email whenever I publish a new article.*'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '*你可以成为* [*Medium会员*](https://sonery.medium.com/membership) *以解锁我所有的写作内容，以及Medium上的其他内容。如果你已经是会员，请不要忘记*
    [*订阅*](https://sonery.medium.com/subscribe) *，这样我发布新文章时你就会收到邮件。*'
- en: Thank you for reading. Please let me know if you have any feedback.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读。如果你有任何反馈，请告诉我。
