- en: The Good, The Bad, and the Ugly of Pd.Get_Dummies
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Pd.Get_Dummies 的利与弊
- en: 原文：[https://towardsdatascience.com/the-good-the-bad-and-the-ugly-of-pd-get-dummies-75c87e2aadc9](https://towardsdatascience.com/the-good-the-bad-and-the-ugly-of-pd-get-dummies-75c87e2aadc9)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/the-good-the-bad-and-the-ugly-of-pd-get-dummies-75c87e2aadc9](https://towardsdatascience.com/the-good-the-bad-and-the-ugly-of-pd-get-dummies-75c87e2aadc9)
- en: This is for the pd.get_dummies diehards
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 这是针对 pd.get_dummies 的死忠粉
- en: '[](https://adamrossnelson.medium.com/?source=post_page-----75c87e2aadc9--------------------------------)[![Adam
    Ross Nelson](../Images/030b86a8c8bbd40c6acf60d1e387950c.png)](https://adamrossnelson.medium.com/?source=post_page-----75c87e2aadc9--------------------------------)[](https://towardsdatascience.com/?source=post_page-----75c87e2aadc9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----75c87e2aadc9--------------------------------)
    [Adam Ross Nelson](https://adamrossnelson.medium.com/?source=post_page-----75c87e2aadc9--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://adamrossnelson.medium.com/?source=post_page-----75c87e2aadc9--------------------------------)[![亚当·罗斯·尼尔森](../Images/030b86a8c8bbd40c6acf60d1e387950c.png)](https://adamrossnelson.medium.com/?source=post_page-----75c87e2aadc9--------------------------------)[](https://towardsdatascience.com/?source=post_page-----75c87e2aadc9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----75c87e2aadc9--------------------------------)
    [亚当·罗斯·尼尔森](https://adamrossnelson.medium.com/?source=post_page-----75c87e2aadc9--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----75c87e2aadc9--------------------------------)
    ·5 min read·Jul 26, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----75c87e2aadc9--------------------------------)
    ·5 分钟阅读·2023年7月26日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: Howdy folks 🤠
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 大家好 🤠
- en: Okay, I get it. One of the easiest ways to convert a categorial to an array
    of dummies in Python is with the Pandas `pd.get_dummies()`. Why would you take
    the time to import `OneHotEncoder`from sklearn, execute a `.fit_transform()` etc,
    etc, etc? Talk about tedious!
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，我明白了。在 Python 中，将分类数据转换为虚拟变量数组最简单的方法之一是使用 Pandas 的 `pd.get_dummies()`。为什么还要花时间导入
    `OneHotEncoder` 从 sklearn，执行 `.fit_transform()` 等等？真是繁琐！
- en: This article will first introduce a simple data set for demonstration purposes
    that consists of a testing set that contains categoricals not found in the training
    set. Then, it will demonstrate how using `pd.get_dummies()` can lead to problems
    with the demonstration data. And, finally show how to avoid that problem with
    sklearn’s `OneHotEncoder`.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这篇文章首先介绍一个简单的数据集，用于演示目的，其中测试集包含在训练集中未发现的分类数据。然后，演示如何使用 `pd.get_dummies()` 可能会导致演示数据出现问题。最后，展示如何使用
    sklearn 的 `OneHotEncoder` 避免这个问题。
- en: '![](../Images/fa8e91379f5a2edc4d962a235f228a29.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fa8e91379f5a2edc4d962a235f228a29.png)'
- en: 'Image Credit: Author’s illustration using text to image in Canva. Prompted:
    “Three panda bears dressed as country western cowboys.”'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者在 Canva 上使用文本到图像的插图。提示：“三只穿着乡村西部牛仔服装的熊猫。”
- en: A simple dataset for demonstration
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 演示用的简单数据集
- en: Here we have a simple dataset that includes a categorical feature called OS.
    The OS column lists computer operating systems. We will use this fictional data
    for purposes of demonstration. In `train_df` will be fictional demonstration training
    data. While in `test_df` we have fictional demonstration testing data.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们有一个简单的数据集，其中包括一个名为 OS 的分类特征。OS 列列出了计算机操作系统。我们将使用这些虚拟数据进行演示。在 `train_df`
    中包含虚拟演示训练数据，而在 `test_df` 中包含虚拟演示测试数据。
- en: In our fictional demonstration case, the testing set contains categorical values
    not present in the training set. This mis-match will cause problems.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的虚拟演示案例中，测试集包含在训练集中不存在的分类值。这种不匹配会导致问题。
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In our training data, we have three operating systems: Windows, MacOS, and
    Linux. But in our testing data, we have the additional categories including Android,
    Unix, and iOS.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的训练数据中，我们有三种操作系统：Windows、MacOS 和 Linux。但在我们的测试数据中，还包括 Android、Unix 和 iOS
    等额外类别。
- en: A model ‘fit’ on `pd.get_dummies(train_df)` will not work with with testing
    data from `pd.get_dummies(test_df)` . The results will not match — because of
    the mis-matched categories.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `pd.get_dummies(train_df)` 拟合的模型将无法与 `pd.get_dummies(test_df)` 的测试数据一起使用。结果将不匹配——因为类别不匹配。
- en: '![](../Images/928ac32f04f9d59aa60f5d4c932fcc7f.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/928ac32f04f9d59aa60f5d4c932fcc7f.png)'
- en: 'Image Credit: Author’s illustration created in Canva using Canva stock images.
    An art supply dummy.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者在 Canva 上使用 Canva 库图像创建的插图。艺术用品虚拟模型。
- en: The Problem with pd.get_dummies()
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Pd.get_dummies() 的问题
- en: When applying the `pd.get_dummies()` function to both our training and testing
    datasets here is what you’ll get.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当将`pd.get_dummies()`函数应用于我们的训练和测试数据集时，你会得到这样的结果。
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If you evaluate the `train_encoded` and `test_encoded` DataFrames, you'll notice
    that they do not have the same number of columns. This is because the 'Android'
    category, present only in the testing set, has created an additional column in
    `test_encoded`. This inconsistency in the number of features between training
    and testing datasets can cause significant problems when building and evaluating
    machine learning models, which expect the same feature space in both datasets.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你评估`train_encoded`和`test_encoded` DataFrames，你会注意到它们的列数不同。这是因为测试集中仅存在的'Android'类别在`test_encoded`中创建了一个额外的列。这种训练和测试数据集特征数量的不一致可能在构建和评估机器学习模型时造成重大问题，因为这些模型期望两个数据集中的特征空间相同。
- en: '![](../Images/380c309a5fac4b5da8a646a4858c2347.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/380c309a5fac4b5da8a646a4858c2347.png)'
- en: 'Image Credit: Author’s screen grabs, produced with code shown here.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者的屏幕截图，使用此处显示的代码生成。
- en: The Solution with OneHotEncoder
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用OneHotEncoder的解决方案
- en: Now, let’s see how `OneHotEncoder` from sklearn solves this problem. When using
    `OneHotEncoder`, the encoder learns the categories during the `.fit()` or `.fit_transform()`
    method on the training data. Then, during the `.transform()` method, it creates
    columns for all learned categories. If a new category is found in the testing
    data there are two options. First you can ignore the new unseen categories.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看sklearn的`OneHotEncoder`如何解决这个问题。当使用`OneHotEncoder`时，编码器在训练数据的`.fit()`或`.fit_transform()`方法期间学习类别。然后，在`.transform()`方法期间，它为所有学习到的类别创建列。如果在测试数据中发现了新类别，则有两个选项。首先，你可以忽略新的未见类别。
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Note that we set `handle_unknown='ignore'` to tell the encoder to ignore (rather
    than throw an error for) any category in the testing set that it didn't see in
    the training set.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，我们设置了`handle_unknown='ignore'`以告诉编码器忽略（而不是抛出错误）在测试集中看到的但在训练集中未见的任何类别。
- en: Also note, new as of 2023, sklearn offers a `.set_output(transform="pandas")`
    option that will ensure the encoder returns a Pandas DataFrame (complete with
    easier to read and interpret column names) instead of a the more minimalist NumPy
    array.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 还要注意，自2023年起，sklearn提供了`.set_output(transform="pandas")`选项，这将确保编码器返回一个Pandas
    DataFrame（具有更易读和解释的列名），而不是更简洁的NumPy数组。
- en: By handling unknown categories with `handle_unknown='ignore'`, `OneHotEncoder`
    ensures that the training and testing data have the same feature space, regardless
    of what categorical values appear in the testing data.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用`handle_unknown='ignore'`处理未知类别，`OneHotEncoder`确保训练数据和测试数据具有相同的特征空间，无论测试数据中出现了什么类别值。
- en: The Additional Benefits of OneHotEncoder
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OneHotEncoder的附加好处
- en: Sklearn’s `OneHotEncoder` is not only super helpful for handling unseen categories
    in your testing data; it also provides additional functionality that can also
    be useful. Her are two of these additional options and how to use them.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Sklearn的`OneHotEncoder`不仅在处理测试数据中未见类别时非常有用，它还提供了其他一些附加功能，这些功能也可能很有用。以下是其中两个附加选项及其使用方法。
- en: min_frequency
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: min_frequency
- en: The `min_frequency` is another powerful option that allows you to specify a
    minimum frequency threshold. Categories with a frequency below this threshold
    get recoded as “infrequent.” This could be useful when you have categories that
    only appear a few times and may not offer enough information to help the model
    and that may only serve to over-complicate the model with unhelpful features that
    undermine performance without adding any predictive value.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`min_frequency`是另一个强大的选项，它允许你指定一个最低频率阈值。频率低于此阈值的类别会被重新编码为“罕见”。这在你有一些只出现几次的类别时非常有用，这些类别可能没有足够的信息来帮助模型，可能会使模型复杂化，增加无用的特征，从而降低性能而没有任何预测价值。'
- en: 'Here’s how you can set a `min_frequency` of 2:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这是如何设置`min_frequency`为2的：
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: max_categories
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: max_categories
- en: Also useful is `max_categories`. The `max_categories` argument allows you to
    limit the number of output columns in the dummy array. The encoder will take the
    most frequent categories for encoding.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有用的选项是`max_categories`。`max_categories`参数允许你限制虚拟数组中的输出列数。编码器将选择最常见的类别进行编码。
- en: This option is beneficial and helpful when dealing with features that have many
    categories which would ordinarily result in a high number of dimensions. Possibly
    high enough to significantly reduce training efficiency while increasing model
    complexity all while returning very little value in the form of higher predictive
    power. In short this reduces the dimensionality of your data.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这个选项在处理具有许多类别的特征时特别有益，这些特征通常会导致维度数目很高。这可能会显著降低训练效率，同时增加模型复杂性，并且几乎没有提高预测能力的价值。简而言之，这减少了数据的维度。
- en: 'Here’s how to limit the encoding to the top 4 most frequent categories:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这是限制编码到前4个最频繁类别的方法：
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Conclusion
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In the grander scheme of things, using `pd.get_dummies()` instead of a true
    fit and transform procedure, there are worse sins in the field of data science.
    However, if you have been holding out as a diehard for `pd.get_dummies()` now
    you know the good, the bad and the ugly — after reading this article, you should
    consider shifting your practice.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 从更宏观的角度来看，使用`pd.get_dummies()`而不是真正的拟合和转换过程，在数据科学领域还有更严重的错误。然而，如果你一直坚持使用`pd.get_dummies()`，现在你已经了解了它的优点、缺点和不足——阅读完这篇文章后，你应该考虑调整你的做法。
- en: While `pd.get_dummies()` can be a quick and easy way to create dummy variables
    in Python, it can lead to problems when your testing data contains categories
    not seen in your training data. On the other hand, sklearn's `OneHotEncoder` handles
    this scenario elegantly, ensuring consistent feature spaces across datasets. It's
    worth the extra lines of code to avoid potential pitfalls down the line.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然`pd.get_dummies()`在Python中创建虚拟变量是快速且简便的，但当你的测试数据包含在训练数据中未见过的类别时，可能会导致问题。另一方面，sklearn的`OneHotEncoder`优雅地处理了这种情况，确保了数据集间一致的特征空间。值得多写几行代码，以避免潜在的陷阱。
- en: Thanks For Reading
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 感谢阅读
- en: Are you ready to learn more about careers in data science? I perform one-on-one
    career coaching and have a weekly email list that helps data professional job
    candidates. [Contact me to learn more](https://coaching.adamrossnelson.com/).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 你准备好了解更多数据科学领域的职业了吗？我提供一对一的职业指导，并有每周的电子邮件列表，帮助数据专业的求职者。[联系我了解更多](https://coaching.adamrossnelson.com/)。
- en: 'Thanks for reading. Send me your thoughts and ideas. You can write just to
    say hey. And if you really need to tell me how I got it wrong I look forward to
    chatting soon. Twitter: [@adamrossnelson](https://twitter.com/adamrossnelson)
    LinkedIn: [Adam Ross Nelson](https://www.linkedin.com/in/arnelson/).'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '感谢阅读。请把你的想法和建议发给我。你可以只是说声你好。如果你真的需要告诉我哪里做错了，我期待很快与你聊聊。Twitter: [@adamrossnelson](https://twitter.com/adamrossnelson)
    LinkedIn: [Adam Ross Nelson](https://www.linkedin.com/in/arnelson/)。'
