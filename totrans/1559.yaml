- en: 'My Third Week of the #30DayMapChallange'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/my-third-week-of-the-30daymapchallange-b42efbe38b51](https://towardsdatascience.com/my-third-week-of-the-30daymapchallange-b42efbe38b51)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'My personal take on the third week of the #30DayMapChallange, a daily social
    challenge aimed at designing thematic maps every day in November.'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@janosovm?source=post_page-----b42efbe38b51--------------------------------)[![Milan
    Janosov](../Images/77b62460041f66ec4585a81baef81a03.png)](https://medium.com/@janosovm?source=post_page-----b42efbe38b51--------------------------------)[](https://towardsdatascience.com/?source=post_page-----b42efbe38b51--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----b42efbe38b51--------------------------------)
    [Milan Janosov](https://medium.com/@janosovm?source=post_page-----b42efbe38b51--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----b42efbe38b51--------------------------------)
    ·6 min read·Nov 21, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: Since 2019, the Geographic Information System (GIS) and spatial analytics community
    have been quite busy each November — thanks to a fun challenge called the [#30DayMapChallange](https://30daymapchallenge.com).
    Each year, this challenge has a thematic schedule, proposing a topic that should
    be the primary directive for map visualisation to be posted on that particular
    day. While the pre-defined daily topics certainly mean a constraint for the creative
    mind, they also help participants to find mutual interest, share data sources,
    and express individual styles visually and technologically.
  prefs: []
  type: TYPE_NORMAL
- en: Here, I would like to briefly overview my third week of this challenge, detailing
    and showing the different maps I created — usually in Python using various tools
    of spatial analytics and geospatial data.
  prefs: []
  type: TYPE_NORMAL
- en: '*In this article, all images were created by the author.*'
  prefs: []
  type: TYPE_NORMAL
- en: Day 15 — OSM
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[OpenStreetMap](http://openstreetmap.org/) if one of the first go-to sources
    for map data. While quite a few libraries are building on it, my favourite discovery
    from last year was [PrettyMaps](https://github.com/marceloprates/prettymaps),
    which I used to I visualise some of the top global tourist sights curated by PlanetWare,
    such as the Eiffel Tower in Paris. See the rest of the collection [here](https://www.linkedin.com/posts/milan-janosov_30daymapchallenge-gis-datascience-activity-7130469529968685057-WZTq?utm_source=share&utm_medium=member_ios),
    with the Colosseum (Rome), Statue of Liberty (New York City), Château de Versailles
    (France), Central Park (New York City), Forbidden City (China), Prague Castle
    (Czech Republic), and the Sydney Opera House .'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e2da4b9c261cd07406bda47833f89825.png)'
  prefs: []
  type: TYPE_IMG
- en: Day 15 — OSM
  prefs: []
  type: TYPE_NORMAL
- en: Day 16 — Oceania
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To visualise Australia and the great many islands of Oceania, I used a 10m resolution
    physical vector data from [Natural Earth](https://www.naturalearthdata.com/downloads/10m-physical-vectors/).
    Namely, I imagined the Coastline of Australia and Oceania here. For this line
    plot, I used an older trick of mine — to create these ‘ lightsaber’ looking, glowing,
    Star Wars-inspired lines — which is created 100% in Python using Matplotlib. Besides,
    finding the right bounding box was a bit tricky, so I just followed a few online
    maps as a reference.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/19aa99a461787317b4a1d9a688fa12b4.png)'
  prefs: []
  type: TYPE_IMG
- en: Day 16 — Oceania
  prefs: []
  type: TYPE_NORMAL
- en: Day 17 — Flow
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When I was trying to figure this map out, with the topic “Flow”, I was stuck
    for a bit — and then I was like, okay, let’s get some calories in and get it going.
  prefs: []
  type: TYPE_NORMAL
- en: '*tl;dr*'
  prefs: []
  type: TYPE_NORMAL
- en: 'I decided to visualise the export flow network of chocolate (HS 1806 when it
    comes to its standard code in the [Harmonized System](https://www.trade.gov/harmonized-system-hs-codes))
    between the largest exporting countries using international trade data from [Comtrade](https://comtradeplus.un.org/TradeFlow).
    This dataset contains information on which country exported to which, in what
    quantity, and in what value. I used this information to create a non-geographical
    but topological map, a network visualisation. In this network, each country is
    a node, while country A is linked to country B if A exports chocolate products
    to country B, where the link is proportional to the total value of the traded
    goods in 2022\. Node colours correspond to network communities — clusters of countries
    that seem to trade much more internally than the rest of the world, while node
    size measures the total value each country makes by exporting such sweets. Countries
    not exporting are marked by dark grey. Fun fact: I created this map while having
    a coffee at [#Flow](https://www.linkedin.com/feed/hashtag/?keywords=%23Flow) Specialty
    Coffee Bar & Bistro, Budapest.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/cab096bbcdd92773fb917d0ffed09df1.png)'
  prefs: []
  type: TYPE_IMG
- en: Day 17 — Flow
  prefs: []
  type: TYPE_NORMAL
- en: Day 18 — Atmosphere
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this visual, I created actual heatmaps showing global monthly maximum temperature
    values using [World Climate data](https://www.worldclim.org/data/worldclim21.html):'
  prefs: []
  type: TYPE_NORMAL
- en: '*“This is WorldClim version 2.1 climate data for 1970–2000\. This version was
    released in January 2020\. There are monthly climate data for minimum, mean, and
    maximum temperature, precipitation, solar radiation, wind speed, water vapor pressure,
    and for total precipitation. There are also 19 “bioclimatic” variables.”*'
  prefs: []
  type: TYPE_NORMAL
- en: So, in my map, each frame corresponds to one month, using the max temperature
    of the WorldClim 2.1 raster dataset.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e40448ecb6135d2e70688b0734f005b4.png)'
  prefs: []
  type: TYPE_IMG
- en: Day 18 — Atmosphere
  prefs: []
  type: TYPE_NORMAL
- en: Day 19–5-minutes map
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: That is right — we only had 5 minutes to put a map viz together. Not much time,
    so I decided to go for something I do very often — combine networks and geospatial
    data and visualise another road network, this time, about Manhattan and its beautiful,
    absolutely artificial square grid-like road system. Instead of rerunning a previous
    piece of code, I wrote this notebook from scratch and made it in just about 5
    minutes, without much googling (except finding the right hex code).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/526368288cd9eb312d7506d1311aa2e5.png)'
  prefs: []
  type: TYPE_IMG
- en: Day 19–5-minutes map
  prefs: []
  type: TYPE_NORMAL
- en: Day 20 — Outdoors
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To venture outdoors — while creating a map — I decided to look around beautiful
    landmarks online, making me feel like I was there — when I was sitting at my Python
    terminal. So in my outdoor map I combined the effort of visualising climate change
    and the grandiose [ESA’s Sentinel data](https://services.sentinel-hub.com/oauth/password/resetTrigger)
    availability new update by creating this animation of Upsala Glacier, Argentina.
    The footage is built based on [querying](https://github.com/sentinel-hub/sentinelhub-py/blob/master/examples/process_request.ipynb)
    the least cloudy true-colour image of each half-year from 2016 up until today.
    Due to file-size issues, here comes a static snapshot, will you can find the animation
    [here](https://www.linkedin.com/posts/milan-janosov_30daymapchallenge-gis-datascience-activity-7132287456304906240-uUy8?utm_source=share&utm_medium=member_ios).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/905314dae38243baee97d181a057b2b7.png)'
  prefs: []
  type: TYPE_IMG
- en: Day 20 — Outdoors
  prefs: []
  type: TYPE_NORMAL
- en: Day 21 — Raster
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'After the previous day’s satellite footage, I am getting back to rasterised
    remote sensing data. In particular, I am reposting this older piece of mine where
    I used the old Sentinel API to compute the NDVI index for the city of Zurich,
    showing a basic but very handy transformation of satellite image bands. Just a
    bit on its theory, according to [#Wikipedia](https://www.linkedin.com/feed/hashtag/?keywords=%23Wikipedia)
    is:'
  prefs: []
  type: TYPE_NORMAL
- en: '“𝘕𝘰𝘳𝘮𝘢𝘭𝘪𝘻𝘦𝘥 𝘥𝘪𝘧𝘧𝘦𝘳𝘦𝘯𝘤𝘦 𝘷𝘦𝘨𝘦𝘵𝘢𝘵𝘪𝘰𝘯 𝘪𝘯𝘥𝘦𝘹: 𝘛𝘩𝘦 𝘯𝘰𝘳𝘮𝘢𝘭𝘪𝘻𝘦𝘥 𝘥𝘪𝘧𝘧𝘦𝘳𝘦𝘯𝘤𝘦 𝘷𝘦𝘨𝘦𝘵𝘢𝘵𝘪𝘰𝘯
    𝘪𝘯𝘥𝘦𝘹 𝘪𝘴 𝘢 𝘴𝘪𝘮𝘱𝘭𝘦 𝘨𝘳𝘢𝘱𝘩𝘪𝘤𝘢𝘭 𝘪𝘯𝘥𝘪𝘤𝘢𝘵𝘰𝘳 𝘵𝘩𝘢𝘵 𝘤𝘢𝘯 𝘣𝘦 𝘶𝘴𝘦𝘥 𝘵𝘰 𝘢𝘯𝘢𝘭𝘺𝘻𝘦 𝘳𝘦𝘮𝘰𝘵𝘦 𝘴𝘦𝘯𝘴𝘪𝘯𝘨
    𝘮𝘦𝘢𝘴𝘶𝘳𝘦𝘮𝘦𝘯𝘵𝘴, 𝘰𝘧𝘵𝘦𝘯 𝘧𝘳𝘰𝘮 𝘢 𝘴𝘱𝘢𝘤𝘦 𝘱𝘭𝘢𝘵𝘧𝘰𝘳𝘮, 𝘢𝘴𝘴𝘦𝘴𝘴𝘪𝘯𝘨 𝘸𝘩𝘦𝘵𝘩𝘦𝘳 𝘰𝘳 𝘯𝘰𝘵 𝘵𝘩𝘦 𝘵𝘢𝘳𝘨𝘦𝘵
    𝘣𝘦𝘪𝘯𝘨 𝘰𝘣𝘴𝘦𝘳𝘷𝘦𝘥 𝘤𝘰𝘯𝘵𝘢𝘪𝘯𝘴 𝘭𝘪𝘷𝘦 𝘨𝘳𝘦𝘦𝘯 𝘷𝘦𝘨𝘦𝘵𝘢𝘵𝘪𝘰𝘯.”'
  prefs: []
  type: TYPE_NORMAL
- en: In practice, the NDVI is a +1.0 to -1.0 float-valued variable we can compute
    by combining a satellite image’s red and near-infrared bands. This way, due to
    the light absorption properties of the green surfaces, the result will be higher
    values for those pixels which are greener.
  prefs: []
  type: TYPE_NORMAL
- en: As I used free [#sentinel](https://www.linkedin.com/feed/hashtag/?keywords=%23sentinel)
    satellite images, my pixel size here is 10x10m. On the visualisation, I used a
    green-yellow-red colour map to illustrate the NDVI values from +1.0 to 0\. Negative
    values typically mean water bodies, near-zero positive values are good references
    for built-in areas, while values around 0.1–0.5 are sparse and, above that, dense
    green vegetation.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/bb141ef18b9e8cc8f1441314b3a4524a.png)'
  prefs: []
  type: TYPE_IMG
- en: Day 21 — Raster
  prefs: []
  type: TYPE_NORMAL
- en: 'This was the summary of my third week doing the #30DayMapChallange — 10 more
    days to go, so get ready for many more maps to come!'
  prefs: []
  type: TYPE_NORMAL
- en: See the overview of the second week [here](https://medium.com/p/11fbab10cae6)!
  prefs: []
  type: TYPE_NORMAL
- en: See the overview of the first week [here](/my-first-week-of-the-30daymapchallange-1bef0646c88e)!
  prefs: []
  type: TYPE_NORMAL
