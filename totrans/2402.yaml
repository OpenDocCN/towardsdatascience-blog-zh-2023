- en: 'Writing Songs with GPT-4: Part 2, Chords'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/writing-songs-with-gpt-4-part-2-chords-173cfda0e5a1](https://towardsdatascience.com/writing-songs-with-gpt-4-part-2-chords-173cfda0e5a1)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: How to use the latest large language model from OpenAI to help compose chords
    for original songs
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://robgon.medium.com/?source=post_page-----173cfda0e5a1--------------------------------)[![Robert
    A. Gonsalves](../Images/96b4da0f602a1cd9d1e1d2917868cbee.png)](https://robgon.medium.com/?source=post_page-----173cfda0e5a1--------------------------------)[](https://towardsdatascience.com/?source=post_page-----173cfda0e5a1--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----173cfda0e5a1--------------------------------)
    [Robert A. Gonsalves](https://robgon.medium.com/?source=post_page-----173cfda0e5a1--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----173cfda0e5a1--------------------------------)
    ·15 min read·May 10, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ceb0a1a74daa59388daa38d1a02d7e2f.png)'
  prefs: []
  type: TYPE_IMG
- en: '**“a musician playing acoustic guitar in a professional studio wearing headphones
    with a computer screen,”** I*mage created using an AI image creation program,*
    Midjourney, and edited by the author'
  prefs: []
  type: TYPE_NORMAL
- en: This is the second article in a series of three about using the new GPT-4 language
    model from OpenAI [1] to compose music. In the [first article](https://medium.com/towards-data-science/writing-songs-with-gpt-4-part-1-lyrics-3728da678482),
    I explored using the model to write lyrics for songs in various styles. For this
    one, I used the system to compose chords for the songs. I will look into composing
    melodies in the [third installment](/writing-songs-with-gpt-4-part-3-melodies-848ab3614e7a).
  prefs: []
  type: TYPE_NORMAL
- en: Background on GPT-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: GPT-4 is the latest large language model from OpenAI. It is available using
    their [ChatGPT](https://chat.openai.com/) user interface and accessed via their
    [API](https://openai.com/blog/openai-api). The new model is available as part
    of a paid ChatGPT Plus subscription, which costs US$20 per month. As I noted in
    my last article, OpenAI will capture your inputs and responses which that might
    use to train future versions of their models. This is enabled by default, but
    you can opt out of data collection using their form [here](https://docs.google.com/forms/d/e/1FAIpQLScrnC-_A7JFs4LbIuzevQ_78hVERlNqqCPCt3d8XqnKOfdRdQ/viewform).
  prefs: []
  type: TYPE_NORMAL
- en: The responses from GPT-4 are notably better than the previous GPT-3.5 model.
    According to OpenAI’s [technical repor](https://arxiv.org/pdf/2303.08774.pdf)t,
    the new model scored 1,400 out of 1,600 on the SAT exams (710 for language, 690
    for math), whereas the earlier model scored 1,260 (670, 590.)
  prefs: []
  type: TYPE_NORMAL
- en: Despite the excellent test scores, OpenAI reports that the output from the system
    is not always reliable and is not free from showing biases learned from the training
    data.
  prefs: []
  type: TYPE_NORMAL
- en: 'Despite its capabilities, GPT-4 has similar limitations to earlier GPT models:
    it is not fully reliable (e.g. can suffer from “hallucinations”), has a limited
    context window, and does not learn. Care should be taken when using the outputs
    of GPT-4, particularly in contexts where reliability is important. … GPT-4 can
    generate potentially harmful content. … It can represent various societal biases
    and worldviews that may not be representative of the user’s intent, or of widely
    shared values. — OpenAI [1]'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This sounds scary and ominous. But for what I am doing in this project, generating
    chords for songs, the stakes are a lot lower.
  prefs: []
  type: TYPE_NORMAL
- en: Using GPT-4 to Create Chords for Songs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In my previous article, I asked GPT-4 to create lyrics for a rock song about
    cats and dogs. Here’s my first attempt to get the model to create chords for this
    song.
  prefs: []
  type: TYPE_NORMAL
- en: '*RobG: Write chords for the first verse of this rock song.*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*Dogs and cats, they roam the streets'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Furry friends with hearts that beat
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Claws and paws, they rule the land
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Tails a-waggin’, they understand*
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*Side by side, they chase the wind'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Bound together, best of friends
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: They’re rockin’ in the moonlit night
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Dogs and cats, they’re out of sight*
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*GPT-4:* Here are the chords for the first verse of the song:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: G C
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Dogs and cats, they roam the streets
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Em D
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Furry friends with hearts that beat
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: G C
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Claws and paws, they rule the land
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Em D
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Tails a-waggin’, they understand
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Am C
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Side by side, they chase the wind
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: G D
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Bound together, best of friends
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: G C
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: They’re rockin’ in the moonlit night
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Em D
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Dogs and cats, they’re out of sight
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'The chords seem pretty good, albeit a tad basic. Like most Large Language Models,
    GPT-4 was trained on lots of text from books and the Internet and it seems to
    have picked up on enough discussions about chords to generate decent sequences.
    I like the AABA structure of the progression: G — C — Em — D, G — C — Em — D,
    **Am** — **C** — **G** — **D,** G — C — Em — D.'
  prefs: []
  type: TYPE_NORMAL
- en: 'However, there is an issue with text formatting. The chords don’t line up with
    the phrasing of the lyrics, i.e., the “D” chord should probably line up with “they’re”
    or “out” on the last line. I found an alternative approach that works fine: put
    the chords in line with the lyrics. I just had to ask.'
  prefs: []
  type: TYPE_NORMAL
- en: '*RobG: Show the chords in line with the lyrics in square brackets separated
    by spaces.*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*GPT-4:*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[G] Dogs and cats, they [C] roam the streets'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Em] Furry friends with [D] hearts that beat'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[G] Claws and paws, they [C] rule the land'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Em] Tails a-waggin’, [D] they understand'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Am] Side by side, they [C] chase the wind'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[G] Bound together, [D] best of friends'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[G] They’re rockin’ in the [C] moonlit night'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Em] Dogs and cats, they’re [D] out of sight'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Ah, much better. Having the D chord start before “out” for the last line makes
    sense because “they’re” is used as a pick-up note before the next chord starts.
  prefs: []
  type: TYPE_NORMAL
- en: In addition to generating chord progression, GPT-4 also explains things related
    to music theory. So I occasionally asked it questions about the songs I was working
    on, like this.
  prefs: []
  type: TYPE_NORMAL
- en: '*RobG: What key is this in?*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*GPT-4:* The chords provided for the rock song are in the key of G major. The
    G major key consists of the following chords: G (I), Am (ii), Bm (iii), C (IV),
    D (V), Em (vi), and F#dim (vii°).'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: That seems correct. And I appreciated the full explanation of the chords used
    in the key of G major. Notice how it used both the letter names of the chords
    and the Roman numeral notation, where major chords are capitalized, i.e., (I),
    and minor chords are in lowercase, i.e., (ii.) I liked the way it used the ‘°’
    character for the diminished chord.
  prefs: []
  type: TYPE_NORMAL
- en: I used a commercial app called Band-in-a-Box (BiaB) from [PG Music](https://www.pgmusic.com/)
    to hear what the chords sounded like. I typed in the chord names, pasted in the
    corresponding lyrics, chose a “rock” style, and it rendered the song. Here it
    is. Note that there is no melody, so feel free to sing along with your tune.
  prefs: []
  type: TYPE_NORMAL
- en: '**Cats and Dogs**, Lyrics and Chords by GPT-4, Produced by Author'
  prefs: []
  type: TYPE_NORMAL
- en: That sounded pretty good. The chord sequence was fine, and BiaB did an excellent
    job with the guitar, bass, and drum parts. Without the vocal melody, the best
    parts of the tune were the guitar fills at the end of each phrase.
  prefs: []
  type: TYPE_NORMAL
- en: Up next, I’ll show how I used AI to extract both the lyrics and chords from
    recordings of songs.
  prefs: []
  type: TYPE_NORMAL
- en: Using AI to Extract Lyrics and Chords from Songs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous article, I showed how I used the Whisper model from OpenAI [2]
    to transcribe the lyrics from audio files. For this project, I wrote some code
    to use another neural network called Autochord to extract the chords and stitch
    them together.
  prefs: []
  type: TYPE_NORMAL
- en: The Autochord model was created and trained by C. J. Bayron, a software engineer
    and ML enthusiast. It works well. You feed it an audio file, and seconds later,
    you get a list of start times, end times, and chords. Here’s an example visualization
    of the results from the model from his [online app](https://cjbayron.github.io/autochord/).
    You can generate a label file by following the instructions [here](https://github.com/cjbayron/autochord).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5ecea9e36de1dcad367c9da71c42a0c2.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Autochord Visualization**, Image by Author'
  prefs: []
  type: TYPE_NORMAL
- en: It only finds major and minor chords, but this was fine for my purposes. I then
    took the output from Whisper with the word timings and wrote some Python code
    to integrate the chords with the lyrics. For example, here is a rendering of a
    very famous song.
  prefs: []
  type: TYPE_NORMAL
- en: '**Happy Birthday**, by Patty Hill, Mildred J. Hill, Recording by Author'
  prefs: []
  type: TYPE_NORMAL
- en: And here is the transcription of lyrics and chords using Whisper and Autochord,
    respectively.
  prefs: []
  type: TYPE_NORMAL
- en: '[C] Happy Birthday to [G] you, Happy Birthday to [C] you,'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[C] Happy Birthday [F] dear reader, Happy [C] Birthday [G] to [C] you!'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This seems pretty good. All the chords were predicted correctly. It even picked
    up the quick turnaround for the last three words. The change to the F major chord
    should have come after the word “dear,” but that’s the only mistake.
  prefs: []
  type: TYPE_NORMAL
- en: Notice how the phrases are not split up correctly, however. This was based on
    the phrase segmentation calculated by the Whisper model. To straighten it out,
    I fed the transcription into GPT-4 with the following prompt.
  prefs: []
  type: TYPE_NORMAL
- en: '*RobG: Here are the chords and lyrics to a song.*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*[C] Happy Birthday to [G] you, Happy Birthday to [C] you,'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[C] Happy Birthday [F] dear reader, Happy [C] Birthday [G] to [C] you!*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*Break the song up into shorter lines at the commas, and show the current chord
    at the head of the line.*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*GPT-4:*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[C] Happy Birthday to [G] you'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[G] Happy Birthday to [C] you'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[C] Happy Birthday [F] dear reader'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[F] Happy [C] Birthday [G] to [C] you!'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: OK, that is easier to read. And the system will be able to analyze and generate
    lyrics with chords in this format, as you will see in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Composing Chords for New Songs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After I got the code in place to extract lyrics and chords from a song, my next
    step was to ask GPT-4 to analyze the chords from an existing tune. I did this
    with the song “[Grow](https://www.youtube.com/watch?v=aL3N7j_wXPk),” written and
    performed by The Agents, a ska band from Providence, RI. They agreed to let me
    use AI to analyze their song and use the analysis to create a new song in a similar
    style.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f77293ae05591f29da25fbe5e80a072c.png)'
  prefs: []
  type: TYPE_IMG
- en: '**The Agents**, Photo Used with Permission'
  prefs: []
  type: TYPE_NORMAL
- en: I ran my Python code to get the lyrics and chords from the recording, and I
    used GPT-4 to format the text using the technique I described above. Here’s the
    prompt I used to get an analysis of the chords. I am only showing an excerpt here,
    but I passed the complete lyrics into GPT-4.
  prefs: []
  type: TYPE_NORMAL
- en: '*RobG: Analyze the chords to this song, “Grow” by The Agents.*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*[Verse 1]'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Em] Yeah! On that day, the very first day I [C] met'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[C] You girl, the very first time I [G] held'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[G] Your hand, the very first time I [B] looked into'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[B] Your eyes, I told you that I loved you'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Em] From that day till ever after'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[C] The troubling times, the sorrow,'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[C] The [G] laughter'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[G] Hand in hand now we walk together'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[B] Can’t imagine anything better now*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*[Chorus]'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Em] Grow, let your love'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[G] Grow, [C] grow'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[C] Let your love come'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[G] Rise up, rise up'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[G] Plant the seed and let [B] your'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[B] Love grow, higher and higher* . . .'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*GPT-4:* In the song “Grow” by The Agents, there are several distinct chord
    progressions found in different sections of the song. These progressions give
    the song its structure and emotional content. Here’s an analysis of the chord
    progressions in each section:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Verse: The verse has a chord progression of Em — C — G — B. This progression
    features a mix of major and minor chords, creating a balance of tension and release.
    The Em (minor) to C (major) transition provides a sense of longing, while the
    move from G (major) to B (major) adds an uplifting quality.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Chorus: The chorus chord progression is Em — G — C — G — B. This progression
    starts with the same Em — G — C as the verse but replaces the final B chord with
    a G, and then goes to B. This slight variation maintains the uplifting quality
    of the verse but adds an extra layer of tension and release with the added G chord
    before moving to B.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Bridge: The bridge has a different progression: Bm — G — B — Em — C — G. It
    starts with a Bm (minor) chord, which adds a darker, more introspective quality.
    The progression then moves through G (major), B (major), and Em (minor) chords,
    creating a sense of build-up and anticipation before returning to the familiar
    C — G chords from the verse and chorus.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Interlude: The interlude features a more straightforward chord progression
    of C — B — Eb — C — Em — G. This progression provides a break from the primary
    progressions used in the verse and chorus, adding variety and keeping the listener
    engaged.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In summary, “Grow” by The Agents uses a combination of major and minor chords
    to create a balance of tension and release throughout the song. The verse and
    chorus share similar chord progressions, while the bridge and interlude provide
    contrast and variety to maintain listener interest.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Wow, that was a comprehensive analysis of the chord progressions. It appears
    that GPT-4 knows music theory well and it provided a summary of how listeners
    may react to the different parts of the song.
  prefs: []
  type: TYPE_NORMAL
- en: In the same chat session, I asked the model to create chords for a song using
    a similar style. I used GPT-4 to create these lyrics in [part one](https://medium.com/towards-data-science/writing-songs-with-gpt-4-part-1-lyrics-3728da678482)
    of this series.
  prefs: []
  type: TYPE_NORMAL
- en: '*RobG: Create chords for this song using a similar style.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Title: “Dance with the Fear”*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*[Verse 1]'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Waking up to a brand new day,
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Feeling the fear but not turning away,
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Facing the unknown, that’s where we’ll start,
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: With an open mind and a fearless heart.*
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*[Pre-Chorus]'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: No more hiding, no more doubts,
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: It’s time to let our courage out.*
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*[Chorus]'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Dance with the fear, don’t run away,
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Embrace the challenge, come what may.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Find your rhythm, face the unknown,
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: With every step, your strength has grown.*
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*[Verse 2]'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In the darkness, we’ll find the light,
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Guided by dreams that take flight.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: No more trembling, no more fright,
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Together we’ll soar to new heights.*
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*[Pre-Chorus] …'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Chorus] …*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*[Bridge]'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: When fear is knocking at your door,
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Stand tall, and face it once more.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The journey’s long, but you’ll find,
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: You’re stronger than you realized.*
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*[Chorus] …*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*[Outro]'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Dance with the fear
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Dance with the fear
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Dance with the fear
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Dance with the fear*
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'GPT-4:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Title: “Dance with the Fear”'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Verse]'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Em] Waking up to a [G] brand new day,'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[D] Feeling the fear but [A] not turning away,'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Em] Facing the unknown, [G] that’s where we’ll start,'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[D] With an open mind and [A] a fearless heart.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Pre-Chorus]'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Am] No more hiding, [C] no more doubts,'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[G] It’s time to let our [D] courage out.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Chorus]'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Bm] Dance with the fear, [C] don’t run away,'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[G] Embrace the challenge, [D] come what may.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Bm] Find your rhythm, [C] face the unknown,'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[G] With every step, your [D] strength has grown.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Verse 2]'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Em] In the darkness, [G] we’ll find the light,'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[D] Guided by dreams that [A] take flight.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Em] No more trembling, [G] no more fright,'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[D] Together we’ll soar to [A] new heights.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Pre-Chorus] …'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Chorus] …'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Bridge]'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Am] When fear is knocking [Em] at your door,'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[C] Stand tall, and face it [D] once more.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Am] The journey’s long, but [Em] you’ll find,'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[C] You’re stronger than you [D] realized.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Chorus] …'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Outro]'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Em] [G] Dance with the Fear'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[D] [A] Dance with the Fear'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Em] [G] Dance with the Fear'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[D] [A] Dance with the Fear'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: I first noticed how it placed the generated chords in square brackets in line
    with the lyrics, which was nice. It picked up on this style of notation from my
    previous interaction. The second thing I noticed is that it was in the key of
    G, like the analyzed song, “Grow.”
  prefs: []
  type: TYPE_NORMAL
- en: Here is a side-by-side comparison of the chord progressions.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/dc8ac86cc8dc7ba2b34752aeaacbfb61.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Comparison of Chord Progressions**, Image by Author'
  prefs: []
  type: TYPE_NORMAL
- en: You can see that although the chord progressions have some similarities, there
    are some noticeable differences. For example, “Grow” has a mix of passages that
    use 4, 5, and 6 chords, whereas “Dance with the Fear” always uses four chords
    for the progressions.
  prefs: []
  type: TYPE_NORMAL
- en: Both songs heavily use the Em, G, and C chords. “Grow” mixes in B and Bm, while
    “Dance with the Fear” mixes in A, Am, and D. For reference, here’s what GPT-4
    said earlier about the key of G major.
  prefs: []
  type: TYPE_NORMAL
- en: 'The G major key consists of the following chords: G (I), Am (ii), Bm (iii),
    C (IV), D (V), Em (vi), and F#dim (vii°).'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: “Grow” occasionally uses the out-of-key B chord, and “Dance with the Fear” uses
    the out-of-key A chord. I particularly like the A to Am transition from the verse
    to the pre-chorus. To find out more about this transition, I asked GPT-4.
  prefs: []
  type: TYPE_NORMAL
- en: '*RobG: What is it called if the chord changes from A to Am in a song in the
    key of G major?*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'GPT-4: In music theory, using a chord that is not diatonic to the key is called
    a “chromatic chord” or “chromaticism.” In the case of going from A major to A
    minor in the key of G major, the A major chord is not diatonic to the key, so
    it creates a sense of tension or dissonance. When the chord changes to A minor,
    it creates a sense of resolution or relaxation as the music returns to a diatonic
    chord.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Well, there you have it. I guess I like that chord change because of the return
    to the diatonic chord. Here is the song with lyrics and chords so you can listen
    for yourself. Once again, the backing tracks were provided by Band-in-a-Box.
  prefs: []
  type: TYPE_NORMAL
- en: '**Dance with the Fear**, Lyrics and Chords by GPT-4, Produced by Author'
  prefs: []
  type: TYPE_NORMAL
- en: The Band-in-a-Box app didn’t have any settings for ska music, so I chose a reggae
    style and cranked up the tempo from 85 to 150 beats per minute. I also dropped
    out the bass and drums for the second verse, known as “a rhythm” in reggae music,
    and dropped out the horns for the bridge to add interest to the song. Overall
    I think the song is pretty good, and the chord progressions work well. Of course,
    what’s missing is the vocal melody, but I will tackle that in the third and final
    installment of this series.
  prefs: []
  type: TYPE_NORMAL
- en: Check out two other tunes in the appendix with alternative rock and hip-hop
    styles.
  prefs: []
  type: TYPE_NORMAL
- en: Summary and Next Steps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this article, I provided a little background info on the new GPT-4 model
    from OpenAI. I showed how I used the Whisper and Autochord AI models to extract
    lyrics and chords from songs and used my Python code on [Google Colab](https://colab.research.google.com/github/robgon-art/ml-tabify/blob/main/ml_tabify_Lyrics_and_Chords_from_Songs.ipynb)
    to merge the two. I then showed how GPT-4 could analyze chord progressions for
    existing pieces and suggest chords for new songs in various styles.
  prefs: []
  type: TYPE_NORMAL
- en: My next step is to use GPT-4 to compose melodies for songs given lyrics and
    chords. I’ll write about this in the final article in the series.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Without any specific prompting to steer it in a different direction, GPT-4 seems
    to be working from a formula when composing songs. For example, it tends to use
    an *(A) verse, (B) chorus, (A) verse, (B) chorus, (C) bridge, (B) chorus, and
    (A) outro* form for the songs. And it always uses a four-chord pattern for the
    song parts.
  prefs: []
  type: TYPE_NORMAL
- en: By default, it will stick with the common diatonic chords in the key, but, as
    you saw above, you can steer it to use chromatic chords. In general, the chord
    patterns it creates sound good. I didn’t use the “regenerate” command at all.
    And the patterns seem unique, with occasional sparks of innovation.
  prefs: []
  type: TYPE_NORMAL
- en: In the discussion at the end of my last article, I hypothesized that most music
    fans wouldn’t care much if they found out that songwriters were using AI systems
    to help compose lyrics for songs. This would probably be true for composing chords,
    too. If, in the end, the songs are good, then the fans will like them, regardless
    of the tools that were used to create them.
  prefs: []
  type: TYPE_NORMAL
- en: Source Code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The source code for this project is available on [GitHub](https://github.com/robgon-art/ml-tabify).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f7b8766b29dca9f8af5af78db29f9455.png)'
  prefs: []
  type: TYPE_IMG
- en: Creative Commons Attribution Sharealike
  prefs: []
  type: TYPE_NORMAL
- en: Acknowledgments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I want to thank Pete Fayan from the Agents for his engagement with this project.
    I also thank Jon Gryckiewicz from Rhode Iceland and Fez Aswat from Hi Fi Monk
    for their contributions as well. I thank Jennifer Lim, Néstor Nápoles, and Oliver
    Strimpel for reviewing the article and providing feedback.
  prefs: []
  type: TYPE_NORMAL
- en: More on Writing Songs with GPT-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Here are the first and third articles in this series.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/writing-songs-with-gpt-4-part-1-lyrics-3728da678482?source=post_page-----173cfda0e5a1--------------------------------)
    [## Writing Songs with GPT-4: Part 1, Lyrics'
  prefs: []
  type: TYPE_NORMAL
- en: How to use the latest language model from OpenAI to help write lyrics for original
    songs
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'towardsdatascience.com](/writing-songs-with-gpt-4-part-1-lyrics-3728da678482?source=post_page-----173cfda0e5a1--------------------------------)
    [](/writing-songs-with-gpt-4-part-3-melodies-848ab3614e7a?source=post_page-----173cfda0e5a1--------------------------------)
    [## Writing Songs with GPT-4: Part 3, Melodies'
  prefs: []
  type: TYPE_NORMAL
- en: How to use the latest language model from OpenAI to help write melodies for
    new songs
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/writing-songs-with-gpt-4-part-3-melodies-848ab3614e7a?source=post_page-----173cfda0e5a1--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[1] OpenAI, [GPT-4 Technical Report](https://arxiv.org/pdf/2303.08774.pdf)
    (2023)'
  prefs: []
  type: TYPE_NORMAL
- en: '[2] A, Radford et al., [Robust Speech Recognition via Large-Scale Weak Supervision](https://cdn.openai.com/papers/whisper.pdf)
    (2022)'
  prefs: []
  type: TYPE_NORMAL
- en: '[4] C. J. Bayron, [Autochord - Automatic Chord Recognition Library and Chord
    Visualization App](https://archives.ismir.net/ismir2021/latebreaking/000008.pdf),
    (2021), *22nd International Society for Music Information Retrieval Conference*'
  prefs: []
  type: TYPE_NORMAL
- en: Appendix
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Here are two more songs in different styles that I created with the help of
    GPT-4\. You can read about how the lyrics were created in the [first article](https://medium.com/towards-data-science/writing-songs-with-gpt-4-part-1-lyrics-3728da678482)
    of this series. The bands agreed to let me use AI to analyze their songs and use
    the analyses to create new songs with similar styles.
  prefs: []
  type: TYPE_NORMAL
- en: Fading Echoes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The first song is based on “Bloody Brain” by [Rhode Iceland](https://www.facebook.com/RhodeIceland/),
    an alternative rock band from Lowell, MA.
  prefs: []
  type: TYPE_NORMAL
- en: '**Fading Echoes**, Lyrics and Chords by GPT-4, Produced by Author'
  prefs: []
  type: TYPE_NORMAL
- en: Battleground Voices
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The second song is based on “Break” by [Hi Fi Monk](https://www.facebook.com/HiFiMonk/),
    a hip-hop/funk/reggae band based in Boston, MA.
  prefs: []
  type: TYPE_NORMAL
- en: '**Battleground Voices**, Lyrics and Chords by GPT-4, Produced by Author'
  prefs: []
  type: TYPE_NORMAL
