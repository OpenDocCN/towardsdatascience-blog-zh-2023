- en: What to Expect in Python 3.12
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对Python 3.12的期待
- en: 原文：[https://towardsdatascience.com/python3-12-98245ecd6a97](https://towardsdatascience.com/python3-12-98245ecd6a97)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/python3-12-98245ecd6a97](https://towardsdatascience.com/python3-12-98245ecd6a97)
- en: New features, updates and removals in the upcoming Python 3.12 release
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 即将发布的Python 3.12版本中的新特性、更新和移除项
- en: '[](https://gmyrianthous.medium.com/?source=post_page-----98245ecd6a97--------------------------------)[![Giorgos
    Myrianthous](../Images/ff4b116e4fb9a095ce45eb064fde5af3.png)](https://gmyrianthous.medium.com/?source=post_page-----98245ecd6a97--------------------------------)[](https://towardsdatascience.com/?source=post_page-----98245ecd6a97--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----98245ecd6a97--------------------------------)
    [Giorgos Myrianthous](https://gmyrianthous.medium.com/?source=post_page-----98245ecd6a97--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://gmyrianthous.medium.com/?source=post_page-----98245ecd6a97--------------------------------)[![Giorgos
    Myrianthous](../Images/ff4b116e4fb9a095ce45eb064fde5af3.png)](https://gmyrianthous.medium.com/?source=post_page-----98245ecd6a97--------------------------------)[](https://towardsdatascience.com/?source=post_page-----98245ecd6a97--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----98245ecd6a97--------------------------------)
    [Giorgos Myrianthous](https://gmyrianthous.medium.com/?source=post_page-----98245ecd6a97--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----98245ecd6a97--------------------------------)
    ·6 min read·Jan 4, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----98245ecd6a97--------------------------------)
    ·阅读时间6分钟·2023年1月4日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/86526646e5b957d9c7aba56a61a39a50.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/86526646e5b957d9c7aba56a61a39a50.png)'
- en: Photo by [Yulia Matvienko](https://unsplash.com/@yuliamatvienko?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/kgz9vsP5JCU?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 摄影：由[Yulia Matvienko](https://unsplash.com/@yuliamatvienko?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)提供，来源于[Unsplash](https://unsplash.com/photos/kgz9vsP5JCU?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
- en: While developers and teams still work on upgrading projects to use the revolutionary
    (in terms of performance) [Python 3.11](https://medium.com/towards-data-science/python-3-11-f62708eed569),
    a new release is in the works.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管开发者和团队仍在将项目升级到具有革命性（在性能方面）的[Python 3.11](https://medium.com/towards-data-science/python-3-11-f62708eed569)，但新版本的发布正在进行中。
- en: Python 3.12 is expected to be released in the next few months, but the alpha
    version (currently `3.12.0a3`) is out and prerelease users can now have access
    to it in order to test out new features, report bugs and provide further recommendations
    — if needed.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Python 3.12预计将在接下来的几个月内发布，但alpha版本（当前为`3.12.0a3`）已发布，预发布用户现在可以访问它以测试新功能、报告错误并提供进一步建议——如果需要的话。
- en: In this article we will explore some of the changes we expect to be introduced
    according to the relevant PEP, including updates and additions of Python 3.12.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们将深入探讨根据相关PEP预计将引入的一些更改，包括Python 3.12的更新和新增内容。
- en: Removals and deprecations
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 移除和弃用
- en: As of Python 3.10, `distutils` was marked as deprecated — in accordance to [PEP
    632](https://peps.python.org/pep-0632/) — and **Python 3.12 will remove the module**
    once and for all. Note that no backwards compatibility is offered, meaning that
    any import from `distutils` will result into an error.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 从Python 3.10开始，`distutils`被标记为弃用——根据[PEP 632](https://peps.python.org/pep-0632/)——**Python
    3.12将彻底移除该模块**。请注意，不提供向后兼容性，这意味着任何来自`distutils`的导入都将导致错误。
- en: For many years, `distutils` — that was part of the standard library — was the
    preferred module for package management in Python however, the arrival of `setuptools`
    many years back has changed the landscape and even the [Python Packaging User
    Guide](https://packaging.python.org/en/latest/) would recommend `setuptools` since
    it was designed to overcome some of the `distutils`‘s limitations.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，作为标准库的一部分的`distutils`是Python中首选的包管理模块，但由于`setuptools`的出现改变了这一格局，即使是[Python包装用户指南](https://packaging.python.org/en/latest/)也会推荐`setuptools`，因为它旨在克服一些`distutils`的限制。
- en: Even though `setuptools` still uses functionality from `distutils`, the former
    has now integrated a copy of the latter which means that is no longer dependent
    on the standard library while `pip` has been replacing `distutils` with `setuptools`
    for a long time now. Therefore, it makes sense to remove the legacy `distutils`
    as part of Python 3.12 release.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 `setuptools` 仍然使用 `distutils` 的功能，但前者现在已经整合了后者的副本，这意味着它不再依赖于标准库，而 `pip` 长期以来一直在用
    `setuptools` 替代 `distutils`。因此，将遗留的 `distutils` 从 Python 3.12 版本中移除是有意义的。
- en: Furthermore, in Python 3.12, the `wstr` and `wstr_length` members will be removed
    from Unicode, as indicated in [PEP-623](https://peps.python.org/pep-0623/). This
    change is in line with the deprecation of certain Unicode APIs in [PEP-393](https://peps.python.org/pep-0393/).
    The removal of these members has resulted in the reduction of object size by 8
    or 16 bytes on 64bit platform.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在 Python 3.12 中，`wstr` 和 `wstr_length` 成员将从 Unicode 中移除，如 [PEP-623](https://peps.python.org/pep-0623/)
    所示。这一变更与 [PEP-393](https://peps.python.org/pep-0393/) 中某些 Unicode API 的弃用一致。这些成员的移除使得
    64 位平台上的对象大小减少了 8 或 16 字节。
- en: Improved Error Messages
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 改进的错误消息
- en: Python 3.12 will also make some improvements in messages reported by certain
    errors when these are being raised.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Python 3.12 还将对某些错误报告的消息进行改进。
- en: 'Whenever a `NameError` is raised in the top-level for modules from the standard
    library, the Python 3.12 interpreter will now report suggestions as part of the
    error message:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 每当在顶层模块中引发 `NameError` 时，Python 3.12 解释器将会在错误信息中报告建议：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Similarly, if a `NameError` occurs in a method and the instance has an attribute
    with the same name as the exception, the suggestion for correcting the error will
    be `self.<NAME>`, rather than the closest match in the method’s scope. For example,
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，如果在方法中发生 `NameError` 并且实例具有与异常同名的属性，纠正错误的建议将是 `self.<NAME>`，而不是方法范围内的最接近匹配。例如，
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In addition, whenever a `SyntaxError` is raised due to an invalid import syntax
    that follows the pattern `import x from y` instead of the valid syntax `from y
    import x`, a hint informing the user about this potential issue will be reported
    in the error message as illustrated in the example below.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，每当因无效的导入语法（遵循模式 `import x from y` 而不是有效的语法 `from y import x`）引发 `SyntaxError`
    时，错误信息中将会报告一个提示，告知用户这个潜在的问题，如下例所示。
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Finally, another improvement in the error message is related to `ImportError`
    and errors being raised whenever `from <module> import <name>` fails due to unresolved
    names. In Python 3.12, such error messages will also include suggestions for the
    unresolved name `<name>` based on the actual names included in module `<module>`.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，错误信息的另一个改进与 `ImportError` 相关，以及当 `from <module> import <name>` 因名称未解析而失败时引发的错误。在
    Python 3.12 中，这些错误信息将包括有关未解析名称 `<name>` 的建议，基于模块 `<module>` 中实际包含的名称。
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Linux perf profile is now available for Python functions
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 现在，Linux perf profile 可用于 Python 函数
- en: Linux perf profiler is a useful tool that helps users profile applications and
    obtain information related to their performance. In older Python versions, the
    profile was capable of reporting information native functions and procedures,
    written in C. As of Python 3.12, the interpreter is able to run in a special mode
    that allows the `perf` profiler report information for Python functions, too.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Linux perf profiler 是一个有用的工具，可以帮助用户分析应用程序并获取与其性能相关的信息。在较早的 Python 版本中，profile
    能够报告原生函数和过程的信息，这些函数和过程用 C 编写。从 Python 3.12 开始，解释器能够以一种特殊模式运行，使得 `perf` profiler
    也可以报告 Python 函数的信息。
- en: '`perf` profiling support can either be enabled from the start using the environment
    variable `[PYTHONPERFSUPPORT](https://docs.python.org/3.12/using/cmdline.html#envvar-PYTHONPERFSUPPORT)`
    or the `[-X perf](https://docs.python.org/3.12/using/cmdline.html#cmdoption-X)`
    option, or dynamically using `[sys.activate_stack_trampoline()](https://docs.python.org/3.12/library/sys.html#sys.activate_stack_trampoline)`
    and `[sys.deactivate_stack_trampoline()](https://docs.python.org/3.12/library/sys.html#sys.deactivate_stack_trampoline)`'
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`perf` 性能分析支持可以通过环境变量 `[PYTHONPERFSUPPORT](https://docs.python.org/3.12/using/cmdline.html#envvar-PYTHONPERFSUPPORT)`
    或 `[-X perf](https://docs.python.org/3.12/using/cmdline.html#cmdoption-X)` 选项启用，也可以通过动态方式使用
    `[sys.activate_stack_trampoline()](https://docs.python.org/3.12/library/sys.html#sys.activate_stack_trampoline)`
    和 `[sys.deactivate_stack_trampoline()](https://docs.python.org/3.12/library/sys.html#sys.deactivate_stack_trampoline)`
    启用。'
- en: ''
  id: totrans-29
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: — [Python Docs](https://docs.python.org/3.12/howto/perf_profiling.html#how-to-enable-perf-profiling-support)
  id: totrans-30
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: — [Python 文档](https://docs.python.org/3.12/howto/perf_profiling.html#how-to-enable-perf-profiling-support)
- en: sqlite3 command line interface
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: sqlite3 命令行接口
- en: Python 3.12 will also introduce a command-line interface for `sqlite3`. This
    means that the `sqlite3` module can also be invoked as a script with the use of
    the `-m` flag of the language’s interpreter so that a SQLite shell is initiated
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Python 3.12 还将引入一个 `sqlite3` 的命令行接口。这意味着 `sqlite3` 模块也可以通过使用语言解释器的 `-m` 标志作为脚本调用，从而启动
    SQLite Shell。
- en: '[PRE4]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Additionally, the [sqlite3 default adapters and converters](https://docs.python.org/3.12/library/sqlite3.html#sqlite3-default-converters)
    are now deprecated.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，[sqlite3 默认适配器和转换器](https://docs.python.org/3.12/library/sqlite3.html#sqlite3-default-converters)
    现在已被弃用。
- en: Removal of deprecated unittest features
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 移除已弃用的 unittest 特性
- en: 'As part ot the Python 3.12 release, several features of the `unittest` module
    that were previously deprecated in earlier versions (mostly v3.1 and 3.2) will
    now be removed. The removals will include:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 作为 Python 3.12 发布的一部分，一些在早期版本（主要是 v3.1 和 3.2）中已被弃用的 `unittest` 模块特性将被移除。移除的特性包括：
- en: Many `TestCase` method aliases, including `failUnless`, `failIf`, `failUnlessEqual`,
    `failIfEqual`, `failUnlessAlmostEqual`, `failIfAlmostEqual`, `failUnlessRaises`,
    `assert_`, `assertEquals`, `assertNotEquals`, `assertAlmostEquals`, `assertNotAlmostEquals`,
    `assertRegexpMatches`, `assertRaisesRegexp` and `assertNotRegexpMatches`
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多 `TestCase` 方法别名，包括 `failUnless`、`failIf`、`failUnlessEqual`、`failIfEqual`、`failUnlessAlmostEqual`、`failIfAlmostEqual`、`failUnlessRaises`、`assert_`、`assertEquals`、`assertNotEquals`、`assertAlmostEquals`、`assertNotAlmostEquals`、`assertRegexpMatches`、`assertRaisesRegexp`
    和 `assertNotRegexpMatches`
- en: The TestCase method `assertDictContainsSubset`
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TestCase 方法 `assertDictContainsSubset`
- en: The `TestLoader.loadTestsFromModule` parameter `*use_load_tests*`
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TestLoader.loadTestsFromModule` 参数 `*use_load_tests*`'
- en: The `_TextTestResult` alias of `TextTestResult`
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TextTestResult` 的别名 `_TextTestResult`'
- en: Other Language Additions and Improvements
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他语言添加和改进
- en: 'While it is impossible to share the details of every single modification introduced
    in Python 3.12, here’s a high-level overview of some additional improvements and
    changes I personally found quite interesting:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管不可能分享 Python 3.12 中每一个修改的详细信息，这里有一些我个人觉得相当有趣的额外改进和变化的高层概述：
- en: The `[os.path.isjunction()](https://docs.python.org/3.12/library/os.path.html#os.path.isjunction)`
    member is introduced in `os` module of the standard library, that lets users check
    to check if a given path is a junction
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在标准库的 `os` 模块中引入了 `[os.path.isjunction()](https://docs.python.org/3.12/library/os.path.html#os.path.isjunction)`
    成员，允许用户检查给定路径是否为连接点
- en: A new `[pathlib.Path.walk()](https://docs.python.org/3.12/library/pathlib.html#pathlib.Path.walk)`
    method is introduced and allows walking directory trees, similar to `os.walk()`
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引入了一个新的 `[pathlib.Path.walk()](https://docs.python.org/3.12/library/pathlib.html#pathlib.Path.walk)`
    方法，允许遍历目录树，类似于 `os.walk()`
- en: '[Removal of several modules and APIs](https://docs.python.org/3.12/whatsnew/3.12.html#pending-removal-in-python-3-13)
    that were previously deprecated in earlier Python versions'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[移除了一些在早期 Python 版本中已被弃用的模块和 API](https://docs.python.org/3.12/whatsnew/3.12.html#pending-removal-in-python-3-13)'
- en: For a more comprehensive coverage of all the changes planned to be introduced
    as part of the official release of version 3.12, you can refer to the relevant
    document, in the [official documentation](https://docs.python.org/3.12/whatsnew/3.12.html).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 要全面了解作为版本 3.12 正式发布的一部分计划引入的所有更改，可以参考相关文档，在 [官方文档](https://docs.python.org/3.12/whatsnew/3.12.html)中。
- en: Final Thoughts
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结束语
- en: 'Python’s 3.12 alpha release was recently made publicly available to prerelease
    users. In this article, we discussed some of the most interesting new features
    and updates based on the release details shared as of now. For the full details
    of the upcoming release you can refer to the [official changelog](https://docs.python.org/3.12/whatsnew/changelog.html#changelog).
    Some of these changes discussed in this article include:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Python 3.12 alpha 版本最近已向预发布用户公开。在本文中，我们讨论了一些最有趣的新特性和更新，基于目前分享的发布细节。有关即将发布的完整详细信息，可以参考
    [官方变更日志](https://docs.python.org/3.12/whatsnew/changelog.html#changelog)。本文讨论的一些变化包括：
- en: The removal of `distutils` module
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移除 `distutils` 模块
- en: The removal of `wstr` and `wstr_length` from Unicode
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 Unicode 中移除了 `wstr` 和 `wstr_length`
- en: Improved error messages for `NameError`, `SyntaxError` and `ImportError`
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了 `NameError`、`SyntaxError` 和 `ImportError` 的错误消息
- en: Added support for Linux perf profiler
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增加对 Linux perf profiler 的支持
- en: Added sqlite3 command line interface and deprecated default adapters and converters
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removal of some previously deprecated `unittest` features
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As stated in the [official Python documentation](https://docs.python.org/3.12/whatsnew/3.12.html),
    the new features and updates discussed are currently in draft form and more updates
    are expected whilst moving towards the actual release.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: Prerelease users should be aware that this document is currently in draft form.
    It will be updated substantially as Python 3.12 moves towards release, so it’s
    worth checking back even after reading earlier versions.
  id: totrans-56
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[**Become a member**](https://gmyrianthous.medium.com/membership) **and read
    every story on Medium. Your membership fee directly supports me and other writers
    you read. You’ll also get full access to every story on Medium.**'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://gmyrianthous.medium.com/membership?source=post_page-----98245ecd6a97--------------------------------)
    [## Join Medium with my referral link — Giorgos Myrianthous'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: As a Medium member, a portion of your membership fee goes to writers you read,
    and you get full access to every story…
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: gmyrianthous.medium.com](https://gmyrianthous.medium.com/membership?source=post_page-----98245ecd6a97--------------------------------)
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: '**Related articles you may also like**'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: '[](/diagrams-as-code-python-d9cbaa959ed5?source=post_page-----98245ecd6a97--------------------------------)
    [## Diagrams as Code in Python'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: Creating cloud system architecture diagrams with Python
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/diagrams-as-code-python-d9cbaa959ed5?source=post_page-----98245ecd6a97--------------------------------)
    [](/switch-statements-python-e99ea364fde5?source=post_page-----98245ecd6a97--------------------------------)
    [## How to Write Switch Statements in Python
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: Understanding how to write switch statements in Python using pattern matching
    or dictionaries
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/switch-statements-python-e99ea364fde5?source=post_page-----98245ecd6a97--------------------------------)
    [](/run-airflow-docker-1b83a57616fb?source=post_page-----98245ecd6a97--------------------------------)
    [## How to Run Airflow Locally With Docker
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: A step by step guide for running Airflow with Docker on your local machine
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/run-airflow-docker-1b83a57616fb?source=post_page-----98245ecd6a97--------------------------------)
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
