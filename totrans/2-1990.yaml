- en: The Aspiring Statistican’s Introduction to Random Variables
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/the-aspiring-statisticans-introduction-to-random-variables-7b26a057a89a](https://towardsdatascience.com/the-aspiring-statisticans-introduction-to-random-variables-7b26a057a89a)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/dcb6c0069cd80d228923f82aebc9de2f.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
- en: '[Pixabay](https://pixabay.com/photos/candy-sweets-sugar-confectionery-1924595/)
    ([License](https://pixabay.com/service/terms/))'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: When it comes to yelling “Surprise!”, the universe never gets tired.
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://timeseriesreasoning.medium.com/?source=post_page-----7b26a057a89a--------------------------------)[![Sachin
    Date](../Images/bd023298b414caf88f79b00ef032d065.png)](https://timeseriesreasoning.medium.com/?source=post_page-----7b26a057a89a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----7b26a057a89a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----7b26a057a89a--------------------------------)
    [Sachin Date](https://timeseriesreasoning.medium.com/?source=post_page-----7b26a057a89a--------------------------------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----7b26a057a89a--------------------------------)
    ·31 min read·May 12, 2023
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: In this article, we’ll take a contemplative walk across the land of chance.
    We’ll learn about **random walks**, about **discrete** and **continuous random
    variables**, and about their **probability distributions**. We’ll understand why
    it’s meaningless to assign a probability to a continuous random variable’s value.
    And in doing so, we’ll unearth the meaning of **probability density**. We’ll learn
    how **random processes** are formed, and their connection to **time series models**.
    We’ll end our itinerant wanderings with a short discussion on how random variables
    form the substrate of all regression models.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: On experiments, outcomes and sample spaces
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We experience change — unpredictable, random change devoid of any observable
    pattern or reason. It surprises us, it frustrates us, it unhinges our most well-thought
    plans.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: We sleep through our morning alarms, we get stuck in flash traffic, and we show
    up late for meetings. Only to discover that they are postponed because whoever
    called them was also stuck in traffic.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: But randomness isn’t always a fiend. Remember when the distracted Barista poured
    you a few extra millimeters of coffee? Did you protest? We’ve learnt to quietly
    enjoy the little windfalls of nature.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: We seek predictability, certainty, constancy. But they are impossible to find.
    Our senses and our brains aren’t evolved to know everything all the time. We experience
    random variability because we aren’t omniscient. On the other hand, God may have
    little use for dice. But even that is debated.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: We’ve learnt to exploit randomness. Games have been won or lost on a coin toss.
    A coin flip decided the owner of [a prized horse](https://en.wikipedia.org/wiki/Secretariat_(horse)).
    And [it was a coin flip](https://www.oregonencyclopedia.org/articles/portland_penny/#.ZF9Kjc5BzV8)
    that gave Portland, Oregon its name.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们学会了利用随机性。游戏中有赢有输是通过掷硬币决定的。一枚硬币的翻转决定了[一匹珍贵马匹](https://en.wikipedia.org/wiki/Secretariat_(horse))的归属。而[正是一次硬币翻转](https://www.oregonencyclopedia.org/articles/portland_penny/#.ZF9Kjc5BzV8)给了俄勒冈州的波特兰市这个名字。
- en: On a grander scale, random numbers power the [TLS protocol](https://en.wikipedia.org/wiki/Transport_Layer_Security)
    that encrypts most of the data flowing on the internet.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 从更宏大的尺度来看，随机数驱动着加密大部分互联网数据的[TLS协议](https://en.wikipedia.org/wiki/Transport_Layer_Security)。
- en: On an even grander scale, our Sun’s been flipping its magnetic field once [every
    11 years or so](https://en.wikipedia.org/wiki/Stellar_magnetic_field#Periodic_field_reversal).
    The “or so” means the Sun doesn’t want to tell us exactly when it will do it next.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 从更宏大的尺度来看，我们的太阳每[大约11年左右](https://en.wikipedia.org/wiki/Stellar_magnetic_field#Periodic_field_reversal)就会翻转一次磁场。这里的“左右”意味着太阳不想准确告诉我们下一次翻转的时间。
- en: The time at which you drag yourself out of bed, the amount of coffee in your
    morning cup, the number of sips you take to gulp it down, the outcomes of all
    the coins you tossed in your lifetime, and the number of years it takes our Sun
    to flip its field — they are all random numbers. Random values that have come
    about from an activity such as tossing a coin. In statistics, this activity is
    called an **experiment**.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 你起床的时间、早晨杯中的咖啡量、你喝下它的次数、你一生中掷出的所有硬币的结果以及我们太阳翻转磁场所需的年数——这些都是随机数。随机值是通过某些活动（如掷硬币）产生的。在统计学中，这种活动被称为**实验**。
- en: When you perform an experiment, you expect an **outcome**, typically one of
    several possible ones. When you toss a penny, you expect it to land heads or tails.
    But what if it lodges itself in the mud edge-wise or rolls off into the gutter?
    If you toss it while on top of Mount Everest, the wind could simply carry your
    penny away. And if you toss it [inside the International Space Station](https://www.youtube.com/watch?v=9qcRVljN2SE)…Well,
    you get the point. Should you ignore any of these outcomes? That depends on why
    you want to flip the penny. If your course of action depends on its landing Heads
    or Tails, you don’t care about any other outcome, and you’d want to design your
    experiment to ensure that you will get either Heads or Tails. The point to remember
    is that the design of the experiment decides the outcomes. As an experimenter,
    you must design the experiment to yield only outcomes that mean something to you.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 当你进行实验时，你期望一个**结果**，通常是几种可能结果中的一种。当你掷一枚硬币时，你期望它落在正面或反面。但是，如果它卡在泥土边缘或者滚进了排水沟呢？如果你在珠穆朗玛峰上掷硬币，风可能会把硬币吹走。如果你在[国际空间站](https://www.youtube.com/watch?v=9qcRVljN2SE)内掷硬币……嗯，你明白了。你是否应该忽略这些结果？这取决于你为什么要掷硬币。如果你的行动方案取决于硬币落在正面还是反面，你不关心其他任何结果，你会希望设计实验以确保得到正面或反面。需要记住的一点是，实验的设计决定了结果。作为实验者，你必须设计实验以只产生对你有意义的结果。
- en: We are interested in only Heads and Tails. So, let’s toss a coin on level ground
    inside an empty room. There is no sticky mud on the floor and there are no gutters
    or grates in sight. The possible outcomes of this controlled experiment are {Heads,
    Tails}. This is the **sample space** of the experiment. It’s the set of all possible
    outcomes that mean something to you, and it’s denoted by the letter **S**. If
    you observe any outcome other than Heads or Tails, you must discard it as if it
    never occurred and you must re-conduct the experiment. You could also redesign
    the experiment and incorporate the surprise outcome into the sample space. Or
    you could simply declare failure and go fishing.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只对正面和反面感兴趣。因此，让我们在一个空房间的平整地面上掷硬币。地板上没有黏稠的泥土，也没有排水沟或格栅。这个受控实验的可能结果是{正面，反面}。这是实验的**样本空间**。它是所有对你有意义的可能结果的集合，用字母**S**表示。如果你观察到除了正面或反面以外的任何结果，你必须将其视为未发生过，并重新进行实验。你也可以重新设计实验，将意外结果纳入样本空间。或者，你可以简单地宣布失败然后去钓鱼。
- en: If the experiment yields one of N possible outcomes, the sample space **S**
    is {s_1, s_2, s_3,…,s_N}. The size of **S,** denoted by |**S**|, is N.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果实验产生了N种可能结果中的一种，那么样本空间**S**是{s_1, s_2, s_3,…,s_N}。**S**的大小，用|**S**|表示，是N。
- en: When you conduct the experiment, every outcome in **S** is probable. When **S**={Heads,
    Tails}, the probability of occurrence of the two outcomes are denoted as P(Heads),
    and P(Tails). In the general case, the probability of occurrence of the kth outcome
    in **S** is denoted as P(s_k).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 当你进行实验时，**S**中的每个结果都是可能的。当**S**={正面，反面}时，两种结果的发生概率分别记为P(正面)和P(反面)。在一般情况下，第k个结果的发生概率记为P(s_k)。
- en: In our controlled experiment, the coin must land either Heads or Tails. There
    is no third outcome. The two outcomes are also **mutually exclusive**. If the
    coin has already come up Heads, it can’t possibly land Tails at the same time.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的受控实验中，硬币必须落地为正面或反面。没有第三种结果。这两种结果也是**互斥**的。如果硬币已经是正面，它不可能同时是反面。
- en: 'So the probability of the coin landing “Heads OR Tails” is:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 所以硬币落地为“正面或反面”的概率是：
- en: P(Heads ∪ Tails) = P(Heads) + P(Tails) — P(Heads **∩** Tails) = P(Heads) + P(Tails)
    = 1.0
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: P(正面 ∪ 反面) = P(正面) + P(反面) — P(正面 **∩** 反面) = P(正面) + P(反面) = 1.0
- en: It’s like saying, when you toss a coin, there is a 100% chance that it will
    land either Heads or Tails. In the controlled environment of a carefully arranged
    experiment, such a statement is never false. Logicians call it a **tautology**.
    It may sound a trivial statement but it’s of great practical use to the experimenter.
    After you’ve designed the experiment *that yields only mutually exclusive outcomes*,
    you should verify that the probabilities of all outcomes in the sample space sum
    up to is 1.0\. If they don’t, there is something wrong about your experiment’s
    design. Simply put, you need to redesign the experiment.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这就像是在说，当你抛掷一枚硬币时，它落地的结果要么是正面，要么是反面，概率是100%。在精心安排的实验的受控环境中，这种说法从不为假。逻辑学家称之为**重言式**。这可能听起来是个琐碎的声明，但对实验者来说非常实用。在你设计了*只产生互斥结果*的实验之后，你应该验证样本空间中所有结果的概率总和是否为1.0。如果不是，那么你的实验设计存在问题。简单来说，你需要重新设计实验。
- en: '![](../Images/62c837cbfe6aa05afae9509450917d59.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/62c837cbfe6aa05afae9509450917d59.png)'
- en: The sum of probabilities of all outcomes in the sample space is a perfect 1.0
    (i.e., 100%) (Image by Author)
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 样本空间中所有结果的概率总和是完美的1.0（即100%）（图像来源：作者）
- en: 'Taking action: A random walk across an island'
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 采取行动：在岛上随机漫步
- en: Earlier, we talked about taking some action based on the outcome of the experiment.
    Let’s explore that further. If you are a tourist in Manhattan and wish to take
    a self-guided walking tour of the island, a generally acceptable way to achieve
    this is to grab a tour book or download an app and follow its instructions.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 之前我们谈到过根据实验结果采取一些行动。让我们进一步探讨。如果你是曼哈顿的游客，想要进行自助游，一般来说，可以通过拿一本旅游指南书或下载一个应用程序并按照其指示行事来实现。
- en: 'But what if you let a coin direct you around Manhattan? Here’s how a hypothetical
    “coin-operated” exploration could work:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 但是如果你让硬币引导你在曼哈顿游览呢？下面是一个假设的“硬币操作”探索的运作方式：
- en: Suppose we start at the corner of W 34th St. & 8th Ave right outside Penn Station.
    Then we flip a coin — maybe not a real coin but a pseudo coin generated by a coin-flipping
    app. If it comes Heads, we turn right, else we turn left. Either way, we walk
    up or down the street until we come to the next 3-way or 4-way intersection at
    which point we flip the coin again and repeat the process. If we come to a dead
    end, we simply retrace to the previous intersection. The path we would trace is
    called a **random walk**.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们从W 34th St. & 8th Ave的角落开始，正好在Penn Station外面。然后我们抛一枚硬币——也许不是一枚真正的硬币，而是一个由掷币应用程序生成的伪硬币。如果结果是正面，我们向右转，否则向左转。不管怎样，我们一直沿街走，直到遇到下一个3叉路口或4叉路口，然后再次抛硬币并重复这个过程。如果我们遇到死胡同，我们只需回到之前的交叉口。我们所经过的路径被称为**随机漫步**。
- en: '![](../Images/8c7e7b22452e0abbf1bf237a646deb25.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8c7e7b22452e0abbf1bf237a646deb25.png)'
- en: A random walk around Manhattan. Left turns are colored blue. Right turns are
    colored red. (Image by Author) (Map underlay copyright [OpenStreetMap](https://www.openstreetmap.org/copyright)
    under OpenStreetMap [license](https://www.openstreetmap.org/copyright))
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在曼哈顿的随机漫步。左转标记为蓝色。右转标记为红色。（图像来源：作者）（地图底图版权 [OpenStreetMap](https://www.openstreetmap.org/copyright)
    依据 OpenStreetMap [许可证](https://www.openstreetmap.org/copyright)）
- en: While on a random walk, you would turn right or left based on whether the coin
    lands Heads or Tails. We’ll call the action of turning right or left, an **event**.
    Let’s create a new set E that will contain these **events**. **E** = {Turn Right,
    Turn Left}.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在随机游走过程中，你会根据硬币是否显示正面或反面来选择右转或左转。我们将右转或左转的动作称为一个 **事件**。让我们创建一个新集合 **E**，其中包含这些
    **事件**。**E** = {右转，左转}。
- en: Notice that the action of turning right or left is completely random. We’ll
    represent this action by a **random variable** which we’ll denote by the **bolded**
    capital letter **X**.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，右转或左转的动作完全是随机的。我们将用一个 **随机变量** 来表示这个动作，我们用**加粗**的大写字母 **X** 来表示。
- en: In other words, we define the random variable **X** to contain the action that
    we’ll take in response to a coin flip. Thus **X** will assume exactly one of the
    two values in **E**={Turn Right, Turn Left} based on the outcome in **S**={Heads,
    Tails}. Notice how **X** maps values from **S** to **E**.Outcomes to events.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，我们定义随机变量 **X** 来包含我们在硬币翻转后所采取的动作。因此，**X** 将根据 **S**={正面，反面} 中的结果假设 **E**={右转，左转}
    中的两个值之一。注意 **X** 是如何将 **S** 中的值映射到 **E** 中的。结果到事件。
- en: Heads → Turn Right
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 正面 → 右转
- en: Tails → Turn Left
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 反面 → 左转
- en: 'What do such mappings remind us of? They remind us of a function. **X** is
    a function! So let’s write it in function form as follows:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这样的映射让我们想起了什么？它们让我们想起了一个函数。**X** 是一个函数！所以让我们将其写成函数形式如下：
- en: '**X**(Heads) = Turn Right'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**X**（正面）= 右转'
- en: '**X**(Tails) = Turn Left'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**X**（反面）= 左转'
- en: 'You could also write **X** in the following Set notation which has the added
    advantage of making you look really smart:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以用以下集合符号写 **X**，它有额外的好处，让你看起来非常聪明：
- en: '**X**:**S** → **E**'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**X**:**S** → **E**'
- en: Either way, all it says is **X** is a function that maps values in set **S**
    to values in set **E**.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，所有这些都表示 **X** 是一个函数，它将集合 **S** 中的值映射到集合 **E** 中的值。
- en: '![](../Images/8fd51550f49063f2aaa6c1cd0c52f090.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8fd51550f49063f2aaa6c1cd0c52f090.png)'
- en: The random variable X maps outcomes in S to events in E (Image by Author)
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 随机变量 **X** 将结果映射到事件（作者提供的图像）
- en: 'Let’s recap: **A random variable is a function** that maps values from a set
    of random outcomes **S** to a set of events **E** that interest you. Since **X**
    is a function, it has a domain and a range. **X**’s domain are the outcomes in
    the sample space **S**. **X**’s range are the events in **E**.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下：**随机变量是一个函数**，它将随机结果集合 **S** 中的值映射到你感兴趣的事件集合 **E** 中。由于 **X** 是一个函数，它有一个定义域和一个值域。**X**
    的定义域是样本空间 **S** 中的结果。**X** 的值域是 **E** 中的事件。
- en: 'There are three kinds of random variables: **discrete**, **continuous**, and
    **mixed**. **X** happens to be the first kind. So let’s look closely at discrete
    category.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 随机变量有三种类型：**离散**，**连续**，和 **混合**。**X** 恰好是第一种。因此，让我们仔细看看离散类别。
- en: Discrete random variables and their properties
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 离散随机变量及其属性
- en: 'The random variable **X** is the engine that powers our random walk around
    Manhattan. We should notice the following properties of **X**:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 随机变量 **X** 是驱动我们在曼哈顿随机游走的引擎。我们应当注意到 **X** 的以下属性：
- en: '**X** assumes **discrete values** Turn Right and Turn Left (as against a continuous
    value such as temperature). Thus, **X** is a **discrete random variable**.'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**X** 假设为**离散值**“右转”和“左转”（与温度这样的连续值相对）。因此，**X** 是一个 **离散随机变量**。'
- en: You cannot say that Turn Right is any greater or lesser than Turn Left. You
    cannot impose any kind of order on the two values that **X** takes. Instead, you
    must treat them as equals. We call such random variables whose range contain values
    that cannot be ordered as **nominal random variables**.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你不能说右转比左转更大或更小。你不能对 **X** 取的两个值施加任何顺序。相反，你必须将它们视为相等。我们称这类随机变量，其范围包含无法排序的值为 **名义随机变量**。
- en: Since there is a probability P(s_k) associated with each outcome s_k in **S**,
    there is a probability P(**X**=x_i) associated with each event in x_i in **E**.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于每个结果 s_k 在 **S** 中都有一个关联的概率 P(s_k)，每个事件 x_i 在 **E** 中也都有一个关联的概率 P(**X**=x_i)。
- en: P(**X=**x_i) is called the **Probability Mass Function** (**PMF**) of **X**.
    The PMF assigns a probability to every possible value of the random variable.
    i.e. each value in the set of events **E**.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: P(**X=**x_i) 被称为 **概率质量函数** (**PMF**) 。PMF 为随机变量的每个可能值分配一个概率，即事件集合 **E** 中的每个值。
- en: The probabilities of all x_i in **E** sum up to 1.0\. No surprises here. Given
    the design of the random walk experiment, once your coin lands Heads or Tails,
    you will turn either Left or Right. There is no third action or event in **E**
    available to choose at will. The coin is directing your action totally and absolutely.
    You have no personal say in the matter, no [**free will**](https://en.wikipedia.org/wiki/Free_will).
    But what if you want free will? We’ll get to this interesting case soon. For now,
    no free will implies P(**X**=Turn Left) + P(**X**=Turn Right) = 1.0.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有**E**中的x_i的概率总和为1.0。这里没有惊喜。根据随机游走实验的设计，一旦你的硬币落在正面或反面，你将要么左转要么右转。**E**中没有其他可以随意选择的动作或事件。硬币完全和绝对地指引你的行动。你对这个问题没有个人意见，没有[**自由意志**](https://en.wikipedia.org/wiki/Free_will)。但如果你想要自由意志怎么办？我们很快会讨论这个有趣的情况。现在，没有自由意志意味着P(**X**=左转)
    + P(**X**=右转) = 1.0。
- en: Random variables as ‘onto’ functions
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 随机变量作为‘满射’函数
- en: In the random walk experiment, **X** happens to map each value in **S** to a
    unique value in **E**. Heads is mapped to Turn Right, Tails is mapped to Turn
    Left. Set theorists call such functions **one-to-one** and **onto**. A **One-to-One**
    function permits you to leave a value in **E** completely un-mapped to anything
    in **S**. But you do map it, you must map it to *exactly one* value in **S**.
    That’s how one-to-one functions work.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在随机游走实验中，**X**恰好将**S**中的每个值映射到**E**中的唯一值。正面映射到右转，反面映射到左转。集合论家称这样的函数为**一一对应**和**满射**。**一一对应**函数允许你将**E**中的某个值完全不映射到**S**中的任何东西。但你必须将它映射到**S**中的*恰好一个*值。这就是一一对应函数的工作原理。
- en: An **onto function** requires you to map *every* value in **E** to at least
    one value in **S**. It doesn’t matter if multiple values in **E** are mapped to
    the same value in **S**. All that ‘onto-ness’ requires is that no value in **E**
    stays un-mapped.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 一个**满射函数**要求你将**E**中的*每一个*值映射到**S**中的至少一个值。即使**E**中的多个值映射到**S**中的同一个值也无所谓。满射性要求的是**E**中的所有值都必须被映射。
- en: Combining the one-to-one and onto properties means that *every* value in **S**
    is mapped to *exactly one* value in **E** and vice versa. **S** and **E** end
    up with the same number of values. This is a feature of **X** but it doesn’t have
    to be a feature of all random variables.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 结合一一对应和满射的属性意味着**S**中的*每一个*值都被映射到**E**中的*恰好一个*值，反之亦然。**S**和**E**最终具有相同数量的值。这是**X**的一个特征，但它不必是所有随机变量的特征。
- en: Random variables don’t need to be one-to-one functions. But **random variables
    need to be onto functions**. What if a random variable is *not* an onto function?
    In that case, its range **E** will contain events that aren’t linked to any outcome
    in it’s domain **S**. Imagine working with an **X** whose domain **S** is {Heads,
    Tails} and whose range **E** is {Turn Right, Turn Left, *Walk into Oncoming Traffic*}.
    If your actions are always guided by the outcome of a coin toss that tells you
    to turn either left or right at an intersection, when would you ever deliberately
    walk into oncoming traffic? Obviously, never.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 随机变量不需要是一一对应的函数。但**随机变量需要是满射函数**。如果一个随机变量*不是*满射函数，会怎样呢？在这种情况下，它的范围**E**将包含一些与其定义域**S**中的任何结果都没有关联的事件。假设你在处理一个**X**，它的定义域**S**是{正面,
    反面}，范围**E**是{右转, 左转, *走进迎面而来的交通*}。如果你的行动总是由一个硬币抛掷的结果来指导，告诉你在交叉路口左转或右转，那么你什么时候会故意走进迎面而来的交通呢？显然，永远不会。
- en: Now in case you are thinking, “Why should my wanderings always be guided by
    what a stupid coin tells me? Don’t I have a right to exercise my [free will](https://en.wikipedia.org/wiki/Free_will)?”
    Yes, you do. What you just asked for is another random variable. To help you exercise
    free will, we’ll define a new variable **Y** whose domain **S** is {Heads, Tails,
    *Exercise Free Will*}, and whose range **E** is {Turn Right, Turn Left, Do something
    (not stupid)}.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你在想，“为什么我的游走总是要听从一个愚蠢的硬币呢？难道我没有权利行使我的[自由意志](https://en.wikipedia.org/wiki/Free_will)吗？”是的，你有。你刚刚要求的是另一个随机变量。为了帮助你行使自由意志，我们将定义一个新的变量**Y**，其定义域**S**是{正面,
    反面, *练习自由意志*}，范围**E**是{右转, 左转, 做些事情（不是愚蠢的）}。
- en: '**Y**(Heads) = Turn Right'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**Y**（正面）= 右转'
- en: '**Y**(Tails) = Turn Left'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**Y**（反面）= 左转'
- en: '**Y**(Exercise Free Will) = Do something (not stupid)'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**Y**（练习自由意志）= 做些事情（不是愚蠢的）'
- en: Once again, everything in **E** is mapped to something in **S** making **Y**
    an onto function. When you design random variables, you really cannot get away
    from making them onto functions.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，**E**中的所有内容都被映射到**S**中的某些东西，使得**Y**成为一个满射函数。当你设计随机变量时，你实际上不能避免将它们设计成满射函数。
- en: 'A more complex example: Counting right hand turns'
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一个更复杂的例子：右转次数计数
- en: As mentioned in the previous section, random variables don’t have to be one-to-one
    functions. In fact, many of them are many-to-one functions. Let’s look at an example.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，随机变量不一定是一对一的函数。实际上，许多随机变量是多对一的函数。让我们看一个例子。
- en: During your coin-controlled wanderings around Manhattan, if you want to keep
    track of the number of times you turned right in any sequence of 4 turns you took,
    you may define a random variable **W** to hold this value. In any sequence of
    4 turns you took, **W** will contain the number of times you turned right. The
    range of **W** is **E**={0, 1, 2, 3, 4} and **W**’s domain is a sample space **S**
    containing all possible sequences of length 4 of Heads and Tails.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在你在曼哈顿的硬币控制的漫步中，如果你想跟踪你在任何4次转弯序列中右转的次数，你可以定义一个随机变量**W**来保存这个值。在你进行的任何4次转弯序列中，**W**将包含你右转的次数。**W**的值域是**E**={0,
    1, 2, 3, 4}，而**W**的定义域是一个包含所有可能的长度为4的正面和反面的序列的样本空间**S**。
- en: '**S** = {“HHHH”, “HHHT”, “HHTH”, “HHTT”, “HTHH”, “HTHT”, “HTTH”, “HTTT”, “THHH”,
    “THHT”, “THTH”, “THTT”, “TTHH”, “TTHT”, “TTTH”, “TTTT”}'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**S** = {“HHHH”，“HHHT”，“HHTH”，“HHTT”，“HTHH”，“HTHT”，“HTTH”，“HTTT”，“THHH”，“THHT”，“THTH”，“THTT”，“TTHH”，“TTHT”，“TTTH”，“TTTT”}'
- en: In **S**, we could just as well substitute H with Turn Right and T with Turn
    Left. The character of **S** does not change if we do that, but we’ll leave them
    as H and T to keep in mind the that it is the coin tosses that are driving **W**.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在**S**中，我们也可以用右转替换H，用左转替换T。如果这样做，**S**的性质不会改变，但我们将保留H和T，以便记住是硬币投掷驱动了**W**。
- en: 'As before, **W** maps values from **S** to values in **E** but this time the
    mapping is many-to-one:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，**W**将**S**中的值映射到**E**中的值，但这次映射是多对一的：
- en: '![](../Images/56c28a20c07b68f3e67a24ab9225ca8f.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/56c28a20c07b68f3e67a24ab9225ca8f.png)'
- en: The random variable **W** is a many-to-one onto function (Image by Author)
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 随机变量**W**是一个多对一的映射函数（图片来源：作者）
- en: 'The random variable **W** shares all properties of **X** except for one. Let’s
    review all those properties:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 随机变量**W**与**X**共享所有特性，除了一个。让我们回顾一下这些特性：
- en: '**W** is a discrete random variable.'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**W**是一个离散随机变量。'
- en: There is a probability P(w_k) associated with every w_k in **E**={0, 1, 2, 3,
    4}.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每个**E**={0, 1, 2, 3, 4}中的w_k都有一个概率P(w_k)。
- en: All probabilities P(**W**=w_k) in the PMF of **W** must sum up to 1.0\. If they
    don’t, there is something wrong about how you have defined **W**. You should give
    its definition a second look.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**W**的概率质量函数中的所有概率P(**W**=w_k)必须总和为1.0。如果不是这样，那么**W**的定义可能存在问题。你应该重新检查一下它的定义。
- en: 'Now here’s the difference between **X** and **W**: Unlike **X**, the values
    **E**={0, 1, 2, 3, 4} in the range of **W** *can* be ordered. You turned right
    0 times is smaller than you turned right 1 time which is smaller than 2 times,
    and so on. That makes **W** an **ordinal random variable**. Recollect that **X**
    was a **nominal** random variable.'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，这里是**X**和**W**之间的区别：与**X**不同，**W**的值**E**={0, 1, 2, 3, 4} *可以*被排序。你右转0次小于你右转1次，小于右转2次，依此类推。这使得**W**成为一个**序数随机变量**。回忆一下，**X**是一个**名义**随机变量。
- en: The Probability Mass Function
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概率质量函数
- en: 'Let’s talk about the probability associated with each value of a random variable.
    We’ll build what’s known as the **Probability Mass Function** of a random variable.
    Let’s begin with **X**. Recollect that the domain of **X** is the sample space
    **S**={Heads, Tails}. The range of **X** is the event space **E**={Turn Right,
    Turn Left}. Turn Right maps to the subset of outcomes {Heads} in {Heads, Tails}.
    Turn Left maps to the subset {Tails}. Thus, the probability of occurrence of {Turn
    Right} is the ratio of the size of the subset {Heads} to the size of the sample
    sample **S**. The size of the set {Heads} is denoted as |{Heads}| and it is obviously
    1, and the size of {Heads, Tails} is denoted as |{Heads, Tails}| = |**S**| and
    it’s 2\. Thus, we have:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们讨论一下随机变量每个值的概率。我们将构建随机变量的**概率质量函数**。我们从**X**开始。回忆一下，**X**的定义域是样本空间**S**={正面，反面}。**X**的值域是事件空间**E**={右转，左转}。右转映射到{正面}在{正面，反面}中的子集。左转映射到子集{反面}。因此，{右转}发生的概率是{正面}子集的大小与样本空间**S**的大小之比。{正面}的大小表示为|{正面}|，显然为1，而{正面，反面}的大小表示为|{正面，反面}|
    = |**S**|，为2。因此，我们有：
- en: P(**X**=Turn Right) = |{Heads}| / |**S**| = 1 / 2 = 0.5
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: P(**X**=右转) = |{正面}| / |**S**| = 1 / 2 = 0.5
- en: Similarly, P(**X**=Turn Left) = |{Tails}| / |**S**| = 1 / 2 = 0.5
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，P(**X**=左转) = |{反面}| / |**S**| = 1 / 2 = 0.5
- en: The sum of all probabilities in the PMF of **X** equals 1.0.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**X**的PMF中所有概率的总和等于1.0。'
- en: '![](../Images/a4ccaf718fd2318836b2471b94d09f3d.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a4ccaf718fd2318836b2471b94d09f3d.png)'
- en: The PMF of **X** (Image by Author)
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**X**的PMF（图像由作者提供）'
- en: The PMF of **W** is a bit more interesting. Recollect that **W** is the number
    of times you turn right in any sequence of 4 coin tosses. The range of **W** is
    the set **E**={0,1,2,3,4}. We’ll work out the probabilities P(**W**=w_k) by building
    a table. Our table will have 4 columns. The first column will contain the four
    values from **E**, i.e. {0,1,2,3,4}. The second column will contain the outcomes
    from **S** that map to each of these four values. For example, if **W**=1, you
    have made exactly one right turn in any sequence of four coin tosses. The outcomes
    in **S** that result in exactly one right turn are {HTTT, THTT, TTHT, TTTH}. We’ll
    call this set **I**1\. The third column will contain the size of **I**, and the
    fourth column will contain the probability P(**W**=w_k).
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**W**的PMF稍微有趣一些。回忆一下，**W**是在4次掷硬币的任何序列中右转的次数。**W**的范围是集合**E**={0,1,2,3,4}。我们将通过构建一个表来计算概率P(**W**=w_k)。我们的表将有4列。第一列将包含**E**中的四个值，即{0,1,2,3,4}。第二列将包含映射到这些四个值的**S**中的结果。例如，如果**W**=1，你在4次掷硬币的任何序列中做出了一次右转。结果为**I**1的**S**中产生了正好一次右转的结果是{HTTT,
    THTT, TTHT, TTTH}。第三列将包含**I**的大小，第四列将包含概率P(**W**=w_k)。'
- en: 'Here’s the table:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这是表格：
- en: '![](../Images/243f163b5dfb562f83e0365830e859a3.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/243f163b5dfb562f83e0365830e859a3.png)'
- en: Table of probabilities associated with the values of **W** (Image by Author)
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 与**W**值相关的概率表（图像由作者提供）
- en: 'Let’s verify that the probabilities P(**W**=w_k) for k=0,1,2,3,4 sum up to
    1.0:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们验证一下，概率P(**W**=w_k)对于k=0,1,2,3,4的总和是否为1.0：
- en: 1/16 + 4/16 + 6/16 + 4/16 + 1/16 = 16/16 = 1.0
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 1/16 + 4/16 + 6/16 + 4/16 + 1/16 = 16/16 = 1.0
- en: 'Here’s how the plot of the PMF of **W** looks like:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 这是**W**的PMF图的样子：
- en: '![](../Images/b2f6aacf36db72ee4013bbc228254069.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b2f6aacf36db72ee4013bbc228254069.png)'
- en: PMF of **W** (Image by Author)
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**W**的PMF（图像由作者提供）'
- en: '**X** and **W** have been simple to construct. Their sample spaces were small
    and so were their ranges. For computing their PMFs, we summed up the counts of
    outcomes in **S** that mapped to each value of the random variable. Then we divided
    each sum by the size of the sample space, as follows:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '**X**和**W**的构建很简单。它们的样本空间很小，范围也小。为了计算它们的PMFs，我们将映射到随机变量每个值的**S**中的结果计数相加。然后，我们将每个和除以样本空间的大小，如下所示：'
- en: P(**W**=w_k) = |**I**_w_k|/|**S**|
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: P(**W**=w_k) = |**I**_w_k|/|**S**|
- en: 'Let’s look at one of these probabilities. The probability of making 2 right
    turns in a sequence of 4 turns is 6/16 = 0.375 or 37.5%. What does this probability
    really mean? What is its real-life interpretation? Here’s one way to interpret
    it:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看其中一个概率。在4次转弯中做出2次右转的概率是6/16 = 0.375或37.5%。这个概率究竟是什么意思？它的实际生活解释是什么？这里有一种解释方法：
- en: Millions of tourists visit Manhattan each year. Upon reaching Manhattan, suppose
    all of them feel an irresistible urge to go on a walking tour of the island. Each
    person begins their tour at the corner of a 3-way or 4-way intersection in the
    city. There, they take an unbiased coin out of their pocket and flip it. Depending
    on whether it lands Heads or Tails, they take a Right or Left turn at the intersection
    and proceed to the next intersection whereupon they flip the coin again. They
    repeat this process exactly four times. After all of them are done quenching their
    perambulatory cravings, an omniscient being counts all tours that contain exactly
    2 Right turns and divides this number by the total number of tours (or people).
    The resulting fraction will be *approximately* 0.375.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 每年有数百万游客访问曼哈顿。到达曼哈顿后，假设他们都迫不及待地想要进行一次岛上的步行游览。每个人从城市的3路或4路交叉口的角落开始他们的游览。在那里，他们从口袋里拿出一个公平的硬币并抛掷。根据它是正面还是反面，他们在交叉口处向右或向左转弯，然后前往下一个交叉口，再次抛掷硬币。他们将这个过程重复四次。当他们都满足了自己的步行欲望后，一个全知的存在统计了所有包含恰好2次右转的游览次数，并将这个数字除以总游览次数（或人数）。得到的结果将是*大约*0.375。
- en: The Cumulative Distribution Function
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 累积分布函数
- en: Once you know the PMF of **W**, you’ll also be able to answer questions like,
    in a sequence of 4 turns, what is the probability that a majority of turns you
    make are Right turns? Or in case you have an aversion to making Right turns, no
    more than 1 Right turn? For answering, in this case, possibly pointless but in
    the general case, useful questions like these, we need to build a new function
    called the **Cumulative Distribution Function** (**CDF**). The CDF of **W** will
    return the probability that the value of **W** is *at most k* for k=0,1,2,3, or
    4.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你知道了**W**的PMF，你还可以回答诸如在4次转弯的序列中，大多数转弯是否为右转？或者如果你不喜欢右转，最多只有1次右转？为了回答这些可能在某些情况下无关紧要但在一般情况下有用的问题，我们需要构建一个叫做**累积分布函数**（**CDF**）的新函数。**W**的CDF将返回**W**的值*至多为k*的概率，其中k=0,1,2,3或4。
- en: 'There is an easy way to build the CDF if you know the PMF:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你知道PMF，构建CDF有一个简单的方法：
- en: The CDF for **W**=k is the sum of the probabilities for k=0,1,2,…,k. BAM! Done.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '**W**=k的CDF是k=0,1,2,…,k的概率之和。搞定！'
- en: The CDF is denoted by a capital letter F.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: CDF用大写字母F表示。
- en: '![](../Images/19b2e84f34929c3f41586ae97ac56f38.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/19b2e84f34929c3f41586ae97ac56f38.png)'
- en: The Cumulative Distribution Function of **W** (Image by Author)
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '**W**的累积分布函数（图像由作者提供）'
- en: 'Let’s calculate the CDF of **W** using its PMF:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用**W**的PMF来计算CDF：
- en: F(**W**=0) = P(**W** <= 0) = P(**W**=0) = 1/16
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: F(**W**=0) = P(**W** <= 0) = P(**W**=0) = 1/16
- en: F(**W**=1) = P(**W** <= 1) = P(**W**=0) + P(**W**=1) = 1/16 + 4/16 = 5/16
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: F(**W**=1) = P(**W** <= 1) = P(**W**=0) + P(**W**=1) = 1/16 + 4/16 = 5/16
- en: F(**W**=2) = P(**W** <= 2) = P(**W**=0) + P(**W**=1) + P(**W**=2) = 1/16 + 4/16
    + 6/16 = 11/16
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: F(**W**=2) = P(**W** <= 2) = P(**W**=0) + P(**W**=1) + P(**W**=2) = 1/16 + 4/16
    + 6/16 = 11/16
- en: F(**W**=3) = P(**W** <= 3) = P(**W**=0) + P(**W**=1) + P(**W**=2) + P(**W**=3)
    = 1/16 + 4/16 + 6/16 + 4/16 = 15/16
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: F(**W**=3) = P(**W** <= 3) = P(**W**=0) + P(**W**=1) + P(**W**=2) + P(**W**=3)
    = 1/16 + 4/16 + 6/16 + 4/16 = 15/16
- en: F(**W**=4) = P(**W** <= 4) = P(**W**=0) + P(**W**=1) + P(**W**=2) + P(**W**=3)
    + P(**W**=4) = 1/16 + 4/16 + 6/16 + 4/16 + 1/16 = 16/16 = 1.0
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: F(**W**=4) = P(**W** <= 4) = P(**W**=0) + P(**W**=1) + P(**W**=2) + P(**W**=3)
    + P(**W**=4) = 1/16 + 4/16 + 6/16 + 4/16 + 1/16 = 16/16 = 1.0
- en: F(**W=**5) = P(**W** <= 5) = P(**W**=0) + P(**W**=1) + P(**W**=2) + P(**W**=3)
    + P(**W**=4) + P(**W**=5) = 1/16 + 4/16 + 6/16 + 4/16 + 1/16 + 0/16 = 16/16 =
    1.0
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: F(**W**=5) = P(**W** <= 5) = P(**W**=0) + P(**W**=1) + P(**W**=2) + P(**W**=3)
    + P(**W**=4) + P(**W**=5) = 1/16 + 4/16 + 6/16 + 4/16 + 1/16 + 0/16 = 16/16 =
    1.0
- en: 'So here are the six values of the CDF of **W**:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是**W**的CDF的六个值：
- en: F(**W**=0) = 1/16
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: F(**W**=0) = 1/16
- en: F(**W**=1) = 5/16
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: F(**W**=1) = 5/16
- en: F(**W**=2) = 11/16
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: F(**W**=2) = 11/16
- en: F(**W**=3) = 15/16
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: F(**W**=3) = 15/16
- en: F(**W**=4) = 16/16
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: F(**W**=4) = 16/16
- en: F(**W=**5) and P(any other value > 4) = 16/16
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: F(**W**=5) 和 P(任何其他大于4的值) = 16/16
- en: 'You may also want to know if F(.) is defined for **W** between 0 and 1, 1 and
    2 etc., i.e. fractional values of **W**. In a sense, calculating the CDF for such
    values is meaningless. The values 1.5, 2.6 , 3.1415926 etc. do not belong to the
    range of **W**. But we can still calculate **F** for such fictitious, in-between
    values of **W**. That’s because the CDF F(.) is the probability of **W** being
    *less than or equal to* some w_k. Therefore by definition, the domain of F(.)
    can have fractional (real) values and the corresponding probabilities are meaningful.
    Let’s calculate F(**W**=1.5):'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能还想知道F(.)是否在**W**介于0和1、1和2等之间定义，即**W**的分数值。从某种意义上说，计算此类值的CDF是毫无意义的。1.5、2.6、3.1415926等值不属于**W**的范围。但我们仍然可以计算**F**对于这些虚构的中间值。因此，根据定义，F(.)的定义域可以具有分数（实数）值，对应的概率也是有意义的。让我们计算F(**W**=1.5)：
- en: F(**W**=1.5) = P(**W** <= 1.5) = P(**W**=0) + P(**W**=1) + P(1 < **W** <= 1.5)
    = 1/16 + 4/16 + 0 = 5/16
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: F(**W**=1.5) = P(**W** <= 1.5) = P(**W**=0) + P(**W**=1) + P(1 < **W** <= 1.5)
    = 1/16 + 4/16 + 0 = 5/16
- en: We can similarly calculate F(.) for each one of the infinite number of real
    numbers in the close-open interval [1, 2). For each of them, the CDF will return
    the probability 5/16\. Thus, a plot of F(.) contains a straight line from k=1
    to k=2 whereupon it will step up to F(**W**=2)=11/16.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以类似地计算[1, 2)区间内每一个无限个实数的F(.)。对于每一个数值，CDF将返回概率5/16。因此，F(.)的图形将是一条从k=1到k=2的直线，之后它将跃升到F(**W**=2)=11/16。
- en: 'If you plot F(**W**=k) for each k, you’ll find a stepped graph as follows:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你为每个k绘制F(**W**=k)，你会发现如下的阶梯图：
- en: '![](../Images/86a31c395a6a733d38b98259de6ff2db.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/86a31c395a6a733d38b98259de6ff2db.png)'
- en: CDF of **W** (Image by Author)
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**W**的CDF（图像由作者提供）'
- en: 'Using the CDF, you can calculate the probability of taking a majority of Right
    turns in a sequence of 4 turns as follows:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 使用CDF，你可以计算在4次转弯的序列中采取大多数右转的概率，如下所示：
- en: P(k >2) = 1 — P(k <= 2) = 1 — F(**W**=2) = 1–11/16 = 5/16
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: P(k >2) = 1 — P(k <= 2) = 1 — F(**W**=2) = 1–11/16 = 5/16
- en: 'The probability of taking at most 1 Right turn in a sequence of 4 turns is:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个包含 4 次转动的序列中，最多取 1 次右转的概率是：
- en: P(k <= 1) = F(**W**=1). Also 5/16.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: P(k <= 1) = F(**W**=1)。同样是 5/16。
- en: See how easy it is to calculate such probabilities with the CDF?
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 看到用 CDF 计算这种概率有多简单了吗？
- en: For large sample spaces, the tabular procedure we used for computing the PMF
    (and then the CDF) is simply not practical. For instance, if **W** contains the
    number of right turns in a sequence of 10 coin-directed left and right turns,
    you must work with 2^10=1024 different outcomes in **S**. With a sequence of 20
    coin-directed turns, you are working with over a million outcomes.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 对于大型样本空间，我们用于计算 PMF（然后计算 CDF）的表格方法显然不够实际。例如，如果 **W** 表示在 10 次硬币导向的左转和右转序列中右转的次数，你必须处理
    **S** 中 2^10=1024 种不同的结果。对于 20 次硬币导向的转动，你将处理超过一百万种结果。
- en: 'While working with large and complex sample spaces, you must draw upon the
    appropriate formulas in Math. For example, if the random variable **Z** holds
    the number of right turns you took in a sequence of N coin-directed left/right
    turns where N can be arbitrarily large, **Z**’s domain is a sample space containing
    2^N unique N-length sequences of left and right turns. **Z**’s range is **E**={0,1,2,3,…,N}.
    The number of sequences in **S** that contain exactly k right turns is given by
    the following formula drawn from combinatorics:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理大型复杂样本空间时，你必须运用适当的数学公式。例如，如果随机变量 **Z** 表示在 N 次硬币导向的左/右转中你向右转的次数，其中 N 可以是任意大的，**Z**
    的定义域是一个包含 2^N 个独特 N 长度的左转和右转序列的样本空间。**Z** 的取值范围是 **E**={0,1,2,3,…,N}。**S** 中包含恰好
    k 次右转的序列数由以下组合公式给出：
- en: '![](../Images/d6c92ff730cf232c06276032bf8514a9.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d6c92ff730cf232c06276032bf8514a9.png)'
- en: The number of ways to choose k similar outcomes from a set of N outcomes (Image
    by Author)
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 从 N 个结果中选择 k 个相似结果的方式数（作者提供的图片）
- en: 'The probability that **Z** will take a value k is the ratio of the size of
    **I** to the size of **S**:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '**Z** 取值 k 的概率是 **I** 的大小与 **S** 的大小之比：'
- en: '![](../Images/9b62df64946daa3e8c825dfb8a1ad2ab.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9b62df64946daa3e8c825dfb8a1ad2ab.png)'
- en: The probability of taking k right turns in a sequence of N coin-directed turns
    (Image by Author)
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在 N 次硬币导向的转动序列中取 k 次右转的概率（作者提供的图片）
- en: 'For each value of k=0,1,2,…N, if you plot the corresponding probability P(**Z**=k),
    you’ll get a bell shaped curve that will peak at k=N/2 if N is even or at k=(N-1)/2
    and k=[(N-1)/2 + 1] if N is odd. To understand why it peaks at these values we
    appeal to the coin’s unbiasedness as follows:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个 k=0,1,2,…N 的值，如果你绘制相应的概率 P(**Z**=k)，你会得到一个钟形曲线，如果 N 是偶数，则峰值在 k=N/2 处；如果
    N 是奇数，则峰值在 k=(N-1)/2 和 k=[(N-1)/2 + 1] 处。要理解为什么它在这些值处达到峰值，我们可以依据硬币的公平性来解释：
- en: When your coin is unbiased, the expected number of times it’ll turn up Heads
    in a sequence of N flips is N/2\. And so, this is the expected number of times
    you’ll turn Right. Thus, you’d expect the probability of making N/2 right turns
    to be the highest amongst the probabilities for all other number of Right turns.
    Which explains the single bump in the PMF at or around N/2\. The plot below shows
    the PMF of **Z** when N=60.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的硬币是公平的时，在 N 次翻转的序列中，正面朝上的预期次数是 N/2。因此，期望你向右转的次数也是 N/2。所以，你可以预期在所有其他右转次数的概率中，
    N/2 次右转的概率是最高的。这解释了 PMF 在接近 N/2 处的单峰。下面的图显示了当 N=60 时 **Z** 的 PMF。
- en: '![](../Images/230857dacb799df6a6ec4cbb826f94ea.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/230857dacb799df6a6ec4cbb826f94ea.png)'
- en: PMF of **Z** (Image by Author)
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '**Z** 的 PMF（作者提供的图片）'
- en: If you run your eye up the Y-axis, you’ll notice how vanishingly small the probabilities
    are for most values of **Z**. That’s mostly because of the factorials in the denominator
    of the formula for P(**Z**=k). When k is small, k! is small but (N-k)! is huge
    and together with the 2^N, they totally squash down the denominator. That makes
    the probability really tiny for small values of k. When k is large, k! is enormous
    and this time, it dominates the denominator which once again knocks flat the probability
    for large values of k. In a sequence of 60 turns, if you were looking forward
    to making less than say 20 Right turns or more than 40 Right turns, fuggedaboudit.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你沿Y轴往上看，你会发现大多数**Z**值的概率是极其微小的。这主要是因为P(**Z**=k)公式中的分母有阶乘。当k很小的时候，k!很小，但(N-k)!很大，加上2^N，它们一起使得分母极其庞大。这使得k小值时的概率非常微小。当k很大时，k!极其庞大，这次它主导了分母，再次把大值k的概率压得很低。在60次试验中，如果你希望右转次数少于20次或多于40次，那是不可能的。
- en: The CDF of **Z** is F(**Z** = k) = P(**Z** <= k) = P(**Z**=0) + P(**Z**=1) +
    … + P(**Z**=k).
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '**Z**的CDF是F(**Z** = k) = P(**Z** <= k) = P(**Z**=0) + P(**Z**=1) + … + P(**Z**=k)。'
- en: 'We calculate this sum as follows:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 我们按如下方式计算这个总和：
- en: '![](../Images/0f3125b8c5fdc344f598503fba4e70c1.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0f3125b8c5fdc344f598503fba4e70c1.png)'
- en: CDF of **Z** (Image by Author)
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '**Z**的CDF（图片由作者提供）'
- en: Continuous random variables
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连续随机变量
- en: 'Now let’s look at a different creature in random land: the **continuous random
    variable**. To understand it, we’ll look at the wheelbase lengths of 205 automobiles:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看看随机领域中的另一种生物：**连续随机变量**。为了理解它，我们将查看205辆汽车的轴距长度：
- en: '![](../Images/2a8ebf511e39955785d28674fb3d7474.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2a8ebf511e39955785d28674fb3d7474.png)'
- en: 'Wheelbases of 205 automobiles (Data source: [UCI machine learning data set
    repository](https://archive-beta.ics.uci.edu/dataset/10/automobile) under (CC
    BY 4.0) license) (Image by Author)'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 205辆汽车的轴距（数据来源：[UCI机器学习数据集库](https://archive-beta.ics.uci.edu/dataset/10/automobile)，使用(CC
    BY 4.0)许可证）（图片由作者提供）
- en: This may look like a boring example but it perfectly illustrates how ubiquitous
    continuous random variables are.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 这看似是一个无聊的例子，但它完美地说明了**连续随机变量**的普遍性。
- en: Our sample space is a set of 205 vehicles. We’ll give each vehicle a unique
    id that goes from 1 through 205\. Thus, **S**={1,2,3,…,205}. Don’t think of the
    identifiers as numbers. Each id is simply a proxy for a specific vehicle in the
    data set. We’ll define a random variable **Y** on this sample space that maps
    each vehicle identifier in **S** to its wheelbase in inches. The question is,
    what is the range of **Y**?
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的样本空间是205辆汽车的集合。我们将给每辆车一个唯一的ID，从1到205。因此，**S**={1,2,3,…,205}。不要把这些标识符看作数字。每个ID仅仅是数据集中某辆特定车辆的代理。我们将在这个样本空间中定义一个随机变量**Y**，将每个车辆标识符**S**映射到其轴距（以英寸为单位）。问题是，**Y**的范围是什么？
- en: 'To answer this question, we must look at the nature of the quantity: “distance”.
    The wheelbase is the distance between the front and rear axles of the vehicle.
    The accuracy with which you’ll measure it is limited by the accuracy of your measurement
    device and any deliberate rounding that you’ll apply. For a 2-door Honda hatchback,
    you may have measured the wheelbase as 86.57754 inches before rounding it to 86.6\.
    If you instead round it to 3 decimals, it would be 86.578 inches, four decimals
    — 86.5775 inches, and so on. If there are two vehicles with wheel bases of 86.57754
    and 86.57755 inches, you could conceive of a third, a fourth, indeed any number
    of vehicles with a wheelbase that lies in between those two numbers. No matter
    how close the two numbers are there will always be a number that lies in between
    them. The point is that the wheelbase is a real number with an infinite theoretical
    precision. And so the range of **Y** is the set of **positive real numbers**.'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 要回答这个问题，我们必须看一下“距离”的本质。轴距是指车辆前后轴之间的距离。你测量它的准确度受限于你的测量工具的精度以及你可能应用的任何刻意舍入。对于一辆两厢本田车，你可能将轴距测量为86.57754英寸，然后舍入到86.6英寸。如果你将其舍入到三位小数，那将是86.578英寸，四位小数——86.5775英寸，依此类推。如果有两辆车的轴距分别为86.57754和86.57755英寸，你可以设想有第三辆、第四辆，甚至任意数量的车，其轴距介于这两个数值之间。不论这两个数字多么接近，总会有一个数字在它们之间。关键是轴距是一个具有无限理论精度的实数。因此，**Y**的范围是**正实数**的集合。
- en: Which brings us to the following way to characterize **continuous random variables:**
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 这引出了描述**连续随机变量**的以下方法：
- en: Random variables whose range is the set of real numbers (denoted by **ℝ)**,
    or any continuous interval within **ℝ** are known as **continuous random variables**.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 范围是实数集（记作**ℝ**）的随机变量，或**ℝ**内的任何连续区间被称为**连续随机变量**。
- en: 'Thus, **Y** is a function that maps **S** to a subset of **ℝ**. What subset
    of **ℝ** is it? Since we are talking about distance, this subset is the set of
    all positive real numbers and it’s denoted by **ℝ**>0\. We’ll put on our “look-smart”
    hat and mention **Y** in set notation as follows:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，**Y**是一个将**S**映射到**ℝ**的子集的函数。它是**ℝ**的哪个子集呢？由于我们在讨论距离，这个子集是所有正实数的集合，记作**ℝ**>0。我们将戴上“看起来聪明”的帽子，并用集合符号表示**Y**如下：
- en: '**Y** : **S** → **ℝ**>0'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '**Y** : **S** → **ℝ**>0'
- en: If **Y** had been a discrete random variable, its range would have been finite.
    A Probability Mass Function defined over this range would have assigned a probability
    to each value in the range**.** You would just have to ensure that all probabilities
    summed to 1.0\. But **Y** is continuous, and its range is **ℝ**>0 which is an
    [uncountably infinite set](https://en.wikipedia.org/wiki/Uncountable_set) which
    is (curiously) even bigger than “just” an infinite set. Any heroic attempts to
    construct a PMF on this set are bound to fail. The probabilities will always sum
    up to infinity!
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 如果**Y**是离散随机变量，它的范围将是有限的。在这个范围上定义的概率质量函数会为范围内的每个值分配一个概率。你只需确保所有概率加起来等于1.0。然而，**Y**是连续的，其范围是**ℝ**>0，这是一个[不可数的无限集](https://en.wikipedia.org/wiki/Uncountable_set)，它比“仅仅”无限集还要大。任何尝试在这个集合上构造概率质量函数的努力注定会失败。概率将永远加起来是无穷大！
- en: 'But surely, there is some probability measure associated with each wheelbase.
    Even in our sample of 205 vehicles, we see that some wheelbases occur more frequently
    than others. A frequency distribution of wheelbases quite readily illustrates
    this fact:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 但肯定的是，每个轴距都有一个概率测度。即使在我们205辆车的样本中，我们也看到一些轴距比其他轴距出现得更频繁。轴距的频率分布很容易说明这一点：
- en: '![](../Images/0e805bda323c37dabc0564c2b55c66b8.png)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0e805bda323c37dabc0564c2b55c66b8.png)'
- en: Frequency distribution of wheelbases (Image by Author)
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 车轮轴距的频率分布（图像由作者提供）
- en: 'Suppose you have to guess the wheelbase of a randomly chosen vehicle from this
    data set. Without even looking at the vehicle, you’d want to guess its wheelbase
    to lie in the range that contains the largest number of wheelbase measurements.
    This range is 93.8 to 97.4 inches and it contains 81 measurements, so you’d be
    right 81 / 205 i.e. about 40% of the times. If you want to make a more precise
    guess, you could half the bin size from 3.6 to 1.8 inches and base your guess
    on the revised frequency distribution which looks like this:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你需要根据这个数据集猜测随机选择的车辆的轴距。在甚至不查看车辆的情况下，你会希望将其轴距猜测在包含最多轴距测量值的范围内。这个范围是93.8到97.4英寸，它包含81个测量值，所以你会对81
    / 205，即大约40%的时间猜对。如果你想做出更精确的猜测，你可以将区间大小从3.6减少到1.8英寸，并根据修正后的频率分布进行猜测，如下所示：
- en: '![](../Images/8ff80ea1cb528f4c5c4f77ee4ea27cc9.png)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8ff80ea1cb528f4c5c4f77ee4ea27cc9.png)'
- en: Frequency distribution of wheelbases (Image by Author)
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 车轮轴距的频率分布（图像由作者提供）
- en: By shrinking the bin size by 50%, we have split the interval (93.8, 97.4] into
    two intervals (93.8, 95.6] and (95.6, 97.4]. You may now want to “shift-up” your
    guess to (95.6, 97.4] and be correct 54/205 i.e. about 26% of the time. These
    calculations have reassured us that for a continuous random variable, probabilities
    have meaning at least over intervals of values. Let’s develop this further.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将区间大小缩小50%，我们将区间（93.8, 97.4]分成两个区间（93.8, 95.6]和（95.6, 97.4]。你现在可以将你的猜测“上调”到（95.6,
    97.4]，并在54/205，即大约26%的时间内猜对。这些计算使我们相信，对于连续随机变量，概率至少在值的区间上是有意义的。让我们进一步探讨这个问题。
- en: The Cumulative Distribution Function, revisited
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 累积分布函数，重温
- en: Remember that our data set of 205 vehicles is just a small sample drawn from
    a theoretically (uncountably) infinite population of cars and their corresponding
    real valued wheelbases. In any interval such as (93.8, 97.4] from this set, there
    lie a theoretically (uncountably) infinite number of wheelbase measurements. The
    continuous random variable **Y** can take any of these values and its impossible
    to know the probability with which **Y** will take any particular value. But we
    may have found a sneaky workaround to this impediment.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，我们的205辆车的数据集只是从理论上（不可数）无限的汽车及其相应的实际车轮基数中抽取的小样本。在这个数据集中，如（93.8, 97.4]这样的区间中，理论上（不可数）存在无限多个车轮基数测量值。连续随机变量**Y**可以取这些值中的任何一个，而无法知道**Y**取某个特定值的概率。但我们可能找到了一种巧妙的解决办法。
- en: As long as we stay away from individual values of **Y** and instead calculate
    the probability of **Y** lying in some range of values, we can get a pretty decent
    estimate of the probability. And that’s just the thing to remember about continuous
    random variables — **estimates of probability are meaningful only for ranges of
    values**.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 只要我们避免单独的**Y**值，而是计算**Y**在某个值范围内的概率，我们就能得到一个相当不错的概率估计。这就是关于连续随机变量需要记住的关键——**概率的估计仅在值的范围内才有意义**。
- en: 'A useful range to consider is (-∞, y]. The accompanying probability P(**Y**
    <=y) once again leads us to the **Cumulative Distribution Function** of **Y**.
    Recollect that the CDF of a discrete random variable is a step function. This
    step function is discontinuous at each value of the random variable. But **Y**
    being a continuous random variable, its CDF isn’t a step function. Instead, its
    CDF is a continuous function of **Y**. How might the shape of this CDF look like?
    One way to guess its shape is by assuming that **Y** is a discrete variable. That
    is, we calculate the probabilities of P(**Y** <= y) for each value of y in the
    data set. To make it easy to calculate P(**Y** <= y) for the wheelbases data,
    we sort it so that looks like this: 86.6, 86.6, 88.4, 88.6, 88.6, 89.5, …, 115.6,
    115.6, 120.9\. Next, we calculate the probabilities as follows:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有用的范围是（-∞, y]。随之而来的概率P(**Y** <= y)再次引导我们到**累积分布函数**（CDF）中。回忆一下，离散随机变量的CDF是一个阶梯函数。这个阶梯函数在每个随机变量的值处是不连续的。但由于**Y**是一个连续随机变量，它的CDF不是阶梯函数。相反，它的CDF是**Y**的一个连续函数。那么这个CDF的形状可能是什么样的呢？猜测其形状的一种方法是将**Y**视为一个离散变量。也就是说，我们计算数据集中每个y值的P(**Y**
    <= y)的概率。为了方便计算**Y**的P(**Y** <= y)概率，我们将数据排序，使其看起来像这样：86.6, 86.6, 88.4, 88.6,
    88.6, 89.5, …, 115.6, 115.6, 120.9。接下来，我们按照以下方式计算概率：
- en: P(**Y** <= 86.6) = 2/205 = 0.0097561
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: P(**Y** <= 86.6) = 2/205 = 0.0097561
- en: P(**Y** <= 88.4) = 3/205 = 0.01463415
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: P(**Y** <= 88.4) = 3/205 = 0.01463415
- en: P(**Y** <= 86.6) = 5/205 = 0.02439024
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: P(**Y** <= 86.6) = 5/205 = 0.02439024
- en: …
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: …
- en: …
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: …
- en: …
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: …
- en: P(**Y** <= 120.9) = 205/205 = 1.0
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: P(**Y** <= 120.9) = 205/205 = 1.0
- en: 'In fact, we can do better than this. We’ll interpolate between adjacent values
    of **Y**. For instance, we’ll assume that in between 88.4 and 88.6, there lies
    a mystery data point x and we’ll assign the probability P(**Y** <= x) = 4/205
    = 0.0195122 to the first one of the two 86.6 values. This (somewhat silly smoothing
    technique) does in fact smooth the CDF by adding extra steps into the curve. At
    any rate, here’s how the fruit of our labor looks like:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，我们可以做得更好。我们将在**Y**的相邻值之间进行插值。例如，我们假设在88.4和88.6之间存在一个神秘的数据点x，并将概率P(**Y**
    <= x) = 4/205 = 0.0195122分配给两个86.6值中的第一个。这种（有些笨拙的平滑技术）确实通过在曲线中添加额外的步骤来平滑CDF。不管怎样，这就是我们劳动成果的样子：
- en: '![](../Images/f1d5389bf25f63677f8d320545e35817.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f1d5389bf25f63677f8d320545e35817.png)'
- en: Empirical CDF of **Y** (Image by Author)
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '**Y**的经验CDF（图像来源于作者）'
- en: Again, let’s not forget that **Y** is a continuous random variable. The real
    CDF of **Y** is a continuous function of **Y** whose shape may look *sort of*
    like the stepped approximation we have built. Then again, the real CDF may not
    look anything like the stepped function. It all depends on a crucial assumption
    we’ve silently made. We’ve assumed that our sample of 205 vehicles will do a terrific
    job of representing the characteristics of the population. If our sample fails
    to do that job, all bets are off about the presumed true shape of the CDF.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，**Y**是一个连续随机变量。**Y**的真实累积分布函数（CDF）是**Y**的一个连续函数，其形状可能看起来*有点像*我们构建的阶梯近似函数。不过，真实的CDF也可能与阶梯函数完全不同。这完全依赖于我们默默做出的一个关键假设。我们假设我们的205辆车的样本能很好地代表总体的特征。如果我们的样本未能做到这一点，那么关于CDF的真实形状的一切假设都不成立。
- en: 'Having said that, the empirical CDF of **Y** does look a bit like the CDF of
    a normally distributed variable. So why don’t we visually test this hunch. In
    our data sample, the mean wheelbase is 98.75659 inches and its standard deviation
    is 6.02176 inches. On the empirical CDF, if we superimpose the CDF of a continuous
    random variable that is normally distributed with a mean of 98.75659 and standard
    deviation of 6.02176, it looks like this:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，**Y** 的经验累积分布函数确实有点像正态分布变量的累积分布函数。那么我们来直观地测试一下这个猜测。在我们的数据样本中，平均车轴长度为98.75659英寸，标准差为6.02176英寸。在经验累积分布函数上，如果我们叠加一个均值为98.75659、标准差为6.02176的正态分布连续随机变量的累积分布函数，看起来是这样的：
- en: '![](../Images/6ab90e40e8e733d6cf832e14c1effc99.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6ab90e40e8e733d6cf832e14c1effc99.png)'
- en: The CDF of a normally distributed random variable superimposed on the empirical
    CDF of **Y** (Image by Author)
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 正态分布随机变量的累积分布函数叠加在**Y**的经验累积分布函数上（作者提供的图像）
- en: To the eye, the empirical CDF of **Y** seems to fit the Normal variable’s CDF
    in an okay sort of way. It’s definitely not a good fit especially in the low and
    the middle regions of the wheelbase spectrum. If we estimate any quantities using
    the fitted Normal CDF, the crummy fit of this CDF to the data will cause systematic
    biases to creep into the probability estimates.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 视觉上，**Y** 的经验累积分布函数（CDF）似乎以某种程度上拟合了正态变量的累积分布函数。但在车轴长度谱的低区域和中间区域，这种拟合显然不是很好。如果我们使用拟合的正态累积分布函数来估计任何量，这种累积分布函数与数据的不良拟合将导致系统性偏差进入概率估计中。
- en: So what kinds of estimates are we looking to make? A useful one is the probability
    of the wheelbase lying in some interval (a, b]. This is simply the difference
    between the value returned by the CDF for the two ends of the interval.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 那么我们要进行什么样的估计呢？一个有用的估计是车轴长度落在某个区间 (a, b] 内的概率。这只是CDF在区间两端返回的值之间的差异。
- en: P(a < **Y** <= b) = P(**Y** <= b) — P(**Y** <= a) = F(**Y**=b) — F(**Y**=a)
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: P(a < **Y** <= b) = P(**Y** <= b) — P(**Y** <= a) = F(**Y**=b) — F(**Y**=a)
- en: Let’s calculate this probability for the interval (93.8, 97.4]. Remember how
    we had calculated it to be 40% using the frequency distribution plot? Let’s look
    at what this probability comes to using both the empirical CDF and its approximation
    to the Normal CDF curve.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们计算区间 (93.8, 97.4] 的概率。记得我们是如何通过频率分布图计算出这个概率为40%的吗？让我们看看使用经验累积分布函数及其对正态累积分布函数曲线的近似，这个概率是多少。
- en: 'We’ll start by setting a and b:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从设置a和b开始：
- en: a = 93.8, b=97.4
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: a = 93.8, b = 97.4
- en: 'In the figure below, we’ve used a red colored brace to mark this interval (93.8,
    97.4] on the X axis of the CDF curves. We’ll also mark off the following points
    on both plots, reading off the CDF values F(**Y**=y) from the Y-axis:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在下图中，我们用红色的括号标记了CDF曲线X轴上的区间 (93.8, 97.4]。我们还将在两个图上标出以下点，从Y轴读取累积分布函数值F(**Y**=y)：
- en: 'On the blue plot:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在蓝色图上：
- en: (a, F(**Y**=a)) = (93.8, F(**Y**=93.8)) = (93.8, 0.18315)
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: (a, F(**Y**=a)) = (93.8, F(**Y**=93.8)) = (93.8, 0.18315)
- en: (b, F(**Y**=b)) = (97.4, F(**Y**=97.4)) = (97.4, 0.57982)
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: (b, F(**Y**=b)) = (97.4, F(**Y**=97.4)) = (97.4, 0.57982)
- en: 'And on the orange plot:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 在橙色图上：
- en: (a, F(**Y**=a)) = (93.8, F(**Y**=93.8)) = (93.8, 0.20522)
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: (a, F(**Y**=a)) = (93.8, F(**Y**=93.8)) = (93.8, 0.20522)
- en: (b, F(**Y**=b)) = (97.4, F(**Y**=97.4)) = (97.4, 0.41088)
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: (b, F(**Y**=b)) = (97.4, F(**Y**=97.4)) = (97.4, 0.41088)
- en: '![](../Images/082b33a98f020d5f144adf1bb19ccb03.png)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/082b33a98f020d5f144adf1bb19ccb03.png)'
- en: (Image by Author)
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: (作者提供的图像)
- en: 'On either plot, the probability of the wheelbase lying in the interval (93.8,
    97.4] is:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在任一图上，车轴长度落在区间 (93.8, 97.4] 的概率是：
- en: P(93.8 < **Y** <= 97.4) = F(**Y**=97.4) — F(**Y**=93.8)
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: P(93.8 < **Y** <= 97.4) = F(**Y**=97.4) — F(**Y**=93.8)
- en: If we pick off the values of F(.) from the blue empirical CDF, we get the probability
    of the wheelbase lying in the interval (93.8, 97.4] as (0.57982–0.18315) = 0.39667
    (or ~40%). This matches the 40% estimate we arrived at using the frequency histogram.
    There ought be no surprise that these estimates agree. Both estimates were calculated
    from the same data sample using two different methods. But if we calculate P(93.8
    < **Y** <= 97.4) using the idealized Normal CDF, we get a value (0.41088–0.20522)
    = .20566 (or ~21%). This value is almost half the empirical value. This downward
    bias in the estimate is expected if you look at how much the idealized CDF deviates
    from the empirical version in the middle portion of the curve.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们从蓝色经验CDF中提取 F(.) 的值，我们得到车轮基距在区间 (93.8, 97.4] 内的概率为 (0.57982–0.18315) = 0.39667（或约40%）。这与我们使用频率直方图得到的40%估计值相符。对于这些估计值一致不会感到惊讶。这两个估计值都是从相同的数据样本使用两种不同的方法计算得出的。但如果我们使用理想化的正态CDF
    计算 P(93.8 < **Y** <= 97.4)，我们得到的值是 (0.41088–0.20522) = .20566（或约21%）。这个值几乎是经验值的一半。如果你查看理想化CDF在曲线中间部分与经验版本的偏差，这种向下偏差是可以预期的。
- en: The Probability Density Function
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概率密度函数
- en: The size of the interval we worked with was 3.6 inches. You could squeeze it
    down to an arbitrarily tiny length that is still greater than zero. The CDF will
    still give you a good working estimate of probability that the wheelbase will
    lie in that super-tiny sized interval.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用的区间大小是3.6英寸。你可以将它压缩到一个仍然大于零的任意小长度。CDF 仍然会给你一个有效的车轮基距位于这个超小区间内的概率估计。
- en: 'For example, if you want to find the probability of a wheelbase lying in an
    interval of length .000001 inches starting at 93.8 inches. So you set y=93.8 and
    δy = .000001 and calculate F(**Y**=y+δy) — F(**Y**=y). Using the Normal CDF, you
    can calculate this probability as follows:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你想找到车轮基距在以93.8英寸为起点，长度为.000001英寸的区间内的概率。所以你设置 y=93.8 和 δy = .000001，然后计算
    F(**Y**=y+δy) — F(**Y**=y)。使用标准正态分布CDF，你可以这样计算这个概率：
- en: P(93.8 < **Y** <= 93.800001) = 0.20522269383945058–0.20522264662597367 = 4.721347690583855e-08
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: P(93.8 < **Y** <= 93.800001) = 0.20522269383945058–0.20522264662597367 = 4.721347690583855e-08
- en: 'This is a terribly tiny number. But still a finite positive probability. If
    you squeeze down this interval even more, the probability associated with it will
    reduce even further. What if you want to explore the nature of probability at
    exactly 93.8? For that, you must switch to a different measure. And that measure
    is the **probability density** and it’s denoted by the function f(.). To calculate
    it, you divide the probability of occurrence over an interval by the length of
    the interval:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常小的数字。但仍然是有限的正概率。如果你进一步压缩这个区间，与之相关的概率将会进一步减少。如果你想探索在93.8处的概率性质呢？为此，你必须切换到不同的度量。这个度量就是**概率密度**，它由函数f(.)表示。计算时，你将区间内的发生概率除以区间的长度：
- en: '![](../Images/537a73b3a90bec6d674a39675a16d338.png)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/537a73b3a90bec6d674a39675a16d338.png)'
- en: The density of probability over a finite interval (Image by Author)
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 概率在有限区间内的密度（图片由作者提供）
- en: But what if the probability is *not* distributed uniformly across the (y, y
    + δy] interval? Wouldn’t that reduce the accuracy of the density estimate at **Y**=y?
    We ran into exactly this situation when we shrunk the bin size of the histogram
    plot from 3.6 to 1.8 inches. When we shrunk the bin size, each interval along
    the X-axis of the histogram halved in size. The interval (93.8, 97.4] split into
    two intervals (93.8, 95.6] and (95.6, 97.4]. There were 81 wheelbase measurements
    lying in the parent interval (93.8, 97.4]. But these 81 measurements not split
    proportionately into the two child intervals in a roughly 1:1 ratio. Far from
    it, 27 of them went into (93.8, 95.6] while the remaining 54 went into (95.6,
    97.4]. Thus bringing to light that the probability was not uniform across the
    parent interval (93.8, 97.4].
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 但是如果概率在 (y, y + δy] 区间内*不*均匀分布怎么办？这难道不会降低**Y**=y处密度估计的准确性吗？当我们将直方图图的箱体大小从3.6英寸缩小到1.8英寸时，正遇到了这种情况。当我们缩小箱体大小时，直方图的X轴上的每个区间都缩小了一半。区间
    (93.8, 97.4] 被拆分成两个区间 (93.8, 95.6] 和 (95.6, 97.4]。在父区间 (93.8, 97.4] 内有81个车轮基距测量值。但这81个测量值并没有按大约1:1的比例均匀拆分到两个子区间中。相反，27个测量值进入了
    (93.8, 95.6]，而剩余的54个进入了 (95.6, 97.4]。这揭示了父区间 (93.8, 97.4] 内的概率并不均匀。
- en: 'If for a minute we assume that the probability is uniformly distributed in
    the interval (93.8, 95.6], we can use the empirical CDF to calculate the *estimate*
    of **probability density** at exactly 93.8 inches. We set δy to 3.6 inches and
    calculate the density as follows:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们假设在区间(93.8, 95.6]内概率是均匀分布的，我们可以使用经验CDF来计算**概率密度**在93.8英寸处的*估计值*。我们将δy设置为3.6英寸，并按如下方式计算密度：
- en: f(**Y**=93.8) = [ F(**Y**=93.8+3.6) — F(**Y**=93.8) ] / 3.6 = (0.57982–0.18315)
    / 3.6 = 0.11019
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: f(**Y**=93.8) = [ F(**Y**=93.8+3.6) — F(**Y**=93.8) ] / 3.6 = (0.57982–0.18315)
    / 3.6 = 0.11019
- en: 'But we know that the probability is not uniform across this interval. Therefore,
    if we shrink δy to 1.8 inches, we expect the density estimate at 93.8 to change.
    And it sure does so:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 但我们知道在这个区间内概率并不是均匀的。因此，如果我们将δy缩小到1.8英寸，我们预计93.8处的密度估计会发生变化。结果确实如此：
- en: f(**Y**=93.8) = [ F(**Y**=93.8+1.8) — F(**Y**=93.8) ] / 1.8 = (0.31587–0.18315)
    / 1.8 = 0.07373
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: f(**Y**=93.8) = [ F(**Y**=93.8+1.8) — F(**Y**=93.8) ] / 1.8 = (0.31587–0.18315)
    / 1.8 = 0.07373
- en: 'And if we shrink δy further to 0.9 inches, we find that the estimate changes
    again:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们进一步将δy缩小到0.9英寸，我们发现估计值再次发生变化：
- en: f(**Y**=93.8) = [ F(**Y**=93.8+0.9) — F(**Y**=93.8) ] / 0.9 = (0.28948–0.18315)
    / 0.9 = 0.11814
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: f(**Y**=93.8) = [ F(**Y**=93.8+0.9) — F(**Y**=93.8) ] / 0.9 = (0.28948–0.18315)
    / 0.9 = 0.11814
- en: 'If we continue shrinking δy, the estimate of probability density at **Y**=93.8
    will keep changing. It may converge to a stable value, or it may bounce around
    without any visible pattern. Which of the two behaviors it puts on depends on
    how “well-behaved” our sample data set is — how representative it is of the population.
    At any rate, whether the density estimate bounces around or seems to converge,
    it won’t be the true value of the density at **Y**=93.8\. So what is the true
    value of the probability density at **Y**=93.8? The true value, or as statisticians
    like to fashionably call the **asymptotic** value, is when the interval δy shrinks
    to an infinitesimally small size. If this lights up the eyes of all you Calculus
    lovers, you won’t be disappointed. The true value of the probability density at
    **Y**=93.8 is given by the following limit:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们继续缩小δy，**Y**=93.8的概率密度估计值将不断变化。它可能会趋向于一个稳定值，或者可能会在没有明显模式的情况下波动。哪种行为取决于我们的样本数据集的“表现良好”程度——它是否能代表总体。无论密度估计是否波动或趋于收敛，它都不会是**Y**=93.8的真实值。那么**Y**=93.8处的真实概率密度值是什么呢？真实值，或者统计学家喜欢称之为**渐近**值，是当间隔δy缩小到一个无限小的大小时。如果这让你所有的微积分爱好者眼睛发光，你不会失望的。**Y**=93.8处的真实概率密度值由以下极限给出：
- en: '![](../Images/078a00d0c9be2aad2d9dc4801ffad0a6.png)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/078a00d0c9be2aad2d9dc4801ffad0a6.png)'
- en: Probability density at Y=93.8 inches (Image by Author)
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: Y=93.8英寸处的概率密度（图像作者提供）
- en: From Calculus, we know that the above limit is the derivative of CDF of F(**Y**)
    at y = 93.8.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 从微积分中，我们知道上述极限是**Y**在y = 93.8处的CDF的导数。
- en: 'In general, the probability density of a continuous random variable **Y** is
    the derivative of its CDF:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 一般而言，连续随机变量**Y**的概率密度是其CDF的导数：
- en: '![](../Images/14a7b6a1fdcf7e491dbf77f88405dd14.png)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/14a7b6a1fdcf7e491dbf77f88405dd14.png)'
- en: Probability density at Y=y (Image by Author)
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: Y=y处的概率密度（图像作者提供）
- en: 'To use the above formula for PDF, you need to know the CDF of a continuous
    random variable. For **Y**, we showed how to approximate its empirical CDF with
    that of a normally distributed random variable having a mean of 98.75659 and standard
    deviation of 6.02176\. If you differentiate this normal CDF, you get its PDF which
    is the classic bell-shaped curve that we are familiar with:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用上述PDF公式，你需要知道连续随机变量的CDF。对于**Y**，我们展示了如何用均值为98.75659和标准差为6.02176的正态分布随机变量来近似其经验CDF。如果你对这个正态CDF进行微分，你会得到其PDF，这就是我们熟悉的经典钟形曲线：
- en: '![](../Images/92c2b79778f7c93f2df081bef3719e20.png)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/92c2b79778f7c93f2df081bef3719e20.png)'
- en: PDF of a N(μ=98.75659, σ²=36.26159) distributed continuous random variable (Image
    by Author)
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: N(μ=98.75659, σ²=36.26159)分布的连续随机变量的PDF（图像作者提供）
- en: 'Conversely, if you know the PDF f(**Y**), you can get back the CDF by integrating
    f(**Y**):'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 反之，如果你知道PDF f(**Y**)，你可以通过积分f(**Y**)得到CDF：
- en: '![](../Images/45f994ebfcf2800376e41b413269321e.png)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/45f994ebfcf2800376e41b413269321e.png)'
- en: The CDF of Y obtained by integrating the PDF of Y (Image by Author)
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 通过积分Y的PDF得到Y的CDF（图像作者提供）
- en: By this time, if you are feeling a sense of mild unease, you are not alone.
    So let’s pause a bit. We’ve been talking about the derivative and the integral
    in a carefree manner while blithely switching between the empirical CDF of **Y**
    (which assumes that **Y** is a discrete variable) and some continuous approximation
    of it (which assumes that **Y** is a continuous variable). So let’s clear our
    glasses before they get too foggy and we trip over some unspoken assumption. The
    empirical CDF we are working with is just a working prop — an aid that we are
    using to illustrate how the CDF is calculated and how the PDF can be obtained
    from “differencing” it. The empirical CDF is discontinuous at each step. And therefore,
    it’s really not differentiable. But at some point, we must take the plunge and
    fit the best possible curve to the empirical data which is continuous and differentiable
    and for which the derivative and the integral do make sense. Our first attempt
    to fit such a curve has been to use the CDF of a normally distributed variable.
    We saw that it didn’t fit really well. At best it was a good first order approximation
    and we may be able to find other curves that will fit better.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 如果到现在你感到有些轻微的不安，你并不孤单。那么我们稍微停下来一下。我们一直在轻松地讨论导数和积分，同时随意地在**Y**（假设**Y**是离散变量）的经验累积分布函数（CDF）和它的一些连续近似（假设**Y**是连续变量）之间切换。因此，在这些隐含的假设未被打破之前，让我们先擦清楚眼镜。我们使用的经验CDF只是一个工作道具——一个帮助我们说明如何计算CDF以及如何从“差分”中获得PDF的辅助工具。经验CDF在每一步都是不连续的。因此，它实际上是不可导的。但在某些时候，我们必须勇敢地将尽可能好的曲线拟合到经验数据上，这条曲线是连续且可导的，其中的导数和积分是有意义的。我们第一次尝试拟合这样的曲线是使用正态分布变量的CDF。我们发现它拟合得并不是很好。充其量，它是一个不错的一阶近似，我们可能能够找到其他更合适的曲线。
- en: Where to go from here?
  id: totrans-230
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 接下来怎么办？
- en: Beyond the basic concepts we looked at, there is plenty more to know about random
    variables. For instance, using functions, you can combine different random variables
    to create new random variables. The new variable’s properties — its mean, variance,
    PMF or PDF, and CDF could be quite unlike those of the individual variables. One
    such combination that forms the basis of a linear regression model is a **linear
    combination of random variables** of the kind **W** = a**X** + b**Y** + c**Z**.
    The linear combination has a few special properties. For instance, the mean of
    **W** is simply ‘a’ times the mean of **X** plus ‘b’ times the mean of **Y** plus
    ‘c’ times the mean of **Z**. Another interesting combination is obtained from
    combining a discrete and a continuous random variable. The new creature thus spawned
    is called a **mixed random variable**. Mixed random variables are used to form
    **mixture distributions** and **mixture models.**
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 除了我们所看到的基本概念外，还有很多关于随机变量的知识。例如，通过使用函数，你可以将不同的随机变量组合起来以创建新的随机变量。新变量的属性——其均值、方差、概率质量函数或概率密度函数、累积分布函数可能与单个变量的属性大相径庭。形成线性回归模型基础的一个组合是**随机变量的线性组合**，如**W**
    = a**X** + b**Y** + c**Z**。线性组合具有一些特殊的性质。例如，**W**的均值只是‘a’乘以**X**的均值，加上‘b’乘以**Y**的均值，再加上‘c’乘以**Z**的均值。另一个有趣的组合是通过结合离散随机变量和连续随机变量得到的。这种新产生的变量称为**混合随机变量**。混合随机变量用于形成**混合分布**和**混合模型**。
- en: 'In fact, the study of regression models is at its heart the study of random
    variables. The dependent variable of a regression model — the **y** variable —
    is a random variable governed by some probability distribution. The regression
    variables — the **X** variables — are also random variables, each of them ebbing
    and growing as dictated by their respective distribution. A frequently occurring
    example of **X** is a **dummy regression variable** — a variable that can be either
    0 or 1\. A dummy variable is a **Bernoulli random variable** which has the following
    PMF:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，回归模型的研究本质上是随机变量的研究。回归模型中的因变量——**y**变量——是由某种概率分布支配的随机变量。回归变量——**X**变量——也是随机变量，每个变量的波动由各自的分布决定。一个常见的**X**示例是**虚拟回归变量**——一个可以是0或1的变量。虚拟变量是**伯努利随机变量**，其概率质量函数如下：
- en: '![](../Images/6c3d8dba39ff206b2671811d8305baf6.png)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6c3d8dba39ff206b2671811d8305baf6.png)'
- en: The PMF of a Bernoulli distributed random variable (Image by Author)
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 伯努利分布随机变量的概率质量函数（图片由作者提供）
- en: 'or in general, the following PMF:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 或者一般来说，概率质量函数如下：
- en: '![](../Images/c1cba37551eaaeead676ce5cad21ffb1.png)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c1cba37551eaaeead676ce5cad21ffb1.png)'
- en: The PMF of a Bernoulli distributed random variable (Image by Author)
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 伯努利分布随机变量的概率质量函数（图片来源：作者）
- en: When you toss a (biased or unbiased) coin, whether it comes up Heads or Tails
    is a perfect example of a Bernoulli random variable.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 当你抛掷一个（有偏或无偏的）硬币时，硬币正面或反面的出现是伯努利随机变量的完美例子。
- en: Random processes
  id: totrans-239
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 随机过程
- en: Before we end, let’s say a quick hello to **random processes**. If you line
    up several random variables, what you get is a **random process**. And that brings
    us full circle to our coin-operated wanderings around Manhattan.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 在结束之前，让我们向**随机过程**打个快招呼。如果你排列几个随机变量，你得到的就是一个**随机过程**。这将我们带回到曼哈顿的硬币驱动的漫游。
- en: '![](../Images/317fdad06f9eb4c62f008bd81fd27beb.png)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/317fdad06f9eb4c62f008bd81fd27beb.png)'
- en: A random walk around Manhattan (Image by Author) (Map underlay by [OpenStreetMap](https://www.openstreetmap.org/copyright))
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 曼哈顿的随机游走（图片来源：作者）（地图背景由[OpenStreetMap](https://www.openstreetmap.org/copyright)提供）
- en: The random walk was produced by a sequence of coin flips. We can think of it
    as the outcomes from a sequence of N Bernoulli random variables. And that makes
    the random walk a **Bernoulli process**. An actual walk thus taken is a concrete
    **realization** of this process.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 随机游走是由一系列硬币抛掷产生的。我们可以将其视为一系列N个伯努利随机变量的结果。这使得随机游走成为一个**伯努利过程**。实际的步行因此是这一过程的具体**实现**。
- en: All time-series data are random processes. If the dataset contains N time-indexed
    observations y_1 through y_N, each observation y_i is a random variable. For example,
    in the random walk, each y_t is a Bernoulli random variable. And being part of
    a time series, the y_t are all obviously lined up in a sequence, making the whole
    time series data set a single **observed instance** of a Bernoulli process.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 所有时间序列数据都是随机过程。如果数据集中包含N个时间索引观测值y_1到y_N，每个观测值y_i都是一个随机变量。例如，在随机游走中，每个y_t都是一个伯努利随机变量。作为时间序列的一部分，y_t显然排成一个序列，使整个时间序列数据集成为一个伯努利过程的单一**观测实例**。
- en: We’ll stop here in our introduction to random variables. Consider this article
    as your base camp. A place from which you can begin your expeditions into other
    topics in random variables, their properties, and their applications.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 在介绍随机变量的部分我们先到此为止。将这篇文章视为你的基点，一个你可以从中开始探索其他随机变量、其属性和应用的地方。
- en: I’ll leave you with an image and an idea for a random variable. The image is
    of the beautiful M2 globular cluster. The idea is to define a random variable
    whose value is the number of stars lying inside any 10 mm x 10 mm region of space
    in the picture. How might the probability density function of this variable look
    like?
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 我将留给你一张图片和一个随机变量的想法。图片是美丽的M2球状星团。这个想法是定义一个随机变量，其值为图片中任意10 mm x 10 mm区域内的星星数量。这个变量的概率密度函数可能是什么样的呢？
- en: '![](../Images/ffe3a2099460b50877f9c90428c04fa9.png)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ffe3a2099460b50877f9c90428c04fa9.png)'
- en: '[Globular Cluster M2](https://commons.wikimedia.org/wiki/File:Messier2_-_HST_-_Potw1913a.jpg)
    (Credit: ESA/Hubble under [CC BY 4.0](https://creativecommons.org/licenses/by/4.0/deed.en))'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '[球状星团M2](https://commons.wikimedia.org/wiki/File:Messier2_-_HST_-_Potw1913a.jpg)（图片来源：ESA/Hubble，授权方式为[CC
    BY 4.0](https://creativecommons.org/licenses/by/4.0/deed.en)）'
- en: Citations and Copyrights
  id: totrans-249
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引用和版权
- en: Data set
  id: totrans-250
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据集
- en: The Automobile data set is downloaded from the [UC Irvine Machine Learning Repository](https://archive-beta.ics.uci.edu/dataset/10/automobile)
    under the [Creative Commons Attribution 4.0 International](https://creativecommons.org/licenses/by/4.0/legalcode)
    (CC BY 4.0) license.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 汽车数据集下载自[UC Irvine机器学习库](https://archive-beta.ics.uci.edu/dataset/10/automobile)，使用[创意共享署名4.0国际](https://creativecommons.org/licenses/by/4.0/legalcode)（CC
    BY 4.0）许可证。
- en: Images
  id: totrans-252
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图片
- en: All images in this article are copyright [Sachin Date](https://www.linkedin.com/in/sachindate/)
    under [CC-BY-NC-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/), unless
    a different source and copyright are mentioned underneath the image.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 本文中的所有图片版权归[Sachin Date](https://www.linkedin.com/in/sachindate/)所有，授权方式为[CC-BY-NC-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/)，除非图片下方提及了不同的来源和版权。
- en: '*If you liked this article, please follow me at* [***Sachin Date***](https://timeseriesreasoning.medium.com)
    *to receive tips, how-tos and programming advice on topics devoted to regression,
    time series analysis, and forecasting.*'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你喜欢这篇文章，请关注[***Sachin Date***](https://timeseriesreasoning.medium.com)，获取有关回归、时间序列分析和预测的技巧、教程和编程建议。*'
