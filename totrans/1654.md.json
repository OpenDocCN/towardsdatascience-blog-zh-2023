["```py\nimport pandas as pd\nimport numpy as np\n\n# product A\nd_a = pd.DataFrame(\n    {\n        'Month':pd.date_range(\n            start = pd.to_datetime('01-01-2012',format = '%d-%m-%Y'),\n            end = pd.to_datetime('31-12-2022',format = '%d-%m-%Y'),\n            freq = 'MS',\n\n        ),\n        'Quotes':np.random.randint(\n            low = 1_000_000,\n            high = 2_500_000,\n            size = 132\n        ),\n        'Numbers':np.random.randint(\n            low = 300_000,\n            high = 500_000,\n            size = 132\n        ),\n        'Amounts':np.random.randint(\n            low = 750_000,\n            high = 1_250_000,\n            size = 132\n        ),\n        'Product':'A'\n    }\n)\n\nd_a['Store'] = np.where(\n    d_a['Quotes'] / d_a['Quotes'].max() < 0.3,\n    'Uptown',\n    np.where(\n        d_a['Quotes'] / d_a['Quotes'].max() < 0.6,\n        'Downtown',\n        'Central'\n    )\n)\n\n# product B\nd_b = pd.DataFrame(\n    {\n        'Month':pd.date_range(\n            start = pd.to_datetime('01-01-2012',format = '%d-%m-%Y'),\n            end = pd.to_datetime('31-12-2022',format = '%d-%m-%Y'),\n            freq = 'MS'\n        ),\n        'Quotes':np.random.randint(\n            low = 100_000,\n            high = 800_000,\n            size = 132\n        ),\n        'Numbers':np.random.randint(\n            low = 10_000,\n            high = 95_000,\n            size = 132\n        ),\n        'Amounts':np.random.randint(\n            low = 450_000,\n            high = 750_000,\n            size = 132\n        )\n    }\n)\n\nd_b['Product'] = np.where(\n    d_a['Quotes'] / d_a['Quotes'].max() < 0.5,\n    'B',\n    'C'\n)\n\nd_b['Store'] = np.where(\n    d_a['Quotes'] / d_a['Quotes'].max() < 0.3,\n    'Uptown',\n    np.where(\n        d_a['Quotes'] / d_a['Quotes'].max() < 0.6,\n        'Downtown',\n        'Outer'\n    )\n)\n\ndf = pd.concat([d_a,d_b],axis = 0)\ndf = df.sample(frac = 1).copy().reset_index(drop = True)\n```", "```py\n# basic pivot table\npd.pivot_table(\n    data = df,\n    index = 'Store',\n    columns = 'Product',\n    values = 'Quotes',\n    aggfunc = 'sum'\n)\n```", "```py\n# include two quantities\npd.pivot_table(\n    data = df,\n    index = 'Store',\n    columns = 'Product',\n    values = ['Quotes','Numbers'],\n    aggfunc = ['min'],\n    margins = True,\n    margins_name = 'Combined'\n)\n```", "```py\n# function for coefficient of variation (cov)\ndef cov(x):\n    return x.std() / x.mean()\n\n# pivot table with cov\npd.pivot_table(\n    data = df,\n    index = 'Store',\n    columns = 'Product',\n    values = ['Quotes'],\n    aggfunc = [cov]\n)\n```", "```py\n# total sales numbers\nnum = pd.pivot_table(\n    data = df,\n    index = 'Store',\n    columns = 'Product',\n    values = 'Numbers',\n    aggfunc = 'sum',\n    margins = True,\n    margins_name = 'Combined'\n)\n\n# total sales quotes\nden = pd.pivot_table(\n    data = df,\n    index = 'Store',\n    columns = 'Product',\n    values = 'Quotes',\n    aggfunc = 'sum',\n    margins = True,\n    margins_name = 'Combined'\n)\n\n# conversion rate\nnum / den\n```", "```py\n# custom function with nicer name\ndef Total(x):\n    return x.sum()\n\n# pivot table\npd.pivot_table(\n    data = df,\n    index = 'Store',\n    columns = 'Product',\n    values = ['Quotes','Numbers'],\n    aggfunc = [Total],\n    margins = True,\n    margins_name = 'Combined'\n)\n```"]