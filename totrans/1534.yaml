- en: Monitoring Sea Surface Temperature at the global level with GEE
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[https://towardsdatascience.com/monitoring-sea-surface-temperature-at-the-global-level-with-gee-1d7349c7da6](https://towardsdatascience.com/monitoring-sea-surface-temperature-at-the-global-level-with-gee-1d7349c7da6)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: How to create a Streamlit app for ocean monitoring with Python
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://bryanvallejo16.medium.com/?source=post_page-----1d7349c7da6--------------------------------)[![Bryan
    R. Vallejo](../Images/fd92974f57c72875cc133a2c959d64ca.png)](https://bryanvallejo16.medium.com/?source=post_page-----1d7349c7da6--------------------------------)[](https://towardsdatascience.com/?source=post_page-----1d7349c7da6--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----1d7349c7da6--------------------------------)
    [Bryan R. Vallejo](https://bryanvallejo16.medium.com/?source=post_page-----1d7349c7da6--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ¬∑Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----1d7349c7da6--------------------------------)
    ¬∑7 min read¬∑Mar 8, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fd89182793e896002d4011c0213a962d.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by the Author. [Monitor of SST](https://ocean-temperature-monitoring-bryanrvallejo.streamlit.app/)
    on Jan 14th of 2023 with GEE
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The development of Earth Observation and its technological infrastructure has
    increased considerably in the last decade. Many satellite constellations give
    open and handy access to their data and researchers can easily access it. For
    example, ***Google Earth Engine*** is a cloud infrastructure that gives access
    to data from many providers such as Modis, NOAA, ASTER, Lansat, and others, that
    you can explore and analyze straightforwardly. Give it a look in [GEE](https://developers.google.com/earth-engine/datasets).
    In case you want to use the API in Python you can do it with the [geemap](https://geemap.org/)
    python library developed by [Qiusheng Wu](https://medium.com/u/ddf2451fc08e?source=post_page-----1d7349c7da6--------------------------------)
    which has wonderful functionalities and can be used as it is in this tutorial.
  prefs: []
  type: TYPE_NORMAL
- en: The infrastructure models are running in near real-time so it is possible to
    get up-to-date data that helps monitor land and ocean. For this tutorial, we are
    going to work with the [HYCOM](https://developers.google.com/earth-engine/datasets/catalog/HYCOM_sea_temp_salinity#description)
    dataset which contains a data-assimilative hybrid model that displays the Sea
    Surface Temperature and Salinity at the global level. The model contains depth
    values for each temporal layer so users can visualize the ocean at certain depths
    and dates. The Hybrid Coordinate Ocean Model has been part of many publications
    and the website contains a lot of documentation about the dataset. If you want
    to know more I recommend you to give a look at the [official website](https://www.hycom.org/).
  prefs: []
  type: TYPE_NORMAL
- en: App
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Get access to the app in the next link:'
  prefs: []
  type: TYPE_NORMAL
- en: üå°Ô∏è [SST Global Monitoring ‚Äî App](https://ocean-temperature-monitoring-bryanrvallejo.streamlit.app/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/963146656eb3b4f71ba02643e59f9890.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by the Author. Brief view of the app. 100-meter depth on January 15th,
    2023
  prefs: []
  type: TYPE_NORMAL
- en: Objective
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'What I want with this tutorial is to create an easy-to-use app that is able
    to display the Sea Surface Temperature at the global level. The features of the
    app should be:'
  prefs: []
  type: TYPE_NORMAL
- en: Selection of time
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Selection of depth
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuration of legend
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once the interaction is done we will deploy the app in the Streamlit cloud.
  prefs: []
  type: TYPE_NORMAL
- en: Data License
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The HYCOM dataset is published as a [Public Domain Mark 1.0](https://creativecommons.org/publicdomain/mark/1.0/).
    Users are able to copy, modify, and redistribute, even for commercial purposes.
    The distribution officially by HYCOM is [**US DOD Distribution A**](https://discover.dtic.mil/wp-content/uploads/2018/09/distribution_statements_and_reasonsSept2018.pdf)
    which expresses public release and unlimited distribution.
  prefs: []
  type: TYPE_NORMAL
- en: Coding tutorial
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I hope you are familiar with Python programming before starting this tutorial.
    If not, then no worries just ask for help in this tutorial and I can suggest educational
    material. Generally, Python can be used nicely in [Anaconda](https://www.anaconda.com/).
    I would recommend you have it and get familiar with package installation before
    starting. In any case, you will be able to deploy this app.
  prefs: []
  type: TYPE_NORMAL
- en: Libraries
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let‚Äôs start creating a python file and importing the needed libraries.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: To make it work in Streamlit you might need to do GEE authentication with a
    key. The instruction about how to do it is already written in this clear and excellent
    tutorial by [Mykola Kozyr](https://medium.com/u/bc439defe554?source=post_page-----1d7349c7da6--------------------------------).
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/@mykolakozyr/using-google-earth-engine-in-a-streamlit-app-62c729793007?source=post_page-----1d7349c7da6--------------------------------)
    [## Using Google Earth Engine in a Streamlit app'
  prefs: []
  type: TYPE_NORMAL
- en: I have recently published a Streamlit app that visualizes the Land Surface Temperature
    data over European river basins‚Ä¶
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: medium.com](https://medium.com/@mykolakozyr/using-google-earth-engine-in-a-streamlit-app-62c729793007?source=post_page-----1d7349c7da6--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Follow carefully the instructions given before and add your own credentials
    to the app.py file. It might look like this.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Environment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To deploy in Streamlit you should add a `requirements.txt` file that contains
    the needed packages for deployment. In this case, we will add requirements and
    an additional file `packages.txt` Both files were taken from the [gishub](https://streamlit.geemap.org/)
    of geemap.
  prefs: []
  type: TYPE_NORMAL
- en: 'Add to the repo a `requirements.txt` file with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Also, an additional `packages.txt` file with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Layout configuration
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Here we will add a title to the page, define a wide layout of Streamlit, and
    give tight limits to our canvas that will make the map looks nicer.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Sidebar configuration and parameters input
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Here we will add a`form` that will be used to input the parameters of the map
    such as depth and date. The current map is always displayed with the last available
    layer which is 2 days before the current date. Some comments in help are added.
  prefs: []
  type: TYPE_NORMAL
- en: Check the inline comments that describe the code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Define map instance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the map instance, we will add an ocean base map and call the ImageCollection,
    then we select the temperature layer from the first date in the collection. Take
    a look the `image` variable.
  prefs: []
  type: TYPE_NORMAL
- en: To display the temperature correctly we use multiply and add. These parameters
    come by default in the GEE. Finally, we add the layer and a legend with a color
    bar. The depth and date will be displayed in the legend.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Map to Streamlit
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Then, we send the map instance to Streamlit
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Add extra information
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We can add more information like the link to this tutorial, author, reference
    to the dataset, or any other extra info you want.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Limitation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The limitation we have for real-time ocean monitoring is that HYCOM has the
    last layer available for 2 days before the current date. Not really a limitation
    because 2 days are not a big difference for ocean temperature seasonality.
  prefs: []
  type: TYPE_NORMAL
- en: One common limitation is to display a global layer fast but thanks to geemap
    and its integration of folium it is possible to have fast and light visualization.
  prefs: []
  type: TYPE_NORMAL
- en: Future development
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I imagine that future development might contain more features of the app for
    example adding more layers like salinity. If you have recommendations or needs
    for your own work do not hesitate to leave a comment.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The monitoring of the seasonalities of the ocean can be possible with a simple
    configuration of inputs and GEE. The development of the GEE API in python has
    made it possible to display easily and can support the monitoring of seasons.
    Also, it can be used for other purposes for example users can check which month
    has the best temperature for their next vacation beach.
  prefs: []
  type: TYPE_NORMAL
- en: 'Written by:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Bryan R. Vallejo - LinkedIn profile](https://www.linkedin.com/in/bryanrvallejo/)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
