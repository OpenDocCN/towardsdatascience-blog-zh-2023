- en: 5 Jupyter Notebook Tricks I Only Discovered 2 Years Into My Data Science Career
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/5-jupyter-notebook-tricks-i-only-discovered-2-years-into-my-data-science-career-99bbe482a45f](https://towardsdatascience.com/5-jupyter-notebook-tricks-i-only-discovered-2-years-into-my-data-science-career-99bbe482a45f)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Custom keyboard shortcuts, highlighting text, and more
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@mattchapmanmsc?source=post_page-----99bbe482a45f--------------------------------)[![Matt
    Chapman](../Images/7511deb8d9ed408ece21031f6614c532.png)](https://medium.com/@mattchapmanmsc?source=post_page-----99bbe482a45f--------------------------------)[](https://towardsdatascience.com/?source=post_page-----99bbe482a45f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----99bbe482a45f--------------------------------)
    [Matt Chapman](https://medium.com/@mattchapmanmsc?source=post_page-----99bbe482a45f--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----99bbe482a45f--------------------------------)
    ·7 min read·Jul 17, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/11a5e5cc7fc3b7013b0a0b06b1b1f927.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by [Lukas Bato](https://unsplash.com/@lks_bt) on [Unsplash](https://unsplash.com/photos/BAhBnhkbVuU)
  prefs: []
  type: TYPE_NORMAL
- en: Despite their popularity amongst users of R, Python and Julia, Jupyter Notebooks
    are rarely used to their full potential.
  prefs: []
  type: TYPE_NORMAL
- en: Most users know the basic commands (execute code, comment, save, etc.), but
    few make use of Jupyter’s hidden tricks — **even though these can save significant
    time and effort**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Since 2019 (when I started using Jupyter), I’ve discovered lots of time-saving
    tricks and tips that most beginners are unaware of. In this article, I’ll show
    you 5 of my favourites:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Keyboard shortcuts** — “off-the-shelf” commands such as inserting/deleting/moving
    cells and text'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '***Custom* keyboard shortcuts** — add in your own advanced commands like moving
    cells up/down or restarting the kernel and running up to the current cell, right
    from the keyboard'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Markdown formatting** — create tables, format text and create checkboxes'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**HTML formatting** — highlight text & make your comments stand out'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**“Enable scrolling for outputs”** — suppress lengthy cell results (this is
    a goldmine when tuning hyperparameters)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Tip 1: Keyboard shortcuts'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Keyboard shortcuts provide a nifty way to navigate around a Jupyter notebook
    and execute commands. Here are the main ones I use:'
  prefs: []
  type: TYPE_NORMAL
- en: Run cells
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`Shift + Enter` — run the current cell AND select the cell below'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Ctrl/Cmd + Enter` — run the current cell'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Option/Alt + Enter` — run the current cell and insert another cell below'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Save progress
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`Ctrl/Cmd + s`— save the notebook'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Insert/delete cells
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First, click inside a cell, and then make sure you’re in `command` mode by
    pressing `Esc`. If you don’t press `Esc`, you’ll be in `edit` mode and only able
    to perform actions on contents of a cell (rather than the cells themselves). Once
    you’re in `command` mode, the cursor in the cell will stop blinking. Then, press
    one of the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '`a` — insert a new cell above the current cell'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dd` (press `d` key twice) — delete the current cell'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`b` — insert a new cell below the current cell'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Change cell type
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'One of the joys of Jupyter Notebooks is that they allow you to place comments
    and code side-by-side. To set a cell’s type and determine whether it should treat
    text as “comment” or “code,” start by entering `command` mode by selecting a cell
    and pressing `Esc`. Then, press one of the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '`m` — markdown mode (for writing comments and headers)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`y` — code mode (for writing code)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Selecting multiple cells
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once again, make sure you’re in `command` mode, and then, while holding `Shift`,
    use the `Up` or `Down` arrow to expand the selection to as many cells as you like.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4c5337e6becdbdd43bddaf7ae81784fb.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: Once you’ve selected all the cells you want, you can delete or move them all
    at the same time, rather than having to do it individually.
  prefs: []
  type: TYPE_NORMAL
- en: 'Tip 2: Custom keyboard shortcuts'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This was a game-changer for me.
  prefs: []
  type: TYPE_NORMAL
- en: In addition to the standard keyboard shortcuts which are pre-defined for you
    when you install Jupyter, you can create your own *custom* shortcuts for executing
    advanced commands.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, let’s say I want to define two new keyboard shortcuts: one for
    moving a cell up, and another for moving a cell down. By default, it’s possible
    to do this by “dragging-and-dropping” the cells using the mouse, but it’s also
    possible to create a custom keyboard shortcut that can do this for you at the
    touch of a button (or two).'
  prefs: []
  type: TYPE_NORMAL
- en: First, click ‘Settings’ and then ‘Advanced Settings Editor’ in your JupyterLab
    window, and you’ll be able to see all the existing keyboard shortcuts.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/29f4284794f8d1f81755facc5bb64572.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: To add custom keyboard shortcuts, you’ll need to click the ‘JSON Settings Editor’
    in the top right of the Advanced Settings Editor window (shown in the image above).
  prefs: []
  type: TYPE_NORMAL
- en: Then, on the ‘User Preferences’ tab on the right, scroll down to the list of
    keyboard shortcuts and add in the desired shortcuts. I’ve added in these two,
    which were suggested by [David](https://stackoverflow.com/a/66310163) on StackOverflow.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/97979b07b242cf904e4ac08333eb7d92.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: Once you’ve finished adding shortcuts, hit ‘Save’ (in the top right) and then
    you’re good to go!
  prefs: []
  type: TYPE_NORMAL
- en: Pretty nifty, eh?
  prefs: []
  type: TYPE_NORMAL
- en: '*If you’re liking this story, it would mean a lot to me if you click my ‘Follow’
    button — only 1% of my readers do! Thanks for reading.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Tip 3: Markdown formatting'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When you’re writing text in a so-called “comment” cell, you’re actually writing
    in markdown and so, surprise surprise, you can write using markdown formatting.
  prefs: []
  type: TYPE_NORMAL
- en: That might seem obvious or insignificant, but in my experience very few Jupyter
    users seem to make full use of the capabilities of markdown in their Notebooks.
  prefs: []
  type: TYPE_NORMAL
- en: Using markdown, you’re able to write text, headers, lists, tables, and even
    code snippets. It’s a great way to bring a bit more dynamism and structure to
    your Notebooks.
  prefs: []
  type: TYPE_NORMAL
- en: For example, here are some of the formats that I use most often. I particularly
    love the ‘table’ formatting (as it’s a great way to show previews of what some
    preprocessing code will achieve), and I recommend using this [Markdown Tables
    Generator](https://www.tablesgenerator.com/markdown_tables) to quickly generate
    tables in the right format.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d2b3b1719a77f38b0357c1b0f7d49644.png)'
  prefs: []
  type: TYPE_IMG
- en: Some of the things you can do with markdown formatting. Image by author
  prefs: []
  type: TYPE_NORMAL
- en: 'Tip 4: HTML formatting'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This tip is kind of an extension to the one above, but it’s even less commonly
    used.
  prefs: []
  type: TYPE_NORMAL
- en: When you’re writing text in a markdown cell, you can use HTML tags to format
    the text and achieve *really* custom formatting like highlighting text and hiding
    text in toggles.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/85e8cd228e432e1c2e0f0af3eb52d209.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: Personally, I find the highlighting function really helpful when I’m reviewing
    someone else’s notebook and want to make comments or highlight something to return
    to later. It’s a great way to emphasise the notes I’ve left without cluttering
    up the Notebook.
  prefs: []
  type: TYPE_NORMAL
- en: 'Tip 5: “Enable scrolling for outputs”'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: By default, the ‘output’ cells in Jupyter Notebooks will flex to the height
    of the output — i.e. when you run some code, Jupyter will print everything your
    code instructs it to print. And I mean *everything*.
  prefs: []
  type: TYPE_NORMAL
- en: Usually, that’s really useful, but on occasions when you’re running some code
    that prints a lot of outputs, your notebook cells can quickly grow to a ridiculous
    length, making it hard to navigate around the notebook.
  prefs: []
  type: TYPE_NORMAL
- en: For example, the image below shows a simple code snippet which will print every
    integer from 1 to 1001\. As you can see, the output is loooooong.
  prefs: []
  type: TYPE_NORMAL
- en: To condense the outputs without losing the valuable printed information, right-click
    on the output cell and select ‘Enable Scrolling for Outputs.’ This retains the
    outputs in a scrollable output cell, but avoids cluttering up your notebook.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/47398cb17b8fc5c0bc5b697cdd6a7936.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: In real life, I find this very useful when I’m doing things like (a) printing
    out the names of all columns in a table, or (b) using a library like `optuna`
    to tune a model’s hyperparameters. In both of these scenarios, it’s valuable to
    see all the outputs (all the column names, or the results of every single round
    of training), and I rarely want to entirely *suppress* the outputs because they’re
    really useful for debugging. By selecting ‘Enable Scrolling for Outputs,’ I’m
    able to retain the outputs but minimise them so that they don’t dominate the entire
    notebook.
  prefs: []
  type: TYPE_NORMAL
- en: One more thing —
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I’ve started a free newsletter called [AI in Five](https://aiinfive.substack.com/)
    where I share 5 bullet points each week on the latest AI news, coding tips and
    career stories for Data Scientists/Analysts. There’s no hype, no “**data is the
    new oil**” rubbish and no tweets from Elon — just practical tips and insights
    to help you develop in your career.
  prefs: []
  type: TYPE_NORMAL
- en: '[Subscribe here](https://aiinfive.substack.com/) if that sounds up your street!'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://aiinfive.substack.com/?source=post_page-----99bbe482a45f--------------------------------)
    [## AI in Five | Matt Chapman | Substack'
  prefs: []
  type: TYPE_NORMAL
- en: The latest news, career stories and coding tips from the world of Data Science
    and AI, summarised in 5 bullet points…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: aiinfive.substack.com](https://aiinfive.substack.com/?source=post_page-----99bbe482a45f--------------------------------)
  prefs: []
  type: TYPE_NORMAL
