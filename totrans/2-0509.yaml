- en: Choosing the Right Tool for Your Next Data Science Web Application
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/choosing-the-right-tool-for-your-next-data-science-web-application-3d7ec8293d61](https://towardsdatascience.com/choosing-the-right-tool-for-your-next-data-science-web-application-3d7ec8293d61)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Flask, Django, Streamlit: Three options for data scientists getting into web
    development.'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://murtaza5152-ali.medium.com/?source=post_page-----3d7ec8293d61--------------------------------)[![Murtaza
    Ali](../Images/2aecff50999761022af29f9b30e2f925.png)](https://murtaza5152-ali.medium.com/?source=post_page-----3d7ec8293d61--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3d7ec8293d61--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3d7ec8293d61--------------------------------)
    [Murtaza Ali](https://murtaza5152-ali.medium.com/?source=post_page-----3d7ec8293d61--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----3d7ec8293d61--------------------------------)
    ·6 min read·Jan 31, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3ab692f53196eb96db92fbd079ea7b14.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Campaign Creators](https://unsplash.com/@campaign_creators?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: With the advanced computing power of the modern age, we can do more with data
    than ever before. It’s possible to design and implement potentially life-changing
    technologies from the comfort of your home, using just your laptop and the immense
    amount of data available via the internet.
  prefs: []
  type: TYPE_NORMAL
- en: But there’s a catch. An impressive machine learning model or insightful data
    visualization tool is of little use to anyone if it’s just sitting on your computer
    as a code file. To really have an impact, you need to be able to share your inventions
    with other people in a compact, usable way.
  prefs: []
  type: TYPE_NORMAL
- en: The traditional way to do this is through a web application. By taking your
    data science tool, turning it into an application, and hosting it on a server
    accessible to anyone via the internet, you can immediately make your tool accessible
    to millions of people.
  prefs: []
  type: TYPE_NORMAL
- en: Unfortunately, this is not as simple as it sounds. Building a web application
    is a fairly complex programming task, and it involves a set of skills beyond the
    expertise of many data scientists. Coding one from scratch would be a challenge
    indeed.
  prefs: []
  type: TYPE_NORMAL
- en: Luckily, many companies are in the business of *web frameworks.* A web framework
    is essentially an extensive library which provides the foundational structure
    for building a web application, making it significantly easier to get started.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this article, I will discuss the advantages and drawbacks of three well-established
    web frameworks in Python: Flask, Django, and Streamlit. It can be difficult to
    know which tool to use if you’re just getting started, and my hope is to help
    you determine which is best for your skill level and overall goal. Note that this
    article does *not* discuss the specifics of how to actually build an application
    with these tools.'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s get into it, shall we?
  prefs: []
  type: TYPE_NORMAL
- en: Flask
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Flask](https://flask.palletsprojects.com/en/2.2.x/) [1] is often the first
    framework introduced to people who are new to web development. You’ll often hear
    it described as extremely lightweight and fairly easy to learn if you already
    know Python. Here, the term “lightweight” means that Flask does not have any external
    dependencies, and it provides the most basic tools needed to build a web application
    without overwhelming you with features you might not need.'
  prefs: []
  type: TYPE_NORMAL
- en: Flask is so lightweight that it is often referred to as a “micro” framework.
    You can start with the simplest possible application, and pick more features as
    needed. Furthermore, it is straightforward enough that if you already know Python,
    you won’t feel like you’re learning a brand new language.
  prefs: []
  type: TYPE_NORMAL
- en: However, this simplicity is a double-edged sword. Because Flask is lightweight,
    it also does fewer things for you automatically. In other words, as you are building
    up your web application, you will have to figure out quite a few things on your
    own.
  prefs: []
  type: TYPE_NORMAL
- en: I’ve never used Flask myself, but I will admit that it has been recommended
    to me many times. The benefits seem to outweigh the costs in the eyes of the general
    programming community.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s review before moving on.
  prefs: []
  type: TYPE_NORMAL
- en: '**The Pros**'
  prefs: []
  type: TYPE_NORMAL
- en: Extremely lightweight (a “micro” framework, in some sense)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can choose the features you need
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arguably easier to learn as a result of the above two qualities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The Cons**'
  prefs: []
  type: TYPE_NORMAL
- en: Not as many built-in features
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Will need to implement many aspects of your web application on your own as a
    result of the above
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Django
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This is my personal framework of choice. I only recently got into full-fledged
    web development, and previously settled for simpler alternatives (see Streamlit
    section below). I had to choose between Django and Flask, and I ended up deciding
    that Django fit my needs better.
  prefs: []
  type: TYPE_NORMAL
- en: '[Django](https://www.djangoproject.com/) is the complete opposite of Flask
    in that it is rather heavyweight. It has an enormous set of features — and when
    you build a Django project, you get them all, whether or not you need them. This
    has positive and negative aspects.'
  prefs: []
  type: TYPE_NORMAL
- en: On the upside, you will have to implement fewer things from scratch, since so
    much functionality is built in. One great example of this is the Django admin
    page. All Django projects automatically implement a database admin webpage which
    allows a “superuser” to add and remove data without writing any code. This can
    be really useful if you want to design a web application for a team of people
    where one person needs to manage the associated database, but doesn’t have the
    requisite programming skills.
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, the projects are large, complex, and can be intimidating
    since you get everything all at once. The simplest Flask application can be written
    in one code file, but any Django project will automatically make a huge amount
    of directories and associated files the moment you start.
  prefs: []
  type: TYPE_NORMAL
- en: Django also had really detailed documentation and [excellent tutorials](https://docs.djangoproject.com/en/4.1/intro/tutorial01/)
    [3] written by the developers themselves. For some, this is a double-edged sword,
    since the developers are quite opinionated. So, when you do something in Django,
    you have to do it the “Django” way. However, this is unlikely to be an issue if
    web development isn’t your primary programming strength and you’re just looking
    to get started.
  prefs: []
  type: TYPE_NORMAL
- en: So, in summary —
  prefs: []
  type: TYPE_NORMAL
- en: '**The Pros**'
  prefs: []
  type: TYPE_NORMAL
- en: Comes with many built-in features
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Django admin is an incredible addition you get without any extra work
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Django offers a thorough set of tutorials for getting started that the company
    itself wrote (ensuring the information is accurate and adheres to best practices)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The Cons**'
  prefs: []
  type: TYPE_NORMAL
- en: Very heavyweight — you get all the features as part of a Django project, whether
    you want them or not
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Django’s developers have strong opinions about web development that are reflected
    in the way things must be done when programming in Django. If you disagree with
    these opinions, you may find Django frustrating.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Streamlit
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: “[Streamlit](https://streamlit.io/) [4] turns data scripts into shareable web
    apps in minutes.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: All in pure Python. No front‑end experience required.”
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The above quote is taken directly from Streamlit’s front page, and is a pretty
    solid summary. Streamlit was initially designed to allow data scientists who lacked
    web programming skills to deploy their data science tools with ease to the internet.
  prefs: []
  type: TYPE_NORMAL
- en: This is Streamlit’s greatest advantage. You can write your data science tool
    in Python, make a few syntax changes to conform to Streamlit’s specifications,
    add some header lines of code, and your application is ready to go! Well, locally
    at least — though Streamlit also offers cloud support as a next step.
  prefs: []
  type: TYPE_NORMAL
- en: Streamlit also has some nice built-in features (sliders, buttons, and other
    widgets) that can be used to give your application a nice boost.
  prefs: []
  type: TYPE_NORMAL
- en: However, Streamlit also has two disadvantages. The obvious one is that you’re
    effectively restricted to Streamlit’s default interface, so you can’t really customize
    your application’s appearance in any way. Streamlit isn’t designed for personalization;
    it simply provides a quick way to get a tool out there and collect data if needed.
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, Streamlit has some issues dealing with large data sets. In my
    experience (and the experience of other folks I have worked with), running potentially
    expensive computational processes (such as rendering visualizations, for instance)
    can lag a fair bit in Streamlit. This anecdotal experience is supported by [discussion
    on the Streamlit forum](https://discuss.streamlit.io/t/whether-streamlit-can-handle-big-data-analysis/28085/15)
    [5].
  prefs: []
  type: TYPE_NORMAL
- en: Overall, Streamlit is fast and easy to learn, but not nearly as flexible as
    Flask and Django.
  prefs: []
  type: TYPE_NORMAL
- en: '**The Pros**'
  prefs: []
  type: TYPE_NORMAL
- en: Designed for data scientists
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Requires minimal knowledge of web development
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Can be used to build and deploy a web application extremely quickly
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The Cons**'
  prefs: []
  type: TYPE_NORMAL
- en: Very little freedom in terms of customizing your web application
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Potential efficiency issues with large data sets or expensive operations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Final Thoughts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Choosing the right framework is both a matter of personal preference as well
    as your exact needs. I can’t speak to your preferences, so I will talk briefly
    on the second point to conclude.
  prefs: []
  type: TYPE_NORMAL
- en: Want to just test out a quick tool and don’t have much time to put it together?
    Streamlit is likely your best bet. Trying to learn web development and advance
    your Python skills? Go with Flask or Django. Both can work fine for large, involved
    apps, so this is where personal preference comes back into play.
  prefs: []
  type: TYPE_NORMAL
- en: As with all programming, there is only so much you can get from an article.
    At this point, I’d encourage you to get out there and try each one for yourself.
    I’d love to hear your thoughts and reflections in the comments.
  prefs: []
  type: TYPE_NORMAL
- en: Happy web developing!
  prefs: []
  type: TYPE_NORMAL
- en: '**Want to excel at Python?** [**Get exclusive, free access to my simple and
    easy-to-read guides here**](https://witty-speaker-6901.ck.page/0977670a91)**.
    Want to read unlimited stories on Medium? Sign up with my referral link below!**'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://murtaza5152-ali.medium.com/?source=post_page-----3d7ec8293d61--------------------------------)
    [## Murtaza Ali - Medium'
  prefs: []
  type: TYPE_NORMAL
- en: Read writing from Murtaza Ali on Medium. PhD student at the University of Washington.
    Interested in human-computer…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: murtaza5152-ali.medium.com](https://murtaza5152-ali.medium.com/?source=post_page-----3d7ec8293d61--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] [https://flask.palletsprojects.com/en/2.2.x/](https://flask.palletsprojects.com/en/2.2.x/)'
  prefs: []
  type: TYPE_NORMAL
- en: '[2] [https://www.djangoproject.com/](https://www.djangoproject.com/)'
  prefs: []
  type: TYPE_NORMAL
- en: '[3] [https://docs.djangoproject.com/en/4.1/intro/tutorial01/](https://docs.djangoproject.com/en/4.1/intro/tutorial01/)'
  prefs: []
  type: TYPE_NORMAL
- en: '[4] [https://streamlit.io/](https://streamlit.io/)'
  prefs: []
  type: TYPE_NORMAL
- en: '[5] [https://discuss.streamlit.io/t/whether-streamlit-can-handle-big-data-analysis/28085/15](https://discuss.streamlit.io/t/whether-streamlit-can-handle-big-data-analysis/28085/15)'
  prefs: []
  type: TYPE_NORMAL
