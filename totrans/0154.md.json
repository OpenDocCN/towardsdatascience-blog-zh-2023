["```py\nlibrary(tidyverse) #Tidyverse meta package\nlibrary(brms) #Bayesian Modelling Package\nlibrary(tidybayes) #Tidy Helper Functions and Visualisation Geoms for Bayesian Models\nlibrary(readxl)\ndf <- read_excel(\"DestinationData2022.xlsx\", \n    sheet = \"SCHOOL PUBLICATION TABLE 2022\", \n    skip = 3)\ncolnames(df) <- c('vcaa_code', \n                  'school_name', \n                  'sector', \n                  'locality', \n                  'total_completed_year12', \n                  'on_track_consenters', \n                  'respondants', \n                  'bachelors', \n                  'deferred', \n                  'tafe', \n                  'apprentice_trainee', \n                  'employed', \n                  'looking_for_work', \n                  'other') \n\ndf <- drop_na(df)\n```", "```py\ndf_long <- df |> \n  mutate(across(5:14, ~ as.numeric(.x)), #convert all numeric fields captured as characters\n         across(8:14, ~ .x/100 * respondants), #calculate counts from proportions\n         across(8:14, ~ round(.x, 0)), #round to whole integers\n         respondants = bachelors + deferred + tafe + apprentice_trainee + employed + looking_for_work + other) |> #recalculate total respondents |> \n  filter(sector != 'A') |>  #Low volume \n  select(sector, school_name, 7:14) |> \n  pivot_longer(c(-1, -2, -3), names_to = 'outcome', values_to = 'proportion') |> \n  mutate(proportion = proportion/respondants)\n```", "```py\ndf |> \n  mutate(sector = fct_infreq(sector)) |> \n  ggplot(aes(sector)) +\n    geom_bar(aes(fill = sector)) + \n    geom_label(aes(label = after_stat(count)), stat = 'count', vjust = 1.5) +\n    labs(x = 'Sector', y = 'Count', title = 'Count of Schools by Sector', fill = 'Sector') +\n    scale_fill_viridis_d(begin = 0.2, end = 0.8) +\n    theme_ggdist()\n```", "```py\ndf_long |> \n  ggplot(aes(sector, proportion, fill = outcome)) +\n    geom_boxplot(alpha = 0.8) +\n    geom_point(position = position_dodge(width=0.75), alpha = 0.1, color = 'grey',  aes(group = outcome)) +\n    labs(x = 'Sector', y = 'Proportion', fill = 'Outcome', title = 'Boxplot of Respondant Proportions by Sector and Outcome') +\n    scale_fill_viridis_d(begin = 0.2, end = 0.8) +\n    theme_ggdist()\n```", "```py\n# Modelling Proportion with Sector:Outcome Interaction term using Beta - Pooled Phi term\n\nm3a <- brm(\n  proportion ~ sector:outcome + 0, \n  family = Beta,\n  data = df_long |> mutate(proportion = proportion + 0.01), # Beta regression can't take outcomes that are 0 so we fudge here by adding tiny increment\n  prior = c(prior(normal(-1, 2), class = 'b'),\n            prior(gamma(6, 1), class = 'phi')),\n  iter = 8000, warmup = 1000, cores = 4, chains = 4, seed = 246, save_pars = save_pars(all = T),\n  control = list(adapt_delta = 0.99, max_treedepth = 15)\n) |> \n  add_criterion(c('waic', 'loo'), moment_match = T)\n\nsummary(m3a)\n```", "```py\nm3b <- brm(\n  bf(proportion ~ sector:outcome + 0,\n     phi ~ sector:outcome + 0),\n  family = Beta,\n  data = df_long |> mutate(proportion = proportion + 0.01),\n  prior = c(prior(normal(-1, 2), class = 'b')),\n  iter = 8000, warmup = 1000, cores = 4, chains = 4, seed = 246, save_pars = save_pars(all = T),\n  control = list(adapt_delta = 0.99)\n) |> \n  add_criterion(c('waic', 'loo'), moment_match = T)\n\nsummary(m3b)\n```", "```py\ncomp <- loo_compare(m3a, m3b)\n\nprint(comp, simplify = F)\n```", "```py\nalt_df <- df_long |> \n  select(sector, outcome, proportion) |> \n  rename(value = proportion) |> \n  mutate(y = 'y', \n         draw = 99) |> \n  select(sector, outcome, draw, value, y)\n\nsim_df <- expand_grid(sector = c('C', 'I', 'G'),\n            outcome = unique(df_long$outcome)) |> \n  add_predicted_draws(m3b, ndraws = 1200) |> \n  rename(value = .prediction) |> \n  ungroup() |> \n  mutate(y = 'y_rep',\n         draw = rep(seq(from = 1, to = 50, length.out = 50), times = 504)) |> \n  select(sector, outcome, draw, value, y) |> \n  bind_rows(alt_df)\n\nsim_df |> \n  ggplot(aes(value, group = draw)) +\n    geom_density(aes(color = y)) +\n    facet_grid(outcome ~ sector, scales = 'free_y') +\n    scale_color_manual(name = '', \n                       values = c('y' = \"darkblue\",\n                                  'y_rep' = \"grey\")) +\n    theme_ggdist() +\n    labs(y = 'Density', x = 'y', title = 'Distribution of Observed and Replicated Proportions by Sector and Outcome')\n```", "```py\nnew_df <- expand_grid(sector = c('I', 'G', 'C'), \n          outcome = c('apprentice_trainee', 'bachelors', 'deferred', 'employed', 'looking_for_work', 'tafe'))\n\nepred_draws(m3b, newdata = new_df) |> \n  compare_levels(.epred, by = sector, comparison = rlang::exprs(C - G, I - G, C - I)) |> \n    mutate(sector = fct_inorder(sector),\n         sector = fct_shift(sector, -1), \n         sector = fct_rev(sector))  |> \n  ggplot(aes(x = .epred, y = sector, fill = sector)) +\n      stat_halfeye() +\n      geom_vline(xintercept = 0, lty = 2) + \n      facet_wrap(~ outcome, scales = 'free_x') +\n      theme_ggdist() +\n      theme(legend.position = 'bottom') +\n      scale_fill_viridis_d(begin = 0.4, end = 0.8) +\n      labs(x = 'Proportional Difference', y = 'Sector', title = 'Differences in Posterior Means by Sector and Outcome', fill = 'Sector')\n```", "```py\nmarg_gt <- epred_draws(m3b, newdata = new_df) |> \n  compare_levels(.epred, by = sector, comparison = rlang::exprs(C - G, I - G, C - I)) |> \n  median_qi(.width = .89) |> \n  mutate(across(where(is.numeric), ~round(.x, 3))) |> \n  select(-c(.point, .interval, .width)) |> \n  arrange(outcome, sector) |> \n  rename(diff_in_means = .epred, \n         Q5.5 = .lower, \n         Q94.5 = .upper) |> \n  group_by(outcome) |> \n  gt() |> \n  tab_header(title = 'Sector Marginal Distributions by Outcome') |> \n  #tab_stubhead(label = 'Sector Comparison') |> \n  fmt_percent() |> \n  gtExtras::gt_theme_pff()\n```"]