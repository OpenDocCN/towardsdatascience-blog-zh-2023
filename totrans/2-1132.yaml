- en: How to Connect to Your AWS EC2 Instance with Visual Studio Code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-to-connect-to-your-aws-ec2-instance-with-visual-studio-code-d72150df601d](https://towardsdatascience.com/how-to-connect-to-your-aws-ec2-instance-with-visual-studio-code-d72150df601d)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A quick and easy guide to accessing remote servers with VS Code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@aashishnair?source=post_page-----d72150df601d--------------------------------)[![Aashish
    Nair](../Images/23f4b3839e464419332b690a4098d824.png)](https://medium.com/@aashishnair?source=post_page-----d72150df601d--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d72150df601d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d72150df601d--------------------------------)
    [Aashish Nair](https://medium.com/@aashishnair?source=post_page-----d72150df601d--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d72150df601d--------------------------------)
    ·7 min read·Apr 27, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/31f029a0a26bb457b3ee2006cf821363.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [John Barkiple](https://unsplash.com/@barkiple?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Visual Studio Code is without a doubt my favorite IDE. It’s simple, intuitive
    user interface makes it my go-to editor for data science projects.
  prefs: []
  type: TYPE_NORMAL
- en: It’s so good in fact, that I refuse to part ways with it even when I am working
    on remote servers.
  prefs: []
  type: TYPE_NORMAL
- en: Is this a problem? No, not at all!
  prefs: []
  type: TYPE_NORMAL
- en: After all, Visual Studio Code can be configured to allow users to work on remote
    servers. Best of all, this takes no more than 10 minutes!
  prefs: []
  type: TYPE_NORMAL
- en: This is useful for projects that require compute or storage that isn’t provided
    by your local machine. I’ve come to rely on this feature when I need to work with
    large datasets.
  prefs: []
  type: TYPE_NORMAL
- en: If you’re in a similar position and wish to process big data or train deep learning
    models while still enjoying the comforts of Visual Studio Code, this tutorial
    will show you how to use this IDE to connect to your AWS EC2.
  prefs: []
  type: TYPE_NORMAL
- en: Case Study
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As part of the tutorial, we will be moving a folder containing two files to
    an EC2 instance: a Python file named `random_number.py` and a `requirements.txt`
    file that contains all of the dependencies for the Python script.'
  prefs: []
  type: TYPE_NORMAL
- en: After the files are moved to the remote server, the `random_number.py` script
    will be executed.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `random_number.py` executes a simple task: print a random number.'
  prefs: []
  type: TYPE_NORMAL
- en: Step 1 — Launch the Instance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: First, let’s launch the EC2 instance that we will be connecting to later on.
  prefs: []
  type: TYPE_NORMAL
- en: 'Feel free to choose the instance type to whatever suits your needs, but show
    some consideration when you choose the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**1\. AMI:** You can use any AMI that you want, but keep it in mind, as it
    will affect the values you enter for the configuration in Visual Studio Code later
    on.'
  prefs: []
  type: TYPE_NORMAL
- en: The EC2 instance for this demo will be launched with an Ubuntu AMI.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b612ccdb9f88602ab429c4b0a553a6e4.png)'
  prefs: []
  type: TYPE_IMG
- en: AMI (Created By Author)
  prefs: []
  type: TYPE_NORMAL
- en: '**2\. Key pair:** A key pair will be needed to connect to the instance later
    on. So, keep it secured in a secure location.'
  prefs: []
  type: TYPE_NORMAL
- en: The key pair for this instance is named “demo_kp.pem” and will be stored in
    the downloads folder.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ce909b6cd98d4fe7ae419f9e66bfd66c.png)'
  prefs: []
  type: TYPE_IMG
- en: Key Pair (Created By Author)
  prefs: []
  type: TYPE_NORMAL
- en: Step 2 — Configure Visual Studio Code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We will be accessing the EC2 instance using secure shell (SSH), a network protocol
    that enables two computers to securely communicate and share information with
    one another.
  prefs: []
  type: TYPE_NORMAL
- en: To enable Visual Studio Code to use SSH, we will need to first install the required
    extension. Go to the marketplace by clicking on the extensions button on the left
    or by pressing Ctrl+Shift+X. Type in “Remote - SSH” and select the first entry.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/100b72adcff8b9ad0747440560166ed5.png)'
  prefs: []
  type: TYPE_IMG
- en: Extension Marketplace (Created By Author)
  prefs: []
  type: TYPE_NORMAL
- en: Install the extension if it hasn’t already been installed.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6251bbeba0784259d85f2860c4b45aba.png)'
  prefs: []
  type: TYPE_IMG
- en: Installed Extension (Created By Author)
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, open the remote window by clicking the green icon on the bottom left
    of the window:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d2bfbfe5d51efc09eeb5229bee4bbb7f.png)'
  prefs: []
  type: TYPE_IMG
- en: Open a Remote Window (Created By Author)
  prefs: []
  type: TYPE_NORMAL
- en: Select “Connect to Host”.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a0ef7c34f51e1959e9edad269683935c.png)'
  prefs: []
  type: TYPE_IMG
- en: Connect to Host (Created By Author)
  prefs: []
  type: TYPE_NORMAL
- en: 'Then, select “Configure SSH Hosts” (not the row highlighted in blue) :'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f90aea23e5595d052bed6acabc0639f2.png)'
  prefs: []
  type: TYPE_IMG
- en: Configure SSH Hosts (Created By Author)
  prefs: []
  type: TYPE_NORMAL
- en: Select the config file for this computer, which is the first one in this case.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/516dc9e3b596887ae75a4ded6d478bd6.png)'
  prefs: []
  type: TYPE_IMG
- en: Select Config File (Created By Author)
  prefs: []
  type: TYPE_NORMAL
- en: 'After opening the config file, enter the details for the following keywords:
    **Host**, **HostName**, **User**, and **IdentityFile**.'
  prefs: []
  type: TYPE_NORMAL
- en: For the case study, the config file will look like the following.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Here’s a quick breakdown of the keywords and what you should write next to them.
  prefs: []
  type: TYPE_NORMAL
- en: '**1\. Host:** This is a name given by the user. It can be anything you want.'
  prefs: []
  type: TYPE_NORMAL
- en: The host for the case study will be called “demo-host”.
  prefs: []
  type: TYPE_NORMAL
- en: '**2\. HostName:** The HostName should be the public DNS of the instance. To
    find the DNS of your instance, first, select the instance in the EC2 console.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f2f6c41f77bfaf5867ee3f1ac13132c0.png)'
  prefs: []
  type: TYPE_IMG
- en: Select the Instance (Created By Author)
  prefs: []
  type: TYPE_NORMAL
- en: Then, click on “Connect” and switch to the “SSH clien”t tab. The public DNS
    will be provided in the instructions.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/533606115e697c0d44b4760aef828c64.png)'
  prefs: []
  type: TYPE_IMG
- en: Public DNS (Created By Author)
  prefs: []
  type: TYPE_NORMAL
- en: '**3\. User:** This is the username of the instance. The username depends on
    the AMI selected for the EC2 instance. If you’re unsure of what the user should
    be, please visit [the AWS documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/connection-prereqs.html).'
  prefs: []
  type: TYPE_NORMAL
- en: In my case, the AMI used to launch the instance is Ubuntu, so the user will
    be “ubuntu”.
  prefs: []
  type: TYPE_NORMAL
- en: '**4\. IdentityFile:** This is the file path of the private key that is assigned
    to the EC2 instance. For this case study, the value assigned to this keyword is
    the path to the “demo_kp.pem” file.'
  prefs: []
  type: TYPE_NORMAL
- en: 'After putting all of the pieces together, the config file should look like
    the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1976ee801fd9be09b216fdae1123d76c.png)'
  prefs: []
  type: TYPE_IMG
- en: Config File (Created By Author)
  prefs: []
  type: TYPE_NORMAL
- en: Save the config file after making all changes. You are now ready to connect
    to this EC2 instance.
  prefs: []
  type: TYPE_NORMAL
- en: 'Note: The public DNS of the instance will change every time you start the instance.
    So, whenever you get our instance running, you will need to update your config
    file by changing the HostName value to the new public DNS.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Step 3 — Connect to the Instance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once again, select the green button on the bottom left and select “Connect to
    Host”.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ca5c10cdbd16ae592441e1c61d6cde76.png)'
  prefs: []
  type: TYPE_IMG
- en: Connect to Host (Created By Author)
  prefs: []
  type: TYPE_NORMAL
- en: This time, you should be able to see your created host.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/dd5b763d332794e98b61513569ff1bfc.png)'
  prefs: []
  type: TYPE_IMG
- en: Select Host (Created By Author)
  prefs: []
  type: TYPE_NORMAL
- en: After you select your created host, a new window should pop up, which should
    give you direct access to your remote server!
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a97d78e945492601283c7bee00e5d837.png)'
  prefs: []
  type: TYPE_IMG
- en: New Window (Created By Author)
  prefs: []
  type: TYPE_NORMAL
- en: If you look at the bottom left of the window, you should be able to see the
    name of your created host. Furthermore, you can confirm the connection to the
    instance by using the terminal.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8076c6ba726eedb51faf0dada04cb80e.png)'
  prefs: []
  type: TYPE_IMG
- en: Code Output (Created By Author)
  prefs: []
  type: TYPE_NORMAL
- en: Now that you have access to the remote server, you can write code and navigate
    directories in the server with ease using Visual Studio Code!
  prefs: []
  type: TYPE_NORMAL
- en: Step 4 — Set Up the Environment in the Instance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: So, we’ve successfully connected to the EC2 instance using Visual Studio Code.
  prefs: []
  type: TYPE_NORMAL
- en: However, the job isn’t done yet. After all, we need to set up the environment
    in order to use the `random_number.py` and `requirements.txt` files in the server.
  prefs: []
  type: TYPE_NORMAL
- en: 'For the case study, we will make the following installations in the terminal
    of the remote server:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: With these installments, we can create a virtual environment in which we can
    operate.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we will get the files we need to run the `random_number.py` file. There
    are a few ways to achieve this.
  prefs: []
  type: TYPE_NORMAL
- en: First, since we are using Visual Studio Code, we can simply copy and paste the
    scripts from our local machine to the scripts in the remote server. Remember that
    we are not bound by the limitations of the command line interface.
  prefs: []
  type: TYPE_NORMAL
- en: That being said, manually copying text from one file to another can be cumbersome.
    Instead, it would be preferrable to copy files to the remote server using secure
    copy protocol (SCP).
  prefs: []
  type: TYPE_NORMAL
- en: Using SCP, we can copy an entire directory to the remote server with just one
    command!
  prefs: []
  type: TYPE_NORMAL
- en: 'The syntax for copying an entire folder is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/57920c2078910cfb39a0a078bfbe610e.png)'
  prefs: []
  type: TYPE_IMG
- en: Copying with SCP (Created By Author)
  prefs: []
  type: TYPE_NORMAL
- en: 'Alternatively, if you’re just looking to copy a single file, you can use an
    SCP command with the following syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Similar to configuring Visual Studio Code, using SCP requires the users to know
    the path to their key file, their user, and their public DNS. Use the same information
    that was entered in the config file in Visual Studio Code.
  prefs: []
  type: TYPE_NORMAL
- en: Now, our remote server should have all the files we need!
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/19ab439431b423bb9f5bb918eb2eecb3.png)'
  prefs: []
  type: TYPE_IMG
- en: Code Output (Created By Author)
  prefs: []
  type: TYPE_NORMAL
- en: Let’s create a virtual environment named `test_venv` and enter it.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/ab25533d93b667d3669fabacdd1b85e0.png)'
  prefs: []
  type: TYPE_IMG
- en: Code Output (Created By Author)
  prefs: []
  type: TYPE_NORMAL
- en: Inside this virtual environment, install the packages in the requirements.txt
    file.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/542027270a6e4d1b8ec7ccfa61666a98.png)'
  prefs: []
  type: TYPE_IMG
- en: Code Output (Created By Author)
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we can run our `random_number.py` file!
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/d6a739cd3d618914f3636b76af9b92f7.png)'
  prefs: []
  type: TYPE_IMG
- en: Code Output (Created By Author)
  prefs: []
  type: TYPE_NORMAL
- en: Final Remarks
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/96e071b12b9091744cbc6fbd48f15153.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Prateek Katyal](https://unsplash.com/@prateekkatyal?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: If you originally believed that working on remote servers meant using boring
    editors like vi, I hope this article has changed your mind.
  prefs: []
  type: TYPE_NORMAL
- en: With this new skill, fans of Visual Studio Code will be able to take on more
    computationally intensive tasks like deep learning projects without having to
    adopt a less preferred IDE.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, since you are now working with EC2 instances, remember that your instance’s
    public DNS changes every time you start it, so you will have to update the config
    file in Visual Studio Code (and any commands that use the public DNS) every time
    you spin up the instance.
  prefs: []
  type: TYPE_NORMAL
- en: Thank you for reading!
  prefs: []
  type: TYPE_NORMAL
