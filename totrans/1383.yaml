- en: 'Jupyter Already Has a Perfect Text Editor: Building a Python IDE'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/jupyter-already-has-a-perfect-text-editor-building-a-python-ide-20063044749b](https://towardsdatascience.com/jupyter-already-has-a-perfect-text-editor-building-a-python-ide-20063044749b)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Make Jupyter your all-in-one IDE and elevate your Python development experience
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://dpoulopoulos.medium.com/?source=post_page-----20063044749b--------------------------------)[![Dimitris
    Poulopoulos](../Images/ce535a1679779f5a2ec8b024e6691e50.png)](https://dpoulopoulos.medium.com/?source=post_page-----20063044749b--------------------------------)[](https://towardsdatascience.com/?source=post_page-----20063044749b--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----20063044749b--------------------------------)
    [Dimitris Poulopoulos](https://dpoulopoulos.medium.com/?source=post_page-----20063044749b--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----20063044749b--------------------------------)
    ·6 min read·Mar 8, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d9c19f9805a3a34318db168c864ad8f1.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Fotis Fotopoulos](https://unsplash.com/@ffstop?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: '*This article is the third part of a series. Check out the full series:* [*Part
    I*](/unlocking-the-potential-of-jupyterlab-discover-the-powerful-text-editor-you-never-knew-you-had-af18bf5bce3f)*,*
    [*Part II*](/jupyter-already-has-a-perfect-text-editor-this-is-how-you-can-configure-it-4d3eb37878f1),
    [*Part IV*](/the-perfect-text-editor-for-jupyter-a-complete-python-ide-608dd466560b)*.*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In previous parts of this series, we covered why many developers do not consider
    Jupyter as a fully integrated development environment and how the lack of a powerful
    text editor is one of the main reasons.
  prefs: []
  type: TYPE_NORMAL
- en: Thus, we decided to look at JupyterLab as a platform that we could use to create
    our own Python IDE from scratch. Extending the same idea to cover other programming
    languages is just a Google search away.
  prefs: []
  type: TYPE_NORMAL
- en: To this end, we used the JupyterLab terminal emulator to install Neovim and
    make it act and look like VS Code. This way, we can build a docker image to package
    our whole workspace, customized to our liking. This idea goes beyond JupyterLab
    and Neovim. We can have a working environment with pre-configured tools, such
    as Git for version control, pyenv for creating virtual environments, and tmux
    for terminal emulation.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the first two parts of the series, we installed Neovim, learned our Vim
    bindings, and configured the looks and basic settings of the editor. Today, we
    will install several plugins to make our text editor behave more like an IDE.
    Lest we forget, the following image is a “Card Postal” from our final destination:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/bf26f9b2d357744f69b3527f9800cfe0.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Let’s start!
  prefs: []
  type: TYPE_NORMAL
- en: '[Learning Rate](https://www.dimpo.me/newsletter) is a newsletter for those
    who are curious about the world of ML and MLOps. If you want to learn more about
    topics like this subscribe [here](https://www.dimpo.me/newsletter). You’ll hear
    from me on the last Sunday of every month with updates and thoughts on the latest
    MLOps news and articles!'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Basic Plugins
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Several functionalities that come out of the box with popular editors, like
    VS Code, are absent when you first install Neovim. But fear not; the community
    has built almost everything you can think of, and usually, it’s effortless to
    setup it up.
  prefs: []
  type: TYPE_NORMAL
- en: 'In our previous article, we saw how we can set up a plugin manager for Neovim
    to make our life easier when we install plugins. Now, the process of installing
    a new plugin is usually:'
  prefs: []
  type: TYPE_NORMAL
- en: Add the plugin name in the `init.vim` configuration file
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Restart the text editor
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run the `:PlugInstall` Neovim command
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Restart the text editor to apply the new plugin
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: NERDCommenter
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Armed with this knowledge, let’s install our first plugin, `[nerdcommenter](https://github.com/preservim/nerdcommenter)`.
    `nerdcommenter` is a relatively simple plugin that does one job: comments or uncomments
    multiple lines. To install it, add the following line in your Neovim configuration
    file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'If you’re following the series (which you should), this is how your `init.vim`
    file should look like now:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: To avoid copy-pasting the whole file again, remember that whenever we add a
    new plugin, we always add it between the `call plug#begin()` and `call plug#end()`
    directives.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, restart the editor and run the Neovim `:PlugInstall` command. You should
    see that `vim-plug` (the plugin manager we use) installed the `nerdcommenter`
    tool along with the other plugins:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a5fc4bca2a18694c3c3520eb2738c449.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'There are many options you can set to dictate how `nerdcommenter` should behave,
    but I like to keep things simple for simple plugins like this. Probably the only
    shortcut you should remember is the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: This shortcut executed the `NERDCommenterToggle` command. Usually, the `<leader>`
    key is the forward slash character (`\`). Thus, to test the plugin, select multiple
    lines with Shift + V (Vim’s visual mode — Learn your Vim bindings!) and press
    `\ + c + n`.
  prefs: []
  type: TYPE_NORMAL
- en: 'I said let’s keep things simple with this plugin. However, there is a configuration
    I like to set: Add spaces after comment delimiters by default. Thus, let’s add
    the following line at the end of our `init.vim` file and restart the editor to
    take effect:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Tagbar
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Tagbar](https://github.com/preservim/tagbar) is a code outline viewer for
    Vim/Neovim. An outline viewer is always handy when working with files containing
    multiple lines of code.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To install Tagbar, add the following line in your Neovim configuration file
    and follow the usual process of installing plugins:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'However, when you try to toggle the outline viewer with the `TagbarToggle`
    command, you get this warning:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f3828a2306e4269a0879d4737c3b354f.png)'
  prefs: []
  type: TYPE_IMG
- en: Image Author
  prefs: []
  type: TYPE_NORMAL
- en: 'This is a case of a plugin that needs another tool to function correctly. In
    this case, the error message says it needs a package named `exuberant-ctags`.
    So, let’s install it first:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, we can relaunch the editor, run the `:TagbarToggle` command and everything
    should work seamlessly:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/80faa2aec5eae146d8c43ec683395604.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Okay, I admit this is not the sexiest outline, but wait until we start opening
    large Python files!
  prefs: []
  type: TYPE_NORMAL
- en: NERDTree
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Another helpful plugin we’ll look at in detail is `[NERDTree](https://github.com/preservim/nerdtree)`.
    This plugin adds a file explorer and is one of the first plugins to add when starting
    with a fresh Neovim installation. As usual, add the following line to your configuration
    file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'After installing the plugin, you can use it via the `:NERDTreeToggle` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7992bb7377ecae27647bb4d863fed3b6.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'It seems that we’re getting closer to our goal! Now, there are many things
    that you can do with `NERDTree`, but what I like most is how it can manipulate
    the file system by pressing `m`. This way, you can easily manage files and folders
    without leaving your text editor:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ea5dfdcb6f013b269efab3fd8cf7c394.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Navigating between panes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now that we have plugins that launch new panes, we must find a way to navigate
    between them. To this end, I like to use the following configuration:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Adding this to your `init.vim` file will permit you to change panes using the
    keyword `f` and the standard Vim navigation keys (although we have already remapped
    those too).
  prefs: []
  type: TYPE_NORMAL
- en: Honorable mentions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'I’ll leave you with two other plugins you may want to try out:'
  prefs: []
  type: TYPE_NORMAL
- en: '[vim-surround](https://github.com/tpope/vim-surround)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[fzf fuzzy finder](https://github.com/junegunn/fzf)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Both have self-explanatory names, so your homework is installing and configuring
    them as you see fit.
  prefs: []
  type: TYPE_NORMAL
- en: As usual, to save your progress, use the `docker commit` command as we did in
    the previous article. You can find mine on [DockerHub](https://hub.docker.com/layers/dpoulopoulos/jupyter/v0.0.2/images/sha256-eb969b56d5e83a60d45860a33e56e4ba79059329601370e0427028cb7935e19d?context=repo).
  prefs: []
  type: TYPE_NORMAL
- en: In the following article, we’ll start tackling autocompletion and formatting!
  prefs: []
  type: TYPE_NORMAL
- en: About the Author
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: My name is [Dimitris Poulopoulos](https://www.dimpo.me/?utm_source=medium&utm_medium=article&utm_campaign=neovim-core-plugins),
    and I’m a machine learning engineer working for [Arrikto](https://www.arrikto.com/).
    I have designed and implemented AI and software solutions for major clients such
    as the European Commission, Eurostat, IMF, the European Central Bank, OECD, and
    IKEA.
  prefs: []
  type: TYPE_NORMAL
- en: If you are interested in reading more posts about Machine Learning, Deep Learning,
    Data Science, and DataOps, follow me on [Medium](https://towardsdatascience.com/medium.com/@dpoulopoulos/follow),
    [LinkedIn](https://www.linkedin.com/in/dpoulopoulos/), or [@james2pl](https://twitter.com/james2pl)
    on Twitter.
  prefs: []
  type: TYPE_NORMAL
- en: Opinions expressed are solely my own and do not express the views or opinions
    of my employer.
  prefs: []
  type: TYPE_NORMAL
