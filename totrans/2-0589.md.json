["```py\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\n```", "```py\nlith_dict = {'LITH': ['Shale', 'Sandstone', \n                      'Sandstone/Shale', 'Chalk', \n                      'Limestone', 'Marl', 'Tuff'],\n             'COUNT': [40,65, 40, 35, \n                            40, 70, 50]}\n\ndf = pd.DataFrame.from_dict(lith_dict)\n```", "```py\nmax_value_full_ring = max(df['COUNT'])\ndata_len = len(df)\n```", "```py\nring_colours = ['#2f4b7c', '#665191', '#a05195','#d45087',\n               '#f95d6a','#ff7c43','#ffa600']\n```", "```py\nring_labels =  [f'   {x} ({v}) ' for x, v in zip(list(df['LITH']), \n                                                 list(df['COUNT']))]\n```", "```py\n['   Shale (40) ',\n '   Sandstone (65) ',\n '   Sandstone/Shale (40) ',\n '   Chalk (35) ',\n '   Limestone (40) ',\n '   Marl (70) ',\n '   Tuff (50) ']\n```", "```py\nfig = plt.figure(figsize=(10,10), linewidth=10,\n                 edgecolor='#393d5c', \n                 facecolor='#25253c')\n```", "```py\nrect = [0.1,0.1,0.8,0.8]\n```", "```py\n# Add axis for radial backgrounds\nax_polar_bg = fig.add_axes(rect, polar=True, frameon=False)\n# Start bars at top of plot\nax_polar_bg.set_theta_zero_location('N')\n# Make bars go counter-clockwise. \nax_polar_bg.set_theta_direction(1)\n```", "```py\n# Loop through each entry in the dataframe and plot a grey\n# ring to create the background for each one\nfor i in range(data_len):\n    ax_polar_bg.barh(i, max_value_full_ring*1.5*np.pi/max_value_full_ring, \n                     color='grey', \n                     alpha=0.1)\n```", "```py\nmax_value_full_ring*1.5*np.pi/max_value_full_ring\n```", "```py\n# Hide all axis items\nax_polar_bg.axis('off')\n```", "```py\n # Add axis for radial chart for each entry in the dataframe\nax_polar = fig.add_axes(rect, polar=True, frameon=False)\nax_polar.set_theta_zero_location('N')\nax_polar.set_theta_direction(1)\nax_polar.set_rgrids([0, 1, 2, 3, 4, 5, 6], \n                    labels=ring_labels, \n                    angle=0, \n                    fontsize=14, fontweight='bold',\n                    color='white', verticalalignment='center')\n\n# Loop through each entry in the dataframe and create a coloured \n# ring for each entry\nfor i in range(data_len):\n    ax_polar.barh(i, list(df['COUNT'])[i]*1.5*np.pi/max_value_full_ring, \n                  color=ring_colours[i])\n```", "```py\n# Hide all grid elements for the    \nax_polar.grid(False)\nax_polar.tick_params(axis='both', left=False, bottom=False, \n                   labelbottom=False, labelleft=True)\n\nplt.show()\n```", "```py\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\n\n#Load data into pandas dataframe\n\nlith_dict = {'LITH': ['Shale', 'Sandstone', \n                      'Sandstone/Shale', 'Chalk', \n                      'Limestone', 'Marl', 'Tuff'],\n             'COUNT': [40,65, 40, 35, \n                            40, 70, 50]}\n\ndf = pd.DataFrame.from_dict(lith_dict)\n\n# Get key properties for colours and labels\nmax_value_full_ring = max(df['COUNT'])\n\nring_colours = ['#2f4b7c', '#665191', '#a05195','#d45087',\n               '#f95d6a','#ff7c43','#ffa600']\n\nring_labels = [f'   {x} ({v}) ' for x, v in zip(list(df['LITH']), \n                                                 list(df['COUNT']))]\ndata_len = len(df)\n\n# Begin creating the figure\nfig = plt.figure(figsize=(10,10), linewidth=10,\n                 edgecolor='#393d5c', \n                 facecolor='#25253c')\n\nrect = [0.1,0.1,0.8,0.8]\n\n# Add axis for radial backgrounds\nax_polar_bg = fig.add_axes(rect, polar=True, frameon=False)\nax_polar_bg.set_theta_zero_location('N')\nax_polar_bg.set_theta_direction(1)\n\n# Loop through each entry in the dataframe and plot a grey\n# ring to create the background for each one\nfor i in range(data_len):\n    ax_polar_bg.barh(i, max_value_full_ring*1.5*np.pi/max_value_full_ring, \n                     color='grey', \n                     alpha=0.1)\n# Hide all axis items\nax_polar_bg.axis('off')\n\n# Add axis for radial chart for each entry in the dataframe\nax_polar = fig.add_axes(rect, polar=True, frameon=False)\nax_polar.set_theta_zero_location('N')\nax_polar.set_theta_direction(1)\nax_polar.set_rgrids([0, 1, 2, 3, 4, 5, 6], \n                    labels=ring_labels, \n                    angle=0, \n                    fontsize=14, fontweight='bold',\n                    color='white', verticalalignment='center')\n\n# Loop through each entry in the dataframe and create a coloured \n# ring for each entry\nfor i in range(data_len):\n    ax_polar.barh(i, list(df['COUNT'])[i]*1.5*np.pi/max_value_full_ring, \n                  color=ring_colours[i])\n\n# Hide all grid elements for the    \nax_polar.grid(False)\nax_polar.tick_params(axis='both', left=False, bottom=False, \n                   labelbottom=False, labelleft=True)\n\nplt.show()\n```"]