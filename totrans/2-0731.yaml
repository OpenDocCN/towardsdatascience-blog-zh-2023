- en: Develop and test RLS Rules in Power BI
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Power BI 中开发和测试 RLS 规则
- en: 原文：[https://towardsdatascience.com/develop-and-test-rls-rules-in-power-bi-9dc705945feb](https://towardsdatascience.com/develop-and-test-rls-rules-in-power-bi-9dc705945feb)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/develop-and-test-rls-rules-in-power-bi-9dc705945feb](https://towardsdatascience.com/develop-and-test-rls-rules-in-power-bi-9dc705945feb)
- en: '*Very often, not all Users should have permission to access all data in a Report.
    Here I will explain how to develop RLS Rules in Power BI to configure access and
    how to test them.*'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*通常，并非所有用户都应有权限访问报告中的所有数据。在这里，我将解释如何在 Power BI 中开发 RLS 规则以配置访问权限，并如何测试它们。*'
- en: '[](https://medium.com/@salvatorecagliari?source=post_page-----9dc705945feb--------------------------------)[![Salvatore
    Cagliari](../Images/a24b0cefab6e707cfee06cde9e857559.png)](https://medium.com/@salvatorecagliari?source=post_page-----9dc705945feb--------------------------------)[](https://towardsdatascience.com/?source=post_page-----9dc705945feb--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----9dc705945feb--------------------------------)
    [Salvatore Cagliari](https://medium.com/@salvatorecagliari?source=post_page-----9dc705945feb--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@salvatorecagliari?source=post_page-----9dc705945feb--------------------------------)[![Salvatore
    Cagliari](../Images/a24b0cefab6e707cfee06cde9e857559.png)](https://medium.com/@salvatorecagliari?source=post_page-----9dc705945feb--------------------------------)[](https://towardsdatascience.com/?source=post_page-----9dc705945feb--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----9dc705945feb--------------------------------)
    [Salvatore Cagliari](https://medium.com/@salvatorecagliari?source=post_page-----9dc705945feb--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----9dc705945feb--------------------------------)
    ·11 min read·Jun 19, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----9dc705945feb--------------------------------)
    ·阅读时长 11 分钟·2023年6月19日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/3f6630ce10ed9e616cfbb3cea460be9d.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3f6630ce10ed9e616cfbb3cea460be9d.png)'
- en: Photo by [FLY:D](https://unsplash.com/es/@flyd2069?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[FLY:D](https://unsplash.com/es/@flyd2069?utm_source=medium&utm_medium=referral)
    在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: Many of my clients want to restrict access to the data in their reports based
    on specific rules.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 许多客户希望根据特定规则限制其报告中的数据访问。
- en: Access to data is called Row Level Security (RLS in short).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 数据访问被称为行级安全（简称 RLS）。
- en: You can find many articles about RLS in Power BI on Medium.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 Medium 上找到许多关于 Power BI 中 RLS 的文章。
- en: I added two of them in the References section below.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我在下面的参考部分添加了其中的两个。
- en: While all the articles do a good job of explaining the basics, I always miss
    an explanation on how to develop more complex rules and how to test them easily.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管所有文章都很好地解释了基础知识，但我总是缺少关于如何开发更复杂规则以及如何轻松测试它们的解释。
- en: In this article, I will explain the basics of RLS and add complexity step-by-step.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我将一步步解释 RLS 的基础知识并逐步增加复杂性。
- en: In addition, I will show you how to use DAX Studio to build queries to test
    RLS rules before adding them to the data model.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我还将向你展示如何使用 DAX Studio 构建查询来测试 RLS 规则，然后再将它们添加到数据模型中。
- en: So, here we are.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我们开始吧。
- en: Scenario
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 场景
- en: I use the Scenario where Users get access to Retail Sales data based on Stores
    or the geographic locations of Stores within the company, including a combination
    of both.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用的场景是，用户根据公司内的门店或门店的地理位置访问零售销售数据，包括两者的组合。
- en: 'In the Contoso data model, I use the following tables:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Contoso 数据模型中，我使用以下表：
- en: '![](../Images/3e6ace12331645453e4a6c8d136c5674.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3e6ace12331645453e4a6c8d136c5674.png)'
- en: Figure 1 — Tables involved in my scenario (Figure by the Author)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图1 — 涉及的表（图由作者提供）
- en: 'I create the following report to test my results:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我创建了以下报告来测试我的结果：
- en: '![](../Images/f207bfb3800d364590dcf8b7a8967049.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f207bfb3800d364590dcf8b7a8967049.png)'
- en: Figure 2 — Starting report (Figure by the Author)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图2 — 起始报告（图由作者提供）
- en: Create a simple rule
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建简单规则
- en: 'To create an RLS Rule, you need to open the Security role editor:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建 RLS 规则，你需要打开安全角色编辑器：
- en: '![](../Images/5163fd1f755b422b1d42f5e62131d497.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5163fd1f755b422b1d42f5e62131d497.png)'
- en: Figure 3 — Open the Security role editor (Figure by the Author)
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图3 — 打开安全角色编辑器（图由作者提供）
- en: 'Next, you can create a new Role and set the name for this Role:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你可以创建一个新角色并设置该角色的名称：
- en: '![](../Images/45571303eae42bf50b6132464af4829f.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/45571303eae42bf50b6132464af4829f.png)'
- en: Figure 4 — Create a Role and rename it (Figure by the Author)
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4 — 创建一个角色并重命名它（图示由作者提供）
- en: In my case, I put the name to “StorePermissions”.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的情况下，我将名称设置为“StorePermissions”。
- en: 'Now, I can start adding an expression to control access to the Store table:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我可以开始添加一个表达式来控制对 Store 表的访问：
- en: '![](../Images/12036d119a477347e49b634f8a55402f.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/12036d119a477347e49b634f8a55402f.png)'
- en: Figure 5 — Add a DAX expression to the new Role (Figure by the Author)
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5 — 将 DAX 表达式添加到新角色（图示由作者提供）
- en: We have had a new, simpler editor for RLS rules for a few months.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经有了一个新的、更简单的 RLS 规则编辑器几个月了。
- en: In my case, I want to add a DAX expression. So, I click on the “Switch to DAX
    editor” button.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的情况下，我想添加一个 DAX 表达式。所以，我点击“切换到 DAX 编辑器”按钮。
- en: 'At first, I add the simplest possible expression: TRUE()'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 起初，我添加了最简单的表达式：`TRUE()`。
- en: '![](../Images/96f18d77347db2d276bc3fd5bd174edf.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/96f18d77347db2d276bc3fd5bd174edf.png)'
- en: Figure 6 — Simplest possible RLS rule (Figure by the Author)
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6 — 最简单的 RLS 规则（图示由作者提供）
- en: To understand RLS Rules, you must know that access is controlled by the output
    of the expression in the RLS rule editor.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 要理解 RLS 规则，你必须知道访问是由 RLS 规则编辑器中表达式的输出控制的。
- en: The user will get access if the output of the expression is not empty or FALSE().
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果表达式的输出不是空的或 `FALSE()`，用户将获得访问权限。
- en: In principle, any expression in the RLS rule editor is added as a filter to
    any query.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 原则上，RLS 规则编辑器中的任何表达式都会作为筛选器添加到任何查询中。
- en: Let’s look at the effect of this first expression before I explain this in more
    detail.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在我更详细地解释之前，让我们先看看这个第一个表达式的效果。
- en: To test the Rule, I save the expression and close the Editor.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测试规则，我保存表达式并关闭编辑器。
- en: 'Now I can View the report with the new Rule:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我可以使用新规则查看报告：
- en: '![](../Images/5209cfe795bacf84fb5556d2d0024d0e.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5209cfe795bacf84fb5556d2d0024d0e.png)'
- en: Figure 7 — Test the RLS rule (Figure by the Author)
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7 — 测试 RLS 规则（图示由作者提供）
- en: On top of the report page, you will see a yellow banner showing that you are
    looking at the report using the StorePermission Rule.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在报告页面顶部，你会看到一个黄色横幅，显示你正在使用 StorePermission 规则查看报告。
- en: As the StorePermission rule doesn’t restrict access, you will not see any difference.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 StorePermission 规则不限制访问，你不会看到任何区别。
- en: Let’s try something different.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试一些不同的东西。
- en: Now I change the Expression in the RLS rule to FALSE().
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我将 RLS 规则中的表达式更改为 `FALSE()`。
- en: 'When I test the Rule, I will not see any data:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 当我测试规则时，我不会看到任何数据：
- en: '![](../Images/0fc433091b9bca0bc98a6b1f95d142a8.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0fc433091b9bca0bc98a6b1f95d142a8.png)'
- en: Figure 8 — Test the Rule with FALSE() (Figure by the Author)
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8 — 使用 `FALSE()` 测试规则（图示由作者提供）
- en: This proves that data is accessible if the expression doesn’t return FALSE().
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这证明如果表达式不返回 `FALSE()`，数据是可以访问的。
- en: Test query
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试查询
- en: 'To understand this effect in detail, let me show a DAX query to get the result
    without any restrictions:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 为了详细了解这种效果，让我展示一个 DAX 查询，以在没有任何限制的情况下获取结果：
- en: '[PRE0]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When I add an RLS rule with TRUE(), as shown above, the query changes to a
    query similar to this:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 当我添加一个带有 `TRUE()` 的 RLS 规则，如上所示，查询变成类似于以下的查询：
- en: '[PRE1]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: I enclosed the query within a [FILTER()](https://dax.guide/filter/) function
    and added TRUE() as the filter expression.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我将查询封装在一个 [FILTER()](https://dax.guide/filter/) 函数中，并添加了 `TRUE()` 作为筛选表达式。
- en: In the following examples, I will use [CALCULATETABLE()](https://dax.guide/calculatetable/),
    as writing the code is more efficient and flexible.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的示例中，我将使用 [CALCULATETABLE()](https://dax.guide/calculatetable/)，因为编写代码更高效灵活。
- en: More on this in a bit.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 稍后会详细介绍这一点。
- en: Make it more complex
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使其更复杂
- en: Next, I want to restrict access to all Stores containing the “Contoso T” String.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我想限制对所有包含“Contoso T”字符串的门店的访问。
- en: 'For this, I change the Expression in the Rule editor to the following:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我将规则编辑器中的表达式更改为以下内容：
- en: '[PRE2]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'When testing the rule, I get the following result:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 测试规则时，我得到了以下结果：
- en: '![](../Images/6ba98951af69ed96b5ea131eff9e4fe0.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6ba98951af69ed96b5ea131eff9e4fe0.png)'
- en: Figure 9 — Result for restricting access to “Contoso T” Stores (Figure by the
    Author)
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9 — 限制访问“Contoso T”门店的结果（图示由作者提供）
- en: Testing the rule with a DAX query
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 DAX 查询测试规则
- en: It would be nice to test the outcome of such a rule with a DAX Query.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 测试这种规则的结果将是很好的。
- en: 'In this case, I use the following Query in DAX Studio to check the Result:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我使用以下 DAX Studio 查询来检查结果：
- en: '[PRE3]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The inner part, with SUMMARIZECOLUMNS(), generates the output table.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 内部部分，使用 `SUMMARIZECOLUMNS()`，生成输出表。
- en: In this case, I’m interested only in the list of the stores.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我只对门店列表感兴趣。
- en: Then, I enclose the SUMMARIZECOLUMNS() call with CALCULATETABLE() to add a filter
    to the query.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我用 CALCULATETABLE() 将 SUMMARIZECOLUMNS() 包装起来，以向查询添加过滤器。
- en: In this case, I add the expression from the RLS rule, including an “= TRUE()”
    check.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我添加了来自 RLS 规则的表达式，包括一个“= TRUE()”检查。
- en: 'The result is the following:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![](../Images/dc97aebf36baa1b2a01bc187dd1c51e6.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dc97aebf36baa1b2a01bc187dd1c51e6.png)'
- en: Figure 10 — Result of check query (Figure by the Author)
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10 — 检查查询的结果（作者提供的图）
- en: But what happens under the hood?
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 那么在后台发生了什么呢？
- en: 'Let’s look at the Storage Engine Query:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看存储引擎查询：
- en: '![](../Images/aa511442640dc933a1f0d97e3252ede7.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/aa511442640dc933a1f0d97e3252ede7.png)'
- en: Figure 11 — Result of the check Query (Figure by the Author)
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11 — 检查查询的结果（作者提供的图）
- en: And what happens when I apply the RLS rule to this query?
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，当我将 RLS 规则应用到这个查询时会发生什么呢？
- en: 'I can apply an RLS rule from DAX Studio with a few clicks:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以通过 DAX Studio 轻松应用 RLS 规则：
- en: '![](../Images/2dc5fdf0eb5591a3b7211711c7e11eed.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2dc5fdf0eb5591a3b7211711c7e11eed.png)'
- en: Figure 12 — Activate an RLS rule (Figure by the Author)
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12 — 激活 RLS 规则（作者提供的图）
- en: 'The Storage Engine query is the following:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 存储引擎查询如下：
- en: '![](../Images/5520d489d048cd504e11d7a43a74a7d3.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5520d489d048cd504e11d7a43a74a7d3.png)'
- en: Figure 13 — Query Analysis with the RLS Rule
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13 — 带有 RLS 规则的查询分析
- en: The first query (Line 2) retrieves the list of all Stores.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个查询（第 2 行）检索所有商店的列表。
- en: The second query includes the RLS rule in the WHERE clause.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个查询在 WHERE 子句中包含 RLS 规则。
- en: Instead of having the list matching Stores (According to the Filter), we see
    a cryptic line, which includes the RLS rule.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 结果不是匹配的商店列表（根据过滤器），而是包含 RLS 规则的神秘行。
- en: You can see that the result of the Storage Engine (SE) query still contains
    309 Rows, like above, which is the number of all Stores + 3 rows.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到存储引擎（SE）查询的结果仍然包含 309 行，如上所述，这些行的数量是所有商店 + 3 行。
- en: 'A hint why we have the discrepancy of 3 rows is in the text below the SE query:
    Estimated size: rows = 309'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有 3 行差异的提示在 SE 查询下方的文本中：估算大小：行数 = 309
- en: The actual number of rows returned may be indeed 306.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 实际返回的行数可能确实是 306。
- en: 'But this analysis shows that RLS rules are applied **after** the Storage Engine,
    as the query result contains only 21 rows: All Stores which start with “Contoso
    T”.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 但这个分析表明 RLS 规则是在存储引擎**之后**应用的，因为查询结果仅包含 21 行：所有以“Contoso T”开头的商店。
- en: This is important, as the Formula Engine (FE), which will compute the final
    result after the Storage Engine, is single-threaded and can use only one CPU Core.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这很重要，因为计算最终结果的公式引擎（FE）在存储引擎之后是单线程的，只能使用一个 CPU 核心。
- en: While the SE is multi-threaded and can use multiple CPU cores.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 而 SE 是多线程的，可以使用多个 CPU 核心。
- en: Consequently, we must refrain from writing inefficient code into the RLS rule.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们必须避免在 RLS 规则中编写低效的代码。
- en: Combined Rules
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 组合规则
- en: 'Next, I want to combine two expressions:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我想组合两个表达式：
- en: Only Stores starting with “Contoso T”
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仅包括以“Contoso T”开头的商店
- en: Only Stores in Europe
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仅包括欧洲的商店
- en: 'To achieve this, I add a second expression to the Geography table using the
    simple editor:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这一点，我使用简单编辑器向地理表中添加第二个表达式：
- en: '![](../Images/ee5f3b20213a17ff15d8d921af619ff6.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ee5f3b20213a17ff15d8d921af619ff6.png)'
- en: Figure 14 — Add expression to the Geography table (Figure by the Author)
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14 — 向地理表添加表达式（作者提供的图）
- en: 'When I switch to the DAX Editor, I get the following expression:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 当我切换到 DAX 编辑器时，我得到以下表达式：
- en: '![](../Images/7b774701439a54427e065974cba69fb9.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7b774701439a54427e065974cba69fb9.png)'
- en: Figure 15 — DAX Expression from the Simple editor (Figure by the Author)
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15 — 来自简单编辑器的 DAX 表达式（作者提供的图）
- en: Notice the use of the [strict equal](https://dax.guide/op/strictly-equal-to/)
    operator.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 注意使用了[严格等于](https://dax.guide/op/strictly-equal-to/)运算符。
- en: Changing to the [simple equal](https://dax.guide/op/equal-to/) operator for
    your expression can be necessary.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 更改为[简单等于](https://dax.guide/op/equal-to/)运算符可能是必要的。
- en: 'This is the result when testing the rule:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 测试规则时的结果是：
- en: '![](../Images/657c2b2430c01229939fcdebbb26166c.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/657c2b2430c01229939fcdebbb26166c.png)'
- en: Figure 16 — Result of the combined rule (Figure by the Author)
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 图 16 — 组合规则的结果（作者提供的图）
- en: 'The DAX query for this rule will look like this:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 这个规则的 DAX 查询将如下所示：
- en: '![](../Images/5c0aba2bb0e6cafb17e1be6f7708c52a.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5c0aba2bb0e6cafb17e1be6f7708c52a.png)'
- en: Figure 17 — Translation to a DAX query and results (Figure by the Author)
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17 — 转换为 DAX 查询及结果（作者提供的图）
- en: 'Now, let’s add another level of complexity to the RLS rule:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们给 RLS 规则增加另一层复杂性：
- en: 'I want to restrict access to the Stores which either:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我想限制访问那些：
- en: The name of the Stores starts with “Contoso T” and are in Europe
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 商店的名称以“Contoso T”开头，并且位于欧洲
- en: or
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 或
- en: The name of the Stores starts with “Contoso S” and are in North America
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 商店的名称以“Contoso S”开头，并且位于北美
- en: This time, I begin with the DAX query. This is the simpler way to develop and
    test the expression.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，我从 DAX 查询开始。这是开发和测试表达式的更简单方法。
- en: I take the first query and enclose it with the filter expression.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我将第一个查询用过滤表达式括起来。
- en: 'As I need to filter two tables (Store and Geography), I must use [FILTER()](https://dax.guide/filter/)
    and [RELATED()](https://dax.guide/related/):'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我需要过滤两个表（Store 和 Geography），我必须使用 [FILTER()](https://dax.guide/filter/) 和
    [RELATED()](https://dax.guide/related/)：
- en: '[PRE4]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: I need the RELATED() function as I use FILTER() to iterate through the Store
    table, and I need the Continent column from the Geography table.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 我需要 RELATED() 函数，因为我使用 FILTER() 遍历 Store 表，并且需要 Geography 表中的 Continent 列。
- en: As the Geography table is on the one side of the Relationship, I can use RELATED()
    to get the Continent column.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Geography 表在关系的一侧，我可以使用 RELATED() 获取 Continent 列。
- en: 'This is the result:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 这是结果：
- en: '![](../Images/d343992b3d6aa9dd7c06b55bdaba0a21.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d343992b3d6aa9dd7c06b55bdaba0a21.png)'
- en: Figure 18 — Query for the combined Rule (Figure by the Author)
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图 18 — 组合规则的查询（作者绘图）
- en: Next, we must translate this filter to an RLS rule.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们必须将此过滤器转换为 RLS 规则。
- en: For the RLS rule, we can remove the FILTER() function, as the RLS rule inherently
    works as a filter.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 RLS 规则，我们可以移除 FILTER() 函数，因为 RLS 规则本身作为过滤器工作。
- en: '![](../Images/6a32f977f6c3861a233ee62c39eec8b7.png)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6a32f977f6c3861a233ee62c39eec8b7.png)'
- en: Figure 19 — Translation to one RLS Rule (Figure by the Author)
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 图 19 — 转换为一个 RLS 规则（作者绘图）
- en: Note that I removed the expression from the “Geography” table.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我从“Geography”表中移除了表达式。
- en: 'When I test this rule in Power BI, I get the following result, which corresponds
    to the result from the DAX query:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 当我在 Power BI 中测试此规则时，得到的结果与 DAX 查询的结果一致：
- en: '![](../Images/a972329adcfc75198dfe9c5450fb4cb3.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a972329adcfc75198dfe9c5450fb4cb3.png)'
- en: Figure 20 — Testing the combined RLS rule (Figure by the Author)
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 图 20 — 测试组合 RLS 规则（作者绘图）
- en: 'For testing the RLS rule, for example, when you want only to get the list of
    filtered stores, you can write a simple query with just the FILTER() function:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测试 RLS 规则，例如，当你只想获取过滤后的商店列表时，你可以写一个简单的查询，仅使用 FILTER() 函数：
- en: '![](../Images/b9116c7db484912d8de84661386ed1d9.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b9116c7db484912d8de84661386ed1d9.png)'
- en: Figure 21 — Executing the FILTER() only (Figure by the Author)
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图 21 — 仅执行 FILTER()（作者绘图）
- en: Configure access based on User login
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于用户登录配置访问
- en: Until now, we looked at static RLS rules.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 到现在为止，我们查看了静态 RLS 规则。
- en: But most of the time, we need rules based on the User-Login.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 但大多数情况下，我们需要基于用户登录的规则。
- en: To achieve this, we need a table that maps the user to the rows the user needs
    access to.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这一点，我们需要一个表来映射用户与用户需要访问的行。
- en: 'For example, a table like this:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，像这样的表：
- en: '![](../Images/843e919e0fc9a9021eed546cb641bccf.png)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/843e919e0fc9a9021eed546cb641bccf.png)'
- en: Figure 22 — User List with assigned Geographies (Figure by the Author)
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 图 22 — 分配地理位置的用户列表（作者绘图）
- en: 'After adding the table to the data model, we need to add a Relationship between
    the new table and the “Geography” table:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在将表添加到数据模型后，我们需要在新表和“Geography”表之间添加一个关系：
- en: '![](../Images/68e2d7c0f185d727fd91b5c466afaaec.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/68e2d7c0f185d727fd91b5c466afaaec.png)'
- en: Figure 23 — Expanded data model (Figure by the Author)
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 图 23 — 扩展的数据模型（作者绘图）
- en: The relationship between the new “Geography Access” table and the “Geography”
    table must be configured correctly.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 新的“Geography Access”表和“Geography”表之间的关系必须正确配置。
- en: After adding the Relationship, Power BI configures it as a 1:n Relationship,
    with the “Geography” table on the one side and the Filter flowing from the “Geography”
    table to “Geography Access”.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 添加关系后，Power BI 将其配置为 1:n 关系，其中“Geography”表在一侧，过滤器从“Geography”表流向“Geography Access”。
- en: But we want to filter the “Geography” table based on an RLS rule (a filter)
    on “Geography Access”.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 但我们希望根据“Geography Access”上的 RLS 规则（过滤器）来过滤“Geography”表。
- en: 'For this reason, we must change the cross-filter direction to both:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们必须将交叉过滤方向更改为双向：
- en: '![](../Images/4f31f62e171dac8ee50883679342d6ac.png)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4f31f62e171dac8ee50883679342d6ac.png)'
- en: Figure 24 — Settings of the Relationship (Figure by the Author)
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 图 24 — 关系设置（作者绘图）
- en: In addition, we **must** set the flag on “Apply security filter in both directions,”
    as Power BI ignores the cross-filter direction setting when applying RLS rules.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们**必须**设置“在两个方向上应用安全筛选器”标志，因为 Power BI 在应用 RLS 规则时会忽略交叉筛选方向设置。
- en: 'Now we can add the RLS rule:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以添加 RLS 规则：
- en: '![](../Images/222f67d842750fd12a9874e31f769422.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/222f67d842750fd12a9874e31f769422.png)'
- en: Figure 25 — Configure the RLS Rule (Figure by the Author)
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 图 25 — 配置 RLS 规则（作者提供的图）
- en: Remember to remove any filter expression on the Store table before adding this
    rule.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 记得在添加此规则之前，移除 Store 表上的任何筛选表达式。
- en: 'When testing the RLS rule, I get this:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 测试 RLS 规则时，我得到了这个结果：
- en: '![](../Images/f6cca559b74366808f4d4674f42ceaf1.png)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f6cca559b74366808f4d4674f42ceaf1.png)'
- en: Figure 26 — Empty result (Figure by the Author)
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 图 26 — 空结果（作者提供的图）
- en: 'To find out what happens, let’s go back to the RLS rule editor and change the
    view for the Rule to DAX:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 为了了解发生了什么，让我们回到 RLS 规则编辑器并将规则视图更改为 DAX：
- en: '![](../Images/cdadbb3855f0e9c399cea26fd80fd48d.png)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cdadbb3855f0e9c399cea26fd80fd48d.png)'
- en: Figure 27 — Wrong RLS rule (Figure by the Author)
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 图 27 — 错误的 RLS 规则（作者提供的图）
- en: The simple RLS rule editor doesn’t recognize DAX functions and adds them as
    Text to filter.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 简单的 RLS 规则编辑器无法识别 DAX 函数，并将其作为文本添加到筛选器中。
- en: 'We must change the expression to this:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须将表达式更改为如下：
- en: '![](../Images/035eb52a0943cc1aaef5458c1e50a469.png)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/035eb52a0943cc1aaef5458c1e50a469.png)'
- en: Figure 28 — Correct DAX rule (Figure by the Author)
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 图 28 — 正确的 DAX 规则（作者提供的图）
- en: 'Now the result is as expected:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 现在结果如预期：
- en: '![](../Images/2d2b99f4fb906c397110389c22590fbe.png)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2d2b99f4fb906c397110389c22590fbe.png)'
- en: Figure 29 — Testing the RLS rule with my user and the correct RLS expression
    (Figure by the Author)
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 图 29 — 使用我的用户和正确的 RLS 表达式测试 RLS 规则（作者提供的图）
- en: The Card on the top-left corner of the report page contains a Measure with the
    [USERPRINCIPALNAME()](https://dax.guide/userprincipalname/) function to ensure
    that the correct user is active during the test.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 报告页面左上角的卡片包含一个带有 [USERPRINCIPALNAME()](https://dax.guide/userprincipalname/)
    函数的度量，以确保在测试期间正确的用户处于活动状态。
- en: 'I can even test an RLS rule using another user:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 我甚至可以使用另一个用户测试 RLS 规则：
- en: '![](../Images/9125868ce54fa7a669eac6d0e66c0f27.png)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9125868ce54fa7a669eac6d0e66c0f27.png)'
- en: Figure 30 — Test the RLS rule with another user (Figure by the Author)
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 图 30 — 使用另一个用户测试 RLS 规则（作者提供的图）
- en: It’s funny that this user doesn’t need to exist. It only has to be contained
    in the “Geography Access” list.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，这个用户不需要实际存在。它只需要包含在“地理位置访问”列表中。
- en: 'Here is the result of the test:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 这是测试结果：
- en: '![](../Images/76fc10de36c840f3bb07834c0e06b051.png)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/76fc10de36c840f3bb07834c0e06b051.png)'
- en: Figure 31 — Test-Result with test user (Figure by the Author)
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 图 31 — 使用测试用户的测试结果（作者提供的图）
- en: In the yellow line on top, you can see the active user during the test.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 在顶部的黄色线中，你可以看到测试期间的活动用户。
- en: Conclusion
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: I showed you how to create elementary RLS rules and how to test them.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 我向你展示了如何创建基础 RLS 规则以及如何测试它们。
- en: Then I added more complexity and analyzed the effects of RLS rules on the underlying
    Storage engine.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我增加了更多的复杂性，并分析了 RLS 规则对底层存储引擎的影响。
- en: We have seen that the Formula Engine processes part of the RLS rule. Therefore,
    we must write efficient code in the RLS rules.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到公式引擎处理了部分 RLS 规则。因此，我们必须在 RLS 规则中编写高效的代码。
- en: Knowing how to test RLS rules before implementing them in the data model is
    very important.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 在将 RLS 规则实施到数据模型之前，了解如何测试它们非常重要。
- en: It is much easier to understand wrong results by understanding how the rule
    is applied to the data model.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 通过理解规则如何应用于数据模型，可以更容易地理解错误结果。
- en: Finally, I added dynamic user-based RLS rules to the model.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我向模型中添加了动态基于用户的 RLS 规则。
- en: These rules are more difficult to test in a DAX query, as you must know which
    data each user can access to write the correct test query to validate the result.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DAX 查询中测试这些规则更加困难，因为你必须知道每个用户可以访问哪些数据，以编写正确的测试查询来验证结果。
- en: I hope I have given you some hints on simplifying your life with the RLS feature
    in Power BI.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望我能给你一些关于简化使用 Power BI 中 RLS 功能的提示。
- en: '![](../Images/bb32cf8ffb6a8c17a86ed350b08abf8f.png)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bb32cf8ffb6a8c17a86ed350b08abf8f.png)'
- en: Photo by [Andrew George](https://unsplash.com/@andrewjoegeorge?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Andrew George](https://unsplash.com/@andrewjoegeorge?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: References
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: 'You can find a list of Security features in Power BI in this Article:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在这篇文章中找到 Power BI 中的安全功能列表：
- en: '[](/4-2-security-features-in-power-bi-4c5a21968e53?source=post_page-----9dc705945feb--------------------------------)
    [## 4 + 2 Security features in Power BI'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/4-2-security-features-in-power-bi-4c5a21968e53?source=post_page-----9dc705945feb--------------------------------)
    [## Power BI 中的 4 + 2 安全功能'
- en: One year after my first article on this topic, here is an update on new security
    features in Power BI
  id: totrans-204
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在我关于这个主题的第一篇文章发布一年后，这里是关于 Power BI 中新安全功能的更新
- en: towardsdatascience.com](/4-2-security-features-in-power-bi-4c5a21968e53?source=post_page-----9dc705945feb--------------------------------)
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/4-2-security-features-in-power-bi-4c5a21968e53?source=post_page-----9dc705945feb--------------------------------)'
- en: 'You can find a simple explanation about Row Level Security in Power BI on the
    Power BI (Now Fabric) Community page: [Row-level security (RLS) with Power BI
    — Power BI | Microsoft Learn](https://learn.microsoft.com/en-us/power-bi/enterprise/service-admin-rls).'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 Power BI（现在是 Fabric）社区页面找到关于 Power BI 中行级安全的简单解释：[Row-level security (RLS)
    with Power BI — Power BI | Microsoft Learn](https://learn.microsoft.com/en-us/power-bi/enterprise/service-admin-rls)。
- en: 'I can recommend this article by [Nikola Ilic](https://medium.com/u/64005b7daa38?source=post_page-----9dc705945feb--------------------------------),
    where you can get a starting point about RLS:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 我推荐这篇由 [Nikola Ilic](https://medium.com/u/64005b7daa38?source=post_page-----9dc705945feb--------------------------------)
    撰写的文章，在其中你可以找到关于 RLS 的起点：
- en: '[](/the-ultimate-guide-to-row-level-and-object-level-security-in-power-bi-3a98f5422bad?source=post_page-----9dc705945feb--------------------------------)
    [## The Ultimate Guide to Row-Level and Object-Level Security in Power BI'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/the-ultimate-guide-to-row-level-and-object-level-security-in-power-bi-3a98f5422bad?source=post_page-----9dc705945feb--------------------------------)
    [## Power BI 中行级和对象级安全的终极指南'
- en: “Who sees what in the report?” is one of the key security questions in Power
    BI. Learn two possible ways to implement…
  id: totrans-209
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: “谁在报告中看到了什么？” 是 Power BI 中的关键安全问题之一。学习两种可能的实现方法…
- en: towardsdatascience.com](/the-ultimate-guide-to-row-level-and-object-level-security-in-power-bi-3a98f5422bad?source=post_page-----9dc705945feb--------------------------------)
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/the-ultimate-guide-to-row-level-and-object-level-security-in-power-bi-3a98f5422bad?source=post_page-----9dc705945feb--------------------------------)'
- en: 'Another good introductory article on Row-Level-Security in Power BI by [Elias
    Nordlinder](https://medium.com/u/23dedceb9914?source=post_page-----9dc705945feb--------------------------------):'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个关于 Power BI 中行级安全的良好入门文章由 [Elias Nordlinder](https://medium.com/u/23dedceb9914?source=post_page-----9dc705945feb--------------------------------)
    撰写：
- en: '[](https://elias-nordlinder.medium.com/how-to-implement-row-level-security-in-power-bi-part-i-dc2da88d0b6e?source=post_page-----9dc705945feb--------------------------------)
    [## How to implement Row Level Security in Power BI (Part I)'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://elias-nordlinder.medium.com/how-to-implement-row-level-security-in-power-bi-part-i-dc2da88d0b6e?source=post_page-----9dc705945feb--------------------------------)
    [## 如何在 Power BI 中实施行级安全（第 I 部分）'
- en: Row-Level Security is a way to filter the data differently depending on different
    roles. This might be done statically…
  id: totrans-213
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 行级安全（Row-Level Security）是一种根据不同角色对数据进行不同筛选的方法。这可能是静态实现的…
- en: elias-nordlinder.medium.com](https://elias-nordlinder.medium.com/how-to-implement-row-level-security-in-power-bi-part-i-dc2da88d0b6e?source=post_page-----9dc705945feb--------------------------------)
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '[elias-nordlinder.medium.com](https://elias-nordlinder.medium.com/how-to-implement-row-level-security-in-power-bi-part-i-dc2da88d0b6e?source=post_page-----9dc705945feb--------------------------------)'
- en: Visit my Stories List for more information [about the FILTER() function](https://medium.com/towards-data-science/how-to-use-filter-in-dax-the-correct-way-eb621b49527a)
    and how to [analyze DAX Query with DAX Studio](https://medium.com/towards-data-science/how-to-get-performance-data-from-power-bi-with-dax-studio-b7f11b9dd9f9).
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 访问我的故事列表以获取更多信息 [关于 FILTER() 函数](https://medium.com/towards-data-science/how-to-use-filter-in-dax-the-correct-way-eb621b49527a)
    以及如何 [用 DAX Studio 分析 DAX 查询](https://medium.com/towards-data-science/how-to-get-performance-data-from-power-bi-with-dax-studio-b7f11b9dd9f9)。
- en: I use the Contoso sample dataset, like in my previous articles. You can download
    the ContosoRetailDW Dataset for free from Microsoft [here](https://www.microsoft.com/en-us/download/details.aspx?id=18279).
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用了 Contoso 示例数据集，像我之前的文章中一样。你可以从微软 [这里](https://www.microsoft.com/en-us/download/details.aspx?id=18279)
    免费下载 ContosoRetailDW 数据集。
- en: The Contoso Data can be freely used under the MIT License, as described [here](https://github.com/microsoft/Power-BI-Embedded-Contoso-Sales-Demo).
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: Contoso 数据可以根据 MIT 许可证自由使用，详细信息请见 [这里](https://github.com/microsoft/Power-BI-Embedded-Contoso-Sales-Demo)。
- en: '[](https://medium.com/@salvatorecagliari/subscribe?source=post_page-----9dc705945feb--------------------------------)
    [## Get an email whenever Salvatore Cagliari publishes.'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@salvatorecagliari/subscribe?source=post_page-----9dc705945feb--------------------------------)
    [## 订阅以便每次 Salvatore Cagliari 发布新文章时收到电子邮件。'
- en: Get an email whenever Salvatore Cagliari publishes. By signing up, you will
    create a Medium account if you don't…
  id: totrans-219
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 每当**Salvatore Cagliari**发布内容时，你将收到一封电子邮件。通过注册，你将创建一个Medium账户，如果你还没有的话…
- en: medium.com](https://medium.com/@salvatorecagliari/subscribe?source=post_page-----9dc705945feb--------------------------------)
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '[medium.com](https://medium.com/@salvatorecagliari/subscribe?source=post_page-----9dc705945feb--------------------------------)'
