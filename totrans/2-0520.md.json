["```py\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score, roc_auc_score\n\n# Generate synthetic data\nnp.random.seed(42)\nthresh = 0.92\nX = np.random.uniform(0, 1, 100).reshape(-1, 1)\ny = (X > thresh).astype(int).ravel()\n\nmodel = LogisticRegression()\nmodel.fit(X, y)\n\ny_pred = model.predict(X)\ny_prob = model.predict_proba(X)[:, 1]\n\n#Calulcate performance metrics\naccuracy = accuracy_score(y, y_pred)\nprecision, recall, _ = precision_recall_curve(y, y_prob)\naverage_precision = average_precision_score(y, y_prob)\nf1 = f1_score(y, y_pred)\n```", "```py\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.svm import SVC\nfrom sklearn.datasets import make_classification\nfrom sklearn.metrics import accuracy_score\n\n# Generate a synthetic dataset\nsamples = 20000\nX, y = make_classification(n_samples=samples, n_features=10, n_informative=5, n_clusters_per_class=5, random_state=42)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\nindices = np.arange(X_train.shape[0])\nnp.random.shuffle(indices) \n```", "```py\ncount_small = 9000\nX_train_small = X_train[:count_small]\ny_train_small = y_train[:count_small]\nstart_time = time.time()\n\nmodel_small = SVC(probability =True)\nmodel_small.fit(X_train_small, y_train_small)  # Using only a small subset for training\n\ny_pred_small = model_small.predict(X_test)\naccuracy_small = accuracy_score(y_test, y_pred_small) \n```", "```py\nmodel_large = SVC(probability =True)\nmodel_large.fit(X_train, y_train)\n\ny_pred_large = model_large.predict(X_test)\naccuracy_large = accuracy_score(y_test, y_pred_large)\n```", "```py\ndef is_even_simple(num):\n    return num % 2 == 0\n```", "```py\ndef is_even_complex(num):\n    if num < 0:\n        return False\n    elif num == 0:\n        return True\n    else:\n        while num >= 2:\n            num -= 2\n        if num == 0:\n            return True\n        else:\n            return False\n```"]