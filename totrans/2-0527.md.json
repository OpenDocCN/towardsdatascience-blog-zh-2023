["```py\n{{ \n  config(\n    materialized=\"table\"\n) }}\n\nSELECT *\nFROM UNNEST([1, 2, 3, 4]) AS a\n```", "```py\n{{ \n  config(\n    materialized=\"table\"\n) }}\n\nSELECT *\nFROM UNNEST([45, 23, 1, 111]) AS a\n```", "```py\n{{ \n  config(\n    materialized=\"table\"\n) }}\n\nSELECT *\nFROM UNNEST([88, 55, 34, 342]) AS a\n```", "```py\n version: 2\n\nmodels:\n    - name: table_1\n    - name: table_2\n    - name: table_3\n    - name: union_table\n```", "```py\n {{ \n  config(\n    materialized=\"table\"\n) }}\n\nSELECT *\nFROM `dbt-test`.`dbt_test`.`table_1`\nUNION ALL\nSELECT *\nFROM `dbt-test`.`dbt_test`.`table_2`\nUNION ALL\nSELECT *\nFROM `dbt-test`.`dbt_test`.`table_3`\n```", "```py\n{{ \n  config(\n    materialized=\"table\"\n) }}\n\n{% set tables = [\"table_1\", \"table_2\", \"table_3\"] %}\n\n{% for table in tables %}\n\n  SELECT *\n  FROM {{ ref(table) }}\n\n  {% if not loop.last %}\n    UNION ALL\n  {% endif %}\n{% endfor %}\n```", "```py\nSELECT *\nFROM `dbt-test`.`dbt_test`.`table_1`\n\nUNION ALL\n\nSELECT *\nFROM `dbt-test`.`dbt_test`.`table_2`\n\nUNION ALL\n\nSELECT *\nFROM `dbt-test`.`dbt_test`.`table_3`\n```", "```py\n{{ config(materialized=\"table\") }}\n-- depends_on: {{ ref('table_1') }}\n-- depends_on: {{ ref('table_2') }}\n-- depends_on: {{ ref('table_3') }}\n\n{% call statement('tables_for_union', fetch_result=True) %}\n    SELECT table_name \n    FROM `dbt-test.dbt_test.INFORMATION_SCHEMA.TABLES`\n    WHERE table_name LIKE 'table_%'\n{% endcall %}\n\n{% set tables = load_result('tables_for_union')['data'] %}\n\n{% for table in tables %}\n\nSELECT *\nFROM {{ ref(table[0]) }}\n\n  {% if not loop.last %}\n    UNION ALL\n  {% endif %}\n{% endfor %}\n```", "```py\n[(\"table_1\",), (\"table_2\",), (\"table_3\",)]\n```", "```py\n-- depends_on: `dbt-test`.`dbt_test`.`table_1`\n-- depends_on: `dbt-test`.`dbt_test`.`table_2`\n-- depends_on: `dbt-test`.`dbt_test`.`table_3`\n\nSELECT *\nFROM `dbt-test`.`dbt_test`.`table_2`\n\nUNION ALL\n\nSELECT *\nFROM `dbt-test`.`dbt_test`.`table_3`\n\nUNION ALL\n\nSELECT *\nFROM `dbt-test`.`dbt_test`.`table_1`\n```", "```py\n{{ config(\n    materialized=\"table\",\n    post_hook=\"insert into `dbt-test.dbt_test.hook_table` select * from {{ this }}\"\n) }} \n\nSELECT * FROM UNNEST([1, 2, 3, 4]) AS a\n```"]