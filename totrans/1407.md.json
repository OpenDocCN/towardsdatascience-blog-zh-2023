["```py\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression\n```", "```py\nimport sklearn\nlr = sklearn.linear_model.LinearRegression()\n```", "```py\nfrom sklearn.linear_model import LinearRegression\nlr = LinearRegression()\n```", "```py\ndf = pd.read_csv('data.csv')\n```", "```py\nX = df[['x1','x2']].values\ny = df['y'].values\nmodel = LinearRegression()\n```", "```py\nmodel.fit(X,y)\n```", "```py\nprint('Coefficient A:',model.coef_[0])\nprint('Coefficient B:',model.coef_[1])\nprint('Coefficient C:',model.intercept_)\n```", "```py\nmodel = LinearRegression(positive = True)\n```", "```py\nx1_predict = 0.65\nx2_predict = x1_predict ** 2 # Careful to not use the ^ symbol to square values!\nX_predict = [[x1_predict, x2_predict]]\ny_predict = model.predict(X_predict)\n```", "```py\nplt.plot(df['x1'], df['y'], '.', label = 'raw data')\nplt.plot(df['x1'], yp, label = 'model prediction')\nplt.xlabel('x1', size = 14)\nplt.ylabel('y', size = 14)\nplt.legend(fontsize = 12, loc = 'lower right')\nplt.show()\n```"]