["```py\n# File location and type\nfile_location = \"/FileStore/tables/telco_churn-1.csv\"\nfile_type = \"csv\"\n\n# CSV options\ninfer_schema = \"false\"\nfirst_row_is_header = \"false\"\ndelimiter = \",\"\n\n# The applied options are for CSV files. For other file types, these will be ignored.\ndf = spark.read.format(file_type) \\\n  .option(\"inferSchema\", infer_schema) \\\n  .option(\"header\", first_row_is_header) \\\n  .option(\"sep\", delimiter) \\\n  .load(file_location)\n\ndisplay(df)\n```", "```py\nfirst_row_is_header = \"true\"\n```", "```py\ndf_pandas = df.toPandas()\n```", "```py\nimport numpy as np \ndf_pandas['churn_label'] = np.where(df_pandas['Churn']== 'No', 0, 1)\nX = df_pandas[[\"tenure\", \"MonthlyCharges\", \"Contract\"]]\ny = df_pandas['churn_label']\n```", "```py\ncats = [\"Contract\"]\n```", "```py\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n```", "```py\nmodel = CatBoostClassifier(cat_features= cats, random_state=42)\nmodel.fit(X_train, y_train)\ny_pred = model.predict(X_test)\n```", "```py\nfrom sklearn.metrics import accuracy_score, precision_score\naccuracy = accuracy_score(y_pred, y_test)\nprecision = precision_score(y_pred, y_test)\n\nprint(\"Accuracy: \", accuracy )\nprint(\"Precision: \", precision )\n```", "```py\n%pip install -U databricks\n```", "```py\nfrom databricks import koalas as ks\n```", "```py\ndf_koalas = ks.DataFrame(df)\ndf_koalas.head()\n```", "```py\nfrom pyspark.sql.functions import pandas_udf, PandasUDFType\n\nchurn_schema = StructType(\n    [\n        StructField(\"tenure\", FloatType()),\n        StructField(\"Contract\", StringType()),\n        StructField(\"InternetService\", StringType()),\n        StructField(\"MonthlyCharges\", FloatType()),\n        StructField(\"Churn\", FloatType()),\n        StructField(\"Predictions\", FloatType()),\n\n    ]\n)\n```", "```py\n@pandas_udf(churn_schema, PandasUDFType.GROUPED_MAP)\ndef build_model(df: pd.DataFrame) -> pd.DataFrame:\n```", "```py\n@pandas_udf(churn_schema, PandasUDFType.GROUPED_MAP)\ndef build_model(df: pd.DataFrame) -> pd.DataFrame:\n    df['churn_label'] = np.where(df['Churn']== 'No', 0, 1)\n    X = df[[\"tenure\", \"MonthlyCharges\", \"Contract\"]]\n    y = df['churn_label']\n    cats = [\"Contract\"]\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n    model = CatBoostClassifier(cat_features= cats, random_state=42)\n    model.fit(X_train, y_train)\n    y_pred = model.predict(X_test)\n    output = X_test\n    output['Prediction'] = y_pred\n    output['Churn'] = y_test\n    output['InternetService'] = df['InternetService']\n    output['churn_label'] = df['churn_label']\n    return output\n```", "```py\n df_spark = df_koalas.to_spark()\nchurn_results = (\ndf_spark.groupBy('InternetService').apply(build_model))\n```", "```py\nchurn_results = churn_results.toPandas()\nchurn_results.head()\n```", "```py\n%pip install -U mlflow\n```", "```py\nimport mlflow\n```", "```py\nmlflow.set_experiment(\n      f\"/Users/spierre91@gmail.com/churn_model\"\n  )\n```", "```py\nfeature_importance = pd.DataFrame(\n      {\"variable\": model.feature_names_, \"importance\": model.feature_importances_}\n  )\nfeature_importance.to_csv(\"/feature_importance.csv\")\n```", "```py\nwith mlflow.start_run(run_name=f\"churn_model\"):\n    mlflow.sklearn.log_model(model, \"Catboost Model\")\n```", "```py\nwith mlflow.start_run(run_name=f\"churn_model\"):\n    mlflow.sklearn.log_model(model, \"Catboost Model\")\n    mlflow.log_artifact(\"/feature_importance.csv\")\n    mlflow.log_metric(\"Precison\", precision)    \n    mlflow.log_metric(\"Accuracy\", accuracy)       \n    mlflow.log_param(\"Categories\", cats)\n```"]