["```py\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as pd\n\nsns.set(style='whitegrid')\n\n# Load the data and set NaN values to zero:\ndf = pd.read_csv('https://bit.ly/3E8Q1BO').fillna(0)\ndf.head(3)\n```", "```py\n# Melt the DataFrame to a long format for plotting by artist name:\nmelted_df = pd.melt(df, var_name='Name', value_name='Age')\n\n# Make a column for the plotting color:\nmelted_df['Color'] = 'red'\n\n# Filter out zero values:\nmelted_df = melted_df[melted_df['Age'] != 0]\n\nmelted_df.tail(3)\n```", "```py\n# Calculate the order of the bars by counts:\norder = melted_df['Name'].value_counts().index\n\n# Plot a bar chart of the number of hits by each artist:\nax = sns.countplot(data=melted_df, \n                   x='Name', \n                   color='red', \n                   order=order)\nax.set_xticklabels(ax.get_xticklabels(), \n                   rotation=55, \n                   fontsize=10, \n                   ha='right')\nax.set_title('Number of Billboard Hot 100 Hits');\n```", "```py\n# Replace 0 values with NaN in order to find minimum age statistic:\ndf = df.replace(0, np.NaN)\n\n# Calculate maximum age for each column\nmax_age = df.max()\n\n# Calculate age span (maximum age - minimum age) for each column\nage_span =df.max() - df.min()\n\n# Create subplots for two bar charts\nfig, axes = plt.subplots(nrows=1, ncols=2, \n                         figsize=(8, 6))\n\n# Plot artist's age at time of last hit:\nsns.barplot(x=max_age.values, \n            y=max_age.index, \n            ax=axes[0], \n            color='red', \n            orient='h')\naxes[0].set_title('Artist Age at Time of Last Hit')\naxes[0].set_xlabel('Age at Last Hit')\naxes[0].set_ylabel('Artist')\n\n# Plot age span between hits:\nsns.barplot(x=age_span.values, \n            y=age_span.index, \n            ax=axes[1], \n            color='red', \n            orient='h')\naxes[1].set_title(\"Years Between Artist's First & Last Hits\")\naxes[1].set_xlabel('Years Between First & Last Hit')\naxes[1].set_ylabel('')\n\nplt.tight_layout();\n```", "```py\n# Calculate the statistics:\nmean_age = round(melted_df.mean(numeric_only=True).mean(), 1)\nmedian_age = round(melted_df.median(numeric_only=True).median(), 1)\nmode_age = round(melted_df.mode(numeric_only=True).mode(), 1)\n\nprint(f\"Mean age = {mean_age}\")\nprint(f\"Median age = {median_age}\")\nprint(f\"Mode age = {mode_age}\")\n```", "```py\n# Create a KDE plot for complete dataset:\nax = sns.kdeplot(data=melted_df, \n                 x='Age', \n                 hue='Color', \n                 fill=True, \n                 palette='dark:red_r', \n                 legend=False)\n\n# Set x-axis tick positions:\nax.set_xticks(range(0, 85, 5))  \n\nax.set_title('KDE Plot of Billboard Hot 100 Hits by Age For All Artists',\n             fontsize=14);\n```", "```py\n# Plot a Facet Grid of each artist's hits vs. age as a KDE chart:\ng = sns.FacetGrid(data=melted_df, \n                  col='Name', \n                  hue='Color', \n                  aspect=3, \n                  height=1.00, \n                  col_wrap=2, \n                  palette='dark:red_r')\n\ng.map(sns.kdeplot, 'Age',\n      fill=True, \n      alpha=0.7, \n      lw=2, \n      bw_adjust=0.4)\n\ng.set_axis_labels('Age', 'Density')\ng.set_titles(col_template='{col_name}')\ng.tight_layout()\n\n# Loop through each subplot to set custom x-axis tick labels:\nfor ax in g.axes.flat:\n    ax.set_xticks(range(0, 80, 10))\n    ax.set_xticklabels(range(0, 80, 10))\n\n# Add a title to the FacetGrid\ng.fig.suptitle('Billboard Hot 100 Hits vs. Age', \n               y=1.03,\n               fontsize=16);\n```", "```py\n# Create a stacked KDE plot:\nfig, ax = plt.subplots(figsize=(10, 6))\nax = sns.kdeplot(data=melted_df, \n                 x='Age', \n                 hue='Name', \n                 fill=True, \n                 palette='dark:red_r', \n                 common_norm=True)\nax.set_xticks(range(0, 85, 5))\nax.set_title('Stacked KDE Plot by Artist')\nax.set_xlabel('Age')\nax.set_ylabel('Density');\n```", "```py\n# Plot the distribution of hits vs age:\nsns.displot(data=melted_df,\n            x='Age', hue='Name',\n            kind='kde', height=6,\n            multiple='fill', clip=(0, None),\n            palette='dark:red_r', \n            common_norm=True, rug=True);\n```"]