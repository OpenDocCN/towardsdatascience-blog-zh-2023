["```py\n steps:\n\n  - name: gcr.io/cloud-builders/gcloud\n    entrypoint: /bin/bash\n    id: 'Save snapshot'\n    args:\n      - -c\n      - |\n        set -e\n        # This is an example project_id and env_name. Use your own\n        project_id=reduce-composer-bill\n        env_name=my-basic-environment\n        snap_folder=$(gsutil ls gs://${project_id}-europe-west1-backup/snapshots) || snap_folder=empty\n        gcloud composer environments snapshots save ${env_name} \\\n          --location europe-west1 --project ${project_id} \\\n          --snapshot-location gs://${project_id}-europe-west1-backup/snapshots\n        if [[ $snap_folder != empty ]]\n        then\n          gsutil -m rm -r $snap_folder\n        fi\n\n  - name: gcr.io/cloud-builders/gcloud\n    entrypoint: /bin/bash\n    id: 'Save Tasks Logs'\n    args:\n      - -c\n      - |\n        set -e\n        # This is an example project_id and env_name. Use your own\n        project_id=reduce-composer-bill\n        env_name=my-basic-environment\n        dags_folder=$(gcloud composer environments describe ${env_name} --project ${project_id} \\\n              --location europe-west1 --format=\"get(config.dagGcsPrefix)\")\n        logs_folder=$(echo $dags_folder | cut -d / -f-3)/logs\n        gsutil -m cp -r ${logs_folder}/* gs://${project_id}-europe-west1-backup/tasks-logs/\n\n  - name: gcr.io/cloud-builders/gcloud\n    entrypoint: /bin/bash\n    id: 'Delete Composer Environment'\n    args:\n      - -c\n      - |\n        set -e\n        # This is an example project_id and env_name. Use your own\n        project_id=reduce-composer-bill\n        env_name=my-basic-environment\n        dags_folder=$(gcloud composer environments describe ${env_name} --project ${project_id} \\\n              --location europe-west1 --format=\"get(config.dagGcsPrefix)\")\n        gcloud composer environments delete --project ${project_id} --quiet \\\n          ${env_name} --location europe-west1\n        dags_bucket=$(echo $dags_folder | cut -d / -f-3)\n        gsutil -m rm -r $dags_bucket\n```", "```py\ngcloud builds triggers create manual --name trg-environment-destroyer \\\n  --build-config destroy_environment.yaml --repo reduce_composer_bill \\\n  --branch main --repo-type CLOUD_SOURCE_REPOSITORIES\n```", "```py\nsteps:\n\n  - name: gcr.io/cloud-builders/gcloud\n    entrypoint: /bin/bash\n    id: 'Add environment variables'\n    args:\n      - -c\n      - |\n        set -e\n        # This is an example project_id and env_name. Use your own\n        project_id=reduce-composer-bill\n        env_name=my-basic-environment\n        gcloud composer environments update ${env_name} --location europe-west1 \\\n          --project ${project_id} --update-env-variables ENV=dev\n```", "```py\ngcloud builds triggers create manual --name trg-environment-updater \\\n  --build-config update_environment.yaml --repo reduce_composer_bill \\\n  --branch main --repo-type CLOUD_SOURCE_REPOSITORIES\n```", "```py\ngcloud services enable cloudscheduler.googleapis.com\n```"]