- en: 'Constructing Hexagon Maps with H3 and Plotly: A Comprehensive Tutorial'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 H3 和 Plotly 构建六边形地图：全面教程
- en: 原文：[https://towardsdatascience.com/constructing-hexagon-maps-with-h3-and-plotly-a-comprehensive-tutorial-8f37a91573bb](https://towardsdatascience.com/constructing-hexagon-maps-with-h3-and-plotly-a-comprehensive-tutorial-8f37a91573bb)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/constructing-hexagon-maps-with-h3-and-plotly-a-comprehensive-tutorial-8f37a91573bb](https://towardsdatascience.com/constructing-hexagon-maps-with-h3-and-plotly-a-comprehensive-tutorial-8f37a91573bb)
- en: Unlocking the Potential of Hexagon Maps for Data Analysis
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发掘六边形地图在数据分析中的潜力
- en: '[](https://amandaiglesiasmoreno.medium.com/?source=post_page-----8f37a91573bb--------------------------------)[![Amanda
    Iglesias Moreno](../Images/7a2662fb88127b1a7203c27916e15a71.png)](https://amandaiglesiasmoreno.medium.com/?source=post_page-----8f37a91573bb--------------------------------)[](https://towardsdatascience.com/?source=post_page-----8f37a91573bb--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----8f37a91573bb--------------------------------)
    [Amanda Iglesias Moreno](https://amandaiglesiasmoreno.medium.com/?source=post_page-----8f37a91573bb--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://amandaiglesiasmoreno.medium.com/?source=post_page-----8f37a91573bb--------------------------------)[![Amanda
    Iglesias Moreno](../Images/7a2662fb88127b1a7203c27916e15a71.png)](https://amandaiglesiasmoreno.medium.com/?source=post_page-----8f37a91573bb--------------------------------)[](https://towardsdatascience.com/?source=post_page-----8f37a91573bb--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----8f37a91573bb--------------------------------)
    [Amanda Iglesias Moreno](https://amandaiglesiasmoreno.medium.com/?source=post_page-----8f37a91573bb--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----8f37a91573bb--------------------------------)
    ·7 min read·Oct 31, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----8f37a91573bb--------------------------------)
    ·阅读时间 7 分钟·2023年10月31日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/58bb2917e3305811b11d631a267130ed.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/58bb2917e3305811b11d631a267130ed.png)'
- en: '[Sam Balye](https://unsplash.com/es/@sambalye) in Unsplash'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[Sam Balye](https://unsplash.com/es/@sambalye) 在 Unsplash'
- en: Typically, when we want to visualize a variable across a territory using choropleth
    maps, we use administrative geometries that are commonly known. For instance,
    if we wanted to see unemployment rates across Europe, we could visualize them
    by the respective states within each country.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，当我们希望使用分级图地图可视化某个区域的变量时，我们会使用常见的行政几何形状。例如，如果我们想查看欧洲的失业率，我们可以通过各国的州来进行可视化。
- en: However, administrative regions are often irregular and vary in size compared
    to one another. For this reason, **a useful alternative for visualizing any variable
    across a territory is to use hexagons to divide it**. The advantages include having
    balanced geometry for better regional comparisons and improved territorial coverage.
    Additionally, hexagonal maps offer the benefit of minimizing visual bias, as they
    provide equal representation of areas, unlike traditional administrative boundaries,
    which can sometimes distort the perception of data due to their irregular shapes
    and sizes.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，行政区域往往不规则，并且彼此之间的大小也有所不同。因此，**将区域划分为六边形是一种可视化任何变量的有用替代方法**。这种方法的优点包括具有平衡的几何形状，以便更好地进行区域比较和改进的区域覆盖。此外，六边形地图还能减少视觉偏差，因为它们提供了区域的均等表示，不像传统的行政边界，后者由于其不规则的形状和大小，有时会扭曲数据的感知。
- en: 'In this article, **we will provide a step-by-step explanation of how to create
    hexagonal maps in Python**. To accomplish this, we will make use of two libraries
    that streamline the map-building process: H3 and Plotly.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，**我们将提供如何在 Python 中创建六边形地图的逐步解释**。为此，我们将使用两个简化地图构建过程的库：H3 和 Plotly。
- en: 'Analysis Data: Barcelona City Hotel Dataset'
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析数据：巴塞罗那市酒店数据集
- en: The dataset used in this article is available on the open data portal of the
    city of Barcelona. This open data portal hosts demographic, economic, and sociological
    data about the city of Barcelona, all of which are freely accessible. **The dataset
    we are utilizing contains information on all the hotels in Barcelona, including
    their locations**. You can download the file from the following link.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本文使用的数据集可在巴塞罗那市的开放数据门户中获取。该开放数据门户提供有关巴塞罗那市的人口、经济和社会数据，所有这些数据都可以免费访问。**我们使用的数据集包含了巴塞罗那所有酒店的信息，包括它们的位置**。您可以从以下链接下载文件。
- en: '[## Hotels in the city of Barcelona - Open Data Barcelona'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 巴塞罗那市的酒店 - 开放数据巴塞罗那'
- en: List and location of hotels in the city of Barcelona
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 巴塞罗那市酒店列表和位置
- en: opendata-ajuntament.barcelona.cat](https://opendata-ajuntament.barcelona.cat/data/en/dataset/allotjaments-hotels?source=post_page-----8f37a91573bb--------------------------------)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[opendata-ajuntament.barcelona.cat](https://opendata-ajuntament.barcelona.cat/data/en/dataset/allotjaments-hotels?source=post_page-----8f37a91573bb--------------------------------)'
- en: The number of hotels will be the variable we visualize on the hexagonal map.
    The following sections of the article will explain step by step how to create
    this visualization.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 酒店的数量将是我们在六边形地图上可视化的变量。文章的以下部分将逐步解释如何创建这种可视化。
- en: Data Reading and Cleaning
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据读取和清理
- en: The first step in our analysis, after downloading the file, is to proceed with
    data reading and cleaning. In this case, the dataset contains many columns that
    are not relevant to our analysis, and we won’t be examining them. We will specifically
    select the hotel’s name, its geographical location (latitude and longitude), and
    perhaps an attribute related to its location (though we won’t use them in this
    particular case). Once we have selected these columns, we will rename them with
    simpler names, and then our dataset will be ready for visualization.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 下载文件后的第一步是进行数据读取和清理。在这种情况下，数据集包含了许多与我们的分析无关的列，我们不会对其进行检查。我们将特别选择酒店名称、地理位置（纬度和经度），以及可能与位置相关的属性（尽管在这个特定情况下我们不会使用它们）。一旦选择了这些列，我们将使用更简单的名称重命名它们，然后我们的数据集就可以进行可视化了。
- en: '![](../Images/92e462821a8837a8432291e21edc7619.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/92e462821a8837a8432291e21edc7619.png)'
- en: Hotel Data Set (Image created by the author)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 酒店数据集（图像由作者创建）
- en: Hexagon Grid Generation Using H3
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用H3生成六边形网格
- en: In order to visualize the data using a hexagonal map, **our first step is to
    create the grid**. To accomplish this, we will utilize the **H3 library**, developed
    by Uber. The `get_hexagon_grid`function is responsible for creating the hexagonal
    grid in the form of a `GeoDataFrame`. It starts by creating a hexagon at a specific
    location (`latitude` and `longitude`), in this case, the center of Barcelona.
    The size of this hexagon is defined by the `resolution` parameter. Subsequently,
    additional hexagons of the same size are generated concentrically around the central
    hexagon. The number of concentric rings to create is determined by the `ring_size`
    parameter. Finally, this collection of hexagons is converted into a `GeoDataFrame`,
    where each hexagon is assigned a unique ID corresponding to the ID provided by
    the H3 library.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用六边形地图可视化数据，**我们的第一步是创建网格**。为此，我们将使用**H3库**，这是由Uber开发的。`get_hexagon_grid`函数负责以`GeoDataFrame`的形式创建六边形网格。它从在特定位置（`latitude`和`longitude`），在本例中为巴塞罗那的中心，创建一个六边形开始。这个六边形的大小由`resolution`参数定义。随后，在中央六边形周围同样大小的六边形会同心生成。生成同心环的数量由`ring_size`参数决定。最后，这些六边形的集合被转换为`GeoDataFrame`，其中每个六边形都被分配了一个唯一的ID，
    correspond to H3库提供的ID。
- en: While we won’t delve into the specifics of each function used to construct the
    hexagonal grid in this article, interested readers can refer to the library’s
    documentation for a detailed understanding of how we have applied it.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然本文不会详细探讨用于构建六边形网格的每个函数，但感兴趣的读者可以参考库的文档，以详细了解我们是如何应用它的。
- en: '[## H3 | H3'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[## H3 | H3'
- en: Hexagonal hierarchical geospatial indexing system
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 六边形层次地理空间索引系统
- en: h3geo.org](https://h3geo.org/?source=post_page-----8f37a91573bb--------------------------------)
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[h3geo.org](https://h3geo.org/?source=post_page-----8f37a91573bb--------------------------------)'
- en: The following graph illustrates how the parameters `resolution` and `ring_size`
    influence the created grid. `Resolution` controls the size of the hexagons, meaning
    that higher resolutions result in smaller hexagons. On the other hand, the `ring_size`
    parameter governs the number of concentric rings of hexagons created around the
    central hexagon. In other words, a larger `ring_size` leads to a greater number
    of concentric rings. In the graph below, all the plots have the same axis limits.
    As you can observe, to cover the same area, using a higher resolution requires
    more rings because, as previously mentioned, all the hexagons created are of the
    same size as the central hexagon.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表展示了`resolution`和`ring_size`参数如何影响生成的网格。`Resolution`控制六边形的大小，这意味着分辨率越高，六边形越小。另一方面，`ring_size`参数决定了围绕中央六边形创建的同心环的数量。换句话说，较大的`ring_size`会导致更多的同心环。在下面的图表中，所有图形具有相同的坐标轴限制。正如你所观察到的，要覆盖相同的区域，使用更高的分辨率需要更多的环，因为如前所述，所有创建的六边形与中央六边形的大小相同。
- en: '![](../Images/498dfb870947afc6da2b68fb63632c06.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/498dfb870947afc6da2b68fb63632c06.png)'
- en: Hexagon Grids at Various Resolutions and Ring Sizes
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 各种分辨率和环大小的六边形网格
- en: The chosen `resolution` will depend on the variations of the variable we want
    to represent across a specific area. If there is significant variation, a higher
    `resolution` will be considered. In this particular case, a resolution of `9`
    has been selected. Furthermore, the `ring_size` will depend on the region we aim
    to cover and the `resolution` previously chosen. In this specific case, a `ring_size`
    of `45` is sufficient to cover the entire area of the city of Barcelona. We won’t
    delve into the details of how we arrived at this conclusion. In general terms,
    we obtained the bounding box of the Barcelona city polygon and determined the
    number of rings needed to cover that area.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 选择的`resolution`将取决于我们希望在特定区域表示的变量的变化。如果存在显著变化，将考虑使用更高的`resolution`。在这种情况下，选择了`9`作为分辨率。此外，`ring_size`将取决于我们希望覆盖的区域和之前选择的`resolution`。在这个特定案例中，`ring_size`为`45`，足以覆盖整个巴塞罗那市的区域。我们不会深入探讨如何得出这一结论。一般而言，我们获得了巴塞罗那市多边形的边界框，并确定了覆盖该区域所需的环数。
- en: Below, you’ll find the creation of the hexagon network in the form of a `GeoDataFrame`,
    using the previously described parameters and the `get_hexagon_grid` function.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是使用之前描述的参数和`get_hexagon_grid`函数创建六边形网络的`GeoDataFrame`。
- en: '![](../Images/4d65e53d4ca04169cbdc311d0867f6e7.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4d65e53d4ca04169cbdc311d0867f6e7.png)'
- en: 'As you can see above, the `get_hexagon_grid` function provides a `GeoDataFrame`
    with two columns: the first column serves as a unique ID assigned to each polygon
    by the H3 library, while the second column contains the actual polygon and is
    named `geometry`.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 正如上面所见，`get_hexagon_grid`函数提供了一个`GeoDataFrame`，其中第一列是H3库分配给每个多边形的唯一ID，第二列包含实际的多边形，并命名为`geometry`。
- en: Assignment of Each Hotel to Its Respective Hexagon
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 每个酒店分配到其相应的六边形
- en: After creating the hexagonal grid, it is necessary to assign each hotel to the
    hexagon it belongs to. The `calculate_hexagon_ids` function computes the hexagon
    to which each hotel belongs and creates a new column called `Hexagon_ID` to store
    this information.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 创建六边形网格后，需要将每个酒店分配到其所属的六边形。`calculate_hexagon_ids`函数计算每个酒店所属的六边形，并创建一个名为`Hexagon_ID`的新列来存储这些信息。
- en: '![](../Images/61be20adaf22ead6c87b4702388adb7b.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/61be20adaf22ead6c87b4702388adb7b.png)'
- en: Hotel Data Set with ‘Hexagon_ID’ Column
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 包含‘Hexagon_ID’列的酒店数据集
- en: Now, **the dataset of all hotels also includes information about the hexagon
    in which each hotel is situated**. This information is found in the `Hexagon_ID`
    column as an alphanumeric identifier.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，**所有酒店的数据集还包括了每个酒店所在六边形的信息**。这些信息可以在`Hexagon_ID`列中找到，这是一个字母数字标识符。
- en: Data Grouping Based on the Variables to Be Visualized
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于要可视化的变量的数据分组
- en: Once the ID of the hexagon is assigned, we proceed to calculate the data we
    wish to visualize. In this particular case, we aim to display the number of hotels
    in each hexagon. To achieve this, we perform a grouping by `Hexagon_ID` and a
    `count` operation. Additionally, we want to implement a hover-over feature that
    allows us to view the names of the hotels located in each hexagon. To achieve
    this, we perform a join operation for all the hotel names in the grouping. We
    use the HTML `<br>` tag to indicate a line break in the join, as Plotly uses HTML
    for defining its hover-over texts.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦分配了六边形的ID，我们就开始计算希望可视化的数据。在这种情况下，我们的目标是显示每个六边形内的酒店数量。为此，我们按`Hexagon_ID`进行分组并执行`count`操作。此外，我们希望实现一个悬停功能，以便查看每个六边形内酒店的名称。为此，我们对所有酒店名称执行连接操作。在连接中使用HTML
    `<br>`标签来表示换行，因为Plotly使用HTML来定义其悬停文本。
- en: '![](../Images/634d3f03e3ef07c1be2b88bc19a5aff1.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/634d3f03e3ef07c1be2b88bc19a5aff1.png)'
- en: DataFrame Resulting from Aggregation
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 聚合结果的数据框
- en: 'As seen above, the grouped dataframe has three columns: (1) `Hexagon_ID`, which
    contains the unique hexagon identifier, (2) `Count`, which holds the number of
    hotels in that hexagon, and (3) `Hotels`, which contains a list of the hotel names
    within the hexagon.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所示，分组后的数据框有三列：（1）`Hexagon_ID`，包含唯一的六边形标识符，（2）`Count`，记录该六边形内的酒店数量，（3）`Hotels`，列出六边形内的酒店名称。
- en: 'Data Visualization: Cartographic Representation of Hotels in Barcelona Using
    Hexagons'
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据可视化：使用六边形的巴塞罗那酒店制图表示
- en: Once the data has been grouped, **we can proceed to the final step, which is
    the creation of the hexagon map using Plotly**.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦数据被分组，**我们可以进行最终步骤，即使用 Plotly 创建六边形地图**。
- en: The `create_choropleth_map` function is responsible for processing the grouped
    dataset and the dataset containing the geometries of each hexagon to generate
    the hexagon map. This map allows us to visualize which areas of the city have
    a higher concentration of hotels.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`create_choropleth_map` 函数负责处理分组数据集和包含每个六边形几何形状的数据集，以生成六边形地图。该地图允许我们可视化城市哪些区域的酒店集中度较高。'
- en: '![](../Images/c0d5372df0ec6a8b9a9fd5e50bb594e6.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c0d5372df0ec6a8b9a9fd5e50bb594e6.png)'
- en: Hotel Distribution Heatmap in Barcelona City (Image created by the author)
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 巴塞罗那市酒店分布热力图（作者创建的图片）
- en: To create the map, we will employ the `choropleth_mapbox` function available
    in Plotly Express. This function generates a map with the defined geometry (in
    this case, the set of hexagons created) and colors them according to the number
    of hotels detected in each hexagon, utilizing the continuous color scale selected
    by the user. When you hover your mouse over one of the hexagons, you can view
    the list of hotels located within that hexagon.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建地图，我们将使用 Plotly Express 中的 `choropleth_mapbox` 函数。该函数生成一个具有定义几何形状（在本例中为创建的六边形集合）的地图，并根据每个六边形中检测到的酒店数量为其着色，利用用户选择的连续颜色比例。当你将鼠标悬停在其中一个六边形上时，可以查看该六边形内的酒店列表。
- en: In this case, the background map used is `carto-positron`, but this parameter
    can be easily adjusted to use a different map style that provides better identification
    of city streets and points of interest, such as `open-street-map`. Furthermore,
    we can also utilize a different color scale. In the previous case, we used the
    `Viridis` color scale, while in this case, we are using the `Reds` color scale.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，使用的背景地图是 `carto-positron`，但这个参数可以轻松调整为使用其他地图样式，以提供更好的城市街道和兴趣点识别，例如 `open-street-map`。此外，我们还可以利用不同的颜色比例。在之前的情况下，我们使用了
    `Viridis` 颜色比例，而在这个情况下，我们使用 `Reds` 颜色比例。
- en: '![](../Images/52b09be5e686891b6e83360a83eacf78.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/52b09be5e686891b6e83360a83eacf78.png)'
- en: Hotel Distribution Heatmap in Barcelona City (Image created by the author)
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 巴塞罗那市酒店分布热力图（作者创建的图片）
- en: The map is interactive, allowing us to zoom in on the area of interest.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 地图是互动的，允许我们放大感兴趣的区域。
- en: As evident when zooming in on the area with reddish hues, most of the hotels
    in Barcelona are situated around Plaça de Catalunya.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 当放大到红色调区域时，可以明显看出，巴塞罗那的大多数酒店都位于加泰罗尼亚广场周围。
- en: '![](../Images/c8fc11468e65b36bd117a38b0e7936e9.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c8fc11468e65b36bd117a38b0e7936e9.png)'
- en: The Area with the Highest Hotel Concentration in Barcelona (Image created by
    the author)
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 巴塞罗那酒店浓度最高的区域（作者创建的图片）
- en: Summary
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Choropleth maps with administrative regions are a valuable means of visualizing
    how a variable is distributed within a geographic area. However, they have the
    disadvantage of providing a biased visualization of the variable’s distribution
    due to the irregular shapes and varying sizes of administrative regions. For this
    reason, **the use of hexagonal maps with regular geometric shapes serves as a
    highly useful alternative for analyzing distributions across a territory**. In
    this article, **we have provided a detailed explanation of how to create a hexagonal
    grid using the Uber H3 library and how this grid has been utilized in a Plotly
    visualization to depict the distribution of hotels in Barcelona**.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 带有行政区域的热力图是可视化变量在地理区域内分布的宝贵手段。然而，由于行政区域形状不规则和大小不同，它们在视觉上可能会提供变量分布的偏差。因此，**使用具有规则几何形状的六边形地图作为分析领土分布的极佳替代方案**。在本文中，**我们详细解释了如何使用
    Uber H3 库创建六边形网格以及如何在 Plotly 可视化中利用该网格描绘巴塞罗那的酒店分布**。
