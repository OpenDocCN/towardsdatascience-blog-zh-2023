- en: Sb3, the Swiss Army Knife of Applied RL
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Sb3，应用RL的瑞士军刀
- en: 原文：[https://towardsdatascience.com/sb3-the-swiss-army-knife-of-applied-rl-5548535d09cd](https://towardsdatascience.com/sb3-the-swiss-army-knife-of-applied-rl-5548535d09cd)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/sb3-the-swiss-army-knife-of-applied-rl-5548535d09cd](https://towardsdatascience.com/sb3-the-swiss-army-knife-of-applied-rl-5548535d09cd)
- en: Your choice of model, with any environment
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你的模型选择，适用于任何环境
- en: '[](https://medium.com/@byjameskoh?source=post_page-----5548535d09cd--------------------------------)[![James
    Koh, PhD](../Images/8e7af8b567cdcf24805754801683b426.png)](https://medium.com/@byjameskoh?source=post_page-----5548535d09cd--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5548535d09cd--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5548535d09cd--------------------------------)
    [James Koh, PhD](https://medium.com/@byjameskoh?source=post_page-----5548535d09cd--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@byjameskoh?source=post_page-----5548535d09cd--------------------------------)[![詹姆斯·科，博士](../Images/8e7af8b567cdcf24805754801683b426.png)](https://medium.com/@byjameskoh?source=post_page-----5548535d09cd--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5548535d09cd--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5548535d09cd--------------------------------)
    [詹姆斯·科，博士](https://medium.com/@byjameskoh?source=post_page-----5548535d09cd--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----5548535d09cd--------------------------------)
    ·8 min read·Oct 26, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----5548535d09cd--------------------------------)
    ·8 分钟阅读·2023年10月26日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/3359413fa03ba1b4537646411e4dea66.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3359413fa03ba1b4537646411e4dea66.png)'
- en: Image created by DALL·E 3 based on the prompt “Create a realistic looking image
    of an opened swiss army knife.”
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 DALL·E 3 根据提示“创建一个现实主义风格的打开的瑞士军刀图像”生成。
- en: Stablebaseline3 (sb3) is like a Swiss Army knife. It is a multi-function utility
    tool, that can be used for many purpose. And, just like a Swiss Army knife can
    save your life if you are stranded in a jungle, sb3 can save your life in the
    office, when you have seemingly impossible deadlines to meet.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Stablebaseline3 (sb3) 就像是一把瑞士军刀。它是一种多功能工具，可以用于许多目的。而且，就像瑞士军刀在你被困在丛林中时可以救命一样，sb3
    可以在你在办公室中遇到看似不可能的截止日期时救你一命。
- en: This guide uses gymnasium=0.28.1 and stable-baselines=2.1.0\. If you use different
    versions, or perhaps even refer to other old guides, you may not get the results
    below. But fret not, an installation guide is given here as well. I guarantee
    you can get the results if you follow my instructions.
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 本指南使用 gymnasium=0.28.1 和 stable-baselines=2.1.0。如果你使用不同的版本，或许还参考了其他旧指南，可能不会得到下面的结果。但不要担心，这里也提供了安装指南。我保证只要按照我的说明操作，你就能获得结果。
- en: '[1] What You Will Get Here'
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[1] 你将获得什么'
- en: Stablebaseline3 is easy to use. It is also well documented, and you can follow
    the tutorials on your own. But…
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Stablebaseline3 使用起来很简单。它也有很好的文档支持，你可以自行跟随教程。但…
- en: Have you referred to older guides (perhaps those using `gym`), only to find
    errors on your machine?
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你是否参考过旧的指南（可能是使用 `gym` 的指南），结果发现你的机器上存在错误？
- en: Are you able to always ensure compatibility?
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你能始终确保兼容性吗？
- en: What if you want to use `gymnasium`'s environment and modify perhaps the rewards?
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你想使用 `gymnasium` 的环境并修改奖励，该怎么办？
- en: Do you know how to wrap your own tasks, such that SOTA models can be applied
    in a few lines?
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你知道如何包装自己的任务，以便可以在几行代码中应用 SOTA 模型吗？
- en: That’s the objective of this article! After reading this guided demonstration,
    you will…
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是本文的目标！在阅读了这篇指南之后，你将…
- en: Solve classic environments with sb3 models, visualize the results, as well as
    save (or load) the trained model in a few lines of code. **[Section 3.1]**
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 sb3 模型解决经典环境，视觉化结果，并在几行代码中保存（或加载）训练好的模型。**[第 3.1 节]**
- en: Understand how to check the action space and observation space for compatibility.
    **[Section 3.2]**
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 理解如何检查动作空间和观测空间的兼容性。**[第 3.2 节]**
- en: Learn how to wrap `gymnasium`environments so that any sb3 models can be used,
    without any restrictions on `box` or `discrete`. **[Section 4.1]**
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 学习如何包装 `gymnasium` 环境，以便可以使用任何 sb3 模型，而不会对 `box` 或 `discrete` 有任何限制。**[第 4.1
    节]**
- en: Learn how to wrap `gymnasium`environments for reward shaping. **[Section 4.2]**
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 学会如何包装 `gymnasium` 环境以进行奖励塑形。**[第 4.2 节]**
- en: Learn how to wrap your own custom environments to be compatible with sb3, with
    minimal changes to your original code which may follow a different structure.
    **[Section 5]**
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 了解如何将自定义环境包装为与 sb3 兼容，同时对原始代码进行最小更改，原始代码可能遵循不同的结构。**[第5节]**
- en: '[2] Installation'
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[2] 安装'
- en: 'Create a virtual environment and set up the relevant dependencies. I cater
    to the majority — here the guide is created using Windows and has Anaconda installed.
    Open your Anaconda prompt and do the following:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个虚拟环境并设置相关依赖。我主要针对的是大多数人——这里的指南是在 Windows 系统上创建的，并且已经安装了 Anaconda。打开你的 Anaconda
    提示符并执行以下操作：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Here, we will be using jupyter notebook, as it is a more user-friendly tool
    for teaching.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将使用 jupyter notebook，因为它是一个更用户友好的教学工具。
- en: '[3] A Taste of Success — See Your Trained RL Agents'
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[3] 成功的初步体验 — 查看你的训练 RL 代理'
- en: The first thing is to import the required libraries.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 首先要导入所需的库。
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[3.1] DQN on Cartpole'
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[3.1] Cartpole 上的 DQN'
- en: Let’s start small, on the Cartpole task where the objective is to push the cart
    (left or right) to keep the pole upright.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从小的例子开始，比如 Cartpole 任务，目标是推动小车（向左或向右）以保持杆子直立。
- en: What’s the absolute minimum you need? Just this, to train.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 你绝对需要的最低限度是什么？就是这个，用于训练。
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: And this, to evaluate.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 还有这个，用于评估。
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Finally, this, to visualize.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，这样做是为了可视化。
- en: '[PRE4]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In just 10+ lines of code, and a couple of seconds, we solved a classic RL problem.
    This is a good example of the extent to which AI has been democratized!
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 只需 10 行以上的代码和几秒钟时间，我们就解决了一个经典的 RL 问题。这是 AI 已经被民主化到何种程度的一个好例子！
- en: Agent trained and visualized with the exact code above. Image by author.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 使用上面完全相同的代码训练并可视化的代理。图片由作者提供。
- en: To save your sb3 model, just add a callback during the training execution.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 要保存你的 sb3 模型，只需在训练执行期间添加一个回调。
- en: '[PRE5]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Your model can subsequently be loaded in just two lines.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 你的模型随后可以用两行代码加载。
- en: '[PRE6]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[3.2] Check action/observation space'
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[3.2] 检查动作/观察空间'
- en: Suppose we try a different model, say, using `model=SAC("MlpPolicy", env)`.
    An error would result.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们尝试不同的模型，比如使用 `model=SAC("MlpPolicy", env)`。这将导致一个错误。
- en: This is because SAC (Soft Actor Critic) only works with continuous action space,
    as stated on the official Stable Baselines3 [documentations](https://stable-baselines3.readthedocs.io/en/master/modules/sac.html),
    while the cartpole environment has discrete action space.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为 SAC（Soft Actor Critic）仅适用于连续动作空间，如官方 Stable Baselines3 [文档](https://stable-baselines3.readthedocs.io/en/master/modules/sac.html)
    中所述，而 Cartpole 环境具有离散动作空间。
- en: 'I’ve compiled the action space constraints into a simple function below:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我将动作空间约束汇编成一个简单的函数如下：
- en: '[PRE7]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: With this, `is_compatible(env,'DQN')` returns `True`, while `is_compatible(env,'SAC')`
    returns `False`.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，`is_compatible(env,'DQN')` 返回 `True`，而 `is_compatible(env,'SAC')` 返回 `False`。
- en: There are no constraints on observation spaces, for any of the models in sb3.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 sb3 中的任何模型，观察空间没有约束。
- en: '[4] Wrap `gymnasium` Env'
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[4] 包装 `gymnasium` 环境'
- en: What if we want to modify the `gymnasium` environment according to our own specifications?
    Should we write the code from scratch? Or perhaps look at the source code and
    make modifications over there?
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想根据自己的规格修改 `gymnasium` 环境呢？我们应该从头编写代码？还是查看源代码并在那进行修改？
- en: The answer to both is, **no**.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 对这两个问题的回答是，**不**。
- en: It is better to simply wrap the `gymnasium` objects. Not only is this fast and
    easy, doing so makes your code readable and trustworthy.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 最好只是包装 `gymnasium` 对象。这样不仅快速简便，还使你的代码可读且可靠。
- en: People do not need to scrutinize every line of your code. Instead, they only
    need to look at the modifications within your wrapper (assuming they are convinced
    with the correctness of `gymnasium`).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 人们不需要逐行审查你的代码。他们只需查看你包装器中的修改（假设他们对 `gymnasium` 的正确性感到信服）。
- en: '[4.1] Agnostic to `box` or `discrete`'
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[4.1] 不考虑 `box` 或 `discrete`'
- en: In section 3.2, we see that SAC is not compatible with Cartpole.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在第 3.2 节中，我们看到 SAC 与 Cartpole 不兼容。
- en: This is a workaround for this. In fact, any sb3 model can be used on any environment;
    we just need a simple wrapper.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个解决办法。实际上，任何 sb3 模型都可以用于任何环境；我们只需要一个简单的包装器。
- en: '[PRE8]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: With this, you can solve an environment with discrete action space using a model
    like SAC which deals with continuous action space.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这样做，你可以使用像 SAC 这样的处理连续动作空间的模型来解决具有离散动作空间的环境。
- en: '[PRE9]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Any sb3 model can be made compatible with any classic gymnasium environment.
    Don’t just take my word for it. Try out the following.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 任何 sb3 模型都可以与任何经典的 gymnasium 环境兼容。不要仅仅听我的话。试试以下内容。
- en: '[PRE10]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Note that the purpose here is just to *show* that the environments can be wrapped
    to be made compatible. The performance might not be ideal, but that is not the
    point here.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这里的目的是*展示*环境可以被包装成兼容的形式。性能可能不是理想的，但这不是重点。
- en: The point is to show you that if you understand how sb3 works with gymnasium,
    you are able to wrap anything for universal compatibility.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 关键是要向你展示，如果你理解sb3如何与gymnasium配合使用，你能够将任何东西包装成通用兼容的形式。
- en: '[4.2] Reward shaping'
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[4.2] 奖励塑形'
- en: Suppose we want to modify a gymnasium environment, to try out reward shaping.
    For example, you may have played with [Lunar Lander](https://gymnasium.farama.org/environments/box2d/lunar_lander/)
    and observed that an agent trained with default hyperparameters may hover at the
    top, in order not to risk a crash.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们想修改一个gymnasium环境，以尝试奖励塑形。例如，你可能已经玩过[Lunar Lander](https://gymnasium.farama.org/environments/box2d/lunar_lander/)，并观察到一个用默认超参数训练的智能体可能会悬停在顶部，以避免碰撞的风险。
- en: Lunar Lander hovering at the top. Image by author.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Lunar Lander在顶部悬停。图片由作者提供。
- en: In this case, we can impose a penalty when the agent persistently stays at the
    top.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们可以对智能体持续停留在顶部时施加惩罚。
- en: '[PRE11]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Keep in mind that after training with the pseudo-rewards, the agent should be
    fine-tuned using the actual environment with the original rewards.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，在用伪奖励进行训练后，智能体应使用实际环境和原始奖励进行微调。
- en: '[PRE12]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Lunar Lander solved by agent trained with reward shaping. Image by author.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 通过奖励塑形训练的智能体解决了Lunar Lander。图片由作者提供。
- en: This looks much better!
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这看起来好多了！
- en: '[5] Wrapper Over Custom Tasks'
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[5] 自定义任务的包装器'
- en: In this final section, I will deliver my 5ᵗʰ promise — *Learn how to wrap your
    own custom environments to be compatible with sb3, with minimal changes to your
    original code which may follow a different structure.*
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一最终部分，我将实现我的第5个承诺——*学习如何将自定义环境包装成与sb3兼容，同时对原始代码做最小的修改，原始代码可能遵循不同的结构*。
- en: As a learner, we train RL agents to solve well known benchmark problems. However,
    the industry pays you to solve real problems, and not toy problems. If you are
    employed for your RL expertise, chances are that you have to solve problems that
    are unique to your company.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 作为学习者，我们训练RL智能体解决知名的基准问题。然而，行业支付你的是解决实际问题，而不是玩具问题。如果你因为RL专长而被雇佣，你很可能需要解决对公司而言独特的问题。
- en: However, sb3 and gymnasium still remain your good friends!
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，sb3和gymnasium仍然是你的好朋友！
- en: For the purpose of illustration, let’s consider the following simple GridWorld.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明问题，让我们考虑以下简单的GridWorld。
- en: '[PRE13]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Notice here that the `transition` method returns `reward`, `next_state`, and
    `done`. Stable baselines3 will not accept this style.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这里的`transition`方法返回`reward`、`next_state`和`done`。Stable baselines3将不接受这种风格。
- en: Do you have to re-code your environment? No!
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要重新编写你的环境吗？不需要！
- en: Instead, we build a simple wrapper around it.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，我们构建了一个简单的包装器。
- en: '[PRE14]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: In the above, we define a method `step`, which wraps around the original environment’s
    `transition`, and returns what sb3 expects.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面，我们定义了一个`step`方法，它包裹了原始环境的`transition`，并返回sb3期望的内容。
- en: At the same time, I’ve used this opportunity to demonstrate that we can perform
    modifications without dissecting the original environment. Here, `CustomEnv` terminates
    the episode (with a large penalty) if the goal is not reached in 50 steps.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 与此同时，我利用这个机会展示了我们可以在不解剖原始环境的情况下进行修改。在这里，`CustomEnv`如果目标在50步内未达成，则终止回合（并施加大惩罚）。
- en: How do we know if the environment is wrapped properly? First, it has to pass
    the following basic check.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们怎么知道环境是否正确包装了呢？首先，它必须通过以下基本检查。
- en: '[PRE15]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Next, we can use an sb3 model to train on the wrapped environment. You could
    also play around with the hyperparameters here, as shown below.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们可以使用sb3模型在包装后的环境上进行训练。你还可以在这里调整超参数，如下所示。
- en: '[PRE16]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Conclusion
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In this article, you have learnt to set up your own environment to run sb3 and
    gymnasium. You now have ability to implement state-of-the-art RL algorithms on
    ***any*** environment of your choice.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，你已经学习了如何设置自己的环境以运行sb3和gymnasium。你现在有能力在***任何***你选择的环境中实现最先进的RL算法。
- en: Enjoy!
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 享受吧！
