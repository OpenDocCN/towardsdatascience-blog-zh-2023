- en: Should You Use Slots? How Slots Affect Your Class, and When and How to Use Them
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你应该使用slots吗？Slots如何影响你的类，何时以及如何使用它们
- en: 原文：[https://towardsdatascience.com/should-you-use-slots-how-slots-affect-your-class-when-and-how-to-use-ab3f118abc71](https://towardsdatascience.com/should-you-use-slots-how-slots-affect-your-class-when-and-how-to-use-ab3f118abc71)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/should-you-use-slots-how-slots-affect-your-class-when-and-how-to-use-ab3f118abc71](https://towardsdatascience.com/should-you-use-slots-how-slots-affect-your-class-when-and-how-to-use-ab3f118abc71)
- en: One line of code for a 20% performance increase?
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一行代码能带来20%的性能提升？
- en: '[](https://mikehuls.medium.com/?source=post_page-----ab3f118abc71--------------------------------)[![Mike
    Huls](../Images/8f9f55a0d25db00799c5d37383b7f5b6.png)](https://mikehuls.medium.com/?source=post_page-----ab3f118abc71--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ab3f118abc71--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ab3f118abc71--------------------------------)
    [Mike Huls](https://mikehuls.medium.com/?source=post_page-----ab3f118abc71--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://mikehuls.medium.com/?source=post_page-----ab3f118abc71--------------------------------)[![Mike
    Huls](../Images/8f9f55a0d25db00799c5d37383b7f5b6.png)](https://mikehuls.medium.com/?source=post_page-----ab3f118abc71--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ab3f118abc71--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ab3f118abc71--------------------------------)
    [Mike Huls](https://mikehuls.medium.com/?source=post_page-----ab3f118abc71--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ab3f118abc71--------------------------------)
    ·6 min read·Aug 12, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ab3f118abc71--------------------------------)
    ·6分钟阅读·2023年8月12日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/a7016fdf3f746ca53c9033b17ddc4026.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a7016fdf3f746ca53c9033b17ddc4026.png)'
- en: (image by [Sébastien Goldberg](https://unsplash.com/@sebastiengoldberg) on [Unsplash](https://unsplash.com/photos/J8N79W2EdB8))
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: (图片来源：[Sébastien Goldberg](https://unsplash.com/@sebastiengoldberg) 在 [Unsplash](https://unsplash.com/photos/J8N79W2EdB8))
- en: Slots are a mechanism that allow you to declare class attributes and restrict
    the creation of other attributes. You establish which attributes your class has,
    preventing developers from adding new attributes dynamically. This generally leads
    to a **20% speed increase.**
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Slots是一种机制，它允许你声明类属性并限制其他属性的创建。你可以确定你的类有哪些属性，从而防止开发者动态添加新属性。这通常会导致**20%的速度提升**。
- en: Slots are especially beneficial in programs where you have a large number of
    class instances with a known set of attributes. Think of a video games or physics
    simulations; in these situations you track a large number of entities over time.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Slots在有大量类实例且属性集已知的程序中特别有用。比如视频游戏或物理模拟；在这些情况下，你跟踪大量的实体。
- en: You can add slots to your class **adding a single line of code** but is this
    always a good idea? In this article we’ll look a **why** and **how** using **slots**
    make your classes that much faster and when to use them. The overall goal is to
    better understand how Python’s class internals work. Let’s code!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过**添加一行代码**将slots添加到你的类中，但这总是一个好主意吗？在本文中，我们将探讨**为什么**和**如何**使用**slots**使你的类更快以及何时使用它们。总体目标是更好地理解Python的类内部工作原理。开始编码吧！
- en: Slots make Python classes faster
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Slots让Python类更快
- en: You can improve a class’ memory usage and performance by making it use `slots`.
    A class with slots takes up less memory and executes faster.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用`slots`，你可以提高类的内存使用效率和性能。一个具有slots的类占用更少的内存，执行速度更快。
- en: How to make my class use slots?
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何让我的类使用slots？
- en: 'Telling Python to make a class use slots is very simple. You just add a special
    attribute called `__slots__` that specifies the names of all other attributes:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 告诉Python让一个类使用slots非常简单。你只需添加一个特殊的属性`__slots__`，它指定所有其他属性的名称：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In the class above we see that `Person` has three attributes: `first_name`,
    `last_name`, and `age`. We can tell Python that we want the `Person` class to
    use slots by adding the `__slots__` attribute. This attribute has to specify the
    names of all other attributes.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述类中，我们看到`Person`有三个属性：`first_name`、`last_name`和`age`。我们可以告诉Python我们希望`Person`类使用slots，通过添加`__slots__`属性来实现。这个属性必须指定所有其他属性的名称。
- en: '[](/args-vs-kwargs-which-is-the-fastest-way-to-call-a-function-in-python-afb2e817120?source=post_page-----ab3f118abc71--------------------------------)
    [## Args vs kwargs: which is the fastest way to call a function in Python?'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/args-vs-kwargs-which-is-the-fastest-way-to-call-a-function-in-python-afb2e817120?source=post_page-----ab3f118abc71--------------------------------)
    [## 参数与关键字参数：哪种方式在 Python 中调用函数最快？'
- en: A clear demonstration of the timeit module
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`timeit`模块的清晰演示'
- en: towardsdatascience.com](/args-vs-kwargs-which-is-the-fastest-way-to-call-a-function-in-python-afb2e817120?source=post_page-----ab3f118abc71--------------------------------)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/args-vs-kwargs-which-is-the-fastest-way-to-call-a-function-in-python-afb2e817120?source=post_page-----ab3f118abc71--------------------------------)
- en: How much faster are slotted classes?
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: slotted 类的速度提升了多少？
- en: The `Person` class we’ve used above is almost **60% smaller** using slots (488
    bytes to 206 bytes).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们上面使用的 `Person` 类使用 slots 后几乎 **小了 60%**（从 488 字节减少到 206 字节）。
- en: With regards to speed, I’ve benchmarked instantiation, accessing and assignment.
    I’ve found **speed increases up to 20%**! You have to take these results with
    a grain of salt; though these percentages seem pretty impressive these 20% represent
    only **0.44 seconds for instantiation the class 10 million times**. This comes
    down to a **negligible 44 nanoseconds** per instance (roughly 30.3 million times
    smaller than a second).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 关于速度，我已经对实例化、访问和赋值进行了基准测试。我发现 **速度提高了多达 20%**！你需要对这些结果持保留态度；虽然这些百分比看起来相当令人印象深刻，但这
    20% 仅代表 **10 万次实例化类的 0.44 秒**。这相当于每个实例 **可忽略的 44 纳秒**（大约比一秒小 3030 万倍）。
- en: See code for benchmarking [**memory**](https://gist.github.com/mike-huls/75ad4a7840e36a33606192aeabe4a1c7)and
    [**speed**](https://gist.github.com/mike-huls/45593ba9c642d6a85b6a7ef79530a6dc);
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 查看用于基准测试的 [**内存**](https://gist.github.com/mike-huls/75ad4a7840e36a33606192aeabe4a1c7)
    和 [**速度**](https://gist.github.com/mike-huls/45593ba9c642d6a85b6a7ef79530a6dc)代码；
- en: '[](/why-is-python-so-slow-and-how-to-speed-it-up-485b5a84154e?source=post_page-----ab3f118abc71--------------------------------)
    [## Why Python is so slow and how to speed it up'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/why-is-python-so-slow-and-how-to-speed-it-up-485b5a84154e?source=post_page-----ab3f118abc71--------------------------------)
    [## 为什么 Python 很慢以及如何加速'
- en: Take a look under the hood to see where Python’s bottlenecks lie
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 看看底层，了解 Python 的瓶颈所在
- en: towardsdatascience.com](/why-is-python-so-slow-and-how-to-speed-it-up-485b5a84154e?source=post_page-----ab3f118abc71--------------------------------)
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/why-is-python-so-slow-and-how-to-speed-it-up-485b5a84154e?source=post_page-----ab3f118abc71--------------------------------)
- en: Why are slotted classes smaller and faster?
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么 slotted 类更小且更快？
- en: 'This has to do with Python classes’ **dynamic dictionary**. This dictionary
    lets you assign attributes to Python classes:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这与 Python 类的 **动态字典** 有关。这个字典让你可以为 Python 类分配属性：
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In the example above we define a class without any attributes, create an instance
    of that and then dynamically create the `age` attribute and assign it a value.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的例子中，我们定义了一个没有任何属性的类，创建了一个实例，然后动态地创建 `age` 属性并赋值。
- en: 'Under the hood Python stores all attribute information in a dictionary. This
    dictionary is available by calling the `__dict__` magic method on the class:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在底层，Python 将所有属性信息存储在一个字典中。通过调用类上的 `__dict__` 魔法方法可以访问这个字典：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The dynamic dict makes Python classes pretty flexible but it has a downside:
    using the attributes makes Python search in this dict, which is relatively slow.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 动态字典使得 Python 类非常灵活，但它有一个缺点：使用属性时 Python 会在这个字典中进行搜索，这相对较慢。
- en: '[](/thread-your-python-program-with-two-lines-of-code-3b474407dbb8?source=post_page-----ab3f118abc71--------------------------------)
    [## Thread Your Python Program with Two Lines of Code'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/thread-your-python-program-with-two-lines-of-code-3b474407dbb8?source=post_page-----ab3f118abc71--------------------------------)
    [## 用两行代码线程化你的 Python 程序'
- en: Speed up your program by doing multiple things simultaneously
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过同时做多件事来加速你的程序
- en: towardsdatascience.com](/thread-your-python-program-with-two-lines-of-code-3b474407dbb8?source=post_page-----ab3f118abc71--------------------------------)
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/thread-your-python-program-with-two-lines-of-code-3b474407dbb8?source=post_page-----ab3f118abc71--------------------------------)
- en: How do slots affect the dynamic dict?
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`slots`如何影响动态字典？'
- en: When you tell Python to slot your class, the **dynamic dict is not created**.
    Instead Python creates a **fixed-size array** that contains the references to
    your variables. This is why you have to pass the names of your attributes to the
    `__slots__` attribute.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 当你告诉 Python 为你的类使用 `slots` 时，**不会创建动态字典**。相反，Python 创建了一个 **固定大小的数组**，其中包含对变量的引用。这就是你必须将属性名称传递给
    `__slots__` 属性的原因。
- en: Not only is accessing this array much faster, it also takes up less memory space.
    A smaller memory footprint also has beneficial effects on memory allocation and
    garbage collection.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 访问这个数组不仅速度更快，而且占用的内存空间也更少。较小的内存占用对内存分配和垃圾回收也有积极的影响。
- en: What are the side effects of slots?
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 插槽有什么副作用？
- en: '**Slots change your class**; it becomes a bit more **inflexible** since your
    class become a bit more **static**. This means that you cannot add attributes
    at runtime; you have to specify your attributes beforehand:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**插槽改变了你的类**；它变得有点**不灵活**，因为你的类变得更**静态**。这意味着你不能在运行时添加属性；你必须事先指定你的属性：'
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'There is a (albeit bit messy) way around this: by adding the value `"__dict__"`
    to your `__slots__` array:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 有一种（虽然有点乱的）变通方法：通过将 `"__dict__"` 的值添加到你的 `__slots__` 数组中：
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The last thing to keep an eye on is the fact that some packages may expect “normal”
    Python classes in stead of slotted ones.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个需要注意的事项是，有些包可能期望使用“普通”的 Python 类，而不是使用插槽类。
- en: '[](/cython-for-data-science-6-steps-to-make-this-pandas-dataframe-operation-over-100x-faster-1dadd905a00b?source=post_page-----ab3f118abc71--------------------------------)
    [## 6 Steps to Make this Pandas Dataframe Operation 100 Times Faster'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/cython-for-data-science-6-steps-to-make-this-pandas-dataframe-operation-over-100x-faster-1dadd905a00b?source=post_page-----ab3f118abc71--------------------------------)
    [## 6 步骤让 Pandas DataFrame 操作快 100 倍'
- en: 'Cython for Data Science: Combine Pandas with Cython for an incredible speed
    improvement'
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Cython 用于数据科学：将 Pandas 与 Cython 结合，以实现令人难以置信的速度提升
- en: towardsdatascience.com](/cython-for-data-science-6-steps-to-make-this-pandas-dataframe-operation-over-100x-faster-1dadd905a00b?source=post_page-----ab3f118abc71--------------------------------)
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/cython-for-data-science-6-steps-to-make-this-pandas-dataframe-operation-over-100x-faster-1dadd905a00b?source=post_page-----ab3f118abc71--------------------------------)'
- en: Does this also work with dataclasses?
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 这在数据类中也适用吗？
- en: 'Yes! Starting from Python 3.10 you can also add **slot** dataclasses. It’s
    even easier with dataclasses, just add a single argument to the @dataclass decorator.
    Just define your dataclass like below:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 是的！从 Python 3.10 开始，你还可以添加**插槽**数据类。使用数据类更简单，只需向 @dataclass 装饰器添加一个参数即可。只需像下面这样定义你的数据类：
- en: '[PRE5]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: What are the advantages of using slots?
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用插槽有什么好处？
- en: 'Obviously the **speed** and **memory** efficiency but maybe also **safety**:
    if I want to overwrite the `age` attribute on my class but make a typo and type
    `mike.aage = 34` then unslotted classes will just create a new attribute, keeping
    the `age` attribute unchanged. When you use slots Python will throw an error because
    it doesn’t know an `aage` attribute on that class.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，**速度**和**内存**效率，但也许还有**安全性**：如果我想覆盖类中的 `age` 属性但打错字，例如输入 `mike.aage = 34`，那么未使用插槽的类将创建一个新属性，而保持
    `age` 属性不变。当你使用插槽时，Python 会抛出一个错误，因为它不知道类中有 `aage` 属性。
- en: When to use slots?
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 何时使用插槽？
- en: '**SPEED**: Although slots speed up you class percentage-wise, the absolute
    time increase is pretty negligible per operation. Therefore slots become more
    attractive to use if you have to create **a lot** of instances, or have to overwrite
    or access attributes many, many times.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**速度**：尽管插槽从百分比上加速了你的类，但每次操作的绝对时间增加是相当微不足道的。因此，如果你需要创建**大量**实例，或者需要多次重写或访问属性，插槽的使用会更具吸引力。'
- en: '**MEMORY**: If you’re low on memory and can save every byte it may be beneficial
    to use slots since they cut the amount of memory used significantly. Our simple
    class was reduces by 60%.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**内存**：如果你内存不足且希望节省每一个字节，使用插槽可能会有好处，因为它们显著减少了内存使用量。我们的简单类减少了 60% 的内存占用。'
- en: '**SAFETY:** Slots prevent you from using wrong attributes and creating new
    attributes dynamically. Slotted classes throw an error if you try to modify an
    unknown attribute.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**安全性**：插槽防止你使用错误的属性和动态创建新属性。如果你尝试修改一个未知的属性，插槽类会抛出错误。'
- en: '[](/cython-for-absolute-beginners-30x-faster-code-in-two-simple-steps-bbb6c10d06ad?source=post_page-----ab3f118abc71--------------------------------)
    [## Cython for absolute beginners: 30x faster code in two simple steps'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/cython-for-absolute-beginners-30x-faster-code-in-two-simple-steps-bbb6c10d06ad?source=post_page-----ab3f118abc71--------------------------------)
    [## 绝对初学者的 Cython：两步实现 30 倍更快的代码'
- en: Easy Python code compilation for blazingly fast applications
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 轻松编译 Python 代码，实现极快的应用程序
- en: towardsdatascience.com](/cython-for-absolute-beginners-30x-faster-code-in-two-simple-steps-bbb6c10d06ad?source=post_page-----ab3f118abc71--------------------------------)
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/cython-for-absolute-beginners-30x-faster-code-in-two-simple-steps-bbb6c10d06ad?source=post_page-----ab3f118abc71--------------------------------)'
- en: Conclusion
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: 'As we’ve seen in this article slots affect your classes in three ways:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在这篇文章中看到的，slots 以三种方式影响你的类：
- en: '**SIZE**: slots eliminate the need for Python to create the dynamic dictionary
    but instead relies on a **smaller**, fixed-size array, which indirectly speeds
    up your app by decreasing demand on garbage collection for example.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**大小**：slots 消除了 Python 创建动态字典的需要，而是依赖于 **更小** 的固定大小数组，这间接通过减少对垃圾回收的需求来加速你的应用。'
- en: '**SPEED**: slots allow for accessing the memory directly, bypassing the need
    to search the dictionary, which is much slower. Speed improvements are pretty
    marginal in an absolute sense; saving a few nanoseconds.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**速度**：slots 允许直接访问内存，绕过搜索字典的需要，这样会更快。速度提升在绝对意义上是相当微小的；节省了几纳秒。'
- en: '**FLEXIBILITY**: slots prevent adding attributes at runtime so your classes
    become a bit less flexible. This can also be a good thing since your code may
    get messy when you use dynamic attribute creation.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**灵活性**：slots 防止在运行时添加属性，因此你的类变得有点不那么灵活。这也可能是件好事，因为当你使用动态属性创建时，你的代码可能会变得杂乱无章。'
- en: 'In my opinion, reduced flexibility is a downside I don’t experience often:
    I never create attributes dynamically and I like that slots keep the attributes
    static. Therefore I use slots wherever possible. In the worst case a dependency
    trips up but in that case it’s very easy to remove the slots again.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在我看来，减少的灵活性是我不常遇到的缺点：我从不动态创建属性，我喜欢 slots 保持属性静态。因此，我会尽可能使用 slots。在最坏的情况下，依赖关系可能会出问题，但在这种情况下，很容易再次移除
    slots。
- en: 'I hope this article was as clear as I hope it to be but if this is not the
    case please let me know what I can do to clarify further. In the meantime, check
    out my [other articles](https://mikehuls.com/articles) on all kinds of programming-related
    topics like these:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望这篇文章能像我希望的那样清晰，但如果不是这种情况，请告诉我我可以做些什么来进一步澄清。与此同时，查看我的[其他文章](https://mikehuls.com/articles)，涵盖了各种编程相关的话题，例如：
- en: '[Git for absolute beginners: understanding Git with the help of a video game](https://mikehuls.medium.com/git-for-absolute-beginners-understanding-git-with-the-help-of-a-video-game-88826054459a)'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[绝对初学者的 Git：通过视频游戏理解 Git](https://mikehuls.medium.com/git-for-absolute-beginners-understanding-git-with-the-help-of-a-video-game-88826054459a)'
- en: '[Create and publish your own Python package](https://mikehuls.medium.com/create-and-publish-your-own-python-package-ea45bee41cdc)'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[创建并发布你自己的 Python 包](https://mikehuls.medium.com/create-and-publish-your-own-python-package-ea45bee41cdc)'
- en: '[Create a fast auto-documented, maintainable, and easy-to-use Python API in
    5 lines of code with FastAPI](https://mikehuls.medium.com/create-a-fast-auto-documented-maintainable-and-easy-to-use-python-api-in-5-lines-of-code-with-4e574c00f70e)'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用 FastAPI 在 5 行代码中创建一个快速的自动文档化、可维护、易于使用的 Python API](https://mikehuls.medium.com/create-a-fast-auto-documented-maintainable-and-easy-to-use-python-api-in-5-lines-of-code-with-4e574c00f70e)'
- en: '[A complete guide to using environment variables and files with docker and
    compose](https://mikehuls.medium.com/a-complete-guide-to-using-environment-variables-and-files-with-docker-and-compose-4549c21dc6af)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用环境变量和文件与 docker 和 compose 的完整指南](https://mikehuls.medium.com/a-complete-guide-to-using-environment-variables-and-files-with-docker-and-compose-4549c21dc6af)'
- en: Happy coding!
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 编程愉快！
- en: — Mike
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: — Mike
- en: '*P.S: like what I’m doing?* [*Follow me!*](https://mikehuls.medium.com/membership)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '*附言：喜欢我做的事吗？* [*关注我！*](https://mikehuls.medium.com/membership)'
- en: '[](https://mikehuls.medium.com/membership?source=post_page-----ab3f118abc71--------------------------------)
    [## Join Medium with my referral link — Mike Huls'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 使用我的推荐链接加入 Medium — Mike Huls](https://mikehuls.medium.com/membership?source=post_page-----ab3f118abc71--------------------------------)'
- en: Read every story from Mike Huls (and thousands of other writers on Medium).
    Your membership fee directly supports Mike…
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阅读 Mike Huls 的每一篇故事（以及 Medium 上其他数千名作家的故事）。你的会员费用直接支持 Mike...
- en: mikehuls.medium.com](https://mikehuls.medium.com/membership?source=post_page-----ab3f118abc71--------------------------------)
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '[mikehuls.medium.com](https://mikehuls.medium.com/membership?source=post_page-----ab3f118abc71--------------------------------)'
