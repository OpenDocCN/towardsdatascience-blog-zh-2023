- en: Structuring Your Machine Learning Project with MLOps in Mind
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将你的机器学习项目与 MLOps 思维相结合进行结构化
- en: 原文：[https://towardsdatascience.com/structuring-your-machine-learning-project-with-mlops-in-mind-41a8d65987c9](https://towardsdatascience.com/structuring-your-machine-learning-project-with-mlops-in-mind-41a8d65987c9)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/structuring-your-machine-learning-project-with-mlops-in-mind-41a8d65987c9](https://towardsdatascience.com/structuring-your-machine-learning-project-with-mlops-in-mind-41a8d65987c9)
- en: 'MLOps in Action: Project Structuring'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MLOps 实践：项目结构化
- en: '[](https://medium.com/@chimso1994?source=post_page-----41a8d65987c9--------------------------------)[![Chayma
    Zatout](../Images/341c45f53ddf73dc0851d547cc7cb55a.png)](https://medium.com/@chimso1994?source=post_page-----41a8d65987c9--------------------------------)[](https://towardsdatascience.com/?source=post_page-----41a8d65987c9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----41a8d65987c9--------------------------------)
    [Chayma Zatout](https://medium.com/@chimso1994?source=post_page-----41a8d65987c9--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@chimso1994?source=post_page-----41a8d65987c9--------------------------------)[![Chayma
    Zatout](../Images/341c45f53ddf73dc0851d547cc7cb55a.png)](https://medium.com/@chimso1994?source=post_page-----41a8d65987c9--------------------------------)[](https://towardsdatascience.com/?source=post_page-----41a8d65987c9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----41a8d65987c9--------------------------------)
    [Chayma Zatout](https://medium.com/@chimso1994?source=post_page-----41a8d65987c9--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----41a8d65987c9--------------------------------)
    ·14 min read·Mar 16, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: · 发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----41a8d65987c9--------------------------------)
    ·14 分钟阅读·2023年3月16日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/ff4a6fc8ea3f407bf08adfa0cf7d1d88.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ff4a6fc8ea3f407bf08adfa0cf7d1d88.png)'
- en: Photo by [Priscilla Du Preez](https://unsplash.com/@priscilladupreez?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Priscilla Du Preez](https://unsplash.com/@priscilladupreez?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: If you’re looking to take your machine learning projects to the next level,
    MLOps is an essential part of the process. In this article, we’ll provide you
    with a practical tutorial on how to structure your projects for MLOps, using the
    classic handwritten digit classification problem as an example. We’ll take you
    step-by-step through the process of creating a basic project template that you
    can use to organize your own projects. By the end of this tutorial, you’ll have
    a solid understanding of MLOps principles and how to apply them to your own projects.
    However, if you’re new to MLOps, we recommend starting with my [beginner-friendly
    tutorial](https://medium.com/towards-data-science/a-beginner-friendly-introduction-to-mlops-95282f25325c)
    to get up to speed. So let’s dive in and take your ML projects to the next level!
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望将机器学习项目提升到一个新的水平，MLOps 是过程中的重要部分。本文将为你提供一个实用的教程，教你如何为 MLOps 结构化你的项目，以经典的手写数字分类问题为例。我们将逐步带你完成创建一个基本项目模板的过程，你可以用来组织自己的项目。通过这个教程，你将对
    MLOps 原则有一个扎实的理解，并学会如何将它们应用到自己的项目中。然而，如果你对 MLOps 不熟悉，我们建议你先从我的 [适合初学者的教程](https://medium.com/towards-data-science/a-beginner-friendly-introduction-to-mlops-95282f25325c)
    开始，以便快速上手。让我们开始吧，将你的机器学习项目提升到一个新水平！
- en: '**Table of contents:**'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**目录：**'
- en: · [1\. Introduction](#c6d8)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: · [1\. 介绍](#c6d8)
- en: · [2\. MLOps](#6150)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: · [2\. MLOps](#6150)
- en: ∘ [2.1\. Business problem](#2b4f)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [2.1\. 业务问题](#2b4f)
- en: ∘ [2.2\. Data engineering](#aadf)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [2.2\. 数据工程](#aadf)
- en: ∘ [2.3\. Machine learning model engineering](#8845)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [2.3\. 机器学习模型工程](#8845)
- en: ∘ [2.4\. Code engineering](#8a22)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [2.4\. 代码工程](#8a22)
- en: · [3\. Project structure](#5c87)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: · [3\. 项目结构](#5c87)
- en: ∘ [3.1\. Cookiecutter Data Science](#477b)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [3.1\. Cookiecutter 数据科学](#477b)
- en: · [4\. MLOps project structure](#ca36)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: · [4\. MLOps 项目结构](#ca36)
- en: ∘ [4.1\. Starting a new MLOps project](#db66)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [4.1\. 开始一个新的 MLOps 项目](#db66)
- en: ∘ [4.2\. Using MLOps project template for handwritten digits classification](#4e0e)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [4.2\. 使用 MLOps 项目模板进行手写数字分类](#4e0e)
- en: ∘ [4.3\. How to run your project?](#85d1)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [4.3\. 如何运行你的项目？](#85d1)
- en: · [5\. Conclusion](#822e)
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: · [5\. 结论](#822e)
- en: '**My MLOps tutorials:**'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**我的 MLOps 教程：**'
- en: '[*Tutorial 1: A Key Start to MLOps: Exploring Its Essential Components*](/a-key-start-to-mlops-exploring-its-essential-components-27646238372d)'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*教程 1：MLOps 的关键入门：探索其核心组件*](/a-key-start-to-mlops-exploring-its-essential-components-27646238372d)'
- en: '[*Tutorial 2: A Beginner-Friendly Introduction to MLOps Workflow*](/a-beginner-friendly-introduction-to-mlops-95282f25325c)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*教程 2：初学者友好的MLOps工作流程介绍*](/a-beginner-friendly-introduction-to-mlops-95282f25325c)'
- en: '[*Tutorial 3: Introduction to MLOps Principles*](https://medium.com/towards-data-science/introduction-to-mlops-principles-c5d73a00aa76)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*教程 3：MLOps原则介绍*](https://medium.com/towards-data-science/introduction-to-mlops-principles-c5d73a00aa76)'
- en: '[*Tutorial 4: Structuring Your Machine Learning Project with MLOps in Mind*](https://medium.com/towards-data-science/structuring-your-machine-learning-project-with-mlops-in-mind-41a8d65987c9)'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*教程 4：以MLOps为核心构建机器学习项目结构*](https://medium.com/towards-data-science/structuring-your-machine-learning-project-with-mlops-in-mind-41a8d65987c9)'
- en: '[*Tutorial 5: Version Controlling in Practice: Data, ML Model, and Code*](https://medium.com/towards-data-science/version-controlling-in-practice-data-ml-model-and-code-e13c518067dc)'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*教程 5：实践中的版本控制：数据、ML模型和代码*](https://medium.com/towards-data-science/version-controlling-in-practice-data-ml-model-and-code-e13c518067dc)'
- en: '[*Tutorial 6: Testing in Practice: Code, Data and ML Model*](/testing-in-practice-code-data-and-ml-model-cfb1ada81f6c)'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*教程 6：实践中的测试：代码、数据和ML模型*](/testing-in-practice-code-data-and-ml-model-cfb1ada81f6c)'
- en: '[Tutorial 7: Tracking in Practice: Code, Data and ML Model](/tracking-in-practice-code-data-and-ml-model-6787a881609c)'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[教程 7：实践中的跟踪：代码、数据和ML模型](/tracking-in-practice-code-data-and-ml-model-6787a881609c)'
- en: '*[I will be updating this list as I publish articles on the subject]*'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '*[我会在发布相关文章时更新此列表]*'
- en: 1\. Introduction
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 介绍
- en: In the previous tutorial, we defined MLOps as a way to design, build, and deploy
    machine learning models in an efficient, optimized, and organized manner. This
    is achieved by combining a set of techniques, practices, and tools that are often
    discussed within the context of the MLOps lifecycle.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的教程中，我们将MLOps定义为一种以高效、优化和有序的方式设计、构建和部署机器学习模型的方法。这是通过结合一组技术、实践和工具来实现的，这些技术、实践和工具通常在MLOps生命周期的背景下进行讨论。
- en: In the MLOps lifecycle, the first step after understanding the problem is to
    structure your project. This is typically done by using a template, whether it’s
    a company template, a public template, or your own template, as we will see later
    in this tutorial.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在MLOps生命周期中，了解问题后的第一步是构建您的项目。这通常通过使用模板完成，无论是公司模板、公共模板还是您自己的模板，如我们将在本教程中看到的那样。
- en: 'In this tutorial, we will use handwritten digit classification as an example.
    [In a previous tutorial](/a-brief-introduction-to-neural-networks-a-classification-problem-43e68c770081),
    I created a Github repository for MNIST classification, and the project structure
    looks like:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将以手写数字分类为例。 [在之前的教程中](/a-brief-introduction-to-neural-networks-a-classification-problem-43e68c770081)，我为MNIST分类创建了一个Github仓库，项目结构如下：
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The project folder includes the ‘dataset_scripts’ folder, which contains scripts
    for manipulating the dataset in its original IDX format (you can check my previous
    tutorial, “[How to Effortlessly Explore Your IDX Dataset](https://medium.com/mlearning-ai/how-to-effortlessly-explore-your-idx-dataset-97753246031f)”
    for more information), Python scripts to train three different types of models,
    a .gitignore file, and a README file. The project structure is simple as it’s
    designed for tutorial purposes. In this tutorial, I will introduce my project
    structure for MLOps projects. Note that if you want programming details about
    the models and training, you can always refer to my tutorial, “[A Brief Introduction
    to Neural Networks: A Classification Problem.](https://medium.com/towards-data-science/a-brief-introduction-to-neural-networks-a-classification-problem-43e68c770081#ebb1)”'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 项目文件夹包括“dataset_scripts”文件夹，该文件夹包含用于操作原始IDX格式数据集的脚本（有关更多信息，您可以查看我之前的教程“[如何轻松探索您的IDX数据集](https://medium.com/mlearning-ai/how-to-effortlessly-explore-your-idx-dataset-97753246031f)”），用于训练三种不同类型模型的Python脚本，一个.gitignore文件，以及一个README文件。由于该项目结构是为教程目的设计的，因此它非常简单。在本教程中，我将介绍我在MLOps项目中的项目结构。请注意，如果您想了解有关模型和训练的编程细节，您可以随时参考我的教程“[神经网络简要介绍：分类问题](https://medium.com/towards-data-science/a-brief-introduction-to-neural-networks-a-classification-problem-43e68c770081#ebb1)”。
- en: 2\. MLOps
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. MLOps
- en: The different steps in the machine learning process are outlined in the MLOps
    workflow, which includes the business problem, data engineering, machine learning
    model engineering, and code engineering. In this section, we will explore how
    to implement each step. However, some steps will not be discussed in-depth since
    the problem we are addressing (handwritten digit classification) does not require
    them. We will focus on steps that are highlighted in green (see the Figure below).
    The remaining steps will be covered in future tutorials. If you want to learn
    more about the MLOps workflow, you can check out my [beginner-friendly tutorial](https://medium.com/towards-data-science/a-beginner-friendly-introduction-to-mlops-95282f25325c#73c3).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习过程中的不同步骤在 MLOps 工作流程中进行了概述，该工作流程包括业务问题、数据工程、机器学习模型工程和代码工程。在本节中，我们将探讨如何实现每一步。然而，由于我们正在解决的问题（手写数字分类）不需要某些步骤，我们不会深入讨论这些步骤。我们将重点关注用绿色突出显示的步骤（见下图）。剩余步骤将在未来的教程中覆盖。如果你想了解更多关于
    MLOps 工作流程的内容，你可以查看我的[入门友好教程](https://medium.com/towards-data-science/a-beginner-friendly-introduction-to-mlops-95282f25325c#73c3)。
- en: '![](../Images/e9de58aa621ff53f49d0e56eea54f2c6.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e9de58aa621ff53f49d0e56eea54f2c6.png)'
- en: MLOps workflow.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: MLOps 工作流程。
- en: 2.1\. Business problem
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.1\. 业务问题
- en: The problem addressed in this tutorial is the classification of handwritten
    digits, which is a multi-class classification task. Specifically, given an input
    image of a handwritten digit ranging from 0 to 9, the model is required to identify
    the digit and output its corresponding label.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程中解决的问题是手写数字分类，这是一个多类分类任务。具体而言，给定一个手写数字的输入图像（范围从 0 到 9），模型需要识别数字并输出其对应的标签。
- en: 'The AI canvas comprises the following components: task description, prediction
    (model output), judgement, action, outcome, training, input, feedback, and model
    impact on the problem. For the current problem of handwritten digits classification,
    our AI canvas would be structured and filled as follows:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: AI 画布包含以下组件：任务描述、预测（模型输出）、判断、行动、结果、训练、输入、反馈和模型对问题的影响。对于当前的手写数字分类问题，我们的 AI 画布将按如下方式构建和填写：
- en: '![](../Images/14c63515ad60c27020cf7d5044ed3ac0.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/14c63515ad60c27020cf7d5044ed3ac0.png)'
- en: AI canvas for handwritten digits classification.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 用于手写数字分类的 AI 画布。
- en: 2.2\. Data engineering
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.2\. 数据工程
- en: '![](../Images/eb0feafdbeff33bad8939fa6979fdf71.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/eb0feafdbeff33bad8939fa6979fdf71.png)'
- en: Data engineering
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 数据工程
- en: 'Data engineering encompasses various tasks, such as data ingestion, exploration
    and validation, cleaning, labeling, and splitting. In this project, we performed
    the following data engineering tasks:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 数据工程涵盖了各种任务，如数据摄取、探索和验证、清理、标注和拆分。在这个项目中，我们执行了以下数据工程任务：
- en: '**Data ingestion**: We downloaded the MNIST dataset in its original format
    from its [official website](http://yann.lecun.com/exdb/mnist/) and converted it
    to a CSV file.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据摄取：** 我们从其[官方网站](http://yann.lecun.com/exdb/mnist/)下载了 MNIST 数据集的原始格式，并将其转换为
    CSV 文件。'
- en: '**Data exploration and validation:** We visualized some images from the dataset
    and displayed some insights.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据探索和验证：** 我们可视化了一些数据集中的图像，并展示了一些洞见。'
- en: '**Data cleaning:** The dataset was already clean and did not require any further
    cleaning.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据清理：** 数据集已经很干净，无需进一步清理。'
- en: '**Data labeling:** The dataset was already labeled, so no additional labeling
    was necessary.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据标注：** 数据集已经标注完毕，因此不需要额外的标注。'
- en: '**Data splitting:** The dataset was already split into training and test sets.
    We will extract the validation set from the training set later.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据拆分：** 数据集已经被拆分为训练集和测试集。我们将从训练集中提取验证集。'
- en: It’s worth noting that this project involves a relatively simple data engineering
    process, as the dataset was already prepared and processed. However, we will explore
    more complex examples in future articles.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，这个项目涉及的相对简单的数据工程过程，因为数据集已经准备和处理好了。然而，我们将在未来的文章中探讨更复杂的例子。
- en: 2.3\. Machine learning model engineering
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.3\. 机器学习模型工程
- en: '![](../Images/1061df7ede18794545ff5f8f83bf832d.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1061df7ede18794545ff5f8f83bf832d.png)'
- en: Machine Learning model engineering
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习模型工程
- en: 'Machine learning model engineering is the third step in MLOps workflow. It
    involves various tasks, such as model training, evaluation, testing, and packaging.
    In this project, we performed the following ML model engineering tasks:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习模型工程是 MLOps 工作流程中的第三步。它包括各种任务，如模型训练、评估、测试和打包。在这个项目中，我们执行了以下机器学习模型工程任务：
- en: '**Model training**: For feature engineering, we used data scaling (to scale
    the pixels to the range of [0,1]), data reshaping (to represent the image as a
    1D vector or 2D matrix), and data encoding (one-hot encoding). For model engineering,
    we implemented two different types of models and applied hyperparameter tuning.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型训练**：在特征工程中，我们使用了数据缩放（将像素缩放到[0,1]范围内）、数据重塑（将图像表示为1D向量或2D矩阵）和数据编码（独热编码）。在模型工程中，我们实现了两种不同类型的模型并应用了超参数调优。'
- en: '**Model evaluation**: In addition to accuracy, we used other evaluation metrics
    such as recall, precision, and F1 score to ensure that the model meets the business
    objectives (outcomes) described in the AI canvas.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型评估**：除了准确率，我们还使用了召回率、精确度和F1分数等其他评估指标，以确保模型符合AI画布中描述的业务目标（结果）。'
- en: '**Model testing**: After evaluating the model, we tested it on two different
    types of data: the first type is the test set of the MNIST dataset, and the second
    type is some handwritten digit images generated from the application.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型测试**：在评估模型之后，我们在两种不同类型的数据上进行了测试：第一种是MNIST数据集的测试集，第二种是从应用程序生成的一些手写数字图像。'
- en: '**Model packaging and versioning** will be discussed in the next tutorial,
    where we will cover the machine learning pipeline in more detail.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型打包和版本控制**将在下一教程中讨论，我们将更详细地介绍机器学习管道。'
- en: If you want more programming details, you can always check out [my previous
    tutorial](https://medium.com/towards-data-science/a-brief-introduction-to-neural-networks-a-classification-problem-43e68c770081#ebb1).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多编程细节，可以随时查看[我之前的教程](https://medium.com/towards-data-science/a-brief-introduction-to-neural-networks-a-classification-problem-43e68c770081#ebb1)。
- en: 2.4\. Code engineering
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.4\. 代码工程
- en: '![](../Images/5fef6bbf3624758abe9cce4d1bed8474.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5fef6bbf3624758abe9cce4d1bed8474.png)'
- en: Code engineering
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 代码工程
- en: In the code engineering step, the selected model is deployed to the application
    and its performance needs to be monitored and logged. Before deploying the model,
    the serving pattern and deployment strategy need to be thoughtfully selected.
    After deployment, its behavior needs to be managed and maintained to ensure it
    is functioning properly. Although this part is not elaborated in this tutorial,
    I plan to dedicate an entire article to it in the near future.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在代码工程步骤中，选择的模型会被部署到应用中，其性能需要被监控和记录。在部署模型之前，需要仔细选择服务模式和部署策略。部署后，需要管理和维护其行为，以确保其正常运行。尽管这一部分在本教程中没有详细说明，但我计划在不久的将来专门写一篇文章。
- en: 3\. Project structure
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 项目结构
- en: Now that we have highlighted the different MLOps steps that we applied in the
    handwritten digits classification, let’s move on to structuring the project to
    meet the project need while keeping these steps in mind. To do this, I will first
    present a well-known project structures, then I will present my project structure
    template for MLOps. This template will be updated later as we add more components.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经突出展示了在手写数字分类中应用的不同MLOps步骤，接下来让我们着手结构化项目，以满足项目需求，同时考虑这些步骤。为此，我将首先介绍一个著名的项目结构，然后展示我的MLOps项目结构模板。该模板将在我们添加更多组件时进行更新。
- en: 'But why is it important to properly structure your machine learning projects?
    Well, there are several benefits:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 但为什么正确结构化你的机器学习项目很重要呢？好吧，有几个好处：
- en: '**Good transparency:** An organized project is easier to understand, not only
    for you but also for others.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**良好的透明度：** 组织有序的项目不仅对你自己，而且对他人也更易于理解。'
- en: '**Simple maintenance:** A well-structured project is easier to maintain and
    update, saving you time and effort.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**简单的维护：** 结构良好的项目更易于维护和更新，从而节省时间和精力。'
- en: '**Improved efficiency:** A clear plan reduces time wasted and minimizes the
    risk of getting sidetracked or losing track of important information.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**提高效率：** 清晰的计划减少了浪费的时间，最小化了偏离方向或丢失重要信息的风险。'
- en: '**Good reproducibility and reusability:** A good project structure ensures
    that project results can be easily reproduced and its components can be reusable.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**良好的可复现性和可重用性：** 一个良好的项目结构确保项目结果可以轻松复现，并且其组件可以重用。'
- en: '**Easy collaboration:** When a project is organized in a clear and logical
    way, it becomes easier for others to understand and contribute.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**便捷的协作：** 当项目组织得清晰且逻辑性强时，其他人更容易理解和参与。'
- en: In summary, properly structuring your machine learning project can lead to greater
    transparency, efficiency, maintainability, and collaboration.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，正确构建机器学习项目的结构可以带来更大的透明度、效率、可维护性和协作。
- en: 3.1\. Cookiecutter Data Science
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.1. Cookiecutter 数据科学
- en: As mentioned earlier in this article, before writing any lines of code, the
    first thing we need to do is define the project structure. This can be accomplished
    by using a project structure template. Templates can be the company template established
    to respond to company/project needs, a publicly available template that a group
    of people or an individual has created and published for others to use, or your
    own custom template that you feel comfortable using.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 正如本文之前提到的，在编写任何代码之前，我们首先需要定义项目结构。这可以通过使用项目结构模板来实现。模板可以是公司为响应公司/项目需求而制定的公司模板，也可以是一个团体或个人创建并发布的公共模板，或者是您自己感觉舒适的自定义模板。
- en: 'One of the most famous project structure in the field is the [Cookiecutter
    Data Science](https://drivendata.github.io/cookiecutter-data-science/) which is:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在该领域最著名的项目结构之一是[Cookiecutter 数据科学](https://drivendata.github.io/cookiecutter-data-science/)，其结构如下：
- en: a logical, reasonably standardized, but flexible project structure for doing
    and sharing data science work.
  id: totrans-82
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一种逻辑合理、标准化但灵活的项目结构，用于进行和共享数据科学工作。
- en: 'You can find the project structure of this template below, as well as a description
    of each file:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在下面找到此模板的项目结构，以及每个文件的描述：
- en: '![](../Images/b09267875fcb85c7e64eeb1aec1ce975.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b09267875fcb85c7e64eeb1aec1ce975.png)'
- en: 4\. MLOps project structure
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4. MLOps 项目结构
- en: Now that we have explained how the different steps of MLOps workflow are executed,
    let’s define a project structure template that aligns with the MLOps workflow.
    The [Cookiecutter MLOps](https://github.com/Chim-SO/cookiecutter-mlops) template
    is based on the Cookiecutter Data Science template we presented earlier. Like
    Cookiecutter Data Science, my Cookiecutter MLOps template includes the LICENSE,
    README, Makefile and requirements files; and docs, models, notebooks, references,
    reports, visualization and source folders. However, an additional folder (configs)
    has been added and the source and the visualization folders have been enhanced.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经解释了 MLOps 工作流程的不同步骤是如何执行的，让我们定义一个与 MLOps 工作流程对齐的项目结构模板。[Cookiecutter MLOps](https://github.com/Chim-SO/cookiecutter-mlops)
    模板基于我们之前介绍的 Cookiecutter 数据科学模板。与 Cookiecutter 数据科学类似，我的 Cookiecutter MLOps 模板包括
    LICENSE、README、Makefile 和 requirements 文件；以及 docs、models、notebooks、references、reports、visualization
    和 source 文件夹。然而，新增了一个文件夹 (configs)，并且 source 和 visualization 文件夹得到了增强。
- en: 'The MLOps project structure template has the following structure:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: MLOps 项目结构模板具有以下结构：
- en: '[PRE1]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The **configs** folder contains all the configuration files, such as model hyperparameters.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**configs** 文件夹包含所有配置文件，例如模型超参数。'
- en: 'The **data** folder (the sub-folder of src) includes the following files:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**data** 文件夹（src的子文件夹）包括以下文件：'
- en: 'ingestion.py: used to gather the data. If you need to create backups, protect
    private information, or create a metadata catalog, it’s best to do it here.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'ingestion.py: 用于收集数据。如果需要创建备份、保护私人信息或创建元数据目录，最好在这里完成。'
- en: 'cleaning.py: used to clean the data by reducing outliers/noise, handling missing
    values, etc.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'cleaning.py: 用于通过减少离群值/噪声、处理缺失值等来清理数据。'
- en: 'labeling.py: used to label the data if necessary.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'labeling.py: 如果需要，使用该文件对数据进行标注。'
- en: 'splitting.py: used to split the data into test and train sets.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'splitting.py: 用于将数据分为测试集和训练集。'
- en: 'validation.py: used to validate the data (to ensure it is ready for training).'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'validation.py: 用于验证数据（以确保其准备好进行训练）。'
- en: 'build_features.py: this file has been moved to this folder because building
    features means organizing your dataset into a specific structure.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'build_features.py: 该文件已移动到此文件夹，因为构建特征意味着将数据集组织成特定结构。'
- en: 'In the **models** folder (the sub-folder of src), each model’s scripts are
    organized in the model’s folder and include:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在 **models** 文件夹（src 的子文件夹）中，每个模型的脚本都在模型的文件夹中组织，包括：
- en: 'model.py: used to define the model architecture.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'model.py: 用于定义模型架构。'
- en: 'dataloader.py: used to load the data to be fed to the model.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'dataloader.py: 用于加载数据，以供模型使用。'
- en: 'preprocessing.py: used to preprocess the data before feeding it to the model.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'preprocessing.py: 用于在将数据输入模型之前进行预处理。'
- en: 'train.py: used to train the model.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'train.py: 用于训练模型。'
- en: 'hyperparameters_tuning.py: used to tune the model and/or the training hyperparameters.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'hyperparameters_tuning.py: 用于调整模型和/或训练超参数。'
- en: 'predict.py: used to make predictions on randomimages (not from the dataset).'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: predict.py：用于对随机图像进行预测（不是来自数据集）。
- en: 'The **visualization** folder includes the following:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '**可视化** 文件夹包括以下内容：'
- en: 'exploration.py: this file includes functions used to visualize the data during
    the data engineering process.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: exploration.py：此文件包括在数据工程过程中用于可视化数据的函数。
- en: 'evaluation.py: this file includes functions used to visualize the training
    results.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: evaluation.py：此文件包括用于可视化训练结果的函数。
- en: 'This was the MLOps template and there are some important notes to consider:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 MLOps 模板，有一些重要的注意事项需要考虑：
- en: This is a basic template, so some files and folders can be removed or added
    based on your project requirements.
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是一个基本模板，因此根据你的项目需求，可以删除或添加一些文件和文件夹。
- en: Some preprocessing functions can be used across all models, so it’s possible
    to create a single preprocessing file and move it to the data folder to avoid
    duplicating functions. However, it’s recommended to keep the preprocessing file
    separate to improve the model’s reusability and prevent potential problems in
    the future.
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些预处理函数可以在所有模型中使用，因此可以创建一个单独的预处理文件，并将其移动到数据文件夹中，以避免函数重复。然而，建议将预处理文件分开，以提高模型的可重用性，并防止未来潜在的问题。
- en: In the predict script, it’s assumed that the data is coming from an application
    rather than the dataset, so additional preprocessing steps may be required.
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在预测脚本中，假设数据来自应用程序而不是数据集，因此可能需要额外的预处理步骤。
- en: 4.1\. Starting a new MLOps project
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.1\. 启动一个新的 MLOps 项目
- en: 'If you want to use this template to start your machine learning project, you
    can either use the [GitHub template](https://github.com/Chim-SO/mlops-template)
    or use the [Cookiecutter template](https://github.com/Chim-SO/cookiecutter-mlops),
    as follows:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想使用此模板启动你的机器学习项目，你可以使用[GitHub 模板](https://github.com/Chim-SO/mlops-template)或使用[Cookiecutter
    模板](https://github.com/Chim-SO/cookiecutter-mlops)，如下所示：
- en: 'To use the **GitHub template**, first, you need to visit the template page
    here. Then, click on the green button ‘Use this template’, and you will have to
    choose whether to ‘Create a new repository’ or to ‘Open in a codespace’:'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要使用**GitHub 模板**，首先，你需要访问这里的模板页面。然后，点击绿色的按钮‘使用此模板’，你将需要选择是‘创建一个新仓库’还是‘在代码空间中打开’：
- en: '![](../Images/06116b251e11eb2f28ff3a5d5bea5f11.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/06116b251e11eb2f28ff3a5d5bea5f11.png)'
- en: The Github template
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub 模板
- en: 'To use the **Cookiecutter template**, you first need to install C[ookiecutter](https://cookiecutter.readthedocs.io/en/latest/installation.html#install-cookiecutter)
    using:'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要使用**Cookiecutter 模板**，你首先需要安装 C[ookiecutter](https://cookiecutter.readthedocs.io/en/latest/installation.html#install-cookiecutter)，使用：
- en: '[PRE2]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'or:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 或者：
- en: '[PRE3]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Then run this command at the command line:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 然后在命令行中运行此命令：
- en: '[PRE4]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Here is an example configuration for the handwritten digit classification,
    which you can customize by filling in the required parameters. Pressing the Enter
    key will keep the default values for any parameters you do not wish to change:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是手写数字分类的示例配置，你可以通过填写所需的参数来进行自定义。按下 Enter 键将保留你不想更改的任何参数的默认值：
- en: '[PRE5]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 4.2\. Using MLOps project template for handwritten digits classification
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.2\. 使用 MLOps 项目模板进行手写数字分类
- en: 'In the second section, we discussed the different steps involved in the MLOps
    workflow for the handwritten digits classification task. Implementing that pipeline
    using the MLOps template will result in the following project structure:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二部分，我们讨论了手写数字分类任务中 MLOps 工作流的不同步骤。使用 MLOps 模板实现该管道将导致以下项目结构：
- en: '[PRE6]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Since we have already described the contents of each file and folder, I will
    now highlight the most important steps that can be a little ambiguous.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已经描述了每个文件和文件夹的内容，现在我将重点介绍一些可能有点模糊的最重要步骤。
- en: The `configs` folder contains two configuration files, one for each model. For
    instance, the `singleoutput.yaml` file includes model configurations, training
    parameters, logging parameters (which will be discussed in the next tutorials),
    and parameters for model tuning.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`configs` 文件夹包含两个配置文件，每个模型一个。例如，`singleoutput.yaml` 文件包括模型配置、训练参数、日志参数（将在下一个教程中讨论）以及模型调优参数。'
- en: '[PRE7]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Using the `src/data/ingestion.py`, the data is first downloaded and stored in
    `data/raw/`. Then it is transformed into a record structure using `src/data/build_features.py`
    and stored directly to `data/processed`.
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`src/data/ingestion.py`，数据首先被下载并存储在`data/raw/`中。然后，使用`src/data/build_features.py`将其转换为记录结构，并直接存储到`data/processed`中。
- en: In the `data/external` folder, I have added a `test` sub-folder that includes
    some random images of handwritten digits. These images will be used by the `predict.py`
    script for testing the trained model's predictions on new, unseen data.
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`data/external`文件夹中，我添加了一个`test`子文件夹，其中包括一些随机的手写数字图像。这些图像将由`predict.py`脚本用于测试训练模型对新、未见数据的预测。
- en: '![](../Images/1a421629c47c746eae990d041c02f252.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1a421629c47c746eae990d041c02f252.png)'
- en: The data/interim folder is empty for this example since there is no intermediate
    step in the data processing pipeline.
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于这个示例，data/interim文件夹是空的，因为数据处理管道中没有中间步骤。
- en: As the data is a classic dataset, instead of duplicating the data loader for
    each model, it is moved from the models folder to `src/data/`.
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于数据集是经典数据集，数据加载器被移动到了`src/data/`，而不是为每个模型重复使用。
- en: The `src/models/<model>/predict.py` script outlines the pipeline to predict
    the class of a random image. Unlike the preprocessing pipeline used to train the
    model, which involves resizing and scaling, the prediction pipeline starts by
    trimming the image, inverting the pixels, and then resizing and scaling it.
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`src/models/<model>/predict.py`脚本概述了预测随机图像类别的管道。与用于训练模型的预处理管道（包括调整大小和缩放）不同，预测管道首先对图像进行裁剪，反转像素，然后调整大小和缩放。'
- en: '![](../Images/6a293a711bd63c6886c3e95d04e7506c.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6a293a711bd63c6886c3e95d04e7506c.png)'
- en: Data preprocessing pipeline of random images.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 随机图像的数据预处理管道。
- en: The `MLproject` file and the `mlruns` folder are utilized by the MLflow library,
    which is a platform used to manage the machine learning pipeline. The next article
    will cover this topic in detail, so if it is new to you, don’t worry.
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MLproject`文件和`mlruns`文件夹由MLflow库使用，MLflow是一个用于管理机器学习管道的平台。下一篇文章将详细介绍这个主题，所以如果你不熟悉它，也不用担心。'
- en: 4.3\. How to run your project?
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.3\. 如何运行你的项目？
- en: 'There are several ways to execute a Python project: interactive runs (executing
    it line by line), batch runs (scheduling a cron job or using a job scheduler),
    containerized run (using Docker or Kubernetes), automated runs (using MLflow for
    example), or distributed runs (using a distributed computing framework like Apache
    Spark). As this is not the main subject of this article, let’s use the easiest
    way by executing these commands from the project directory:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 执行Python项目有几种方法：交互式运行（逐行执行），批处理运行（安排定时任务或使用作业调度器），容器化运行（使用Docker或Kubernetes），自动化运行（例如使用MLflow），或分布式运行（使用像Apache
    Spark这样的分布式计算框架）。由于这不是本文的主要内容，我们将使用最简单的方法：从项目目录执行这些命令。
- en: '[PRE8]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 5\. Conclusion
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5\. 结论
- en: In this article, we have provided an MLOps project structure template and applied
    it for the handwritten digit classification problem. We demonstrated how the MLOps
    workflow is applied to solve this problem and drew up a project structure template
    that you can use as a [Cookiecutter project](https://github.com/Chim-SO/cookiecutter-mlops/tree/master/%7B%7B%20cookiecutter.repo_name%20%7D%7D)
    or a [Github template](https://github.com/Chim-SO/mlops-template). If you find
    the template helpful, please give it a star on GitHub so that others can discover
    it. If you are new to MLOps, you can read my [beginner-friendly tutorial](/a-beginner-friendly-introduction-to-mlops-95282f25325c#aabc).
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们提供了一个MLOps项目结构模板，并应用于手写数字分类问题。我们展示了如何将MLOps工作流应用于解决这个问题，并制定了一个你可以作为[Cookiecutter
    项目](https://github.com/Chim-SO/cookiecutter-mlops/tree/master/%7B%7B%20cookiecutter.repo_name%20%7D%7D)或[GitHub
    模板](https://github.com/Chim-SO/mlops-template)使用的项目结构模板。如果你觉得这个模板有帮助，请在GitHub上给它一个星标，以便其他人也能发现。如果你是MLOps的新手，可以阅读我的[初学者友好教程](/a-beginner-friendly-introduction-to-mlops-95282f25325c#aabc)。
- en: In the next articles, we will continue with this example to cover all the MLOps
    workflow and principles. I will be writing more tutorials on MLOps and its various
    technologies with examples, so stay tuned.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的文章中，我们将继续使用这个示例来覆盖所有MLOps工作流和原则。我会写更多关于MLOps及其各种技术的教程，并提供示例，请继续关注。
- en: Thanks for reading this article. You can find the example project in my [GitHub
    profile](https://github.com/Chim-SO?tab=repositories). If you have any questions
    or suggestions, feel free to leave a comment.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读这篇文章。你可以在我的[GitHub 个人资料](https://github.com/Chim-SO?tab=repositories)中找到示例项目。如果你有任何问题或建议，请随时留言。
- en: Image credits
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图像来源
- en: All images and figures in this article whose source is not mentioned in the
    caption are by the author.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 文章中所有未在标题中提到来源的图像和图表均为作者提供。
