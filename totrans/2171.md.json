["```py\n# Load libraries\n\nimport pandas as pd\nimport numpy as np\n\nfrom datetime import date, timedelta\n\npath = r\"Your_Directory_Path\\Data.xlsx\"\ndata = pd.read_excel(path)\n```", "```py\ncollate = []\n\nfor j in range(len(data)):\n\n    start_date = data['Leave From Date'][j]\n    end_date = data['Leave To Date'][j] \n\n    date_range = pd.date_range(start = start_date, end = end_date, freq = 'D')\n\n    collate.append(date_range)\n\ndf_date = pd.DataFrame(collate)\n```", "```py\n collate = []\n\nfor j in range(len(data)):\n\n    start_date = data['Leave From Date'][j]\n    end_date = data['Leave To Date'][j] \n\n    date_range = pd.date_range(start = start_date, end = end_date, freq = 'D')\n\n    ## Get business dates only\n    work_dates = date_range[date_range.weekday < 5]\n\n    ## Apply a date range filter if you wish\n\n    #from_date = pd.to_datetime('2023-01-01')\n    #to_date = pd.to_datetime('2023-06-30')\n    #work_dates = work_dates[(work_dates >= from_date) & (work_dates <= to_date)]\n\n    collate.append(work_dates)\n\ndf_date = pd.DataFrame(collate) \n```", "```py\n## Add back employee identifier\n\ndf_concat = pd.concat([pd.DataFrame(data['Employee']), df_date], axis = 1) \\\n                           .sort_values(['Employee']).reset_index(drop = True)\n\n## Apply .melt() over employee identifier, and remove NaT values\ndf_melt = df_concat.melt(id_vars = ['Employee'], var_name = 'Index', value_name = 'Date')\ndf_melt.sort_values(['Employee']).dropna().reset_index(drop = True)\n```"]