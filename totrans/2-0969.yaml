- en: Geospatial Data Analysis with OSMnx
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/geospatial-data-analysis-with-osmnx-8a300d77b592](https://towardsdatascience.com/geospatial-data-analysis-with-osmnx-8a300d77b592)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Learn how to download, analyze and visualize OpenStreetMap data with Python
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://eugenia-anello.medium.com/?source=post_page-----8a300d77b592--------------------------------)[![Eugenia
    Anello](../Images/537f444252cdc60709e7a19e37734c7b.png)](https://eugenia-anello.medium.com/?source=post_page-----8a300d77b592--------------------------------)[](https://towardsdatascience.com/?source=post_page-----8a300d77b592--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----8a300d77b592--------------------------------)
    [Eugenia Anello](https://eugenia-anello.medium.com/?source=post_page-----8a300d77b592--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----8a300d77b592--------------------------------)
    ·6 min read·Jun 16, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7dad29578270e9b12624d8eb686a6fd3.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
- en: Photo by [Denys Nevozhai](https://unsplash.com/@dnevozhai) on [Unsplash](https://unsplash.com/photos/7nrsVjvALnA)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: '*This is the fourth article of the series regarding Geospatial Data Analysis:*'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '[*Geospatial Data Analysis using QGIS*](/a-practical-introduction-to-geospatial-data-analysis-using-qgis-a6f82105b30e?sk=e6251697a54bc62fa33bc6a9a81258a7)'
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Guide for getting started with OpenStreetMap*](/a-comprehensive-guide-for-getting-started-with-openstreetmap-e92dff95fc80?sk=e0981a4fed7f4cfefa9a58477a863ea6)'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Geospatial Data Analysis with GeoPandas*](/geospatial-data-analysis-with-geopandas-876cb72721cb?sk=042a0f2fb834cb08ffd0f74eb856e7e1)'
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Geospatial Data Analysis with OSMnx (this post)*'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Geocoding for Data Scientists*](https://www.datacamp.com/tutorial/geocoding-for-data-scientists)'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[*Geospatial Data Analysis with Geemap*](https://www.kdnuggets.com/geospatial-data-analysis-with-geemap)'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the previous tutorials, I covered various aspects of Geospatial Data Analysis.
    I have started by showing practical examples of geospatial data without using
    any code at all to make you understand deeply the concepts. Geospatial data analysis
    is a ubiquitous field addressed to work with a special type of data, geospatial
    data.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: It consists of adding the location to non-geographic data. It’s full of examples.
    You can just think of cafes, hospitals, roads, rivers, satellite imaginaries and
    much more. Even when you search for a place with Google Maps, you are interacting
    with geospatial data.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: This time I am going to focus on downloading, visualising and analysing data
    from OpenStreetMap, which is the biggest free and editable geographic database,
    where there are volunteers from all over the world that collaborate in this huge
    project. All this tutorial is possible thanks to a Python package, called OSMnx.
    Let’s get started!
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: '**Table of contents:**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: '**Introduction to OSMNx**'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Download and Visualize OSM data**'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Convert graph to GeoDataframe**'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Extract Points of Interest**'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Find the shortest route**'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Introduction to OSMNx**'
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: OSMnx is a library for downloading, analyzing and visualizing network data from
    OpenStreetMap. It depends on two libraries, [NetworkX](https://networkx.org/)
    and [GeoPandas](https://geopandas.org/en/stable/). In particular, it exploits
    the `graph` module from the NetworkX library to retrieve network data.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: 'Moreover, it allows us to interact with two OpenStreetMap APIs:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: '[**Nomatism**](https://nominatim.org/) for geocoding, which consists in finding
    locations by name and address.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**Overpass API**](https://wiki.openstreetmap.org/wiki/Overpass_API) to extract
    points of interest, like highways, schools, and parks.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Download and Visualize OSM data**'
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Instead of manually downloading the data from the website or from Geofabrik,
    we can directly do it with OSMnx.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we need to import four libraries, that will be used later in the tutorial:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In addition to OSMnx and matplotlib, we are going to exploit **folium**, which
    is well-known for its capacity on creating an interactive leaflet map, and **contextily**
    to add the background map. This aspect can be very important to obtain realistic
    maps.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: Like the other time, we read and visualize the OSM street network data of Bologna,
    one of the biggest cities in Italy.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/d83d8634904aea63069af3ebd25cb134.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
- en: Black-and-white visualization of Bologna
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: 'From the black-and-white visualization, we can observe the points, that represent
    the nodes, and the lines, that portray the lines. Compared to OpenStreetMap’s
    website, it can seem very static and basic. Folium comes to rescue us with its
    strong and interpretable maps:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/690c6f56e31751195b6008415e8cee32.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
- en: Map of Bologna obtained with Folium
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: This is much better, don’t you think? The bright colours and the possibility
    of interaction with the map are characteristics that are crucial when we use Google
    Maps to go to unknown places.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: If you check better the OpenStreetMap website, you can notice there is the Standard
    layer as default. Besides the Standard layer, there are other layers, such as
    Cycle Map and Transport Map. It’s incredible how we can exploit different layers
    depending on our purposes.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b915493d7967d14bc9b3196cef8ee42e.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
- en: 'If we are passionate about bikes, we would be more interested in the Cycle
    Map. This is possible always with one line of code:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We are taking into consideration the standard graph in the next sections.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: Convert graph to GeoDataframe
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Dealing with graphs isn’t intuitive as working with Dataframes and GeoDataframes.
    For this reason, we might want to convert the graph to a GeoDataframe:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/d4c86ffb0ab82edda44131be8c9bef3e.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
- en: '[PRE5]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/88526562cc4c56348be0124a12ff992f.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
- en: You can notice that we have obtained two GeoDataframes, one for nodes and one
    for edges. It’s clear if you take a look at the geometry. The area geodataframe
    has only a pair of coordinates, latitude and longitude, while there are two pairs
    of coordinates in the geodataframe containing edges.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你会发现我们得到了两个 GeoDataframe，一个用于节点，一个用于边。查看几何形状就会很清楚。区域 geodataframe 只有一对坐标，即纬度和经度，而包含边的
    geodataframe 中有两对坐标。
- en: '**Extract Points of Interest**'
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**提取兴趣点**'
- en: When working on data science projects, we try to add information to our dataset
    by searching open data on the Internet. From OSM data, it’s possible to extract
    **Points of Interest** (POI), which are places we might find interesting depending
    on the purpose of our analysis. Examples are restaurants, churches, museums, and
    parks.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行数据科学项目时，我们尝试通过在互联网上搜索开放数据来为数据集添加信息。从 OSM 数据中，可以提取 **兴趣点**（POI），这些是根据我们的分析目的我们可能会觉得有趣的地方。示例包括餐馆、教堂、博物馆和公园。
- en: For example, we would like to analyze the traffic in Bologna to optimize and
    cut the cost of transportation. In this context, it would be useful to know the
    highways, gas stations, parking garages, and other places that are linked to the
    possible bottleneck.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们想要分析博洛尼亚的交通情况，以优化和减少运输成本。在这种情况下，了解高速公路、加油站、停车场以及其他可能成为瓶颈的地方将非常有用。
- en: Let’s take all the gas stations in the city. This is possible by specifying
    [fuel](https://wiki.openstreetmap.org/wiki/Tag:amenity=fuel?uselang=en) as the
    value of the amenity key.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看城市中的所有加油站。这可以通过将 [燃料](https://wiki.openstreetmap.org/wiki/Tag:amenity=fuel?uselang=en)
    作为 amenity 键的值来实现。
- en: '[PRE6]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/4bcdadda327c18186952bd4386838478.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4bcdadda327c18186952bd4386838478.png)'
- en: Since we have extracted all the gas stations, it would be more useful to understand
    where they are located by visualizing the map. Moreover, we can add the base map
    to contextualize better our results.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已经提取了所有加油站，通过可视化地图来理解它们的位置会更有用。此外，我们可以添加基础地图来更好地 contextualize 我们的结果。
- en: '[PRE7]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../Images/bdcb8dac2b1ba5e053b4e59ab23021b1.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bdcb8dac2b1ba5e053b4e59ab23021b1.png)'
- en: That’s great! We can notice that most of the fuel stations are concentrated
    in the periphery. Furthermore, we can distinguish different groups of service
    stations, that should be taken into account when measuring the traffic outside
    the center.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！我们可以注意到大多数加油站集中在城市边缘。此外，我们可以区分不同组的服务站，这些在测量中心外交通时需要考虑。
- en: '**Find the shortest route**'
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**找到最短路线**'
- en: Another helpful functionality of the OSMnx library is the possibility to calculate
    the shortest path between two points.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: OSMnx 库的另一个有用功能是能够计算两个点之间的最短路径。
- en: '[PRE8]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This is possible with the shortest_path() method that uses by default the **Dijkstra
    algorithm** to compute the path between the source node and the target node.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这是通过 shortest_path() 方法实现的，该方法默认使用 **Dijkstra 算法** 来计算源节点和目标节点之间的路径。
- en: '[PRE9]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'We can also try to visualize both the graph and the shortest path in a unique
    map:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以尝试在同一地图上可视化图形和最短路径：
- en: '[PRE10]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![](../Images/e789fc218f054bedee2eac0cb0676cc0.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e789fc218f054bedee2eac0cb0676cc0.png)'
- en: Et voilà! It’s like we have used Google Maps to find the way, but instead, we
    exploited the functionality of the OSMnx library to look for it.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 看吧！这就像我们使用了 Google Maps 来寻找路线一样，不过我们利用了 OSMnx 库的功能来进行查找。
- en: 'Final thoughts:'
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 最后的想法：
- en: This was a guide to let you know how to work with OSM data using Python. I have
    found that OSMnx is the most complete Python library to deal with OpenStreetMap
    data. Of course, it’s more suitable for exploring smaller places, like cities.
    In the case there are bigger datasets, it’s better to use more specialized software,
    like QGIS, to visualize them. Did you try other libraries to work with OSM data?
    Please comment on the story if you know it. Check out the code [here](https://jovian.com/eugeniaring/geospatial-osm-osmnx).
    Thanks for reading! Have a nice day!
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一份指南，让你了解如何使用 Python 操作 OSM 数据。我发现 OSMnx 是处理 OpenStreetMap 数据的最完整的 Python
    库。当然，它更适合探索较小的地方，比如城市。如果数据集较大，最好使用更专业的软件，比如 QGIS 来进行可视化。如果你尝试过其他库来处理 OSM 数据，请在评论中分享。如果你想查看代码，可以点击
    [这里](https://jovian.com/eugeniaring/geospatial-osm-osmnx)。感谢阅读！祝你有美好的一天！
- en: '**Useful Resources:**'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**有用的资源：**'
- en: '[OSMnx Documentation](https://osmnx.readthedocs.io/en/stable/)'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[OSMnx 文档](https://osmnx.readthedocs.io/en/stable/)'
- en: '[Points of Interest](https://wiki.openstreetmap.org/wiki/Points_of_interest)'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[兴趣点](https://wiki.openstreetmap.org/wiki/Points_of_interest)'
- en: '[OSMnx: Python for Street Networks](https://geoffboeing.com/2016/11/osmnx-python-street-networks/)'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Automating GIS processes](https://autogis-site.readthedocs.io/en/latest/lessons/lesson-6/network-analysis.html)'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Did you like my article? [*Become a member*](https://eugenia-anello.medium.com/membership)
    *and get unlimited access to new data science posts every day! It’s an indirect
    way of supporting me without any extra cost to you. If you are already a member,*
    [*subscribe*](https://eugenia-anello.medium.com/subscribe) *to get emails whenever
    I publish new data science and Python guides!*
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
