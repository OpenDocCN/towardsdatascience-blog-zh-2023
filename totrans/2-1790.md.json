["```py\n#include <WiFi.h>\n#include <WebServer.h>\n#include <Wire.h>\n#include \"SparkFun_VL53L1X.h\"\n\n// Replace this with the WiFi's SSID\nconst char* ssid     = \"SSID\";\n// Replace this with the WiFi password\nconst char* password = \"PASSWORD\";\n\n// Listening on port 80\nWebServer server(80);\n\n#define SHUTDOWN_PIN 2\n#define INTERRUPT_PIN 3\n\nSFEVL53L1X distanceSensor(Wire, SHUTDOWN_PIN, INTERRUPT_PIN);\n\nvoid setup() {\n  Serial.begin(115200);\n  // Connect to WiFi\n  WiFi.begin(ssid, password);\n\n  while (WiFi.status() != WL_CONNECTED) {\n    delay(1000);\n    Serial.println(\"Connecting to WiFi...\");\n  }\n\n  Serial.println(\"Connected to WiFi\");\n\n  // Set the distance sensor\n  Wire.begin();\n  if (distanceSensor.init() == false) {\n    Serial.println(\"Distance sensor is online.\");\n  }\n\n  server.on(\"/distance\", [](){\n    // Measure the distance\n    distanceSensor.startRanging();\n    int distance = distanceSensor.getDistance(); // Distance is in mm.\n    distanceSensor.stopRanging();\n    server.send(200, \"text/plain\", String(distance));\n  });\n\n  // GET /ping is just a health check\n  server.on(\"/ping\", [](){\n    server.send(200, \"text/plain\", \"ok\");\n  });\n\n  server.begin();\n  Serial.println(\"HTTP server started\");\n}\n\nvoid loop() {\n  server.handleClient();\n}\n```", "```py\nsensor:\n  - platform: rest\n      name: Desk Distance\n      unique_id: desk_distance\n      unit_of_measurement: \"mm\"\n      resource: [http://192.168.1.XXX/distance](http://192.168.1.XXX/distance)\n```", "```py\ntelegram_bot:\n  - platform: polling\n    api_key: YOUR_API_KEY\n    allowed_chat_ids:\n      - CHAT_ID_1 # your chat_id\n      - CHAT_ID_2 # Optional. You can also add another chat!\n```", "```py\nnotify:\n  - platform: telegram\n    name: NOTIFICATION_NAME\n    chat_id: chat_id\n  - platform: telegram # Optional. Add another telegram platform if you wish to notify another chat.\n    name: NOTIFICATION_NAME_2\n    chat_id: chat_id_2\n```", "```py\nautomation:\n  - alias: \"Desk Distance Alert 45 minutes\"\n      trigger:\n        platform: numeric_state\n        entity_id: sensor.desk_distance\n        below: 900\n        for:\n          minutes: 45\n      action:\n        service: notify.HA_NOTIFICATIONS\n        data:\n          message: \"You've been sitting for 45 minutes. Get up!\"\n```"]