["```py\npip3 install torch==1.13.1\npip3 install transformers==4.30.2\npip3 install pyspark==3.4.2\npip3 install urllib3==1.26.6\n```", "```py\nfrom pyspark.sql import SparkSession, Row\nfrom pyspark.sql.functions import udf\nfrom pyspark.sql.types import StructType, StructField, StringType, LongType\nfrom transformers import AutoTokenizer, AutoModelForSeq2SeqLM\n\n# Create a Spark session\nspark = SparkSession.builder.appName(\"FlanT5Seq2SeqExample\").getOrCreate()\n```", "```py\n# Create an Example Spark DataFrame\nschema = StructType([\n  StructField(\"id\", LongType(), nullable=False),\n  StructField(\"sentence\", StringType(), nullable=False)\n])\n\ndata = [\n  Row(1, \"It is a good test for Spark.\"),\n  Row(2, \"Spark DataFrames are powerful.\"),\n  Row(3, \"LLMs could be very slow.\"),\n  Row(4, \"It is a naive statement.\")\n]\n\ninput_df = spark.createDataFrame(data, schema=schema)\n```", "```py\n# Loading Flan T5 Model and Tokenizer\nmodel = AutoModelForSeq2SeqLM.from_pretrained(\"google/flan-t5-small\")\ntokenizer = AutoTokenizer.from_pretrained(\"google/flan-t5-small\")\n```", "```py\n# Defining the Spark UDF\ndef t5_seq2seq_udf(input_text):\n  prompt = f\"sentiment of the text: {input_text}\"\n  input = tokenizer(prompt, return_tensors=\"pt\")\n  output = model.generate(**input)\n  output_text = tokenizer.decode(output[0], skip_special_tokens=True)\n  return output_text\n```", "```py\nt5_udf = udf(t5_seq2seq_udf, returnType=StringType())\n\nresults_df = input_df.withColumn('output_column', t5_udf(input_df['sentence']))\n\nresults_df.show(truncate=False)\n```", "```py\nfrom pyspark.sql import SparkSession, Row\nfrom pyspark.sql.functions import udf\nfrom pyspark.sql.types import StructType, StructField, StringType, LongType\nfrom transformers import AutoTokenizer, AutoModelForSeq2SeqLM\n\n# Create a Spark session\nspark = SparkSession.builder.appName(\"T5Seq2SeqExample\").getOrCreate()\n\n# Create an Example Spark DataFrame\nschema = StructType([\n  StructField(\"id\", LongType(), nullable=False),\n  StructField(\"sentence\", StringType(), nullable=False)\n])\n\ndata = [\n  Row(1, \"It is a good test for Spark.\"),\n  Row(2, \"Spark DataFrames are powerful.\"),\n  Row(3, \"LLMs could be very slow.\"),\n  Row(4, \"It is a naive statement.\")\n]\n\ninput_df = spark.createDataFrame(data, schema=schema)\n\n# Loading t5 Model and Tokenizer\nmodel = AutoModelForSeq2SeqLM.from_pretrained(\"google/flan-t5-small\")\ntokenizer = AutoTokenizer.from_pretrained(\"google/flan-t5-small\")\n\n# Defining the Spark UDF\ndef t5_seq2seq_udf(input_text):\n  prompt = f\"sentiment of the text: {input_text}\"\n  input = tokenizer(prompt, return_tensors=\"pt\")\n  output = model.generate(**input)\n  output_text = tokenizer.decode(output[0], skip_special_tokens=True)\n  return output_text\n\nt5_udf = udf(t5_seq2seq_udf, returnType=StringType())\n\nresults_df = input_df.withColumn('output_column', t5_udf(input_df['sentence']))\n\nresults_df.show(truncate=False)\n```", "```py\n+---+------------------------------+-------------+                              \n|id |sentence                      |output_column|\n+---+------------------------------+-------------+\n|1  |It is a good test for Spark.  |positive     |\n|2  |Spark DataFrames are powerful.|positive     |\n|3  |LLMs could be very slow.      |negative     |\n|4  |It is a naive statement.      |negative     |\n+---+------------------------------+-------------+\n```"]