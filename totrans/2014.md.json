["```py\n**sku               name                  price   stock** LPTD19HSNH1       Gibson Les Paul        2000       6\n1-014-9763-300    Fender Jazzmaster      1799       3\nIRONMK1KH80BK     BC Rich Ironbird       1099       4\n```", "```py\n**sku               name                 price   stock** LPTD19HSNH1       Gibson Les Paul       2000       4\n1-014-9763-300    Fender Jazzmaster     1700       3\nDSV00ANCH1        Gibson Flying V       2499       1\n```", "```py\n# SQLAlchemy needs a declarative_base when we use declarative models like Guitar\nBase = declarative_base()\n\n# Guitar will be one record in our inventory table\nclass Guitar(Base):\n    __tablename__ = 'inventory'\n    sku: typing.Optional[str] = sa.Column(type_=sa.String, primary_key=True)\n    name: str = sa.Column(type_=sa.String)\n    stock:int = sa.Column(type_=sa.Integer)\n    price: int = sa.Column(type_=sa.Integer)\n\n    def __repr__(self):\n        return f\"<{self.name} (price=${self.price} - stock=#{self.stock}>\"\n\n# Create a database engine (sqlite in this case)\ndbEngine = sa.create_engine(url=\"sqlite:///inventory_db.db\", echo=False)\n\n# Create all tables in the database engine\nBase.metadata.create_all(bind=dbEngine)\n```", "```py\nwith Session(dbEngine) as session:\n    session.add_all([\n        Guitar(sku=\"LPTD19HSNH1\", name=\"Gibson Les Paul\", price=2000, stock=6),\n        Guitar(sku=\"1-014-9763-300\", name=\"Fender Jazzmaster\", price=1799, stock=3),\n        Guitar(sku=\"IRONMK1KH80BK\", name=\"BC Rich Ironbird\", price=1099, stock=4),\n    ])\n    session.commit()\n```", "```py\n**sku               name                  price   stock** LPTD19HSNH1       Gibson Les Paul        2000       6\n1-014-9763-300    Fender Jazzmaster      1799       3\nIRONMK1KH80BK     BC Rich Ironbird       1099       4\n```", "```py\n# Convert the new stock to a list of Guitar objects\nnew_stock:[Guitar] = [\n    Guitar(sku=\"LPTD19HSNH1\", name=\"Gibson Les Paul\", price=2000, stock=4),      # sold 2 les pauls\n    Guitar(sku=\"1-014-9763-300\", name=\"Fender Jazzmaster\", price=1700, stock=3), # lowered price on jazzmaster\n    Guitar(sku=\"DSV00ANCH1\", name=\"Gibson Flying V\", price=2499, stock=1),       # new guitar in stock!\n]\n\n# Use the session and UPSERT using the \"merge\" method\nwith Session(dbEngine) as session:\n    for guitar in new_stock:\n        session.merge(guitar)\n    session.commit()\n```", "```py\n**sku               name                  price   stock** LPTD19HSNH1       Gibson Les Paul        2000       4    << stock decreased by 2\n1-014-9763-300    Fender Jazzmaster      1700       3    << price lowered by $99\nIRONMK1KH80BK     BC Rich Ironbird       1099       4    << no chnages\nDSV00ANCH1        Gibson Flying V        2499       1    << new in stock!\n```"]