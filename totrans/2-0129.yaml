- en: 6 Common Mistakes to Avoid in Data Science Code
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据科学代码中需避免的6个常见错误
- en: 原文：[https://towardsdatascience.com/6-common-mistakes-to-avoid-in-data-science-code-d0fc38f96594](https://towardsdatascience.com/6-common-mistakes-to-avoid-in-data-science-code-d0fc38f96594)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/6-common-mistakes-to-avoid-in-data-science-code-d0fc38f96594](https://towardsdatascience.com/6-common-mistakes-to-avoid-in-data-science-code-d0fc38f96594)
- en: And How to Overcome Them
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 以及如何克服这些问题
- en: '[](https://khuyentran1476.medium.com/?source=post_page-----d0fc38f96594--------------------------------)[![Khuyen
    Tran](../Images/98aa66025ad29b618e875c75f1c400a5.png)](https://khuyentran1476.medium.com/?source=post_page-----d0fc38f96594--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d0fc38f96594--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d0fc38f96594--------------------------------)
    [Khuyen Tran](https://khuyentran1476.medium.com/?source=post_page-----d0fc38f96594--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://khuyentran1476.medium.com/?source=post_page-----d0fc38f96594--------------------------------)[![Khuyen
    Tran](../Images/98aa66025ad29b618e875c75f1c400a5.png)](https://khuyentran1476.medium.com/?source=post_page-----d0fc38f96594--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d0fc38f96594--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d0fc38f96594--------------------------------)
    [Khuyen Tran](https://khuyentran1476.medium.com/?source=post_page-----d0fc38f96594--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d0fc38f96594--------------------------------)
    ·10 min read·Dec 21, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d0fc38f96594--------------------------------)
    ·阅读时间 10 分钟·2023年12月21日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: Motivation
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动机
- en: Data scientists often work in iterative and exploratory environments. Thus,
    there is often a focus on rapid results rather than creating maintainable or scalable
    code.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学家通常在迭代和探索性环境中工作。因此，常常关注快速结果而非创建可维护或可扩展的代码。
- en: 'However, data scientists must avoid writing poor code for the following reasons:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，数据科学家必须避免编写糟糕的代码，原因如下：
- en: '**Reduced code readability:** Badly written code can be difficult to read and
    understand, making it harder for both the original author and other team members
    to maintain or modify the code in the future.'
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**减少代码可读性：** 编写不佳的代码可能难以阅读和理解，使得原作者和其他团队成员在未来维护或修改代码时变得更加困难。'
- en: '**Increased chances of introducing bugs:** Poorly structured or inefficient
    code is more prone to errors, potentially affecting the accuracy of analyses or
    models.'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**增加引入错误的机会：** 结构不良或效率低下的代码更容易出错，可能影响分析或模型的准确性。'
- en: '**Integration challenges:** Badly written code can hinder integration with
    production systems and handovers to other team members, including data engineers
    and machine learning engineers.'
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**集成挑战：** 编写不佳的代码可能会阻碍与生产系统的集成，以及向其他团队成员（包括数据工程师和机器学习工程师）的交接。'
- en: 'To write better code in data science projects, it’s crucial to recognize and
    address common bad practices, which may include:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据科学项目中编写更好的代码至关重要，需要认识和解决常见的糟糕实践，包括：
- en: Excessive use of Jupyter Notebooks
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 过度使用Jupyter Notebooks
- en: Vague variable names
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 模糊的变量名
- en: Redundant code
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 冗余代码
- en: Duplicated code segments
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复的代码段
- en: Frequent use of global variables
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 频繁使用全局变量
- en: Lack of proper code testing
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 缺乏适当的代码测试
- en: '![](../Images/f6f1f09b4af31a6c662ad12786fa6adb.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f6f1f09b4af31a6c662ad12786fa6adb.png)'
- en: Unless otherwise noted, all images are by the author
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 除非另有说明，所有图片均由作者提供
- en: These bad practices make the code less readable, reusable, and maintainable.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这些糟糕的实践使得代码的可读性、可重用性和可维护性降低。
- en: To illustrate these issues, we will examine the [*How I made top 0.3% on a Kaggle
    competition*](https://www.kaggle.com/code/lavanyashukla01/how-i-made-top-0-3-on-a-kaggle-competition#Feature-Engineering)
    notebook that participates in the [*House Prices — Advanced Regression Techniques*](https://www.kaggle.com/competitions/house-prices-advanced-regression-techniques)
    competition on Kaggle.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明这些问题，我们将研究在Kaggle竞赛中参与的[*我如何在Kaggle竞赛中进入前0.3%*](https://www.kaggle.com/code/lavanyashukla01/how-i-made-top-0-3-on-a-kaggle-competition#Feature-Engineering)笔记本，该竞赛是[*房价
    — 高级回归技术*](https://www.kaggle.com/competitions/house-prices-advanced-regression-techniques)。
- en: I selected this notebook because it showcases coding practices that mirror common
    mistakes observed in the code of data scientists I’ve collaborated with. By examining
    this notebook, we can gain valuable insights into the pitfalls to avoid as data
    scientists.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我选择了这个笔记本，因为它展示了与我合作过的数据科学家的代码中常见错误相似的编码实践。通过检查这个笔记本，我们可以获得有关数据科学家应避免的陷阱的宝贵见解。
- en: The Excessive Use of Jupyter Notebooks
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jupyter笔记本的过度使用
- en: Problem
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: Jupyter Notebooks offer an interactive environment for code execution, visualization,
    and immediate feedback, making them valuable for exploratory analysis and proof
    of concept.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter笔记本提供了一个交互式的代码执行、可视化和即时反馈环境，使其在探索性分析和概念验证中非常有价值。
- en: However, it is not ideal for data scientists to use Jupyter Notebooks for production-related
    tasks like feature engineering and model training for several reasons.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，由于多种原因，数据科学家不适合将Jupyter笔记本用于生产相关任务，例如特征工程和模型训练。
- en: '**Dependency Issues in Cell Execution**'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**单元格执行中的依赖性问题**'
- en: Firstly, some cells may depend on the output of previous cells, and executing
    them in a different order can cause errors or inconsistencies in the dependent
    cells.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，一些单元格可能依赖于之前单元格的输出，以不同的顺序执行可能会导致依赖单元格中的错误或不一致。
- en: In the provided example, executing cell 16 before cell 18 results in the removal
    of two outliers.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在提供的示例中，在执行第16个单元格之前执行第18个单元格会导致两个异常值被移除。
- en: '![](../Images/52fab97b9d8af3b6159aa82ebf18d191.png)![](../Images/7e5d4c3239bcc885687adb42c7278660.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/52fab97b9d8af3b6159aa82ebf18d191.png)![](../Images/7e5d4c3239bcc885687adb42c7278660.png)'
- en: 'Number of rows dropped: 2'
  id: totrans-32
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 丢弃的行数：2
- en: However, executing cell 18 before cell 16 results in the removal of three outliers.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在第16个单元格之前执行第18个单元格会导致三个异常值被移除。
- en: '![](../Images/7e5d4c3239bcc885687adb42c7278660.png)![](../Images/52fab97b9d8af3b6159aa82ebf18d191.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7e5d4c3239bcc885687adb42c7278660.png)![](../Images/52fab97b9d8af3b6159aa82ebf18d191.png)'
- en: 'Number of rows dropped: 3'
  id: totrans-35
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 丢弃的行数：3
- en: '**Performance Concerns**'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**性能问题**'
- en: Secondly, notebooks frequently contain a combination of visualization and analysis
    code, as well as production code. This blend of code in a single notebook can
    lead to resource-intensive tasks that may negatively impact the performance of
    the production system.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，笔记本经常包含可视化和分析代码以及生产代码。这种将代码混合在一个笔记本中的做法可能会导致资源密集型任务，从而对生产系统的性能产生负面影响。
- en: '![](../Images/e9fcda5e99cb08be45b65e2036766d63.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e9fcda5e99cb08be45b65e2036766d63.png)'
- en: Solution
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: Use notebooks for EDA and analysis, while using Python scripts for feature engineering
    and machine learning model training.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 用笔记本进行EDA和分析，同时使用Python脚本进行特征工程和机器学习模型训练。
- en: To further organize your project, create a notebook for data analysis before
    feature engineering, and another notebook to analyze intermediate data after feature
    engineering.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步组织你的项目，在特征工程之前创建一个数据分析的笔记本，而在特征工程之后创建另一个分析中间数据的笔记本。
- en: '[PRE0]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This approach enables the use of Python scripts in various projects while maintaining
    a clean and organized notebook.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法可以在各种项目中使用Python脚本，同时保持笔记本的清洁和有序。
- en: '![](../Images/5cba44343ca7c45b94aa0fdcd98eec76.png)![](../Images/e98e00b27569b120f0618cdeb2807fbd.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5cba44343ca7c45b94aa0fdcd98eec76.png)![](../Images/e98e00b27569b120f0618cdeb2807fbd.png)'
- en: Vague Variable Names
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模糊的变量名
- en: Problem
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: In the following code snippet, the meanings of the variables `res` ,`ls` , `l`
    , and `m` are unclear, making it difficult for reviewers to understand the code’s
    logic and potentially leading to misuse of the variables.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下代码片段中，变量`res`、`ls`、`l`和`m`的含义不明确，使得审阅者难以理解代码的逻辑，并可能导致变量的误用。
- en: '![](../Images/321779f233bd16ca8defe775a599b33e.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/321779f233bd16ca8defe775a599b33e.png)'
- en: Solution
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: Use descriptive and meaningful variable names that convey the purpose and contents
    of the variables.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 使用描述性和有意义的变量名，以传达变量的目的和内容。
- en: '[PRE1]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Redundant Code
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 冗余代码
- en: Problem
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: '**Reduce Code Readability**'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**降低代码可读性**'
- en: Redundant code can make the code less readable.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 冗余代码会降低代码的可读性。
- en: In the notebook, the `YrSold` column undergoes unnecessary conversions between
    integer and string types.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在笔记本中，`YrSold`列在整数和字符串类型之间进行不必要的转换。
- en: 'Initially, the `YrSold` column is represented as an integer:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 最初，`YrSold`列被表示为整数：
- en: '![](../Images/c9b739596d1462a8f95a8f9560ca605a.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c9b739596d1462a8f95a8f9560ca605a.png)'
- en: 'Subsequently, the code converts the `YrSold` column to a string:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 随后，代码将`YrSold`列转换为字符串：
- en: '![](../Images/aeb2e8e749f0241a87bc87fce97e0008.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/aeb2e8e749f0241a87bc87fce97e0008.png)'
- en: 'Then, the `YrSold` column is temporarily transformed back to an integer:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，`YrSold` 列暂时被转换回整数：
- en: '![](../Images/0d913493d7f9cb8c387f1f87d0c005ca.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0d913493d7f9cb8c387f1f87d0c005ca.png)'
- en: 'Finally, the `YrSold` column is converted back to an integer along with other
    categorical columns using one-hot encoding:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，`YrSold` 列以及其他分类列使用独热编码转换回整数：
- en: '![](../Images/40a782e7e39f392ac34f4729cafd14bf.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/40a782e7e39f392ac34f4729cafd14bf.png)'
- en: '[PRE2]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: These unnecessary conversions can make it difficult for authors and maintainers
    to keep track of the data type of a column, which can result in the incorrect
    usage of the column.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这些不必要的转换会使得作者和维护者难以跟踪列的数据类型，从而可能导致列的错误使用。
- en: '**Negative Performance Impact**'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**负面性能影响**'
- en: Redundant code can also impact performance by introducing unnecessary computational
    overhead.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 多余的代码也会通过引入不必要的计算开销影响性能。
- en: In the provided code, the author unnecessarily uses `pd.DataFrame(df)` twice
    to create two copies of a DataFrame. However, creating copies of the DataFrame
    is unnecessary as the objective is solely to retrieve the column names.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在提供的代码中，作者不必要地使用 `pd.DataFrame(df)` 两次来创建两个 DataFrame 的副本。然而，创建 DataFrame 的副本是不必要的，因为目标只是为了获取列名。
- en: '![](../Images/94902db083b14cc97c2387b892f13c58.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/94902db083b14cc97c2387b892f13c58.png)'
- en: If the original DataFrame is large, creating new DataFrames can be computationally
    expensive.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果原始 DataFrame 很大，创建新的 DataFrame 可能会计算开销很大。
- en: Solution
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: Keep your code short and to the point. Remove unnecessary lines of code that
    don’t add value to your program.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 保持你的代码简洁明了。删除那些对程序没有价值的多余代码行。
- en: For example, we can rewrite the code above to directly obtain the columns from
    the original DataFrame.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以将上述代码重写为直接从原始 DataFrame 中获取列。
- en: '[PRE3]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Duplicated Code Segments
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码段重复
- en: Problem
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: Code duplication increases the maintenance burden.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 代码重复增加了维护的负担。
- en: The code `1 if x > 0 else 0` is reused multiple times. Any modifications or
    updates, such as changing it to `1 if x < 0 else 0`, would require making the
    same change in every instance of the duplicated code. This process can be both
    time-consuming and error-prone.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 代码 `1 if x > 0 else 0` 被多次重用。任何修改或更新，比如将其更改为 `1 if x < 0 else 0`，都需要在每个重复代码实例中进行相同的更改。这一过程既耗时又容易出错。
- en: '![](../Images/96282f5ea687cb2341e2a2b0035fd8c9.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/96282f5ea687cb2341e2a2b0035fd8c9.png)'
- en: Solution
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: Encapsulate duplicated code in functions or classes to improve code reuse and
    maintainability.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 将重复的代码封装在函数或类中，以提高代码的重用性和可维护性。
- en: For example, we can create a function called `is_positive` that encapsulates
    the code snippet `1 if x > 0 else 0`.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以创建一个名为 `is_positive` 的函数，将代码片段 `1 if x > 0 else 0` 封装在其中。
- en: '[PRE4]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[](/python-clean-code-6-best-practices-to-make-your-python-functions-more-readable-7ea4c6171d60?source=post_page-----d0fc38f96594--------------------------------)
    [## Python Clean Code: 6 Best Practices to Make your Python Functions more Readable'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '[## Python 清理代码：使你的 Python 函数更具可读性的 6 个最佳实践](https://towardsdatascience.com/python-clean-code-6-best-practices-to-make-your-python-functions-more-readable-7ea4c6171d60?source=post_page-----d0fc38f96594--------------------------------)'
- en: Stop Writing Python Functions that Take more than 3 Minutes to Understand
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 停止编写需要超过 3 分钟才能理解的 Python 函数
- en: towardsdatascience.com](/python-clean-code-6-best-practices-to-make-your-python-functions-more-readable-7ea4c6171d60?source=post_page-----d0fc38f96594--------------------------------)
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](https://towardsdatascience.com/python-clean-code-6-best-practices-to-make-your-python-functions-more-readable-7ea4c6171d60?source=post_page-----d0fc38f96594--------------------------------)'
- en: Frequent Use of Global Variables
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 频繁使用全局变量
- en: Problem
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: The usage of global variables can lead to confusion and difficulties in understanding
    how and where the values are modified.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 使用全局变量可能会导致混淆，并且很难理解值是如何以及在哪里被修改的。
- en: In the following code, `X`, `train_labels`, and `kf` are global variables that
    are defined in different parts of the codebase.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下代码中，`X`、`train_labels` 和 `kf` 是在代码库的不同部分定义的全局变量。
- en: '![](../Images/d4f48bd096d0a36280307f80cfaf1644.png)![](../Images/af19a15ec752a8c1c60d50c3d6a92a49.png)![](../Images/75849a43683209672da0ce1ac10ffa16.png)![](../Images/6edd55425d0b8fa8c820b8ff73eff313.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d4f48bd096d0a36280307f80cfaf1644.png)![](../Images/af19a15ec752a8c1c60d50c3d6a92a49.png)![](../Images/75849a43683209672da0ce1ac10ffa16.png)![](../Images/6edd55425d0b8fa8c820b8ff73eff313.png)'
- en: 'When looking at the function call, maintainers may incorrectly assume that
    the `cv_rmse` function can be invoked with only the `model` variable defined:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在查看函数调用时，维护者可能错误地认为`cv_rmse`函数只需要定义`model`变量即可调用：
- en: '[PRE5]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: ', … but in reality, the function requires `X`, `train_labels`, and `kf` to
    be defined as well.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: ，… 但实际上，该函数还需要定义`X`、`train_labels`和`kf`。
- en: '[PRE6]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Solution
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: Instead of using global variables, pass the necessary variables as arguments
    to the function. This will make the function more modular and easier to test.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 不要使用全局变量，而是将必要的变量作为参数传递给函数。这将使函数更模块化，更易于测试。
- en: '[PRE7]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Lack of Proper Code Testing
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 缺乏适当的代码测试
- en: Problem
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: '**Hidden Code Issues**'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '**隐藏的代码问题**'
- en: Untested code can yield unexpected results, even if the output seems correct.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 未经测试的代码可能会产生意外的结果，即使输出看似正确。
- en: In the code example, using the `create_booleans` function on integers should
    turn them into 0s and 1s. The output appears correct, with 0s and 1s, but it’s
    actually wrong. Non-zero values should be 1, and zeros should be 0.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在代码示例中，使用`create_booleans`函数处理整数应该将其转换为0和1。输出看似正确，但实际上是错误的。非零值应该是1，而零值应该是0。
- en: '[PRE8]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Relying on inaccurate outcomes can result in faulty analyses and misleading
    conclusions.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 依赖不准确的结果可能导致错误的分析和误导性的结论。
- en: '**Solution**'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**'
- en: With unit tests, we can specify the expected output, reducing the likelihood
    of overlooking bugs.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 通过单元测试，我们可以指定预期的输出，减少遗漏错误的可能性。
- en: '[PRE9]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Overlooked Edge Cases
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 被忽视的边缘情况
- en: '**Problem**'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题**'
- en: Code may perform well in specific conditions but exhibit unexpected behaviors
    in others.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 代码在特定条件下可能表现良好，但在其他情况下可能出现意外行为。
- en: In this example, the code fills missing values in the `MSZoning` column based
    on the mode of values for each group in the `MSSubClass` column. It works as expected
    when `MSSubClass` has no NaN values.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，代码根据`MSSubClass`列中每组值的众数填充`MSZoning`列中的缺失值。当`MSSubClass`没有NaN值时，它按预期工作。
- en: '[PRE11]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: However, when `MSSubClass` contains missing values, the code doesn't behave
    as expected, leaving some missing values in `MSZoning`.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当`MSSubClass`包含缺失值时，代码的表现不如预期，留下了`MSZoning`中的一些缺失值。
- en: '[PRE12]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Neglecting to address edge cases can lead to problems in real-world applications.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 忽视边缘情况可能导致现实应用中的问题。
- en: '**Solution**'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**'
- en: 'We can use unit tests to test for edge cases:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用单元测试来测试边缘情况：
- en: '[PRE13]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '… and adjust the code to account for edge cases:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: … 并调整代码以考虑边缘情况：
- en: '[PRE15]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Conclusion
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: This article discusses common challenges encountered in data science projects
    and provides some practical solutions to address them. Please note that this article
    does not exhaust all possible solutions, but rather offers a selection of strategies
    that may help overcome these issues.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 本文讨论了数据科学项目中遇到的常见挑战，并提供了一些实用的解决方案。请注意，本文并未穷尽所有可能的解决方案，而是提供了一些可能帮助克服这些问题的策略。
- en: 'For a comprehensive guide on best practices to integrate into a data science
    project, please refer to the following articles:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取有关在数据科学项目中集成最佳实践的全面指南，请参考以下文章：
- en: '[](/how-to-structure-a-data-science-project-for-readability-and-transparency-360c6716800?source=post_page-----d0fc38f96594--------------------------------)
    [## How to Structure a Data Science Project for Readability and Transparency'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/how-to-structure-a-data-science-project-for-readability-and-transparency-360c6716800?source=post_page-----d0fc38f96594--------------------------------)
    [## 如何结构化数据科学项目以提高可读性和透明度'
- en: And How to Create One in One Line of Code
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何在一行代码中创建一个
- en: towardsdatascience.com](/how-to-structure-a-data-science-project-for-readability-and-transparency-360c6716800?source=post_page-----d0fc38f96594--------------------------------)
    [](/stop-hard-coding-in-a-data-science-project-use-config-files-instead-479ac8ffc76f?source=post_page-----d0fc38f96594--------------------------------)
    [## Stop Hard Coding in a Data Science Project — Use Config Files Instead
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/how-to-structure-a-data-science-project-for-readability-and-transparency-360c6716800?source=post_page-----d0fc38f96594--------------------------------)
    [](/stop-hard-coding-in-a-data-science-project-use-config-files-instead-479ac8ffc76f?source=post_page-----d0fc38f96594--------------------------------)
    [## 在数据科学项目中停止硬编码 — 改用配置文件
- en: And How to Efficiently Interact with Config Files in Python
  id: totrans-131
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何高效地与Python中的配置文件交互
- en: towardsdatascience.com](/stop-hard-coding-in-a-data-science-project-use-config-files-instead-479ac8ffc76f?source=post_page-----d0fc38f96594--------------------------------)
    [](/git-deep-dive-for-data-scientists-1c9cc45c7612?source=post_page-----d0fc38f96594--------------------------------)
    [## Git Deep Dive for Data Scientists
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/stop-hard-coding-in-a-data-science-project-use-config-files-instead-479ac8ffc76f?source=post_page-----d0fc38f96594--------------------------------)
    [](/git-deep-dive-for-data-scientists-1c9cc45c7612?source=post_page-----d0fc38f96594--------------------------------)
    [## 数据科学家的 Git 深度解析'
- en: Learn Git through Real-Life Scenarios
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过真实场景学习 Git
- en: towardsdatascience.com](/git-deep-dive-for-data-scientists-1c9cc45c7612?source=post_page-----d0fc38f96594--------------------------------)
    [](/pytest-for-data-scientists-2990319e55e6?source=post_page-----d0fc38f96594--------------------------------)
    [## Pytest for Data Scientists
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/git-deep-dive-for-data-scientists-1c9cc45c7612?source=post_page-----d0fc38f96594--------------------------------)
    [](/pytest-for-data-scientists-2990319e55e6?source=post_page-----d0fc38f96594--------------------------------)
    [## 数据科学家的 Pytest'
- en: A Comprehensive Guide to Pytest for your Data Science Projects
  id: totrans-135
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 针对你的数据科学项目的 Pytest 综合指南
- en: towardsdatascience.com](/pytest-for-data-scientists-2990319e55e6?source=post_page-----d0fc38f96594--------------------------------)
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/pytest-for-data-scientists-2990319e55e6?source=post_page-----d0fc38f96594--------------------------------)'
