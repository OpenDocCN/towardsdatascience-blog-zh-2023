- en: Visualising Well Paths on 3D Line Plots with Plotly Express
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/visualising-well-paths-on-3d-line-plots-with-plotly-express-de73ca73dea3](https://towardsdatascience.com/visualising-well-paths-on-3d-line-plots-with-plotly-express-de73ca73dea3)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Working With Plotly Express 3D Line Plots
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://andymcdonaldgeo.medium.com/?source=post_page-----de73ca73dea3--------------------------------)[![Andy
    McDonald](../Images/df11d647be032aeb3d31852affb33a64.png)](https://andymcdonaldgeo.medium.com/?source=post_page-----de73ca73dea3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----de73ca73dea3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----de73ca73dea3--------------------------------)
    [Andy McDonald](https://andymcdonaldgeo.medium.com/?source=post_page-----de73ca73dea3--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----de73ca73dea3--------------------------------)
    ·7 min read·Jun 4, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fec699f8b9ec7e99ce706be52f31fe85.png)'
  prefs: []
  type: TYPE_IMG
- en: 3D Well path visualisation with Plotly Express. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Visualisation is one of the critical tasks we use to understand well log data
    and the subsurface. This includes viewing data on well log plots, scatter plots
    and histograms. By doing this, we can gain a solid understanding of our data.
    However, working with 2D plots is sometimes not enough and we need that extra
    dimension by going to 3D.
  prefs: []
  type: TYPE_NORMAL
- en: One excellent use case for 3D visualisations within petrophysics and geoscience
    is to visualise the path of a well.
  prefs: []
  type: TYPE_NORMAL
- en: In the early days of oil and gas exploration, wells were drilled vertically
    into the subsurface. However, as technology advanced, the industry shifted from
    vertical to horizontal drilling and eventually to drilling complex well paths
    facilitated by using the innovation of geosteering.
  prefs: []
  type: TYPE_NORMAL
- en: This evolution in well path geometry underscores the importance of visualising
    well paths in three dimensions. Doing so allows us to gain a better understanding
    of how wells have penetrated the geological layers, and to plan future wells to
    avoid collisions or issues.
  prefs: []
  type: TYPE_NORMAL
- en: Within this article, we will look at how we can take well survey data, which
    records the position of a well, and display it using a 3D line plot from Plotly
    Express.
  prefs: []
  type: TYPE_NORMAL
- en: The Data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For this short tutorial, we are going to be using surveys from eight wells located
    in the Dutch Sector of the North Sea. This data has been sourced from the [NLOG.nl](https://www.nlog.nl)
    website, which provides free-to-use well log data that has been acquired over
    the past several decades.
  prefs: []
  type: TYPE_NORMAL
- en: 'These files contain the following columns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**MD**: Measured Depth (m)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**INC**: Borehole Inclination (degrees)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**AZI**: Borehole Azimuth (degrees)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**TVD**: True Vertical Depth (m)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**XOFFSET**: Position of the well in the X direction (m)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**YOFFSET**: Position of the well in the Y direction (m)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/ceff20e385b8a6ae0bb03b71f38de0c8.png)'
  prefs: []
  type: TYPE_IMG
- en: To make data loading easier, the column names in each file are the same.
  prefs: []
  type: TYPE_NORMAL
- en: Full details of the dataset can be found at the end of the article.
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, all of the wells used in this tutorial share the same origin.
    I will be covering how we can convert the XOFFSET and YOFFSET to grid coordinates
    in a future article.
  prefs: []
  type: TYPE_NORMAL
- en: Setting Up the Data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: First, we need to import a number of libraries. For this article, we will keep
    it relatively simple by importing [**pandas**](https://pandas.pydata.org) — to
    read our `csv` data and [**Plotly** **Express**](https://plotly.com/python/plotly-express/)
    to create our visualisation and [**os**](https://docs.python.org/3/library/os.html)
    to allow us to read our directory with the files.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: We can load the data into Python and [**Pandas**](http://pandas.pydata.org)
    in a few ways.
  prefs: []
  type: TYPE_NORMAL
- en: To simplify things, I have kept the code in long-form to help those new to Python
    understand what is happening.
  prefs: []
  type: TYPE_NORMAL
- en: First, we need to create an empty list to store our file paths in.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Next, we will create a variable to store the file path location of our CSV files
    that contain the survey data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Finally, we can loop through each file within the `file_path` directory and
    check for any files with a .csv extension. Once it finds these files, the full
    file path is then appended onto the file_path list.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'When we view the `survey_data` list we get back the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Once we have the file paths, we need to combine them into a single [**pandas**](http://pandas.pydata.org)
    dataframe using `.concat` from pandas and the `map` function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: When we view the dataframe (`df`) we will get back the following.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/68e36d4d0e5de757fff9293f1bfe5143.png)'
  prefs: []
  type: TYPE_IMG
- en: Dataframe of the combined well survey data from eight Dutch Sector oil and gas
    wells. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Alternatively, if you are a more advanced Python user and are looking for something
    more efficient to load multiple files directly into a [**pandas**](http://pandas.pydata.org)
    dataframe, then you can use the following function.
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, it is much more condensed.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: To confirm that we have all of the wells loaded, we can call upon the **WELL**
    column and view the unique values within it.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Which returns an array containing 8 wells.:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Creating an Interactive Plotly Express 3D Line Plot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For this example, we will use the [3D line plot from Plotly Express](https://plotly.com/python/3d-line-plots/)
    rather than using matplotlib’s 3D plot. From my experience, generating and working
    with 3D plots this way seems quicker, more efficient, and easier.
  prefs: []
  type: TYPE_NORMAL
- en: To create our [3D Line plot with Plotly Express](https://plotly.com/python/3d-line-plots/),
    we first need to create a figure and assign it to `px.line_3d()`.
  prefs: []
  type: TYPE_NORMAL
- en: Within this function, we will pass in our XOFFSET, YOFFSET, TVD and WELL columns.
  prefs: []
  type: TYPE_NORMAL
- en: This will allow us to plot the X, Y and TVD (True Vertical Depth) position of
    each well, an differentiate them with colour using the WELL column.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Once we run the above code, we get back the following figure.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4ec5dc56f3af9b7015e8c098cda56d3a.png)'
  prefs: []
  type: TYPE_IMG
- en: Plotly Express 3D Line plot showing well paths prior to making adjustments to
    scales and lines. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: It is obvious from the figure that we need to tweak this to get something that
    is much better.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are a few issues with this plot that we need to address:'
  prefs: []
  type: TYPE_NORMAL
- en: the overall figure is small
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the line widths are very thin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the well paths are upside down
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We can resolve this with a few tweaks.
  prefs: []
  type: TYPE_NORMAL
- en: First, we will update the layout of the plot and define a `width` & `height`
    parameter.
  prefs: []
  type: TYPE_NORMAL
- en: Then we will update the z-axis, which contains the TVD measurement, and we will
    set it so the scale is in reverse.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we can make the lines thicker by using the call to `update_traces()`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: When we run the above code, we get back the following interactive figure.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/28da5c670419ba2f951f24be3a1474dd.png)'
  prefs: []
  type: TYPE_IMG
- en: Plotly Express 3D Line plot showing well paths after to making adjustments to
    scales and lines. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: We can see that our well paths are now orientated correctly, and we have a slightly
    bigger figure to work with.
  prefs: []
  type: TYPE_NORMAL
- en: Visualising data this way allows us to see where the wells are going and if
    there are any sidetracks from any of the wells. If we were focusing on planning
    future wells, we would be able to identify any potential issues early on in the
    process.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Visualising well paths is an excellent way to understand where your well is.
    Not only where it is located in the subsurface but also in relation to other nearby
    wells.
  prefs: []
  type: TYPE_NORMAL
- en: Within this short tutorial, we have seen how we can utilise Python and the Plotly
    Express library to visualise multiple well paths on an interactive 3D plot. This
    allows us to gain a solid understanding of where our wells are located in an easy-to-use
    way.
  prefs: []
  type: TYPE_NORMAL
- en: Give it a try on your next project.
  prefs: []
  type: TYPE_NORMAL
- en: Data Details
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The data used within this tutorial was downloaded from [**NLOG.nl**](https://www.nlog.nl/en/welcome-nlog),
    which is a website that contains well logging data for the entire Dutch sector
    of the North Sea. The data is free to download and use. Full details of the data
    licence can be found [**here**](https://www.nlog.nl/en/disclaimer), but a summary
    of the usage is provided here from the Intellectual Property Rights section:'
  prefs: []
  type: TYPE_NORMAL
- en: '*NLOG.NL does not claim any rights (except domain names, trademark rights,
    patents and other intellectual property rights) in respect of information provided
    on or through this website. Users are permitted to copy, to download and to disclose
    in any way, to distribute or to simplify the information provided on this website
    without the prior written permission of NLOG.NL or the lawful consent of the entitled
    party. Users are also permitted to copy, duplicate, process or edit the information
    and/or layout, provided NLOG.NL is quoted as the source.*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*Thanks for reading. Before you go, you should definitely subscribe to my content
    and get my articles in your inbox.* [***You can do that here!***](https://andymcdonaldgeo.medium.com/subscribe)*Alternatively,
    you can* [***sign up for my newsletter***](https://fabulous-founder-2965.ck.page/2ca286e572)
    *to get additional content straight into your inbox for free.*'
  prefs: []
  type: TYPE_NORMAL
- en: '*Secondly, you can get the full Medium experience and support thousands of
    other writers and me by signing up for a membership. It only costs you $5 a month,
    and you have full access to all of the fantastic Medium articles, as well as the
    chance to make money with your writing.*'
  prefs: []
  type: TYPE_NORMAL
- en: '*If you sign up using* [***my link***](https://andymcdonaldgeo.medium.com/membership)***,***
    *you will support me directly with a portion of your fee, and it won’t cost you
    more. If you do so, thank you so much for your support.*'
  prefs: []
  type: TYPE_NORMAL
