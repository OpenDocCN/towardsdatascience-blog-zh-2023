- en: Finding Spelling Bee Pangrams with GPT-4 and SpaCy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/finding-spelling-bee-pangrams-with-gpt-4-and-spacy-64d042969954](https://towardsdatascience.com/finding-spelling-bee-pangrams-with-gpt-4-and-spacy-64d042969954)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The quest to solve the New York Times puzzle
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://reddotblues.medium.com/?source=post_page-----64d042969954--------------------------------)[![Sean
    Zhai](../Images/c10a04893c3baac3252dea0b9f140271.png)](https://reddotblues.medium.com/?source=post_page-----64d042969954--------------------------------)[](https://towardsdatascience.com/?source=post_page-----64d042969954--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----64d042969954--------------------------------)
    [Sean Zhai](https://reddotblues.medium.com/?source=post_page-----64d042969954--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----64d042969954--------------------------------)
    ·7 min read·Mar 21, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d9f49cf95d3a6aee9a44964094d5d557.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Nemichandra Hombannavar](https://unsplash.com/@nemichandra?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Solving the New York Times Spelling Bee can be a rewarding experience that balances
    a challenge with the pleasure of word exploration. While it’s not always a walk
    in the park, the satisfaction gained from finding each word is well worth the
    effort. Among the various linguistic achievements in the puzzle, uncovering the
    **pangram** is like discovering a hidden treasure. This special word, which uses
    all the given letters, highlights the player’s skill in navigating the rich complexities
    of the English lexicon.
  prefs: []
  type: TYPE_NORMAL
- en: Finding the pangram is an exhilarating activity for many people, and it also
    serves as a compelling case for natural language processing (NLP) exercises. SpaCy
    (Honnibal & Montani, 2017) is my favorite tool for such tasks. It is open-sourced
    under the MIT license. You can write a program for SpaCy manually, but I’d like
    to show you how to develop such a solution using GPT-4.
  prefs: []
  type: TYPE_NORMAL
- en: Background
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Spelling Bee
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The New York Times Spelling Bee is a popular word puzzle game found in the
    New York Times newspaper and online on the New York Times website. In the game,
    players are given a set of seven letters, with one of the letters designated as
    the “center” letter. The objective of the game is to create as many words as possible
    using the given letters while adhering to the following rules:'
  prefs: []
  type: TYPE_NORMAL
- en: Each word must be at least four letters long.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The “center” letter must appear in every word.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Words must be in the English dictionary.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Proper nouns and obscure or offensive words are not allowed.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The game assigns a point value to each word based on its length. Players receive
    one point for a four-letter word, and the point value increases with each additional
    letter. A pangram is a word that uses all seven given letters at least once, and
    it awards bonus points.
  prefs: []
  type: TYPE_NORMAL
- en: 'See How Human resolves the puzzle: William Jackson Harper Solves the NYT Spelling
    Bee | Source: YouTube.com'
  prefs: []
  type: TYPE_NORMAL
- en: GPT-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: GPT, or Generative Pre-trained Transformer, is a cutting-edge AI language model
    developed by OpenAI that leverages deep learning techniques to comprehend and
    generate human-like text. With its powerful transformer architecture and pre-training
    on vast amounts of textual data, GPT is capable of impressive performances across
    a wide range of natural language processing tasks, including text completion,
    translation, summarization, and more.
  prefs: []
  type: TYPE_NORMAL
- en: Spacy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: SpaCy is a high-performance, open-source Python library designed for advanced
    natural language processing (NLP) tasks. Developed by Explosion AI, SpaCy offers
    efficient, production-ready tools for text processing, tokenization, part-of-speech
    tagging, named entity recognition, dependency parsing, and more. Built with a
    focus on speed and ease of use, SpaCy enables developers to quickly build custom
    NLP applications.
  prefs: []
  type: TYPE_NORMAL
- en: Develop a Program in Spacy with GPT-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Get Ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let’s get the toolchain ready to develop Spacy. You should have *Python* and
    *pip* installed, as SpaCy is a Python library.
  prefs: []
  type: TYPE_NORMAL
- en: 'To write a program in SpaCy to find pangrams in the NYT Spelling Bee, we’ll
    need to get a list of words from a dictionary or a corpus. For this example, I’ll
    use the NLTK (Natural Language Toolkit) (Bird et al., 2009) library to get a list
    of words. Install NLTK if you haven’t already:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, download the ‘words’ corpus from NLTK:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '*Note: NTLK’s words corpus is a list of words used in the English language.
    The words corpus in NLTK is sourced from the “Words” dataset, which was originally
    derived from the Unix “Words” file. This file is a list of English words that
    were commonly used in Unix systems for various purposes, such as spell-checking
    and generating random text. The Unix words file is not an exhaustive list of English
    words, and it may contain some archaic or uncommon words. It also lacks proper
    nouns and may not include more recent additions to the English language. Nonetheless,
    it provides a useful starting point for various NLP tasks, such as word segmentation,
    tokenization, and spelling correction.*'
  prefs: []
  type: TYPE_NORMAL
- en: First Attempt
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let’s make a straightforward request to GPT-4.
  prefs: []
  type: TYPE_NORMAL
- en: Can you write a program in SpaCy to find pangrams in the New York Times’s Spelling
    Bee?
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The answer provided by GPT-4 looks promising. It includes the steps to set up
    SpaCy and the following Python program.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: This is the output.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Taking a closer look, we find that it includes letters that are not on the given
    letters list.
  prefs: []
  type: TYPE_NORMAL
- en: Second Attempt
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: With our observation, we can ask GPT to improve.
  prefs: []
  type: TYPE_NORMAL
- en: The program does not work properly. It gives words containing the “given_letters”,
    but what we need is words ONLY contain the given_letters. It cannot have any other
    letters.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: GPT-4 rewrites the program.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: The output is three words this time. The word that NYTimes Spelling Bee looks
    for is ‘daytime’.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Can we call this a win?
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/61e20f6a8c91ea0db64eff91993d05ab.png)![](../Images/6d814f576eea354ef6ef8f222e665d9d.png)![](../Images/5b0792bf2e9d403647d7c55ad20a2ae6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Screenshots of NYTimes Spelling Bee: 1) May 16\. 2023 2) May 17, 2023 3) May
    18, 2023 | Screen capture by Sean Zhai'
  prefs: []
  type: TYPE_NORMAL
- en: An Exception and the Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The Spelling Bee of May 17, 2023, has the following given letters: **C** D
    E N L O W, but our program returned an empty output. It cannot find a pangram.'
  prefs: []
  type: TYPE_NORMAL
- en: This is when we need to help GPT-4\. I tried to ask GPT-4 to analyze the mistake,
    but it did not work well, so I stepped in. The algorithm looked correct, and my
    next inspection was the NLTK corpus. I ran a quick search in Python for the pangram
    of that day — clowned, and it was not in. So we found the problem.
  prefs: []
  type: TYPE_NORMAL
- en: I stated the issue and asked GPT-4 for a new solution.
  prefs: []
  type: TYPE_NORMAL
- en: In the Python program for finding pangrams, the ‘words’ in nltk.corpus did not
    cover all the words the NYTimes use. For instance, ‘clowned’ is not included.
    Is there a better place to retrieve the ‘words’?
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: GPT-4 acknowledged the issue and provided a new source for English words, along
    with the updated Python program.
  prefs: []
  type: TYPE_NORMAL
- en: 'A more comprehensive source for English words is the `words.txt` file, which
    is derived from the SCOWL (Spell Checker Oriented Word Lists) project. You can
    find it in the GitHub repository here: [https://github.com/dwyl/english-words](https://github.com/dwyl/english-words)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Save the new program as *pangram.py*. Now the result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: It is satisfactory!
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Putting GPT-4 to a practical task is a fun way to test the capacity of the program.
    It certainly is impressive and will change the way we work. Here are a couple
    of things that might help when giving prompts to GPT-4.
  prefs: []
  type: TYPE_NORMAL
- en: Be specific. Define a proper scope for your questions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Give examples to illustrate your statement.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Work with GPT-4, and always validate the outputs.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use your own mind to analyze complicated situations.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Honnibal, M., & Montani, I. (2017). *spaCy 2: Natural language understanding
    with Bloom embeddings, convolutional neural networks and incremental parsing*.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Bird, S., Klein, E., & Loper, E. (2009). *Natural language processing with
    Python: analyzing text with the natural language toolkit*. O’Reilly Media, Inc.'
  prefs: []
  type: TYPE_NORMAL
