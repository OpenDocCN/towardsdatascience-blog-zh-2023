- en: The Most Complete Guide for Creating a Good PyPI Package
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个优秀 PyPI 包的最完整指南
- en: 原文：[https://towardsdatascience.com/the-complete-guide-for-creating-a-good-pypi-package-acb5420a03f8](https://towardsdatascience.com/the-complete-guide-for-creating-a-good-pypi-package-acb5420a03f8)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/the-complete-guide-for-creating-a-good-pypi-package-acb5420a03f8](https://towardsdatascience.com/the-complete-guide-for-creating-a-good-pypi-package-acb5420a03f8)
- en: Everything you need to know — for new and experienced users
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你需要了解的所有内容——无论是新手还是经验丰富的用户
- en: '[](https://eliselandman.medium.com/?source=post_page-----acb5420a03f8--------------------------------)[![Elise
    Landman](../Images/1cd86aa9df340e430820a48f4d26de5a.png)](https://eliselandman.medium.com/?source=post_page-----acb5420a03f8--------------------------------)[](https://towardsdatascience.com/?source=post_page-----acb5420a03f8--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----acb5420a03f8--------------------------------)
    [Elise Landman](https://eliselandman.medium.com/?source=post_page-----acb5420a03f8--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://eliselandman.medium.com/?source=post_page-----acb5420a03f8--------------------------------)[![Elise
    Landman](../Images/1cd86aa9df340e430820a48f4d26de5a.png)](https://eliselandman.medium.com/?source=post_page-----acb5420a03f8--------------------------------)[](https://towardsdatascience.com/?source=post_page-----acb5420a03f8--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----acb5420a03f8--------------------------------)
    [Elise Landman](https://eliselandman.medium.com/?source=post_page-----acb5420a03f8--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----acb5420a03f8--------------------------------)
    ·11 min read·Mar 27, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----acb5420a03f8--------------------------------)
    ·11分钟阅读·2023年3月27日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/726e161623b0a5e82e1c2c669eee378e.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/726e161623b0a5e82e1c2c669eee378e.png)'
- en: Image from [Unsplash](https://unsplash.com/photos/DYHx6h3lMdY).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源于 [Unsplash](https://unsplash.com/photos/DYHx6h3lMdY)。
- en: '**Python Package Index** (or [PyP](https://pypi.org/)I) is the official **software
    repository** for third-party **Python packages**. It is a one-stop-shop for Python
    programmers for any pre-built and reusable software components — making our coding
    lives easier and more efficient. A simple `pip install`and any PyPI package can
    easily be downloaded and installed on our machines.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**Python 包索引**（或[PyP](https://pypi.org/)I）是第三方**Python 包**的官方**软件库**。它是 Python
    程序员获取任何预构建和可重用的软件组件的一站式商店——让我们的编码生活更加轻松和高效。一个简单的`pip install`就可以轻松下载并安装任何 PyPI
    包。'
- en: After 2 years of ongoing development and updates to [my own PyPI package](https://github.com/elisemercury/Duplicate-Image-Finder),
    I learned many things that I wish I knew from day one. In this guide, I will **share
    all my learnings and tips** that can **make your PyPI package upload** and **maintenance**
    **more successful**.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在对[我自己的 PyPI 包](https://github.com/elisemercury/Duplicate-Image-Finder)进行两年的持续开发和更新后，我学到了许多希望一开始就知道的东西。在本指南中，我将**分享我所有的经验和技巧**，这些可以**让你的
    PyPI 包上传**和**维护**变得**更加成功**。
- en: 'This guide is divided into 2 parts:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本指南分为两个部分：
- en: 👉 If you are *new to PyPI* and this will be your first package, start at:[**1
    | Preparing your Package for PyPI**](/the-complete-guide-for-creating-a-good-pypi-package-acb5420a03f8#:~:text=your%20PyPI%20Package-,1%20%7C%20Preparing%20your%20Package%20for%20PyPI,-When%20uploading%20your)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 👉 如果你是*PyPI 新手*，并且这是你的第一个包，从以下部分开始：[**1 | 为 PyPI 准备你的包**](/the-complete-guide-for-creating-a-good-pypi-package-acb5420a03f8#:~:text=your%20PyPI%20Package-,1%20%7C%20Preparing%20your%20Package%20for%20PyPI,-When%20uploading%20your)
- en: 👉 If you are *already a PyPI user* and have uploaded your package, start at:[**2
    | Uploading and Maintaining your PyPI Package**](/the-complete-guide-for-creating-a-good-pypi-package-acb5420a03f8#:~:text=to%20PyPI!%20%F0%9F%9A%80-,2%20%7C%20Uploading%20and%20Maintaining%20your%20PyPI%20Package,-If%20your%20package)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 👉 如果你*已经是 PyPI 用户*并且已经上传了你的包，从以下部分开始：[**2 | 上传和维护你的 PyPI 包**](/the-complete-guide-for-creating-a-good-pypi-package-acb5420a03f8#:~:text=to%20PyPI!%20%F0%9F%9A%80-,2%20%7C%20Uploading%20and%20Maintaining%20your%20PyPI%20Package,-If%20your%20package)
- en: 1 | Preparing your Package for PyPI
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1 | 为 PyPI 准备你的包
- en: 'When uploading your package to [PyPI](https://pypi.org/), you are making it
    available for anyone to install via the `pip`installer. Anyone could then run
    the command:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当你将你的包上传到[PyPI](https://pypi.org/)时，你是让任何人都可以通过`pip`安装器进行安装。任何人都可以运行以下命令：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'and it will be installed on their machines. To make your **code ready for PyPI**,
    there are a few steps you need to follow:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 并且它将被安装到他们的机器上。为了让你的**代码适合 PyPI**，你需要遵循一些步骤：
- en: First of all, you will need to [**create a PyPI account**](https://pypi.org/account/register/).
    I highly recommend activating two-factor authentication for enhanced account security.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要[**创建一个PyPI账户**](https://pypi.org/account/register/)。我强烈建议启用双因素认证以增强账户安全。
- en: 'Secondly, you need to **prepare the folder structure** of your package and
    add a few required files. These include:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，你需要**准备包的文件夹结构**并添加一些必需的文件。这些文件包括：
- en: The `__init__.py` file that will initialize your package.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`__init__.py`文件将初始化你的包。'
- en: A `version.py` file that will contain the version of your package.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个包含你的包版本的`version.py`文件。
- en: 'The files to actually build your Python package: `setup.py`, `pyproject.toml`,
    `setup.cfg` and `MANIFEST.in`.'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实际构建Python包所需的文件：`setup.py`、`pyproject.toml`、`setup.cfg`和`MANIFEST.in`。
- en: The `LICENSE.txt` file.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`LICENSE.txt`文件。'
- en: And the `README.md` file.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以及`README.md`文件。
- en: 'After all these have been added, the **final file structure** of your package
    will look as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在添加了所有这些文件后，你的包的**最终文件结构**将如下所示：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'And with a bit of imagination, your package could soon look similar to this:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 只需稍加想象，你的包很快就会类似于下图：
- en: '![](../Images/201500802c8dd528773e9e40676f2052.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/201500802c8dd528773e9e40676f2052.png)'
- en: Sample PyPI Package. Image from [PyPI.org](https://pypi.org/) by author.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 示例PyPI包。图片来自[PyPI.org](https://pypi.org/)由作者提供。
- en: Let’s **go through each** of the required files together and see why we need
    them, as well as what they can look like.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 一起**逐个查看**所需的文件，了解我们为什么需要它们，以及它们可能的样子。
- en: 1.1 | __init__.py
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.1 | __init__.py
- en: 'This file will **mark your folder as a Python package** and make sure that
    your package is properly imported when launched. A sample for the `__init__.py`
    file could be:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这个文件将**标记你的文件夹为Python包**，并确保在启动时你的包能被正确导入。`__init__.py`文件的示例如下：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '`your_package.py` is the main script of your package that will be imported
    through the `__init__.py` file. You can of course import more than one main script,
    if desired.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`your_package.py`是你的包的主要脚本，它将通过`__init__.py`文件被导入。当然，你也可以根据需要导入多个主要脚本。'
- en: 1.2 | your_package.py
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.2 | your_package.py
- en: As mentioned in section *1.1*, `your_package.py` is the main **script of your
    package** that you should already have created. You can include **more than one
    script** in your package, if desired.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如*1.1*节中提到的，`your_package.py`是你应该已经创建的包的主要**脚本**。如果需要，你可以在包中包含**多个脚本**。
- en: 1.3 | version.py
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.3 | version.py
- en: 'Often, popular Python packages let you **look up their version** by calling
    the `.__version__` function. As an example, you can look up the [Pandas](https://pandas.pydata.org/)
    version installed on your machine by executing the following code line below:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，流行的Python包允许你通过调用`.__version__`函数来**查找它们的版本**。例如，你可以通过执行以下代码行来查找你机器上安装的[Pandas](https://pandas.pydata.org/)版本：
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'To ensure the same can be done with your package, you will want to include
    a `version.py` file in your package folder. This file can look as simple as below:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保你的包也能完成相同的操作，你需要在包文件夹中包含一个`version.py`文件。这个文件可以像下面这样简单：
- en: '[PRE4]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 1.4 | setup.py and pyproject.toml
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.4 | setup.py 和 pyproject.toml
- en: The `setup.py` file, as well as the `pyproject.toml` file are configuration
    files used to **build your package**. `pyproject.toml` is a new type of configuration
    file introduced with the [PEP 517](https://peps.python.org/pep-0517/) and [PEP
    518](https://peps.python.org/pep-0518/) standards.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`setup.py`文件和`pyproject.toml`文件是用于**构建你的包**的配置文件。`pyproject.toml`是随着[PEP 517](https://peps.python.org/pep-0517/)和[PEP
    518](https://peps.python.org/pep-0518/)标准引入的新型配置文件。'
- en: '*But, when to use which?*'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '*那么，什么时候用哪个呢？*'
- en: When you want to create a Python package, it first has to be built. There are
    various popular Python build systems, f. e. `setuptools` is one of them. But,
    in some cases you might choose to use others, such as `[Poetry](https://python-poetry.org/)`,
    `[Flit](https://flit.pypa.io/en/stable/)` [](https://flit.pypa.io/en/stable/)
    or `[Bento](https://cournape.github.io/Bento/)`. `pyproject.toml` replaces the
    `setup.py` file when using packaging tools **other than** `setuptools`.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 当你想创建一个Python包时，首先必须构建它。有各种流行的Python构建系统，例如`setuptools`就是其中之一。但在某些情况下，你可能会选择使用其他工具，如[Poetry](https://python-poetry.org/)、[Flit](https://flit.pypa.io/en/stable/)或[Bento](https://cournape.github.io/Bento/)。当使用**其他**打包工具时，`pyproject.toml`会替代`setup.py`文件。
- en: When using `setuptools` as build system, it is recommended to include both the
    `setup.py` file and the `pyproject.toml` file. If you use any other build system,
    you will usually only need the `pyproject.toml` file. For this guide, we will
    be using `setuptools` and therefore, I highly recommend to **include both files**
    in your package. For more details, I suggest checking out [this post](https://stackoverflow.com/questions/62983756/what-is-pyproject-toml-file-for).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用`setuptools`作为构建系统时，建议包括`setup.py`文件和`pyproject.toml`文件。如果你使用其他构建系统，通常只需要`pyproject.toml`文件。对于本指南，我们将使用`setuptools`，因此我强烈建议**在你的包中包含这两个文件**。有关更多详细信息，我建议查看[这篇文章](https://stackoverflow.com/questions/62983756/what-is-pyproject-toml-file-for)。
- en: 'Below is a template for `setup.py` that you can edit and reuse:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个`setup.py`的模板，你可以编辑并重复使用：
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Secondly, below is a template for `pyproject.toml`:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，下面是`pyproject.toml`的模板：
- en: '[PRE6]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 1.5 | setup.cfg
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.5 | setup.cfg
- en: 'This file is needed so that **metadata is included** when building your package.
    For example: the package name, the name of the author, a homepage URL, supported
    Python versions, etc. It also makes sure PyPI uses your `README.md` as package
    description and references the `LICENSE.txt` file.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这个文件是必需的，以便在构建你的包时**包含元数据**。例如：包的名称、作者的名字、主页 URL、支持的 Python 版本等。它还确保 PyPI 使用你的`README.md`作为包描述，并引用`LICENSE.txt`文件。
- en: '[PRE7]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 1.6 | MANIFEST.in
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.6 | MANIFEST.in
- en: 'You might have created a package that is made up of **multiple different scripts**,
    or includes **additional files** used by the main script. For example, your package
    could look like this:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能创建了一个由**多个不同脚本**组成的包，或者包含**主脚本使用的附加文件**。例如，你的包可能看起来像这样：
- en: '[PRE8]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'By default, when uploading to PyPI, only the scripts referenced in the `__init__.py`
    file will be included in the uploaded package. If we want any other scripts or
    files to be included, we need to reference them here:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，当上传到 PyPI 时，只有在`__init__.py`文件中引用的脚本会被包含在上传的包中。如果我们希望包含其他脚本或文件，需要在此处进行引用：
- en: '[PRE9]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 1.7 | LICENSE.txt
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.7 | LICENSE.txt
- en: This file will include the **license** that you are **distributing your package**
    under. It’s up to you to decide which license to use, nevertheless, make sure
    that you respect the licenses of the packages that yours depends on. You might
    not be allowed to copyright your package if it uses packages that are already
    under copyright.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这个文件将包含你**分发包的许可**。选择使用哪个许可取决于你，不过，确保尊重你包所依赖的包的许可。如果你使用了已经有版权的包，你可能不能对你的包进行版权保护。
- en: A commonly used license for **open source software** is MIT. You can find a
    sample of the MIT license content [here](https://opensource.org/license/mit/).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 对于**开源软件**，常用的许可是 MIT。你可以在[这里](https://opensource.org/license/mit/)找到 MIT 许可内容的示例。
- en: 1.8 | README.md
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.8 | README.md
- en: The `README.md` file can be used as a source for the **description of your package**
    (i. e. the content of the PyPI page). In this guide, we are using a markdown based
    `README`, but you can choose any of the [supported markup languages](https://packaging.python.org/en/latest/guides/making-a-pypi-friendly-readme/#creating-a-readme-file).
    If you decide to change the markup type, make sure to also adjust the `long_description_content_type`
    variable in your `setup.cfg` file.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '`README.md`文件可以用作**你包的描述**（即 PyPI 页面内容）。在本指南中，我们使用基于 Markdown 的`README`，但你可以选择任何[支持的标记语言](https://packaging.python.org/en/latest/guides/making-a-pypi-friendly-readme/#creating-a-readme-file)。如果你决定更改标记类型，请确保在`setup.cfg`文件中调整`long_description_content_type`变量。'
- en: You could use the same `README` as f. e. in your GitHub repository, but be aware
    that PyPI markdown is not identical to GitHub’s markdown and that you might experience
    issues with formatting f. e. when using [emojis](https://github.com/ikatyang/emoji-cheat-sheet/blob/master/README.md)
    or [badges](https://github.com/Ileriayo/markdown-badges).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用与 GitHub 仓库中相同的`README`，但要注意 PyPI 的 Markdown 与 GitHub 的 Markdown 不完全相同，可能在使用[表情符号](https://github.com/ikatyang/emoji-cheat-sheet/blob/master/README.md)或[徽章](https://github.com/Ileriayo/markdown-badges)时会遇到格式问题。
- en: After having added all the required files, your package is **ready to be uploaded
    to PyPI**! 🚀
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在添加所有必需的文件后，你的包已经**准备好上传到 PyPI**了！🚀
- en: '**2 | Uploading and Maintaining your PyPI Package**'
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**2 | 上传和维护你的 PyPI 包**'
- en: If your package is fully updated and ready to be published to PyPI, the next
    following sections are right for you. Below you will find some tips and recommendations
    on how to avoid common mistakes and pitfalls. Applying these will make the upload-
    and update-cycle of your PyPI packages smoother, and ultimately better.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的包已经完全更新并准备好发布到 PyPI，那么接下来的部分正适合你。下面你将找到一些避免常见错误和陷阱的提示和建议。应用这些建议将使你的 PyPI
    包的上传和更新周期更加顺畅，最终效果更好。
- en: 2.1 | Upload your Package first to TestPyPI
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.1 | 首先将你的包上传到 TestPyPI
- en: 'To submit your package to PyPI, you need to first **build it** and then use
    the [Twine](https://pypi.org/project/twine/) package to **upload it**. Twine can
    be easily installed via the `pip` installer, as shown below:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 要提交你的包到 PyPI，你需要先**构建它**，然后使用[Twine](https://pypi.org/project/twine/)包来**上传它**。Twine
    可以通过 `pip` 安装程序轻松安装，如下所示：
- en: '[PRE10]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'But, before uploading anything to PyPI, I highly recommend to **first upload
    your package to** [**TestPyPI**](https://test.pypi.org/). Why? Because, once uploaded
    to PyPI:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，在将任何东西上传到 PyPI 之前，我强烈建议**首先将你的包上传到**[**TestPyPI**](https://test.pypi.org/)。为什么？因为一旦上传到
    PyPI：
- en: You **cannot edit the uploaded content** of your package. This means you cannot
    fix issues in your package metadata, your code, your package description (i. e.
    the README), etc. Bugs and typos will stay there, until you fix them in the next
    upload.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你**不能编辑已上传的内容**。这意味着你不能修复包元数据、代码、包描述（即 README）中的问题等。错误和拼写错误将保留，直到你在下一次上传时修复它们。
- en: 'And, even worse: package **versions cannot be re-uploaded**. As soon as you
    uploaded f. e. version 1.0.0 of your package, even if you delete this version
    from PyPI, you cannot re-upload version 1.0.0 anymore — ever.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更糟糕的是：包的**版本不能重新上传**。例如，一旦你上传了版本 1.0.0，即使你从 PyPI 中删除了该版本，你也不能再重新上传版本 1.0.0 ——
    永远不能。
- en: TestPyPI allows you to **upload your package and test it**, before actually
    uploading it to PyPI. It is a complete separate instance of PyPI, meaning you
    will need to [create a TestPyPI account](https://test.pypi.org/account/register/).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: TestPyPI 允许你**上传并测试你的包**，在实际上传到 PyPI 之前。这是 PyPI 的一个完全独立的实例，意味着你需要[创建一个 TestPyPI
    账户](https://test.pypi.org/account/register/)。
- en: 'To **upload a package to TestPyPI**, execute the following commands in your
    package folder:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 要**将包上传到 TestPyPI**，在你的包文件夹中执行以下命令：
- en: '[PRE11]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '*This will upload a source and a built distribution of your package (see section
    2.2 for more details).*'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '*这将上传你的包的源分发版和构建分发版（更多细节请参见第 2.2 节）。*'
- en: 'After you have done your tests and checks, **upload your package to PyPI**
    by executing to following commands:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成测试和检查后，通过执行以下命令**将你的包上传到 PyPI**：
- en: '[PRE12]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: It took me quite some time to discover TestPyPI and since then, I cannot do
    without — and I am sure you will neither.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我花了相当长的时间才发现 TestPyPI，自那时起，我再也离不开它 —— 我相信你也会如此。
- en: 2.2 | Upload Wheels with your Package
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.2 | 与你的包一起上传 Wheels
- en: 'I noticed that online guides on “how to upload a package to PyPI” often display
    the following commands:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我注意到在线指南中“如何上传包到 PyPI”经常显示以下命令：
- en: '[PRE13]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: This will upload **a source distribution** of your package to PyPI from which
    it can be downloaded and installed via the `pip` installer.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这将上传**你的包的源分发版**到 PyPI，供通过 `pip` 安装程序下载和安装。
- en: In addition to uploading the source distribution,I can highly recommend to also
    **upload a built distribution** (i. e.a Python wheel) of your package. Wheels
    have various advantages for your users, including **faster installation times**,
    since they are usually **smaller in size** and because they don’t have to first
    be built from the source distribution when installed.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 除了上传源分发版，我强烈推荐同时**上传构建分发版**（即 Python wheel）。因为 wheel 通常**体积更小**且安装时无需从源分发版重新构建，所以对用户来说**安装时间更快**。
- en: '![](../Images/695cf961f1b0c2fbb730b6ede8c2065b.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/695cf961f1b0c2fbb730b6ede8c2065b.png)'
- en: PyPI Package Files. Image from [PyPI.org](https://pypi.org/) by author.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: PyPI 包文件。图片来源于[PyPI.org](https://pypi.org/)作者。
- en: 'Tocreate a built distributionof your package, you will first need to install
    the [Wheel](https://pypi.org/project/wheel/) package:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建你包的构建分发版，你首先需要安装[Wheel](https://pypi.org/project/wheel/)包：
- en: '[PRE14]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'You can then execute the following commands to **create the source and built
    distribution**, and upload them to PyPI:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 然后你可以执行以下命令**创建源分发版和构建分发版**，并将它们上传到 PyPI：
- en: '[PRE15]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Wheels can be built specifically for certain Python versions and OS types.
    The above command will **create a Python 3 OS-independent wheel**. Nevertheless,
    for your use case you might want to add multiple wheel types: for example, if
    your package should support Python 2, you can include a Python 2 wheel. For more
    information on wheels, I can recommend checking out [the following article](https://realpython.com/python-wheels/).'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 可以专门为特定的 Python 版本和操作系统类型构建 Wheels。上述命令将**创建一个 Python 3 操作系统独立的 wheel**。然而，对于你的使用场景，你可能需要添加多个
    wheel 类型：例如，如果你的包应该支持 Python 2，你可以包括一个 Python 2 的 wheel。有关 wheel 的更多信息，我建议查看[以下文章](https://realpython.com/python-wheels/)。
- en: 2.3 | Properly Version your Package
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.3 | 正确版本化你的包
- en: Whenever you make changes to your package, make sure to **upload them to a new
    version release**. Versioning your package is very important, since your users
    will be able to follow the changes you made and update their package installation
    if necessary. Do not make updates to an existing version in your repository, as
    this is not best practice.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 每次对你的包进行更改时，确保**将其上传到新版本发布**。版本管理你的包非常重要，因为你的用户将能够跟踪你所做的更改，并在必要时更新他们的包安装。不要在现有版本中进行更新，因为这不是最佳实践。
- en: Below you will find a **few steps you can follow to implement proper versioning
    for your package:**
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是你可以遵循的**实施正确版本管理的几个步骤**：
- en: '**Define a versioning syntax** and be consistent with it. For example: start
    with 1.0.0\. If you make a minor change to your package, release 1.0.1\. If you
    make a major change, release 1.1.0, etc.'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**定义一个版本控制语法**并保持一致。例如：从1.0.0开始。如果你对包进行了一些小的更改，发布1.0.1。如果你进行了一次重大更改，发布1.1.0，等等。'
- en: '**Update the version** in your `version.py` file (as described in section *1.3*)'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的`version.py`文件中**更新版本**（如第*1.3*节所述）
- en: '**Create a new version release** on GitHub (or any other source repository
    you are using for your package) and add release notes to it (what features were
    added/deleted? did you fix any bugs?).'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 GitHub（或你为你的包使用的任何其他源代码仓库）上**创建一个新版本发布**并添加发布说明（添加/删除了哪些功能？你修复了哪些bug？）。
- en: '**Update the** `download_url` **variable** in the `setup.cfg` file (as described
    in section *1.5*) to point to the URL of the `tar.gz` package in the new release
    on GitHub (or any other source repository you are using for your package).'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**更新** `download_url` **变量** 在 `setup.cfg` 文件中（如第*1.5*节所述），将其指向 GitHub 上新发布的
    `tar.gz` 包的 URL（或你为包使用的任何其他源代码仓库）。'
- en: 'Finally: **upload your new version** to PyPI (but first: **TestPyPI**!)'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后：**将你的新版本上传**到 PyPI（但首先：**测试 PyPI**！）
- en: These stepscould of course **be different for you**, but if you have been consistently
    **following this guide from *Part 1***, then they will contain all the necessary
    actions to implement proper versioning of your package.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这些步骤**对你来说可能会有所不同**，但如果你一直**遵循了*第 1 部分*的指南**，那么它们将包含所有实施你包的正确版本管理所需的操作。
- en: 2.4 | Documenting your Package
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.4 | 记录你的包
- en: When creating a package for the public to use, it is important to create a **clearly
    structured documentation** and always **update it if you make any changes to your
    code**.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在为公众使用创建包时，重要的是创建**结构清晰的文档**，并且**如果你对代码做出任何更改，始终更新文档**。
- en: '*A package is only as good as its documentation is.*'
  id: totrans-103
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*一个包的好坏取决于其文档的质量。*'
- en: 'How much documentation is needed depends on the complexity of your package:
    a simple package might only need a few lines of instructions that can be included
    directly in the repository `README`. If your package is more complex, the `README`
    will likely be too limited.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 所需的文档量取决于你的包的复杂性：一个简单的包可能只需要几行说明，这些说明可以直接包含在仓库的`README`中。如果你的包更复杂，`README`可能会显得过于有限。
- en: If I could start over, I would **use** [**readthedocs.org**](https://readthedocs.org/)
    **from day one**. Readthedocs is a popular **platform for software documentation
    hosting**. You will find that a lot of popular Python packages host their documentation
    there (see [Pandas](https://pandasguide.readthedocs.io/en/latest/) or [Pillow](https://pillow.readthedocs.io/en/stable/)).
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我可以重新开始，我会从第一天起**使用** [**readthedocs.org**](https://readthedocs.org/) 。Readthedocs
    是一个流行的**软件文档托管平台**。你会发现许多流行的 Python 包都在那儿托管他们的文档（见 [Pandas](https://pandasguide.readthedocs.io/en/latest/)
    或 [Pillow](https://pillow.readthedocs.io/en/stable/)）。
- en: 'Hosting on readthedocs has various benefits, including:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 托管在 readthedocs 上有各种好处，包括：
- en: automatic **creation of downloadable formats** of your documentation such as
    PDF, or HTML formats,
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动**创建可下载格式**的文档，例如 PDF 或 HTML 格式。
- en: support for **versioning of your documentation**,
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持**文档版本控制**，
- en: following a **standard page structure** that your users will often already be
    familiar with.
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 遵循用户通常已经熟悉的**标准页面结构**。
- en: You can connect readthedocs to your GitHub repository, which will allow you
    to edit your documentation directly on your local machine. Then, whenever you
    commit changes to your GitHub repo, it will **instantly trigger a new build of
    your documentation**.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将 readthedocs 连接到你的 GitHub 仓库，这样你可以直接在本地机器上编辑文档。然后，每当你向 GitHub 仓库提交更改时，它将**立即触发文档的新构建**。
- en: I can recommend to follow [this official tutorial](https://docs.readthedocs.io/en/stable/tutorial/index.html)
    on how to set up readthedocs. As a reference example, this is the [readthedocs
    documentation of my package difPy](https://difpy.readthedocs.io/en/latest/index.html)
    on [GitHub](https://github.com/elisemercury/Duplicate-Image-Finder/tree/main/docs).
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我推荐你参考[这篇官方教程](https://docs.readthedocs.io/en/stable/tutorial/index.html)来了解如何设置
    readthedocs。作为参考示例，这是我在[GitHub](https://github.com/elisemercury/Duplicate-Image-Finder/tree/main/docs)上的[readthedocs
    文档 difPy 包](https://difpy.readthedocs.io/en/latest/index.html)。
- en: 2.5 | Maintain Code Hygiene
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.5 | 维护代码卫生
- en: Lastly, it is also important to maintain certain **code hygiene standards**
    when making your package available on PyPI. The higher the quality of your source
    code, the more credible your package will be.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在将你的包发布到 PyPI 时，保持一定的**代码卫生标准**也非常重要。源代码的质量越高，你的包就会越可信。
- en: 'Some best practices on code hygiene include:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 一些代码卫生的最佳实践包括：
- en: '**Consistent use of variable and function names**: use either capitalized variable
    name, like f. e. `variableName`, or use underscore-separated variables like `variable_name`.
    Do not mix both within one single script.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一致使用变量和函数名称**：要么使用首字母大写的变量名，例如`variableName`，要么使用下划线分隔的变量名，如`variable_name`。不要在一个脚本中混合使用这两种方式。'
- en: '**Consistent use of quotation marks**: Python supports both single `''` and
    double `"` quotation marks. Choose which one to use in your script and do not
    mix them (except if absolutely necessary, when f. e. formatting strings).'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一致使用引号**：Python 支持单引号`''`和双引号`"`。选择在你的脚本中使用哪一种，并且不要混用（除非绝对必要，例如在格式化字符串时）。'
- en: '**Comment your code**! This might seem obvious to you, but it is a must to
    include as a best practice.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**注释你的代码**！这对你来说可能很明显，但作为最佳实践必须包含在内。'
- en: There are of course more best practices to follow than those I have listed here,
    so I would recommend checking out [this article](https://www.codingdojo.com/blog/python-best-practices)
    for more.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，除了我在这里列出的最佳实践，还有更多的实践可以遵循，因此我建议你查看[这篇文章](https://www.codingdojo.com/blog/python-best-practices)以获取更多信息。
- en: Conclusion
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Uploading and maintaining a PyPI package can be a lot of fun and a very rewarding
    experience. Sharing your work with the world by making it available for others
    can **help you learn** and **gain more coding experience** by receiving **feedback**
    and **improvement suggestions** from the Python community.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 上传和维护 PyPI 包可以非常有趣且充满成就感。通过让其他人使用你的工作来分享你的成果，**帮助你学习**并通过获得来自 Python 社区的**反馈**和**改进建议**来**获得更多编码经验**。
- en: I hope this guide gave you some **valuable insights** in how to get started
    with PyPI — or if you were already using PyPI, gave you some new hints on how
    to improve your current usage. ✨
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望本指南为你提供了一些**宝贵的见解**，帮助你开始使用 PyPI——或者如果你已经在使用 PyPI，能给你一些新的提示来改进你当前的使用方式。✨
- en: Let me know if you have any feedback, and feel free to **share your own PyPI
    usage tips** by leaving a comment! 🍀
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有任何反馈，请告诉我，也可以**分享你自己的 PyPI 使用技巧**，留下评论吧！🍀
- en: References
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[1] PyPA, [Packaging Python Projects](https://packaging.python.org/en/latest/tutorials/packaging-projects/)
    (2023)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] PyPA, [打包 Python 项目](https://packaging.python.org/en/latest/tutorials/packaging-projects/)
    (2023)'
- en: '[2] Setuptools, [Configuring setuptools using pyproject.toml files](https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html)
    (2023)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] Setuptools, [使用 pyproject.toml 文件配置 setuptools](https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html)
    (2023)'
- en: '[3] Readthedocs, [Read the Docs: documentation simplified](https://docs.readthedocs.io/en/stable/index.html)
    (2023)'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '[3] Readthedocs, [Read the Docs：简化文档](https://docs.readthedocs.io/en/stable/index.html)
    (2023)'
