["```py\nconst ROOT_OF_SEVEN: f64 = 7_f64.sqrt();\n```", "```py\ncannot call non-const fn `f64::<impl f64>::sqrt` in constants\ncalls in constants are limited to constant functions, tuple structs and tuple variants\n```", "```py\nconst LANG: String = env::var(\"LANG\").unwrap(); \n```", "```py\ncannot call non-const fn `std::env::var::<&str>` in constants\ncalls in constants are limited to constant functions, tuple structs and tuple variants\n```", "```py\ncargo add lazy_static\n```", "```py\nuse lazy_static::lazy_static;\n```", "```py\nlazy_static! {\n  static ref LANG: String = env::var(\"LANG\").unwrap();\n  static ref ROOT_OF_SEVEN: f64 = 7_f64.sqrt();\n}\n```", "```py\nfn main() {\n\n  println!(\"System language: LANG is {}\", *LANG);\n  println!(\"Square root of 7 is {}\", *ROOT_OF_SEVEN);\n\n}\n```", "```py\nlazy_static! {\n\n    static ref BYTES_WRITTEN: usize = {\n        let bytes_written = std::io::stdout().write(b\"Initializing lazy_static!\\n\").unwrap();\n        std::io::stdout().flush().unwrap();\n        bytes_written\n    };\n\n    static ref ANOTHER_LAZY_STATIC: String = {\n        println!(\"Initializing ANOTHER_LAZY_STATIC!\");\n        \"Hello, World!\".to_string()\n    };\n\n    static ref UNUSED_LAZY_STATIC: String = {\n        println!(\"Initializing UNUSED_LAZY_STATIC!\");\n        \"Hello, World!\".to_string()\n    };\n\n}\n```", "```py\nfn main() {\n\n    println!(\"Doing stuff before using lazy statics...\");\n\n    println!(\"Bytes written during initialization: BYTES_WRITTEN is {}\", *BYTES_WRITTEN);\n\n    println!(\"Reusing an already initialized lazy static: BYTES_WRITTEN is {}\", *BYTES_WRITTEN);\n\n    println!(\"ANOTHER_LAZY_STATIC is {}\", *ANOTHER_LAZY_STATIC);\n\n}\n```", "```py\nDoing stuff before using lazy statics...\n\nInitializing lazy_static!\n\nBytes written during initialization: BYTES_WRITTEN is 26\n\nReusing an already initialized lazy static: BYTES_WRITTEN is 26\n\nInitializing ANOTHER_LAZY_STATIC!\n\nANOTHER_LAZY_STATIC is Hello, World!\n```"]