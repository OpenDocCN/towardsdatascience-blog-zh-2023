- en: Dealing with Dates in Python’s DataFrame Part 2— The Basics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/dealing-with-dates-in-pythons-dataframe-part-2-the-basics-9ad5edacd2f8](https://towardsdatascience.com/dealing-with-dates-in-pythons-dataframe-part-2-the-basics-9ad5edacd2f8)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Data Processing in Python
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This article explained the basic pandas’ methods and properties for dealing
    with the DateTime series in a data frame
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://kahemchu.medium.com/?source=post_page-----9ad5edacd2f8--------------------------------)[![KahEm
    Chu](../Images/2f89d02e85f61f08f048773990f4d53f.png)](https://kahemchu.medium.com/?source=post_page-----9ad5edacd2f8--------------------------------)[](https://towardsdatascience.com/?source=post_page-----9ad5edacd2f8--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----9ad5edacd2f8--------------------------------)
    [KahEm Chu](https://kahemchu.medium.com/?source=post_page-----9ad5edacd2f8--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----9ad5edacd2f8--------------------------------)
    ·8 min read·Jan 4, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/018a7772507981c5c6abbae9ca862bd1.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Lukas Blazek](https://unsplash.com/@goumbik?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/s/photos/time?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: As written in the title, this article is part 2 of my Dealing with Dates in
    Python’s DataFrame series. Below show the content of each part of the Dealing
    with Dates in Python’s DataFrame series.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/31bdd968f0779f2b31bcfdec88c1c29a.png)'
  prefs: []
  type: TYPE_IMG
- en: Image from Author.
  prefs: []
  type: TYPE_NORMAL
- en: In [my previous article](/dealing-with-dates-in-pythons-dataframe-part-1-date-series-creation-f4a800db9ae),
    I have shown the DateTime series creation methods. Then, in this article, I will
    show the basic properties and methods to deal with the Datetime series in a data
    frame.
  prefs: []
  type: TYPE_NORMAL
- en: 'With that, this article will be structured as below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Convert Datatype to DateTime](#4f11)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[General DateTime Info Extraction](#2098)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Check if the Date is the Start or the End of the Period](#6bd4)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Check if the Date Belongs to a Leap Year](#a701)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Check the Number of Days in the Month](#c767)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Let’s get started!
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Convert Data Type to DateTime
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For the date creation methods I show in the previous article, the series is
    created as a DateTime object. When you are reading the data from Excel or any
    other data source, the DateTime column will be read as a string object if you
    did not parse them as dates. To extract the DateTime info from the DateTime series,
    the column needs to be converted into the DateTime data type beforehand.
  prefs: []
  type: TYPE_NORMAL
- en: There are two methods to convert the data type into DateTime.
  prefs: []
  type: TYPE_NORMAL
- en: '`pandas.Series.astype(“DateTime”)`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.datetime(pandas.SeriesSeries)`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I created a *demo.csv* file with the script below to demonstrate the methods
    and properties for this section.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The output data frame is as in the screenshot below.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/97e32fbe923caabb70ad0fc209dd346c.png)'
  prefs: []
  type: TYPE_IMG
- en: Image from Author.
  prefs: []
  type: TYPE_NORMAL
- en: Now, we will read the file generated.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: For demonstration purposes, only the `next_date` column will be read.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/55acb599d29c4acdcdfbf9c510d103ad.png)'
  prefs: []
  type: TYPE_IMG
- en: Image from Author.
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, when the column is imported directly without parsing it as DateTime,
    the column will be a string column where the Dtype is the object. Below are two
    popular methods to convert the column into a DateTime data type.
  prefs: []
  type: TYPE_NORMAL
- en: pandas.to_datetime(pandas.Series)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: pandas.Series.astype(“datetime64”)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Output from both scripts above:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/be050f4e20440727174014f60c4739d7.png)'
  prefs: []
  type: TYPE_IMG
- en: Image from Author.
  prefs: []
  type: TYPE_NORMAL
- en: Alternatively, you can parse the columns into a DateTime object at the point
    you import the data with `parse_dates` parameter.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/38eca67451fd6205a38e46e4d3aec5b9.png)'
  prefs: []
  type: TYPE_IMG
- en: Image from Author.
  prefs: []
  type: TYPE_NORMAL
- en: General DateTime Info Extraction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There is a lot of info that can be obtained from the datetime series.
  prefs: []
  type: TYPE_NORMAL
- en: Timestamp
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Week
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Day of Year
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Quarter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ISO Calendar
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Extract the Timestamp Info
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Below is the list of properties and methods to return timestamp info.
  prefs: []
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.date](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.date.html)
    — Returns the date part of Timestamps without time and timezone information.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.time](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.time.html)
    — Return the time part of the Timestamps.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.year](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.year.html)
    — Return the year of the datetime.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.month](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.month.html)
    — Return the month as January=1, December=12'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.month_name()](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.month_name.html)
    — Return the month names of the Series or DatetimeIndex with specified locale.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.day](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.day.html)
    — Return the day of the datetime.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.hour](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.hour.html)
    — Return the hours of the datetime.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.minute](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.minute.html)
    — Return the minutes of the datetime.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.second](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.second.html)
    — Return the seconds of the datetime.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.microsecond](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.microsecond.html)
    — Return the microseconds of the datetime.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.nanosecond](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.nanosecond.html)
    — Return the nanoseconds of the datetime.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: The datetime module needs to be imported before using the methods or properties
    under `series.dt`. Below is an example of extracting the timestamp info.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ecdb7041c628d2b0a3c961c627849200.png)'
  prefs: []
  type: TYPE_IMG
- en: Image from Author.
  prefs: []
  type: TYPE_NORMAL
- en: One thing to take note of is the columns created are not a DateTime object,
    even the “Date_” column.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ad670e9f1e20cc896623f5c8510a85f6.png)'
  prefs: []
  type: TYPE_IMG
- en: Image from Author.
  prefs: []
  type: TYPE_NORMAL
- en: You may notice that the examples for second, microsecond and nanosecond are
    not demonstrated. That’s because they do not apply to the dataset. Furthermore,
    the way to apply is the same. The column type needs to be converted to datetime
    before using the properties or methods to return the respective value.
  prefs: []
  type: TYPE_NORMAL
- en: Extract Week Info/Day of Year/Quarter/ISO Calendar
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Below is the list of properties and methods to return the week number, the day
    of the year, the quarter and the info based on the ISO Calendar for the DateTime
    series.
  prefs: []
  type: TYPE_NORMAL
- en: '**Week Info**'
  prefs: []
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.dayofweek](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.dayofweek.html)
    — The day of the week with Monday=0, Sunday=6.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.day_of_week](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.day_of_week.html)
    — The day of the week with Monday=0, Sunday=6.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.weekday](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.weekday.html)
    — The day of the week with Monday=0, Sunday=6.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.day_name()](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.day_name.html#pandas.Series.dt.day_name)
    — Return the day names of the Series or DatetimeIndex with specified locale.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Day of Year**'
  prefs: []
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.dayofyear](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.dayofyear.html)
    — The ordinal day of the year.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.day_of_year](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.day_of_year.html)
    — The ordinal day of the year.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Quarter**'
  prefs: []
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.quarter](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.quarter.html)
    — The quarter of the date.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ISO Calendar**'
  prefs: []
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.isocalendar()](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.isocalendar.html)
    — Calculate year, week, and day according to the ISO 8601 standard. (Return year,
    week and day columns)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To show the fun stuff we can do with the methods/properties above, I create
    a list of dates with randomly picked dates distributed throughout the year as
    shown below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: As we are not reading from a file, there is no `parse_dates` function available.
    Hence, the column has to be converted into datetime manually.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/bc4abd95897b05d328e9d66c1ca81835.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: Below is an example of extracting the week, day of the year, quarter and ISO
    Calendar. The columns are named based on the properties or methods names for better
    understanding.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6c0cdf377cb1f894faf351d16cbe2725.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: 'Below is a summary of the table above:'
  prefs: []
  type: TYPE_NORMAL
- en: For both `day_of_week` and `weekday` properties, they return the day of the
    week with index counting starting from 0.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For `day_of_year`, `quarter` properties and the `isocalendar()` method, they
    return output with index counting starting from 1.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The `isocalendar()` method index for counting the weekday is start from 1, while
    the `weekday` starts from 0\. They both count weekdays starting from Monday. In
    another word, the first index is referring to Monday.
  prefs: []
  type: TYPE_NORMAL
- en: Check if the Date is the Start or the End of the Period
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For this section, a different date list will be created to better demonstrate
    the properties below.
  prefs: []
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.is_month_start](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.is_month_start.html)
    — Indicates whether the date is the first day of the month.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.is_month_end](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.is_month_end.html)
    — Indicates whether the date is the last day of the month.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.is_quarter_start](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.is_quarter_start.html)
    — Indicator for whether the date is the first day of a quarter.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.is_quarter_end](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.is_quarter_end.html)
    — Indicator for whether the date is the last day of a quarter.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.is_year_start](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.is_year_start.html)
    — Indicate whether the date is the first day of a year.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.is_year_end](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.is_year_end.html)
    — Indicate whether the date is the last day of the year.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Example:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/de3097fc68404392da7b11f3fc352d99.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: '**Thoughts:** I believe the properties are best for anyone that needs to prepare
    a new report on a monthly, quarterly or yearly basis.'
  prefs: []
  type: TYPE_NORMAL
- en: These properties will help them to refresh their report based on the automation
    logic created. Other than that, the properties above may also be useful in the
    calculation that needs to be restarted periodically.
  prefs: []
  type: TYPE_NORMAL
- en: Check if the Date Belongs to a Leap Year
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.is_leap_year](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.is_leap_year.html)
    — Boolean indicator if the date belongs to a leap year.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A leap year is a year, which has 366 days (instead of 365) including the 29th
    of February as an intercalary day. Leap years are years which are multiples of
    four except for the years divisible by 100 but not by 400.
  prefs: []
  type: TYPE_NORMAL
- en: We can demonstrate this function with the date created with the period range.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2d901e69d8809766449d16fa9546b8f2.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: Check the Number of Days in the Month
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Both of the properties below can return the number of days in a month.
  prefs: []
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.daysinmonth](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.daysinmonth.html)
    — The number of days in the month.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas.Series.dt.days_in_month](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.days_in_month.html)
    — The number of days in the month.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8d2a7df61ae1a727ea31affb0e836cf1.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In conclusion, some basic properties and methods to deal with the DateTime series
    have been explained. The method to convert the datatype of columns that contained
    datetime objects to datetime has been shown. Then, the basic properties and methods
    to extract or return the datetime info have been demonstrated. The datetime info
    like weekday has different indexing for different methods.
  prefs: []
  type: TYPE_NORMAL
- en: Other than that, some methods to check the properties of the date, like the
    date is the start or end of a period, or whether the date belongs to a leap year
    have been shown. Lastly, the method to check the number of a date in a month have
    been presented. These methods and properties might be useful for reporting purposes.
  prefs: []
  type: TYPE_NORMAL
- en: That’s all for the basics of dealing with dates in Python. I hope you enjoy
    reading this article and hope it helps you to understand more about how to deal
    with the DateTime series in a DataFrame. Thanks! 😊
  prefs: []
  type: TYPE_NORMAL
- en: Stay Connected
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Subscribe on [YouTube](https://www.youtube.com/channel/UCiMtx0qbILP41Ot-pkk6eJw)
  prefs: []
  type: TYPE_NORMAL
- en: Side Note
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Part 1 of this article, [Dealing with Dates in Python’s DataFrame Part 1 — Date
    Series Creation](/dealing-with-dates-in-pythons-dataframe-part-1-date-series-creation-f4a800db9ae).
  prefs: []
  type: TYPE_NORMAL
- en: I have explained the possible manipulation you can perform on the DateTime variables
    in [Dealing with Dates in Python](https://medium.com/towards-data-science/dealing-with-dates-in-python-1b4069a07a0f).
  prefs: []
  type: TYPE_NORMAL
- en: In [Report Automation Tips with Python](/report-automation-tips-with-python-783a9cd58e23),
    I have explained some tips on report automation. Check it out!
  prefs: []
  type: TYPE_NORMAL
- en: Thank you and congrats for reading to the end 😊!
  prefs: []
  type: TYPE_NORMAL
- en: Happy 2023!
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7f170dfde5196b3425f40250814dc389.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Adnan Mistry](https://unsplash.com/@adnan_visuals?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/s/photos/happy-new-year-2023?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
