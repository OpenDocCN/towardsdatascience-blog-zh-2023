["```py\n# Python Functions are Objects\ndef I_am_1():\n    return 1\n\ndef return_1():\n    return I_am_1\n\ndef add(a, b):\n    return a + b\n\nfoo = add\n\ndel add\n## let remove the original defintion\n\nprint(foo(return_1()(),2))\n## ouput 3\nprint(foo(foo(return_1()(),2),3))\n## output 6\n```", "```py\n## Python Decorators Basic -- I love dumplings\ndef add_filling_vegetable(func):\n    def wrapper(*args, **kwargs):\n        print(\"<^^^vegetable^^^>\")\n        func(*args, **kwargs)\n        print(\"<^^^vegetable^^^>\")\n    return wrapper\n\ndef add_dumplings_wrapper(func):\n    def wrapper(*args, **kwargs):\n        print(\"<---dumplings_wrapper--->\")\n        func(*args, **kwargs)\n        print(\"<---dumplings_wrapper--->\")\n    return wrapper\n\ndef dumplings(ingredients=\"meat\"):\n    print(f\"({ingredients})\")\n\nadd_dumplings_wrapper(add_filling_vegetable(dumplings))()\n# <---dumplings_wrapper--->\n# <^^^vegetable^^^>\n# (meat)\n# <^^^vegetable^^^>\n# <---dumplings_wrapper--->\nadd_dumplings_wrapper(add_filling_vegetable(dumplings))(ingredients='tofu')\n# <---dumplings_wrapper--->\n# <^^^vegetable^^^>\n# (tofu)\n# <^^^vegetable^^^>\n# <---dumplings_wrapper--->\n```", "```py\n## Stack decorator, the order matters here\n@add_dumplings_wrapper\n@add_filling_vegetable\ndef fancy_dumplings(ingredients=\"meat\"):\n    print(f\"({ingredients})\")\n\nfancy_dumplings()\n# <---dumplings_wrapper--->\n# <^^^vegetable^^^>\n# (meat)\n# <^^^vegetable^^^>\n# <---dumplings_wrapper--->\n\nfancy_dumplings(ingredients='tofu')\n# <---dumplings_wrapper--->\n# <^^^vegetable^^^>\n# (tofu)\n# <^^^vegetable^^^>\n# <---dumplings_wrapper--->\n```", "```py\nimport functools\nimport time\n\ndef timer(func):\n    \"\"\"Print the runtime of the decorated function\"\"\"\n    @functools.wraps(func)\n    def wrapper_timer(*args, **kwargs):\n        start_time = time.perf_counter()    \n        value = func(*args, **kwargs)\n        end_time = time.perf_counter()      \n        run_time = end_time - start_time    \n        print(f\"Finished {func.__name__!r} in {run_time:.10f} secs\")\n        return value\n    return wrapper_timer\n```", "```py\n@timer\n@add_dumplings_wrapper\n@add_filling_vegetable\ndef fancy_dumplings(ingredients=\"meat\"):\n    print(f\"({ingredients})\")\n\nfancy_dumplings()\n# <---dumplings_wrapper--->\n# <^^^vegetable^^^>\n# (meat)\n# <^^^vegetable^^^>\n# <---dumplings_wrapper--->\n# Finished 'wrapper' in 0.0000334990 secs\n```"]