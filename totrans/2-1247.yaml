- en: How to Structure an ML Project for Reproducibility and Maintainability
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-to-structure-an-ml-project-for-reproducibility-and-maintainability-54d5e53b4c82](https://towardsdatascience.com/how-to-structure-an-ml-project-for-reproducibility-and-maintainability-54d5e53b4c82)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Start Your Next ML Project With This Template
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://khuyentran1476.medium.com/?source=post_page-----54d5e53b4c82--------------------------------)[![Khuyen
    Tran](../Images/98aa66025ad29b618e875c75f1c400a5.png)](https://khuyentran1476.medium.com/?source=post_page-----54d5e53b4c82--------------------------------)[](https://towardsdatascience.com/?source=post_page-----54d5e53b4c82--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----54d5e53b4c82--------------------------------)
    [Khuyen Tran](https://khuyentran1476.medium.com/?source=post_page-----54d5e53b4c82--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----54d5e53b4c82--------------------------------)
    ·7 min read·Jan 15, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: Motivation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Getting started is often the most challenging part when building ML projects.
    How should you structure your repository? Which standards should you follow? Will
    your teammates be able to reproduce the results of your experimentations?
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6b3ccaefb22d7a875a1dc960bf0ae24a.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Instead of trying to find an ideal repository structure, wouldn’t it be nice
    to have a template to get started?
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/794dd15867eacbcbc1c70cfec85b7d7c.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: That is why I created [data-science-template](https://github.com/khuyentran1401/data-science-template/tree/prefect),
    consolidating best practices I’ve learned over the years about structuring data
    science projects.
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://github.com/khuyentran1401/data-science-template/tree/prefect?source=post_page-----54d5e53b4c82--------------------------------)
    [## GitHub - khuyentran1401/data-science-template at prefect'
  prefs: []
  type: TYPE_NORMAL
- en: This template is the result of my years refining the best way to structure a
    data science project so that it is…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: github.com](https://github.com/khuyentran1401/data-science-template/tree/prefect?source=post_page-----54d5e53b4c82--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: 'This template allows you to:'
  prefs: []
  type: TYPE_NORMAL
- en: ✅ Create a readable structure for your project
  prefs: []
  type: TYPE_NORMAL
- en: ✅ Efficiently manage dependencies in your project
  prefs: []
  type: TYPE_NORMAL
- en: ✅ Create short and readable commands for repeatable tasks
  prefs: []
  type: TYPE_NORMAL
- en: ✅ Rerun only modified components of a pipeline
  prefs: []
  type: TYPE_NORMAL
- en: ✅ Observe and automate your code
  prefs: []
  type: TYPE_NORMAL
- en: ✅ Enforce type hints at runtime
  prefs: []
  type: TYPE_NORMAL
- en: ✅ Check issues in your code before committing
  prefs: []
  type: TYPE_NORMAL
- en: ✅ Automatically document your code
  prefs: []
  type: TYPE_NORMAL
- en: ✅ Automatically run tests when committing your code
  prefs: []
  type: TYPE_NORMAL
- en: Tools Used in This Template
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This template is lightweight and uses only tools that can generalize to various
    use cases. Those tools are:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Poetry](https://python-poetry.org/): manage Python dependencies'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Prefect](https://www.prefect.io/): orchestrate and observe your data pipeline'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Pydantic](https://docs.pydantic.dev/): validate data using Python type annotations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pre-commit plugins](https://pre-commit.com/): ensure your code is well-formatted,
    tested, and documented, following best practices'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Makefile: automate repeatable tasks using short commands'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[GitHub Actions](https://docs.github.com/en/actions): automate your CI/CD pipeline'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pdoc](https://github.com/pdoc3/pdoc): automatically create API documentation
    for your project'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Usage
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To download the template, start by installing [Cookiecutter](https://github.com/cookiecutter/cookiecutter):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Create a project based on the template:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Try out the project by following [these instructions](https://github.com/khuyentran1401/data-science-template/tree/prefect/%7B%7Bcookiecutter.directory_name%7D%7D#quick-start).
  prefs: []
  type: TYPE_NORMAL
- en: In the following few sections, we will detail some valuable features of this
    template.
  prefs: []
  type: TYPE_NORMAL
- en: Create a Readable Structure
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The structure of the project created from the template is standardized and easy
    to understand.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/aae93c2d484b9f96547c8ede6315c156.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is the summary of the roles of these files:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Efficiently Manage Dependencies
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Poetry](https://python-poetry.org/) is a Python dependency management tool
    and is an alternative to pip.'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/how-to-effortlessly-publish-your-python-package-to-pypi-using-poetry-44b305362f9f?source=post_page-----54d5e53b4c82--------------------------------)
    [## How to Effortlessly Publish your Python Package to PyPI Using Poetry'
  prefs: []
  type: TYPE_NORMAL
- en: Share your Useful Python Utilities in 10 Minutes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/how-to-effortlessly-publish-your-python-package-to-pypi-using-poetry-44b305362f9f?source=post_page-----54d5e53b4c82--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: 'With Poetry, you can:'
  prefs: []
  type: TYPE_NORMAL
- en: Separate the main dependencies and the sub-dependencies into two separate files
    (instead of storing all dependencies in `requirements.txt`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove all unused sub-dependencies when removing a library
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoid installing new packages that conflict with the existing packages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Package your project in several lines of code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: and more.
  prefs: []
  type: TYPE_NORMAL
- en: Find the instruction on how to install Poetry [here](https://python-poetry.org/docs/#installation).
  prefs: []
  type: TYPE_NORMAL
- en: Create Short Commands for Repeatable Tasks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Makefile allows you to create short and readable commands for tasks. If you
    are not familiar with Makefile, check out this [short tutoria](https://the-turing-way.netlify.app/reproducible-research/make/make-examples.html)l.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use Makefile to automate tasks such as setting up the environment:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, whenever others want to set up the environment for your projects, they
    just need to run the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: And a series of commands will be run!
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/65a33f314a8419cd44feb82a775c33a4.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: '[View the full Makefile.](https://github.com/khuyentran1401/data-science-template/blob/prefect/%7B%7Bcookiecutter.directory_name%7D%7D/Makefile)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Rerun Only Modified Components of a Pipeline
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Make is also useful when you want to run a task whenever its dependencies are
    modified.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0a083dffb018addbc7204e243d3d6845.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'As an example, let’s capture the connection between files in the following
    diagram through a Makefile:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/83e9bc6107482bdf0d306c2697b2ba7e.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'To create the file `models/svc.pkl` , you can run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Since `data/processed/xy.pkl` and `src/train_model.py` are the prerequisites
    of the `models/svc.pkl` target, make runs the recipes to create both `data/processed/xy.pkl`
    and `models/svc.pkl` .
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: If there are no changes in the prerequisite of `models/svc.pkl`, make will skip
    updating `models/svc.pkl` .
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Thus, with make, you avoid wasting time on running unnecessary tasks.
  prefs: []
  type: TYPE_NORMAL
- en: Observe and Automate Your Code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This template leverages [Prefect](https://www.prefect.io/) to:'
  prefs: []
  type: TYPE_NORMAL
- en: Observe all your runs from the [Prefect UI](https://docs.prefect.io/ui/overview/).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/d5c7f293b016045a70f295284dc31988.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'Among others, Prefect can help you:'
  prefs: []
  type: TYPE_NORMAL
- en: Retry when your code fails
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Schedule your code run
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Send notifications when your flow fails
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[](https://medium.com/the-prefect-blog/orchestrate-your-data-science-project-with-prefect-2-0-4118418fd7ce?source=post_page-----54d5e53b4c82--------------------------------)
    [## Orchestrate Your Data Science Project with Prefect 2.0'
  prefs: []
  type: TYPE_NORMAL
- en: Make Your Data Science Pipeline Resilient Against Failures
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: medium.com](https://medium.com/the-prefect-blog/orchestrate-your-data-science-project-with-prefect-2-0-4118418fd7ce?source=post_page-----54d5e53b4c82--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: You can access these features by simply turning your function into a Prefect
    [flow](https://docs.prefect.io/concepts/flows/).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Enforce Type Hints At Runtime
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Pydantic](https://docs.pydantic.dev/) is a Python library for data validation
    by leveraging type annotations.'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/build-a-full-stack-ml-application-with-pydantic-and-prefect-915f00fe0c62?source=post_page-----54d5e53b4c82--------------------------------)
    [## Build a Full-Stack ML Application With Pydantic And Prefect'
  prefs: []
  type: TYPE_NORMAL
- en: Create a UI for ML Feature Engineering in One Line of Code
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/build-a-full-stack-ml-application-with-pydantic-and-prefect-915f00fe0c62?source=post_page-----54d5e53b4c82--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: '[Pydantic models](https://docs.pydantic.dev/usage/models/) enforce data types
    on flow parameters and validate their values when a flow run is executed.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0297ba1852fa13446b544e3ee8654013.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'If the value of a field doesn’t match the type annotation, you will get an
    error at runtime:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: All Pydantic models are in [the](https://github.com/khuyentran1401/data-science-template/blob/prefect/%7B%7Bcookiecutter.directory_name%7D%7D/src/config.py)
    `[src/config.py](https://github.com/khuyentran1401/data-science-template/blob/prefect/%7B%7Bcookiecutter.directory_name%7D%7D/src/config.py)`
    [file.](https://github.com/khuyentran1401/data-science-template/blob/prefect/%7B%7Bcookiecutter.directory_name%7D%7D/src/config.py)
  prefs: []
  type: TYPE_NORMAL
- en: Detect Issues in Your Code Before Committing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before committing your Python code to Git, you need to make sure your code:'
  prefs: []
  type: TYPE_NORMAL
- en: passes unit tests
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: is organized
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: conforms to best practices and style guides
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: is documented
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: However, manually checking these criteria before committing your code can be
    tedious. [pre-commit](https://pre-commit.com/) is a framework that allows you
    to identify issues in your code before committing it.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/4-pre-commit-plugins-to-automate-code-reviewing-and-formatting-in-python-c80c6d2e9f5?source=post_page-----54d5e53b4c82--------------------------------)
    [## 4 pre-commit Plugins to Automate Code Reviewing and Formatting in Python'
  prefs: []
  type: TYPE_NORMAL
- en: Write High-Quality Code with black, flake8, isort, and interrogate
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/4-pre-commit-plugins-to-automate-code-reviewing-and-formatting-in-python-c80c6d2e9f5?source=post_page-----54d5e53b4c82--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: You can add different plugins to your pre-commit pipeline. Once your files are
    committed, they will be validated against these plugins. Unless all checks pass,
    no code will be committed.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f73e4802205fd2f9660f4caacebb066b.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: You can find all plugins used in this template in [this](https://github.com/khuyentran1401/data-science-template/blob/prefect/%7B%7Bcookiecutter.directory_name%7D%7D/.pre-commit-config.yaml)
    `[.pre-commit-config.yaml](https://github.com/khuyentran1401/data-science-template/blob/prefect/%7B%7Bcookiecutter.directory_name%7D%7D/.pre-commit-config.yaml)`
    [file.](https://github.com/khuyentran1401/data-science-template/blob/prefect/%7B%7Bcookiecutter.directory_name%7D%7D/.pre-commit-config.yaml)
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/386357e39cd802e34796583b34ea36f6.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Automatically Document Your Code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Data scientists often collaborate with other team members on a project. Thus,
    it is essential to create good documentation for the project.
  prefs: []
  type: TYPE_NORMAL
- en: 'To create API documentation based on docstrings of your Python files and objects,
    run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Now you can view the documentation on [http://localhost:8080](http://localhost:8080/).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c547306e1a1a2d787e7a20304b988fa9.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Automatically Run Tests
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[GitHub Actions](https://github.com/features/actions) allows you to automate
    your CI/CD pipelines, making it faster to build, test, and deploy your code.'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://pub.towardsai.net/github-actions-in-mlops-automatically-check-and-deploy-your-ml-model-9a281d7f3c84?source=post_page-----54d5e53b4c82--------------------------------)
    [## GitHub Actions in MLOps: Automatically Check and Deploy Your ML Model'
  prefs: []
  type: TYPE_NORMAL
- en: Automate Your ML Pipeline with GitHub Actions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: pub.towardsai.net](https://pub.towardsai.net/github-actions-in-mlops-automatically-check-and-deploy-your-ml-model-9a281d7f3c84?source=post_page-----54d5e53b4c82--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: When creating a pull request on GitHub, the tests in your `tests` folder will
    [automatically run](https://github.com/khuyentran1401/data-science-template/tree/prefect).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2d382383818496efdd1e1d6bccf4bbd6.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: '[View the code for this workflow.](https://github.com/khuyentran1401/data-science-template/blob/prefect/%7B%7Bcookiecutter.directory_name%7D%7D/.github/workflows/run_test.yaml)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Congratulations! You have just learned how to use a template to create a reusable
    and maintainable ML project. This template is meant to be flexible. Feel free
    to adjust the project based on your applications.
  prefs: []
  type: TYPE_NORMAL
- en: I love writing about data science concepts and playing with different data science
    tools. You can connect with me on [LinkedIn](https://www.linkedin.com/in/khuyen-tran-1401/)
    and [Twitter](https://twitter.com/KhuyenTran16).
  prefs: []
  type: TYPE_NORMAL
- en: 'Star [this repo](https://github.com/khuyentran1401/Data-science) if you want
    to check the code for the articles I have written. Follow me on Medium to stay
    notified about my latest data science articles:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/pytest-for-data-scientists-2990319e55e6?source=post_page-----54d5e53b4c82--------------------------------)
    [## Pytest for Data Scientists'
  prefs: []
  type: TYPE_NORMAL
- en: A Comprehensive Guide to Pytest for your Data Science Projects
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/pytest-for-data-scientists-2990319e55e6?source=post_page-----54d5e53b4c82--------------------------------)
    [](/detect-defects-in-a-data-pipeline-early-with-validation-and-notifications-83e9b652e65a?source=post_page-----54d5e53b4c82--------------------------------)
    [## Detect Defects in a Data Pipeline Early with Validation and Notifications
  prefs: []
  type: TYPE_NORMAL
- en: Build a Robust Data Pipeline in Python with Deepchecks and Prefect
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/detect-defects-in-a-data-pipeline-early-with-validation-and-notifications-83e9b652e65a?source=post_page-----54d5e53b4c82--------------------------------)
    [](/create-robust-data-pipelines-with-prefect-docker-and-github-12b231ca6ed2?source=post_page-----54d5e53b4c82--------------------------------)
    [## Create Robust Data Pipelines with Prefect, Docker and GitHub
  prefs: []
  type: TYPE_NORMAL
- en: Store Your Workflow in GitHub and Execute it in a Docker Container
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'towardsdatascience.com](/create-robust-data-pipelines-with-prefect-docker-and-github-12b231ca6ed2?source=post_page-----54d5e53b4c82--------------------------------)
    [](/introduction-to-dvc-data-version-control-tool-for-machine-learning-projects-7cb49c229fe0?source=post_page-----54d5e53b4c82--------------------------------)
    [## Introduction to DVC: Data Version Control Tool for Machine Learning Projects'
  prefs: []
  type: TYPE_NORMAL
- en: Just like Git, but with Data!
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/introduction-to-dvc-data-version-control-tool-for-machine-learning-projects-7cb49c229fe0?source=post_page-----54d5e53b4c82--------------------------------)
  prefs: []
  type: TYPE_NORMAL
