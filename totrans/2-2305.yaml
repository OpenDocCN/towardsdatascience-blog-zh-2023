- en: 'Visualizing Social Networks for Better Insights: Analyzing and Mapping Social
    Relationships with Python’s NetworkX Library'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/visualizing-social-networks-for-better-insights-analyzing-and-mapping-social-relationships-with-efeb82ab853e](https://towardsdatascience.com/visualizing-social-networks-for-better-insights-analyzing-and-mapping-social-relationships-with-efeb82ab853e)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A beginner’s guide to using Python’s NetworkX library to conduct social network
    analysis
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://christineegan42.medium.com/?source=post_page-----efeb82ab853e--------------------------------)[![Christine
    Egan](../Images/d0a11bde52ceaa53d7162f2dd77c8041.png)](https://christineegan42.medium.com/?source=post_page-----efeb82ab853e--------------------------------)[](https://towardsdatascience.com/?source=post_page-----efeb82ab853e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----efeb82ab853e--------------------------------)
    [Christine Egan](https://christineegan42.medium.com/?source=post_page-----efeb82ab853e--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----efeb82ab853e--------------------------------)
    ·6 min read·May 20, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: In detective shows, the [use of a corkboard containing relevant evidence](https://tvtropes.org/pmwiki/pmwiki.php/Main/StringTheory)
    that is connected by red strings is often depicted as a method for investigators
    to visualize and track connections between individuals and events in an investigation.
    The red string is used to physically connect different nodes (often represented
    by photographs or notes) on a board or wall, showing the relationships between
    them.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/dec485cff44fa5de03d7ae2f2233fda4.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Volodymyr Hryshchenko](https://unsplash.com/@lunarts?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/s/photos/investigation?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: This ubiquitous trope is described by some as [“string theory”](https://tvtropes.org/pmwiki/pmwiki.php/Main/StringTheory)
    (no, not that [string theory](https://en.wikipedia.org/wiki/String_theory)) and
    there are some that refer to the emergent object itself as a [“crazy wall”](https://www.esquire.com/uk/culture/film/news/a7703/detective-show-crazy-walls/)
    or a [“string board”](https://slate.com/news-and-politics/2022/02/fbi-crazy-stringboard-recruiting-campaign.html).
    In the field of network theory, this technique of analyzing the links and connections
    between people, organizations, or documents, is known as [link analysis](https://doc.arcgis.com/en/insights/latest/analyze/link-analysis.htm)
    and it has been used for over a century in law enforcement, fraud detection, sociological
    research, and a variety of other contexts.
  prefs: []
  type: TYPE_NORMAL
- en: Link Analysis versus Social Network Analysis
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Link analysis refers to the process of analyzing the links (or relationships)
    between any kind of entity. This can include analyzing links between web pages,
    emails, financial transactions, or any other data type where relationships between
    entities are relevant. [Social network analysis](/social-network-analysis-from-theory-to-applications-with-python-d12e9a34c2c7)
    is a specific kind of link analysis that focuses exclusively on people and groups
    and their relationships with each other.
  prefs: []
  type: TYPE_NORMAL
- en: One aspect that makes SNA such a powerful tool is the ability to visualize these
    relationships in a graph, using nodes to represent individuals and edges to represent
    the connections between them. Visualizing individuals and relationships allows
    us to more easily intuit the dynamics of social influence, the formation of social
    groups, and the flow of information between groups and individuals.
  prefs: []
  type: TYPE_NORMAL
- en: We are all connected like a net we cannot see.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: — [Taxi Driver Wisdom](https://archive.org/details/taxidriverwisdom0000unse)
    (1996)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Social Network Analysis with Python and NetworkX**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[NetworkX](https://pypi.org/project/networkx/) is a Python library for the
    creation, manipulation, and study of complex networks. It can handle networks
    with millions of nodes and edges, and provides functions for generating random
    networks, calculating network metrics, and visualizing network structures. It
    also has a wide range of algorithms for [community detection](/community-detection-algorithms-9bd8951e7dae),
    [link prediction](https://networkx.org/documentation/stable/reference/algorithms/link_prediction.html),
    and [network visualization](https://networkx.org/documentation/stable/auto_examples/index.html).
    While NetworkX has extensive capabilities, Python users will find it user-friendly
    and intuitive to use.'
  prefs: []
  type: TYPE_NORMAL
- en: Basic Concepts of Social Network Analysis
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: So what concepts can we use to analyze social networks? A good place to start
    is with *nodes* and *edges*, which are the basic components of a network.
  prefs: []
  type: TYPE_NORMAL
- en: '**Nodes** represent the individuals in a network, while **edges** constitute
    the relationships between the individuals.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7c9f7a816aac9e38e35435ae8066cff1.png)'
  prefs: []
  type: TYPE_IMG
- en: Example of a graph where nodes and edges are labeled.
  prefs: []
  type: TYPE_NORMAL
- en: To demonstrate, let’s build a simple network in Python with NetworkX, to represent
    the symmetric relationship between [Billy Corgan](https://en.wikipedia.org/wiki/Billy_Corgan)
    and the other founding members of the [Smashing Pumpkins](https://smashingpumpkins.com/).
  prefs: []
  type: TYPE_NORMAL
- en: 'That will output a network graph that looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8895bef9e7a9c3e564880c8844487410.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Describing Social Networks with Centrality**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: One criterion that is used to describe individuals and relationships in a network
    is *centrality*. **Centrality** is a measure of the importance or influence of
    nodes in the network. Two measures of centrality include *degree centrality* and
    *betweenness centrality*.
  prefs: []
  type: TYPE_NORMAL
- en: '**Degree centrality** is a measure of the importance of a node in a network
    based on the number of connections it has. Nodes with a high degree of centrality
    are considered more influential or central in the network. Degree centrality can
    be calculated by dividing the number of connections a node has by the maximum
    possible number of connections in the network. Degree centrality of 1 for a node
    in a network means that the node is directly connected to all other nodes in the
    network.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Betweenness centrality** measures how important each node is in the network
    based on how frequently it appears on the shortest path between pairs of other
    nodes. Betweenness centrality allows us to evaluate which nodes in the network
    are considered more influential because they play a critical role in connecting
    different parts of the network.'
  prefs: []
  type: TYPE_NORMAL
- en: Betweenness centrality can be calculated by counting the number of shortest
    paths that pass through a node and dividing by the total number of shortest paths
    in the network.
  prefs: []
  type: TYPE_NORMAL
- en: Calculate Centrality with NetworkX
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the code below, we demonstrate how to use the graph object that we built
    with NetworkX to calculate the degree centrality and betweenness centrality of
    nodes in the network.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the code below, we demonstrate how to use the graph object that we built
    with NetworkX to calculate the degree centrality and betweenness centrality of
    nodes in the network.In this code, we generated a graph object, `nx`, that represents
    the symmetrical relationship between Billy Corgan and the founding members of
    the Smashing Pumpkins. Then, the method `.degree_centrality` is applied to generate
    a dictionary where each node and its degree centrality are stored as key-value
    pairs. We repeat this procedure with`.betweeenness_centrality` to generate a dictionary
    that includes each node in `nx` and its betweenness centrality calculation. The
    result is the following table:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: So how can we interpret these results?
  prefs: []
  type: TYPE_NORMAL
- en: Interpreting Degree Centrality
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Billy Corgan has a degree centrality of 1, which means that he has the maximum
    number of links to the other band members. If you recall, this is consistent with
    our inputs and the way that we constructed our network to demonstrate the symmetric
    relationship between Billy Corgan and each of his bandmates. Since Billy Corgan
    appeared in every tuple, he will have a link to every other node.
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, the other bandmates appear only once. So how we would apply
    the degree centrality formula to the other bandmates to arrive a value of 0.333?
  prefs: []
  type: TYPE_NORMAL
- en: 'As a refresher, degree centrality is calculated like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '`degree(node) / (total nodes — 1)`'
  prefs: []
  type: TYPE_NORMAL
- en: Since degree refers to the number of edges connected to node, every bandmate
    that is connected to Billy Corgan by an edge will add another degree.
  prefs: []
  type: TYPE_NORMAL
- en: If `degree(node) = 3` and `(total nodes — 1) = (4–1) = 3` then `degree centrality
    = 3/3 = 1`.
  prefs: []
  type: TYPE_NORMAL
- en: We can apply this in a similar way to each band member. Since they each have
    one degree, then `1/3 = .333`.
  prefs: []
  type: TYPE_NORMAL
- en: Interpreting Betweenness Centrality
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The betweenness centrality for a node is calculated as the sum of the fraction
    of all shortest paths between pairs of other nodes in the network that pass through
    that node divided by the total number of shortest paths between those pairs of
    nodes.
  prefs: []
  type: TYPE_NORMAL
- en: In our example, this is not particularly meaningful, because we have a small
    network, and we have only visualized the relationship with Billy’s bandmates in
    the Smashing Pumpkins and not the relationships with the other bandmates and each
    other (or any other bands that they might be in).
  prefs: []
  type: TYPE_NORMAL
- en: But how did we arrive at a betweenness centrality for Billy Corgan in this scenario?
    Betweenness centrality of 1 for a node means that the node lies on all the shortest
    paths between pairs of other nodes in the network. In other words, it serves as
    a critical bridge or connector between different parts of the network.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/06fcc0d05dc38773ea3c0bf711882831.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Billy Corgan with The Smashing Pumpkins 2008–02–18](https://commons.wikimedia.org/wiki/Category:The_Smashing_Pumpkins#/media/File:Billy_Corgan_with_The_Smashing_Pumpkins_2008-02-18.jpg);
    [CC BY 2.0](https://creativecommons.org/licenses/by/2.0)'
  prefs: []
  type: TYPE_NORMAL
- en: When a node has a betweenness centrality of 1, it implies a high level of influence
    and control over the flow of information or resources within the network. Any
    information or interaction passing through the network is likely to pass through
    this node. Therefore, it can be seen as a key bottleneck or mediator in the network’s
    communication.
  prefs: []
  type: TYPE_NORMAL
- en: Nodes with high betweenness centrality are often considered necessary in terms
    of network dynamics, as they can control the spread of information, influence
    decision-making processes, or act as crucial connectors for efficient communication
    within the network.
  prefs: []
  type: TYPE_NORMAL
- en: It is important to note that the interpretation of betweenness centrality should
    also consider the context and specific characteristics of the network under analysis.
    The significance of a betweenness centrality score of 1 may vary depending on
    the size, structure, and purpose of the network. In an upcoming tutorial, we will
    expand Billy’s Network and explore how this creates changes in his betweenness
    centrality
  prefs: []
  type: TYPE_NORMAL
- en: 🤖 Christine Egan | [Medium](https://medium.com/@christineegan42) | [LinkedIn](https://www.linkedin.com/in/christineegan42/)
    | [GitHub](https://github.com/christine-egan42)
  prefs: []
  type: TYPE_NORMAL
