- en: A Data-Driven Tactics Simulation of Monopoly
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/a-data-driven-tactics-simulation-for-monopoly-864e7cffe508](https://towardsdatascience.com/a-data-driven-tactics-simulation-for-monopoly-864e7cffe508)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A visual guide on dominating your next Monopoly game using thousands of MATLAB
    simulations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@Jake_Mitchell?source=post_page-----864e7cffe508--------------------------------)[![Jake
    Mitchell](../Images/08d2f4af3a58a419b0f9547ca64bbb07.png)](https://medium.com/@Jake_Mitchell?source=post_page-----864e7cffe508--------------------------------)[](https://towardsdatascience.com/?source=post_page-----864e7cffe508--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----864e7cffe508--------------------------------)
    [Jake Mitchell](https://medium.com/@Jake_Mitchell?source=post_page-----864e7cffe508--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----864e7cffe508--------------------------------)
    ·7 min read·Jan 9, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4cb410d22e0ec5c6fcc90cbdb4c9c39d.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Joshua Hoehne](https://unsplash.com/@mrthetrain?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: 'Introduction:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this sequel to a previous article of mine, [Simulating Monopoly](https://medium.com/towards-data-science/simulating-monopoly-finding-the-best-properties-using-matlab-130fe557b1ae),
    I will be looking into the buying strategies of players — and how those strategies
    affect game outcomes. I will be doing this by modeling the game in MATLAB, and
    then simulating thousands of games to find patterns within the player choices.
  prefs: []
  type: TYPE_NORMAL
- en: 'Coding the Game:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To model monopoly, you just need to simulate the rolling of dice and move players
    based on that roll value. Then apply a list of conditional statements based on
    what kind of tile they land on. If they land on a property, either decide to buy
    the property or pay rent to the owner. If they land on “Go to Jail”, change the
    location of the player to “Jail”. That aspect of the game is pretty straightforward
    in the code, and is outlined in more detail in my previous article linked above.
  prefs: []
  type: TYPE_NORMAL
- en: 'The code that is most exciting to me is the decision-making when it comes to
    buying property, buying houses/hotels, and trading. When a player is deciding
    to buy a property, two factors are taken into account:'
  prefs: []
  type: TYPE_NORMAL
- en: '**The Price Ratio** — the player’s money divided by the price of the property.
    The smaller the ratio, the bigger the impact on the player’s financial health.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The Purchase Coefficient** — a random value assigned at the start of the
    game. The lower the purchase coefficient, the more risky a player is with their
    buying habits.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These two values are fed into the **Decision Factor Formula**. This formula
    is a modified sigmoid function that yields a result between 0 and 1\. Results
    closer to 0 mean that the player would never buy this property in this situation,
    and results closer to 1 would be a great deal for the player. Then a random number
    generator produces a number between 0 and 1\. If that number if less than the
    decision factor, the player buys the property (see code below).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: These two values and associated function are used for all players at every decision
    point in the game. There is even an extra incentive added to properties that would
    create a monopoly for that player.
  prefs: []
  type: TYPE_NORMAL
- en: The game is simulated until all but 1 player is bankrupt, at which the game
    is over and the statistics are recorded. Then everything is reset, and a new game
    starts. Repeat 1,000 times.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Results:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The following results and analysis were performed with the assumption that 6
    people were playing the game.
  prefs: []
  type: TYPE_NORMAL
- en: '*Should you be more risky, or more conservative with your money?*'
  prefs: []
  type: TYPE_NORMAL
- en: The plot below shows how your buying strategy affects your average wealth over
    the course of a game. As you move from left to right along the x-axis, the buying
    strategy goes from risky to conservative.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5013beee48f8a79098efc7b7e0249823.png)'
  prefs: []
  type: TYPE_IMG
- en: Image provided by the author.
  prefs: []
  type: TYPE_NORMAL
- en: 'You could argue that there is a slight advantage towards being more risky based
    on the darker cluster of points in the bottom-left corner, but it’s not much.
    This plot unfortunately shows that **there is no correlation between buying strategy
    and success rates**, which was really disappointing to see. To prove it is not
    dependent on player amount, here are the same results with 4 players and 8 players:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b3f28a9812d67e9ce4b3adc0c7125f56.png)![](../Images/9d705dea91b56fdf4cab542515eb1593.png)'
  prefs: []
  type: TYPE_IMG
- en: 4 players (left) and 8 players (right). Images provided by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Once again, there is a little evidence to show that being more risky can increase
    your average wealth based on these plots alone. Also, the accumulation of points
    near 0 is because in a game where almost everyone ends with 0$, you would expect
    the average to be skewed in that direction.
  prefs: []
  type: TYPE_NORMAL
- en: '*So there is no ideal buying strategy that I could use?*'
  prefs: []
  type: TYPE_NORMAL
- en: As it turns out, there is a buying strategy that could benefit a player, but
    it actually has to do more with how your opponents are playing.
  prefs: []
  type: TYPE_NORMAL
- en: The plot below is nearly identical to the previous plots, but now the x-axis
    is the **Purchase Coefficient Ratio**, or the ratio of your coefficient to the
    average of your opponents. Values lower than 1 mean you are being more risky than
    your opponents. Values higher than 1 mean you are being more conservative.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7055ccc03c202b68c671affd625a63d7.png)'
  prefs: []
  type: TYPE_IMG
- en: Image provided by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Based in this plot, we could say with more certainty that **being more risky
    with your buying strategy — compared to your opponents — increases your expected
    average wealth.** This is because there is a significant increase in points located
    higher up the y-axis between the x-axis values of 0.5 and 1.
  prefs: []
  type: TYPE_NORMAL
- en: We could also say that **being more conservative — compared to your opponents
    — decreases you expected average wealth.** The right side of the chart shows that
    players who were more conservative than their opponents almost had no cases of
    ending with a significant amount of money.
  prefs: []
  type: TYPE_NORMAL
- en: '*So if I should be more risky with my property buying compared to my opponents,
    which properties should I be focusing on?*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Over the course of the 1,000 simulated games, I looked at which properties
    the eventual winners had at the point of their first opponent going bankrupt:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/afe626b22e549a1966b83de73b05c3f4.png)![](../Images/9f59ea982b8cf69fc6d8accbc67b537a.png)'
  prefs: []
  type: TYPE_IMG
- en: Images provided by the author.
  prefs: []
  type: TYPE_NORMAL
- en: The x-axis is simply the tile location on the board. It’s like if you broke
    apart the 4 sides of the board and lined them up in a row. The colors match the
    properties on a standard monopoly board, with the exception of railroads being
    black points and utilities being gray points.
  prefs: []
  type: TYPE_NORMAL
- en: When looking at this plot, it is clear that **the winning players targeted 3
    specific groups of properties. They targeted the light blue, pink, and orange
    property groups** (see red circles on board above).All of these properties had
    ownership rates well over 35%, and some came close to 45% in the case of the light
    blues.
  prefs: []
  type: TYPE_NORMAL
- en: '*Why do players who win often own these properties?*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The ideal property to own is one that has an excellent return on investment.
    You do not want to own properties that will take an expected 80 turns for you
    to make your money back. The plot below describes it perfectly:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3b66c668d3568ce6c1eb489066ea7318.png)'
  prefs: []
  type: TYPE_IMG
- en: Image provided by the author.
  prefs: []
  type: TYPE_NORMAL
- en: The rounds to breakeven is calculated using the average money spent on the property,
    including the initial purchase, and any subsequent housing added. This is divided
    by the average amount of rent earned per round to find the average rounds it takes
    to get your money back.
  prefs: []
  type: TYPE_NORMAL
- en: The properties that were most likely to be owned by winners are near the bottom,
    meaning that it takes less time to earn your money back, hence more time to make
    money from it. The plot below shows how these winner really valued properties
    with excellent return on investment rates.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1ab27138409fb80068b56ee0a979c442.png)'
  prefs: []
  type: TYPE_IMG
- en: Image provided by the author.
  prefs: []
  type: TYPE_NORMAL
- en: The light blue, pink, and orange properties are clearly the best on the board.
    This is important because **not only should you be more risky than your opponents,
    you should also focus that risk on these 3 property sets.**
  prefs: []
  type: TYPE_NORMAL
- en: '*What is a quantitative value that can be assigned to this level of risk?*'
  prefs: []
  type: TYPE_NORMAL
- en: 'I tracked the wealth of all 1,000 winners from the simulated games and then
    averaged the amount of money at each dice roll to produce this visual:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3ef892dd8482e0bc1008cbf658a1685b.png)'
  prefs: []
  type: TYPE_IMG
- en: Image provided by the author.
  prefs: []
  type: TYPE_NORMAL
- en: The average winner for a 6-player game **spent money on properties until they
    reached between 750$ and 800$ left in their hand.** This should be achieved over
    the course of roughly 60–70 dice rolls, or around 10 complete cycles amongst all
    the players.
  prefs: []
  type: TYPE_NORMAL
- en: '**Once the average winner reached nearly 3 times the starting amount of money,
    they began reinvesting in properties** that become available as players go bankrupt.
    They also start to focus on buying houses and hotels at this point.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Conclusions:**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It is not enough to just play in a risky manner, you should also try to be more
    risky than your opponents. At the very least, match your opponent’s playing style.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Your buying strategy should revolve around trying to acquire the light blue,
    pink, and orange properties.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Aim to spend around half of your starting amount on properties early in the
    game.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Thank you for taking the time to read my article! If this type of content interests
    you, I recommend reading some of my other board game simulations including [Teaching
    a Machine How to Play Connect 4](https://medium.com/towards-data-science/i-taught-a-machine-how-to-play-connect-4-df261da4e23f)
    or [Simulating Mancala](https://medium.com/towards-data-science/simulating-mancala-what-happens-when-i-push-this-game-to-its-limits-28d9c0a58616).
  prefs: []
  type: TYPE_NORMAL
