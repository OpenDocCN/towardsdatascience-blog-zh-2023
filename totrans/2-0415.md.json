["```py\nunsortedData = [20, 33, 12, 53, 24, 65, 23, 4, 53, 1];\n```", "```py\ndef bubbleSort(data):\n\n    for i in range(0, len(data)):\n        if i+1 < len(data):\n            if data[i] > data[i+1]:\n                tempValue = data[i]\n                data[i] = data[i+1]\n                data[i+1] = tempValue\n\n    return data\n```", "```py\nsortedData = bubbleSort(unsortedData)\nprint(sortedData)\n>>>[20, 12, 33, 24, 53, 23, 4, 53, 1, 65]\n```", "```py\ndef bubbleSort(data):\n\n    # Iterate through the array enough times to consider every possible swap pairs\n    for _ in range(0, len(data)): \n        for i in range(0, len(data)):\n            if i+1 < len(data):\n                if data[i] > data[i+1]:\n                    tempValue = data[i]\n                    data[i] = data[i+1]\n                    data[i+1] = tempValue\n\n    return data \n```", "```py\nsortedData = bubbleSort(unsortedData)\nprint(sortedData)\n>>> [1, 4, 12, 20, 23, 24, 33, 53, 53, 65] \n```", "```py\nunsortedData = [20, 33, 12, 53, 24, 65, 23, 4, 53, 1];\nend = len(unsortedData)\n\ndef bubbleSort(data):\n    global end\n    for _ in range(0, end):\n        for i in range(0, end):\n            if i+1 < end:\n                if data[i] > data[i+1]:\n                    tempValue = data[i]\n                    data[i] = data[i+1]\n                    data[i+1] = tempValue\n    end = end - 1\n    return data\n\nsortedData = bubbleSort(unsortedData)\nprint(sortedData)\n>>> [1, 4, 12, 20, 23, 24, 33, 53, 53, 65]\n```", "```py\nunsortedData = [20, 33, 12, 53, 24, 65, 23, 4, 53, 1]\nn = len(unsortedData)\n\ndef bubbleSort(data):\n    for i in range(n):\n        swapped = False\n        for j in range(0, n-i-1):\n            if data[j] > data[j+1]:\n                data[j], data[j+1] = data[j+1], data[j]\n                swapped = True\n        if not swapped:\n            break\n    return data\n\nsortedData = bubbleSort(unsortedData)\nprint(sortedData)\n```", "```py\nconst unsortedData = [20, 33, 12, 53, 24, 65, 23, 4, 53, 1];\nlet end = unsortedData.length - 1\n\nconst bubbleSort = (data) => {\n\n    for (let i = 0; i < end; i++) {\n        if (data[i] > data[i + 1]) {\n            const valueInRight = data[i]\n            data[i] = data[i+1]\n            data[i+1] = valueInRight\n        }\n    }\n    end--\n}\n\nfor (let i = 0; i < unsortedData.length; i++) {\n    bubbleSort(unsortedData)\n}\n\nconsole.log(unsortedData)\n```"]