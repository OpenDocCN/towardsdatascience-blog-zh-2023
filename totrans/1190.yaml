- en: How to Generate Interactive Maps with Folium
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-to-generate-interactive-maps-with-folium-b232778758c4](https://towardsdatascience.com/how-to-generate-interactive-maps-with-folium-b232778758c4)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Using this Python library to create map visualizations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://amolmavuduru.medium.com/?source=post_page-----b232778758c4--------------------------------)[![Amol
    Mavuduru](../Images/56b4ae74cac10dd7c70d41d9192ce181.png)](https://amolmavuduru.medium.com/?source=post_page-----b232778758c4--------------------------------)[](https://towardsdatascience.com/?source=post_page-----b232778758c4--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----b232778758c4--------------------------------)
    [Amol Mavuduru](https://amolmavuduru.medium.com/?source=post_page-----b232778758c4--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----b232778758c4--------------------------------)
    ·5 min read·Jun 26, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/80d43456ecb3cb56f0af209bf1515127.png)'
  prefs: []
  type: TYPE_IMG
- en: Map of Tampa, Florida. Image created using Folium and Open Street Map data.
  prefs: []
  type: TYPE_NORMAL
- en: Data visualization is one of the most overlooked areas of data science. Machine
    learning and statistical analysis are important, but being able to visualize data,
    especially different types of data, is a key aspect of data storytelling. While
    many introductory data science bootcamps and courses will cover how to create
    basic plots with matplotlib and seaborn, several of them do not cover how to visualize
    geographic data on maps.
  prefs: []
  type: TYPE_NORMAL
- en: Folium is a Python library that uses Leaflet.js and Open Street Map data to
    create high-quality map visualizations. **In this article, I will demonstrate
    how you can use Folium to generate interactive map visualizations.**
  prefs: []
  type: TYPE_NORMAL
- en: Installation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We can easily install Folium using pip as demonstrated below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Import Libraries
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As usual, I will import some Folium and some other libraries that we may need
    before getting started. Keep in mind you can find all of the code for this tutorial
    on [GitHub](https://github.com/AmolMavuduru/FoliumTutorial).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Plotting a Default World Map
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Folium comes with a Map function that we can call with no arguments to generate
    a default world map.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/0ea1e10bef1726e4791613f5d9ab6b22.png)'
  prefs: []
  type: TYPE_IMG
- en: Default world map projection. Image created using Folium and Open Street Map
    data.
  prefs: []
  type: TYPE_NORMAL
- en: Notice how the default map is a projection and contains zoom controls on the
    top left corner so that we can interact with the map and focus on a specific region
    if needed.
  prefs: []
  type: TYPE_NORMAL
- en: Plotting Locations by Coordinates
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We can create a map centered around a specific location by adding a list of
    coordinates to the location parameter in the Map function. Using the code below,
    we can generate a Map centered around Tampa, Florida.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/80d43456ecb3cb56f0af209bf1515127.png)'
  prefs: []
  type: TYPE_IMG
- en: Map of Tampa, Florida. Image created using Folium and Open Street Map data.
  prefs: []
  type: TYPE_NORMAL
- en: Changing the Map Tiles
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We can also change the map tiles to create maps that look different with the
    “tiles” argument. We can use the Stamen Toner tiles described in detail [here](http://maps.stamen.com/#watercolor/12/37.7706/-122.3782).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/eea22cf6d5b28c700984e9fa6fc6a331.png)'
  prefs: []
  type: TYPE_IMG
- en: Map with Stamen Toner tiles. Image created using Folium and Open Street Map
    data.
  prefs: []
  type: TYPE_NORMAL
- en: Notice how the same map of Tampa is now black and white. We can also create
    terrain maps as demonstrated below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/160b978843e803430857df131b378d4b.png)'
  prefs: []
  type: TYPE_IMG
- en: Map with Stamen Terrain tiles. Image created using Folium and Open Street Map
    data.
  prefs: []
  type: TYPE_NORMAL
- en: We can also create a beautiful watercolor map with Stamen tiles as shown in
    the code below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/1c0942d003e87614c5f0b784fcac8c2d.png)'
  prefs: []
  type: TYPE_IMG
- en: Watercolor map of Tampa. Image created using Folium and Open Street Map data.
  prefs: []
  type: TYPE_NORMAL
- en: Adding Map Markers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If we want to add markers to a map we can use the Marker class from Folium to
    create marker objects and add them to the map as demonstrated below. As expected,
    we can specify the location of a marker using coordinates.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/b8b4ac97f4a4ae5f67dd33d2567ad6dc.png)'
  prefs: []
  type: TYPE_IMG
- en: Map of Tampa with markers. Image created using Folium and Open Street Map data.
  prefs: []
  type: TYPE_NORMAL
- en: Notice how I have created markers on the map above on Clearwater and Saint Petersburg.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a Choropleth Map
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While creating maps is a useful feature, being able to plot and visualize data
    and trends on maps is even better. Folium gives us the ability to create choropleth
    maps as well. In this section, I will demonstrate how to create a choropleth map
    with U.S. unemployment data.
  prefs: []
  type: TYPE_NORMAL
- en: Reading the Data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The dataset we will be using is available in the examples directory on the Folium
    GitHub repo. We will read both a CSV file with unemployment statistics for each
    state in October 2012 as well as a GeoJSON file for generating the map.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/90e6750598cc3e212691cb9e55246836.png)'
  prefs: []
  type: TYPE_IMG
- en: State unemployment data.
  prefs: []
  type: TYPE_NORMAL
- en: The image above shows the first ten rows of the state unemployment data displayed
    using the pandas head function.
  prefs: []
  type: TYPE_NORMAL
- en: Generating the Map
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now that we have the unemployment data, we can generate a choropleth map. We
    will supply the following arguments to the Choropleth constructor:'
  prefs: []
  type: TYPE_NORMAL
- en: '**geo_data:** a path to a file with GeoJSON data for generating the map.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**name**: the name of the map'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**data**: the actual data that will be used to generate colors in choropleth
    map.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**columns**: the columns of the data that will be used.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**key_on**: the variable in the GeoJSON file to bind the data to (must start
    with feature, ie. feature.id)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**fill_color**: the color scheme to use for the choropleth map'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**fill_opacity**: the opacity of the color fill.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**line_opacity**: the opacity of the lines in map.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**legend_name**: the name of the legend in the map.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/56fb1f56934271de2d545694e6f797cb.png)'
  prefs: []
  type: TYPE_IMG
- en: Choropleth map showing U.S. unemployment.
  prefs: []
  type: TYPE_NORMAL
- en: As you can see above, we were able to generate a choropleth map that visualizes
    the unemployment rate in each U.S. state.
  prefs: []
  type: TYPE_NORMAL
- en: Saving the Map as an HTML File
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We can also save maps as HTML files, which is helpful for embedding Folium maps
    in web applications.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Folium is a useful Python library for visualizing geographic data. It allows
    us to create interactive map visualizations that can also be saved as HTML files
    and embedded in web applications. I have only covered some of the basic features
    of Folium in this article and you can find a more detailed list of features on
    the [Folium documentation page](https://python-visualization.github.io/folium/index.html).
    You can also find all the code used in this article on [GitHub](https://github.com/AmolMavuduru/FoliumTutorial).
  prefs: []
  type: TYPE_NORMAL
- en: Join my Mailing List
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Join my [mailing list](https://mailchi.mp/e8dd82679724/amols-data-science-blog)
    to get updates on my data science content. You’ll also get my free **Step-By-Step
    Guide to Solving Machine Learning Problems** when you [sign up](https://mailchi.mp/e8dd82679724/amols-data-science-blog)!
    You can also follow me on [Twitter](https://twitter.com/amolmavuduru1) for content
    updates.
  prefs: []
  type: TYPE_NORMAL
- en: And while you’re at it, consider [joining the Medium community](https://amolmavuduru.medium.com/membership)
    to read articles from thousands of other writers as well.
  prefs: []
  type: TYPE_NORMAL
- en: Sources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Rob Story, [Folium 0.14.0 documention](https://python-visualization.github.io/folium/index.html),
    (2013), GitHub.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
