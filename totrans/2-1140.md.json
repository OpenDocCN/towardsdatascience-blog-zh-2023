["```py\nimport networkx as nx\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Erdos-Renyi model\nG1 = nx.erdos_renyi_graph(n=50, p=0.2, seed=42)\n\n# Watts-Strogatz model\nG2 = nx.watts_strogatz_graph(n=50, k=5, p=0.4, seed=42)\n\n# Barabasi-Albert model\nG3 = nx.barabasi_albert_graph(n=50, m=5, seed=42)\n\n# plot side by side\nfig, ax = plt.subplots(1, 3, figsize=(15, 5))\n# add title to each plot\nax[0].set_title('Erdos-Renyi')\nax[1].set_title('Watts-Strogatz')\nax[2].set_title('Barabasi-Albert')\nnx.draw(G1, ax=ax[0])\nnx.draw(G2, ax=ax[1])\nnx.draw(G3, ax=ax[2])\nplt.show()\n```", "```py\nfrom faker import Faker\nimport networkx as nx\nimport matplotlib.pyplot as plt\n\nfaker = Faker()\n\nnames = []\n\n# generate 10 unique names\nfor i in range(10):\n    # Generate a random name \n    name = faker.name()\n    # Append the name to the list\n    names.append(name)\n\n# Barabasi-Albert model\nG = nx.barabasi_albert_graph(n=10, m=5, seed=42)\n\n# add the names to the graph\nmapping = {i: names[i] for i in range(len(names))}\nG = nx.relabel_nodes(G, mapping)\n\nfig, ax = plt.subplots(figsize=(3, 2), dpi=300)\nnx.draw(G, with_labels=True, node_size=50,width=0.1, font_size=3.5)\nplt.show()\n```"]