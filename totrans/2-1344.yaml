- en: Introduction to Clustering Algorithms
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 聚类算法简介
- en: 原文：[https://towardsdatascience.com/introduction-to-clustering-algorithms-76da35b5670a](https://towardsdatascience.com/introduction-to-clustering-algorithms-76da35b5670a)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/introduction-to-clustering-algorithms-76da35b5670a](https://towardsdatascience.com/introduction-to-clustering-algorithms-76da35b5670a)
- en: A comprehensive guide to 10 clustering algorithms commonly used for Hierarchical,
    Partitional, and Density-Based Clustering
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一份关于10种常用于层次、划分和基于密度的聚类算法的全面指南
- en: '[](https://kevindbabitz.medium.com/?source=post_page-----76da35b5670a--------------------------------)[![Kevin
    Babitz](../Images/271c0bda1324f51e3b61670ae869edf8.png)](https://kevindbabitz.medium.com/?source=post_page-----76da35b5670a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----76da35b5670a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----76da35b5670a--------------------------------)
    [Kevin Babitz](https://kevindbabitz.medium.com/?source=post_page-----76da35b5670a--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://kevindbabitz.medium.com/?source=post_page-----76da35b5670a--------------------------------)[![Kevin
    Babitz](../Images/271c0bda1324f51e3b61670ae869edf8.png)](https://kevindbabitz.medium.com/?source=post_page-----76da35b5670a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----76da35b5670a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----76da35b5670a--------------------------------)
    [Kevin Babitz](https://kevindbabitz.medium.com/?source=post_page-----76da35b5670a--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----76da35b5670a--------------------------------)
    ·9 min read·Nov 12, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----76da35b5670a--------------------------------)
    ·阅读时长9分钟·2023年11月12日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/66a16934e96383d4113c300de64f6477.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/66a16934e96383d4113c300de64f6477.png)'
- en: Photo by [Rod Long](https://unsplash.com/@rodlong?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)
    on [Unsplash](https://unsplash.com/photos/penguin-walking-on-gray-sand-during-daytime-BSz0jJ172vM?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 由[Rod Long](https://unsplash.com/@rodlong?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)拍摄的照片，来自[Unsplash](https://unsplash.com/photos/penguin-walking-on-gray-sand-during-daytime-BSz0jJ172vM?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: Clustering algorithms play an important role in data analysis. These unsupervised
    learning, exploratory data analysis tools provide systems for knowledge discovery
    by categorizing data points into distinct groups based on shared characteristics.
    This allows for the identification of relationships and trends that may be hard
    to see in the raw data. They facilitate more informed decision making by systematically
    adding more understanding to complex and intricate datasets.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 聚类算法在数据分析中扮演着重要角色。这些无监督学习、探索性数据分析工具通过将数据点根据共享特征分类到不同的组中，为知识发现提供了系统。这使得在原始数据中可能难以看清的关系和趋势得以识别。它们通过系统性地为复杂和精细的数据集增添理解，促进了更为明智的决策。
- en: 'In this article, we will cover the basics of three types of clustering algorithms:
    Hierarchical, Partitional, and Density-Based Clustering models. We will begin
    by defining each of these categories. Next, we will dive into 10 different clustering
    algorithms, providing definitions, links to the original or interesting research
    papers, strengths of the algorithms, and python code-snippets for each.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将介绍三种类型的聚类算法的基础知识：层次聚类、划分聚类和基于密度的聚类模型。我们将从定义这些类别开始。接下来，我们将深入探讨10种不同的聚类算法，提供定义、原始或有趣的研究论文链接、算法的优缺点以及每种算法的python代码片段。
- en: '**Table of Contents**'
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**目录**'
- en: '[Hierarchical Clustering Algorithms](#1c12)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[层次聚类算法](#1c12)'
- en: '[Birch](#d9e2)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Birch](#d9e2)'
- en: '[Cure](#9353)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Cure](#9353)'
- en: '[ROCK](#6754)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[ROCK](#6754)'
- en: '[Chameleon](#1306)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Chameleon](#1306)'
- en: '[Partitional Clustering Algorithms](#286d)'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[划分聚类算法](#286d)'
- en: '[K-Means](#8604)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[K-Means](#8604)'
- en: '[K-Medoids (PAM)](#2370)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[K-Medoids (PAM)](#2370)'
- en: '[CLARANS](#e4d4)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[CLARANS](#e4d4)'
- en: '[ISODATA](#355b)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[ISODATA](#355b)'
- en: '[Density-Based Clustering Algorithms](#a380)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[基于密度的聚类算法](#a380)'
- en: '[DBSCAN](#43eb)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[DBSCAN](#43eb)'
- en: '[DENCLUE](#d560)'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[DENCLUE](#d560)'
- en: Hierarchical Clustering Algorithms
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 层次聚类算法
- en: '**Definition:** Hierarchical clustering is a method of cluster analysis that
    builds a hierarchy of clusters. It can be visualized as a tree structure (dendrogram)
    where the leaves represent individual data points and the root represents a single
    cluster containing all data points.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**定义：** 层次聚类是一种聚类分析方法，建立一个簇的层次结构。它可以被可视化为一个树状结构（树状图），其中叶子表示单个数据点，根表示包含所有数据点的单一簇。'
- en: '**Use Cases:**'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**使用案例：**'
- en: Taxonomy Problems.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分类问题。
- en: When Vertical relationships are important in the data.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当垂直关系在数据中很重要时。
- en: '**Strengths:**'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**优点：**'
- en: Provides a hierarchical structure of clusters.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供了一个簇的层次结构。
- en: No need to specify the number of clusters beforehand.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无需事先指定簇的数量。
- en: '**Weaknesses:**'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**弱点：**'
- en: Prone to noise and outliers.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 易受噪声和离群点的影响。
- en: Computationally intensive for large datasets.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对大型数据集计算密集。
- en: Birch
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Birch
- en: '**Summary:**'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**总结：**'
- en: 'The Birch algorithm, short for “Balanced Iterative Reducing and Clustering
    using Hierarchies,” is a hierarchical clustering algorithm designed for scalability
    and efficiency, particularly suited for large datasets. It uses a two-step process
    to build clusters:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Birch算法，全称“Balanced Iterative Reducing and Clustering using Hierarchies”，是一种设计用于扩展性和效率的层次聚类算法，特别适合大型数据集。它使用两步过程来构建簇：
- en: Construct a feature-based tree called a Clustering Feature (CF) tree, summarizing
    the dataset’s distribution. This CF tree allows for efficient memory usage and
    incremental updates.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建一个基于特征的树，称为聚类特征（CF）树，用于总结数据集的分布。这个CF树允许高效的内存使用和增量更新。
- en: Apply a clustering mechanism based on the leaf nodes of the CF tree to form
    cohesive clusters.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 基于CF树的叶子节点应用聚类机制，形成紧密的簇。
- en: '**Original Paper / Helpful Research:**'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**原始论文 / 有用的研究：**'
- en: '[](https://dl.acm.org/doi/10.1145/235968.233324?source=post_page-----76da35b5670a--------------------------------)
    [## BIRCH: an efficient data clustering method for very large databases: ACM SIGMOD
    Record: Vol 25, No…'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://dl.acm.org/doi/10.1145/235968.233324?source=post_page-----76da35b5670a--------------------------------)
    [## BIRCH：一种高效的数据聚类方法，适用于非常大的数据库：ACM SIGMOD Record: Vol 25, No…'
- en: Finding useful patterns in large datasets has attracted considerable interest
    recently, and one of the most widely…
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在大型数据集中寻找有用的模式最近引起了相当大的兴趣，其中最广泛的…
- en: dl.acm.org](https://dl.acm.org/doi/10.1145/235968.233324?source=post_page-----76da35b5670a--------------------------------)
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: dl.acm.org](https://dl.acm.org/doi/10.1145/235968.233324?source=post_page-----76da35b5670a--------------------------------)
- en: '**Strengths:**'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**优点：**'
- en: Birch is known for its ability to handle large volumes of data and its resilience
    to outliers.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Birch以其处理大量数据的能力和对离群点的韧性而闻名。
- en: '**Python Code:**'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**Python代码：**'
- en: Birch algorithm using [sklearn](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.Birch.html)
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[sklearn](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.Birch.html)的Birch算法
- en: Cure
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Cure
- en: '**Summary:**'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**总结：**'
- en: The CURE (Clustering Using Representatives) algorithm is an [agglomerative hierarchical
    clustering](https://en.wikipedia.org/wiki/Hierarchical_clustering#Agglomerative_clustering_example)
    method designed to address the limitations of traditional centroid-based algorithms
    like K-Means, especially when dealing with non-spherical and arbitrarily shaped
    clusters. CURE takes a unique approach by representing clusters with a fixed number
    of points, called representatives, which are randomly selected from each cluster.
    These representatives are then “shrunk” toward the center of mass, effectively
    capturing the cluster’s geometry. CURE is known for its robustness against outliers,
    ability to handle clusters of varying shapes and sizes, and improved performance
    in scenarios where traditional centroid-based algorithms might fail.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: CURE（Clustering Using Representatives）算法是一种[聚合层次聚类](https://en.wikipedia.org/wiki/Hierarchical_clustering#Agglomerative_clustering_example)方法，旨在解决传统基于中心点的算法如K-Means的局限性，尤其是在处理非球形和任意形状的簇时。CURE采用独特的方法，通过用固定数量的点（称为代表点）来表示簇，这些代表点是从每个簇中随机选择的。然后这些代表点会“收缩”到质心附近，从而有效地捕捉簇的几何形状。CURE以其对离群点的鲁棒性、处理不同形状和大小簇的能力，以及在传统中心点算法可能失败的情况下的改进性能而闻名。
- en: '**Original Paper:**'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**原始论文：**'
- en: '[](https://dl.acm.org/doi/10.1145/276305.276312?source=post_page-----76da35b5670a--------------------------------)
    [## CURE: an efficient clustering algorithm for large databases: ACM SIGMOD Record:
    Vol 27, No 2'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://dl.acm.org/doi/10.1145/276305.276312?source=post_page-----76da35b5670a--------------------------------)
    [## CURE：一种高效的大型数据库聚类算法：ACM SIGMOD Record: Vol 27, No 2'
- en: Clustering, in data mining, is useful for discovering groups and identifying
    interesting distributions in the…
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在数据挖掘中，聚类对于发现群组和识别有趣的分布模式非常有用…
- en: dl.acm.org](https://dl.acm.org/doi/10.1145/276305.276312?source=post_page-----76da35b5670a--------------------------------)
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[dl.acm.org](https://dl.acm.org/doi/10.1145/276305.276312?source=post_page-----76da35b5670a--------------------------------)'
- en: '**Strengths:**'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**优点：**'
- en: Cure is robust to outliers and is able to identify clusters with varied shapes.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Cure 对离群点具有鲁棒性，并且能够识别形状多样的聚类。
- en: '**Python Code:**'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**Python 代码：**'
- en: Cure algorithm using [pyclustering](https://pyclustering.github.io/docs/0.8.2/html/dc/d6d/classpyclustering_1_1cluster_1_1cure_1_1cure.html)
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Cure 算法使用 [pyclustering](https://pyclustering.github.io/docs/0.8.2/html/dc/d6d/classpyclustering_1_1cluster_1_1cure_1_1cure.html)
- en: ROCK
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ROCK
- en: '**Summary:**'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**总结：**'
- en: The ROCK (Robust Clustering using Links) algorithm is an agglomerative hierarchical
    clustering method designed to address challenges in clustering datasets with categorical
    attributes. It introduces the concept of “links,” which measure the proximity
    between data points with categorical attributes. Utilizing a “goodness measure,”
    ROCK aims to identify clusters by evaluating the similarity of objects within
    them. The algorithm is particularly useful for datasets with mixed attribute types,
    providing a global approach to clustering. However, ROCK may produce ambiguous
    results if parameter choices in the static model differ significantly from the
    dataset being clustered, and it may struggle to accurately define clusters with
    different sizes and shapes.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: ROCK（使用链接的鲁棒聚类）算法是一种聚合层次聚类方法，旨在解决带有分类属性的数据集聚类中的挑战。它引入了“链接”概念，用于测量具有分类属性的数据点之间的接近程度。通过利用“优度测量”，ROCK旨在通过评估对象之间的相似性来识别聚类。该算法特别适用于具有混合属性类型的数据集，提供了全局的聚类方法。然而，如果静态模型中的参数选择与被聚类的数据集差异显著，ROCK可能会产生模糊的结果，并且在准确定义不同大小和形状的聚类时可能会遇到困难。
- en: '**Original Paper / Helpful Research:**'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**原始论文 / 有用的研究：**'
- en: '[](https://www.sciencedirect.com/science/article/abs/pii/S0306437900000223?source=post_page-----76da35b5670a--------------------------------)
    [## Rock: A robust clustering algorithm for categorical attributes'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '[## Rock: A robust clustering algorithm for categorical attributes](https://www.sciencedirect.com/science/article/abs/pii/S0306437900000223?source=post_page-----76da35b5670a--------------------------------)'
- en: Clustering, in data mining, is useful to discover distribution patterns in the
    underlying data. Clustering algorithms…
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在数据挖掘中，聚类对于发现潜在数据中的分布模式非常有用。聚类算法…
- en: www.sciencedirect.com](https://www.sciencedirect.com/science/article/abs/pii/S0306437900000223?source=post_page-----76da35b5670a--------------------------------)
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '[www.sciencedirect.com](https://www.sciencedirect.com/science/article/abs/pii/S0306437900000223?source=post_page-----76da35b5670a--------------------------------)'
- en: '**Strengths:**'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**优点：**'
- en: ROCK scales well with increasing dimensionality and can measure similarity within
    clusters using a global approach. This algorithm works well with categorical variables.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: ROCK 在维度增加时扩展良好，并且可以使用全局方法测量聚类内的相似性。该算法适用于分类变量。
- en: '**Python Code:**'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**Python 代码：**'
- en: ROCK algorithm using [pyclustering](https://pyclustering.github.io/docs/0.8.2/html/d8/dde/classpyclustering_1_1cluster_1_1rock_1_1rock.html)
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: ROCK 算法使用 [pyclustering](https://pyclustering.github.io/docs/0.8.2/html/d8/dde/classpyclustering_1_1cluster_1_1rock_1_1rock.html)
- en: Chameleon
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Chameleon
- en: '**Summary:**'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**总结：**'
- en: 'Chameleon is a dynamic clustering algorithm designed to measure the similarity
    of two clusters based on a dynamic model. It works in two phases:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Chameleon 是一种动态聚类算法，旨在基于动态模型测量两个聚类之间的相似性。它分为两个阶段：
- en: Create a graph with links between each point and its N-nearest neighbors.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个图，其中包含每个点及其 N 个最近邻之间的链接。
- en: Split the graph by a graph partitioning algorithm, resulting in many small unconnected
    subgraphs. Chameleon iteratively combines the two most similar clusters, considering
    their connectivity and closeness, making it more functional than some other algorithms
    when dealing with arbitrary-shaped clusters.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过图分割算法拆分图，结果是许多小的未连接子图。Chameleon 迭代地合并两个最相似的聚类，考虑它们的连通性和接近程度，这使得它在处理任意形状的聚类时比其他一些算法更具功能性。
- en: '![](../Images/4e6bcdafa4b3d99b385c4826607aed2a.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4e6bcdafa4b3d99b385c4826607aed2a.png)'
- en: Figure from the original Chameleon algorithm paper linked below
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 原始 Chameleon 算法论文中的图像见下文链接
- en: '**Original Paper / Helpful Research:**'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '**原始论文 / 有用的研究：**'
- en: '[https://www.researchgate.net/publication/2955136_CHAMELEON_A_hierarchical_clustering_algorithm_using_dynamic_modeling](https://www.researchgate.net/publication/2955136_CHAMELEON_A_hierarchical_clustering_algorithm_using_dynamic_modeling)'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.researchgate.net/publication/2955136_CHAMELEON_A_hierarchical_clustering_algorithm_using_dynamic_modeling](https://www.researchgate.net/publication/2955136_CHAMELEON_A_hierarchical_clustering_algorithm_using_dynamic_modeling)'
- en: '**Strengths:**'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**优点：**'
- en: Chameleon can measures cluster similarity based on a dynamic model and it is
    strong in dealing with arbitrary-shaped clusters.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Chameleon 可以基于动态模型衡量簇的相似性，对处理任意形状的簇效果良好。
- en: '**Python Code:**'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**Python 代码：**'
- en: There are no existing libraries to run this algorithm. However, Moonpuck has
    implemented the chameleon algorithm and their code can be explored [here on Github](https://github.com/Moonpuck/chameleon_cluster).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 目前没有现成的库来运行这个算法。然而，Moonpuck 已经实现了变色龙算法，他们的代码可以在[Github 上查看](https://github.com/Moonpuck/chameleon_cluster)。
- en: Partitional Clustering Algorithms
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分区聚类算法
- en: '**Definition:** Partitional clustering divides data into non-overlapping subsets
    (partitions) based on similarity. The most common method, which you’ve likely
    heard of, is the K-Means algorithm, where data points are assigned to the nearest
    centroid.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**定义：** 分区聚类根据相似性将数据划分为不重叠的子集（分区）。最常见的方法是 K-Means 算法，在该方法中，数据点被分配给最近的质心。'
- en: '**Use-Cases:**'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**使用场景：**'
- en: Large datasets because these algorithms have lower computational requirements.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大数据集，因为这些算法具有较低的计算需求。
- en: When the coherence of clustering is more critical than hierarchical structure.
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当聚类的连贯性比层次结构更重要时。
- en: '**Strengths:**'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**优点：**'
- en: Efficient for large datasets.
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对大数据集高效。
- en: Suitable for spherical-shaped clusters.
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 适合球形簇。
- en: '**Weaknesses:**'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**弱点：**'
- en: Sensitive to noise and outliers.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对噪声和异常值敏感。
- en: Assumes hyper-ellipsoidal shapes for clusters.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 假设簇的形状为超椭球形。
- en: K-Means
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: K-Means
- en: '**Summary:**'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**总结：**'
- en: 'The K-Means algorithm is a partitioning-based clustering technique widely used
    for grouping data points into K distinct clusters. The steps of the algorithm
    are as follows:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: K-Means 算法是一种基于分区的聚类技术，广泛用于将数据点分组到 K 个不同的簇中。算法的步骤如下：
- en: Randomly select K centroids in the feature space.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 随机选择特征空间中的 K 个质心。
- en: Assign each data point to the nearest centroid.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将每个数据点分配给最近的质心。
- en: Iteratively update the centroids based on the mean of the points within each
    cluster.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据每个簇内点的均值迭代更新质心。
- en: Continue the above steps until convergence, where the centroids no longer change
    significantly.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 继续以上步骤直到收敛，即质心不再显著变化。
- en: K-Means is computationally efficient and simple to implement, making it one
    of the most popular clustering algorithms; however, its performance can be sensitive
    to the initial placement of centroids and is influenced by outliers. Additionally,
    K-Means assumes clusters with a spherical shape and struggles with clusters of
    varying sizes and densities.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: K-Means 计算高效且易于实现，使其成为最受欢迎的聚类算法之一；然而，它的性能可能对质心的初始位置敏感，并受到异常值的影响。此外，K-Means 假设簇是球形的，对于大小和密度变化的簇表现不佳。
- en: '**Original Paper / Helpful Research:**'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**原始论文 / 有用的研究：**'
- en: '[](https://www.semanticscholar.org/paper/Least-squares-quantization-in-PCM-Lloyd/9241ea3d8cb85633d314ecb74b31567b8e73f6af?source=post_page-----76da35b5670a--------------------------------)
    [## [PDF] Least squares quantization in PCM | Semantic Scholar'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://www.semanticscholar.org/paper/Least-squares-quantization-in-PCM-Lloyd/9241ea3d8cb85633d314ecb74b31567b8e73f6af?source=post_page-----76da35b5670a--------------------------------)
    [## [PDF] 最小二乘量化在 PCM 中 | Semantic Scholar'
- en: The corresponding result for any finite number of quanta is derived; that is,
    necessary conditions are found that the…
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 对于任何有限数量的量子，得出了相应的结果；即，找到了必要条件……
- en: www.semanticscholar.org](https://www.semanticscholar.org/paper/Least-squares-quantization-in-PCM-Lloyd/9241ea3d8cb85633d314ecb74b31567b8e73f6af?source=post_page-----76da35b5670a--------------------------------)
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '[www.semanticscholar.org](https://www.semanticscholar.org/paper/Least-squares-quantization-in-PCM-Lloyd/9241ea3d8cb85633d314ecb74b31567b8e73f6af?source=post_page-----76da35b5670a--------------------------------)'
- en: '**Strengths:**'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '**优点：**'
- en: K-Means is efficient, widely studied and understood, applicable to various domains,
    and is strong for spherical clusters (an assumption of the model).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: K-Means 高效，广泛研究并且易于理解，适用于各种领域，并且对球形簇（模型的假设）效果良好。
- en: '**Python Code:**'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '**Python 代码：**'
- en: K-Means algorithm using [sklearn](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.KMeans.html)
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: K-Means 算法使用 [sklearn](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.KMeans.html)
- en: K-Medoids (PAM)
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: K-Medoids (PAM)
- en: '**Summary:**'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '**总结：**'
- en: 'The K-Medoids algorithm, also known as Partitioning Around Medoids (PAM), is
    a clustering technique similar to K-Means but with a crucial difference: instead
    of using the mean (centroid) to represent a cluster, it employs the actual data
    point (medoid) that minimizes the average dissimilarity to all other points in
    the cluster. This makes K-Medoids more robust against outliers and resistant to
    the influence of extreme values. The algorithm iteratively refines cluster assignments
    by choosing data points as medoids and updating until a stable configuration is
    reached. While K-Medoids is more robust to noise than K-Means, it can still be
    computationally expensive due to its exhaustive search for the best medoids.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: K-Medoids 算法，也称为围绕中位数的划分（PAM），是一种类似于 K-Means 的聚类技术，但有一个关键区别：它不是使用均值（质心）来表示簇，而是采用实际数据点（中位数），这些点使得簇内所有其他点的平均差异最小。这使得
    K-Medoids 对离群点更具鲁棒性，对极端值的影响也更小。该算法通过选择数据点作为中位数并进行更新，迭代地精炼簇分配，直到达到稳定配置。虽然 K-Medoids
    对噪声比 K-Means 更具鲁棒性，但由于其全面搜索最佳中位数的特性，它仍可能计算开销较大。
- en: '**Original Paper / Helpful Research:**'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '**原始论文 / 有用研究：**'
- en: '[](https://www.sciencedirect.com/science/article/pii/S1877050916000971?source=post_page-----76da35b5670a--------------------------------)
    [## Analysis of K-Means and K-Medoids Algorithm For Big Data'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://www.sciencedirect.com/science/article/pii/S1877050916000971?source=post_page-----76da35b5670a--------------------------------)
    [## 大数据的 K-Means 和 K-Medoids 算法分析'
- en: Clustering plays a very vital role in exploring data, creating predictions and
    to overcome the anomalies in the data…
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 聚类在数据探索、预测创建以及克服数据异常方面发挥着至关重要的作用…
- en: www.sciencedirect.com](https://www.sciencedirect.com/science/article/pii/S1877050916000971?source=post_page-----76da35b5670a--------------------------------)
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: www.sciencedirect.com](https://www.sciencedirect.com/science/article/pii/S1877050916000971?source=post_page-----76da35b5670a--------------------------------)
- en: '**Strengths:**'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '**优点：**'
- en: K-Medoids is better against outliers compared to centroids (which K-Means uses)
    and it identifies cluster centers using actual data points.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 与 K-Means 使用的质心相比，K-Medoids 对离群点更具鲁棒性，并且使用实际数据点来识别簇中心。
- en: '**Python Code:**'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '**Python 代码：**'
- en: K-Medoids algorithm Using [pyclustering](https://pyclustering.github.io/docs/0.9.0/html/d0/dd3/classpyclustering_1_1cluster_1_1kmedoids_1_1kmedoids.html)
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: K-Medoids 算法使用 [pyclustering](https://pyclustering.github.io/docs/0.9.0/html/d0/dd3/classpyclustering_1_1cluster_1_1kmedoids_1_1kmedoids.html)
- en: CLARANS
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CLARANS
- en: '**Summary:**'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '**总结：**'
- en: CLARANS (Clustering Large Applications based on Randomized Search) is a clustering
    algorithm that combines sampling techniques with the Partitioning Around Medoids
    (PAM) method. It employs a randomized search to discover clusters without relying
    on additional data structures. CLARANS is particularly robust in high-dimensional
    spaces, as it doesn’t assume a specific distance function, and it can effectively
    identify clusters with non-convex shapes. However, its efficiency comes at the
    cost of increased computational complexity, making it potentially slower than
    other partitioning methods.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: CLARANS（基于随机搜索的大规模应用聚类）是一种结合了采样技术和围绕中位数（PAM）方法的聚类算法。它通过随机搜索发现簇，而无需依赖额外的数据结构。CLARANS
    在高维空间中特别鲁棒，因为它不假设特定的距离函数，并且可以有效识别具有非凸形状的簇。然而，它的效率以增加计算复杂度为代价，这使得它可能比其他划分方法更慢。
- en: '**Original Paper / Helpful Research:**'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**原始论文 / 有用研究：**'
- en: '[https://ieeexplore.ieee.org/abstract/document/1033770](https://ieeexplore.ieee.org/abstract/document/1033770)'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://ieeexplore.ieee.org/abstract/document/1033770](https://ieeexplore.ieee.org/abstract/document/1033770)'
- en: '**Strengths:**'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '**优点：**'
- en: CLARANS is robust against increases in dimensionality and can identify polygon-shaped
    objects effectively.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: CLARANS 对维度增加具有鲁棒性，并能有效识别多边形形状的对象。
- en: '**Python Code:**'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '**Python 代码：**'
- en: CLARANS algorithm using [*pyclustering*](https://pyclustering.github.io/docs/0.9.0/html/d6/d42/classpyclustering_1_1cluster_1_1clarans_1_1clarans.html)
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: CLARANS 算法使用 [*pyclustering*](https://pyclustering.github.io/docs/0.9.0/html/d6/d42/classpyclustering_1_1cluster_1_1clarans_1_1clarans.html)
- en: '**ISODATA**'
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**ISODATA**'
- en: '**Summary:**'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '**总结：**'
- en: The ISODATA (Iterative Self-Organizing Data Analysis Technique) algorithm is
    an iterative and adaptive clustering method, considered a variant of the K-Means
    algorithm. It dynamically adjusts clusters through splitting and merging based
    on user-defined thresholds, such as minimum points for each cluster, maximum variance
    for splitting clusters, and minimum distance for merging clusters. This adaptability
    allows ISODATA to handle outliers effectively through its splitting procedure
    and prevent the formation of elongated clusters. Despite its advantages in handling
    noise and varying cluster shapes, ISODATA’s sensitivity to input parameters and
    the need for careful tuning are notable considerations.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: ISODATA（迭代自组织数据分析技术）算法是一种迭代和自适应的聚类方法，被认为是 K-Means 算法的变体。它通过基于用户定义的阈值（如每个簇的最小点数、分裂簇的最大方差和合并簇的最小距离）动态调整簇。该适应性使得
    ISODATA 通过其分裂过程有效处理异常值，并防止形成拉长的簇。尽管在处理噪声和不同形状的簇方面有其优势，但 ISODATA 对输入参数的敏感性和需要细致调整是需要注意的事项。
- en: '**Original Paper / Helpful Research:**'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '**原始论文/有用的研究：**'
- en: '[](https://www.sciencedirect.com/topics/computer-science/isodata-algorithm?source=post_page-----76da35b5670a--------------------------------)
    [## Isodata Algorithm'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.sciencedirect.com/topics/computer-science/isodata-algorithm?source=post_page-----76da35b5670a--------------------------------](https://www.sciencedirect.com/topics/computer-science/isodata-algorithm?source=post_page-----76da35b5670a--------------------------------)
    [## Isodata 算法'
- en: The first automatic threshold selecting method was probably by isodata algorithm,
    which was originally proposed by…
  id: totrans-136
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第一个自动阈值选择方法可能是 ISODATA 算法，这一算法最初由…
- en: www.sciencedirect.com](https://www.sciencedirect.com/topics/computer-science/isodata-algorithm?source=post_page-----76da35b5670a--------------------------------)
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '[www.sciencedirect.com](https://www.sciencedirect.com/topics/computer-science/isodata-algorithm?source=post_page-----76da35b5670a--------------------------------)'
- en: '**Strengths:**'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '**优点：**'
- en: ISODATA handles outliers better than k-means and adjusts clusters dynamically
    during iterations.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: ISODATA 比 k-means 更好地处理异常值，并在迭代过程中动态调整簇。
- en: '**Python Code:**'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '**Python 代码：**'
- en: ISODATA is a version of K-Means that can be implemented using the code in the
    k-means section above with some adaptations You can also use this [Github code](https://github.com/PyRadar/pyradar/blob/master/pyradar/classifiers/isodata.py)
    by PyRadar.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: ISODATA 是 K-Means 的一个变种，可以通过上面 K-Means 部分的代码实现，经过一些调整。你还可以使用这个 [Github 代码](https://github.com/PyRadar/pyradar/blob/master/pyradar/classifiers/isodata.py)。
- en: Density-Based Clustering Algorithms
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于密度的聚类算法
- en: '**Definition:** Density-based clustering identifies clusters as contiguous
    regions of high data point density separated by regions of lower density. It is
    based on the idea that clusters are areas of higher density compared to their
    surroundings.'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '**定义：** 基于密度的聚类将簇识别为由高数据点密度的连续区域组成，这些区域被低密度的区域分隔开。它基于这样一个想法，即簇是相对于其周围区域的高密度区域。'
- en: '**Use-Cases:**'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '**使用案例：**'
- en: Dealing with arbitrary-shaped clusters.
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理任意形状的簇。
- en: Working with noisy data.
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理噪声数据。
- en: '**Strengths:**'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '**优点：**'
- en: Capable of discovering clusters of arbitrary shapes.
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够发现任意形状的簇。
- en: Robust against noise.
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对噪声具有鲁棒性。
- en: '**Weaknesses:**'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '**缺点：**'
- en: Efficiency and performance may struggle with high-dimensional data.
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对高维数据的效率和性能可能会受到影响。
- en: DBSCAN
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DBSCAN
- en: '**Summary:**'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '**总结：**'
- en: 'The Density-Based Spatial Clustering of Applications with Noise (DBSCAN) algorithm
    is a density-based clustering technique that identifies clusters based on the
    density of data points in the feature space. It classifies points into three categories:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 基于密度的空间聚类算法（DBSCAN）是一种基于密度的聚类技术，通过数据点在特征空间中的密度来识别簇。它将点分类为三类：
- en: 'Core Points: dense regions.'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 核心点：密集区域。
- en: 'Border Points: points on the outskirts of a cluster.'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 边界点：簇的边缘上的点。
- en: 'Noise Points: isolated points.'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 噪声点：孤立点。
- en: DBSCAN efficiently discovers clusters with arbitrary shapes, requires no predefined
    number of clusters, and is robust to noise. However, its performance can be influenced
    by the choice of parameters such as the neighborhood radius and minimum number
    of points required to form a dense region.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: DBSCAN 高效地发现任意形状的簇，不需要预定义簇的数量，并且对噪声具有鲁棒性。然而，它的性能可能会受到参数选择的影响，例如邻域半径和形成密集区域所需的最小点数。
- en: '**Original Paper / Helpful Research:**'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '**原始论文/有用的研究：**'
- en: '[](https://dl.acm.org/doi/10.5555/3001460.3001507?source=post_page-----76da35b5670a--------------------------------)
    [## A density-based algorithm for discovering clusters in large spatial databases
    with noise |…'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://dl.acm.org/doi/10.5555/3001460.3001507?source=post_page-----76da35b5670a--------------------------------)
    [## 一种基于密度的算法，用于发现大空间数据库中的簇和噪声 | …]'
- en: Clustering algorithms are attractive for the task of class identification in
    spatial databases. However, the…
  id: totrans-161
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 聚类算法在空间数据库的类别识别任务中具有吸引力。然而，…
- en: dl.acm.org](https://dl.acm.org/doi/10.5555/3001460.3001507?source=post_page-----76da35b5670a--------------------------------)
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: dl.acm.org](https://dl.acm.org/doi/10.5555/3001460.3001507?source=post_page-----76da35b5670a--------------------------------)
- en: '**Strengths:**'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '**优势：**'
- en: DBSCAN is effective against noise and discovers clusters of arbitrary shapes.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: DBSCAN 对噪声有效，并且可以发现任意形状的簇。
- en: '**Python Code:**'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '**Python 代码：**'
- en: DBSCAN algorithm using [sklean](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.DBSCAN.html)
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 [sklean](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.DBSCAN.html)
    的 DBSCAN 算法
- en: DENCLUE
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DENCLUE
- en: '**Summary:**'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '**总结：**'
- en: The DENCLUE (Density Clustering) algorithm is a density-based clustering technique
    that determines clusters based on the local density attractors, representing local
    maxima in an overall density function. It employs an influence function to calculate
    the distance between data points, and the density function is the cumulative sum
    of these influences. DENCLUE is designed to identify clusters with arbitrary shapes
    and exhibits good scalability, making it suitable for datasets with unpredictable
    structures. However, DENCLUE is sensitive to input parameters and can be affected
    by the curse of dimensionality.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: DENCLUE（密度聚类）算法是一种基于密度的聚类技术，它根据局部密度吸引子来确定簇，这些吸引子代表总体密度函数中的局部最大值。它采用影响函数来计算数据点之间的距离，密度函数是这些影响的累积和。DENCLUE
    旨在识别任意形状的簇，并且具有良好的可扩展性，使其适用于具有不可预测结构的数据集。然而，DENCLUE 对输入参数敏感，可能会受到维度诅咒的影响。
- en: '**Original Paper / Helpful Research:**'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '**原始论文 / 有用的研究：**'
- en: '[](https://dl.acm.org/doi/10.1145/3368691.3368724?source=post_page-----76da35b5670a--------------------------------)
    [## An overview of various enhancements of DENCLUE algorithm | Proceedings of
    the Second International…'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://dl.acm.org/doi/10.1145/3368691.3368724?source=post_page-----76da35b5670a--------------------------------)
    [## DENCLUE 算法的各种改进概述 | 第二届国际会议论文集…]'
- en: 'NOTICE OF CONCERN: ACM has received evidence that casts doubt on the integrity
    of the peer review process for the DATA…'
  id: totrans-172
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关注通知：ACM 收到了对 DATA 的同行评审过程的完整性提出疑问的证据…
- en: dl.acm.org](https://dl.acm.org/doi/10.1145/3368691.3368724?source=post_page-----76da35b5670a--------------------------------)
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: dl.acm.org](https://dl.acm.org/doi/10.1145/3368691.3368724?source=post_page-----76da35b5670a--------------------------------)
- en: '**Strengths:**'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '**优势：**'
- en: DENCLUE is scalable and spots clusters with unpredictable shapes and is effective
    against noise.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: DENCLUE 具有可扩展性，可以发现形状不可预测的簇，并且对噪声有效。
- en: '**Python Code:**'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '**Python 代码：**'
- en: There are no libraries that support DENCLUE. See mgarrett57’s implementation
    on [Github here](https://github.com/mgarrett57/DENCLUE/blob/master/denclue.py).
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 没有支持 DENCLUE 的库。请参阅 mgarrett57 在 [Github 上的实现](https://github.com/mgarrett57/DENCLUE/blob/master/denclue.py)。
- en: Conclusion
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In this article, we covered 10 of the most commonly used clustering algorithms
    within the areas of Hierarchical, Partitional, and Density-Based Clustering. While
    this article is meant to be exhaustive of the basics, I will be going in depth
    on each of these algorithms and providing more context in future articles dedicated
    specifically to each algorithm providing a full review of the literature surrounding
    them. We have also linked to research papers for each algorithm as helpful starting
    points for more exploration for each. I hope this article has helped serve as
    a good starting point for your data exploration projects using clustering.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们涵盖了分层、划分和基于密度的聚类领域中最常用的 10 种聚类算法。虽然这篇文章旨在详尽介绍基本知识，我将深入探讨这些算法，并在未来专门针对每个算法的文章中提供更多背景，提供有关它们的文献综述。我们还为每种算法提供了研究论文的链接，作为进一步探索的有用起点。希望这篇文章能为你使用聚类进行数据探索项目提供一个良好的起点。
