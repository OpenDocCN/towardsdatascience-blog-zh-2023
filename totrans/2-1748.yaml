- en: 'Python Watermarking: Old vs. New, Clunky vs. Clean — Which Will You Choose?'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python 水印：旧 vs 新，笨重 vs 干净 — 你会选择哪个？
- en: 原文：[https://towardsdatascience.com/python-watermarking-old-vs-new-clunky-vs-clean-which-will-you-choose-5f4f1e75a9f3](https://towardsdatascience.com/python-watermarking-old-vs-new-clunky-vs-clean-which-will-you-choose-5f4f1e75a9f3)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/python-watermarking-old-vs-new-clunky-vs-clean-which-will-you-choose-5f4f1e75a9f3](https://towardsdatascience.com/python-watermarking-old-vs-new-clunky-vs-clean-which-will-you-choose-5f4f1e75a9f3)
- en: '![](../Images/7b429df4182e762658cdb26e413f5f4d.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7b429df4182e762658cdb26e413f5f4d.png)'
- en: Image by [Siegfried Frech](https://pixabay.com/users/stilles_wasser-19985110/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=7863868)
    from [Pixabay](https://pixabay.com//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=7863868)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[Siegfried Frech](https://pixabay.com/users/stilles_wasser-19985110/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=7863868)提供，来源于[Pixabay](https://pixabay.com//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=7863868)
- en: 'Python Watermarking Made Easy: A Comprehensive Comparison of OpenCV, PIL, and
    filestools'
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python 水印制作简化：OpenCV、PIL 和 filestools 的全面比较
- en: '[](https://christophertao.medium.com/?source=post_page-----5f4f1e75a9f3--------------------------------)[![Christopher
    Tao](../Images/bea1e3c81cc62eb28bdba9275d6b326f.png)](https://christophertao.medium.com/?source=post_page-----5f4f1e75a9f3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5f4f1e75a9f3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5f4f1e75a9f3--------------------------------)
    [Christopher Tao](https://christophertao.medium.com/?source=post_page-----5f4f1e75a9f3--------------------------------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://christophertao.medium.com/?source=post_page-----5f4f1e75a9f3--------------------------------)[![Christopher
    Tao](../Images/bea1e3c81cc62eb28bdba9275d6b326f.png)](https://christophertao.medium.com/?source=post_page-----5f4f1e75a9f3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5f4f1e75a9f3--------------------------------)[![数据科学前沿](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5f4f1e75a9f3--------------------------------)
    [Christopher Tao](https://christophertao.medium.com/?source=post_page-----5f4f1e75a9f3--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----5f4f1e75a9f3--------------------------------)
    ·8 min read·Mar 28, 2023
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[数据科学前沿](https://towardsdatascience.com/?source=post_page-----5f4f1e75a9f3--------------------------------)
    ·8分钟阅读·2023年3月28日
- en: --
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: 'Watermarking images is an essential task for photographers, artists, and anyone
    who wants to protect their visual content from unauthorized use. In the Python
    world, there are many libraries that allow you to add watermarks to your images.
    In this article, we will compare three popular Python ways for watermarking images:
    **OpenCV**, **PIL** (Python Imaging Library), and **filestools**. For the last
    one you only need one line of code!'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 对图像进行水印处理是摄影师、艺术家以及任何希望保护其视觉内容免受未经授权使用的人的重要任务。在 Python 世界中，有许多库可以让你为图像添加水印。在本文中，我们将比较三种流行的
    Python 图像水印方法：**OpenCV**、**PIL**（Python Imaging Library）和**filestools**。对于最后一种方法，你只需一行代码！
- en: In this article, I will demo the image watermarking features using a photo that
    I took from Philip Island, Victoria, Australia. The original photo is here. Feel
    free to download it for your convenience.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我将演示使用我在澳大利亚维多利亚州菲利普岛拍摄的照片的水印功能。原始照片在这里。请随意下载以便使用。
- en: '![](../Images/eb3c9f8a925a5b880f69a9a38eb16b8b.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/eb3c9f8a925a5b880f69a9a38eb16b8b.png)'
- en: Photo captured by Author
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 作者拍摄的照片
- en: 1\. OpenCV — Large tool for small task
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. OpenCV — 小任务的大工具
- en: '![](../Images/907a3fa4f5f07147a6edf904a232c5ae.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/907a3fa4f5f07147a6edf904a232c5ae.png)'
- en: Image by [Lukas](https://pixabay.com/users/computerizer-4588466/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=2301646)
    from [Pixabay](https://pixabay.com//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=2301646)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[Lukas](https://pixabay.com/users/computerizer-4588466/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=2301646)提供，来源于[Pixabay](https://pixabay.com//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=2301646)
- en: OpenCV is a comprehensive computer vision library that provides extensive image
    processing functions, including the ability to add text watermarks to images.
    While OpenCV is not specifically designed for adding watermarks, it still provides
    the flexibility and control to do so. However, using OpenCV to add watermarks
    can be challenging, especially for those who are not familiar with the library.
    Additionally, achieving image-based watermarks with OpenCV requires some manual
    processing.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: OpenCV 是一个综合性的计算机视觉库，提供了广泛的图像处理功能，包括向图像添加文本水印的能力。虽然 OpenCV 并非专门为添加水印设计，但它仍然提供了实现这一目标的灵活性和控制力。然而，使用
    OpenCV 添加水印可能会有些挑战，尤其是对于那些不熟悉该库的人来说。此外，使用 OpenCV 实现基于图像的水印需要一些手动处理。
- en: Anyway, let’s have a look at how OpenCV can achieve this task for us.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，让我们看看 OpenCV 如何为我们完成这项任务。
- en: Before everything, make sure that you need to install the library if you haven’t.
    Simply use `pip` as follows.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在一切之前，请确保如果你还没有安装库，需要安装它。只需使用 `pip` 如下。
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: To use OpenCV in Python code, we need to import the `cv2` module. In order to
    create this demo easier, I also want to import `matplotlib` so that I can display
    the image on the fly.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Python 代码中使用 OpenCV，我们需要导入 `cv2` 模块。为了使这个示例更简单，我还想导入 `matplotlib`，这样我就可以即时显示图像。
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: OpenCV makes it very easy to read an image from a local path. All you need to
    do is use the `imread` function.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: OpenCV 使从本地路径读取图像变得非常简单。你只需使用 `imread` 函数即可。
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The following function is optional, I created this function to conveniently
    display the image in-line in a Jupyter Notebook environment. Feel free to use
    it if you want to check how the image object looks like.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 以下函数是可选的，我创建了这个函数以方便在 Jupyter Notebook 环境中内联显示图像。如果你想查看图像对象的样子，可以随意使用它。
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In the above function, I added `is_cv` to specify if this image object is from
    OpenCV. We need this because we may want to reuse this function for the PIL library
    later on. The OpenCV image object use BGR by default instead of RGB. Therefore,
    we need to use the `cvtColor()` function to convert the encoding method.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述函数中，我添加了 `is_cv` 来指定这个图像对象是否来自 OpenCV。我们需要这样做，因为我们可能希望以后将这个函数用于 PIL 库。OpenCV
    图像对象默认使用 BGR 而不是 RGB。因此，我们需要使用 `cvtColor()` 函数来转换编码方法。
- en: After that, the `matplotlib` is used to display the image. In my case, I gave
    a specific size that fits my browser window. Also, we can turn the axis off since
    we are just displaying an image. The `imshow()` is the key function that displays
    the image object.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，使用 `matplotlib` 来显示图像。在我的例子中，我指定了一个适合浏览器窗口的大小。此外，由于我们只是显示图像，可以关闭坐标轴。`imshow()`
    是显示图像对象的关键函数。
- en: So, we can simply display the image by calling the function we just created.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们可以简单地通过调用我们刚刚创建的函数来显示图像。
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/69bd3e991353b3400af2c9ce91e3b491.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/69bd3e991353b3400af2c9ce91e3b491.png)'
- en: Now, let’s create a string which is the text that we want to add to the image
    as the watermark. Then, we need to configure the font. There are several OpenCV
    built-in font styles that can be chosen. The `font_scale` will decide the size
    of the watermark text later on. Lastly, we can create a tuple as the colour. The
    `(255, 255, 255)` will make the watermark text white colour.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们创建一个字符串，这个字符串就是我们想要添加到图像上的水印文本。接下来，我们需要配置字体。有几种 OpenCV 内置的字体样式可以选择。`font_scale`
    将决定水印文本的大小。最后，我们可以创建一个元组作为颜色。`(255, 255, 255)` 将使水印文本为白色。
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The next thing is to decide the position of the watermark. The `getTextSize()`
    method will help us to get the size of the text. Meanwhile, we can get the dimension
    of the image from its `shape` attribute.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是决定水印位置。`getTextSize()` 方法将帮助我们获取文本的大小。同时，我们可以从图像的 `shape` 属性中获取图像的维度。
- en: '[PRE6]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: However, it is necessary to emphasize that the image is “H x W” while the text
    size is “W x H”. Therefore, when we calculate the coordinate, we need to use the
    second item (width) from the image shape to subtract the first item (width) from
    the text size, and vice versa.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，需要强调的是，图像的大小是“H x W”，而文本的大小是“W x H”。因此，当我们计算坐标时，需要使用图像形状中的第二项（宽度）减去文本大小中的第一项（宽度），反之亦然。
- en: '![](../Images/f5d88d16ac7391063fb46e12877ae946.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f5d88d16ac7391063fb46e12877ae946.png)'
- en: Finally, we can use the `putText()` method to add the watermark text to the
    image as follows, using all the parameters we defined above.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以使用 `putText()` 方法将水印文本添加到图像中，使用我们定义的所有参数。
- en: '[PRE7]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Let’s see the outcome. Succeed!
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看结果。成功！
- en: '![](../Images/0c44dbe5e1c7d318a97064fba6d6134e.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0c44dbe5e1c7d318a97064fba6d6134e.png)'
- en: 2\. PIL — Streamlined Watermarking
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2. PIL — 简化水印处理
- en: '![](../Images/a0d396c6b5078160d9ddaaa050590029.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a0d396c6b5078160d9ddaaa050590029.png)'
- en: Image by [an_photos](https://pixabay.com/users/an_photos-3160435/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=4503287)
    from [Pixabay](https://pixabay.com//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=4503287)
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[an_photos](https://pixabay.com/users/an_photos-3160435/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=4503287)来自
    [Pixabay](https://pixabay.com//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=4503287)
- en: PIL (Python Imaging Library) is a popular third-party library for image processing
    in Python that provides a simpler and more straightforward way to add watermarks
    to images than OpenCV. However, it still requires some steps to achieve watermarking.
    PIL is a good choice for those who need a reliable and relatively simple way to
    add watermarks to their images, without the need for extensive computer vision
    capabilities.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: PIL（Python Imaging Library）是一个流行的第三方图像处理库，它提供了比 OpenCV 更简单直接的方式来给图像添加水印。然而，它仍然需要一些步骤来实现水印。PIL
    是那些需要可靠且相对简单的方式来给图像添加水印的用户的不错选择，无需复杂的计算机视觉能力。
- en: Similarly, before using the PIL library, we need to install it as follows.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，在使用 PIL 库之前，我们需要按照如下方式安装它。
- en: '[PRE8]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: For the PIL library, we need the following 3 modules.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 PIL 库，我们需要以下 3 个模块。
- en: '`Image` module: provides a class for representing and manipulating images in
    PIL.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Image` 模块：提供了一个用于表示和操作 PIL 中图像的类。'
- en: '`ImageDraw` module: provides a set of functions for drawing on images, including
    lines, rectangles, circles, and text.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ImageDraw` 模块：提供了一组用于在图像上绘制的函数，包括线条、矩形、圆形和文本。'
- en: '`ImageFont` module: provides a class for loading and manipulating fonts in
    PIL, including setting the font size, style, and colour.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ImageFont` 模块：提供了一个用于加载和操作字体的类，包括设置字体大小、样式和颜色。'
- en: '[PRE9]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Then, we can use the `Image` module to open the image as follows. We can also
    reuse the `show_image()` method we defined previously to display the original
    image.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以使用`Image`模块打开图像，如下所示。我们也可以重用之前定义的`show_image()`方法来显示原始图像。
- en: '[PRE10]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![](../Images/00ba9ffaf90bc88635687dc9dc80c157.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/00ba9ffaf90bc88635687dc9dc80c157.png)'
- en: To manipulate the image, we need to create an `ImageDraw` instance from the
    image object.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 要操作图像，我们需要从图像对象创建一个`ImageDraw`实例。
- en: '[PRE11]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The next step is a bit tricky. Unlike OpenCV has built-in font styles, PIL can
    only make use of a separate “.ttf” file. Although all the operating systems will
    have some font styles, we still need to know what are existing so that we can
    use them.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步有点棘手。与 OpenCV 内置的字体样式不同，PIL 只能使用单独的“.ttf”文件。虽然所有操作系统都有一些字体样式，但我们仍需要了解现有的字体样式，以便可以使用它们。
- en: In this case, I would suggest the easiest way that is to use the `matplotlib`
    to display the available fonts as follows, unless you have a specific font style
    to use.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我建议最简单的方法是使用`matplotlib`来显示可用的字体，如下所示，除非你有特定的字体样式需要使用。
- en: '[PRE12]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Below are some available fonts in my case.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我所使用的一些可用字体。
- en: '![](../Images/58cd1e4b3cf11205f4fa63f8dd1bf6fe.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/58cd1e4b3cf11205f4fa63f8dd1bf6fe.png)'
- en: Now, we can start to set the parameters.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以开始设置参数。
- en: '[PRE13]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: We can use the `ImageFont.truetype` to create a font with a certain size for
    the watermark. After that, we can get the text size from the `draw` object using
    the `textsize()` method. after that, the way of calculating the coordinate is
    the same as what we did in the OpenCV demo.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`ImageFont.truetype`创建一个特定大小的水印字体。之后，我们可以通过`draw`对象使用`textsize()`方法获取文本大小。之后，计算坐标的方式与我们在
    OpenCV 演示中做的一样。
- en: Lastly, we can use the `text()` method of the `draw` object to add the watermark.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以使用`draw`对象的`text()`方法添加水印。
- en: '[PRE14]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![](../Images/288dcc6377fd3158577a17e65243552e.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/288dcc6377fd3158577a17e65243552e.png)'
- en: 3\. Filestools — A One-Line Wonder
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3. Filestools — 一行代码奇迹
- en: '![](../Images/bbd8b08d6d12800a49d81978ec7a77b8.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bbd8b08d6d12800a49d81978ec7a77b8.png)'
- en: Image by [Pexels](https://pixabay.com/users/pexels-2286921/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=1868956)
    from [Pixabay](https://pixabay.com//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=1868956)
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Pexels](https://pixabay.com/users/pexels-2286921/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=1868956)来自
    [Pixabay](https://pixabay.com//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=1868956)
- en: '`filestools` is a third-party Python library that provides a range of useful
    tools for file and image processing. It includes functions for displaying directory
    structures like the `tree` command in Linux, comparing file differences like the
    `diff` command, and adding watermarks to images using the `marker` command. Additionally,
    filestools can be used to convert curl requests to Python request code. Although
    the library was created by a Chinese developer, it is still widely accessible
    and usable by Python developers, despite some of the logs being in Chinese.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '`filestools` 是一个第三方 Python 库，提供了一系列有用的文件和图像处理工具。它包括显示目录结构的功能，如 Linux 中的 `tree`
    命令，比较文件差异的功能，如 `diff` 命令，以及使用 `marker` 命令给图像添加水印。此外，filestools 还可以用于将 curl 请求转换为
    Python 请求代码。尽管该库由一位中国开发者创建，但它仍然被广泛访问和使用，尽管一些日志是中文的。'
- en: Similarly, to use the library, we can install it as follows.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，要使用这个库，我们可以按如下方式安装它。
- en: '[PRE15]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Then, let's add the watermark text to the image. we can import the `add_mark()`
    function from the `watermarker` module of the library as follows. Then, this function
    will do everything we need.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将水印文字添加到图像中。我们可以按如下方式从库的 `watermarker` 模块中导入 `add_mark()` 函数。然后，这个函数将完成我们需要的一切。
- en: '[PRE16]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The `out` argument is a name of a directory, so the watermarked image will be
    output into this directory. The `opacity` specifies the transparency of the watermark.
    We can certainly do this using OpenCV and PIL, but it requires more steps and
    complex logic. Apart from that, the watermark will also be rendered as a “pattern”
    on the image. So, we are allowed to give an `angle` of the text, as well as the
    `space` which defines the space between the text instances.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '`out` 参数是一个目录名称，因此带水印的图像将被输出到这个目录中。`opacity` 指定了水印的透明度。我们确实可以使用 OpenCV 和 PIL
    实现这一点，但需要更多的步骤和复杂的逻辑。除此之外，水印还会被渲染为图像上的“图案”。因此，我们可以给文字指定一个 `angle`，以及定义文本实例之间间距的
    `space`。'
- en: '![](../Images/0755ad546074e415c748331411c76166.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0755ad546074e415c748331411c76166.png)'
- en: After running this function, it says “successfully saved”. Now, we can check
    our working directory. We should be able to find the new sub-directory with a
    watermarked image in it.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 运行这个函数后，会显示“成功保存”。现在，我们可以检查我们的工作目录。我们应该能够找到一个包含带水印图像的新子目录。
- en: '![](../Images/52a547e877c9d05b26169654efa1be0d.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/52a547e877c9d05b26169654efa1be0d.png)'
- en: Here is the watermarked photo once we open it.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们打开后的带水印照片。
- en: '![](../Images/b10d7dc986f9916b2c9f7cf7389390f7.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b10d7dc986f9916b2c9f7cf7389390f7.png)'
- en: Photo captured by Author
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 作者拍摄的照片
- en: Summary
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: '![](../Images/441a2dfe734d4d873d628bf3d2168160.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/441a2dfe734d4d873d628bf3d2168160.png)'
- en: Image by [Nikolett Emmert](https://pixabay.com/users/niki_emmert-13526667/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=7666292)
    from [Pixabay](https://pixabay.com//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=7666292)
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Nikolett Emmert](https://pixabay.com/users/niki_emmert-13526667/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=7666292)
    提供，来自 [Pixabay](https://pixabay.com//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=7666292)
- en: 'In this article, we compared three popular Python libraries for watermarking
    images: OpenCV, PIL (Python Imaging Library), and filestools. OpenCV is a comprehensive
    computer vision library that provides extensive image processing functions, while
    PIL provides a simpler and more straightforward way to add watermarks to images.
    However, both libraries require multiple steps and some manual processing to achieve
    watermarking. On the other hand, filestools provides a one-line solution for adding
    watermarks to images, making it the easiest and most streamlined library of the
    three. Overall, while OpenCV and PIL offer more advanced image processing capabilities,
    filestools is the clear winner in terms of ease of use for watermarking images.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们比较了三种流行的 Python 库用于给图像加水印：OpenCV、PIL（Python Imaging Library）和 filestools。OpenCV
    是一个综合的计算机视觉库，提供广泛的图像处理功能，而 PIL 提供了一种更简单直接的方法来给图像加水印。然而，这两个库都需要多个步骤和一些手动处理才能实现水印。另一方面，filestools
    提供了一行代码的解决方案来添加水印，使其成为三者中最简单和最流线型的库。总体而言，虽然 OpenCV 和 PIL 提供了更高级的图像处理功能，但在水印添加的易用性方面，filestools
    是明显的赢家。
- en: '[](https://medium.com/@qiuyujx/membership?source=post_page-----5f4f1e75a9f3--------------------------------)
    [## Join Medium with my referral link - Christopher Tao'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@qiuyujx/membership?source=post_page-----5f4f1e75a9f3--------------------------------)
    [## 使用我的推荐链接加入 Medium - Christopher Tao'
- en: Thank you for reading my articles! Buy me a coffee please if you don't mind
    :) Your membership fee supports thousands…
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 感谢你阅读我的文章！如果你不介意，请请我喝杯咖啡 :) 你的会员费用支持成千上万的…
- en: medium.com](https://medium.com/@qiuyujx/membership?source=post_page-----5f4f1e75a9f3--------------------------------)
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[medium.com](https://medium.com/@qiuyujx/membership?source=post_page-----5f4f1e75a9f3--------------------------------)'
- en: '**If you feel my articles are helpful, please consider joining Medium Membership
    to support me and thousands of other writers! (Click the link above)**'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果你觉得我的文章有帮助，请考虑加入 Medium 会员来支持我和其他成千上万的作者！(点击上面的链接)**'
- en: '*Unless otherwise noted all images are by the author*'
  id: totrans-90
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*除非另有说明，所有图片均由作者提供*'
