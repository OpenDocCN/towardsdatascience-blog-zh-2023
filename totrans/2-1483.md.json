["```py\ndf['merchant_state_abbr'] = df['merchant_state'].map(state_abbreviations)\nstate_counts = df.groupby('merchant_state_abbr')['cardholder_name'].nunique().reset_index()\nstate_counts.columns = ['State', 'Customer_Count']\n```", "```py\nfig = px.choropleth(state_counts, locations='State', locationmode='USA-states',\n                    color='Customer_Count', scope='usa',\n                    color_continuous_scale='Blues',\n                    title='Number of Customers by State')\n\nfig.show()\n```", "```py\ndf['transaction_date'] = pd.to_datetime(df['transaction_date'])\nNOW = df['transaction_date'].max()\n```", "```py\nrfmTable = df.groupby('cardholder_name').agg({'transaction_date': lambda x: (NOW - x.max()).days, 'transaction_id': lambda x: len(x), 'transaction_amount': lambda x: x.sum()})\nrfmTable['transaction_date'] = rfmTable['transaction_date'].astype(int)\n```", "```py\nrfmTable.rename(columns={'transaction_date': 'recency', \n                         'transaction_id': 'frequency',\n                         'transaction_amount': 'monetary_value'}, inplace=True)\nrfmTable = rfmTable.reset_index()\n```", "```py\nrfmTable['r_quartile'] = pd.qcut(rfmTable['recency'], q=4, labels=range(1,5), duplicates='raise')\nrfmTable['f_quartile'] = pd.qcut(rfmTable['frequency'], q=4, labels=range(1,5), duplicates='drop')\nrfmTable['m_quartile'] = pd.qcut(rfmTable['monetary_value'], q=4, labels=range(1,5), duplicates='drop')\nrfm_data = rfmTable.reset_index()\n```", "```py\nheatmap_data = rfm_data.groupby(['r_quartile', 'f_quartile']).size().reset_index(name='Percentage')\nheatmap_data['Percentage'] = heatmap_data['Percentage'] / heatmap_data['Percentage'].sum() * 100\n```", "```py\nheatmap_matrix = heatmap_data.pivot('r_quartile', 'f_quartile', 'Percentage')\n```", "```py\nsns.set()\nsns.heatmap(heatmap_matrix, annot=True, fmt=\".2f\", cmap=\"YlGnBu\")\n\nplt.title(\"Customer Segmentation Heatmap\")\nplt.xlabel(\"Frequency Quartile\")\nplt.ylabel(\"Recency Quartile\")\nplt.show()\n```"]