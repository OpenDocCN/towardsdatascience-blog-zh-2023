- en: How to Plot Graphs using the DiagrammeR package in R
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用 DiagrammeR 包在 R 中绘制图表
- en: 原文：[https://towardsdatascience.com/how-to-plot-graphs-using-the-diagrammer-package-in-r-3fe4642091cc](https://towardsdatascience.com/how-to-plot-graphs-using-the-diagrammer-package-in-r-3fe4642091cc)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-plot-graphs-using-the-diagrammer-package-in-r-3fe4642091cc](https://towardsdatascience.com/how-to-plot-graphs-using-the-diagrammer-package-in-r-3fe4642091cc)
- en: DiagrammeR , grViz()
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DiagrammeR , grViz()
- en: '[](https://indhumathychelliah.medium.com/?source=post_page-----3fe4642091cc--------------------------------)[![Indhumathy
    Chelliah](../Images/5c8a238adb411a43f854953caf7d3e3a.png)](https://indhumathychelliah.medium.com/?source=post_page-----3fe4642091cc--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3fe4642091cc--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3fe4642091cc--------------------------------)
    [Indhumathy Chelliah](https://indhumathychelliah.medium.com/?source=post_page-----3fe4642091cc--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://indhumathychelliah.medium.com/?source=post_page-----3fe4642091cc--------------------------------)[![Indhumathy
    Chelliah](../Images/5c8a238adb411a43f854953caf7d3e3a.png)](https://indhumathychelliah.medium.com/?source=post_page-----3fe4642091cc--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3fe4642091cc--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3fe4642091cc--------------------------------)
    [Indhumathy Chelliah](https://indhumathychelliah.medium.com/?source=post_page-----3fe4642091cc--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----3fe4642091cc--------------------------------)
    ·6 min read·Feb 15, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----3fe4642091cc--------------------------------)
    ·6 分钟阅读·2023 年 2 月 15 日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/80964a39441eb55c198a4dd56ff83581.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/80964a39441eb55c198a4dd56ff83581.png)'
- en: 'Photo by Lukas: [https://www.pexels.com/photo/person-holding-blue-pen-590014/](https://www.pexels.com/photo/person-holding-blue-pen-590014/)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '图片由 Lukas 提供: [https://www.pexels.com/photo/person-holding-blue-pen-590014/](https://www.pexels.com/photo/person-holding-blue-pen-590014/)'
- en: DiagrammeR is a package in R that is used to create graphs and flowcharts using
    graphviz and mermaid.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: DiagrammeR 是一个 R 包，用于使用 graphviz 和 mermaid 创建图表和流程图。
- en: In this article, let’s look at how to create graphs using the grViz() in the
    DiagrammeR package.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将探讨如何使用 DiagrammeR 包中的 grViz() 创建图表。
- en: What is DiagrammeR?
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是 DiagrammeR？
- en: What is grViz()?
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是 grViz()？
- en: How to create nodes, edges, labels, and their substitution and connection using
    grViz()
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何使用 grViz() 创建节点、边、标签及其替代和连接
- en: How to knit to HTML
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何编织到 HTML
- en: What is DiagrammeR
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 DiagrammeR
- en: DiagrammeR is a package within htmlwidgets for R. It is used to generate graphs
    using graphviz and mermaid library.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: DiagrammeR 是一个在 htmlwidgets 中的 R 包，用于生成使用 graphviz 和 mermaid 库的图表。
- en: 1\. Create an RMarkdown document.
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. 创建一个 RMarkdown 文档。
- en: In RStudio -> Go to File → New File →R Markdown. then give the title and select
    the output format as HTML.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在 RStudio -> 转到 File → New File → R Markdown，然后输入标题并选择输出格式为 HTML。
- en: '![](../Images/c3c92c437d98aab11c22d91b85c9e646.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c3c92c437d98aab11c22d91b85c9e646.png)'
- en: The R Markdown document will have the document title and other information at
    the top.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: R Markdown 文档将会在顶部显示文档标题和其他信息。
- en: '![](../Images/94f2a45a20c4772e297295909a780952.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/94f2a45a20c4772e297295909a780952.png)'
- en: Below that we will have r chunks which have delimiters [PRE0]{r} [PRE1]` [PRE2]`
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 下面会有 r chunks，带有定界符 [PRE0]{r} [PRE1]` [PRE2]`
- en: When you render the R Markdown document, it will run each chunk and embed the
    results beneath the code chunk or you can run each code chunk and the result will
    be displayed for that code chunk.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 当你渲染 R Markdown 文档时，它会运行每个代码块，并将结果嵌入在代码块下方，或者你可以运行每个代码块，结果将显示在该代码块下。
- en: We can knit the R Markdown document to HTML output. Let’s see how to do that
    in this article.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将 R Markdown 文档编织成 HTML 输出。让我们看看如何在本文中做到这一点。
- en: 2\. Install the DiagrammeR package
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. 安装 DiagrammeR 包
- en: Go to Packages → Install on the right side of the RStudio and enter the package
    name DiagrammeR and click Install.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在 RStudio 右侧点击 Packages → Install，输入包名 DiagrammeR 并点击 Install。
- en: '![](../Images/506d97d6347c9ac92b730356f86f1e9a.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/506d97d6347c9ac92b730356f86f1e9a.png)'
- en: 2\. What is grViz?
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 什么是 grViz？
- en: DiagrammeR package uses the grViz() function for Graphviz graphs. Let’s see
    how to use grViz() function to create graphs.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: DiagrammeR 包使用 grViz() 函数生成 Graphviz 图表。我们来看看如何使用 grViz() 函数创建图表。
- en: 3\. How to create nodes, edges, labels, and their substitution and connections
    using grViz()?
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 如何使用 grViz() 创建节点、边、标签及其替代和连接？
- en: While creating a graph, we have to mention the layout, node attributes, edge
    attributes, and connection.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建图时，我们必须提及布局、节点属性、边属性和连接。
- en: '![](../Images/82cf2c07876f79e5eb90b3bfb716d92f.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/82cf2c07876f79e5eb90b3bfb716d92f.png)'
- en: Image by Author
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Let’s see how to create the above-displayed graph. In the above graph, * * green
    color circles are called nodes. A=15, B=10, etc-> are the labels of the nodes.
    The arrow mark is known as the edges.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下如何创建上述显示的图。在上面的图中，* * 绿色圆圈被称为节点。A=15，B=10，等等-> 是节点的标签。箭头标记称为边。
- en: 1\. Mention the layout
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1. 提及布局
- en: The default layout is the dot.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 默认布局是 dot。
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**2\. Mention the Node attributes:**'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**2. 提及节点属性：**'
- en: We can mention node shape, color, style, width, etc.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以提到节点的形状、颜色、样式、宽度等。
- en: '[PRE4]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**3\. Mention the Edge Attributes:**'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**3. 提及边的属性：**'
- en: Edge attributes include color, arrowhead, arrow tail, pen width, direction,
    etc.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 边的属性包括颜色、箭头头部、箭头尾部、笔宽、方向等。
- en: '[PRE5]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**4\. Mention the label and substitutions:**'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**4. 提及标签和替代项：**'
- en: We have to mention the label and substitution for the node.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须提及节点的标签和替代项。
- en: '[PRE6]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Here A -> node name
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这里 A -> 节点名称
- en: A=@@1 → This is the label.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: A=@@1 → 这是标签。
- en: '[PRE7]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '@@1 -> is the substitution. Here 1 is the footnote number. The value 15 will
    be substituted in place of 1 when the graph is rendered.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '@@1 -> 是替代。这里 1 是脚注编号。当图被渲染时，值 15 将替代 1。'
- en: '**5\. Mention the connection details**'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**5. 提及连接细节**'
- en: In my graph A is connected to B and C. B is connected to D and C is connected
    to E.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的图中，A 连接到 B 和 C。B 连接到 D，C 连接到 E。
- en: '[PRE8]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**Full R code:**'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**完整 R 代码：**'
- en: '[PRE9]{r , echo=FALSE}'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE9]{r , echo=FALSE}'
- en: library(DiagrammeR)
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: library(DiagrammeR)
- en: grViz("
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: grViz("
- en: digraph {
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: digraph {
- en: layout = dot
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: layout = dot
- en: node [shape = circle,color=green,style=filled,fixedsize=True,width=0.6]
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 节点 [shape = circle,color=green,style=filled,fixedsize=True,width=0.6]
- en: edge[color=grey,arrowhead=vee]
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: edge[color=grey,arrowhead=vee]
- en: A[label = 'A= @@1']
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: A[label = 'A= @@1']
- en: B[label = 'B=@@2']
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: B[label = 'B=@@2']
- en: C[label = 'C=@@3']
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: C[label = 'C=@@3']
- en: D[label = 'D=@@4']
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: D[label = 'D=@@4']
- en: E[label = 'E=@@5']
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: E[label = 'E=@@5']
- en: A->B
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: A->B
- en: A->C
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: A->C
- en: B->D
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: B->D
- en: C->E
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: C->E
- en: '}'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[1]:15'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '[1]:15'
- en: '[2]:10'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '[2]:10'
- en: '[3]:20'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '[3]:20'
- en: '[4]:2'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '[4]:2'
- en: '[5]:2'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '[5]:2'
- en: '")'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '")'
- en: '[PRE10]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: rank=same {A->C}
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: rank=same {A->C}
- en: rank=same {B->E}
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: rank=same {B->E}
- en: '[PRE11]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Output graph:'
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 输出图：
- en: '![](../Images/a5fd989f0f752da1684ecfdd47f6a76f.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a5fd989f0f752da1684ecfdd47f6a76f.png)'
- en: Image by Author
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Let’s create a node from the down arrow of another node.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从另一个节点的下箭头创建一个节点。
- en: '![](../Images/962d5d77523140e19853c88b0e14aca5.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/962d5d77523140e19853c88b0e14aca5.png)'
- en: Image by Author
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Let’s look at how to create the graph mentioned above.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何创建上述提到的图。
- en: First, we have to create a blank node.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要创建一个空节点。
- en: '[PRE13]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '**Output:**'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '![](../Images/48875fc8e70010dde0a205495050e31b.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/48875fc8e70010dde0a205495050e31b.png)'
- en: Image by Author
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: After that we can make the blank node label= “ “ and the width and height to
    be very small (0.01)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们可以将空节点的标签设为“ ”，并将宽度和高度设置为非常小（0.01）
- en: '[PRE15]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '**Full code**'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '**完整代码**'
- en: '[PRE16]{r , echo=FALSE}'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE16]{r , echo=FALSE}'
- en: library(DiagrammeR)
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: library(DiagrammeR)
- en: grViz("
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: grViz("
- en: digraph {
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: digraph {
- en: layout = dot
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: layout = dot
- en: node [shape = circle,color=green,style=filled,fontsize=45,fixedsize=True,width=4.0]
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 节点 [shape = circle,color=green,style=filled,fontsize=45,fixedsize=True,width=4.0]
- en: edge[color=grey,arrowhead=vee,penwidth=5,arrowsize=5]
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: edge[color=grey,arrowhead=vee,penwidth=5,arrowsize=5]
- en: A[label = 'A= @@1']
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: A[label = 'A= @@1']
- en: B[label = 'B=@@2']
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: B[label = 'B=@@2']
- en: C[label = 'C=@@3']
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: C[label = 'C=@@3']
- en: D[label = 'D=@@4']
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: D[label = 'D=@@4']
- en: E[label = 'E=@@5']
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: E[label = 'E=@@5']
- en: blank1[label = '', width = 0.01, height = 0.01]
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: blank1[label = '', width = 0.01, height = 0.01]
- en: A -> blank1;
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: A -> blank1;
- en: blank1 -> B[minlen=10];
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: blank1 -> B[minlen=10];
- en: '{{ rank = same; blank1 B }}'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '{{ rank = same; blank1 B }}'
- en: blank1 -> C
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: blank1 -> C
- en: '[PRE17]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: blank2[label = '', width = 0.01, height = 0.01]
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: blank2[label = '', width = 0.01, height = 0.01]
- en: C -> blank2;
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: C -> blank2;
- en: blank2 -> D[minlen=1];
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: blank2 -> D[minlen=1];
- en: '{{ rank = same; blank2 E }}'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '{{ rank = same; blank2 E }}'
- en: blank2 -> E [minlen=10]
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: blank2 -> E [minlen=10]
- en: '}'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[1]:15'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '[1]:15'
- en: '[2]:10'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '[2]:10'
- en: '[3]:20'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '[3]:20'
- en: '[4]:2'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '[4]:2'
- en: '[5]:2'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '[5]:2'
- en: '")[PRE18]'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '")[PRE18]'
- en: '**Output:**'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '![](../Images/3f9bb201e8790b2d5a3124188300732a.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3f9bb201e8790b2d5a3124188300732a.png)'
- en: Image by Author
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: The next step is to remove the arrow mark. It can be removed by mentioning the
    edge attribute “dir=none”
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是去除箭头标记。可以通过提及边的属性“dir=none”来去除。
- en: '[PRE19]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '**Full code:**'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '**完整代码：**'
- en: '[PRE20]{r , echo=FALSE}'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE20]{r , echo=FALSE}'
- en: library(DiagrammeR)
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: library(DiagrammeR)
- en: grViz("
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: grViz("
- en: digraph {
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: digraph {
- en: layout = dot
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: layout = dot
- en: node [shape = circle,color=green,style=filled,fontsize=45,fixedsize=True,width=4.0]
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 节点 [shape = circle,color=green,style=filled,fontsize=45,fixedsize=True,width=4.0]
- en: edge[color=grey,arrowhead=vee,penwidth=5,arrowsize=5]
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: edge[color=grey,arrowhead=vee,penwidth=5,arrowsize=5]
- en: A[label = 'A= @@1']
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: A[label = 'A= @@1']
- en: B[label = 'B=@@2']
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: B[label = 'B=@@2']
- en: C[label = 'C=@@3']
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: C[label = 'C=@@3']
- en: D[label = 'D=@@4']
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: D[label = 'D=@@4']
- en: E[label = 'E=@@5']
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: E[label = 'E=@@5']
- en: blank1[label = '', width = 0.01, height = 0.01]
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: blank1[label = '', width = 0.01, height = 0.01]
- en: A -> blank1[dir=none];
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: A -> blank1[dir=none];
- en: blank1 -> B[minlen=10];
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: blank1 -> B[minlen=10];
- en: '{{ rank = same; blank1 B }}'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '{{ rank = same; blank1 B }}'
- en: blank1 -> C
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: blank1 -> C
- en: '[PRE21]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: blank2[label = '', width = 0.01, height = 0.01]
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: blank2[label = '', width = 0.01, height = 0.01]
- en: C -> blank2[dir=none];
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: C -> blank2[dir=none];
- en: blank2 -> D[minlen=1];
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: blank2 -> D[minlen=1];
- en: '{{ rank = same; blank2 E }}'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '{{ rank = same; blank2 E }}'
- en: blank2 -> E [minlen=10]
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: blank2 -> E [minlen=10]
- en: '}'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[1]:15'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '[1]:15'
- en: '[2]:10'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '[2]:10'
- en: '[3]:20'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '[3]:20'
- en: '[4]:2'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '[4]:2'
- en: '[5]:2'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '[5]:2'
- en: '")[PRE22]'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '")[PRE22]'
- en: 'Output:'
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 输出：
- en: '![](../Images/f7f401c9037a35f787f62e05f746fd19.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f7f401c9037a35f787f62e05f746fd19.png)'
- en: Image by Author
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: 4\. Knit to html
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 编织到 HTML
- en: Select the option knit -> knit to html
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 选择选项编织 -> 编织到 HTML
- en: '![](../Images/c4fe1fccaa6fe03de549fdd75ff158fe.png)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c4fe1fccaa6fe03de549fdd75ff158fe.png)'
- en: The whole R-Markdown document will be rendered into an HTML document.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 整个 R-Markdown 文档将被渲染为 HTML 文档。
- en: If you don’t want the r-code to be displayed in the HTML output, mention echo
    =False in the r-chunk code.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不希望在 HTML 输出中显示 R 代码，请在 R-chunk 代码中设置 echo =False。
- en: '[PRE23]{r , echo=FALSE}[PRE24]'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE23]{r , echo=FALSE}[PRE24]'
- en: This HTML page can be downloaded from my GitHub link.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 HTML 页面可以从我的 GitHub 链接下载。
- en: '[https://github.com/IndhumathyChelliah/R-Projects](https://github.com/IndhumathyChelliah/R-Projects)'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/IndhumathyChelliah/R-Projects](https://github.com/IndhumathyChelliah/R-Projects)'
- en: 'Conclusion:'
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论：
- en: DiagrammeR is a package in R that allows the creation of graphs using Graphviz
    and mermaid styles. In this article, we have covered using GraphViz style. We
    have covered how to create nodes, labels, edges, connections, and layouts for
    the graphs using the grViz() function in the DiagrammeR package. We have also
    covered node attributes, edge attributes, labels, and their substitutions. We
    have covered only the dot layout, which is the default layout in this article.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: DiagrammeR 是一个 R 包，允许使用 Graphviz 和 mermaid 样式创建图形。在本文中，我们介绍了如何使用 GraphViz 样式。我们介绍了如何使用
    DiagrammeR 包中的 grViz() 函数创建节点、标签、边、连接和图形布局。我们还介绍了节点属性、边属性、标签及其替代。本文仅涵盖了 dot 布局，这是默认布局。
- en: Thanks for reading and hope you all like it!
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读，希望大家喜欢！
- en: 'References:'
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献：
- en: '[](https://rich-iannone.github.io/DiagrammeR/?source=post_page-----3fe4642091cc--------------------------------)
    [## DiagrammeR'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://rich-iannone.github.io/DiagrammeR/?source=post_page-----3fe4642091cc--------------------------------)
    [## DiagrammeR'
- en: DiagrammeR, an R package that allows you to create flowcharts, diagrams, and
    grhs with Markdown-like text.
  id: totrans-180
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: DiagrammeR 是一个 R 包，允许你使用类似 Markdown 的文本创建流程图、图示和图形。
- en: rich-iannone.github.io](https://rich-iannone.github.io/DiagrammeR/?source=post_page-----3fe4642091cc--------------------------------)
    [](https://rich-iannone.github.io/DiagrammeR/graphviz_and_mermaid.html?source=post_page-----3fe4642091cc--------------------------------)
    [## DiagrammeR — Documentation
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '[rich-iannone.github.io](https://rich-iannone.github.io/DiagrammeR/?source=post_page-----3fe4642091cc--------------------------------)
    [](https://rich-iannone.github.io/DiagrammeR/graphviz_and_mermaid.html?source=post_page-----3fe4642091cc--------------------------------)
    [## DiagrammeR — 文档'
- en: Graphviz support is an integral part of the DiagrammeR package. Graphviz consists
    of a graph description language…
  id: totrans-182
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Graphviz 支持是 DiagrammeR 包的重要组成部分。Graphviz 包含图形描述语言…
- en: rich-iannone.github.io](https://rich-iannone.github.io/DiagrammeR/graphviz_and_mermaid.html?source=post_page-----3fe4642091cc--------------------------------)  [##
    dot
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '[rich-iannone.github.io](https://rich-iannone.github.io/DiagrammeR/graphviz_and_mermaid.html?source=post_page-----3fe4642091cc--------------------------------)  [##
    dot'
- en: Graphviz dot is the default tool to use if edges have directionality. The layout
    algorithm aims edges in the same…
  id: totrans-184
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Graphviz dot 是处理有方向边的默认工具。布局算法将边对齐在同一…
- en: graphviz.org](https://graphviz.org/docs/layouts/dot/?source=post_page-----3fe4642091cc--------------------------------)
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '[graphviz.org](https://graphviz.org/docs/layouts/dot/?source=post_page-----3fe4642091cc--------------------------------)'
