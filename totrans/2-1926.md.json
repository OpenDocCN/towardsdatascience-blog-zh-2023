["```py\n# Tables with Plotly Figure Factory\n\nimport plotly.figure_factory as ff\n\ndata_to_table1 = [['Year', 'Battery Electric', 'Plug-in Hybrid', 'Full Hybrid', 'Petrol', 'Diesel'],\n                  [2013, 5.79, 0.00, 6.68, 34.99, 52.54],\n                  [2014, 12.56, 1.15, 6.95, 30.67,48.67],\n                  [2015, 17.11, 5.30, 7.13, 29.64, 40.82],\n                  [2016, 15.23, 13.82,11.31,28.84, 30.80],\n                  [2017, 18.93, 19.70, 12.69, 25.54, 23.14],\n                  [2018, 31.19, 17.81, 10.66, 22.64, 17.69],\n                  [2019, 42.38, 13.55, 12.35, 15.68, 16.03]]\n\nfig_ff1 = ff.create_table(data_to_table1)\n\nfig_ff1.write_image(your_path + 'FF_Table1.png', scale = 2)\nfig_ff1.show()\n```", "```py\n# Plotly Table 1\n\nimport numpy as np\nimport plotly.graph_objects as go\n\nheaders_tb1 = ['Year', 'Battery Electric', 'Plug-in Hybrid', 'Full Hybrid', 'Petrol', 'Diesel']\n\nvalues_tb1 = [[2013, 5.79,  0.00,  6.68,  34.99, 52.54],\n              [2014, 12.56, 1.15,  6.95,  30.67, 48.67],\n              [2015, 17.11, 5.30,  7.13,  29.64, 40.82],\n              [2016, 15.23, 13.82, 11.31, 28.84, 30.80],\n              [2017, 18.93, 19.77, 12.69, 25.40, 23.14],\n              [2018, 31.19, 17.81, 10.66, 22.64, 17.69],\n              [2019, 42.38, 13.55, 12.35, 15.68, 16.03]]\n\ntransposed_tb1 = np.array(values_tb1).T.tolist()\n\nfig_tb1 = go.Figure()\nfig_tb1.add_trace( \n                go.Table(\n                         header = dict(values = headers_tb1 ),\n                         cells  = dict(values = transposed_tb1) \n                         ))\n\nfig_tb1.write_image(your_path + 'Table_tb1.png', scale = 2)\nfig_tb1.show()\n```", "```py\n# Plotly Table 2                    \n\naligns = ['center','right', 'right','right','right', 'right']\n\nfig_tb2 = go.Figure()\nfig_tb2.add_trace( \n                  go.Table(\n                     header = dict(values = headers_tb1,    align = aligns ),\n                     cells  = dict(values = transposed_tb1, align = aligns )\n                           ))\n\nfig_tb2.write_image(your_path + 'Table_tb2.png', scale = 2)\nfig_tb2.show()\n```", "```py\n# Plotly Table 3\n\nfig_tb3 = go.Figure()\nfig_tb3.add_trace( \n                go.Table(\n                   header = dict(values = headers_tb1,    align = aligns ),\n                   cells  = dict(values = transposed_tb1, align = aligns,\n                                 format = [None, \",.2f\"])\n                         ))\n\nfig_tb3.write_image(your_path + 'Table_tb3.png', scale = 2)\nfig_tb3.show()\n```", "```py\n# Plotly Table 4\n\nfill_color_h = px.colors.qualitative.Pastel2[1]\nline_color_h = 'darkslategray'\n\nfill_color_c = [px.colors.qualitative.Pastel2[0], px.colors.qualitative.Pastel2[2],\n                px.colors.qualitative.Pastel2[2], px.colors.qualitative.Pastel2[2],\n                px.colors.qualitative.Pastel2[2], px.colors.qualitative.Pastel2[2]]\nline_color_c = 'darkslategray'\n\nfig_tb4 = go.Figure()\nfig_tb4.add_trace( \n                go.Table(\n                   header = dict(values = headers_tb1,    align = aligns,\n                                 fill_color = fill_color_h,\n                                 line_color = line_color_h),\n                   cells  = dict(values = transposed_tb1, align = aligns,\n                                 fill_color = fill_color_c,\n                                 line_color = line_color_c,\n                                 format = [None, \",.2f\"])\n                         ))\n\nfig_tb4.write_image(your_path + 'Table_tb4.png', scale = 2)\nfig_tb4.show()\n```", "```py\n# Plotly Table 5\n\nfig_tb5 = go.Figure()\nfig_tb5.add_trace( \n                go.Table(\n                   header = dict(values = headers_tb1,    align = aligns,\n                                 fill_color = fill_color_h,\n                                 line_color = line_color_h),\n\n                   cells  = dict(values = transposed_tb1, align = aligns,\n                                 fill_color = fill_color_c,\n                                 line_color = line_color_c,\n                                 height = 35, format = [None, \",.2f\"])\n                         ))\n\nfig_tb5.update_layout(title =  \"New Passenger Vehicle Registrations in Norway (%)\", \n                      title_font_size = 20, title_x = 0.5)\nfig_tb5.add_annotation(x=1, yref= 'paper', y = 0.01,\n                       text=\"Source: Our World in Data (2021)\",\n                       showarrow=False, \n                       font_size = 15, font_color = 'blue')  \nfig_tb5.update_layout(autosize = False, \n                      margin=dict(l=20, r=20, t=70, b=100))\n\nfig_tb5.write_image(your_path + 'Table_tb5.png', scale = 2)\nfig_tb5.show()\n```", "```py\n# Plotly Table 6\n\nfig_tb6 = go.Figure()\nfig_tb6.add_trace( \n                go.Table(\n                   columnwidth = [80,90,90,80, 80,80], \n                   header = dict(values = headers_tb1,    align = aligns,\n                                 fill_color = fill_color_h,\n                                 line_color = line_color_h),\n\n                   cells  = dict(values = transposed_tb1, align = aligns,\n                                 fill_color = fill_color_c,\n                                 line_color = line_color_c,\n                                 height = 35, format = [None, \",.2f\"])\n                         ))\n\nfig_tb6.update_layout(title =  \"New Passenger Vehicle Registrations in Norway (%)\", \n                      title_font_size = 20, title_x = 0.5)\nfig_tb6.add_annotation(x=1, yref= 'paper', y = 0.01,\n                       text=\"Source: Our World in Data (2021)\",\n                       showarrow=False, \n                       font_size = 15, font_color = 'blue')  \nfig_tb6.update_layout(autosize = False, \n                      margin=dict(l=20, r=20, t=70, b=100))\n\nfig_tb6.write_image(your_path + 'Table_tb6.png', scale = 2)\nfig_tb6.show()\n```"]