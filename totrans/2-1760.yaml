- en: 'R for Data Analysis: How to Find the Perfect Cocomelon Video for Your Kids'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/r-for-data-analysis-how-to-find-the-perfect-cocomelon-video-for-your-kids-833d6b2d9267](https://towardsdatascience.com/r-for-data-analysis-how-to-find-the-perfect-cocomelon-video-for-your-kids-833d6b2d9267)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: How to Build End-to-End Data Project Exploring New Trending Cocomelon Videos
    from Scratch Using R
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://chengzhizhao.medium.com/?source=post_page-----833d6b2d9267--------------------------------)[![Chengzhi
    Zhao](../Images/186bba91822dbcc0f926426e56faf543.png)](https://chengzhizhao.medium.com/?source=post_page-----833d6b2d9267--------------------------------)[](https://towardsdatascience.com/?source=post_page-----833d6b2d9267--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----833d6b2d9267--------------------------------)
    [Chengzhi Zhao](https://chengzhizhao.medium.com/?source=post_page-----833d6b2d9267--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----833d6b2d9267--------------------------------)
    ·9 min read·Mar 4, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/de4472fd9253705fe85c6716eeade31c.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Tony Sebastian](https://unsplash.com/@tonyzebastian?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/7sWm1yRJZhg?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: Cocomelon — Nursery Rhymes is the world's second-largest Youtube channel (155M+
    subscribers). It is such a popular and helpful channel that it is an inevitable
    subject for toddlers and parents. I enjoy spending time watching Cocomelon together
    with my son.
  prefs: []
  type: TYPE_NORMAL
- en: After watching Cocomelon videos for a month, I noticed the same videos are repeatedly
    recommended on Youtube. Videos like "The wheel on the bus" and "bath song" are
    popular and fun to watch, but they were published years ago, and kids got bored
    watching them repeatedly. As a father, I want to show some more recent but good-quality
    videos from the Cocomelon channel. As a data professional, I also want to explore
    the world's second-largest Youtube channel data to gain more insights and find
    something interesting about the data available.
  prefs: []
  type: TYPE_NORMAL
- en: 'All videos within a YouTube channel only provide users with two options: recently
    uploaded (order by time) and popular (order by view). I could go to the recently
    uploaded tab and click one after another. However, the Cocomelon channel has 800+
    videos, which will be time-consuming.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The good thing is that I am an engineer and know how to build something with
    data. So I started writing code by gathering data, performing the cleanup, visualization,
    and gaining more insights. **I will share my journey on using R for Data Analysis:
    building an end-to-end solution for exploring trending Cocomelon videos using
    R from scratch.**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Note: although the example code I wrote in R and the Youtube channel is for
    Cocomelon, they are my preference. You can also write in Python or Rust with its
    data analysis tool, and I will show how to get data from Youtube applies to other
    channels as well.*'
  prefs: []
  type: TYPE_NORMAL
- en: How To Get Youtube Data Using R
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The data source is always the starting point of any data project. I have made
    several attempts to step onto my final solution.
  prefs: []
  type: TYPE_NORMAL
- en: 'I first searched on Google for the term: "Youtube views stats for Cocomelon"
    It shows some statistics about the channel, but none cover more detailed data
    for each video. Those sites are heavily flooded with ads, and web scraping might
    be challenging.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Then I looked at the public dataset on [Kaggle](https://www.kaggle.com/), and
    [CC0](https://creativecommons.org/publicdomain/zero/1.0/) datasets like [Trending
    YouTube Video Statistics](https://www.kaggle.com/datasets/datasnaek/youtube-new)
    could be a good option. However, after exploring the dataset, I found two issues:'
  prefs: []
  type: TYPE_NORMAL
- en: It doesn't contain Cocomelon in the dataset
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The content was retrieved years ago and needed newer videos I wanted to search
    for.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'My only option is to pull data directly from Youtube to pull the most up-to-date
    data. There are also two options here:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Web scraping**: I could set up a crawler or find one project on GitHub and
    use it directly. My concern here is if the crawler is aggressive, it might block
    my Youtube account. And crawling isn''t very efficient for numerous videos to
    pull from.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**Youtube API**](https://developers.google.com/youtube/v3)**:** I finally
    landed on this solution. It is efficient and provides some basic statistics on
    videos: number of views and number of likes. We can further use this information
    to build our data analysis project.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Loading Youtube Data into R Dataframe
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Get Youtube API Key To Pull Data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Youtube API critical grants you permission to pull data from Youtube. You first
    would need to go to [https://console.cloud.google.com/apis](https://console.cloud.google.com/apis),
    then "create credentials" with the API key. The default key isn't restricted;
    you can limit the API key used only for Youtube.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9495bec8c70c95026127c1b048365db9.png)'
  prefs: []
  type: TYPE_IMG
- en: Google Cloud Create Credentials | Image By Author
  prefs: []
  type: TYPE_NORMAL
- en: Get Youtube Channel Playlist in R
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once you have the API key, refer to [Youtube Data API](https://developers.google.com/youtube/v3/docs)
    for more reference on the potential data it supports. To examine the API in a
    queryable stage, we can use tools like [Postman](https://www.postman.com/) or
    directly copy the full URL.
  prefs: []
  type: TYPE_NORMAL
- en: For example, we'd like to pull the channel information for Cocomelon; somehow,
    I didn't find its channel id by inspecting its URL, but I found it through some
    google search.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Now we can use the channel id to construct the GET method and fill the API
    key into the key field:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: From the returned JSON, the most crucial piece of information is the playlist
    information, which tells us further about all the videos.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: With the new adoption of pagination and the maximum number of items on one page
    being 50, calling `playlistItems` will take time to reach the final list. We'd
    need to use the current token to retrieve the next page until no next one is found.
    We can put everything together in R.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '`all_videos` should give us all the fields for the video. All we care about
    at this stage is the videoId so we can fetch detailed information on each video.'
  prefs: []
  type: TYPE_NORMAL
- en: Iterate the Video List and Fetch Data For Each Video In R
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once all the videos are stored in a vector, we can replicate a similar process
    as we did for the playlist. It will be much easier this time since we don't have
    to handle the pagination.
  prefs: []
  type: TYPE_NORMAL
- en: At this stage, we'd care more about the data we will eventually pull from the
    video API call. I chose the ones for our later data analysis and visualization.
    To save time in pulling this data again, it's better to persist the data into
    a CSV file, so we don't have to run the API call multiple times.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Explore the Cocomelon Youtube Video Data in R
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The data is prepared for our next stage to explore the Cocomelon Youtube video.
    Now it's time to perform some cleanup and create visualizations to show findings.
  prefs: []
  type: TYPE_NORMAL
- en: The default object data type doesn't work well with the later sorting, so we'd
    need to convert some objects to float or date types.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: What are the top 5 most viewed Cocomelon videos?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This part is straightforward. We'd need to select the fields we are interested
    in, then sort the videos in descending order by the field. `viewCount` .
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: For you have watched Cocomelon videos before, it's not surprising to see the
    result that "Bath Song," "Wheels on the Bus," and "Baa Baa Black Sheep" rank in
    the top 3\. It matches the Cocomelon `popular` tab on Youtube. Also, the "Bath
    Song" is played 20%+ more times than the second video — "Wheels on the Bus." I
    can see that many toddlers are struggling to take a bath, and having kids watch
    this video could give them an idea of how to take a bath and comfort them to calm
    them down.
  prefs: []
  type: TYPE_NORMAL
- en: 'We also create a bar chart with the top 5 videos:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/32ddab91c08f762178ed718fb2db98d1.png)'
  prefs: []
  type: TYPE_IMG
- en: The Top 5 most viewed Cocomelon videos | Image By Author
  prefs: []
  type: TYPE_NORMAL
- en: What's the correlation between views and likes?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The number of views and likes are correlated: Is a video more likely to get
    a thumb up (like) with more views?'
  prefs: []
  type: TYPE_NORMAL
- en: We can use the data to prove it further. First, normalize the `viewCount` and
    `likeCount` to fit better for the visualization. Secondly, we also compute the
    days since the video was uploaded to get when the popular videos are created.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/45cce83e09a89d417228e6b0aeb7bcb9.png)'
  prefs: []
  type: TYPE_IMG
- en: Cocomelon videos correlation between views and likes | Image By Author
  prefs: []
  type: TYPE_NORMAL
- en: 'The correlation coefficient is 0.98 very highly correlated: with more views
    on a video, it is likely to get more thumbs up. It''s also fascinating that solely
    six videos have over 2B+ views: parents and kids enjoy those six videos and potentially
    watch them many times.'
  prefs: []
  type: TYPE_NORMAL
- en: We can further plot the popular videos and find out that the most popular videos
    aged 1500–2000 days showed those videos were created around 2018 or 2019.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3a3b275328713424dbbf38db57cfb5b6.png)'
  prefs: []
  type: TYPE_IMG
- en: Number of days since published by views | Image By Author
  prefs: []
  type: TYPE_NORMAL
- en: How to Check the New Trending Cocomelon Video?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The popular video is easy to retrieve. However, popular videos created 4,5 years
    ago can still be trending due to many daily videos.
  prefs: []
  type: TYPE_NORMAL
- en: How about finding new Cocomelon videos with views? Since we can only pull the
    number of views from the Youtube API for the current state, we'd need to store
    the data temporarily by pulling data from the API with some days in between.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/ef187866424dc20d0b320968f66884f8.png)'
  prefs: []
  type: TYPE_IMG
- en: New Trending Cocomelon Video | Image By Author
  prefs: []
  type: TYPE_NORMAL
- en: The top trending video is 🔴 CoComelon Songs Live 24/7\. This video shows that
    parents can keep the kids with videos automatically rotating without switching
    videos explicitly. The remaining videos also showed potential good single songs
    that are good recommendations.
  prefs: []
  type: TYPE_NORMAL
- en: Final Thoughts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are many videos to watch on Youtube for kids. Cocomelon has many videos,
    and I want to show my kid the good ones with the restricted time he is allowed
    to watch daily. Finding those trending videos is a fascinating exploration for
    data professionals.
  prefs: []
  type: TYPE_NORMAL
- en: I hope my post is helpful to you. As the next step, I will continue my journey
    in R and use Shiny to build an interactive application with users.
  prefs: []
  type: TYPE_NORMAL
- en: 'I hope this story is helpful to you. This article is **part of a series** of
    my engineering & data science stories that currently consist of the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Chengzhi Zhao](../Images/51b8d26809e870b4733e4e5b6d982a9f.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Chengzhi Zhao](https://chengzhizhao.medium.com/?source=post_page-----833d6b2d9267--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: Data Engineering & Data Science Stories
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[View list](https://chengzhizhao.medium.com/list/data-engineering-data-science-stories-ddab37f718e7?source=post_page-----833d6b2d9267--------------------------------)53
    stories![](../Images/8b5085966553259eef85cc643e6907fa.png)![](../Images/9dcdca1fc00a5694849b2c6f36f038d4.png)![](../Images/2a6b2af56aa4d87fa1c30407e49c78f7.png)'
  prefs: []
  type: TYPE_NORMAL
- en: You can also [**subscribe to my new articles**](https://chengzhizhao.medium.com/subscribe)
    or become a [**referred Medium member**](https://chengzhizhao.medium.com/membership)with
    unlimited access to all the stories on Medium.
  prefs: []
  type: TYPE_NORMAL
- en: In case of questions/comments, **do not hesitate to write in the comments**
    of this story or **reach me directly** through [Linkedin](https://www.linkedin.com/in/chengzhizhao/)
    or [Twitter](https://twitter.com/ChengzhiZhao).
  prefs: []
  type: TYPE_NORMAL
