- en: Creating a Transparent Data Environment with Data Lineage
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/creating-a-transparent-data-environment-with-data-lineage-12e449597f6](https://towardsdatascience.com/creating-a-transparent-data-environment-with-data-lineage-12e449597f6)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The benefits of column-level lineage across your stack
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://madison-schott.medium.com/?source=post_page-----12e449597f6--------------------------------)[![Madison
    Schott](../Images/0b82d0dd48629641abb439cef23ebe04.png)](https://madison-schott.medium.com/?source=post_page-----12e449597f6--------------------------------)[](https://towardsdatascience.com/?source=post_page-----12e449597f6--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----12e449597f6--------------------------------)
    [Madison Schott](https://madison-schott.medium.com/?source=post_page-----12e449597f6--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----12e449597f6--------------------------------)
    ·5 min read·Apr 11, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/36bd79f779c717a98d9e4ec2b4b15c40.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
- en: Photo by [Bozhin Karaivanov](https://unsplash.com/@bkaraivanov?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/s/photos/string?orientation=landscape&utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: When I’m writing data transformations, I often notice an inconsistency along
    the way. Perhaps a column in a data source doesn’t follow the naming convention
    I put in place, or a timestamp hasn’t been cast to the right data type. Instead
    of waiting to fix these issues further down the line, I make the changes as I
    see them.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: However, the next day, I notice that the production data pipeline is failing.
    A few of the downstream data models are broken because of that “simple” name change
    I made yesterday. Now, I need to scramble to change all the references to that
    column downstream in the failing data models.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: Unfortunately, this can be quite common if you don’t have a tool that shows
    you the flow of your data. You’re forced to be reactive, waiting until something
    breaks in order to know what changes are needed. Luckily, data lineage tools can
    help us avoid this situation and be proactive about dependencies.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: What is data lineage?
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Data lineage](https://www.y42.com/blog/data-lineage/?utm_source=medium&utm_medium=blog&utm_campaign=lineage_transparency_article)
    shows the pathway your data follows when moving through the pipeline. It highlights
    where it comes from, how it’s transformed, and what visualizations it’s included
    in.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: Data lineage is helpful for knowing which data sources are used in a particular
    model and if any other models are referenced in the process. You can use it to
    quickly spot dependencies. It builds transparency into your stack, a key quality
    when it comes to producing high-quality data.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: How to build transparency using data lineage
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Data lineage helps to build transparency across your business when used correctly.
    Here are the top three reasons I recommend using a data lineage tool.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: Data lineage shows exactly which data sources are being used in production models.
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Data lineage tools are perfect for showing you which data models depend on which
    data sources. [Column-level lineage tools](https://www.y42.com/product/catalog-lineage/?utm_source=medium&utm_medium=blog&utm_campaign=lineage_transparency_article)
    are even more powerful because they show you the exact columns upstream that generate
    columns in a downstream data model. This is especially helpful if columns have
    been renamed across different sources and models.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: Column-level lineage tools are particularly useful when data engineers make
    changes that affect the ingestion of source data. They can reference the lineage
    of downstream data models to see what schema changes will have a major impact
    across the business. This will then allow them to work with the analytics engineer
    to minimize downtime for business users.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: Analytics engineers can prioritize documentation and testing for the most important
    data sources and models. Without lineage tools, you are guessing on what will
    have the biggest impact. With them, you can focus on the data that is driving
    the most business decisions.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: Lineage tools can also be helpful for business teams because they allow them
    to see which data sources the data teams use most. I’ve seen a lot of outdated
    Google Sheets cluttering up data environments because nobody knows whether they
    are important or not. Being able to see the lineage of tables from source to insight
    will allow business users to weigh their importance while keeping their data assets
    clean and up to date.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: Data lineage allows you to see the models being used by analysts in dashboards
    and reports.
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Data lineage tools give you insight into which data sources and data models
    are being used to power key dashboards and reports used by the business. This
    will help analytics and data engineers get a better idea of the models being used
    every day to make key business decisions. When everyone is aware of the most critical
    data sources, things like schema changes, data type casting, and renaming can
    become more strategic. This helps everyone understand the full impact and potential
    downtime involved.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: When data and engineering teams understand how a data pipeline change impacts
    the business, they are more likely to communicate and be proactive about solutions.
    For example, if a data engineer changes a source schema without a data lineage
    tool, they may have no idea that it will break the marketing ROI dashboard. However,
    if the engineer has a lineage tool to see what depends on this source, they can
    notify business teams of the downtime.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: Open communication helps to build trust between data and business teams, which
    is essential for a data-driven organization. Better choices can be made when both
    teams trust each other. The business will have faith in the data stack and be
    able to easily verify the results it sees. What’s more, the data team can confidently
    make changes to the pipeline knowing they won’t break things, helping to drive
    the business ahead.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 开放的沟通有助于建立数据团队与业务团队之间的信任，这对于数据驱动的组织至关重要。当两个团队互相信任时，可以做出更好的决策。业务将对数据堆栈充满信心，并能够轻松验证所见的结果。此外，数据团队可以自信地对流水线进行更改，知道不会破坏任何东西，从而推动业务前进。
- en: Data lineage sheds light on data bottlenecks.
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据 lineage 揭示了数据瓶颈。
- en: Data lineage tools optimize your data pipelines by drawing attention to the
    bottlenecks that occur as data flows from its source to the final product. Instead
    of *wondering* why certain transformations are taking forever to run, or even
    why they are costing you so much money, you can see the exact flow of your data.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 数据 lineage 工具通过引起对数据从源头到最终产品的流动过程中的瓶颈的关注来优化你的数据流水线。你不再需要 *猜测* 某些转换为什么要花费如此长的时间，甚至为什么它们会耗费你这么多钱，你可以看到数据的确切流动情况。
- en: For example, you may notice that two data models are taking unusually long for
    the size of the data and the complexity of the query. You look at the lineage
    for these models and notice they reference the same source dataset. After looking
    into that source, you can immediately identify the issue.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你可能会注意到两个数据模型在数据量和查询复杂性面前耗时异常长。你查看这些模型的 lineage，发现它们引用了相同的源数据集。在查看该源数据后，你可以立即识别出问题所在。
- en: Lineage tools allow you to understand how dependencies between different pieces
    work and how you can improve them. Seeing how your data flows through different
    models enables you to easily identify areas where they can be optimized. This
    allows you to create a faster, cheaper, and more reliable data pipeline.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Lineage 工具允许你理解不同部分之间的依赖关系及其如何改进。查看你的数据如何流经不同的模型可以让你轻松识别可以优化的领域。这使你能够创建一个更快、更便宜且更可靠的数据流水线。
- en: Data lineage as a proactive tool
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据 lineage 作为一种主动工具
- en: When you update one of your source data models, you should always reference
    your data lineage tool first. Look to see what downstream data models are using
    that source. Which columns from that source are being used? This is where a [column-level
    lineage tool](https://www.y42.com/?utm_source=medium&utm_medium=blog&utm_campaign=lineage_transparency_article)
    comes in handy, like the one offered by [Y42](https://www.y42.com/?utm_source=medium&utm_medium=blog&utm_campaign=lineage_transparency_article).
    Once you understand how changes to your data sources impact downstream models
    and dashboards, you can feel confident in making them.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 当你更新其中一个源数据模型时，你应始终首先参考你的数据 lineage 工具。查看哪些下游数据模型正在使用该源。来自该源的哪些列正在被使用？这时，一个
    [列级 lineage 工具](https://www.y42.com/?utm_source=medium&utm_medium=blog&utm_campaign=lineage_transparency_article)
    就派上用场了，比如 [Y42](https://www.y42.com/?utm_source=medium&utm_medium=blog&utm_campaign=lineage_transparency_article)
    提供的工具。一旦你了解了数据源的变化如何影响下游模型和仪表盘，你就可以自信地进行更改。
- en: When I rename a column in my data source, I always use a lineage tool to see
    how this change propagates downstream. Now, I never get any unexpected production
    pipeline failures the next time my models are scheduled to run.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 当我重命名数据源中的一列时，我总是使用一个 lineage 工具来查看这一变化如何向下游传播。现在，我再也不会遇到模型计划运行时出现意外的生产流水线失败。
- en: Data lineage tools are powerful because of the transparency they bring to your
    data stack, data team, and collaboration with business stakeholders. Making changes
    is no longer a guessing game, as you can measure the immediate impact beforehand.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 数据 lineage 工具之所以强大，是因为它们为你的数据堆栈、数据团队以及与业务利益相关者的协作带来了透明度。进行更改不再是一个猜测游戏，因为你可以提前测量其即时影响。
