- en: How to Implement Hierarchical Clustering for Direct Marketing Campaigns— with
    Python Code
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用Python代码实现层次聚类
- en: 原文：[https://towardsdatascience.com/how-to-implement-hierarchical-clustering-for-direct-marketing-campaigns-with-python-code-ef897f52d1c5](https://towardsdatascience.com/how-to-implement-hierarchical-clustering-for-direct-marketing-campaigns-with-python-code-ef897f52d1c5)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-implement-hierarchical-clustering-for-direct-marketing-campaigns-with-python-code-ef897f52d1c5](https://towardsdatascience.com/how-to-implement-hierarchical-clustering-for-direct-marketing-campaigns-with-python-code-ef897f52d1c5)
- en: Understand the ins and outs of hierarchical clustering, and how it applies to
    marketing campaign analysis in the banking industry.
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解层次聚类的方方面面，以及它如何应用于银行业的营销活动分析。
- en: '[](https://zoumanakeita.medium.com/?source=post_page-----ef897f52d1c5--------------------------------)[![Zoumana
    Keita](../Images/34a15c1d03687816dbdbc065f5719f80.png)](https://zoumanakeita.medium.com/?source=post_page-----ef897f52d1c5--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ef897f52d1c5--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ef897f52d1c5--------------------------------)
    [Zoumana Keita](https://zoumanakeita.medium.com/?source=post_page-----ef897f52d1c5--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://zoumanakeita.medium.com/?source=post_page-----ef897f52d1c5--------------------------------)[![Zoumana
    Keita](../Images/34a15c1d03687816dbdbc065f5719f80.png)](https://zoumanakeita.medium.com/?source=post_page-----ef897f52d1c5--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ef897f52d1c5--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ef897f52d1c5--------------------------------)
    [Zoumana Keita](https://zoumanakeita.medium.com/?source=post_page-----ef897f52d1c5--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ef897f52d1c5--------------------------------)
    ·11 min read·Aug 28, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ef897f52d1c5--------------------------------)
    ·阅读时间11分钟·2023年8月28日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/3282ab1d6eae7b1221f28b0d9665653d.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3282ab1d6eae7b1221f28b0d9665653d.png)'
- en: Photo by [Frederick Warren](https://unsplash.com/@carnations) on [Unsplash](https://unsplash.com/photos/lOg_fQLHo7s)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Frederick Warren](https://unsplash.com/@carnations) 提供，来源于 [Unsplash](https://unsplash.com/photos/lOg_fQLHo7s)
- en: Motivation
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动机
- en: Imagine being a Data Scientist at a leading financial institution, and your
    task is to assist your team in categorizing existing clients into distinct profiles:`low`
    , `average` , `medium` and `platinum` for loan approval.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下你是一家领先金融机构的数据科学家，你的任务是帮助团队将现有客户分类为不同的档案：`低`、`平均`、`中`和`白金`，以便进行贷款批准。
- en: 'But, here is the catch:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 但这里有个关键点：
- en: There is no such historical label attached to these customers, so how do you
    proceed with the creation of these categories?
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 由于这些客户没有历史标签，你该如何进行这些类别的创建？
- en: This is where clustering can help, an unsupervised machine-learning technique
    to group unlabeled data into similar categories.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是聚类能够提供帮助的地方，它是一种无监督的机器学习技术，用于将未标记的数据分组到类似的类别中。
- en: Multiple clustering techniques exist, but this tutorial will focus more on the
    `hierarchical clustering` approach.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 存在多种聚类技术，但本教程将更专注于`层次聚类`方法。
- en: It starts by providing an overview of what `hierarchical clustering` is, before
    walking you through a step-by-step implementation in `Python` using the popular
    `Scipy` library.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 它首先提供了`层次聚类`的概述，然后带你一步步使用流行的`Scipy`库在`Python`中实现它。
- en: What is hierarchical clustering?
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是层次聚类？
- en: '`Hierarchical clustering` is a technique for grouping data into a tree of clusters
    called dendrograms, representing the hierarchical relationship between the underlying
    clusters.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`层次聚类` 是一种将数据分组为称为树状图的簇的技术，表示底层簇之间的层次关系。'
- en: 'The hierarchical clustering algorithm relies on distance measures to form clusters,
    and it typically involves the following main steps:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 层次聚类算法依赖于距离度量来形成簇，通常包括以下主要步骤：
- en: '![](../Images/d6e321eb7c440c1384628f5c89d3497b.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d6e321eb7c440c1384628f5c89d3497b.png)'
- en: Four main steps of the hierarchical clustering (Image by Author)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 层次聚类的四个主要步骤（图片作者提供）
- en: Computation of the distance matrix containing the distance between each pair
    of data points using a particular distance metric such as Euclidean distance,
    Manhattan distance, or cosine similarity
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算包含每对数据点之间距离的距离矩阵，使用如欧几里得距离、曼哈顿距离或余弦相似度等特定距离度量
- en: Merge the two clusters that are the closest in distance
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 合并两个距离最近的簇
- en: Update the distance matrix with regard to the new clusters
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新距离矩阵以考虑新簇。
- en: Repeat steps 1, 2, and 3 until all the clusters are merged together to create
    a single cluster
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重复步骤1、2和3，直到所有簇都合并在一起形成一个单一的簇。
- en: Some graphical illustrations of the hierarchical clustering
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 层次聚类的一些图形示例
- en: 'Before diving into the technical implementation, let’s have an understanding
    of two main hierarchical clustering approaches: `agglomerative` and `divisive`
    clustering.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入技术实现之前，让我们了解两种主要的层次聚类方法：`agglomerative` 和 `divisive` 聚类。
- en: '**#1\. Agglomerative clustering**'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**#1\. 聚合聚类**'
- en: Also known as a bottom-up approach, agglomerative clustering starts by considering
    each data point as an individual cluster. It then iteratively merges these clusters
    until only one remains.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 聚合聚类也称为自下而上的方法，它开始时将每个数据点视为一个独立的簇。然后，它反复合并这些簇，直到只剩下一个。
- en: 'Let’s consider the illustration below where:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑下面的示意图，其中：
- en: We begin by treating each animal as a unique cluster
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们开始时将每个动物视为一个独立的簇。
- en: 'Then based on the list of animals, three different clusters are formed according
    to their similarities: Eagles and Peacock categorized as `Birds` , Lions and bears
    as `Mammals` , Scorpion and Spiders as `3+ legs`'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后根据动物列表，根据它们的相似性形成三个不同的簇：鹰和孔雀被分类为 `Birds`，狮子和熊为 `Mammals`，蝎子和蜘蛛为 `3+ legs`。
- en: 'We continue the merging process to create the `Vertebrate` cluster by combining
    the two most similar clusters: `Birds` and `Mammals`'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们继续合并过程，通过将两个最相似的簇：`Birds` 和 `Mammals` 合并来创建 `Vertebrate` 簇。
- en: Lastly, the remaining two clusters, `Vertebrate` and `3+ legs`are merged to
    create a single `Animals` cluster.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，将剩下的两个簇 `Vertebrate` 和 `3+ legs` 合并成一个单一的 `Animals` 簇。
- en: '![](../Images/029c881105fbde19ccf0088559ef9b26.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/029c881105fbde19ccf0088559ef9b26.png)'
- en: Illustration of the agglomerative clustering (Image by Author)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 聚合聚类的示意图（图片由作者提供）
- en: '**#2\. Divisive clustering**'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**#2\. 划分聚类**'
- en: Divisive clustering on the other hand is top-down. It begins by considering
    all the data points as a unified cluster and then progressively splits them until
    each data point stands as a unique cluster.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，划分式聚类是自上而下的。它从将所有数据点视为一个统一的簇开始，然后逐渐将其拆分，直到每个数据点成为一个独立的簇。
- en: 'By observing the graphic of the divisive approach:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 通过观察划分方法的图形：
- en: We notice that the entire `Animal` dataset is considered a unified bloc
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们注意到整个 `Animal` 数据集被视为一个统一的块。
- en: 'Then, this block is split into two different clusters: `Vertebrate` and `3+
    legs`'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后，这个块被拆分成两个不同的簇：`Vertebrate` 和 `3+ legs`
- en: The division process is iteratively applied to the previously created clusters
    until each animal is distinguished as its own unique cluster
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 划分过程会反复应用于先前创建的簇，直到每个动物被区分为其自身的独特簇。
- en: '![](../Images/ca2bdae58ead8064830ae0555950cf0b.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ca2bdae58ead8064830ae0555950cf0b.png)'
- en: Illustration of the divisive clustering (Image by Author)
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 划分聚类的示意图（图片由作者提供）
- en: Choosing the right distance measure
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择正确的距离度量
- en: The choice of an appropriate distance measure is a critical step in clustering,
    and it depends on the specific problem at hand.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 选择合适的距离度量是聚类中的关键步骤，这取决于具体的问题。
- en: For instance, a group of students can be clustered according to their country
    of origin, gender, or previous academic background. While each of these criteria
    is valid for clustering, they convey a unique significance.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，一组学生可以根据他们的原籍国、性别或先前的学术背景进行聚类。虽然这些标准都是有效的聚类依据，但它们传达了独特的意义。
- en: The Euclidean distance is the most frequently used measure in many clustering
    software. However other distance measures like Manhattan, Canberra, Pearson correlation,
    and Minkowski distances also exist.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 欧几里得距离是许多聚类软件中最常用的度量。然而，还存在其他距离度量，如曼哈顿距离、堪培拉距离、皮尔逊相关性和闵可夫斯基距离。
- en: How to measure clusters before merging them
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何在合并簇之前测量它们
- en: Clustering might be considered a straightforward process of grouping data. But,
    it is more than that.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 聚类可能被认为是将数据分组的简单过程。但它不仅仅是这样。
- en: 'There are three main standard ways to measure the nearest pair of clusters
    before merging them: `(1) single linkage`, `(2) complete linkage`, and `(3) average
    linkage`. Let’s explore each one in more detail.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在合并簇之前，有三种主要的标准方法来测量最近的一对簇：`(1) 单链聚类`，`(2) 完全链聚类` 和 `(3) 平均链聚类`。让我们更详细地探讨每一种。
- en: '**#1\. Single linkage**'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**#1\. 单链聚类**'
- en: In the single linkage clustering, the distance between two given clusters `**C1**`
    and `**C2**` corresponds to the minimum distances between all pairs of items in
    the two clusters.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在单链接聚类中，两个给定簇 `**C1**` 和 `**C2**` 之间的距离对应于两个簇中所有项对之间的最小距离。
- en: '![](../Images/e33f6383a4c9cde530f4dc66bf1135b8.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e33f6383a4c9cde530f4dc66bf1135b8.png)'
- en: Distance formula for single linkage (Image by Author)
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 单链接的距离公式（图像来源：作者）
- en: Out of all the pairs of items from the two clusters, `**b**` and `**k**` have
    the minimum distance.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在两个簇中的所有项对中，`**b**` 和 `**k**` 具有最小距离。
- en: '![](../Images/21d98b7d4045e12a19f634ea858f1024.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/21d98b7d4045e12a19f634ea858f1024.png)'
- en: '*Single linkage illustration (Image by Author)*'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '*单链接示意图（图像来源：作者）*'
- en: '**#2\. Complete linkage**'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**#2\. 完整链接**'
- en: For the complete linkage clustering, the distance between two given clusters
    `**C1**` and `**C2**` is the maximum distance between all pairs of items in the
    two clusters.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 对于完整链接聚类，两个给定簇 `**C1**` 和 `**C2**` 之间的距离是两个簇中所有项对之间的最大距离。
- en: '![](../Images/034cbf779a83262f179f03e9ca6ec438.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/034cbf779a83262f179f03e9ca6ec438.png)'
- en: Distance formula for single linkage (Image by Author)
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 单链接的距离公式（图像来源：作者）
- en: Out of all the pairs of items from the two clusters, the ones highlighted in
    green (`**f**` and `**m**`) have the maximum distance.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在两个簇中的所有项对中，用绿色突出显示的项（`**f**` 和 `**m**`）具有最大距离。
- en: '![](../Images/8c4c45e3f50b77495dfe4e93857e9023.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8c4c45e3f50b77495dfe4e93857e9023.png)'
- en: '*Complete linkage illustration (Image by Author)*'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '*完整链接示意图（图像来源：作者）*'
- en: '**#3\. Average linkage**'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**#3\. 平均链接**'
- en: In the average linkage clustering, the distance between two given clusters `**C1**`
    and `**C2**` is computed using the average of all the distances between each pair
    of items in the two clusters.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在平均链接聚类中，两个给定簇 `**C1**` 和 `**C2**` 之间的距离是通过计算两个簇中每对项之间所有距离的平均值来得到的。
- en: '![](../Images/f330b8ff9697d4976f3bd94d241a2d44.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f330b8ff9697d4976f3bd94d241a2d44.png)'
- en: Distance formula for average linkage (Image by Author)
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 平均链接的距离公式（图像来源：作者）
- en: '![](../Images/c058c6dea29f61e257ed0c0bb594980b.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c058c6dea29f61e257ed0c0bb594980b.png)'
- en: '*Average linkage illustration (Image by Author)*'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '*平均链接示意图（图像来源：作者）*'
- en: '​From the above formula, the average distance can be computed as follows:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 从上述公式可以计算出平均距离如下：
- en: '![](../Images/96869318a79aec1b19cba846cfe567db.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/96869318a79aec1b19cba846cfe567db.png)'
- en: Computation of the distance for the average linkage (Image by Author)
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 平均链接的距离计算（图像来源：作者）
- en: Implementing Hierarchical Clustering in Python
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Python 中实现层次聚类
- en: Now you have an understanding of how hierarchical clustering works, let’s dive
    deep into the technical implementation using `Python`.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经理解了层次聚类的工作原理，让我们深入探讨使用 `Python` 的技术实现。
- en: We start by configuring the environment, understanding the data along with the
    relevant preprocessing tasks, and lastly applying the clustering.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先配置环境，了解数据及相关预处理任务，最后应用聚类。
- en: Configure the environment
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置环境
- en: '`[Python](https://www.python.org/downloads/)` is required and needs to be installed
    along with the following libraries:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '`[Python](https://www.python.org/downloads/)` 是必需的，并且需要与以下库一起安装：'
- en: '`Pandas` for loading the data frame'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Pandas` 用于加载数据框'
- en: '`Scikit-learn` for data normalization'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Scikit-learn` 用于数据归一化'
- en: '`Seaborn and Matplotlib` for data visualization'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Seaborn 和 Matplotlib` 用于数据可视化'
- en: '`Scipy` to apply the clustering'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Scipy` 用于应用聚类'
- en: 'All these libraries are installed using the `pip` command as follows from your
    notebook:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些库都通过以下 `pip` 命令从你的笔记本中安装：
- en: '[PRE0]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Instead of individually installing each library using the `!pip [library]` we
    use the `%%bash` statement instead so that the notebook cell is considered a shell
    command, which ignores the `!` hence facilitates the installation.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用 `%%bash` 语句来代替逐个安装每个库的 `!pip [library]`，使得笔记本单元被视为 shell 命令，从而忽略 `!`，便于安装。
- en: Understanding the data
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解数据
- en: We use a subset of the bank marketing campaigns (phone calls) data of a Portuguese
    banking institution.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了葡萄牙银行机构的银行营销活动（电话）的数据子集。
- en: This dataset is from [UCI](https://archive.ics.uci.edu/dataset/222/bank+marketing)
    and is licensed under a [Creative Commons Attribution 4.0 International](https://creativecommons.org/licenses/by/4.0/legalcode)
    (CC BY 4.0) license.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 该数据集来自 [UCI](https://archive.ics.uci.edu/dataset/222/bank+marketing)，并且根据 [知识共享署名
    4.0 国际](https://creativecommons.org/licenses/by/4.0/legalcode)（CC BY 4.0）许可证进行授权。
- en: Due to the unsupervised nature of this tutorial, we get rid of the target column
    `y` column specifying if the client subscribed to a deposit or not.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 由于本教程的无监督性质，我们去掉了目标列 `y`，该列指定客户是否订阅了定期存款。
- en: Using the `head` function only returns the first five entries, which does not
    provide enough information about the structure of the data.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `head` 函数仅返回前五条记录，这不足以提供有关数据结构的足够信息。
- en: '[PRE1]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/db9c933625656f134e39726a7d8c79ac.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/db9c933625656f134e39726a7d8c79ac.png)'
- en: '*The first five rows of the load data (Image by Author)*'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '*加载数据的前五行（作者提供的图像）*'
- en: 'However, if we use the `info` function, we can have more granular information
    about the dataset such as:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果我们使用 `info` 函数，我们可以获得有关数据集的更详细信息，例如：
- en: The total number of entries (4,521) and columns (17)
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 总条目数（4,521）和列数（17）
- en: 'The name of each column and its type. We can observe that there are two main
    types of columns: `int64` and `object`'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每列的名称及其类型。我们可以观察到主要有两种列类型：`int64` 和 `object`
- en: The total number of missing values in each column
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每列缺失值的总数
- en: '[PRE2]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Output:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '![](../Images/afb6cdf2e0c353909b4c9b9b84508124.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/afb6cdf2e0c353909b4c9b9b84508124.png)'
- en: '*Information about the data (Image by Author)*'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '*关于数据的信息（作者提供的图像）*'
- en: Preprocessing the data
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据预处理
- en: 'Data preprocessing is a major step in every data science task, and clustering
    is not an exception. The main tasks applied to this data include:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 数据预处理是每个数据科学任务中的主要步骤，聚类也不例外。对这些数据应用的主要任务包括：
- en: Filling missing values with appropriate information
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 填补缺失值的适当信息
- en: Normalizing the column values
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 规范化列值
- en: Finally, dropping irrelevant columns
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，删除不相关的列
- en: '**#1\. Dealing with missing values**'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '**#1\. 处理缺失值**'
- en: Missing values can significantly damage the overall quality of the analysis
    and multiple imputation techniques can be applied to efficiently tackle them.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 缺失值会严重影响分析的整体质量，可以应用多重插补技术来有效解决这些问题。
- en: The `percent_missing` reports the percentage of missing value in each column,
    and luckily, there is no missing value in the data.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '`percent_missing` 报告每一列中缺失值的百分比，幸运的是，数据中没有缺失值。'
- en: '[PRE3]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Output:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '![](../Images/d9dfec3912f70989d3fd142674190146.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d9dfec3912f70989d3fd142674190146.png)'
- en: '*Percentage of missing values in the data (Image by Author)*'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '*数据中缺失值的百分比（作者提供的图像）*'
- en: '**#2\. Drop irrelevant columns**'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '**#2\. 删除不相关的列**'
- en: Keeping the `object` columns in the dataset would require more processing tasks
    such as using the relevant encoding technics to encode categorical data into their
    numerical representation.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 保留数据集中 `object` 列需要更多处理任务，如使用相关编码技术将分类数据编码为其数值表示。
- en: Only `int64` (numerical) columns are used in the analysis for simplicity’s sake.
    With the `select_dtypes` function, we select the desired column type to preserve.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简化分析，仅使用 `int64`（数值型）列。使用 `select_dtypes` 函数，我们选择要保留的列类型。
- en: '[PRE4]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Output:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '![](../Images/bb03f127706563e06a274d3ece499adc.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bb03f127706563e06a274d3ece499adc.png)'
- en: '*New data without the unwanted columns (Image by Author)*'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '*去除不需要的列的新数据（作者提供的图像）*'
- en: '**#3\. Analyze outliers**'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '**#3\. 分析离群值**'
- en: A notable drawback of hierarchical clustering is its sensitivity to outliers,
    which can skew the distance calculations between data points or clusters.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 层次聚类的一个显著缺点是对离群值的敏感性，这可能会扭曲数据点或聚类之间的距离计算。
- en: A simple way to determine those outliers is to analyze the distribution of the
    data using a `boxplot` as illustrated below in the `show_boxplot` helper function
    which leverages the `Seaborn` built-in `boxplot` function.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 确定这些离群值的简单方法是分析数据的分布，使用 `boxplot` 如下所示的 `show_boxplot` 辅助函数，它利用了 `Seaborn` 内置的
    `boxplot` 函数。
- en: '[PRE5]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Output:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '![](../Images/31df9d8434d876b8998f4bff505d2bea.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/31df9d8434d876b8998f4bff505d2bea.png)'
- en: '*Boxplot of all the variables in the data (Image by Author)*'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '*数据中所有变量的箱形图（作者提供的图像）*'
- en: The `balance` attribute representing the clients’ average yearly balance is
    the only one having data points far away from the rest.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '`balance` 属性代表客户的年平均余额，是唯一一个与其他数据点相差较远的。'
- en: By using the interquartile range approach, we can remove all such points that
    lie outside the range defined by the quartiles `+/-1.5*IQR`, where `IQR` is the
    `InterQuartile Range`.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用四分位数范围方法，我们可以删除所有超出四分位数定义范围 `+/-1.5*IQR` 的点，其中 `IQR` 是 `四分位数范围`。
- en: The overall logic is implemented in the `remove_outliers` helper function.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 整体逻辑在 `remove_outliers` 辅助函数中实现。
- en: '[PRE7]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Then, we can apply the function to the data set, and compare the new boxplot
    to the one before removing the outliers.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以将该函数应用于数据集，并比较新箱型图与去除异常值前的箱型图。
- en: '[PRE8]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Output:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '![](../Images/70f2d6fa723355ee848c284f885ef4c5.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/70f2d6fa723355ee848c284f885ef4c5.png)'
- en: No more data points lie outside the interquartile range (Image by Author)
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 不再有数据点位于四分位数范围之外（作者提供的图片）
- en: '[PRE9]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: We ended up having a dataset of 4,393 rows and 7 columns, which means that the
    remaining 127 observations dropped from the data were outliers.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 我们最终得到了一个4,393行和7列的数据集，这意味着从数据中剔除的剩余127个观测值是异常值。
- en: '**#4\. Rescale the data**'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '**#4\. 重新缩放数据**'
- en: Given that hierarchical clustering uses Euclidean distance, which is sensitive
    to variables on different scales, it’s better to rescale all the variables prior
    to distance computing.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 由于层次聚类使用的欧几里得距离对不同尺度的变量敏感，因此在计算距离之前最好重新缩放所有变量。
- en: The `fit_transform` function from the `StandardScaler` class transforms the
    original data so that each column has a mean of zero and a standard deviation
    of one.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '`StandardScaler`类的`fit_transform`函数将原始数据转换，使每列具有零均值和单位标准差。'
- en: '[PRE10]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The shape of the data remains unchanged (4,393 rows and 7 columns) since the
    normalization does not affect the shape of the data.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 数据的形状保持不变（4,393行和7列），因为归一化不会影响数据的形状。
- en: Apply the hierarchical clustering algorithm
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用层次聚类算法
- en: We are all set to dive deep into the implementation of the clustering algorithm!
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经准备好深入探讨聚类算法的实现！
- en: At this stage, we can decide which linkage approach to adopt for the clustering
    of the `method` attribute of `linkage()` function.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 此阶段，我们可以决定采用哪种链接方法用于`linkage()`函数的`method`属性的聚类。
- en: Instead of focusing on only one method, let’s cover all three linkage techniques
    using the Euclidean distance.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 不仅仅关注一种方法，我们将使用欧几里得距离涵盖所有三种链接技术。
- en: '[PRE11]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: After computing all three clusterings, the respective dendrograms are visualized
    using the `dendogram` function from `scipy.cluster` module and the `pyplot` function
    from `matplotlib`.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 计算完所有三种聚类方法后，使用`scipy.cluster`模块中的`dendogram`函数和`matplotlib`中的`pyplot`函数可视化相应的树状图。
- en: 'Each dendrogram is organized as follows:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 每个树状图的组织方式如下：
- en: The `x-axis` represents the clusters in the data
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`x轴`代表数据中的聚类'
- en: The `y-axis` corresponds to the distance between those samples. The higher the
    line, the more dissimilar are those clusters
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`y轴`对应样本之间的距离。线条越高，聚类之间的差异越大'
- en: The appropriate number of clusters is obtained by drawing a horizontal line
    through that highest vertical line
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过在该最高垂直线处绘制一条水平线，可以获得适当的聚类数
- en: The number of intersections with the horizontal line corresponds to the number
    of clusters
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与水平线的交点数量对应于聚类数
- en: '[PRE12]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Output:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '![](../Images/61cffad592b6a5825b5560ac02038ab6.png)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/61cffad592b6a5825b5560ac02038ab6.png)'
- en: '*Dendrogram of the complete clustering approach (Image by Author)*'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '*完整聚类方法的树状图（作者提供的图片）*'
- en: '[PRE13]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Output:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '![](../Images/0cf8185d76703dda473b6b6539a4eb35.png)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0cf8185d76703dda473b6b6539a4eb35.png)'
- en: '*Dendrogram of the average clustering approach (Image by Author)*'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '*平均聚类方法的树状图（作者提供的图片）*'
- en: 'When running the `single clustering` we might face the `recursion limit` issue.
    This is tackled by using the `setrecursionlimit` function with a large enough
    value:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 当运行`单一聚类`时，我们可能会遇到`递归限制`问题。这可以通过使用`setrecursionlimit`函数并设置足够大的值来解决：
- en: '[PRE14]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Now we display the dendrogram:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们展示树状图：
- en: '[PRE15]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Output:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '![](../Images/213dd0f2e473460ae94de48665c56713.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/213dd0f2e473460ae94de48665c56713.png)'
- en: '*Dendrogram of the single clustering approach (Image by Author)*'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '*单一聚类方法的树状图（作者提供的图片）*'
- en: Determine the number of optimal clusters in the dendrograms
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 确定树状图中的最佳聚类数
- en: The optimal number of clusters can be obtained by identifying the highest vertical
    line that does not intersect with any other clusters (horizontal line). Such a
    line is found below with a red circle and green check mark.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 通过识别不与任何其他聚类（水平线）交叉的最高垂直线，可以获得最佳聚类数。这样的一条线在下面用红圈和绿勾标记。
- en: 'For complete linkage: there is no significant number of clusters generated'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于完整链接法：生成的聚类数没有显著的变化
- en: '![](../Images/145ed832d0138585ac979f80ab12393d.png)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/145ed832d0138585ac979f80ab12393d.png)'
- en: '*Complete linkage: The optimal number of clusters from the highest distance
    without intersection (Image by Author)*'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '*完整链接法：从最高距离而无交集的最佳聚类数（作者提供的图片）*'
- en: 'For the average linkage: the difference between the two horizontal orange lines
    is slightly more than one. We can consider two clusters instead.'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于平均链接法：两条水平橙线之间的差距稍微多于一个。因此，我们可以考虑两个簇。
- en: '![](../Images/4e8a50666bbedfea41365c83e549e923.png)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4e8a50666bbedfea41365c83e549e923.png)'
- en: '*Average linkage: The optimal number of clusters from the highest distance
    without intersection (Image by Author)*'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '*平均链接法：从没有交集的最大距离得到的最佳聚类数（作者提供的图像）*'
- en: 'For the single linkage: no clear number of cluster can be determined'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于单链接法：无法确定明确的簇数
- en: '![](../Images/0509cb687acdb3b1d8f47e5b6580541c.png)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0509cb687acdb3b1d8f47e5b6580541c.png)'
- en: '*Single linkage: The optimal number of clusters from the highest distance without
    intersection (Image by Author)*'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '*单链接法：从没有交集的最大距离得到的最佳聚类数（作者提供的图像）*'
- en: Based on the analysis above, the average linkage seems to provide the optimal
    number of clusters compared to the single and complete linkages which do not provide
    a clear understanding of the number of clusters.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 根据上述分析，平均链接法似乎比单链接法和完全链接法提供了最佳的聚类数，因为后两者没有提供清晰的聚类数理解。
- en: Now that we have found the optimal number of clusters let’s interpret these
    clusters in the context of the clients’ average yearly balance using the `cut_tree`
    function.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经找到了最佳的簇数，让我们使用`cut_tree`函数在客户的平均年余额的背景下解释这些簇。
- en: '[PRE16]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![](../Images/9c1d9ed75b591101fab3fd7a540b561a.png)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9c1d9ed75b591101fab3fd7a540b561a.png)'
- en: Boxplot of the two types of borrowers *(Image by Author)*
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 两种借款人的箱线图 *(作者提供的图像)*
- en: 'From the above `boxplot`, we can observe that:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 从上面的`boxplot`中，我们可以观察到：
- en: Clients from cluster 0 possess the highest average annual balance
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自簇0的客户拥有最高的平均年余额
- en: Borrowers from cluster 1 have a comparatively lower average annual balance
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自簇1的借款人平均年余额相对较低
- en: Conclusion
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Congratulations!!!🎉
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 祝贺你！！！🎉
- en: I hope this article provided enough tools to help you take your knowledge to
    the next level. The code is available on my [GitHub](https://github.com/keitazoumana/Medium-Articles-Notebooks/blob/main/Hierarchical_Clustering_Bank_Marketing.ipynb).
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望这篇文章提供了足够的工具，帮助你将知识提升到一个新水平。代码可以在我的 [GitHub](https://github.com/keitazoumana/Medium-Articles-Notebooks/blob/main/Hierarchical_Clustering_Bank_Marketing.ipynb)
    上找到。
- en: Also, If you enjoy reading my stories and wish to support my writing, consider
    becoming a Medium member. It’s $5 a month, giving you unlimited access to thousands
    of Python guides and Data science articles.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，如果你喜欢阅读我的文章并希望支持我的写作，可以考虑成为 Medium 的会员。每月仅需5美元，你可以无限访问数千个 Python 指南和数据科学文章。
- en: By signing up using [my link](https://zoumanakeita.medium.com/membership), I
    will earn a small commission at no extra cost to you.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用 [我的链接](https://zoumanakeita.medium.com/membership) 注册，我将获得一小笔佣金，而你不需要支付额外费用。
- en: '[](https://zoumanakeita.medium.com/membership?source=post_page-----ef897f52d1c5--------------------------------)
    [## Join Medium with my referral link - Zoumana Keita'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://zoumanakeita.medium.com/membership?source=post_page-----ef897f52d1c5--------------------------------)
    [## 通过我的推荐链接加入 Medium - Zoumana Keita'
- en: As a Medium member, a portion of your membership fee goes to writers you read,
    and you get full access to every story…
  id: totrans-195
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 作为 Medium 的会员，你的部分会员费用将直接支持你阅读的作者，并且你可以完全访问每一个故事…
- en: zoumanakeita.medium.com](https://zoumanakeita.medium.com/membership?source=post_page-----ef897f52d1c5--------------------------------)
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '[zoumanakeita.medium.com](https://zoumanakeita.medium.com/membership?source=post_page-----ef897f52d1c5--------------------------------)'
- en: Feel free to follow me on [YouTube](https://www.youtube.com/channel/UC9xKdy8cz6ZuJU5FTNtM_pQ),
    or say Hi on [LinkedIn](https://www.linkedin.com/in/zoumana-keita/). I am also
    open to a [1–1 discussion](https://topmate.io/zoumanakeita) if you need further
    information.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎关注我的 [YouTube](https://www.youtube.com/channel/UC9xKdy8cz6ZuJU5FTNtM_pQ)频道，或在
    [LinkedIn](https://www.linkedin.com/in/zoumana-keita/)上打个招呼。如果你需要更多信息，也可以进行 [1对1讨论](https://topmate.io/zoumanakeita)。
