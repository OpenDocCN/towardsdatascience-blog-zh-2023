- en: 'Jupyter Already Has a Perfect Text Editor: This is How You Can Configure It'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jupyter 已经有了完美的文本编辑器：这就是你可以配置它的方法
- en: 原文：[https://towardsdatascience.com/jupyter-already-has-a-perfect-text-editor-this-is-how-you-can-configure-it-4d3eb37878f1](https://towardsdatascience.com/jupyter-already-has-a-perfect-text-editor-this-is-how-you-can-configure-it-4d3eb37878f1)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/jupyter-already-has-a-perfect-text-editor-this-is-how-you-can-configure-it-4d3eb37878f1](https://towardsdatascience.com/jupyter-already-has-a-perfect-text-editor-this-is-how-you-can-configure-it-4d3eb37878f1)
- en: How to get a VS Code-like experience in Jupyter with a great text editor
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何在 Jupyter 中获得类似 VS Code 的体验，使用一个优秀的文本编辑器
- en: '[](https://dpoulopoulos.medium.com/?source=post_page-----4d3eb37878f1--------------------------------)[![Dimitris
    Poulopoulos](../Images/ce535a1679779f5a2ec8b024e6691e50.png)](https://dpoulopoulos.medium.com/?source=post_page-----4d3eb37878f1--------------------------------)[](https://towardsdatascience.com/?source=post_page-----4d3eb37878f1--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----4d3eb37878f1--------------------------------)
    [Dimitris Poulopoulos](https://dpoulopoulos.medium.com/?source=post_page-----4d3eb37878f1--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://dpoulopoulos.medium.com/?source=post_page-----4d3eb37878f1--------------------------------)[![Dimitris
    Poulopoulos](../Images/ce535a1679779f5a2ec8b024e6691e50.png)](https://dpoulopoulos.medium.com/?source=post_page-----4d3eb37878f1--------------------------------)[](https://towardsdatascience.com/?source=post_page-----4d3eb37878f1--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----4d3eb37878f1--------------------------------)
    [Dimitris Poulopoulos](https://dpoulopoulos.medium.com/?source=post_page-----4d3eb37878f1--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----4d3eb37878f1--------------------------------)
    ·7 min read·Mar 3, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----4d3eb37878f1--------------------------------)
    ·7分钟阅读·2023年3月3日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/c40ed0aa20061ca652dd94fb8205a3a4.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c40ed0aa20061ca652dd94fb8205a3a4.png)'
- en: Photo by [Douglas Lopes](https://unsplash.com/@douglasamarelo?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[Douglas Lopes](https://unsplash.com/@douglasamarelo?utm_source=medium&utm_medium=referral)
    在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral) 上的照片'
- en: 'This article is the second part of a series. Check out the full series: [Part
    I](/unlocking-the-potential-of-jupyterlab-discover-the-powerful-text-editor-you-never-knew-you-had-af18bf5bce3f),
    [Part III](/jupyter-already-has-a-perfect-text-editor-building-a-python-ide-20063044749b),
    [Part IV](/the-perfect-text-editor-for-jupyter-a-complete-python-ide-608dd466560b).'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这篇文章是系列文章的第二部分。查看完整系列： [第一部分](/unlocking-the-potential-of-jupyterlab-discover-the-powerful-text-editor-you-never-knew-you-had-af18bf5bce3f)，
    [第三部分](/jupyter-already-has-a-perfect-text-editor-building-a-python-ide-20063044749b)，
    [第四部分](/the-perfect-text-editor-for-jupyter-a-complete-python-ide-608dd466560b)。
- en: Our previous article stated that many engineers do not consider JupyterLab a
    complete IDE. One of the main reasons is that JupyterLab does not have a powerful
    text editor like VS Code or Sublime Text.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前的文章指出，许多工程师并不认为 JupyterLab 是一个完整的 IDE。一个主要原因是 JupyterLab 缺乏像 VS Code 或 Sublime
    Text 这样强大的文本编辑器。
- en: JupyterLab allows users to create and share documents that contain live code,
    equations, visualizations, and narrative text. It’s the perfect tool for this
    kind of interactive work. However, the truth is that its text editor is as primitive
    as Windows Notepad; you can write code, but the experience is far from ideal.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: JupyterLab 允许用户创建和共享包含实时代码、方程式、可视化和叙述文本的文档。这是进行这种互动工作的完美工具。然而，事实是它的文本编辑器原始得像
    Windows 记事本一样；你可以编写代码，但体验远非理想。
- en: Can we do something about this? We would love a Docker image that we can run
    anytime on any machine and have our workspace ready to go. It’s not easy to achieve
    this with VS Code, except if you’re willing to pay. But JupyterLab is free; it
    has a [vibrant community](https://youtu.be/9Q6sLbz37gk), and if we could take
    the best of both worlds, we would have built a free, powerful, and portable workspace.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们能对此做些什么吗？我们希望能有一个 Docker 镜像，可以在任何机器上随时运行并准备好工作区。用 VS Code 实现这一点并不容易，除非你愿意付费。但
    JupyterLab 是免费的；它拥有一个 [充满活力的社区](https://youtu.be/9Q6sLbz37gk)，如果我们能够结合两者的优点，就能打造一个免费的、强大的、便携的工作空间。
- en: Let’s take a step back and look at JupyterLab as a platform, not an IDE. JupyterLab
    has a terminal emulator. That means that you can do almost everything you can
    think of. With this thought, in our previous article, we started installing Neovim
    and configuring it to act and look like VS Code.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们退一步，把 JupyterLab 看作一个平台，而不是 IDE。JupyterLab 有一个终端模拟器。这意味着你可以做几乎所有你能想到的事情。基于这个想法，在我们之前的文章中，我们开始安装
    Neovim 并将其配置成像 VS Code 一样。
- en: '[](/unlocking-the-potential-of-jupyterlab-discover-the-powerful-text-editor-you-never-knew-you-had-af18bf5bce3f?source=post_page-----4d3eb37878f1--------------------------------)
    [## Unlocking the Potential of JupyterLab: Discover the Powerful Text Editor You
    Never Knew You Had'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/unlocking-the-potential-of-jupyterlab-discover-the-powerful-text-editor-you-never-knew-you-had-af18bf5bce3f?source=post_page-----4d3eb37878f1--------------------------------)
    [## 释放 JupyterLab 的潜力：发现你从未知道的强大文本编辑器'
- en: Unleash Your Coding Efficiency and Productivity in JupyterLab with a GreatText
    Editor
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 JupyterLab 中通过一个优秀的文本编辑器释放你的编码效率和生产力
- en: towardsdatascience.com](/unlocking-the-potential-of-jupyterlab-discover-the-powerful-text-editor-you-never-knew-you-had-af18bf5bce3f?source=post_page-----4d3eb37878f1--------------------------------)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/unlocking-the-potential-of-jupyterlab-discover-the-powerful-text-editor-you-never-knew-you-had-af18bf5bce3f?source=post_page-----4d3eb37878f1--------------------------------)
- en: We aim to create a JupyterLab image containing a powerful Notebook editor and
    a feature-packed Python IDE.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的目标是创建一个包含强大笔记本编辑器和功能丰富的 Python IDE 的 JupyterLab 镜像。
- en: '![](../Images/bf26f9b2d357744f69b3527f9800cfe0.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bf26f9b2d357744f69b3527f9800cfe0.png)'
- en: Image by Author
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图像
- en: Today, let’s start by configuring the core functionality and the looks of the
    editor.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，我们从配置编辑器的核心功能和外观开始。
- en: '[Learning Rate](https://www.dimpo.me/newsletter?utm_source=medium&utm_medium=article&utm_campaign=neovim-basic-settings-and-looks)
    is a newsletter for those who are curious about the world of ML and MLOps. If
    you want to learn more about topics like this subscribe [here](https://www.dimpo.me/newsletter?utm_source=medium&utm_medium=article&utm_campaign=neovim-basic-settings-and-looks).
    You’ll hear from me on the last Sunday of every month with updates and thoughts
    on the latest MLOps news and articles!'
  id: totrans-20
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[学习速递](https://www.dimpo.me/newsletter?utm_source=medium&utm_medium=article&utm_campaign=neovim-basic-settings-and-looks)
    是一个针对那些对 ML 和 MLOps 世界感兴趣的人的新闻通讯。如果你想了解更多类似的主题，请在[这里](https://www.dimpo.me/newsletter?utm_source=medium&utm_medium=article&utm_campaign=neovim-basic-settings-and-looks)订阅。你将会在每个月的最后一个星期天收到我的更新和对最新
    MLOps 新闻和文章的见解！'
- en: Core Configuration
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 核心配置
- en: 'Let’s start by setting the core settings of our editor. Inside your `home`
    directory, there is a hidden folder called `.config`. Go inside and create a new
    folder called `nvim`:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从设置编辑器的核心设置开始。在你的 `home` 目录下，有一个名为 `.config` 的隐藏文件夹。进入该文件夹并创建一个名为 `nvim` 的新文件夹：
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Next, create a new file inside the `nvim` folder called `init.vim`:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在 `nvim` 文件夹中创建一个名为 `init.vim` 的新文件：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '`init.vim` is the file you will use to configure the behavior and looks of
    Neovim.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '`init.vim` 是你将用来配置 Neovim 行为和外观的文件。'
- en: In the last article, I urged you to learn your Vim bindings by completing the
    built-in Vim Tutor tutorial. I’m assuming you’ve already done that; thus, we will
    use Neovim to edit any files as we advance. The only way to get used to it is
    to use it as much as possible, and believe me, once you get used to it, you will
    be amazed by how much faster you can do anything you want.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一篇文章中，我建议你通过完成内置的 Vim Tutor 教程来学习你的 Vim 绑定。我假设你已经完成了这个教程，因此我们将使用 Neovim 编辑任何文件。唯一习惯它的方式就是尽可能多地使用它，相信我，一旦你习惯了，你会惊讶于你可以更快地完成任何想做的事情。
- en: 'So, without further ado, let’s open and edit the file you created:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，废话不多说，让我们打开并编辑你创建的文件：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Our first settings will enable simple features like line numbers, text encoding,
    and syntax highlighting. Copy and paste the following lines in your `init.vim`
    file:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的第一个设置将启用简单的功能，如行号、文本编码和语法高亮。将以下行复制粘贴到你的 `init.vim` 文件中：
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Whenever you see a line starting with quotes, it’s a comment. You can save and
    exit the file using `:wq` in normal mode and open it again to observe the changes.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 每当你看到以引号开头的行时，那是一条注释。你可以在正常模式下使用 `:wq` 保存并退出文件，然后重新打开它以查看更改。
- en: 'Next, Vim and Neovim uses the `h j k l` keys for navigation. I don’t want to
    move my fingers from the standard position to navigate around a file. So, I like
    to remap them to the keys that my fingers already lay upon: `j k l ;`. To achieve
    this, add the following lines in `init.vim`:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，Vim和Neovim使用`h j k l`键进行导航。我不想移动手指来在文件中导航。因此，我喜欢将它们重新映射到手指已放置的位置：`j k l
    ;`。为此，请在`init.vim`中添加以下行：
- en: '[PRE4]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Finally, let’s tackle the Python-specific settings, like auto indenting and
    setting a line break at `79` characters. Copy the following lines in `init.vim`:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们处理Python特定的设置，比如自动缩进和在`79`个字符处设置换行。将以下行复制到`init.vim`中：
- en: '[PRE5]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Now that we completed these basic settings let’s handle the looks. After all,
    everyone wants to work in a beautiful environment.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们完成了这些基本设置，让我们处理外观问题。毕竟，每个人都希望在一个美丽的环境中工作。
- en: Make it Beautiful
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 让它变得美丽
- en: To make our editor look the way we want, we’ll dive into the world of plugins.
    Vim and Neovim have a vibrant community that releases and maintains thousands
    of plugins. These plugins change the behavior of every little detail in the editor.
    If you have an issue with Neovim, chances are that someone else has already bumped
    into it and released a plugin that makes things easier.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让我们的编辑器达到我们想要的外观，我们将深入探讨插件的世界。Vim和Neovim有一个充满活力的社区，发布和维护成千上万的插件。这些插件改变了编辑器中每个小细节的行为。如果你遇到Neovim的问题，很可能其他人已经遇到过并发布了一个让事情变得更简单的插件。
- en: Our first step is to install a plugin manager that will install, uninstall,
    and update the plugins. For this, I prefer using [vim-plug](https://github.com/junegunn/vim-plug).
    To install vim-plug, run the command for your platform specified in the [docs](https://github.com/junegunn/vim-plug#unix-linux).
    You’d want to use the one for Linux if you’re running inside the Docker image
    we started in our previous post.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的第一步是安装一个插件管理器，它将安装、卸载和更新插件。为此，我喜欢使用[vim-plug](https://github.com/junegunn/vim-plug)。要安装vim-plug，请运行[docs](https://github.com/junegunn/vim-plug#unix-linux)中指定的适用于你平台的命令。如果你在我们上一篇文章中启动的Docker镜像中运行，你会想使用适用于Linux的那个。
- en: 'Now that you have a plugin manager installing a Neovim plugin is trivial. So,
    to make our editor more beautiful, we’ll use four plugins:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你有了一个插件管理器，安装Neovim插件变得非常简单。因此，为了让我们的编辑器更美观，我们将使用四个插件：
- en: 'vim-airline: a lean & mean status/tabline for vim'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: vim-airline：一个精简而高效的vim状态栏/标签行
- en: 'vim-airline-themes: a collection of themes for vim-airline'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: vim-airline-themes：一个vim-airline的主题集合
- en: 'awesome-vim-color-schemes: a collection of awesome color schemes for Neo/vim'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: awesome-vim-color-schemes：Neo/vim的精彩配色方案集合
- en: 'vim-devicons: a collection of file-type icons for Neovim'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: vim-devicons：Neovim的文件类型图标集合
- en: 'To install these plugins, first, add the following lines in `init.vim`:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装这些插件，首先，在`init.vim`中添加以下行：
- en: '[PRE6]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Save and quit the file, then open it again and run the following Neovim command:
    `:PlugInstall`. A new pane will start, and your plugins will be installed:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 保存并退出文件，然后重新打开并运行以下Neovim命令：`:PlugInstall`。一个新面板将启动，你的插件将被安装：
- en: '![](../Images/4a0ec09635fa8b482aa3e2d5a4972bed.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4a0ec09635fa8b482aa3e2d5a4972bed.png)'
- en: Image by Author
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: 'Quite every window using the command `:qa` and open the file again. The changes
    should be immediately visible. Now, let’s fix some things. First, you’ll notice
    that the terminal does not display some icons correctly. This is because you need
    to install [Nerd Fonts](https://www.nerdfonts.com/) and use them in your terminal.
    I’ll install [source-code-pro](https://www.programmingfonts.org/#source-code-pro).
    First, create a `.fonts` directory under your `home`:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 关闭所有窗口，使用命令 `:qa`，然后重新打开文件。更改应该会立即可见。现在，让我们修复一些问题。首先，你会注意到终端没有正确显示某些图标。这是因为你需要安装[Nerd
    Fonts](https://www.nerdfonts.com/)并在终端中使用它们。我将安装[source-code-pro](https://www.programmingfonts.org/#source-code-pro)。首先，在你的`home`下创建一个`.fonts`目录：
- en: '[PRE7]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Fetch the source-code-pro Nerd Font:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 获取source-code-pro Nerd Font：
- en: '[PRE8]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Unzip it:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 解压它：
- en: '[PRE9]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Finally, run `fc-cache -fv` to manually rebuild the font cache. Then, go into
    your `settings > advanced settings editor` menu, locate the `terminal` entry in
    the left sidebar and change the “Font Family” option to “SauceCodePro Nerd Font
    Mono”. That’s it! Open the `init.vim` file again with Neovim, and the icons should
    be there:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，运行`fc-cache -fv`来手动重建字体缓存。然后，进入`settings > advanced settings editor`菜单，找到左侧边栏中的`terminal`条目，将“Font
    Family”选项更改为“SauceCodePro Nerd Font Mono”。就这样！再用Neovim打开`init.vim`文件，图标应该就会出现：
- en: '![](../Images/00cee70fb0caada478a44442d4e26013.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/00cee70fb0caada478a44442d4e26013.png)'
- en: Image by Author
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: 'However, some things still look quirky. Let’s fix them and set our central
    theme. I like `molokai`, so I will go with this. Add the following lines int your
    `init.vim`:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，有些东西仍然显得有些古怪。让我们修复这些问题，并确定我们的核心主题。我喜欢`molokai`，所以我会使用这个。在你的`init.vim`中添加以下行：
- en: '[PRE10]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Again, save and exit, open the file again, and everything should work. Congratulations,
    you have now set the foundations for making Neovim your perfect Python IDE inside
    JupyterLab.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 再次保存并退出，重新打开文件，一切应该都会正常工作。恭喜你，你现在已经为在 JupyterLab 中将 Neovim 设置为完美的 Python IDE
    打下了基础。
- en: Save your Work
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保存你的工作
- en: 'If you’re working in the Docker container we started in our previous article
    (which you should), I’ll leave you with a final tip. To save the work you’ve done
    so far in your own image, run the following command:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在使用我们在上一篇文章中启动的 Docker 容器（你应该这样做），我会给你一个最后的提示。要将你到目前为止所做的工作保存到你自己的镜像中，请运行以下命令：
- en: '[PRE11]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This will create a new layer on top of the currently running container’s image
    and package everything in a new image you can push to your DockerHub account.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建一个新的层，在当前运行的容器镜像之上，并将所有内容打包成一个你可以推送到 DockerHub 账户的新镜像。
- en: 'For example, for me, this command would be:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，对我来说，这个命令将是：
- en: '[PRE12]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: That means that you can pull `dpoulopoulos/jupyter:v0.0.1` and find everything
    we did here inside!
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着你可以拉取 `dpoulopoulos/jupyter:v0.0.1` 并在其中找到我们在这里做的所有内容！
- en: Next, we’ll dive into more advanced features, like how to add a file system
    explorer pane and a code navigation window. Till then, practice learning your
    Vim bindings!
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将深入探讨更多高级功能，比如如何添加文件系统浏览窗格和代码导航窗口。在此之前，练习你的 Vim 快捷键吧！
- en: About the Author
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于作者
- en: My name is [Dimitris Poulopoulos](https://www.dimpo.me/), and I’m a machine
    learning engineer working for [Arrikto](https://www.arrikto.com/). I have designed
    and implemented AI and software solutions for major clients such as the European
    Commission, Eurostat, IMF, the European Central Bank, OECD, and IKEA.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我的名字是 [Dimitris Poulopoulos](https://www.dimpo.me/)，我是一名为 [Arrikto](https://www.arrikto.com/)
    工作的机器学习工程师。我为包括欧洲委员会、Eurostat、国际货币基金组织、欧洲中央银行、经济合作与发展组织以及宜家在内的主要客户设计和实施了人工智能和软件解决方案。
- en: If you are interested in reading more posts about Machine Learning, Deep Learning,
    Data Science, and DataOps, follow me on [Medium](https://towardsdatascience.com/medium.com/@dpoulopoulos/follow),
    [LinkedIn](https://www.linkedin.com/in/dpoulopoulos/), or [@james2pl](https://twitter.com/james2pl)
    on Twitter.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对阅读更多关于机器学习、深度学习、数据科学和数据运维的文章感兴趣，可以在 [Medium](https://towardsdatascience.com/medium.com/@dpoulopoulos/follow)、[LinkedIn](https://www.linkedin.com/in/dpoulopoulos/)
    或者 Twitter 上关注我 [@james2pl](https://twitter.com/james2pl)。
- en: Opinions expressed are solely my own and do not express the views or opinions
    of my employer.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 所表达的意见仅代表我个人的观点，并不代表我雇主的观点或意见。
