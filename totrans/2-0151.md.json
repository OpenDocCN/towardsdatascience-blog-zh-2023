["```py\n# Example data\ndata = {'apples': 10, 'bananas': 5, 'oranges': 7}\n```", "```py\nimport matplotlib.pyplot as plt\nimport pandas as pd\n```", "```py\n# Bar chart\nplt.bar(data.keys(), data.values())\nplt.title('Fruit Sales')\nplt.xlabel('Fruit')\nplt.ylabel('Number of Sales')\nplt.show()\n```", "```py\n# Line chart\ndf = pd.DataFrame(data, index=[0])\ndf.plot.line()\nplt.title('Fruit Sales')\nplt.xlabel('Fruit')\nplt.ylabel('Number of Sales')\nplt.show()\n```", "```py\n# Scatter plot\nx = [1, 2, 3, 4, 5]\ny = [10, 5, 8, 3, 6]\nplt.scatter(x, y)\nplt.title('Data Points')\nplt.xlabel('X')\nplt.ylabel('Y')\nplt.show()\n```", "```py\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\ndata = {'apples': 10, 'bananas': 5, 'oranges': 7}\n\n# create a figure with two subplots\nfig, axs = plt.subplots(ncols=2, figsize=(10, 4))\n\n# plot the first chart on the left subplot\naxs[0].bar(data.keys(), data.values())\naxs[0].set_title('Fruit Sales')\naxs[0].set_xlabel('Fruit')\naxs[0].set_ylabel('Number of Sales')\n\n# Custom color palette\ncolors = ['#C5283D', '#E9724C', '#FFC857']\n# plot the second chart on the right subplot\naxs[1].bar(data.keys(), data.values(), color=colors)\naxs[1].set_title('Fruit Sales')\naxs[1].set_xlabel('Fruit')\naxs[1].set_ylabel('Number of Sales')\n\n# adjust the spacing between the subplots\nfig.tight_layout()\n\n# show the plot\nplt.show()\n```", "```py\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Generate some fake data\nmonths = np.arange(1, 7)\nsales_a = np.array([100, 120, 90, 110, 130, 95])\nsales_b = np.array([80, 90, 100, 110, 120, 130])\nsales_c = np.array([70, 80, 90, 100, 110, 120])\n\n# Create the chart\nfig, axs = plt.subplots(3, sharex=True, sharey=True)\naxs[0].plot(months, sales_a, color='red')\naxs[0].set_title('Product A')\naxs[1].plot(months, sales_b, color='green')\naxs[1].set_title('Product B')\naxs[2].plot(months, sales_c, color='blue')\naxs[2].set_title('Product C')\nfig.suptitle('Sales by Product')\nplt.show()\n```", "```py\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Generate some fake data\nmonths = np.arange(1, 7)\nsales_a = np.array([100, 120, 90, 110, 130, 95])\nsales_b = np.array([80, 90, 100, 110, 120, 130])\nsales_c = np.array([70, 80, 90, 100, 110, 120])\n\n# Create the chart\nplt.plot(months, sales_a, color='red', label='Product A')\nplt.plot(months, sales_b, color='green', label='Product B')\nplt.plot(months, sales_c, color='blue', label='Product C')\nplt.title('Sales by Product')\nplt.legend()\nplt.show()\n```", "```py\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\n# Example data\ndata = {'apples': 10, 'bananas': 5, 'oranges': 7}\n\n# First chart: bar chart with proportional representation and inconsistent y-axis\nplt.subplot(1, 2, 1)\nplt.bar(data.keys(), data.values())\nplt.ylim(0, 500)\nplt.title('Fruit Sales')\nplt.xlabel('Fruit')\nplt.ylabel('Quantity Sold')\n\n# Second chart: bar chart with proportional representation and consistent y-axis\nplt.subplot(1, 2, 2)\nplt.bar(data.keys(), data.values())\nplt.ylim(0, 12)\nplt.title('Fruit Sales')\nplt.xlabel('Fruit')\nplt.ylabel('Quantity Sold')\n\n# Adjust the spacing between the charts\nplt.subplots_adjust(wspace=0.3)\n\n# Display the charts\nplt.show()\n```", "```py\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\n# Example data\nyear = [2015, 2016, 2017, 2018, 2019, 2020]\nsales = [100, 150, 200, 180, 250, 300]\n\n# Line chart with a narrative\nplt.plot(year, sales)\nplt.title('Sales Growth')\nplt.xlabel('Year')\nplt.ylabel('Number of Sales')\nplt.text(2016.5, 160, 'First year of rapid growth')\nplt.text(2018.2, 195, 'Sales decline due to recession')\nplt.text(2019.7, 265, 'Sales pick up after the recession')\nplt.show()\n```", "```py\nimport plotly.graph_objs as go\nimport numpy as np\n\n# Generate random data\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Create a Plotly trace object\ntrace = go.Scatter(\n    x = x,\n    y = y,\n    mode = 'markers'\n)\n\n# Create a Plotly layout object\nlayout = go.Layout(\n    title = 'Interactive Scatter Plot',\n    xaxis = dict(title = 'X Axis'),\n    yaxis = dict(title = 'Y Axis'),\n    hovermode = 'closest'\n)\n\n# Create a Plotly figure object that combines the trace and layout\nfig = go.Figure(data=[trace], layout=layout)\n\n# Display the interactive plot in the Jupyter Notebook\nfig.show()\n```"]