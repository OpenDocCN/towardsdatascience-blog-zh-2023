- en: How to Create An Artistic Map Using R
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-to-create-an-artistic-map-using-r-2a4932a23d10](https://towardsdatascience.com/how-to-create-an-artistic-map-using-r-2a4932a23d10)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: OpenStreetMap + Data Visualization = Art
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@irfanalghani11?source=post_page-----2a4932a23d10--------------------------------)[![Irfan
    Alghani Khalid](../Images/6a5f58a353463a0c2c8f4192ca9509e6.png)](https://medium.com/@irfanalghani11?source=post_page-----2a4932a23d10--------------------------------)[](https://towardsdatascience.com/?source=post_page-----2a4932a23d10--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----2a4932a23d10--------------------------------)
    [Irfan Alghani Khalid](https://medium.com/@irfanalghani11?source=post_page-----2a4932a23d10--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----2a4932a23d10--------------------------------)
    ·5 min read·Jan 24, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/82ec4cdcad55ffba246435203b137111.png)'
  prefs: []
  type: TYPE_IMG
- en: The Map of Amsterdam. The map is created by the author.
  prefs: []
  type: TYPE_NORMAL
- en: TL;DR
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This article will show you how to create an artistic map using R. We’ll take
    data from OpenStreetMap and customize the visuals using the ggplot library.
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When you think about the map, the first thing that comes to your mind is it
    is just a piece of information. With that, we can navigate ourselves to the desired
    place.
  prefs: []
  type: TYPE_NORMAL
- en: As time goes on, the map can become an art by customizing its visuals without
    losing any insights about the location.
  prefs: []
  type: TYPE_NORMAL
- en: Before open data existed, building a map could take lots of time by doing surveys
    and creating the map itself.
  prefs: []
  type: TYPE_NORMAL
- en: But thankfully, using open data like OpenStreetMap and programming, we can create
    your own map based on our visual preferences. And if you like, you can sell the
    map art to the marketplace to gain additional income.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, I will show you how to create an artistic map using R. Without
    further ado, let’s get started!
  prefs: []
  type: TYPE_NORMAL
- en: Implementation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Load the libraries
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To build the map, we need several libraries. Those libraries are:'
  prefs: []
  type: TYPE_NORMAL
- en: osmdata to download and load the OpenStreetMap data.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tidyverse that provides functionalities for processing and visualizing the data.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sf library to convert the OSM data to the sf format
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In case you don’t have those libraries, you can download them first using these
    lines of code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'In case you get a timeout error, you can execute this code to extend the timeout:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'After you download those libraries, you can load the libraries using these
    lines of code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Load the data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As I’ve mentioned, we will use the OpenStreetMap data for getting spatial data
    like roads, buildings, rivers, and many more. We will use a library called osmdata.
    Now let’s retrieve the spatial data of the streets and the water body by using
    these lines of code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: As you see from the code above, I have put the spatial data into three different
    variables like streets, small streets, and rivers. The reason for dividing the
    variables is to ease the customize the visuals like the color, size, and visibility.
    You will understand the purpose after this.
  prefs: []
  type: TYPE_NORMAL
- en: Each variable has a similar workflow.
  prefs: []
  type: TYPE_NORMAL
- en: First, we call the getbb function to retrieve the bounding box of the desired
    location. In this case, we’ll retrieve the bounding box of Amsterdam.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Then, we initiate the Overpass API to query data from the specified bounding
    box by calling the opq function.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Next, we call the add_osm_feature to retrieve specific spatial data by specifying
    the corresponding key and values. There are lots of key-value pairs that exist.
    You can take a look at the OSM wiki page [**here**](https://wiki.openstreetmap.org/wiki/Map_features).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finally, you can convert the data to the sf format using the osmdata_sf function.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Build the map
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'After you load the data, now here comes the fun part. We will build the map
    using the ggplot libraries. First, let’s visualize the raw map by using these
    lines of code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Basically, we call the ggplot function to create the chart. Then, we visualize
    the spatial object using the geom_sf function. We apply that function for each
    variable because it has a different styling format. And here is the result from
    it:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1089823fbd5960b8e9120b5bd3f202f4.png)'
  prefs: []
  type: TYPE_IMG
- en: The picture is created by the author.
  prefs: []
  type: TYPE_NORMAL
- en: 'The map shows up! But it doesn’t look really well. What can we do now is crop
    the coordinates by adding the coord_sf function like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Here is the result:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f6481b1eb40ad6ef92d2a438227e1c34.png)'
  prefs: []
  type: TYPE_IMG
- en: The picture is created by the author.
  prefs: []
  type: TYPE_NORMAL
- en: 'Looks great! Finally, we can tweak the visuals by using the theme function.
    You can change any parameters based on your preferences. Here is the code for
    doing that:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'What we do from this code is remove the axis ticks and change the background
    color. And here is the result:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/82ec4cdcad55ffba246435203b137111.png)'
  prefs: []
  type: TYPE_IMG
- en: The picture is created by the author.
  prefs: []
  type: TYPE_NORMAL
- en: 'Nice! If you want to add a title and a frame, you can add the labs function
    to set your title. Also, don’t forget to tweak the theme function. Here is the
    code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'And here is the result:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/78006a4bf31bd55aa1c2f2b16e11280a.png)'
  prefs: []
  type: TYPE_IMG
- en: The picture is created by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Awesome! Lastly, if you want to save your plot, you can use the ggsave function
    in your preferred picture size.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Final Remarks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Well done! Now you’ve learned how to create an artistic map using R. I hope
    this article helps you learn more about data visualization, especially on geospatial
    data.
  prefs: []
  type: TYPE_NORMAL
- en: If you are interested in my article, you can follow me on Medium to get more
    articles related to data science and machine learning.
  prefs: []
  type: TYPE_NORMAL
- en: Thank you for reading my article!
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] [https://www.youtube.com/watch?v=TDVXff6i3kw&t=986s](https://www.youtube.com/watch?v=TDVXff6i3kw&t=986s)'
  prefs: []
  type: TYPE_NORMAL
- en: '[2] [https://cran.r-project.org/web/packages/osmdata/vignettes/osmdata.html](https://cran.r-project.org/web/packages/osmdata/vignettes/osmdata.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '[3] [https://wiki.openstreetmap.org/wiki/Map_features](https://wiki.openstreetmap.org/wiki/Map_features)'
  prefs: []
  type: TYPE_NORMAL
