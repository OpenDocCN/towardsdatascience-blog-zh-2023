["```py\n# Create random data\nrng = np.random.default_rng(1) # random number generator\ndata = rng.integers(10, 30, size=45)\nvalues, counts = np.unique(data, return_counts=True)\n\n# Set formatting parameters based on data\ndata_range = max(values)-min(values)\nwidth = data_range/2 if data_range<30 else 15\nheight = max(counts)/3 if data_range<50 else max(counts)/4\nmarker_size = 10 if data_range<50 else np.ceil(30/(data_range//10))\n\n# Create dot plot with appropriate format\nfig, ax = plt.subplots(figsize=(width, height))\nfor value, count in zip(values, counts):\n    ax.plot([value]*count, list(range(count)), marker='o', color='green',\n            ms=marker_size, linestyle='')\nfor spine in ['top', 'right', 'left']:\n    ax.spines[spine].set_visible(False)\nax.yaxis.set_visible(False)\nax.set_ylim(-1, max(counts))\nax.set_xticks(range(min(values), max(values)+1))\nax.tick_params(axis='x', length=0, pad=10)\nax.set_title('Dot Plot of Random Integer Values')\nplt.show()\n```", "```py\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nimport Stemgraphic\n\ndata_IQ1 = [111, 85, 83, 98, 107, 101, 100, 94, 101, 86,105, 122, 104, 106, 90, 123, 102, 107, 93, 109]\ndata_IQ2 = [146, 81, 91, 88, 98, 121, 83, 105, 97, 116, 93, 105, 108, 87, 104, 120, 109, 108, 107, 75, 93, 108, 104]\n\ndata_IQ = data_IQ1 + data_IQ2\ndf_IQ = pd.DataFrame(data_IQ, columns = [\"IQ\"])\n\nstemgraphic.stem_graphic(df_IQ['IQ'])\n\nprint('')\nprint(df_IQ.describe())\nprint(\"\")\n\nprint(df_IQ.agg({\n\n        \"IQ\": [\"count\", \"min\", \"max\", \"mean\", \"median\", \"skew\"],\n\n                })\n)\n```", "```py\nfig, ax = plt.subplots(figsize=(8, 6))\nax.hist(list_of_costs,  histtype ='bar', bins=20, color = 'c',\n        edgecolor='k', alpha=0.65, density = True)  #density=True show probability\n\nax.axvline(media, color='g', linestyle='dashed', linewidth=3)\nax.axvline(Sum_most_like, color='r', linestyle='dashed', linewidth=3)\nax.text(48,0.185, 'Mean - - -', color = 'green'  )\nax.text(48,0.155, 'Most Like - - -', color = 'red'  )\nax.set_title('Frequency Chart')\nax.set_ylabel('Probability')\nax.set_xlabel('Total Cost (MM*1000 U$S)')\nax.grid(axis = 'y')\n```", "```py\nfig, ax = plt.subplots(figsize=(8, 6))\nax.hist(list_cost_TTR,  histtype ='bar', bins=20, color = 'c',\n         edgecolor='k', alpha=0.65, density = False)  # density=False show counts\n\nax.axvline(media, color='g', linestyle='dashed', linewidth=3)\nax.axvline(median, color='r', linestyle='dashed', linewidth=3)\n\nax.set_title('Frequency Chart')\nax.set_ylabel('Counts')\nax.set_xlabel('U$S')\nax.grid(axis = 'y')\n```"]