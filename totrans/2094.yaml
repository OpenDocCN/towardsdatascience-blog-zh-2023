- en: Three Charts to Represent a Percentage You May Not Know
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/three-charts-to-represent-a-percentage-you-may-not-know-84cc7d5c62a3](https://towardsdatascience.com/three-charts-to-represent-a-percentage-you-may-not-know-84cc7d5c62a3)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Data Visualization, Python
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A ready-to-run tutorial in Python Altair to build charts to represent a percentage
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://alod83.medium.com/?source=post_page-----84cc7d5c62a3--------------------------------)[![Angelica
    Lo Duca](../Images/45aa2e2e504bb3af6d3b8009dc6f030e.png)](https://alod83.medium.com/?source=post_page-----84cc7d5c62a3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----84cc7d5c62a3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----84cc7d5c62a3--------------------------------)
    [Angelica Lo Duca](https://alod83.medium.com/?source=post_page-----84cc7d5c62a3--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----84cc7d5c62a3--------------------------------)
    ·5 min read·Aug 23, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d46d667b4e2bbd94a23ace4256ce9b2a.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Markus Winkler](https://unsplash.com/@markuswinkler?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Representing a percentage visually may engage the audience more and help them
    better understand the data. There are different ways to represent a percentage
    visually. The most straightforward strategy is a Big Number (BAN), as shown in
    the figure below.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f2864c0592164be216760afeb2a19b2b.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition to BAN, there are other ways to represent a percentage visually.
    In this article, we will focus on three strategies:'
  prefs: []
  type: TYPE_NORMAL
- en: Donut Chart
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 100% Stacked Chart
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Waffle Chart.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will use Python Altair to show how to build each strategy. The Vega-Altair
    library (Altair, for short) is a declarative Python library for statistical visualization
    based on the Vega and Vega-Lite visualization grammars. For more details on how
    to get started with Altair, you can read the official [Python Altair documentation](https://altair-viz.github.io/).
  prefs: []
  type: TYPE_NORMAL
- en: Setting Up the Scenario
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To show how each type of chart works, we will represent the following percentage:
    70%. To represent this value, you must use the following Pandas DataFrame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The DataFrame must contain two values: the percentage (70%) and its complementary
    value (30%). In addition, we set the colors associated with each slice: #81c01e
    (a type of green) for our value, and light gray for the other.'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s start representing this DataFrame through a donut chart.
  prefs: []
  type: TYPE_NORMAL
- en: Donut Chart
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A donut chart is a circular chart displaying data in a ring shape. It is similar
    to the pie chart but with a hole in the center, creating a visual representation
    of percentages of different categories.
  prefs: []
  type: TYPE_NORMAL
- en: 'Write the following code to build a basic donut chart in Altair:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Use `innerRadius` and `outerRadius` to set the internal and external size of
    the donut chart.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, add text inside the donut chart, as shown in the code below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Pass only the first line of your DataFrame to the chart and use `mark_text()`
    to draw a text in Altair. Also, set the font size, weight, and color.
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, combine the two charts, as shown in the following snippet of code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The following figure shows the resulting chart:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5955285e3b85f9492cb0f43c48efe574.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 100% Stacked Bar Chart
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A 100% stacked bar chart is a stacked bar chart with each bar stacked to a height
    of 100% to show the proportional composition of each category.
  prefs: []
  type: TYPE_NORMAL
- en: 'Write the following code to build a basic 100% stacked bar chart:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, add text inside the bar chart, as shown in the code below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, combine the two charts:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'The following figure shows the resulting chart:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e4afa3a957060e605d25a1113942973c.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Waffle Chart
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A waffle chart uses a grid of squares to display data, resembling a stack of
    waffles.
  prefs: []
  type: TYPE_NORMAL
- en: 'Before building a waffle chart, you must set up the 10x10 grid, as shown in
    the code below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, build your waffle charts using the Altair `mark_rect()` mark method:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Optionally, add text below the waffle chart:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, combine the two charts and save the final chart:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'The following figure shows the resulting chart:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1e14e6a3d2de54f6cb4c8adf1093054a.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Congratulations! You have just learned three different ways to represent a
    percentage in Python Altair:'
  prefs: []
  type: TYPE_NORMAL
- en: Donut Chart through the `mar_arc()` mark method
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 100% Stacked Bar Chart through the `mark_bar()` mark method
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Waffle Chart through the `mark_rect()` mark method.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thanks for reading this blog post! If you have any questions or comments, please
    leave a message or reach me directly on [LinkedIn](https://www.linkedin.com/in/angelicaloduca/).
    I’ll be glad to connect with you!
  prefs: []
  type: TYPE_NORMAL
- en: You can find the complete code for this example in the [GitHub repository](https://github.com/alod83/Data-Storytelling-with-Python-Altair-and-Generative-AI)
    of my book, [Data Storytelling with Generative AI using Python and Altair](https://www.manning.com/books/data-storytelling-with-generative-ai),
    under Chapter 6.
  prefs: []
  type: TYPE_NORMAL
- en: Related Articles
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[](/3-ways-to-build-a-geographical-map-in-python-altair-77c8e0781538?source=post_page-----84cc7d5c62a3--------------------------------)
    [## 3 Ways to Build a Geographical Map in Python Altair'
  prefs: []
  type: TYPE_NORMAL
- en: 'A data visualization tutorial on how to build three different maps in Python
    Altair: choropleth map, dot density map…'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/3-ways-to-build-a-geographical-map-in-python-altair-77c8e0781538?source=post_page-----84cc7d5c62a3--------------------------------)
    [](/3-ways-to-visualize-time-series-you-may-not-know-c8572952ea9c?source=post_page-----84cc7d5c62a3--------------------------------)
    [## 3 Ways to Visualize Time Series You May Not Know
  prefs: []
  type: TYPE_NORMAL
- en: A ready-to-run tutorial on how to visualize a time series in Python and Altair
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/3-ways-to-visualize-time-series-you-may-not-know-c8572952ea9c?source=post_page-----84cc7d5c62a3--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Python Altair Official Documentation](https://altair-viz.github.io/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A. Lo Duca [Data Storytelling with Generative AI using Python and Altair](https://www.manning.com/books/data-storytelling-with-generative-ai)
    Manning 2024
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A. Lo Duca Data Storytelling with Python Altair and Generative AI — [GitHub
    repository](https://github.com/alod83/Data-Storytelling-with-Python-Altair-and-Generative-AI)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Before you go…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To see Altair in action, watch the video tutorial.
  prefs: []
  type: TYPE_NORMAL
