["```py\nimport time\nimport requests\nimport pandas as pd\nimport plotly.express as px\n\nfrom IPython.display import clear_output\n\nISS_URL = 'https://api.wheretheiss.at/v1/satellites/25544'\nORBIT_TIME_SECS = 5_520  # Time required for ~1 complete orbit of ISS.\n```", "```py\ndef get_iss_telemetry(url):\n    \"\"\"Return DataFrame of current ISS telemetry from URL.\"\"\"\n    response = requests.get(url)\n    if response.status_code != 200:\n        raise Exception(f\"Failed to fetch ISS position from {url}. \\\n        Status code: {response.status_code}\")\n    data = response.json()\n    telemetry = pd.DataFrame(data, index=[0])\n    telemetry = telemetry.drop(['id', 'footprint', 'daynum', \n                              'solar_lat', 'solar_lon'], axis=1)\n    return telemetry\n```", "```py\n{'name': 'iss', 'id': 25544, 'latitude': 38.880080494467, 'longitude': -67.403143848187, 'altitude': 420.39039975637, 'velocity': 27592.859206857, 'visibility': 'daylight', 'footprint': 4509.4491061861, 'timestamp': 1679690648, 'daynum': 2460028.3639815, 'solar_lat': 1.5714095683049, 'solar_lon': 230.52865473588, 'units': 'kilometers'}\n```", "```py\ndef track_iss(url, num_orbits=2, interval=10):\n    \"\"\"\n    Plot current ISS location from URL and record and plot its track.\n\n    Arguments:\n       url = ISS telemetry URL -> string\n       num_orbits = Number of ISS orbits to plot -> integer\n       interval = Wait period (seconds) between calls to URL -> integer\n   \"\"\"\n\n    num_pulls = int(ORBIT_TIME_SECS * num_orbits / interval)\n    latitudes = []\n    longitudes = []\n\n    for _ in range(num_pulls):\n        df = get_iss_telemetry(url).round(2)\n        latitudes.append(df['latitude'].iloc[0])\n        longitudes.append(df['longitude'].iloc[0])        \n        clear_output(wait=True)\n\n        fig = px.scatter_geo(df, \n                             lat='latitude', \n                             lon='longitude', \n                             color='visibility',\n                             color_discrete_map = {'daylight': 'red',\n                                                   'visible': 'orange',\n                                                   'eclipsed': 'black'},\n                             hover_data=['timestamp', 'altitude', \n                                         'velocity', 'units'])\n        fig.add_trace(px.line_geo(lat=latitudes, lon=longitudes).data[0])\n        fig.update_traces(marker=dict(symbol='x-open', size=10), \n                          line_color='blue')\n        fig.update_layout(width=700, height=500, \n                          title='International Space Station Tracking')\n        fig.show()\n\n        time.sleep(interval)\n```", "```py\ntrack_iss(ISS_URL)\n```"]