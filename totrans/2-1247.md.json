["```py\npip install cookiecutter\n```", "```py\ncookiecutter https://github.com/khuyentran1401/data-science-template\n```", "```py\n.\n├── data            \n│   ├── final                  # data after training the model\n│   ├── processed              # data after processing\n│   ├── raw                    # raw data\n├── docs                       # documentation for your project\n├── .flake8                    # configuration for code formatter\n├── .gitignore                 # ignore files that cannot commit to Git\n├── Makefile                   # store commands to set up the environment\n├── models                     # store models\n├── notebooks                  # store notebooks\n├── .pre-commit-config.yaml    # configurations for pre-commit\n├── pyproject.toml             # dependencies for poetry\n├── README.md                  # describe your project\n├── src                        # store source code\n│   ├── __init__.py            # make src a Python module\n│   ├── config.py              # store configs \n│   ├── process.py             # process data before training model\n│   ├── run_notebook.py        # run notebook\n│   └── train_model.py         # train model\n└── tests                      # store tests\n    ├── __init__.py            # make tests a Python module \n    ├── test_process.py        # test functions for process.py\n    └── test_train_model.py    # test functions for train_model.py \n```", "```py\ninitialize_git:\n @echo \"Initializing git...\"\n git init\n\ninstall: \n @echo \"Installing...\"\n poetry install\n poetry run pre-commit install\n\nactivate:\n @echo \"Activating virtual environment\"\n poetry shell\n\ndownload_data:\n @echo \"Downloading data...\"\n wget https://gist.githubusercontent.com/khuyentran1401/a1abde0a7d27d31c7dd08f34a2c29d8f/raw/da2b0f2c9743e102b9dfa6cd75e94708d01640c9/Iris.csv -O data/raw/iris.csv\n\nsetup: initialize_git install download_data\n```", "```py\nmake setup\nmake activate\n```", "```py\ndata/processed/xy.pkl: data/raw src/process.py\n @echo \"Processing data...\"\n python src/process.py\n\nmodels/svc.pkl: data/processed/xy.pkl src/train_model.py\n @echo \"Training model...\"\n python src/train_model.py\n\npipeline: data/processed/xy.pkl models/svc.pk\n```", "```py\nmake models/svc.pkl\n```", "```py\nProcessing data...\npython src/process.py\n\nTraining model...\npython src/train_model.py\n```", "```py\n$ make models/svc.pkl \nmake: `models/svc.pkl' is up to date.\n```", "```py\nfrom prefect import flow \n\n@flow\ndef process(\n    location: Location = Location(),\n    config: ProcessConfig = ProcessConfig(),\n):\n    ...\n```", "```py\nprocess(config=ProcessConfig(test_size='a'))\n```", "```py\npydantic.error_wrappers.ValidationError: 1 validation error for ProcessConfig\ntest_size\n  value is not a valid float (type=type_error.float)\n```", "```py\nmake docs_view\n```", "```py\nSave the output to docs...\npdoc src --http localhost:8080\nStarting pdoc server on localhost:8080\npdoc server ready at http://localhost:8080\n```"]