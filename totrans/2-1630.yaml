- en: 'Pandas vs. Polars: A Syntax and Speed Comparison'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/pandas-vs-polars-a-syntax-and-speed-comparison-5aa54e27497e](https://towardsdatascience.com/pandas-vs-polars-a-syntax-and-speed-comparison-5aa54e27497e)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Understanding the major differences between the Python libraries Pandas and
    Polars for Data Science
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@iamleonie?source=post_page-----5aa54e27497e--------------------------------)[![Leonie
    Monigatti](../Images/4044b1685ada53a30160b03dc78f9626.png)](https://medium.com/@iamleonie?source=post_page-----5aa54e27497e--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5aa54e27497e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5aa54e27497e--------------------------------)
    [Leonie Monigatti](https://medium.com/@iamleonie?source=post_page-----5aa54e27497e--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----5aa54e27497e--------------------------------)
    ·7 min read·Jan 11, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/306c1a690661bae1c6ed3ad256c31693.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
- en: Image by the author
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: '*This article was revised based on the comments received from* [*Jakob Ullmann*](https://medium.com/u/614ba3d0ee10?source=post_page-----5aa54e27497e--------------------------------)*,*
    [*Dr. Robert Kübler*](https://medium.com/u/6d6b5fb431bf?source=post_page-----5aa54e27497e--------------------------------)*,
    and* [*Thiago Jaworski*](https://medium.com/u/7191497d8bc1?source=post_page-----5aa54e27497e--------------------------------)
    *on January 19th, 2023\. Thank you for your input!*'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: Pandas is an essential Python library for Data Science. But its biggest downside
    is that it can be slow for operations on large datasets. Polars is a Pandas alternative
    designed to process data faster.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: Polars is a Pandas alternative designed to process data faster.
  id: totrans-10
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This article briefly introduces the Polars Python package and compares it to
    the popular Data Science library Pandas regarding syntax and speed.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: · [What is Polars and Why is it Faster Than Pandas?](#454c)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: · [Benchmark Setup](#133c)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: · [Getting Started with Polars](#eb80)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: · [Comparison between Pandas and Polars](#e87a)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: ∘ [Reading Data](#0602)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: ∘ [Selecting and Filtering Data](#cfde)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: ∘ [Creating New Columns](#b6f5)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: ∘ [Grouping and Aggregation](#96ab)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: ∘ [Missing Data](#7524)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: · [Conclusion](#e4ef)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: You can find the related code for this article in my [Kaggle Notebook](https://www.kaggle.com/code/iamleonie/pandas-vs-polars).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: What is Polars and Why is it Faster Than Pandas?
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: According to the Polars User Guide [1], its aim “is to provide a lightning-fast
    DataFrame library that utilizes all available cores on your machine.”
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: In contrast to Polars, Pandas doesn’t natively parallelize the processing across
    the cores of your computer. Other tools like Dask are built upon libraries like
    Pandas to try to parallelize them. Instead, Polars is designed for parallelization
    and built from the ground up. Although it is written in Rust, Polars has a Python
    package, which makes it a potential alternative to Pandas.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Polars 相比，Pandas 并不会在你的计算机核心之间原生并行处理。像 Dask 这样的其他工具建立在 Pandas 之上，以尝试并行化它们。相反，Polars
    是从头开始设计用于并行化的。虽然它是用 Rust 编写的，但 Polars 也有一个 Python 包，这使它成为 Pandas 的潜在替代品。
- en: 'Polars has two different APIs: an eager API and a lazy API.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Polars 有两种不同的 API：急切 API 和延迟 API。
- en: The **eager** execution is similar to Pandas. That means the code is run directly,
    and its results are returned immediately.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**急切** 执行类似于 Pandas。这意味着代码直接运行，结果会立即返回。'
- en: On the other hand, **lazy** execution is not run until you need the results.
    Because it avoids running unnecessary code, lazy execution can be more efficient
    than eager execution.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，**延迟** 执行直到你需要结果时才会运行。因为它避免了运行不必要的代码，所以延迟执行可能比急切执行更高效。
- en: For lazy execution, you must begin your operation with the `.lazy()` method.
    Then you can write the code for whatever it is you want to do. In the end, you
    need to run the `.collect()` method to show the results.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 对于延迟执行，你必须以 `.lazy()` 方法开始操作。然后，你可以编写你想做的代码。最后，你需要运行 `.collect()` 方法来显示结果。
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If you don’t run the `.collect()` method, the operation is not executed right
    away. Instead, you will see the execution graph.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不运行 `.collect()` 方法，操作不会立即执行。相反，你会看到执行图。
- en: '![](../Images/ea4fd678fcbb79f699497cfee582862f.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ea4fd678fcbb79f699497cfee582862f.png)'
- en: Example execution graph of Polars lazy execution (Image by the author via [Kaggle](https://www.kaggle.com/code/iamleonie/pandas-vs-polars))
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Polars 延迟执行的示例执行图（图片由作者提供，来源于 [Kaggle](https://www.kaggle.com/code/iamleonie/pandas-vs-polars)）
- en: Benchmark Setup
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基准测试设置
- en: For benchmarking, we will borrow the benchmark setup from my previous article,
    which compared different file formats.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 对于基准测试，我们将借用我之前文章中的基准测试设置，该文章比较了不同的文件格式。
- en: '[](/how-to-handle-large-datasets-in-python-1f077a7e7ecf?source=post_page-----5aa54e27497e--------------------------------)
    [## How to Handle Large Datasets in Python'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/how-to-handle-large-datasets-in-python-1f077a7e7ecf?source=post_page-----5aa54e27497e--------------------------------)
    [## 如何处理 Python 中的大型数据集'
- en: A Comparison of CSV, Pickle, Parquet, Feather, and HDF5
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: CSV、Pickle、Parquet、Feather 和 HDF5 的比较
- en: towardsdatascience.com](/how-to-handle-large-datasets-in-python-1f077a7e7ecf?source=post_page-----5aa54e27497e--------------------------------)
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/how-to-handle-large-datasets-in-python-1f077a7e7ecf?source=post_page-----5aa54e27497e--------------------------------)'
- en: This benchmark setup uses a fictional dataset containing one column of each
    data type. To reduce timing noise for comparability, this fictional dataset contains
    4,000,000 rows and **is almost 1GB** **large**, as suggested in [2].
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这个基准测试设置使用了一个虚拟数据集，其中包含每种数据类型的一列。为了减少比较时的时间噪声，这个虚拟数据集包含 4,000,000 行，并且**几乎达到
    1GB** **大**，正如 [2] 中建议的那样。
- en: '![](../Images/5664ac3963066df8beb2e0b0ca2c6055.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5664ac3963066df8beb2e0b0ca2c6055.png)'
- en: Head of Fictional Dataset for Benchmarking (Image by the author via [Kaggle](https://www.kaggle.com/code/iamleonie/pandas-vs-polars))
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 基准测试虚拟数据集的开头（图片由作者提供，来源于 [Kaggle](https://www.kaggle.com/code/iamleonie/pandas-vs-polars)）
- en: In the following, we will time the execution with `%%timeit -n32 -r4`.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将使用 `%%timeit -n32 -r4` 来计时执行。
- en: Getting Started with Polars
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用 Polars
- en: To set up Polars, you simply `pip` install it.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置 Polars，你只需使用 `pip` 安装即可。
- en: '[PRE1]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: After that, you can import the Polars Python package just like you would do
    with Pandas.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你可以像使用 Pandas 一样导入 Polars Python 包。
- en: '[PRE2]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now, you are all set!
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你一切准备就绪！
- en: Comparison between Pandas and Polars
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Pandas 与 Polars 的比较
- en: 'At first glance, Pandas and Polars (eager API) are similar regarding syntax
    because of their shared main building blocks: Series and DataFrames.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 从表面上看，Pandas 和 Polars（急切 API）在语法方面很相似，因为它们共享主要的构建块：Series 和 DataFrames。
- en: 'Also, many expressions in Polars are similar to Pandas expressions:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，许多 Polars 中的表达式类似于 Pandas 表达式：
- en: '[PRE3]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: But, according to the Polars User Guide [1], “if your Polars code looks like
    it could be Pandas code, it might run, but it likely runs slower than it should.”
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 但根据 Polars 用户指南 [1]，“如果你的 Polars 代码看起来像 Pandas 代码，它可能会运行，但它可能比应该运行的更慢。”
- en: 'This section explores the main aspects of how the Polars package differs from
    Pandas regarding syntax and execution time:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 本节探讨 Polars 包在语法和执行时间上如何与 Pandas 区别：
- en: '[Reading Data](#0602)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Selecting and Filtering Data](#cfde)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Creating New Columns](#b6f5)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Grouping and Aggregation](#96ab)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Missing Data](#7524)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reading Data
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Reading a CSV file in Polars will feel familiar because you can use the `.read_csv()`
    method like in Pandas:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The resulting execution times to read the sample dataset in Pandas and Polars
    are shown below:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b3c9c7446f291f6710030cf8a23856ab.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
- en: Comparison of reading time between Pandas and Polars (Image by the author via
    [Kaggle](https://www.kaggle.com/code/iamleonie/pandas-vs-polars))
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: For our sample dataset, reading data takes about e**ight times longer with Pandas**
    than with Polars.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: Selecting and Filtering Data
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The first major difference between Pandas and Polars is that Polars does not
    use an index [1]. Instead, each row is indexed by its integer position in the
    DataFrame [1].
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: Although the same Pandas code will run with Polars, it is not the best practice.
    In Polars, you should use the `.select()` method to select data.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The resulting execution times to select data in Pandas and Polars are shown
    below:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/81971922bf18ab8ea66a7606c29c14ad.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
- en: Comparison of selecting time between Pandas and Polars (Image by the author
    via [Kaggle](https://www.kaggle.com/code/iamleonie/pandas-vs-polars))
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: For our sample dataset, selecting data takes about **15 times longer with Pandas**
    than with Polars (~70.3 µs).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: Below you can see a comparison of the Polars operation in the syntax suggested
    in the documentation (using `.select()`, left) and in the Pandas syntax (using
    `df[['col1', 'col2']]`, right). *Unexpectedly*, the Pandas syntax is much faster
    than the suggested `.select()` method.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/04e054fb99a3621d9468b43ba6c40d88.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
- en: Comparison of selecting time between Polars and Polars with Pandas Syntax (df[[‘col1’,
    ‘col2’]]) (Image by the author via [Kaggle](https://www.kaggle.com/code/iamleonie/pandas-vs-polars))
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: While you would use the `.query()` method in Pandas to filter data, you need
    to use the `.filter()` method in Polars.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The resulting execution times to filter data in Pandas and Polars are shown
    below:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/aafebbe76a0b02dfb71f50bd977d9175.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
- en: Comparison of filtering time between Pandas and Polars (Image by the author
    via [Kaggle](https://www.kaggle.com/code/iamleonie/pandas-vs-polars))
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: For our sample dataset, filtering a dataframe takes a **similar amount of time**
    in Pandas and Polars.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: In contrast to Pandas, Polars can run operations in `.select()` and `.filter()`
    in parallel.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: Creating New Columns
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Creating a new column in Polars also differs from what you might be used to
    in Pandas. In Polars, you need to use the `.with_column()` or the `.with_columns()`
    method depending on how many columns you want to create.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The resulting execution times to create a new column in Pandas and Polars are
    shown below:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2eaccbe447f794449f331d8fa8235dee.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
- en: Comparison of time to create a new column between Pandas and Polars (Image by
    the author via [Kaggle](https://www.kaggle.com/code/iamleonie/pandas-vs-polars))
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: For our sample dataset, creating a new column with **Polars takes roughly two
    times longer** than with Pandas.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: Grouping and Aggregation
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Grouping and aggregation are slightly different between Pandas and Polars syntax-wise,
    but both use the `.groupby()` and `.agg()` methods.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The resulting execution times to group and aggregate data in Pandas and Polars
    are shown below:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1c70789038957c9c456f95e44c73f9bb.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
- en: Comparison of aggregation time between Pandas and Polars (Image by the author
    via [Kaggle](https://www.kaggle.com/code/iamleonie/pandas-vs-polars))
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: For our sample dataset, aggregating data takes about **two times longer with
    Pandas** than with Polars.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: Missing Data
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Another major difference between Pandas and Polars is that Pandas uses NaN values
    to indicate missing values, while Polars uses null [1].
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a61e607391ed5d47c31f4943aa7cd1a5.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
- en: How Pandas and Polars indicate missing values in DataFrames (Image by the author)
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: Thus, instead of the `.fillna()` method in Pandas, you should use the `.fill_null()`
    method in Polars.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Conclusion
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now, is Polars better than Pandas? Will Polars replace Pandas?
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: The main advantage of Polars over Pandas is its speed. If you need to do a lot
    of data processing on large datasets, you should definitely try Polars.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: The main advantage of Polars over Pandas is its speed.
  id: totrans-108
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: But as shown in this article, you would have to learn the new Polars syntax
    to switch from Pandas to Polars. Also, you have seen that the Polars code is usually
    a little longer than the Pandas code for the same operation. Last but not least,
    Polars doesn’t cover the full range of functionality that Pandas has, e.g., for
    data exploration.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: Polars code is usually a little longer than the Pandas code
  id: totrans-110
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: For further discussion, please refer to the comment section where more experienced
    Polars users have listed their insights.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: Enjoyed This Story?
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*If you liked this article, you might also enjoy my other Pandas articles.*'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: '![Leonie Monigatti](../Images/61f354281722566e5c755e2cf181514f.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
- en: '[Leonie Monigatti](https://medium.com/@iamleonie?source=post_page-----5aa54e27497e--------------------------------)'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: Pandas
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[View list](https://medium.com/@iamleonie/list/pandas-2ea742d4860f?source=post_page-----5aa54e27497e--------------------------------)3
    stories![Pandas vs. Polars](../Images/abee49a6a51bfac312ac746e10de373d.png)![SQL
    joins are commonly illustrated as Venn diagrams. This image shows two illustrated
    pandas as a Venn diagram.](../Images/880c08f85b6aac806209534791740fd0.png)![One
    unstyled panda and three styled pandas: one with various colors, one with a gradient
    background, one with a highlight.](../Images/39995ef2178a91c2d4ba467d694b57e9.png)'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: '[*Subscribe for free*](https://medium.com/subscribe/@iamleonie) *to get notified
    when I publish a new story.*'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/@iamleonie/subscribe?source=post_page-----5aa54e27497e--------------------------------)
    [## Get an email whenever Leonie Monigatti publishes.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@iamleonie/subscribe?source=post_page-----5aa54e27497e--------------------------------)
    [## 每当Leonie Monigatti发布新内容时，你将收到一封邮件。'
- en: Get an email whenever Leonie Monigatti publishes. By signing up, you will create
    a Medium account if you don’t already…
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 每当Leonie Monigatti发布新内容时，你将收到一封邮件。通过注册，你将创建一个Medium账户，如果你还没有的话…
- en: medium.com](https://medium.com/@iamleonie/subscribe?source=post_page-----5aa54e27497e--------------------------------)
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: medium.com](https://medium.com/@iamleonie/subscribe?source=post_page-----5aa54e27497e--------------------------------)
- en: '*Find me on* [*LinkedIn*](https://www.linkedin.com/in/804250ab/),[*Twitter*](https://twitter.com/helloiamleonie)*,
    and* [*Kaggle*](https://www.kaggle.com/iamleonie)*!*'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '*在我的* [*LinkedIn*](https://www.linkedin.com/in/804250ab/)、[*Twitter*](https://twitter.com/helloiamleonie)
    *和* [*Kaggle*](https://www.kaggle.com/iamleonie) *上找到我！*'
- en: References
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[1] Polars (2023): User Guide [https://pola-rs.github.io/polars-book/user-guide/](https://pola-rs.github.io/polars-book/user-guide/)
    (accessed 8\. January 2023)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] Polars (2023)：用户指南 [https://pola-rs.github.io/polars-book/user-guide/](https://pola-rs.github.io/polars-book/user-guide/)（访问日期：2023年1月8日）'
- en: '[2] “Stackoverflow”, “What are the differences between feather and parquet?”.
    stackoverflow.com. [https://stackoverflow.com/questions/48083405/what-are-the-differences-between-feather-and-parquet](https://stackoverflow.com/questions/48083405/what-are-the-differences-between-feather-and-parquet)
    (accessed July 25, 2022)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] “Stackoverflow”，“feather 和 parquet 之间有什么区别？” stackoverflow.com. [https://stackoverflow.com/questions/48083405/what-are-the-differences-between-feather-and-parquet](https://stackoverflow.com/questions/48083405/what-are-the-differences-between-feather-and-parquet)（访问日期：2022年7月25日）'
