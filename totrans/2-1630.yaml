- en: 'Pandas vs. Polars: A Syntax and Speed Comparison'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/pandas-vs-polars-a-syntax-and-speed-comparison-5aa54e27497e](https://towardsdatascience.com/pandas-vs-polars-a-syntax-and-speed-comparison-5aa54e27497e)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Understanding the major differences between the Python libraries Pandas and
    Polars for Data Science
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@iamleonie?source=post_page-----5aa54e27497e--------------------------------)[![Leonie
    Monigatti](../Images/4044b1685ada53a30160b03dc78f9626.png)](https://medium.com/@iamleonie?source=post_page-----5aa54e27497e--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5aa54e27497e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5aa54e27497e--------------------------------)
    [Leonie Monigatti](https://medium.com/@iamleonie?source=post_page-----5aa54e27497e--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----5aa54e27497e--------------------------------)
    ·7 min read·Jan 11, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/306c1a690661bae1c6ed3ad256c31693.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by the author
  prefs: []
  type: TYPE_NORMAL
- en: '*This article was revised based on the comments received from* [*Jakob Ullmann*](https://medium.com/u/614ba3d0ee10?source=post_page-----5aa54e27497e--------------------------------)*,*
    [*Dr. Robert Kübler*](https://medium.com/u/6d6b5fb431bf?source=post_page-----5aa54e27497e--------------------------------)*,
    and* [*Thiago Jaworski*](https://medium.com/u/7191497d8bc1?source=post_page-----5aa54e27497e--------------------------------)
    *on January 19th, 2023\. Thank you for your input!*'
  prefs: []
  type: TYPE_NORMAL
- en: Pandas is an essential Python library for Data Science. But its biggest downside
    is that it can be slow for operations on large datasets. Polars is a Pandas alternative
    designed to process data faster.
  prefs: []
  type: TYPE_NORMAL
- en: Polars is a Pandas alternative designed to process data faster.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This article briefly introduces the Polars Python package and compares it to
    the popular Data Science library Pandas regarding syntax and speed.
  prefs: []
  type: TYPE_NORMAL
- en: · [What is Polars and Why is it Faster Than Pandas?](#454c)
  prefs: []
  type: TYPE_NORMAL
- en: · [Benchmark Setup](#133c)
  prefs: []
  type: TYPE_NORMAL
- en: · [Getting Started with Polars](#eb80)
  prefs: []
  type: TYPE_NORMAL
- en: · [Comparison between Pandas and Polars](#e87a)
  prefs: []
  type: TYPE_NORMAL
- en: ∘ [Reading Data](#0602)
  prefs: []
  type: TYPE_NORMAL
- en: ∘ [Selecting and Filtering Data](#cfde)
  prefs: []
  type: TYPE_NORMAL
- en: ∘ [Creating New Columns](#b6f5)
  prefs: []
  type: TYPE_NORMAL
- en: ∘ [Grouping and Aggregation](#96ab)
  prefs: []
  type: TYPE_NORMAL
- en: ∘ [Missing Data](#7524)
  prefs: []
  type: TYPE_NORMAL
- en: · [Conclusion](#e4ef)
  prefs: []
  type: TYPE_NORMAL
- en: You can find the related code for this article in my [Kaggle Notebook](https://www.kaggle.com/code/iamleonie/pandas-vs-polars).
  prefs: []
  type: TYPE_NORMAL
- en: What is Polars and Why is it Faster Than Pandas?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: According to the Polars User Guide [1], its aim “is to provide a lightning-fast
    DataFrame library that utilizes all available cores on your machine.”
  prefs: []
  type: TYPE_NORMAL
- en: In contrast to Polars, Pandas doesn’t natively parallelize the processing across
    the cores of your computer. Other tools like Dask are built upon libraries like
    Pandas to try to parallelize them. Instead, Polars is designed for parallelization
    and built from the ground up. Although it is written in Rust, Polars has a Python
    package, which makes it a potential alternative to Pandas.
  prefs: []
  type: TYPE_NORMAL
- en: 'Polars has two different APIs: an eager API and a lazy API.'
  prefs: []
  type: TYPE_NORMAL
- en: The **eager** execution is similar to Pandas. That means the code is run directly,
    and its results are returned immediately.
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, **lazy** execution is not run until you need the results.
    Because it avoids running unnecessary code, lazy execution can be more efficient
    than eager execution.
  prefs: []
  type: TYPE_NORMAL
- en: For lazy execution, you must begin your operation with the `.lazy()` method.
    Then you can write the code for whatever it is you want to do. In the end, you
    need to run the `.collect()` method to show the results.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: If you don’t run the `.collect()` method, the operation is not executed right
    away. Instead, you will see the execution graph.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ea4fd678fcbb79f699497cfee582862f.png)'
  prefs: []
  type: TYPE_IMG
- en: Example execution graph of Polars lazy execution (Image by the author via [Kaggle](https://www.kaggle.com/code/iamleonie/pandas-vs-polars))
  prefs: []
  type: TYPE_NORMAL
- en: Benchmark Setup
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For benchmarking, we will borrow the benchmark setup from my previous article,
    which compared different file formats.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/how-to-handle-large-datasets-in-python-1f077a7e7ecf?source=post_page-----5aa54e27497e--------------------------------)
    [## How to Handle Large Datasets in Python'
  prefs: []
  type: TYPE_NORMAL
- en: A Comparison of CSV, Pickle, Parquet, Feather, and HDF5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/how-to-handle-large-datasets-in-python-1f077a7e7ecf?source=post_page-----5aa54e27497e--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: This benchmark setup uses a fictional dataset containing one column of each
    data type. To reduce timing noise for comparability, this fictional dataset contains
    4,000,000 rows and **is almost 1GB** **large**, as suggested in [2].
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5664ac3963066df8beb2e0b0ca2c6055.png)'
  prefs: []
  type: TYPE_IMG
- en: Head of Fictional Dataset for Benchmarking (Image by the author via [Kaggle](https://www.kaggle.com/code/iamleonie/pandas-vs-polars))
  prefs: []
  type: TYPE_NORMAL
- en: In the following, we will time the execution with `%%timeit -n32 -r4`.
  prefs: []
  type: TYPE_NORMAL
- en: Getting Started with Polars
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To set up Polars, you simply `pip` install it.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: After that, you can import the Polars Python package just like you would do
    with Pandas.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Now, you are all set!
  prefs: []
  type: TYPE_NORMAL
- en: Comparison between Pandas and Polars
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'At first glance, Pandas and Polars (eager API) are similar regarding syntax
    because of their shared main building blocks: Series and DataFrames.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Also, many expressions in Polars are similar to Pandas expressions:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: But, according to the Polars User Guide [1], “if your Polars code looks like
    it could be Pandas code, it might run, but it likely runs slower than it should.”
  prefs: []
  type: TYPE_NORMAL
- en: 'This section explores the main aspects of how the Polars package differs from
    Pandas regarding syntax and execution time:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Reading Data](#0602)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Selecting and Filtering Data](#cfde)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Creating New Columns](#b6f5)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Grouping and Aggregation](#96ab)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Missing Data](#7524)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reading Data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Reading a CSV file in Polars will feel familiar because you can use the `.read_csv()`
    method like in Pandas:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The resulting execution times to read the sample dataset in Pandas and Polars
    are shown below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b3c9c7446f291f6710030cf8a23856ab.png)'
  prefs: []
  type: TYPE_IMG
- en: Comparison of reading time between Pandas and Polars (Image by the author via
    [Kaggle](https://www.kaggle.com/code/iamleonie/pandas-vs-polars))
  prefs: []
  type: TYPE_NORMAL
- en: For our sample dataset, reading data takes about e**ight times longer with Pandas**
    than with Polars.
  prefs: []
  type: TYPE_NORMAL
- en: Selecting and Filtering Data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The first major difference between Pandas and Polars is that Polars does not
    use an index [1]. Instead, each row is indexed by its integer position in the
    DataFrame [1].
  prefs: []
  type: TYPE_NORMAL
- en: Although the same Pandas code will run with Polars, it is not the best practice.
    In Polars, you should use the `.select()` method to select data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The resulting execution times to select data in Pandas and Polars are shown
    below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/81971922bf18ab8ea66a7606c29c14ad.png)'
  prefs: []
  type: TYPE_IMG
- en: Comparison of selecting time between Pandas and Polars (Image by the author
    via [Kaggle](https://www.kaggle.com/code/iamleonie/pandas-vs-polars))
  prefs: []
  type: TYPE_NORMAL
- en: For our sample dataset, selecting data takes about **15 times longer with Pandas**
    than with Polars (~70.3 µs).
  prefs: []
  type: TYPE_NORMAL
- en: Below you can see a comparison of the Polars operation in the syntax suggested
    in the documentation (using `.select()`, left) and in the Pandas syntax (using
    `df[['col1', 'col2']]`, right). *Unexpectedly*, the Pandas syntax is much faster
    than the suggested `.select()` method.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/04e054fb99a3621d9468b43ba6c40d88.png)'
  prefs: []
  type: TYPE_IMG
- en: Comparison of selecting time between Polars and Polars with Pandas Syntax (df[[‘col1’,
    ‘col2’]]) (Image by the author via [Kaggle](https://www.kaggle.com/code/iamleonie/pandas-vs-polars))
  prefs: []
  type: TYPE_NORMAL
- en: While you would use the `.query()` method in Pandas to filter data, you need
    to use the `.filter()` method in Polars.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'The resulting execution times to filter data in Pandas and Polars are shown
    below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/aafebbe76a0b02dfb71f50bd977d9175.png)'
  prefs: []
  type: TYPE_IMG
- en: Comparison of filtering time between Pandas and Polars (Image by the author
    via [Kaggle](https://www.kaggle.com/code/iamleonie/pandas-vs-polars))
  prefs: []
  type: TYPE_NORMAL
- en: For our sample dataset, filtering a dataframe takes a **similar amount of time**
    in Pandas and Polars.
  prefs: []
  type: TYPE_NORMAL
- en: In contrast to Pandas, Polars can run operations in `.select()` and `.filter()`
    in parallel.
  prefs: []
  type: TYPE_NORMAL
- en: Creating New Columns
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Creating a new column in Polars also differs from what you might be used to
    in Pandas. In Polars, you need to use the `.with_column()` or the `.with_columns()`
    method depending on how many columns you want to create.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'The resulting execution times to create a new column in Pandas and Polars are
    shown below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2eaccbe447f794449f331d8fa8235dee.png)'
  prefs: []
  type: TYPE_IMG
- en: Comparison of time to create a new column between Pandas and Polars (Image by
    the author via [Kaggle](https://www.kaggle.com/code/iamleonie/pandas-vs-polars))
  prefs: []
  type: TYPE_NORMAL
- en: For our sample dataset, creating a new column with **Polars takes roughly two
    times longer** than with Pandas.
  prefs: []
  type: TYPE_NORMAL
- en: Grouping and Aggregation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Grouping and aggregation are slightly different between Pandas and Polars syntax-wise,
    but both use the `.groupby()` and `.agg()` methods.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'The resulting execution times to group and aggregate data in Pandas and Polars
    are shown below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1c70789038957c9c456f95e44c73f9bb.png)'
  prefs: []
  type: TYPE_IMG
- en: Comparison of aggregation time between Pandas and Polars (Image by the author
    via [Kaggle](https://www.kaggle.com/code/iamleonie/pandas-vs-polars))
  prefs: []
  type: TYPE_NORMAL
- en: For our sample dataset, aggregating data takes about **two times longer with
    Pandas** than with Polars.
  prefs: []
  type: TYPE_NORMAL
- en: Missing Data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Another major difference between Pandas and Polars is that Pandas uses NaN values
    to indicate missing values, while Polars uses null [1].
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a61e607391ed5d47c31f4943aa7cd1a5.png)'
  prefs: []
  type: TYPE_IMG
- en: How Pandas and Polars indicate missing values in DataFrames (Image by the author)
  prefs: []
  type: TYPE_NORMAL
- en: Thus, instead of the `.fillna()` method in Pandas, you should use the `.fill_null()`
    method in Polars.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now, is Polars better than Pandas? Will Polars replace Pandas?
  prefs: []
  type: TYPE_NORMAL
- en: The main advantage of Polars over Pandas is its speed. If you need to do a lot
    of data processing on large datasets, you should definitely try Polars.
  prefs: []
  type: TYPE_NORMAL
- en: The main advantage of Polars over Pandas is its speed.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: But as shown in this article, you would have to learn the new Polars syntax
    to switch from Pandas to Polars. Also, you have seen that the Polars code is usually
    a little longer than the Pandas code for the same operation. Last but not least,
    Polars doesn’t cover the full range of functionality that Pandas has, e.g., for
    data exploration.
  prefs: []
  type: TYPE_NORMAL
- en: Polars code is usually a little longer than the Pandas code
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: For further discussion, please refer to the comment section where more experienced
    Polars users have listed their insights.
  prefs: []
  type: TYPE_NORMAL
- en: Enjoyed This Story?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*If you liked this article, you might also enjoy my other Pandas articles.*'
  prefs: []
  type: TYPE_NORMAL
- en: '![Leonie Monigatti](../Images/61f354281722566e5c755e2cf181514f.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Leonie Monigatti](https://medium.com/@iamleonie?source=post_page-----5aa54e27497e--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: Pandas
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[View list](https://medium.com/@iamleonie/list/pandas-2ea742d4860f?source=post_page-----5aa54e27497e--------------------------------)3
    stories![Pandas vs. Polars](../Images/abee49a6a51bfac312ac746e10de373d.png)![SQL
    joins are commonly illustrated as Venn diagrams. This image shows two illustrated
    pandas as a Venn diagram.](../Images/880c08f85b6aac806209534791740fd0.png)![One
    unstyled panda and three styled pandas: one with various colors, one with a gradient
    background, one with a highlight.](../Images/39995ef2178a91c2d4ba467d694b57e9.png)'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Subscribe for free*](https://medium.com/subscribe/@iamleonie) *to get notified
    when I publish a new story.*'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/@iamleonie/subscribe?source=post_page-----5aa54e27497e--------------------------------)
    [## Get an email whenever Leonie Monigatti publishes.'
  prefs: []
  type: TYPE_NORMAL
- en: Get an email whenever Leonie Monigatti publishes. By signing up, you will create
    a Medium account if you don’t already…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: medium.com](https://medium.com/@iamleonie/subscribe?source=post_page-----5aa54e27497e--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: '*Find me on* [*LinkedIn*](https://www.linkedin.com/in/804250ab/),[*Twitter*](https://twitter.com/helloiamleonie)*,
    and* [*Kaggle*](https://www.kaggle.com/iamleonie)*!*'
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[1] Polars (2023): User Guide [https://pola-rs.github.io/polars-book/user-guide/](https://pola-rs.github.io/polars-book/user-guide/)
    (accessed 8\. January 2023)'
  prefs: []
  type: TYPE_NORMAL
- en: '[2] “Stackoverflow”, “What are the differences between feather and parquet?”.
    stackoverflow.com. [https://stackoverflow.com/questions/48083405/what-are-the-differences-between-feather-and-parquet](https://stackoverflow.com/questions/48083405/what-are-the-differences-between-feather-and-parquet)
    (accessed July 25, 2022)'
  prefs: []
  type: TYPE_NORMAL
