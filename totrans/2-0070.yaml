- en: '3D Geospatial Data Integration with Python: The Ultimate Guide'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python 进行 3D 地理空间数据集成：终极指南
- en: 原文：[https://towardsdatascience.com/3d-spatial-data-integration-with-python-7ef8ef14589a](https://towardsdatascience.com/3d-spatial-data-integration-with-python-7ef8ef14589a)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/3d-spatial-data-integration-with-python-7ef8ef14589a](https://towardsdatascience.com/3d-spatial-data-integration-with-python-7ef8ef14589a)
- en: 3D Python
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3D Python
- en: 'Tutorial to integrate geospatial data with a multi-modal Python workflow: combine
    3D point clouds, CityGML, voxels, vector + raster data'
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用多模式 Python 工作流整合地理空间数据的教程：结合 3D 点云、CityGML、体素、矢量 + 栅格数据
- en: '[](https://medium.com/@florentpoux?source=post_page-----7ef8ef14589a--------------------------------)[![Florent
    Poux, Ph.D.](../Images/74df1e559b2edefba71ffd0d1294a251.png)](https://medium.com/@florentpoux?source=post_page-----7ef8ef14589a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----7ef8ef14589a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----7ef8ef14589a--------------------------------)
    [Florent Poux, Ph.D.](https://medium.com/@florentpoux?source=post_page-----7ef8ef14589a--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@florentpoux?source=post_page-----7ef8ef14589a--------------------------------)[![Florent
    Poux, Ph.D.](../Images/74df1e559b2edefba71ffd0d1294a251.png)](https://medium.com/@florentpoux?source=post_page-----7ef8ef14589a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----7ef8ef14589a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----7ef8ef14589a--------------------------------)
    [Florent Poux, Ph.D.](https://medium.com/@florentpoux?source=post_page-----7ef8ef14589a--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----7ef8ef14589a--------------------------------)
    ·39 min read·Nov 7, 2023
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----7ef8ef14589a--------------------------------)
    ·阅读时间 39 分钟·2023年11月7日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: The pace of technological progress is just plain crazy nowadays. Even more so
    when looking at how vital 3D data is for geospatial analysis and digital twins.
    Being able to capture and analyze data in three dimensions means we can create
    precise representations of real-world objects and environments.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 现在的科技进步速度简直疯狂。尤其是当我们看到3D数据对地理空间分析和数字双胞胎的重要性时更是如此。能够以三维捕捉和分析数据意味着我们可以创建对现实世界对象和环境的精确表示。
- en: '![](../Images/b80083f9ff4c868cd2c309dbcd41590e.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b80083f9ff4c868cd2c309dbcd41590e.png)'
- en: 3D Spatial Data Integration goes through understanding the scope of 3D Data
    Capture. © F. Poux
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 3D 空间数据集成通过理解 3D 数据捕捉的范围来实现。© F. Poux
- en: '🦄**Mila**: *A picture is worth a thousand words. So what about Digital Twins?*'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 🦄**米拉**：*一图胜千言。那么数字双胞胎呢？*
- en: This is especially important for fields like urban planning, infrastructure
    management, and disaster response.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这对城市规划、基础设施管理和灾难响应等领域尤为重要。
- en: By incorporating 3D data, we can enhance our ability to make informed decisions
    by relying on precise and reliable data representations. Furthermore, the integration
    of this data into digital twins can produce remarkably lifelike replicas of real-world
    assets and systems, thereby increasing the efficiency of simulation and analysis.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 通过整合 3D 数据，我们可以通过依赖于精确和可靠的数据表示来提高做出明智决策的能力。此外，将这些数据整合到数字双胞胎中可以生成非常逼真的现实资产和系统的复制品，从而提高模拟和分析的效率。
- en: BUT (there is always a but), effective geospatial analysis and digital twin
    creation rely on efficiently integrating and visualizing different data formats.
    To achieve this, it’s essential to have a comprehensive understanding of the various
    data modalities and how they can be seamlessly integrated and visualized together.
    In data terms, we want to create a unified and comprehensive representation of
    an area with data overlap.How lucky are we, because this is precisely what we
    will unlock today!
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 但是（总是有“但是”），有效的地理空间分析和数字双胞胎创建依赖于高效整合和可视化不同的数据格式。为实现这一点，必须全面了解各种数据模式及其如何无缝集成和可视化。在数据方面，我们希望创建一个统一且全面的区域表示，以便数据能够重叠。我们真是太幸运了，因为这正是我们今天要解锁的内容！
- en: '![](../Images/40b5bf0cc5f52b18fbd5938292f0d6fc.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/40b5bf0cc5f52b18fbd5938292f0d6fc.png)'
- en: To constitute a Spatial Digital World, we must study 3D Data Integration. Many
    sources of information, such as vector, raster data, 3D point clouds, or 3D city
    models, can be combined to form a unified view of what happens on our planet.
    © F. Poux
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建一个空间数字世界，我们必须研究 3D 数据集成。许多信息来源，如矢量数据、栅格数据、3D 点云或 3D 城市模型，可以组合形成我们星球上发生事件的统一视图。©
    F. Poux
- en: In this hands-on guide, I provide a reference system-oriented workflow for 3D
    data integration with Python. So no need for expensive software or a large serialized
    pipeline of bricks without mortar! Just our Python friend and a carefully selected
    tiny range of robust modules and functions.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本动手指南中，我提供了一个面向系统的 3D 数据集成工作流参考，使用 Python。因此，你不需要昂贵的软件或大规模的砖块式流水线！只需我们的 Python
    朋友和精心挑选的一小组强大模块与函数。
- en: The ultimate goal of this initiative is that you have a comprehensive guide
    and companion that will follow you along your 3D data journey! The workflow is
    structured in seven distinctive phases, as shown below.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这个倡议的终极目标是，你将拥有一个全面的指南和伴侣，陪伴你完成 3D 数据之旅！工作流被结构化为七个不同的阶段，如下所示。
- en: '![](../Images/57473a23703dd40f51db1e9702411dd7.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/57473a23703dd40f51db1e9702411dd7.png)'
- en: The 3D Data Integration Workflow with Python. It is a Seven-Step Process to
    produce unified data-centric views. © [F. Poux](https://learngeodata.eu/)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Python 的 3D 数据集成工作流。这是一个七步过程，用于生成统一的数据中心视图。© [F. Poux](https://learngeodata.eu/)
- en: Each phase builds progressively to ensure that you can start from scratch or
    plug into your existing system modularly. Because it is exhaustively constructed,
    a table of contents will make it easier for you to go through!
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 每个阶段逐步构建，以确保你可以从头开始或模块化地插入到现有系统中。由于构建得非常全面，目录将使你更容易浏览！
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Whenever you are ready, let us jump together on this marvelous quest to 3D Data
    Integration, with a coffee lying around, but not too close to your computer ☕
    (speaking from devastating experience)
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 只要你准备好了，就让我们一起跳入这次精彩的 3D 数据集成探险吧，身边有杯咖啡，但不要离电脑太近 ☕（这是我亲身经历的惨痛教训）
- en: '🎵**Note to Readers***: This hands-on guide is part of a* [***UTWENTE***](https://www.itc.nl/)
    *joint work with co-authors* 🦊 ***F. Poux****, 🦄* ***M. Koeva*,** *and* ***🦝 P.
    Nourian****. We acknowledge the financial contribution from the digital twins*
    [*@ITC*](http://twitter.com/ITC) *-project granted by the ITC faculty of the University
    of Twente. All images are © F. Poux*'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 🎵**读者注意**：这本动手指南是* [***UTWENTE***](https://www.itc.nl/) *与合著者* 🦊 ***F. Poux***,
    🦄* ***M. Koeva***,* 和* ***🦝 P. Nourian*** *的联合工作的一部分。我们感谢来自数字双胞胎* [*@ITC*](http://twitter.com/ITC)
    *项目的资助，由特温特大学 ITC 学院提供。所有图片均 © F. Poux*
- en: Step 1\. Implementation Setup for 3D Data
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一步：3D 数据的实施设置
- en: '![](../Images/225f8a8e13a80a4cb8675b370f93496a.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/225f8a8e13a80a4cb8675b370f93496a.png)'
- en: Step 1\. Implementation Setup for 3D Data. © [F. Poux](https://learngeodata.eu/)
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步：3D 数据的实施设置。© [F. Poux](https://learngeodata.eu/)
- en: The first mission is quickly setting up a lightweight environment for developing
    our 3D Data Integration workflow. This is a simple phase, but ensuring a proper
    setup is the key to scalability and replication. So let us get on top of things!
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个任务是快速建立一个轻量级环境，以开发我们的 3D 数据集成工作流。这是一个简单的阶段，但确保设置正确是可扩展性和复制的关键。让我们把事情做好吧！
- en: '![](../Images/28627dd762be52c40d8c1adedc8e3c24.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/28627dd762be52c40d8c1adedc8e3c24.png)'
- en: The Environment Setup comprises base libraries, 3D Data libraries, Geospatial
    libraries, and an IDE. All of this is on top of virtual environment management
    and Python. © [F. Poux](https://learngeodata.eu/)
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 环境设置包括基础库、3D 数据库、地理空间库和 IDE。所有这些都建立在虚拟环境管理和 Python 之上。© [F. Poux](https://learngeodata.eu/)
- en: A Lightweight Environment Setup
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 轻量级环境设置
- en: 'Python environment setup using Anaconda, robust libraries, and an Integrated
    Development Environment (IDE) does not have to be painful. Anaconda provides a
    convenient way to manage Python packages and environments, and you can then use
    a powerful IDE such as Jupyter Lab or Spyder to make coding a breeze. For a detailed
    view of the process of setting up a 3D Python development environment, I recommend
    that you check out the following article:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Anaconda 进行 Python 环境设置，强大的库和集成开发环境（IDE）不必痛苦。Anaconda 提供了管理 Python 包和环境的便捷方法，然后你可以使用强大的
    IDE，如 Jupyter Lab 或 Spyder，让编程变得轻松。关于设置 3D Python 开发环境的详细信息，我建议你查看以下文章：
- en: '[](/3d-python-workflows-for-lidar-point-clouds-100ff40e4ff0?source=post_page-----7ef8ef14589a--------------------------------)
    [## 3D Python Workflows for LiDAR City Models: A Step-by-Step Guide'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/3d-python-workflows-for-lidar-point-clouds-100ff40e4ff0?source=post_page-----7ef8ef14589a--------------------------------)
    [## LiDAR 城市模型的 3D Python 工作流：逐步指南]'
- en: The Ultimate Guide to unlocking a streamlined workflow for 3D City Modelling
    Applications. The tutorial covers Python…
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解锁 3D 城市建模应用程序的流畅工作流的终极指南。教程涵盖了 Python……
- en: towardsdatascience.com](/3d-python-workflows-for-lidar-point-clouds-100ff40e4ff0?source=post_page-----7ef8ef14589a--------------------------------)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/3d-python-workflows-for-lidar-point-clouds-100ff40e4ff0?source=post_page-----7ef8ef14589a--------------------------------)'
- en: '🦊 **Florent**: *If you do not want to jump on another session, do not worry,
    I will not leave you high and dry! As part of this ultimate guide, here is a superb
    lightweight setup to get started, under 5 minutes, clocked ⌚.*'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 🦊 **Florent**：*如果你不想再参加另一个会话，不用担心，我不会抛下你！作为这个终极指南的一部分，这里有一个绝佳的轻量级设置，启动时间少于 5
    分钟，计时 ⌚。*
- en: To start things off, you can go to the [Anaconda website](https://docs.conda.io/en/latest/miniconda.html)
    and download a Miniconda installer (a free minimal installer for conda) appropriate
    for your operating system (Windows, macOS, or Linux), with a Python 10 version.
    From there, you can follow the installation instructions on the Anaconda website
    to install Miniconda on your machine.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你可以访问 [Anaconda 网站](https://docs.conda.io/en/latest/miniconda.html) 并下载适合你操作系统（Windows、macOS
    或 Linux）的 Miniconda 安装程序（一个免费的 conda 最小安装程序），并选择 Python 10 版本。然后，你可以按照 Anaconda
    网站上的安装说明在你的计算机上安装 Miniconda。
- en: 'And that is it! You now have secured the most uncomplicated Python installation
    with the lightweight miniconda that will make it super easy to isolate a controlled
    virtual environment. Before moving on to the following steps, we launch miniconda
    with its command line access:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！你现在已经用轻量级的 miniconda 安装了最简单的 Python，这将使你非常容易隔离一个受控的虚拟环境。在继续下一步之前，我们启动 miniconda
    并访问其命令行：
- en: '![](../Images/df2bb60a544049eca1139b2b848577df.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/df2bb60a544049eca1139b2b848577df.png)'
- en: In Windows, just searching “miniconda” should yield this
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 中，搜索“miniconda”应该会得到这个结果。
- en: Once in the Anaconda Prompt, we follow a simple four steps process to be up
    and running, as shown below.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦进入 Anaconda Prompt，我们按照下面所示的简单四步骤过程进行操作。
- en: '![](../Images/1cdedcd8fdd91ee19cf54b3a8cb8ca12.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1cdedcd8fdd91ee19cf54b3a8cb8ca12.png)'
- en: Workflow for environment creation. © [F. Poux](https://learngeodata.eu/)
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 环境创建工作流程。© [F. Poux](https://learngeodata.eu/)
- en: 'To create a new environment, we write the line: `conda create -n GEOTUTO python=3.10`'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建一个新环境，我们写：`conda create -n GEOTUTO python=3.10`
- en: 'To switch to the newly created environment, we write: `conda activate GEOTUTO`'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要切换到新创建的环境，我们写：`conda activate GEOTUTO`
- en: 'To check the Python version, `python --version`, and the installed packages:
    `conda list`. This should yield Python 3.10 and the list of base libraries respectively'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要检查 Python 版本，使用 `python --version`，以及已安装的包：`conda list`。这应该分别显示 Python 3.10
    和基本库的列表。
- en: 'To install pip in the new environment, we write: `conda install pip`'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在新的环境中安装 pip，我们写：`conda install pip`
- en: 'And that is it! We are now ready to move on installing the necessary libraries
    for 3D Data Integration with the pip manager: `pip install package-name`, where
    you change the package name by each of these (one at a time: `numpy`, `matplotlib`,
    `laspy[lazrs,laszip]`, `open3d`, `rasterio`, `geopandas`.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！我们现在准备好使用 pip 管理器安装 3D 数据集成所需的库：`pip install package-name`，其中你需要逐一更换包名（例如：`numpy`、`matplotlib`、`laspy[lazrs,laszip]`、`open3d`、`rasterio`、`geopandas`）。
- en: Python base libraries
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python 基础库
- en: '![](../Images/7a858df1f83c0e59bb7c37a4f919af96.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7a858df1f83c0e59bb7c37a4f919af96.png)'
- en: 'Python Base libraries: Numpy and Matplotlib.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Python 基础库：Numpy 和 Matplotlib。
- en: 'The first package installation is done via the prompt: `pip install numpy`.No
    need to present **NumPy**, Python''s fundamental numerical and scientific computing
    library. It supports large multi-dimensional matrices and provides a collection
    of mathematical functions to work with ease. NumPy is the foundation of many other
    scientific libraries in Python and is heavily used in data analysis, machine learning,
    and scientific research.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个包的安装通过提示完成：`pip install numpy`。不需要介绍**NumPy**，这是 Python 的基础数值和科学计算库。它支持大型多维矩阵，并提供了一系列数学函数，方便使用。NumPy
    是许多其他科学库的基础，在数据分析、机器学习和科学研究中被广泛使用。
- en: '🦝 **Nourian**: *NumPy is all about Linear Algebra. If you need to get comfortable
    with re-learning Linear Algebra, you can start from here:* [*Rudiment of Linear
    Algebra for Computer Graphics*](https://www.researchgate.net/publication/335571959_Rudiments_of_Linear_Algebra_Computer_Graphics)
    *(ResearchGate)*'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 🦝 **Nourian**：*NumPy 全关于线性代数。如果你需要重新学习线性代数并熟悉它，你可以从这里开始：* [*计算机图形学的线性代数基础*](https://www.researchgate.net/publication/335571959_Rudiments_of_Linear_Algebra_Computer_Graphics)
    *(ResearchGate)*
- en: '**Matplotlib** is a popular plotting library for Python that enables 2D plotting
    and basic 3D plotting capabilities. To install it: `pip install matplotlib`. It
    provides a wide range of customizable visualization options, allowing users to
    create various types of plots, such as line plots, scatter plots, bar plots, histograms,
    3D plots, and more. Matplotlib is widely used in scientific research and data
    science workflows.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**Matplotlib** 是一个流行的 Python 绘图库，支持 2D 绘图和基本的 3D 绘图功能。安装方法为：`pip install matplotlib`。它提供了广泛的可定制可视化选项，允许用户创建各种类型的图表，如折线图、散点图、条形图、直方图、3D
    图表等。Matplotlib 在科学研究和数据科学工作流中被广泛使用。'
- en: 3D Python Libraries
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3D Python 库
- en: '![](../Images/c517d8cc0d41fcdeee5abbb2dd1f57f0.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c517d8cc0d41fcdeee5abbb2dd1f57f0.png)'
- en: 'Python 3D Libraries: Open3D and Laspy.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Python 3D 库：Open3D 和 Laspy。
- en: '**Open3D** is a modern 3D data processing and visualization library, mainly
    focusing on 3D point clouds and meshes. It provides functionalities to handle
    3D data, such as point cloud registration, geometry processing, mesh creation,
    and visualization. Open3D is particularly useful for tasks related to 3D computer
    vision, robotics, and augmented reality applications. And for installing Open3D:
    `pip install open3d`.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**Open3D** 是一个现代的 3D 数据处理和可视化库，主要关注 3D 点云和网格。它提供了处理 3D 数据的功能，如点云配准、几何处理、网格创建和可视化。Open3D
    特别适用于与 3D 计算机视觉、机器人技术和增强现实应用相关的任务。安装 Open3D 的方法是：`pip install open3d`。'
- en: Then, we have to install **Laspy**:`pip install laspy[lazrs,laszip]`. This Python
    library is used for reading, writing, and modifying LiDAR data stored in the LAS
    (LiDAR data Exchange Format) and LAZ (compressed LAS) file formats. It provides
    tools to work with point cloud data obtained from LiDAR scanners and is widely
    (small world) used in geospatial applications for terrain modeling, forestry,
    urban planning, and more.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们需要安装 **Laspy**：`pip install laspy[lazrs,laszip]`。这个 Python 库用于读取、写入和修改存储在
    LAS（激光雷达数据交换格式）和 LAZ（压缩 LAS）文件格式中的 LiDAR 数据。它提供了处理来自 LiDAR 扫描仪的点云数据的工具，并在地理空间应用中（如地形建模、林业、城市规划等）被广泛使用。
- en: Geospatial Libraries
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 地理空间库
- en: '**Geopandas** is a library built on top of pandas and shapely designed to handle
    geospatial data efficiently. To install it: `pip install geopandas`. It extends
    the capabilities of pandas to include geospatial data types and operations, allowing
    users to work with vector data (points, lines, polygons) and efficiently perform
    geospatial analysis. Geopandas is widely used in GIS, cartography, and spatial
    data analysis.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**Geopandas** 是一个建立在 pandas 和 shapely 之上的库，旨在高效处理地理空间数据。安装方法为：`pip install
    geopandas`。它扩展了 pandas 的功能，支持地理空间数据类型和操作，使用户能够处理矢量数据（点、线、面）并高效地进行地理空间分析。Geopandas
    在 GIS、制图和空间数据分析中被广泛使用。'
- en: '**Rasterio** is the last library that we will install with: `pip install rasterio`.
    It is used for reading and writing geospatial raster data. It supports various
    standard raster formats like GeoTIFF or JPEG and provides functionalities for
    geospatial metadata, spatial referencing, and coordinate transformations. rasterio
    is valuable for satellite imagery analysis, remote sensing, and GIS (Geographic
    Information Systems) applications.'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**Rasterio** 是我们将要安装的最后一个库，安装方法为：`pip install rasterio`。它用于读取和写入地理空间栅格数据。支持各种标准的栅格格式，如
    GeoTIFF 或 JPEG，并提供地理空间元数据、空间参考和坐标转换功能。rasterio 对于卫星影像分析、遥感和 GIS（地理信息系统）应用非常有价值。'
- en: Each of these libraries serves a synergic purpose and permits handling a myriad
    of data types in scientific computing, data science, and geospatial applications.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这些库各自具有协同作用，可以处理科学计算、数据科学和地理空间应用中的各种数据类型。
- en: Setting up an IDE
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 IDE
- en: 'The last step of our setup is to install an IDE. We are still in the command
    line interface within the environment, and we type: `pip install jupyterlab`,
    which will install jupyterlab on our environment. To use it clearly, we can change
    the directory to the parent directory of our project (let us call it `INTEGRATION`),
    which will hold both a `CODE` folder and a `DATA` Folder: `cd C://COURSES/POUX/INTEGRATION`.
    And then, we will launch jupyterlab from this location by typing in the console:
    `jupyter lab`, which will open a new localhost page in your web browser (Chrome
    would be the preferred choice, but Firefox or Safari work as well).'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们设置的最后一步是安装 IDE。我们仍在环境中的命令行界面中，输入：`pip install jupyterlab`，这将会在我们的环境中安装 jupyterlab。为了清晰使用，我们可以将目录更改为项目的父目录（我们称之为
    `INTEGRATION`），其中包含 `CODE` 文件夹和 `DATA` 文件夹：`cd C://COURSES/POUX/INTEGRATION`。然后，我们将从这个位置启动
    jupyterlab，通过在控制台输入：`jupyter lab`，这将会在您的网页浏览器中打开一个新的本地页面（Chrome 是首选，但 Firefox
    或 Safari 也可以）。
- en: 'Well done! Phase one was completed successfully! 🎯We are now ready to attack
    the second phase: finding datasets that we can combine for later use in our NASA-graded
    workflow. 🙃'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 做得好！第一阶段成功完成！🎯我们现在准备进入第二阶段：寻找可以组合以供未来使用的数据集，用于我们的 NASA 评分工作流程。🙃
- en: Step 2\. Multi-Modal Data Curation
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 步骤 2. 多模态数据策展
- en: '![](../Images/4f30096356d29ac7cf24d2996baead60.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4f30096356d29ac7cf24d2996baead60.png)'
- en: Step 2\. Multi-Modal Creation. © [F. Poux](https://learngeodata.eu/)
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤 2. 多模态创建。© [F. Poux](https://learngeodata.eu/)
- en: 'We want to integrate multi-modal datasets. But what is this swearword: multimodal?
    It refers to data that spans different types and contexts, such as images, point
    clouds, text, and sound…'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望整合多模态数据集。但“多模态”这个词是什么意思呢？它指的是跨不同类型和背景的数据，例如图像、点云、文本和声音……
- en: '![](../Images/7a331b61c40795a96c1600a99bf0cd3c.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7a331b61c40795a96c1600a99bf0cd3c.png)'
- en: We use various 2D/2.5D/3D modalities. 3D Point Clouds, 3D Mesh, City Models,
    Voxels, Spatial Rasters, 360° Imagery, Tabular Data, Vector Data. © F. Poux
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用各种 2D/2.5D/3D 模态。3D 点云、3D 网格、城市模型、体素、空间栅格、360° 图像、表格数据、矢量数据。© F. Poux
- en: '🦝 **Nourian**: *Additionally, here is a nice hitchhiker''s guide to Web-based
    computing platforms for Urban Planning:* [*Essential Guide*](https://www.researchgate.net/publication/324088589_Essential_Means_for_Urban_Computing_Specification_of_Web-Based_Computing_Platforms_for_Urban_Planning_a_Hitchhiker''s_Guide)
    *(ResearchGate)*'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 🦝 **Nourian**：*此外，这里有一个关于城市规划的基于网络计算平台的极佳指南：* [*必备指南*](https://www.researchgate.net/publication/324088589_Essential_Means_for_Urban_Computing_Specification_of_Web-Based_Computing_Platforms_for_Urban_Planning_a_Hitchhiker's_Guide)
    *(ResearchGate)*
- en: So, our goal in this phase is to identify a zone of interest and gather as much
    data as possible to help us in our future analysis. The zone of interest selected
    today is a part of Enschede, a city in Eastern Netherlands in the province of
    Overijssel (Twente region), where, it makes sense, the University of Twente shines
    its knowledge beams. 🌞
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们在此阶段的目标是识别一个感兴趣的区域，并收集尽可能多的数据，以帮助我们未来的分析。今天选择的感兴趣区域是荷兰东部Overijssel省（Twente地区）Enschede市的一部分，这里，大学的知识光芒照耀四方。🌞
- en: '![](../Images/c06ca6ff77e065d5e3cbb3d23ca0b7b6.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c06ca6ff77e065d5e3cbb3d23ca0b7b6.png)'
- en: Identifying a zone of interest.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 确定感兴趣的区域。
- en: '🦄 **Mila**: *By unlocking the secrets of our cities through the fusion of 3D
    geospatial and remote sensing data, we give birth to city digital twins that illuminate
    the past, navigate the present, and shape. If you want to dive even more into
    data integration on the web using open-source tools, here is a research paper:*
    *3D Data integration for web-based opensource WebGL interactive visualization*
    *(ISPRS Archives)*'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 🦄 **Mila**：*通过融合 3D 地理空间和遥感数据来解锁我们城市的秘密，我们诞生了城市数字双胞胎，这些双胞胎照亮了过去，导航当前，并塑造未来。如果你想更深入地了解如何使用开源工具在网络上进行数据整合，这里有一篇研究论文：*
    *3D 数据集成用于基于 Web 的开源 WebGL 互动可视化* *(ISPRS Archives)*
- en: We are now ready to source different datasets. For clarity concerns, I organized
    this sourcing into four categories by searching for 3D datasets, Spatial Rasters,
    vector datasets, and finally from other sources, as shown below.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们准备获取不同的数据集。为了清晰起见，我将这些数据源分为四类：3D 数据集、空间栅格、矢量数据集，以及其他来源，如下所示。
- en: '![](../Images/4dd3147fbd305984b5b6690111c402cb.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4dd3147fbd305984b5b6690111c402cb.png)'
- en: Multi-modal data curation workflow. © [F. Poux](https://learngeodata.eu/)
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 多模态数据策展工作流程。© [F. Poux](https://learngeodata.eu/)
- en: 3D Data Sourcing
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3D 数据源
- en: 'The first step is to source some datasets from some open data repository with
    a data license that allows us to do some experiments. On that front, for the Netherlands,
    there is the possibility of obtaining LiDAR data, elevation data models, and raster
    imagery from one place: [geotiles.nl](https://geotiles.nl/). You can zoom in on
    the original tiles and get access to the various datasets download links, as shown
    below.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是从一些开放数据仓库获取数据集，这些仓库的数据许可允许我们进行一些实验。在这方面，对于荷兰，可以从一个地方获取 LiDAR 数据、地形模型和栅格图像：[geotiles.nl](https://geotiles.nl/)。你可以放大原始图块，并访问各种数据集的下载链接，如下所示。
- en: '![](../Images/7258d565f8e5ba2179bf8e4d51ddf3a8.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7258d565f8e5ba2179bf8e4d51ddf3a8.png)'
- en: Extracting the 34FN2 Tile of the AHN4 Dataset through GeoTiles.nl. © Florent
    Poux
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 GeoTiles.nl 提取 AHN4 数据集的 34FN2 图块。© Florent Poux
- en: '🦊 **Florent**: *To serve you best, all the used data is available in the Drive
    Folder shared at the end of the section. The AHN version is AHN4.*'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '🦊 **Florent**: *为了更好地服务于你，所有使用的数据都可以在本节末尾共享的驱动器文件夹中找到。AHN 版本是 AHN4。*'
- en: 'The second place you can explore to get CityModels is 3D BAG, which stands
    for 3D Register of Buildings and Addresses (BAG), the most detailed, openly available
    data set on buildings and addresses in the Netherlands. It contains 3D models
    at numerous levels of detail, generated by combining two open data sets: the building
    data from the [BAG](https://docs.3dbag.nl/en/overview/sources/#BAG) and the height
    data from the [AHN](https://docs.3dbag.nl/en/overview/sources/#AHN). Using the
    3D Bag Viewer by tile queries, you can explore and access the buildings.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以探索的第二个获取 CityModels 的地方是 3D BAG，即建筑和地址的 3D 注册（BAG），这是荷兰最详细、开放可用的建筑和地址数据集。它包含多个详细级别的
    3D 模型，生成方式是将两个开放数据集结合起来：来自 [BAG](https://docs.3dbag.nl/en/overview/sources/#BAG)
    的建筑数据和来自 [AHN](https://docs.3dbag.nl/en/overview/sources/#AHN) 的高度数据。使用 3D Bag
    Viewer 通过图块查询，你可以探索和访问建筑物。
- en: '![](../Images/4c981742889390b5d596eab78a29844c.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4c981742889390b5d596eab78a29844c.png)'
- en: The BAG Viewer. The Open Data accessible is licensed under CC BY 4.0, [3DBAG
    by tudelft3d and 3DGI](https://docs.3dbag.nl/en/copyright).
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: BAG Viewer。开放数据的许可为 CC BY 4.0，[3DBAG by tudelft3d 和 3DGI](https://docs.3dbag.nl/en/copyright)。
- en: The tile extent differs from what we got from the geotiles.nl, making it **interesting**
    when we attack the integration phase. At this stage, we already have exciting
    datasets under our hands. We can now move on to exploring spatial raster datasets.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图块范围与我们从 geotiles.nl 获得的不同，这在我们进行集成阶段时显得**有趣**。在这个阶段，我们已经手头有了令人兴奋的数据集。现在我们可以继续探索空间栅格数据集。
- en: Spatial Raster Data sources
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 空间栅格数据源
- en: 'For satellite and aerial imagery, the [USGS Earth Explorer](https://earthexplorer.usgs.gov/)
    is one of the largest free data sources. It is worldwide, with a friendly user
    interface that makes accessing remote sensing data simple. It even has a bulk
    download application if you need to download more than one data set. If this is
    the first time for you, you will need to execute one additional step: creating
    an account, but it is free and quick (I did it in under 2 minutes ⌚).'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 对于卫星和航空图像，[USGS Earth Explorer](https://earthexplorer.usgs.gov/) 是最大的免费数据源之一。它是全球性的，具有友好的用户界面，使访问遥感数据变得简单。如果你需要下载多个数据集，它甚至有批量下载应用。如果这是你第一次使用，你需要执行一个额外的步骤：创建一个账户，但这是免费的且迅速的（我用不到
    2 分钟 ⌚）。
- en: '![](../Images/8f2e719409f3981b7a32498cc696f18d.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8f2e719409f3981b7a32498cc696f18d.png)'
- en: The USGS Earth Explorer. Open data part of U.S. Public Domain, [Credits USGS](https://www.usgs.gov/information-policies-and-instructions/copyrights-and-credits).
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: USGS Earth Explorer。开放数据属于美国公共领域，[Credits USGS](https://www.usgs.gov/information-policies-and-instructions/copyrights-and-credits)。
- en: I drew a polygon from the WebUI and then asked to get the **Landsat > Landsat
    Collection 2 — Level 1** group (the most recent Landsat imagery is L8–9 OLI/TIRS
    and L7 ETM+). The differences between the collections are based on data quality
    and level of processing. USGS has [classified images into tiers](https://www.usgs.gov/media/videos/landsat-collections-what-are-tiers)
    based on quality and processing level ([Source](https://gisgeography.com/usgs-earth-explorer-download-free-landsat-imagery/)).
    Once in the result section, you can check the footprint before deciding which
    would best fit your needs, as shown below.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我从 WebUI 绘制了一个多边形，然后请求获取 **Landsat > Landsat Collection 2 — Level 1** 组（最新的
    Landsat 图像是 L8–9 OLI/TIRS 和 L7 ETM+）。这些集合之间的差异基于数据质量和处理水平。USGS 已根据质量和处理水平 [将图像分类为不同级别](https://www.usgs.gov/media/videos/landsat-collections-what-are-tiers)
    ([来源](https://gisgeography.com/usgs-earth-explorer-download-free-landsat-imagery/))。一旦进入结果部分，你可以查看足迹，然后决定哪个最适合你的需求，如下所示。
- en: '![](../Images/711d76ed2293ecae088248d408fca2c0.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/711d76ed2293ecae088248d408fca2c0.png)'
- en: The polygons to extract LandSAT images. © F. Poux
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 提取 LandSAT 图像的多边形。© F. Poux
- en: For Digital Elevation models, I suggest sticking with the [geotiles.nl](https://geotiles.nl/)
    data service as it is already on point with the most up-to-date and precise elevation
    models from the AHN. We are moving at an incredible pace, and the next stage is
    to get some excellent vector datasets!
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 对于数字高程模型，我建议使用 [geotiles.nl](https://geotiles.nl/) 数据服务，因为它提供了 AHN 的最新和最精确的高程模型。我们正在以令人难以置信的速度前进，下一阶段是获取一些优秀的矢量数据集！
- en: Vector data curation
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 矢量数据策展
- en: If you are in the GIS community, I hope presenting the power of [OpenStreetMap
    (OSM)](https://www.openstreetmap.org/#map=17/52.22687/6.88808&layers=G) will not
    insult your knowledge base.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在 GIS 社区中，我希望展示 [OpenStreetMap (OSM)](https://www.openstreetmap.org/#map=17/52.22687/6.88808&layers=G)
    的力量不会冒犯你的知识基础。
- en: '![](../Images/e45243acdfb3b509eee6d1c8c17517c1.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e45243acdfb3b509eee6d1c8c17517c1.png)'
- en: OpenStreetMap Data Curation Portal. The Data is open, under the open database
    license (ODbL), [Credits OpenStreetMap](https://www.openstreetmap.org/copyright).
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: OpenStreetMap 数据策展门户。数据是开放的，遵循开放数据库许可证（ODbL），[OpenStreetMap 版权](https://www.openstreetmap.org/copyright)。
- en: OSM provides different maps and layers with a crowd-sourcing initiative that
    makes it highly exhaustive, with a precision flag nevertheless. Indeed, OSM is
    open to the public and created by a general audience. So this means that accuracy
    can vary based on the creator and its “mapping” expertise level. However, OSM
    is a goldmine for openly licensed street-level GIS data.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: OSM 提供了不同的地图和图层，具有众包倡议，这使得它非常详尽，但精确度仍然是一个问题。实际上，OSM 对公众开放，由普通大众创建。这意味着准确性可能会根据创作者及其“制图”技能水平而有所不同。然而，OSM
    是一个开放许可证街道级 GIS 数据的宝藏。
- en: 'We have several ways to download OpenStreetMap data to get our hands on some
    of this gold. Conveniently, there is even an [OSM Data Wikipedia page](https://wiki.openstreetmap.org/wiki/Downloading_data)
    with all the available OSM extracts. My recommendation is the use of the tool
    [Geofabrik](http://download.geofabrik.de/). Indeed, you can then leverage a data
    organization by semantic spatial extent (E.g.: country, state, continent …). You
    can quickly choose a geographic location and then download OSM data, as shown
    below.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有几种方法可以下载 OpenStreetMap 数据，以获取一些宝贵的数据。方便的是，甚至有一个 [OSM 数据维基页面](https://wiki.openstreetmap.org/wiki/Downloading_data)
    列出了所有可用的 OSM 提取数据。我的推荐是使用 [Geofabrik](http://download.geofabrik.de/) 工具。实际上，你可以利用按语义空间范围（例如：国家、州、洲等）组织的数据。你可以快速选择一个地理位置，然后下载
    OSM 数据，如下所示。
- en: '![](../Images/960b1288b62967ac0e4952f6ca76f5af.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/960b1288b62967ac0e4952f6ca76f5af.png)'
- en: GeoFabrik portal to gather vector datasets. © F. Poux
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: GeoFabrik 门户以收集矢量数据集。© F. Poux
- en: '🦊 **Florent**: *I also prefer downloading OSM data as shapefiles, but more
    on that later 😉.* ***Mila*** *makes me think that a great piece of knowledge is
    distilled in this* [*Geospatial Data with Python*](https://carpentries-incubator.github.io/geospatial-python/)*.*'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 🦊 **Florent**：*我也喜欢将 OSM 数据下载为形状文件，但稍后会详细说明 😉。* ***Mila*** *让我觉得这其中浓缩了大量的知识*
    [*Geospatial Data with Python*](https://carpentries-incubator.github.io/geospatial-python/)*。*
- en: We now have some 3D datasets, some raster datasets, and vector shapefiles. Time
    to dig the world wide web to find other precious stones 💎.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有一些 3D 数据集、一些栅格数据集和矢量形状文件。是时候在互联网世界中挖掘其他宝贵的资源了 💎。
- en: Other sources
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他来源
- en: 'Well, here, the web is your ally. You can find anything you want to tie to
    your analyses, from web pages to news, to sounds to real-time data feeds. I would
    not overstate that sky (or your bandwidth 😁) is the limit! But, let me be very
    pragmatic again and also guide you toward one platform: [Mappillary](https://www.mapillary.com/).'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，在这里，网络是您的盟友。您可以找到任何与分析相关的信息，从网页到新闻，再到声音和实时数据流。我不会夸大地说天空（或您的带宽 😁）是极限！不过，让我再实际一点，向您推荐一个平台：[Mappillary](https://www.mapillary.com/)。
- en: Mappillary is a platform that makes street-level images and map data available
    to scale. You can explore it and download some 360° imagery and points of interest
    using the Map Explorer.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: Mappillary 是一个提供街景图像和地图数据的平台。您可以使用地图浏览器探索并下载一些 360° 图像和兴趣点。
- en: '![](../Images/c741964aa19871f3fa37c13255b83f5d.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c741964aa19871f3fa37c13255b83f5d.png)'
- en: Mapillary database with the provided portal. If you download images, they are
    licensed under [CC-BY-SA](https://help.mapillary.com/hc/en-us/articles/115001770409-Licenses)
    by Mappillary.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: Mapillary 数据库通过提供的门户。如果您下载图像，它们由 Mappillary 按 [CC-BY-SA](https://help.mapillary.com/hc/en-us/articles/115001770409-Licenses)
    许可。
- en: You also have the ability to filter out elements by their class if you want
    to select only some elements of interest or to cross-validate information with
    OSM data, for example.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想仅选择一些感兴趣的元素或与 OSM 数据进行交叉验证，您还可以按类别过滤元素。
- en: And now, the good news? To follow along the code lines that are coming, I alleviate
    for you the process of getting all of this data that you can find directly in
    this [Data Drive Repository](https://drive.google.com/drive/folders/1HNvEHftS0SlCXESM19xd6onxSAGHy5wE?usp=sharing).
    Once you have what you need in your DATA folder, we can start a nice exploratory
    data analysis.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，好消息来了！为了跟随即将到来的代码行，我为您简化了获取这些数据的过程，您可以直接在这个 [数据驱动仓库](https://drive.google.com/drive/folders/1HNvEHftS0SlCXESM19xd6onxSAGHy5wE?usp=sharing)
    中找到它们。一旦您在您的 DATA 文件夹中拥有所需的数据，我们可以开始一次愉快的探索性数据分析。
- en: Step 3\. Exploratory Data Analysis
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 3 步：探索性数据分析
- en: '![](../Images/29b3d09b90bbcecf545e99977709bbf0.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/29b3d09b90bbcecf545e99977709bbf0.png)'
- en: Step 3\. Exploratory Data Analysis.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 第 3 步：探索性数据分析。
- en: At this stage, we have a Python code setup and a data setup, so we are ready
    to activate a deep focus mode with 15 minutes on clock timer ⌚. Indeed, we will
    now explore the various datasets we gathered with Python.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一阶段，我们已经设置好了 Python 代码和数据，因此我们准备好进入深度集中模式，定时器设置为 15 分钟 ⌚。实际上，我们将使用 Python
    探索我们收集的各种数据集。
- en: '![](../Images/870384fec802dd5f4dca991f62660903.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/870384fec802dd5f4dca991f62660903.png)'
- en: Loading and Reading 3D Data. We use Open3D (Point Clouds, Mesh, Voxels), RasterIO,
    and Geopandas. © F. Poux
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 加载和读取 3D 数据。我们使用 Open3D（点云、网格、体素）、RasterIO 和 Geopandas。© F. Poux
- en: This means that, for each modality, we will go through reading, profiling, harmonizing,
    and categorizing its content. Often, that means dealing with library bidirectional
    communication. To stay concise, I took the liberty of regrouping some modalities
    together, as shown below.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着，对于每种模式，我们将进行读取、分析、协调和分类其内容。通常，这意味着处理库的双向通信。为了保持简洁，我擅自将一些模式归为一组，如下所示。
- en: '![](../Images/62cbe01ff61228976f10413fc529ff48.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/62cbe01ff61228976f10413fc529ff48.png)'
- en: The multiple modalities covered. © F. Poux
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 涵盖的多种模式。© F. Poux
- en: 'Before loading anything, let us import all the libraries installed by writing
    in your notebook/script the following nine lines:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在加载任何内容之前，让我们通过在您的笔记本/脚本中输入以下九行来导入所有已安装的库：
- en: '[PRE1]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 3D Point Clouds
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3D 点云
- en: 'Let us start with my protégés: 3D point clouds. They are essentially a collection
    of points in 3D space that represent a physical object or environment. These points
    are generated from various sources, including LiDAR, photogrammetry, Artificial
    Intelligence (yes, you read well), scanning devices, etc. The first dataset in
    our hands comes from the Aerial LiDAR AHN campaign in the LAZ file format. It
    spans from the LAS LiDAR data Exchange Format (LAS) as its compressed counterpart,
    widely used for storing LiDAR point cloud data. It supports 2D and 3D point data
    and attributes such as intensity and classification. To read the file with Python,
    we use the `laspy` library with its extensions, as follows:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从我的门生开始：3D点云。它们本质上是一组在3D空间中表示物理对象或环境的点。这些点来自各种来源，包括LiDAR、摄影测量、人工智能（是的，你没看错）、扫描设备等。我们手中的第一个数据集来自Aerial
    LiDAR AHN活动，格式为LAZ文件。它从LAS LiDAR数据交换格式（LAS）扩展而来，是存储LiDAR点云数据的压缩对等格式。它支持2D和3D点数据及其属性，如强度和分类。为了用Python读取该文件，我们使用`laspy`库及其扩展，如下所示：
- en: '[PRE2]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Great! we now have our file loaded in the `las` variable, which we can explore
    quickly using `laspy` functions to get possible attributes, the `max value` of
    the `red` channel, or the projection information:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 太好了！我们现在已经将文件加载到`las`变量中，可以使用`laspy`函数快速探索，获取可能的属性、`red`通道的`max value`或投影信息：
- en: '[PRE3]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This will yield the following:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下结果：
- en: '[PRE4]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The third line gives us an interesting profile: the data is expressed in `Amersfoort
    / RD New + NAP height` reference system. We note that down for later.'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 第三行给我们一个有趣的概况：数据以`Amersfoort / RD New + NAP height`参考系统表示。我们记下来以备后用。
- en: '🦊 **Florent***: As you can see, the first line gives us several attributes
    for later use. This is nice that, by default, we can store so much information
    in a semi-structured way. However, we need to sort out the relevancy of this information;
    usually, we default to using* `*X*`*,*`*Y*`*,*`*Z*`*,* `*intensity*`*,* `*red*`*,*
    `*green*`*,* `*blue*`*. I would call the other one''s bonuses* 😁*.*'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 🦊 **Florent**：如你所见，第一行给了我们几个后续使用的属性。很高兴默认情况下我们可以以半结构化的方式存储这么多信息。然而，我们需要整理这些信息的相关性；通常我们默认使用`*X*`、`*Y*`、`*Z*`、`*intensity*`、`*red*`、`*green*`、`*blue*`。我会把其他的称为额外的奖励😁。
- en: 'At this stage, we have no natural way to visualize if the data is correct;
    we have to transform it into our beloved `numpy` object, which we can after that
    convert to an `open3d` point cloud object to close the loop of switching between
    libraries. First, we convert some `laspy` object attributes to `coords` and `colors`
    numpy objects to hold our point cloud coordinates `X`,`Y`, `Z` and our point cloud
    colors:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，我们没有自然的方法来可视化数据是否正确；我们必须将其转换为我们喜爱的`numpy`对象，然后再转换为`open3d`点云对象，以完成库之间的切换。首先，我们将一些`laspy`对象属性转换为`coords`和`colors`
    numpy对象，以保存我们的点云坐标`X`、`Y`、`Z`以及点云颜色：
- en: '[PRE5]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Then we transform our numpy object into an `open3d` object to visualize the
    point cloud. Unfortunately, no direct way from `laspy` exists, yet 😁.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们将numpy对象转换为`open3d`对象以可视化点云。不幸的是，从`laspy`到`open3d`没有直接的方法，尽管有😁。
- en: '[PRE6]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '🦊 **Florent***: This is a great exercise to see that switching libraries almost
    always comes down to losing some processing time between conversions and also
    exposes to possible memory errors. Therefore, always using a limited number of
    libraries is my advice when dealing with complex datasets and workflows.*'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 🦊 **Florent**：这是一个很好的练习，可以看到切换库几乎总是会导致在转换之间丢失一些处理时间，并且也暴露出可能的内存错误。因此，当处理复杂的数据集和工作流程时，我建议总是使用有限数量的库。*
- en: '![](../Images/7e22090797ec2e060ff410aafd2c3b76.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7e22090797ec2e060ff410aafd2c3b76.png)'
- en: 3D Point Cloud Dataset visualized in Open3D. © [F. Poux](https://learngeodata.eu/)
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在Open3D中可视化的3D点云数据集。© [F. Poux](https://learngeodata.eu/)
- en: 'You can now visualize the full LiDAR point cloud within Python nicely, on par
    with professional software! Let us now load another point cloud to explore another
    widely used file format: `.ply`. The PLY format is used to store 3D mesh data
    along with attributes like color and normals. It is also suitable for point clouds
    with additional information.'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以在Python中很漂亮地可视化完整的LiDAR点云，媲美专业软件！让我们加载另一个点云，以探索另一种广泛使用的文件格式：`.ply`。PLY格式用于存储3D网格数据及其属性，如颜色和法线。它也适用于带有附加信息的点云。
- en: 'With `open3d`, this is super simple; you can execute the following code to
    fill the `pcd_itc` variable with the point cloud, and the `o3d.visualization`
    function to draw the point cloud:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`open3d`，这非常简单；你可以执行以下代码，将点云填充到`pcd_itc`变量中，并使用`o3d.visualization`函数绘制点云：
- en: '[PRE7]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../Images/75dd922b578e733201d3335ab0d27f5e.png)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/75dd922b578e733201d3335ab0d27f5e.png)'
- en: 3D Indoor Point Cloud visualized in Open3D. © [F. Poux](https://learngeodata.eu/)
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在Open3D中可视化的3D室内点云。© [F. Poux](https://learngeodata.eu/)
- en: This point cloud does not show any metadata information, which means that we
    will consider that it is expressed in a local reference system that will need
    to be registered somehow to a reference dataset.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 这个点云没有显示任何元数据，这意味着我们将认为它以本地参考系统表示，需要以某种方式与参考数据集进行配准。
- en: '🦊**Florent**: *Spoiler alert! Point cloud dataset is like a special central
    rock, especially dealing with multiple modalities. Indeed, as I will show later,
    it can act as the canonical reference to then link all the other datasets to it.
    I warned you of the spoiler!*'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '🦊**Florent**: *剧透警告！点云数据集就像一个特殊的中心岩石，尤其在处理多模态数据时。实际上，正如我稍后将展示的，它可以作为标准参考，将所有其他数据集与之关联。我已经提醒过你有剧透了！*'
- en: Time to move on 3D voxels 🧊
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候转向3D体素🧊
- en: 3D Voxels
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3D体素
- en: 'Voxels are another type of 3D data format. Voxels are essentially 3D pixels
    that represent a volume of space. They are plain fun, and you can check their
    plain usefulness in the following case studies:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 体素是另一种3D数据格式。体素本质上是表示空间体积的3D像素。它们非常有趣，你可以在以下案例研究中查看它们的实际用途：
- en: '[](/3d-python-workflows-for-lidar-point-clouds-100ff40e4ff0?source=post_page-----7ef8ef14589a--------------------------------)
    [## 3D Python Workflows for LiDAR City Models: A Step-by-Step Guide'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/3d-python-workflows-for-lidar-point-clouds-100ff40e4ff0?source=post_page-----7ef8ef14589a--------------------------------)
    [## 3D Python工作流用于LiDAR城市模型：一步一步的指南'
- en: The Ultimate Guide to unlocking a streamlined workflow for 3D City Modelling
    Applications. The tutorial covers Python…
  id: totrans-152
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解锁3D城市建模应用的最终指南。该教程涵盖了Python……
- en: towardsdatascience.com](/3d-python-workflows-for-lidar-point-clouds-100ff40e4ff0?source=post_page-----7ef8ef14589a--------------------------------)
    [](/how-to-automate-voxel-modelling-of-3d-point-cloud-with-python-459f4d43a227?source=post_page-----7ef8ef14589a--------------------------------)
    [## How to Automate Voxel Modelling of 3D Point Cloud with Python
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/3d-python-workflows-for-lidar-point-clouds-100ff40e4ff0?source=post_page-----7ef8ef14589a--------------------------------)
    [](/how-to-automate-voxel-modelling-of-3d-point-cloud-with-python-459f4d43a227?source=post_page-----7ef8ef14589a--------------------------------)
    [## 如何使用Python自动化3D点云的体素建模
- en: Hands-on tutorial to turn large point clouds into 3D voxels 🧊 with Python and
    open3d. Unlock an automation workflow…
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实用教程，将大型点云转换为3D体素🧊，使用Python和open3d。解锁自动化工作流……
- en: towardsdatascience.com](/how-to-automate-voxel-modelling-of-3d-point-cloud-with-python-459f4d43a227?source=post_page-----7ef8ef14589a--------------------------------)
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/how-to-automate-voxel-modelling-of-3d-point-cloud-with-python-459f4d43a227?source=post_page-----7ef8ef14589a--------------------------------)
- en: '🦝 **Pirouz**: *Voxels are pretty much like LEGO models. Check out this paper
    about voxelization of spatial data and getting serious with digital LEGO:* [*Voxelization
    Algorithms for Geospatial Applications*](https://www.researchgate.net/publication/290507635_Voxelization_Algorithms_for_Geospatial_Applications)
    *(ResearchGate). If you can’t get enough of voxels? Then search Google for “voxel
    art” and check out the library* [*topoGenesis*](https://github.com/shervinazadi/topogenesis/)
    *(GitHub).*'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '🦝 **Pirouz**: *体素非常像乐高模型。查看这篇关于空间数据体素化并深入研究数字乐高的论文：* [*地理空间应用的体素化算法*](https://www.researchgate.net/publication/290507635_Voxelization_Algorithms_for_Geospatial_Applications)
    *(ResearchGate)。如果你对体素情有独钟？那么在Google上搜索“体素艺术”，并查看库* [*topoGenesis*](https://github.com/shervinazadi/topogenesis/)
    *(GitHub)。*'
- en: 'Now, we will read and visualize the voxel dataset with the following code lines:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将使用以下代码行读取和可视化体素数据集：
- en: '[PRE8]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](../Images/6bf16433b5524924f2cd62af7adf0c52.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6bf16433b5524924f2cd62af7adf0c52.png)'
- en: 3D Voxel Dataset visualized in Open3D. © [F. Poux](https://learngeodata.eu/)
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在Open3D中可视化的3D体素数据集。© [F. Poux](https://learngeodata.eu/)
- en: At this stage, we read, profiled, and made sure that we had a way to deal with
    all this data with a single library for processing (`numpy`) and one for 3D visualization
    (`open3d`).
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，我们阅读、分析，并确保有一个单一的库来处理所有这些数据（`numpy`）和一个用于3D可视化的库（`open3d`）。
- en: Time to get city models in our Python experiments 😁
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候在我们的Python实验中加入城市模型了😁
- en: City Models
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 城市模型
- en: 'Models of Cities often follow a standard of expression: CityGML models. CityGML
    is an XML-based data format used to represent the 3D geometry of urban environments.
    CityGML models can include information about buildings, roads, bridges, and other
    infrastructure. City planners, architects, and engineers often use these models
    to simulate and analyze urban environments. An excellent place to get yours, which
    I did not mention on purpose before, is this GitHub repository curated by my colleague
    Olaf (Any Frozen reference forbidden ⛄): [CityGML Models](https://github.com/OloOcki/awesome-citygml).'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 城市模型通常遵循一种表达标准：CityGML 模型。CityGML 是一种基于 XML 的数据格式，用于表示城市环境的三维几何。CityGML 模型可以包含有关建筑物、道路、桥梁和其他基础设施的信息。城市规划师、建筑师和工程师常常使用这些模型来模拟和分析城市环境。一个优秀的获取地点，我之前故意没有提到的，是由我的同事
    Olaf 精心策划的 GitHub 仓库（任何冰雪奇缘的引用禁止 ⛄）：[CityGML Models](https://github.com/OloOcki/awesome-citygml)。
- en: '🦊 **Florent**: *Basically, in Python, we have to make sure to convert these
    models to 3D meshes while keeping any wanted semantic / topology or other information.
    A friendly Python tool, again by* [*TUM*](https://www.asg.ed.tum.de/en/gis/home/)*,
    is available here:* [*citygml2obj*](https://github.com/tum-gis/CityGML2OBJv2)*.
    But I did the heavy lifting for you if you use the data, thus moving on to the
    next reading modality: 3D meshes.*'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '🦊 **Florent**: *基本上，在 Python 中，我们必须确保将这些模型转换为三维网格，同时保留所需的语义/拓扑或其他信息。一个友好的 Python
    工具，同样由* [*TUM*](https://www.asg.ed.tum.de/en/gis/home/)* 提供，可以在这里找到：* [*citygml2obj*](https://github.com/tum-gis/CityGML2OBJv2)*。但如果你使用数据，我已经为你完成了繁重的工作，因此继续阅读下一个阅读方式：三维网格。*'
- en: 3D Mesh
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3D 网格
- en: Next, let’s talk about meshes. Triangular meshes are constituted of vertices,
    edges that bind vertices, and triangular faces that finish the “envelope” of objects.
    They allow us to depict the shape of a 3D object. Meshes can be created using
    3D modeling software or generated from point clouds, city models using specialized
    algorithms, or even Artificial Intelligence! The dataset is in an OBJ format commonly
    used to export 3D mesh models representing geometry and texture coordinates.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们谈谈网格。三角网格由顶点、连接顶点的边缘和完成对象“包络”的三角面组成。它们使我们能够描绘三维物体的形状。网格可以使用三维建模软件创建，也可以通过点云、城市模型和专用算法生成，甚至是人工智能！数据集采用
    OBJ 格式，通常用于导出表示几何体和纹理坐标的三维网格模型。
- en: '🦝 **Pirouz**: *If you want to know why these fancy words are used instead of
    points, lines, and polygons, you need to learn a bit more about another fancy
    word:* ***topology****.*'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '🦝 **Pirouz**: *如果你想知道为什么这些花哨的词汇被用来代替点、线和多边形，你需要多了解一点另一个花哨的词汇：***拓扑****。*'
- en: '🦊 **Florent**: *You can read a story about topology written by Pirouz which
    may well be one of the easiest story about topology:* [*Rudiments of Geometry
    and Topology*](https://www.researchgate.net/publication/344297280_Rudiments_of_Geometry_and_Topology_for_Computational_Design)
    *(ResearchGate)*'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '🦊 **Florent**: *你可以阅读 Pirouz 写的关于拓扑的故事，这可能是最简单的拓扑故事之一：* [*几何和拓扑基础*](https://www.researchgate.net/publication/344297280_Rudiments_of_Geometry_and_Topology_for_Computational_Design)
    *(ResearchGate)*'
- en: 'To load the mesh and get its extent, we will write the following lines:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 要加载网格并获取其范围，我们将编写以下几行：
- en: '[PRE9]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: And we see from the output that we have coordinates that span closely to what
    Amersfoort / RD New gives. This is comforting; we now have another dataset in
    this reference system.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 从输出中我们看到坐标接近于 Amersfoort / RD New 所提供的。这令人欣慰；我们现在在这个参考系统中有了另一个数据集。
- en: 'From there, to visualize the mesh, we first compute some vertex normals and
    use the same visualization function from open3d to visualize it:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 从那里开始，为了可视化网格，我们首先计算一些顶点法线，并使用 open3d 的相同可视化函数来进行可视化：
- en: '[PRE10]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: On the 3D side, we are good to go! Let us explore our Spatial Rasters with Python
    and rasterio
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在三维方面，我们可以开始了！让我们用 Python 和 rasterio 探索我们的空间栅格。
- en: Spatial Imagery
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 空间影像
- en: 'Our imagery is in the GeoTIFF format, an extension of the TIFF format that
    includes geospatial metadata, making it ideal for raster elevation data (DSM/DTM)
    and imagery. To open and profile the spatial imagery that we have, we simply use
    the following lines of code using rasterio:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的影像采用 GeoTIFF 格式，这是 TIFF 格式的扩展，包含地理空间元数据，适用于栅格高程数据（DSM/DTM）和影像。要打开和分析我们拥有的空间影像，我们只需使用
    rasterio 的以下代码行：
- en: '[PRE11]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'This results in the following output:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下输出：
- en: '[PRE12]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Interestingly, we get a clear detail that it is an image of `20002x25002`, with
    three channels (`R`,`G`, and `B`) expressed in the `CRS 28992`, which corresponds
    to Amersfoort again! This is great!
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，我们可以清楚地看到这是一个`20002x25002`的图像，具有三个通道（`R`、`G`和`B`），其表达在`CRS 28992`中，这再次对应于Amersfoort！这太棒了！
- en: 'Now, to plot with numpy and matplotlib, below is the tiniest possible line
    of code to get an image with numpy, avoiding Memory errors, with a result shown
    afterward:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，为了使用numpy和matplotlib绘图，下面是获取图像的最小代码行，以避免内存错误，结果如图所示：
- en: '[PRE13]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'In parallel, rasterio also provides `[show()](https://rasterio.readthedocs.io/en/latest/api/rasterio.plot.html#rasterio.plot.show)`
    function to perform everyday tasks such as displaying multi-band images as RGB
    and labeling the axes with proper geo-referenced extents. This permits to simplify
    the plot, as expressed below:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 与此同时，rasterio还提供了`[show()](https://rasterio.readthedocs.io/en/latest/api/rasterio.plot.html#rasterio.plot.show)`函数，以执行日常任务，例如将多波段图像显示为RGB，并用适当的地理参考范围标记坐标轴。这使得绘图变得更加简单，如下所示：
- en: '[PRE14]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![](../Images/55fd9e9d40f9a3756281b73957fbab92.png)![](../Images/989cb39b502ebe4f1a95935a2a64e5ce.png)![](../Images/02e48e5a69ee893ff38c345bd5017826.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/55fd9e9d40f9a3756281b73957fbab92.png)![](../Images/989cb39b502ebe4f1a95935a2a64e5ce.png)![](../Images/02e48e5a69ee893ff38c345bd5017826.png)'
- en: Various raster visualized with plot functions from matplotlib and rasterio.
    © [F. Poux](https://learngeodata.eu/)
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 使用matplotlib和rasterio的绘图函数可视化的各种光栅。© [F. Poux](https://learngeodata.eu/)
- en: This is superb! We have several 3D datasets (3D point clouds, voxels, 3D meshes)
    and satellite imagery (both infrared and R, G,B) that we could both handle with
    numpy and express for most of them in one common CRS. Let us move to other rasters
    focusing on elevation data (2.5D).
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 这真是太棒了！我们有多个3D数据集（3D点云、体素、3D网格）和卫星图像（包括红外和R、G、B），我们可以用numpy处理这些数据，并且大多数可以用一个通用CRS表示。让我们转向其他光栅，重点关注高程数据（2.5D）。
- en: Elevation Rasters (DSM, DTM)
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 高程光栅（DSM，DTM）
- en: 'Elevation models are usually found as raster files, where each pixel has a
    value that can be translated to its elevation. This is why we call that 2.5D data
    as it is a pure top-down or single point of view, also tagged depth image when
    out of any GIS projection system. We can import elevation models with the same
    code line:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 高程模型通常以光栅文件的形式出现，其中每个像素都有一个可以转换为其高程的值。这就是为什么我们称之为2.5D数据，因为它是一个纯粹的俯视图或单点视角，当它不在任何GIS投影系统中时也称为深度图像。我们可以用相同的代码行导入高程模型：
- en: '[PRE15]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Now that we have a `dtm` variable that holds the elevation data, we extract
    its metadata on the whole with `dtm.meta`, or more specialized with `dtm.shape`,
    `dtm.crs`, `dtm.bounds`, `dtm.overviews(1)`:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了一个保存了高程数据的`dtm`变量，我们可以通过`dtm.meta`提取其整体元数据，或者更专业地使用`dtm.shape`、`dtm.crs`、`dtm.bounds`、`dtm.overviews(1)`：
- en: '[PRE16]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'This brings us to the following result:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 这给我们带来了以下结果：
- en: '[PRE17]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: And again, it is interesting to see that we have the same CRS Amersfoort / RD
    New for this dataset.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 再次令人感兴趣的是，我们看到这个数据集使用的是相同的CRS Amersfoort / RD New。
- en: 'To get a plot and a sense of what we are dealing with, we can transform the
    dataset to a numpy array and use indexing to select part of it in a selection
    variable:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 为了绘制图形并了解我们正在处理的内容，我们可以将数据集转换为numpy数组，并使用索引选择其中的一部分到选择变量中：
- en: '[PRE18]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Finally, we plot using the two ways: `rasterio` and `matplotlib` both the full-scale
    dataset and the zoomed-in selection:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们使用两种方式绘图：`rasterio`和`matplotlib`，分别绘制全尺度数据集和放大的选择区域：
- en: '[PRE19]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '![](../Images/f9a8eddbdb97ba300eb28ac36f41db09.png)![](../Images/0891a307d2bcc019a56d4f25e6b0ef3b.png)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f9a8eddbdb97ba300eb28ac36f41db09.png)![](../Images/0891a307d2bcc019a56d4f25e6b0ef3b.png)'
- en: DTM plot with RasterIO and matplotlib. © [F. Poux](https://learngeodata.eu/)
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 使用RasterIO和matplotlib绘制的DTM图。© [F. Poux](https://learngeodata.eu/)
- en: Finally, we cannot discuss raster datasets without diving into vector spatial
    data.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们不能在不深入探讨矢量空间数据的情况下讨论光栅数据集。
- en: Spatial Vector Data
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 空间矢量数据
- en: At this stage, it is essential to clarify once and for all that, if you find
    pixels, you are not speaking about vector data. Instead, vector datasets are made
    of vertices and paths, which are available as points (X, Y coordinates), lines
    (they connect these points now tagged vertices), and polygons (connect vertices
    to close a path made of lines).
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，必须一次性明确，如果你看到的是像素，那么你并不是在谈论矢量数据。相反，矢量数据集由顶点和路径组成，这些顶点和路径以点（X，Y坐标）、线（连接这些标记的顶点）和多边形（连接顶点以闭合由线组成的路径）的形式存在。
- en: '![](../Images/55bed353a01d2e175b0cb890bd079743.png)'
  id: totrans-206
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/55bed353a01d2e175b0cb890bd079743.png)'
- en: Vector Data in GIS Systems. © [F. Poux](https://learngeodata.eu/)
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: GIS系统中的矢量数据。© [F. Poux](https://learngeodata.eu/)
- en: '🌱 **Growing**: *Having that in mind, where does your intuition place 3D point
    clouds? Voxel models? 3D meshes? These are interesting questions with profound
    implications, but nice to situate better how 2D stands with a 3D synergy*.'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 🌱 **成长**：*考虑到这一点，你的直觉把 3D 点云放在哪里？体素模型？3D 网格？这些都是有深远意义的有趣问题，但有助于更好地定位 2D 与 3D
    的协同作用*。
- en: Interestingly, cartographers (but not only) use these as “symbols” to depict
    real-world components in maps. This means that they constantly have to determine
    a “Level of Detail” (LoD) that the entity represents, and this gives so much symbolic
    power to these entities (a point can be a country, or a town, or a citizen, or
    a specific place, …).
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，制图师（不仅仅是制图师）将这些用作“符号”来在地图上描绘现实世界的组件。这意味着他们必须不断确定实体所代表的“详细程度” (LoD)，这赋予这些实体如此多的符号意义（一个点可以是一个国家、一个城市、一个公民或一个特定地点，……）。
- en: 'To handle these vector datasets, we mainly use one open specification, the
    shapefile format. This permits us to spatially describe geometries and attach
    some kind of additional information to them. On our computer, the shapefile file
    format is simply a collection of several files formatted to represent different
    aspects of geodata ([*Reference*](https://wiki.openstreetmap.org/wiki/Shapefiles)):'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 为了处理这些矢量数据集，我们主要使用一种开放规范——shapefile 格式。这允许我们空间描述几何形状并附加一些额外的信息。在我们的计算机上，shapefile
    文件格式实际上是多个文件的集合，用于表示地理数据的不同方面（[*参考*](https://wiki.openstreetmap.org/wiki/Shapefiles)）：
- en: '`.shp` — The shape file, which contains the feature geometry itself.'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.shp` — 形状文件，包含特征几何本身。'
- en: '`.shx` —The shape index format, which holds a positional index of the feature
    geometry. This is very useful for large files in order to allow quick search thanks
    to clever “indexing”.'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.shx` — 形状索引格式，包含特征几何的定位索引。这对于大型文件非常有用，因为它利用巧妙的“索引”实现快速搜索。'
- en: '`.dbf` — The attribute format, which holds various attributes for each shape
    in a tabular way (dBase IV format).'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.dbf` — 属性格式，以表格方式（dBase IV 格式）存储每个形状的各种属性。'
- en: 'On top, we may have optional files that accompany the shapefile format. The
    most noteworthy one is the “`.prj`” file. This extra file actually defines the
    coordinate system and any projection information deemed necessary. Thus, having
    all these files allows us to load street data of the region Overijssel using this
    time geopandas:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 在顶部，我们可能会有与 shapefile 格式配套的可选文件。最值得注意的是“`.prj`”文件。这个额外的文件实际上定义了坐标系统和任何必要的投影信息。因此，拥有这些文件使我们能够使用
    geopandas 加载 Overijssel 区域的街道数据：
- en: '[PRE20]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '![](../Images/cd2f94aa4d177b76cad9ca52797d37a3.png)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cd2f94aa4d177b76cad9ca52797d37a3.png)'
- en: Vector Data output. © [F. Poux](https://learngeodata.eu/)
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 矢量数据输出。© [F. Poux](https://learngeodata.eu/)
- en: 'Let us now explore a bit its projection system by exploring its CRS:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们通过探索其坐标参考系统（CRS）来进一步了解其投影系统：
- en: '[PRE21]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Which results in the following:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 这导致了以下结果：
- en: '[PRE22]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: As we can see, this dataset is expressed in the ESPG 4326, which stands for
    WGS84\. So this is different from our other datasets so far.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，该数据集以 ESPG 4326 表达，这代表 WGS84\. 因此，与我们之前的数据集有所不同。
- en: '**Florent**: *geopandas is a perfect mashup of pandas and shapely. Thus if
    you are familiar with both, geopandas will be a breeze! Some useful commands are*
    `vector_data.columns` *or* `vector_data.describe()` *that can give you an overview
    of its content quickly*.'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '**Florent**：*geopandas 是 pandas 和 shapely 的完美结合。因此，如果你对这两者都很熟悉，使用 geopandas
    将会非常轻松！一些有用的命令是* `vector_data.columns` *或* `vector_data.describe()` *，可以让你快速了解其内容*。'
- en: 'But let us now explore our dataset visually to see its content:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 但现在让我们通过可视化我们的数据集来查看其内容：
- en: '[PRE23]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Which results in the following plot:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 这导致了以下图示：
- en: '![](../Images/2fc7bb808b505e587e571a7e671ad9b9.png)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2fc7bb808b505e587e571a7e671ad9b9.png)'
- en: Vector Data from OpenStreetMap. © [F. Poux](https://learngeodata.eu/)
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 OpenStreetMap 的矢量数据。© [F. Poux](https://learngeodata.eu/)
- en: This is very interesting! We can also use Matplotlib to display vector data.
    And the region is densely populated with an extensive road network, which is very
    dense! Let us now extract some points of interest from another source of data.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 这非常有趣！我们还可以使用 Matplotlib 来显示矢量数据。该区域人口密集，道路网络广泛且非常密集！现在让我们从另一个数据源中提取一些兴趣点。
- en: 'Vector: Points of Interest'
  id: totrans-230
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 矢量：兴趣点
- en: 'The dataset pack has a GeoJSON file, a lightweight and popular format for representing
    vector data with geometry and attributes, suitable for web-based applications
    and data exchange. To load the file, we also use geopandas with this code line:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集包中包含一个 GeoJSON 文件，这是一个轻量级且流行的矢量数据格式，具有几何体和属性，适用于基于 Web 的应用程序和数据交换。要加载该文件，我们也使用
    geopandas，代码如下：
- en: '[PRE24]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'We profile its CRS:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 我们分析其 CRS：
- en: '[PRE25]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'This gives us an answer that this is in the WGS84 CRS again. Finally, we plot
    to check any abnormality firsthand:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 这给我们的答案是它仍然在 WGS84 CRS 中。最后，我们绘制以检查任何异常：
- en: '[PRE26]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '![](../Images/a4b39e1fe098148011685d72801919f3.png)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a4b39e1fe098148011685d72801919f3.png)'
- en: Points of interest. © [F. Poux](https://learngeodata.eu/)
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 关注点。© [F. Poux](https://learngeodata.eu/)
- en: 'This may be a bit bland without any more context; thus, layering Raster imagery
    would be a first choice already. But before that, let us explore another dataset
    we could try: 360° imagery!'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 没有更多上下文，这可能有点平淡；因此，首先选择叠加栅格影像。但在此之前，让我们探索另一个可以尝试的数据集：360° 影像！
- en: 360° Imagery
  id: totrans-240
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 360° 影像
- en: 'From the mappillary platform, we have the ability to extract some 360° images
    that come with a specific license to be used. You can still use geopandas to read
    these images :'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 从 mappillary 平台，我们可以提取一些附有特定许可的 360° 图像。你仍然可以使用 geopandas 来读取这些影像：
- en: '[PRE27]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'That will output:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 这将输出：
- en: '[PRE28]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Here we can see (of course) that this image has no geotransform data. And this
    is normal: this is not a spatial raster! However, if we wanted, we could add a
    position so that a data point represents the place the picture was taken, a hint
    at layering data modalities through data integration. But before going there,
    let us plot the image:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到（当然）这张图像没有地理变换数据。这是正常的：这不是空间栅格！然而，如果我们愿意，我们可以添加一个位置，以便数据点表示拍摄照片的位置，这暗示了通过数据整合来叠加数据模态。但在去到那里之前，让我们绘制图像：
- en: '[PRE29]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'This results in the following:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![](../Images/9d16fa976ae1afafa51f2fe9b49cd98d.png)'
  id: totrans-248
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9d16fa976ae1afafa51f2fe9b49cd98d.png)'
- en: 360° imagery from Mapillary. © [F. Poux](https://learngeodata.eu/)
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Mapillary 的 360° 影像。© [F. Poux](https://learngeodata.eu/)
- en: We have now successfully loaded 3D Point Clouds, 3D City models as 3D Meshes,
    3D Voxel dataset, Spatial rasters (satellite imagery, aerial imagery, and elevation
    rasters), vector datasets (lines and points), as well as 360° imagery. The first
    objective is now an evident success! But, we need to check how to bring that all
    together, and the first thing to check is actually if they are expressed in the
    same Coordinate Reference System (CRS). For that, I compiled the results of our
    profiling step in the table below.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经成功加载了 3D 点云、作为 3D 网格的 3D 城市模型、3D 体素数据集、空间栅格（卫星影像、航拍影像和高程栅格）、矢量数据集（线条和点）以及
    360° 影像。第一个目标现在显然已经成功！但我们需要检查如何将这些数据整合在一起，首先需要检查的是它们是否都表示在相同的坐标参考系统（CRS）中。为此，我将我们的分析步骤的结果汇总在下面的表格中。
- en: '[PRE30]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: We see a mix of EPSG:7415, 28992, 4326 or missing EPSG. The next stage is thus
    to clarify and use a unifying system for all datasets.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到混合了 EPSG:7415、28992、4326 或缺失 EPSG。下一阶段是澄清并为所有数据集使用统一的系统。
- en: Data Registration and Reprojection
  id: totrans-253
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据注册和重投影
- en: '![](../Images/4d29341fd32f54b9cad5d858722e4e38.png)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4d29341fd32f54b9cad5d858722e4e38.png)'
- en: Step 4\. Registration and Reprojection
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤 4：注册和重投影
- en: Before integration, we have to ensure that all datasets are in a compatible
    format and coordinate reference system (CRS). If this is not the case, we perform
    data reprojection to bring them into a common CRS. This is achieved in four main
    stages by (1) Selecting a reference system, (2) Georeferencing the primary dataset,
    (3) Reprojecting other datasets, and (4) Aligning rigidly local datasets, as shown
    below.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 在整合之前，我们必须确保所有数据集都处于兼容的格式和坐标参考系统（CRS）中。如果不是这样，我们会执行数据重投影，将它们带入一个共同的 CRS。这通过四个主要阶段实现：（1）选择参考系统，（2）地理配准主要数据集，（3）重投影其他数据集，以及（4）严格对齐本地数据集，如下所示。
- en: '![](../Images/6df947aa143ea3754d64afd48adcb515.png)'
  id: totrans-257
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6df947aa143ea3754d64afd48adcb515.png)'
- en: 4 Steps Workflow covered. © [F. Poux](https://learngeodata.eu/)
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 已覆盖 4 个步骤工作流。© [F. Poux](https://learngeodata.eu/)
- en: Let us go through these stages.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐步了解这些阶段。
- en: Selecting a Reference System
  id: totrans-260
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择参考系统
- en: Alright, let us dive into the exciting world of reference systems! Imagine reference
    systems as the GPS coordinates that guide your data through the vast landscape
    of planet Earth. A reference system defines a set of rules and parameters to represent
    the Earth’s surface in a way that makes sense to us mere mortals. It’s like choosing
    a secret language that your data speaks fluently, allowing it to find its place
    in the world. Now, how do we choose the correct reference system? Let’s be pragmatic
    and attempt to first delineate the scope + region of interest of the project at
    hands.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，让我们深入探索参考系统的激动人心的世界吧！想象一下参考系统就像是引导你的数据穿越地球广阔景观的GPS坐标。参考系统定义了一组规则和参数，以一种对我们这些凡人有意义的方式来表示地球表面。这就像选择一种数据流利使用的秘密语言，让它找到自己在世界上的位置。那么，我们如何选择正确的参考系统呢？让我们务实一些，首先尝试勾画项目的范围和关注区域。
- en: '![](../Images/5cc44dd0f1cf97049d9ce90cf78a8ea2.png)'
  id: totrans-262
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5cc44dd0f1cf97049d9ce90cf78a8ea2.png)'
- en: 'Projection classical cases: One standard line, one standard cone and one standard
    point. © [F. Poux](https://learngeodata.eu/)'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 投影经典案例：一个标准线，一个标准圆锥和一个标准点。© [F. Poux](https://learngeodata.eu/)
- en: Different reference systems work better for different parts of the globe. Something
    like the Amersfoort / RD New can be a fantastic choice for local projects in the
    Netherlands. The trusty WGS84 or Universal Transverse Mercator (UTM) might be
    your best buddy for more global ventures. Therefore, we use the Amersfoort / RD
    New + [NAP height](https://epsg.io/5709) (for the elevation information) as our
    CRS.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的参考系统在全球不同区域表现更佳。例如，Amersfoort / RD New 对于荷兰的本地项目可能是一个绝佳的选择。值得信赖的WGS84或全球横轴墨卡托（UTM）可能是你全球项目的最佳伙伴。因此，我们使用Amersfoort
    / RD New + [NAP高程](https://epsg.io/5709)（用于高程信息）作为我们的CRS。
- en: Remember, when choosing a reference system, let the nature of your project and
    the region guide your decision. Pick a system that speaks the language of your
    data and brings harmony to your geospatial endeavors.🗺️
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，在选择参考系统时，让你的项目性质和地区来指导你的决策。选择一个能与数据语言相通的系统，并为你的地理空间工作带来和谐。🗺️
- en: Data Georeferencing
  id: totrans-266
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据地理参考
- en: 'Okay, we have our CRS defined; this step ensures that the data tagged in EPSG:7415
    for 3D data, and EPSG:28992 for 2D data. When profiling, we could then check that
    these datasets are already coherent:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，我们定义了CRS；这一步确保数据标记为EPSG:7415的3D数据和EPSG:28992的2D数据。在分析时，我们可以检查这些数据集是否已经一致：
- en: LiDAR 3D Point Cloud
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LiDAR 3D 点云
- en: Raster Imagery (both Spatial Raster and Elevation Raster)
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 栅格影像（包括空间栅格和高程栅格）
- en: 'However, the voxel dataset and the mesh from the city model dataset look like
    they are in the same CRS but have no metadata. Thus, we quickly overlay these
    datasets to check for any possible inconsistencies:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，体素数据集和城市模型数据集中的网格看起来似乎在相同的CRS中，但没有元数据。因此，我们迅速叠加这些数据集以检查任何可能的不一致：
- en: '[PRE31]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Which results in the following:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![](../Images/d9b3ea6b8885875589da756fcc4e517d.png)'
  id: totrans-273
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d9b3ea6b8885875589da756fcc4e517d.png)'
- en: The point cloud, building, and voxel datasets are combined together and visualized.
    © [F. Poux](https://learngeodata.eu/)
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 点云、建筑物和体素数据集被合并在一起并可视化。© [F. Poux](https://learngeodata.eu/)
- en: '🦊**Florent**: *Everything is aligned nicely, as shown in the image. The various
    datasets are cut on purpose to show the overlap between them. You can also see
    that point clouds have a bit more roughness and “resolution” over the 3D models
    that represent the buildings.*'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 🦊**弗洛朗**：*一切都对齐得很好，如图所示。各种数据集被故意裁剪以显示它们之间的重叠。你还可以看到点云在表示建筑物的3D模型上有些许粗糙和“分辨率”差异。*
- en: 'the remaining datasets to address are the following:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 剩余的数据集需要处理如下：
- en: Vector datasets (both the OSM and Mappillary one) that are expressed in WGS84
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表示为WGS84的矢量数据集（包括OSM和Mappillary）
- en: The ITC Point Cloud dataset is not georeferenced.
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ITC点云数据集没有地理参考。
- en: Let us then deal with data projection first.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先处理数据投影。
- en: Data Reprojection
  id: totrans-280
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据重投影
- en: Spatial data reprojection is a fundamental process that involves transforming
    spatial data from one coordinate reference system to another, typically to match
    the projection and coordinate units of a specific spatial analysis. Reprojection
    ensures that different datasets with distinct projections can be accurately overlaid,
    integrated, or analyzed.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 空间数据重投影是一个基本过程，涉及将空间数据从一个坐标参考系统转换到另一个系统，通常是为了匹配特定空间分析的投影和坐标单位。重投影确保具有不同投影的数据集可以准确地叠加、集成或分析。
- en: The process involves mathematical calculations that convert geographic coordinates
    (latitude and longitude) from one datum to another, considering parameters like
    scale, rotation, and distortion. Spatial data reprojection is essential for achieving
    data consistency, enabling interoperability between different datasets, and conducting
    accurate geospatial analyses across diverse mapping systems and applications.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 该过程涉及将地理坐标（纬度和经度）从一个基准转换到另一个基准的数学计算，考虑参数如比例、旋转和畸变。空间数据重新投影对于实现数据一致性、促进不同数据集之间的互操作性，以及在各种制图系统和应用中进行准确的地理空间分析至关重要。
- en: 'When reprojecting spatial data between reference systems, several important
    factors must be carefully considered to ensure accurate and meaningful results.
    Here are some of the key considerations:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 在参考系统之间重新投影空间数据时，必须仔细考虑几个重要因素，以确保结果的准确性和意义。以下是一些关键考虑因素：
- en: 'Coordinate Systems and Projections: Understand the coordinate systems and projections
    of both the source and target reference systems. Make sure they are compatible;
    if not, choose an appropriate transformation method.'
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 坐标系统和投影：了解源系统和目标系统的坐标系统和投影。确保它们兼容；如果不兼容，选择合适的转换方法。
- en: 'Datum and Ellipsoid: Check the datums and ellipsoids used in the source and
    target systems. Differences in datums can lead to significant shifts in coordinates.
    Apply datum transformations if needed to align the data correctly. If you feel
    a bit confused, here is a nice [lecture on datum and ellipsoid](https://www.tamiu.edu/cees/courses/fall2018/geol4460_labs/lecture4.pdf)
    (tamia.edu)'
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 基准和椭球体：检查源系统和目标系统中使用的基准和椭球体。基准的差异可能会导致坐标的显著偏移。如有需要，应用基准转换以正确对齐数据。如果你感到有些困惑，这里有一个不错的[基准和椭球体讲座](https://www.tamiu.edu/cees/courses/fall2018/geol4460_labs/lecture4.pdf)
    (tamia.edu)
- en: 'Accuracy / Precision: While these pinpoint two different characteristics (which
    extends the scope of our article), it is important to understand the required
    “level” for your specific analysis. Reprojection can introduce some errors, especially
    in large-scale transformations. Indeed, any data “error” has a potential impact
    on the results of our analysis.'
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 准确性/精度：虽然这些指向两个不同的特征（这扩展了我们文章的范围），了解你特定分析所需的“水平”很重要。重新投影可能会引入一些错误，特别是在大规模转换中。确实，任何数据“错误”都有可能影响我们分析的结果。
- en: 'Distortions: Different map projections can introduce distortions in shape,
    area, distance, or angles. Be aware of these distortions and their implications
    on your data interpretation.'
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 畸变：不同的地图投影可能会引入形状、面积、距离或角度的畸变。注意这些畸变及其对数据解释的影响。
- en: 'Coverage Area: Some projections are suitable for specific regions but may not
    be ideal for global datasets. Choose a projection that preserves the properties
    of your data over the entire coverage area.'
  id: totrans-288
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 覆盖区域：某些投影适合特定区域，但可能不适合全球数据集。选择一种在整个覆盖区域内保持数据属性的投影。
- en: 'Metadata and Documentation: Keep track of the reprojection process and document
    the transformations applied to the data. Properly document the source coordinate
    system and the target projection for future reference.'
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 元数据和文档：记录重新投影过程，并记录应用于数据的转换。妥善记录源坐标系统和目标投影以备将来参考。
- en: 'By carefully considering these factors, we ensure that reprojection is performed
    accurately and the resulting data is suitable for our intended applications. It
    is essential to be mindful of potential errors and artifacts that can arise during
    the reprojection process and to validate the results to maintain the quality and
    reliability of the data. In our case, we have to reproject both vector datasets.
    To do this, we use the following lines:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 通过仔细考虑这些因素，我们确保重新投影准确执行，得到的数据适用于我们的预期应用。必须注意在重新投影过程中可能出现的错误和伪影，并验证结果以保持数据的质量和可靠性。在我们的案例中，我们需要重新投影两个矢量数据集。为此，我们使用以下步骤：
- en: '[PRE32]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Which results in the following:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 这导致了以下结果：
- en: '![](../Images/5be24aaf0ff2a87f7ff146850d80def6.png)![](../Images/7d4741c1990d5ac1e972030c7a079c03.png)'
  id: totrans-293
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5be24aaf0ff2a87f7ff146850d80def6.png)![](../Images/7d4741c1990d5ac1e972030c7a079c03.png)'
- en: The resulting plots. © [F. Poux](https://learngeodata.eu/)
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的图表。© [F. Poux](https://learngeodata.eu/)
- en: '🦊 **Florent**: *3D Reprojection is also possible, but currently extend a bit
    the scope of this guide. Nevertheless, you can browse the library of course tutorials,
    where you will find some nice code and examples for 3D reprojection in the context
    of Segment Anything for Semantic Segmentation.*'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '🦊 **Florent**: *3D重投影也是可能的，但目前超出了本指南的范围。然而，您可以浏览课程库，其中会找到一些很好的代码和示例，用于在“Segment
    Anything”语境下进行3D重投影。*'
- en: 'Note the change in the coordinates on the axes of our plots! At this stage,
    it looks like we only have one data to register: the 3D Point Cloud of ITC.'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 注意我们图表坐标轴上的变化！在这一阶段，我们似乎只有一个数据需要注册：ITC的3D点云。
- en: Data Rigid Registration
  id: totrans-297
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据刚性注册
- en: '![](../Images/036f65b753a68af1d9b2c43d2faa1a2a.png)'
  id: totrans-298
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/036f65b753a68af1d9b2c43d2faa1a2a.png)'
- en: 3D Data Registration classical workflow. © [F. Poux](https://learngeodata.eu/)
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 3D数据注册经典工作流程。© [F. Poux](https://learngeodata.eu/)
- en: 'In 3D integration, data registration becomes crucial. Point cloud registration
    methods are usually made of two stages: a coarse alignment to position relatively
    closely two point clouds quickly. Then a fine registration like Iterative Closest
    Point (ICP) or feature-based registration to align multiple point clouds with
    a higher degree of precision. To give you a hint concerning global registration,
    we can align the ITC point cloud by picking a list of three pairs of common points
    to get a first estimate, which is later refined with ICP. This permits obtaining
    an overlaid point cloud. These largely extend the scope of the current guide,
    and will be covered in another session.😉'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 在3D集成中，数据注册变得至关重要。点云注册方法通常由两个阶段组成：粗略对齐，将两个点云相对快速地定位得较近。然后是精细注册，如迭代最近点（ICP）或基于特征的注册，以更高的精度对齐多个点云。为了给您一个关于全局注册的提示，我们可以通过选择三对公共点的列表来对齐ITC点云，以获得初步估计，然后用ICP进行精细化。这允许我们获得叠加的点云。这些内容大大扩展了当前指南的范围，将在另一个会议中讨论。😉
- en: We now possess an aligned dataset expressed in a coherent CRS. The next stage
    is to see if we can refine the “data oil” to get some intelligent analytical workflow
    that can be built from there.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在拥有一个在一致的坐标参考系统（CRS）中对齐的数据集。下一阶段是看看我们是否能“提炼数据”，以便从中建立一个智能的分析工作流程。
- en: Step 5\. Data Processing, Transformations, and Fusion
  id: totrans-302
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5步。数据处理、转换和融合
- en: '![](../Images/b6c0b16e52d182b2c282240b7da919c5.png)'
  id: totrans-303
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b6c0b16e52d182b2c282240b7da919c5.png)'
- en: Step 5\. Data Pre-Processing
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 第5步。数据预处理
- en: This stage can also be done before the registration and reprojection part. Indeed,
    as we predominantly work per dataset, this is a solution and can impact (for better
    or worse) the results of the previous steps.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 这一阶段也可以在注册和重投影部分之前完成。实际上，由于我们主要按数据集工作，这是一种解决方案，并可能影响（无论是好是坏）前面步骤的结果。
- en: 'Spatial data integration combines different types of spatial data (2D, 3D,
    or 2.5D) to **create a unified and comprehensive representation of an area with
    data overlap**. This process allows us to leverage the strengths of each data
    type and derive more valuable insights from the integrated dataset. Here is a
    quick view of some processing strategies for spatial data integration:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 空间数据集成将不同类型的空间数据（2D、3D或2.5D）结合起来，以**创建一个统一且全面的区域数据重叠表示**。这一过程使我们能够利用每种数据类型的优点，从集成的数据集中获得更有价值的见解。以下是空间数据集成的一些处理策略的快速视图：
- en: '![](../Images/5d9d187eb0f750e7e3075ac678eb7b2d.png)'
  id: totrans-307
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5d9d187eb0f750e7e3075ac678eb7b2d.png)'
- en: '3D Data Pre-Processing major areas: data cleaning, data transformation, data
    reduction, and data enrichment. © [F. Poux](https://learngeodata.eu/)'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 3D数据预处理的主要领域：数据清理、数据转换、数据减少和数据丰富。© [F. Poux](https://learngeodata.eu/)
- en: Now, let us explore what these four main stages actually look like, code-wise.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们探讨一下这四个主要阶段的实际代码实现。
- en: Data Cleaning (Raster Dataset)
  id: totrans-310
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据清理（栅格数据集）
- en: the first stage is to handle missing or erroneous data points carefully. Data
    cleaning techniques like interpolation or extrapolation may be used to fill in
    gaps or replace erroneous values. In our case, we could fill empty raster values
    from our DTM.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 第一阶段是仔细处理缺失或错误的数据点。可以使用插值或外推等数据清理技术来填补空白或替换错误值。在我们的案例中，我们可以从数字地形模型（DTM）中填补空白的栅格值。
- en: 'I do this by interpolating neighboring pixels for each empty zone to try and
    give a better structure to our dataset with the following code snippet:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 我通过对每个空白区域的相邻像素进行插值，试图用以下代码片段为我们的数据集提供更好的结构：
- en: '[PRE33]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '🌱 **Growing**: *How would you use this to extract contour lines on your zone?*'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: '🌱 **Growing**: *你会如何使用这些来提取你区域的等高线？*'
- en: 'This results in the following:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 这会导致以下结果：
- en: '![](../Images/09eb437fe7b5cabbb33e57de38211fd2.png)![](../Images/17b4a6d800f5b1c48bd591a9065d472e.png)'
  id: totrans-316
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/09eb437fe7b5cabbb33e57de38211fd2.png)![](../Images/17b4a6d800f5b1c48bd591a9065d472e.png)'
- en: DTM Visualization results. © [F. Poux](https://learngeodata.eu/)
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: DTM 可视化结果。© [F. Poux](https://learngeodata.eu/)
- en: Data Transformation (3D Point Cloud)
  id: totrans-318
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据转换（3D 点云）
- en: Aside from conversion between file formats, data transformation refers to the
    various processes to ensure structural and content integrity toward one or more
    processing steps. For example, it is imperative in many feature engineering tasks
    to enhance 3D machine learning model performances.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 除了文件格式之间的转换，数据转换还指的是确保结构和内容完整性的各种过程，以便于一个或多个处理步骤。例如，在许多特征工程任务中，这对于提升 3D 机器学习模型的性能至关重要。
- en: 'One critical data transformation method is scaling, ensuring that all the values
    in a dataset are within a specific range, such as 0 to 1\. To do this on a point
    cloud, we proceed as follows:'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 一种关键的数据转换方法是缩放，确保数据集中的所有值都在特定范围内，例如 0 到 1。要对点云执行此操作，我们按以下步骤进行：
- en: '[PRE34]'
  id: totrans-321
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'This transforms our original point cloud with coordinates between 0 and 1 for
    all our points. Therefore, if we were to plot their distribution along the three
    axes, we would use the following:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 这将我们原始的点云转换为所有点的坐标在 0 和 1 之间。因此，如果我们要绘制它们沿三个轴的分布，我们会使用以下内容：
- en: '[PRE35]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'To obtain:'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 获得：
- en: '![](../Images/59891a96517f44038b65ecdc5efcb218.png)'
  id: totrans-325
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/59891a96517f44038b65ecdc5efcb218.png)'
- en: 3D Point Cloud Distribution analysis. © [F. Poux](https://learngeodata.eu/)
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 3D 点云分布分析。© [F. Poux](https://learngeodata.eu/)
- en: As you can see, our point cloud now has X, Y, and Z coordinates that range between
    0 and 1.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，我们的点云现在拥有 X、Y 和 Z 坐标，这些坐标的范围在 0 和 1 之间。
- en: '🍇 **Note**: *This is interesting on another flavor. Indeed, we tend to a pattern
    looking at the Z distribution, where a hint toward a Z-driven algorithm makes
    sense, for example, to distinguish roofs from the ground points*.'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 🍇 **注意**：*这在另一种口味上很有趣。实际上，我们会根据 Z 分布的模式来寻找线索，这样的 Z 驱动算法是有意义的，例如，用于区分屋顶和地面点*。
- en: 'Data Reduction: Cropping mask, Point Cloud Sampling'
  id: totrans-329
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据减少：裁剪掩码，点云采样
- en: Data reduction encompasses the various techniques in which data is reduced to
    its simplest possible form to enable optimal analytical tasks.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 数据减少包括各种技术，通过这些技术数据被简化到最简单的形式，以便进行最佳的分析任务。
- en: 'One of these is data cropping: reducing the spatial extent of our dataset.
    A clear example could be executed on raster datasets to limit the memory footprint
    by loading a huge zone when we want to focus on a tighter area. To do this, with
    rasterio, we have first to create a geopandas bounding box that will act as the
    filtering mask:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 其中之一是数据裁剪：减少数据集的空间范围。一个明确的例子是在栅格数据集上执行，以限制内存占用，当我们想要关注更小的区域时加载一个巨大的区域。为此，使用
    rasterio，我们首先需要创建一个 geopandas 边界框，作为过滤掩码：
- en: '[PRE36]'
  id: totrans-332
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'We then get a nice area box that we use as a mask on the original file (or
    any raster of choice) by also making sure we copy the metadata of the original
    file onto the cropped version:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们得到一个漂亮的区域框，将其用作原始文件（或任何栅格文件）的掩码，同时确保将原始文件的元数据复制到裁剪后的版本中：
- en: '[PRE37]'
  id: totrans-334
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'This results in the following:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 这会导致以下结果：
- en: '![](../Images/e9f27afe0639f0f3410bedfa686989bb.png)'
  id: totrans-336
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e9f27afe0639f0f3410bedfa686989bb.png)'
- en: Cropping a CIR Image. © [F. Poux](https://learngeodata.eu/)
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 裁剪 CIR 图像。© [F. Poux](https://learngeodata.eu/)
- en: 'Another clear data reduction technique is data sampling. In our case, trying
    to reduce the number of points in our point cloud. This can be done in several
    ways (which, again, extend the scope of this article), with one using the voxel
    data structure a priori: we want to keep one best candidate per voxel:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种明确的数据减少技术是数据采样。在我们的案例中，就是试图减少点云中的点数。这可以通过几种方法来实现（这些方法也超出了本文的范围），其中一种方法是使用预定义的体素数据结构：我们希望每个体素保留一个最佳候选点：
- en: '[PRE38]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'This results in the following downsampled point cloud:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 这会导致以下下采样点云：
- en: '![](../Images/530a14f72994cc61d0aeb547aa8f0e3e.png)'
  id: totrans-341
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/530a14f72994cc61d0aeb547aa8f0e3e.png)'
- en: 3D Point Cloud Downsampling results. © [F. Poux](https://learngeodata.eu/)
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 3D 点云下采样结果。© [F. Poux](https://learngeodata.eu/)
- en: Finally, we can enrich our dataset in various ways.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以通过各种方式丰富我们的数据集。
- en: 'Data Enrichment: Inject POI proximity to point clouds'
  id: totrans-344
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据丰富：将 POI 近似值注入点云
- en: Depending on the application, various fusion techniques can be applied to merge
    the datasets. For 2D and 2.5D integration, raster-based methods like weighted
    averaging or majority voting can combine multiple data layers. In 3D integration,
    point cloud fusion techniques, such as merging, averaging, or voxelization, are
    employed to create a single, consolidated 3D point cloud representing the entire
    area.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 根据应用需求，可以采用各种融合技术来合并数据集。对于 2D 和 2.5D 集成，可以使用基于栅格的方法，如加权平均或多数投票，来结合多个数据层。在 3D
    集成中，使用点云融合技术，如合并、平均或体素化，来创建一个代表整个区域的单一合成 3D 点云。
- en: '🦊 **Florent**: *Using data enrichment (fusion) techniques, we combine information
    from multiple sources (it can be web-based, from a data acquisition mission, or
    any relevant way to gather data). This allows the creation of a more comprehensive
    and accurate representation of the underlying phenomenon. These can touch on raster
    Weighted Averaging (Involves taking a weighted average of pixel values from multiple
    raster layers, where the weights represent the importance or reliability of each
    raster layer), Majority Voting (Combines categorical raster data by assigning
    the majority class to each pixel location, helpful in land cover classification).
    But these are for another time.* 😉'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: '🦊 **Florent**: *使用数据增强（融合）技术，我们将来自多个来源的信息结合起来（这些来源可以是基于网络的、来自数据采集任务的，或任何相关的数据收集方式）。这使得我们能够创建更全面、更准确的基础现象表示。这些技术包括栅格加权平均（涉及对来自多个栅格层的像素值进行加权平均，其中权重代表每个栅格层的重要性或可靠性）、多数投票（通过将多数类别分配给每个像素位置来结合分类栅格数据，对土地覆盖分类非常有帮助）。但这些内容留到以后再讲。*
    😉'
- en: 'A swift way to extend our dataset is to compute additional features. This is
    done, for example, on the 3D point clouds by extracting normals computed from
    a neighborhood of points that permits extracting the best fitting plane, then
    the normals. We automatically do this with the following piece of code:'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展数据集的快速方法是计算额外的特征。例如，这可以通过从点云中提取从邻域计算出的法线来完成，这样可以提取最佳拟合平面，然后计算法线。我们使用以下代码自动完成此操作：
- en: '[PRE39]'
  id: totrans-348
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'And as you can see below, we can visualize our new point cloud without or with
    normals (pressing “`n`” in the interactive window viewer):'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 如下所示，我们可以在互动窗口查看器中按下“`n`”键来可视化我们新的点云，无论是否显示法线：
- en: '![](../Images/42d6422b3084e0d01f17e87cc5b58b51.png)![](../Images/b95f5edb82a59699d99586a900bd2284.png)'
  id: totrans-350
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/42d6422b3084e0d01f17e87cc5b58b51.png)![](../Images/b95f5edb82a59699d99586a900bd2284.png)'
- en: Normal computation and visualization from the 3D Point Cloud. © [F. Poux](https://learngeodata.eu/)
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 从 3D 点云中计算和可视化法线。© [F. Poux](https://learngeodata.eu/)
- en: Step 6\. Multi-modal Data Visualization
  id: totrans-352
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 步骤 6\. 多模态数据可视化
- en: '![](../Images/fc0e59685c0dbb2b9508d883a6272491.png)'
  id: totrans-353
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fc0e59685c0dbb2b9508d883a6272491.png)'
- en: Step 6\. Multi-Modal Data Visualization.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤 6\. 多模态数据可视化。
- en: Multi-modal data visualization is a powerful approach that seamlessly integrates
    our diverse geospatial data, including vector data, spatial raster imagery, Digital
    Surface Models (DSM), Digital Terrain Models (DTM), point clouds, and city models.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 多模态数据可视化是一种强大的方法，可以无缝集成我们多样的地理空间数据，包括矢量数据、空间栅格影像、数字表面模型（DSM）、数字地形模型（DTM）、点云和城市模型。
- en: '![](../Images/a4b9c501070cac01cda1bdf4410b30eb.png)'
  id: totrans-356
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a4b9c501070cac01cda1bdf4410b30eb.png)'
- en: 'Libraries used for 3D Data Visualization: Matplotlib, Open3D and RasterIO (2D/2.5D).
    © [F. Poux](https://learngeodata.eu/)'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 用于 3D 数据可视化的库：Matplotlib、Open3D 和 RasterIO（2D/2.5D）。© [F. Poux](https://learngeodata.eu/)
- en: This comprehensive fusion of data types allows for a more holistic understanding
    of the environment, laying the groundwork for more informed decision-making and
    sophisticated analyses. Now, let’s dive into a Python solution that showcases
    how to achieve this remarkable visualization feat!
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 数据类型的全面融合使我们能够对环境有更全面的理解，为更明智的决策和复杂的分析奠定基础。现在，让我们深入探讨一个 Python 解决方案，展示如何实现这一卓越的可视化效果！
- en: The trick is to understand the strengths and limits of each of our libraries!
    Indeed, what we will do is actually to stick to Open3D to check for the consistency
    between the data modalities (Meshes, 3D Point Clouds, and Voxels) and use **the
    point cloud dataset as the canonical reference to then link all the other datasets
    to it**.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 诀窍在于了解我们每个库的优点和限制！事实上，我们将专注于 Open3D，以检查数据模态（网格、3D 点云和体素）之间的一致性，并使用**点云数据集作为标准参考，然后将所有其他数据集链接到它**。
- en: '![](../Images/6f79f90b3eefcc73332f1bad24cd1dec.png)'
  id: totrans-360
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6f79f90b3eefcc73332f1bad24cd1dec.png)'
- en: Point Cloud as a canonical frame of reference. © [F. Poux](https://learngeodata.eu/)
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 点云作为标准参考框架。© [F. Poux](https://learngeodata.eu/)
- en: 'Therefore, the first step is to analyze the 3D modalities:'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，第一步是分析3D模态：
- en: '[PRE40]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '![](../Images/d9b3ea6b8885875589da756fcc4e517d.png)'
  id: totrans-364
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d9b3ea6b8885875589da756fcc4e517d.png)'
- en: Combined 3D Datasets. © [F. Poux](https://learngeodata.eu/)
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 组合的3D数据集。© [F. Poux](https://learngeodata.eu/)
- en: '🦊 **Florent**: *While the image may be confusing, be warned that nothing is
    going wrong when you visualize these three in one image. Indeed, the extent of
    the datasets are different to allow us to delineate the modalities better visually.*'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 🦊 **Florent**：*虽然图像可能令人困惑，但请注意，当你在一张图中可视化这三者时，什么也没有出错。事实上，数据集的范围不同，使我们能够更好地在视觉上区分模态。*
- en: 'Great! From there, we use the point cloud dataset with Numpy on a top-down
    view to check the X-Y consistency, for example, with vector data:'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 太好了！接下来，我们使用Numpy对点云数据集进行自上而下的视图，以检查X-Y一致性，例如，与矢量数据一起：
- en: '[PRE41]'
  id: totrans-368
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'This lays an obvious overlay of the vector dataset onto our point cloud that
    opens up a world of possibility to make these two dataset talk:'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 这明显地将矢量数据集叠加到我们的点云上，为使这两个数据集相互交流开辟了可能性：
- en: '![](../Images/976f9ab5d7824cfb9f9dea1271e5e420.png)'
  id: totrans-370
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/976f9ab5d7824cfb9f9dea1271e5e420.png)'
- en: Integrating Vector and Raster datasets. © [F. Poux](https://learngeodata.eu/)
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 集成矢量和栅格数据集。© [F. Poux](https://learngeodata.eu/)
- en: 'Then, we continue our linkage by linking the vector dataset, reprojected, with
    spatial imagery:'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们通过将矢量数据集（重投影）与空间影像连接，继续我们的链接：
- en: '[PRE42]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: This results in the visualization, which demands a bit of zoom, as expressed
    in the code, to better situate the fit of both datasets.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 这导致了可视化结果，需要稍微放大，如代码中所示，以更好地定位两个数据集的适配情况。
- en: '![](../Images/5c29bf16a7b4ec9cdae4a01242c0d4c3.png)![](../Images/82ad186d23513f6900b83de121ce3837.png)'
  id: totrans-375
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5c29bf16a7b4ec9cdae4a01242c0d4c3.png)![](../Images/82ad186d23513f6900b83de121ce3837.png)'
- en: Results of the integration of raster and vector datasets, with the LiDAR reprojection.
    © [F. Poux](https://learngeodata.eu/)
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 栅格和矢量数据集的集成结果，带有LiDAR重投影。© [F. Poux](https://learngeodata.eu/)
- en: The exact process is repeated for the locations from Mappillary, with the code
    below.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 对Mappillary的位置重复相同的过程，使用如下代码。
- en: '[PRE43]'
  id: totrans-378
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '![](../Images/840f727d1ae67895db02d1781f1c2c51.png)'
  id: totrans-379
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/840f727d1ae67895db02d1781f1c2c51.png)'
- en: View of the points of interest from Mappillary. © [F. Poux](https://learngeodata.eu/)
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: Mappillary的兴趣点视图。© [F. Poux](https://learngeodata.eu/)
- en: 'And finally, we want to overlay raster, vector, and point cloud modalities
    in one plot with Numpy:'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，我们希望使用Numpy将栅格、矢量和点云模态叠加在一个图中：
- en: '[PRE44]'
  id: totrans-382
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: This little piece of code (careful on the shortcuts and smart tricks employed
    to condense the snippet) permits us to put a final note on the data integration
    of our various modalities.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 这段小代码（注意其中使用的快捷方式和聪明的技巧以缩短代码）使我们能够对我们各种模态的数据集成做出最终的说明。
- en: '![](../Images/c11cb794d94fa4d415fd7bee197ea75e.png)'
  id: totrans-384
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c11cb794d94fa4d415fd7bee197ea75e.png)'
- en: Shapefile and point cloud visualization with the DTM. © [F. Poux](https://learngeodata.eu/)
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 使用DTM的Shapefile和点云可视化。© [F. Poux](https://learngeodata.eu/)
- en: We approach the end of our systematic approach!
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 我们接近我们系统方法的结束！
- en: 'By carefully applying these processing techniques, spatial data integration
    enables us to create a holistic representation of the environment, facilitating
    better decision-making and insights in a wide range of applications. Still, we
    must consider the last step: sharing the newly processed data.'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 通过仔细应用这些处理技术，空间数据集成使我们能够创建环境的整体表示，促进更好的决策和洞察力，适用于广泛的应用。不过，我们还必须考虑最后一步：分享新处理的数据。
- en: Step 7\. Data Sharing
  id: totrans-388
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7步：数据共享
- en: '![](../Images/7079d325fbed4facb4a5d45a5733ee87.png)'
  id: totrans-389
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7079d325fbed4facb4a5d45a5733ee87.png)'
- en: Step 7\. Data Sharing. © [F. Poux](https://learngeodata.eu/)
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 第7步：数据共享。© [F. Poux](https://learngeodata.eu/)
- en: Spatial data export is vital in the geospatial data workflow, allowing us to
    seamlessly share, visualize, and analyze 2D and 3D data modalities in established
    software. To this end, we can take a higher, almost aerial view to better situate
    the extent of data sharing impacts. I chose to relate to academia and publishing
    proofs of new scientific discoveries. Indeed, this process that I illustrate below
    is the key to an ethical and robust R&D cycle. As you can see, data export in
    standard formats, which we cover here, is the central link to data browsing before
    pushing automated solutions.
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 空间数据导出在地理空间数据工作流中至关重要，使我们能够无缝地共享、可视化和分析 2D 和 3D 数据模态。在这方面，我们可以从更高的角度，几乎是空中视角，以更好地定位数据共享的影响范围。我选择与学术界和发布新科学发现的证据相关联。确实，我下面所示的这个过程是一个道德且强健的研发周期的关键。正如你所看到的，标准格式的数据导出，我们在这里介绍，是在推动自动化解决方案之前数据浏览的核心环节。
- en: '![](../Images/32b96685b5430dddcef3fd798a779b90.png)'
  id: totrans-392
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/32b96685b5430dddcef3fd798a779b90.png)'
- en: The 3D Data Sharing Workflow. We start with experiments to populate a database.
    This Database is then used to explore or export results to be filtered for publication.
    The results are then used to repopulate and update the 3D Database. © [F. Poux](https://learngeodata.eu/)
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 3D 数据共享工作流。我们从实验开始，以填充一个数据库。然后使用该数据库来探索或导出结果，以进行筛选和发布。结果随后用于重新填充和更新 3D 数据库。©
    [F. Poux](https://learngeodata.eu/)
- en: 'Thus, the export process must create various file formats suitable for applications
    and software environments. Each file format has its specificities, catering to
    different use cases and previously expressed requirements. For in-depth 3D data
    export, I propose to relate to these articles:'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，导出过程必须创建各种适用于应用程序和软件环境的文件格式。每种文件格式都有其特定性，满足不同的使用案例和先前表达的需求。对于深入的 3D 数据导出，我建议参考以下文章：
- en: '[](/3d-python-workflows-for-lidar-point-clouds-100ff40e4ff0?source=post_page-----7ef8ef14589a--------------------------------)
    [## 3D Python Workflows for LiDAR City Models: A Step-by-Step Guide'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/3d-python-workflows-for-lidar-point-clouds-100ff40e4ff0?source=post_page-----7ef8ef14589a--------------------------------)
    [## LiDAR 城市模型的 3D Python 工作流：逐步指南'
- en: The Ultimate Guide to unlocking a streamlined workflow for 3D City Modelling
    Applications. The tutorial covers Python…
  id: totrans-396
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解锁 3D 城市建模应用程序的精简工作流的终极指南。教程涵盖了 Python…
- en: towardsdatascience.com](/3d-python-workflows-for-lidar-point-clouds-100ff40e4ff0?source=post_page-----7ef8ef14589a--------------------------------)
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/3d-python-workflows-for-lidar-point-clouds-100ff40e4ff0?source=post_page-----7ef8ef14589a--------------------------------)
- en: 'Understanding how we can do the same with vector and raster datasets is essential.
    As always, the simpler, the better: let us focus on these last exporting steps.
    To export the raster imagery, you can do the following with rasterio:'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 了解如何在矢量和栅格数据集上进行相同的操作是至关重要的。像往常一样，越简单越好：让我们专注于最后的导出步骤。要导出栅格图像，你可以使用 rasterio
    执行以下操作：
- en: '[PRE45]'
  id: totrans-399
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'And concerning vector datasets, geopandas makes it a breeze to export the georeferenced
    and clipped result from our processing stages:'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 关于矢量数据集，geopandas 使得从我们的处理阶段导出地理参考和裁剪结果变得轻而易举：
- en: '[PRE46]'
  id: totrans-401
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Finally, you can import these in a software such as QGIS or CloudCompare, which
    results in the following:'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你可以将这些数据导入到像 QGIS 或 CloudCompare 这样的软件中，结果如下：
- en: '![](../Images/94276d8e4de9c5ae70d26b086db476dd.png)'
  id: totrans-403
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/94276d8e4de9c5ae70d26b086db476dd.png)'
- en: 3D Point Cloud, 3D Voxel, 3D City Model, 3D DTM, Raster and vector dataset overlayed.
    They are integrated with the proposed methodology.© [F. Poux](https://learngeodata.eu/)
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 3D 点云、3D 体素、3D 城市模型、3D DTM、栅格和矢量数据集的叠加。它们与提出的方法论进行了整合。© [F. Poux](https://learngeodata.eu/)
- en: This is the perfect layering of 3D, Raster, and Vector datasets!
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 3D、栅格和矢量数据集的完美层叠！
- en: Conclusion
  id: totrans-406
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: We have embarked on an exciting journey exploring the world of 3D data integration
    with Python. Throughout this comprehensive guide, we have uncovered the immense
    potential of combining various 3D data modalities, such as point clouds, meshes,
    city models, DSM, DTM, and voxels, to create a unified and holistic representation
    of the spatial environment.
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 我们开始了一段激动人心的旅程，探索使用 Python 进行 3D 数据集成的世界。在这份全面的指南中，我们揭示了将各种 3D 数据模态（如点云、网格、城市模型、DSM、DTM
    和体素）结合起来，以创建空间环境的统一和全面表示的巨大潜力。
- en: '![](../Images/57473a23703dd40f51db1e9702411dd7.png)'
  id: totrans-408
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/57473a23703dd40f51db1e9702411dd7.png)'
- en: The workflow covered in this 3D Data Integration Guide.© [F. Poux](https://learngeodata.eu/)
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 本 3D 数据集成指南中介绍的工作流。© [F. Poux](https://learngeodata.eu/)
- en: 'To summarize, I list below the key takeaways related to the seven steps that
    we covered:'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，我在下面列出了我们所涵盖的七个步骤的关键要点：
- en: Setting up a multi-modal coding environment in Python needs to accommodate a
    minimal number of robust libraries.
  id: totrans-411
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Python中设置多模态编码环境需要配备尽可能少的强大库。
- en: When sourcing datasets, it is best to carefully consider available open datasets
    with clear licensing options through web interfaces that make it easy for you
    to gather relevant samples.
  id: totrans-412
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在获取数据集时，最好仔细考虑通过网络接口提供的具有明确许可选项的开放数据集，这样您可以轻松收集相关样本。
- en: It is an excellent practice to independently profile each modality and assess
    its main characteristics (CRS, precision, resolution, …) through quick analysis
    schemes.
  id: totrans-413
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 独立地对每种模态进行分析并评估其主要特性（坐标参考系统、精度、分辨率等）是一项优秀的实践，建议通过快速分析方案来实现。
- en: Mastering Coordinate Reference Systems and knowing how to go from one another
    and what a specific transformation implies is mandatory for scalable workflows
    with spatial datasets.
  id: totrans-414
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 掌握坐标参考系统，并了解如何从一个系统转换到另一个系统，以及特定的转换意味着什么，对于具有空间数据集的可扩展工作流是强制性的。
- en: Pre-processing algorithms and techniques are often the keys between optimized
    and organized data assemblies and data warehouses with chaotic management systems.
  id: totrans-415
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预处理算法和技术通常是优化和组织的数据集与具有混乱管理系统的数据仓库之间的关键所在。
- en: nD data visualization is paramount to a successful data integration workflow
    and demands that you carefully consider which dataset/ data modality acts as your
    canonical anchor
  id: totrans-416
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: nD 数据可视化对成功的数据集成工作流至关重要，并要求您仔细考虑哪个数据集/数据模态充当您的标准锚点。
- en: Data Sharing as a final stage permits ensuring a system from A to Z that considers
    practical and operational considerations, even in academia or R&D actions where
    production phases can be overlooked.
  id: totrans-417
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据共享作为最终阶段，允许确保一个从A到Z的系统，考虑实际和操作性的因素，即使在学术界或研发活动中，生产阶段也可能被忽视。
- en: '![](../Images/9d299f0b910437eb61e9167de8868a19.png)'
  id: totrans-418
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9d299f0b910437eb61e9167de8868a19.png)'
- en: As I conclude this guide, I cannot help but be thrilled about the future of
    3D data processing. Currently, with Python’s versatility and the growing landscape
    of geospatial technologies, we have a large opening for new ways to better understand
    complex spatial phenomena (and act on them).
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 在结束本指南时，我无法不对3D数据处理的未来感到兴奋。目前，凭借Python的多功能性和不断增长的地理空间技术，我们有了更多的机会来更好地理解复杂的空间现象（并对此采取行动）。
- en: Therefore, you can expect an even deeper guide to efficient algorithms, innovative
    visualization techniques, and seamless integration with cutting-edge technologies.
    By exploring what we can accomplish with integrated 3D data workflows, we pave
    the way for new applications, some of which coming soon to your laps. This makes
    me say that you are on a good track to shape the future of spatial analysis and
    visualization, transforming how we perceive and interact with the world around
    us.
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，您可以期待更深入的高效算法、创新可视化技术和与前沿技术无缝集成的指南。通过探索我们能够利用集成的3D数据工作流完成的任务，我们为新应用铺平了道路，其中一些应用很快就会到来。这使我说，您正走在塑造空间分析和可视化未来的正确轨道上，改变我们感知和互动的方式。
- en: References
  id: totrans-421
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: Cárdenas, Ivan L., Morales, Luis Rodrigoandrés, **Koeva**, Mila, Atun, Funda,
    & Pfeffer, Karin. (2023, August 31). Digital Twins for Physiological Equivalent
    Temperature Calculation Guide. Zenodo. [https://doi.org/10.5281/zenodo.83064562.](https://doi.org/10.5281/zenodo.83064562.)
  id: totrans-422
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Cárdenas, Ivan L., Morales, Luis Rodrigoandrés, **Koeva**, Mila, Atun, Funda,
    & Pfeffer, Karin. (2023年8月31日). 《用于生理等效温度计算的数字双胞胎指南》。Zenodo. [https://doi.org/10.5281/zenodo.83064562.](https://doi.org/10.5281/zenodo.83064562.)
- en: 'Kumalasari, D.; **Koeva**, M.; Vahdatikhaki, F.; Petrova Antonova, D.; Kuffer,
    M. Planning Walkable Cities: Generative Design Approach towards Digital Twin Implementation.
    Remote Sens. 2023, 15, 1088\. [https://doi.org/10.3390/rs150410883.](https://doi.org/10.3390/rs150410883.)'
  id: totrans-423
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Kumalasari, D.; **Koeva**, M.; Vahdatikhaki, F.; Petrova Antonova, D.; Kuffer,
    M. 《规划可步行城市：面向数字双胞胎实施的生成设计方法》。遥感. 2023, 15, 1088\. [https://doi.org/10.3390/rs150410883.](https://doi.org/10.3390/rs150410883.)
- en: Rajan, V.; **Koeva**, M.; Kuffer, M.; Da Silva Mano, A.; Mishra, S. Three-Dimensional
    Modelling of Past and Present Shahjahanabadthrough Multi-Temporal Remotely Sensed
    Data. Remote Sens. 2023, 15, 2924\. [https://doi.org/10.3390/rs151129244.](https://doi.org/10.3390/rs151129244.)
  id: totrans-424
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Rajan, V.; **Koeva**, M.; Kuffer, M.; Da Silva Mano, A.; Mishra, S. 《通过多时相遥感数据对过去和现在的沙贾汉纳巴德进行三维建模》。遥感.
    2023, 15, 2924\. [https://doi.org/10.3390/rs151129244.](https://doi.org/10.3390/rs151129244.)
- en: Ying, Y.; **Koeva**, M.; Kuffer, M.; Zevenbergen, J. Toward 3D Property Valuation
    — A Review of Urban 3D Modelling Methods for Digital Twin Creation. ISPRS Int.
    J. Geo-Inf. 2023, 12, 2\. [https://doi.org/10.3390/ijgi120100025.](https://doi.org/10.3390/ijgi120100025.)
  id: totrans-425
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Ying, Y.; **科娃**，M.; Kuffer, M.; Zevenbergen, J. 关于三维属性估值——城市三维建模方法在数字孪生创建中的综述。《国际地理信息科学期刊》，2023，12，2\.
    [https://doi.org/10.3390/ijgi120100025.](https://doi.org/10.3390/ijgi120100025.)
- en: 'La Guardia, M.; **Koeva**, M. Towards Digital Twinning on the Web: Heterogeneous
    3D Data Fusion Based on Open-Source Structure.Remote Sens. 2023, 15, 721\. [https://doi.org/10.3390/rs150307216.](https://doi.org/10.3390/rs150307216.)'
  id: totrans-426
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: La Guardia, M.; **科娃**，M. 朝向网络上的数字孪生：基于开源结构的异构三维数据融合。《遥感》，2023，15，721\. [https://doi.org/10.3390/rs150307216.](https://doi.org/10.3390/rs150307216.)
- en: 'Khawte, S. S., **Koeva**, M. N., Gevaert, C. M., Oude Elberink, S., and Pedro,
    A. A.: Digital Twin Creation For Slums In Brazil Based OnUAV Data, Int. Arch.
    Photogramm. Remote Sens. Spatial Inf. Sci., XLVIII-4/W4–2022, 75–81, [https://doi.org/10.5194/isprs-archives-XLVIII-4-W4-2022-75-2022,](https://doi.org/10.5194/isprs-archives-XLVIII-4-W4-2022-75-2022,)
    2022'
  id: totrans-427
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Khawte, S. S., **科娃**，M. N., Gevaert, C. M., Oude Elberink, S., 和 Pedro, A.
    A.：基于无人机数据的巴西贫民窟数字孪生创建，《国际摄影测量与遥感档案》，XLVIII-4/W4–2022，75–81，[https://doi.org/10.5194/isprs-archives-XLVIII-4-W4-2022-75-2022,](https://doi.org/10.5194/isprs-archives-XLVIII-4-W4-2022-75-2022,)
    2022
