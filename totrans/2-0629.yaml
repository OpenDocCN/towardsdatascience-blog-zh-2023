- en: Data Analyst Guide to Data Cleaning
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/data-analyst-guide-to-data-cleaning-6409159ebf3](https://towardsdatascience.com/data-analyst-guide-to-data-cleaning-6409159ebf3)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: How to approach cleaning different types of data
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://madfordata.medium.com/?source=post_page-----6409159ebf3--------------------------------)[![Vicky
    Yu](../Images/54a32f45ebd13a18811912877f60f2f7.png)](https://madfordata.medium.com/?source=post_page-----6409159ebf3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----6409159ebf3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----6409159ebf3--------------------------------)
    [Vicky Yu](https://madfordata.medium.com/?source=post_page-----6409159ebf3--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----6409159ebf3--------------------------------)
    ·6 min read·Aug 4, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/07a0be03e19ccd76543c5e5b692bc784.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
- en: Image by [Janeke88](https://pixabay.com/users/janeke88-975535/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=880462)
    from [Pixabay](https://pixabay.com//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=880462)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: Although there are many resources to learn technical skills, there are few that
    go in-depth on how to clean data — an essential skill needed for data analysts.
    You may think you can apply the same set of rules to clean data but that’s not
    always the case. Today I’d like to share what I’ve learned over the years as a
    data analyst on how to approach cleaning different types of data for data analysis
    and reporting.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: Numeric Values
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: By numeric values, I mean those useful for data analysis and reporting. A good
    rule of thumb is if the average would be useful. For example, the average of a
    numeric order number field is meaningless. However, the average revenue amount
    is useful.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '**Numbers Stored as Numeric Fields**'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: 'For numbers saved in numeric fields apply the following cleaning rules:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: Calculate the ***minimum***, ***maximum***, ***median***, ***99th percentil***e,
    and ***average***. If the ***minimum*** is negative but values should be zero
    or higher, replace them with zero if applicable. In the sample sales data below,
    notice the large difference between the ***median*** of **$800** in **row 13**
    and the ***average*** of **$20,560** in **row 12**. If the median and average
    or the maximum and the 99th percentile have big differences, I typically check
    for outliers especially if I’m unfamiliar with the data. If you were to report
    average sales including the $100,000 in row 4, it would be $20,560 instead of
    $560 if you excluded the $100,000\. This is why it’s good to check for outliers
    and exclude them especially if you plan to report averages or use the data to
    build machine learning models as outliers can affect model results. Prioritize
    your time accordingly on the most important fields because you may have dozens
    to check and it would be too time-consuming to review all of them.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../Images/e719daf0612f9ec95762414163e89177.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
- en: Sample data created by author
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Count missing and non-missing values. If the number of missing outnumber
    the non-missing, then the numeric field may not be usable in your analysis. For
    example, if you have 1,000 records but 900 of them are missing then the 100 non-missing
    values probably won’t be useful in your analysis. If the count of missing is less
    than the non-missing, then replace missing with zero when applicable. If missing
    means a value besides zero, replace it with a value you deem more appropriate
    such as the median or average assuming you’ve removed the outliers. For example,
    I once had a day of missing [DAU](https://baremetrics.com/academy/daily-active-user)
    ( daily active user ) data. Since DAU varied depending on the time of year, I
    took the average of the prior 7 days to replace the missing day’s DAU.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '**Numbers Stored As String Fields**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: Numeric values can be loaded into a database as a string value because they
    contain characters that need to be removed before they can be converted to a number.
    To identify these kinds of string fields, the rule of thumb again is to ask if
    the average would be useful.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: Examples of these kinds of string values are sales amounts with the currency
    such as $100.55 or numbers containing commas such as 1,000\. In these instances,
    you would remove the character value, i.e. delete the currency sign to convert
    to 100.55 and comma to convert to 1000, and then transform the string value into
    a number. After the string values are converted to numeric, apply the data cleaning
    rules noted above for numbers saved as numeric fields.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: '**String Values**'
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For string value fields, apply the following cleaning rules:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: Check for duplicates by the [primary key](https://www.techopedia.com/definition/5547/primary-key)
    in the table. Primary keys are typically unique identifiers such as customer ID
    or a combination of fields that make the row unique in a table. When running a
    data analysis you want to ensure there are no duplicates in your data sources
    because this can cause you to report incorrect numbers.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按表中的 [主键](https://www.techopedia.com/definition/5547/primary-key) 检查重复项。主键通常是唯一标识符，如客户
    ID 或使行在表中唯一的字段组合。在进行数据分析时，您需要确保数据源中没有重复项，因为这可能导致报告错误的数字。
- en: Count the number of [null](https://www.w3schools.com/sql/sql_null_values.asp)
    and non-null values. Determine if null values can be replaced with a string value.
    Sometimes I replace null values with ‘N/A’ or ‘None’ for reporting purposes but
    it depends on your requirements.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算 [空值](https://www.w3schools.com/sql/sql_null_values.asp) 和非空值的数量。确定是否可以用字符串值替换空值。有时我会将空值替换为‘N/A’或‘None’以用于报告，但这取决于您的要求。
- en: Count the number of rows for each unique string value and sort by descending
    row count. Look for string values with the same meaning and change them to be
    the same value.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算每个唯一字符串值的行数，并按降序排列。查找具有相同含义的字符串值，并将其更改为相同的值。
- en: In the sample SQL query below in rows 1 to 7, I count the number of rows for
    each ***item_name*** value and sort by descending count. Since you may have hundreds
    of unique string values, focus on unique values with the highest row count and
    clean those first because changing values with a few rows will take too much time
    and probably won’t impact the results of your analysis.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的示例 SQL 查询中，第 1 到第 7 行，我计算了每个***item_name*** 值的行数，并按降序排列。由于可能有数百个唯一的字符串值，因此要集中处理行数最多的唯一值，优先清理这些，因为更改行数较少的值会花费过多时间，并且可能不会影响分析结果。
- en: The SQL results in rows 1 to 3 show an ***item_count*** of 33 for ***apples***
    , 19 for ***apple***, and 17 for ***Apples***. ***Apples***, ***apple***, and
    ***apples*** can be changed to ***apple***. Rows 4 and 5 with ***strawberries***
    and ***strawberry*** can be changed to ***strawberry***. After data cleaning,
    the ***item_count*** shown in rows 1 to 2 have 69 for ***apple*** and 26 for ***strawberry***.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: SQL 结果第 1 到第 3 行显示，***item_count*** 为 33 的 ***apples***，19 的 ***apple*** 和 17
    的 ***Apples***。可以将 ***Apples***、***apple*** 和 ***apples*** 更改为 ***apple***。第 4
    行和第 5 行中的 ***strawberries*** 和 ***strawberry*** 可以更改为 ***strawberry***。数据清理后，第
    1 行和第 2 行显示的 ***item_count*** 为 ***apple*** 69 和 ***strawberry*** 26。
- en: '![](../Images/8865c7fa7198def36b46be3027cd618b.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8865c7fa7198def36b46be3027cd618b.png)'
- en: Screenshot of unique item_name value counts before cleaning created by author
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 作者创建的清理前唯一 item_name 值计数的截图
- en: '![](../Images/f7238f01b61f5580472eb10f81609a4b.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f7238f01b61f5580472eb10f81609a4b.png)'
- en: Screenshot of unique item_name value counts after cleaning created by author
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 作者创建的清理后唯一 item_name 值计数的截图
- en: 4\. Search and remove special characters as needed. This is common in non-English
    text or free-form text where tab and carriage returns may be part of the text
    that’s loaded into the database. Most string fields don’t contain special characters
    but if you get no rows returned when querying for a particular string value, special
    characters may be the cause.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索并根据需要移除特殊字符。这在非英语文本或自由格式文本中很常见，其中制表符和回车符可能是加载到数据库中的文本的一部分。大多数字符串字段不包含特殊字符，但如果在查询特定字符串值时没有返回任何行，则特殊字符可能是原因。
- en: 5\. Date or datetime values can be loaded as string values. Confirm the date
    values are the same date format in the field and convert it to a date or datetime
    field as applicable to allow date functions to be used.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 日期或日期时间值可以作为字符串值加载。确认字段中的日期值格式相同，并根据需要将其转换为日期或日期时间字段，以便可以使用日期函数。
- en: Date and Datetime Values
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 日期和日期时间值
- en: 'Apply the following data cleaning rules for tables with date or datetime fields:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 对具有日期或日期时间字段的表应用以下数据清理规则：
- en: Check for duplicates in tables where there should only be one row per date or
    a combination of the date and other fields that make the row unique. For example,
    a daily active user ( DAU ) table is the count of distinct active users per day
    and should only have one row per date. Another example is revenue by country where
    the date and country combined make the row unique in the revenue table. I once
    inherited an ETL job that didn’t remove the data from the same date it was updating.
    I accidentally re-ran the job for the same date and introduced duplicates in the
    revenue table. I realized this only because I ran the duplicate check or I would’ve
    overreported revenue to my stakeholders.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When joining multiple tables with datetime values, confirm datetime values are
    in the same timezone. I once had to create a report to show the number of user
    upgrades 24 hours after an email was sent. The email table datetime was in CST
    ( Central Time ) but the upgrade table datetime was in UTC ( Coordinated Universal
    Time ). UTC is 5 hours ahead of CST. If I had just checked 24 hours from the email
    sent datetime in CST I would’ve missed 5 hours of users that upgraded after the
    email was sent. Fortunately, most databases have a SQL function called CONVERT_TIMEZONE
    to convert a datetime to different timezones. Check your database documentation
    to confirm.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Final Thoughts
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: While data cleaning is not the most favorite task for data analysts including
    myself, I hope the approaches I’ve covered will help you the next time you need
    to clean data for a project. Happy data cleaning!
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: '*Note: All SQL queries above were run on* [*BigQuery sandbox*](https://cloud.google.com/bigquery/docs/sandbox)
    *that’s free to anyone with a Google account.*'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: You might also like…
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](/data-cleaning-the-unsexy-side-of-data-science-680fedabcb20?source=post_page-----6409159ebf3--------------------------------)
    [## Data Cleaning: The Unsexy Side of Data Science'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: An in-depth look at a real-life example
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/data-cleaning-the-unsexy-side-of-data-science-680fedabcb20?source=post_page-----6409159ebf3--------------------------------)
    [](/bigquery-functions-for-data-cleaning-4b96181fbc3?source=post_page-----6409159ebf3--------------------------------)
    [## BigQuery SQL Functions For Data Cleaning
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: Use cases and functions to apply
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/bigquery-functions-for-data-cleaning-4b96181fbc3?source=post_page-----6409159ebf3--------------------------------)
    [](/what-you-dont-learn-about-data-in-school-2bf872ceda47?source=post_page-----6409159ebf3--------------------------------)
    [## What You Don’t Learn About Data in School
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: How to get usable results with imperfect data
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/what-you-dont-learn-about-data-in-school-2bf872ceda47?source=post_page-----6409159ebf3--------------------------------)
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
