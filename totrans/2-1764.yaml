- en: Raise Awareness about Climate Change with ggplot2
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/raise-awareness-about-climate-change-with-ggplot2-f31f0cae3c70](https://towardsdatascience.com/raise-awareness-about-climate-change-with-ggplot2-f31f0cae3c70)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Learn to plot historical weather data effectively
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@bruno.ponne?source=post_page-----f31f0cae3c70--------------------------------)[![Bruno
    Ponne](../Images/991b4b721c13ed0b6ceaaa1fac81a007.png)](https://medium.com/@bruno.ponne?source=post_page-----f31f0cae3c70--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f31f0cae3c70--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f31f0cae3c70--------------------------------)
    [Bruno Ponne](https://medium.com/@bruno.ponne?source=post_page-----f31f0cae3c70--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----f31f0cae3c70--------------------------------)
    ·8 min read·Apr 17, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d86afa77c46a5339549a91a1b29e3063.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
- en: Photo by [Ganapathy Kumar](https://unsplash.com/@gkumar2175?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: Global warming isn’t a prediction. It is happening.
  id: totrans-8
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*James Hansen*'
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: There is solid evidence that temperatures are rising on our planet. With climate
    change threatening the very existence of humanity, efforts to understand, research,
    and foster awareness of this critical issue are more crucial than ever before.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: Whether you are a student, work for the government, a non-governmental organization,
    or a private company, it is essential that you show your colleagues your engagement
    on relevant global problems.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: 'In this tutorial, you will learn where to find reliable and curated historical
    temperature data and visualize it with ggplot2\. After you finish this post, you
    will:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: know where to find curated datasets with historical weather data;
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: feel comfortable plotting historical weather data with ggplot2;
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: be able to customize your ggplot2 graphs to tell your story.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Step 1: Find and load the data'
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Data for this tutorial is available on [**National Centers for Environmental
    Information (NCEI)**](https://www.ncei.noaa.gov/access/search/data-search/global-summary-of-the-year)***.**
    The NCEI is the leading authority for environmental data in the USA and provides
    high-quality data about climate, ecosystems, and water resources. The Global Summary
    of the Year (GSOY) dataset offers historical weather data by city and station.
    For this tutorial, we will use data from Berkeley, CA. You can choose your preferred
    city if you wish. To use the same dataset of this tutorial, search for Berkeley
    and choose the file that contains data since 1893.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: The file will be loaded with `read_csv`. The only argument is the file path.
    Directly after loading the data frame, we select only the `DATE`and `TAVG`variables.
    `DATE` contains the year the temperature was observed and `TAVG` is the average
    annual temperature given in Celcius. To know more about the available variables,
    please consult the [**dataset codebook**](https://www.ncei.noaa.gov/pub/data/metadata/documents/GSOYReadme.txt).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The R `summary()` function tells us that the data range from 1893 to 2019 and
    that the minimal average annual temperature observed was 12.9 ºC in Berkeley,
    CA, in this period. The maximum average temperature was 15.93 ºC. It also shows
    that there are 33 missing temperatures.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 2: Imputing missing values with na_interpolation()'
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Given that we are working with time series, we will fill in missing values with
    linear interpolation. This method assumes data varied linearly during the missing
    period. Actually, when you plot a time series using a line plot, the intervals
    between observations are also filled in with a straight line connecting the two
    dots.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: To perform linear interpolation, we will use the [*imputeTS* package](https://cran.r-project.org/web/packages/imputeTS/imputeTS.pdf).
    After installing and loading the library, you can use `na_interpolation()`to fill
    in the missing values. You pass two arguments to it. First, the data frame column
    you would like to treat, and, second, the method you wish to use to perform the
    imputation.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Step 3: Coding the first version of our plot'
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A ggplot2 visualization is built of layers. As shown in the figure below, each
    layer contains one *geom* object, that is, one element that you see in your graph
    (lines and dots, for instance).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/52c17ab2f104c9ea2ff3fd9d21e275a2.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
- en: Image created by the author
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: First, you need to pass a dataset to the `ggplot()`function. Second, you will
    map variables to aesthetics — visual properties of a *geom* object. Aesthetics
    are the position on the y-axis, the position on the x-axis, color, or size, for
    instance. Below we also set the black and white ggplot2 theme for our plot. Without
    adding any other *geom* objects, the plot will have only the two axes.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/cc2b9df2fe6881c808943c02b4fd7f6a.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
- en: Image created by the author
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: Now you may add a second layer with dots indicating temperatures throughout
    time. **Note** that you can add this layer to the plot you made in the previous
    step using the “+” sign.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/b979c9d4affa47ecfa33230b38664963.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
- en: Image created by the author
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: Finally, you may add a third layer containing the lines. It is important to
    highlight that some authors claim that the lines do not represent observed data
    and should be used carefully. For a complete discussion, please check [**chapter
    13 of *Fundamentals of Data Visualization***](https://clauswilke.com/dataviz/time-series.html)
    by Claus O. Wilke.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/65306044738ded06750722d81b7f5114.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
- en: Image created by the author
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 4: Customizing your plot'
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this section, you will learn how to customize your plot to make it clear,
    informative, and beautiful.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: First, to make the increase in temperature more visible, we will map the color
    aesthetic of the dots to `TAVG` as well. Since it is a numeric variable, ggplot2
    will use a gradient to represent continuous values as colors. You can choose which
    color will represent low temperatures as well as high temperatures with the `scale_color_gradient()`function.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, you may set the x and y axes’ labels with `xlab()` and `ylab()`, respectively.
    A title can be added with `ggtitle()`. We will also increase the size of the dots
    and add transparency to make overlapped data visible.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: '[Edward Tufte](https://politicalscience.yale.edu/people/edward-tufte), an expert
    in the field of data visualization, recommends maximizing the proportion of ink
    used to display non-redundant data. The author claims that it makes your plot
    clearer and avoids distracting your reader.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: The ggplot2 theme we are using, `theme_bw()`, is already in line with Tufte’s
    recommendations, but we could still eliminate the panel grids of the plot. In
    order to achieve that, use the `theme()` function and pass two arguments to it,
    `panel.grid.minor = element_blank()`and `panel.grid.major = element_blank()`.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/dca5820e4e58480057f607a7bec2d3ff.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
- en: Image created by the author
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 5: Create a theme for your visualization'
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You will now learn how to create your own ggplot2 theme. As an example, we will
    create`theme_tds()`.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: First, we will load the Google font “Source Serif Pro”. It is the font used
    in Medium articles. You can easily load it with the `showtext` package. If you
    do not have it, please install it. Once you have the package installed, load it
    and use the `font_add_google()` function to load “Source Serif Pro”. We also tell
    R to render text using `showtext`with `showtext_auto().`
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Note** that some authors recommend only using **sans-serif** fonts in plots.
    Check out [this post](https://blog.datawrapper.de/fonts-for-data-visualization/#:~:text=For%20data%20visualizations%2C%20sans%2Dserif,when%20it%20comes%20to%20numbers.)
    for a discussion on this issue.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: Now we will use `theme()` to customize the graph. The figure below shows some
    of the arguments you can use. For a complete list, please check this [ggplot2
    reference](https://ggplot2.tidyverse.org/reference/theme.html).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/bcad87a1914fd15817a3b53f74c5357d.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
- en: Image created by the author
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: You may create a new theme with a function that calls the ggplot2 `theme()`
    function containing your customized specifications. **Note** that we start from
    the black-and-white theme(`theme_bw`) and then eliminate grids and change the
    background, panel, and text colors. To facilitate future changes, two arguments
    were created for the user to specify the desired text, panel, and background colors.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now you can simply add `theme_tds()` to your plot and specify your preferred
    colors. Here is an example:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/34a0f5048b3c5c4dd733399fb7c72be8.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/34a0f5048b3c5c4dd733399fb7c72be8.png)'
- en: Image created by the author
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者创建
- en: 'Another example with white background and the font color of Towards Data Science:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个例子，背景为白色，字体颜色为 Towards Data Science：
- en: '[PRE7]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../Images/b7b7eac5667dae2a227e717e0cf2fe7a.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b7b7eac5667dae2a227e717e0cf2fe7a.png)'
- en: Image created by the author
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者创建
- en: Finally, you could show the temperature trend with a LOESS (locally estimated
    scatterplot smoothing) smoother, as recommended by Claus O. Wilke in [Chapter
    14 of Fundamentals of Data Visualization](https://clauswilke.com/dataviz/visualizing-trends.html).
    You can do that by adding a ggplot2 layer containing the element `geom_smooth()`.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你可以使用 LOESS（局部回归散点平滑）平滑器来展示温度趋势，正如 Claus O. Wilke 在[《数据可视化基础》第14章](https://clauswilke.com/dataviz/visualizing-trends.html)中推荐的那样。你可以通过添加一个包含元素
    `geom_smooth()` 的 ggplot2 图层来实现。
- en: '[PRE8]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](../Images/fdf088e8d899a34055d6ff475b30557a.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fdf088e8d899a34055d6ff475b30557a.png)'
- en: Image created by the author
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者创建
- en: Conclusion
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: ggplot2 is a powerful R library that allows you to create and customize compelling
    visualizations. In this article, you learned to use it to create a plot that raises
    awareness about global warming with reliable data available on the [NCEI website](https://www.ncei.noaa.gov/).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: ggplot2 是一个强大的 R 库，允许你创建和自定义引人入胜的可视化。在本文中，你学会了如何使用它创建一个图表，以提高对全球变暖的认识，并使用了来自[NCEI
    网站](https://www.ncei.noaa.gov/)的可靠数据。
- en: 'If you are interested in more ways to study and visualize climate data, check
    out this post where I relate carbon emissions and air temperatures with regression
    analysis: [R programming for climate data analysis and visualization.](https://www.codingthepast.com/2023/02/07/Linear-Models-in-R.html)'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对研究和可视化气候数据的更多方法感兴趣，可以查看这篇文章，其中我通过回归分析关联了碳排放和空气温度：[R 编程在气候数据分析和可视化中的应用](https://www.codingthepast.com/2023/02/07/Linear-Models-in-R.html)
- en: I hope this post can give you new perspectives on how to visualize data, making
    your plots more effective and compelling.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望这篇文章能为你提供新的数据可视化视角，使你的图表更具效果和吸引力。
- en: '***Dataset Terms of Use**'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '***数据集使用条款**'
- en: According to the National Oceanic and Atmospheric Administration's (NOAA) [website](https://www.ngdc.noaa.gov/ngdcinfo/privacy.html),
    “the information on government web pages is in the public domain and not subject
    to copyright protection within the United States unless specifically annotated
    otherwise (copyright may be held elsewhere).”
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 根据国家海洋和大气管理局（NOAA）的[网站](https://www.ngdc.noaa.gov/ngdcinfo/privacy.html)，“政府网页上的信息属于公共领域，在美国不受版权保护，除非另有特别说明（版权可能在其他地方持有）。”
