- en: Simple tool to foster connection among employees
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 促进员工之间联系的简单工具
- en: 原文：[https://towardsdatascience.com/simple-tool-to-foster-connection-among-employees-82ef5c1353f5](https://towardsdatascience.com/simple-tool-to-foster-connection-among-employees-82ef5c1353f5)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/simple-tool-to-foster-connection-among-employees-82ef5c1353f5](https://towardsdatascience.com/simple-tool-to-foster-connection-among-employees-82ef5c1353f5)
- en: Office hour
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 办公时间
- en: Building a happy and connected team with the help of Python
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 利用 Python 构建一个快乐而紧密的团队
- en: '[](https://zluvsand.medium.com/?source=post_page-----82ef5c1353f5--------------------------------)[![Zolzaya
    Luvsandorj](../Images/dd3bb91f8625a6fbe8fd26e56036ad29.png)](https://zluvsand.medium.com/?source=post_page-----82ef5c1353f5--------------------------------)[](https://towardsdatascience.com/?source=post_page-----82ef5c1353f5--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----82ef5c1353f5--------------------------------)
    [Zolzaya Luvsandorj](https://zluvsand.medium.com/?source=post_page-----82ef5c1353f5--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://zluvsand.medium.com/?source=post_page-----82ef5c1353f5--------------------------------)[![Zolzaya
    Luvsandorj](../Images/dd3bb91f8625a6fbe8fd26e56036ad29.png)](https://zluvsand.medium.com/?source=post_page-----82ef5c1353f5--------------------------------)[](https://towardsdatascience.com/?source=post_page-----82ef5c1353f5--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----82ef5c1353f5--------------------------------)
    [Zolzaya Luvsandorj](https://zluvsand.medium.com/?source=post_page-----82ef5c1353f5--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----82ef5c1353f5--------------------------------)
    ·6 min read·Feb 1, 2023
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----82ef5c1353f5--------------------------------)
    ·6 分钟阅读·2023年2月1日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: One positive thing COVID-19 facilitated was to push more companies adopt flexible
    working arrangements. This adoption meant more of us can continue working from
    home even when lockdowns are over. While this flexibility is awesome in so many
    ways, one potential downside is that you can’t bump into people like you would
    normally in office and have those casual spontaneous conversations which help
    build better rapport with colleagues and make you feel part of a team. In this
    post, I share one simple idea leveraging a little bit of programming skills to
    spark these conversations when not everyone is in office.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: COVID-19 促进了一个积极的变化，那就是推动更多公司采用灵活的工作安排。这种采用意味着我们中的更多人即使在封锁结束后也能继续在家工作。虽然这种灵活性在许多方面都很棒，但一个潜在的缺点是，你不能像在办公室那样随意碰到同事，并进行那些随意的自发对话，这有助于建立更好的同事关系并让你感受到团队的一部分。在这篇文章中，我分享了一个利用一点编程技能来激发这些对话的简单想法，当不是所有人都在办公室时可以用得上。
- en: '![](../Images/6d60419e5a151baddb56d551a7c55fd9.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6d60419e5a151baddb56d551a7c55fd9.png)'
- en: Photo by [Toa Heftiba](https://unsplash.com/@heftiba?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Toa Heftiba](https://unsplash.com/@heftiba?utm_source=medium&utm_medium=referral)
    在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: 💡 The idea
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 💡 想法
- en: 'So the idea is simple: On a regular basis, we randomly match groups of colleagues
    and encourage them to have casual conversations within the group. For instance,
    we randomly split all colleagues into group of 3 every week, assign one of them
    as the meeting organiser to book a 25-minute session in their calendar and encourage
    them to attend this session to catch up with each other. Or it can be a fortnightly
    walking catch ups among pairs as an initiative to look after wellbeing. This basic
    idea can be further adjusted and customised freely to suit the company culture.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这个想法很简单：我们定期随机匹配同事组，并鼓励他们在小组内进行随意对话。例如，我们每周随机将所有同事分成 3 人一组，指定其中一人作为会议组织者，在他们的日历中预定一个
    25 分钟的会话，并鼓励他们参加这个会话以便彼此沟通。或者可以是每两周进行一次的步行交流，以此作为关心健康的举措。这个基本想法可以进一步调整和自由定制，以适应公司文化。
- en: My current company organises one every week where we have weekly coffee catch
    ups with one another person either virtually or in-person. I have also heard of
    other companies that were organising bigger groups to have weekly coffee together
    in a nearby café even before COVID-19\. So this idea can be helpful in fostering
    connections even if everyone is in office too!
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我所在的公司每周组织一次，我们每周都会与另一位同事进行虚拟或面对面的咖啡交流。我还听说过其他公司在 COVID-19 之前就已经组织了较大的小组在附近的咖啡馆一起喝咖啡。因此，即使每个人都在办公室，这个想法也可以帮助促进联系！
- en: In the remainder of the post, we will look at Python starter code on how to
    create random matches under simple constraints. We will start by looking at pairs
    then extend the code to suit different group size. Although the example is in
    Python, the idea can be translated to other languages too.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章的剩余部分，我们将查看如何在简单约束下创建随机匹配的Python初始代码。我们将从对开始，然后扩展代码以适应不同的组大小。虽然示例是用Python编写的，但这个想法也可以转换到其他语言中。
- en: 📦 Dataset
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 📦 数据集
- en: In this example, we will assume we want to organise this team building initiative
    for the entire company with 100 employees. Depending on the size and structure
    of the company, this activity can involve all colleagues across the organisation
    or colleagues in specific departments.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们假设我们想为整个公司（100名员工）组织这项团队建设活动。根据公司的规模和结构，这项活动可以涉及整个组织中的所有同事，或特定部门的同事。
- en: We will start by importing libraries and creating a synthetic dataset of 100
    employees. It’s common to have regular catch ups with your managers or direct
    reports, so we will add add a simple constraint to not match managers and their
    direct reports together since they have enough interactions anyway. So we will
    assign managers to employees.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从导入库和创建一个包含100名员工的合成数据集开始。与经理或直接下属进行定期沟通是很常见的，因此我们将添加一个简单的约束，避免将经理和他们的直接下属配对，因为他们之间的互动已经足够多。因此，我们将经理分配给员工。
- en: '![](../Images/7e8c5f9669b5128bd363914eb6a25737.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7e8c5f9669b5128bd363914eb6a25737.png)'
- en: Awesome, we will now initialise a dataframe to hold history.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了，我们现在将初始化一个数据框来保存历史记录。
- en: '![](../Images/e61a56981ed8368c43b753ab60c62dcf.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e61a56981ed8368c43b753ab60c62dcf.png)'
- en: Tracking history of matches will be useful to ensure that the same pairs are
    not matched again too soon. This way, everyone gets an opportunity to interact
    with as many different people as possible. To do that, we will use history of
    matches as additional constraints after first match.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 跟踪匹配历史将有助于确保相同的配对不会过快地再次匹配。这样，每个人都能有机会与尽可能多的不同人互动。为此，我们将在第一次匹配后使用匹配历史作为额外约束条件。
- en: 🌸 Pairs
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 🌸 对
- en: 'We will start with the simplest form, a pair: a group of two. Let’s build a
    `Matcher` object that find matches of two under the following constraints:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从最简单的形式开始，一个对：两个组成的组。让我们构建一个`Matcher`对象，寻找在以下约束条件下的两人匹配：
- en: ◼️ Exclude colleague’s direct report or manager
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: ◼️ 排除同事的直接下属或经理
- en: ◼️ Exclude those who were matched to a colleague in the past 10 matches
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: ◼️ 排除过去10次匹配中与同事匹配的人员
- en: '![](../Images/4ce2283328856d2b0efd90fd989390cb.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4ce2283328856d2b0efd90fd989390cb.png)'
- en: 'We just created our first match for 50 pairs. Let’s pick a sample employee:
    *‘Noah Rhodes’* and check his constraints:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚为50对创建了第一次匹配。让我们选择一个示例员工：*‘诺亚·罗德斯’* 并检查他的约束条件：
- en: '![](../Images/e3e172ed81fc882a8ea06e2fc13f85f6.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e3e172ed81fc882a8ea06e2fc13f85f6.png)'
- en: 'Since we haven’t done any matches, the constraint should only be based on his
    manager and direct reports. Let’s check this information in the employee dataset:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们还没有进行任何匹配，因此约束条件应仅基于他的经理和直接下属。让我们在员工数据集中检查这些信息：
- en: '![](../Images/e38dd8094ef7933a2d4aeb0f619fe689.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e38dd8094ef7933a2d4aeb0f619fe689.png)'
- en: 'Awesome, the constraints make sense. Let’s see who Noah get matched to:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了，约束条件很合理。让我们看看诺亚会匹配到谁：
- en: '![](../Images/e835adaed973a8dc1f3753baf2c33735.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e835adaed973a8dc1f3753baf2c33735.png)'
- en: 'This match satisfies the constraints. Now, we will do 5 more matches for the
    next 5 weeks and check if constraints are behaving as expected:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这个匹配符合约束条件。现在，我们将进行另外5次匹配，持续5周，并检查约束条件是否按预期工作：
- en: '![](../Images/346d8a805d3e085132cec141d97c2dd9.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/346d8a805d3e085132cec141d97c2dd9.png)'
- en: 'Let’s check Noah’s constraints again:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再次检查诺亚的约束条件：
- en: '![](../Images/5ca28769b0b0587494549c7fe0aca678.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5ca28769b0b0587494549c7fe0aca678.png)'
- en: 'We have a few new constraints. These new constraints should reflect historic
    matches. Let’s check that:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有几个新的约束条件。这些新的约束条件应该反映历史上的匹配。让我们检查一下：
- en: '![](../Images/76ab33b2f3840aac0f428907ecc5cd1a.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/76ab33b2f3840aac0f428907ecc5cd1a.png)'
- en: Cool, so the constraint is working as expected. It makes sense that *‘Brittney
    Phillips’* is not part of the constraint yet as this was the most recent match.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 很棒，所以约束条件按预期工作。*‘布里特妮·菲利普斯’* 不在约束条件中是有道理的，因为这是最近的一次匹配。
- en: 'Having done some checks, we will initialise the `Matcher` object again and
    run it for half a year:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 经过一些检查后，我们将再次初始化`Matcher`对象，并运行半年的时间：
- en: '![](../Images/e6272d3d8ad907cb45dc11b7f7603b0c.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e6272d3d8ad907cb45dc11b7f7603b0c.png)'
- en: 'We can see that in some instances there was trouble finding matches hence had
    to restart the random matching again. Currently, the `Matcher` is set such that
    if we have an odd number of employees, one person will be allocated a default
    value: *‘Go for a walk’* so that the person who couldn’t get a match get some
    exercise. This default value can be anything!'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到在一些情况下，找到匹配项时遇到困难，因此不得不重新开始随机匹配。目前，`Matcher`的设置是，如果我们有一个奇数个员工，一个人将被分配一个默认值：*‘去散步’*，这样那个没有找到匹配的人可以进行一些运动。这个默认值可以是任何东西！
- en: Having done a simpler version, let’s tweak the `Matcher` object such that it
    can cater different group size.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在做了一个简单版本之后，让我们调整`Matcher`对象，以便它可以处理不同的组大小。
- en: 🍀 Groups
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 🍀 组
- en: 'The following shows one way we can extend the code to be more flexible to suit
    different group size. While there are different ways to treat when the number
    of employees is not divisible by the group size, we have chosen one of the simpler
    options to pad with default values until the number of records become divisible.
    For instance, there is one odd person when we try to split 100 employees into
    groups of three. In this case, we will pad with a default value: *‘Go for a walk’*
    twice to make the number of records to 102, a number divisible by 3\. To prevent
    one person being matches to two default values, we can make sure that any group
    is one default value only using constraints. So these two smaller groups (i.e.
    pairs) can have a walking meeting or video call.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 以下展示了一种我们可以扩展代码以适应不同组大小的方式。虽然处理员工人数不能被组大小整除的情况有不同的方法，但我们选择了一种更简单的选项，通过填充默认值直到记录数量变为可整除的数字。例如，当我们尝试将100名员工分成3人一组时，会出现一个多余的人。在这种情况下，我们将用默认值：*‘去散步’*
    填充两次，将记录数增加到102，一个可以被3整除的数字。为了防止一个人被匹配到两个默认值，我们可以确保任何组只有一个默认值使用约束。因此，这两个较小的组（即对）可以进行步行会议或视频通话。
- en: '![](../Images/341f073c48d46693b7ad9b6edcd71042.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/341f073c48d46693b7ad9b6edcd71042.png)'
- en: Although we have selected a group of 3 in this example, the object can deal
    with higher numbers too.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管在这个示例中我们选择了一个3人的组，但该对象也可以处理更大的数字。
- en: Voila, that was it for this post! I hope this starter code is useful to build
    upon and save you time if you want to propose a version of this idea to implement
    in your organisation.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 好了，这就是本帖的全部内容！希望这段起始代码能为你提供帮助，节省时间，如果你想在你的组织中提出这个想法的版本来实现。
- en: '![](../Images/9f9bbdf73e97653c4d00e8d7d6ccbaab.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9f9bbdf73e97653c4d00e8d7d6ccbaab.png)'
- en: Photo by [Shaurya Sagar](https://unsplash.com/@shauryasagar?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Shaurya Sagar](https://unsplash.com/@shauryasagar?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: 'Thank you for reading this article. If you are interested, here are links to
    some of my other posts:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读本文。如果你感兴趣，这里有一些我其他帖子的链接：
- en: ◼️️ [From ML Model to ML Pipeline](/from-ml-model-to-ml-pipeline-9f95c32c6512)
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: ◼️️ [从ML模型到ML管道](/from-ml-model-to-ml-pipeline-9f95c32c6512)
- en: ◼️️ [Explaining Scikit-learn models with SHAP](/explaining-scikit-learn-models-with-shap-61daff21b12a)
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: ◼️️ [用SHAP解释Scikit-learn模型](/explaining-scikit-learn-models-with-shap-61daff21b12a)
- en: ◼️️ [4 simple tips for plotting multiple graphs in Python](/4-simple-tips-for-plotting-multiple-graphs-in-python-38df2112965c)
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: ◼️️ [Python中绘制多个图表的4个简单技巧](/4-simple-tips-for-plotting-multiple-graphs-in-python-38df2112965c)
- en: ◼️ [Prettifying pandas DataFrames](/prettifying-pandas-dataframes-75c1a1a6877d)
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: ◼️ [美化pandas DataFrames](/prettifying-pandas-dataframes-75c1a1a6877d)
- en: ◼ [Simple data visualisations in Python that you will find useful](/simple-data-visualisations-in-python-that-you-will-find-useful-5e42c92df51e)️
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: ◼ [你会发现有用的Python简单数据可视化](/simple-data-visualisations-in-python-that-you-will-find-useful-5e42c92df51e)️
- en: ◼️ [6 simple tips for prettier and customised plots in Seaborn (Python)](/6-simple-tips-for-prettier-and-customised-plots-in-seaborn-python-22f02ecc2393)
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: ◼️ [6个让Seaborn（Python）绘图更美观和个性化的简单技巧](/6-simple-tips-for-prettier-and-customised-plots-in-seaborn-python-22f02ecc2393)
- en: Bye for now 🏃 💨
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 再见了 🏃 💨
