- en: How to Write Pandas DataFrame to CSV File
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何将 Pandas DataFrame 写入 CSV 文件
- en: 原文：[https://towardsdatascience.com/pandas-to-csv-aab4ac27c455](https://towardsdatascience.com/pandas-to-csv-aab4ac27c455)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/pandas-to-csv-aab4ac27c455](https://towardsdatascience.com/pandas-to-csv-aab4ac27c455)
- en: Taking advantage of all the options available when writing pandas DataFrames
    into CSV files
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 利用将 pandas DataFrames 写入 CSV 文件时提供的所有选项
- en: '[](https://gmyrianthous.medium.com/?source=post_page-----aab4ac27c455--------------------------------)[![Giorgos
    Myrianthous](../Images/ff4b116e4fb9a095ce45eb064fde5af3.png)](https://gmyrianthous.medium.com/?source=post_page-----aab4ac27c455--------------------------------)[](https://towardsdatascience.com/?source=post_page-----aab4ac27c455--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----aab4ac27c455--------------------------------)
    [Giorgos Myrianthous](https://gmyrianthous.medium.com/?source=post_page-----aab4ac27c455--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://gmyrianthous.medium.com/?source=post_page-----aab4ac27c455--------------------------------)[![Giorgos
    Myrianthous](../Images/ff4b116e4fb9a095ce45eb064fde5af3.png)](https://gmyrianthous.medium.com/?source=post_page-----aab4ac27c455--------------------------------)[](https://towardsdatascience.com/?source=post_page-----aab4ac27c455--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----aab4ac27c455--------------------------------)
    [Giorgos Myrianthous](https://gmyrianthous.medium.com/?source=post_page-----aab4ac27c455--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----aab4ac27c455--------------------------------)
    ·5 min read·Jan 13, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----aab4ac27c455--------------------------------)
    ·阅读时间5分钟·2023年1月13日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/881b8b4f1e7bf014f76b61f5f78e7900.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/881b8b4f1e7bf014f76b61f5f78e7900.png)'
- en: Photo by [Hello I’m Nik](https://unsplash.com/fr/@helloimnik?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/l4ADb9OVqTY?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Hello I’m Nik](https://unsplash.com/fr/@helloimnik?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    提供，来源于 [Unsplash](https://unsplash.com/photos/l4ADb9OVqTY?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
- en: One very common task when working with pandas involves the export of a DataFrame
    into a CSV file.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 pandas 时，一个非常常见的任务是将 DataFrame 导出到 CSV 文件。
- en: In this article, we will be demonstrating how to write a pandas DataFrame into
    CSV files. Furthermore, we will also be showcasing how to use the various options
    of the pandas API in order to deal with missing values, datetime formatting, compression
    and really anything else you might need when it comes to persisting DataFrames
    in CSVs.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将演示如何将 pandas DataFrame 写入 CSV 文件。此外，我们还将展示如何使用 pandas API 的各种选项来处理缺失值、日期时间格式、压缩，以及处理
    CSV 文件中 DataFrame 时可能需要的其他功能。
- en: Now let’s create an example DataFrame that we will be using and referencing
    throughout this tutorial in order to demonstrate a few different options when
    it comes to exporting a pandas DataFrame into CSV files.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们创建一个示例 DataFrame，我们将在本教程中使用并引用它，以演示将 pandas DataFrame 导出为 CSV 文件的几种不同选项。
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Exporting a pandas DataFrame into a CSV file
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将 pandas DataFrame 导出为 CSV 文件
- en: 'In order to export a pandas DataFrame into `csv` all you need to do is call
    the `pandas.DataFrame.to_csv()` function and provide the output filename:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 要将 pandas DataFrame 导出为 `csv` 文件，你只需调用 `pandas.DataFrame.to_csv()` 函数并提供输出文件名：
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Output**'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Change the default separator
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更改默认分隔符
- en: 'If you’d like to change the default separator ( `,` ) then you need to provide
    the `sep` argument. The following example will persist the pandas DataFrame into
    a CSV file where the column values will be tab-delimited:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想更改默认分隔符（ `,` ），则需要提供 `sep` 参数。以下示例将 pandas DataFrame 持久化到一个 CSV 文件中，其中列值将使用制表符分隔：
- en: '[PRE3]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**Output**'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE4]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Excluding the index
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 排除索引
- en: 'In the previous examples, you may have noticed already that apart from the
    column names and values, the index is also persisted. If you would like to get
    rid of it, then simply provide `index=False` argument:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，你可能已经注意到，除了列名和数值外，索引也会被保留。如果你想去掉它，只需提供 `index=False` 参数：
- en: '[PRE5]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**Output**'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE6]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Remove the headers
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 移除标题
- en: Likewise, you can get rid of the headers (i.e. the column names) by passing
    `header=False`.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，你可以通过传递 `header=False` 来去掉标题（即列名）。
- en: '[PRE7]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '**Output**'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE8]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Writing only a subset of the columns
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 只写出一部分列
- en: 'Sometimes, you might want to export only a subset of columns from the DataFrame
    object. You can select which columns to persist by specifying them in the `columns`
    argument:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，你可能只想导出 DataFrame 对象中的一部分列。你可以通过在 `columns` 参数中指定所需的列来选择要持久化的列：
- en: '[PRE9]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '**Output**'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE10]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Specifying the format of datetime objects
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 指定日期时间对象的格式
- en: In our example DataFrame column `colD` is of type `datetime` and by default,
    it will be exported in a `YYYY-MM-DD` format. You can specify the desired date
    format in `date_format` argument.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的示例 DataFrame 中，列 `colD` 的类型为 `datetime`，默认情况下，它将以 `YYYY-MM-DD` 格式导出。你可以在
    `date_format` 参数中指定所需的日期格式。
- en: '[PRE11]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '**Output**'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE12]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: If you are interested in learning more on how to deal with datetime object foramts
    in Python you can read one of my recent articles, heres on Medium.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有兴趣了解更多关于如何处理 Python 中日期时间对象格式的内容，你可以阅读我最近在 Medium 上的一篇文章。
- en: '[](/datetime-format-pandas-541c661d41c2?source=post_page-----aab4ac27c455--------------------------------)
    [## How to Change the Datetime Format in Pandas'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/datetime-format-pandas-541c661d41c2?source=post_page-----aab4ac27c455--------------------------------)
    [## 如何更改 Pandas 中的日期时间格式'
- en: Working with datetimes in Python and pandas
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 Python 和 pandas 中处理日期时间
- en: towardsdatascience.com](/datetime-format-pandas-541c661d41c2?source=post_page-----aab4ac27c455--------------------------------)
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/datetime-format-pandas-541c661d41c2?source=post_page-----aab4ac27c455--------------------------------)
- en: Change the way NaN values are written to the csv file
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更改 NaN 值写入 CSV 文件的方式
- en: 'By default, `to_csv()` function will export missing values as empty characters.
    `na_rep` argument can be used to specify the desired output format of `NaN` values:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`to_csv()` 函数会将缺失值导出为空字符。`na_rep` 参数可以用来指定 `NaN` 值的所需输出格式：
- en: '[PRE13]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '**Output**'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE14]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Other Options
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他选项
- en: For large DataFrames you may need to compress the output in a `zip` format.
    To do so, you can specify the desired compression strategy in `compression` argument.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 对于大型 DataFrame，你可能需要将输出压缩为 `zip` 格式。为此，你可以在 `compression` 参数中指定所需的压缩策略。
- en: '[PRE15]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Some other alternative compression strategies are `'zip'`, `'gzip'`, `'bz2'`,
    `'zstd'`, `'tar'`.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 其他一些压缩策略包括 `'zip'`、`'gzip'`、`'bz2'`、`'zstd'`、`'tar'`。
- en: 'Finally, to change the file format encoding, you can take advantage of the
    `encoding` argument:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，要更改文件格式编码，你可以利用 `encoding` 参数：
- en: '[PRE16]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Final Thoughts
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 最后的思考
- en: In conclusion, this article has demonstrated the various options available when
    writing pandas DataFrames into CSV files. From changing the default separator,
    excluding the index, removing headers, writing only a subset of columns, specifying
    the format of datetime objects, and changing the way NaN values are written to
    the CSV file.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，本文展示了将 pandas DataFrame 写入 CSV 文件时的各种选项。从更改默认分隔符、排除索引、移除标题、仅写入部分列、指定日期时间对象的格式，到更改
    NaN 值写入 CSV 文件的方式。
- en: The pandas API provides a wide range of options to handle different scenarios
    when it comes to persisting DataFrames in CSV files. This makes it a powerful
    tool for data manipulation and analysis. With the knowledge provided in this article,
    you should be able to export your DataFrames to CSV files with ease and precision.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: pandas API 提供了多种选项来处理将 DataFrame 持久化到 CSV 文件中的不同场景。这使得它成为一个强大的数据处理和分析工具。根据本文提供的知识，你应该能够轻松而准确地将你的
    DataFrame 导出到 CSV 文件中。
- en: '[**Become a member**](https://gmyrianthous.medium.com/membership) **and read
    every story on Medium. Your membership fee directly supports me and other writers
    you read. You’ll also get full access to every story on Medium.**'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '[**成为会员**](https://gmyrianthous.medium.com/membership) **，阅读 Medium 上的每个故事。你的会员费用直接支持我和你阅读的其他作者。你还将获得对
    Medium 上每个故事的全面访问权限。**'
- en: '[](https://gmyrianthous.medium.com/membership?source=post_page-----aab4ac27c455--------------------------------)
    [## Join Medium with my referral link — Giorgos Myrianthous'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://gmyrianthous.medium.com/membership?source=post_page-----aab4ac27c455--------------------------------)
    [## 使用我的推荐链接加入 Medium — Giorgos Myrianthous'
- en: As a Medium member, a portion of your membership fee goes to writers you read,
    and you get full access to every story…
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 作为 Medium 会员，你的部分会员费用会分配给你阅读的作者，并且你可以全面访问每个故事…
- en: gmyrianthous.medium.com](https://gmyrianthous.medium.com/membership?source=post_page-----aab4ac27c455--------------------------------)
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: gmyrianthous.medium.com](https://gmyrianthous.medium.com/membership?source=post_page-----aab4ac27c455--------------------------------)
- en: '**Related articles you may also like**'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**你可能也感兴趣的相关文章**'
- en: '[](/diagrams-as-code-python-d9cbaa959ed5?source=post_page-----aab4ac27c455--------------------------------)
    [## Diagrams as Code in Python'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/diagrams-as-code-python-d9cbaa959ed5?source=post_page-----aab4ac27c455--------------------------------)
    [## Python 中的代码图示'
- en: Creating cloud system architecture diagrams with Python
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建 Python 云系统架构图
- en: towardsdatascience.com](/diagrams-as-code-python-d9cbaa959ed5?source=post_page-----aab4ac27c455--------------------------------)
    [](/args-kwargs-python-d9c71b220970?source=post_page-----aab4ac27c455--------------------------------)
    [## *args and **kwargs in Python
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/diagrams-as-code-python-d9cbaa959ed5?source=post_page-----aab4ac27c455--------------------------------)
    [](/args-kwargs-python-d9c71b220970?source=post_page-----aab4ac27c455--------------------------------)
    [## *args 和 **kwargs 在 Python 中的使用
- en: Discussing the difference between positional and keyword arguments and how to
    use *args and **kwargs in Python
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 讨论位置参数和关键字参数之间的区别以及如何在 Python 中使用 *args 和 **kwargs
- en: towardsdatascience.com](/args-kwargs-python-d9c71b220970?source=post_page-----aab4ac27c455--------------------------------)
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/args-kwargs-python-d9c71b220970?source=post_page-----aab4ac27c455--------------------------------)
