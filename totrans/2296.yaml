- en: Visualization Module in Arabica Speeds Up Text Data Exploration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/visualization-module-in-arabica-speeds-up-text-data-exploration-47114ad646ce](https://towardsdatascience.com/visualization-module-in-arabica-speeds-up-text-data-exploration-47114ad646ce)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Arabica now offers unigram, bigram, and trigram word cloud, heatmap, and line
    chart to further accelerate time-series text data analysis
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://petrkorab.medium.com/?source=post_page-----47114ad646ce--------------------------------)[![Petr
    Korab](../Images/9f3afb4b8985584981220e30f18e3b69.png)](https://petrkorab.medium.com/?source=post_page-----47114ad646ce--------------------------------)[](https://towardsdatascience.com/?source=post_page-----47114ad646ce--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----47114ad646ce--------------------------------)
    [Petr Korab](https://petrkorab.medium.com/?source=post_page-----47114ad646ce--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----47114ad646ce--------------------------------)
    ·6 min read·Jan 9, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/77cc4c006de9eb9ca534fe5764e9f6a4.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1\. Bigram word cloud, image by author.
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Arabica is a python library for exploratory text data analysis focusing on
    text from a time-series perspective. It reflects the empirical reality that many
    text datasets are collected as repeated observations over time. **Time series
    text data** include newspaper article headlines, research article abstracts and
    metadata, product reviews, social network communication, and many others. [**Arabica**](https://pypi.org/project/arabica/)simplifies
    exploratory analysis (EDA) of these datasets by providing these methods:'
  prefs: []
  type: TYPE_NORMAL
- en: '**arabica_freq:** descriptive n-gram analysis and time-series n-gram analysis,
    for n-gram based EDA of text dataset'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**cappuccino:** for visual exploration of the data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This article provides an introduction to **Cappuccino,** Arabica’s visualization
    modulefor exploratory analysis of time-series text data. Read the [documentation](https://arabica.readthedocs.io/en/latest/index.html)
    and a tutorial [here](/text-as-time-series-arabica-1-0-brings-new-features-for-exploratory-text-data-analysis-88eaabb84deb)
    for a general introduction to Arabica.
  prefs: []
  type: TYPE_NORMAL
- en: '***EDIT Jan 2023****: Arabica has been updated. Check the* [***documentation***](https://arabica.readthedocs.io/en/latest/index.html)
    *for the full list of parameters.*'
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Cappuccino, visualization for exploratory text data analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The plots implemented are **word cloud** (unigram, bigram, and trigram versions),
    **heatmap**, and **line plot**. They help discover (1) the **most frequent n-grams**
    for the whole data reflecting its time-series character (word clouds) and (2)
    **n-grams development over time** (heatmap, line plot).
  prefs: []
  type: TYPE_NORMAL
- en: The graphs are designed for use in presentations, reports, and empirical studies.
    They are, therefore, in **high resolution** (pixels depend on the data range displayed
    in the graphs).
  prefs: []
  type: TYPE_NORMAL
- en: Cappuccino relies on [*matplotlib*](https://matplotlib.org/), [*worcloud*](https://pypi.org/project/wordcloud/),
    and [*plotnine*](https://plotnine.readthedocs.io/en/stable/) to create and display
    graphs, and [*cleantext*](https://pypi.org/project/cleantext/#description) and
    [*NTLK*](https://www.nltk.org/)corpus of stopwords for pre-processing. *Plotnine*
    implements the popular and widely used [*ggplot2*](https://ggplot2.tidyverse.org/)
    library into Python. The requirements are here.
  prefs: []
  type: TYPE_NORMAL
- en: 'The method’s parameters are:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 3\. Descriptive n-gram visualization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Descriptive analysis in Arabica provides n-gram frequency calculations without
    aggregation over a specific period. In simple terms, first, n-grams frequencies
    are calculated for each text record, second, the frequencies are summed for the
    whole dataset, and finally, the frequencies are visualized in a plot.
  prefs: []
  type: TYPE_NORMAL
- en: Word cloud
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let’s illustrate the coding on the [**Million News Headlines**](https://www.kaggle.com/datasets/therohk/million-headlines?resource=download)of
    news headlines published in daily frequency over 2003–2–19: 2016–09–18\. The dataset
    is provided by the Australian Broadcasting Corporation under the [CC0: Public
    Domain](https://creativecommons.org/publicdomain/zero/1.0/) license. We’ll subset
    the data to the first 50 000 headlines.'
  prefs: []
  type: TYPE_NORMAL
- en: 'First, install Arabica with `pip install arabica`, then import Cappuccino:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'After reading the data with `pandas`, the data looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2129c6b8d4f4d6823e7547b346686ef0.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2\. Million News Headlines data
  prefs: []
  type: TYPE_NORMAL
- en: 'We lowercase the text, clean the data from punctuation and numbers, remove
    English stopwords and other unwanted strings (*“g”*, *“br”*), and plot a word
    cloud with the 100 most frequent words:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'It returns the word cloud:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0b1fe7ae94df074b0eb5cc690e79d6fe.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3\. Word cloud, image by author.
  prefs: []
  type: TYPE_NORMAL
- en: 'After changing `ngram = 2` , we receive a word cloud with the 100 most frequent
    bigrams (see the cover picture). Alternatively, `ngram = 3` displays the most
    frequent trigrams:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/dea5aa224d9a83a60c2a6cbb87efc3de.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4\. Word cloud — trigram, image by author.
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Time-series n-gram visualization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Time series text data typically display variability over time. Political statements
    before elections and newspaper headlines during the Covid-19 pandemic are nice
    examples. To display the n-grams over time, Arabica implements a **heatmap** and
    a **line plot** for monthly and yearly periods.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/403a36223d1a9ff83aff9dee329f5555.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Image by author, source: Draw.io'
  prefs: []
  type: TYPE_NORMAL
- en: '**Heatmap**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A **heatmap** with the ten most frequent words in each month is displayed with
    the following code :'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The unigram heatmap is the output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a45611131960ef853cde2c08740a23ef.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 5\. Heatmap — unigram, image by author.
  prefs: []
  type: TYPE_NORMAL
- en: 'The unigram heatmap gives us the first look at the variability of data over
    time. We can clearly identify the important patterns in the data:'
  prefs: []
  type: TYPE_NORMAL
- en: '**most frequent n-grams**: “us”, “police”, “new”, “man”.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**outliers** (terms appearing only in one period): “war”, “wa”, “rain”, “killed”,
    “iraqi”, “concerns”, “budget”, “bali”.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: We might consider removing the outliers in the later stage of the analysis.
    Alternatively, we create a **bigram** **heatmap** by changing `ngram = 2` and
    `max_words = 5` displaying a heatmap with the five most frequent bigrams in each
    period.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2d596e1340b3ef3b9578ac79db99cda3.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6\. Heatmap — bigram, image by author.
  prefs: []
  type: TYPE_NORMAL
- en: '**Line plot**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A **line plo**t with n-grams is displayed by changing `plot = ‘line’`. By setting
    `ngram` parameter to 1 and `max_words = 5` we create a line plot for the five
    most frequent words in each period:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7b65356bd2507c2dc2f130e0704db7ff.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7\. Line plot — unigram, image by author.
  prefs: []
  type: TYPE_NORMAL
- en: 'Similarly by changing `ngram = 2` and `max_words = 3` the bigram line plot
    looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c03c812628673fc602ccc7cca00007ca.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8\. Line plot — bigram, image by author.
  prefs: []
  type: TYPE_NORMAL
- en: Final remarks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Cappuccino greatly helps in the visual exploration of text data which has a
    time-series character. With a single line of code, we pre-process the data and
    provide the first exploratory glimpse of the dataset. Here are several tips to
    follow:'
  prefs: []
  type: TYPE_NORMAL
- en: The visualization frequency also depends on the **length of the time dimension**
    in the data. In long time series, a monthly plot will not display the data clearly,
    while a graph for short time series (less than a year) in yearly frequency will
    not provide any variability over time.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Select a suitable form of **visualization on the basis of the dataset in your
    project**. A line plot is not a good choice for datasets with high n-gram variability
    over time (see Fig 8). In this case, the heatmap shows a better picture even for
    many n-grams in each period.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Some questions we can answer with Arabica are (1) how the concepts in a specific
    domain (economics, biology, etc.) evolved over time, using **research article
    metadata**, (2) which key topics were emphasized during a presidential campaign,
    using **Twitter tweets**, (3) which parts of the brand and communication a company
    should improve, using **customer product reviews**.
  prefs: []
  type: TYPE_NORMAL
- en: The complete code in this tutorial is on my [GitHub](https://github.com/PetrKorab/Arabica/blob/main/docs/examples/cappuccino_examples.ipynb).
    For more examples, read the [documentation](https://arabica.readthedocs.io/en/latest/index.html)
    and a [tutorial](https://medium.com/towards-data-science/text-as-time-series-arabica-1-0-brings-new-features-for-exploratory-text-data-analysis-88eaabb84deb)
    on *arabica_freq* method.
  prefs: []
  type: TYPE_NORMAL
- en: '***EDIT:*** *Arabica now has a* ***sentiment and structural breaks*** *analytical
    module. Read more and also check practical applications in these tutorials:*'
  prefs: []
  type: TYPE_NORMAL
- en: '[***Sentiment Analysis and Structural Breaks in Time-Series Text Data***](/sentiment-analysis-and-structural-breaks-in-time-series-text-data-8109c712ca2)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[***Customer Satisfaction Measurement with N-gram and Sentiment Analysis***](/customer-satisfaction-measurement-with-n-gram-and-sentiment-analysis-547e291c13a6)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[***Research Article Meta-data Description Made Quick and Easy***](https://pub.towardsai.net/research-article-meta-data-description-made-quick-and-easy-57754e54b550)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Did you like the article? You can invite me* [*for coffee*](https://www.buymeacoffee.com/petrkorab)
    *and support my writing. You can also subscribe to my* [*email list*](https://medium.com/subscribe/@petrkorab)
    *to get notified about my new articles. Thanks!*'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0152d0cf56e6a16b0938257fda8074c9.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Kanwardeep Kaur](https://unsplash.com/@kavar05?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
