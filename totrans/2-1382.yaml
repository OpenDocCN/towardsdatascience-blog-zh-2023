- en: Junior Developers Write Multi-Page SQL Queries; Seniors Use Window Functions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/junior-developers-write-multi-page-sql-queries-seniors-use-window-functions-f82dfeb8e378](https://towardsdatascience.com/junior-developers-write-multi-page-sql-queries-seniors-use-window-functions-f82dfeb8e378)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: An elegant way to perform computation within the context of a record
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://thuwarakesh.medium.com/?source=post_page-----f82dfeb8e378--------------------------------)[![Thuwarakesh
    Murallie](../Images/44f1a14a899426592bbd8c7f73ce169d.png)](https://thuwarakesh.medium.com/?source=post_page-----f82dfeb8e378--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f82dfeb8e378--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f82dfeb8e378--------------------------------)
    [Thuwarakesh Murallie](https://thuwarakesh.medium.com/?source=post_page-----f82dfeb8e378--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----f82dfeb8e378--------------------------------)
    ·7 min read·Mar 13, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5ecd316079b782495a6f38876a60a489.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [R Mo](https://unsplash.com/@mooo3721?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Imagine a situation where you run a nationwide electronic store. You must determine
    how much each store contributes to the state’s sales.
  prefs: []
  type: TYPE_NORMAL
- en: If you’re starting on SQL, you’d think for a bit and develop an incredibly amazing
    query that may look like the following.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: This gets the job done for sure. But if you explain this to others, they’ll
    have a nightmarish time with you.
  prefs: []
  type: TYPE_NORMAL
- en: 'Instead, if you ask to do the same from a senior developer, they will write
    a query like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: This much more concise version uses the window functions.
  prefs: []
  type: TYPE_NORMAL
- en: The window function creates a window of records related to the current record
    and operates within the window. In this example, the window is the state.
  prefs: []
  type: TYPE_NORMAL
- en: My first encounter with the window function occurred a few years ago when I
    worked for a retail client. Their customer dataset is vast, and they want to see
    the changing buying pattern of each cohort of customers — as in those born during
    the 80s and 90s, etc.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/fast-load-data-to-sql-from-python-2d67aea946c0?source=post_page-----f82dfeb8e378--------------------------------)
    [## Python To SQL — I Can Now Load Data 20X Faster'
  prefs: []
  type: TYPE_NORMAL
- en: The good, bad, and ugly ways of uploading large batches of data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/fast-load-data-to-sql-from-python-2d67aea946c0?source=post_page-----f82dfeb8e378--------------------------------)
    [](/5-advanced-sql-techniques-for-real-life-projects-f2db9b6680e2?source=post_page-----f82dfeb8e378--------------------------------)
    [## These 5 SQL Techniques Cover ~80% of Real-Life Projects
  prefs: []
  type: TYPE_NORMAL
- en: Speed up your SQL learning curve.
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/5-advanced-sql-techniques-for-real-life-projects-f2db9b6680e2?source=post_page-----f82dfeb8e378--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Since then, window functions have become my favorite, and I use them in almost
    every analytical project at least once. That’s because we often want to perform
    calculations within the context of the record.
  prefs: []
  type: TYPE_NORMAL
- en: This post is a gentle introduction to window functions in SQL. Most importantly,
    we need to understand how we define the window and what operation we perform on
    the window.
  prefs: []
  type: TYPE_NORMAL
- en: If you’re going to follow along with examples in this post, let’s create a table
    and insert some dummy values into it.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The basics of SQL window functions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Here’s a query to display each state’s average sales and total sales value for
    each store.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Let’s closely examine the window function.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/eb6dfcda371a45a207d650ffbc49c455.png)'
  prefs: []
  type: TYPE_IMG
- en: Illustration by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Every window function has these two parts. We define the window following the
    OVER keyword. In this example, we only partition the dataset using the state column.
    The operation will be performed among the records that share the same state.
  prefs: []
  type: TYPE_NORMAL
- en: Further, you can rearrange the widow records using the ORDER BY keyword. The
    following query uses it to get the rank of each store within its state.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: In place of [DENSE_RANK](https://learn.microsoft.com/en-us/sql/t-sql/functions/dense-rank-transact-sql?view=sql-server-ver16),
    you can use [RANK](https://www.sqlshack.com/overview-of-sql-rank-functions/) or
    [ROW_NUMBER](https://www.simplilearn.com/tutorials/sql-tutorial/row-number-funtion-in-sql).
    The difference between the three keywords is in the way they handle ties.
  prefs: []
  type: TYPE_NORMAL
- en: ROW_NUMBER will assign a sequential number for tie and gives no importance to
    ties. RANK will assign the same rank for ties and skip the next one. For instance,
    if two stores have the same sales values, they both will get number 1\. But number
    2 will be skipped, and the next in line gets number 3\. DENSE_RANK will also assign
    the same number to ties but won’t skip the next number. The next record will get
    the immediately following rank.
  prefs: []
  type: TYPE_NORMAL
- en: Interesting ways we can use window functions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Window functions have lots of exciting applications. As I said earlier, I use
    it in almost every SQL project I work on. Here are some common ways we can use
    window functions for.
  prefs: []
  type: TYPE_NORMAL
- en: Since we’ve already looked into ranking in the basics example, we’re not revisiting
    that here. But ranking is one of the most common use cases of a window function.
  prefs: []
  type: TYPE_NORMAL
- en: '**1\. Calculating running totals**'
  prefs: []
  type: TYPE_NORMAL
- en: We may also want to calculate a running total wherever we have temporal data.
    In other words, we should sum all the previous values to a certain point.
  prefs: []
  type: TYPE_NORMAL
- en: In our store sales example, this might be how much each store has sold since
    the beginning of the year by every month's end. Here’s a query that accomplishes
    this task.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: The above query will order the records in the window with the month column.
    In any month, sales figures are accumulated only up to that month.
  prefs: []
  type: TYPE_NORMAL
- en: '**2\. Comparing to a group statistic.**'
  prefs: []
  type: TYPE_NORMAL
- en: There may be situations where we need to compare each record to its group average.
    For instance, we may be interested in seeing each store's state averages.
  prefs: []
  type: TYPE_NORMAL
- en: Here’s the SQL query for this.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '**3\. Calculating moving averages**'
  prefs: []
  type: TYPE_NORMAL
- en: Moving averages are so typical when working with time series data. Moving averages
    usually have little noise than the individual data points. You’d always see it
    in financial data analysis, such as stock market data. But we can find similar
    applications in any domain.
  prefs: []
  type: TYPE_NORMAL
- en: Here’s the SQL query that does it for our store sales data. It computes, for
    each store, the 3-point moving average.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Look carefully at how we define the window. In addition to the usually appearing
    PARTITION BY and ORDER BY keywords, we use a few others. We tell SQL to consider
    only the 2 preceding and current records. By changing the parameter, you can even
    calculate different point moving averages.
  prefs: []
  type: TYPE_NORMAL
- en: 'Likewise, you can also compute **forward-facing moving averages**. Here’s the
    SQL query for this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Window functions have become my favorite after realizing their usefulness. Thus
    through this post, I shared the basics and some frequently used window function
    applications.
  prefs: []
  type: TYPE_NORMAL
- en: But you can do a lot more with window functions. Although not extensively covered
    in this blog post, the basics should let you write amazing SQL statements.
  prefs: []
  type: TYPE_NORMAL
- en: Thanks for reading, friend! If you enjoyed my article, let’s keep in touch on
    [**LinkedIn**](https://www.linkedin.com/in/thuwarakesh/), [**Twitter**](https://twitter.com/Thuwarakesh),
    and [**Medium**](https://thuwarakesh.medium.com/).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Not a Medium member yet? Please use this link to [**become a member**](https://thuwarakesh.medium.com/membership)
    because, at no extra cost for you, I earn a small commission for referring you.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
