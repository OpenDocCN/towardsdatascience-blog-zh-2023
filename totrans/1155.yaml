- en: How to Create Your Own AI Weather Forecast
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-to-create-your-own-ai-weather-forecast-de72c4c50810](https://towardsdatascience.com/how-to-create-your-own-ai-weather-forecast-de72c4c50810)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Using pre-trained models and reanalysis data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@caroline.arnold_63207?source=post_page-----de72c4c50810--------------------------------)[![Caroline
    Arnold](../Images/2560e106ba9deda7889c7d253792d814.png)](https://medium.com/@caroline.arnold_63207?source=post_page-----de72c4c50810--------------------------------)[](https://towardsdatascience.com/?source=post_page-----de72c4c50810--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----de72c4c50810--------------------------------)
    [Caroline Arnold](https://medium.com/@caroline.arnold_63207?source=post_page-----de72c4c50810--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----de72c4c50810--------------------------------)
    ·8 min read·Oct 2, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f4097a4d9988202f559adae00eed3172.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [NOAA](https://unsplash.com/@noaa?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: 'Data-driven weather forecasts with pre-trained models are inexpensive to create
    and can provide forecasts with comparable accuracy to established numerical weather
    models. Several companies and research labs have developed AI weather models,
    including:'
  prefs: []
  type: TYPE_NORMAL
- en: PanguWeather [[Huawei]](https://github.com/198808xc/Pangu-Weather)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: FourCastNet [[NVIDIA]](https://github.com/NVlabs/FourCastNet)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GraphCast [[Google DeepMind](https://github.com/google-deepmind/graphcast)]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The European Centre for Medium-Range Weather Forecasts (ECMWF) provides routines
    for generating weather forecasts with these models [1]. The model inference can
    be performed even on a laptop, although the use of a GPU is recommended.
  prefs: []
  type: TYPE_NORMAL
- en: In this post, I am going to
  prefs: []
  type: TYPE_NORMAL
- en: Show you how to create your own AI weather forecast
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Compare the inference times for the models on GPU and on CPU
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visualize the weather forecast for PanguWeather and FourCastNet, including temperature,
    water vapor, and the jet stream
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Background information
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Traditionally, weather forecasting relies on numerical weather models that are
    solved on a global grid. This requires large computing resources, and only few
    weather services in the world are equipped to generate global weather forecasts.
  prefs: []
  type: TYPE_NORMAL
- en: 'AI weather models are trained on the weather of the past, called *reanalysis
    data*. With the trained model and the current weather state, weather forecasts
    can be generated using only a fraction of the computational resources required
    by a numerical weather forecast. The schematic shows how AI weather forecasting
    predicts future weather using current weather as input:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ac9aa344428b8687741641bd63a5b02e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'AI weather forecast schematic. Left: Wind field at 00:00 UTC, 01/01/2021\.
    Right: Wind field at 23:00 UTC, 01/01/2021\. Data: ERA5 via Copernicus Climate
    Data Store [3]. Image: Author.'
  prefs: []
  type: TYPE_NORMAL
- en: All three AI weather models covered in this article provide weather forecasts
    with a spatial resolution of 0.25° (25 kilometers) and a temporal resolution of
    6 hours.
  prefs: []
  type: TYPE_NORMAL
- en: 'For more background on the impact of AI in weather forecasting, see my previous
    article:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://pub.towardsai.net/the-ai-revolution-in-weather-prediction-9b706f763a61?source=post_page-----de72c4c50810--------------------------------)
    [## The AI revolution in weather prediction'
  prefs: []
  type: TYPE_NORMAL
- en: Tomorrow’s weather, brought to you by deep learning
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: pub.towardsai.net](https://pub.towardsai.net/the-ai-revolution-in-weather-prediction-9b706f763a61?source=post_page-----de72c4c50810--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Getting started
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Code and environment** Get the code to run the pre-trained weather models
    from the ECMWF Github page [1] and follow the installation instructions. I used
    v0.2.5 for this tutorial. Set up a `conda` environment for the required python
    packages.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: To install the available AI models, use
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: GraphCast requires a special installation routine that is covered below.
  prefs: []
  type: TYPE_NORMAL
- en: '**Pre-trained model weights** Pre-trained model weights for PanguWeather, GraphCast,
    and FourCastNet need to be downloaded:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Initialization data** The AI weather models need to be initialized with current
    weather data in order to make predictions. There are two ways to get the data,
    either from the ECMWF service MARS, or from the Copernicus Climate Date Store
    (CDS). Both services provide the initialization data for free for non-commercial
    use.'
  prefs: []
  type: TYPE_NORMAL
- en: I am using reanalysis data from the CDS for the purpose of this tutorial. Follow
    the instructions on their website to obtain an API key to access the data [2].
    Note that reanalysis data is made available with a delay of about five days.
  prefs: []
  type: TYPE_NORMAL
- en: Creating the AI weather forecast
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We are now ready to generate our very own AI weather forecast. All that remains
    is to select a time and date for the initialization, and start model inference
    with the pre-trained model.
  prefs: []
  type: TYPE_NORMAL
- en: '**PanguWeather** To request a PanguWeather forecast starting on 09/20/2023,
    00:00 UTC based on CDS initialization data, use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The logs are fairly comprehensive. The pre-trained model `pangu_weather_6.onnx`
    produces a weather forecast 6 hours ahead, and here it is applied iteratively
    40 times to reach a total of 240 hours (10 days).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: For each iteration, the logs tell the user how much time was spent. In my experiment,
    the ONNX runtime could not find the GPU, hence inference was done on CPU and took
    about 3:15 minutes per weather prediction step.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '**FourCastNet** In order to generate a forecast with FourCastNet for the same
    initialization time, at the same time downloading the trained model weights to
    the sub-directory `assets-fourcastnet` , we use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Again, the logs give us comprehensive information on the model inference. Now,
    the ONNX runtime was able to find the GPU, and inference was much faster, taking
    only 2 minutes to generate the 10-day forecast.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '**GraphCast** For GraphCast, we first need to follow the installation steps
    in [https://github.com/ecmwf-lab/ai-models-graphcast](https://github.com/ecmwf-lab/ai-models-graphcast).
    Then, we can generate the weather forecast using:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'At the time of writing, this resulted in a bug that is open on GitHub (Issue
    #10 in [1]), and I was unable to complete a forecast with GraphCast.'
  prefs: []
  type: TYPE_NORMAL
- en: Forecast output files
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The AI weather models produce output files in GRIB format. For a 240 hour forecast,
    the file size is
  prefs: []
  type: TYPE_NORMAL
- en: '2.3 GB with FourCastNet (3 pressure levels: 850 hPa, 500 hPa, 250 hPa)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 5.4 GB with PanguWeather (13 pressure levels)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Both models output key meteorological variables:'
  prefs: []
  type: TYPE_NORMAL
- en: Temperature
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wind speed and direction
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PanguWeather also provides geopotential and humidity, while FourCastNet provides
    water vapor content.
  prefs: []
  type: TYPE_NORMAL
- en: Generate plots
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Proper evaluation and benchmarking of these AI-generated forecasts is a complex
    topic beyond the scope of this article. Here, we focus on the visual comparison
    between the two AI weather models. To visually analyze the weather forecasts,
    we select the temperature variable and the forecast 24 hours after initialization.
    This is the template for generating the plots:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '**Temperature** The following figure compares the temperature at the 850 hPa
    level for PanguWeather and FourCastNet. This level is not directly at the surface,
    but it is the only level included in both output files. Visually, we see that
    the temperature fields show similar patterns.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c14d4da848ac6978ab1d8b221277f9e3.png)'
  prefs: []
  type: TYPE_IMG
- en: '850 hPa temperature after 24 hours. Image: Author.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Water vapor** FourCastNet provides the total atmospheric water vapor mass,
    which can be compared to the amount of clouds carrying rain droplets. In the following
    figure, we compare this quantity for four different snapshots: after 1 day (24
    hours), 3 days (72 hours), 5 days (96 hours), and out to 10 days (240 hours).'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/36605e16dfcc88f25dc545bab18b46b5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Total atmospheric water vapor after 1, 3, 5, and 10 days of forecasting with
    FourCastNet. Image: Author.'
  prefs: []
  type: TYPE_NORMAL
- en: 'We observe a phenomenon that is well known in deep learning: Because the model
    was trained using root mean squared error (RMSE), it has a tendency to produce
    smooth fields. Over time, as the model is applied iteratively, the predictions
    become less pronounced. After 10 days, we even observe artifacts at the southern
    tip of South America. Note that the AI weather models currently do not use generative
    AI techniques, as they focus more on physical accuracy than visual appeal.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Wind speed** PanguWeather provides wind speed at different pressure levels.
    We choose the 250 hPa pressure level, which corresponds to the level where the
    jet stream is most present. The jet stream is a circumpolar air flow that influences
    the weather in mid-latitude regions such as the USA and Europe. The figure shows
    the wind speed with a focus on the Southern Hemisphere Jet Stream, which was more
    pronounced during the time of my forecast.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d4b4733fe19ed791c2fcc2d9bfcaacce.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Southern Hemisphere jet stream forecast with PanguWeather. Image: Author.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To create an orthographic projection and calculate the wind speed, we used
    the following template:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Summary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In this article, we have shown how to use the AI-Models repository provided
    by ECMWF [1] to generate AI weather forecasts. Using initialization data from
    the Climate Data Store, we were able to generate forecasts using two models: Huawei’s
    PanguWeather and NVIDIA’s FourCastNet. Generating a 10-day weather forecast with
    a pre-trained model takes about 2 minutes on a GPU and about 3 hours on a CPU.
    The cost of inference is very low compared to the immense computational effort
    required to generate a numerical weather forecast.'
  prefs: []
  type: TYPE_NORMAL
- en: It is now possible for individual consumers and less well-funded weather services
    to generate their own AI weather forecasts, at least with the spatial and temporal
    resolution provided by the ERA5 training data. The ECMWF repository provides easy
    access to pre-trained models.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] [https://github.com/ecmwf-lab/ai-models](https://github.com/ecmwf-lab/ai-models)
    (version 0.2.5)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[2] Copernicus Climate Data Store API: [https://cds.climate.copernicus.eu/api-how-to](https://cds.climate.copernicus.eu/api-how-to)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[3] Hersbach, H., et al (2017): Complete ERA5 from 1940: Fifth generation of
    ECMWF atmospheric reanalyses of the global climate. Copernicus Climate Change
    Service (C3S) Data Store (CDS). DOI: [10.24381/cds.143582cf](https://doi.org/10.24381/cds.143582cf)
    (Accessed on 26-SEP-2023)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
