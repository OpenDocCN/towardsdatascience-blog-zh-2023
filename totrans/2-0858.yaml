- en: 'Exploring Numexpr: A Powerful Engine Behind Pandas'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索 Numexpr：Pandas 背后的强大引擎
- en: 原文：[https://towardsdatascience.com/exploring-numexpr-a-powerful-engine-behind-pandas-cdb94965ca3a](https://towardsdatascience.com/exploring-numexpr-a-powerful-engine-behind-pandas-cdb94965ca3a)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/exploring-numexpr-a-powerful-engine-behind-pandas-cdb94965ca3a](https://towardsdatascience.com/exploring-numexpr-a-powerful-engine-behind-pandas-cdb94965ca3a)
- en: '[FAST COMPUTING](https://qtalen.medium.com/list/fast-computing-2a37a7e82be5)'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[快速计算](https://qtalen.medium.com/list/fast-computing-2a37a7e82be5)'
- en: Enhancing your data analysis performance with Python’s Numexpr and Pandas’ eval/query
    functions
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Python 的 Numexpr 和 Pandas 的 eval/query 函数提升数据分析性能
- en: '[](https://qtalen.medium.com/?source=post_page-----cdb94965ca3a--------------------------------)[![Peng
    Qian](../Images/9ce9aeb381ec6b017c1ee5d4714937e2.png)](https://qtalen.medium.com/?source=post_page-----cdb94965ca3a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----cdb94965ca3a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----cdb94965ca3a--------------------------------)
    [Peng Qian](https://qtalen.medium.com/?source=post_page-----cdb94965ca3a--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://qtalen.medium.com/?source=post_page-----cdb94965ca3a--------------------------------)[![Peng
    Qian](../Images/9ce9aeb381ec6b017c1ee5d4714937e2.png)](https://qtalen.medium.com/?source=post_page-----cdb94965ca3a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----cdb94965ca3a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----cdb94965ca3a--------------------------------)
    [Peng Qian](https://qtalen.medium.com/?source=post_page-----cdb94965ca3a--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----cdb94965ca3a--------------------------------)
    ·10 min read·Sep 22, 2023
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----cdb94965ca3a--------------------------------)
    ·10 分钟阅读·2023 年 9 月 22 日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/fa720ac983cd13291d2bf6c1b49b674d.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fa720ac983cd13291d2bf6c1b49b674d.png)'
- en: 'Use Numexpr to help me find the most livable city. Photo Credit: Created by
    Author, [Canva](https://www.canva.com/)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Numexpr 来帮助我找到最宜居的城市。照片来源：作者创作，[Canva](https://www.canva.com/)
- en: This article will introduce you to the Python library [Numexpr](https://numexpr.readthedocs.io/en/latest/intro.html?ref=dataleadsfuture.com#),
    a tool that boosts the computational performance of `Numpy Arrays`. The `eval`
    and `query` methods of Pandas are also based on this library.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本文将向你介绍 Python 库 [Numexpr](https://numexpr.readthedocs.io/en/latest/intro.html?ref=dataleadsfuture.com#)，这是一种提高
    `Numpy Arrays` 计算性能的工具。Pandas 的 `eval` 和 `query` 方法也基于这个库。
- en: This article also includes a hands-on weather data analysis project.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本文还包括一个动手实践的天气数据分析项目。
- en: By reading this article, you will understand the principles of Numexpr and how
    to use this powerful tool to speed up your calculations in reality.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读本文后，你将理解 Numexpr 的原理以及如何使用这一强大的工具来加速现实中的计算。
- en: Introduction
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: Recalling Numpy Arrays
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 回顾 Numpy Arrays
- en: 'In a previous article discussing `Numpy Arrays`, I used a library example to
    explain why Numpy''s Cache Locality is so efficient:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一篇讨论 `Numpy Arrays` 的文章中，我使用了一个库示例来解释为什么 Numpy 的缓存局部性如此高效：
- en: '[](/python-lists-vs-numpy-arrays-a-deep-dive-into-memory-layout-and-performance-benefits-a74ce774bc1e?source=post_page-----cdb94965ca3a--------------------------------)
    [## Python Lists Vs. NumPy Arrays: A Deep Dive into Memory Layout and Performance
    Benefits'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/python-lists-vs-numpy-arrays-a-deep-dive-into-memory-layout-and-performance-benefits-a74ce774bc1e?source=post_page-----cdb94965ca3a--------------------------------)
    [## Python 列表与 NumPy 数组：深入探讨内存布局和性能优势'
- en: Exploring allocation differences and efficiency gains
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 探索分配差异和效率提升
- en: towardsdatascience.com](/python-lists-vs-numpy-arrays-a-deep-dive-into-memory-layout-and-performance-benefits-a74ce774bc1e?source=post_page-----cdb94965ca3a--------------------------------)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/python-lists-vs-numpy-arrays-a-deep-dive-into-memory-layout-and-performance-benefits-a74ce774bc1e?source=post_page-----cdb94965ca3a--------------------------------)
- en: Each time you go to the library to search for materials, you take out a few
    books related to the content and place them next to your desk.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 每次去图书馆查找资料时，你会拿出几本与内容相关的书，放在桌子旁边。
- en: This way, you can quickly check related materials without having to run to the
    shelf each time you need to read a book.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，你可以快速检查相关资料，而无需每次都跑到书架上去找书。
- en: This method saves a lot of time, especially when you need to consult many related
    books.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法节省了大量时间，尤其是当你需要查阅许多相关书籍时。
- en: In this scenario, the shelf is like your memory, the desk is equivalent to the
    CPU’s L1 cache, and you, the reader, are the CPU’s core.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，书架就像你的记忆，桌子相当于 CPU 的 L1 缓存，而你，读者，就是 CPU 的核心。
- en: '![](../Images/bd2cb4e4555424d7f45cfbfee15cb884.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bd2cb4e4555424d7f45cfbfee15cb884.png)'
- en: When the CPU accesses RAM, the cache loads the entire cache line into the high-speed
    cache. Image by Author
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 当 CPU 访问 RAM 时，缓存会将整个缓存行加载到高速缓存中。图像由作者提供
- en: The limitations of Numpy
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Numpy 的限制
- en: Suppose you are unfortunate enough to encounter a demanding professor who wants
    you to take out Shakespeare and Tolstoy’s works for a cross-comparison.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你不幸遇到了一位要求你拿出莎士比亚和托尔斯泰作品进行对比的苛刻教授。
- en: At this point, taking out related books in advance will not work well.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，提前拿出相关书籍并不会有效果。
- en: First, your desk space is limited and cannot hold all the books of these two
    masters at the same time, not to mention the reading notes that will be generated
    during the comparison process.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你的桌面空间有限，无法同时容纳这两位大师的所有书籍，更不用说在比较过程中产生的阅读笔记了。
- en: Second, you’re just one person, and comparing so many works would take too long.
    It would be nice if you could find a few more people to help.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，你只是一个人，比较这么多作品会花费很长时间。如果能找到更多人来帮忙就好了。
- en: 'This is the current situation when we use Numpy to deal with large amounts
    of data:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们使用 Numpy 处理大量数据时的当前情况：
- en: The number of elements in the Array is too large to fit into the CPU’s L1 cache.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数组中的元素数量太大，无法适应 CPU 的 L1 缓存。
- en: Numpy’s element-level operations are single-threaded and cannot utilize the
    computing power of multi-core CPUs.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Numpy 的元素级操作是单线程的，无法利用多核 CPU 的计算能力。
- en: What should we do?
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该怎么办？
- en: Don’t worry. When you really encounter a problem with too much data, you can
    call on our protagonist today, `Numexpr`, to help.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 别担心。当你真的遇到数据量过多的问题时，你可以召唤今天的主角 `Numexpr` 来帮助你。
- en: 'Understanding Numexpr: What and Why'
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 Numexpr：什么和为什么
- en: How it works
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的
- en: When Numpy encounters large arrays, element-wise calculations will experience
    two extremes.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 当 Numpy 遇到大型数组时，逐元素计算会经历两种极端情况。
- en: 'Let me give you an example to illustrate. Suppose there are two large Numpy
    ndarrays:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 让我举个例子来说明。假设有两个大型的 Numpy ndarray：
- en: '[PRE0]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When calculating the result of the expression `a**5 + 2 * b`, there are generally
    two methods:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 当计算表达式 `a**5 + 2 * b` 的结果时，通常有两种方法：
- en: One way is Numpy’s vectorized calculation method, which uses two temporary arrays
    to store the results of `a**5` and `2*b` separately.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 一种方法是 Numpy 的向量化计算方法，它使用两个临时数组分别存储 `a**5` 和 `2*b` 的结果。
- en: '[PRE1]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'At this time, you have four arrays in your memory: `a`, `b`, `a**5`, and `2
    * b`. This method will cause a lot of memory waste.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这时，你的内存中有四个数组：`a`、`b`、`a**5` 和 `2 * b`。这种方法会导致大量的内存浪费。
- en: Moreover, since each Array’s size exceeds the CPU cache’s capacity, it cannot
    use it well.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 而且，由于每个数组的大小超过了 CPU 缓存的容量，它无法很好地利用缓存。
- en: Another way is to traverse each element in two arrays and calculate them separately.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种方法是遍历两个数组中的每个元素并分别计算它们。
- en: '[PRE2]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This method performs even worse. The calculation will be very slow because it
    cannot use vectorized calculations and only partially utilize the CPU cache.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法的效果更差。计算会非常慢，因为它无法使用向量化计算，只能部分利用 CPU 缓存。
- en: Numexpr’s calculation
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Numexpr 的计算
- en: Numexpr commonly uses only one `evaluate` method. This method will receive an
    expression string each time and then compile it into bytecode using Python's `compile`
    method.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Numexpr 通常只使用一个 `evaluate` 方法。该方法每次接收一个表达式字符串，然后使用 Python 的 `compile` 方法将其编译为字节码。
- en: Numexpr also has a virtual machine program. The virtual machine contains multiple
    vector registers, each using a chunk size of 4096.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Numexpr 还有一个虚拟机程序。虚拟机包含多个向量寄存器，每个寄存器使用 4096 的块大小。
- en: When Numexpr starts to calculate, it sends the data in one or more registers
    to the CPU’s L1 cache each time. This way, there won’t be a situation where the
    memory is too slow, and the CPU waits for data.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 当 Numexpr 开始计算时，它会每次将数据发送到一个或多个寄存器中的 CPU 的 L1 缓存中。这样，就不会出现内存过慢、CPU 等待数据的情况。
- en: At the same time, Numexpr’s virtual machine is written in C, removing Python’s
    GIL. It can utilize the computing power of multi-core CPUs.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 与此同时，Numexpr 的虚拟机是用 C 编写的，去除了 Python 的 GIL。它可以利用多核 CPU 的计算能力。
- en: 'So, Numexpr is faster when calculating large arrays than using Numpy alone.
    We can make a comparison:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，计算大型数组时，Numexpr 比单独使用 Numpy 更快。我们可以进行比较：
- en: '[PRE3]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Summary of Numexpr’s working principle
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Numexpr工作原理总结
- en: 'Let’s summarize the working principle of Numexpr and see why Numexpr is so
    fast:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们总结一下Numexpr的工作原理，看看为什么Numexpr如此快速：
- en: '**Executing bytecode through a virtual machine.** Numexpr uses bytecode to
    execute expressions, which can fully utilize the [branch prediction](https://en.wikipedia.org/wiki/Branch_predictor?ref=dataleadsfuture.com)
    ability of the CPU, which is faster than using Python expressions.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**通过虚拟机执行字节码。** Numexpr使用字节码来执行表达式，这可以充分利用CPU的[分支预测](https://en.wikipedia.org/wiki/Branch_predictor?ref=dataleadsfuture.com)能力，比使用Python表达式要快。'
- en: '**Vectorized calculation.** Numexpr will use [SIMD (Single Instruction, Multiple
    Data)](https://en.wikipedia.org/wiki/Single_instruction,_multiple_data?ref=dataleadsfuture.com)
    technology to improve computing efficiency significantly for the same operation
    on the data in each register.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**向量化计算。** Numexpr会使用[SIMD（单指令、多数据）](https://en.wikipedia.org/wiki/Single_instruction,_multiple_data?ref=dataleadsfuture.com)技术来显著提高对每个寄存器中数据的相同操作的计算效率。'
- en: '**Multi-core parallel computing.** Numexpr’s virtual machine can decompose
    each task into multiple subtasks. They are executed in parallel on multiple CPU
    cores.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**多核并行计算。** Numexpr的虚拟机可以将每个任务分解为多个子任务，并在多个CPU核心上并行执行。'
- en: '**Less memory usage.** Unlike Numpy, which needs to generate intermediate arrays,
    Numexpr only loads a small amount of data when necessary, significantly reducing
    memory usage.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**更少的内存使用。** 不同于需要生成中间数组的Numpy，Numexpr在必要时只加载少量数据，从而显著减少内存使用。'
- en: '![](../Images/e02ddfa9a36c80a2dd9e0769a7d3ed60.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e02ddfa9a36c80a2dd9e0769a7d3ed60.png)'
- en: Workflow diagram of Numexpr. Image by Author
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Numexpr的工作流程图。图像由作者提供
- en: 'Numexpr and Pandas: A Powerful Combination'
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Numexpr和Pandas：强大的组合
- en: 'You might be wondering: We usually do data analysis with pandas. I understand
    the performance improvements Numexpr offers for Numpy, but does it have the same
    improvement for Pandas?'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会想：我们通常使用pandas进行数据分析。我理解Numexpr对Numpy性能的提升，但它对Pandas是否也有同样的提升？
- en: The answer is Yes.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 答案是肯定的。
- en: 'The `eval` and `query` methods in pandas are implemented based on Numexpr.
    Let''s look at some examples:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: pandas中的`eval`和`query`方法是基于Numexpr实现的。让我们看一些示例：
- en: Pandas.eval for Cross-DataFrame operations
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Pandas.eval用于跨DataFrame操作
- en: 'When you have multiple pandas DataFrames, you can use `pandas.eval` to perform
    operations between DataFrame objects, for example:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 当你有多个pandas DataFrame时，可以使用`pandas.eval`在DataFrame对象之间执行操作，例如：
- en: '[PRE4]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If you calculate the sum of these DataFrames using the traditional pandas method,
    the time consumed is:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用传统pandas方法计算这些DataFrame的总和，所消耗的时间是：
- en: '[PRE5]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'You can also use `pandas.eval` for calculation. The time consumed is:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用`pandas.eval`进行计算。所消耗的时间是：
- en: '[PRE6]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The calculation of the eval version can improve performance by 50%, and the
    results are precisely the same:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '`eval`版本的计算可以将性能提高50%，且结果完全一致：'
- en: '[PRE7]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: DataFrame.eval for column-level operations
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DataFrame.eval用于列级操作
- en: 'Just like `pandas.eval`, DataFrame also has its own `eval` method. We can use
    this method for column-level operations within DataFrame, for example:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 就像`pandas.eval`一样，DataFrame也有自己的`eval`方法。我们可以使用此方法进行DataFrame中的列级操作，例如：
- en: '[PRE8]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The results of using the traditional pandas method and the `eval` method are
    precisely the same:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 使用传统pandas方法和`eval`方法的结果完全一致：
- en: '[PRE9]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Of course, you can also directly use the `eval` expression to add new columns
    to the DataFrame, which is very convenient:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，你也可以直接使用`eval`表达式向DataFrame中添加新列，这非常方便：
- en: '[PRE10]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![](../Images/66e858587c5103447993467f6883a977.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/66e858587c5103447993467f6883a977.png)'
- en: Directly use the eval expression to add new columns. Image by Author
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 直接使用`eval`表达式来添加新列。图像由作者提供
- en: Using DataFrame.query to quickly find data
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用DataFrame.query快速查找数据
- en: 'If the `eval` method of DataFrame executes comparison expressions, the returned
    result is a boolean result that meets the conditions. You need to use `Mask Indexing`
    to get the desired data:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如果DataFrame的`eval`方法执行比较表达式，返回的结果是符合条件的布尔结果。你需要使用`掩码索引`来获取所需的数据：
- en: '[PRE11]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![](../Images/d9e766d03562d4c0d42fc0388ac9ead9.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d9e766d03562d4c0d42fc0388ac9ead9.png)'
- en: When filtering data only with DataFrame.query, it is necessary to use a boolean
    mask. Image by Author
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 当仅使用DataFrame.query过滤数据时，需要使用布尔掩码。图像由作者提供
- en: 'The `DataFrame.query` method encapsulates this process, and you can directly
    obtain the desired data with the `query` method:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '`DataFrame.query`方法封装了这个过程，你可以直接通过`query`方法获得所需的数据：'
- en: '[PRE12]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'When you need to use scalars in expressions, you can use the `@` symbol to
    indicate:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 当你需要在表达式中使用标量时，可以使用`@`符号来指示：
- en: '[PRE13]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Practical Example: Using Numexpr and Pandas in Real-World Scenarios'
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实际示例：在现实场景中使用Numexpr和Pandas
- en: In all articles explaining Numexpr, examples are made using synthetic data.
    This feeling is not good and may cause you to not know how to use this powerful
    library to complete tasks after reading the article.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有解释Numexpr的文章中，示例使用的是合成数据。这种情况并不理想，可能会导致你在阅读文章后不知道如何使用这个强大的库来完成任务。
- en: Therefore, in this article, I will take a weather data analysis project as an
    example to explain how we should use Numexpr to process large datasets in actual
    work.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在本文中，我将以天气数据分析项目为例，解释如何在实际工作中使用Numexpr处理大型数据集。
- en: Project Goal
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目目标
- en: After a hot summer, I really want to see if there is such a place where the
    climate is pleasant in summer and suitable for me to escape the heat.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在炎热的夏天过后，我非常想知道是否有这样一个地方，夏季气候宜人，适合我避暑。
- en: 'This place should meet the following conditions:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这个地方应该满足以下条件：
- en: 'In the summer:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在夏天：
- en: The daily average temperature is between 18 degrees Celsius and 22 degrees Celsius;
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每日平均温度在18摄氏度到22摄氏度之间；
- en: The diurnal temperature difference is between 4 degrees Celsius and 6 degrees
    Celsius;
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 日温差在4摄氏度到6摄氏度之间；
- en: The average wind speed in kmh is between 6 and 10\. It would feel nice to have
    a breeze blowing on me.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 平均风速（以公里每小时计算）在6到10之间。微风吹拂会感觉很舒服。
- en: Data preparation
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据准备
- en: This time, I used the global major city weather data provided by the [Meteostat
    JSON API](https://dev.meteostat.net/api/stations/daily.html?ref=dataleadsfuture.com#endpoint).
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这一次，我使用了由[Meteostat JSON API](https://dev.meteostat.net/api/stations/daily.html?ref=dataleadsfuture.com#endpoint)提供的全球主要城市天气数据。
- en: The data is licensed under the [Creative Commons Attribution-NonCommercial 4.0
    International Public License (CC BY-NC 4.0)](https://dev.meteostat.net/terms.html?ref=dataleadsfuture.com#availability)
    and can be used commercially.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 数据在[知识共享署名-非商业性使用 4.0 国际许可协议 (CC BY-NC 4.0)](https://dev.meteostat.net/terms.html?ref=dataleadsfuture.com#availability)下授权，并可以用于商业用途。
- en: I used the parquet dataset integrated on [Kaggle](https://www.kaggle.com/datasets/guillemservera/global-daily-climate-data?select=daily_weather.parquet&ref=dataleadsfuture.com)
    based on the Meteostat JSON API for convenience.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用了基于Meteostat JSON API的[Kaggle](https://www.kaggle.com/datasets/guillemservera/global-daily-climate-data?select=daily_weather.parquet&ref=dataleadsfuture.com)上整合的parquet数据集以便于操作。
- en: I used version 2.0 of pandas. The `pandas.read_parquet` method of this version
    can easily read parquet data. But before reading, you need to install `Pyarrow`
    and `Fastparquet`.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用了pandas的2.0版本。这个版本的`pandas.read_parquet`方法可以轻松读取parquet数据。但在读取之前，需要安装`Pyarrow`和`Fastparquet`。
- en: '[PRE14]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Data analysis
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据分析
- en: After the preliminary preparations, we officially entered the data analysis
    process.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在初步准备之后，我们正式进入数据分析过程。
- en: 'First, I read the data into memory and then look at the situation of this dataset:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我将数据读入内存，然后查看这个数据集的情况：
- en: '[PRE16]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![](../Images/e756d9992922f7b49a69d057cb9cb5a8.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e756d9992922f7b49a69d057cb9cb5a8.png)'
- en: Overview of the dataset’s metadata. Image by Author
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集元数据概览。图片作者
- en: As shown in the figure, this dataset contains 13 fields. According to the goal
    of this project, I plan to use the fields of `city_name`, `season`, `min_temp_c`,
    `max_temp_c`, `avg_wind_speed_kmh`.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 如图所示，这个数据集包含13个字段。根据这个项目的目标，我计划使用`city_name`、`season`、`min_temp_c`、`max_temp_c`、`avg_wind_speed_kmh`这些字段。
- en: 'Next, I first remove the data in the corresponding fields that contain empty
    values for subsequent calculations, and then select the desired fields to form
    a new DataFrame:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我首先删除包含空值的字段中的数据，以便进行后续计算，然后选择所需字段以形成一个新的DataFrame：
- en: '[PRE17]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Since I need to calculate the average temperature and temperature difference,
    I use the `Pandas.eval` method to directly calculate the new indicators on the
    DataFrame:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我需要计算平均温度和温差，我使用`Pandas.eval`方法直接在DataFrame上计算新的指标：
- en: '[PRE18]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Then, average a few indicators by `city_name` and `season`:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，按`city_name`和`season`对几个指标进行平均：
- en: '[PRE19]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '![](../Images/e1c5638fa7ff5e7ee38b4ca1b2bcee90.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e1c5638fa7ff5e7ee38b4ca1b2bcee90.png)'
- en: Results after data cleaning and metric calculation. Image by Author
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 数据清理和指标计算后的结果。图片作者
- en: 'Finally, according to the goal of the project, I use `DataFrame.query` to filter
    the dataset:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，根据项目目标，我使用`DataFrame.query`来筛选数据集：
- en: '[PRE20]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '![](../Images/353691e13f5685cd0d98a3beb4e80618.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/353691e13f5685cd0d98a3beb4e80618.png)'
- en: Finally, we obtained the only result that met the criteria. Image by Author
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，我们得到了唯一符合标准的结果。图片由作者提供
- en: 'The final result is out. Only one city meets my requirements: Vladivostok,
    a non-freezing port in the east of Russia. It is indeed an excellent place to
    escape the heat!'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 最终结果出来了。只有一个城市符合我的要求：符拉迪沃斯托克，一个位于俄罗斯东部的非冻结港口。确实是逃离酷热的绝佳地方！
- en: Best Practices and Takeaways
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最佳实践和经验总结
- en: After explaining the project practice of Numexpr, as usual, I will explain some
    of the best practices of Numexpr combined with my own work experience for you.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在解释了 Numexpr 的项目实践后，像往常一样，我会结合自己的工作经验为你讲解一些 Numexpr 的最佳实践。
- en: Avoid overuse
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 避免过度使用
- en: Although Numexpr and pandas `eval` have significant performance advantages when
    handling large data sets. However, dealing with small data sets is not faster
    than regular operations.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 Numexpr 和 pandas 的 `eval` 在处理大数据集时具有显著的性能优势，但处理小数据集的速度并不比常规操作快。
- en: Therefore, you should choose whether to use Numexpr based on the size and complexity
    of the data. And my experience is to use it when you feel the need, as small datasets
    won’t slow things down too much anyway.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，你应该根据数据的大小和复杂性来选择是否使用 Numexpr。我的经验是，当你觉得有需要时使用它，因为小数据集不会拖慢处理速度。
- en: The use of the eval function is limited
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`eval` 函数的使用是有限制的'
- en: The `eval` function does not support all Python and pandas operations.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '`eval` 函数不支持所有的 Python 和 pandas 操作。'
- en: Therefore, before using it, you should consult the [documentation](https://pandas.pydata.org/docs/user_guide/enhancingperf.html?ref=dataleadsfuture.com#expression-evaluation-via-eval)
    to understand what operations eval supports.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在使用之前，你应该查阅 [文档](https://pandas.pydata.org/docs/user_guide/enhancingperf.html?ref=dataleadsfuture.com#expression-evaluation-via-eval)
    以了解 eval 支持哪些操作。
- en: Be careful when handling strings
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理字符串时要小心
- en: Although I used `season="Summer"` to filter the dataset in the project practice,
    the `eval` function is not very fast when dealing with strings.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我在项目实践中使用了 `season="Summer"` 来过滤数据集，但在处理字符串时 `eval` 函数并不非常快速。
- en: If you have a lot of string operations in your project, you need to consider
    other ways.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的项目中有大量的字符串操作，你需要考虑其他方法。
- en: Be mindful of memory usage
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 注意内存使用情况
- en: Although Numexpr no longer generates intermediate arrays, large datasets will
    occupy a lot of memory.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 Numexpr 不再生成中间数组，但大数据集仍会占用大量内存。
- en: For example, the dataset occupies 2.6G of memory in my project example. At this
    time, you have to be very careful to avoid the program crashing due to insufficient
    memory.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在我的项目示例中，数据集占用了 2.6G 的内存。此时，你必须非常小心以避免由于内存不足而导致程序崩溃。
- en: Use the appropriate data type
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用适当的数据类型
- en: This point is detailed in the [official documentation](https://numexpr.readthedocs.io/en/latest/user_guide.html?ref=dataleadsfuture.com#datatypes-supported-internally),
    so I won’t repeat it here.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 这一点在 [官方文档](https://numexpr.readthedocs.io/en/latest/user_guide.html?ref=dataleadsfuture.com#datatypes-supported-internally)
    中有详细说明，所以我在这里不再赘述。
- en: Use the `inplace` parameter when needed
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在需要时使用 `inplace` 参数
- en: Using the `inplace` parameter of the `DataFrame.eval` method can directly modify
    the original dataset, avoiding generating a new dataset and occupying a lot of
    memory.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `DataFrame.eval` 方法的 `inplace` 参数可以直接修改原始数据集，避免生成新的数据集并占用大量内存。
- en: Of course, doing so will lead to modifications to the original dataset, so please
    be careful.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这样做会导致对原始数据集进行修改，因此请小心操作。
- en: Conclusion
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: 'In this article, I brought a comprehensive tutorial on Numexpr, including:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我带来了关于 Numexpr 的全面教程，包括：
- en: The applicable scenarios of Numexpr, the effect of performance improvement,
    and its working principle.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: Numexpr 的适用场景、性能提升效果及其工作原理。
- en: The `eval` and `query` methods in Pandas are also based on Numexpr. It will
    bring great convenience and performance improvement to your pandas' operations
    if used appropriately.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas 中的 `eval` 和 `query` 方法也基于 Numexpr。如果使用得当，它将为你的 pandas 操作带来极大的便利和性能提升。
- en: Through a global weather data analysis project, I demonstrated how to use pandas’
    `eval` and `query` methods in practice.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 通过一个全球天气数据分析项目，我展示了如何在实践中使用 pandas 的 `eval` 和 `query` 方法。
- en: As always, combined with my work experience, I introduced the best practices
    of Numexpar and the eval method of pandas.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 一如既往地，结合我的工作经验，我介绍了 Numexpr 的最佳实践以及 pandas 的 eval 方法。
- en: Thank you for reading. If you have any questions, please leave a message in
    the comment area, and I will answer in time.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读。如果你有任何问题，请在评论区留言，我会及时回复。
- en: Let me start with the basics and walk you through the best scientific computing
    practices at work.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 让我从基础开始，带你了解工作中最佳的科学计算实践。
- en: '![Peng Qian](../Images/fa6bd24b4781f623be8ea40c4e6bdb78.png)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![Peng Qian](../Images/fa6bd24b4781f623be8ea40c4e6bdb78.png)'
- en: '[Peng Qian](https://qtalen.medium.com/?source=post_page-----cdb94965ca3a--------------------------------)'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '[Peng Qian](https://qtalen.medium.com/?source=post_page-----cdb94965ca3a--------------------------------)'
- en: Fast Computing
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 快速计算
- en: '[View list](https://qtalen.medium.com/list/fast-computing-2a37a7e82be5?source=post_page-----cdb94965ca3a--------------------------------)4
    stories![How to Optimize Multidimensional Numpy Array Operations with Numexpr.](../Images/dd4c34ca6ee3502debdeac4c5e73eb46.png)![Use
    Numexpr to help me find the most livable city.](../Images/edbec8eba0dc95e2b00d5f1092f80529.png)![Efficient
    k-Nearest Neighbors (k-NN) Solutions with NumPy](../Images/1e1af2eb2245576645f411b9b5a36a20.png)'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '[查看列表](https://qtalen.medium.com/list/fast-computing-2a37a7e82be5?source=post_page-----cdb94965ca3a--------------------------------)4
    个故事！![如何使用 Numexpr 优化多维 Numpy 数组操作。](../Images/dd4c34ca6ee3502debdeac4c5e73eb46.png)![使用
    Numexpr 帮助我找到最宜居的城市。](../Images/edbec8eba0dc95e2b00d5f1092f80529.png)![使用 NumPy
    的高效 k-最近邻 (k-NN) 解决方案](../Images/1e1af2eb2245576645f411b9b5a36a20.png)'
- en: Thank you for reading my stories.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读我的故事。
- en: You can [**subscribe**](https://www.dataleadsfuture.com/#/portal) to get the
    latest data science stories from me.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以 [**订阅**](https://www.dataleadsfuture.com/#/portal) 以获取我最新的数据科学故事。
- en: Find me on [LinkedIn](https://www.linkedin.com/in/qtalen/) or [Twitter(X)](https://twitter.com/qtalen)
    if you have any questions.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有任何问题，可以在 [LinkedIn](https://www.linkedin.com/in/qtalen/) 或 [Twitter(X)](https://twitter.com/qtalen)
    上找到我。
- en: This article was originally published on [Data Leads Future](https://www.dataleadsfuture.com/exploring-numexpr-a-powerful-engine-behind-pandas/#/portal).
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 本文最初发表在 [数据引领未来](https://www.dataleadsfuture.com/exploring-numexpr-a-powerful-engine-behind-pandas/#/portal)。
