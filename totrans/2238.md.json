["```py\nimport pandas as pd\n\ntaxi_data = pd.read_csv(‘/content/data/taxi_data_sample.csv’)\n```", "```py\ntaxi_data = taxi_data.loc[taxi_data.pickup_longitude > -100]\n```", "```py\n!pip install cartopy\n!apt-get -V -y -qq install python-cartopy python3-cartopy\n!pip install contextily\n```", "```py\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nimport contextily as ctx\nimport cartopy.crs as ccrs\n\ndef loadNewYorkMap():\n  # Load a GeoDataFrame with New York City boundaries\n  ny_shapefile = gpd.read_file(gpd.datasets.get_path('nybb'))\n  nyc = ny_shapefile[ny_shapefile['BoroName'] == 'Manhattan']\n\n  # Add new york city boundaries\n  ax = plt.axes(projection=ccrs.PlateCarree())\n  ax.add_geometries(nyc['geometry'], crs=ccrs.PlateCarree(), edgecolor='black', facecolor='none')\n\n  return ax\n\nax = loadNewYorkMap()\n\nplt.scatter(\n    taxi_data.pickup_longitude,\n    taxi_data.pickup_latitude,\n    transform=ccrs.PlateCarree(),\n    color='red',\n    marker='o'\n)\n\n# Add a basemap using web tiles from OpenStreetMap\nctx.add_basemap(ax, crs=ccrs.PlateCarree(), source=ctx.providers.OpenStreetMap.Mapnik)\nax.set_xticks([])\nax.set_yticks([])\n# Show the plot\nplt.show()\n```", "```py\nscaled_taxi = StandardScaler().fit_transform(taxi_data[[‘pickup_latitude’, ‘pickup_longitude’]])\n```", "```py\n from sklearn.cluster import DBSCAN\n\ntaxi_data[‘cluster_dbscan’] = DBSCAN(eps=0.25, min_samples=100).fit_predict(scaled_taxi)\n```", "```py\ncentroids_dbscan = taxi_data.groupby('cluster_dbscan')[['pickup_latitude', 'pickup_longitude']].mean()\n```", "```py\n# Remove outliers\ncentroids_dbscan = centroids_dbscan.loc[0:]\n```", "```py\ntaxi_data[‘cluster_dbscan_v2’] = DBSCAN(eps=0.1, min_samples=50).fit_predict(scaled_taxi)\n```", "```py\ncentroids_solution_2 = taxi_data.groupby(‘cluster_dbscan_v2’)[[‘pickup_latitude’, ‘pickup_longitude’]].mean()\n\n# Remove outliers\ncentroids_solution_2 = centroids_solution_2.loc[0:]\n```"]