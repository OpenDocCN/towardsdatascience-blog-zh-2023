- en: Speed Typing Test Project with Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/speed-typing-test-project-with-python-da1a56987a5b](https://towardsdatascience.com/speed-typing-test-project-with-python-da1a56987a5b)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Developing a speed typing test project with Python to evaluate the accuracy
    and typing speed
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://bharath-k1297.medium.com/?source=post_page-----da1a56987a5b--------------------------------)[![Bharath
    K](../Images/b6f215f28132a953bcae80842301e303.png)](https://bharath-k1297.medium.com/?source=post_page-----da1a56987a5b--------------------------------)[](https://towardsdatascience.com/?source=post_page-----da1a56987a5b--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----da1a56987a5b--------------------------------)
    [Bharath K](https://bharath-k1297.medium.com/?source=post_page-----da1a56987a5b--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----da1a56987a5b--------------------------------)
    ·8 min read·Mar 22, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4b3a669097f8eafc60c07a7201eda640.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Spencer Davis](https://unsplash.com/@spencerdavis?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Every individual who owns an electronic gadget usually types in their respective
    device, whether a laptop, a phone, or a PC. In the modern world, typing through
    projects is the more utilized and convenient approach for completing a variety
    of tasks.
  prefs: []
  type: TYPE_NORMAL
- en: Personally, I type quite a lot and type different sorts of material and content.
    The range of content varies from typing articles on Medium, analyzing and coding
    Data Science projects, writing important emails, or simply browsing through the
    internet. Although writing helps to generate ideas and think effectively, I cannot
    deny that I spend more time typing than writing.
  prefs: []
  type: TYPE_NORMAL
- en: Whether people fall in the same spectrum as me or a different case for different
    minds and individuals, it is always a great idea to stay on your ‘A’ game when
    typing. In this project, we will design a straightforward speed typing test with
    Python to help evaluate your accuracy, error rate, and typing speed.
  prefs: []
  type: TYPE_NORMAL
- en: We will develop this project on a console interface and print the error rate
    and overall score in words per second. For more curious developers, I recommend
    checking out the advanced GUI interface development with Python, through which
    the project can gain a more appealing and aesthetic look. I have provided the
    link for the following article below.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/advanced-gui-interface-with-python-cb04ef2e29b9?source=post_page-----da1a56987a5b--------------------------------)
    [## Advanced GUI interface with Python'
  prefs: []
  type: TYPE_NORMAL
- en: Getting started with more modern development interfaces with Python for your
    projects
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/advanced-gui-interface-with-python-cb04ef2e29b9?source=post_page-----da1a56987a5b--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: 'Developing the speed testing project:'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](../Images/95f4e3c9fd6eeb9c0bdf8f03714f5dc9.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Fiona Murray](https://unsplash.com/es/@fsmurrayphotography?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: In this section of the article, we will be developing the “speed test” software
    to report the typing scores and error rates while typing for the respective users.
    The test should probably be taken multiple times to gain an average rating for
    determining the true values accordingly.
  prefs: []
  type: TYPE_NORMAL
- en: There are several different ways to approach this project, and I will use the
    most straightforward and simplest way to achieve the desired solutions. I would
    recommend installing the following library provided below to simplify the process.
  prefs: []
  type: TYPE_NORMAL
- en: '*pip install wonderwords*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: You can learn more about this library through the official pip install Python
    package index website from the following [link](https://pypi.org/project/wonderwords/)
    or through the following quick start documentation [website](https://wonderwords.readthedocs.io/en/latest/quickstart.html).
    To make natural language processing tasks easier to understand, I suggest checking
    out one of my previous articles on regular expression operators from the link
    provided below.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/natural-language-processing-made-simpler-with-4-basic-regular-expression-operators-5002342cbac1?source=post_page-----da1a56987a5b--------------------------------)
    [## Natural Language Processing Made Simpler with 4 Basic Regular Expression Operators!'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the four basic regular operations to cleanse almost any kind of
    data available.
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/natural-language-processing-made-simpler-with-4-basic-regular-expression-operators-5002342cbac1?source=post_page-----da1a56987a5b--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: 'Importing the required libraries:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The first step to building our speed test software with Python is to import
    all the necessary libraries. We will use the wonder words library to import the
    random sentence class, which will allow us to generate random sentences to be
    displayed to the user for typing. I prefer using this library as a more generic
    approach to randomly generate different paragraphs each time the speed test needs
    to be performed.
  prefs: []
  type: TYPE_NORMAL
- en: For developers who prefer a varied approach so as to not use the previously
    mentioned library, we can make use of the random library and type your own sentences
    and make your own lists. The choice functionality in the random library is useful
    in incorporating a random selection of the various paragraph choice options to
    be displayed to the tester. The time library module is essential to track the
    typing speed of the user. Below is the list of all the required library imports.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Random sentence generation:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once all the necessary libraries are imported, we can proceed to the next step.
    We will create a sentence list and sentence paragraph as a string variable. We
    will then create a for loop through which we will use the random sentence module
    from the “wonder words” library. Once the following class is assigned to the desired
    variable, we can generate random sentences.
  prefs: []
  type: TYPE_NORMAL
- en: Each of the randomly generated sentences is appended to a list and then converted
    into a string paragraph where all the paragraphs with the respective sentences
    are stored together. These randomly generated paragraphs will be displayed to
    the user. Once displayed, they can be typed to test the appropriate speed and
    error rate.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Error rate computation:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once the random paragraph is stored in a variable, we can proceed to define
    the next step of computing the error rate of the tester typing. I am using a simple
    approach to compute the error rate for the purpose of simplicity in this project.
    Note that this might not be the most efficient method for computing the error
    rate appropriately. I will cover more on the improvements and further advancements
    in the upcoming section.
  prefs: []
  type: TYPE_NORMAL
- en: In this method, we compute the length of the sentence paragraph and create a
    loop in this range. We will then compare each typed in the original sentence paragraph
    versus the typed paragraph. Each time the characters don’t add up, an error count
    is added. The total error percentage is computed by dividing the error count by
    the total length and multiplying the same by 100\. The code snippet for the following
    function is provided below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Final score and error percent:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the final step of this project, we will type a sentence signifying that the
    speed test is starting and the appropriate paragraph must be accurately printed
    in due time with the least errors to achieve the best scores. The start time and
    end time are recorded until the respective paragraph is input by the user. The
    overall time taken is computed by subtracting the start time from the end time.
    The error rate is computed by the previously defined function in this section
    of the article.
  prefs: []
  type: TYPE_NORMAL
- en: I have added an additional step of creating an if loop to measure the error
    percent of the typed sentence. If the error percentage exceeds 50, then the score
    computed may not be accurate, and a re-test might be required. If the error percent
    is less than 50 percent, we can report the speed in words per second and the total
    words per second. Below is the code block for performing the speed test operation.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The speed testing project is now complete. The readers can proceed to perform
    their own tests and check their typing speeds! However, for more curious and interested
    developers, we will perform a test run. I will also suggest a few additional improvements
    to make this project even more intriguing and user-friendly in the upcoming section.
  prefs: []
  type: TYPE_NORMAL
- en: 'Test run and additional improvements:'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](../Images/ebefb219f5e0ef0e826a7751b8a423e8.png)'
  prefs: []
  type: TYPE_IMG
- en: Screenshot by Author
  prefs: []
  type: TYPE_NORMAL
- en: Once you run the program in your respective console (I am using the visual studio
    code editor, but the command prompt can also be used), you should be able to test
    the working code accordingly. In the above screenshot, the readers can notice
    the random sentence that is generated by the wonder words library, and below the
    original paragraph is the paragraph typed by me.
  prefs: []
  type: TYPE_NORMAL
- en: Once I click enter after typing the required paragraph, we can read the score
    report accordingly. From the above screenshot, we can notice that my word speed
    is approximately 4.3 words per second with an error rate of 0.59\. For more precise
    and accurate test scores, I recommend running the above program and taking an
    average of at least five test runs.
  prefs: []
  type: TYPE_NORMAL
- en: 'Another important topic that we will cover in this section is the different
    improvements to be made to further enhance the functionality and style aspect
    of this project. Some of the suggestions are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: For a more customizable approach to generate sentences, either using your own
    custom sentences and the random choice function is a good option. However, if
    the readers want to go one step ahead, the Open AI offers a great option for high-level
    story integration.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The computation for the error rate might be slightly flawed as one character
    error might lead to several faults. A better approach might be to consider all
    the words in both the original paragraph and the typed paragraph and then compare
    the two lists.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A final tip would be to transfer the entire project onto a GUI interface, as
    a console interface can be lackluster. I recommend checking out my previous articles
    on GUIs for a quick start on the starter codes for some of the noteworthy GUI
    options available in Python.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[](/7-best-ui-graphics-tools-for-python-developers-with-starter-codes-2e46c248b47c?source=post_page-----da1a56987a5b--------------------------------)
    [## 7 Best UI Graphics Tools For Python Developers With Starter Codes'
  prefs: []
  type: TYPE_NORMAL
- en: The seven best UI graphics tools available in Python for developing cool user
    interface technologies
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/7-best-ui-graphics-tools-for-python-developers-with-starter-codes-2e46c248b47c?source=post_page-----da1a56987a5b--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: 'Conclusion:'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](../Images/b9073f4bed7fe7f25175de0cc62e196b.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Paul Kansonkho](https://unsplash.com/@studio_alexander?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: “Typing is the future of talking and to don’t forgot and brother of feature.”
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: — ***Deyth Banger***
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Typing is now a significant part of our lives and something that we constantly
    do as a necessity. While we type quite a lot, and it becomes more natural to us
    as we do it more and more, one might be curious as to how quickly they type and
    how accurately they can do so. A good method to find out about this is by improving
    your typing speeds constantly for higher productivity.
  prefs: []
  type: TYPE_NORMAL
- en: In this project, we developed a speed testing software with Python that enables
    us to enter the specific paragraph suggested to us, and upon typing the following
    paragraph with an error percent less than 50, we are able to receive our typing
    scores and percentage error. We also discussed the additional improvements and
    advancements that can be made to further enhance this project.
  prefs: []
  type: TYPE_NORMAL
- en: If you want to get notified about my articles as soon as they go up, check out
    the following [link](https://bharath-k1297.medium.com/subscribe) to subscribe
    for email recommendations. If you wish to support other authors and me, then subscribe
    to the below link.
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://bharath-k1297.medium.com/membership?source=post_page-----da1a56987a5b--------------------------------)
    [## Join Medium with my referral link - Bharath K'
  prefs: []
  type: TYPE_NORMAL
- en: Read every story from Bharath K (and thousands of other writers on Medium).
    Your membership fee directly supports…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: bharath-k1297.medium.com](https://bharath-k1297.medium.com/membership?source=post_page-----da1a56987a5b--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: If you have any queries related to the various points stated in this article,
    then feel free to let me know in the comments below. I will try to get back to
    you with a response as soon as possible. Check out some of my other articles that
    my viewers also enjoy reading!
  prefs: []
  type: TYPE_NORMAL
- en: '[](/the-ultimate-replacements-to-jupyter-notebooks-51da534b559f?source=post_page-----da1a56987a5b--------------------------------)
    [## The Ultimate Replacements to Jupyter Notebooks'
  prefs: []
  type: TYPE_NORMAL
- en: Discussing an excellent replacement option to Jupyter Notebooks for interpreting
    Data Science projects
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/the-ultimate-replacements-to-jupyter-notebooks-51da534b559f?source=post_page-----da1a56987a5b--------------------------------)
    [](/7-best-research-papers-to-read-to-get-started-with-deep-learning-projects-59e11f7b9c32?source=post_page-----da1a56987a5b--------------------------------)
    [## 7 Best Research Papers To Read To Get Started With Deep Learning Projects
  prefs: []
  type: TYPE_NORMAL
- en: The seven best research papers that have stood the test of time and will help
    you to create amazing projects
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/7-best-research-papers-to-read-to-get-started-with-deep-learning-projects-59e11f7b9c32?source=post_page-----da1a56987a5b--------------------------------)
    [](/visualizing-cpu-memory-and-gpu-utilities-with-python-8028d859c2b0?source=post_page-----da1a56987a5b--------------------------------)
    [## Visualizing CPU, Memory, And GPU Utilities with Python
  prefs: []
  type: TYPE_NORMAL
- en: Analyzing CPU, memory usage, and GPU components for monitoring your PC and deep
    learning projects
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/visualizing-cpu-memory-and-gpu-utilities-with-python-8028d859c2b0?source=post_page-----da1a56987a5b--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Thank you all for sticking on till the end. I hope all of you enjoyed reading
    the article. Wish you all a wonderful day!
  prefs: []
  type: TYPE_NORMAL
