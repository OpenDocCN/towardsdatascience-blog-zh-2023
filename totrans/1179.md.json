["```py\nimport pandas as pd\nimport numpy as np\nfrom sklearn import datasets\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import precision_score, recall_score, f1_score, accuracy_score\nimport matplotlib.pyplot as plt\n```", "```py\nwine_data = datasets.load_wine()\nX = wine_data.data\ny = wine_data.target \n```", "```py\nX_train, X_test, Y_train, Y_test = train_test_split(X, y, test_size=0.20, train_size=0.60, random_state=1, stratify=y)\n```", "```py\n#Scale data\nsc = StandardScaler()\nsc.fit(X_train)\nX_train_std = sc.transform(X_train)\nX_test_std = sc.transform(X_test)\n#Apply SVC model\nsvc = SVC(kernel='linear', C=10.0, random_state=1)\nsvc.fit(X_train, Y_train)\n#Obtain predictions\nY_pred = svc.predict(X_test)\n```", "```py\nconf_matrix = confusion_matrix(y_true=y_test, y_pred=y_pred)\n#Plot the confusion matrix\nfig, ax = plt.subplots(figsize=(5, 5))\nax.matshow(conf_matrix, cmap=plt.cm.Oranges, alpha=0.3)\nfor i in range(conf_matrix.shape[0]):\n    for j in range(conf_matrix.shape[1]):\n        ax.text(x=j, y=i,s=conf_matrix[i, j], va='center', ha='center', size='xx-large')\nplt.xlabel('Predicted Values', fontsize=18)\nplt.ylabel('Actual Values', fontsize=18)\nplt.show()\n```", "```py\nprint('Precision: %.3f' % precision_score(Y_test, Y_pred, average='micro'))\nprint('Recall: %.3f' % recall_score(Y_test, Y_pred, average='micro'))\nprint('Accuracy: %.3f' % accuracy_score(Y_test, Y_pred))\nprint('F1 Score: %.3f' % f1_score(Y_test, Y_pred, average='micro'))\n```"]