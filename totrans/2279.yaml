- en: Using Slope Charts to Simplify Your Data Visualization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/using-slope-charts-to-simplify-your-data-visualization-be1f0eaf1f0f](https://towardsdatascience.com/using-slope-charts-to-simplify-your-data-visualization-be1f0eaf1f0f)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Data Visualization, Data Storytelling
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Simplify your overwhelmed charts by using slope charts: a tutorial in Python
    Altair'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://alod83.medium.com/?source=post_page-----be1f0eaf1f0f--------------------------------)[![Angelica
    Lo Duca](../Images/45aa2e2e504bb3af6d3b8009dc6f030e.png)](https://alod83.medium.com/?source=post_page-----be1f0eaf1f0f--------------------------------)[](https://towardsdatascience.com/?source=post_page-----be1f0eaf1f0f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----be1f0eaf1f0f--------------------------------)
    [Angelica Lo Duca](https://alod83.medium.com/?source=post_page-----be1f0eaf1f0f--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----be1f0eaf1f0f--------------------------------)
    ·5 min read·Dec 8, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a91cc8910ee07386dbc528c3a8185455.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: We may plot charts to include as many concepts as possible in our visualization.
    As a result, our chart could be difficult to read and distracting. For this reason,
    before plotting anything, sit in your chair and plan what you want to communicate.
    Then, look at your data and decide what is effectively necessary to plot. Leave
    the rest out of your visualization.
  prefs: []
  type: TYPE_NORMAL
- en: In this tutorial, we’ll see how to use slope charts to simplify an overwhelming
    trendline. If you are a data analyst, you might jump out of your chair and get
    scared because, using a slope chart, you will see a **significant loss of information**.
    But I assure you that, in some cases, it will really be worth it.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s see the cases where a slope chart can be used.
  prefs: []
  type: TYPE_NORMAL
- en: When You Could Use a Slope Chart
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**A slope chart is a type of line chart showing only the first and last points**,
    as shown in the following figure.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/db45f10d635d4565dd2bb7433c59ea65.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: '**A slope chart is particularly useful when you want to know only the slope
    of your data trend. Thus, slope charts are useful to simplify trendlines.** For
    example, you could use a slope chart to see if product sales increase or decrease
    over a period. Imagine that you have many trend lines to represent in the same
    chart, and you are interested only in each trend line''s first and last values.
    You can simplify the chart by using a slope chart.'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s implement a practical example to see how to implement a slope chart in
    Python [Altair](https://altair-viz.github.io/), a Python library for data visualization.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example: The Tourist Arrivals Scenario'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Consider the [arrivals at tourist accommodation establishments](https://ec.europa.eu/eurostat/databrowser/view/tour_occ_arm/default/table?lang=en)
    dataset, released as open data by Eurostat. Imagine you want to compare the tourist
    arrivals in Portugal with those in the other five countries: Germany, France,
    Italy, the United Kingdom, and Spain.'
  prefs: []
  type: TYPE_NORMAL
- en: Start by importing the dataset as a Pandas DataFrame and using the `melt()`
    function to unpivot the dataset, i.e., transform data rows into columns.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Next, plot a basic chart using Python Altair. For an introduction to Altair,
    read this [introductory article](https://medium.com/towards-data-science/3-examples-to-show-python-altair-is-more-than-a-data-visualization-library-700e37cbf95b)
    by [Soner Yıldırım](https://medium.com/u/2cf6b549448?source=post_page-----be1f0eaf1f0f--------------------------------).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The following figure shows the resulting chart:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8f35c2802fa626d491dcedd8347ed8f4.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'The chart is difficult to read. So, let’s improve it by:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Removing missing years:** filter out all the years before 1994 and after
    2018'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Grouping by year and calculating the sum:** instead of showing all the months''
    details, show only the yearly values.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following snippet of code shows how to proceed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, plot the chart again:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The following figure shows the resulting chart:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0e547bc9d648c1e368117b6ba60ddb7b.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Looking at the chart, we notice an increasing trendline for all the countries.
    So, if we want to evaluate how the trendline has changed between the last year
    (2018) and the first year (1984), we can eliminate all the years in the middle
    (1985–2017) and show only the first and last values.
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition, to show the gap more clearly, we can calculate the percentage
    increase between 2018 and 1984, as shown in the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Now, let’s build the chart. We also highlight the trend line related to Portugal
    by using a condition in the `strokeWidth` channel.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The following figure shows the resulting chart:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7ba4963ecc8575662f56e2fb061aae14.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'Just one point needs to be included: the labels related to each chart. Let’s
    add them as textual annotations, as shown in the following snippet of code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Use `transform_calculate()` to format the label properly. The following figure
    shows the resulting chart:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4d5484f8571ab54726cb52ffe89087e1.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: You can continue to work on the chart, for example, by rotating the x-axis labels.
    Anyway, the slope chart is done and is very clear :)
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Congratulations! You have just learned how to implement a slope chart in Python
    Altair!
  prefs: []
  type: TYPE_NORMAL
- en: '**Use a slope chart to show only the first and last values of a trend line.**'
  prefs: []
  type: TYPE_NORMAL
- en: You can find the complete code of the described scenario in the [GitHub repository](https://github.com/alod83/Data-Storytelling-with-Generative-AI-Using-Python-and-Altair/blob/main/CaseStudies/tourist-arrivals/exercises/exercise1.py)
    of my book, Data Storytelling with Generative AI Using Python and Altair. In addition,
    this example is the solution to an exercise proposed in the book. Stay tuned to
    implement more examples :)
  prefs: []
  type: TYPE_NORMAL
- en: If you’ve read this far, I’m pretty satisfied for today. Thanks, and see you
    next time :)
  prefs: []
  type: TYPE_NORMAL
- en: Additional Resources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[BOOK] [Data Storytelling with Generative AI: Using Python and Altair](https://www.manning.com/books/data-storytelling-with-generative-ai)'
  prefs: []
  type: TYPE_NORMAL
- en: '[COURSE] [Using Python Altair for Data Storytelling](https://www.educative.io/courses/using-python-altair-for-data-storytelling)'
  prefs: []
  type: TYPE_NORMAL
- en: You may also be interested in…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This article will show you how to build a geographical map using the Python
    Altair library.
  prefs: []
  type: TYPE_NORMAL
- en: 3 Ways to Build a Geographical Map in Python Altair
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For data scientists, visualizing data is an essential skill. It helps to quickly
    understand patterns and correlations in the data that would otherwise be missed.
    Geographical maps are a great way to [continue reading…](/3-ways-to-build-a-geographical-map-in-python-altair-77c8e0781538)
  prefs: []
  type: TYPE_NORMAL
- en: 3 Ways to Visualize Time Series You May Not Know
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In this article, we will describe three alternative approaches to visualizing
    time series:'
  prefs: []
  type: TYPE_NORMAL
- en: Calendar heatmap
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Box plot
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cycle plot [continue reading…](/3-ways-to-visualize-time-series-you-may-not-know-c8572952ea9c)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
