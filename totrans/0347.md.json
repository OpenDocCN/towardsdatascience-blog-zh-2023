["```py\npip3 install -U pip\npip3 install -U setuptools wheel\npip3 install torch==1.12.1+cpu torchvision==0.13.1+cpu torchtext==0.13.1 -f https://download.pytorch.org/whl/cpu/torch_stable.html\npip3 install autogluon\n```", "```py\n# Import libraries\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom autogluon.tabular import TabularDataset, TabularPredictor\n\n# Show all columns/rows of the dataframe\npd.set_option(\"display.max_columns\", None)\npd.set_option(\"display.max_rows\", None)\n```", "```py\n# Load the data into a dataframe\ndf = pd.read_csv('auto-cleaned.csv')\n```", "```py\n# Split the data into train and test set\ndf_train, df_test = train_test_split(df, test_size=0.3, random_state=1234)\n\nprint(f\"Data includes {df.shape[0]} rows (and {df.shape[1]} columns), broken down into {df_train.shape[0]} rows for training and the balance {df_test.shape[0]} rows for testing.\")\n```", "```py\n# Return top five rows of the data frame\ndf.head()\n```", "```py\n# Run AutoGluon\n\n# Create a dictionary of hyperparameters for the models to be included\nhyperparameters_dict = {\n    'GBM':{}, \n    'CAT':{},\n    'XGB':{},\n    'RF':{}, \n    'XT':{}, \n    'KNN':{},\n    'LR':{},\n    }\n\n# 1\\. Fit/train the models\nautogluon_predictor = TabularPredictor(label=\"price\").fit(train_data=df_train, presets='best_quality', hyperparameters=hyperparameters_dict)\n\n# 2\\. Create predictions\npredictions = autogluon_predictor.predict(df_test)\n\n# 3\\. Create the leaderboard\nautogluon_predictor.leaderboard(silent=True)\n```"]