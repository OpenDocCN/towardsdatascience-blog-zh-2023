- en: 6 Common Index-Related Operations You Should Know about Pandas
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 6个你应该了解的与索引相关的Pandas操作
- en: 原文：[https://towardsdatascience.com/6-common-index-related-operations-you-should-know-about-pandas-783fdba59768](https://towardsdatascience.com/6-common-index-related-operations-you-should-know-about-pandas-783fdba59768)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/6-common-index-related-operations-you-should-know-about-pandas-783fdba59768](https://towardsdatascience.com/6-common-index-related-operations-you-should-know-about-pandas-783fdba59768)
- en: Handle index effectively in your data frames
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在数据框中有效地处理索引
- en: '[](https://yongcui01.medium.com/?source=post_page-----783fdba59768--------------------------------)[![Yong
    Cui](../Images/475918ba9ca0ecd923abe2e7843582a9.png)](https://yongcui01.medium.com/?source=post_page-----783fdba59768--------------------------------)[](https://towardsdatascience.com/?source=post_page-----783fdba59768--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----783fdba59768--------------------------------)
    [Yong Cui](https://yongcui01.medium.com/?source=post_page-----783fdba59768--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://yongcui01.medium.com/?source=post_page-----783fdba59768--------------------------------)[![Yong
    Cui](../Images/475918ba9ca0ecd923abe2e7843582a9.png)](https://yongcui01.medium.com/?source=post_page-----783fdba59768--------------------------------)[](https://towardsdatascience.com/?source=post_page-----783fdba59768--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----783fdba59768--------------------------------)
    [Yong Cui](https://yongcui01.medium.com/?source=post_page-----783fdba59768--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----783fdba59768--------------------------------)
    ·9 min read·Oct 17, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----783fdba59768--------------------------------)
    ·阅读时间9分钟·2023年10月17日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/6020659939470dfe03adf748de117f0e.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6020659939470dfe03adf748de117f0e.png)'
- en: Photo by [Alejandro Luengo](https://unsplash.com/@aluengo91?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Alejandro Luengo](https://unsplash.com/@aluengo91?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Imagine that you have a library filled with thousands of books, each holding
    a treasure trove of information. To find the exact book you need, you’d turn to
    the library’s index (if you have one), right? When you deal with real-world data,
    having a library-like index is essential for you to sift through vast amounts
    of data, pinpointing exactly what you want without rummaging through every bit.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，你有一个装满成千上万本书的图书馆，每本书都包含大量信息。为了找到你需要的确切书籍，你会查看图书馆的索引（如果有的话），对吧？在处理实际数据时，拥有一个类似图书馆的索引对于你筛选大量数据、准确找到所需信息而无需翻遍每一部分是至关重要的。
- en: In this article, I’m going to share some common yet important index-related
    operations, breaking them down using simple applicable scenarios. Whether you’re
    a data newbie or a seasoned pro, you’ll soon see how these operations can be your
    data’s best friend.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我将分享一些常见但重要的与索引相关的操作，通过简单的适用场景来拆解这些操作。无论你是数据新手还是经验丰富的专业人士，你将很快看到这些操作如何成为你数据的最佳伙伴。
- en: Without further ado, let’s get it started.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 不再赘述，开始吧。
- en: As a quick note, in a data frame, both rows and columns are considered indexes,
    but in most data manipulations, we simply consider rows as the index of interest,
    as many datasets are presented in the wide format — each row represents one data
    record and columns represent varied aspects of the data record.
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 简单说明一下，在数据框中，行和列都被视为索引，但在大多数数据操作中，我们通常只将行视为感兴趣的索引，因为许多数据集以宽格式呈现——每一行代表一个数据记录，每一列代表数据记录的不同方面。
- en: In this article, we will be focused on manipulating the index along the rows.
    That is, each item of the index responds to a row.
  id: totrans-12
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们将重点处理沿行操作索引。也就是说，每个索引项对应一行。
- en: 1\. Setting index
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1. 设置索引
- en: A common data manipulation starts with importing data from a tabulated data
    source, such as CSV files. The following screenshot shows you an online data source
    from GitHub.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 常见的数据操作从导入数据开始，比如CSV文件。下面的截图展示了来自GitHub的在线数据源。
- en: '![](../Images/73329ce32683c32ab7cf035499162acc.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/73329ce32683c32ab7cf035499162acc.png)'
- en: The source data used in this blog article (screenshot by author)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本博客文章使用的源数据（由作者提供的截图）
- en: When you import this file, you’ll see that an “extra” column without a name
    appears before the three columns that we’ve seen in the source file.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当你导入这个文件时，你会看到一个“额外”的没有名称的列出现在我们在源文件中看到的三个列之前。
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](../Images/9f022c6ce62e91264a1b7f7d3cd0a4f6.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9f022c6ce62e91264a1b7f7d3cd0a4f6.png)'
- en: The data frame read from the source showing the index
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 从源读取的数据框显示索引
- en: 'The automatically generated index starts with 0 and increments by 1 for each
    additional row. You can access the index by calling:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 自动生成的索引从0开始，并为每个附加行递增1。你可以通过调用以下方法访问索引：
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'If you know the data structure before time, in this case, the dataset has a
    combination of year and month as unique identifiers for the data. You can set
    these two columns as the index when you read the data, as below:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在之前知道数据结构，在本例中，数据集具有年和月作为数据的唯一标识符。你可以在读取数据时将这两列设置为索引，如下所示：
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Note that as we set two columns as the index, we’re creating a data frame using
    multi-index:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，由于我们将两个列设置为索引，我们正在创建一个使用多重索引的数据框：
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Because multi-index isn’t the focus of the present article, I won’t cover too
    much here. However, if you’re interested in multi-index, please refer to [my previous
    article](https://medium.com/p/e6aec29ee6d8) on this topic.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 由于多重索引不是本文的重点，我不会在这里过多讨论。然而，如果你对多重索引感兴趣，请参考[我之前的文章](https://medium.com/p/e6aec29ee6d8)。
- en: 2\. Resetting index
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. 重置索引
- en: 'Let’s continue with the data frame having the multi-index. Because many of
    us are not so used to multi-index, we want still the single scalar index. To do
    that, we can reset the index, as below:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续讨论具有多重索引的数据框。因为我们中的许多人不太习惯多重索引，我们仍然希望使用单一标量索引。为此，我们可以重置索引，如下所示：
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: From the output, you can tell that we’re now using the 0-based index. For the
    `reset_index` function, it has an argument `drop`, which by default is set as
    `False` to keep the original index by converting it to a column. However, there
    are cases where you may want to drop the original index, and one such case is
    when you merge/combine data frames.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 从输出中，你可以看出我们现在使用的是基于0的索引。对于`reset_index`函数，它有一个参数`drop`，默认设置为`False`，以通过将原始索引转换为列来保留原始索引。然而，有时你可能希望丢弃原始索引，例如在合并/组合数据框时。
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: As a simple example shown above, the combined data frame has an index that consists
    of indices from two data frames (as a side note, Pandas allows duplicate values
    in the index). In most cases, we don’t want duplicates in the index, so we want
    to reset the index, as below.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所示的简单示例，合并的数据框具有由两个数据框的索引组成的索引（顺便提一下，Pandas允许索引中有重复值）。在大多数情况下，我们不希望索引中有重复项，因此我们希望重置索引，如下所示。
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: In the code snippet above, I’m showing you a contrast when `drop` is set to
    `False` (the default one) and `True`. As you can tell, in this case, the ideal
    operation is the latter — drop the original index.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述代码片段中，我展示了当`drop`设置为`False`（默认值）和`True`时的对比。正如你所见，在这种情况下，理想的操作是后者——丢弃原始索引。
- en: 3\. Selecting data using the index
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. 使用索引选择数据
- en: We have learned how to set and reset the index, but what can we use with the
    index? As you may have noticed, the index marks the positions of the data, serving
    as an identifier for each row, so the first usage is using the index for data
    selection.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经学习了如何设置和重置索引，但我们可以用索引做些什么呢？正如你可能已经注意到的，索引标记了数据的位置，作为每行的标识符，因此第一个用途是使用索引进行数据选择。
- en: When it comes to data selection using the index, the most common way is to use
    the `iloc` method. The following code shows you how to select a single row of
    data.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用索引进行数据选择时，最常用的方法是使用`iloc`方法。以下代码演示了如何选择单行数据。
- en: '[PRE7]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'As shown above, you can either use a single number — in this case, 0 selects
    the first row, or you can use a number and : (to select all columns). If you want
    to select a single or a subset of columns. You specify the index of the columns:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所示，你可以使用一个数字——在本例中，0选择了第一行，或者你可以使用一个数字和： （选择所有列）。如果你想选择一个或一个子集的列，你需要指定列的索引：
- en: '[PRE8]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: In the examples above, `iloc[2, 0]` selects the data in the 3rd row and 1st
    column. Please note that both rows and columns use a 0-based index. The code `iloc[2,
    :2]` selects the 3rd row and the first 2 columns (columns 0 and 1) — just as in
    other Python slice operations, the end index (2 in this case) is not included.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述示例中，`iloc[2, 0]`选择了第3行第1列的数据。请注意，行和列都使用基于0的索引。代码`iloc[2, :2]`选择第3行和前两个列（第0列和第1列）—就像其他Python切片操作一样，结束索引（在本例中为2）是不包括在内的。
- en: 'Another thing to know is that when you have many columns, it can be tedious
    to find out the index of the columns of interest by counting. Fortunately, we
    can have the following solution:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个需要了解的事情是，当你有许多列时，通过计数来找出感兴趣列的索引可能会很繁琐。幸运的是，我们可以使用以下解决方案：
- en: '[PRE9]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 4\. Merging data using the index
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4\. 使用索引合并数据
- en: When you work with multiple data frames, you often need to merge the data for
    subsequent processing. Although you can use various methods for merging operations,
    such as `merge`, `join`, `combine`, and `concat`, the most versatile one is `merge`.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当你处理多个数据框时，你通常需要合并数据以进行后续处理。虽然你可以使用各种方法进行合并操作，如`merge`、`join`、`combine`和`concat`，但最通用的方法是`merge`。
- en: In my daily data processing jobs, I mostly use named columns when I use `merge`.
    A code example is shown below. We just created some mock data by adding 11 to
    the existing years, and I used `“year”` and `“month”` for merging.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的日常数据处理工作中，我大多使用命名列来进行`merge`。以下是一个代码示例。我们通过将现有年份加11来创建了一些模拟数据，并使用了`“year”`和`“month”`进行合并。
- en: '[PRE10]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: However, the `merge` method also supports merging on the index. Here’s an example.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，`merge`方法也支持基于索引的合并。以下是一个示例。
- en: '[PRE11]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: As shown above, we specified to use the index for both data frames by setting
    `True` to `left_index` and `right_index`. This way, we’re getting a merged data
    frame that has the same index as individual data frames.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所示，我们通过将`True`设置为`left_index`和`right_index`来指定使用索引。这种方式，我们得到一个合并后的数据框，其索引与单个数据框相同。
- en: 5\. Including/Excluding index when exporting data
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5\. 导出数据时包括/排除索引
- en: 'When we’re working with our collaborators, we need to share the data sets.
    One common format of the data is in the CSV format. So, we need to export our
    data frames into CSV files, as shown below:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们与合作伙伴一起工作时，我们需要共享数据集。数据的一种常见格式是CSV格式。因此，我们需要将数据框导出为CSV文件，如下所示：
- en: '[PRE12]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'As shown in the code snippet above, we use the `to_csv` method to create a
    CSV file. You may notice that when we read the CSV file, we find that the CSV
    file has an extra column other than the 3 columns that we start with. It’s easy
    for you to figure out that the extra column is the index. That is, when you export
    a data frame to a CSV file, the index is exported by default. However, it can
    be confusing to others if you do include this index column, and thus, you can
    override the default behavior by doing the following:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如上面的代码片段所示，我们使用`to_csv`方法创建一个CSV文件。你可能会注意到，当我们读取CSV文件时，我们发现CSV文件中有一个额外的列，除了我们开始时的3列。很容易看出，额外的列就是索引。也就是说，当你将数据框导出到CSV文件时，默认情况下会导出索引。然而，如果包含这个索引列可能会让其他人感到困惑，因此你可以通过以下方法覆盖默认行为：
- en: '[PRE13]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: From the printout, you can tell that the index has been removed from the exported
    CSV file. The change is due to that we set the index argument as False in the
    `to_csv` method call. This setting dictates that please don’t include the index
    in the exported file.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 从打印输出中，你可以看出索引已经从导出的CSV文件中移除。这是因为我们在`to_csv`方法调用中将索引参数设置为False。此设置指示不要在导出的文件中包含索引。
- en: 6\. Converting index to columns in a Groupby operation
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6\. 在Groupby操作中将索引转换为列
- en: 'When you aggregate data, one of the most common approaches involves using the
    `groupby` method. For example, with the data frame, we want to find out the total
    number of passengers for each year, as below:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 当你汇总数据时，一种常见的方法是使用`groupby`方法。例如，在数据框中，我们想要找出每年的乘客总数，如下所示：
- en: '[PRE14]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: As shown above, we find out the sum of passengers by grouping the data by year.
    One thing you may not notice is that the output `total_passengers` is in the `Series`
    format.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所示，我们通过按年份分组数据来计算乘客总数。你可能没有注意到的一点是，输出的`total_passengers`是`Series`格式。
- en: '[PRE15]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'As you may know, `Series` isn’t the best to work with other data frames. Thus,
    it’s usually preferable if we can obtain a data frame as the output in a Groupby
    operation. The following shows you how:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所知，`Series`与其他数据框一起使用时并不是最佳选择。因此，如果我们能在Groupby操作中获得数据框作为输出，通常会更为理想。以下展示了如何操作：
- en: '[PRE16]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: In the `groupby` method call, we simply specify that `as_index` as `False`,
    which means that we don’t want to use the grouping by variable(s) as the resulting
    data frame. With this data frame output, it’s easier to work on it.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在`groupby`方法调用中，我们只是简单地将`as_index`设置为`False`，这意味着我们不希望使用分组变量作为结果数据框。使用这种数据框输出，操作会更简单。
- en: Conclusions
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: In this article, we reviewed the most common 6 operations that are relevant
    to the index in a data frame. I hope you find this article useful.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们回顾了与数据框中的索引相关的最常见的6个操作。希望你觉得这篇文章有用。
- en: Want to learn more about Python and Pandas? Please consider signing up for my
    newsletter email. If you want to level up your Python skills in a systematic way,
    please check out my new book [Python How-To](https://www.manning.com/books/python-how-to)
    by Manning.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 想了解更多关于 Python 和 Pandas 的内容吗？请考虑订阅我的电子邮件通讯。如果你想系统地提升你的 Python 技能，请查看 Manning
    出版的我的新书 [Python How-To](https://www.manning.com/books/python-how-to)。
