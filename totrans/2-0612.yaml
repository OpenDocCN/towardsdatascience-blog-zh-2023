- en: Creating Your Personalized Voice Assistant with GPT and Whisper
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 GPT 和 Whisper 创建个性化语音助手
- en: 原文：[https://towardsdatascience.com/creating-your-personalized-voice-assistant-with-gpt-and-whisper-ddb9bd8c419](https://towardsdatascience.com/creating-your-personalized-voice-assistant-with-gpt-and-whisper-ddb9bd8c419)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/creating-your-personalized-voice-assistant-with-gpt-and-whisper-ddb9bd8c419](https://towardsdatascience.com/creating-your-personalized-voice-assistant-with-gpt-and-whisper-ddb9bd8c419)
- en: A Step-by-Step Guide
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分步指南
- en: '[](https://donatoriccio.medium.com/?source=post_page-----ddb9bd8c419--------------------------------)[![Donato
    Riccio](../Images/0af2a026e72a023db4635522cbca50eb.png)](https://donatoriccio.medium.com/?source=post_page-----ddb9bd8c419--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ddb9bd8c419--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ddb9bd8c419--------------------------------)
    [Donato Riccio](https://donatoriccio.medium.com/?source=post_page-----ddb9bd8c419--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://donatoriccio.medium.com/?source=post_page-----ddb9bd8c419--------------------------------)[![Donato
    Riccio](../Images/0af2a026e72a023db4635522cbca50eb.png)](https://donatoriccio.medium.com/?source=post_page-----ddb9bd8c419--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ddb9bd8c419--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ddb9bd8c419--------------------------------)
    [Donato Riccio](https://donatoriccio.medium.com/?source=post_page-----ddb9bd8c419--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ddb9bd8c419--------------------------------)
    ·6 min read·May 18, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ddb9bd8c419--------------------------------)
    ·6 分钟阅读·2023 年 5 月 18 日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/91c085fb9d42bb3ace220b9baec4f77a.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/91c085fb9d42bb3ace220b9baec4f77a.png)'
- en: Photo by [Ivan Bandura](https://unsplash.com/@unstable_affliction?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Ivan Bandura](https://unsplash.com/@unstable_affliction?utm_source=medium&utm_medium=referral)
    拍摄，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: This article aims to guide you in creating a simple yet powerful voice assistant
    tailored to your preferences. We’ll use two powerful tools, Whisper and GPT, to
    make this happen. You probably already know GPT and how powerful it is, but *what
    is Whisper?*
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本文旨在指导你创建一个简单而强大的语音助手，按照你的偏好定制。我们将使用两个强大的工具——Whisper 和 GPT，来实现这一目标。你可能已经知道 GPT
    及其强大之处，但*Whisper 是什么？*
- en: Whisper is an advanced speech recognition model from OpenAI that offers accurate
    audio-to-text transcription.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Whisper 是 OpenAI 提供的先进语音识别模型，能够提供准确的音频转文本服务。
- en: We’ll walk you through each step, with coding instructions included. At the
    end, you’ll have your very own voice assistant up and running.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将逐步指导你完成每个步骤，并包含编码指令。最终，你将拥有一个运行良好的语音助手。
- en: Before you begin
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在你开始之前
- en: Open AI API keys
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: OpenAI API 密钥
- en: If you already have an OpenAI API key you can skip this section.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经有了 OpenAI API 密钥，可以跳过这一部分。
- en: Both Whisper and GPT APIs require an OpenAI API key to be accessed. Unlike ChatGPT
    where the subscription is a fixed fee, the API key is paid based on how much you
    use the service.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Whisper 和 GPT APIs 都需要 OpenAI API 密钥才能访问。与 ChatGPT 的固定费用订阅不同，API 密钥的费用是根据你使用服务的多少来计算的。
- en: The prices are reasonable. At the time of writing, Whisper is priced at $0.006
    / minute, GPT (with the model gpt-3.5-turbo) at $0.002 / 1K tokens (a token is
    approximately 0.75 words).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 价格合理。撰写本文时，Whisper 的价格为 $0.006 / 分钟，GPT（使用模型 gpt-3.5-turbo）的价格为 $0.002 / 1K
    tokens（一个 token 大约是 0.75 个单词）。
- en: '![](../Images/90f919b32509289cf43eb40b7d2ef4a2.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/90f919b32509289cf43eb40b7d2ef4a2.png)'
- en: OpenAI’s website. Image by the author.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: OpenAI 网站。图片来源于作者。
- en: To get your key, first create an account on the OpenAI website. After signing
    in, click on your name at the top-right corner and choose *View API keys*. Once
    you click *Create new secret key* your key is displayed. Make sure to save it,
    because you won’t be able to see it again.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取你的密钥，首先在 OpenAI 网站上创建一个账户。登录后，点击右上角的你的名字，然后选择*查看 API 密钥*。点击*创建新的密钥*后，你的密钥将会显示出来。务必保存它，因为你之后将无法再次查看。
- en: Packages
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 包
- en: The code chunk shows the required libraries for the project. The project involves
    using OpenAI’s Python library for AI tasks, **pyttsx3** for generating speech,
    **SoundDevice** for recording and playing back audio, **numpy** and **scipy**
    for mathematical operations. As always, you should create a new virtual environment
    before installing packages when starting a new project.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块显示了项目所需的库。该项目涉及使用OpenAI的Python库进行AI任务，**pyttsx3**用于生成语音，**SoundDevice**用于录音和播放音频，**numpy**和**scipy**用于数学运算。像往常一样，在开始新项目时，你应该创建一个新的虚拟环境，然后安装包。
- en: Code structure
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码结构
- en: Our code will be structured around a single class, and take up approximately
    90 lines of code in total. It assumes that you have a basic understanding of Python
    classes.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的代码将围绕一个类进行结构化，总共约90行代码。假设你对Python类有基本了解。
- en: '![](../Images/1471474c58d6a02c0eb23166249a635c.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1471474c58d6a02c0eb23166249a635c.png)'
- en: Image by the author.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 由作者提供的图片。
- en: 'The `listen`method captures the user’s spoken input and converts it to text
    using Whisper. The `think`method sends the text to GPT, which generates a natural
    language response. The `speak`method converts the response text into an audio
    that is played back. The process repeats: the user is able to interact in a conversation
    by making another request.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '`listen`方法捕获用户的语音输入，并使用Whisper将其转换为文本。`think`方法将文本发送到GPT，生成自然语言响应。`speak`方法将响应文本转换为音频并播放。这个过程会重复：用户可以通过发出另一个请求来继续对话。'
- en: '![](../Images/bb587d1395678babdd36f258fffa8f0a.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bb587d1395678babdd36f258fffa8f0a.png)'
- en: Code structure. Image by the author.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 代码结构。由作者提供的图片。
- en: __init__
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: __init__
- en: This function takes care of initializing the history and setting up the API
    key.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数负责初始化历史记录和设置API密钥。
- en: We need a history that keep track of the previous messages. It’s basically our
    assistant’s short-term memory, and allows it to remember what you said earlier
    in the conversation.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要一个历史记录来跟踪之前的消息。它基本上是我们助手的短期记忆，允许它记住你在对话中早些时候说过的话。
- en: listen
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: listen
- en: '![](../Images/220a3e3def47c2b30b9682c48feef6fb.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/220a3e3def47c2b30b9682c48feef6fb.png)'
- en: The listen function. Image by the author.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: listen函数。由作者提供的图片。
- en: This method is our assistant’s ears.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这个方法是我们助手的“耳朵”。
- en: The `listen` function allows to receive input from the user. This function records
    audio from your microphone and transcribes it into text.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`listen`函数允许接收用户的输入。此函数从你的麦克风录制音频，并将其转录为文本。'
- en: 'Here’s what it does:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 它的功能如下：
- en: Prints *Listening…* when recording audio.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 录制音频时打印*Listening…*。
- en: Records audio for 3 seconds (or any duration you want) using sounddevice at
    a sample rate of 44100 Hz.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用sounddevice在44100 Hz的采样率下录制3秒（或任何你想要的时间）的音频。
- en: Saves the recorded audio as a NumPy array in a temporary WAV file.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将录制的音频作为NumPy数组保存到临时WAV文件中。
- en: Uses the OpenAI API’s `transcribe`method to send the audio to Whisper, which
    transcribes it.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用OpenAI API的`transcribe`方法将音频发送到Whisper进行转录。
- en: Prints the transcribed text to the console to confirm that the transcription
    was successful.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打印转录的文本到控制台，以确认转录是否成功。
- en: Returns the transcribed text as a string.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 返回转录的文本作为字符串。
- en: In the example, the assistant listens for 3 seconds, but you can change the
    time as you want.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在示例中，助手监听了3秒，但你可以根据需要更改时间。
- en: think
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: think
- en: '![](../Images/b88809c7d91c07d6363a1d3b71e75427.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b88809c7d91c07d6363a1d3b71e75427.png)'
- en: The think function. Image by the author.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: think函数。由作者提供的图片。
- en: Our assistant’s brain is powered by GPT. The think function receives what the
    assistant hears and elaborates a response. *How?*
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们助手的大脑由GPT提供支持。think函数接收助手听到的内容并提出响应。*怎么做到的？*
- en: The response is not created on your computer. The text needs to be sent to OpenAI’s
    servers to be processed through the APIs. The response is then saved in the response
    variable, and both the user message and the response are added to the history,
    the assistant’s short term memory. provide context to the GPT model for generating
    responses.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 响应不是在你的计算机上生成的。文本需要发送到OpenAI的服务器，通过API进行处理。然后将响应保存在响应变量中，用户消息和响应都添加到历史记录中，这是助手的短期记忆，为GPT模型生成响应提供上下文。
- en: speak
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: speak
- en: '![](../Images/38616ab8a0bee7bf85d420f72f7dd8b2.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/38616ab8a0bee7bf85d420f72f7dd8b2.png)'
- en: The speak function. Image by the author.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: speak函数。由作者提供的图片。
- en: 'The **speak** function is responsible for converting text into speech and playing
    it back to the user. This function takes a single parameter: text. It should be
    a string that represents the text to be converted to speech.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**speak**函数负责将文本转换为语音并播放给用户。这个函数接受一个参数：text。它应该是一个表示要转换为语音的文本的字符串。'
- en: When the function is called with a text string as an argument, it initializes
    the pyttsx3 speech engine with the command `engine = pyttsx3.init()` This object,
    `engine` is the main interface for converting text to speech.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 当函数被调用并传入一个文本字符串作为参数时，它会用命令`engine = pyttsx3.init()`初始化pyttsx3语音引擎。这个对象`engine`是将文本转换为语音的主要接口。
- en: The function then instructs the speech engine to convert the provided text into
    speech using the command `engine.say(text)`. This queues up the provided text
    to be spoken. The command `engine.runAndWait` tells the engine to process the
    queued command.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，函数指示语音引擎使用命令`engine.say(text)`将提供的文本转换为语音。这会将提供的文本排队等待朗读。命令`engine.runAndWait`告诉引擎处理排队的命令。
- en: Pyttsx3 handles all text-to-speech conversion locally, which can be a significant
    advantage in terms of latency.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: Pyttsx3在本地处理所有文本到语音的转换，这在延迟方面可以是一个显著的优势。
- en: Final touches
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最终修饰
- en: The assistant is now ready. We just need to create an assistant object, and
    begin the conversation.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 助手现在已经准备好。我们只需创建一个助手对象，开始对话即可。
- en: The conversation is an infinite loop that ends when the user says a sentence
    containing *Goodbye*.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 对话是一个无限循环，直到用户说出包含*Goodbye*的句子时才结束。
- en: Tips to Personalize Your Experience
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 个性化体验的小贴士
- en: 'Customizing your GPT assistant is a breeze! The code that we built is very
    modular, and it allows you to customize it by adding a a variety of features.
    Here are some ideas to get you started:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义你的GPT助手非常简单！我们构建的代码非常模块化，可以通过添加各种功能来进行自定义。这里有一些想法可以帮助你入门：
- en: '**Give a role to the assistant**: Change the initial prompt to make your assistant
    act as your English teacher, motivational speaker, or anything else you can think
    of! Check out [Awesome ChatGPT Prompts](https://github.com/f/awesome-chatgpt-prompts)
    for more ideas.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**为助手赋予角色**：更改初始提示，让你的助手扮演英语老师、励志演讲者或其他任何你能想到的角色！查看[Awesome ChatGPT Prompts](https://github.com/f/awesome-chatgpt-prompts)获取更多创意。'
- en: '**Change the language:** Want to use another language? No problem! Simply change
    *english* in the code to your desired language.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**更改语言：** 想使用其他语言？没问题！只需将代码中的*english*更改为你想要的语言即可。'
- en: '**Build an app:** You can easily integrate the assistant in any application.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**构建应用程序：** 你可以轻松地将助手集成到任何应用程序中。'
- en: '**Add personality:** Give your assistant a unique personality by adding custom
    responses or using different tones and language styles.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**添加个性：**通过添加自定义回应或使用不同的语调和语言风格，赋予你的助手独特的个性。'
- en: '**Integrate with other APIs**: Integrate your assistant with other APIs to
    provide more advanced functionality, such as weather forecasts or news updates.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**与其他API集成：** 将你的助手与其他API集成，以提供更高级的功能，如天气预报或新闻更新。'
- en: Conclusion
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In this article, we explained how to retrieve your OpenAI API key and provided
    code examples for the listen, think, and speak functions that are used to capture
    user input, generate responses, and convert text to speech for playback.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们解释了如何检索你的OpenAI API密钥，并提供了用于捕获用户输入、生成回应和将文本转换为语音以进行播放的listen、think和speak函数的代码示例。
- en: With this knowledge, you may begin creating your own unique voice assistant
    that is suited to your specific demands. The possibilities are infinite, from
    creating a personal assistant to help with daily tasks, to building a voice-controlled
    automation system. You can access all the code in the linked [GitHub repo](https://github.com/reese3222/nanoassistant).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些知识，你可以开始创建适合你特定需求的独特语音助手。从创建一个帮助日常任务的个人助手，到构建一个语音控制的自动化系统，可能性是无限的。你可以在链接的[GitHub
    repo](https://github.com/reese3222/nanoassistant)中获取所有代码。
- en: '*Enjoyed this article? Get weekly data science interview questions delivered
    to your inbox by subscribing to my newsletter,* [*The Data Interview*](https://thedatainterview.substack.com/)*.*'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '*喜欢这篇文章吗？订阅我的新闻通讯，[*The Data Interview*](https://thedatainterview.substack.com/)，每周将数据科学面试问题发送到你的邮箱。*'
- en: '*Also, you can find me on* [*LinkedIn*](https://www.linkedin.com/in/driccio/)*.*'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '*此外，你还可以在* [*LinkedIn*](https://www.linkedin.com/in/driccio/)*上找到我*。'
