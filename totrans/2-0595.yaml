- en: Create Tailor-Made Tourist Maps with Folium
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/create-tailor-made-tourist-maps-with-folium-954706cc04e8](https://towardsdatascience.com/create-tailor-made-tourist-maps-with-folium-954706cc04e8)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Jazz up your next vacation!
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@lee_vaughan?source=post_page-----954706cc04e8--------------------------------)[![Lee
    Vaughan](../Images/9f6b90bb76102f438ab0b9a4a62ffa3f.png)](https://medium.com/@lee_vaughan?source=post_page-----954706cc04e8--------------------------------)[](https://towardsdatascience.com/?source=post_page-----954706cc04e8--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----954706cc04e8--------------------------------)
    [Lee Vaughan](https://medium.com/@lee_vaughan?source=post_page-----954706cc04e8--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----954706cc04e8--------------------------------)
    ·7 min read·May 17, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1cfaa27bc421326f160d3d3bc945c27f.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
- en: Photo by [Kayla Duhon](https://unsplash.com/@kayla_marie?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/zsqF_j9ZHXw?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: 'I’m a sucker for tacky tourist maps. You know the ones I’m talking about: those
    colorful, cartoony maps with 3-D renderings of castles, monuments, and the London
    Eye. Wouldn’t it be great to make a customized version for your own vacation?
    Well, hang on to your passport, because if you know Python, that’s just what we’re
    going to do!'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: In this *Quick Success Data Science* project, we’ll use the *Folium* library
    to make a customized tourist map for my Iceland vacation. We’ll use custom icons
    for volcanoes and waterfalls, overlay terrain and road maps, and mark the accommodation
    locations. Don’t fret if you’re never going to Iceland, because you can use this
    project as a template for your *own* trips.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: Key Programming Subjects Covered
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This project isn’t all fun and games. You’ll also learn a few useful geospatial
    techniques such as:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: How to stack base map tiles in Folium to show multiple feature types on the
    same map.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How to use your own custom markers for features on the map.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How to add static text to a Folium map and change its size and color (it’s not
    as straightforward as you might think).
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How to add an index map.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Folium
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The open-source [Folium](https://python-visualization.github.io/folium/) library
    lets you visualize maps using [*Leaflet.JS*](https://leafletjs.com/), a powerful
    JavaScript library for building interactive web-mapping applications on mobile
    and desktop platforms. First released in 2013, Folium is extremely popular, and
    you’ll find a wealth of material on the internet to help you learn how to use
    it and customize it to your needs.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: With Folium, you can select *tilesets* from mapping services like OpenStreetMap,
    Mapbox, and Stamen. These tilesets are collections of raster or vector data broken
    up into a uniform grid of square tiles with up to 22 preset zoom levels. They
    let you produce beautiful leaflet maps with little effort.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: 'To install Folium in a conda environment, use the following command:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: '`conda install -c conda-forge folium`'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: 'To install Folium with pip use:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: '`pip install folium`'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: 'For convenience, we’ll also use the open-source [*pandas* library](https://pandas.pydata.org/docs/).
    You can install it with the following commands:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: '`conda install pandas`'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: or
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '`pip install pandas`'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: The Code
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The following code was entered into Jupyter Notebook and is described by cell.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: Importing Libraries
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Folium is designed for dynamic, interactive mapping in web applications. However,
    for this project, we’re going to use it to make a *static* map that we can print
    on paper and shove in a backpack.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: We’ll use Folium’s `plugins` module to make an index map that places the mapped
    area in a larger context. The `DivIcon` module will permit us to use custom icons
    for objects like waterfalls and volcanoes.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Loading the Volcano Database
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Iceland could easily have been named, “Volcanoland,” because it has around 130
    volcanic mountains of which over 30 are classified as “active.” I’ve compiled
    a `CSV` file of some of these with their names and coordinates and saved it as
    a Gist. For convenience, we'll import this file as a pandas DataFrame.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/e4504087709bec530f6877bef63021b4.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
- en: The Volcano DataFrame (image by the author)
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: Accommodations
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It’s easy to lose track of time on a long vacation, so we’ll record the location
    of each night’s accommodation as “Day 1,” “Day 2,” and so on (you could easily
    use the actual date or something else). To generate a plottable database, I performed
    an online search for the latitude and longitude of each town and entered it as
    a Python dictionary.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Waterfalls
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Iceland could also be called “Waterfallland,” as it has over 10,000 waterfalls.
    Fortunately, I only plan to visit six, so we’ll enter these as a Python dictionary,
    as we did for the accommodations.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Custom Icons
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Icons* are visual representations of features on a map. A familiar example
    is the upside-down teardrop used to mark locations on Google Maps. For this project,
    we’ll use custom icons for volcanoes and waterfalls. For accommodations, we’ll
    use Folium’s standard *circle marker*.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2bb55f6d3e704d49d5aa227bc3dd9021.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
- en: Icons used in this project (image by the author)
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: To represent waterfalls, I used the royalty-free waterfall icon that came with
    my Microsoft 365 subscription. For volcanoes, I used an icon from [*ICONFINDER*](https://www.iconfinder.com/search?q=volcano).
    I paid for this icon so it would be licensed for [commercial use](https://www.iconfinder.com/search?q=volcano&license=gte__1)
    without attribution.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: I can’t provide these particular icons to you, so you’ll have to supply your
    own. Just do an online search for “waterfall icons” and “volcano icons.” Of course,
    you’ll want to be sure that these icons are properly licensed for whatever you
    intend to use them for.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我不能提供这些特定的图标，所以你需要自己准备。只需在线搜索“瀑布图标”和“火山图标”。当然，你需要确保这些图标有适当的许可，适用于你打算使用它们的目的。
- en: Folium supports multiple file types, like PNG and JPG, and permits the scaling
    of icon images, so you don’t have to worry about the size of the icon. Save the
    icons in the same folder as your notebook or Python script.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Folium 支持多种文件类型，如 PNG 和 JPG，并允许缩放图标图像，因此你无需担心图标的大小。将图标保存在与笔记本或 Python 脚本相同的文件夹中。
- en: Plotting the Map
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绘制地图
- en: The final notebook cell plots the map. At a high level, we’ll first pick a center
    point location for the map, then overlay tilesets at a predetermined zoom level.
    We’ll then loop through the volcano, waterfall, and accommodations databases and
    post the icons and corresponding names. We’ll finish by adding an index map. A
    more detailed explanation follows the code.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 最终的笔记本单元格绘制了地图。在高层次上，我们将首先选择地图的中心点位置，然后在预定的缩放级别上覆盖图块。接着，我们会循环遍历火山、瀑布和住宿数据库，并发布图标及相应的名称。最后，我们会添加一个索引地图。更详细的解释在代码后面。
- en: '[PRE4]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The first step is to assign lat-lon coordinates for the map’s center point to
    a variable called `center_location`. Next, we call the Folium `Map` class and
    pass it the location, the tile to use, and a starting zoom level. The `control_scale`
    parameter activates the map's scale bar.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是为地图的中心点分配经纬度坐标到一个名为`center_location`的变量中。接下来，我们调用 Folium 的`Map`类，并传入位置、要使用的图块和初始缩放级别。`control_scale`参数激活地图的比例尺。
- en: While the `Stamen Terrain` tile includes roads, they are faint and hard to see,
    so we overlay the terrain tile with the darker `Stamen Toner` tile. By setting
    the toner tile’s opacity to a low value like 0.3, the terrain tile is only partially
    obscured.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然`Stamen Terrain`图块包含道路，但它们很淡且难以辨认，因此我们用较暗的`Stamen Toner`图块覆盖地形图块。通过将 toner
    图块的不透明度设置为较低的值，比如0.3，地形图块仅部分被遮盖。
- en: To see additional map tiles available in Folium, check out this [blog](https://deparkes.co.uk/2016/06/10/folium-map-tiles/).
  id: totrans-56
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 要查看 Folium 中可用的其他地图图块，请查看这个[博客](https://deparkes.co.uk/2016/06/10/folium-map-tiles/)。
- en: We next loop through the volcanoes DataFrame and post its contents. The `folium.features.CustomIcon()`
    method lets us use our custom volcano icon and control its size. The `folium.Marker()`
    class actually posts each volcano icon on the map.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们循环遍历火山数据帧并发布其内容。`folium.features.CustomIcon()`方法允许我们使用自定义火山图标并控制其大小。`folium.Marker()`类实际上会将每个火山图标发布到地图上。
- en: 'Here’s the hard part. Folium is designed for dynamic, interactive web maps,
    so doing something as seemingly basic as posting static text is a little fiddly.
    We have to use the `html` argument and pass it `f''<div style="font-size: 8pt">%s</div>''
    % str(row[''Volcano Name''])`. We use this html format to not only post the name
    but to control its font size. Note how the text must be converted into a string
    before it can be plotted.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '这是难点。Folium 旨在用于动态、交互式的网页地图，因此做一些看似基本的静态文本发布操作有点麻烦。我们必须使用`html`参数并传递`f''<div
    style="font-size: 8pt">%s</div>'' % str(row[''Volcano Name''])`。我们使用这种 HTML 格式不仅是为了发布名称，还为了控制其字体大小。注意文本必须转换为字符串后才能绘制。'
- en: Plotting the waterfall and accommodation locations follows the same basic format.
    A difference is that we use the `html` argument to change the text color for waterfalls
    to blue.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制瀑布和住宿地点遵循相同的基本格式。不同的是，我们使用`html`参数将瀑布的文本颜色更改为蓝色。
- en: We finish by adding an index map (`mini_map`). This map will dynamically reposition
    itself as you zoom in and out.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过添加一个索引地图（`mini_map`）来完成。这张地图会在你放大和缩小时动态调整位置。
- en: 'Here’s the final map:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这是最终的地图：
- en: '![](../Images/9d9ac83c09466e8a2f3272b404256ab1.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9d9ac83c09466e8a2f3272b404256ab1.png)'
- en: The final tourist map (image by the author)
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 最终的旅游地图（作者提供的图像）
- en: An important consideration when making a tourist map is to tailor the icons
    and text to the *final zoom level* that you want to print. Ideally, this will
    be the zoom level passed to the `zoom_start` argument when calling `folium.Map()`.
    While Folium will let you zoom the map in and out, the relative size of the icons
    will change, and you may not be pleased with the results.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 制作旅游地图时一个重要的考虑因素是根据你想要打印的*最终缩放级别*来调整图标和文本。理想情况下，这将是传递给`folium.Map()`时的`zoom_start`参数的缩放级别。虽然
    Folium 允许你放大或缩小地图，但图标的相对大小会发生变化，你可能会对结果不满意。
- en: Printing the Map
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 打印地图
- en: As mentioned previously, Folium maps are meant to be used *online*. While it’s
    possible to save them as an image programmatically, it’s easier just to do a screen
    capture. You can then paste the result into a program like Microsoft PowerPoint
    or Publisher for additional embellishments before printing.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，Folium 地图旨在*在线*使用。虽然可以通过编程方式将其保存为图片，但直接进行屏幕截图更为简单。然后，你可以将结果粘贴到 Microsoft
    PowerPoint 或 Publisher 等程序中，以便在打印前进行额外的修饰。
- en: For busy areas where icons and/or text overlap, you can zoom in and print “local”
    maps. Note that you may want to use a new notebook cell to readjust the icon and
    text sizes for this new zoom level.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 对于图标和/或文本重叠的繁忙区域，你可以放大并打印“局部”地图。请注意，你可能需要使用新的笔记本单元来调整此新缩放级别的图标和文本大小。
- en: '![](../Images/eb743982148575f8902bd1efbbcd4f9e.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/eb743982148575f8902bd1efbbcd4f9e.png)'
- en: A zoomed, “local” map of the southern coast (image by the author)
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 一个放大的“局部”地图（图片来源：作者）
- en: Summary
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Tourist maps are a fun way to explore a new area. By combining Folium’s wonderful
    tilesets with your own custom icons and text, you can make personalized maps to
    both *plan* your trip and *record* your adventures.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 游客地图是探索新区域的有趣方式。通过将 Folium 的精彩图块与自己的自定义图标和文本结合起来，你可以制作个性化地图，以便*规划*你的旅行和*记录*你的冒险。
- en: Thanks!
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 谢谢！
- en: Thanks for reading and please follow me for more *Quick Success Data Science*
    projects in the future.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读，请关注我以获取更多未来的*快速成功数据科学*项目。
