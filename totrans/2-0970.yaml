- en: 'Geospatial Data Science: Points Pattern Analysis'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/geospatial-data-science-points-pattern-analysis-a61e04a6ddb8](https://towardsdatascience.com/geospatial-data-science-points-pattern-analysis-a61e04a6ddb8)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A quick tutorial to perform a geospatial points pattern analysis in Python.
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://gustavorsantos.medium.com/?source=post_page-----a61e04a6ddb8--------------------------------)[![Gustavo
    Santos](../Images/a19a9f4525cdeb6e7a76cd05246aa622.png)](https://gustavorsantos.medium.com/?source=post_page-----a61e04a6ddb8--------------------------------)[](https://towardsdatascience.com/?source=post_page-----a61e04a6ddb8--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----a61e04a6ddb8--------------------------------)
    [Gustavo Santos](https://gustavorsantos.medium.com/?source=post_page-----a61e04a6ddb8--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----a61e04a6ddb8--------------------------------)
    ·8 min read·Sep 25, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4e4be86ffe20aa9ae48c9e9cdbc209cf.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
- en: Photo by [Bernard Hermant](https://unsplash.com/@bernardhermant?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/Jlh7u4NjNAQ?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Geospatial Data Science is a sub-area of the Data area that deals with the analysis
    of data points taking in consideration where in space that event has happened.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: Let’s say we own a chain of retail stores that sells smartphones. Our chain
    has a few distribution centers and we are about to open a couple of new stores.
    Where can we do that?
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: Such insight could come from a geospatial analysis that would show us where
    the sales are concentrated, if there are clusters where the sales are higher or
    lower and other insights.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: The point pattern analysis enters in this game when we want to make sure we
    are looking at a geographically clustered dataset. Just like much of our work
    as Data Scientists, points pattern is about creating a hypothesis and removing
    much of the uncertainty to confirm it or not using statistics applied to data.
    In this case, it is not different. There are a couple of stats tests to be done,
    what will be shown in this post.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: By the way, we have been studying Geospatial Data Science lately here in my
    blog. If you don’t know much about the subject, here are two good reads before
    you dive into this post.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: '[](/analyzing-geospatial-data-with-python-7244c1b9e302?source=post_page-----a61e04a6ddb8--------------------------------)
    [## Analyzing Geospatial Data with Python'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: A practical data analysis post with Python code.
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/analyzing-geospatial-data-with-python-7244c1b9e302?source=post_page-----a61e04a6ddb8--------------------------------)
    [](/analyzing-geospatial-data-with-python-part-2-hypothesis-test-fe3f3f18fc82?source=post_page-----a61e04a6ddb8--------------------------------)
    [## Analyzing Geospatial Data with Python (Part 2 — Hypothesis Test)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/analyzing-geospatial-data-with-python-7244c1b9e302?source=post_page-----a61e04a6ddb8--------------------------------)
    [](/analyzing-geospatial-data-with-python-part-2-hypothesis-test-fe3f3f18fc82?source=post_page-----a61e04a6ddb8--------------------------------)
    [## 使用Python分析地理空间数据（第2部分 — 假设检验）'
- en: Learning about Geospatial Hypothesis test for Asheville’s AirBnb listings.
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 学习阿什维尔AirBnb房源的地理空间假设检验。
- en: towardsdatascience.com](/analyzing-geospatial-data-with-python-part-2-hypothesis-test-fe3f3f18fc82?source=post_page-----a61e04a6ddb8--------------------------------)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/analyzing-geospatial-data-with-python-part-2-hypothesis-test-fe3f3f18fc82?source=post_page-----a61e04a6ddb8--------------------------------)'
- en: Coding
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编码
- en: Packages
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 包
- en: Let’s start with the packages to be used in this exercise. If any of them are
    not installed in your environment, don’t forget to use `pip install` or `conda
    install` (for Anaconda users) followed by the package name.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从这次练习中使用的包开始。如果你的环境中没有安装它们，别忘了使用`pip install`或`conda install`（对于Anaconda用户），然后跟上包名。
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Dataset
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据集
- en: The dataset to be used is, once again, the listings from *AirBnb* for the city
    of Asheville, in North Carolina, USA. The data can be retrieved from an independent
    project in the website [http://insideairbnb.com/](http://insideairbnb.com/), where
    anyone can go and download the datasets for analysis. The data is open under the
    [Creative Commons Attribution 4.0 International License](http://creativecommons.org/licenses/by/4.0/).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 使用的数据集再次是*AirBnb*在美国北卡罗来纳州阿什维尔市的房源数据。数据可以从网站 [http://insideairbnb.com/](http://insideairbnb.com/)
    的一个独立项目中获取，任何人都可以前往下载数据集进行分析。这些数据在 [创意共享署名 4.0 国际许可协议](http://creativecommons.org/licenses/by/4.0/)
    下开放。
- en: I have downloaded the file [listings.csv.gz](http://data.insideairbnb.com/united-states/nc/asheville/2023-06-18/data/listings.csv.gz).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经下载了文件 [listings.csv.gz](http://data.insideairbnb.com/united-states/nc/asheville/2023-06-18/data/listings.csv.gz)。
- en: To load the data to a Python session, here’s the code. The first snippet is
    a simple `read_csv()` from Pandas, where we pre-determined which columns we would
    like to pull from the raw data. Then, we used `gpd.GeoDataFrame` to convert the
    dataset to the `Geopandas` object type, specifying the columns to use as X and
    Y axes, plus the geo coordinate system (`crs` *— use 4326 which is the same as
    the GPS systems, one of the most common reference systems*).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要将数据加载到Python会话中，这里是代码。第一个代码片段是来自Pandas的简单`read_csv()`，我们预先确定了希望从原始数据中提取哪些列。然后，我们使用`gpd.GeoDataFrame`将数据集转换为`Geopandas`对象类型，指定用作X轴和Y轴的列，以及地理坐标系统（`crs`
    *— 使用4326，它与GPS系统相同，是最常见的参考系统之一*）。
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Basically, the transformation to Geopandas is the creation of this column `geometry`
    and the object type.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，将数据转换为Geopandas就是创建这个列`geometry`和对象类型。
- en: '![](../Images/b8d34f2981deb87257ac73bbbf481e00.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b8d34f2981deb87257ac73bbbf481e00.png)'
- en: Geopandas dataset. Image by the author.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Geopandas数据集。图片由作者提供。
- en: Great. With that done, let’s have a quick look at the map. The code is simple,
    with a figure `fig` and axes `ax` created with `subplots`, since there will be
    two plots. One for the base map and another for the points.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 很好。完成这些后，我们来快速看看地图。代码很简单，创建了一个图形`fig`和两个坐标轴`ax`，因为会有两个图：一个是底图，另一个是点图。
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This code yields the next plot.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码生成了下一个图表。
- en: '![](../Images/67c0f2378fc687b424cbc76e65003b4b.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/67c0f2378fc687b424cbc76e65003b4b.png)'
- en: Asheville, NC listings from Airbnb. Image by the author.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**阿什维尔，北卡罗来纳州**的Airbnb房源列表。图片由作者提供。'
- en: Cool. The map is looking ok, but it does not give us too much information. Let’s
    enhance our analysis now.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 很酷。地图看起来不错，但没有提供太多信息。现在让我们增强分析。
- en: Point Pattern
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 点模式
- en: The first analysis we can do when thinking about Points Pattern Analysis is
    checking how concentrate those data points are in geographical terms.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 当考虑点模式分析时，我们可以做的第一个分析是检查这些数据点在地理上的集中程度。
- en: Here, the `seaborn` library can be of help. The method `jointplot` brings us
    a scatterplot together with histograms on the margins. It is an awesome addition
    to the analysis, as it gives us insights about how concentrate are the points
    and where, just by looking where the bars are higher.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`seaborn`库可以提供帮助。方法`jointplot`将散点图与边缘的直方图结合起来。这是分析中的一个绝妙补充，因为它通过查看条形图较高的地方，给我们提供了点的集中情况和位置的见解。
- en: To create it, we can pass the x and y from the `geometry` column, plus the dataset
    (`data`), the size of the points (`s`) and `color`, and the `height` of the graphic.
    The next snippet is to add a basemap to this jointplot, which can be done with
    `contextily`, giving the jointplot variable to the method.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: As the result, we see this beautiful map.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a826a25c0c7e8930e784790bd7bb34e4.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
- en: Jointplot over a base map of Asheville, NC. Image by the author.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: I love this plot. From it, we can quickly get some good insights already. The
    downtown area of the city marked in red (and surroundings) is indeed where the
    listings are concentrated. And then we can also notice that as we go farther from
    that region, the number of listings drops and gets more sparse.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: 'That makes perfect sense. Let’s think about that: Airbnb is a platform for
    people to rent their houses or bedrooms. Those rental properties are normally
    in residential areas, since the main purpose of them is to serve as a home, not
    a business. And the location of house communities are normally in areas where
    there are urban infra-structure around, like malls, grocery store, pharmacy, banks
    etc. As houses in mountain remote locations are more challenging to be built,
    it is expected that there would be less location points there too.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: Statistical Tests
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that we have already plotted the jointplot and got some good insights, we
    still need to test the points pattern to know if they are statistically clustered
    or not. I mean, those points could be all together just by chance too. Who knows.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: 'So, to test and make sure you’re working with a pattern, there are two good
    tests:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: '**Ripley’s G:** This test will check the cumulative distribution of the distances
    of a point to its nearest neighbors. So, the test measures the distance from a
    given house to neighbors 1, 2, 3, …, n and compare that distribution of distances
    with a simulated random distribution of points. If we observe that the observed
    data behaves differently than the simulation for a determinate space, we can conclude
    that the data has a pattern, thus it is clustered.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ripley’s K:** This test makes a similar test, comparing the observed data
    with a random simulated distribution. The difference to the G test is that the
    K test considers all the distances in the data, not just the closest neighbors.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ripley’s G tests the distribution of distances to the nearest neighbors. Ripley’s
    K tests the distribution of distances to the entire dataset.
  id: totrans-52
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Ripley’s G
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let’s learn how to perform those tests now. First, the G test. It is simple
    enough to write, but it takes a while to run, depending on the size of the dataset.
    Here, the test is getting 40 neighbors distances. It took about 6 minutes to run.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: To plot the result, the code snippet is as follows. We are plotting one black
    line for the median of each simulation and a red line with the statistic for each
    data point.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: As a result, the code displays the next figure.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4d3a091a9dfb8c1ada2eff736a8bde12.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4d3a091a9dfb8c1ada2eff736a8bde12.png)'
- en: Ripley’s G test. Image by the author.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: Ripley的G检验。图片由作者提供。
- en: We can see that, for the distances of 0 and 0.003, the observed data grows faster
    than the simulated data, confirming that there are significant spatial patterns
    in the dataset.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，对于距离0和0.003，观察到的数据增长速度快于模拟数据，确认了数据集中存在显著的空间模式。
- en: Ripley’s K
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Ripley的K
- en: The second test is the K test. This one works with a *null hypothesis of complete
    spatial randomness* and an *alternative hypothesis of spatial pattern in the data.*
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个检验是K检验。这个检验使用了*完全空间随机性的原假设*和*数据中存在空间模式的备择假设*。
- en: Running the K test is as easy as the other one. However, the test is more computationally
    expensive. It took more than 30 minutes to run in a session on Google Colab.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 运行K检验和其他检验一样简单。不过，该检验的计算开销更大。在Google Colab上运行一个会话花费了超过30分钟。
- en: '[PRE6]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The code above will give us the next plot.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的代码将给我们下一个图表。
- en: '![](../Images/e55c9eea26423ececb8aeaae66f15782.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e55c9eea26423ececb8aeaae66f15782.png)'
- en: Ripley’s K test. Image by the author.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: Ripley的K检验。图片由作者提供。
- en: Once again, the observed data is much higher than the simulations, confirming
    our spatial pattern.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，观察到的数据远高于模拟数据，确认了我们的空间模式。
- en: Before You Go
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在你离开之前
- en: In this post, we learned how to create some statistical tests for Geospatial
    points pattern confirmation.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们学习了如何为地理空间点模式确认创建一些统计检验。
- en: Once we plot some data points on a map, they can be clustered just by chance,
    without a clear pattern. But a good way to confirm the geospatial pattern is to
    run the **Ripley’s G** and **Ripley’s K** tests.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们将一些数据点绘制在地图上，它们可能仅仅是偶然地被聚集在一起，而没有明确的模式。但确认地理空间模式的好方法是运行**Ripley的G**和**Ripley的K**检验。
- en: One can benefit of those tests to confirm that there is a pattern in clusters
    with high and low prices in the city listings of Asheville, NC, for example. Therefore,
    if you’re listing a rental property, you would know the best price to compete
    in each neighborhood of that city.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这些检验可以帮助确认在例如北卡罗来纳州阿什维尔市的高价和低价簇中是否存在模式。因此，如果你要出租物业，你将知道在该市每个街区的最佳竞争价格。
- en: Now, you can download the code in my repo at GitHub and apply to your data.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以在我的GitHub仓库中下载代码并应用到你的数据中。
- en: '[](https://github.com/gurezende/Studying/blob/master/Python/Geospatial/Points_Pattern_Python.ipynb?source=post_page-----a61e04a6ddb8--------------------------------)
    [## Studying/Python/Geospatial/Points_Pattern_Python.ipynb at master · gurezende/Studying'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '[## Studying/Python/Geospatial/Points_Pattern_Python.ipynb at master · gurezende/Studying](https://github.com/gurezende/Studying/blob/master/Python/Geospatial/Points_Pattern_Python.ipynb?source=post_page-----a61e04a6ddb8--------------------------------)'
- en: This is a repository with my tests and studies of new packages - Studying/Python/Geospatial/Points_Pattern_Python.ipynb…
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 这是一个包含我对新软件包的测试和研究的仓库 - Studying/Python/Geospatial/Points_Pattern_Python.ipynb…
- en: github.com](https://github.com/gurezende/Studying/blob/master/Python/Geospatial/Points_Pattern_Python.ipynb?source=post_page-----a61e04a6ddb8--------------------------------)
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '[github.com](https://github.com/gurezende/Studying/blob/master/Python/Geospatial/Points_Pattern_Python.ipynb?source=post_page-----a61e04a6ddb8--------------------------------)'
- en: If you liked my content, don’t forget to follow me or find me on [LinkedIn](https://www.linkedin.com/in/gurezende/).
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢我的内容，不要忘记关注我或在[LinkedIn](https://www.linkedin.com/in/gurezende/)上找到我。
- en: '[](https://medium.com/@gustavorsantos?source=post_page-----a61e04a6ddb8--------------------------------)
    [## Gustavo Santos - Medium'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '[## Gustavo Santos - Medium](https://medium.com/@gustavorsantos?source=post_page-----a61e04a6ddb8--------------------------------)'
- en: Read writing from Gustavo Santos on Medium. Data Scientist. I extract insights
    from data to help people and companies…
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在Medium上阅读Gustavo Santos的文章。他是一名数据科学家。我从数据中提取见解，以帮助个人和公司…
- en: medium.com](https://medium.com/@gustavorsantos?source=post_page-----a61e04a6ddb8--------------------------------)
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[medium.com](https://medium.com/@gustavorsantos?source=post_page-----a61e04a6ddb8--------------------------------)'
- en: Reference
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[JORDAN, David S. [2023]. *Applied Geospatial Data Science with Python*. 1
    ed. Pactk Publishing.](https://www.amazon.com/Applied-Geospatial-Data-Science-Python/dp/1803238127/ref=asc_df_1803238127/?tag=hyprod-20&linkCode=df0&hvadid=598352683676&hvpos=&hvnetw=g&hvrand=1787360199645971497&hvpone=&hvptwo=&hvqmt=&hvdev=c&hvdvcmdl=&hvlocint=&hvlocphy=1020988&hvtargid=pla-1875036424962&psc=1)'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '[JORDAN, David S. [2023]. *Applied Geospatial Data Science with Python*. 1
    ed. Pactk Publishing.](https://www.amazon.com/Applied-Geospatial-Data-Science-Python/dp/1803238127/ref=asc_df_1803238127/?tag=hyprod-20&linkCode=df0&hvadid=598352683676&hvpos=&hvnetw=g&hvrand=1787360199645971497&hvpone=&hvptwo=&hvqmt=&hvdev=c&hvdvcmdl=&hvlocint=&hvlocphy=1020988&hvtargid=pla-1875036424962&psc=1)'
- en: '[](https://www.hindawi.com/journals/isrn/2013/753475/?source=post_page-----a61e04a6ddb8--------------------------------)
    [## A Statistical Test for Ripley''s Function Rejection of Poisson Null Hypothesis'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: Ripley's function is the classical tool to characterize the spatial structure
    of point patterns. It is widely used in…
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: www.hindawi.com](https://www.hindawi.com/journals/isrn/2013/753475/?source=post_page-----a61e04a6ddb8--------------------------------)
    [](https://github.com/pysal/pointpats/blob/main/notebooks/distance_statistics-numpy-oriented.ipynb?source=post_page-----a61e04a6ddb8--------------------------------)
    [## pointpats/notebooks/distance_statistics-numpy-oriented.ipynb at main · pysal/pointpats
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: Planar Point Pattern Analysis in PySAL. Contribute to pysal/pointpats development
    by creating an account on GitHub.
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: github.com](https://github.com/pysal/pointpats/blob/main/notebooks/distance_statistics-numpy-oriented.ipynb?source=post_page-----a61e04a6ddb8--------------------------------)
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
