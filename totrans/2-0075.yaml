- en: 4 Easy Ways to Instantly Improve Your Data Visualisations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/4-easy-ways-to-instantly-improve-your-data-visualisations-2a5fc3a22182](https://towardsdatascience.com/4-easy-ways-to-instantly-improve-your-data-visualisations-2a5fc3a22182)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples of Improving Charts Created With Matplotlib
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://andymcdonaldgeo.medium.com/?source=post_page-----2a5fc3a22182--------------------------------)[![Andy
    McDonald](../Images/df11d647be032aeb3d31852affb33a64.png)](https://andymcdonaldgeo.medium.com/?source=post_page-----2a5fc3a22182--------------------------------)[](https://towardsdatascience.com/?source=post_page-----2a5fc3a22182--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----2a5fc3a22182--------------------------------)
    [Andy McDonald](https://andymcdonaldgeo.medium.com/?source=post_page-----2a5fc3a22182--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----2a5fc3a22182--------------------------------)
    ·9 min read·Jul 21, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ddf9cbabd863a0f1d59dcd78752de9a0.png)'
  prefs: []
  type: TYPE_IMG
- en: Matplotlib bar chart after changing the colour of a single bar to draw attention
    to it. Data randomly generated. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Creating effective data visualisations is a critical skill within many disciplines,
    be it business analysis, data science or geoscience. Aesthetically pleasing and
    easy-to-understand data visualisations can help spark ideas in our target audience
    or get them to take action based on the information we display.
  prefs: []
  type: TYPE_NORMAL
- en: Within the Python world, there are several data visualisation libraries available.
    However, many learners of Python and data science start out with matplotlib.
  prefs: []
  type: TYPE_NORMAL
- en: '[**Matplotlib**](https://matplotlib.org/) provides a versatile way to present
    your data however you want. In my previous articles, I have shown various data
    visualisations that go a few steps beyond the default charts.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c2aa9861c7855e586924fd8476f41437.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Example of a radial bar chart created with matplotlib.](https://medium.com/towards-data-science/create-eye-catching-radial-bar-charts-with-matplotlib-fd03ff732048)
    Image by the author.'
  prefs: []
  type: TYPE_NORMAL
- en: However, creating these figures does require patience and extra Python code.
    This often results in much searching on [StackOverflow](https://stackoverflow.com/)
    or through the library documentation to find possible solutions to modify even
    the smallest parts of the figures.
  prefs: []
  type: TYPE_NORMAL
- en: By following a few simple guidelines, we can immediately improve any figure
    created with matplotlib.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, I share four of my favourite guidelines I regularly use when
    creating figures for sharing on Medium or in academic publications.
  prefs: []
  type: TYPE_NORMAL
- en: These guidelines are not necessarily restricted to matplotlib; they can equally
    be applied to any software that allows you to create charts, such as Excel or
    Tableau.
  prefs: []
  type: TYPE_NORMAL
- en: Remove Chart Junk and Keeping It Simple
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the quickest and easiest ways to improve matplotlib charts is to reduce
    the amount of “chart junk” displayed.
  prefs: []
  type: TYPE_NORMAL
- en: Chart junk refers to the unnecessary and confusing elements on the chart that
    don’t really add any value to the reader or the data being presented.
  prefs: []
  type: TYPE_NORMAL
- en: When building your chart, you should ensure you only include elements that help
    the reader understand the data better.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are a few things you can do to make your figures clearer:'
  prefs: []
  type: TYPE_NORMAL
- en: Using titles and labels sparingly but effectively
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoid complex vocabulary and jargon
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove unnecessary gridlines and borders
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove background images
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoid overly ornate fonts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoid using unnecessary special effects such as 3D effects and shadows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As an example, we have the following chart, which is used to illustrate income
    vs. age. This chart has several elements that make it difficult to read and interpret,
    such as gridlines, point labels and colour clashes between the background and
    points.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a5080cb8ba8c08b6c377fd42fe4fe31e.png)'
  prefs: []
  type: TYPE_IMG
- en: A cluttered-looking scatter chart with lots of chart junk — data randomly generated.
    Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: If we spend a little time removing this unnecessary chart junk, we could end
    up with a figure like the one below.
  prefs: []
  type: TYPE_NORMAL
- en: It is much cleaner and easier for the reader to look at and interpret. We have
    also added a linear regression line, which can help show the overall trend in
    the data.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3b369b546a59c5e30afe68e3bf96e999.png)'
  prefs: []
  type: TYPE_IMG
- en: Scatter plot after removing chart junk — data randomly generated. Image by the
    author.
  prefs: []
  type: TYPE_NORMAL
- en: Here is another example which illustrates this process of removing excess chart
    junk.
  prefs: []
  type: TYPE_NORMAL
- en: One of the keys to creating effective charts is to let the data speak for itself.
    This means prioritising how the data is displayed above all other elements on
    the chart to clearly convey the intended insights from the data analysis.
  prefs: []
  type: TYPE_NORMAL
- en: Choose Appropriate Colours
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Choosing appropriate colours for a chart may appear to be a simple task. However,
    it can very quickly become a huge time sink, and you may end up spending hours
    deciding on the right shades of blue or whether there is enough contrast between
    the colours you have chosen.
  prefs: []
  type: TYPE_NORMAL
- en: Selecting the right and most appropriate colours can heavily influence the readability
    of a chart and, therefore, influence how readers can interpret that data.
  prefs: []
  type: TYPE_NORMAL
- en: For example, in the following chart, we have five different categories all represented
    by a single colour. Whilst the plot is readable, the lack of effective colour
    use means we are not drawing the reader's attention to any particular aspect of
    the data.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5e47a35d486973576928f13b36a7362a.png)'
  prefs: []
  type: TYPE_IMG
- en: Basic matplotlib bar chart with consistent colours. Data randomly generated.
    Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: If we change the colouring so that Category C is highlighted in orange, we immediately
    grab the reader's attention and suggest that this particular category is important.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ddf9cbabd863a0f1d59dcd78752de9a0.png)'
  prefs: []
  type: TYPE_IMG
- en: Matplotlib bar chart after changing the colour of a single bar to draw attention
    to it. Data randomly generated. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: If, on the other hand, we go the opposite way and use a random colour for every
    category, we can end up with a busy and confusing-looking chart. However, there
    may be cases where you want to use different colours for each bar, for example,
    when distinguishing between different company branding.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/18e5e43a1346611d181c3e29c4e7a61a.png)'
  prefs: []
  type: TYPE_IMG
- en: Matplotlib bar chart when too many colours are used, making the overall chart
    confusing to read. Data randomly generated. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: When picking colours, there are many nuances, which will depend on numerous
    factors, including the type of chart, the data and the message you are trying
    to convey.
  prefs: []
  type: TYPE_NORMAL
- en: 'However, there are a few general rules that can help make your figures appear
    more polished and professional:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Use colour to highlight information, not distract**: Colours should be used
    to draw attention to the most crucial aspects of your data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Be Consistent:** When creating multiple visualisations, maintaining consistency
    helps your audience quickly understand new visualisations based on experience
    with previous ones. For example, if you are using blue for a particular category
    in one chart, try to use the same colour for the same category in other charts.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Consider Colour Vision Issues / Blindness:** It is important to consider
    people with colour blindness when creating your charts. For example, avoid colours
    that are known to be problematic, such as red and green or blue and yellow.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Understand Colour Psychology:** The meaning behind colours can have important
    implications and can also vary between cultures. For example, red is often seen
    as a negative colour or a warning of danger, whereas green is seen as a positive
    or an indicator of growth.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'I would highly recommend checking out the following articles for a more in-depth
    look at understanding colour choices:'
  prefs: []
  type: TYPE_NORMAL
- en: '[**How to choose colors for data visualizations**](https://chartio.com/learn/charts/how-to-choose-colors-data-visualization/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**How to pick more beautiful colors for your data visualisations**](https://blog.datawrapper.de/beautifulcolors/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**Common Pitfalls of Color Use**](https://clauswilke.com/dataviz/color-pitfalls.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are also multiple colour palette generators out there that can help select
    the most appropriate palette. By using these tools, you can save a huge amount
    of time and ensure you achieve maximum readability, especially for those with
    colour vision issues.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are just a few that you should check out:'
  prefs: []
  type: TYPE_NORMAL
- en: '[**Coolors**](https://coolors.co/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**ColorBrewer 2.0**](https://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**Paletton**](https://paletton.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**Leonardo**](https://leonardocolor.io/#)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**Adobe Color Wheel**](https://color.adobe.com/create/color-wheel)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Save Time and Code By Applying a Matplotlib Theme
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you are a regular reader of my articles, [you will have seen I have covered
    several matplotlib theme libraries in recent months](https://medium.com/towards-data-science/upgrade-your-data-visualisations-4-python-libraries-to-enhance-your-matplotlib-charts-74361bc3b92e).
    These theme libraries allow you to instantly transform your figures from the boring
    standard colour scheme of matplotlib into something that is much more aesthetically
    pleasing.
  prefs: []
  type: TYPE_NORMAL
- en: Not only do they help with how the figures look, but they can also help improve
    interpretability.
  prefs: []
  type: TYPE_NORMAL
- en: There are numerous matplotlib theme libraries available, including [mplcyberpunk](https://github.com/dhaitz/mplcyberpunk),
    which lets you transform your matplotlib figure into a futuristic graph with glowing
    neon colours.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, to create a cyberpunk-themed image with [mplcyberpunk](https://github.com/dhaitz/mplcyberpunk),
    we can use the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'To generate the following image:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b3982dd0bfd145d54d888f82720bbcca.png)'
  prefs: []
  type: TYPE_IMG
- en: Example line plot with gradient fill generated by the CyberPunk matplotlib theme.
    Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Even though the [mplcyberpunk](https://github.com/dhaitz/mplcyberpunk) theme
    creates eye-catching figures, it should be used cautiously. It may not be seen
    as professional by some people, and it could potentially obscure the data and
    the message you are trying to convey.
  prefs: []
  type: TYPE_NORMAL
- en: If you are looking for something suitable for inclusion within an academic publication,
    [then the SciencePlots library may be of interest.](https://medium.com/p/d86a62e2ab46)
  prefs: []
  type: TYPE_NORMAL
- en: The SciencePlots library contains numerous styles, which make it easy to set
    up figures if you are writing scientific or journal articles. It also includes
    support for multiple languages, including Chinese and Japanese.
  prefs: []
  type: TYPE_NORMAL
- en: For example, the figure below shows how the same data we used in the Cyberpunk-themed
    chart would look in a form suitable for inclusion within an academic journal article.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/544b8e61db2bea3df6d3c0614ad1591d.png)'
  prefs: []
  type: TYPE_IMG
- en: Matplotlib lineplot after applying the scienceplots IEEE style. Image by the
    author.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can find out more about the SciencePlots library in my article below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/creating-scientific-plots-the-easy-way-with-scienceplots-and-matplotlib-d86a62e2ab46?source=post_page-----2a5fc3a22182--------------------------------)
    [## Creating Scientific Plots the Easy Way With scienceplots and matplotlib'
  prefs: []
  type: TYPE_NORMAL
- en: Instantly Transform Your Matplotlib Figures With a Few Lines of Python Code
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/creating-scientific-plots-the-easy-way-with-scienceplots-and-matplotlib-d86a62e2ab46?source=post_page-----2a5fc3a22182--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: If you are interested in an overview of some of the common theme libraries I
    have mentioned above, you may be interested in checking out my other article below.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/upgrade-your-data-visualisations-4-python-libraries-to-enhance-your-matplotlib-charts-74361bc3b92e?source=post_page-----2a5fc3a22182--------------------------------)
    [## Upgrade Your Data Visualisations: 4 Python Libraries to Enhance Your Matplotlib
    Charts'
  prefs: []
  type: TYPE_NORMAL
- en: Improve Your Data Visualisations with These Easy-to-Use Matplotlib Style Libraries
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/upgrade-your-data-visualisations-4-python-libraries-to-enhance-your-matplotlib-charts-74361bc3b92e?source=post_page-----2a5fc3a22182--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Consider Your Audience and the Story You Are Telling
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When creating data visualisations, one of the most important things to keep
    in mind is who your audience is and the story that you want to tell.
  prefs: []
  type: TYPE_NORMAL
- en: Instead of presenting all the available data to the user in a large range of
    confusing and complex charts, it is best to distil the data and information down
    to the most relevant parts. This will depend on what the objective of the data
    analysis is, which could be defined by a client, a research project or an event
    organiser.
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, we need to account for our audience’s background.
  prefs: []
  type: TYPE_NORMAL
- en: Are they technical-minded people with high data literacy, or should our visualisations
    be simplified for a wider non-technical audience?
  prefs: []
  type: TYPE_NORMAL
- en: For example, if we have been tasked with presenting information about average
    porosity values from the Hugin Formation obtained from a series of wells from
    the Norwegian Continental Shelf.
  prefs: []
  type: TYPE_NORMAL
- en: 'Our first attempt might be something like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Which would create the following bar chart.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/16e6a1795fcf751a158ac51ae8434e5f.png)'
  prefs: []
  type: TYPE_IMG
- en: Basic matplotlib horizontal bar chart. Data from Xeek / Force 2020\. Image by
    the author.
  prefs: []
  type: TYPE_NORMAL
- en: However, when readers look at this, they have to do a lot of work to figure
    out what is happening.
  prefs: []
  type: TYPE_NORMAL
- en: 'They will be asking:'
  prefs: []
  type: TYPE_NORMAL
- en: What do the bars represent?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What well has the highest porosity?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Is there a difference between well 16/10–1 and well 25/8–7?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What wells are considered to have a “good” porosity?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Trying to answer these questions takes a fair bit of effort, and most people
    will skip the figure and move on.
  prefs: []
  type: TYPE_NORMAL
- en: If we try to improve our figure and answer these questions without too much
    effort on the reader’s part, we can end up with something like this.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d189ebceee8a859e74c4067199530bfc.png)'
  prefs: []
  type: TYPE_IMG
- en: Horizontal bar chart after making several tweaks to tell a specific story to
    the reader. Data from Xeek / Force 2020\. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: 'Right away, we can answer the questions:'
  prefs: []
  type: TYPE_NORMAL
- en: What do the bars represent?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Average porosity values in the Hugin Formation**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: What well has the highest porosity?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**25/8–7 at 26.1%**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Is there a difference between well 16/10–1 and well 25/8–7?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Yes, a 0.1% difference**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: What wells are considered to have a “good” porosity?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Wells highlighted in orange that occur above a 20% cutoff value**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: We have made the reader's work much easier by simplifying the figure and improving
    the aesthetics.
  prefs: []
  type: TYPE_NORMAL
- en: We can also change the narrative of the figure by highlighting one bar. For
    instance, the chart below may be part of a larger infographic about well 16/2–16,
    and highlighting that bar, we immediately draw attention to it.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/72a7a80c54a899400f7f77b759db57af.png)'
  prefs: []
  type: TYPE_IMG
- en: Matplotlib horizontal bar plot after applying colour to a single bar in order
    to draw the reader’s focus. Data from Xeek / Force 2020\. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Creating effective data visualisations is a high-quality skill that should be
    learned, especially if you are involved in data science or data analytics.
  prefs: []
  type: TYPE_NORMAL
- en: Within this article, I have shared four of my favourite guiding principles for
    creating effective visualisations. There are many more methods out there that
    can be used to improve figures.
  prefs: []
  type: TYPE_NORMAL
- en: It would be great to hear about your favourite rules for creating effective
    data visualisations in the comment section of this article.
  prefs: []
  type: TYPE_NORMAL
- en: Datasets Used in this Article
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Training dataset used as part of a Machine Learning competition run by Xeek
    and FORCE 2020 *(Bormann et al., 2020)*. This dataset is licensed under Creative
    Commons Attribution 4.0 International.
  prefs: []
  type: TYPE_NORMAL
- en: 'The full dataset can be accessed at the following link: [https://doi.org/10.5281/zenodo.4351155](https://doi.org/10.5281/zenodo.4351155).'
  prefs: []
  type: TYPE_NORMAL
- en: '*Thanks for reading. Before you go, you should definitely subscribe to my content
    and get my articles in your inbox.* [***You can do that here!***](https://andymcdonaldgeo.medium.com/subscribe)'
  prefs: []
  type: TYPE_NORMAL
- en: '*Secondly, you can get the full Medium experience and support thousands of
    other writers and me by signing up for a membership. It only costs you $5 a month,
    and you have full access to all of the fantastic Medium articles, as well as the
    chance to make money with your writing.*'
  prefs: []
  type: TYPE_NORMAL
- en: '*If you sign up using* [***my link***](https://andymcdonaldgeo.medium.com/membership)***,***
    *you will support me directly with a portion of your fee, and it won’t cost you
    more. If you do so, thank you so much for your support.*'
  prefs: []
  type: TYPE_NORMAL
