- en: Run Things in the Background with Julia
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Julia 中后台运行任务
- en: 原文：[https://towardsdatascience.com/run-things-in-the-background-with-julia-c9e72e59fc48](https://towardsdatascience.com/run-things-in-the-background-with-julia-c9e72e59fc48)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/run-things-in-the-background-with-julia-c9e72e59fc48](https://towardsdatascience.com/run-things-in-the-background-with-julia-c9e72e59fc48)
- en: Stop waiting and start multi-threading
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 停止等待，开始多线程
- en: '[](https://niczky12.medium.com/?source=post_page-----c9e72e59fc48--------------------------------)[![Bence
    Komarniczky](../Images/d4de94667bcac6d9001390515592eab9.png)](https://niczky12.medium.com/?source=post_page-----c9e72e59fc48--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c9e72e59fc48--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c9e72e59fc48--------------------------------)
    [Bence Komarniczky](https://niczky12.medium.com/?source=post_page-----c9e72e59fc48--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://niczky12.medium.com/?source=post_page-----c9e72e59fc48--------------------------------)[![本斯·科马尔尼茨基](../Images/d4de94667bcac6d9001390515592eab9.png)](https://niczky12.medium.com/?source=post_page-----c9e72e59fc48--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c9e72e59fc48--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c9e72e59fc48--------------------------------)
    [本斯·科马尔尼茨基](https://niczky12.medium.com/?source=post_page-----c9e72e59fc48--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c9e72e59fc48--------------------------------)
    ·4 min read·May 26, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c9e72e59fc48--------------------------------)
    ·阅读时长 4 分钟·2023年5月26日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/b6d8943bd405300d84e92529392e8559.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b6d8943bd405300d84e92529392e8559.png)'
- en: Photo by [Max Wolfs](https://unsplash.com/ko/@yesterdazed?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Max Wolfs](https://unsplash.com/ko/@yesterdazed?utm_source=medium&utm_medium=referral)
    提供，来自 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Even though Julia is one of the fastest languages out there, sometimes it can
    take time for things to execute. If you’re a data scientist or analyst using Julia,
    maybe you want to send computation off to a server, wait for it to finish, and
    then do something with the results.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 即使 Julia 是现有的最快语言之一，有时执行任务也需要时间。如果你是一个使用 Julia 的数据科学家或分析师，也许你希望将计算任务发送到服务器，等待完成后再处理结果。
- en: But waiting is boring.
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 但等待是无聊的。
- en: When you’re in the middle of your work, full of ideas and enthusiasm to deliver
    something interesting, you want to **keep pounding that keyboard to find something
    else**.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在工作中充满创意和热情，渴望交付有趣的内容时，你希望 **不断敲击键盘寻找其他内容**。
- en: Let me show you a simple technique in Julia, how you can **dispatch computation
    to another thread** and get on with your work.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 让我向你展示 Julia 中一个简单的技巧，如何 **将计算任务分配到另一个线程**，然后继续你的工作。
- en: Setting things up
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置工作环境
- en: As I said before, Julia is fast. As a modern language, it is also **built with
    multiprocessing in mind**. So using those extra cores in your machine is easy
    if you know how to do it.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我之前所说，Julia 很快。作为一种现代语言，它也 **考虑了多线程处理**。所以，如果你知道如何操作，使用计算机上的额外核心非常容易。
- en: 'First of all, we must make sure we start a Julia instance with multiple threads:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们必须确保以多个线程启动 Julia 实例：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This will start Julia using 4 threads. We can confirm this by asking for the
    number of threads:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使用 4 个线程启动 Julia。我们可以通过查询线程数来确认这一点：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Making a slow function
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 制作一个慢速函数
- en: '![](../Images/04421f6811cb6df54cb72c074f69ac46.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/04421f6811cb6df54cb72c074f69ac46.png)'
- en: Photo by [Frederick Yang](https://unsplash.com/@fredericksail?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Frederick Yang](https://unsplash.com/@fredericksail?utm_source=medium&utm_medium=referral)
    提供，来自 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Now that we have more threads it’s time to see this magic in action. But we
    need something to run for a while for this to make sense. I assume if you’re reading
    this article, you already have something in mind, but because I prefer to have
    complete examples in my articles, I’ll write a little function here to entertain
    myself.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了更多的线程，是时候看看这些魔法的实际效果了。但我们需要一些东西运行一段时间才有意义。我假设你在阅读这篇文章时已经有了一些想法，但因为我喜欢在文章中提供完整的示例，我会在这里写一个小函数来娱乐一下自己。
- en: This “slow” function could be a call to build an ML model, run some SQL-like
    queries on a database or fetch some data from cloud storage. Use your imagination
    and go wild!
  id: totrans-22
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这个“慢”的函数可能是构建 ML 模型的调用，运行一些类似 SQL 的数据库查询，或从云存储中获取一些数据。发挥你的想象力，尽情尝试吧！
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: If you’re curious about what the above is about and why I picked 989,345,275,647
    then [read this Wiki page](https://en.wikipedia.org/wiki/Collatz_conjecture).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对上述内容感到好奇，以及为什么我选择了 989,345,275,647，那么[阅读这个维基页面](https://en.wikipedia.org/wiki/Collatz_conjecture)。
- en: Fetching some magic
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取一些魔法
- en: '![](../Images/fe87378468a88af2ccaf2d451455f5df.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fe87378468a88af2ccaf2d451455f5df.png)'
- en: Photo by [K. Mitch Hodge](https://unsplash.com/@kmitchhodge?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [K. Mitch Hodge](https://unsplash.com/@kmitchhodge?utm_source=medium&utm_medium=referral)
    在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral) 上拍摄
- en: Since we have `Threads` in our namespace, we can use the `**@spawn**` **macro
    to send computation to another thread**. This means that we get our REPL back
    immediately and we can continue working as before.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们在命名空间中有 `Threads`，我们可以使用 `**@spawn**` **宏将计算发送到另一个线程**。这意味着我们可以立即返回 REPL，并继续像以前一样工作。
- en: '[PRE3]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '*Ignore my lack of imagination, I just couldn’t be bothered to come up with
    something more sophisticated after spawning.*'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '*忽略我缺乏想象力，生成后我只是懒得想出更复杂的东西。*'
- en: Basically, what’s happening here is that `@spawn` returns a `Task`. T**his task
    is automatically dispatched to a free thread** that can work on it in the background
    allowing you to write more code and ask more questions in the meanwhile. Once
    you need the results, you can **collect the results of the tasks with** `**fetch**`
    which will wait for the `Task` to finish and return the results.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，这里发生的事情是 `@spawn` 返回一个 `Task`。**这个任务会自动分派到一个空闲的线程**，该线程可以在后台处理它，允许你在此期间编写更多代码和提出更多问题。一旦你需要结果，你可以用
    `**fetch**` **收集任务的结果**，它会等待 `Task` 完成并返回结果。
- en: Proof that this works
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 证明这有效
- en: One way to show that this indeed works is to show some timings.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 一种展示这确实有效的方法是展示一些时间记录。
- en: First, we’ll run our function on the current thread and measure the time it
    takes. Then we’ll spawn a `Task` and finally we’ll spawn and immediately wait
    for the results.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将在当前线程上运行我们的函数并测量所需时间。然后我们将生成一个 `Task`，最后我们将生成并立即等待结果。
- en: '[PRE4]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: As you can see, our function takes about 16s to run. But if we dispatch the
    task, then we **immediately return a Task**. This comes with some overhead as
    you can see in the final row, since this is slightly (0.3s) slower than just running
    the computation on the main thread.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，我们的函数运行大约需要 16 秒。但如果我们调度任务，那么我们 **会立即返回一个任务**。这带来了一些开销，如你在最后一行所见，因为这比在主线程上运行计算稍微慢了
    0.3 秒。
- en: Thanks for reading!
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 感谢阅读！
- en: Hopefully, this little trick will enlighten newcomers to Julia about the awesome
    superpowers a modern, multi-threaded language can give them. If you enjoyed reading
    my ramble about this topic, give me a 👏 or 👏 👏.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 希望这个小技巧能让新手对 Julia 的现代多线程语言的强大功能有更多了解。如果你喜欢我关于这个话题的啰嗦，请给我一个 👏 或 👏 👏。
