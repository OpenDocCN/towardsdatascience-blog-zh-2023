- en: How to Use Streamlit’s st.write Function to Improve Your Streamlit Dashboard
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-to-use-streamlits-st-write-function-to-improve-your-streamlit-dashboard-1586333eb24d](https://towardsdatascience.com/how-to-use-streamlits-st-write-function-to-improve-your-streamlit-dashboard-1586333eb24d)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The Swiss Army Knife of Streamlit Functions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://andymcdonaldgeo.medium.com/?source=post_page-----1586333eb24d--------------------------------)[![Andy
    McDonald](../Images/df11d647be032aeb3d31852affb33a64.png)](https://andymcdonaldgeo.medium.com/?source=post_page-----1586333eb24d--------------------------------)[](https://towardsdatascience.com/?source=post_page-----1586333eb24d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----1586333eb24d--------------------------------)
    [Andy McDonald](https://andymcdonaldgeo.medium.com/?source=post_page-----1586333eb24d--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----1586333eb24d--------------------------------)
    ·8 min read·Jan 17, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fc9fcf4c1510ad514f6ae258e5ee6e19.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Bram Naus](https://unsplash.com/es/@bramnaus?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: When starting with [Streamlit](https://streamlit.io/), one of the first functions
    you will come across when building your dashboard or app is `st.write()` . The
    [Streamlit documentation describes this function](https://docs.streamlit.io/library/api-reference/write-magic/st.write)
    as the “Swiss Army Knife of Streamlit Commands”.
  prefs: []
  type: TYPE_NORMAL
- en: It is a very versatile function that allows you to display text, emojis, markdown
    and much more.
  prefs: []
  type: TYPE_NORMAL
- en: Within this article, we are going to explore the ways that the `st.write()`
    function can be used to improve your Streamlit dashboards.
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://docs.streamlit.io/library/api-reference/write-magic/st.write?source=post_page-----1586333eb24d--------------------------------)
    [## st.write — Streamlit Docs'
  prefs: []
  type: TYPE_NORMAL
- en: Function signature st.write(*args, unsafe_allow_html=False, **kwargs) Parameters
    One or many objects to print to the…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: docs.streamlit.io](https://docs.streamlit.io/library/api-reference/write-magic/st.write?source=post_page-----1586333eb24d--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: This article forms part of a series of articles I am creating on Streamlit.
    You can explore them at the links below.
  prefs: []
  type: TYPE_NORMAL
- en: '[Getting Started With Streamlit Web Based Applications](/getting-started-with-streamlit-web-based-applications-626095135cb8)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Creating True Multi-Page Streamlit Apps — The New Way (2022)](/creating-true-multi-page-streamlit-apps-the-new-way-2022-b859b3ea2a15)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting Started With Streamlit: 5 Functions You Need to Know When Starting
    Out](https://medium.com/towards-data-science/getting-started-with-streamlit-5-functions-you-need-to-know-when-starting-out-b35ed7d872b9)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Streamlit Colour Picker: An Easy Way to Change Chart Colours on Your Streamlit
    Dashboard](/streamlit-color-picker-widget-an-easy-way-to-change-chart-colours-7929973393ea)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Displaying Simple and Formatted Text with st.write
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first and most obvious use of the `st.write()` command is to display text.
    If we use the simple example below, we will get that text displayed on our app.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/e5e5e8d6bfbdcf7a66aaa721e5b06225.png)'
  prefs: []
  type: TYPE_IMG
- en: Result of displaying simple text with st.write. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: How to Format and Add Colour to the Text Generated by st.write
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The above text looks a little boring. We can spice things up a little by adding
    some colour. To this, we need to utilise some HTML and CSS knowledge by setting
    the `unsafe_allow_html` option to `True`.
  prefs: []
  type: TYPE_NORMAL
- en: We then create a paragraph using the HTML `<p>` tag and setting the colour using
    the `style` parameter
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/eaff5b9981bad24bd020bb6e2e6dd990.png)'
  prefs: []
  type: TYPE_IMG
- en: Changing the colour of the font within the st.write function. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: If we want to increase the font size, we can add in a `font-size`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/730fc02b6be6aca4782a448f5f68e85e.png)'
  prefs: []
  type: TYPE_IMG
- en: Changing the colour and the size of the font within the st.write function. Image
    by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Splitting Text over Multiple Lines
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Instead of having text on a single line, we can display text on multiple lines.
    The st.write function allows you to pass in a string enclosed in triple single
    quotes (’’’) or triple double quotes (”””). [This syntax is used within Python
    to allow strings to span multiple lines.](https://www.digitalocean.com/community/tutorials/how-to-format-text-in-python-3)
  prefs: []
  type: TYPE_NORMAL
- en: Just using the triple single quotes or triple double quotes is not enough to
    get our text to span multiple lines when using Streamlit. In order to do this
    we have to modify the string.
  prefs: []
  type: TYPE_NORMAL
- en: There are a couple of different ways to achieve this.
  prefs: []
  type: TYPE_NORMAL
- en: The first is to use the line break character `\n` which will push the following
    line of text onto a new line.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c463eb9e158adac0790e6054ddb4cead.png)'
  prefs: []
  type: TYPE_IMG
- en: Splitting text over multiple lines with the st.write function. Image by the
    author.
  prefs: []
  type: TYPE_NORMAL
- en: The second option is to add two spaces at the end of each line. This is commonly
    applied in [markdown language](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet)
    to move the text to a new line.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/cc61e276241648ea9a97044daae96184.png)'
  prefs: []
  type: TYPE_IMG
- en: Adding two spaces at the end of a string allows text to be displayed on multiple
    lines. Note the two faint dots at the end of each line representing two spaces.
    Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: This generates the multi-line text output like so. Notice that the line spacing
    is much smaller than in the previous example.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/257eb2f95a012cecbd09a48871f64b25.png)'
  prefs: []
  type: TYPE_IMG
- en: Splitting text over multiple lines with the st.write function. Image by the
    author.
  prefs: []
  type: TYPE_NORMAL
- en: Using Markdown Syntax with st.write
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Markdown](https://en.wikipedia.org/wiki/Markdown) is a popular markup language
    that allows writers to apply formatting simply and easily within a plain text
    format. It is one of my favourite ways to write and is used by numerous note-taking
    apps such as [Obsidian](https://obsidian.md/) and [Notion](https://www.notion.so/).'
  prefs: []
  type: TYPE_NORMAL
- en: 'To use markdown within the `st.write()` function, we simply type it in like
    so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: The first line creates a second-level heading (H2), and the second line creates
    some formatted text. Using a double asterisk (**) around the text makes it bold,
    and a single asterisk (*) makes it italicised.
  prefs: []
  type: TYPE_NORMAL
- en: When we refresh the app, we get the following output.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/09a95433ccb5cbf7e4ec948f0d189366.png)'
  prefs: []
  type: TYPE_IMG
- en: Example of using markdown syntax with the Streamlit st.write function. Image
    by the author.
  prefs: []
  type: TYPE_NORMAL
- en: If you want to learn more about how to write using markdown, then check out
    [Basic Syntax Markdown Guide](https://www.markdownguide.org/basic-syntax/).
  prefs: []
  type: TYPE_NORMAL
- en: The specific type of markdown used by Streamlit is [Github Flavoured](https://github.github.com/gfm/)
    which is a dialect of markdown and has its own features and nuances.
  prefs: []
  type: TYPE_NORMAL
- en: Create LaTeX / KaTeX Formatted Equations with st.write
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[LaTeX](https://en.wikibooks.org/wiki/LaTeX) has been around for a long time
    (since 1984) and is another form of markup language used for typesetting documents
    and preparing them for print. In addition to typesetting, [it can be used to prepare
    and format mathematical equations.](https://en.wikibooks.org/wiki/LaTeX/Mathematics)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Streamlit uses a version of KaTeX to render equations using LaTeX syntax.](https://docs.streamlit.io/library/api-reference/text/st.latex)
    [KaTeX is essentially a Javascript library that is used to render mathematical
    symbols and equations.](https://www.reddit.com/r/LaTeX/comments/n7zs8j/difference_between_latex_and_katex_also_asking/)'
  prefs: []
  type: TYPE_NORMAL
- en: Instead of having equations as linear text — which can be hard to read — we
    can format them in a way that makes them much more readable.
  prefs: []
  type: TYPE_NORMAL
- en: To display LaTeX equations in Streamlit, we need to surround our equation with
    two dollar signs ($$) at the start of the equation and two dollar signs at the
    end.
  prefs: []
  type: TYPE_NORMAL
- en: We can then leverage the power of LaTeX to write our equation.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/201a5d5d1b57443df385711024967df9.png)'
  prefs: []
  type: TYPE_IMG
- en: Example of using KaTeX with the Streamlit st.write function to display simple
    and more complicated mathematical equations. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you are unsure about how to do something in LaTeX, here are a few resources
    to help:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Build a LaTeX Equation using Codecogs Editor](https://latex.codecogs.com/eqneditor/editor.php)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Overleaf Reference Guide for Mathematical Expressions](https://www.overleaf.com/learn/latex/Mathematical_expressions)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Wikibooks Guide on LaTeX for Mathematics](https://en.wikibooks.org/wiki/LaTeX/Mathematics)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The supported functions used by Streamlit are derived from KaTeX, and the full
    list of functions can be found [here](https://katex.org/docs/supported.html).
  prefs: []
  type: TYPE_NORMAL
- en: Writing Code Blocks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If we are creating an app or dashboard where we want to display code for the
    user to inspect or learn from, we can use [markdown syntax to create a code block](https://www.markdownguide.org/extended-syntax/#fenced-code-blocks).
    This is achieved using three backticks before, and after the code we want to display.
  prefs: []
  type: TYPE_NORMAL
- en: We can also supply a language to create some [syntax highlighting](https://www.markdownguide.org/extended-syntax/#fenced-code-blocks).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]python'
  prefs: []
  type: TYPE_NORMAL
- en: 'if we_want_to_display_code:'
  prefs: []
  type: TYPE_NORMAL
- en: use_back_ticks == True
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/3c304816c87a01245093dd826e379169.png)'
  prefs: []
  type: TYPE_IMG
- en: Code block displayed using st.write and markdown syntax. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Using st.write to Display Pandas Dataframes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Pandas dataframes](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.html)
    are a commonly used format within data science. They can be used to store, manipulate
    and create new data.'
  prefs: []
  type: TYPE_NORMAL
- en: When building a Streamlit app we will most likely be working with dataframes
    to handle data. The st.write function can display interactive dataframes by passing
    in the dataframe object or related methods, such as the describe method.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/160812df93172b18bc5f507c2c2d776c.png)'
  prefs: []
  type: TYPE_IMG
- en: Streamlit app displaying a pandas dataframe and the describe method. Image by
    the author
  prefs: []
  type: TYPE_NORMAL
- en: Combining Text and Variables with st.write
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: By using [f-strings](https://realpython.com/python-f-strings/) we can combine
    both strings and variables in a single output. Streamlit also takes this one step
    further by allowing us to pass in multiple arguments, which are then combined.
  prefs: []
  type: TYPE_NORMAL
- en: In the example below, we are using f-strings to display the values of `a` and
    `b` and then the final line is combing text with a summation of `a+b`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/392546e7bb20e27a2d85efaf3d5f362e.png)'
  prefs: []
  type: TYPE_IMG
- en: Combining Text and Variables with Streamlit’s st.write function. Image by the
    author.
  prefs: []
  type: TYPE_NORMAL
- en: Display Chart Figures with st.write()
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Displaying data using charts is a fundamental part of data science and data
    analytics. It allows us to convey data in a way that is easy for readers to understand
    and make informed decisions with.
  prefs: []
  type: TYPE_NORMAL
- en: Streamlit handles multiple plotting libraries, including [matplotlib](https://matplotlib.org/),
    [seaborn](https://seaborn.pydata.org/), [altair](https://altair-viz.github.io/)
    and [plotly](https://plotly.com/).
  prefs: []
  type: TYPE_NORMAL
- en: First, we need to have a data source, which can be from a file or an existing
    data frame, and second, we need to create our figure. In the example below, I
    have created a simple random dataset and selected two columns to display in a
    scatter plot.
  prefs: []
  type: TYPE_NORMAL
- en: The matplotlib figure is then passed into the st.write function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: When we run the above code, we get back the following display.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/59c77504301a38e328c05e0b2fafb4d2.png)'
  prefs: []
  type: TYPE_IMG
- en: A matplotlib figure displayed using st.write(). Image by the author
  prefs: []
  type: TYPE_NORMAL
- en: Incorporating Emojis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Finally, we can add some interest to our text using emojis. This is easily done
    by using a colon before and after the emoji name.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/2d38de6ed54b161a1d8113ab520000dc.png)'
  prefs: []
  type: TYPE_IMG
- en: Displaying emojis within a Streamlit app using st.write(). Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The S[treamlit st.write() function](https://docs.streamlit.io/library/api-reference/write-magic/st.write)
    is a powerful tool and can be used in many different ways, from writing ordinary
    text to displaying figures and equations. It certainly lives up to its name as
    the Swiss Army Knife function of the Streamlit library.
  prefs: []
  type: TYPE_NORMAL
- en: Be sure to check out the documentation on [Streamlit Magic](https://docs.streamlit.io/library/api-reference/write-magic/magic)
    to take your app to the next level.
  prefs: []
  type: TYPE_NORMAL
- en: '*Thanks for reading. Before you go, you should definitely subscribe to my content
    and get my articles in your inbox.* [***You can do that here!***](https://andymcdonaldgeo.medium.com/subscribe)*Alternatively,
    you can* [***sign up for my newsletter***](https://fabulous-founder-2965.ck.page/2ca286e572)
    *to get additional content straight into your inbox for free.*'
  prefs: []
  type: TYPE_NORMAL
- en: '*Secondly, you can get the full Medium experience and support thousands of
    other writers and me by signing up for a membership. It only costs you $5 a month,
    and you have full access to all of the fantastic Medium articles, as well as the
    chance to make money with your writing.*'
  prefs: []
  type: TYPE_NORMAL
- en: '*If you sign up using* [***my link***](https://andymcdonaldgeo.medium.com/membership)***,***
    *you will support me directly with a portion of your fee, and it won’t cost you
    more. If you do so, thank you so much for your support*'
  prefs: []
  type: TYPE_NORMAL
