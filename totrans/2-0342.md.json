["```py\nimport autosklearn.classification\n\nclf = autosklearn.classification.AutoSklearnClassifier()\nclf.fit(X_train, y_train)\npredictions = clf.predict(X_test)\n```", "```py\nfrom sklearn import datasets\nfrom sklearn.model_selection import train_test_split\n\nX, y = datasets.load_digits(return_X_y=True)\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42)\n```", "```py\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score\n\nclf = DecisionTreeClassifier().fit(X_train, y_train)\ny_pred = clf.predict(X_test)\naccuracy_score(y_test, y_pred)\n```", "```py\nimport autosklearn.classification\nfrom sklearn.metrics import accuracy_score\n\nautoml = autosklearn.classification.AutoSklearnClassifier(\n    time_left_for_this_task = 3*60,\n    per_run_time_limit = 30\n)\nautoml.fit(X_train, y_train)\ny_pred = automl.predict(X_test)\naccuracy_score(y_test, y_pred)\n```", "```py\nprint(automl.sprint_statistics())\n```", "```py\nprint(automl.leaderboard())\n```", "```py\nfrom pprint import pprint\npprint(automl.show_models(), indent=2)\n```"]