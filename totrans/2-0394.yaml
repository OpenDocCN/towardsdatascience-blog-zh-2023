- en: Bike-Sharing System Movements to the Metallica Concert in Tartu, Estonia
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/bike-sharing-system-movements-to-the-metallica-concert-in-tartu-estonia-1af8361bc6f](https://towardsdatascience.com/bike-sharing-system-movements-to-the-metallica-concert-in-tartu-estonia-1af8361bc6f)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: GPS tracking visualization with Movingpandas and KeplerGl — Tutorial
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://bryanvallejo16.medium.com/?source=post_page-----1af8361bc6f--------------------------------)[![Bryan
    R. Vallejo](../Images/fd92974f57c72875cc133a2c959d64ca.png)](https://bryanvallejo16.medium.com/?source=post_page-----1af8361bc6f--------------------------------)[](https://towardsdatascience.com/?source=post_page-----1af8361bc6f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----1af8361bc6f--------------------------------)
    [Bryan R. Vallejo](https://bryanvallejo16.medium.com/?source=post_page-----1af8361bc6f--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----1af8361bc6f--------------------------------)
    ·9 min read·Jan 4, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6fea2e94047d72eff0d6ae35bdf5d6d3.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
- en: Image by the Author. The bike-sharing system moves to the Metallica concert’s
    bike station. July 18th of 2019, Tartu-Estonia
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The [Metallica concert in Tartu](https://www.metallica.com/tour/2019-07-18-tartu-estonia.html)
    (Estonia) was held on July 18th of 2019 at the Raadi Airfield at the backside
    of the Estonian National Museum (ERM). The event was sold-out to 60.000 people
    ([ERR, 2019](https://news.err.ee/963069/gallery-metallica-gives-sold-out-show-in-tartu)).
    The municipality suggested to visitors use public transportation including the
    bike-sharing system and to improve mobility in the city during the event the bike-sharing
    system included a virtual dock station called “Metallica parkla” where visitors
    can leave their bikes near the venue.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: '[Web map of bike-sharing movements HERE](https://bryanvallejo16.github.io/bike-moves-metallica/root/metallica_moves.html)'
  id: totrans-10
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Repository](https://github.com/bryanvallejo16/bike-moves-metallica)'
  id: totrans-12
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The bike-sharing system in Tartu is a success in smart mobility. Bikes are efficient
    and make mobility easy around the city. The subscription is affordable and 500/750
    bikes are electric. Stations are spread out around the city so you can move wherever
    you need. The system was launched on June 2019 and after one month of usage, it
    was used to improve mobility in a 60k people event. The system gives real-time
    data of users locking and unlocking bikes. No doubt, Tartu’s bike-sharing system
    is a success. If you are willing to know more about the system you can check the
    [Tartu Smart Bike](https://ratas.tartu.ee/) website.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: I was curious about what the bike-sharing system data looks like so I started
    looking for it. When I found it and after a quick exploration it was a surprise
    for me to notice that July 18th of 2019 was available. I had no doubt to check
    how the bike-sharing system worked during the Metallica concert and this is the
    reason why this story was written.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我对自行车共享系统的数据是什么样子感到好奇，所以开始寻找它。当我找到它并经过快速探索后，发现2019年7月18日的数据可用让我感到惊讶。我毫不犹豫地检查了Metallica音乐会期间自行车共享系统的工作情况，这也是这篇故事被写下来的原因。
- en: Objective
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 目标
- en: To visualize the bike-sharing system dynamics on July 18th of 2019 in Tartu
    highlighting Metallica concert moves
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了在2019年7月18日可视化自行车共享系统的动态，突出显示Metallica音乐会的移动情况
- en: Data
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据
- en: '***Bike-sharing system tracking data***'
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '***自行车共享系统跟踪数据***'
- en: 'The data on bike-sharing system use on July 18th of 2019 can be found in the
    [Estonian Open Data](https://avaandmed.eesti.ee/datasets/tartu-linnavalitsuse-andmekogud-rattaringlus)
    portal and it is available for public use. It actually provides more days in July
    and the data is given in two different files: **locations** for GPS tracking data,
    and **routes** for Origin-Destination between bike stations. Files are given in
    .csv format.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 2019年7月18日的自行车共享系统使用数据可以在[爱沙尼亚开放数据](https://avaandmed.eesti.ee/datasets/tartu-linnavalitsuse-andmekogud-rattaringlus)门户网站找到，并且对公众开放。实际上，它提供了更多的7月天数据，数据以两个不同的文件形式提供：**locations**用于GPS跟踪数据，**routes**用于自行车站点之间的起点-终点。文件格式为.csv。
- en: '- **LICENSE -**'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '- **许可证 -**'
- en: The data is under the license [Creative Commons Attribution-ShareAlike 3.0
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 数据在[Creative Commons Attribution-ShareAlike 3.0许可下](https://creativecommons.org/licenses/by-sa/3.0/)。
- en: Unported (CC-BY-SA 3.0)](https://creativecommons.org/licenses/by-sa/3.0/) and
    we are free to share, copy, redistribute, adapt, remix, or built upon even for
    commercial purposes.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[未授权（CC-BY-SA 3.0）](https://creativecommons.org/licenses/by-sa/3.0/)，我们可以自由分享、复制、再分发、改编、混合，甚至用于商业目的。'
- en: Outcomes
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 成果
- en: A web map with KeplerGl showing the bike movements to the Metallica concert’s
    bike station
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用KeplerGl的网络地图显示到Metallica音乐会的自行车站点的自行车移动情况
- en: '![](../Images/6fea2e94047d72eff0d6ae35bdf5d6d3.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6fea2e94047d72eff0d6ae35bdf5d6d3.png)'
- en: Image by the Author. The bike-sharing system moves to the Metallica concert’s
    bike station. July 18th of 2019, Tartu-Estonia
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。自行车共享系统移动到Metallica音乐会的自行车站点。2019年7月18日，塔尔图-爱沙尼亚
- en: A static map with QGIS showing the bike movements to the Metallica concert’s
    bike station
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用QGIS显示到Metallica音乐会的自行车站点的静态地图
- en: '![](../Images/89820ef7e122a61861adf2f878a2acf3.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/89820ef7e122a61861adf2f878a2acf3.png)'
- en: Image by the Author. The bike moves to the Metallica concert. “Metallica parkla”
    as the ending station
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。自行车移动到Metallica音乐会的“Metallica parkla”作为终点站
- en: Join my stories
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加入我的故事
- en: 'If you want to see more of my tutorials join me on Medium:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想查看更多我的教程，请在Medium上关注我：
- en: '[Join and get access to my tutorials as a member HERE](https://bryanvallejo16.medium.com/membership)'
  id: totrans-32
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[加入并成为会员，获取我的教程](https://bryanvallejo16.medium.com/membership)'
- en: Analysis
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析
- en: To start this Python workflow start cloning this repository with the necessary
    data. It contains an empty notebook as a template that you can use to follow this
    practice.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始这个Python工作流，请首先克隆这个包含必要数据的仓库。它包含一个空的笔记本作为模板，你可以用来跟随这个实践。
- en: '***Clone this Repository***:'
  id: totrans-35
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '***克隆这个仓库***：'
- en: ''
  id: totrans-36
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[github.com/bryanvallejo16/bike-moves-metallica](https://github.com/bryanvallejo16/bike-moves-metallica)'
  id: totrans-37
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[github.com/bryanvallejo16/bike-moves-metallica](https://github.com/bryanvallejo16/bike-moves-metallica)'
- en: 'In this practice, I am using [Anaconda](https://www.anaconda.com/products/distribution)
    free version. Be sure that your environment has installed the needed libraries.
    I used in this analysis: geopandas 0.9.0, movingpandas 0.8rc1, keplergl 0.3.2
    , and NumPy 1.21.5.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个实践中，我使用的是[Anaconda](https://www.anaconda.com/products/distribution)的免费版本。请确保你的环境中安装了所需的库。我在这次分析中使用了：geopandas
    0.9.0，movingpandas 0.8rc1，keplergl 0.3.2，以及 NumPy 1.21.5。
- en: Let’s import the libraries
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们导入这些库
- en: '[PRE0]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Now, let's create a folder for our final map and outputs
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们为最终地图和输出创建一个文件夹
- en: '[PRE1]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Visualizing the GPS tracking data
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可视化GPS跟踪数据
- en: We will start reading the file with the GPS tracking of the bike users.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将开始读取自行车用户的GPS跟踪文件。
- en: '[PRE2]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: When you check `locations['coord_date'].unique()` you will notice that the data
    from July 18th contains more days. So, we need to remove those extra days because
    we are interested only in the 18th.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当你检查`locations['coord_date'].unique()`时，你会发现7月18日的数据包含了更多的天数。因此，我们需要去除那些额外的天数，因为我们只对18号感兴趣。
- en: '[PRE3]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: If you check again `locations['coord_date'].unique()` you will see that now
    we have only July 18th.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你再次检查`locations['coord_date'].unique()`，你会发现现在只有7月18日的数据。
- en: Then, we need to set up a timestamp column named `t`that the library movingpandas
    is going to use to create the trajectories.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: To be sure that the route id is not confused with numbers and then suddenly
    decimals start appearing we will change the route codes to strings.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Then, we will get a clean table selecting only the columns that we need.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Quickly, we will check if there are nan values that we need to remove. Fortunately,
    there are no nan values here.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Then, a quick view with `locations.head()`
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6b8639a876765d4997a5c4aa97c40002.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
- en: Image by the Author. Locations table ready.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: Let’s print some information about the data.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Create trajectories with Movingpandas
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To start, we will create a new GeoDataFrame adding a geometry object.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Then, we will create a TrajectoryCollection object with our GPS tracking GeoDataFrame.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Adding station info
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Our next step is to add the station name to every location in the GPS tracks.
    To reach our objective we need to highlight the trajectory that ended in “Metallica
    parkla” which corresponds to the new venue’s station where Metallica held the
    concert.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: Let’s first read our route info.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Let’s be sure that we have the data only for one day with `print(route_info['unlockedat'].unique())`
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: Then, we will subset only the columns we need and we will change the route code
    as we did with the GPS tracking. Switching from number to string.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Add to trajectory
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Here we are going to create a new GeoDataFrame named `bike_moves` where we add
    GPS tracks with station information. The linkage is done between the route code
    we transformed from number to string.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: The logic is to get every trajectory from the TrajectoryCollection in a loop,
    then send them to our `bike_moves` GeoDataFrame.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: You will see the process of 5253 trajectories.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: We will also create LineStrings out of the GPS tracking for visualization in
    QGIS. The function we will use from Movingpandas is `to_traj_gdf()`
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: This file is ready for visualization in QGIS. We will save it to make a map
    later.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Prepare datasets for visualization
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We will create two functions that add an attribute for highlighting the Metallica
    moves and another one that gives a weight for size.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Then, we will use the functions only for the ending station. Our interest is
    to see how were the moves to the concert. If we add also “Metallica parkla” as
    a start we might have an overloaded visualization.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Once we have added the visualization attribute we can check it out with `print(bike_moves['viz_code'].unique())`
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: Adding the venue’s location
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We will create a new GeoDataFrame with the location of the Metallica concert
    venue.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: First, let’s import Point geometry objects from shapely
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Then, the GDF.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Visualization with KeplerGl
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We are going to use KeplerGl for Jupiter notebooks to visualize our spatial
    and temporal data.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: Let’s start creating an instance
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Let’s add our data. I recommend adding data in two different cells.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: We will import a map configuration from the `configuration.py` file included
    in the repository. A configuration is a bunch of details that style the map visualization
    in KeplerGl. I added my own creation in the .py file for this story.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Then, we will simply save the file.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Once we open we will have our final map
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6fea2e94047d72eff0d6ae35bdf5d6d3.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
- en: Image by the Author. Bike movements to the Metallica concert. “Metallica parkla”
    as the ending station
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: How to add your own configuration to KeplerGL?
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: After you have added the data to the map instance open it in Jupyter notebook.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: You will see a default visualization of your data.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/93842ebf5e1c66b9ff420f36d747f76d.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
- en: Image by the Author. Raw visualization of Bike-sharing system moves. KeplerGl
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: Configure it in KeplerGl as you want. Then, check the configuration in a new
    cell.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '![](../Images/c9ebdb91fba337141bddaae8c19552de.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
- en: Image by the Author. Configuration of the current map in Jupyter notebook.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: Then, please copy and paste the configuration and use it in the `m.save_to_html()`
    function as we did before.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: Visualization in QGIS
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We saved already a file in the `output` folder with the trajectories as lines.
    Simply, open QGIS, drag the file, and make your own map.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: If you highlight the ending station “Metallica parkla” it should look like this
    one
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/89820ef7e122a61861adf2f878a2acf3.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
- en: Image by the Author. The bike moves to the Metallica concert. “Metallica parkla”
    as the ending station
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Something to point out is that our visualization shows the movements that started
    in other stations and ended in the venue station “Metallica parkla”. But, it does
    not necessarily mean that they were the only people that went to the concert.
    There is still the “ERM” station that was in the same place at the venue so most
    probably many people also left their bikes there. Also, the visualization shows
    that even movements that ended in other stations were closer to the venue.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e3eb2869c0166c1af82e401977109cf0.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
- en: Image by the Author. Movements closer to the venue that ended in different stations
    than Metallica parkla
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: The visualization just gives an idea of how the virtual dock station worked
    during the Metallica concert in the city.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The dissemination of the virtual station “Metallica parkla” gives a quick understanding
    of how the bike-sharing system station worked in Tartu during the Metallica concert.
    We can see clearly that during the event hours in the evening there is a peak
    in the usage of the “Metallica parkla” station. The bike-sharing virtual station
    was properly functional for those people that wanted to have access to the concert.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: The visualization is not showing necessarily only the people that went to the
    concert because it is also possible that some of them left the bike in the other
    venue station “ERM”. There are still many possibilities that could happen not
    even only “ERM” and “Metallica parkla” but they are not reviewed in this story.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: If you have questions do not hesitate to leave a comment here.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有问题，请不要犹豫，在这里留言。
- en: 'Connect in LinkedIn here: [Bryan R. Vallejo](https://www.linkedin.com/in/bryanrvallejo/)'
  id: totrans-134
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '在 LinkedIn 上联系我: [Bryan R. Vallejo](https://www.linkedin.com/in/bryanrvallejo/)'
- en: ''
  id: totrans-135
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Get access to my tutorials here: [Join my stories](https://bryanvallejo16.medium.com/membership)'
  id: totrans-136
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '访问我的教程请点击这里: [加入我的故事](https://bryanvallejo16.medium.com/membership)'
