- en: Dealing with Dates in Python’s DataFrame Part 1 — Date Series Creation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理 Python 数据框中的日期，第 1 部分 — 日期系列创建
- en: 原文：[https://towardsdatascience.com/dealing-with-dates-in-pythons-dataframe-part-1-date-series-creation-f4a800db9ae](https://towardsdatascience.com/dealing-with-dates-in-pythons-dataframe-part-1-date-series-creation-f4a800db9ae)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/dealing-with-dates-in-pythons-dataframe-part-1-date-series-creation-f4a800db9ae](https://towardsdatascience.com/dealing-with-dates-in-pythons-dataframe-part-1-date-series-creation-f4a800db9ae)
- en: Data Processing in Python
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python 数据处理
- en: Pandas methods for date series creation
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Pandas 日期系列创建方法
- en: '[](https://kahemchu.medium.com/?source=post_page-----f4a800db9ae--------------------------------)[![KahEm
    Chu](../Images/2f89d02e85f61f08f048773990f4d53f.png)](https://kahemchu.medium.com/?source=post_page-----f4a800db9ae--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f4a800db9ae--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f4a800db9ae--------------------------------)
    [KahEm Chu](https://kahemchu.medium.com/?source=post_page-----f4a800db9ae--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://kahemchu.medium.com/?source=post_page-----f4a800db9ae--------------------------------)[![KahEm
    Chu](../Images/2f89d02e85f61f08f048773990f4d53f.png)](https://kahemchu.medium.com/?source=post_page-----f4a800db9ae--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f4a800db9ae--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f4a800db9ae--------------------------------)
    [KahEm Chu](https://kahemchu.medium.com/?source=post_page-----f4a800db9ae--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----f4a800db9ae--------------------------------)
    ·10 min read·Jan 4, 2023
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----f4a800db9ae--------------------------------)
    ·阅读时间 10 分钟·2023 年 1 月 4 日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/d3349995772e17d6c1e9e1b34526cc5b.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d3349995772e17d6c1e9e1b34526cc5b.png)'
- en: Photo by [Jon Tyson](https://unsplash.com/@jontyson?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/s/photos/time?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[Jon Tyson](https://unsplash.com/@jontyson?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    摄影，来自 [Unsplash](https://unsplash.com/s/photos/time?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)'
- en: Most of the time, the DateTime object represents a crucial element for drawing
    insights from the data. We can understand the trend, cycle, and seasonal pattern
    from the data with the date. From that, we can prepare the report based on the
    pattern found, and further study and analyze the data.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数情况下，DateTime 对象是从数据中获取洞察的重要元素。我们可以通过日期理解数据中的趋势、周期和季节模式。基于这些模式，我们可以准备报告，并进一步研究和分析数据。
- en: 'The importance of the DateTime object in analysis motivated me to study further
    what I can do with the DateTime object in the `pandas` module. Then, I jotted
    down the methods and properties I used frequently and those I felt I might need
    to use some days. Furthermore, I grouped them into parts according to my understanding.
    There are 2 parts created as below:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: DateTime 对象在分析中的重要性激励我进一步研究在 `pandas` 模块中可以用 DateTime 对象做什么。然后，我记录下了我经常使用的方法和属性，以及我可能需要使用的一些方法。此外，我根据自己的理解将其分成了两个部分，具体如下：
- en: '![](../Images/31bdd968f0779f2b31bcfdec88c1c29a.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/31bdd968f0779f2b31bcfdec88c1c29a.png)'
- en: Image from Author.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源于作者。
- en: For a better reading experience, I decided to split the group into 2 articles.
    This is the first article, you may find [the second article here](/dealing-with-dates-in-pythons-dataframe-part-2-the-basics-9ad5edacd2f8).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好的阅读体验，我决定将这一组内容拆分为 2 篇文章。这是第一篇，你可以在这里找到 [第二篇文章](/dealing-with-dates-in-pythons-dataframe-part-2-the-basics-9ad5edacd2f8)。
- en: Let us start with Part 1, *The Basic to Deal with DateTime Series*.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从第 1 部分开始，*处理 DateTime 系列的基础知识*。
- en: Part 1 — The Basic to Deal with DateTime Series
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第 1 部分 — 处理 DateTime 系列的基础知识
- en: '[DateTime Series Creation](#0933)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[DateTime 系列创建](#0933)'
- en: '[pandas.date_range](#b5e1)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[pandas.date_range](#b5e1)'
- en: '[pandas.bdate_range](#bbc9)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[pandas.bdate_range](#bbc9)'
- en: '[pandas.period_range](#7d21)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[pandas.period_range](#7d21)'
- en: '[pandas.timedelta_range](#b8b9)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[pandas.timedelta_range](#b8b9)'
- en: DateTime Series Creation
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DateTime 系列创建
- en: DateTime series creation is practical when you want to create a sample dataset
    to test out a couple of new functions that you are writing. Below are the four
    DateTime series creation methods from the `pandas` module.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 当你想创建一个示例数据集以测试你正在编写的几个新功能时，创建 DateTime 系列是很实用的。以下是 `pandas` 模块中四种 DateTime
    系列创建方法。
- en: '[pandas.date_range](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.date_range.html?highlight=date_range#pandas.date_range)
    — Return a fixed frequency DatetimeIndex.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas.bdate_range](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.bdate_range.html)
    — Return a fixed frequency DatetimeIndex, with the business day as the default
    frequency.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas.period_range](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.period_range.html)
    — Return a fixed frequency PeriodIndex. The day (calendar) is the default frequency.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas.timedelta_range](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.timedelta_range.html)
    — Return a fixed frequency TimedeltaIndex, with the day as the default frequency.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The frequency mentioned above is referring to the interval between the dates
    generated, it could be hourly, daily, monthly, quarterly, yearly and more. You
    may learn about the [frequency string aliases in this link](https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases)
    [1].
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: Let’s see them one by one!
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: '**1\. pandas.date_range**'
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `pandas.date_range()` method returns the DateTime series according to the
    combination of three parameters from the following four parameters:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: '`start` — the start date of the date range generated'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`end` — the end date of the date range generated'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`periods` — the number of dates generated'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`freq` — default to “D”, the interval between dates generated, it could be
    hourly, monthly or yearly'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Note:* `freq = “D”` *mean daily frequency.*'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: At least three of the 4 parameters above must be stated to generate a DateTime
    series. Since the `freq` is defaulted to be “D”, if you are using `freq=D`, you
    need to specify the other two parameters only. If `freq` is omitted, which means
    you specify only the `start`, the `end` and the `period` parameters, and the date
    created will have periods of linearly spaced elements between the start and the
    end date. There are other parameters in the method, but in this article, we will
    focus on these 4 main parameters only.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: For the **first example**, the dates are generated by specifying the start date
    and the period. As mentioned above, the frequency is set to be daily by default.
    Hence, there will be 10 dates generated at a daily frequency.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Output:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/dd9d065d649643000f0d164a77e22eea.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
- en: Image by Author.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: For the **second example**, the start date, the periods, and the frequency are
    specified. The following example is creating a date series starting from 2020/1/1,
    10 dates with 3-month intervals between each date.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Output:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/29d895a26aeed2724e4983258eec9864.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
- en: Image by Author.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: Why are the dates start from month's end? 🤨
  id: totrans-47
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Well, it's actually because the “M” frequency refers to the month-end frequency,
    while the “MS” refers to the month-start frequency [[1]](https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: For the **third example**, the start and end date, and the frequency are provided.
    As mentioned, the dates created will be linearly spaced when you omitted the frequency.
    Then, if the periods are omitted, the dates created will be the dates within the
    start and end date at the frequency interval specified.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/e39a9740855558489678ed42e6f1140b.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
- en: Image by Author.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/be9049a9c1c63095482efd207c6b604c.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
- en: Image from Author. Created with Excalidraw.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: As the next period will be Jan 31, 2023, hence there are only 4 dates created
    in the third example 😉.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: '**A simple guide here:**'
  id: totrans-56
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  id: totrans-57
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: When you are certain about the number of dates you want to create, you use the
    **period** parameter.
  id: totrans-58
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  id: totrans-59
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: When you are not sure about how many exact dates you will have but know when
    should it end or it should not exceed, use the **end** parameter instead.
  id: totrans-60
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**2\. pandas.bdate_range**'
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Similar to `pandas.date_range()` method, `pandas.bdate_range()` also have 4
    main parameters, which are the `start`, the `end`, the `periods` and the `freq`,
    except the `freq` is defaulted to “B” in `pandas.bdate_range()`. The “B” refers
    to business day frequency, which the weekend like Saturday and Sunday will be
    skipped.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: Let's see the **first example**! So, in the following example, the start date
    and the periods are specified, and as mentioned, the frequency is defaulted to
    “B”.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Output:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8bc3c25787eb5a0bf9d502fcee72b97e.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
- en: Image by Author.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: The two dates which are skipped, “2022–01–08” and “2022–01–09” are Saturday
    and Sunday respectively.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: You might notice that the `pandas.date_range()` method can return workdays only
    as well when you set the `freq= “B”`, then why do we need to use `pandas.bdate_range()`?
    🤷‍♀️
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: This is because of the `pandas.bdate_range()` return business day by default
    and `pandas.bdate_range()` have `weekmask` and `holidays`parameters.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: '**Note:** To use the `holidays` or `weekmask` parameter, **custom business
    day frequency** need to be used, where `freq= “C”`. [[2]](https://stackoverflow.com/questions/55248600/pandas-specifying-custom-holidays)'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: Now, let us see what is the `holidays` parameter. `Holidays` referring to the
    list of dates to exclude from the set of valid business days.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: For the **second example**, the start date, periods, frequency and holidays
    parameter are specified.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Output:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/602f90cfa1f6927676cc019c53f2f814.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
- en: Image by Author.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: The holiday date specified is not on the list of dates generated, and as “C”
    refers to the custom business day frequency, so the weekend is still skipped in
    the date range created.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: '**Note:** The Holidays parameter only takes a list of the datetime objects.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: Now, let's see the `weekmask` parameter. Weekmask refers to the valid business
    days for a business that does not follow traditional business like Mon to Fri.
    Also, the default value for `weekmask` is equivalent to ‘Mon Tue Wed Thu Fri’.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: For the **third example**, we specified the start date, the custom business
    day with `weekmask = “Tue Wed Thu Fri Sat Sun”`.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 对于**第三个示例**，我们指定了开始日期和自定义的工作日，`weekmask = “Tue Wed Thu Fri Sat Sun”`。
- en: '[PRE5]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/1badc10d915089ccffc67a13dec174e5.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1badc10d915089ccffc67a13dec174e5.png)'
- en: Image by Author.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者。
- en: The Monday date (2022–01–10) will not be included in the dates created. This
    parameter is useful when the business not running according to a normal weekday.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 星期一的日期（2022–01–10）将不会包含在生成的日期中。这个参数在业务不按正常工作日运行时非常有用。
- en: Combining these two parameters, you can generate the DateTime series according
    to your business operating day as in the example below.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 结合这两个参数，你可以根据业务操作日生成 DateTime 系列，如下面的示例所示。
- en: '[PRE6]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Output:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '![](../Images/e625be0ef3cc9531067b1f03e2b368ad.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e625be0ef3cc9531067b1f03e2b368ad.png)'
- en: Image by Author.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者。
- en: As seen from the output, the Monday date (2022–01–10) and holiday date (2022–01–07)
    are not included in the list generated.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 从输出中可以看出，星期一的日期（2022–01–10）和节假日的日期（2022–01–07）没有包含在生成的列表中。
- en: '**3\. pandas.period range**'
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**3\. pandas.period_range**'
- en: There are some similarities and differences between `pandas.period_range()`
    method and the two methods earlier, the `pandas.date_range()` and `pandas.bdate_range()`
    .
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas.period_range()` 方法与之前的两个方法，即 `pandas.date_range()` 和 `pandas.bdate_range()`，之间存在一些相似之处和不同之处。'
- en: Similar to the two methods earlier, `pandas.period_range()` can generate the
    date series by specifying the 3 out of the 4 main parameters, `start`, `end`,
    `periods` and `freq`. Also, the frequency is still defaulted to daily.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于之前的两种方法，`pandas.period_range()` 可以通过指定四个主要参数中的三个，即 `start`、`end`、`periods`
    和 `freq`，来生成日期系列。同时，频率仍默认为每日。
- en: One difference to take note of is that the `pandas.period_range()` generate
    period object instead of a DateTime object.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 一个需要注意的不同点是，`pandas.period_range()` 生成的是周期对象，而不是 DateTime 对象。
- en: For the **first example**, we are generating a series of 5 periods in daily
    frequency by default, starting from 2022–01–01.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 对于**第一个示例**，我们生成了一系列按日频率的 5 个周期，默认从 2022–01–01 开始。
- en: '[PRE7]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Output:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '![](../Images/ef8d835618168bf5e526080429dc8f08.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ef8d835618168bf5e526080429dc8f08.png)'
- en: Image by Author.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者。
- en: For the **second example**, we are generating a series of 5 periods in monthly
    frequency, starting from 2022–01–01.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 对于**第二个示例**，我们生成了一系列的 5 个周期，频率为每月一次，从 2022–01–01 开始。
- en: '[PRE8]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Output:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '![](../Images/d68aa1c805b6dadab4277ca01245e009.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d68aa1c805b6dadab4277ca01245e009.png)'
- en: Image by Author.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者。
- en: For the **third example**, we are generating a series of 5 periods in yearly
    frequency, starting from 2022–01–01.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 对于**第三个示例**，我们生成了一系列按年频率的 5 个周期，从 2022–01–01 开始。
- en: '[PRE9]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Output:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '![](../Images/4d09ae89354eea02b1b87a9ea699cf75.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4d09ae89354eea02b1b87a9ea699cf75.png)'
- en: Image by Author.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者。
- en: For the **last example**, we are generating a series in yearly frequency, starting
    from 2022–01–01 to 2027–01–01.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 对于**最后一个示例**，我们生成了一系列按年为频率的周期，从 2022–01–01 到 2027–01–01。
- en: '[PRE10]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Output:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '![](../Images/e467a0cc91d8f9328bf302de01cbda15.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e467a0cc91d8f9328bf302de01cbda15.png)'
- en: Image by Author.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者。
- en: The period_range method work in the same way with `pandas.date_range()`, just
    it returns the period instead of the date. So, if the `periods` parameter is omitted,
    the periods created will be the periods within the start and end date with the
    frequency interval specified.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: period_range 方法的工作方式与 `pandas.date_range()` 相同，只是它返回的是周期而不是日期。因此，如果省略 `periods`
    参数，则创建的周期将是指定频率间隔的开始和结束日期之间的周期。
- en: '**4\. pandas.timedelta_range**'
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**4\. pandas.timedelta_range**'
- en: Similar to the three methods above, `pandas.timedelta_range()` method returns
    the date series according to the combination of three parameters from the four
    main parameters, start, end, periods and frequency. The frequency is still defaulted
    to daily. There is one difference between this method with the three examples
    earlier, which can be explained with the example below.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于上述三种方法，`pandas.timedelta_range()` 方法根据四个主要参数中的三个参数组合返回日期系列，即 start、end、periods
    和 frequency。频率仍默认为每日。与之前的三个示例方法不同的一点可以通过下面的例子进行解释。
- en: The example below is from a mistake I made during running the script, and then
    the errors that occurred.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例来自我在运行脚本时犯的一个错误，以及随后发生的错误。
- en: '[PRE11]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The script above returns a Key Error and a Value Error as below.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的脚本返回了如下的键错误和数值错误。
- en: '![](../Images/a48471c65e93d3b735015f75a39bac90.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a48471c65e93d3b735015f75a39bac90.png)'
- en: Key Error. Image by Author.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 键错误。图片来源：作者。
- en: '![](../Images/bdd091195332b8785819b0abff3483c2.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bdd091195332b8785819b0abff3483c2.png)'
- en: Value Error. Image by Author.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: From the error script, we can see the error comes from the value we put for
    the “start” parameter. As we are generating a time delta object, the value we
    put for the “start” parameter should be in timedelta format too.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: So, the correct example should be as below, where the start is specified in
    timedelta format, the number of periods is specified, and the default daily frequency
    is used.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Output:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a023494a11b34cea30c17bbdf067385b.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
- en: Image by Author.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: For the second example, the starting time delta, the periods and the frequency
    are specified.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Output:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4082e9a9a8ad6a5f6298e8a8b2db5031.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
- en: Image by Author.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: For the third example, the starting time delta, the end time delta and the frequency
    are specified.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Output:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/62399de92be4ced62f374dc9681ec454.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
- en: Image by Author.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: For the fourth example, the starting time delta, the end time delta and the
    periods are specified. The time delta series generated will be linearly spaced
    when the frequency is not set.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Output:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/cb55d385f5a812cbcde33e343fca56f3.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
- en: Image by Author.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: 'Note: For the `pandas.timedelta_range()` method, the “start” parameter accepts
    only the time delta object, while for the other three methods, the “start” parameter
    takes the Datetime object as input.'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: 5\. **Create DateTime with a Timestamp**
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the pandas module, we can also create the datetime object with the timestamp
    method.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: There are two ways to create a DateTime object with a timestamp, the first way
    is with the datetime parameters as below.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Output:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/770b4803a5591dbf881c564592414699.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
- en: Image by Author.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: The second way is to create the timestamp from the DateTime string.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![](../Images/268128a5c66fd13e8de07d4f40b3e5f0.png)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
- en: Image by Author.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: Okay, so the above is a demonstration of the usage of timestamp methods to create
    a DateTime object.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: '**Conclusion**'
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In conclusion, we have seen 4 methods related to DateTime series creation, which
    are standard date creation, business date creation, period creation and timedelta
    creation. Other than that, the date creation method with timestamp is also demonstrated.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: That’s all for the DateTime series creation in Python. I hope you enjoy reading
    this article and hope it helps you to understand more about DateTime series creation
    in a DataFrame. Thanks! 😊
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: Stay Connected
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Subscribe on [YouTube](https://www.youtube.com/channel/UCiMtx0qbILP41Ot-pkk6eJw)
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: Side Note
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Part Two of this article, [Dealing with Dates in Python’s DataFrame Part 2 —
    The Basics](/dealing-with-dates-in-pythons-dataframe-part-2-the-basics-9ad5edacd2f8).
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: I have explained the possible manipulation you can perform on the DateTime variables
    in [Dealing with Dates in Python](https://medium.com/towards-data-science/dealing-with-dates-in-python-1b4069a07a0f).
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: In [Report Automation Tips with Python](/report-automation-tips-with-python-783a9cd58e23),
    I have explained some tips on report automation. Check it out!
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: Reference
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[1] [Time Series/Data Functionality — Offset aliases. *pandas*: String aliases
    for useful common time series frequencies](https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases)'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: '[2] [pandas-specifying-custom-holidays](https://stackoverflow.com/questions/55248600/pandas-specifying-custom-holidays):
    Specifying custom holidays in `pandas.bdate_range()` method'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: Thank you and congrats for reading to the end 😊!
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/bb86215d7a55cb1f73fcdca86f1e5572.png)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
- en: Photo by [JOSHUA COLEMAN](https://unsplash.com/@joshstyle?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/s/photos/thank-you?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
