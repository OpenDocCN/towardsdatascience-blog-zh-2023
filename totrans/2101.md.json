["```py\nimport pandas as pd\n\nfile = 'path_to_data/IrishSmartBuoy.csv'\n# reading the data set\n# skipping the second with skiprows\n# parsing time column to datetime and setting it as index\ndata = pd.read_csv(file, skiprows=[1], parse_dates=['time'], index_col='time')\n# defining the series and converting cm to meters\nseries = data['SignificantWaveHeight'] / 100\n# resampling to hourly and taking the mean\nseries = series.resample('H').mean()\n```", "```py\nfrom sklearn.model_selection import train_test_split\n\n# https://github.com/vcerqueira/tsa4climate/tree/main/src\nfrom src.tde import time_delay_embedding\n\n# using past 24 observations as explanatory variables\nN_LAGS = 24\n# using the next 12 hours as the forecasting horizon\nHORIZON = 12\n# forecasting the probability of waves above 5 meters\nTHRESHOLD = 5\n\n# leaving last 20% of observations for testing\ntrain, test = train_test_split(series, test_size=0.2, shuffle=False)\n\n# transforming time series into a tabular format for supervised learning\nX_train, Y_train = time_delay_embedding(train, n_lags=N_LAGS, horizon=HORIZON, return_Xy=True)\nX_test, Y_test = time_delay_embedding(test, n_lags=N_LAGS, horizon=HORIZON, return_Xy=True)\n\ny_train = Y_train.apply(lambda x: (x > THRESHOLD).any(), axis=1).astype(int)\ny_test = Y_test.apply(lambda x: (x > THRESHOLD).any(), axis=1).astype(int)\n```", "```py\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import roc_auc_score, roc_curve\n\nmodel = RandomForestClassifier(max_depth=5)\nmodel.fit(X_train, y_train)\n\nprobs = model.predict_proba(X_test)[:, 1]\n\nroc_auc_score(y_test, probs)\nfpr, tpr, thresholds = roc_curve(y_test, probs)\n```"]