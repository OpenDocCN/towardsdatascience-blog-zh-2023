["```py\n# With apply\nimport re\ndf.office.apply(lambda x: re.search(r'\\d+', x).group(0))\n\n# With native string operation\ndf.office.str.extract(r'(\\d+)')\n```", "```py\nimport pandas as pd\nfrom faker import Faker\n\nfaker = Faker()\n\nn = 100000\n\naddress= pd.Series([faker.address() for i in range(n)])\n\n\"\"\"\n|    | address                      |\n|---:|:-----------------------------|\n|  0 | 548 Small Parkways Suite 832 |\n|    | South Brianborough, DC 50474 |\n|  1 | 94291 Jerry Pass Suite 992   |\n|    | East Rebecca, PR 87881       |\n|  2 | 3973 Wise Spring             |\n|    | Grantfort, AS 52002          |\n|  3 | 62589 David Island           |\n|    | East Kathleenville, OH 45208 |\n|  4 | 0415 Jimenez Hill Apt. 642   |\n|    | Gambleland, WA 99356         |\n\"\"\" \n```", "```py\n(\n    (address)\n    .map(lambda x: (re.search(r\"\\w{2} \\d{5}\", x).group()))\n    .str.split(\" \", expand=True)\n    .rename(columns={0: \"state\", 1: \"zip_code\"})\n)\n\n\"\"\"\n|    | state   |   zip_code |\n|---:|:--------|-----------:|\n|  0 | DC      |      50474 |\n|  1 | PR      |      87881 |\n|  2 | AS      |      52002 |\n|  3 | OH      |      45208 |\n|  4 | WA      |      99356 |\n\"\"\"\n```", "```py\naddress.str.extract(r\"(?P<state>\\w{2}) (?P<zip_code>\\d{5})\")\n\n\"\"\"\n|    | state   |   zip_code |\n|---:|:--------|-----------:|\n|  0 | DC      |      50474 |\n|  1 | PR      |      87881 |\n|  2 | AS      |      52002 |\n|  3 | OH      |      45208 |\n|  4 | WA      |      99356 |\n\"\"\"\n```", "```py\nimport pandas as pd\n\n# Create a sample dataframe\ndf = pd.DataFrame(\n    {\n        \"location\": [\n            \"New York 10001\",\n            \"California 90001\",\n            \"Texas-75201\",\n            \"Georgia 30301\",\n            \"Oregon97205\",\n            \"Arizona 85001\",\n            \"Illinois 60601\",\n            \"Florida 33101\",\n            \"Ohio 44101\",\n            \"Pennsylvania-19104\",\n        ]\n    }\n)\n\ndf[\"location\"].str.split(r\"[\\s|-]*(\\d{5})\", expand=True)\n\n'''\n|    | 0            |     1 |\n|---:|:-------------|------:|\n|  0 | New York     | 10001 |\n|  1 | California   | 90001 |\n|  2 | Texas        | 75201 |\n|  3 | Georgia      | 30301 |\n|  4 | Oregon       | 97205 |\n|  5 | Arizona      | 85001 |\n|  6 | Illinois     | 60601 |\n|  7 | Florida      | 33101 |\n|  8 | Ohio         | 44101 |\n|  9 | Pennsylvania | 19104 |\n''' \n```", "```py\nimport pandas as pd\n\n# Create a sample dataframe\ndata = {\n    \"office_serial_number\": [\n        \"US101-001\",\n        \"UK201-006\",\n        \"CA301-003\",\n        \"AU401-004\",\n        \"UK202-005\",\n        \"IN302-006\",\n        \"IR102-007\",\n        \"AU402-006\",\n        \"SL303-009\",\n        \"UK203-010\",\n        \"FR403-011\",\n        \"US103-012\",\n    ]\n}\n\ndf = pd.DataFrame(data)\n\ndf[df.office_serial_number.str.contains(\"^(UK|IN|AU)\\d{3}-006\")]\n\n'''\n|    | office_serial_number   |\n|---:|:-----------------------|\n|  1 | UK201-006              |\n|  5 | IN302-006              |\n|  7 | AU402-006              |\n'''\n```", "```py\nimport pandas as pd\nimport re\n\n# create a sample dataframe (dummy)\ndf = pd.DataFrame({'phone': [\"+1 555-555-5555\", \"+44 20 7123 4567\", \"+81 3-1234-5678\", \"0049 30 12345678\", \"+61 2 1234 5678\", \"+33 1 23 45 67 89\", \"+86 10 1234 5678\", \"011 52 55 1234 5678\", \"+971 4 123 4567\", \"+49 911 12345678\", \"(+81) 3-1234-5678\"]})\n\n# define a regular expression pattern to match the country code\npattern = r'^\\+?\\d{1,3}[\\s-]?'   # match + or digit(s) followed by space/hyphen\n\n# apply the pattern to the 'phone' column and replace the matches with an empty string\ndf['phone'] = df['phone'].apply(lambda x: re.sub(pattern, '', x))\n\nprint(df)\n\n          phone\n0  555-555-5555\n1  20 7123 4567\n2  3-1234-5678\n3   30 12345678\n4   2 1234 5678\n5  1 23 45 67 89\n6  10 1234 5678\n7  52 55 1234 5678\n8   4 123 4567\n9  911 12345678\n10  3-1234-5678\n```"]