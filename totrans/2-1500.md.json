["```py\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\n\nimport matplotlib.patheffects as PathEffects\nfrom matplotlib.patches import Polygon\n```", "```py\nfont_family = \"sans\"\nbackground_color = \"#D4F1F4\"\ntext_color = \"#040303\"\n\nsns.set_style({\n    \"axes.facecolor\": background_color,\n    \"figure.facecolor\": background_color,\n    \"font.family\": font_family,\n    \"text.color\": text_color,\n})\n```", "```py\nworld = gpd.read_file(\"WB_Boundaries_GeoJSON_highres/WB_countries_Admin0.geojson\")\nworld.loc[world.NAME_EN == \"Seychelles\", \"CONTINENT\"] = \"Africa\"\nworld.loc[world.NAME_EN == \"Equatorial Guinea\", \"INCOME_GRP\"] = \"3\\. Upper middle income\"\n\nafrica = world[world.CONTINENT == \"Africa\"].reset_index(drop=True)\n\ndisputed_areas = gpd.read_file(\"WB_Boundaries_GeoJSON_highres/WB_Admin0_disputed_areas.geojson\")\ndisputed_areas = disputed_areas[disputed_areas.CONTINENT == \"Africa\"]\n```", "```py\ndef draw_map(\n    maps_to_draw, \n    boundry_map_index=0,\n    use_hatch_for_indexes=[],\n    padding={},\n    labels=[],\n    figsize=(40, 40)\n):\n\n    assert \"color\" in maps_to_draw[0].columns, \"Missing color column in map dataframe\"\n    assert \"edgecolor\" in maps_to_draw[0].columns, \"Missing edgecolor column in map dataframe\"\n\n    fig = plt.figure(figsize=figsize)\n    ax = fig.add_subplot()\n\n    for map_index, map_to_draw in enumerate(maps_to_draw):\n        map_to_draw.plot(\n            ax=ax, color=map_to_draw.color, edgecolor=map_to_draw.edgecolor,\n            hatch=\"//\" if map_index in use_hatch_for_indexes else \"\",\n        )\n\n    # Additional functions below this comment\n\n    return ax\n```", "```py\nworld[\"color\"] = \"#f0f0f0\"\nworld[\"edgecolor\"] = \"#c0c0c0\"\n\nafrica[\"edgecolor\"] = \"#000000\"\nafrica.loc[africa.INCOME_GRP == \"5\\. Low income\", \"color\"] = \"#dadada\"\nafrica.loc[africa.INCOME_GRP == \"4\\. Lower middle income\", \"color\"] = \"#89bab2\"\nafrica.loc[africa.INCOME_GRP == \"3\\. Upper middle income\", \"color\"] = \"#1B998B\"\n\ndisputed_areas[\"color\"] = \"#FFD6D6\"\ndisputed_areas[\"edgecolor\"] = \"#000000\"\n```", "```py\nax = draw_map(maps_to_draw=[world, africa, disputed_areas])\n\nplt.axis(\"off\")\nplt.show()\n```", "```py\ndef set_limits(ax, data, pad_left=0, pad_right=0, pad_top=0, pad_bottom=0):\n    xmin_ = data.bounds.minx.min()\n    ymin_ = data.bounds.miny.min()\n    xmax_ = data.bounds.maxx.max()\n    ymax_ = data.bounds.maxy.max()\n\n    xmin = xmin_ - pad_left * (xmax_ - xmin_)\n    xmax = xmax_ + pad_right * (xmax_ - xmin_)\n    ymin = ymin_ - pad_bottom * (ymax_ - ymin_)\n    ymax = ymax_ + pad_top * (ymax_ - ymin_)\n\n    ax.set(xlim=(xmin, xmax), ylim=(ymin, ymax))\n```", "```py\ndef draw_map(\n    maps_to_draw, \n    boundry_map_index=0,\n    use_hatch_for_indexes=[],\n    padding={},\n    labels=[],\n    figsize=(40, 40)\n):\n\n    ...\n    # Additional functions below this comment\n    set_limits(ax, maps_to_draw[boundry_map_index], **padding)\n\n    return ax\n```", "```py\nax = draw_map(\n    maps_to_draw=[world, africa, disputed_areas], boundry_map_index=1,\n    padding={\"pad_bottom\": -0.08, \"pad_top\": 0.07, \"pad_left\": 0.07, \"pad_right\": 0.05},\n    use_hatch_for_indexes=[2]\n)\n\nplt.axis(\"off\")\nplt.show()\n```", "```py\ndef add_label(ax, label, fontsize=24, fontweight=\"bold\", va=\"center\", ha=\"center\"):            \n    annotation = plt.annotate(\n        label[\"label\"], \n        xy=label[\"xytext\"] if \"xypin\" not in label.keys() else label[\"xypin\"], \n        xytext=None if \"xypin\" not in label.keys() else label[\"xytext\"], \n        xycoords=\"data\", fontsize=fontsize, va=va, ha=ha,\n        linespacing=1.3, color=label[\"color\"], fontweight=fontweight, \n        arrowprops={\n            \"arrowstyle\": \"-\",\n            \"linewidth\": 2,\n        })\n\n    annotation.set_path_effects([PathEffects.withStroke(linewidth=6, foreground='w')])\n```", "```py\ncountry_labels = [\n    {\"label\": \"Algeria\", \"color\": \"#040303\", \"xytext\": (2.0, 27.5)},\n    {\"label\": \"Angola\", \"color\": \"#040303\", \"xytext\": (17.7, -13.1)},\n    {\"label\": \"Benin\", \"color\": \"#040303\", \"xytext\": (3.2, 5.4), \"xypin\": (2.3, 7.6)},\n    {\"label\": \"Botswana\", \"color\": \"#040303\", \"xytext\": (24.4, -22.3)},\n    {\"label\": \"Burkina\\nFaso\", \"color\": \"#040303\", \"xytext\": (-1.4, 12.6)},\n    {\"label\": \"Burundi\", \"color\": \"#040303\", \"xytext\": (43.3, -4.9), \"xypin\": (29.8, -3.6)},\n    {\"label\": \"Cameroon\", \"color\": \"#040303\", \"xytext\": (12.5, 5.2)},\n    {\"label\": \"Cape Verde\", \"color\": \"#040303\", \"xytext\": (-23.7, 19), \"xypin\": (-23.7, 16)},\n    {\"label\": \"Central African\\nRepublic\", \"color\": \"#040303\", \"xytext\": (21.1, 6.5)},\n    {\"label\": \"Chad\", \"color\": \"#040303\", \"xytext\": (18.5, 16.0)},\n    {\"label\": \"Comoros\", \"color\": \"#040303\", \"xytext\": (46.8, -9.6), \"xypin\": (43.3, -11.7)},\n    {\"label\": \"Cote\\nd'Ivoire\", \"color\": \"#040303\", \"xytext\": (-5.5, 8.5)},\n    {\"label\": \"Democratic\\nRepublic of\\nthe Congo\", \"color\": \"#040303\", \"xytext\": (23.3, -2.7)},\n    {\"label\": \"Djibouti\", \"color\": \"#040303\", \"xytext\": (47.0, 13.4), \"xypin\": (43.0, 12.2)},\n    {\"label\": \"Egypt\", \"color\": \"#040303\", \"xytext\": (29.2, 26.6)},\n    {\"label\": \"Equatorial\\nGuinea\", \"color\": \"#040303\", \"xytext\": (5.9, -2.5), \"xypin\": (10.5, 1.6)},\n    {\"label\": \"Eritrea\", \"color\": \"#040303\", \"xytext\": (43.0, 16.9), \"xypin\": (38.5, 16.2)},\n    {\"label\": \"Lesotho\", \"color\": \"#040303\", \"xytext\": (35.0, -31.0), \"xypin\": (28.4, -29.5)},\n    {\"label\": \"Ethiopia\", \"color\": \"#040303\", \"xytext\": (39.9, 8.5)},\n    {\"label\": \"Gabon\", \"color\": \"#040303\", \"xytext\": (11.8, -0.7)},\n    {\"label\": \"Ghana\", \"color\": \"#040303\", \"xytext\": (-1.3, 6.6)},\n    {\"label\": \"Guinea\", \"color\": \"#040303\", \"xytext\": (-11.6, 11.0)},\n    {\"label\": \"Guinea-\\nBissau\", \"color\": \"#040303\", \"xytext\": (-20.3, 10.3), \"xypin\": (-14.5, 12.2)},\n    {\"label\": \"Kenya\", \"color\": \"#040303\", \"xytext\": (37.9, 0.5)},\n    {\"label\": \"Eswantini\", \"color\": \"#040303\", \"xytext\": (35.5, -29.3), \"xypin\": (31.5, -26.8)},\n    {\"label\": \"Liberia\", \"color\": \"#040303\", \"xytext\": (-10.6, 3.6), \"xypin\": (-9.6, 6.7)},\n    {\"label\": \"Libya\", \"color\": \"#040303\", \"xytext\": (17.5, 27.5)},\n    {\"label\": \"Madagascar\", \"color\": \"#040303\", \"xytext\": (46.7, -19.6)},\n    {\"label\": \"Malawi\", \"color\": \"#040303\", \"xytext\": (38.9, -21.3), \"xypin\": (35.0, -15.6)},\n    {\"label\": \"Mali\", \"color\": \"#040303\", \"xytext\": (-1.9, 17.8)},\n    {\"label\": \"Mauritania\", \"color\": \"#040303\", \"xytext\": (-11.1, 19.6)},\n    {\"label\": \"Morocco\", \"color\": \"#040303\", \"xytext\": (-6.9, 31.3)},\n    {\"label\": \"Mozambique\", \"color\": \"#040303\", \"xytext\": (40.8, -15.2)},\n    {\"label\": \"Namibia\", \"color\": \"#040303\", \"xytext\": (17.3, -20.7)},\n    {\"label\": \"Niger\", \"color\": \"#040303\", \"xytext\": (9.8, 17.5)},\n    {\"label\": \"Nigera\", \"color\": \"#040303\", \"xytext\": (7.8, 9.8)},\n    {\"label\": \"Republic of\\nthe Congo\", \"color\": \"#040303\", \"xytext\": (7.8, -7.2), \"xypin\": (12.0, -4.1)},\n    {\"label\": \"Rwanda\", \"color\": \"#040303\", \"xytext\": (43.8, -3.6), \"xypin\": (30.1, -2.0)},\n    {\"label\": \"São Tomé and\\nPríncipe\", \"color\": \"#040303\", \"xytext\": (-0.9, 0.2), \"xypin\": (6.8, 0.2)},\n    {\"label\": \"Senegal\", \"color\": \"#040303\", \"xytext\": (-15.0, 14.7)},\n    {\"label\": \"Seychelles\", \"color\": \"#040303\", \"xytext\": (55.6, -2), \"xypin\": (55.6, -4.5)},\n    {\"label\": \"Sierra Leone\", \"color\": \"#040303\", \"xytext\": (-16.4, 6.3), \"xypin\": (-12.0, 8.5)},\n    {\"label\": \"Somalia\", \"color\": \"#040303\", \"xytext\": (45.7, 2.7)},\n    {\"label\": \"South\\nAfrica\", \"color\": \"#040303\", \"xytext\": (22.4, -31.0)},\n    {\"label\": \"South\\nSudan\", \"color\": \"#040303\", \"xytext\": (30.2, 7.0)},\n    {\"label\": \"Sudan\", \"color\": \"#040303\", \"xytext\": (29.7, 16.0)},\n    {\"label\": \"Tanzania\", \"color\": \"#040303\", \"xytext\": (35.0, -6.7)},\n    {\"label\": \"The\\nGambia\", \"color\": \"#040303\", \"xytext\": (-20.3, 13.6), \"xypin\": (-15.4, 13.6)},\n    {\"label\": \"Togo\", \"color\": \"#040303\", \"xytext\": (1.0, 4.1), \"xypin\": (1.0, 7.5)},\n    {\"label\": \"Tunisia\", \"color\": \"#040303\", \"xytext\": (9.3, 38.9), \"xypin\": (9.3, 35.7)},\n    {\"label\": \"Uganda\", \"color\": \"#040303\", \"xytext\": (32.6, 0.9)},\n    {\"label\": \"Zambia\", \"color\": \"#040303\", \"xytext\": (26.1, -14.9)},\n    {\"label\": \"Zimbawe\", \"color\": \"#040303\", \"xytext\": (29.7, -19.1)},\n]\n```", "```py\ndef draw_map(\n    maps_to_draw, \n    boundry_map_index=0,\n    use_hatch_for_indexes=[],\n    padding={},\n    labels=[],\n    figsize=(40, 40)\n):\n\n    ...\n    # Additional functions below this comment\n    set_limits(ax, maps_to_draw[boundry_map_index], **padding)\n\n    for label in labels:\n        add_label(ax, label)\n\n    return ax\n```", "```py\nax = draw_map(\n    maps_to_draw=[world, africa, disputed_areas], boundry_map_index=1,\n    padding={\"pad_bottom\": -0.08, \"pad_top\": 0.07, \"pad_left\": 0.07, \"pad_right\": 0.05},\n    use_hatch_for_indexes=[2]\n    labels=country_labels\n)\n\nplt.axis(\"off\")\nplt.show()\n```", "```py\ndef draw_legend_geometry(ax, row, x_loc, y_loc, height):\n    x = np.array(row.geometry.boundary.coords.xy[0])\n    y = np.array(row.geometry.boundary.coords.xy[1])\n\n    x = x - (row.geometry.centroid.x - x_loc)\n    y = y - (row.geometry.centroid.y - y_loc)\n\n    ratio = height / (y.max() - y.min())\n    x = x * ratio + (x_loc - x_loc * ratio)\n    y = y * ratio + (y_loc - y_loc * ratio)\n\n    ax.add_artist(Polygon(np.stack([x, y], axis=1), facecolor=row.color, edgecolor=row.edgecolor, hatch=row.hatch))\n```", "```py\nax = draw_map(\n    maps_to_draw=[world, africa, disputed_areas], boundry_map_index=1,\n    padding={\"pad_bottom\": -0.08, \"pad_top\": 0.07, \"pad_left\": 0.07, \"pad_right\": 0.05},\n    use_hatch_for_indexes=[2]\n    labels=country_labels,\n)\n\nlegend = pd.concat([\n    disputed_areas[disputed_areas.NAME_EN == \"Western Sahara\"],\n    africa[africa.NAME_EN.isin([\"Niger\", \"Senegal\", \"Botswana\"])]\n])\n\nlegend.loc[legend.NAME_EN == \"Western Sahara\", \"INCOME_GRP\"] = \"6\\. Disputed area\"\nlegend = legend.sort_values(\"INCOME_GRP\")\nlegend[\"hatch\"] = [\"\", \"\", \"\", \"//\"]\n\nfor i, row in legend.reset_index().iterrows():\n    draw_legend_geometry(ax, row, -25, -20 - 3.5*i, 2.5)\n    ax.annotate(row.INCOME_GRP[3:], (-22, -20 - 3.5*i), fontsize=28, fontweight=\"bold\", va=\"center\")\n\nfontstyles = {\"fontweight\": \"bold\", \"ha\": \"left\"}\nplt.annotate(\"Data source:\", xy=(0.05, 0.32), fontsize=24, xycoords=\"axes fraction\", **fontstyles)\nplt.annotate(\"The World Bank\", xy=(0.133, 0.32), fontsize=24, xycoords=\"axes fraction\", color=\"#1B998B\", **fontstyles)\nplt.title(\"Income Groups in Africa\", x=0.05, y=0.29, fontsize=42, **fontstyles)\n\nplt.axis(\"off\")\nplt.show()\n```"]