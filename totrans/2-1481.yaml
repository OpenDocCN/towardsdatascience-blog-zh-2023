- en: Mastering Configuration Management in Machine Learning with Hydra
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Hydra 精通机器学习中的配置管理
- en: 原文：[https://towardsdatascience.com/mastering-configuration-ml-with-hydra-ef138f1c1852](https://towardsdatascience.com/mastering-configuration-ml-with-hydra-ef138f1c1852)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/mastering-configuration-ml-with-hydra-ef138f1c1852](https://towardsdatascience.com/mastering-configuration-ml-with-hydra-ef138f1c1852)
- en: Mastering Machine Learning
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 精通机器学习
- en: '**Delve into real-world examples to transform configuration management in your
    ML applications**'
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**深入实际案例以改进你的 ML 应用中的配置管理**'
- en: '[](https://jvision.medium.com/?source=post_page-----ef138f1c1852--------------------------------)[![Joseph
    Robinson, Ph.D.](../Images/3117b65a4e10752724585d3457343695.png)](https://jvision.medium.com/?source=post_page-----ef138f1c1852--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ef138f1c1852--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ef138f1c1852--------------------------------)
    [Joseph Robinson, Ph.D.](https://jvision.medium.com/?source=post_page-----ef138f1c1852--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://jvision.medium.com/?source=post_page-----ef138f1c1852--------------------------------)[![Joseph
    Robinson, Ph.D.](../Images/3117b65a4e10752724585d3457343695.png)](https://jvision.medium.com/?source=post_page-----ef138f1c1852--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ef138f1c1852--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ef138f1c1852--------------------------------)
    [Joseph Robinson, Ph.D.](https://jvision.medium.com/?source=post_page-----ef138f1c1852--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ef138f1c1852--------------------------------)
    ·18 min read·Jun 15, 2023
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ef138f1c1852--------------------------------)
    ·18分钟阅读·2023年6月15日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: Overview
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: Welcome to “Mastering Configuration Management in Machine Learning with Hydra”!
    This comprehensive tutorial is designed to take you from the basics of Hydra to
    advanced techniques for managing configurations in your ML projects. We will also
    explore the integration of Hydra with high-performance computing environments
    and popular machine-learning frameworks. Whether a machine learning novice or
    a seasoned practitioner, this tutorial will equip you with the knowledge and skills
    to supercharge your machine learning workflow.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到“使用 Hydra 精通机器学习中的配置管理”！ 本教程旨在从 Hydra 的基础知识带你深入了解如何在 ML 项目中管理配置的高级技术。我们还将探讨
    Hydra 与高性能计算环境和流行机器学习框架的集成。无论你是机器学习新手还是经验丰富的从业者，本教程将为你提供超充机器学习工作流所需的知识和技能。
- en: '![](../Images/0b40f058fc68be31777fd5f49573a055.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0b40f058fc68be31777fd5f49573a055.png)'
- en: Figure created by the author.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 由作者创建的图。
- en: Table of Contents
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 目录
- en: · [I. Introduction](#3e40)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: · [I. 介绍](#3e40)
- en: · [II. Hydra Basics](#c530)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: · [II. Hydra 基础](#c530)
- en: ∘ [Installation of Hydra](#0161)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [Hydra 的安装](#0161)
- en: ∘ [Anatomy of a Hydra Application](#ed02)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [Hydra 应用程序的结构](#ed02)
- en: ∘ [Understanding Hydra’s Main Components](#6984)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [理解 Hydra 的主要组件](#6984)
- en: · [III. Hierarchical Configurations](#4655)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: · [III. 层次配置](#4655)
- en: ∘ [Defining and Understanding Hierarchical Configuration Files](#caf2)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [定义和理解层次配置文件](#caf2)
- en: · [IV. Configuration Groups](#d9b5)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: · [IV. 配置组](#d9b5)
- en: ∘ [Understanding the Concept of Configuration Groups](#ed56)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [理解配置组的概念](#ed56)
- en: '∘ [Defining Different Setups: Development, Staging, Production](#320a)'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [定义不同的设置：开发、预发布、生产](#320a)
- en: ∘ [Showcasing the Impact on Reproducibility and Debugging](#a5d8)
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [展示对可重复性和调试的影响](#a5d8)
- en: · [V. Dynamic Configurations](#fefe)
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: · [V. 动态配置](#fefe)
- en: ∘ [Explanation of Dynamic Configurations](#9d6c)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [动态配置的解释](#9d6c)
- en: ∘ [Creating Rules for Dynamic Adjustment of Hyperparameters](#20b7)
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [为超参数动态调整创建规则](#20b7)
- en: ∘ [Implementing Dynamic Configurations in a Machine Learning Context](#100b)
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [在机器学习环境中实现动态配置](#100b)
- en: · [VI. Environment Variables](#4559)
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: · [VI. 环境变量](#4559)
- en: ∘ [The Need for Environment Variables in Hydra](#c8ca)
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [Hydra 中环境变量的必要性](#c8ca)
- en: ∘ [Handling Sensitive or Frequently Changing Data](#eddd)
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [处理敏感或频繁变化的数据](#eddd)
- en: '∘ [Using Environment Variables in Hydra: A Step-by-Step Guide](#03cd)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [在 Hydra 中使用环境变量：逐步指南](#03cd)
- en: · [VII. Configuring Logging](#05f4)
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: · [VII. 配置日志](#05f4)
- en: ∘ [The Importance of Logging in Machine Learning Experiments](#d6fb)
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [机器学习实验中日志记录的重要性](#d6fb)
- en: ∘ [Using Hydra to Configure Python’s Logging Framework](#9f2e)
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [使用 Hydra 配置 Python 的日志框架](#9f2e)
- en: ∘ [How to Create Log Files for Different Modules with Varying Levels of Verbosity](#21b5)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [如何为不同模块创建具有不同详细级别的日志文件](#21b5)
- en: · [VIII. Multirun and Sweeps](#fb4a)
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: · [VIII. 多次运行和搜索](#fb4a)
- en: ∘ [Introduction to Hydra’s Multirun Feature](#d030)
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [Hydra 的多次运行功能介绍](#d030)
- en: ∘ [Designing and Configuring Hyperparameter Sweeps](#ee4a)
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [设计和配置超参数搜索](#ee4a)
- en: ∘ [Applying Multirun and Sweeps to Machine Learning Projects](#c1d9)
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [将多次运行和搜索应用于机器学习项目](#c1d9)
- en: · [IX. Error Handling](#7b11)
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: · [IX. 错误处理](#7b11)
- en: ∘ [Importance of Error Handling in Configuration Management](#31e2)
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [配置管理中错误处理的重要性](#31e2)
- en: ∘ [Using Hydra for Advanced Error Handling](#d3fa)
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [使用 Hydra 进行高级错误处理](#d3fa)
- en: ∘ [Customizing Behavior for Missing or Incorrect Configurations](#841a)
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [为缺失或不正确的配置自定义行为](#841a)
- en: · [X. Command Line Overrides](#fc64)
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: · [X. 命令行覆盖](#fc64)
- en: ∘ [Understanding Command Line Overrides in Hydra](#b65d)
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [理解 Hydra 中的命令行覆盖](#b65d)
- en: ∘ [Modifying Configurations at Runtime Using Command Line Arguments](#d57b)
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [使用命令行参数在运行时修改配置](#d57b)
- en: ∘ [Practical Examples of Using Command Line Overrides in Machine Learning Experiments](#97bc)
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [在机器学习实验中使用命令行覆盖的实用示例](#97bc)
- en: · [XI. Using Hydra on a Slurm-Based HPC Cluster](#64fc)
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: · [XI. 在基于 Slurm 的 HPC 集群上使用 Hydra](#64fc)
- en: '∘ [Hydra and SLURM: A Brief Overview](#36f4)'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [Hydra 与 SLURM：简要概述](#36f4)
- en: ∘ [Installation](#8060)
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [安装](#8060)
- en: ∘ [Configuration](#38eb)
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [配置](#38eb)
- en: ∘ [Running Your Application](#db4b)
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [运行你的应用程序](#db4b)
- en: '∘ [Advanced Topics: Parallel Runs with Slurm](#ef30)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [高级主题：使用 Slurm 进行并行运行](#ef30)
- en: · [XII. Hydra with Containerization (Docker/Kubernetes)](#1417)
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: · [XII. Hydra 与容器化（Docker/Kubernetes）](#1417)
- en: ∘ [Hydra with Docker](#9829)
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [Hydra 与 Docker](#9829)
- en: ∘ [Hydra with Kubernetes](#22af)
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [Hydra 与 Kubernetes](#22af)
- en: · [XIII. Integration with ML Frameworks](#a9d4)
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: · [XIII. 与 ML 框架的集成](#a9d4)
- en: ∘ [Hydra with PyTorch](#72ad)
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [Hydra 与 PyTorch](#72ad)
- en: · [XIV. Conclusion](#5bd8)
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: · [XIV. 结论](#5bd8)
- en: '· [XV. Appendix: Useful Hydra Commands and Tips](#1649)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: · [XV. 附录：有用的 Hydra 命令和技巧](#1649)
- en: ∘ [Commonly Used Hydra Commands](#0a66)
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [常用的 Hydra 命令](#0a66)
- en: ∘ [Tips and Tricks](#d21e)
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [提示和技巧](#d21e)
- en: I. Introduction
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: I. 介绍
- en: Managing configurations can be complex, from model hyperparameters to experiment
    settings. Keeping track of all these details can quickly become overwhelming.
    That’s where Facebook’s Hydra configuration library comes into play. Hydra is
    an open-source Python framework that simplifies the management of configurations
    in your applications, ensuring better reproducibility and modularity.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 配置管理可能很复杂，从模型超参数到实验设置。跟踪所有这些细节可能很快变得令人不知所措。这就是 Facebook 的 Hydra 配置库派上用场的地方。Hydra
    是一个开源的 Python 框架，简化了应用程序中的配置管理，确保更好的可重复性和模块化。
- en: Hydra provides a powerful and flexible mechanism for managing configurations
    for complex applications. This makes it easier for developers and researchers
    to maintain and optimize machine learning projects.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Hydra 提供了一种强大而灵活的机制来管理复杂应用程序的配置。这使得开发人员和研究人员更容易维护和优化机器学习项目。
- en: In this tutorial, we introduce the basics of Hydra and guide you through its
    advanced features. By the end of this tutorial, you will be empowered to manage
    your project configurations effectively and efficiently.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们介绍 Hydra 的基础知识，并引导你深入了解其高级功能。在本教程结束时，你将能够有效且高效地管理你的项目配置。
- en: II. Hydra Basics
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: II. Hydra 基础
- en: Installation of Hydra
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Hydra 的安装
- en: 'Hydra is a Python library and can be installed easily with pip:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: Hydra 是一个 Python 库，可以通过 pip 轻松安装：
- en: '[PRE0]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Anatomy of a Hydra Application
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Hydra 应用程序的结构
- en: A Hydra application has a script and one or more configuration files. Configuration
    files are written in YAML and stored in a directory structure. This creates a
    hierarchical configuration.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 一个 Hydra 应用程序有一个脚本和一个或多个配置文件。配置文件使用 YAML 编写，并存储在目录结构中。这创建了一个层次结构的配置。
- en: '[PRE1]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The accompanying YAML file might look like this:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 附带的 YAML 文件可能如下所示：
- en: '[PRE2]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The Python script `my_app.py` uses the `@hydra.main()` decorator to indicate
    it’s a Hydra application. The `config_name` parameter specifies the configuration
    file to use. Note that it assumes the file type is YAML, so there is no need to
    select the extension.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Python 脚本 `my_app.py` 使用 `@hydra.main()` 装饰器来表示它是一个 Hydra 应用程序。`config_name`
    参数指定要使用的配置文件。请注意，它假定文件类型是 YAML，因此无需选择扩展名。
- en: Understanding Hydra’s Main Components
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解 Hydra 的主要组件
- en: Hydra comprises **configurations**, **interpolations**, and **overrides**.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: Hydra 包含 **配置**、**插值** 和 **覆盖**。
- en: '**Configurations** are the settings of your application specified in one or
    more YAML files.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '**配置**是您应用程序的设置，这些设置在一个或多个 YAML 文件中指定。'
- en: '**Interpolations** are references to other parts of your configuration. For
    example, in the YAML file below, the value of `full` interpolates `name` and `surname`.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**插值**是对配置其他部分的引用。例如，在下面的 YAML 文件中，`full` 的值插值了 `name` 和 `surname`。'
- en: '[PRE3]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**Overrides** allow you to modify your configuration at runtime without changing
    your YAML files. You can specify overrides on the command line when running your
    application, as the following demonstrates:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**覆盖** 允许您在运行时修改配置，而无需更改 YAML 文件。您可以在运行应用程序时在命令行中指定覆盖，如下所示：'
- en: '[PRE4]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In the command above, we’re overriding the `user` value under `db` in the configuration.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述命令中，我们正在覆盖配置中 `db` 下的 `user` 值。
- en: '![](../Images/2a5c7aa3326013af884afa25c7bad5d9.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2a5c7aa3326013af884afa25c7bad5d9.png)'
- en: '*Comparison of managing configurations with and without Hydra. Table created
    by the author.*'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '*比较使用 Hydra 管理配置与不使用 Hydra 管理配置的情况。表格由作者创建。*'
- en: In the following sections, we’ll look at advanced features and how to use them
    in your ML projects.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分中，我们将探讨高级功能以及如何在您的 ML 项目中使用它们。
- en: III. Hierarchical Configurations
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: III. 层次结构配置
- en: Hydra offers an intuitive way to structure your configuration files hierarchically,
    mirroring your project’s directory structure. Hierarchical configurations are
    instrumental when managing complex projects, making, maintaining, extending, and
    reusing your configurations easier.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: Hydra 提供了一种直观的方式来分层组织配置文件，反映您项目的目录结构。层次结构配置在管理复杂项目时非常重要，使得创建、维护、扩展和重用您的配置变得更加容易。
- en: Defining and Understanding Hierarchical Configuration Files
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义和理解层次结构配置文件
- en: The hierarchy of configurations is defined by the directory structure of your
    configuration files.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 配置的层级结构由配置文件的目录结构定义。
- en: 'For instance, a project’s layout could be structured as follows:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，一个项目的布局可以如下结构：
- en: '[PRE5]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Hence, the `standard.yaml` and `minmax.yaml` files could contain different settings
    for data preprocessing; the `linear.yaml` and `svm.yaml` files could have configurations
    for various model types.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，`standard.yaml` 和 `minmax.yaml` 文件可能包含不同的数据预处理设置；`linear.yaml` 和 `svm.yaml`
    文件可能包含各种模型类型的配置。
- en: 'In `config.yaml`, you can specify which preprocessing and model configurations
    to use by default:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `config.yaml` 中，您可以指定默认使用哪些预处理和模型配置：
- en: '[PRE6]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Hydra automatically merges the specified configurations, so you can still override
    the default choice when launching the application, as shown in the following code
    snippet:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Hydra 自动合并指定的配置，因此在启动应用程序时，您仍然可以覆盖默认选择，如以下代码片段所示：
- en: '[PRE7]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The command above runs the application with the `minmax` preprocessing and `svm`
    model configurations.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令以 `minmax` 预处理和 `svm` 模型配置运行应用程序。
- en: IV. Configuration Groups
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: IV. 配置组
- en: Configuration groups in Hydra provide a way to manage sets of configurations
    that can be swapped easily. This feature is handy for maintaining various settings,
    environments, and setups, such as development, testing, staging, and production.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: Hydra 中的配置组提供了一种管理可轻松交换的配置集的方式。此功能对于维护各种设置、环境和配置（如开发、测试、预发布和生产）非常有用。
- en: Understanding the Concept of Configuration Groups
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解配置组的概念
- en: A configuration group is a directory containing alternative configurations.
    When defining a configuration group, specify a default configuration in your main
    configuration file (`config.yaml`), but you can easily override it when running
    your application.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 配置组是一个包含备选配置的目录。在定义配置组时，在您的主要配置文件 (`config.yaml`) 中指定默认配置，但在运行应用程序时，您可以轻松覆盖它。
- en: 'Defining Different Setups: Development, Staging, Production'
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义不同的设置：开发、测试、生产
- en: 'Consider a machine learning project where you have distinct settings for development,
    staging, and production environments. You can create a configuration group for
    each environment:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑一个机器学习项目，其中您有不同的开发、测试和生产环境设置。您可以为每个环境创建一个配置组：
- en: '[PRE8]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Each YAML file in the `env` directory would contain the settings specific to
    that environment. For example, the `development.yaml` file might define verbose
    logging and debugging settings while the `production.yaml` file might contain
    optimized performance and error logging settings.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '`env` 目录中的每个 YAML 文件都包含特定环境的设置。例如，`development.yaml` 文件可能定义了详细的日志记录和调试设置，而
    `production.yaml` 文件可能包含优化的性能和错误日志记录设置。'
- en: 'In `config.yaml`, you specify the default environment:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `config.yaml` 中，你可以指定默认环境：
- en: '[PRE9]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: With this configuration, Hydra will automatically apply the settings from `development.yaml`
    when running your application.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此配置，Hydra 在运行应用程序时将自动应用 `development.yaml` 中的设置。
- en: Showcasing the Impact on Reproducibility and Debugging
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 展示对可重复性和调试的影响
- en: Configuration groups are a powerful tool for enhancing reproducibility in your
    projects. You can ensure your application behaves consistently across different
    environments by defining specific development, staging, and production setups.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 配置组是增强项目可重复性的强大工具。通过定义特定的开发、预发布和生产设置，你可以确保应用程序在不同环境中的行为一致。
- en: Additionally, configuration groups can significantly simplify debugging. You
    can quickly reproduce and isolate issues by using different configuration groups
    for various stages of your project. For instance, if an issue arises in the staging
    environment, you can switch to the `staging` configuration to reproduce the problem
    without affecting your development or production settings.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，配置组可以显著简化调试。你可以通过为项目的不同阶段使用不同的配置组来快速重现和隔离问题。例如，如果在预发布环境中出现问题，你可以切换到 `staging`
    配置以重现问题，而不会影响开发或生产设置。
- en: 'Switching between environments is as easy as specifying a different configuration
    group when launching your application:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动应用程序时，切换环境就像指定不同的配置组一样简单：
- en: '[PRE10]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This command runs the application with the settings defined in `production.yaml`.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令使用`production.yaml`中定义的设置运行应用程序。
- en: '![](../Images/0bda8fe2fc342e97a69f2c53e7177dee.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0bda8fe2fc342e97a69f2c53e7177dee.png)'
- en: '*Benefits of Using Configuration Groups. Table created by the author.*'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '*使用配置组的好处。表格由作者创建。*'
- en: V. Dynamic Configurations
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: V. 动态配置
- en: In addition to static configuration management, Hydra allows for dynamic configurations.
    Dynamic configurations are incredibly valuable in scenarios where some parameters
    depend on others or must be computed at runtime.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 除了静态配置管理外，Hydra 还允许动态配置。动态配置在一些参数依赖于其他参数或必须在运行时计算的场景中非常有价值。
- en: Explanation of Dynamic Configurations
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 动态配置的解释
- en: 'Dynamic configurations in Hydra are enabled through two main features: **interpolations**
    and the **OmegaConf** library.'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: Hydra 中的动态配置通过两个主要特性实现：**插值** 和 **OmegaConf** 库。
- en: 'Interpolations are references to other parts of your configuration, allowing
    a dynamic set of values. They are denoted by `${}` in your configuration files.
    For instance:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 插值是对配置中其他部分的引用，允许动态设置值。在配置文件中用 `${}` 表示。例如：
- en: '[PRE11]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: In this example, the `greeting` value will dynamically include the `name` value.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，`greeting` 的值将动态包含 `name` 的值。
- en: 'OmegaConf is a flexible configuration library that Hydra uses. It supports
    not only interpolations but also variable substitutions and even complex expressions:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: OmegaConf 是一个灵活的配置库，Hydra 使用它。它不仅支持插值，还支持变量替换甚至复杂表达式：
- en: '[PRE12]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: In the above example, the `area` is computed dynamically based on the `width`
    and `height` under `dimensions`.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述示例中，`area` 是基于 `dimensions` 下的 `width` 和 `height` 动态计算的。
- en: Creating Rules for Dynamic Adjustment of Hyperparameters
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为超参数的动态调整创建规则
- en: 'In machine learning, dynamic configurations can be beneficial for adjusting
    hyperparameters. For instance, we want the learning rate to depend on the batch
    size. We could define a rule for this in our configuration file:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在机器学习中，动态配置对调整超参数非常有用。例如，我们希望学习率依赖于批量大小。我们可以在配置文件中为此定义一个规则：
- en: '[PRE13]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Where `learning_rate` is dynamically adjusted based on `batch_size`, the learning
    rate will automatically increase proportionally if you improve the batch size.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 `learning_rate` 根据 `batch_size` 动态调整，如果你提高了批量大小，学习率将自动按比例增加。
- en: Implementing Dynamic Configurations in a Machine Learning Context
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在机器学习环境中实现动态配置
- en: Let’s consider a more complex machine learning scenario where the size of the
    first layer in our neural network depends on the input size of our data.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一个更复杂的机器学习场景，其中神经网络的第一层的大小取决于数据的输入大小。
- en: '[PRE14]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Here, the size of the first layer (`layer1`) is dynamically set to be twice
    the `input_size`. If we change the `input_size`, `layer1` will automatically adjust.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，第一层（`layer1`）的大小被动态设置为 `input_size` 的两倍。如果我们更改 `input_size`，`layer1` 将自动调整。
- en: Dynamic configurations enable higher flexibility and adaptability for applications.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 动态配置为应用程序提供了更高的灵活性和适应性。
- en: '![](../Images/665e9adc36b2312803a31e70733f32f3.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/665e9adc36b2312803a31e70733f32f3.png)'
- en: '*Advantages of Using Dynamic Configurations. Table created by the author.*'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '*动态配置的优势。表格由作者创建。*'
- en: VI. Environment Variables
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VI. 环境变量
- en: Hydra supports the use of environment variables within configuration files,
    providing additional flexibility and security. This functionality can be beneficial
    for handling sensitive or frequently changing data.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: Hydra 支持在配置文件中使用环境变量，提供额外的灵活性和安全性。这一功能对于处理敏感数据或经常变化的数据尤为有用。
- en: The Need for Environment Variables in Hydra
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Hydra 中对环境变量的需求
- en: 'Environment variables are a common way to pass configuration information to
    your application. They are handy in the following situations:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 环境变量是将配置信息传递给应用程序的常用方式。在以下情况下它们非常有用：
- en: '**Sensitive Data**: Passwords, secret keys, and access tokens should not be
    hard-coded into your application or configuration files. Instead, these can be
    stored securely as environment variables.'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**敏感数据**：密码、密钥和访问令牌不应硬编码到应用程序或配置文件中。这些可以安全地作为环境变量进行存储。'
- en: '**Frequently Changing Data**: If specific parameters change frequently or depend
    on the system environment (e.g., file paths that differ between development and
    production environments), managing them as environment variables is more convenient.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**经常变化的数据**：如果特定参数经常变化或依赖于系统环境（例如，开发和生产环境之间不同的文件路径），将其管理为环境变量更为方便。'
- en: '**Portability and Scalability**: Environment variables can make your applications
    easier to move between different environments (e.g., from a local development
    environment to a cloud-based production environment).'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可移植性和可扩展性**：环境变量可以使你的应用程序更容易在不同环境之间移动（例如，从本地开发环境到基于云的生产环境）。'
- en: Handling Sensitive or Frequently Changing Data
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理敏感或经常变化的数据
- en: Sensitive information like database credentials should never be stored directly
    in your configuration files. Instead, you can keep these as environment variables
    and reference them in your Hydra configurations using interpolations. This practice
    enhances security by preventing sensitive data from being exposed in your code
    or version control system.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 诸如数据库凭据之类的敏感信息不应直接存储在配置文件中。相反，你可以将这些信息保存在环境变量中，并通过插值在 Hydra 配置中引用它们。这种做法通过防止敏感数据在代码或版本控制系统中暴露来增强安全性。
- en: Similarly, frequently changing data, such as file or directory paths that vary
    between environments, can be managed as environment variables. This approach reduces
    the need for manual modifications when moving between environments.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，经常变化的数据，例如在不同环境之间变化的文件或目录路径，也可以作为环境变量进行管理。这种方法减少了在不同环境之间移动时的手动修改需求。
- en: 'Using Environment Variables: A Step-by-Step Guide'
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用环境变量：逐步指南
- en: 'To use an environment variable in Hydra, follow these steps:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Hydra 中使用环境变量，请按照以下步骤操作：
- en: 'Define an environment variable in your shell. For example, in a Unix-based
    system, you could use the `export` command:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的 shell 中定义一个环境变量。例如，在基于 Unix 的系统中，你可以使用 `export` 命令：
- en: '[PRE15]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '2\. Reference the environment variable in your Hydra configuration file using
    the `${env:VARIABLE}` syntax:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 使用 `${env:VARIABLE}` 语法在你的 Hydra 配置文件中引用环境变量：
- en: '[PRE16]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: In this example, the `url` field in the `database` configuration will be set
    to the value of the `DATABASE_URL` environment variable.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，`database` 配置中的 `url` 字段将设置为 `DATABASE_URL` 环境变量的值。
- en: Remember, never store sensitive information directly in your configuration files
    or code. Always use environment variables or another secure method for handling
    sensitive data.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，切勿将敏感信息直接存储在配置文件或代码中。始终使用环境变量或其他安全方法来处理敏感数据。
- en: '![](../Images/3fe6935342cd54f73f49f31dfaac50c8.png)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3fe6935342cd54f73f49f31dfaac50c8.png)'
- en: '*Benefits of Using Environment Variables in Hydra. Table created by the author.*'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '*使用环境变量的好处。表格由作者创建。*'
- en: VII. Configuring Logging
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VII. 配置日志记录
- en: Logging is an essential part of machine learning experiments. It provides visibility
    into your models’ and algorithms’ performance and behavior over time. Configuring
    proper logging mechanisms can help with model debugging, optimization, and understanding
    the learning process.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 日志记录是机器学习实验的重要组成部分。它提供了对模型和算法性能及行为随时间变化的可视化。配置适当的日志记录机制有助于模型调试、优化和理解学习过程。
- en: Hydra has ‌built-in support for configuring Python’s logging module, making
    it easy to control the verbosity of logs, set up different handlers, and format
    your log messages.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: Hydra内置了对Python日志模块的支持，使得控制日志的详细程度、设置不同的处理程序以及格式化日志消息变得容易。
- en: The Importance of Logging in Machine Learning Experiments
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 机器学习实验中日志记录的重要性
- en: 'Logging for machine learning can serve various purposes:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习的日志记录可以服务于多种目的：
- en: '**Model Debugging**: Logs can contain valuable information about model behavior,
    which can help diagnose and fix issues.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型调试**：日志可以包含有关模型行为的宝贵信息，这有助于诊断和修复问题。'
- en: '**Performance Tracking**: Logging the metrics over time helps to observe the
    model’s learning process, detect overfitting or underfitting, and adjust the hyperparameters
    accordingly.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**性能跟踪**：记录随时间变化的指标有助于观察模型的学习过程，检测过拟合或欠拟合，并相应调整超参数。'
- en: '**Auditing and Reproducibility**: Logs document the details of the training
    process, making it easier to reproduce results and understand what has been done
    in the past.'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**审计和可重现性**：日志记录了训练过程的详细信息，使得重现结果和了解过去的工作变得更容易。'
- en: Using Hydra to Configure Python’s Logging Framework
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Hydra配置Python的日志框架
- en: Python’s built-in logging module is robust and highly configurable, and Hydra
    can help manage this complexity.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: Python的内置日志模块功能强大且高度可配置，Hydra可以帮助管理这一复杂性。
- en: 'To configure logging with Hydra, create a `hydra.yaml` file in your configuration
    directory and define your logging settings under the `hydra.job_logging` key:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Hydra配置日志记录，请在配置目录中创建一个`hydra.yaml`文件，并在`hydra.job_logging`键下定义你的日志设置：
- en: '[PRE17]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'In this configuration:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在此配置中：
- en: The root logger is set to the `INFO` level, capturing `INFO`, `WARNING`, `ERROR`,
    and `CRITICAL` messages.
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根日志记录器设置为`INFO`级别，捕获`INFO`、`WARNING`、`ERROR`和`CRITICAL`消息
- en: 'There are two handlers: one for console output and one for writing to a file.
    The console handler only logs `INFO` and higher-level messages, while the file
    handler logs `DEBUG` and higher-level messages.'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有两个处理程序：一个用于控制台输出，一个用于写入文件。控制台处理程序仅记录`INFO`及更高级别的消息，而文件处理程序记录`DEBUG`及更高级别的消息。
- en: The `filename` of the file handler uses interpolation to dynamically create
    a log file for each job based on the job’s name.
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件处理程序的`filename`使用插值动态创建每个作业的日志文件，基于作业的名称。
- en: How to Create Log Files for Different Modules with Varying Levels of Verbosity
  id: totrans-175
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何为不同模块创建具有不同详细程度的日志文件
- en: 'You can set different log levels for different modules in your application.
    Suppose you have `moduleA` and `moduleB` modules, and you want `moduleA` to log
    `DEBUG` and higher-level messages but `moduleB` to log only `ERROR` and higher-level
    messages. Here’s how to configure it:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以为应用程序中的不同模块设置不同的日志级别。假设你有`moduleA`和`moduleB`模块，并且希望`moduleA`记录`DEBUG`及更高级别的消息，而`moduleB`只记录`ERROR`及更高级别的消息。以下是配置方法：
- en: '[PRE18]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: This way, you can control the amount of log output from different application
    parts.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，你可以控制来自不同应用程序部分的日志输出量。
- en: '![](../Images/f2d71956a36821269a5c3c8ebafa1f6b.png)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f2d71956a36821269a5c3c8ebafa1f6b.png)'
- en: '*Key Benefits of Configuring Logging with Hydra. The author created the table.*'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '*使用Hydra配置日志记录的关键好处。表格由作者创建。*'
- en: VIII. Multirun and Sweeps
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VIII. 多次运行和扫描
- en: Machine learning often involves running experiments with different sets of hyperparameters
    to find the optimal solution. Welcome Hydra’s `multirun` feature. It allows you
    to run your application multiple times with different configurations, which is
    beneficial for hyper-parameter tuning.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习通常涉及使用不同的超参数集合运行实验以找到最佳解决方案。欢迎使用Hydra的`multirun`功能。它允许你使用不同的配置多次运行应用程序，这对超参数调整非常有帮助。
- en: Introduction to Hydra’s Multirun Feature
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Hydra的多次运行功能简介
- en: 'To use `multirun`, pass the `-m` or `--multirun` flag when running your application.
    Then, specify the parameters you want to vary across runs using the `key=value`
    syntax:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 `multirun`，在运行应用程序时传递 `-m` 或 `--multirun` 标志。然后，使用 `key=value` 语法指定你想在运行中变化的参数：
- en: '[PRE19]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'This will run your application three times: one `training.batch_size=32`, one
    `training.batch_size=64`, and one `training.batch_size=128`.'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 这将运行你的应用程序三次：一次 `training.batch_size=32`，一次 `training.batch_size=64`，以及一次 `training.batch_size=128`。
- en: Designing and Configuring Hyper-parameter Sweeps
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计和配置超参数测试
- en: A hyperparameter sweep is a series of runs with different hyperparameters.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 超参数测试是一系列不同超参数的运行。
- en: 'Hydra supports different types of sweeps:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: Hydra 支持不同类型的测试：
- en: '**Range Sweeps**: Specifies a range of values for a parameter. For example,
    `learning_rate=0.01,0.001,0.0001`'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**范围测试**：指定参数的值范围。例如，`learning_rate=0.01,0.001,0.0001`'
- en: '**Interval Sweeps**: Define an interval and a step size. For example, `epoch=1:10:1`
    (`start:end:step`)'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**区间测试**：定义一个区间和步长。例如，`epoch=1:10:1`（`start:end:step`）'
- en: '**Choice Sweeps**: Define a list of values to choose from. For example, `optimizer=adam,sgd,rmsprop`'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**选择测试**：定义一个值列表供选择。例如，`optimizer=adam,sgd,rmsprop`'
- en: '**Grid Sweeps**: Define multiple parameters to sweep over. This will run your
    application for all combinations of the parameters.'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网格测试**：定义多个参数进行测试。这将对所有参数组合运行你的应用程序。'
- en: These sweep types can be combined and used in complex ways to explore your model's
    hyperparameter space thoroughly.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 这些测试类型可以组合使用，以复杂的方式全面探索你模型的超参数空间。
- en: Applying Multirun and Sweeps to Machine Learning Projects
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将 Multirun 和测试应用于机器学习项目
- en: 'Let’s consider a simple machine-learning project where you want to tune the
    learning rate and batch size. You can use the `multirun` feature to configure
    and run this hyper-parameter sweep easily:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一个简单的机器学习项目，你想调整学习率和批量大小。你可以使用`multirun`功能轻松配置和运行这些超参数的测试：
- en: '[PRE20]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: This command will run your application for each batch size and learning rate
    combination, totaling nine runs (3 batch sizes * 3 learning rates).
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令将为每个批量大小和学习率组合运行你的应用程序，总共九次运行（3个批量大小 * 3个学习率）。
- en: Hydra’s `multirun` feature can significantly simplify the process of running
    hyperparameter sweeps, helping you to find the best configuration for your machine
    learning models.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: Hydra 的 `multirun` 功能可以显著简化运行超参数测试的过程，帮助你找到最佳的机器学习模型配置。
- en: '![](../Images/2a656c635cc0a5ecf881c862da62b767.png)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2a656c635cc0a5ecf881c862da62b767.png)'
- en: '*Benefits of Using Hydra’s Multirun Feature. The author created the table.*'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '*使用 Hydra 的 Multirun 功能的好处。作者创建了表格。*'
- en: IX. Error Handling
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: IX. 错误处理
- en: Proper error handling is a crucial aspect of configuration management. It provides
    valuable information when things go wrong, helping to prevent or quickly diagnose
    issues that could affect the success of your machine learning projects. Hydra
    can be used to facilitate advanced error handling.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 适当的错误处理是配置管理中的一个关键方面。它在出现问题时提供宝贵的信息，帮助防止或迅速诊断可能影响你机器学习项目成功的问题。Hydra 可以用于促进高级错误处理。
- en: Importance of Error Handling in Configuration Management
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 错误处理在配置管理中的重要性
- en: 'Error handling in configuration management serves various purposes:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 配置管理中的错误处理有多种用途：
- en: '**Error Prevention**: By validating configurations before they’re used, you
    can catch and correct errors early, preventing them from causing more prominent
    issues.'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**错误预防**：通过在使用之前验证配置，你可以早期捕捉和纠正错误，防止它们引发更大的问题。'
- en: '**Fast Debugging**: When errors do occur, detailed error messages can help
    you quickly identify the cause and fix the issue.'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**快速调试**：当错误发生时，详细的错误信息可以帮助你快速识别原因并解决问题。'
- en: '**Robustness**: Comprehensive error handling makes your code more robust and
    reliable, improving its ability to handle unexpected situations.'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**健壮性**：全面的错误处理使你的代码更加健壮和可靠，提高其处理意外情况的能力。'
- en: Using Hydra for Advanced Error Handling
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Hydra 进行高级错误处理
- en: 'Hydra provides several features for advanced error handling:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: Hydra 提供了多种高级错误处理功能：
- en: '**Strict Validation**: Hydra performs strict validation of your configurations
    by default. If you try to access a field not defined in your configuration, Hydra
    will raise an error. This can help catch typos or missing fields early.'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**严格验证**：Hydra 默认会对你的配置进行严格验证。如果你尝试访问一个在配置中未定义的字段，Hydra 会抛出错误。这有助于及早发现拼写错误或遗漏字段。'
- en: '[PRE21]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '**Error Messages**: detailed error messages when an error occurs. These messages
    often include the exact location of the error in your configuration, making diagnosing
    and fixing the issue easier.'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**错误信息**：详细的错误信息，当错误发生时。这些信息通常包括配置中错误的确切位置，使得诊断和修复问题更加容易。'
- en: Customizing Behavior for Missing or Incorrect Configurations
  id: totrans-214
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自定义缺失或不正确配置的行为
- en: 'While Hydra’s default behavior is to raise an error for missing or incorrect
    configurations, you can customize this behavior based on your needs. For example:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然Hydra的默认行为是对于缺失或不正确的配置抛出错误，你可以根据需要自定义此行为。例如：
- en: '**Optional Fields**: You can use the `OmegaConf.select` method to access a
    field in a way that won’t raise an error if the field is missing:'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可选字段**：你可以使用`OmegaConf.select`方法以一种不会在字段缺失时抛出错误的方式访问字段：'
- en: '[PRE22]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '**Ignore Invalid Types**: If you’re loading configurations from a file and
    you want Hydra to ignore fields with invalid types, you can set the `ignore_invalid_types`
    flag when calling `OmegaConf.load`:'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**忽略无效类型**：如果你从文件中加载配置，并且希望Hydra忽略无效类型的字段，可以在调用`OmegaConf.load`时设置`ignore_invalid_types`标志：'
- en: '[PRE23]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: By utilizing Hydra’s error-handling capabilities, you can make your configuration
    management process more robust and easier to debug.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 通过利用Hydra的错误处理能力，你可以使配置管理过程更加稳健和易于调试。
- en: X. Command Line Overrides
  id: totrans-221
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: X. 命令行覆盖
- en: Command line overrides are a powerful feature that allows you to modify runtime
    configurations. This can be particularly useful in machine learning experiments,
    where you often need to adjust hyperparameters, switch between different models,
    or change the dataset.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行覆盖是一个强大的功能，允许你修改运行时配置。这在机器学习实验中尤其有用，你通常需要调整超参数、在不同模型之间切换或更改数据集。
- en: Understanding Command Line Overrides
  id: totrans-223
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解命令行覆盖
- en: 'You can override any part of your configuration from the command line. To do
    this, pass a `key=value` pair when running your application:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从命令行覆盖配置的任何部分。为此，在运行应用程序时传递一个`key=value`对：
- en: '[PRE24]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: By this, your application runs with`db.driver` set to `postgresq` and `db.user`
    set to `my_user`, overriding any values defined in the configuration files or
    defaults.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种方式，你的应用程序将`db.driver`设置为`postgresq`，并将`db.user`设置为`my_user`，覆盖配置文件或默认值中定义的任何值。
- en: Modifying Configurations at Runtime Using Command Line Arguments
  id: totrans-227
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用命令行参数在运行时修改配置
- en: 'Command line overrides can be used to modify configurations in various ways:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行覆盖可以以各种方式修改配置：
- en: '**Changing Single Values**: As shown in the previous example, you can change
    the value of a single field in your configuration.'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**更改单一值**：如前面的示例所示，你可以更改配置中单一字段的值。'
- en: '**Changing Nested Values**: You can also change the value of a nested field
    using dot notation: `python my_app.py training.optimizer.lr=0.01`'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**更改嵌套值**：你也可以使用点表示法更改嵌套字段的值：`python my_app.py training.optimizer.lr=0.01`'
- en: '**Adding New Fields**: If you specify a field that doesn’t exist in your configuration,
    Hydra will add it: `python my_app.py new_field=new_value`'
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**添加新字段**：如果你指定一个在配置中不存在的字段，Hydra将添加它：`python my_app.py new_field=new_value`'
- en: '**Removing Fields**: You can remove a field from your configuration by setting
    it to `null`: `python my_app.py field_to_remove=null`'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**移除字段**：你可以通过将字段设置为`null`来从配置中移除该字段：`python my_app.py field_to_remove=null`'
- en: '**Changing Lists**: You can change the value of a list field: `python my_app.py
    data.transforms=[transform1,transform2]`'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**更改列表**：你可以更改列表字段的值：`python my_app.py data.transforms=[transform1,transform2]`'
- en: Practical Examples of Using Command Line Overrides in Machine Learning Experiments
  id: totrans-234
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 机器学习实验中使用命令行覆盖的实际示例
- en: 'Command line overrides are especially useful in machine learning, where you
    often need to adjust configurations for different experiments:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行覆盖在机器学习中尤其有用，因为你通常需要为不同的实验调整配置：
- en: '**Hyperparameter Tuning**: Easily adjust hyperparameters for different runs:
    `python train.py model.lr=0.01 model.batch_size=64`'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**超参数调整**：轻松调整不同运行的超参数：`python train.py model.lr=0.01 model.batch_size=64`'
- en: '**Model Selection**: Switch between different models: `python train.py model.type=resnet50`'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型选择**：在不同模型之间切换：`python train.py model.type=resnet50`'
- en: '**Data Selection**: Change the dataset or split used for training: `python
    train.py data.dataset=cifar10 data.split=train`'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据选择**：更改用于训练的数据集或拆分：`python train.py data.dataset=cifar10 data.split=train`'
- en: Using command line overrides can greatly increase the flexibility and ease of
    your machine-learning experiments.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 使用命令行覆盖可以大大提高你的机器学习实验的灵活性和便利性。
- en: XI. Using Hydra on a Slurm-Based HPC Cluster
  id: totrans-240
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: XI. 在基于 Slurm 的 HPC 集群上使用 Hydra
- en: High-Performance Computing (HPC) clusters are commonly used to handle large-scale
    machine-learning tasks. These clusters often use the Simple Linux Utility for
    Resource Management (Slurm) to manage job scheduling. Let’s see how we can use
    Hydra on a Slurm-based HPC cluster.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 高性能计算（HPC）集群通常用于处理大规模的机器学习任务。这些集群通常使用简单的 Linux 资源管理工具（Slurm）来管理作业调度。让我们看看如何在基于
    Slurm 的 HPC 集群上使用 Hydra。
- en: 'Hydra and SLURM: A Brief Overview'
  id: totrans-242
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Hydra 与 SLURM：简要概述
- en: Hydra includes a plugin called `hydra-submitit-launcher`, which enables seamless
    integration with Slurm job scheduling. With this plugin, you can submit your Hydra
    applications as Slurm jobs, allowing you to leverage the power of HPC clusters
    for your machine-learning experiments.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: Hydra 包含一个名为 `hydra-submitit-launcher` 的插件，这使得与 Slurm 作业调度的无缝集成成为可能。通过这个插件，你可以将
    Hydra 应用程序作为 Slurm 作业提交，从而利用 HPC 集群的强大计算能力进行机器学习实验。
- en: Installation
  id: totrans-244
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装
- en: 'To use the Submitit launcher with Hydra, you’ll first need to install it:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 要将 Submitit 启动器与 Hydra 一起使用，你首先需要安装它：
- en: '[PRE25]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Configuration
  id: totrans-247
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置
- en: 'Once you’ve installed the launcher, you can configure it in your Hydra configuration
    files. Here’s an example configuration:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦安装了启动器，你可以在 Hydra 配置文件中进行配置。这里是一个示例配置：
- en: '[PRE26]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Above, we set the time limit for our jobs to 60 minutes, using one node with
    2 GPUs, and dedicating 10GB of memory and 10 CPUs per task. Adjust these settings
    based on the resources available in your cluster.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 上述中，我们将作业的时间限制设置为 60 分钟，使用一个节点，配备 2 个 GPU，每个任务分配 10GB 的内存和 10 个 CPU。根据集群中可用的资源调整这些设置。
- en: Running Your Application
  id: totrans-252
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行你的应用程序
- en: 'You can now run your Hydra application as usual:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以像往常一样运行你的 Hydra 应用程序：
- en: '[PRE28]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: With the Submitit launcher configured, Hydra can submit Slurm jobs.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 配置了 Submitit 启动器后，Hydra 可以提交 Slurm 作业。
- en: 'Advanced Topics: Parallel Runs with Slurm'
  id: totrans-256
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 高级主题：与 Slurm 的并行运行
- en: 'Hydra’s multirun feature and the Submitit launcher allow you to run multiple
    jobs in parallel. For instance, you can perform a hyper-parameter sweep across
    several Slurm nodes:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: Hydra 的多运行特性和 Submitit 启动器允许你并行运行多个作业。例如，你可以在多个 Slurm 节点上执行超参数搜索：
- en: '[PRE29]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: This would submit three Slurm jobs, each with a different learning rate.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 这将提交三个 Slurm 作业，每个作业具有不同的学习率。
- en: '**Further Reading:**'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '**进一步阅读：**'
- en: '[## Submitit Launcher plugin | Hydra'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '[## Submitit 启动器插件 | Hydra'
- en: PyPI
  id: totrans-262
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PyPI
- en: hydra.cc](https://hydra.cc/docs/plugins/submitit_launcher?source=post_page-----ef138f1c1852--------------------------------)
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: hydra.cc](https://hydra.cc/docs/plugins/submitit_launcher?source=post_page-----ef138f1c1852--------------------------------)
- en: 'For general information on using Slurm:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 关于使用 Slurm 的一般信息：
- en: '[## Slurm Workload Manager'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '[## Slurm 作业管理器'
- en: 'NOTE: This documentation is for Slurm version 23.02\. Documentation for older
    versions of Slurm are distributed with the…'
  id: totrans-266
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意：本文档适用于 Slurm 版本 23.02。旧版本的 Slurm 文档会随…
- en: slurm.schedmd.com](https://slurm.schedmd.com/documentation.html?source=post_page-----ef138f1c1852--------------------------------)
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: slurm.schedmd.com](https://slurm.schedmd.com/documentation.html?source=post_page-----ef138f1c1852--------------------------------)
- en: XII. Hydra with Containerization (Docker/Kubernetes)
  id: totrans-268
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: XII. 使用容器化的 Hydra（Docker/Kubernetes）
- en: Containerization using tools like Docker and Kubernetes is widely used in machine
    learning due to its consistency, reproducibility, and scalability benefits. This
    section will guide you on using Hydra in conjunction with Docker or Kubernetes,
    showing how to generate Dockerfiles dynamically or Kubernetes manifests based
    on the configuration.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Docker 和 Kubernetes 等工具进行容器化在机器学习中广泛使用，因为它具有一致性、可重复性和可扩展性。这一部分将指导你如何将 Hydra
    与 Docker 或 Kubernetes 配合使用，展示如何根据配置动态生成 Dockerfile 或 Kubernetes 清单。
- en: Hydra with Docker
  id: totrans-270
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Hydra 与 Docker
- en: 'When using Docker, you often need to create Dockerfiles with different configurations.
    Hydra can simplify this process:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Docker 时，你通常需要创建具有不同配置的 Dockerfile。Hydra 可以简化这个过程：
- en: 1\. **Dockerfile**
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. **Dockerfile**
- en: 'Create a Dockerfile with placeholders for configuration options. Here’s a simplified
    example:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个带有配置选项占位符的 Dockerfile。这里是一个简化的示例：
- en: '[PRE30]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: In this Dockerfile, `${CMD_ARGS}` is a placeholder for command-line arguments
    that Hydra will provide.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个 Dockerfile 中，`${CMD_ARGS}` 是一个占位符，Hydra 将提供命令行参数。
- en: 2\. **Hydra Configuration**
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. **Hydra 配置**
- en: 'In your Hydra config file, define the configuration options to pass to Docker.
    For example:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的 Hydra 配置文件中，定义要传递给 Docker 的配置选项。例如：
- en: '[PRE32]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 3\. **Docker Run Script**
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. **Docker 运行脚本**
- en: 'Finally, create a script that uses Hydra to generate the Docker run command:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，创建一个使用 Hydra 生成 Docker 运行命令的脚本：
- en: '[PRE33]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[PRE34]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Run this script, and Hydra will launch a Docker container with the configuration
    options you specified.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 运行此脚本，Hydra 将启动一个具有你指定配置选项的 Docker 容器。
- en: Hydra with Kubernetes
  id: totrans-285
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Hydra 与 Kubernetes
- en: Using Hydra with Kubernetes is a bit more complex, but the basic idea is similar.
    First, you would create a Kubernetes manifest with placeholders for configuration
    options, then use Hydra to generate the Kubernetes apply command.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Hydra 与 Kubernetes 集成要复杂一些，但基本思想类似。首先，你需要创建一个包含配置选项占位符的 Kubernetes 清单，然后使用
    Hydra 生成 Kubernetes 应用命令。
- en: Consider using the [Hydra-KubeExecutor](https://github.com/pykong/Hydra-KubeExecutor)
    plugin to integrate Hydra and Kubernetes directly.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑使用 [Hydra-KubeExecutor](https://github.com/pykong/Hydra-KubeExecutor) 插件将
    Hydra 和 Kubernetes 直接集成。
- en: '**Further Reading:**'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '**进一步阅读：**'
- en: '[](https://docs.docker.com/?source=post_page-----ef138f1c1852--------------------------------)
    [## Docker Docs: How to build, share, and run applications'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://docs.docker.com/?source=post_page-----ef138f1c1852--------------------------------)
    [## Docker 文档：如何构建、共享和运行应用程序'
- en: Docker Documentation is the official Docker library of resources, tutorials,
    and guides to help you build, share, and…
  id: totrans-290
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Docker 文档是官方 Docker 资源、教程和指南的库，帮助你构建、共享和…
- en: docs.docker.com](https://docs.docker.com/?source=post_page-----ef138f1c1852--------------------------------)
    [](https://kubernetes.io/docs/home/?source=post_page-----ef138f1c1852--------------------------------)
    [## Kubernetes Documentation
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: docs.docker.com](https://docs.docker.com/?source=post_page-----ef138f1c1852--------------------------------)
    [](https://kubernetes.io/docs/home/?source=post_page-----ef138f1c1852--------------------------------)
    [## Kubernetes 文档
- en: Kubernetes is an open source container orchestration engine for automating deployment,
    scaling, and management of…
  id: totrans-292
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Kubernetes 是一个开源的容器编排引擎，用于自动化部署、扩展和管理…
- en: kubernetes.io](https://kubernetes.io/docs/home/?source=post_page-----ef138f1c1852--------------------------------)
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: kubernetes.io](https://kubernetes.io/docs/home/?source=post_page-----ef138f1c1852--------------------------------)
- en: XIII. Integration with ML Frameworks
  id: totrans-294
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: XIII. 与 ML 框架的集成
- en: Hydra can significantly simplify the process of managing configurations in machine
    learning projects. This section will show integrate Hydra with popular machine
    learning frameworks like PyTorch, TensorFlow, or scikit-learn. You’ll learn how
    to use configuration files to manage the different stages of a machine-learning
    pipeline, from data preprocessing to model training and evaluation.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: Hydra 可以显著简化机器学习项目中配置管理的过程。本节将展示如何将 Hydra 与流行的机器学习框架（如 PyTorch、TensorFlow 或
    scikit-learn）集成。你将学习如何使用配置文件来管理机器学习管道的不同阶段，从数据预处理到模型训练和评估。
- en: Hydra with PyTorch
  id: totrans-296
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Hydra 与 PyTorch
- en: 'When using PyTorch (or any other ML framework), you can use Hydra to manage
    configurations for your model, dataset, optimizer, and other components. Here’s
    a simplified example:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 PyTorch（或任何其他 ML 框架）时，你可以使用 Hydra 来管理模型、数据集、优化器和其他组件的配置。这里是一个简化的示例：
- en: '[PRE35]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: In this example, `config.yaml` would contain separate sections for `data`, `model`,
    `optim`, `train`, and `eval`. This structure keeps your configurations organized
    and modular, allowing you to easily adjust the configurations for different components
    of your machine-learning pipeline.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，`config.yaml` 将包含 `data`、`model`、`optim`、`train` 和 `eval` 的单独部分。这种结构保持了配置的有序性和模块化，使你能够轻松调整机器学习管道中不同组件的配置。
- en: For example, you could define different model architectures, datasets, or training
    regimes in separate configuration files, then select the ones you want to use
    with command line overrides.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你可以在不同的配置文件中定义不同的模型架构、数据集或训练方案，然后通过命令行覆盖来选择你要使用的选项。
- en: 'Here are example configuration groups for PyTorch:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 PyTorch 的示例配置组：
- en: '[PRE37]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: With these configurations, you could easily switch between a ResNet-50 and AlexNet,
    or between ImageNet and CIFAR-10 simply by changing the command line arguments
    when you run your application.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这些配置，你可以轻松地在 ResNet-50 和 AlexNet 之间切换，或者在 ImageNet 和 CIFAR-10 之间切换，只需在运行应用程序时更改命令行参数。
- en: '**Further reading:**'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '**进一步阅读：**'
- en: '[## PyTorch documentation - PyTorch 2.0 documentation'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: '[## PyTorch 文档 - PyTorch 2.0 文档'
- en: 'Stable: These features will be maintained long-term and there should generally
    be no major performance limitations or…'
  id: totrans-308
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 稳定：这些功能将长期维护，通常不会有重大性能限制或…
- en: pytorch.org](https://pytorch.org/docs/stable/index.html?source=post_page-----ef138f1c1852--------------------------------)
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: pytorch.org](https://pytorch.org/docs/stable/index.html?source=post_page-----ef138f1c1852--------------------------------)
- en: XIV. Conclusion
  id: totrans-310
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: XIV. 结论
- en: In this tutorial, we dove deep into Hydra, a powerful tool for configuration
    management in Python applications, including ML projects. We covered the basics,
    hierarchical configurations, configuration groups, and dynamic configurations.
    Also, we learned how to handle environment variables and use Hydra for logging,
    error handling, and command line overrides.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们深入探讨了 Hydra，这是一个用于 Python 应用程序（包括机器学习项目）的配置管理强大工具。我们涵盖了基础知识、层次配置、配置组和动态配置。此外，我们学习了如何处理环境变量，使用
    Hydra 进行日志记录、错误处理和命令行覆盖。
- en: We also explored some of the more advanced features of Hydra, such as multirun
    and sweeps, which are particularly useful for managing machine learning experiments.
    Finally, we saw how Hydra could be used on an HPC, with Docker and Kubernetes,
    and integrated with another open-source package from Facebook to do deep learning
    (i.e., PyTorch). Throughout this tutorial, we’ve seen that Hydra can greatly simplify
    managing configurations, making your code more flexible, robust, and maintainable.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还探讨了 Hydra 的一些高级功能，例如多重运行（multirun）和遍历（sweeps），这些功能对于管理机器学习实验特别有用。最后，我们看到
    Hydra 如何在 HPC 上使用，与 Docker 和 Kubernetes 结合使用，并与 Facebook 的另一个开源包（即 PyTorch）集成进行深度学习。在本教程中，我们看到
    Hydra 可以极大简化配置管理，使你的代码更具灵活性、鲁棒性和可维护性。
- en: Mastering a tool like Hydra takes practice. So keep experimenting, trying new
    things, and pushing the boundaries of what you can do with your configurations.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 掌握像 Hydra 这样的工具需要实践。因此，继续进行实验，尝试新事物，并推动你在配置管理方面的边界。
- en: 'XV. Appendix: Useful Hydra Commands and Tips'
  id: totrans-314
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: XV. 附录：有用的 Hydra 命令和技巧
- en: Here are some commonly used Hydra commands, tips, and tricks for working with
    Hydra effectively in machine-learning projects.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些常用的 Hydra 命令、提示和技巧，用于有效地在机器学习项目中使用 Hydra。
- en: Commonly Used Hydra Commands
  id: totrans-316
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常用的 Hydra 命令
- en: '**Running an application with Hydra**: `python my_app.py`'
  id: totrans-317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用 Hydra 运行应用程序**：`python my_app.py`'
- en: '**Using command line overrides**: `python my_app.py db.driver=postgresql`'
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用命令行覆盖**：`python my_app.py db.driver=postgresql`'
- en: '**Running an application with multirun**: `python my_app.py — multirun training.batch_size=32,64,128`'
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用多重运行运行应用程序**：`python my_app.py — multirun training.batch_size=32,64,128`'
- en: Tips and Tricks
  id: totrans-320
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提示和技巧
- en: '1\. **Leverage Hierarchical Configurations**: Hierarchical configurations can
    help you manage complex configurations and avoid duplication. Use them to define
    standard settings that can be shared across different parts of your application.'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. **利用层次配置**：层次配置可以帮助你管理复杂的配置并避免重复。使用它们来定义可以在应用程序的不同部分之间共享的标准设置。
- en: '2\. **Use Command Line Overrides**: Command line overrides are a powerful tool
    for adjusting configurations at runtime. Use them to change hyperparameters, switch
    models, or change datasets for different experiments.'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. **使用命令行覆盖**：命令行覆盖是调整运行时配置的强大工具。使用它们来更改超参数、切换模型或更改数据集以进行不同的实验。
- en: '3\. **Implement Error Handling**: Hydra provides advanced error handling capabilities.
    Use them to make your code more robust and easier to debug.'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. **实现错误处理**：Hydra 提供了高级错误处理功能。利用这些功能使你的代码更加健壮，易于调试。
- en: '4\. **Use Multirun for Hyperparameter Sweeps**: Hydra’s multirun feature can
    significantly simplify the process of running hyperparameter sweeps. Use it to
    explore the hyperparameter space of your model.'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. **使用多重运行进行超参数遍历**：Hydra 的多重运行（multirun）功能可以显著简化超参数遍历的过程。使用它来探索模型的超参数空间。
- en: '5\. **Keep Exploring**: Hydra has many more features to discover. Check out
    the Hydra documentation and GitHub for more ideas and examples.'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 5\. **继续探索**：Hydra 还有许多功能等待发现。查看 Hydra 文档和 GitHub 以获取更多想法和示例。
- en: '[## Getting started | Hydra'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 入门 | Hydra](https://hydra.cc/docs/intro/?source=post_page-----ef138f1c1852--------------------------------)'
- en: Introduction
  id: totrans-327
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 介绍
- en: 'hydra.cc](https://hydra.cc/docs/intro/?source=post_page-----ef138f1c1852--------------------------------)
    [](https://github.com/facebookresearch/hydra?source=post_page-----ef138f1c1852--------------------------------)
    [## GitHub - facebookresearch/hydra: Hydra is a framework for elegantly configuring
    complex…'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 'hydra.cc](https://hydra.cc/docs/intro/?source=post_page-----ef138f1c1852--------------------------------)
    [](https://github.com/facebookresearch/hydra?source=post_page-----ef138f1c1852--------------------------------)
    [## GitHub - facebookresearch/hydra: Hydra 是一个优雅配置复杂...'
- en: 'Hydra is a framework for elegantly configuring complex applications - GitHub
    - facebookresearch/hydra: Hydra is a…'
  id: totrans-329
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 'Hydra是一个优雅配置复杂应用程序的框架 - GitHub - facebookresearch/hydra: Hydra是一个…'
- en: github.com](https://github.com/facebookresearch/hydra?source=post_page-----ef138f1c1852--------------------------------)
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: github.com](https://github.com/facebookresearch/hydra?source=post_page-----ef138f1c1852--------------------------------)
- en: '**Share your thoughts, use-cases, and questions via the comment section below.**'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '**请通过下面的评论区分享您的想法、用例和问题。**'
- en: Contact
  id: totrans-332
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系方式
- en: Want to Connect? Follow Dr. Robinson on [LinkedIn](https://www.linkedin.com/in/jrobby/),
    [Twitter](https://twitter.com/jrobvision), [Facebook](https://www.facebook.com/joe.robinson.39750),
    and [Instagram](https://www.instagram.com/doctor__jjj/). Visit my homepage for
    papers, blogs, email signups, and more!
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 想要联系？请关注Dr. Robinson在[LinkedIn](https://www.linkedin.com/in/jrobby/)、[Twitter](https://twitter.com/jrobvision)、[Facebook](https://www.facebook.com/joe.robinson.39750)和[Instagram](https://www.instagram.com/doctor__jjj/)。访问我的主页获取论文、博客、邮件注册等更多信息！
- en: '[](https://www.jrobs-vision.com/?source=post_page-----ef138f1c1852--------------------------------)
    [## AI Research Engineer and Entrepreneur | Joseph P. Robinson'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://www.jrobs-vision.com/?source=post_page-----ef138f1c1852--------------------------------)
    [## AI研究工程师与企业家 | Joseph P. Robinson'
- en: Researcher & Entrepreneur Greetings! As a researcher, Dr. Robinson proposed
    and employed advanced AI to understand…
  id: totrans-335
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 研究员与企业家问候！作为研究员，Dr. Robinson提出并应用了先进的AI来理解…
- en: www.jrobs-vision.com.](https://www.jrobs-vision.com/?source=post_page-----ef138f1c1852--------------------------------)
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: www.jrobs-vision.com.](https://www.jrobs-vision.com/?source=post_page-----ef138f1c1852--------------------------------)
