- en: Data Storytelling with Animated Word Clouds
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/data-storytelling-with-animated-word-clouds-1889fdeb97b8](https://towardsdatascience.com/data-storytelling-with-animated-word-clouds-1889fdeb97b8)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Animated word clouds turn classic word clouds into a dynamic visualization.
    Learn more about telling data stories in Python.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://petrkorab.medium.com/?source=post_page-----1889fdeb97b8--------------------------------)[![Petr
    Korab](../Images/9f3afb4b8985584981220e30f18e3b69.png)](https://petrkorab.medium.com/?source=post_page-----1889fdeb97b8--------------------------------)[](https://towardsdatascience.com/?source=post_page-----1889fdeb97b8--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----1889fdeb97b8--------------------------------)
    [Petr Korab](https://petrkorab.medium.com/?source=post_page-----1889fdeb97b8--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----1889fdeb97b8--------------------------------)
    ·5 min read·Nov 22, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: 'Source: [AnimatedWordCloud](https://pypi.org/project/AnimatedWordCloud) library.
    Image by Author.'
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: An animated word cloud displays absolute frequencies of n-grams (contiguous
    sequences of text sample items) **over time as a sequence of images in a video
    file.** Itgives greater importance to words that appear more frequently in a source
    text. The bigger and bolder the n-gram displays, the more frequently it appears
    in the text. It builds on the intuitive logic of classic word clouds and adds
    a time perspective to the visualization.
  prefs: []
  type: TYPE_NORMAL
- en: As many text datasets are collected these days as text observations over multiple
    periods, there is a particular challenge to visualize the changes in the data
    over time. Instead of making summary tables or graphs for many different periods,
    let’s prepare an MP4 video that tells the story, attracts the audience, and gives
    a “wow” effect to the presentation.
  prefs: []
  type: TYPE_NORMAL
- en: 'This article will describe the generation of animated word clouds from text
    data in Python. Here are some unique features of the [AnimatedWordCloud library](https://pypi.org/project/AnimatedWordCloud/):'
  prefs: []
  type: TYPE_NORMAL
- en: '*Provides n-gram frequency visualization of all Latin-alphabet languages*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Cleans text dataset from punctuation, numbers, and stopwords included in the*
    [*NLTK lists of stopwords*](https://pythonspot.com/nltk-stop-words/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Generates yearly or monthly n-gram frequencies.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Image 1\. [Animated word cloud of research trends in economics](https://www.youtube.com/watch?v=-2gH7Xfn0AI)
  prefs: []
  type: TYPE_NORMAL
- en: How to use it
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To use the library, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Installation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Create a new Python 3.8 virtual environment for the project to avoid any dependence
    conflicts. *AnimatedWordCloud* relies on Python 3.8 because of its visualization
    [requirements](https://github.com/PetrKorab/Animated-Word-Cloud/blob/main/requirements.txt).
    To install using pip, use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: It was tested with Pycharm community ed. It’s recommended to use this IDE and
    run the code in a .py file instead of a jupyter notebook.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 2\. Generate frames
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We will focus on the European Central Bank (ECB) communication and figure out
    the concepts the Bank Board members discussed over 1997–2023\. The dataset is
    from the [ECB website](https://www.ecb.europa.eu/press/key/html/downloads.en.html),
    released with a flexible [license](https://www.ecb.europa.eu/services/using-our-site/disclaimer/html/index.en.html#c).
  prefs: []
  type: TYPE_NORMAL
- en: 'The data contains 2846 rows and has NaN values that *AnimatedWordCloud* can
    effectively process. It looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/968f896747f01a99067b792d2baae2d1.png)'
  prefs: []
  type: TYPE_IMG
- en: Image 2\. ECB speeches dataset
  prefs: []
  type: TYPE_NORMAL
- en: Let’s import the data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: And then import the *animated_word_cloud* method.
  prefs: []
  type: TYPE_NORMAL
- en: '**EDIT Dec 2023**: AnimatedWordCloud has been constantly updated with new parameters.
    Check [PiPy](https://pypi.org/project/AnimatedWordCloud/) for the current release.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: It offers reading data in US (*MM/DD/YYYY)* or European-style (*DD/MM/YYYY)*
    date and datetime formats. It automatically cleans data from punctuation and numbers
    on input. It can also remove the standard list(s) of stopwords for languages in
    the [NLTK](https://www.nltk.org/) corpus of stopwords.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The code generates 90 PNG frames per period and creates a *.postprocessing/frames*
    folder in the working directory to store the images.
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Create a video from images
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The last step is to make a video file from individual frames. This step will
    be automated in future releases, but for now:'
  prefs: []
  type: TYPE_NORMAL
- en: Download the *ffmpeg* folder and the *frames2video.bat* file from [here](https://github.com/thisIsMikeKane/WordSwarm/tree/master/3-Postprocessing)
    and place them into the *postprocessing* folder. Next, run *frames2video.bat*,
    which will generate a *wordSwarmOut.mp4* file, which is the desired output.
  prefs: []
  type: TYPE_NORMAL
- en: Image 3\. [Animated Word Cloud of European Central Bankers’ speeches](https://www.youtube.com/watch?v=oOgEpGtsJaI)
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s tell a story of the Eurozone through the lenses of central bankers:'
  prefs: []
  type: TYPE_NORMAL
- en: in **1999 — 2002**, the key topic was the EURO introduction *(“accession”, “euro”*)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the bankers in **2003 — 2006** discussed mainly standard monetary policy implementation
    issues (*“monetary”, “financial”, “market”, “policy”)*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: with the upcoming financial crisis, the key topics in **2008 — 2012** were *“liquidity”,
    “crisis” , and “banks”*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: important periods came in **2021** with the COVID-19 economic impacts (*“pandemic”*)
    and the war in Ukraine when inflation was the major topic.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These developments are obvious to anyone interested in the history of the Euro.
    But to present them is a challenging task. We can use, for example, (1) n-gram
    frequency analysis of keywords and produce many frequency tables of keywords,
    or (2) display a heatmap (or a [matrix graph](https://www.betterevaluation.org/methods-approaches/methods/matrix-chart#:~:text=A%20matrix%20chart%20shows%20relationships%20between%20two%20or,a%20crosstabulation%20that%20divides%20data%20between%20the%20variables.))
    with a period on the *x-axis*, word on the *y-axis*, and the word frequency the
    item in the matrix. Another option (3) is to produce many word clouds for each
    period. None of these is perfect for larger datasets, and the animated word cloud
    gives you another option for delivering the message.
  prefs: []
  type: TYPE_NORMAL
- en: Practical applications
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The library has a primary use in **presentations** and **teaching**. Text mining
    is now blending other disciplines like Economics, Politology, or Business, and
    teachers, analysts, and students can now use a different, more appealing way to
    present the facts.
  prefs: []
  type: TYPE_NORMAL
- en: Are you a historian interested in the history of science? Then, try downloading
    text datasets such as article headlines or journal abstracts from platforms like
    [Constellate](https://www.constellate.org), prepare a video file, and tell your
    students about the history of AI in the published research since its very beginnings.
    Some inspiration might be a research trends analysis project with economics data
    spanning 1900–2018, which we have described in [this article](https://python.plainenglish.io/animated-word-cloud-a-novel-way-for-the-visualization-of-word-frequencies-6505418acbb3).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Do you want to show your marketing team what the customers think about your
    product? Then, use the product reviews from external platforms (e.g., Amazon)
    and explain which words customers mention. Is it *“fast”* and *“delivery”*, with
    *“good”*, and *“great”* ? Or the frequent words are *“poor”*, *“bad”*, and *“quality”*
    ? Tell a story to deliver the message and see how it changes through time.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Our [earlier TDS article](/guide-to-using-word-clouds-for-applied-research-design-2e07a6a1a513)
    with Jarko Fidrmuc and David Štrba outlined how word clouds are useful for **summarization**
    and **exploratory** text **data analysis.** In a dynamic form, it is possible
    to present the structure of text datasets collected as time series in a better,
    easily understandable way.
  prefs: []
  type: TYPE_NORMAL
- en: Other interesting use cases, like modeling **COVID-19-related discussions**
    or **US presidential debate** analysis with X-tweets, might also be interesting
    to check in a bachelor or seminar thesis.
  prefs: []
  type: TYPE_NORMAL
- en: On a technical note
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the [**WordsSwarm**](https://github.com/thisIsMikeKane/WordSwarm) project,
    [Michael Kane](https://github.com/thisIsMikeKane) developed the core framework
    for the animation of word frequencies for the library. *AnimatedWordCloud,* which
    I have created with an [Apache-2.0 license](https://github.com/PetrKorab/Animated-Word-Cloud),
    makes the codes efficiently work on various text datasets of the Latin alphabet
    languages.
  prefs: []
  type: TYPE_NORMAL
- en: It uses one of my earlier projects, the [𝐀𝐫𝐚𝐛𝐢𝐜𝐚](https://pypi.org/project/arabica/)
    library, to make the processing (text cleaning and word frequency aggregation.
    It relies on rather archaic visualization requirements that suit this project
    very well. [**PyBox2D**](https://pypi.org/project/Box2D/) is used for physics
    and clash detection of words in the swarm. [**Pyglet**](https://pypi.org/project/pyglet/),
    cross-platform windowing and multimedia library, and [**PyGame**](https://pypi.org/project/pygame/)
    are used to create animations.
  prefs: []
  type: TYPE_NORMAL
- en: It shows absolute word frequencies but scales the data to display word clouds
    on datasets of different sizes. In this way, datasets with large frequencies are
    scaled by a constant so that the word clouds can still be displayed in a video.
    It handles missing values and also treats mojibake errors with [***ftfy***](https://pypi.org/project/ftfy)*.*
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, *AnimatedWordCloud* might have difficulties running in a
    Jupyter notebook and other IDEs than Pycharm. I will have a look at these shortcomings
    in the next releases. In future releases, *AnimatedWordCloud* will also provide
    **bigram frequencies** that will give a more detailed look at the narratives and
    topics people discussed in the texts. Also, I will extend the library’s documentation.
  prefs: []
  type: TYPE_NORMAL
- en: '*PS: Let me know how it worked on your projects! :)*'
  prefs: []
  type: TYPE_NORMAL
- en: '*If you enjoy my work, you can invite me* [*for coffee*](https://www.buymeacoffee.com/petrkorab)
    *and support my writing. You can also subscribe to my* [*email list*](https://medium.com/subscribe/@petrkorab)
    *to get notified about my new articles. Thanks!*'
  prefs: []
  type: TYPE_NORMAL
