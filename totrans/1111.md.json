["```py\nWITH\n  input_1 AS (\n  SELECT\n    category\n  FROM (\n    SELECT\n      [\"a\", \"b\", CAST(NULL AS STRING), \"d\"] AS category),\n    UNNEST(category) category ),\n\n  input_2 AS (\n  SELECT\n    category\n  FROM (\n    SELECT\n      [\"a\", \"b\", \"c\", \"d\"] AS category),\n    UNNEST(category) category )\n\nSELECT\n  *\nFROM\n  input_2\nWHERE\n  input_2.category NOT IN (\n  SELECT\n    category\n  FROM\n    input_1)\n```", "```py\nWITH\n  input_1 AS (\n  SELECT\n    category\n  FROM (\n    SELECT\n      [\"a\", \"b\", CAST(NULL AS STRING), \"d\"] AS category),\n    UNNEST(category) category ),\n\n  input_2 AS (\n  SELECT\n    category\n  FROM (\n    SELECT\n      [\"a\", \"b\", \"c\", \"d\"] AS category),\n    UNNEST(category) category )\n\nSELECT\n  *\nFROM\n  input_2\nWHERE\n  input_2.category NOT IN (\n  SELECT\n    category\n  FROM\n    input_1\n  WHERE category IS NOT NULL)\n```", "```py\nWITH \ninput_1 AS (\n  SELECT 1 as id, ['phone', 'car', 'paper'] as data \nUNION ALL\n  SELECT 2 as id, [] as data \n)\n\nSELECT \nid,\nelement\nFROM input_1,\nUNNEST(data) as element\n```", "```py\nWITH \ninput_1 AS (\n  SELECT 1 as id, ['phone', 'car', 'paper'] as data \nUNION ALL\n  SELECT 2 as id, [] as data \n)\n\nSELECT \nid,\nelement\nFROM input_1\nLEFT JOIN UNNEST(data) as element\n```", "```py\nCREATE MODEL your_model \nOPTIONS(\n    MODEL_TYPE='BOOSTED_TREE_REGRESSOR',\n    BOOSTER_TYPE = 'GBTREE',\n    NUM_PARALLEL_TREE = 5,\n    MAX_ITERATIONS = 5,\n    TREE_METHOD = 'HIST',\n    EARLY_STOP = FALSE,\n    SUBSAMPLE = 0.85,\n    INPUT_LABEL_COLS = ['trip_miles']\n) AS\n\nSELECT\n  EXTRACT(hour\n  FROM\n    trip_start_timestamp) hour,\n  EXTRACT(dayofweek\n  FROM\n    trip_start_timestamp) weekday,\n  trip_miles\nFROM\n  `bigquery-public-data.chicago_taxi_trips.taxi_trips`\nWHERE\n  trip_miles IS NOT NULL;\n```", "```py\nCREATE OR REPLACE TABLE\n  your_project.your_dataset.merge_test ( \n    local_date date,\n    value INT64 )\nPARTITION BY\n  local_date;\n```", "```py\nMERGE\n  your_project.your_dataset.merge_test o\nUSING\n  (\n  SELECT\n    date local_date,\n    1 value\n  FROM\n    UNNEST(GENERATE_DATE_ARRAY(\"2022-01-01\", \"2023-12-31\", INTERVAL 1 day)) date \n  ) n\nON\n  n.local_date = o.local_date\n  WHEN MATCHED THEN UPDATE SET value = o.value\n  WHEN NOT MATCHED THEN INSERT VALUES (local_date, value)\n```", "```py\nCREATE TEMP TABLE trips\nPARTITION BY\n  trip_start_date\nCLUSTER BY\n  unique_key AS\nSELECT\n  unique_key,\n  taxi_id,\n  DATE(trip_start_timestamp) trip_start_date,\n  trip_total\nFROM\n  `bigquery-public-data.chicago_taxi_trips.taxi_trips`; \n\nCREATE TEMP TABLE trips_filtered\nPARTITION BY\n  trip_start_date\nCLUSTER BY\n  unique_key AS\nSELECT\n  unique_key,\n  taxi_id,\n  DATE(trip_start_timestamp) trip_start_date,\n  trip_total\nFROM\n  `bigquery-public-data.chicago_taxi_trips.taxi_trips`\nWHERE\n  EXTRACT(year\n  FROM\n    trip_start_timestamp) = 2022\n  AND SUBSTR(taxi_id, -1, 1) = \"b\";\n\nSELECT\n  DISTINCT taxi_id\nFROM\n  trips\nJOIN\n  trips_filtered\nUSING\n  (unique_key,\n    taxi_id,\n    trip_start_date)\n```"]