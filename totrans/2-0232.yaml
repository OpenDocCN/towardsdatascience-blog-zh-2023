- en: A Simple Way to Speed Up Your Python Code — Stay Up to Date
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加速你的 Python 代码的简单方法 — 保持更新
- en: 原文：[https://towardsdatascience.com/a-simple-way-to-speed-up-your-python-code-stay-up-to-date-e633b73619f9](https://towardsdatascience.com/a-simple-way-to-speed-up-your-python-code-stay-up-to-date-e633b73619f9)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/a-simple-way-to-speed-up-your-python-code-stay-up-to-date-e633b73619f9](https://towardsdatascience.com/a-simple-way-to-speed-up-your_python_code-stay-up-to-date-e633b73619f9)
- en: Optimisation
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 优化
- en: Up to 15 times faster just by updating a library
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 仅通过更新库即可提高最多 15 倍的速度
- en: '[](https://medium.com/@maclayton?source=post_page-----e633b73619f9--------------------------------)[![Mike
    Clayton](../Images/2d37746b13b7d2ff1c6515893914da97.png)](https://medium.com/@maclayton?source=post_page-----e633b73619f9--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e633b73619f9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e633b73619f9--------------------------------)
    [Mike Clayton](https://medium.com/@maclayton?source=post_page-----e633b73619f9--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@maclayton?source=post_page-----e633b73619f9--------------------------------)[![Mike
    Clayton](../Images/2d37746b13b7d2ff1c6515893914da97.png)](https://medium.com/@maclayton?source=post_page-----e633b73619f9--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e633b73619f9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e633b73619f9--------------------------------)
    [Mike Clayton](https://medium.com/@maclayton?source=post_page-----e633b73619f9--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e633b73619f9--------------------------------)
    ·13 min read·Jan 10, 2023
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e633b73619f9--------------------------------)
    ·阅读时长 13 分钟·2023年1月10日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/00e95122bcff0ce1559075682885c4cd.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/00e95122bcff0ce1559075682885c4cd.png)'
- en: Image by [Gerd Altmann](https://pixabay.com/users/geralt-9301/?utm_source=link-attribution&amp%3Butm_medium=referral&amp%3Butm_campaign=image&amp%3Butm_content=1672346)
    from [Pixabay](https://pixabay.com//?utm_source=link-attribution&amp%3Butm_medium=referral&amp%3Butm_campaign=image&amp%3Butm_content=1672346)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Gerd Altmann](https://pixabay.com/users/geralt-9301/?utm_source=link-attribution&amp%3Butm_medium=referral&amp%3Butm_campaign=image&amp%3Butm_content=1672346)
    提供，来自 [Pixabay](https://pixabay.com//?utm_source=link-attribution&amp%3Butm_medium=referral&amp%3Butm_campaign=image&amp%3Butm_content=1672346)
- en: '**A lot of time and money is spent trying to optimise code so that it can be
    as fast and efficient as possible, and within the field of data science this is
    becoming even more important due to the vast datasets that are now required to
    be processed.**'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**很多时间和金钱都花在尝试优化代码，以便其尽可能快速和高效，在数据科学领域，这一点变得更加重要，因为现在需要处理的数据集非常庞大。**'
- en: '**A simple, and often overlooked, way of achieving code optimisation is just
    to make sure that your language of choice, and associated libraries, are as up
    to date as they can reasonably be.**'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**一个简单且经常被忽视的代码优化方法是确保你选择的编程语言及相关库尽可能地保持最新。**'
- en: '**You will probably be surprised how relatively little time and effort, can
    result in some significant benefits.**'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**你可能会惊讶于相对较少的时间和精力，可以带来一些显著的好处。**'
- en: Introduction
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: It is a fairly obvious statement to say that staying up to date could help “optimise”
    your code, but blindly updating your software or libraries without understanding
    what is changing is potentially a recipe for disaster.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 说保持更新可以帮助“优化”代码是一种相当显而易见的说法，但盲目更新软件或库而不了解其变化，可能会引发灾难。
- en: By the end of this article you should have a good idea of why you should stay
    up to date. You will have a solid plan of action to ensure you can hit a balance
    between ensuring you are optimised, and not wasting valuable time. In addition,
    you will also be aware of the potential pitfalls that can arise, and how to avoid
    them.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在阅读完本文后，你应该对为什么应该保持更新有一个清晰的了解。你将会有一个切实可行的计划，确保在优化与不浪费宝贵时间之间找到平衡。此外，你还将了解可能出现的陷阱以及如何避免它们。
- en: To round things off, a concrete example using the latest release of NumPy (1.24.0)
    to illustrate the real world benefits of keeping your software and libraries bang
    up to date.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，使用最新版本的 NumPy（1.24.0）来展示保持软件和库最新的实际好处。
- en: Why should I stay up to date?
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么我应该保持更新？
- en: '![](../Images/bd173c0ac5eff15b33b05ecd1ded7806.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bd173c0ac5eff15b33b05ecd1ded7806.png)'
- en: Photo by [Ann H](https://www.pexels.com/photo/why-text-on-a-pink-surface-11141733/)
    from [Pexels](https://www.pexels.com/)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Ann H](https://www.pexels.com/photo/why-text-on-a-pink-surface-11141733/)
    来自 [Pexels](https://www.pexels.com/)
- en: 'The simple answer is that you can benefit from items such as:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 简单的答案是，你可以从以下项目中受益：
- en: brand new features
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 崭新的功能
- en: optimisations
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 优化
- en: bug fixes
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 错误修复
- en: All implemented for you by people who know software well, because remember…
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些都是由了解软件的人员为你实现的，记住……
- en: You are not a software development expert
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你不是软件开发专家
- en: If you are a data science professional (or enthusiast), which I’m going to assume
    you are, then your main concern is processing, manipulating and analysing data
    to gain insights and predictions.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是数据科学专业人士（或爱好者），我假设你是，那么你主要关注的是处理、操控和分析数据，以获得洞察和预测。
- en: Although you may have a certain level of competence with regard to software
    development, and general coding, it would be fair to say that it is not your expertise.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管你在软件开发和一般编码方面可能有一定的能力，但公平地说，这并不是你的专长。
- en: As such, it is perfectly reasonable that you rely on a high level intuitive
    language (Python, R, Matlab etc.), and a mountain of libraries that provide a
    whole host of functionality and optimisation relevant to your field of work. Allowing
    you to concentrate on **your** profession.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，你依赖于高级直观语言（Python、R、Matlab 等）和大量库，这些库提供了与你的工作领域相关的各种功能和优化是完全合理的。让你可以专注于**你的**专业。
- en: Rely on the experts, they know better
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 依赖专家，他们更懂
- en: If you can build optimisation into your code, great! But it should not be the
    thing that is consuming your time.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你能将优化融入你的代码中，那很好！但这不应是占用你时间的事。
- en: As it turns out, there is an army of other professionals, who know software
    development extremely well. They are working hard to ensure the language and libraries
    you use are optimised, and constantly improved. Providing you with the exact tools
    you need to apply to your work.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 事实证明，还有一大批其他专业人士，他们非常了解软件开发。他们努力确保你使用的语言和库得到优化，并不断改进。为你提供所需的准确工具，应用于你的工作中。
- en: However, to take advantage of these optimisations you need to pay attention,
    or you may be missing out.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，为了利用这些优化，你需要留意，否则你可能会错过。
- en: Read the release notes, it’s important
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 阅读发布说明，这很重要
- en: '![](../Images/888baa6b6c8a1a51bc4cf2b2bde723e1.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/888baa6b6c8a1a51bc4cf2b2bde723e1.png)'
- en: Photo by [Pixabay](https://www.pexels.com/photo/background-beverage-blank-brown-459458/)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Pixabay](https://www.pexels.com/photo/background-beverage-blank-brown-459458/)
- en: New versions of both the language, and associated libraries, are released with
    surprising regularity. However, if you don’t pay attention to what is actually
    changing, then you may miss out on the potential benefits, or introduce bugs /
    nonsensical parameters.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 语言及相关库的新版本以惊人的频率发布。然而，如果你不关注实际发生的变化，你可能会错过潜在的好处，或者引入错误/不合理的参数。
- en: A good example of both of these situations is an algorithm update applied to
    the NumPy `np.in1d` function in NumPy 1.24.0, which is also utilised in the widely
    used `np.isin` function.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 一个很好的例子是，NumPy 1.24.0 中对 NumPy `np.in1d` 函数的算法更新，这也被广泛使用的 `np.isin` 函数所利用。
- en: '`np.in1d` (used by `np.isin`) can now switch to a faster algorithm (up to >10x
    faster) when it is passed two integer arrays. This is often automatically used,
    but you can use `kind="sort"` or `kind="table"` to force the old or new method,
    respectively.'
  id: totrans-37
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`np.in1d`（由 `np.isin` 使用）在传递两个整数数组时现在可以切换到更快的算法（速度提高超过10倍）。这通常会自动使用，但你可以使用
    `kind="sort"` 或 `kind="table"` 分别强制使用旧的方法或新方法。'
- en: ''
  id: totrans-38
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: -[numpy.org](https://numpy.org/doc/stable/release/1.24.0-notes.html#faster-version-of-np-isin-and-np-in1d-for-integer-arrays)
  id: totrans-39
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: -[numpy.org](https://numpy.org/doc/stable/release/1.24.0-notes.html#faster-version-of-np-isin-and-np-in1d-for-integer-arrays)
- en: Missing out on gains
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 错过收益
- en: It is important to note in the quote above that `kind="table"` is “often automatically
    used”, which implies **not always**.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 上述引文中需要注意的是，`kind="table"` “通常会自动使用”，这意味着**并非总是如此**。
- en: You could be missing out on a 10x speed gain
  id: totrans-42
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可能会错过10倍的速度提升
- en: 'You could be missing out on a 10x speed gain just because you didn’t meet the
    requirements set by the developers to automatically use the new method:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会因为未满足开发者设定的自动使用新方法的要求，而错过10倍的速度提升：
- en: If None, will automatically choose ‘table’ if the required memory allocation
    is less than or equal to 6 times the sum of the sizes of *ar1* and *ar2*, otherwise
    will use ‘sort’. This is done to not use a large amount of memory by default,
    **even though ‘table’ may be faster in most cases**.
  id: totrans-44
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果为None，将自动选择‘table’，如果所需的内存分配小于或等于*ar1*和*ar2*大小之和的6倍，否则将使用‘sort’。这样做是为了避免默认情况下使用大量内存，**尽管‘table’在大多数情况下可能更快**。
- en: ''
  id: totrans-45
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: -[numpy.org](https://numpy.org/doc/stable/reference/generated/numpy.in1d.html)
  id: totrans-46
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: -[numpy.org](https://numpy.org/doc/stable/reference/generated/numpy.in1d.html)
- en: If you read the release notes, then simply adding `kind=”table”` in the method
    parameters would be the simple change you needed to ensure a significant benefit
    in speed of execution, regardless of memory allocation.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你阅读了发行说明，那么只需在方法参数中添加`kind=”table”`，就是确保执行速度显著提升的简单更改，无论内存分配如何。
- en: '***Note:*** *this automatic selection is likely introduced to ensure the new
    method doesn’t cause bugs in your code. There are cases where it could use more
    memory than the previous method, which may be a problem in memory restricted environments.
    Very sensible edge case coverage by the developers.*'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '***注意：*** *这种自动选择可能是为了确保新方法不会在你的代码中引发错误。在某些情况下，它可能比以前的方法使用更多的内存，这在内存受限的环境中可能是一个问题。开发人员对边界情况的覆盖非常明智。*'
- en: Introducing bugs or confusing code
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引入错误或混乱的代码
- en: If you don’t set the new parameter (because you didn’t read the release notes),
    then very sensibly the developers set a default.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有设置新参数（因为你没有阅读发行说明），那么开发人员非常明智地设置了一个默认值。
- en: If None, will automatically choose ‘table’ if the required memory allocation
    is less than or equal to 6 times the sum of the sizes of *ar1* and *ar2.*
  id: totrans-51
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果为None，将自动选择‘table’，如果所需的内存分配小于或等于*ar1*和*ar2*大小之和的6倍。
- en: ''
  id: totrans-52
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: -[numpy.org](https://numpy.org/doc/stable/reference/generated/numpy.in1d.html)
  id: totrans-53
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: -[numpy.org](https://numpy.org/doc/stable/reference/generated/numpy.in1d.html)
- en: 'Great! So you may automatically get a speed up of 10x. However:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 很好！这样你可能会自动获得10倍的加速。然而：
- en: If ‘table’ is chosen, *assume_unique* will have no effect.
  id: totrans-55
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果选择了‘table’，*assume_unique* 将没有效果。
- en: ''
  id: totrans-56
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[-numpy.org](https://numpy.org/doc/stable/reference/generated/numpy.in1d.html)'
  id: totrans-57
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[-numpy.org](https://numpy.org/doc/stable/reference/generated/numpy.in1d.html)'
- en: In this case “assume_unique” having no effect is a minor problem, as the developers
    look like they have covered edge cases to ensure that if you previously assigned
    “assume_unique” it will just be ignored.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，“assume_unique”没有效果是一个小问题，因为开发人员似乎已经考虑了边界情况，以确保如果你之前分配了“assume_unique”，它将被忽略。
- en: However, it is messy, as your code specifies a parameter that is irrelevant,
    which could cause confusion for other people (or even you) in the future.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这很混乱，因为你的代码指定了一个不相关的参数，这可能会在未来导致其他人（甚至你自己）感到困惑。
- en: It is also worth noting that there may be cases where the developers weren’t
    so thorough, or breaking changes couldn’t be avoided. If that happens, then you
    will suddenly have code that doesn’t run.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 还值得注意的是，可能存在开发人员不够彻底的情况，或无法避免的破坏性更改。如果发生这种情况，你将突然遇到无法运行的代码。
- en: New methods
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 新方法
- en: Apart from potentially missing out on the improvement for the methods you already
    use in your code, you may miss out on completely new methods that would be of
    potential use to your project or workflow.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 除了可能错过你已经在代码中使用的方法的改进之外，你还可能错过对你的项目或工作流程可能有用的全新方法。
- en: 'In a previous article about one hot encoding data I touched on a new method
    implemented in the recently released Pandas 1.5.0 called `[from_dummies()](https://pandas.pydata.org/docs/reference/api/pandas.from_dummies.html)`,
    which is a reversal for `[get_dummies()](https://pandas.pydata.org/docs/reference/api/pandas.get_dummies.html#pandas.get_dummies)`,
    a commonly used one hot encoding method from Pandas:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一篇关于一热编码数据的文章中，我提到了最近发布的Pandas 1.5.0中实现的一种新方法，即`[from_dummies()](https://pandas.pydata.org/docs/reference/api/pandas.from_dummies.html)`，它是Pandas常用的一热编码方法`[get_dummies()](https://pandas.pydata.org/docs/reference/api/pandas.get_dummies.html#pandas.get_dummies)`的反向操作：
- en: '[](/the-best-methods-for-one-hot-encoding-your-data-c29c78a153fd?source=post_page-----e633b73619f9--------------------------------)
    [## The Best Methods for One-Hot Encoding Your Data'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/the-best-methods-for-one-hot-encoding-your-data-c29c78a153fd?source=post_page-----e633b73619f9--------------------------------)
    [## 一热编码数据的最佳方法'
- en: OneHotEncoder vs get_dummies vs to_categorical
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: OneHotEncoder vs get_dummies vs to_categorical
- en: towardsdatascience.com](/the-best-methods-for-one-hot-encoding-your-data-c29c78a153fd?source=post_page-----e633b73619f9--------------------------------)
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/the-best-methods-for-one-hot-encoding-your-data-c29c78a153fd?source=post_page-----e633b73619f9--------------------------------)'
- en: Prior to the release of this method, reversal of the one hot encoding would
    have been a manual procedure.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种方法发布之前，反向一热编码将是一项手动操作。
- en: There are a whole host of new methods created across the libraries that you
    use, but the only way to be aware of when they appear is to review the release
    notes.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在你使用的库中创建了大量的新方法，但了解它们何时出现的唯一方法是查看发布说明。
- en: whatever method the developers have implemented will be optimised and less prone
    to bugs
  id: totrans-69
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 无论开发人员实施了什么方法，都将得到优化，并且减少错误的可能性
- en: …and remember, it is *likely* that whatever method the developers have implemented
    will be optimised and less prone to bugs than something you have coded yourself.
    They are professional software developers after all, and producing bug free well
    tested code is no easy feat.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: …并且记住，*很可能*开发人员实施的任何方法都会比你自己编写的代码经过优化，并且不容易出现错误。他们毕竟是专业的软件开发人员，编写无错误且经过良好测试的代码并非易事。
- en: A strategy to keep up to date
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保持更新的策略
- en: '![](../Images/349d110b2a03b367db34b781eb65d683.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/349d110b2a03b367db34b781eb65d683.png)'
- en: Photo by [Patrick Perkins](https://unsplash.com/@patrickperkins?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/ETRPjvb0KM0?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Patrick Perkins](https://unsplash.com/@patrickperkins?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    拍摄，刊登在 [Unsplash](https://unsplash.com/photos/ETRPjvb0KM0?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
- en: Time is money, as the famous aphorism goes.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 时间就是金钱，正如那句名言所说。
- en: The reality is that a typical project may include a mountain of libraries, so
    it may not be practical to read the release notes for every library, for every
    tiny update, so it may be wise to prioritise.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现实情况是，典型项目可能包含大量的库，因此不切实际逐一阅读每个库每次小更新的发布说明，所以明智的做法是优先排序。
- en: Update on specific release points
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于特定发布点的更新
- en: It is quite common to see numbering conventions that include three numbers separated
    by dots. For example the current release of NumPy is 1.24.0.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 常见的编号惯例包括由点分隔的三个数字。例如，目前的NumPy发布版本是1.24.0。
- en: 'Being aware of what these numbers (generally) signify can help plan when to
    pay attention:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 了解这些数字（一般而言）表示的含义可以帮助规划何时需要关注：
- en: '**Major version number** (**1**.24.0): large and significant changes to the
    software or library. **Can include changes that are not backward compatible.**
    This requires careful review before upgrading.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主版本号** (**1**.24.0)：软件或库的重大和显著变化。**可能包括不向后兼容的更改。** 这需要在升级前仔细审查。'
- en: '**Minor version number** (1.**24**.0): typically a minor feature change / changes,
    or a larger set of bug fixes.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**次版本号** (1.**24**.0)：通常是小功能变化/改动或更大范围的错误修复。'
- en: '**Patch version number** (1.24.**0**): typically a smaller set of bug fixes.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**修补版本号** (1.24.**0**)：通常是较小范围的错误修复。'
- en: If the major version number changes it is **absolutely essential** that you
    review the release notes, as there could be breaking changes (i.e. your code could
    stop working completely in some cases).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如果主版本号发生变化，则**绝对必要**查看发布说明，因为可能会有破坏性更改（即在某些情况下你的代码可能会完全停止工作）。
- en: The minor version number change is something you should be paying attention
    to, as it is optimal in terms potential gains, and new or improved methods.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 次版本号的变化是你应该关注的内容，因为它在潜在收益、新方法或改进方法方面是最优的。
- en: The patch version number can generally be passed over if you don’t have time,
    unless you are waiting for a known bug to be fixed.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有时间，通常可以忽略修补版本号，除非你在等待已知错误的修复。
- en: Pick the most important libraries
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择最重要的库
- en: If time is of the essence, you should pick the libraries that are most utilised,
    or most relevant to the project (i.e. those with the biggest impact), and keep
    up to speed with any relevant changes as updates arrive. As detailed in the previous
    section this should involve mainly paying attention to major and minor version
    number changes.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 如果时间紧迫，你应该选择使用最频繁或对项目最相关的库（即那些影响最大的库），并在更新到来时跟上任何相关变化。正如前一节所述，这主要涉及关注主版本号和次版本号的变化。
- en: It is not essential that you update the library for every patch release, but
    keeping track of the changes that are published will give you the opportunity
    to update when it is beneficial to the project.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 并不是每个补丁版本发布时都必须更新库，但跟踪发布的更改会给你提供在对项目有利时更新的机会。
- en: In reality, the smaller the update you apply, the easier it is to pin down bugs
    when they do occur, reducing time taken for mitigation, and lessening the risk
    involved.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，更新越小，发生错误时确定错误的难度越小，减少缓解所需的时间，并降低风险。
- en: Update strategy - Summary
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更新策略 - 总结
- en: Pay attention to major version number changes for **ALL** libraries.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关注**所有**库的主要版本号更改。
- en: Pay attention to minor version number changes for libraries that are most utilised,
    or most relevant to the project
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关注最常用或对项目最相关的库的次要版本号更改。
- en: Patch version number changes can mostly be passed over without review, unless
    you are actively waiting for a bug to be fixed
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 补丁版本号更改通常可以忽略，除非你在积极等待修复某个错误。
- en: The potential dangers of upgrading
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 升级的潜在危险
- en: '![](../Images/6e5ea85c6eb1dfb87df8a0ce4fedebcd.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6e5ea85c6eb1dfb87df8a0ce4fedebcd.png)'
- en: Photo by [Raúl Nájera](https://unsplash.com/@reinf?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/MggK54YixfU?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Raúl Nájera](https://unsplash.com/@reinf?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    拍摄，来自 [Unsplash](https://unsplash.com/photos/MggK54YixfU?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
- en: As already discussed, there are some real gains to be had from keeping up to
    date, but it can also cause unwanted problems, and lost time, due to debugging
    new errors.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，保持更新可以带来实际的好处，但也可能导致不必要的问题和因调试新错误而浪费的时间。
- en: Again, this can mostly be avoided by paying attention to the release notes.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 再次提醒，通过关注发布说明，大多数情况下可以避免这些问题。
- en: 'I will refer you to the release notes of NumPy for version 1.24.0 as an example
    of what to expect. It is well laid out with lots of information (not always the
    case with all libraries/software):'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我将参考 NumPy 1.24.0 版本的发布说明作为预期内容的示例。它布局清晰，信息丰富（并非所有库/软件都是如此）：
- en: '[## Release notes - NumPy v1.24 Manual'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 发布说明 - NumPy v1.24 手册'
- en: Edit description
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编辑描述
- en: numpy.org](https://numpy.org/doc/stable/release.html?source=post_page-----e633b73619f9--------------------------------)
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[numpy.org](https://numpy.org/doc/stable/release.html?source=post_page-----e633b73619f9--------------------------------)'
- en: The main problems that you will face are generally due to one of the following.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 你将面临的主要问题通常是由于以下原因之一。
- en: Deprecations / Expired Deprecations
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 弃用 / 已过期的弃用
- en: This is probably the main item to pay attention to. When a method becomes deprecated
    it will eventually be removed (timescales vary). This is excellent as, assuming
    you are aware of the deprecation being applied, it gives you time to implement
    a work around, or switch to an updated method from the library.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能是最需要关注的事项。当方法被弃用时，它最终会被移除（时间尺度各不相同）。这非常好，因为假设你知道弃用的情况，它会给你时间实施解决方法，或切换到库中的更新方法。
- en: However, if you are looking at the release notes and notice one of your methods
    is listed in expired deprecations, then an immediate fix is required before upgrade,
    as your code will literally stop working.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果你查看发布说明并注意到你的某个方法被列为过期弃用，则在升级之前需要立即修复，否则你的代码将会停止工作。
- en: Compatibility notes / changes
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 兼容性说明 / 更改
- en: This is less severe than a deprecation, but can be tricky as they can change
    behaviour and/or outputs of functions. Something you may not immediately notice
    if you weren’t aware of it.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这比弃用要轻微，但可能很棘手，因为它们可能会改变函数的行为和/或输出。如果你没有意识到这一点，可能不会立即注意到。
- en: '**array.fill(scalar) may behave slightly different**'
  id: totrans-108
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**array.fill(scalar) 的行为可能略有不同**'
- en: ''
  id: totrans-109
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`numpy.ndarray.fill` may in some cases behave slightly different now due to
    the fact that the logic is aligned with item assignment.'
  id: totrans-110
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 由于逻辑与项分配对齐，`numpy.ndarray.fill` 在某些情况下现在可能会略有不同。
- en: ''
  id: totrans-111
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Previously casting may have produced slightly different answers when using values
    that could not be represented in the target `dtype` or when the target had `object`
    dtype.
  id: totrans-112
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 之前的类型转换在使用无法在目标`dtype`中表示的值或目标具有`object` dtype时，可能会产生略微不同的结果。
- en: ''
  id: totrans-113
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: -[numpy.org](https://numpy.org/doc/stable/release/1.24.0-notes.html#array-fill-scalar-may-behave-slightly-different)
  id: totrans-114
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: -[numpy.org](https://numpy.org/doc/stable/release/1.24.0-notes.html#array-fill-scalar-may-behave-slightly-different)
- en: “May behave slightly differently” is about as vague as it gets! A perfect example
    of something that could cause ‘interesting’ bugs if it is relevant to your code.
    The above would be worth looking into should you have a very sensitive implementation
    that uses this function.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: “可能会稍有不同”这句话确实很模糊！如果这与你的代码相关，这可能会导致“有趣”的错误。如果你有非常敏感的实现使用了这个函数，值得关注一下上述情况。
- en: What if I can’t upgrade?
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如果我不能升级怎么办？
- en: '![](../Images/97d22ef76954ff1e60fca24d5c320e01.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/97d22ef76954ff1e60fca24d5c320e01.png)'
- en: Photo by [Towfiqu barbhuiya](https://www.pexels.com/photo/possible-written-on-a-chalkboard-9755375/)
    from [Pexels](https://www.pexels.com/)
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自 [Towfiqu barbhuiya](https://www.pexels.com/photo/possible-written-on-a-chalkboard-9755375/)
    的 [Pexels](https://www.pexels.com/)
- en: In industry the reality is that you may have limitations on the upgrade process
    that are outside of your control. This could be caused by a choice of base operating
    system / container, or due to limitations in other areas of the project you are
    working on that require very specific versioning.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在工业界，现实是你可能会面临超出你控制范围的升级过程限制。这可能是由于选择的基础操作系统/容器，或由于你正在处理的项目中的其他领域的限制，需要非常特定的版本。
- en: Remember, without solid information, no decisions can be made.
  id: totrans-120
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 记住，没有可靠的信息，无法做出决策。
- en: However, it is still worth keeping up to date with the developments of key packages
    and libraries. If nothing else it is ammunition to push for what might be quite
    a complicated, and/or costly, upgrade process to be put into action, as the benefits
    may outweigh the upgrade cost. Remember, without solid information, no real decisions
    can be made.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，仍然值得跟进关键包和库的发展。如果没有其他，至少这是一种推动可能相当复杂和/或昂贵的升级过程实施的 ammunition，因为好处可能超过升级成本。记住，没有可靠的信息，无法做出真正的决策。
- en: A concrete example of the benefits of staying up to date
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保持最新的好处的一个具体例子
- en: '![](../Images/b233616be939455e68a49de199266087.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b233616be939455e68a49de199266087.png)'
- en: Photo by [Rodolfo Quirós](https://www.pexels.com/photo/selective-focus-photography-cement-2219024/)
    from [Pexels](https://www.pexels.com/)
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自 [Rodolfo Quirós](https://www.pexels.com/photo/selective-focus-photography-cement-2219024/)
    的 [Pexels](https://www.pexels.com/)
- en: Fairly recently, NumPy had a minor version number change from 1.23.5 to 1.24.0\.
    As explained in an earlier section of this article, a minor version number change,
    can result in “minor feature changes”, rather than just the simple bug fixes that
    a patch update would bring.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，NumPy 的小版本号从 1.23.5 更改为 1.24.0。正如本文早些时候解释的那样，小版本号的更改可能会导致“轻微功能变化”，而不仅仅是补丁更新所带来的简单错误修复。
- en: 'A couple of these “minor feature changes” claim to result in significantly
    sped up versions of their original functions:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 几个这些“小功能变化”声称会使其原始函数的版本显著加快：
- en: '***np.in1d***'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '***np.in1d***'
- en: '`np.in1d` (used by `np.isin`) can now switch to a faster algorithm (up to >10x
    faster)'
  id: totrans-128
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`np.in1d`（由 `np.isin` 使用）现在可以切换到更快的算法（速度提升超过 10 倍）'
- en: ''
  id: totrans-129
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[-numpy.org](https://numpy.org/doc/stable/release/1.24.0-notes.html#faster-version-of-np-isin-and-np-in1d-for-integer-arrays)'
  id: totrans-130
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[-numpy.org](https://numpy.org/doc/stable/release/1.24.0-notes.html#faster-version-of-np-isin-and-np-in1d-for-integer-arrays)'
- en: '***NumPy comparison functions***'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '***NumPy 比较函数***'
- en: The comparison functions (`numpy.equal`, `numpy.not_equal`, `numpy.less`, `numpy.less_equal`,
    `numpy.greater` and `numpy.greater_equal`) are now much faster as they are now
    vectorized with universal intrinsics. For a CPU with SIMD extension AVX512BW,
    the performance gain is up to 2.57x, 1.65x and 19.15x for integer, float and boolean
    data types, respectively (with N=50000).
  id: totrans-132
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 比较函数（`numpy.equal`、`numpy.not_equal`、`numpy.less`、`numpy.less_equal`、`numpy.greater`
    和 `numpy.greater_equal`）现在更快了，因为它们已经用通用内部函数进行了向量化。对于具有 SIMD 扩展 AVX512BW 的 CPU，整数、浮点和布尔数据类型的性能提升分别达到
    2.57 倍、1.65 倍和 19.15 倍（以 N=50000 为例）。
- en: ''
  id: totrans-133
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: -[numpy.org](https://numpy.org/doc/stable/release/1.24.0-notes.html#faster-version-of-np-isin-and-np-in1d-for-integer-arrays)
  id: totrans-134
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: -[numpy.org](https://numpy.org/doc/stable/release/1.24.0-notes.html#faster-version-of-np-isin-and-np-in1d-for-integer-arrays)
- en: Testing the claims
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试声明
- en: Although I have no reason to doubt the numbers, I thought it might be interesting
    to test it out in practise, so the following sections will run benchmarks between
    the old an new versions to see what real world speed gains can be realised.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我没有理由怀疑这些数据，但我认为实际测试一下可能会很有趣，因此接下来的部分将对旧版本和新版本进行基准测试，以查看实际世界中的速度提升。
- en: Notebooks
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 笔记本
- en: All the code that follows is available in jupyter notebooks.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 以下所有代码都可以在 jupyter 笔记本中找到。
- en: This section gives details on the location of the notebooks, and also the requirements
    for the environment setup for online environments such as [Colab](https://colab.research.google.com/)
    and [Deepnote](https://deepnote.com/).
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 本节详细说明了笔记本的位置，以及在线环境（如 [Colab](https://colab.research.google.com/) 和 [Deepnote](https://deepnote.com/)）的环境设置要求。
- en: 'The raw notebooks can be found here for your local environment:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 原始笔记本可以在这里找到，适用于本地环境：
- en: '[](https://github.com/thetestspecimen/notebooks/tree/main/python-libraries-update?source=post_page-----e633b73619f9--------------------------------)
    [## notebooks/python-libraries-update at main · thetestspecimen/notebooks'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://github.com/thetestspecimen/notebooks/tree/main/python-libraries-update?source=post_page-----e633b73619f9--------------------------------)
    [## notebooks/python-libraries-update at main · thetestspecimen/notebooks'
- en: You can't perform that action at this time. You signed in with another tab or
    window. You signed out in another tab or…
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 你现在无法执行该操作。你在另一个标签或窗口中登录。你在另一个标签中注销了…
- en: github.com](https://github.com/thetestspecimen/notebooks/tree/main/python-libraries-update?source=post_page-----e633b73619f9--------------------------------)
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: github.com](https://github.com/thetestspecimen/notebooks/tree/main/python-libraries-update?source=post_page-----e633b73619f9--------------------------------)
- en: …or get kickstarted in either deepnote or colab.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: …或在 Deepnote 或 Colab 中快速启动。
- en: 'Python 1.24.0:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 'Python 1.24.0:'
- en: '[![](../Images/698d457d36991043ae3d8cf1dc379519.png)](https://deepnote.com/launch?url=https%3A%2F%2Fgithub.com%2Fthetestspecimen%2Fnotebooks%2Fblob%2Fmain%2Fpython-libraries-update%2Fpython_libraries_1.24.0.ipynb)[![](../Images/f372f5abb268152c9e786769541e99de.png)](https://colab.research.google.com/github/thetestspecimen/notebooks/blob/main/python-libraries-update/python_libraries_1.24.0.ipynb)'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](../Images/698d457d36991043ae3d8cf1dc379519.png)](https://deepnote.com/launch?url=https%3A%2F%2Fgithub.com%2Fthetestspecimen%2Fnotebooks%2Fblob%2Fmain%2Fpython-libraries-update%2Fpython_libraries_1.24.0.ipynb)[![](../Images/f372f5abb268152c9e786769541e99de.png)](https://colab.research.google.com/github/thetestspecimen/notebooks/blob/main/python-libraries-update/python_libraries_1.24.0.ipynb)'
- en: 'Python 1.23.5:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 'Python 1.23.5:'
- en: '[![](../Images/50735f40a54c7ce1361aca97ca6e6fc2.png)](https://deepnote.com/launch?url=https%3A%2F%2Fgithub.com%2Fthetestspecimen%2Fnotebooks%2Fblob%2Fmain%2Fpython-libraries-update%2Fpython_libraries_1.23.5.ipynb)[![](../Images/c48d803704c5f75f7d69a0fecd00942b.png)](https://colab.research.google.com/github/thetestspecimen/notebooks/blob/main/python-libraries-update/python_libraries_1.23.5.ipynb)'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](../Images/50735f40a54c7ce1361aca97ca6e6fc2.png)](https://deepnote.com/launch?url=https%3A%2F%2Fgithub.com%2Fthetestspecimen%2Fnotebooks%2Fblob%2Fmain%2Fpython-libraries-update%2Fpython_libraries_1.23.5.ipynb)[![](../Images/c48d803704c5f75f7d69a0fecd00942b.png)](https://colab.research.google.com/github/thetestspecimen/notebooks/blob/main/python-libraries-update/python_libraries_1.23.5.ipynb)'
- en: Environment Setup — Local or Deepnote
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 环境设置 — 本地或 Deepnote
- en: Whether using a local environment, or deepnote, all that is needed is to ensure
    that the appropriate version of NumPy is available. The easiest way to achieve
    this is to add it to your “requirements.txt” file.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 无论是使用本地环境还是 Deepnote，只需确保安装了适当版本的 NumPy。实现这一点的最简单方法是将其添加到你的“requirements.txt”文件中。
- en: 'For deepnote you can create a file called “requirements.txt” in the files section
    in the right pane and add the line:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Deepnote，你可以在右侧窗格的文件部分创建一个名为“requirements.txt”的文件，并添加以下行：
- en: '[PRE0]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: (change the version number as appropriate).
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: （根据需要更改版本号）。
- en: Environment Setup — Colab
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 环境设置 — Colab
- en: 'As there is no access to something like a “requirements.txt” file in colab
    you will need to explicitly install the correct version of NumPy. To do this run
    the following code in a blank cell to install the appropriate version:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Colab 中无法访问类似“requirements.txt”文件的内容，你需要显式地安装正确版本的 NumPy。为此，请在空白单元格中运行以下代码以安装适当版本：
- en: '[PRE1]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: (change the version number as appropriate).
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: （根据需要更改版本号）。
- en: Then refresh the web page before trying to run any code.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 然后在尝试运行任何代码之前刷新网页。
- en: The test
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试
- en: 'The following speed tests were run to give an overview of the improvements
    to the `np.in1d` and `np.equal` methods when using the latest NumPy version (1.24.0)
    compared to the previous version (1.23.5):'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 进行以下速度测试，以概述在使用最新 NumPy 版本（1.24.0）与之前版本（1.23.5）时对 `np.in1d` 和 `np.equal` 方法的改进：
- en: Two integer arrays with length 50000 using method `np.equal` (method run 1 million
    times) — **should be up to 2.75x faster with numpy 1.24.0 according to the documentation**
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `np.equal` 方法创建两个长度为 50000 的整数数组（方法运行 100 万次） — **根据文档，numpy 1.24.0 速度应提升至
    2.75 倍**
- en: Two boolean arrays with length 50000 using method `np.equal` (method run 1 million
    times) — **should be up to 19.15x faster with numpy 1.24.0 according to the documentation**
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `np.equal` 方法创建两个长度为 50000 的布尔数组（方法运行 100 万次） — **根据文档，numpy 1.24.0 速度应提升至
    19.15 倍**
- en: Two integer arrays compared using `np.in1d` using `kind="sort"` (method run
    10 thousand times) — this method is available in both numpy 1.23.5 and 1.24.0
    — **should be the same speed in numpy 1.23.5 and 1.24.0 (a good cross-check between
    notebooks to ensure that the results of the other tests can be directly compared)**
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`np.in1d`和`kind="sort"`比较两个整数数组（方法运行了1万次）——该方法在numpy 1.23.5和1.24.0中均可用——**在numpy
    1.23.5和1.24.0中速度应该相同（这是一个很好的交叉检查，可以确保其他测试的结果可以直接比较）**
- en: Two integer arrays compared using `np.in1d` using the new `kind="table"` method
    (method run 10 thousand times) — this method is only available in numpy 1.24.0
    — **should be up to 10x faster than the “sort” method according to the documentation**
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用新`kind="table"`方法比较两个整数数组（方法运行了1万次）——该方法仅在numpy 1.24.0中可用——**根据文档，速度应该比“sort”方法快最多10倍**
- en: '***Input data***'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '***输入数据***'
- en: '***Timeit setup***'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '***时间测试设置***'
- en: Results — NumPy 1.23.5
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结果 —— NumPy 1.23.5
- en: Results-NumPy 1.24.0
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结果——NumPy 1.24.0
- en: Summary
  id: totrans-169
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: '![](../Images/bdc50faa3043c57c7f6845d38e2c1f24.png)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bdc50faa3043c57c7f6845d38e2c1f24.png)'
- en: Results comparison — Image by author
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 结果比较 —— 作者提供的图片
- en: 'As you can see from the results sections, the results achieved are roughly
    inline with what was expected, and all methods achieve an increase in speed of
    execution:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 从结果部分可以看出，所获得的结果大致符合预期，所有方法都实现了执行速度的提升：
- en: Two integer arrays using method `np.equal` — **4.67x faster** with numpy 1.24.0
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用方法`np.equal`的两个整数数组 —— 使用numpy 1.24.0时**快4.67倍**
- en: Two boolean arrays using method `np.equal` — **15.56x faster** with numpy 1.24.0
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用方法`np.equal`的两个布尔数组 —— 使用numpy 1.24.0时**快15.56倍**
- en: Two integer arrays compared using `np.in1d` using the `kind="sort"` method —
    **more or less exactly the same execution time** using numpy 1.23.5 and 1.24.0
    as expected (18.5 seconds for 10000 iterations)
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`np.in1d`和`kind="sort"`方法比较两个整数数组 —— 使用numpy 1.23.5和1.24.0的执行时间**基本相同**（10,000次迭代需要18.5秒）
- en: Two integer arrays compared using `np.in1d` using the new `kind="table"` method
    — **3.84x faster** with numpy 1.24.0 and the newly introduced `kind="table"` method
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用新`kind="table"`方法比较两个整数数组 —— 使用numpy 1.24.0和新引入的`kind="table"`方法**快3.84倍**
- en: Conclusion
  id: totrans-177
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: The efforts of software developers to constantly improve the languages and libraries
    that we all use on a daily basis should not be ignored. It is one of the easiest
    and most accessible ways to improve the efficiency, speed and reliability of your
    projects code.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 软件开发者不断改进我们日常使用的语言和库的努力不应被忽视。这是提高项目代码效率、速度和可靠性的最简单、最直接的方法之一。
- en: As you can see from the very small example outlined in this article, the benefits
    can be quite significant. All it takes a little organisation, and the willingness
    to invest some time into reviewing the release notes for your most important libraries
    / software.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 从本文中列出的非常小的示例可以看出，收益可能非常显著。只需要一点组织，并愿意花时间审阅你最重要的库/软件的版本说明。
- en: If you found this article interesting or useful, remember to follow me, or [sign
    up for my newsletter](https://medium.com/@maclayton/subscribe) for more content
    like this.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你觉得这篇文章有趣或有用，请记得关注我，或[订阅我的新闻通讯](https://medium.com/@maclayton/subscribe)以获取更多类似内容。
- en: If you haven’t already, you could also consider [subscribing to Medium](https://medium.com/@maclayton/membership).
    Your membership fee directly supports, not just me, but other writers you read
    too. You’ll also get full unrestricted access to every story on Medium.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没有，考虑[订阅Medium](https://medium.com/@maclayton/membership)。你的会员费不仅直接支持我，还支持你阅读的其他作者。你还将获得对Medium上所有故事的全面无限制访问。
- en: Using my referral link to sign up will grant me a small kickback with zero effect
    on your membership, so thank you if you choose to do so.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 使用我的推荐链接注册将会让我获得少量佣金，不会对你的会员资格产生任何影响，因此如果你选择这样做，我会很感激。
- en: '[](https://medium.com/@maclayton/membership?source=post_page-----e633b73619f9--------------------------------)
    [## Join Medium with my referral link - Mike Clayton'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 通过我的推荐链接加入Medium - Mike Clayton](https://medium.com/@maclayton/membership?source=post_page-----e633b73619f9--------------------------------)'
- en: Read every story from Mike Clayton (and thousands of other writers on Medium).
    Your membership fee directly supports…
  id: totrans-184
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阅读Mike Clayton的每一篇故事（以及Medium上的其他成千上万位作者的故事）。你的会员费直接支持…
- en: medium.com](https://medium.com/@maclayton/membership?source=post_page-----e633b73619f9--------------------------------)
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '[medium.com](https://medium.com/@maclayton/membership?source=post_page-----e633b73619f9--------------------------------)'
