- en: How to get performance data from Power BI with DAX Studio
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用 DAX Studio 从 Power BI 获取性能数据
- en: 原文：[https://towardsdatascience.com/how-to-get-performance-data-from-power-bi-with-dax-studio-b7f11b9dd9f9](https://towardsdatascience.com/how-to-get-performance-data-from-power-bi-with-dax-studio-b7f11b9dd9f9)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-get-performance-data-from-power-bi-with-dax-studio-b7f11b9dd9f9](https://towardsdatascience.com/how-to-get-performance-data-from-power-bi-with-dax-studio-b7f11b9dd9f9)
- en: '*Sometimes we have a slow Report, and we need to figure out why. I will show
    you how to collect performance data and what these metrics mean.*'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*有时候我们会遇到报告变慢的情况，需要找出原因。我将向你展示如何收集性能数据以及这些指标的含义。*'
- en: '[](https://medium.com/@salvatorecagliari?source=post_page-----b7f11b9dd9f9--------------------------------)[![Salvatore
    Cagliari](../Images/a24b0cefab6e707cfee06cde9e857559.png)](https://medium.com/@salvatorecagliari?source=post_page-----b7f11b9dd9f9--------------------------------)[](https://towardsdatascience.com/?source=post_page-----b7f11b9dd9f9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----b7f11b9dd9f9--------------------------------)
    [Salvatore Cagliari](https://medium.com/@salvatorecagliari?source=post_page-----b7f11b9dd9f9--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@salvatorecagliari?source=post_page-----b7f11b9dd9f9--------------------------------)[![Salvatore
    Cagliari](../Images/a24b0cefab6e707cfee06cde9e857559.png)](https://medium.com/@salvatorecagliari?source=post_page-----b7f11b9dd9f9--------------------------------)[](https://towardsdatascience.com/?source=post_page-----b7f11b9dd9f9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----b7f11b9dd9f9--------------------------------)
    [Salvatore Cagliari](https://medium.com/@salvatorecagliari?source=post_page-----b7f11b9dd9f9--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----b7f11b9dd9f9--------------------------------)
    ·9 min read·Jan 25, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----b7f11b9dd9f9--------------------------------)
    ·9 分钟阅读·2023年1月25日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/be3df699528c306993e55c7a3e5b64cb.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/be3df699528c306993e55c7a3e5b64cb.png)'
- en: Photo by [Aleks Dorohovich](https://unsplash.com/@doctype?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Aleks Dorohovich](https://unsplash.com/@doctype?utm_source=medium&utm_medium=referral)
    在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: 'To put things straight: I will not discuss how to optimize DAX Code today.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 说清楚一点：今天我不会讨论如何优化 DAX 代码。
- en: More articles will follow, concentrating on common mistakes and how to avoid
    them.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 未来会有更多的文章，集中讨论常见错误及如何避免它们。
- en: But, before we can understand the performance metrics, we need to understand
    the architecture of the Tabular model in Power BI.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 但在我们能理解性能指标之前，我们需要了解 Power BI 中 Tabular 模型的架构。
- en: The same architecture applies to Tabular models in SQL Server Analysis Services.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 相同的架构适用于 SQL Server Analysis Services 中的 Tabular 模型。
- en: 'Any Tabular model has two Engines:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 任何 Tabular 模型都有两个引擎：
- en: Storage Engine
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储引擎
- en: Formula Engines
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 公式引擎
- en: These two have distinct properties and fulfill different tasks in a Tabular
    model.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个引擎具有不同的属性，并在 Tabular 模型中执行不同的任务。
- en: Let’s investigate them.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来调查一下。
- en: Storage Engine
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 存储引擎
- en: The Storage Engine is the interface between the DAX Query and the data stored
    in the Tabular model.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 存储引擎是 DAX 查询和存储在 Tabular 模型中的数据之间的接口。
- en: This Engine takes any given DAX query and sends queries to the Vertipaq Storage
    engine, which stores the data in the data model.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 该引擎接受任何给定的 DAX 查询，并将查询发送到 Vertipaq 存储引擎，该引擎将数据存储在数据模型中。
- en: The Storage Engine uses a language called xmSQL to query the data model.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 存储引擎使用一种叫做 xmSQL 的语言来查询数据模型。
- en: This language is based on the standard SQL language but has fewer capabilities
    and supports only simple arithmetic operators (+, -, /, *, =, <>, and IN).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这种语言基于标准 SQL 语言，但功能较少，只支持简单的算术运算符（+、-、/、*、=、<> 和 IN）。
- en: To aggregate data, xmSQL supports SUM, MIN, MAX, COUNT, and DCOUNT (Distinct
    Count).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 要对数据进行聚合，xmSQL 支持 SUM、MIN、MAX、COUNT 和 DCOUNT（去重计数）。
- en: Then it supports GROUP BY, WHERE, and JOINs.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 它支持 GROUP BY、WHERE 和 JOIN。
- en: It will help if you have a basic understanding of SQL Queries when you try to
    understand xmSQL. If you don’t know SQL, it will be helpful to learn the basics
    when digging deeper into analyzing bad-performing DAX code.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在尝试理解 xmSQL 时对 SQL 查询有基本的了解，这会有所帮助。如果你不懂 SQL，那么在深入分析性能不佳的 DAX 代码时，学习基础知识会很有帮助。
- en: The most important fact is that the Storage Engine is multi-threaded.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 最重要的事实是，存储引擎是多线程的。
- en: Therefore, when the Storage Engine executes a query, it will use multiple CPU-Cores
    to speed up query execution.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，当存储引擎执行查询时，它将使用多个CPU核心来加快查询执行。
- en: Lastly, the Storage Engine can Cache queries and the results.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，存储引擎可以缓存查询和结果。
- en: Consequently, repeated execution of the same query will speed up the execution
    because the result can be retrieved from the cache.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，相同查询的重复执行将加快执行速度，因为结果可以从缓存中检索。
- en: Formula Engine
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 公式引擎
- en: The Formula Engine is the DAX engine.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 公式引擎是DAX引擎。
- en: All functions, which the Storage Engine cannot execute, are executed by the
    Formula Engine.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 存储引擎无法执行的所有函数都由公式引擎执行。
- en: Usually, the Storage Engine retrieves the data from the data model and passes
    the result to the Formula Engine.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，存储引擎从数据模型中检索数据，并将结果传递给公式引擎。
- en: This operation is called materialization, as the data is stored in memory to
    be processed by the Formula Engine.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这个操作叫做物化，因为数据被存储在内存中以供公式引擎处理。
- en: As you can imagine, it is crucial to avoid large materializations.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所想，避免大规模物化是至关重要的。
- en: The Storage Engine can call the Formula Engine when an xmSQL-Query contains
    functions that the Storage Engine cannot execute.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 当xmSQL查询包含存储引擎无法执行的函数时，存储引擎可以调用公式引擎。
- en: This is operation id called CallbackDataID and should be avoided, if possible.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这个操作ID叫做CallbackDataID，如果可能的话应该避免。
- en: Crucially, the Formula engine is single-threaded and has no Cache.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 关键是，公式引擎是单线程的，并且没有缓存。
- en: 'This means:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着：
- en: No parallelism by using multiple CPU Cores
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不使用多个CPU核心进行并行处理
- en: No re-use of repeated execution of the same query
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不重复执行相同查询
- en: This means we want to offload as many operations as possible to the Storage
    engine.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们希望将尽可能多的操作卸载到存储引擎上。
- en: Unfortunately, it is impossible to directly define which part of our DAX-Code
    is executed by which Engine. We must avoid specific patterns to ensure that the
    correct engine completes the work in the least amount of time.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，无法直接定义我们的DAX代码的哪个部分由哪个引擎执行。我们必须避免特定模式，以确保正确的引擎在最短的时间内完成工作。
- en: And this is another story that can fill entire books.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这又是另一个可以填满整本书的故事。
- en: But how can we see how much time is used by each Engine?
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 那么我们如何看到每个引擎使用了多少时间呢？
- en: Getting the Performance data
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取性能数据
- en: We need to have DAX Studio on our machine to get Performance Metrics.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要在机器上安装DAX Studio以获取性能指标。
- en: We can find the download link for DAX Studio in the References Section below.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在下面的参考部分找到DAX Studio的下载链接。
- en: If you cannot install the Software, you can get a portable DAX version from
    the same site. Download the ZIP file and unpack it in any local folder. Then you
    can start DAXStudio.exe, and you get all features without limitations.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你无法安装软件，可以从同一网站获取便携版DAX。下载ZIP文件并解压到任何本地文件夹中。然后你可以启动DAXStudio.exe，所有功能将不受限制。
- en: But first, we need to get the DAX Query from Power BI.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 但首先，我们需要从Power BI中获取DAX查询。
- en: 'First, we need to start Performance Analyzer in Power BI Desktop:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要在Power BI Desktop中启动性能分析器：
- en: '![](../Images/b0715b1a1ed7d836d26a22407175d2e8.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b0715b1a1ed7d836d26a22407175d2e8.png)'
- en: Figure 1 — Start Performance Analyzer in Power BI Desktop (Figure by the Author)
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图1 — 在Power BI Desktop中启动性能分析器（作者提供的图示）
- en: 'As soon as we see the Performance Analyzer Pane, we can start recording the
    performance data and the DAX query for all Visuals:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们看到性能分析器面板，我们就可以开始记录性能数据和所有可视化的DAX查询：
- en: '![](../Images/9098aa9c3c1b08efdb8b7e0b693e05b3.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9098aa9c3c1b08efdb8b7e0b693e05b3.png)'
- en: Figure 2 — Start recording of Performance data and DAX query (Figure by the
    Author)
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图2 — 开始记录性能数据和DAX查询（作者提供的图示）
- en: First, we must click on Start Recording
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们必须点击“开始记录”
- en: Then click on “Refresh Visuals” to restart the rendering of all Visuals of the
    actual page.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 然后点击“刷新可视化”以重新启动当前页面上所有可视化的渲染。
- en: We can click on one of the rows in the list and notice that the corresponding
    Visual is also activated.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以点击列表中的一行，并注意到相应的可视化也被激活。
- en: When we expand on one of the rows in the report, we see a few rows and a link
    to copy the DAX query to the Clipboard.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们展开报告中的一行时，会看到几行和一个将DAX查询复制到剪贴板的链接。
- en: '![](../Images/e83d3bd604c57192b1ddef72be669823.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e83d3bd604c57192b1ddef72be669823.png)'
- en: Figure 3 — Select the Visual and copy the query (Figure by the Author)
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图3 — 选择可视化并复制查询（作者提供的图示）
- en: As we can see, Power BI needed 80'606 milliseconds to complete the rendering
    of the Matrix Visual.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，Power BI 需要 80'606 毫秒来完成矩阵视觉效果的渲染。
- en: The DAX query alone used 80'194 milliseconds.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 单独的 DAX 查询使用了 80'194 毫秒。
- en: This is a highly poor-performing measure used in this visual.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在此视觉效果中使用的一个性能极差的度量。
- en: Now, we can start DAX Studio.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以启动 DAX Studio。
- en: 'In case we have DAX Studio installed on our machine, we will find it in the
    External Tool Ribbon:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们的机器上安装了 DAX Studio，我们可以在外部工具功能区中找到它：
- en: '![](../Images/492fbe27ee7e4fe525d3007994fc12b3.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/492fbe27ee7e4fe525d3007994fc12b3.png)'
- en: Figure 4 — Start DAX Studio as an External Tool (Figure by the Author)
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图4 — 作为外部工具启动 DAX Studio（作者提供的图）
- en: DAX Studio will automatically be connected to the Power BI Desktop file.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: DAX Studio 将自动连接到 Power BI Desktop 文件。
- en: 'In case that we must start DAX Studio manually, we can manually connect to
    the Power BI file as well:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们必须手动启动 DAX Studio，我们也可以手动连接到 Power BI 文件：
- en: '![](../Images/8ae7b7aa83ba0d3e542eb4a971f35272.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8ae7b7aa83ba0d3e542eb4a971f35272.png)'
- en: Figure 5 — Manually connect DAX Studio to Power BI Desktop (Figure by the Author)
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图5 — 手动将 DAX Studio 连接到 Power BI Desktop（作者提供的图）
- en: After the connection is established, an empty query is opened in DAX Studio.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 连接建立后，DAX Studio 中将打开一个空查询。
- en: On the bottom part of the DAX Studio Window, you will see a Log section where
    you can see what happens.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DAX Studio 窗口的底部部分，你将看到一个日志部分，里面显示了发生了什么。
- en: 'But, before pasting the DAX Query from Power BI Desktop, we have to start Server
    Timings in DAX Studio (Right top corner of the DAX Studio Window):'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 但在从 Power BI Desktop 粘贴 DAX 查询之前，我们必须在 DAX Studio 中启动服务器时间（DAX Studio 窗口的右上角）：
- en: '![](../Images/5f15a308c6bf4c9f9637f06e31e59bf9.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5f15a308c6bf4c9f9637f06e31e59bf9.png)'
- en: Figure 6 — Start Server Timings in DAX Studio (Figure by the Author)
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图6 — 在 DAX Studio 中启动服务器时间（作者提供的图）
- en: After pasting the Query to the Empty Editor, we have to Enable the “Clear on
    Run” Button and execute the query.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 将查询粘贴到空编辑器中后，我们必须启用“清除运行时”按钮并执行查询。
- en: '![](../Images/ab18a9ad6d92ff139916960852054955.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ab18a9ad6d92ff139916960852054955.png)'
- en: Figure 7 — Enabling “Clear on Run” Feature (Figure by the Author)
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图7 — 启用“清除运行时”功能（作者提供的图）
- en: “Clear on Run” ensures the Storage Engine Cache is cleared before executing
    the Query.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: “清除运行时”确保在执行查询之前清除存储引擎缓存。
- en: Clearing the Cache before measuring performance metrics is the best practice
    to ensure a consistent starting point for the measurement.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在测量性能指标之前清除缓存是确保测量有一致起点的最佳实践。
- en: 'After executing the query, we will get a Server Timings page at the bottom
    of the DAX Studio Window:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 执行查询后，我们将在 DAX Studio 窗口底部看到一个服务器时间页面：
- en: '![](../Images/ab3c2eab86457034e3c243a91ec0984f.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ab3c2eab86457034e3c243a91ec0984f.png)'
- en: Figure 8 — Server Timings Window in DAX Studio (Figure by the Author)
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图8 — DAX Studio 中的服务器时间窗口（作者提供的图）
- en: Now we see a lot of information, which we will explore next.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们看到很多信息，我们将接下来探讨。
- en: Interpreting the data
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解读数据
- en: 'On the left side of Server Timings, we will see the execution timings:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在服务器时间的左侧，我们将看到执行时间：
- en: '![](../Images/985c6bbfe96681403c04ded41c96c49f.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/985c6bbfe96681403c04ded41c96c49f.png)'
- en: Figure 9 — Execution Timings (Figure by the Author)
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图9 — 执行时间（作者提供的图）
- en: 'Here we see the following numbers:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里我们看到以下数字：
- en: Total — The total execution time in milliseconds (ms)
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 总计 — 总执行时间（以毫秒 ms 为单位）
- en: SE CPU — The sum of the CPU time spent by the Storage Engine (SE) to execute
    the Query.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SE CPU — 存储引擎（SE）执行查询所花费的 CPU 时间总和。
- en: Usually, this number is greater than the Total time because of the parallel
    execution using multiple CPU Cores
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通常，这个数字大于总时间，因为使用多个 CPU 核心进行并行执行
- en: FE — The time spent by the Formula Engine (FE) and the percentage of the total
    execution time
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FE — 公式引擎（FE）花费的时间及其占总执行时间的百分比
- en: SE — The time spent by the Storage Engine (FE) and the percentage of the total
    execution time
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SE — 存储引擎（FE）花费的时间及其占总执行时间的百分比
- en: SE Queries — The number of Storage Engine Queries needed for the DAX Query
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SE 查询 — DAX 查询所需的存储引擎查询数量
- en: SE Cache — The use of Storage Engine Cache, if any
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SE 缓存 — 存储引擎缓存的使用情况（如有）
- en: 'As a rule of thumb: The larger the percentage of Storage Engine time, compared
    to Formula Engine time, the better.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 一般规则是：存储引擎时间所占百分比越大，相对于公式引擎时间越好。
- en: 'The middle section shows a list of Storage Engine Queries:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 中间部分显示了一个存储引擎查询列表：
- en: '![](../Images/eae07325f5f0e203416e5534a760fd3a.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/eae07325f5f0e203416e5534a760fd3a.png)'
- en: Figure 10 — List of Storage Engine queries (Figure by the Author)
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图10 — 存储引擎查询列表（作者绘制）
- en: 'This list shows how many SE Queries have been executed for the DAX Query and
    includes some statistical columns:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 此列表显示了为DAX查询执行了多少SE查询，并包括一些统计列：
- en: Line — Index line. Usually, we will not see all the lines. But we can see all
    lines by clicking on the Cache and Internal buttons on the top right corner of
    the Server Timings Pane. But we will not find them very useful, as they are an
    internal representation of the visible queries. Sometimes it can be helpful to
    see the Cache queries and see what part of the query has been accelerated by the
    SE Cache.
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 行 — 索引行。通常，我们不会看到所有的行。但我们可以通过点击服务器时间面板右上角的缓存和内部按钮查看所有行。不过，这些行的实际用途不大，因为它们是可见查询的内部表示。有时查看缓存查询以及查询的哪些部分被SE缓存加速可能会有帮助。
- en: Subclass — Normally “Scan”
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 子类 — 通常是“扫描”
- en: Duration — Time spent for each SE Query
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持续时间 — 每个SE查询花费的时间
- en: CPU — CPU Time spent for each SE Query
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CPU — 每个SE查询花费的CPU时间
- en: Par. — Parallelism of each SE Query
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Par. — 每个SE查询的并行度
- en: Rows and KB — Size of the materialization by the SE Query
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 行数和KB — SE查询物化的大小
- en: Waterfall — Timing sequence by the SE Queries
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 瀑布图 — 按SE查询的时间序列
- en: Query — The beginning of each SE Query
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查询 — 每个SE查询的开始
- en: In this case, the first SE Query returned 12'527'422 rows to the Formula engine
    (The number of rows in the entire Fact table) using 1 GB of Memory. This is not
    good, as large materializations like these are performance killers.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，第一个SE查询使用1 GB内存返回了12527422行到公式引擎（整个事实表中的行数）。这不好，因为像这样的巨大物化会严重影响性能。
- en: This clearly signifies that we made a big mistake with your DAX Code.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 这清楚地表明我们在DAX代码中犯了一个大错误。
- en: 'Lastly, we can read the actual xmSQL Code:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以读取实际的xmSQL代码：
- en: '![](../Images/ca17bbc32b3f207c040a9c97de57f1a4.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ca17bbc32b3f207c040a9c97de57f1a4.png)'
- en: Figure 11 — Storage Engine Query Code (Figure by the Author)
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 图11 — 存储引擎查询代码（作者绘制）
- en: Here we can see the xmSQL code and try to understand the Problem of the DAX
    Query.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里我们可以看到xmSQL代码，并尝试理解DAX查询的问题。
- en: In this case, we see that there is a highlighted CallbackDataID. DAX Studio
    highlights all CallbackDataID in the Query text and makes all queries in the query
    list bold, which contains a CallbackDataID.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们可以看到有一个高亮的CallbackDataID。DAX Studio会在查询文本中高亮显示所有CallbackDataID，并将包含CallbackDataID的查询列表中的所有查询加粗。
- en: We can see that, in this case, an IF() function is pushed to the Formula Engine
    (FE), as the SE cannot process this function. But SE knows that FE can do it.
    So, it calls the FE for each row in the result. In this case, over 12 million
    times.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，在这种情况下，一个IF()函数被推送到公式引擎（FE），因为SE无法处理这个函数。但SE知道FE可以处理它。因此，它为结果中的每一行调用FE。在这种情况下，调用了超过1200万次。
- en: As we can see from the timing, this takes a lot of time.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 从时间来看，这需要很长时间。
- en: Now we know that we have written bad DAX Code and the SE calls the FE many times
    to execute a DAX function. And we know that we use 1 GB of RAM to execute the
    query.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道我们编写了不良的DAX代码，并且SE多次调用FE来执行DAX函数。我们也知道我们使用了1 GB的RAM来执行查询。
- en: Moreover, we know that the parallelism is only 1.9 times, which could be much
    better.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们知道并行度仅为1.9倍，实际可以更好。
- en: How should it look like
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应该是什么样的
- en: The DAX query contains only the Query created by Power BI Desktop.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: DAX查询仅包含由Power BI Desktop创建的查询。
- en: But in most cases, we need the Code of the Measure.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 但在大多数情况下，我们需要度量值的代码。
- en: 'DAX Studio offers a feature called “Define Measures” to get the DAX Code of
    the Measure:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: DAX Studio提供了一个名为“定义度量值”的功能来获取度量值的DAX代码：
- en: Add one of two blank lines in the Query
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在查询中添加一到两行空白行
- en: Place the cursor on the first (empty) line
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将光标放在第一个（空的）行上
- en: Find the Measure in the Data Model
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在数据模型中找到度量值
- en: Right-click on the Measure and click on Define Measure
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击度量值，然后点击定义度量值
- en: '![](../Images/787afb605e4ed80a73d9ac73b9d0b62e.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/787afb605e4ed80a73d9ac73b9d0b62e.png)'
- en: Figure 12 — Define Measure in DAX Studio (Figure by the Author)
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 图12 — DAX Studio中的定义度量值（作者绘制）
- en: 5\. If our Measure calls another Measure, we can click on Define Dependent Measures.
    In this case, DAX Studio extracts the code of all Measures used by the selected
    Measure
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 5. 如果我们的度量值调用了另一个度量值，我们可以点击定义依赖度量值。在这种情况下，DAX Studio提取所选度量值所使用的所有度量值的代码。
- en: The result is a DEFINE statement followed by one or more MEASURE Statements
    containing the DAX code of our guilty Measure.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是一个DEFINE语句，后跟一个或多个MEASURE语句，其中包含我们有问题的度量值的DAX代码。
- en: 'After optimizing the code, I executed the new Query and took the Server Timings
    to compare them to the original Data:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在优化代码后，我执行了新的查询，并获取了服务器时间以与原始数据进行比较：
- en: '![](../Images/a55f0eb458b9c31e49cb6c6bb6eca38c.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a55f0eb458b9c31e49cb6c6bb6eca38c.png)'
- en: Figure 13 — Comparing slow a fast DAX code (Figure by the Author)
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13 — 比较慢速和快速 DAX 代码（图由作者提供）
- en: Now, the entire query took only 55 ms, and SE created a materialization of only
    19 Rows.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，整个查询仅花费了 55 毫秒，SE 创建了仅 19 行的数据物化。
- en: The parallelism is at 2.6 times, which is better than 1.9 times. It looks like
    the SE didn’t need that much processing power to increase parallelism.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 并行度为 2.6 倍，比 1.9 倍更好。看起来 SE 并不需要那么多处理能力来增加并行度。
- en: This is a very good sign.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常好的迹象。
- en: The optimization worked very well after looking at these numbers.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 查看这些数字后，优化效果非常好。
- en: '![](../Images/ca7d0ce12c7117ccba7758416cf79298.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ca7d0ce12c7117ccba7758416cf79298.png)'
- en: Photo by [Marc-Olivier Jodoin](https://unsplash.com/@marcojodoin?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Marc-Olivier Jodoin](https://unsplash.com/@marcojodoin?utm_source=medium&utm_medium=referral)
    提供，发布在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
    上。
- en: Conclusion
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: We need some information when we have a slow Visual in your Power BI Report.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的 Power BI 报告中有慢速视觉效果时，我们需要一些信息。
- en: The first step is to use Performance Analyzer in Power BI Desktop to see where
    time is spent rendering the result of the Visual.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是使用 Power BI Desktop 中的性能分析器来查看时间花费在渲染视觉效果的结果上。
- en: When we see that it takes much time to execute the DAX Query, we need DAX Studio
    to find out the problem and try to fix it.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们发现执行 DAX 查询需要较长时间时，我们需要使用 DAX Studio 来查找问题并尝试解决它。
- en: I didn’t cover any methods to optimize DAX in this article, as it wasn’t my
    aim to do it.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中我没有涵盖任何 DAX 优化的方法，因为这不是我的目标。
- en: But now that I have laid down the foundation to get and understand the performance
    metrics available in DAX Studio, I can write further articles to show how to optimize
    DAX code, what you should avoid, and why.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 但现在我已经奠定了获取和理解 DAX Studio 中可用性能指标的基础，我可以撰写更多文章，展示如何优化 DAX 代码、应该避免什么以及为什么。
- en: I’m looking forward to the journey with you.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 我期待与你一起踏上这段旅程。
- en: References
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: 'Download DAX Studio for free here: [https://www.sqlbi.com/tools/dax-studio/](https://www.sqlbi.com/tools/dax-studio/)'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '在这里免费下载 DAX Studio: [https://www.sqlbi.com/tools/dax-studio/](https://www.sqlbi.com/tools/dax-studio/)'
- en: 'Free SQLBI Tools Training: [DAX Tools Video Course — SQLBI](https://www.sqlbi.com/p/dax-tools-video-course/)'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '免费 SQLBI 工具培训: [DAX 工具视频课程 — SQLBI](https://www.sqlbi.com/p/dax-tools-video-course/)'
- en: SQLBI offers DAX-Optimization training as well.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: SQLBI 还提供 DAX 优化培训。
- en: I use the Contoso sample dataset, like in my previous articles. You can download
    the ContosoRetailDW Dataset for free from Microsoft [here](https://www.microsoft.com/en-us/download/details.aspx?id=18279).
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用 Contoso 示例数据集，就像在我之前的文章中一样。你可以从 Microsoft [这里](https://www.microsoft.com/en-us/download/details.aspx?id=18279)
    免费下载 ContosoRetailDW 数据集。
- en: The Contoso Data can be freely used under the MIT License, as described [here](https://github.com/microsoft/Power-BI-Embedded-Contoso-Sales-Demo).
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: Contoso 数据可以根据 MIT 许可证自由使用，如 [此处](https://github.com/microsoft/Power-BI-Embedded-Contoso-Sales-Demo)
    所述。
- en: '[](https://medium.com/@salvatorecagliari/membership?source=post_page-----b7f11b9dd9f9--------------------------------)
    [## Join Medium with my referral link - Salvatore Cagliari'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@salvatorecagliari/membership?source=post_page-----b7f11b9dd9f9--------------------------------)
    [## 通过我的推荐链接加入 Medium - Salvatore Cagliari'
- en: Read every story from Salvatore Cagliari (and thousands of other writers on
    Medium). Your membership fee directly…
  id: totrans-159
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阅读 Salvatore Cagliari 的每一个故事（以及 Medium 上成千上万的其他作者的作品）。你的会员费直接…
- en: medium.com](https://medium.com/@salvatorecagliari/membership?source=post_page-----b7f11b9dd9f9--------------------------------)
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: medium.com](https://medium.com/@salvatorecagliari/membership?source=post_page-----b7f11b9dd9f9--------------------------------)
