- en: Mastering Time Series Analysis with Python Classes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python 类掌握时间序列分析
- en: 原文：[https://towardsdatascience.com/mastering-time-series-analysis-with-python-classes-1a4215e433f8](https://towardsdatascience.com/mastering-time-series-analysis-with-python-classes-1a4215e433f8)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/mastering-time-series-analysis-with-python-classes-1a4215e433f8](https://towardsdatascience.com/mastering-time-series-analysis-with-python-classes-1a4215e433f8)
- en: Object Orienting Programming for Time Series Analysis
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 面向对象编程在时间序列分析中的应用
- en: '[](https://spierre91.medium.com/?source=post_page-----1a4215e433f8--------------------------------)[![Sadrach
    Pierre, Ph.D.](../Images/0e4aab43c2b981546d552beccf2259ab.png)](https://spierre91.medium.com/?source=post_page-----1a4215e433f8--------------------------------)[](https://towardsdatascience.com/?source=post_page-----1a4215e433f8--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----1a4215e433f8--------------------------------)
    [Sadrach Pierre, Ph.D.](https://spierre91.medium.com/?source=post_page-----1a4215e433f8--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://spierre91.medium.com/?source=post_page-----1a4215e433f8--------------------------------)[![Sadrach
    Pierre, Ph.D.](../Images/0e4aab43c2b981546d552beccf2259ab.png)](https://spierre91.medium.com/?source=post_page-----1a4215e433f8--------------------------------)[](https://towardsdatascience.com/?source=post_page-----1a4215e433f8--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----1a4215e433f8--------------------------------)
    [Sadrach Pierre, Ph.D.](https://spierre91.medium.com/?source=post_page-----1a4215e433f8--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----1a4215e433f8--------------------------------)
    ·8 min read·Jan 10, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----1a4215e433f8--------------------------------)
    ·阅读时间 8 分钟·2023年1月10日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/197b5de13a8d4ab8c00930b07a2ff313.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/197b5de13a8d4ab8c00930b07a2ff313.png)'
- en: Image by [Tima Miroshnichenko](https://www.pexels.com/@tima-miroshnichenko/)
    on [Pexels](https://www.pexels.com/photo/vintage-alarm-clocks-displayed-on-a-wooden-shelf-8327953/)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[Tima Miroshnichenko](https://www.pexels.com/@tima-miroshnichenko/)提供，发布于[Pexels](https://www.pexels.com/photo/vintage-alarm-clocks-displayed-on-a-wooden-shelf-8327953/)
- en: Time series analysis is one of the most common data science tasks. It involves
    analyzing trends in data points that are ordered temporally. There are a wide
    variety of time series data including stock market data, weather data, consumer
    demand data, and much more. Time series analysis has applications across a wide
    range of industries which makes it an essential skill for data scientists and
    data analysts.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列分析是最常见的数据科学任务之一。它涉及分析按时间顺序排列的数据点的趋势。时间序列数据种类繁多，包括股票市场数据、天气数据、消费者需求数据等。时间序列分析在各个行业中都有应用，这使得它成为数据科学家和数据分析师的必备技能。
- en: Time series analysis involves many techniques that can’t be summarized into
    a single article. Some of the most common approaches include visualizing time
    series data through line charts, building time series forecasting models, performing
    spectral analysis for uncovering cyclic trends, analyzing seasonality trends,
    and more.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列分析涉及许多技术，无法在一篇文章中总结。一些最常见的方法包括通过折线图可视化时间序列数据、构建时间序列预测模型、进行光谱分析以揭示周期性趋势、分析季节性趋势等。
- en: Because time series analysis involves many different techniques it naturally
    lends itself to object-oriented programming. Python classes make it easy to organize
    attributes and methods for related time series tasks. For example, if as a data
    scientist, you often perform line chart visualizations, seasonality analysis,
    and time series forecasting, classes can allow you to easily organize methods
    and attributes for these tasks.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 由于时间序列分析涉及多种不同的技术，它自然适合面向对象编程。Python 类使得组织相关时间序列任务的属性和方法变得简单。例如，如果作为数据科学家，你经常进行折线图可视化、季节性分析和时间序列预测，类可以让你轻松组织这些任务的方法和属性。
- en: When done well object-oriented programming can improve the readability, reusability,
    maintainability, and repeatability of time series experiments. Since classes are
    a set of methods and attributes, it makes it clear which functions are used for
    a specific purpose. This makes modifying and maintaining existing functions easy.
    Further, once you have a reliable set of methods defined in your class you can
    easily rerun experiments with different parameters, refreshed training data, and
    more with little to no need to rewrite code.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 当面向对象编程做得好的时候，可以提高时间序列实验的可读性、可重用性、可维护性和重复性。由于类是方法和属性的集合，它清楚地指出了哪些函数用于特定目的。这使得修改和维护现有函数变得简单。此外，一旦在你的类中定义了可靠的方法集合，你可以轻松地使用不同的参数、更新的训练数据等重新运行实验，而无需重新编写代码。
- en: Here we will walk through how to write a class that organizes the steps within
    a time series analysis workflow. Each part of the workflow will be defined by
    a class method that completes a single task. We will look at how to define class
    methods for time series visualization, statistical testing, splitting data for
    training and testing, training a forecasting model, and validating our time series
    model.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将演示如何编写一个类，以组织时间序列分析工作流中的步骤。工作流的每个部分将由一个类方法定义，该方法完成单个任务。我们将学习如何为时间序列可视化、统计测试、数据拆分用于训练和测试、训练预测模型和验证时间序列模型定义类方法。
- en: For this work, I will be writing code in [Deepnote](https://deepnote.com/),
    which is a collaborative data science notebook that makes running reproducible
    experiments very easy.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个工作中，我将使用[Deepnote](https://deepnote.com/)编写代码，它是一个协作数据科学笔记本，使得运行可重复的实验变得非常容易。
- en: For our modeling, we will work with the fictitious [Weather Climate Time Series
    data set](https://www.kaggle.com/datasets/sumanthvrao/daily-climate-time-series-data),
    which is publicly available on Kaggle. The data set is free to use, modify and
    share under the [Creative Commons Universal Public Domain License (CC0 1.0)](https://creativecommons.org/publicdomain/zero/1.0/).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的建模工作，我们将使用虚构的[Weather Climate Time Series data set](https://www.kaggle.com/datasets/sumanthvrao/daily-climate-time-series-data)，该数据集公开可在
    Kaggle 上获取。该数据集可以免费使用、修改和共享，遵循[创作共用公共领域许可证 (CC0 1.0)](https://creativecommons.org/publicdomain/zero/1.0/)。
- en: Read in data
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 读取数据
- en: To start, let’s navigate to Deepnote and create a new project (you can sign-up
    for free if you don’t already have an account).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们导航到 Deepnote 并创建一个新项目（如果你还没有账户，可以免费注册）。
- en: 'Let’s create a project called ‘time_series’ and a notebook within this project
    called ‘time_series_oop’. Also, let’s drag and drop the DailyDelhiClimate.csv
    file on the left-hand panel on the page where it says ‘FILES’:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们来创建一个名为‘time_series’的项目，并在该项目中创建一个名为‘time_series_oop’的笔记本。同时，将 DailyDelhiClimate.csv
    文件拖放到页面左侧面板上“FILES”部分：
- en: '![](../Images/ff30092b2ac95908090c8d765fe773b0.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ff30092b2ac95908090c8d765fe773b0.png)'
- en: Screenshot taken by author
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 作者拍摄的截图
- en: 'Let’s start by importing the Pandas library:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从导入 Pandas 库开始：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Next, we will define a class that allows us to read our weather data. We will
    call our python class TimeSeriesAnalysis:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将定义一个类来读取我们的天气数据。我们将把我们的 Python 类命名为 TimeSeriesAnalysis：
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We can define an instance of our class and access our data frame through our
    TimeSeriesAnalysis object. Let’s display the first five rows of our data:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以定义一个类的实例，并通过我们的 TimeSeriesAnalysis 对象访问我们的数据框。让我们显示数据的前五行：
- en: Embedding created by author
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 作者创建的嵌入
- en: 'We see that we have a date object and four float columns. We have mean temperature,
    humidity, wind speed, and mean pressure. Let’s add a method to our class that
    prepares our time series. The method will take a numerical column name and return
    a time series, where data is the index and the values correspond to the selected
    column:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到我们有一个日期对象和四个浮点列。我们有平均温度、湿度、风速和平均气压。让我们为我们的类添加一个准备时间序列的方法。该方法将接受一个数值列名，并返回一个时间序列，其中数据作为索引，值对应于选定的列：
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We can now define a new instance of our class and access our time series data:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以定义我们类的一个新实例，并访问我们的时间序列数据：
- en: Embedding created by author
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 作者创建的嵌入
- en: Generate summary statistics
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生成摘要统计信息
- en: 'The next thing we can do is add a method that generates some basic summary
    statistics for our time series. For example, we can define a class method that
    returns the mean and standard deviation for a specified column:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们可以添加一个生成时间序列基本统计信息的方法。例如，我们可以定义一个类方法，返回指定列的均值和标准差：
- en: '[PRE3]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We can then define a new class instance, call the get_time_series method on
    our object instance with the mean temperature columns as input, and generate summary
    statistics:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以定义一个新的类实例，在我们的对象实例上调用 get_time_series 方法，并将平均温度列作为输入，生成摘要统计数据：
- en: Embedding created by author
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌入由作者创建
- en: We can do the same for humidity, wind speed and mean pressure
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以对湿度、风速和平均压力做同样的处理
- en: Embedding created by author
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌入由作者创建
- en: Visualize time series
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可视化时间序列
- en: 'The next thing we can is define a method that allows us to generate some visualizations.
    For our visualizations we will need to import Seaborn, Matplotlib, and the statsmodels
    package:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步我们可以定义一个方法来生成一些可视化。对于我们的可视化，我们需要导入 Seaborn、Matplotlib 和 statsmodels 包：
- en: '[PRE4]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Let’s define a new class instance for mean temperature and create a line plot,
    histogram and perform seasonal decomposition:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们为平均温度定义一个新的类实例，创建一个折线图、直方图，并进行季节性分解：
- en: '[PRE5]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Let’s have our method give the option to generate a histogram of target values,
    a time series line plot and time series decomposition:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们让我们的方法提供生成目标值的直方图、时间序列折线图和时间序列分解的选项：
- en: Embedding created by author
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌入由作者创建
- en: Stationarity Tests
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 平稳性检验
- en: '***Adjusters Dickey-Fuller***'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '***Dickey-Fuller 调整器***'
- en: 'Another method we can add is a test for stationarity using the Dickey-Fuller
    test. Stationarity is when the mean and variance of a time series don’t change
    over time. Moreover, if a time series is stationary it doesn’t have any trends.
    Upon inspecting our plot we can see that the weather data is non-stationary since
    there are clear seasonal trends. We will use the Dickey-Fuller test to check for
    stationarity. The Dickey-Fuller Test has the following hypothesis:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以添加的另一个方法是使用 Dickey-Fuller 检验进行平稳性测试。平稳性是指时间序列的均值和方差随时间不会改变。此外，如果时间序列是平稳的，它就没有任何趋势。通过检查我们的图表，我们可以看到天气数据是非平稳的，因为存在明显的季节性趋势。我们将使用
    Dickey-Fuller 检验来检查平稳性。Dickey-Fuller 检验具有以下假设：
- en: '**Null Hypothesis**: The time series is non-stationary.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**原假设**：时间序列是非平稳的。'
- en: '**Alternative Hypothesis**: The time series is stationary.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**备择假设**：时间序列是平稳的。'
- en: 'We interpret the results in the following way:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们以以下方式解释结果：
- en: If the test statistic < the critical values we reject the null hypothesis
  id: totrans-50
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果检验统计量 < 临界值，我们拒绝原假设
- en: ''
  id: totrans-51
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: If the test statistic >the critical values we failed to reject the null hypothesis
  id: totrans-52
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果检验统计量 > 临界值，我们未能拒绝原假设
- en: 'The results of the test will have critical values at significance levels of
    1%, 5%, and 10%. It will also have the test statistic. Let’s define a method that
    allows us to run this test:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 检验结果将具有 1%、5% 和 10% 显著性水平的临界值。结果还将包括检验统计量。让我们定义一个方法来运行这个测试：
- en: '[PRE6]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'At the top of our notebook, let’s import the adfuller method from the stats
    models packages:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的笔记本的顶部，让我们从 statsmodels 包中导入 adfuller 方法：
- en: '[PRE7]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'We can then call the stationarity_test method on our climate object and access
    the test results:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以在我们的气候对象上调用 stationarity_test 方法并访问测试结果：
- en: Embedding created by author
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌入由作者创建
- en: We see that in each case the critical values are less than the test statistic
    which is to be expected. This means that our data is non-stationary.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到在每种情况下，临界值都小于检验统计量，这是可以预期的。这意味着我们的数据是非平稳的。
- en: '***Kwiatkowski — Phillips — Schmidt — Shin (KPSS)***'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '***Kwiatkowski — Phillips — Schmidt — Shin (KPSS)***'
- en: '**Null Hypothesis**: The time series is stationary.'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**原假设**：时间序列是平稳的。'
- en: '**Alternative Hypothesis**: The time series is not stationary.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**备择假设**：时间序列是非平稳的。'
- en: 'Similar to the ADF test, we interpret the results in the following way:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于 ADF 测试，我们以以下方式解释结果：
- en: If the test statistic < the critical values we reject the null hypothesis
  id: totrans-64
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果检验统计量 < 临界值，我们拒绝原假设
- en: ''
  id: totrans-65
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: If the test statistic >the critical values we failed to reject the null hypothesis
  id: totrans-66
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果检验统计量 > 临界值，我们未能拒绝原假设
- en: 'Another stationarity test is the Kwiatkowski — Phillips — Schmidt — Shin test
    (KPSS). The null hypothesis for this test is that the time series is stationary.
    The difference between ADF and KPSS is that ADF tests for stationarity while KPSS
    tests for non-stationarity. If the ADF test results in failing to reject the null
    hypothesis, you should use KPSS to confirm that the time series is non-stationary.
    Let’s extend our stationarity test method such that it gives options for both
    ADF and KPSS. Lets import the KPSS method from sstats models:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个平稳性测试是 Kwiatkowski — Phillips — Schmidt — Shin 测试 (KPSS)。该测试的原假设是时间序列是平稳的。ADF
    和 KPSS 之间的区别在于 ADF 测试平稳性，而 KPSS 测试非平稳性。如果 ADF 测试结果未能拒绝原假设，则应使用 KPSS 来确认时间序列是非平稳的。我们扩展我们的平稳性测试方法，使其同时提供
    ADF 和 KPSS 的选项。让我们从 `sstats` 模块导入 KPSS 方法：
- en: '[PRE8]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'We can then extend the definition of our stationary test method to include
    KPSS:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以扩展我们平稳性测试方法的定义，以包括 KPSS：
- en: '[PRE9]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'And we can then call the stationarity_test method on our climate object and
    access the KPSS test results:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以在我们的气候对象上调用 `stationarity_test` 方法，并访问 KPSS 测试结果：
- en: Embedding created by author
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 作者创建的嵌入
- en: We see that the test statistic is less than the critical values which means
    we reject the null hypothesis. The null hypothesis states that the time series
    is stationary. This means we have evidence to support the claim that the time
    series is non-stationary.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到测试统计量小于临界值，这意味着我们拒绝原假设。原假设声明时间序列是平稳的。这意味着我们有证据支持时间序列是非平稳的。
- en: 'We can define a method that performs ADF and KPSS tests and prints the results:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以定义一个执行 ADF 和 KPSS 测试并打印结果的方法：
- en: '[PRE10]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'And we get:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: Embedding created by author
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 作者创建的嵌入
- en: It is best to use both tests to confirm if a time series is stationary. The
    results of both tests give strong evidence that the time series is non-stationary.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 最好使用两种测试来确认时间序列是否平稳。这两种测试的结果强烈表明时间序列是非平稳的。
- en: Interestingly, the most common methods for time series forecasting, such as
    ARIMA & SARIMA can handle non-stationary data. Typically with ARIMA models, it
    is advised to perform differencing before fitting your model. Auto ARIMA, is a
    python package that allows you to automatically search for the best differencing
    parameter. This is convenient since it is not necessary to perform a manual test
    to find the best order of differencing.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，最常见的时间序列预测方法，如 ARIMA 和 SARIMA 可以处理非平稳数据。通常建议在拟合 ARIMA 模型之前进行差分。Auto ARIMA
    是一个 Python 包，它允许你自动搜索最佳差分参数。这很方便，因为不需要进行手动测试来找到最佳的差分阶数。
- en: Split for training & testing
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 划分训练和测试数据
- en: 'When preparing data for training forecasting models it is important to split
    the data for training and testing. This helps to prevent the model from overfitting
    the data and consequently poorly generalizing. We will define the training as
    all data before July 2016 and the testing as all data points after July 2016:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在准备训练预测模型的数据时，重要的是将数据划分为训练集和测试集。这有助于防止模型过拟合数据，从而导致泛化能力差。我们将训练集定义为 2016 年 7 月之前的所有数据，将测试集定义为
    2016 年 7 月之后的所有数据点：
- en: '[PRE11]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Auto ARIMA model
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动 ARIMA 模型
- en: 'To use Auto ARIMA, first lets install the pdarima package:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 Auto ARIMA，首先让我们安装 `pdarima` 包：
- en: '[PRE12]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Next, let’s import autor arima from pdarima:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们从 `pdarima` 导入 `auto arima`：
- en: '[PRE13]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'We can then define our fit method which we will use to fit our ARIMA model
    to our training data:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以定义我们的拟合方法，用于将 ARIMA 模型拟合到训练数据中：
- en: '[PRE14]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'We will also define a validate method that displays performance and visualizes
    model predictions. We will use mean absolute error to evaluate performance:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将定义一个验证方法，该方法展示性能并可视化模型预测。我们将使用平均绝对误差来评估性能：
- en: '[PRE15]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The full class looks as follows:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的类如下所示：
- en: Embedding created by author
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 作者创建的嵌入
- en: 'Now if we define a new instance, fit and validate our model we get:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们定义一个新的实例，对其进行拟合并验证模型，我们得到：
- en: Embedding created by author
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 作者创建的嵌入
- en: The code in this post is available on [GitHub](https://github.com/spierre91/deepnote/blob/main/time_series_oop.ipynb).
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 本文中的代码可以在 [GitHub](https://github.com/spierre91/deepnote/blob/main/time_series_oop.ipynb)
    上找到。
- en: CONCLUSIONS
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: In this post, we discuss how to write a class that organizes the steps of the
    time series analysis workflow. First, we defined a method that allowed us to read
    and display the data. We then defined a method to calculate the mean and standard
    deviation for the time series. Next, we defined a method that allowed us to visualize
    line plots of the time series data, histograms of the time series values, and
    seasonal decomposition of the data. Next, we wrote a class method that allowed
    us to perform statistical tests for stationarity. We used the ADF test to test
    for stationarity and the KPSS test to test for non-stationarity. Finally, we fit
    an Auto ARIMA model to the training data, validated our model, and generated visualizations
    for our predictions. I hope you found this useful. I encourage you to try applying
    these methods to your time series analysis projects!
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们讨论了如何编写一个类来组织时间序列分析工作流程的步骤。首先，我们定义了一个方法，使我们能够读取和显示数据。然后，我们定义了一个方法来计算时间序列的均值和标准差。接着，我们定义了一个方法，使我们能够可视化时间序列数据的折线图、时间序列值的直方图以及数据的季节性分解。随后，我们编写了一个类方法，使我们能够执行平稳性统计检验。我们使用了ADF检验来测试平稳性，并使用了KPSS检验来测试非平稳性。最后，我们将一个Auto
    ARIMA模型拟合到训练数据中，验证了我们的模型，并为预测生成了可视化图。我希望你觉得这篇文章有用。我鼓励你尝试将这些方法应用到你的时间序列分析项目中！
