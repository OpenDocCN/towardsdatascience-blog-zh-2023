- en: How To Change Google Sheet Permissions with Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: åŽŸæ–‡ï¼š[https://towardsdatascience.com/google-sheet-permissions-python-fee1ff80363](https://towardsdatascience.com/google-sheet-permissions-python-fee1ff80363)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Programmatically sharing Google Sheets with specific users using the Python
    API
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://gmyrianthous.medium.com/?source=post_page-----fee1ff80363--------------------------------)[![Giorgos
    Myrianthous](../Images/ff4b116e4fb9a095ce45eb064fde5af3.png)](https://gmyrianthous.medium.com/?source=post_page-----fee1ff80363--------------------------------)[](https://towardsdatascience.com/?source=post_page-----fee1ff80363--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----fee1ff80363--------------------------------)
    [Giorgos Myrianthous](https://gmyrianthous.medium.com/?source=post_page-----fee1ff80363--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: Â·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----fee1ff80363--------------------------------)
    Â·5 min readÂ·May 4, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/08ae206774c5ada897f91d3d70b78ba0.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Artur Tumasjan](https://unsplash.com/es/@arturtumasjan?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/zM8sSfYFDww?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: Sharing a Google Sheet with others is an easy and straightforward task that
    can be done through the user interface. However, what if you need to share multiple
    Google Sheets with a specific user or service account?
  prefs: []
  type: TYPE_NORMAL
- en: Imagine you have created hundreds of external tables on BigQuery that consume
    data from various Google Sheets. If another service, like Apache Airflow, executes
    queries referencing those tables, you need to ensure that the Airflowâ€™s service
    account has sufficient permissions on all those Sheets. But manually sharing (i.e.
    granting `Viewer` or `Editor` permissions) hundreds of Sheets with a specific
    principal is almost impossible, and would take several hours.
  prefs: []
  type: TYPE_NORMAL
- en: In this tutorial, we will demonstrate how to use Python and the Google Drive
    API to change permissions for hundreds of Google Sheets at once
  prefs: []
  type: TYPE_NORMAL
- en: Prerequisites
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The first thing we need to do, is to make sure that we have successfully obtained
    user access credentials, with the required scopes. To do, simply run the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: A window will then be opened to your default browser, asking you to login to
    your Google Account. Please do so since the credentials will apply to all API
    calls that make use of the Application Default Credentials client library that
    we will demonstrate in the next few sections.
  prefs: []
  type: TYPE_NORMAL
- en: 'Then make sure to install the Python API client `google-api-python-client`
    via pip (ideally in a fresh virtual environment):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Finding the id of a Google Sheet
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before we get started with coding an automated solution for granting permissions
    to Google Sheet files, we first need to find out all the IDs for each individual
    file of interest.
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to locate the file ID of a Google Sheet, simply open it in your preferred
    web browser. The link should be similar to the one shown below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '`abc-defg-1234` corresponds to the Google Sheetâ€™s ID.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: For more details with regards to how the Google Sheets URL is constructed, refert
    to the [Google Sheets API](https://developers.google.com/sheets/api/guides/concepts)
    Overview.
  prefs: []
  type: TYPE_NORMAL
- en: Changing Google Sheet permissions with Python Google API Client
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Firstly, letâ€™s create a list consisting of the Google Sheet file IDs for which
    we are going to change the permissions:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Now the second thing we need to do is to infer the application default credentials
    and create the service for Google Drive.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Now, letâ€™s create a dataclass that contains (only) the fields required to specify
    a permission, based on the `[Permissions](https://developers.google.com/drive/api/reference/rest/v3/permissions#Permission)`
    [REST Resource](https://developers.google.com/drive/api/reference/rest/v3/permissions#Permission).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: In the next step, we are going to write a function that essentially takes instances
    of a service and a permission along with a file ID, and attempts to create a new
    permission.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Now, letâ€™s write our `main()` method to put all the pieces together and eventually
    share the Google Sheets of interest with our target user.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Full Code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Hereâ€™s a fully revised version of the code that you can use in order to specify
    a new
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Final Thoughts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Granting access to a single Google Sheet for a user is a straightforward task
    that can be done through the User Interface. Simply click â€˜Shareâ€™ in the top right
    corner of the spreadsheet, enter the userâ€™s email address, and choose their role.
    However, when it comes to sharing permissions for hundreds of spreadsheets or
    users, this process can become time-consuming and tedious.
  prefs: []
  type: TYPE_NORMAL
- en: In this tutorial, we demonstrated how to use the Google Drive API and the Python
    Google API client to programmatically assign permissions to multiple Google Sheets.
    I hope you found this article useful. If you encounter any difficulties running
    the code snippet for your specific use case, please let me know in the comments
    below, and I will do my best to help you.
  prefs: []
  type: TYPE_NORMAL
- en: ðŸ‘‰ [**Become a member**](https://gmyrianthous.medium.com/membership) **and read
    every story on Medium. Your membership fee directly supports me and other writers
    you read. Youâ€™ll also get full access to every story on Medium.**
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://gmyrianthous.medium.com/membership?source=post_page-----fee1ff80363--------------------------------)
    [## Join Medium with my referral link â€” Giorgos Myrianthous'
  prefs: []
  type: TYPE_NORMAL
- en: As a Medium member, a portion of your membership fee goes to writers you read,
    and you get full access to every storyâ€¦
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: gmyrianthous.medium.com](https://gmyrianthous.medium.com/membership?source=post_page-----fee1ff80363--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: ðŸ‘‡**Related articles you may also like** ðŸ‘‡
  prefs: []
  type: TYPE_NORMAL
- en: '[](/dbt-55b35c974533?source=post_page-----fee1ff80363--------------------------------)
    [## What is dbt (data build tool)'
  prefs: []
  type: TYPE_NORMAL
- en: A gentle introduction to dbt that is taking over the data world
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'towardsdatascience.com](/dbt-55b35c974533?source=post_page-----fee1ff80363--------------------------------)
    [](/etl-vs-elt-68e221d78719?source=post_page-----fee1ff80363--------------------------------)
    [## ETL vs ELT: Whatâ€™s the Difference?'
  prefs: []
  type: TYPE_NORMAL
- en: A comparison between ETL and ELT in the context of Data Engineering
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/etl-vs-elt-68e221d78719?source=post_page-----fee1ff80363--------------------------------)
    [](/setuptools-python-571e7d5500f2?source=post_page-----fee1ff80363--------------------------------)
    [## setup.py vs setup.cfg in Python
  prefs: []
  type: TYPE_NORMAL
- en: Using setuptools to manage dependencies and distribute your Python packages
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/setuptools-python-571e7d5500f2?source=post_page-----fee1ff80363--------------------------------)
  prefs: []
  type: TYPE_NORMAL
