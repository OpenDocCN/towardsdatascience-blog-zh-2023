- en: Create Eye-Catching Radial Bar Charts With Matplotlib
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Matplotlib 创建引人注目的径向条形图
- en: 原文：[https://towardsdatascience.com/create-eye-catching-radial-bar-charts-with-matplotlib-fd03ff732048](https://towardsdatascience.com/create-eye-catching-radial-bar-charts-with-matplotlib-fd03ff732048)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/create-eye-catching-radial-bar-charts-with-matplotlib-fd03ff732048](https://towardsdatascience.com/create-eye-catching-radial-bar-charts-with-matplotlib-fd03ff732048)
- en: Easily Create Visually Appealing Circular Bar Plots in Python
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Python 中轻松创建视觉上吸引人的圆形条形图
- en: '[](https://andymcdonaldgeo.medium.com/?source=post_page-----fd03ff732048--------------------------------)[![Andy
    McDonald](../Images/df11d647be032aeb3d31852affb33a64.png)](https://andymcdonaldgeo.medium.com/?source=post_page-----fd03ff732048--------------------------------)[](https://towardsdatascience.com/?source=post_page-----fd03ff732048--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----fd03ff732048--------------------------------)
    [Andy McDonald](https://andymcdonaldgeo.medium.com/?source=post_page-----fd03ff732048--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://andymcdonaldgeo.medium.com/?source=post_page-----fd03ff732048--------------------------------)[![Andy
    McDonald](../Images/df11d647be032aeb3d31852affb33a64.png)](https://andymcdonaldgeo.medium.com/?source=post_page-----fd03ff732048--------------------------------)[](https://towardsdatascience.com/?source=post_page-----fd03ff732048--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----fd03ff732048--------------------------------)
    [Andy McDonald](https://andymcdonaldgeo.medium.com/?source=post_page-----fd03ff732048--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----fd03ff732048--------------------------------)
    ·9 min read·Mar 6, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----fd03ff732048--------------------------------)
    ·阅读时间 9 分钟·2023年3月6日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/daff7ea922e980791aef37e03a134f32.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/daff7ea922e980791aef37e03a134f32.png)'
- en: Radial bar chart created using matplotlib. Image by the author.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 matplotlib 创建的径向条形图。图像由作者提供。
- en: Radial bar charts are a visually attractive alternative to traditional bar charts.
    Data are plotted on a polar coordinate system instead of the conventional cartesian
    coordinate system. This allows the bars to be represented by rings rather than
    as vertical bars.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 径向条形图是传统条形图的一个视觉上吸引人的替代方案。数据在极坐标系统中绘制，而不是常规的笛卡尔坐标系统。这使得条形可以用环形表示，而不是垂直条形。
- en: Radial bar charts can make a great and visually appealing graphic to include
    in a presentation or poster if you are looking to catch the reader's attention.
    However, as with many data visualisations, they have their own drawbacks. One
    issue that can arise is that they can be challenging to interpret. This is because
    our visual system is much better at interpreting straight lines when comparing
    values between categories. Additionally, rings towards the centre of the radial
    bar chart become harder to read and compare with those further out.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望吸引读者的注意力，径向条形图可以成为演示文稿或海报中一个很棒且视觉上吸引人的图形。然而，与许多数据可视化一样，它们也有自己的缺点。其中一个问题是它们可能很难解释。这是因为我们的视觉系统在比较类别之间的值时更擅长解释直线。此外，径向条形图中心的环形比外围的环形更难以读取和比较。
- en: This article will show how to create a visually appealing radial bar plot using
    the [matplotlib](https://matplotlib.org/) library from [Python](https://www.python.org/).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本文将展示如何使用 [matplotlib](https://matplotlib.org/) 库从 [Python](https://www.python.org/)
    创建一个视觉上吸引人的径向条形图。
- en: When [matplotlib](https://matplotlib.org/) is mentioned, most people think about
    basic charts that are poorly formatted and need multiple lines of awkward or confusing
    code to display a great chart.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 当提到 [matplotlib](https://matplotlib.org/) 时，大多数人会想到基本的图表，这些图表格式不佳，需要多行笨拙或令人困惑的代码才能显示出良好的图表。
- en: Creating a Radial Bar Plot With Matplotlib
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Matplotlib 创建径向条形图
- en: Importing Libraries and Loading Data
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入库和加载数据
- en: The first step in creating our radial bar chart is to import the libraries we
    are going to use. For this tutorial, we will need to import [matplotlib](https://matplotlib.org/),
    [pandas](https://pandas.pydata.org/) and [numpy](https://numpy.org/).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 创建径向条形图的第一步是导入我们将要使用的库。在本教程中，我们需要导入 [matplotlib](https://matplotlib.org/)、[pandas](https://pandas.pydata.org/)
    和 [numpy](https://numpy.org/)。
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: After the libraries are imported, we can load or create some data. One of the
    most common formats for storing data in Python is the pandas dataframe.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 导入库之后，我们可以加载或创建一些数据。在 Python 中，最常见的数据存储格式之一是 pandas 数据框。
- en: Data can be loaded into a dataframe from a CSV file using the `pd.read_csv()`
    function or created manually from lists or dictionaries.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: For this tutorial, we will create a dataframe using dummy lithology data. We
    will have multiple lithologies and a count of how often that lithology appears
    within a specific interval of a well.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: 'To create our dataframe, we first create a dictionary with two keys: `LITH`
    and `COUNT`, and the values for each item will be lists containing the lithology
    name and the count of each lithology.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Once the data has been loaded, we need to find out two things:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: The maximum value of our `COUNT` column. This will give us the maximum value
    for our rings.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The total number of entries in the dataframe
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Choosing Colours and Setting Labels
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The next step in creating the radial bar chart is to define the colours and
    the labels that will be displayed.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Choosing colours for plots can be very subjective.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: There are numerous tools and articles out there that can help when choosing
    an effective colour palette for a chart. Most of which is based on colour theory.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: 'For this plot, I have based the colours on the following website:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://www.learnui.design/tools/data-color-picker.html?source=post_page-----fd03ff732048--------------------------------)
    [## The Data Viz Color Picker'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: Use the palette chooser to create a series of colors that are visually equidistant.
    This is useful for many data…
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: www.learnui.design](https://www.learnui.design/tools/data-color-picker.html?source=post_page-----fd03ff732048--------------------------------)
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: The tool allows you to select up to 8 colours when building a palette, and also
    allows you to copy the hex codes, which can then be pasted directly into your
    code.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fb7a3e815b8d3660d25f8f438a2614a1.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
- en: Palette generator tool from [The Data Viz Color Picker](https://www.learnui.design/tools/data-color-picker.html).
    Image by the author.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: To set up the labels, we will need to create a list comprehension that loops
    over the lithology name and the count. This is then joined together within a formatted
    string in the form of `Lithology (Count)`.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: Also, at the start of the string, we can add a few spaces. This is an easy way
    to add some padding between the labels and the start of the rings.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'When we check on the `ring_labels` variable, we get back the following list:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Creating the Radial Bar Chart Figure With Matplotlib
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that the data has been loaded, we can focus on building the plot.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: To create the plot, we first begin by creating the figure as we would with any
    other matplotlib chart. We will also pass in a few parameters to the `plt.figure()`
    call. The first is the figure size, which we will set to 10 x 10\. This can be
    set to any size you want, but this size gives a good plot for viewing on screen.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: Next, we will pass in the `linewidth` and `edgecolor` parameters. These will
    add a 10 px border around our plot which will have a slightly different colour
    to the plot background.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we will set the `facecolor` to a very dark blue.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: If we run the code above, we will get the following square figure displayed,
    which has our border and main figure background.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/159aa5e6347bb4db0ccd9a920cccc938.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
- en: Background and border for the radial bar graph. Image by the author.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: Adding a Polar Axis
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The next step is to add an axis to our chart that uses polar coordinates rather
    than cartesian coordinates.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: But, before we add the axis, we first have to create the shape of the axis.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: This is done by creating a variable called `rect` and assigning it to a list
    containing 4 numbers. These numbers represent the starting position (x and y coordinates),
    the height and the width.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: If we want to add some padding to our radial bar chart, we need to set the width
    and height parameters to a value less than 1\. In this case, we will set it to
    0.8, representing 80% of the available width and height.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: We can then create a new axis using `fig.add_axes` and pass in the `rect` list,
    along with setting the polar argument to true and removing the axis frame.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: Following that, we need to set the radial bars to start from the top of the
    plot, which is North (N), and we will set the bars to radiate in a counter-clockwise
    direction. If we wanted the bars to go clockwise, then we would change the `set_theta_direction()`
    to -1.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Adding Faint Background Rings to the Radial Bar Plot
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To add some visual interest to our plot, we will add some faint bars that go
    from 0 to the maximum value. This gives the illusion of bar portions that have
    yet to be filled.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: As we want a space for our labels in the top right of our plot, we will set
    the bars only to complete 3/4 of a full circle. This is done with the following
    piece of code, which is passed into the call to `ax_polar_bg.barh.`
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: If we run our code at this point, we will now see the plot below and the beginnings
    of our radial bar plot.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0591abdb9007fffbb32ce0cd358897f4.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
- en: Radial bar plot showing the polar axis before data is added. Image by the author.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: We can hide the polar axis simply by calling `.axis()` and passing in the word
    `'off'`.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: When we run the code again, we will see we have a clean plot with empty radial
    bars.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0c30aa3f870de4a792c3acb7f50deae7.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
- en: Faint radial bars to show 0 to 100% used for creating the background. Image
    by the author.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: Adding Coloured Rings to the Radial Bar Plot
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now we are ready to add some colour to our plot.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: To do this, we will add a new axis to our figure, which uses very similar code
    to adding the faint background bars.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: Within the `set_rgrids()` function, we will pass in a list with 0 to 6\. These
    numbers represent the radii for the radial gridlines. Also, we will pass in the
    labels and set their appearance within this function. To have the labels appear
    in the top right of our plot and adjacent to the starting point of the rings,
    we need to set the angle to 0.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: Once the radial grid has been set up, we need to loop through each category
    within the dataframe and add a ring to the chart using the `barh()` function within
    matplotlib.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: As with the previous section of code, we only want the rings to go 3/4 of the
    way around, so we need to multiply pi by 1.5 instead of 2.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: When we run our code now, we will get the following plot which is 95% done.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a290974c2d765bfe83cbdadd82394ad1.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
- en: Radial bar chart with polar gridlines and tick labels. Image by the author.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: Hiding Polar Grid Lines from the Matplotlib Polar Plot
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Finally, we need to remove the polar gridlines, ticks, and associated labels.
    We can do that like so:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Which then generates our final radial bar chart figure.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/83151eee0c3342bea49bbdce99030a53.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
- en: Final radial bar plot generated with matplotlib. Image by the author.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: Full Python Code to Generate a Radial Bar Plot
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Here is the complete python code for generating the above radial bar chart with
    matplotlib.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Summary
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Radial bar charts provide a visually appealing alternative to traditional bar
    charts and can easily be created using Python’s matplotlib library. Within this
    article, we have seen how to build up an eye-catching radial bar chart from scratch
    using matplotlib, which can easily be used in a poster presentation or infographic.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: '*Thanks for reading. Before you go, you should definitely subscribe to my content
    and get my articles in your inbox.* [***You can do that here!***](https://andymcdonaldgeo.medium.com/subscribe)*Alternatively,
    you can* [***sign up for my newsletter***](https://fabulous-founder-2965.ck.page/2ca286e572)
    *to get additional content straight into your inbox for free.*'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: '*Secondly, you can get the full Medium experience and support me and thousands
    of other writers by signing up for a membership. It only costs you $5 a month,
    and you have full access to all of the fantastic Medium articles and the chance
    to make money with your writing. If you sign up using* [***my link***](https://andymcdonaldgeo.medium.com/membership)***,***
    *you will support me directly with a portion of your fee, and it won’t cost you
    more. If you do so, thank you so much for your support!*'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
