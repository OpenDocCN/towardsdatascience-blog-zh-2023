["```py\nimport datatable as dt\n\ndf = dt.fread(\"my_large_file.csv\").to_pandas()\n```", "```py\n# DataFrame of stock prices\nstocks_df = pd.DataFrame(\n    columns=['date', 'company', 'price', 'volume']\n)\n\nthreshold = 1e5\n\n# Rows where the average volume for a company \n# is greater than some threshold\nresult = df.query(\n    '(volume.groupby(company).transform(\"mean\") > @threshold)'\n)\n```", "```py\ndf.query('category == \"electronics\"').replace(\n    {\"category\": {\"electronics\": \"electronics_new\"}}, inplace=True\n)\n```", "```py\nimport pandas as pd\nimport plotly.express as px\n\n# Set the default plotting backend to Plotly\npd.options.plotting.backend = 'plotly'\n```", "```py\nimport pandas as pd\n\npd.read_csv(file_name, engine='pyarrow')\n```", "```py\nimport pandas as pd\n\npd.read_csv(file_name, engine='pyarrow', dtype_engine='pyarrow')\n```", "```py\ndf.sample(20, axis=1).describe().T.style.bar(\n    subset=[\"mean\"], color=\"#205ff2\"\n).background_gradient(\n    subset=[\"std\"], cmap=\"Reds\"\n).background_gradient(\n    subset=[\"50%\"], cmap=\"coolwarm\"\n)\n```", "```py\nimport pandas as pd\n\n# create example DataFrame\ndf = pd.DataFrame(\n    {\n        \"Date\": [\n            \"2022-01-01\",\n            \"2022-01-02\",\n            \"2022-01-01\",\n            \"2022-01-02\",\n        ],\n        \"Country\": [\"USA\", \"USA\", \"Canada\", \"Canada\"],\n        \"Value\": [10, 15, 5, 8],\n    }\n)\n\ndf\n```", "```py\npivot_df = df.pivot(\n    index=\"Date\",\n    columns=\"Country\",\n    values=\"Value\",\n)\n\npivot_df\n```", "```py\ndf = pd.DataFrame(\n    {\n        \"Date\": [\"2022-01-01\", \"2022-01-02\", \"2022-01-03\"],\n        \"AAPL\": [100.0, 101.0, 99.0],\n        \"GOOG\": [200.0, 205.0, 195.0],\n        \"MSFT\": [50.0, 52.0, 48.0],\n    }\n)\n\ndf\n```", "```py\nmelted_df = pd.melt(\n    df, id_vars=[\"Date\"], var_name=\"Stock\", value_name=\"Price\"\n)\n\nmelted_df\n```", "```py\n# Group by a date column, use a monthly frequency \n# and find the total revenue for `category`\n\ngrouped = df.groupby(['category', pd.Grouper(key='date', freq='M')])\nmonthly_revenue = grouped['revenue'].sum()\n```"]