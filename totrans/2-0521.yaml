- en: Cointegration vs Correlation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/cointegration-vs-spurious-correlation-understand-the-difference-for-accurate-analysis-82727ad7cbc3](https://towardsdatascience.com/cointegration-vs-spurious-correlation-understand-the-difference-for-accurate-analysis-82727ad7cbc3)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*Why correlation does not equal causation for time series*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@egorhowell?source=post_page-----82727ad7cbc3--------------------------------)[![Egor
    Howell](../Images/1f796e828f1625440467d01dcc3e40cd.png)](https://medium.com/@egorhowell?source=post_page-----82727ad7cbc3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----82727ad7cbc3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----82727ad7cbc3--------------------------------)
    [Egor Howell](https://medium.com/@egorhowell?source=post_page-----82727ad7cbc3--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----82727ad7cbc3--------------------------------)
    ·6 min read·Jul 17, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9788afa1302a50836e76fc8fd6db80b2.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Wance Paleri](https://unsplash.com/fr/@wance0003000?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Background
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In time series analysis, it is valuable to understand if one series influences
    another. For example, it is useful for commodity traders to know if an increase
    in *commodity A* leads to an increase in *commodity B*. Originally, this relationship
    was measured using linear regression, however, in the 1980s [**Clive Granger**](https://en.wikipedia.org/wiki/Clive_Granger)and
    [**Paul Newbold**](https://en.wikipedia.org/wiki/Paul_Newbold) showed this approach
    yields incorrect results, particularly for [**non-stationary**](https://medium.com/towards-data-science/time-series-stationarity-simply-explained-125269968154)
    time series. As a result, they conceived the concept of [**cointegration**](https://en.wikipedia.org/wiki/Cointegration),
    which won Granger a Nobel prize. In this post, I want to discuss the need and
    application of cointegration and why it is an important concept Data Scientists
    should understand.
  prefs: []
  type: TYPE_NORMAL
- en: Spurious Correlation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Overview
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before we discuss cointegration, let’s discuss the need for it. Historically,
    statisticians and economists used [**linear regression**](https://en.wikipedia.org/wiki/Linear_regression)
    to determine the relationship between different time series. However, Granger
    and Newbold showed that this approach is incorrect and leads to something called
    [**spurious correlation**](https://statisticsbyjim.com/basics/spurious-correlation/#:~:text=With%20this%20definition%20in%20mind,there%20are%20more%20shark%20attacks.).
  prefs: []
  type: TYPE_NORMAL
- en: A spurious correlation is where two time series may look correlated but truly
    they lack a causal relationship. It is the classic ‘*correlation does not mean
    causation*’ statement. It is dangerous as even statistical tests may well say
    that there is a [**casual relationship**](https://en.wikipedia.org/wiki/Causality).
  prefs: []
  type: TYPE_NORMAL
- en: Example
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'An example of a spurious relationship is shown in the plots below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/aba3dd0a8c68d8e911163d9e8e3c58f3.png)'
  prefs: []
  type: TYPE_IMG
- en: Plot generated by author in Python.
  prefs: []
  type: TYPE_NORMAL
- en: Here we have two time series ***A(t)*** and ***B(t)*** plotted as a function
    of time (left) and plotted against each other (right). Notice from the plot on
    the right, that there is some correlation between the series as shown by the regression
    line. However, by looking at the left plot, we see this correlation is spurious
    because ***B(t)*** consistently increases while ***A(t)*** fluctuates erratically.
    Furthermore, the average distance between the two time series is also increasing.
    Therefore, they may be correlated, but there is no evidence of a causal relationship.
  prefs: []
  type: TYPE_NORMAL
- en: See [here](https://www.statology.org/spurious-correlation-examples/) for some
    further examples of spurious correlation. My favourite is the Video Game Sales
    vs. Nuclear Energy Production!
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Causes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'There are several causes for why spurious correlation occurs:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Pure luck, chance, or coincidence.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*The sample time series data does not adequately represent the population time
    series.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Both time-series* ***A*** *and* ***B****, are driven by a third un-observed
    time-series* ***C****. So,* ***C*** *causes both* ***A*** *and* ***B****, therefore
    it looks like* ***A*** *causes* ***B*** *or vice versa.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is Cointegration?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Overview
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Cointegration is a technique that allows us to distinguish if two time series
    have a long-running relationship or if it is just spurious correlation. Rather
    than measuring if the series’ move together, it focuses on determining if the
    difference between their means stays consistent.
  prefs: []
  type: TYPE_NORMAL
- en: Theory
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Two time series are considered to be *cointegrated* if there exists a linear
    combination between them that leads to a lower [**integration**](https://en.wikipedia.org/wiki/Order_of_integration)than
    the integrations’ of the two individual series**.** By integration, we are referring
    to the degree to which the series is stationary, not calculus.
  prefs: []
  type: TYPE_NORMAL
- en: For example, if two series have an ***I(1)*** order of integration (not stationary),
    then the two time series are cointegrated if a certain linear combination exists
    that makes the resultant series ***I(0)*** (stationary).
  prefs: []
  type: TYPE_NORMAL
- en: See [here](https://en.wikipedia.org/wiki/Order_of_integration) for a more thorough
    explanation of the order of integration.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'So, if we have our two time series ***A(t)*** and ***B(t)***, they are considered
    to be cointegrated if there exists a ***β*** scaling coefficient that produces
    a stationary process:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b2404a1f5060eaa6cf9a8a72c569d3d0.png)'
  prefs: []
  type: TYPE_IMG
- en: Equation generated by in LaTeX.
  prefs: []
  type: TYPE_NORMAL
- en: If this is true, then there exists a chance that ***A(t)*** and ***B(t)*** truly
    have a long-term causal relationship.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you want to learn more about stationarity, checkout my previous post on
    it here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/time-series-stationarity-simply-explained-125269968154?source=post_page-----82727ad7cbc3--------------------------------)
    [## Time-Series Stationarity Simply Explained'
  prefs: []
  type: TYPE_NORMAL
- en: A simple and intuitive explanation for the need of stationarity in time-series
    modelling.
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/time-series-stationarity-simply-explained-125269968154?source=post_page-----82727ad7cbc3--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Example
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Plotted below is an example of two cointegerated series:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2676ac3d3fe1d2c45a9404c0129c0c83.png)'
  prefs: []
  type: TYPE_IMG
- en: Plot generated by author in Python.
  prefs: []
  type: TYPE_NORMAL
- en: 'Notice how the mean distance between the series stays consistent. In fact if
    we multiply ***B(t)*** by ***2, β=2,*** the resultant output is:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a760e29ecd3ba11696ee3dad4cb30063.png)'
  prefs: []
  type: TYPE_IMG
- en: Plot generated by author in Python.
  prefs: []
  type: TYPE_NORMAL
- en: The two series completely overlay eachother! Therefore, we can say that they
    are cointegrated.
  prefs: []
  type: TYPE_NORMAL
- en: This is a perfect toy example, in reality no two series will perfectly overlap
    each other.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Cointegration Test: Engle-Granger Two-Step Method'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Overview & Theory
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The most common test for cointegration is the [**Engle-Granger test**](https://en.wikipedia.org/wiki/Error_correction_model#Engle_and_Granger_2-step_approach).
    This measures whether the residuals from a linear sum of the two series are stationary.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, going back to the above equation, let’s say the linear combination
    ***A(t)*** and ***B(t)*** leads to a stationary series, ***u(t)***:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/69ffff37f354a376c1bc86a4d10258e5.png)'
  prefs: []
  type: TYPE_IMG
- en: Equation generated by in LaTeX.
  prefs: []
  type: TYPE_NORMAL
- en: 'The coefficient ***β*** can be computed through a linear regression fit of
    ***A(t)*** vs ***B(t)***. This is the standard [**OLS**](https://en.wikipedia.org/wiki/Ordinary_least_squares)
    process:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/146c95930c727f87267c815c8279f1bf.png)'
  prefs: []
  type: TYPE_IMG
- en: Equation generated by in LaTeX.
  prefs: []
  type: TYPE_NORMAL
- en: Where ***c*** is the intercept term.
  prefs: []
  type: TYPE_NORMAL
- en: We can verify ***u(t)*** is indeed stationary by carrying out a statistical
    test. The most common test for stationarity ([**unit root test**](https://en.wikipedia.org/wiki/Unit_root_test))
    is the [**Augmented Dickey-Fuller (ADF)**](https://en.wikipedia.org/wiki/Augmented_Dickey%E2%80%93Fuller_test)
    test.
  prefs: []
  type: TYPE_NORMAL
- en: 'The hypotheses are:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a2784e2027b12c4ef71af1b60692010b.png)'
  prefs: []
  type: TYPE_IMG
- en: Equation generated by in LaTeX.
  prefs: []
  type: TYPE_NORMAL
- en: Example
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let’s make this theory more concrete using a simple toy example:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1f69fa27cac10358efae2b12ecb8562a.png)'
  prefs: []
  type: TYPE_IMG
- en: Plot generated by author in Python.
  prefs: []
  type: TYPE_NORMAL
- en: First, we will regress ***A(t)*** against ***B(t)*** to find ***β*** using OLS***:***
  prefs: []
  type: TYPE_NORMAL
- en: GitHub Gist by author.
  prefs: []
  type: TYPE_NORMAL
- en: 'The output of this is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Now using ***β=1.0004,*** we can calculate the residuals from the two series
    and run those residuals through an ADF test to determine if they are stationary:'
  prefs: []
  type: TYPE_NORMAL
- en: GitHub Gist by author.
  prefs: []
  type: TYPE_NORMAL
- en: 'The output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: As our ADF statistic is greater than the 10% [**confidence interval**](https://medium.com/towards-data-science/confidence-intervals-simply-explained-58b0b11e985f),
    the two series are then *not cointegrated*.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you want to learn about confidence intervals, checkout my previous post
    on them here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/confidence-intervals-simply-explained-58b0b11e985f?source=post_page-----82727ad7cbc3--------------------------------)
    [## Confidence Intervals Simply Explained'
  prefs: []
  type: TYPE_NORMAL
- en: A concise explanation of confidence intervals.
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/confidence-intervals-simply-explained-58b0b11e985f?source=post_page-----82727ad7cbc3--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Other Tests
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The issue with the Engle-Granger test is that it only measures cointegration
    between two time series. However, tests such as the [**Johansen test**](https://en.wikipedia.org/wiki/Johansen_test)
    are used to determine cointegration between several time series’.
  prefs: []
  type: TYPE_NORMAL
- en: See [here](https://www.statisticshowto.com/johansens-test/) for more information
    on the Johansen test.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Summary & Further Thoughts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Cointegration is a crucial tool in time series analysis as it allows Data Scientists
    to distinguish between real casual long-term relationships of series’ to spurious
    correlation. This is a useful concept, particularly for those Data Scientists
    working in finance and trading firms to really understand.
  prefs: []
  type: TYPE_NORMAL
- en: 'The full code used in this blog is available at my GitHub here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://github.com/egorhowell/Medium-Articles/blob/main/Time%20Series/Time%20Series%20Tools/cointegration.py?source=post_page-----82727ad7cbc3--------------------------------)
    [## Medium-Articles/Time Series/Time Series Tools/cointegration.py at main · egorhowell/Medium-Articles'
  prefs: []
  type: TYPE_NORMAL
- en: Code I use in my medium blog/articles. Contribute to egorhowell/Medium-Articles
    development by creating an account on…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: github.com](https://github.com/egorhowell/Medium-Articles/blob/main/Time%20Series/Time%20Series%20Tools/cointegration.py?source=post_page-----82727ad7cbc3--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: References & Further Reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'More comprehensive mathematical view on cointegration: [https://www.uh.edu/~bsorense/coint.pdf](https://www.uh.edu/~bsorense/coint.pdf)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Robert F. Engle and C. W. J. Granger*original paper on cointegration: [https://www.jstor.org/stable/1913236?origin=crossref](https://www.jstor.org/stable/1913236?origin=crossref)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Another Thing!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I have a free newsletter, [**Dishing the Data**](https://dishingthedata.substack.com/),
    where I share weekly tips for becoming a better Data Scientist. There is no “fluff”
    or “clickbait,” just pure actionable insights from a practicing Data Scientist.
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://newsletter.egorhowell.com/?source=post_page-----82727ad7cbc3--------------------------------)
    [## Dishing The Data | Egor Howell | Substack'
  prefs: []
  type: TYPE_NORMAL
- en: How To Become A Better Data Scientist. Click to read Dishing The Data, by Egor
    Howell, a Substack publication with…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: newsletter.egorhowell.com](https://newsletter.egorhowell.com/?source=post_page-----82727ad7cbc3--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Connect With Me!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[**YouTube**](https://www.youtube.com/@egorhowell)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**LinkedIn**](https://www.linkedin.com/in/egor-howell-092a721b3/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**Twitter**](https://twitter.com/EgorHowell)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**GitHub**](https://github.com/egorhowell)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
