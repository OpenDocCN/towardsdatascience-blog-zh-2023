["```py\n!pip install cohere-sagemaker --quiet\n```", "```py\nfrom cohere_sagemaker import Client\nimport boto3\n```", "```py\n# Currently us-east-1 and eu-west-1 only supported\nmodel_package_map = {\n    \"us-east-1\": \"arn:aws:sagemaker:us-east-1:865070037744:model-package/cohere-gpt-medium-v1-5-15e34931a06235b7bac32dca396a970a\",\n    \"eu-west-1\": \"arn:aws:sagemaker:eu-west-1:985815980388:model-package/cohere-gpt-medium-v1-5-15e34931a06235b7bac32dca396a970a\",\n}\n\nregion = boto3.Session().region_name\nif region not in model_package_map.keys():\n    raise Exception(f\"Current boto3 session region {region} is not supported.\")\n\nmodel_package_arn = model_package_map[region]\n```", "```py\n# instantiate client\nco = Client(region_name=region)\nco.create_endpoint(arn=model_package_arn, endpoint_name=\"cohere-gpt-medium\", \ninstance_type=\"ml.g5.xlarge\", n_instances=1)\n```", "```py\nprompt = \"Write a LinkedIn post about starting a career in tech:\"\n\n# API Call\nresponse = co.generate(prompt=prompt, max_tokens=100, temperature=0, return_likelihoods='GENERATION')\nprint(response.generations[0].text)\n```", "```py\ntoken_range = [100, 200, 300, 400, 500]\n\nfor token in token_range:\n    response = co.generate(prompt=prompt, max_tokens=token, temperature=0.9, return_likelihoods='GENERATION')\n    print(\"-----------------------------------\")\n    print(response.generations[0].text)\n    print(\"-----------------------------------\")\n```", "```py\nfor i in range(5):\n    response = co.generate(prompt=prompt, max_tokens=100, temperature=i, return_likelihoods='GENERATION')\n    print(\"-----------------------------------\")\n    print(response.generations[0].text)\n    print(\"-----------------------------------\")\n```", "```py\nimport itertools\n\n# Create array of all combinations of both params\ntemperature = [0,1,2,3,4,5]\nparams = [token_range, temperature]\nparam_combos = list(itertools.product(*params))\n\nfor param in param_combos:\n    response = co.generate(prompt=prompt, max_tokens=param[0], \n    temperature=param[1], return_likelihoods='GENERATION')\n```"]