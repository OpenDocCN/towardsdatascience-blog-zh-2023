["```py\ndef parse_pgn_file(file_path):\n    \"\"\"\n    Parses a PGN (Portable Game Notation) file containing chess games.\n\n    Args:\n        file_path (str): Path to the PGN file.\n\n    Returns:\n        pd.DataFrame: A DataFrame containing game information.\n    \"\"\"\n    games = []  # Initialize an empty list to store parsed games.\n    with open(file_path, \"r\") as pgn_file:\n        while True:\n            game = chess.pgn.read_game(pgn_file)  # Read a game from the PGN file.\n            if game is None:\n                break  # Exit the loop when no more games are found.\n            games.append(game)  # Append the parsed game to the list.\n\n    data = []  # Initialize an empty list to store game data.\n    for game in games:\n        data.append({\n            \"Event\": game.headers.get(\"Event\", \"\"),\n            \"Date\": game.headers.get(\"Date\", \"\"),\n            \"Result\": game.headers.get(\"Result\", \"\"),\n            \"White\": game.headers.get(\"White\", \"\"),\n            \"Black\": game.headers.get(\"Black\", \"\"),\n            \"Moves\": \" \".join(str(move) for move in game.mainline_moves()),\n            \"ECO\": game.headers.get(\"ECO\", \"\")\n        })  # Extract relevant information from game headers and moves.\n\n    df = pd.DataFrame(data)  # Create a DataFrame from the extracted data.\n    return df  # Return the DataFrame containing game information.\n```"]