["```py\ntf.keras.backend.floatx()\n'float32'\n```", "```py\nconda install python=3.10\npip install tensorflow-macos==2.12\npip install tensorflow-metal==0.8.0\nconda install pandas\n```", "```py\nmodel = tf.keras.models.Sequential([\n    tf.keras.layers.Flatten(input_shape=X_train.shape[1:]),\n    tf.keras.layers.Dense(512,activation='relu'),\n    tf.keras.layers.Dropout(rate=0.2),\n    tf.keras.layers.Dense(64,activation='relu'),  \n    tf.keras.layers.Dense(10,activation='softmax')\n])\n```", "```py\nmodel = tf.keras.models.Sequential([\n    tf.keras.layers.Conv2D(32,(3,3),activation = 'relu',input_shape=X_train.shape[1:]),\n    tf.keras.layers.MaxPooling2D((2,2)),\n    tf.keras.layers.Conv2D(64,(3,3),activation = 'relu'),\n    tf.keras.layers.MaxPooling2D((2,2)),\n    tf.keras.layers.Conv2D(64,(3,3),activation = 'relu'),\n    tf.keras.layers.Flatten(),\n    tf.keras.layers.Dense(64,activation='relu'),\n    tf.keras.layers.Dense(10,activation='softmax')\n])\n```", "```py\nmodel = tf.keras.models.Sequential([\n    tf.keras.layers.LSTM(128,input_shape=X_train.shape[1:]),\n    tf.keras.layers.Dense(10,activation='softmax')\n])\n```", "```py\nmodel.compile(optimizer='adam',\n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])\n```"]