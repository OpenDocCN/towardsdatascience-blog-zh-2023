["```py\nflask-on-ecs - repo structure\n.\n├── Dockerfile\n├── README.md\n├── myapp.py\n├── requirements.txt\n└── train_xgb.ipynb\n```", "```py\nconda create --name py38demo python=3.8 \n\nconda activate py38demo\n\npip install ipykernel pandas flask gunicorn numpy xgboost scikit-learn \n```", "```py\npython myapp.py\n```", "```py\ncurl -X POST http://0.0.0.0:80/recms -H 'Content-Type: application/json' -d '{\"area\":\"350\"}'\n```", "```py\ngunicorn --workers 4 --bind 0.0.0.0:80 myapp:flask_app_obj\n```", "```py\ndocker build --platform linux/amd64 -t flaskapi .\ndocker run -dp 80:80 flaskapi\n```", "```py\n# autheticate\naws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin <Your-aws-acc-no>.dkr.ecr.us-east-1.amazonaws.com\n\n#tag the image\ndocker tag <Your-local-docker-image-name>:latest <Your-aws-acc-no>.dkr.ecr.us-east-1.amazonaws.com/<Your-ECR-repo-name>:latest\n#push the image to ECR\ndocker push <Your-aws-acc-no>.dkr.ecr.us-east-1.amazonaws.com/<Your-ECR-repo-name>:latest\n```", "```py\ncurl -X POST http://<PUBLIC-IP>:80/recms -H 'Content-Type: application/json' -d '{\"area\":\"200\"}'\n```"]