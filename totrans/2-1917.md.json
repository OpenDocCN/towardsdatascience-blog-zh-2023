["```py\ndef connect_to_database():\n    # Hardcoded sensitive information\n    host = 'localhost'\n    username = 'admin'\n    password = 'secretpassword'\n    database = 'mydatabase'\n\n    # Code to connect to the database\n```", "```py\ndef divide(num1: int):\n    num2 = 3\n    return num1 / num2\n\ndef test_divide():\n    assert divide(3) == 1.0 # passed\n    # We can't test num2 = 0 because it is hard-coded\n```", "```py\n.\n├── conf/\n│   └── main.yaml\n└── src/\n    ├── __init__.py\n    ├── process.py\n    └── train_model.py\n```", "```py\n# main.yaml\ndata:\n  raw: data/raw/winequality-red.csv\n  intermediate: data/intermediate\n\nmodel: models\n\nprocesss:\n  cols_to_drop:\n  - free sulfur dioxide\n  feature: quality\n  test_size: 0.2\n```", "```py\nimport hydra\nfrom omegaconf import DictConfig\n\n@hydra.main(config_path=\"../conf\", config_name=\"main\", version_base=None)\ndef process_data(config: DictConfig):\n    ...\n```", "```py\npython src/process_data.py processs.test_size=0.3\n```", "```py\n.\n└── conf/\n    ├── process/\n    │   ├── process1.yaml\n    │   └── process2.yaml\n    └── main.yaml\n```", "```py\n.\n└── conf/\n    ├── process/\n    │   ├── process1.yaml\n    │   └── process2.yaml\n    ├── train/\n    │   ├── train1.yaml\n    │   └── train2.yaml\n    └── main.yaml\n```", "```py\n$ python src/process.py --help\n\nprocess:\n  cols_to_drop:\n   - free sulfur dioxide  \n  feature: quality\n  test_size: 0.2\ntrain:\n  hyperparameters:\n    svm__kernel:\n      - rbf\n    svm__C:\n      - 0.1\n      - 1\n```", "```py\n$ python src/process.py process=process1 # wait for this to finish\n\n$ python src/process.py process=process2 # then run the application with another config\n```", "```py\n$ python src/process.py --multirun process=process1,process2\n```"]