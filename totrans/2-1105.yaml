- en: How to Improve Your Code Quality with Python Pre-Commit Hooks?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何通过 Python 预提交钩子提升代码质量？
- en: 原文：[https://towardsdatascience.com/how-to-automate-code-quality-with-python-pre-commit-hooks-e550debbd62e](https://towardsdatascience.com/how-to-automate-code-quality-with-python-pre-commit-hooks-e550debbd62e)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-automate-code-quality-with-python-pre-commit-hooks-e550debbd62e](https://towardsdatascience.com/how-to-automate-code-quality-with-python-pre-commit-hooks-e550debbd62e)
- en: Commit your code with peace of mind
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安心提交你的代码
- en: '[](https://ahmedbesbes.medium.com/?source=post_page-----e550debbd62e--------------------------------)[![Ahmed
    Besbes](../Images/93804d9291439715e578f204b79c9bdd.png)](https://ahmedbesbes.medium.com/?source=post_page-----e550debbd62e--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e550debbd62e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e550debbd62e--------------------------------)
    [Ahmed Besbes](https://ahmedbesbes.medium.com/?source=post_page-----e550debbd62e--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://ahmedbesbes.medium.com/?source=post_page-----e550debbd62e--------------------------------)[![Ahmed
    Besbes](../Images/93804d9291439715e578f204b79c9bdd.png)](https://ahmedbesbes.medium.com/?source=post_page-----e550debbd62e--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e550debbd62e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e550debbd62e--------------------------------)
    [Ahmed Besbes](https://ahmedbesbes.medium.com/?source=post_page-----e550debbd62e--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e550debbd62e--------------------------------)
    ·7 min read·Jul 22, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e550debbd62e--------------------------------)
    ·7 分钟阅读·2023年7月22日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/e3c1be9eec7e621417f6b1786fbe9dd9.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e3c1be9eec7e621417f6b1786fbe9dd9.png)'
- en: Photo by [Roman Synkevych](https://unsplash.com/@synkevych?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[Roman Synkevych](https://unsplash.com/@synkevych?utm_source=medium&utm_medium=referral)
    的照片，来自 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)'
- en: If you’re a Python developer, you may frequently come across situations where
    your team members have different coding styles that make the codebase inconsistent.
    As a result, **this leads to bugs, decreases productivity**, and **makes collaboration
    difficult**.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是 Python 开发者，你可能经常遇到团队成员有不同的编码风格，这使得代码库不一致。因此，**这会导致错误，降低生产力**，并且**使合作变得困难**。
- en: As someone who strives to maintain code quality, I know how painful this situation
    can be.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个努力保持代码质量的人，我知道这种情况有多么痛苦。
- en: '👉 There is fortunately a solution that solves this issue: **pre-commit hooks**.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 👉 幸运的是，有一个解决方案可以解决这个问题：**预提交钩子**。
- en: Pre-commit hooks are scripts or tools that run before you make a commit to your
    version control system. They can automatically format your code, run tests, check
    for linting errors, and much more.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 预提交钩子是提交代码到版本控制系统之前运行的脚本或工具。它们可以自动格式化你的代码，运行测试，检查 lint 错误等等。
- en: I started using pre-commit hooks in both my personal and professional projects.
    They have helped me catch and fix potential issues early on, ensuring that my
    code is always clean and consistent. Plus, they have saved me a lot of time and
    effort by automating repetitive tasks.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我开始在个人和专业项目中使用预提交钩子。它们帮助我早期发现并修复潜在问题，确保我的代码始终干净和一致。此外，它们通过自动化重复任务为我节省了大量时间和精力。
- en: In ***this practical blog post, we will dive into this topic. We will explore
    how to set pre-commits, customize them to suit your needs, and integrate them
    into your development workflow.***
  id: totrans-13
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在***这篇实用的博客文章中，我们将深入探讨这个话题。我们将探索如何设置预提交钩子，定制它们以满足你的需求，并将它们整合到你的开发工作流中。***
- en: If you’re a Python developer looking to enhance your code quality and productivity
    across your team, this post is for you.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是一个希望提升团队代码质量和生产力的 Python 开发者，这篇文章适合你。
- en: So, without further ado, let’s have a look 🔍
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，事不宜迟，让我们来看看 🔍
- en: 'Pre-commits: how they integrate into the Git workflow'
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 预提交：它们如何融入 Git 工作流
- en: Pre-commit hooks are scripts that run automatically before each commit to check
    your code for errors. These hooks are language agnostic and help to catch issues
    before they are committed to the repository, ensuring that only high-quality code
    is committed.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 预提交钩子是自动运行的脚本，在每次提交之前检查你的代码是否有错误。这些钩子是语言无关的，帮助在提交到仓库之前捕捉问题，确保只有高质量的代码被提交。
- en: 'The following diagram visualizes a git workflow that includes the pre-commit
    hooks: once you hit the `git commit` command, these scripts are triggered. And
    when they’re done executing, a final step verifies that all the checks passed.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图示展示了一个包含预提交钩子的 git 工作流程：当您执行 `git commit` 命令时，这些脚本会被触发。执行完成后，最后一步会验证所有检查是否通过。
- en: '![](../Images/0145ccfc38da7687e199c9ac4d0b7805.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0145ccfc38da7687e199c9ac4d0b7805.png)'
- en: My pre-commit configuration for my personal projects
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我个人项目的预提交配置
- en: ✅ If the pre-commit checks don’t pass, you need to iterate on your codebase
    and provide the fixes accordingly.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ✅ 如果预提交检查未通过，您需要在代码库中进行迭代，并相应地提供修复。
- en: ❌ If the pre-commit check pass, your code is committed successfully
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ❌ 如果预提交检查通过，您的代码将成功提交
- en: Setting up and configuring pre-commit hook in your Python project
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Python 项目中设置和配置预提交钩子
- en: 'To start using pre-commit in your Python project, you first need to install
    it. You can do this using pip, the Python package installer. Run the following
    command in your terminal:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Python 项目中开始使用预提交，首先需要安装它。您可以使用 Python 包管理器 pip 来完成这一操作。在终端中运行以下命令：
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Once pre-commit is installed, you need to set up a configuration file named
    `.pre-commit-config.yaml` in the root directory of your project. This file will
    specify which hooks pre-commit should use.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完预提交后，您需要在项目的根目录中设置一个名为 `.pre-commit-config.yaml` 的配置文件。此文件将指定预提交应该使用哪些钩子。
- en: 'Here’s a configuration I use in my`.pre-commit-config.yaml` file:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我在 `.pre-commit-config.yaml` 文件中使用的配置：
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In this configuration, we’re using three hooks from the pre-commit-hooks [repository](https://github.com/pre-commit/pre-commit-hooks)
    (a repo that contains some out-of-the-box hooks for pre-commit) `trailing-whitespace`,
    `check-yaml`, and `end-of-file-fixer`.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在此配置中，我们使用了来自预提交钩子 [repository](https://github.com/pre-commit/pre-commit-hooks)（一个包含一些开箱即用钩子的库）中的三个钩子
    `trailing-whitespace`、`check-yaml` 和 `end-of-file-fixer`。
- en: '`trailing-whitespace`trims trailing whitespace'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`trailing-whitespace`修剪尾随空白字符'
- en: '`check-yaml` checks that YAML files are correctly formatted'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`check-yaml` 检查 YAML 文件是否格式正确'
- en: '`end-of-file-fixer` makes sure files end in a new line and only a new line'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`end-of-file-fixer` 确保文件以换行符结束，并且仅以换行符结束'
- en: 'After setting up the configuration file, you need to install the git hooks.
    Run the following command in your terminal:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 设置完配置文件后，您需要安装 git 钩子。在终端中运行以下命令：
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now, pre-commit will run automatically on `git commit`. If any of these hooks
    in your configuration file fail, the commit will be aborted.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，预提交将在 `git commit` 时自动运行。如果配置文件中的任何钩子失败，提交将被中止。
- en: Remember, you can customize your `.pre-commit-config.yaml` file to include any
    hooks that are relevant to your project. There are many pre-built hooks available,
    but you can also create your own if needed.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，您可以自定义 `.pre-commit-config.yaml` 文件，以包括与您的项目相关的任何钩子。虽然有许多现成的钩子可用，但如果需要，您也可以创建自己的钩子。
- en: Some common pre-commit hooks for Python
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一些常见的 Python 预提交钩子
- en: 'There are many pre-built hooks available that can help improve the quality
    of your Python code. Here are a few common ones:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多现成的钩子可以帮助提升您的 Python 代码质量。以下是一些常见的：
- en: '1 — `black`: This is a code formatter for Python. It automatically formats
    your code to make it more readable and consistent. Here''s how you can add it
    to your `.pre-commit-config.yaml` file:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '1 — `black` : 这是一个 Python 代码格式化工具。它会自动格式化您的代码，使其更具可读性和一致性。以下是如何将它添加到 `.pre-commit-config.yaml`
    文件中：'
- en: '[PRE3]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '2 — `flake8` : This is a tool for enforcing coding standards in Python. It
    checks your code against PEP8, Python''s official style guide, and also looks
    for logical errors. Here''s how you can add it:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '2 — `flake8` : 这是一个用于强制执行 Python 编码标准的工具。它会检查您的代码是否符合 PEP8（Python 的官方风格指南），同时也会查找逻辑错误。以下是如何添加它：'
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '3 — `isort`: This tool automatically sorts and formats your Python imports.
    Here''s how you can add it:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '3 — `isort` : 这个工具会自动排序和格式化您的 Python 导入。以下是如何添加它：'
- en: '[PRE5]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '4 — `mypy`: This is a static type checker for Python. It helps catch certain
    types of errors before your code is even run. Here''s how you can add it:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '4 — `mypy` : 这是一个用于 Python 的静态类型检查器。它有助于在代码运行之前捕捉某些类型的错误。以下是如何添加它：'
- en: '[PRE6]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '5 — `pycln` : This is a tool that helps find and remove unused import statements'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '5 — `pycln` : 这是一个帮助查找和删除未使用的导入语句的工具'
- en: '[PRE7]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '6 — `pydocstyle` : this is a static analysis tool for checking compliance with
    Python docstring conventions.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '6 — `pydocstyle` : 这是一个静态分析工具，用于检查是否符合 Python docstring 规范。'
- en: '[PRE8]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '7 — Custom hooks for running **unit tests**: Instead of referencing an external
    repository, you can specify a custom command that should be triggered at each
    commit. In this example, we run unit tests. This will probably introduce a slight
    overhead depending on your test suite.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 7 — 运行 **单元测试** 的自定义钩子：你可以指定一个自定义命令，在每次提交时触发，而不是引用外部仓库。在这个示例中，我们运行单元测试。这可能会引入一个轻微的开销，具体取决于你的测试套件。
- en: '[PRE9]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: These are just a few examples of the many pre-commit hooks available for Python.
    For more info, you can check this [repository](https://github.com/pre-commit/pre-commit-hooks)
    or add your custom quality code checks.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这些只是许多可用于 Python 的 pre-commit 钩子中的几个示例。有关更多信息，你可以查看这个 [repository](https://github.com/pre-commit/pre-commit-hooks)
    或添加你自定义的质量代码检查。
- en: How to run pre-commit hooks and fix a codebase
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何运行 pre-commit 钩子并修复代码库
- en: In this section, I’ll share with you the pre-commit configuration I use in my
    personal projects. Then, I’ll show you how it works in practice and prevents potential
    errors.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我将与你分享我在个人项目中使用的 pre-commit 配置。然后，我将展示它如何在实践中工作，并防止潜在的错误。
- en: 'First, here’s my configuration:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，这是我的配置：
- en: '[PRE10]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Now I’,m going to add the following poorly formatted dummy script to my existing
    codebase:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我要将以下格式不良的虚拟脚本添加到现有的代码库中：
- en: '[PRE11]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'As you see, this script has many issues:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，这个脚本有许多问题：
- en: 'an unused import statement: `math`'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 未使用的导入语句：`math`
- en: 'no black formatting: extra spaces between the arguments and the variable'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无黑色格式化：参数和变量之间有多余的空格
- en: a lot of trailing spaces
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多尾随空格
- en: 'If we add this file and commit the code, we get these errors from the hooks:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们添加这个文件并提交代码，我们会从钩子中得到这些错误：
- en: '![](../Images/443e8bf3e0a8487e6751f4d9c3ddf107.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/443e8bf3e0a8487e6751f4d9c3ddf107.png)'
- en: Screenshot by the author
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截图
- en: '`black` failed but reformatted the code automatically'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`black` 失败但自动重新格式化了代码'
- en: '`pydoctyle` failed and indicated where the documentation is missing'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pydoctyle` 失败并指出了文档缺失的地方'
- en: '`pycln` failed and automatically removed the unused import statement'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pycln` 失败并自动移除了未使用的导入语句'
- en: If we add the automatically modified script and commit the code again, we notice
    that everything passes except the `pyodstyle` hook.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们添加自动修改过的脚本并再次提交代码，我们会发现除了 `pyodstyle` 钩子外，其他都通过了。
- en: '![](../Images/2e3e623d1292a25f40b6cc3fc94a135a.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2e3e623d1292a25f40b6cc3fc94a135a.png)'
- en: Screenshot by the author
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截图
- en: In this case, we have to update the documentation manually,
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们必须手动更新文档，
- en: '[PRE12]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'add the code, and commit:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 添加代码，并提交：
- en: '![](../Images/7d34f2060fc47e193ad2bd1b73bd2d8c.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7d34f2060fc47e193ad2bd1b73bd2d8c.png)'
- en: Screenshot by the author
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截图
- en: Now, you’re ready to push your code.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你准备好推送你的代码了。
- en: Observing the impact of pre-commit on code quality
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 观察 pre-commit 对代码质量的影响
- en: 'The impact of pre-commit on code quality is significant and multifaceted. Here
    are a few ways in which pre-commit can enhance the quality of your Python code:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: pre-commit 对代码质量的影响是显著而多方面的。以下是 pre-commit 可以提升你的 Python 代码质量的几种方式：
- en: '**Consistent Code Formatting**: With hooks like `black` and `isort`, your code
    will follow a consistent style. This makes the code easier to read and understand,
    not just for you, but for anyone else who might work on your project.'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**一致的代码格式化**：使用 `black` 和 `isort` 等钩子，你的代码将遵循一致的风格。这使得代码不仅对你自己，更对任何可能参与你项目的其他人来说都更易读和理解。'
- en: '**Catching Errors Early**: Hooks like `flake8` and `mypy` can catch potential
    errors and bugs before your code is even run. This can save you a lot of time
    debugging later on.'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**早期捕获错误**：像 `flake8` 和 `mypy` 这样的钩子可以在代码运行之前捕获潜在的错误和漏洞。这可以节省你很多后续调试的时间。'
- en: '**Enforcing Best Practices:** Many hooks enforce Python best practices, such
    as PEP8 compliance. This can help you write cleaner, more efficient code.'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**强制最佳实践**：许多钩子强制执行 Python 最佳实践，例如 PEP8 合规性。这可以帮助你编写更清晰、更高效的代码。'
- en: '**Running Unit tests**: Pre-commits allow you to run your unit tests locally
    and check they succeed before pushing your code. This prevents you from encountering
    test errors during your CICD.'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**运行单元测试**：pre-commits 允许你在本地运行单元测试并检查它们是否成功，然后再推送你的代码。这可以防止你在 CICD 过程中遇到测试错误。'
- en: By integrating pre-commit into your development workflow, you can ensure that
    your code is always of the highest quality. It’s a tool that can save you time,
    effort, and potentially a lot of headaches in the long run.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将 pre-commit 集成到你的开发工作流中，你可以确保你的代码始终保持最高质量。这是一个可以在长远中节省时间、精力和潜在很多麻烦的工具。
- en: Conclusion
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: pre-commit is a powerful tool that can significantly enhance the quality of
    your Python code. By automating checks for common issues, enforcing best practices,
    and preventing bad commits, pre-commit can save you time, effort, and a lot of
    debugging headaches.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: pre-commit 是一个强大的工具，可以显著提升你的 Python 代码质量。通过自动检查常见问题、执行最佳实践并防止错误提交，pre-commit
    可以节省你大量的时间和调试精力。
- en: It’s easy to integrate into your development workflow and highly customizable,
    allowing you to choose the hooks that best fit your project’s needs.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 它很容易集成到你的开发工作流程中，并且高度可定制，让你可以选择最适合你项目需求的钩子。
- en: New to Medium? You can subscribe for $5 per month and unlock unlimited articles
    on various topics (tech, design, entrepreneurship…) You can support me by clicking
    on my referral [link](https://ahmedbesbes.medium.com/membership)
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 刚刚接触 Medium？你可以每月以 $5 订阅，解锁各种主题的无限文章（技术、设计、创业…）你可以通过点击我的推荐[链接](https://ahmedbesbes.medium.com/membership)来支持我。
- en: '[](https://ahmedbesbes.medium.com/membership?source=post_page-----e550debbd62e--------------------------------)
    [## Join Medium with my referral link - Ahmed Besbes'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 使用我的推荐链接加入 Medium - Ahmed Besbes](https://ahmedbesbes.medium.com/membership?source=post_page-----e550debbd62e--------------------------------)'
- en: As a Medium member, a portion of your membership fee goes to writers you read,
    and you get full access to every story…
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 作为 Medium 会员，你的部分会费将分配给你阅读的作者，同时你可以全面访问每一篇文章…
- en: ahmedbesbes.medium.com](https://ahmedbesbes.medium.com/membership?source=post_page-----e550debbd62e--------------------------------)
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '[ahmedbesbes.medium.com](https://ahmedbesbes.medium.com/membership?source=post_page-----e550debbd62e--------------------------------)'
- en: Resources
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 资源
- en: '[https://pre-commit.com/](https://pre-commit.com/)'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://pre-commit.com/](https://pre-commit.com/)'
- en: '[https://github.com/pre-commit/pre-commit/](https://github.com/pre-commit/pre-commit/)'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/pre-commit/pre-commit/](https://github.com/pre-commit/pre-commit/)'
- en: '[https://www.youtube.com/watch?v=psjz6rwzMdk&ab_channel=mCoding](https://www.youtube.com/watch?v=psjz6rwzMdk&ab_channel=mCoding)'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.youtube.com/watch?v=psjz6rwzMdk&ab_channel=mCoding](https://www.youtube.com/watch?v=psjz6rwzMdk&ab_channel=mCoding)'
