- en: 'Unlocking the Secrets of Slowly Changing Dimension (SCD): A Comprehensive View
    of 8 Types'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解锁慢变维（SCD）的秘密：八种类型的全面视角
- en: 原文：[https://towardsdatascience.com/unlocking-the-secrets-of-slowly-changing-dimension-scd-a-comprehensive-view-of-8-types-a5ea052e4b36](https://towardsdatascience.com/unlocking-the-secrets-of-slowly-changing-dimension-scd-a-comprehensive-view-of-8-types-a5ea052e4b36)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/unlocking-the-secrets-of-slowly-changing-dimension-scd-a-comprehensive-view-of-8-types-a5ea052e4b36](https://towardsdatascience.com/unlocking-the-secrets-of-slowly-changing-dimension-scd-a-comprehensive-view-of-8-types-a5ea052e4b36)
- en: Deep Dive Guide for When and How to Use 8 Types of SCD
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 深入指南：何时以及如何使用8种类型的SCD
- en: '[](https://chengzhizhao.medium.com/?source=post_page-----a5ea052e4b36--------------------------------)[![Chengzhi
    Zhao](../Images/186bba91822dbcc0f926426e56faf543.png)](https://chengzhizhao.medium.com/?source=post_page-----a5ea052e4b36--------------------------------)[](https://towardsdatascience.com/?source=post_page-----a5ea052e4b36--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----a5ea052e4b36--------------------------------)
    [Chengzhi Zhao](https://chengzhizhao.medium.com/?source=post_page-----a5ea052e4b36--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://chengzhizhao.medium.com/?source=post_page-----a5ea052e4b36--------------------------------)[![Chengzhi
    Zhao](../Images/186bba91822dbcc0f926426e56faf543.png)](https://chengzhizhao.medium.com/?source=post_page-----a5ea052e4b36--------------------------------)[](https://towardsdatascience.com/?source=post_page-----a5ea052e4b36--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----a5ea052e4b36--------------------------------)
    [Chengzhi Zhao](https://chengzhizhao.medium.com/?source=post_page-----a5ea052e4b36--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----a5ea052e4b36--------------------------------)
    ·12 min read·Jul 17, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布在[Towards Data Science](https://towardsdatascience.com/?source=post_page-----a5ea052e4b36--------------------------------)
    ·12分钟阅读·2023年7月17日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/62d6484416ffb7efede0a361a2155b00.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/62d6484416ffb7efede0a361a2155b00.png)'
- en: Photo by [Donald Tran](https://unsplash.com/@donald_tr4n?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/Lvy_S3ELzIs?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由[Donald Tran](https://unsplash.com/@donald_tr4n?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)拍摄，发布在[Unsplash](https://unsplash.com/photos/Lvy_S3ELzIs?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
- en: If you are designing a data warehouse, it is essential to understand the methodology
    of dimensional modeling. One of the most important concepts in this methodology
    is the Slowly Changing Dimension (SCD). Many online resources provide a general
    overview of the slowly changing dimension, but they often need a deep dive into
    explanations regarding which type of SCD to use.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在设计数据仓库，了解维度建模的方法论至关重要。这个方法论中最重要的概念之一是**慢变维（SCD）**。许多在线资源提供了关于慢变维的概述，但往往缺乏对使用哪种类型SCD的深入解释。
- en: This story will discuss the eight types of SCDs, each with its unique characteristics
    and situations. By the end, you will clearly understand each type and be able
    to differentiate between them when creating your next SCD in dimensional modeling.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本文将讨论八种类型的SCD，每种类型都有其独特的特点和应用场景。到最后，你将清楚地理解每种类型，并能在创建下一个维度建模中的SCD时进行区分。
- en: Why is SCD needed in dimensional modeling?
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么在维度建模中需要SCD？
- en: Typically, OLTP only stores recent data. When executing an update statement,
    the current data is replaced, and the previous data is lost unless the system
    is specifically designed to retain historical data, which could cause added latency.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，OLTP只存储近期数据。在执行更新语句时，当前数据会被替换，之前的数据将丢失，除非系统专门设计来保留历史数据，否则可能会增加延迟。
- en: On the other hand, an OLAP system, which often uses dimensional modeling, would
    be interested in the trend and derive insights for business, and keeping historical
    records is usually preferred.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，OLAP系统通常使用维度建模，它关注趋势并为业务提供洞察，通常更愿意保留历史记录。
- en: '**The primary goal for SCD is to track the history of the change.**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**SCD的主要目标是追踪变化的历史。**'
- en: In dimensional modeling, the most commonly used schema is the star schema. This
    schema revolves around a large fact table that houses various measurement fields
    for your business. The dimension tables that surround the fact table contain fields
    that allow for data manipulation and analysis within the fact table. Fact tables
    usually have many rows and expect to update rapidly. On the other hand, dimensions
    are changing slowly or never.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在维度建模中，最常用的模式是星型模式。该模式围绕一个大的事实表展开，该事实表包含了您业务的各种度量字段。围绕事实表的维度表包含了允许对事实表中的数据进行操作和分析的字段。事实表通常有许多行，并且期望快速更新。另一方面，维度的变化很慢或永不变化。
- en: The Importance of Surrogate Key
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 替代键的重要性
- en: The connection between the fact and dimensions are keys in each table. Those
    are usually surrogate keys rather than the IDs used in the OLTP system. The surrogate
    key is usually generated during data warehouse processing the data and decided
    after looking up the OLTP ids. This is critical for some types of SCD to avoid
    losing primary keys on a table, and we will cover them later in this type 2.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 事实表与维度表之间的连接是每个表中的键。这些通常是替代键，而不是 OLTP 系统中使用的 ID。替代键通常在数据仓库处理数据时生成，并在查找 OLTP
    ID 后确定。这对于某些类型的 SCD 来说至关重要，以避免在表上丢失主键，我们将在稍后的类型 2 中讨论这些问题。
- en: Why must we generate a "surrogate" key but not reuse the original business id
    in the dimensional modeling? One advantage of using a surrogate key is its ability
    to track historical changes while avoiding duplicated keys.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么在维度建模中必须生成“替代”键，而不是重用原始业务 ID？使用替代键的一个好处是能够跟踪历史变化，同时避免键的重复。
- en: Let's take an example of a table named "Company" with the following schema in
    an OLTP system. For example, we only have one company called Xesla, which HQ is
    in Palo Alto, California. Then Xesla decided to move to Austin, California. However,
    it gets too humid in summer, so Xesla returns to Palo Alto, California again.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们以一个名为“公司”的表作为 OLTP 系统中的示例。假设我们只有一家公司叫 Xesla，总部在加州帕洛阿尔托。然后 Xesla 决定迁往加州奥斯丁。然而，由于夏天湿度过高，Xesla
    又回到了加州帕洛阿尔托。
- en: If we look at the OLTP side, it usually only keeps the current location_id,
    and the HQ movement from California -> Austin -> California is invisible.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们查看 OLTP 端，它通常只保留当前的 location_id，而总部从加州搬迁到奥斯丁再到加州的过程是不可见的。
- en: '![](../Images/2e1d0d695c2c12fd6fcd2c195b601187.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2e1d0d695c2c12fd6fcd2c195b601187.png)'
- en: OLTP Schema for Company Table | Image By Author
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 公司表的 OLTP 模式 | 作者提供的图片
- en: Performing analytics queries in OLTP directly has disadvantages. The ignorance
    of historical data might not be preferable for the business. We cannot answer
    questions like "How is the company's profit performing due to HQ relocation?",
    "What's the turnover ratio due to HQ relocation?"
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在 OLTP 中直接执行分析查询有一定的劣势。对历史数据的忽视可能对业务不利。我们无法回答诸如“公司利润因总部搬迁而表现如何？”、“由于总部搬迁，员工流动率如何？”等问题。
- en: In this case, keeping track of the historical data that come to the rescue and
    the surrogate key helps maintain the row's uniqueness and the table's integrity.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，跟踪历史数据和替代键有助于保持行的唯一性和表的完整性。
- en: We have incorporated a "Key" column as a surrogate key, which has addressed
    multiple issues. Firstly, it enables us to track the movement history of the company's
    headquarters. Secondly, it provides a unique primary key that replaces the business
    id, eliminating any violation of the foundational database rule that requires
    the primary key to be unique for each row.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们引入了一个作为替代键的“键”列，这解决了多个问题。首先，它使我们能够跟踪公司总部的迁移历史。其次，它提供了一个唯一的主键，替代了业务 ID，消除了违反要求每行的主键唯一性的基础数据库规则的情况。
- en: '![](../Images/a63dcd8df90b9ca3d6e6f1872f89dea1.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a63dcd8df90b9ca3d6e6f1872f89dea1.png)'
- en: Surrogate Key For Dimension | Image By Author
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 维度的替代键 | 作者提供的图片
- en: We still need to discuss the connection between the dimension table and the
    fact table and their usage. We will address these topics as we go through each
    SCD.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们仍需讨论维度表与事实表之间的关系及其使用。我们将在讨论每种 SCD 时解决这些问题。
- en: SCD Type 0 — No Change Allowed
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SCD 类型 0 — 不允许更改
- en: '**Overview**'
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**概述**'
- en: SCD is a "special" type of SCD that doesn't track changes. Essentially, Type
    0 signifies that the dimension will remain unchanged. Once an entry gets into
    SCD type 0, it won't change. For instance, we can have a date dimension that won't
    change.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: SCD 是一种“特殊”类型的 SCD，不跟踪变化。本质上，类型 0 表示维度将保持不变。一旦条目进入 SCD 类型 0，它将不会改变。例如，我们可以有一个不会改变的日期维度。
- en: A confusing point here is date dimension will be fixed (SCD type 0), but how
    we interpret the date could be different. For example, we could have a fiscal
    year different from the calendar year. We could design our fact table with one
    key calenderKey and another key for fiscalCalenderKey.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这里一个令人困惑的点是日期维度将是固定的（SCD 类型 0），但我们对日期的解释可能会有所不同。例如，我们可能有与日历年不同的财政年度。我们可以设计我们的事实表，其中一个键是
    calenderKey，另一个键是 fiscalCalenderKey。
- en: Implementation
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实施
- en: SCD Type 0 can also include the business ID since changes are not tracked, and
    the original entry cannot be overwritten.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: SCD 类型 0 也可以包括业务 ID，因为变化不会被跟踪，原始条目不能被覆盖。
- en: When to consider using
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 何时考虑使用
- en: Regarding fixed dimensions, such as date and time, SCD Type 0 is the way to
    go. This type is best used when you are confident that the dimension will only
    require adding new records and no future updates.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 对于固定维度，如日期和时间，SCD 类型 0 是最佳选择。这种类型最适合在您确定维度只需要添加新记录而没有未来更新时使用。
- en: SCD Type 1 — Change Overwrite
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SCD 类型 1 — 更改覆盖
- en: Overview
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概述
- en: The SCD Type 1 is similar to many OLTP designs that replace the original data
    with new data, making it impossible to track changes to individual rows.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: SCD 类型 1 类似于许多 OLTP 设计，这些设计用新数据替换原始数据，使得跟踪单行的变化变得不可能。
- en: Unlike SCD Type 0, updating dimension rows in Type 1 is achievable. However,
    type 1 does not keep the history. Users consuming the data can assume that the
    current snapshot of the dimension is always up-to-date.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 与 SCD 类型 0 不同，类型 1 中更新维度行是可实现的。然而，类型 1 不保留历史记录。使用数据的用户可以假设维度的当前快照始终是最新的。
- en: Implementation
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实施
- en: 'SCD type 1 implementation can be straightforward: looking up the correct id
    and performing the update.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: SCD 类型 1 的实现可以是直接的：查找正确的 ID 并执行更新。
- en: When to consider using
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 何时考虑使用
- en: '*"Do we always want to keep history?"*'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '*“我们是否总是希望保留历史记录？”*'
- en: Whether or not you need to track historical data depends on your business use
    case. Keeping more data points can provide a more comprehensive understanding
    of your dataset. Incorporating history into your dimensional modeling design can
    be advantageous. However, not tracking history can simplify ETL management.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 是否需要跟踪历史数据取决于您的业务用例。保留更多的数据点可以提供对数据集的更全面了解。将历史记录纳入您的维度建模设计可能是有利的。然而，不跟踪历史记录可以简化
    ETL 管理。
- en: Interestingly, the first two types of SCD cannot track any changes. The more
    powerful SCD type starts with SCD type 2.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，前两种 SCD 类型无法跟踪任何变化。更强大的 SCD 类型从 SCD 类型 2 开始。
- en: SCD Type 2 — Tracking History with New Rows
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SCD 类型 2 — 使用新行跟踪历史记录
- en: Overview
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概述
- en: SCD Type 2 is a powerful SCD type widely used to track changes in dimensional
    modeling. It is practical with its ability to tell the history of changes with
    a single view quickly.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: SCD 类型 2 是一种强大的 SCD 类型，广泛用于跟踪维度建模中的变化。它具有快速显示变化历史记录的能力，非常实用。
- en: When changes are made to the data, SCD Type 2 replicates the unchanged fields,
    which can be repetitive and increase storage costs. To better accommodate rapidly
    updated dimensions, improvements are needed.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 当数据发生变化时，SCD 类型 2 会复制未更改的字段，这可能会重复并增加存储成本。为了更好地适应快速更新的维度，需要改进。
- en: We already have the surrogate key similar to the schema we looked at for the
    Xelsa example. Now, we can add the effective start and end date to indicate the
    period when the row was active.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经有了类似于我们在 Xelsa 示例中查看的模式的代理键。现在，我们可以添加有效的开始和结束日期，以指示该行处于活动状态的时间段。
- en: In this case, the currently active row has the effective ended date in the future
    — 12/31/9999, so it never (at least for an extended period) expires.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，当前活动行的有效结束日期设置为未来的 12/31/9999，因此它不会（至少在较长时间内）过期。
- en: '![](../Images/b60171407ef9de0a101c9cdc730d2676.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b60171407ef9de0a101c9cdc730d2676.png)'
- en: SCD Type 2 Example | Image By Author
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: SCD 类型 2 示例 | 作者提供的图片
- en: Implementation
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实施
- en: 'To execute SCD type 2, we will need to perform two tasks:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行 SCD 类型 2，我们需要执行两个任务：
- en: Add surrogate key
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加代理键
- en: 'Add a current row identifier, which could be: the start/end date, version number,
    or the current flag.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加一个当前行标识符，例如：开始/结束日期、版本号或当前标志。
- en: 'When it comes to ETL, the implementation process is more intricate compared
    to SCD type 1\. This process typically involves the following steps:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在 ETL 方面，相比于 SCD 类型 1，实施过程更为复杂。此过程通常包括以下步骤：
- en: Initialize the dimension table with all rows of the end effective date as 12/31/9999
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用所有行的结束有效日期设置为 12/31/9999 来初始化维度表
- en: When an update is recognized, look up the ID to identify the correct rows
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当识别到更新时，查找 ID 以确定正确的行
- en: Update the existing row with the ended date as desired.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按需要更新现有行的结束日期。
- en: Insert a new row with the same ID but a different surrogate key. Use the previous
    ended date + 1 as the start date for the new row, and make the end effective date
    12/31/9999
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 插入一行新的数据，ID 相同但替代键不同。使用前一行的结束日期 + 1 作为新行的开始日期，并将结束有效日期设置为 12/31/9999。
- en: '![](../Images/e085224aa1a8cc16c474219d26445e75.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e085224aa1a8cc16c474219d26445e75.png)'
- en: Steps for SCD Type 2 Implementation | Image By Author
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: SCD 类型 2 实施步骤 | 图片由作者提供
- en: When to consider using
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 何时考虑使用
- en: Regarding SCD, the type 2 option is often chosen by default due to its simplicity
    to consumers. However, there may be better choices if a dimension undergoes frequent
    changes, as it can be costly to replicate unchanged fields multiple times. For
    example, we have a flattened dimension with 50 fields, and one field update could
    lead to the remaining 49 repeating again.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 SCD，默认情况下通常选择类型 2 选项，因为它对消费者更简单。然而，如果一个维度频繁发生变化，可能会有更好的选择，因为重复未更改的字段多次可能会很昂贵。例如，我们有一个展平的维度，包含
    50 个字段，一次字段更新可能导致其余 49 个字段再次重复。
- en: SCD Type 3— Tracking History with New Fields
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SCD 类型 3—使用新字段跟踪历史
- en: '![](../Images/c03946d50a0821554550d6d382a1e1f9.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c03946d50a0821554550d6d382a1e1f9.png)'
- en: Photo by [Super Snapper](https://unsplash.com/ja/@supersnapper27?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/sdTL4qTynfM?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Super Snapper](https://unsplash.com/ja/@supersnapper27?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    在 [Unsplash](https://unsplash.com/photos/sdTL4qTynfM?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    提供
- en: Overview
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概述
- en: I consider SCD type 3 as a "queue" option. Instead of replicating the entire
    row and tracking the table history, SCD type 3 only tracks the changes for the
    selected fields. Since type 3 is at the column level, keeping a limited number
    of history (usually the current & previous) is the implementation.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为 SCD 类型 3 是一种“队列”选项。与其复制整个行并跟踪表的历史，SCD 类型 3 只跟踪选定字段的变化。由于类型 3 是在列级别进行的，保持有限数量的历史（通常是当前值和前一个值）是其实施方式。
- en: Continue on the example for Xesla, assuming we are only interested in tracking
    the state and the city history. We can include columns for the previous state
    and city to follow the history. The history is limited here with only the last
    one, but we can trace back as far as possible with additional columns.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 继续以 Xesla 为例，假设我们只对跟踪状态和城市历史感兴趣。我们可以包括前一个状态和城市的列以跟踪历史。这里的历史仅限于最后一个，但我们可以通过额外的列追溯尽可能远的历史。
- en: '![](../Images/d06c9f220a357fdab1e10ee83f32942b.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d06c9f220a357fdab1e10ee83f32942b.png)'
- en: SCD Type 3 Example | Image By Author
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: SCD 类型 3 示例 | 图片由作者提供
- en: Implementation
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实施
- en: SCD Type 3 is like a sized queue. During updates, a lookup needs to perform,
    the previous value will be dropped, and then the current value will be moved to
    the previous value field.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: SCD 类型 3 类似于一个大小有限的队列。在更新过程中，需要执行查找，前一个值将被丢弃，然后当前值将移到前一个值字段。
- en: When to consider using
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 何时考虑使用
- en: If you're looking to keep track of the history of a small set of columns, SCD
    Type 3 is advantageous. To effectively grasp the nature of the business and the
    frequency of changes, it is crucial to have a solid knowledge base. This is especially
    important when extending SCD type 3 to a new field, as it requires adding extra
    columns.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望跟踪一小部分列的历史，SCD 类型 3 是有利的。为了有效掌握业务的性质和变化频率，拥有坚实的知识基础是至关重要的。特别是在将 SCD 类型
    3 扩展到新领域时，这一点尤为重要，因为这需要添加额外的列。
- en: SCD Type 4— Tracking History with Separate Table (Mini-Dimension)
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SCD 类型 4—使用单独的表（迷你维度）跟踪历史
- en: Overview
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概述
- en: We have covered tracking history in the same table vertically by SCD Type 2
    and horizontally by SCD Type 3\. SCD Type 4 is like Z-axis that we follow the
    history in another table.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经覆盖了通过 SCD 类型 2 在同一表中垂直跟踪历史和通过 SCD 类型 3 水平跟踪历史。SCD 类型 4 就像 Z 轴一样，我们在另一个表中跟踪历史。
- en: One table is the current view table, and another table is for history. This
    is a similar idea to [CDC](https://en.wikipedia.org/wiki/Change_data_capture).
    The current table shows the present; the history table change log can reconstruct
    everything from the beginning.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 一个表是当前视图表，另一个表是历史表。这与 [CDC](https://en.wikipedia.org/wiki/Change_data_capture)
    的概念类似。当前表显示现在；历史表变更日志可以从头重建一切。
- en: '![](../Images/f6d1a959f20fe5ea6944e028d7b30a36.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f6d1a959f20fe5ea6944e028d7b30a36.png)'
- en: SCD Type 4 | Image By Author
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: SCD 类型 4 | 作者图片
- en: If we combine the two tables, that's SCD type 2\. So why do we want to split
    the current and historical views? The main reason is the help improve the query
    performance if the dimension table updates rapidly and ends up with millions of
    records. Keeping the current view relatively minor can enhance the query performance
    for the end users.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将这两个表合并，那就是 SCD 类型 2。那我们为什么要拆分当前视图和历史视图？主要原因是如果维度表更新迅速并最终达到数百万条记录，拆分当前视图可以帮助提高查询性能。保持当前视图相对较小可以提升最终用户的查询性能。
- en: Implementation
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实现
- en: Regarding updating data, SCD Type 2 involves updating information in the same
    table. However, with SCD Type 4, you must work with two separate tables. The process
    for updating data in SCD Type 4 follows the same pattern as in SCD Type 2.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 关于数据更新，SCD 类型 2 涉及在同一个表中更新信息。然而，对于 SCD 类型 4，你必须使用两个独立的表。SCD 类型 4 的数据更新过程与 SCD
    类型 2 遵循相同的模式。
- en: When to consider using
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用时机
- en: If the SCD Type 2 becomes too large and starts affecting the speed of queries,
    it may be worth considering switching to SCD Type 4\. Additionally, if you notice
    that the dimension table is updated frequently, SCD Type 4 may be a better choice
    to track the complete history accurately.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 SCD 类型 2 变得过大并开始影响查询速度，可能值得考虑切换到 SCD 类型 4。此外，如果你注意到维度表更新频繁，SCD 类型 4 可能是一个更好的选择，以准确跟踪完整的历史记录。
- en: The following SCD type 5,6,7 are all hybrid approaches
  id: totrans-90
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 以下 SCD 类型 5、6、7 都是混合方法
- en: SCD Type 5 — Type 4 Mini-Dimension + Type 1 **Outrigger**
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SCD 类型 5 — 类型 4 小维度 + 类型 1 **附加表**
- en: Overview
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概述
- en: SCD Type 5 is an enhancement to SCD Type 4 that incorporates elements of Type
    1\. It allows the current view of a dimension to be embedded into another dimension.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: SCD 类型 5 是对 SCD 类型 4 的一种增强，它融合了类型 1 的元素。它允许将一个维度的当前视图嵌入到另一个维度中。
- en: SCD Type 5 created a snowflake schema and kept the current view as an addon
    dimension. However, for any BI tool or presentation layer, it's better to collapse
    those two dimensions into one so it's less confusing.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: SCD 类型 5 创建了一个雪花模式，并将当前视图保留为附加维度。然而，对于任何 BI 工具或展示层，将这两个维度合并为一个更好，以减少混淆。
- en: For example, we'd want to embed our company dimension into the employee table
    and link to employer_key. The Current_Company_D is the current view. As we discussed
    in SCD Type 4, it was referred to by employer_key as a foreign key.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们希望将公司的维度嵌入到员工表中，并链接到 employer_key。Current_Company_D 是当前视图。如在 SCD 类型 4 中讨论的那样，它通过
    employer_key 作为外键引用。
- en: It will function like SCD Type 1 if you need to make updates. This means we
    must overwrite the employer_key with the new reference to the current company
    ID. To avoid any confusion with historical data as part of SCD Type 4, it is best
    to prefix the current table with "Current_."
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要进行更新，它将像 SCD 类型 1 一样工作。这意味着我们必须用新的当前公司 ID 参考覆盖 employer_key。为了避免与 SCD 类型
    4 的历史数据混淆，最好将当前表前缀设置为 "Current_"。
- en: '![](../Images/8fdd0d4276cbe664511f8013bffcec68.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8fdd0d4276cbe664511f8013bffcec68.png)'
- en: SCD Type 5 | Image By Author
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: SCD 类型 5 | 作者图片
- en: Implementation
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实现
- en: Maintaining SCD Type 5 at the ETL layer can be a complex task. It requires significant
    effort to combine with SCD Type 4 and Type 1\. In addition, it is crucial to ensure
    proper reference and perform accurate lookups.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在 ETL 层维护 SCD 类型 5 可能是一项复杂的任务。这需要大量的工作来与 SCD 类型 4 和类型 1 结合。此外，确保适当的引用和准确的查找非常重要。
- en: 'The three tables must be consistent and implemented when updates occur: the
    primary table, the current view table, and the historical table.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 三个表必须一致并在更新时进行实现：主表、当前视图表和历史表。
- en: When to consider using
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用时机
- en: SCD Type 5 has been usually less discussed compared with other SCD types. The
    level of effort to manage SCD type 5 at ETL is significant. The situation to leverage
    SCD type 5 is if the update velocity increases rapidly on the current view, it
    becomes hard to keep track of all the changes with only the reference key change.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他 SCD 类型相比，SCD Type 5 通常讨论较少。管理 SCD Type 5 的 ETL 工作量很大。当当前视图的更新速度迅速增加时，单靠引用键变更很难跟踪所有变化，这时可以考虑使用
    SCD Type 5。
- en: SCD Type 6— Blended SCD 1 + SCD 2 +SCD 3
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SCD Type 6— 混合 SCD 1 + SCD 2 + SCD 3
- en: Overview
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概述
- en: SCD Type 6 is how the type comes from blending SCD 1 + SCD 2 + SCD 3\. This
    might be too lengthy initially, but it suits the time when you need clarification
    on the potential change in the future. Ralph Kimball said SCD type 6 is "Unpredictable
    Changes with Single-Version Overlay."
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: SCD Type 6 是将 SCD 1 + SCD 2 + SCD 3 混合而来的。这一过程初看可能比较冗长，但当你需要澄清未来潜在变化时，它非常适用。拉尔夫·金博尔（Ralph
    Kimball）说 SCD Type 6 是“一版本覆盖的不可预测变化”。
- en: Let's continue to use the example to illustrate how SCD type 6 works.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续使用示例来说明 SCD Type 6 的工作原理。
- en: '![](../Images/fce39c4f2ce90417f03c80c33fb8d465.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fce39c4f2ce90417f03c80c33fb8d465.png)'
- en: SCD Type 6 | Image By Author
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: SCD Type 6 | 作者提供的图片
- en: 'To split SCD Type 6 into individual types, we can breakdown them by checking
    the following:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 要将 SCD Type 6 拆分为各个类型，我们可以通过检查以下内容来实现：
- en: 'SCD Type 1: we overwrite the current state and current city for all the rows
    for the specific ID'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SCD Type 1：我们为特定 ID 的所有行覆盖当前状态和当前城市。
- en: 'SCD Type 2: when new changes happened, we created a second row to track the
    evolution and history, also flipped the current row flag and effective date'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SCD Type 2：当发生新变化时，我们创建第二行以跟踪演变和历史，并且翻转当前行标志和有效日期。
- en: 'SCD Type 3: we also add the history state and history city fields, so we know
    the past values are'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SCD Type 3：我们还添加了历史状态和历史城市字段，以便我们知道过去的值是什么。
- en: Implementation
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实施
- en: SCD Type 6 is a combination of SCD Type 1 to 3\. The implementation detail can
    refer to the previous implementation above
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: SCD Type 6 是 SCD Type 1 到 3 的组合。实施细节可以参考上述之前的实施方案。
- en: When to consider using
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用时机
- en: SCD Type 6 has a wealthy context and can perform queries relatively quickly.
    Given it is a hybrid SCD approach, it has all the features within a single view,
    and it might be appealing to you at first.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: SCD Type 6 拥有丰富的上下文，并且可以相对快速地执行查询。由于它是一种混合的 SCD 方法，所有功能都包含在一个视图中，初看时可能会吸引你。
- en: However, SCD Type 6 increases the dimension by rows and columns to grow exponentially
    than the users expected. In those cases, finding a balance between flexibility
    and richness is crucial, and conducting the business interview and alignment is
    critical.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，SCD Type 6 增加了维度的行和列，导致增长速度远超用户的预期。在这些情况下，找到灵活性与丰富性之间的平衡至关重要，进行业务访谈和对齐也非常关键。
- en: When you want to showcase how information is presented and demonstrate various
    SCD types in one view, SCD Type 6 is an excellent choice for a POC.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 当你想展示信息的呈现方式并在一个视图中展示各种 SCD 类型时，SCD Type 6 是一个出色的 POC 选择。
- en: SCD Type 7 — Rethink Type 6 By Logically Splitting
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SCD Type 7 — 通过逻辑拆分重新思考 Type 6
- en: Overview
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概述
- en: 'The SCD Type 7 is a variant of the SCD Type 6, also called the "Dual Type 1
    and Type 2 Dimensions." In SCD Type 7, we divide one SCD Type 6 dimension table
    into two different tables: the historical and current views. We use dual foreign
    keys to refer to these tables in the fact table.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: SCD Type 7 是 SCD Type 6 的一种变体，也称为“Dual Type 1 and Type 2 Dimensions”。在 SCD Type
    7 中，我们将一个 SCD Type 6 维度表分成两个不同的表：历史视图和当前视图。我们在事实表中使用双重外键来引用这些表。
- en: '![](../Images/55e3abd62f58299f05e024d88247502d.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/55e3abd62f58299f05e024d88247502d.png)'
- en: SCD Type 7 | Image By Author
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: SCD Type 7 | 作者提供的图片
- en: One advantage of utilizing SCD Type 7 is that it enables us to maintain separate
    keys for historical and current tables, preserving their respective histories.
    This eliminates the need for binding the current company table to the same surrogate
    keys as the historical one.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 SCD Type 7 的一个优点是它允许我们为历史和当前表保持独立的键，保留各自的历史。这消除了将当前公司表绑定到与历史表相同的代理键的需要。
- en: Implementation
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实施
- en: Based on the current view, SCD type 7 requires less ETL effort as it is a derived
    view from the historical table. Once you have the SCD Type 2 table, the only remaining
    task is to create the current view table and connect the key to the fact table.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 基于当前视图，SCD Type 7 需要较少的 ETL 努力，因为它是从历史表中衍生出来的视图。一旦你有了 SCD Type 2 表，剩下的任务就是创建当前视图表并将键连接到事实表。
- en: When to consider using
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用时机
- en: With SCD Type 7, users can quickly access the current view and historical data
    without spending time understanding the dimensional table’s structure. Unlike
    SCD Type 2, which requires selecting an effective date or current row flag to
    view the existing data, SCD Type 7 simplifies the process by deriving the current
    view into another key within the fact table. This saves users time and effort.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 SCD 类型 7，用户可以快速访问当前视图和历史数据，而无需花费时间理解维度表的结构。与需要选择生效日期或当前行标志来查看现有数据的 SCD 类型
    2 不同，SCD 类型 7 通过在事实表中推导出另一个关键字段来简化了这一过程。这为用户节省了时间和精力。
- en: Final Thoughts
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最终思考
- en: Understanding the Slow Change Dimension (SCD) is crucial in dimensional modeling
    for data warehouses. While SCD Type 2 or Type 3 are often preferred for tracking
    history, other types of SCD can also help solve specific problems based on user
    requirements.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 理解慢变维（SCD）在数据仓库的维度建模中至关重要。虽然 SCD 类型 2 或类型 3 常用于跟踪历史，但其他类型的 SCD 也可以根据用户需求解决特定的问题。
- en: I hope that my deep dive into dimensional modeling Slow Change Dimension (SCD)
    can be helpful to you in designing and building the data warehouse.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望我对维度建模中的慢变维（SCD）的深入探讨能够对你在设计和构建数据仓库时有所帮助。
