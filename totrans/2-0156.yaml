- en: A Beginner-Friendly Introduction to MLOps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/a-beginner-friendly-introduction-to-mlops-95282f25325c](https://towardsdatascience.com/a-beginner-friendly-introduction-to-mlops-95282f25325c)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A first step to MLOps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@chimso1994?source=post_page-----95282f25325c--------------------------------)[![Chayma
    Zatout](../Images/341c45f53ddf73dc0851d547cc7cb55a.png)](https://medium.com/@chimso1994?source=post_page-----95282f25325c--------------------------------)[](https://towardsdatascience.com/?source=post_page-----95282f25325c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----95282f25325c--------------------------------)
    [Chayma Zatout](https://medium.com/@chimso1994?source=post_page-----95282f25325c--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----95282f25325c--------------------------------)
    ·9 min read·Jan 4, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d1a25fc18fe181535406d3367f668517.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Sarah Dorweiler](https://unsplash.com/@sarahdorweiler?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: I have been interested in MLOps for a while now. I first learned about it from
    machine learning engineers, and as I was a PhD student at the time, I was not
    aware of its existence. However, my curiosity was piqued and I began learning
    about it. Looking back, I regret not learning about it sooner in order to optimize
    my machine learning workflow.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, I will attempt to provide a beginner-friendly introduction
    to MLOps and explain the key concepts in a simple way. As someone who also found
    it challenging to understand at first, I understand the need for a simpler introduction
    to this topic. My hope is that after reading this article, a beginner will feel
    more comfortable reading more advanced documentation on MLOps.
  prefs: []
  type: TYPE_NORMAL
- en: '**Table of contents:**'
  prefs: []
  type: TYPE_NORMAL
- en: · [1\. Motivation towards MLOps](#b624)
  prefs: []
  type: TYPE_NORMAL
- en: · [2\. Definition](#1c5a)
  prefs: []
  type: TYPE_NORMAL
- en: · [3\. MLOps lifecycle](#4504)
  prefs: []
  type: TYPE_NORMAL
- en: · [4\. MLOps workflow](#fc3c)
  prefs: []
  type: TYPE_NORMAL
- en: ∘ [4.1\. Business Problem](#9dcc)
  prefs: []
  type: TYPE_NORMAL
- en: ∘ [4.2\. Data Engineering](#73c3)
  prefs: []
  type: TYPE_NORMAL
- en: ∘ [4.3\. ML model Engineering](#aabc)
  prefs: []
  type: TYPE_NORMAL
- en: ∘ [4.4\. Code Engineering](#b08f)
  prefs: []
  type: TYPE_NORMAL
- en: · [5\. Conclusion](#e4b0)
  prefs: []
  type: TYPE_NORMAL
- en: '**My MLOps tutorials:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Tutorial 1: A Key Start to MLOps: Exploring Its Essential Components*](/a-key-start-to-mlops-exploring-its-essential-components-27646238372d)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Tutorial 2: A Beginner-Friendly Introduction to MLOps Workflow*](/a-beginner-friendly-introduction-to-mlops-95282f25325c)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Tutorial 3: Introduction to MLOps Principles*](https://medium.com/towards-data-science/introduction-to-mlops-principles-c5d73a00aa76)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Tutorial 4: Structuring Your Machine Learning Project with MLOps in Mind*](https://medium.com/towards-data-science/structuring-your-machine-learning-project-with-mlops-in-mind-41a8d65987c9)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Tutorial 5: Version Controlling in Practice: Data, ML Model, and Code*](https://medium.com/towards-data-science/version-controlling-in-practice-data-ml-model-and-code-e13c518067dc)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Tutorial 6: Testing in Practice: Code, Data and ML Model*](/testing-in-practice-code-data-and-ml-model-cfb1ada81f6c)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Tutorial 7: Tracking in Practice: Code, Data and ML Model](/tracking-in-practice-code-data-and-ml-model-6787a881609c)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*[I will be updating this list as I publish articles on the subject]*'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Motivation towards MLOps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Due to the successes of machine learning techniques in various research fields,
    many companies have sought to incorporate them into their software systems to
    improve efficiency and solve real-world problems. However, implementing machine
    learning in production environments can be a challenging and time-consuming process
    for many companies. Additionally, once deployed, the model must be managed and
    maintained, and its performance must be monitored to ensure it is functioning
    properly. These tasks can be especially difficult in large software systems.
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, software engineers use the DevOps (Development and Operations)
    paradigm, a set of practices and tools that facilitate collaboration and communication
    between development and operations teams, to develop and manage their systems.
    This helps maintain development speed and quality. MLOps aims to adapt these DevOps
    principles for machine learning systems. With this background in mind, what is
    MLOps exactly?
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Definition
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To define MLOps, let’s begin by examining various definitions:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Definition 1:**'
  prefs: []
  type: TYPE_NORMAL
- en: “MLOps (Machine Learning Operations) is a paradigm, including aspects like best
    practices, sets of concepts, as well as a development culture when it comes to
    the end-to-end conceptualization, implementation, monitoring, deployment, and
    scalability of machine learning products.” *[1]*
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Definition 2:**'
  prefs: []
  type: TYPE_NORMAL
- en: “The extension of the DevOps methodology to include Machine Learning and Data
    Science assets as first-class citizens within the DevOps ecology” *[2]*
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Definition 3:**'
  prefs: []
  type: TYPE_NORMAL
- en: We can use the definition of Machine Learning Engineering (MLE), where MLE is
    the use of scientific principles, tools, and techniques of machine learning and
    traditional software engineering to design and build complex computing systems.
    MLE encompasses all stages from data collection, to model building, to make the
    model available for use by the product or the consumers.” (by A.Burkov) *[3].*
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Based on the previous definitions, we can understand MLOps as a set of techniques
    and practices used to design, build, and deploy machine learning models in an
    efficient, optimized, and organized manner. These techniques and practices are
    often discussed within the context of the MLOps lifecycle.
  prefs: []
  type: TYPE_NORMAL
- en: 3\. MLOps lifecycle
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](../Images/5a7c4916cf7a858f26de94c5513bc108.png)'
  prefs: []
  type: TYPE_IMG
- en: MLOps lifecycle ([source](https://ml-ops.org/content/mlops-principles)) CC BY
    4.0
  prefs: []
  type: TYPE_NORMAL
- en: 'The MLOps lifecycle consists of the steps and techniques involved in the MLOps
    paradigm, from designing and developing a machine learning model to deploying
    it in a production environment and monitoring and maintaining it over time. It
    is typically divided into three main stages:'
  prefs: []
  type: TYPE_NORMAL
- en: The first stage is the **design** process, which involves defining the business
    problem, the model’s requirements, and its intended use-case. This often involves
    creating an AI/ML canvas.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The second stage is the **model development** process that includes data and
    model engineering.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The third stage is the **operations** process that covers model deployment and
    maintenance.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is important to maintain the performance of the model over time after it
    has been deployed, so these stages are typically carried out in a cyclic manner.
    This ensures that the model is performing well and still meeting the needs defined
    in the first stage. Now that we have discussed the stages of the MLOps lifecycle,
    let’s examine the MLOps workflow, which outlines the specific tasks and activities
    that are performed at each stage of the process.
  prefs: []
  type: TYPE_NORMAL
- en: 4\. MLOps workflow
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](../Images/4e3c315df42101a29809349a654afe97.png)'
  prefs: []
  type: TYPE_IMG
- en: MLOps workflow
  prefs: []
  type: TYPE_NORMAL
- en: 'The MLOps workflow outlines the steps to follow in order to develop, deploy,
    and maintain machine learning models. In an ideal world, following the workflow
    would be sufficient: first, the business problem is understood, then the model
    is chosen, trained, and deployed. However, this is not always the case in the
    real world. At any point, it may be necessary to return to a previous step. In
    addition, after deploying the model, it must be maintained and monitored, which
    is why it is important to understand both the MLOps lifecycle and the MLOps workflow.'
  prefs: []
  type: TYPE_NORMAL
- en: 4.1\. Business Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/7a94d9f5ac1fe253d8bdf385dd988980.png)'
  prefs: []
  type: TYPE_IMG
- en: Business problem (the work flow chart, the AI canvas and the ML canvas are from
    [source](https://ml-ops.org/content/phase-zero) CC BY 4.0)
  prefs: []
  type: TYPE_NORMAL
- en: The first step in the MLOps workflow is understanding the business problem,
    which involves defining the model’s input and output, as well as the process and
    its various subtasks. To structure this process, you can use the AI (Artificial
    Intelligence) canvas or the ML (Machine Learning) canvas, which can be thought
    of as templates for organizing the MLOps workflow. The AI canvas generally provides
    a high-level structure for ML/AI implementation, while the ML canvas provides
    a high-level description and specifics of the system. You can read more about
    these canvases [here](https://ml-ops.org/content/phase-zero).
  prefs: []
  type: TYPE_NORMAL
- en: '**Let’s take an example!** Let’s say in order to improve its products, a dairy
    company is interested in gathering feedback from its consumers about it. To do
    this, sentiment analysis is needed to be performed on consumers comments about
    the products that are made on social media platforms. Machine learning techniques
    can be used to train a model to classify the sentiment of these comments as positive,
    negative, or neutral. This will allow the company to better understand its customers’
    experiences with its products and identify areas for improvement. This business
    problem description transformed into an AI canvas and/or an ML canvas for a clearer
    representation:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Prediction/ prediction task**: The AI system will analyze text input and
    predict the sentiment of the text (positive, negative, or neutral).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Judgment**: The system will use natural language processing techniques to
    understand the meaning and sentiment of the text.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Action/ decisions**: Based on the predicted sentiment, the system may take
    different actions, such as flagging negative reviews for further review or prioritizing
    positive social media posts for promotion.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Outcome**: The desired outcome is for the system to accurately classify the
    sentiment of the text input, leading to improved customer satisfaction, better
    social media engagement, or other benefits depending on the specific use case.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Training**: The system will be trained on a dataset of labeled text data,
    containing both the input text and the corresponding sentiment label.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Input/ Data sources**: The system will accept text input from a variety of
    sources, such as social media posts or customer reviews.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Output / Making predictions**: The system will analyze text input and predict
    the sentiment of the text (positive, negative, or neutral).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Feedback**: The system may incorporate feedback from users or stakeholders
    to improve its performance over time, for example by adjusting the parameters
    of the natural language processing algorithms or adding new data to the training
    dataset.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Offline evaluation**: The system will be evaluated using standard evaluation
    metrics such as precision, recall, and F1 score to ensure that it is accurately
    classifying the sentiment of the text input.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Live monitoring**: The system will be continuously monitored and updated
    as needed to ensure that it continues to perform accurately over time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 4.2\. Data **Engineering**
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/eb0feafdbeff33bad8939fa6979fdf71.png)'
  prefs: []
  type: TYPE_IMG
- en: Data engineering
  prefs: []
  type: TYPE_NORMAL
- en: After understanding the business problem at hand, the next step in the MLOps
    workflow is the data engineering process. This includes data ingestion, exploration
    and validation, data cleaning, data labeling, and data splitting.
  prefs: []
  type: TYPE_NORMAL
- en: '**Data ingestion** involves using a set of techniques to gather the data, create
    backups, protect private information, create a metadata catalog, and sample a
    test set to avoid data snooping bias.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To **explore and validate the dataset**, a set of statistics and visualization
    techniques are used.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gathered data often has noise, contains outliers, and has missing values. These
    issues can affect the next process, so the **data cleaning** step is applied to
    address them.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Data labeling** is necessary when the chosen model is based on supervised
    learning. This step can be done manually, automatically, or semi-automatically.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Data splitting** is the final step in this process and involves dividing
    the data into training, validation, and test sets.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 4.3\. ML model **Engineering**
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/1061df7ede18794545ff5f8f83bf832d.png)'
  prefs: []
  type: TYPE_IMG
- en: ML model engineering
  prefs: []
  type: TYPE_NORMAL
- en: The third step in the MLOps workflow is machine learning engineering, which
    includes model training, model evaluation, model testing, and model packaging.
  prefs: []
  type: TYPE_NORMAL
- en: '**Training models** involves feature engineering, code review and versioning,
    and hyperparameter tuning. You may wonder why feature engineering is included
    in this step rather than the previous one. The reason is that many types and architectures
    of models are tested in this step, so the feature engineering is often not the
    same for all the models. It’s worth noting that several models are trained and
    tested before selecting the most appropriate model in this step.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Model evaluation** involves validating the model to ensure that it meets
    the business objectives described in the business problem step.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the **model testing** step, the model acceptance test is performed using
    the initial test set.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once the model is validated and tested, the final step is to **export the model**
    in a specific format so it can be served to the business application.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**4.4\. Code Engineering**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/5fef6bbf3624758abe9cce4d1bed8474.png)'
  prefs: []
  type: TYPE_IMG
- en: Code engineering
  prefs: []
  type: TYPE_NORMAL
- en: 'In this step, the model is ready to be deployed to production. Model deployment
    consists of three steps: model serving, performance monitoring, and performance
    logging.'
  prefs: []
  type: TYPE_NORMAL
- en: To serve a model, the **serving** pattern and deployment strategy must be considered.
    The serving pattern refers to how the model is integrated into the software, such
    as integrating it as a service, as a dependency, using precomputed serving, on-demand
    serving, or hybrid serving. The deployment strategy refers to the method used
    to wrap the model, such as deploying it as a Docker container or as serverless
    functions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Monitoring the model** involves observing the overall behavior of the model,
    such as the deviation of its predictions from previous model performance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Performance logging** involves saving the results of the model’s predictions
    in a log record.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 5\. Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this article, we provided a brief introduction to MLOps. We discussed the
    need for MLOps, presented various definitions, explained the MLOps lifecycle,
    and described the MLOps workflow. If you would like to learn more about MLOps,
    I recommend [ml-ops.org](https://ml-ops.org/) for additional information.
  prefs: []
  type: TYPE_NORMAL
- en: This is the first article on MLOps and certainly not the last! I will be writing
    more tutorials on MLOps and its various technologies, with examples, so stay tuned.
    If you have any questions or suggestions, feel free to leave me a comment below.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[1] Kreuzberger, D., Kühl, N., & Hirschl, S. Machine learning operations (mlops):
    Overview, definition, and architecture, 2022\. doi: 10.48550\. *arXiv preprint
    arXiv.2205.02302*.'
  prefs: []
  type: TYPE_NORMAL
- en: '[2] [MLOps Roadmap 2020](https://github.com/cdfoundation/sig-mlops/blob/main/roadmap/2020/MLOpsRoadmap2020.md)'
  prefs: []
  type: TYPE_NORMAL
- en: '[3] [https://ml-ops.org/content/motivation#mlops-definition](https://ml-ops.org/content/motivation#mlops-definition)'
  prefs: []
  type: TYPE_NORMAL
- en: Image credits
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: All images and figures in this article whose source is not mentioned in the
    caption are by the author.
  prefs: []
  type: TYPE_NORMAL
