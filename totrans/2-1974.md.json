["```py\nRegardless there is no way …\nClearly the writer meant …\n```", "```py\nthe most frequent error i make is …\n```", "```py\nAn fyi in case you are interested.\n```", "```py\nAn FYI in case you are interested.\n```", "```py\n… within matter of minutes …           ⇒ \n… within a matter of minutes …\n\n… capitalize first letter in word …    ⇒ \n… capitalize the first letter in the word …\n```", "```py\nHe’s an all star runner     ⇒ \nHe’s an all-star runner\n\nChocolate covered truffles  ⇒ \nChocolate-covered truffles\n```", "```py\nMy co-worker has a four-year old child. ⇒ \nMy co-worker has a four-year-old child\n\nWe sat on the plane for deicing for an hour. ⇒ \nWe sat on the plane for de-icing for an hour.\n```", "```py\nThis car is a finely-tuned machine. ⇒ \nThis car is a finely tuned machine.\n\nShe attends Ohio-State University.  ⇒ \nShe attends Ohio State University.\n\nHeart-broken                        ⇒ \nHeartbroken\n```", "```py\nAnd were I to not be using Grammarly, …\n```", "```py\nAnd were I not using Grammarly\n```", "```py\nBelow is the first example I want share.\nIts Grammarly that …\n```", "```py\nShe ran in the bedroom from the living room.\n```", "```py\nIs that the best song you ever heard of?\n```", "```py\nFor linear classification problems one can use linear neurons. \nFor classification problems that are not linearly separable, \nreplace linear by sigmoidal.\n```", "```py\nNum Words           1   2   3   …   8 … 30\nNumber of Sentences 2   4   10  … 500 … 0\n```", "```py\nHe’s an all star runner     ⇒ \nHe’s an all-star runner\n\nChocolate covered truffles  ⇒ \nChocolate-covered truffles\n\nMy co-worker has a four-year old child. ⇒ \nMy co-worker has a four-year-old child\n\nWe sat on the plane for deicing for an hour. ⇒ \nWe sat on the plane for de-icing for an hour.\n\nThis car is a finely-tuned machine. ⇒ \nThis car is a finely tuned machine.\nShe attends Ohio-State University. ⇒ \nShe attends Ohio State University.\nHeart-broken ⇒ Heartbroken.\n```", "```py\nstyle_map[‘heartbroken’][‘heart-broken’] += 1\n```", "```py\nstyle_map[‘heartbroken’][‘heartbroken’] += 1\n```", "```py\nstyle_map[‘boathouse’][‘boat house’] += 1\n```", "```py\nA very-happy dog\n```", "```py\nif the current word w is immediately followed by a hyphen:\n  hyphenation_prefix_map[w][1] += 1\nelse:\n  hyphenation_prefix_map[w][0] += 1\n```", "```py\nHyphenate all words beginning with the prefixes self-, ex-, and all-\n```", "```py\nShe is now self-employed.\nMy ex-classmate took my notes.\nWe are going to an all-inclusive resort.\n```", "```py\nif word starts with self\n  self is followed by a hyphen\n```", "```py\nMy co-worker has a four-year-old child.\nTheir child is four years old.\n```", "```py\nstyle_map[<num>-year-old][<num>-year-old] += 1\n```", "```py\nThere are fifty-seven kids in that grade.\n```", "```py\nif two adjacent tokens are spelled out numbers with a space in between them\n  insert a hyphen between the two\n```", "```py\nThey need two-thirds of the vote to win.\n```", "```py\nFYI ⇒ fyi ⇒ style_map[fyi][FYI] += 1\n```", "```py\nIt’s ⇒ its ⇒ style_map[its][It’s] += 1\n```", "```py\nRegardless there is no way …\nClearly the writer meant …\n```", "```py\nIF X THEN Y\n```"]