- en: How To Automatically Import And Combine Multiple Files In R
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何在 R 中自动导入和合并多个文件
- en: 原文：[https://towardsdatascience.com/how-to-automatically-import-and-combine-multiple-files-in-r-30a77c0a7732](https://towardsdatascience.com/how-to-automatically-import-and-combine-multiple-files-in-r-30a77c0a7732)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-automatically-import-and-combine-multiple-files-in-r-30a77c0a7732](https://towardsdatascience.com/how-to-automatically-import-and-combine-multiple-files-in-r-30a77c0a7732)
- en: Stop wasting your time manually importing multiple files
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 不要再浪费时间手动导入多个文件
- en: '[](https://alanarister.medium.com/?source=post_page-----30a77c0a7732--------------------------------)[![Alana
    Rister, Ph.D.](../Images/6e7ef7052a0d0459b8e4d9ab2c21a486.png)](https://alanarister.medium.com/?source=post_page-----30a77c0a7732--------------------------------)[](https://towardsdatascience.com/?source=post_page-----30a77c0a7732--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----30a77c0a7732--------------------------------)
    [Alana Rister, Ph.D.](https://alanarister.medium.com/?source=post_page-----30a77c0a7732--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://alanarister.medium.com/?source=post_page-----30a77c0a7732--------------------------------)[![Alana
    Rister, Ph.D.](../Images/6e7ef7052a0d0459b8e4d9ab2c21a486.png)](https://alanarister.medium.com/?source=post_page-----30a77c0a7732--------------------------------)[](https://towardsdatascience.com/?source=post_page-----30a77c0a7732--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----30a77c0a7732--------------------------------)
    [Alana Rister, Ph.D.](https://alanarister.medium.com/?source=post_page-----30a77c0a7732--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----30a77c0a7732--------------------------------)
    ·6 min read·Sep 20, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----30a77c0a7732--------------------------------)
    ·6 分钟阅读·2023年9月20日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/4faf273a525b691b00abfba4f6517fd3.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4faf273a525b691b00abfba4f6517fd3.png)'
- en: Photo by [ThisisEngineering RAEng](https://unsplash.com/@thisisengineering?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [ThisisEngineering RAEng](https://unsplash.com/@thisisengineering?utm_source=medium&utm_medium=referral)
    提供，[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: In my data scientist job, I regularly have to import several different files
    that contain the same type of information due to export constraints in different
    software. If you are in a similar situation, below is a clear and simple way to
    be able to automatically import your files as individual data frames or combine
    them into a single data frame.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的数据科学家工作中，由于不同软件的导出限制，我经常需要导入几个包含相同类型信息的不同文件。如果你也有类似的情况，下面是一个清晰简单的方法，能够自动将文件导入为独立的数据框或将它们合并成一个数据框。
- en: Prepare Your Files
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备你的文件
- en: 'Before we get started with our code, we first must prepare our files. We need
    to have a way to programmatically choose the files that we want to import into
    R. While you could choose any way to distinguish these files, here are two of
    the easiest ways:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始编写代码之前，我们首先需要准备好文件。我们需要有一种方法来程序化选择我们想导入到 R 中的文件。虽然你可以选择任何方法来区分这些文件，下面是两种最简单的方法：
- en: Create a unique prefix on all of the files that you want to import at once.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为所有你想一次导入的文件创建一个独特的前缀。
- en: Create a separate folder in your working directory and only include those files
    in that folder.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的工作目录中创建一个单独的文件夹，只包含那些文件。
- en: For example, if I had a set of Excel files called “SA#.xlsx”. If I had no other
    similar files that started with SA, then I already have my prefix. If there are
    other files in my folder that start with SA such as “SAT.xlsx”, I can easily create
    a folder and I will name it “SA”. Then, I will only include the files I want to
    import as SA into that folder.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我有一组名为“SA#.xlsx”的 Excel 文件。如果我没有其他以 SA 开头的类似文件，那么我已经有了我的前缀。如果我的文件夹中还有其他以
    SA 开头的文件，比如“SAT.xlsx”，我可以很容易地创建一个文件夹，命名为“SA”。然后，我将仅将我想导入的 SA 文件放入该文件夹中。
- en: Create Your File List
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建你的文件列表
- en: Once we have a programmatic way to identify our files, we need to create a list
    of all of the file names. We can use the R function list.files() to achieve this.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们有了程序化识别文件的方式，我们需要创建一个所有文件名的列表。我们可以使用 R 函数 list.files() 来实现这一点。
- en: File list with prefix
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 带前缀的文件列表
- en: If you choose to add a prefix to your file names, we will use the pattern parameter
    of list.files() to select the specific files that we want.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你选择为文件名添加前缀，我们将使用 list.files() 的模式参数来选择我们想要的特定文件。
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The pattern takes in a regular expression. Therefore, we can use the “^” symbol
    to represent the beginning of the string. This ensures that any other file names
    that include “SA” within the name but not at the beginning will not be included
    in this set of names. **Note: This will only pull files from your working directory.
    You can change the path to pull files from a different directory.**'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 该模式接受一个正则表达式。因此，我们可以使用“^”符号表示字符串的开头。这确保了任何其他文件名中包含“SA”但不在开头的文件将不会被包含在这个名字集合中。**注意：这只会从你的工作目录中提取文件。你可以更改路径以从不同的目录中提取文件。**
- en: File list in a folder
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文件夹中的文件列表
- en: If you instead choose to add your files to a folder, we will use the path parameter
    to tell R where to pull our files from.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你选择将文件添加到一个文件夹中，我们将使用路径参数来告诉 R 从哪里提取我们的文件。
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The “.” symbol points to the current working directory. Then, it will look for
    a folder with “SA” and include all the file names from that folder.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: “.”符号指向当前工作目录。然后，它会查找一个名为“SA”的文件夹，并包括来自该文件夹的所有文件名。
- en: Importing Your Files
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入你的文件
- en: Now that we have a list, we can run a for loop over our list to import all of
    our files into our current environment. If we want to include each file as its
    own variable, we will first need to create the file name, then import the file,
    then assign the file dynamically to the variable name. While this process is similar
    for both prefix files and folder-imported files, there is a small difference when
    importing the files.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了一个列表，我们可以对这个列表运行一个循环，将所有文件导入到当前环境中。如果我们想将每个文件作为自己的变量包含，我们将首先需要创建文件名，然后导入文件，再将文件动态分配给变量名。虽然这个过程对于前缀文件和文件夹导入的文件是相似的，但在导入文件时有一个小的区别。
- en: Import files
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入文件
- en: Let's first cover the difference in the reading of the file into the R environment
    as this will be the only change needed for the two different methods above.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先讨论将文件读取到 R 环境中的区别，因为这将是上述两种不同方法所需的唯一变化。
- en: If you used the prefix method, the files exist in your working directory. Therefore,
    you do not need to specify the path of the file. However, if you added them to
    a folder, they are no longer in your working directory. Therefore, we need to
    dynamically construct the file path for these files.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用了前缀方法，文件存在于你的工作目录中。因此，你无需指定文件的路径。然而，如果你将它们添加到一个文件夹中，它们就不再在你的工作目录中。因此，我们需要动态构建这些文件的文件路径。
- en: To create this formula, I am going to use the variable “file” to represent the
    file name in our *filelist* variable. This will allow me to directly use this
    code in the for loop below.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建这个公式，我将使用变量“file”来表示我们*filelist*变量中的文件名。这将允许我在下面的循环中直接使用这段代码。
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: For files within a folder, we have to add the folder path to the file name every
    time we import a file. Luckily, R has the paste command that allows us to add
    the folder path dynamically to each of the file names. Since paste automatically
    creates the separator as a space, we have to overwrite the separator (sep) to
    be a blank space, which we do by adding quotations.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 对于文件夹中的文件，每次导入文件时，我们必须将文件夹路径添加到文件名中。幸运的是，R 有一个 paste 命令，允许我们动态地将文件夹路径添加到每个文件名中。由于
    paste 自动创建的分隔符是空格，我们必须将分隔符（sep）重写为空白，这通过添加引号来实现。
- en: Automatically Importing Files Individually
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动逐个导入文件
- en: From now on, I will just use the functions assuming the files exist in the working
    directory for simplicity. Now, we need to create a for loop that will allow the
    files to automatically be imported and set to a dynamic variable.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 从现在开始，为了简单起见，我将假设文件存在于工作目录中。现在，我们需要创建一个循环，允许文件自动导入并设置为动态变量。
- en: Creating the variable name
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建变量名
- en: First, we need to create our variable dynamically. We will use the file name
    to create the variable; however, we will want to remove the file extension from
    the file name. Again, I am using “file” as a placeholder for the file names. You
    can use this same idea if you want to remove the prefix from the file name as
    well.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要动态创建我们的变量。我们将使用文件名来创建变量；然而，我们需要从文件名中移除文件扩展名。同样，我使用“file”作为文件名的占位符。如果你想从文件名中移除前缀，也可以使用相同的思路。
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Assigning the variable
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分配变量
- en: Since we have already created our import code above, let's create the code to
    assign the variable. While it is easier to assign a variable with a “=” or “<-”
    symbol, we cannot use this with dynamic variable names. Instead, we will use the
    *assign* function in R.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已经创建了导入代码，让我们创建代码来分配变量。虽然使用“=”或“<-”符号分配变量更容易，但我们不能用这些符号来处理动态变量名。相反，我们将使用
    R 中的 *assign* 函数。
- en: '[PRE4]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Creating the for loop
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建 for 循环
- en: We finally have all the components to create a for loop to automatically import
    all of our files. All we need to do is add the above code within a for loop that
    will cycle through our *filelist* variable.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们终于有了所有的组件来创建一个 for 循环，以自动导入所有的文件。我们需要做的就是将上述代码添加到一个将循环遍历我们*filelist*变量的 for
    循环中。
- en: '[PRE5]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Now, you can add your files easily, but what if you wanted to simply add all
    these files into one combined file?
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以轻松添加你的文件，但如果你想简单地将所有这些文件合并成一个文件呢？
- en: Automatically Import And Combine Files
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动导入和合并文件
- en: There are many times when you may have multiple files that are simple segments
    of the same information. You really want to combine them and work with a single
    data frame. Therefore, we will now create a for loop that only outputs a single
    data frame with all the rows combined. For this, instead of assigning each file
    to its own variable, we will use the rbind() function to bind the rows to a single
    data frame.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 许多时候，你可能有多个文件，它们是相同信息的简单片段。你真的想将它们合并并使用单一的数据框。因此，我们现在将创建一个 for 循环，仅输出一个将所有行合并到一起的数据框。为此，我们将使用
    rbind() 函数将行绑定到单一的数据框中。
- en: First, we need to create an empty data frame that the new files will be added
    to. Then, we can use the for loop to import and bind them to this data frame.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要创建一个空的数据框，以便将新文件添加到其中。然后，我们可以使用 for 循环将它们导入并绑定到这个数据框中。
- en: '[PRE6]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Running the example code would generate a single data frame named “SA” with
    all the data from the files within the *filelist*.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 运行示例代码将生成一个名为“SA”的数据框，其中包含*filelist*中所有文件的数据。
- en: Creating a file column
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建文件列
- en: There may be times when the specific file the data comes from contains important
    information. For example, someone may give you data that has a certain date range
    or specific meeting information that is important to be able to analyze the data.
    If you just combine the data inside each file, you will not know which file the
    data came from.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，数据来自的特定文件包含重要信息。例如，有人可能会给你一些数据，这些数据有特定的日期范围或重要的会议信息，这对数据分析很重要。如果你只是简单地合并每个文件中的数据，你将不知道这些数据来自哪个文件。
- en: Therefore, we want to create a dynamic column that will add the file information
    for each file before we bind the data. We will use the same name variable we created
    before to capture the file name information and add it as a column in the dataset.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们想要创建一个动态列，在绑定数据之前添加每个文件的信息。我们将使用之前创建的相同名称变量来捕获文件名信息，并将其作为数据集中的一列。
- en: '[PRE7]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Now, you can use the for loop above to easily import and combine multiple files
    without losing the information for the file that they came from.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以使用上述的 for 循环轻松导入和合并多个文件，而不会丢失源文件的信息。
- en: Overall, the ability to automatically import files will save you large amounts
    of coding time and instead, you can allow the computer to use computational time
    to automatically manage multiple files.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，自动导入文件的能力将节省大量编码时间，你可以让计算机利用计算时间来自动管理多个文件。
