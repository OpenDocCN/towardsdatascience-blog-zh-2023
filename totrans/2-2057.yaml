- en: 'AI Coding Tools have arrived: how Product Engineering teams will use them'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/the-proliferation-of-generative-ai-coding-tools-and-how-product-engineering-teams-will-use-them-48787ebfcaaa](https://towardsdatascience.com/the-proliferation-of-generative-ai-coding-tools-and-how-product-engineering-teams-will-use-them-48787ebfcaaa)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/c39ca7daba5eae128001d42abfa4127f.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
- en: Image by author using Midjourney
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: How Generative AI will impact product engineering teams — Part 2
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://mark-ridley.medium.com/?source=post_page-----48787ebfcaaa--------------------------------)[![Mark
    Ridley](../Images/b7331b7e94c2500040bb55b462d0f6b6.png)](https://mark-ridley.medium.com/?source=post_page-----48787ebfcaaa--------------------------------)[](https://towardsdatascience.com/?source=post_page-----48787ebfcaaa--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----48787ebfcaaa--------------------------------)
    [Mark Ridley](https://mark-ridley.medium.com/?source=post_page-----48787ebfcaaa--------------------------------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----48787ebfcaaa--------------------------------)
    ·10 min read·Jul 26, 2023
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: '*This is the second part of a six part series investigating how generative
    AI productivity tools aimed at developers, like Github Copilot, ChatGPT and Amazon
    CodeWhisperer might impact the structure of entire product engineering teams.*'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: 'In [Part 1, we explored](https://mark-ridley.medium.com/how-generative-ai-will-impact-product-engineering-teams-83a5eaa8fc60):'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: The landscape of product engineering and the possibility that teams will need
    fewer human engineers with the rise of Generative AI tools.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The traditional 5:1 Ratio in tech teams: how roughly five engineers for every
    product manager is common across the industry.'
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The roles of product managers and engineers in current product development processes
    and how these roles might shift with AI advancements.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How past research has given flawed predictions on which professions will be
    the least impacted by AI, and how LLMs have upended these predictions, particularly
    for the tech and creative industries.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The explosion of AI coding tools
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Automation has been a part of software engineering for almost as long as there
    has been software engineering. [Eric Raymond](http://www.catb.org/~esr/)’s 2003
    landmark essay, [The Art of Unix Programming](https://en.wikipedia.org/wiki/The_Art_of_Unix_Programming)
    reflected on 17 design rules for software engineers, including the [Rule of Generation](http://www.catb.org/esr/writings/taoup/html/ch01s06.html#id2878742):
    “*Avoid hand-hacking; write programs to write programs when you can*”.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: 'Raymond’s advice is still relevant even 20 years after it was published:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: “Human beings are notoriously bad at sweating the details. Accordingly, any
    kind of hand-hacking of programs is a rich source of delays and errors. The simpler
    and more abstracted your program specification can be, the more likely it is that
    the human designer will have gotten it right. Generated code (at every level)
    is almost always cheaper and more reliable than hand-hacked.”
  id: totrans-17
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “人类在关注细节方面 notoriously 表现糟糕。因此，任何形式的手动编程都是延迟和错误的丰富来源。你的程序规范越简单和抽象，人类设计者弄对的可能性就越大。生成的代码（每一层）几乎总是比手动编写的更便宜、更可靠。”
- en: Since Raymond wrote those words we have developed automated test tools, [linters](https://owasp.org/www-project-devsecops-guideline/latest/01b-Linting-Code)
    (tools which automatically check the code we write), auto-completion for our development
    environments (like a spell-checker, but for code) and even frameworks (like React
    and Django) which automate the creation of a large amount of basic, boilerplate
    code for generic applications like websites and mobile applications. For the most
    part developers have reveled in automation, while always being quietly confident
    that our experience, skill and creative uniqueness would make us hard to replace.
    It didn’t help that McKinsey and their peers were [also telling us](https://www.mckinsey.com/featured-insights/future-of-work/jobs-lost-jobs-gained-what-the-future-of-work-will-mean-for-jobs-skills-and-wages)
    that we’d be safe from the clutches of AI automation.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 自Raymond写下这些话以来，我们已经开发出了自动化测试工具，[linters](https://owasp.org/www-project-devsecops-guideline/latest/01b-Linting-Code)（自动检查我们编写的代码的工具）、开发环境的自动补全（像拼写检查器，但用于代码），甚至框架（如React和Django），它们自动生成大量的基础代码，用于网站和移动应用等通用应用程序。在大多数情况下，开发者对自动化赞不绝口，同时始终默默相信我们的经验、技能和创意独特性会让我们难以被替代。麦肯锡及其同行[也告诉我们](https://www.mckinsey.com/featured-insights/future-of-work/jobs-lost-jobs-gained-what-the-future-of-work-will-mean-for-jobs-skills-and-wages)我们会从AI自动化的魔爪中安全逃脱，这一点也没有帮助。
- en: The most recent additions to the code automation space are a group of tools
    that offer to [sit alongside developers as an equal](https://github.com/features/preview/copilot-x),
    and look eminently capable of progressing far further than we had previously imagined.
    Much like Raymond’s 17th Principle, it’s possible that these tools will write
    complex software better than humans.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 代码自动化领域最近的补充是一组工具，它们承诺[与开发者平等地并肩工作](https://github.com/features/preview/copilot-x)，看起来非常有能力远超我们之前的想象。就像Raymond的第17条原则一样，这些工具可能会比人类更擅长编写复杂的软件。
- en: Probably the *prima donna* of developer assistance tools as I write is [Github
    Copilot](https://github.com/features/copilot), which unblinkingly markets itself
    as a *pair programmer* (the term given to a human coding buddy, who sits alongside
    you and co-authors your code). Copilot was released to developers in June 2022,
    and its younger and more charming sibling, *Copilot X*, was announced [in March
    this year](https://github.blog/2023-03-22-github-copilot-x-the-ai-powered-developer-experience/).
    Github has made what appear to be [entirely reasonable claims](https://github.blog/2022-09-07-research-quantifying-github-copilots-impact-on-developer-productivity-and-happiness/)
    that Copilot increases developer productivity, with their study reporting that
    the tool reduces the time to complete engineering tasks by up to 55%.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我写作时，*开发者辅助工具*中的**头号明星**可能是[Github Copilot](https://github.com/features/copilot)，它毫不含糊地自称为*配对程序员*（即那个坐在你旁边共同编写代码的编程伙伴）。Copilot于2022年6月发布给开发者，而它那更年轻、更迷人的兄弟，*Copilot
    X*，则在[今年3月](https://github.blog/2023-03-22-github-copilot-x-the-ai-powered-developer-experience/)宣布。Github声称Copilot能够提高开发者生产力，并且他们的研究报告显示该工具将完成工程任务的时间缩短了多达55%，这些声明看起来[完全合理](https://github.blog/2022-09-07-research-quantifying-github-copilots-impact-on-developer-productivity-and-happiness/)。
- en: Github (don’t forget that this is a company owned by Microsoft, who also own
    a [rumoured 45% stake in ChatGPT makers, OpenAI](https://www.theverge.com/2023/1/23/23567448/microsoft-openai-partnership-extension-ai))
    isn’t alone in this space. [Amazon CodeWhisperer](https://aws.amazon.com/codewhisperer/)
    was also announced last year, with [similar claims of a 57% increase in developer
    productivity](https://devclass.com/2023/04/13/aws-codewhisperer-ai-coder-now-generally-available-remains-free-for-individual-developers/).
    Like Copilot, CodeWhisperer is accessible in the engineer’s development environment
    (IDE) and can correct, comment, explain and write code.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a6d89844b6e5c3a709e43c1f9f569cd3.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
- en: IDEs have long been able to provide code autocompletion, but with Copilot X
    it can write entire sections of code with little context
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: In a fascinating article on how the [Github team developed and improved Copilot](https://github.blog/2023-05-17-inside-github-working-with-the-llms-behind-github-copilot/),
    [John Berryman](https://github.com/jnbrymn), a senior researcher at Github explained
    that it wasn’t only the code directly in front of the developer that was being
    used to prompt the AI models. Berryman explained,
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: “The secret is that we don’t just have to provide the model with the original
    file that the GitHub Copilot user is currently editing; instead we look for additional
    pieces of context inside the IDE that can hint the model towards better completions.”
  id: totrans-25
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: It’s this wider context that these developer tools can exploit — the IDE, the
    files available on the developer’s machine, the code repositories in git and even,
    potentially, the documentation for the application — that make them so powerful.
    This broad context lowers the skill levels required for developers to ‘[*prompt
    engineer*](https://en.wikipedia.org/wiki/Prompt_engineering)’ solutions from the
    AI. Examples to improve prompts are available to the AI tools from directly within
    the environment they operate, and also from the [billions of lines](https://aws.amazon.com/codewhisperer/features/)
    of pre-existing code they were trained on. This gives the LLM a good chance of
    being able to create not just an appropriate output, but one that exceeds the
    capabilities of an average developer.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: 'With Copilot X, the code interface itself is no longer the only palette the
    AI has to work with, and it’s also no longer restricted to just auto-generating
    code. A user can highlight code in their development environment, and simply ask
    for an explanation of what the code is doing:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/558411f94339e06562ed43812a252aab.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
- en: Copilot X expands the reach of the coding assistant into a ChatGPT-like chat
    environment
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: While Copilot and Codewhisperer are specific implementations of large language
    models that are enhanced for developers, even the general purpose ChatGPT turns
    out to be pretty handy as an engineering companion.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: I’ve been using both the GPT-3.5 and GPT-4 models for a number of months across
    a wide variety of tasks, and continue to be bewildered by its capability — both
    with code and in any number of other disciplines. Recently, I was dusting off
    my rusty Python skills to play with the OpenAI APIs and it seemed churlish not
    to ask ChatGPT for help.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经使用了 GPT-3.5 和 GPT-4 模型好几个月，涉及各种任务，并继续对它的能力感到困惑——无论是代码还是其他多个学科。最近，我在重新使用生疏的
    Python 技能来玩弄 OpenAI 的 API 时，似乎有些不厚道地没有向 ChatGPT 请求帮助。
- en: As you’d expect by now, the general purpose chatbot was able to give me some
    entirely reasonable instructions to get set up that reflected the [online documentation](https://platform.openai.com/docs/quickstart/build-your-application),
    but with the added benefit that I could walk through and expand the chat to other
    topics (like why Python never works properly on Windows whenever I install it).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你现在所预期的，通用聊天机器人能够给我一些完全合理的设置说明，这些说明反映了[在线文档](https://platform.openai.com/docs/quickstart/build-your-application)，但额外的好处是我可以通过对话逐步展开并扩展到其他话题（比如为什么
    Python 在我每次安装时总是在 Windows 上无法正常工作）。
- en: '![](../Images/b15df0c13d1943c09fbf3ad2bbfe625b.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b15df0c13d1943c09fbf3ad2bbfe625b.png)'
- en: Even the general purpose ChatGPT is pretty adept at providing a variety of assistance
    in technical areas
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 即便是通用的 ChatGPT 也非常擅长在技术领域提供各种帮助。
- en: Not to be left behind by Copilot and Codewhisperer, OpenAI recently announced
    their own code-enhanced version, a GPT-4 model with Code Interpreter, [which can
    both write and execute Python code](/how-to-use-openais-code-interpreter-to-analyze-data-45f5b2c57c1e).
    This improves on the implementation of code completion in the rather general purpose
    model of ChatGPT, by actually allowing it to write **and run** code directly in
    the chat environment.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 为了不被 Copilot 和 Codewhisperer 落在后头，OpenAI 最近宣布了他们自己增强代码功能的版本——一个带有代码解释器的 GPT-4
    模型，[它既可以编写也可以执行 Python 代码](/how-to-use-openais-code-interpreter-to-analyze-data-45f5b2c57c1e)。这改进了
    ChatGPT 在相当通用的模型中的代码补全实现，实际上允许它在聊天环境中直接**编写和运行**代码。
- en: '![](../Images/b5c3f438480fd01d17bac1b8999b1b76.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b5c3f438480fd01d17bac1b8999b1b76.png)'
- en: ChatGPT with Code Interpreter extension can not just write code, but run it
    as well
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 带有代码解释器扩展的 ChatGPT 不仅可以编写代码，还可以运行代码。
- en: So far, I’ve spent a lot of time talking about the three big players in this
    space; Github, Amazon and OpenAI, but others aren’t far behind. Google has announced
    [Duet AI for Google Cloud](https://cloud.google.com/blog/products/application-modernization/introducing-duet-ai-for-google-cloud),
    a code assistant in the vein of Copilot and Codewhisperer, and also [AI assistance
    in their Colab](https://blog.google/technology/developers/google-colab-ai-coding-features/)
    machine learning tools (implementing Codey, a family of code models built on their
    own PaLM 2 model).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我花了很多时间讨论这个领域的三大玩家：Github、Amazon 和 OpenAI，但其他公司也不甘示弱。谷歌宣布了[Google Cloud
    的 Duet AI](https://cloud.google.com/blog/products/application-modernization/introducing-duet-ai-for-google-cloud)，这是一个类似
    Copilot 和 Codewhisperer 的代码助手，同时还在其 Colab 中提供了[AI 辅助](https://blog.google/technology/developers/google-colab-ai-coding-features/)机器学习工具（实现了
    Codey，这是基于他们自己 PaLM 2 模型的一系列代码模型）。
- en: Outside of developer specific tools, Microsoft is rolling out a brace of Copilots,
    in both Windows and [Office (at eye watering prices)](https://www.theverge.com/2023/7/18/23798627/microsoft-365-copilot-price-commercial-enterprise),
    and Salesforce has recently [seemingly rebranded](https://www.salesforce.com/plus/experience/salesforce_ai_day/series/salesforce_ai_day/episode/episode-s1e1)
    every one of their products by putting ‘GPT’ after the product name. Not to be
    left behind, Google is expected to add Duet to Google Workplace which, like Office
    Copilot, will help people craft documents and create slightly less tedious presentations.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发者特定工具之外，微软正在推出一系列 Copilot，包括 Windows 和[Office（价格令人咋舌）](https://www.theverge.com/2023/7/18/23798627/microsoft-365-copilot-price-commercial-enterprise)，Salesforce
    最近[似乎重新品牌](https://www.salesforce.com/plus/experience/salesforce_ai_day/series/salesforce_ai_day/episode/episode-s1e1)了他们的每一个产品，在产品名称后添加了‘GPT’。谷歌也不甘落后，预计将把
    Duet 添加到 Google Workplace，这将像 Office Copilot 一样帮助人们编写文档和创建稍微少些枯燥的演示文稿。
- en: It seems that wherever you look, someone is ploughing money into AI models that
    make humans more productive. On the face of it, the early signs are indicating
    that it’s working, and we should be preparing for the impact.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来无论你往哪里看，都有人在将资金投入到使人类更高效的 AI 模型中。表面上看，早期迹象表明这一切是有效的，我们应该为其影响做好准备。
- en: How will Product Engineering teams use these tools?
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 产品工程团队将如何使用这些工具？
- en: The first time that I spent a serious amount of time generating code with ChatGPT,
    I was actually asking it to generate some user stories. A friend had asked me
    for some help writing an application, and with my professional coding days now
    long behind me, I needed some help.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 第一次我花大量时间用 ChatGPT 生成代码时，我实际上是在要求它生成一些用户故事。一位朋友让我帮忙编写一个应用程序，而我的专业编程日子现在已经远去，我需要一些帮助。
- en: 'My thought process was reasonably simple: *“I can’t code anymore, but I can
    probably describe what is needed in a way that a developer can understand so we
    can hire a freelancer to actually write the code”*.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我的思考过程相当简单：*“我现在不能再编程了，但我可以用开发人员可以理解的方式描述所需的内容，这样我们就可以聘请一个自由职业者来实际编写代码”*。
- en: I explained to ChatGPT that I wanted it to create some [behaviour driven design](https://cucumber.io/blog/bdd/user-stories-are-not-the-same-as-features/)
    (BDD) stories. BDD is a reasonably well adopted approach to development that serves
    as an intermediary between what the customer (and the product manager) wants,
    and the code that the engineer will write. It’s a good test of your own understanding
    of a problem to write a BDD story, so naturally, I just got ChatGPT to do it for
    me.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我向 ChatGPT 解释了我希望它创建一些 [行为驱动设计](https://cucumber.io/blog/bdd/user-stories-are-not-the-same-as-features/)（BDD）故事。BDD
    是一种相当普遍采用的开发方法，它作为客户（和产品经理）所需内容与工程师将编写的代码之间的中介。编写 BDD 故事是检验自己对问题理解的一个好方法，所以自然地，我让
    ChatGPT 为我做了这件事。
- en: '![](../Images/310c5f07eb707f29274049e9f483ac1d.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/310c5f07eb707f29274049e9f483ac1d.png)'
- en: An example of a BDD User Story that ChatGPT created — because wizards vs robots.
    That is all.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT 创建的一个 BDD 用户故事的示例——因为巫师与机器人。这就是全部。
- en: It’s important to understand that a BDD story isn’t an approximation of code
    that will execute, but it is a very good way to understand if the application
    that is delivered matches up with what a product manager really asked for (and
    hopefully, what a customer really wants).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要理解，BDD 故事并不是对将要执行的代码的近似，而是一个非常好的方法来了解交付的应用程序是否与产品经理真正要求的相符（并且希望，符合客户真正想要的）。
- en: Having asked for these user stories, it struck me that there was no reason I
    couldn’t ask ChatGPT to write code that represented the stories. With a little
    prompt engineering, I suggested that ChatGPT create the application in Javascript,
    HTML and CSS (the most basic code for a simple web application). Two minutes later,
    I had the building blocks of an application that represented the basics of the
    functionality we had written the user stories for.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在要求这些用户故事之后，我意识到没有理由不能要求 ChatGPT 编写代表这些故事的代码。通过一点提示工程，我建议 ChatGPT 用 Javascript、HTML
    和 CSS（构建简单网页应用程序的最基本代码）创建这个应用程序。两分钟后，我得到了一个应用程序的构建块，它代表了我们为其编写用户故事的功能基础。
- en: Once I had the application running, in its waddling, newly-hatched form, I realised
    that any self-respecting developer would be creating tests based on the code and
    the user stories. So, after a brief discussion with ChatGPT about the most suitable
    test runner for Javascript, I asked for a set of more technical, test driven development
    ([TDD](https://www.testim.io/blog/is-jasmine-bdd-or-tdd/)) tests to be created,
    to ensure the app was meeting my original BDD stories.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我让应用程序以其摇摇晃晃、刚孵化出的形式运行时，我意识到任何自尊心的开发人员都会基于代码和用户故事创建测试。因此，在与 ChatGPT 简要讨论了最适合
    Javascript 的测试运行器后，我要求创建一组更技术性的、测试驱动开发的（[TDD](https://www.testim.io/blog/is-jasmine-bdd-or-tdd/)）测试，以确保应用程序符合我最初的
    BDD 故事。
- en: '![](../Images/11b688f47d6a924d4b30afed66fa19c9.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/11b688f47d6a924d4b30afed66fa19c9.png)'
- en: ChatGPT did a credible job of recommending the Jasminne Javascript test runner,
    and then writing tests
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT 很好地推荐了 Jasminne Javascript 测试运行器，并编写了测试。
- en: What was incredibly striking about the entire process was the ease with which
    some of the tasks most disliked by developers were completed. For most engineers,
    the beauty of the work is in the creativity of finding a solution and the thrill
    of code running successfully. Writing tests, creating documentation, creating
    user stories and even bootstrapping basic code are tedious tasks that, emotionally,
    are best avoided.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 整个过程最令人惊讶的是，完成一些开发人员最不喜欢的任务的轻松程度。对于大多数工程师来说，工作的美在于找到解决方案的创造力和代码成功运行的刺激。编写测试、创建文档、编写用户故事甚至引导基本代码是乏味的任务，从情感上讲，最好避免。
- en: Going through this process reminded me of a thought-provoking [tweet thread](https://twitter.com/swardley/status/1490777578810101765)
    by [Simon Wardley](https://www.linkedin.com/in/simonwardley/?originalSubdomain=uk),
    the creator of the [Wardley Maps](https://learnwardleymapping.com/) approach to
    strategic decision making. Simon’s comment proposed that your suite of tests represent
    and explain the complex and interdependent map of relationships that your product
    actually consists of, and it’s here that a huge amount of your intellectual property
    lies.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这个过程，我想起了 [Simon Wardley](https://www.linkedin.com/in/simonwardley/?originalSubdomain=uk)
    的一个发人深省的 [推文线程](https://twitter.com/swardley/status/1490777578810101765)。Simon
    是 [Wardley Maps](https://learnwardleymapping.com/) 方法的创建者。Simon 的评论提出，你的测试套件应当表示和解释你产品实际包含的复杂且相互依赖的关系图，这也是你大量知识产权所在之处。
- en: 'X : What’s the best way of writing a specification for a commodity?'
  id: totrans-54
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 'X : 编写一个商品规范的最佳方法是什么？'
- en: 'Me : Your test suite.'
  id: totrans-55
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 'Me : 你的测试套件。'
- en: 'X : Eh?'
  id: totrans-56
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 'X : 啊？'
- en: 'Me : Every novel thing starts with a few basic tests, as it evolves it gains
    more, your product should be built on those test and eventually they should help
    define the commodity.'
  id: totrans-57
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 'Me : 每个新事物都从几个基本的测试开始，随着它的发展会增加更多测试，你的产品应该基于这些测试构建，最终这些测试应帮助定义商品。'
- en: 'Me : Your business, hardware and software should have test driven development
    baked in throughout wherever possible. How do you change anything in a complicated
    environment without it. Every single line on a map is a relationship, an interface
    for which there should be tests …'
  id: totrans-58
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 'Me : 你的业务、硬件和软件应该尽可能地将测试驱动开发融入其中。如何在复杂的环境中改变任何东西而不进行测试呢？地图上的每一条线都是一种关系，一个应该有测试的接口……'
- en: … those tests define the operation of the interface, they are the specification
    you hand to another, that you check a product against, that you test a commodity
    with and then determine the trades you wish to make. Those test should expand
    and evolve with the thing itself.
  id: totrans-59
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: …这些测试定义了接口的操作，它们是你交给他人的规范，你用来检查产品的规范，你用来测试商品的规范，然后决定你希望进行的交易。这些测试应随着事物本身的演变而扩展和演变。
- en: Although tests aren’t as exciting to write as application code, and are often
    seen as cumbersome to maintain, good tests demonstrate the anticipated behaviour
    of the application. Even more importantly, tests don’t just describe how something
    *should* behave, they also demonstrate that it really does behave that way repeatedly.
    The definition of the scope and the details of a really valuable test suite is
    part of the collaborative work that product and engineering teams do together.
    Simon’s tweet inspired me to reflect that, perhaps, the future of a prompt engineered
    application starts with thoughtful test design.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管测试的编写没有应用代码那样令人兴奋，并且常常被视为维护的负担，但良好的测试展示了应用程序的预期行为。更重要的是，测试不仅描述了某物*应该*如何表现，还展示了它确实能够一再如此表现。定义一个真正有价值的测试套件的范围和细节是产品和工程团队共同完成的协作工作的一部分。Simon
    的推文激励我思考，也许，一个经过精心设计的测试开始了生成应用程序的未来。
- en: From this perspective, we can start to envision a future for product engineering
    teams that embrace Generative AI tools. The job of eliciting customer requirements,
    understanding potential solutions, analysing the value that will be created by
    serving the customer and prioritising work will remain just as important as they
    are today. Product management will no doubt benefit from Generative AI tools,
    but I suspect the impact for the product discipline will be less shocking than
    it is for tech teams.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个角度看，我们可以开始设想一个接受生成式 AI 工具的产品工程团队的未来。挖掘客户需求、理解潜在解决方案、分析为客户提供服务所创造的价值并优先排序工作将仍然像今天一样重要。产品管理无疑会从生成式
    AI 工具中受益，但我怀疑对产品学科的影响会比对技术团队的影响小。
- en: '**Which brings us back to those five engineers.**'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**这让我们回到了那五名工程师。**'
- en: '**In Part 3, you can read about:**'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**在第 3 部分，你可以阅读到：**'
- en: How Generative AI tools could potentially upend the longstanding ratio of 5
    engineers to 1 product manager.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成式 AI 工具如何可能颠覆长期以来的 5 名工程师对 1 名产品经理的比例。
- en: How tools like Github Copilot and AWS Amplify Studio could reshape product development,
    shifting the engineer’s focus from hand coding to design, architecture, and integration.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 像 Github Copilot 和 AWS Amplify Studio 这样的工具如何重塑产品开发，将工程师的重点从手动编码转向设计、架构和集成。
- en: How Generative AI tools can assist teams who are facing painfully outdated tech,
    handling complex porting and refactoring effortlessly.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成式 AI 工具如何帮助面临过时技术、轻松处理复杂移植和重构的团队。
- en: The possible unifying influence of AI tools on mobile and web app development,
    reducing duplicated efforts and bridging the skill gaps between web, Android,
    and iOS development.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AI 工具在移动和网页应用开发中的可能统一影响，减少重复劳动，弥合网页、Android 和 iOS 开发之间的技能差距。
- en: The impact of coding automation on junior developers and engineering progression
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编码自动化对初级开发者和工程进展的影响
- en: '[Read Part 3 here](https://mark-ridley.medium.com/if-engineers-start-to-use-ai-coding-tools-what-happens-to-our-product-teams-acd55fb273dd)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '[点击这里阅读第 3 部分](https://mark-ridley.medium.com/if-engineers-start-to-use-ai-coding-tools-what-happens-to-our-product-teams-acd55fb273dd)'
- en: '**Other articles in this series:**'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**本系列其他文章：**'
- en: '[Part 1](https://mark-ridley.medium.com/how-generative-ai-will-impact-product-engineering-teams-83a5eaa8fc60)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第 1 部分](https://mark-ridley.medium.com/how-generative-ai-will-impact-product-engineering-teams-83a5eaa8fc60)'
- en: '[Part 3](https://mark-ridley.medium.com/if-engineers-start-to-use-ai-coding-tools-what-happens-to-our-product-teams-acd55fb273dd)'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第 3 部分](https://mark-ridley.medium.com/if-engineers-start-to-use-ai-coding-tools-what-happens-to-our-product-teams-acd55fb273dd)'
- en: P.S. If you’re enjoying these articles on teams, check out my [Teamcraft podcast](https://www.teamcraft.uk/),
    where my co-host Andrew Maclaren and I talk to guests about what makes teams work.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 附注：如果你喜欢这些关于团队的文章，可以看看我的 [Teamcraft 播客](https://www.teamcraft.uk/)，在这里我和我的联合主持人安德鲁·麦克拉伦（Andrew
    Maclaren）与嘉宾讨论使团队运作的因素。
