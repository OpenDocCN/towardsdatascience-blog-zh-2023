["```py\n# import the required libs\nfrom sklearn.datasets import load_wine\nfrom sklearn.decomposition import PCA\nimport matplotlib.pyplot as plt\n\n# load the dataset\nwine = load_wine()\n\n# convert the object in a pandas dataframe\ndf = pd.DataFrame(data=wine.data, columns=wine.feature_names)\ndf[\"target\"] = wine.target\ndf\n>>>\n```", "```py\n# normalize data\nfrom sklearn.preprocessing import StandardScaler\nX_std = StandardScaler().fit_transform(df.drop(columns=[\"target\"]))\n```", "```py\n# PCA object specifying the number of principal components desired\npca = PCA(n_components=2) # we want to project two dimensions so that we can visualize them!\n\n# We fit the PCA model on standardized data\nvecs = pca.fit_transform(X_std)\n```", "```py\nreduced_df = pd.DataFrame(data=vecs, columns=['Principal Component 1', 'Principal Component 2'])\nfinal_df = pd.concat([reduced_df, df[['target']]], axis=1)\nfinal_df\n>>>\n```", "```py\nplt.figure(figsize=(8, 6)) # set the size of the canvas\ntargets = list(set(final_df['target'])) # we create a list of possible targets (there are 3)\ncolors = ['r', 'g', 'b'] # we define a simple list of colors to differentiate the targets\n\n# loop to assign each point to a target and color\nfor target, color in zip(targets, colors):\n     idx = final_df['target'] == target\n     plt.scatter(final_df.loc[idx, 'Principal Component 1'], final_df.loc[idx, 'Principal Component 2'], c=color, s=50)\n\n# finally, we show the graph\nplt.legend(targets, title=\"Target\", loc='upper right')\nplt.xlabel('Principal Component 1')\nplt.ylabel('Principal Component 2')\nplt.title('PCA on Wine Dataset')\nplt.show()\n```", "```py\nimport pandas as pd\nfrom sklearn.decomposition import PCA\nimport matplotlib.pyplot as plt\n\nwine = load_wine()\n\ndf = pd.DataFrame(data=wine.data, columns=wine.feature_names)\n\ndf[\"target\"] = wine.target\n\nfrom sklearn.preprocessing import StandardScaler\nX_std = StandardScaler().fit_transform(df.drop(columns=[\"target\"]))\n\npca = PCA(n_components=2)\n\nvecs = pca.fit_transform(X_std)\n\nreduced_df = pd.DataFrame(data=vecs, columns=['Principal Component 1', 'Principal Component 2'])\nfinal_df = pd.concat([reduced_df, df[['target']]], axis=1)\n\nplt.figure(figsize=(8, 6))\ntargets = list(set(final_df['target']))\ncolors = ['r', 'g', 'b']\n\nfor target, color in zip(targets, colors):\n    idx = final_df['target'] == target\n    plt.scatter(final_df.loc[idx, 'Principal Component 1'], final_df.loc[idx, 'Principal Component 2'], c=color, s=50)\n\nplt.legend(targets, title=\"Target\", loc='upper right')\nplt.xlabel('Principal Component 1')\nplt.ylabel('Principal Component 2')\nplt.title('PCA on the Wine Dataset')\nplt.show()\n```"]