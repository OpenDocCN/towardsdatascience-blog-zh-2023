["```py\npip install dbt-bigquery\n```", "```py\ndbt init dbt_demo\n```", "```py\n-- models/trips_per_property.sql\n\nWITH stations AS (\n  SELECT\n    station_id, council_district,\n    CASE\n      WHEN property_type IN ('parkland', 'sidewalk', 'nonmetered_parking') THEN 'free_parking'\n      ELSE property_type\n    END AS property_type,\n  FROM\n    `bigquery-public-data.austin_bikeshare.bikeshare_stations`\n  WHERE\n    property_type IN (\n      'parkland',\n      'sidewalk',\n      'nonmetered_parking',\n      'paid_parking'\n    )\n),\ntrips AS (\n  SELECT\n    start_station_id\n  FROM\n    `bigquery-public-data.austin_bikeshare.bikeshare_trips`\n  WHERE\n    start_station_id is NOT NULL\n)\nSELECT\n  stations.property_type,\n  COUNT(*) AS trips,\nFROM\n  trips\n  JOIN stations ON trips.start_station_id = stations.station_id\nGROUP BY\n  stations.property_type\n```", "```py\n-- models/stg_trips.sql\n\nSELECT start_station_id\nFROM `bigquery-public-data.austin_bikeshare.bikeshare_trips`\nWHERE start_station_id is NOT NULL\n```", "```py\n-- models/stg_stations.sql\n\nSELECT\n    station_id, council_district,\n    CASE\n        WHEN property_type IN ('parkland', 'sidewalk', 'nonmetered_parking') THEN 'free_parking'\n        ELSE property_type\n    END AS property_type,\nFROM\n    `bigquery-public-data.austin_bikeshare.bikeshare_stations`\nWHERE\n    property_type IN ('parkland', 'sidewalk', 'nonmetered_parking', 'paid_parking')\n```", "```py\n# macros/get_end_time.sql\n{% macro get_end_time(start_time, duration_minutes) %}\n    (SELECT TIMESTAMP_ADD({{ start_time }}, INTERVAL {{ duration_minutes }} MINUTE) AS end_time)\n{% endmacro %}\n```", "```py\nSELECT\n    start_station_id,\n    start_time,\n    end_station_id,\n    {{ get_end_time('start_time', 'duration_minutes') }} AS end_time\nFROM\n    `bigquery-public-data.austin_bikeshare.bikeshare_trips`\nWHERE\n    start_station_id IS NOT NULL AND end_station_id IS NOT NULL \n```", "```py\nversion: 2\n\nmodels:\n  - name: stg_stations\n    columns:\n    - name: station_id\n      tests: \n        # Should not contain null values.\n        - not_null\n        # Should be unique\n        - unique\n    - name: property_type\n      tests:\n        # Should be either 'free_parking' or 'paid_parking'.\n        - accepted_values:\n            values: ['free_parking', 'paid_parking']\n```"]