- en: 'Pipelines in Scikit-Learn: An Amazing Way to Bundle Transformations'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Scikit-Learn中的管道：一种打包转换的绝妙方法
- en: 原文：[https://towardsdatascience.com/pipelines-in-scikit-learn-an-amazing-way-to-bundle-transformations-9ef0594000ac](https://towardsdatascience.com/pipelines-in-scikit-learn-an-amazing-way-to-bundle-transformations-9ef0594000ac)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/pipelines-in-scikit-learn-an-amazing-way-to-bundle-transformations-9ef0594000ac](https://towardsdatascience.com/pipelines-in-scikit-learn-an-amazing-way-to-bundle-transformations-9ef0594000ac)
- en: How pipelines can help you write better code for machine learning and data science
    😍
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管道如何帮助您编写更好的机器学习和数据科学代码 😍
- en: '[](https://medium.com/@ebbeberge?source=post_page-----9ef0594000ac--------------------------------)[![Eirik
    Berge, PhD](../Images/7507374e75980fd0c1056af3cd299eaa.png)](https://medium.com/@ebbeberge?source=post_page-----9ef0594000ac--------------------------------)[](https://towardsdatascience.com/?source=post_page-----9ef0594000ac--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----9ef0594000ac--------------------------------)
    [Eirik Berge, PhD](https://medium.com/@ebbeberge?source=post_page-----9ef0594000ac--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@ebbeberge?source=post_page-----9ef0594000ac--------------------------------)[![Eirik
    Berge, PhD](../Images/7507374e75980fd0c1056af3cd299eaa.png)](https://medium.com/@ebbeberge?source=post_page-----9ef0594000ac--------------------------------)[](https://towardsdatascience.com/?source=post_page-----9ef0594000ac--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----9ef0594000ac--------------------------------)
    [Eirik Berge, PhD](https://medium.com/@ebbeberge?source=post_page-----9ef0594000ac--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----9ef0594000ac--------------------------------)
    ·5 min read·Apr 5, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----9ef0594000ac--------------------------------)
    ·5分钟阅读·2023年4月5日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/af74d4aa798e6d0abd86bb7284cd5dc3.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/af74d4aa798e6d0abd86bb7284cd5dc3.png)'
- en: Photo by [Rodion Kutsaiev](https://unsplash.com/fr/@frostroomhead?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Rodion Kutsaiev](https://unsplash.com/fr/@frostroomhead?utm_source=medium&utm_medium=referral)
    在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Overview of Your Journey
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您的旅程概述
- en: '[Introduction](#a6cb)'
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[介绍](#a6cb)'
- en: '[Problems Without Pipelines?](#8f4f)'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[没有管道的问题？](#8f4f)'
- en: '[Pipelines to the Rescue!](#d657)'
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[管道来救援！](#d657)'
- en: '[Useful Attributes and Utility Functions](#15c2)'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[有用的属性和实用函数](#15c2)'
- en: '[Wrapping Up](#c801)'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[总结](#c801)'
- en: 1 — Introduction
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1 — 介绍
- en: One of the most popular Python libraries for dealing with machine learning tasks
    is [scikit-learn](https://scikit-learn.org/stable/index.html). It went public
    in 2010 and has since been essential for implementing popular supervised ML algorithms
    like [logistic regression](https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html#sklearn.linear_model.LogisticRegression),
    [random forests](https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html#sklearn.ensemble.RandomForestClassifier),
    and [support vector machines](https://scikit-learn.org/stable/modules/generated/sklearn.svm.LinearSVR.html#sklearn.svm.LinearSVR).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 处理机器学习任务的最受欢迎的Python库之一是 [scikit-learn](https://scikit-learn.org/stable/index.html)。它于2010年发布，自那时起，它对于实现流行的监督学习算法，如
    [逻辑回归](https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html#sklearn.linear_model.LogisticRegression)、
    [随机森林](https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html#sklearn.ensemble.RandomForestClassifier)
    和 [支持向量机](https://scikit-learn.org/stable/modules/generated/sklearn.svm.LinearSVR.html#sklearn.svm.LinearSVR)
    已经成为必不可少的工具。
- en: When writing code in scikit-learn, you can use a feature called **pipelines**.
    This feature allows you to bundle up several of the steps in the machine learning
    process into a single component. The use of pipelines is one of the *single most
    determining factors* for whether scikit-learn code is easy to work with. It’s
    frustrating how many neglect pipelines when creating machine learning models in
    scikit-learn 😞
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用scikit-learn编写代码时，您可以使用一个叫做 **管道** 的功能。这个功能允许您将机器学习过程中的几个步骤打包成一个单一的组件。管道的使用是判断scikit-learn代码是否易于操作的*最关键因素之一*。许多人在创建scikit-learn机器学习模型时忽视了管道，这真的让人沮丧
    😞
- en: In this blog post, you will learn the advantages of scikit-learn pipelines.
    After reading this, you should feel confident in applying pipelines to your own
    machine learning projects. Let’s jump in 👍
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇博客文章中，您将学习到scikit-learn管道的优点。阅读完毕后，您应该能够自信地将管道应用到自己的机器学习项目中。让我们开始吧 👍
- en: 2 — Problems Without Pipelines?
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2 — 没有管道的问题？
- en: 'The goal of pipelines is to encapsulate several steps in a machine learning
    project into a **single manageable piece**. To illustrate this, let us start with
    the following setup code:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 管道的目标是将机器学习项目中的多个步骤封装成一个**可管理的整体**。为了说明这一点，我们从以下设置代码开始：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'As the imports in the code block above suggest, we are going to scale the data
    and then use a **random forest model** for classification. Without pipelines,
    this would look something like this:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如上代码块中的导入所示，我们将对数据进行缩放，然后使用**随机森林模型**进行分类。如果没有使用管道，这可能看起来是这样的：
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'There are both serious and minor problems with the code above! Let’s mention
    some of them:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的代码存在一些严重和轻微的问题！让我们提及其中的一些：
- en: '**Data Leakage:** If you look carefully at the code above, then you can see
    that it actually leaks information about the training data to the testing data.
    Specifically, when `scaler` transforms `X_test`, then it uses the minimum and
    maximum values of `X_train` to do this. Hence information about the training set
    is revealed in the testing set. This can make the accuracy of the random forest
    on the testing set a bit optimistic!'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据泄漏：** 如果仔细查看上面的代码，你会发现它实际上将训练数据的信息泄露给了测试数据。具体来说，当`scaler`转换`X_test`时，它使用了`X_train`的最小值和最大值。因此，训练集的信息在测试集中被揭示。这可能使随机森林在测试集上的准确性有些乐观！'
- en: '**Intermediate Variable Names:** We created the intermediate variable names
    `X_train_scaled` and `X_test_scaled`. This is only necessary because we have the
    scaling and the training as completely separate processes.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**中间变量名称：** 我们创建了中间变量名称`X_train_scaled`和`X_test_scaled`。这仅仅是因为我们将缩放和训练作为完全独立的过程。'
- en: '**Less Explicit Function Calls:** In the code above, several of the lines are
    intermediate `.fit()` and `.transform()` function calls. This clutters the code
    and makes it less readable.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**较少的显式函数调用：** 在上面的代码中，几行是中间的`.fit()`和`.transform()`函数调用。这使得代码变得混乱且不易读。'
- en: '**Hyperparameter Search:** We want to do a hyperparameter search for both the
    `feature_range` parameter in the `MinMaxScaler` and the `n_estimators` parameter
    in the `RandomForestClassifier`. We would need to do these searches completely
    separately! Not only is it more cumbersome, but we then greedily optimize each
    of them separately, rather than looking for a combined optimum. This can make
    us miss the best solution.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**超参数搜索：** 我们希望对`MinMaxScaler`中的`feature_range`参数和`RandomForestClassifier`中的`n_estimators`参数进行超参数搜索。我们需要完全分开进行这些搜索！这不仅麻烦，而且我们会分别贪婪地优化每个参数，而不是寻找一个组合的最佳解。这可能使我们错过最佳解决方案。'
- en: 3 — Pipelines to the Rescue!
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3 — 管道来拯救！
- en: '![](../Images/bef3e9da02e6c480b931e6a8f1b2ceb6.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bef3e9da02e6c480b931e6a8f1b2ceb6.png)'
- en: Photo by [Erlend Ekseth](https://unsplash.com/@er1end?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由[Erlend Ekseth](https://unsplash.com/@er1end?utm_source=medium&utm_medium=referral)提供，来自[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: 'It should not come as a surprise that pipelines are what will save the day.
    Compare the above code with the following code snippet:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 不足为奇的是，管道将拯救这个问题。将上述代码与以下代码片段进行比较：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The code with the pipeline is shorter, sweeter, and avoids all the problems
    listed above:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 使用管道的代码更简洁、更高效，并避免了上述所有问题：
- en: '**Data Leakage:** Pipelines automatically ensure that there is no data leakage
    happening!'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据泄漏：** 管道自动确保没有数据泄漏发生！'
- en: '**Intermediate Variable Names:** You don’t need any intermediate variable names
    like `X_train_scaled` and `X_test_scaled` anymore!'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**中间变量名称：** 你不再需要像`X_train_scaled`和`X_test_scaled`这样的中间变量名称了！'
- en: '**Less Explicit Function Calls:** With the pipeline, you only need a single
    `.fit()` function call to execute the whole sequence. This makes the code easier
    to read!'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**较少的显式函数调用：** 使用管道，你只需要一个`.fit()`函数调用来执行整个序列。这使得代码更易读！'
- en: '**Hyperparameter Search:** Once you have used a pipeline, you can do a hyperparameter
    search on all of the components at once. The method `.get_params()` is useful
    for getting the parameter names for all the transformers/estimators in the pipeline.
    This is nicely explained in the blog post [Integrate Pipeline into Scikit-Learn’s
    Hyperparameter Search](/integrate-pipeline-into-scikit-learns-hyperparameter-search-e123c743b6a0)!'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**超参数搜索：** 一旦使用了管道，你可以对所有组件同时进行超参数搜索。方法`.get_params()`对获取管道中所有变换器/估计器的参数名称非常有用。这个在博客文章[将管道集成到
    Scikit-Learn 的超参数搜索中](/integrate-pipeline-into-scikit-learns-hyperparameter-search-e123c743b6a0)中有很好的解释！'
- en: 4 — Useful Attributes and Utility Functions
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4 — 有用的属性和实用功能
- en: After fitting a pipeline in scikit-learn, there are certain attributes that
    will make your life a lot easier. I have been guilty of neglecting these and have
    paid the price😅
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在 scikit-learn 中拟合管道后，有一些属性可以让你的工作变得更轻松。我曾经忽视这些属性，付出了代价😅
- en: 'The first is the attribute `named_steps`:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个是属性`named_steps`：
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Whenever you have a composite object (like pipelines in scikit-learn), it is
    useful to know how to access the individual components.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 每当你有一个复合对象（如 scikit-learn 中的管道）时，知道如何访问各个组件是很有用的。
- en: 'Another useful attribute is `.n_features_in_`. This will show you how many
    features were passed into the first implicit `.fit()`method in the pipeline (in
    our case, the `.fit()` method for the `MinMaxScaler`):'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有用的属性是`.n_features_in_`。这将显示传递到管道第一个隐式`.fit()`方法中的特征数量（在我们的例子中，是`MinMaxScaler`的`.fit()`方法）：
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Finally, you can also use the utility function `make_pipeline()`to create pipelines
    in scikit-learn. The difference is that `make_pipeline` automatically gives names
    to the different transformers/estimators:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你还可以使用实用函数`make_pipeline()`来创建 scikit-learn 中的管道。不同之处在于，`make_pipeline` 会自动为不同的变换器/估计器命名：
- en: '[PRE5]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: I personally prefer to use the utility function `make_pipeline` as then I don’t
    need to come up with names myself. If many developers are working on different
    pipelines, then `make_pipeline` **ensures consistency**.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我个人更喜欢使用实用函数`make_pipeline`，这样我就不需要自己想出名称。如果有许多开发人员在处理不同的管道，那么`make_pipeline`
    **确保一致性**。
- en: If you want to learn more about nested parameters and caching when it comes
    to pipelines, then check out the [pipeline user guide](https://scikit-learn.org/stable/modules/compose.html)
    for more information.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多关于管道的嵌套参数和缓存的信息，请查看 [管道用户指南](https://scikit-learn.org/stable/modules/compose.html)。
- en: 5— Wrapping Up
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5— 总结
- en: '![](../Images/4a06c775ef80f575c5d7cdfe36d7a151.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4a06c775ef80f575c5d7cdfe36d7a151.png)'
- en: Photo by [Spencer Bergen](https://unsplash.com/@spencerbergen?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Spencer Bergen](https://unsplash.com/@spencerbergen?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Hopefully, you now understand how and why you should use pipelines when writing
    machine learning code in Scikit-Learn. If you are interested in data science,
    programming, or anything in between, then feel free to add me on [LinkedIn](https://www.linkedin.com/in/eirik-berge/)
    and say hi ✋
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你现在理解了在编写 Scikit-Learn 机器学习代码时如何以及为什么要使用管道。如果你对数据科学、编程或介于两者之间的任何事物感兴趣，可以在
    [LinkedIn](https://www.linkedin.com/in/eirik-berge/) 上加我并打个招呼 ✋
- en: '**Like my writing?** Check out some of my other posts for more Python content:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**喜欢我的写作吗？** 查看我其他的一些文章获取更多 Python 内容：'
- en: '[Modernize Your Sinful Python Code with Beautiful Type Hints](/modernize-your-sinful-python-code-with-beautiful-type-hints-4e72e98f6bf1)'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用优美的类型提示现代化你罪恶的 Python 代码](/modernize-your-sinful-python-code-with-beautiful-type-hints-4e72e98f6bf1)'
- en: '[Visualizing Missing Values in Python is Shockingly Easy](/visualizing-missing-values-in-python-is-shockingly-easy-56ed5bc2e7ea)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在 Python 中可视化缺失值极其简单](/visualizing-missing-values-in-python-is-shockingly-easy-56ed5bc2e7ea)'
- en: '[Introducing Anomaly/Outlier Detection in Python with PyOD 🔥](/introducing-anomaly-outlier-detection-in-python-with-pyod-40afcccee9ff)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在 Python 中使用 PyOD 介绍异常/离群值检测 🔥](/introducing-anomaly-outlier-detection-in-python-with-pyod-40afcccee9ff)'
- en: '[5 Awesome NumPy Functions That Can Save You in a Pinch](/5-awesome-numpy-functions-that-can-save-you-in-a-pinch-ba349af5ac47)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[5 个在紧急情况下拯救你的了不起的 NumPy 函数](/5-awesome-numpy-functions-that-can-save-you-in-a-pinch-ba349af5ac47)'
- en: '[5 Expert Tips to Skyrocket Your Dictionary Skills in Python 🚀](/5-expert-tips-to-skyrocket-your-dictionary-skills-in-python-1cf54b7d920d)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[5 个提升你 Python 词典技能的专家建议 🚀](/5-expert-tips-to-skyrocket-your-dictionary-skills-in-python-1cf54b7d920d)'
