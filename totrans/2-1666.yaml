- en: 'Python Dependency Management: Which Tool Should You Choose?'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python 依赖管理：你应该选择哪个工具？
- en: 原文：[https://towardsdatascience.com/poetry-a-better-way-to-manage-python-dependencies-bd7b5f1eab25](https://towardsdatascience.com/poetry-a-better-way-to-manage-python-dependencies-bd7b5f1eab25)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/poetry-a-better-way-to-manage-python-dependencies-bd7b5f1eab25](https://towardsdatascience.com/poetry-a-better-way-to-manage-python-dependencies-bd7b5f1eab25)
- en: An in-depth comparison between Poetry, Pip, and Conda
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Poetry、Pip 和 Conda 的深入比较
- en: '[](https://khuyentran1476.medium.com/?source=post_page-----bd7b5f1eab25--------------------------------)[![Khuyen
    Tran](../Images/98aa66025ad29b618e875c75f1c400a5.png)](https://khuyentran1476.medium.com/?source=post_page-----bd7b5f1eab25--------------------------------)[](https://towardsdatascience.com/?source=post_page-----bd7b5f1eab25--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----bd7b5f1eab25--------------------------------)
    [Khuyen Tran](https://khuyentran1476.medium.com/?source=post_page-----bd7b5f1eab25--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://khuyentran1476.medium.com/?source=post_page-----bd7b5f1eab25--------------------------------)[![Khuyen
    Tran](../Images/98aa66025ad29b618e875c75f1c400a5.png)](https://khuyentran1476.medium.com/?source=post_page-----bd7b5f1eab25--------------------------------)[](https://towardsdatascience.com/?source=post_page-----bd7b5f1eab25--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----bd7b5f1eab25--------------------------------)
    [Khuyen Tran](https://khuyentran1476.medium.com/?source=post_page-----bd7b5f1eab25--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----bd7b5f1eab25--------------------------------)
    ·10 min read·Jun 13, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----bd7b5f1eab25--------------------------------)
    ·10 分钟阅读·2023 年 6 月 13 日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/a87494b4a6efa276955127728c116a55.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a87494b4a6efa276955127728c116a55.png)'
- en: Image by Author
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: '*Originally published at* [*https://mathdatasimplified.com*](https://mathdatasimplified.com/2023/06/12/poetry-a-better-way-to-manage-python-dependencies/)
    *on June 13, 2023.*'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*最初发表于* [*https://mathdatasimplified.com*](https://mathdatasimplified.com/2023/06/12/poetry-a-better-way-to-manage-python-dependencies/)
    *于 2023 年 6 月 13 日。*'
- en: Motivation
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动机
- en: As your data science project expands, the number of dependencies also increases.
    To keep the project’s environment reproducible and maintainable, it’s important
    to use an efficient dependency management tool.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 随着数据科学项目的扩展，依赖项的数量也会增加。为了保持项目环境的可重现性和可维护性，使用高效的依赖管理工具非常重要。
- en: 'Thus, I decided to compare three popular tools for dependency management: Pip,
    Conda, and Poetry. After careful evaluation, I’m convinced that Poetry surpasses
    the other two options in terms of effectiveness and performance.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我决定比较三种流行的依赖管理工具：Pip、Conda 和 Poetry。经过仔细评估，我相信 Poetry 在有效性和性能方面超越了其他两个选项。
- en: In this article, we will delve into the advantages of Poetry and highlight its
    key distinctions from Pip and Conda.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将深入探讨 Poetry 的优势，并突出其与 Pip 和 Conda 的主要区别。
- en: Available packages
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可用的包
- en: Having a broad selection of packages makes it easier for developers to find
    the specific package and version that best suits their needs.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有广泛的包选择使开发人员更容易找到最适合其需求的特定包和版本。
- en: Conda
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Conda
- en: Some packages, like “snscrape,” cannot be installed with conda. Additionally,
    certain versions, such as Pandas 2.0, might not be available for installation
    through Conda.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一些包，例如 “snscrape”，无法通过 conda 安装。此外，某些版本，例如 Pandas 2.0，可能无法通过 Conda 安装。
- en: While you can use pip inside a conda virtual environment to address package
    limitations, conda cannot track dependencies installed with pip, making dependency
    management challenging.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然你可以在 conda 虚拟环境中使用 pip 解决包的限制，但 conda 无法跟踪用 pip 安装的依赖项，这使得依赖管理变得具有挑战性。
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Pip
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Pip
- en: Pip can install any packages from the Python Package Index (PyPI) and other
    repositories.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Pip 可以从 Python 包索引（PyPI）和其他仓库中安装任何包。
- en: Poetry
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Poetry
- en: Poetry also allows the installation of packages from the Python Package Index
    (PyPI) and other repositories.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Poetry 还允许从 Python 包索引（PyPI）和其他仓库中安装包。
- en: Number of Dependencies
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 依赖项数量
- en: Reducing the number of dependencies in an environment simplifies the development
    process.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 减少环境中的依赖项数量简化了开发过程。
- en: Conda
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Conda
- en: Conda provides full environment isolation, managing both Python packages and
    system-level dependencies. This can result in larger package sizes compared to
    other package managers, potentially consuming more storage space during installation
    and distribution.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Conda 提供了完整的环境隔离，管理 Python 包和系统级别的依赖项。这可能导致与其他包管理器相比，包的大小更大，在安装和分发过程中可能会消耗更多的存储空间。
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Pip
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Pip
- en: Pip installs only the dependencies required by a package.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Pip 只安装包所需的依赖项。
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Poetry
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Poetry
- en: Poetry also installs only the dependencies required by a package.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Poetry 也只安装包所需的依赖项。
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Uninstall Packages
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 卸载包
- en: Uninstalling packages and their dependencies frees up disk space, prevents unnecessary
    clutter, and optimizes storage resource usage.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 卸载包及其依赖项可以释放磁盘空间，防止不必要的杂乱，并优化存储资源的使用。
- en: Pip
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Pip
- en: Pip removes only the specified package, not its dependencies, potentially leading
    to the accumulation of unused dependencies over time. This can result in increased
    storage space usage and potential conflicts.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Pip 仅移除指定的包，而不是它的依赖项，这可能导致随着时间的推移积累未使用的依赖项。这可能导致存储空间使用增加以及潜在的冲突。
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Conda
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Conda
- en: Conda removes the package and its dependencies.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Conda 移除包及其依赖项。
- en: '[PRE5]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Poetry
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Poetry
- en: Poetry also removes the package and its dependencies.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Poetry 也会移除包及其依赖项。
- en: '[PRE6]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Dependency Files
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 依赖文件
- en: Dependency files ensure the reproducibility of a software project’s environment
    by specifying the exact versions or version ranges of required packages.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 依赖文件通过指定所需包的确切版本或版本范围，确保软件项目环境的可重现性。
- en: This helps recreate the same environment across different systems or at different
    points in time, ensuring collaboration among developers with the same set of dependencies.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这有助于在不同系统或不同时间点重新创建相同的环境，确保开发者之间使用相同的依赖项进行协作。
- en: Conda
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Conda
- en: To save dependencies in a Conda environment, you need to manually write them
    to a file. Version ranges specified in an environment.yml file can result in different
    versions being installed, potentially introducing compatibility issues when reproducing
    the environment.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Conda 环境中保存依赖项，你需要手动将它们写入文件。`environment.yml` 文件中指定的版本范围可能会导致安装不同的版本，可能在重现环境时引入兼容性问题。
- en: 'Let’s assume that we have installed pandas version 1.5.3 as an example. Here
    is an example environment.yml file that specifies the dependencies:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们已经安装了 pandas 版本 1.5.3 作为示例。这里是一个示例 `environment.yml` 文件，指定了依赖项：
- en: '[PRE7]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: If a new user tries to reproduce the environment when the latest version of
    pandas is 2.0, pandas 2.0 will be installed instead.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果新用户尝试在 pandas 的最新版本为 2.0 时重现环境，则会安装 pandas 2.0。
- en: '[PRE8]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: If the codebase relies on syntax or behavior specific to pandas version 1.5.3
    and the syntax has changed in version 2.0, running the code with pandas 2.0 could
    introduce bugs.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果代码库依赖于 pandas 版本 1.5.3 特有的语法或行为，而在版本 2.0 中语法发生了变化，那么使用 pandas 2.0 运行代码可能会引入错误。
- en: Pip
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Pip
- en: The same problem can occur with pip.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 相同的问题也可能发生在 pip 上。
- en: '[PRE9]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'You can pin down the version by freezing them in a requirements.txt file:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过在 `requirements.txt` 文件中冻结版本来固定版本：
- en: '[PRE11]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: However, this makes the code environment less flexible and potentially harder
    to maintain in the long run. Any changes to the dependencies would require manual
    modifications to the requirements.txt file, which can be time-consuming and error-prone.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这使得代码环境的灵活性降低，并且在长期维护中可能变得更加困难。任何对依赖项的更改都需要手动修改 `requirements.txt` 文件，这可能既耗时又容易出错。
- en: Poetry
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Poetry
- en: Poetry automatically updates the pyproject.toml file when installing a package.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Poetry 在安装包时会自动更新 `pyproject.toml` 文件。
- en: In the following example, the “pandas” package is added with the version constraint
    `^1.5`. This flexible versioning approach ensures that your project can adapt
    to newer releases without manual adjustments.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，“pandas” 包被添加了版本约束 `^1.5`。这种灵活的版本管理方法确保了你的项目可以适应更新的版本而无需手动调整。
- en: '[PRE13]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The poetry.lock file stores the precise version numbers for each package and
    its dependencies.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '`poetry.lock` 文件存储了每个包及其依赖项的精确版本号。'
- en: '[PRE15]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: This guarantees consistency in the installed packages, even if a package has
    a version range specified in the pyproject.toml file. Here, we can see that pandas
    1.5.3 is installed instead of pandas 2.0
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这确保了安装的包的一致性，即使包的 `pyproject.toml` 文件中指定了版本范围。在这里，我们可以看到安装了 pandas 1.5.3 而不是
    pandas 2.0
- en: '[PRE16]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Separate dependencies for dev and prod
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开发和生产的独立依赖项
- en: By separating the dependencies, you can clearly distinguish between the packages
    required for development purposes, such as testing frameworks and code quality
    tools, from the packages needed for the production environment, which typically
    include the core dependencies.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 通过分离依赖项，你可以清楚地区分开发用途所需的包（例如测试框架和代码质量工具）与生产环境所需的包（通常包括核心依赖项）。
- en: Conda
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Conda
- en: 'Conda doesn’t inherently support separate dependencies for different environments,
    but a workaround involves creating two environment files: one for the development
    environment and one for production. The development file contains both production
    and development dependencies.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Conda 本身不支持为不同环境分别设置依赖项，但可以通过创建两个环境文件来解决这个问题：一个用于开发环境，另一个用于生产环境。开发文件包含生产和开发依赖项。
- en: '[PRE17]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Pip
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Pip
- en: Pip also doesn’t directly support separate dependencies, but a similar approach
    can be used with separate requirement files.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: Pip 也不直接支持分开的依赖项，但可以使用类似的方法通过分开的需求文件来实现。
- en: '[PRE19]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Poetry
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Poetry
- en: Poetry simplifies managing dependencies by supporting groups within one file.
    This allows you to keep track of all dependencies in a single place.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: Poetry 通过支持一个文件中的分组来简化依赖项管理。这使你可以在一个地方跟踪所有依赖项。
- en: '[PRE22]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'To install only production dependencies:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 要仅安装生产依赖项：
- en: '[PRE24]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'To install both development and production dependencies:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装开发和生产依赖项：
- en: '[PRE25]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Update an Environment
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新环境
- en: Updating dependencies is essential to benefit from bug fixes, performance improvements,
    and new features introduced in newer package versions.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 更新依赖项对于从 bug 修复、性能改进和新包版本中引入的新功能中受益是至关重要的。
- en: Conda
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Conda
- en: Conda allows you to update only a specified package.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: Conda 允许你只更新指定的包。
- en: '[PRE26]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Afterward, you need to manually update the environment.yaml file to keep it
    in sync with the updated dependencies.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，你需要手动更新 environment.yaml 文件，以保持与更新的依赖项同步。
- en: '[PRE28]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Pip
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Pip
- en: Pip also only allows you to update a specified package and requires you to manually
    update the requirements.txt file.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: Pip 也只允许你更新指定的包，并要求你手动更新 requirements.txt 文件。
- en: '[PRE29]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Poetry
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Poetry
- en: Using Poetry, you can use the `update` command to upgrade all packages specified
    in the pyproject.toml file. This action automatically updates the poetry.lock
    file, ensuring consistency between the package specifications and the lock file.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Poetry，你可以使用 `update` 命令来升级 pyproject.toml 文件中指定的所有包。此操作会自动更新 poetry.lock
    文件，确保包规范和锁定文件之间的一致性。
- en: '[PRE31]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Dependency Resolution
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 依赖解析
- en: Dependency conflicts occur when packages or libraries required by a project
    have conflicting versions or incompatible dependencies. Properly resolving conflicts
    is crucial to avoid errors, runtime issues, or project failures.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 依赖冲突发生在项目所需的包或库具有冲突的版本或不兼容的依赖项时。正确解决冲突对于避免错误、运行时问题或项目失败至关重要。
- en: Pip
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Pip
- en: pip installs packages sequentially, which means it installs each package one
    by one, following the specified order. This sequential approach can sometimes
    lead to conflicts when packages have incompatible dependencies or version requirements.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: pip 顺序地安装包，这意味着它会按照指定的顺序逐个安装每个包。这种顺序方式有时会导致当包具有不兼容的依赖项或版本要求时发生冲突。
- en: For example, suppose you install `pandas==2.0.2` first, which requires `numpy>=1.20.3`.
    Later, you install `numpy==1.20.2` using pip. Even though this will create dependency
    conflicts, pip will proceed to update the version of numpy.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设你首先安装 `pandas==2.0.2`，它需要 `numpy>=1.20.3`。后来，你使用 pip 安装 `numpy==1.20.2`。尽管这会导致依赖冲突，但
    pip 会继续更新 numpy 的版本。
- en: '[PRE32]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Conda
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Conda
- en: Conda uses a SAT solver to explore all combinations of package versions and
    dependencies to find a compatible set.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: Conda 使用 SAT 求解器来探索所有包版本和依赖项的组合，以找到兼容的集合。
- en: For instance, if an existing package has a specific constraint for its dependency
    (e.g., statsmodels==0.13.2 requires numpy>=1.21.2,<2.0a0), and the package you
    want to install doesn’t meet that requirement (e.g., numpy<1.21.2), conda won’t
    immediately raise an error. Instead, it will diligently search for compatible
    versions of all the required packages and their dependencies, only reporting an
    error if no suitable solution is found.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果一个现有包对其依赖项有特定的约束（例如，statsmodels==0.13.2 需要 numpy>=1.21.2,<2.0a0），而你要安装的包不符合该要求（例如，numpy<1.21.2），conda
    不会立即引发错误。相反，它会仔细搜索所有所需包及其依赖项的兼容版本，只有在找不到合适的解决方案时才报告错误。
- en: '[PRE33]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: While this approach enhances the chances of finding a resolution, it can be
    computationally intensive, particularly when dealing with extensive environments.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这种方法提高了找到解决方案的机会，但在处理广泛环境时可能会计算密集。
- en: Poetry
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 诗歌
- en: By focusing on the direct dependencies of the project, Poetry’s deterministic
    resolver narrows down the search space, making the resolution process more efficient.
    It evaluates the specified constraints, such as version ranges or specific versions,
    and immediately identifies any conflicts.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 通过专注于项目的直接依赖，Poetry 的确定性解析器缩小了搜索范围，使得解析过程更为高效。它评估指定的约束条件，如版本范围或特定版本，并立即识别任何冲突。
- en: '[PRE34]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'This immediate feedback helps prevent potential issues from escalating and
    allows developers to address the problem early in the development process. For
    example, in the following code, we can relax the requirements for seaborn to enable
    the installation of a specific version of matplotlib:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 这种即时反馈有助于防止潜在问题升级，并允许开发者在开发过程早期解决问题。例如，在以下代码中，我们可以放宽对 seaborn 的要求，以便安装特定版本的
    matplotlib：
- en: '[PRE35]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Conclusion
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: 'In summary, Poetry provides several advantages over pip and conda:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 总结而言，Poetry 相比 pip 和 conda 提供了几个优势：
- en: '**Broad Package Selection:** Poetry provides access to a wide range of packages
    available on PyPI, allowing you to leverage a diverse ecosystem for your project.'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**广泛的软件包选择：** Poetry 提供对 PyPI 上广泛软件包的访问，允许你利用多样的生态系统来支持你的项目。'
- en: '**Efficient Dependency Management:** Poetry installs only the necessary dependencies
    for a specified package, reducing the number of extraneous packages in your environment.'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**高效的依赖管理：** Poetry 只安装指定软件包所需的必要依赖，减少了环境中多余的软件包数量。'
- en: '**Streamlined Package Removal:** Poetry simplifies the removal of packages
    and their associated dependencies, making it easy to maintain a clean and efficient
    project environment.'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**简化的软件包移除：** Poetry 简化了软件包及其相关依赖的移除，使得维护一个干净高效的项目环境变得更加容易。'
- en: '**Dependency Resolution:** Poetry’s deterministic resolver efficiently resolves
    dependencies, identifying and addressing any inconsistencies or conflicts promptly.'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**依赖解决：** Poetry 的确定性解析器高效地解决依赖关系，及时识别和处理任何不一致或冲突。'
- en: While Poetry may require some additional time and effort for your teammates
    to learn and adapt to, using a tool like Poetry can save you time and effort in
    the long run.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 Poetry 可能需要一些额外的时间和精力来让你的团队成员学习和适应，但长期来看，使用像 Poetry 这样的工具可以节省时间和精力。
- en: 'I love writing about data science concepts and playing with different data
    science tools. You can stay up-to-date with my latest posts by:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢写关于数据科学概念的文章，并玩弄各种数据科学工具。你可以通过以下方式跟进我的最新帖子：
- en: Subscribing to my newsletter on [Data Science Simplified](https://mathdatasimplified.com/).
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 订阅我在[Data Science Simplified](https://mathdatasimplified.com/)上的新闻通讯。
- en: Connect with me on [LinkedIn](https://www.linkedin.com/in/khuyen-tran-1401/)
    and [Twitter](https://twitter.com/KhuyenTran16).
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[LinkedIn](https://www.linkedin.com/in/khuyen-tran-1401/)和[Twitter](https://twitter.com/KhuyenTran16)上与我联系。
