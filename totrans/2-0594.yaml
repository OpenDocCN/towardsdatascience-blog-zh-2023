- en: Create Stunning Radar Plots with Matplotlib
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/create-stunning-radar-plots-with-matplotlib-6a8e05054ff9](https://towardsdatascience.com/create-stunning-radar-plots-with-matplotlib-6a8e05054ff9)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Visualising geological data using Python’s most popular data visualisation library
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://andymcdonaldgeo.medium.com/?source=post_page-----6a8e05054ff9--------------------------------)[![Andy
    McDonald](../Images/df11d647be032aeb3d31852affb33a64.png)](https://andymcdonaldgeo.medium.com/?source=post_page-----6a8e05054ff9--------------------------------)[](https://towardsdatascience.com/?source=post_page-----6a8e05054ff9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----6a8e05054ff9--------------------------------)
    [Andy McDonald](https://andymcdonaldgeo.medium.com/?source=post_page-----6a8e05054ff9--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----6a8e05054ff9--------------------------------)
    ·7 min read·Apr 19, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0dec40fb2793b0b25ae483d0ba80f368.png)'
  prefs: []
  type: TYPE_IMG
- en: Matplotlib radar plot with cyberpunk theming. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Radar plots (also known as spider plots or radar charts) are a popular data
    visualisation tool that allows us to compare datasets by displaying multiple variables
    simultaneously on a 2-dimensional plot.
  prefs: []
  type: TYPE_NORMAL
- en: Each variable is represented by a spoke extending from the plot's centre to
    the edge, and the magnitude of that variable is represented by how far along the
    spoke it is. Lines are then drawn between each of the variables to form a web-like
    shape.
  prefs: []
  type: TYPE_NORMAL
- en: Within geoscience and petrophysics, we can use radar plots to compare how lithologies
    vary between wells or display mineralogy variations between rock samples.
  prefs: []
  type: TYPE_NORMAL
- en: Within this tutorial, I will illustrate how we can create a radar plot using
    some synthetic lithology data. The data represents the average lithologies encountered
    within a well.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s get started!
  prefs: []
  type: TYPE_NORMAL
- en: Importing Libraries & Data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To get started, we will need to import two libraries: [numpy](https://numpy.org/)
    and [matplotlib](https://matplotlib.org/stable/index.html).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Next, we can create some dummy data.
  prefs: []
  type: TYPE_NORMAL
- en: Traditionally, this data may already by contained within a pandas dataframe.
    If it is, then it is recommended to convert the required columns to lists before
    proceeding.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Before we can use the data, we need to ensure that the areas we plot on the
    radar plot create a closed polygon.
  prefs: []
  type: TYPE_NORMAL
- en: To do this, we need to take all of the elements in the list and then append
    the first element to the end of the list.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: If we call upon `well2`, we will get back the following list of values and we
    will see that the first number is now also at the end of the list.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Building the Radar Plot with Matplotlib
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To begin constructing the radar plot, we will first need to sort the positions
    of the labels from the `lithologies` list. These will be equally spaced around
    the edge of the polar plot.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Next, we can move on to creating the radar plot figure.
  prefs: []
  type: TYPE_NORMAL
- en: First, we need to define the figure, which will be created using `plt.subplots`.
    Within the `subplot_kw` parameter, we need to specify that we want a polar plot.
  prefs: []
  type: TYPE_NORMAL
- en: Following that, we will add two axes to the plot and pass in the `label_loc`
    variable along with the `well1` and `well2` lists.
  prefs: []
  type: TYPE_NORMAL
- en: Then, we will create the polar grid using a call to `plt.thetagrids()` and here,
    we will pass in the label locations and the lithology labels.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: When we run the above code, we will return the following radar plot.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d592979df781d1c6d4b4ae502e301cb8.png)'
  prefs: []
  type: TYPE_IMG
- en: A basic radar plot created with matplotlib. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: What we get back looks good for a basic radar plot. However, we can improve
    it with a few tweaks.
  prefs: []
  type: TYPE_NORMAL
- en: Adding Fills to the Matplotlib Radar Plot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One way we can improve the radar plot is by adding a transparent fill to the
    two areas.
  prefs: []
  type: TYPE_NORMAL
- en: This is done using `ax.fill()` and passing in `label_loc` , the relevant well
    list containing the values, and setting the opacity to 0.3 using the `alpha` parameter.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: When we run the above code, we now have the following radar plot with the areas
    filled in.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/27261a95e5e6b1ffd3fdeda3ee4dbf37.png)'
  prefs: []
  type: TYPE_IMG
- en: A basic radar plot created with matplotlib showing area fills. Image by the
    author.
  prefs: []
  type: TYPE_NORMAL
- en: Adjusting Label Padding on Matplotlib Radar Plot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You will notice that the labels in the previous plot look small and overlap
    the lines.
  prefs: []
  type: TYPE_NORMAL
- en: We can fix this by setting the `tick_params` and changing the padding and labelsize.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: We get a plot with much more readable labels when we run the code.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f6864882205ed4057d70afa7db42038e.png)'
  prefs: []
  type: TYPE_IMG
- en: A basic radar plot created with matplotlib showing area fills, and after adjusting
    the label padding and size. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Stylising The Radar Plot Using Cyberpunk
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The previous plot forms a good radar plot that can be used in reports or presentations.
    However, if we want to stylise it, we can use one of the many matplotlib theme
    libraries.
  prefs: []
  type: TYPE_NORMAL
- en: If you want to see what libraries are available, then I recommend checking out
    my previous article, which looks at 4 popular themes.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/upgrade-your-data-visualisations-4-python-libraries-to-enhance-your-matplotlib-charts-74361bc3b92e?source=post_page-----6a8e05054ff9--------------------------------)
    [## Upgrade Your Data Visualisations: 4 Python Libraries to Enhance Your Matplotlib
    Charts'
  prefs: []
  type: TYPE_NORMAL
- en: Improve Your Data Visualisations with These Easy-to-Use Matplotlib Style Libraries
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/upgrade-your-data-visualisations-4-python-libraries-to-enhance-your-matplotlib-charts-74361bc3b92e?source=post_page-----6a8e05054ff9--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: The cyberpunk theme is one of my favourite themes for creating stylish plots
    in matplotlib. However, it is purely for aesthetic reasons, and you should always
    consider your audience and ensure maximum readability.
  prefs: []
  type: TYPE_NORMAL
- en: We can use the cyberpunk theme by importing the library and adding a `with`
    statement
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: We can now see that the plot has changed dramatically by adding two lines of
    code. However, the grid lines are a little faint for my liking.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0dd93f5f60f9a36aeabb7086c15ee2fd.png)'
  prefs: []
  type: TYPE_IMG
- en: Matplotlib radar plot after applying a cyberpunk theme. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: We can lighten the lines by adding a few additional pieces of code.
  prefs: []
  type: TYPE_NORMAL
- en: Changing the grid lines is done using `ax.grid()` and setting the `color` and
    `alpha` parameters to white and 0.3, respectively.
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to add the outer ring for the radar plot, we need to set up a custom
    tuple containing 4 values: red, green, and blue colour values and an alpha value.'
  prefs: []
  type: TYPE_NORMAL
- en: We can then pass this into a call to `ax.spines['polar'].set_color()`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: When we run the code, we now have the following radar plot with the radial grid
    lines. We can play around with the colour and transparency to get the effect we
    want.
  prefs: []
  type: TYPE_NORMAL
- en: However, bear in mind we do not want to have the lines too bright that they
    will distract the reader from the main data.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5dc3e32c6e44b008f6a0a3e2a415792d.png)'
  prefs: []
  type: TYPE_IMG
- en: Matplotlib radar plot with cyberpunk theme and visible gridlines. Image by the
    author.
  prefs: []
  type: TYPE_NORMAL
- en: To finish the styling we can set the grid lines so that they range from and
    to a number that we want. This will make the outer ring feel more balanced with
    the rest of the rings.
  prefs: []
  type: TYPE_NORMAL
- en: We can do this by setting the `ax.set_ylim()` and passing in our min and max
    values.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: We now have a much better-looking radar plot.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7a50e30978d538313f98981ff318475a.png)'
  prefs: []
  type: TYPE_IMG
- en: Matplotlib radar plot with a cyberpunk theme and fixing the range of the rings.
    Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Adding a Legend to the Radar Plot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To finish off our plot, we can help the reader understand the plot better, by
    adding a legend. This will allow the reader to know what area is what.
  prefs: []
  type: TYPE_NORMAL
- en: We could simply add some labels in the `ax.plot()` calls and then call upon
    `ax.legend`, however, this would only add lines to our legend.
  prefs: []
  type: TYPE_NORMAL
- en: If we want to add small rectangles representing the shaded area, we must create
    some patches first.
  prefs: []
  type: TYPE_NORMAL
- en: This is done by importing `Patch` from `matplotlib.patches`.
  prefs: []
  type: TYPE_NORMAL
- en: The created patches are then passed into the `ax.legend` call.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: And when we run the code we now have the finished plot.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3ee56cd435914fa8faf8ab2c0ca72768.png)'
  prefs: []
  type: TYPE_IMG
- en: Matplotlib radar plot with cyberpunk theming. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Radar plots provide a nice data visualisation and can easily be created using
    matplotlib. With additional style from the Cyberpunk theme library, we can take
    our radar plot to the next level and make it stylish.
  prefs: []
  type: TYPE_NORMAL
- en: Why don’t you give radar plots a go on your next data visualisation project.
  prefs: []
  type: TYPE_NORMAL
- en: '*Thanks for reading. Before you go, you should definitely subscribe to my content
    and get my articles in your inbox.* [***You can do that here!***](https://andymcdonaldgeo.medium.com/subscribe)*Alternatively,
    you can* [***sign up for my newsletter***](https://fabulous-founder-2965.ck.page/2ca286e572)
    *to get additional content straight into your inbox for free.*'
  prefs: []
  type: TYPE_NORMAL
- en: '*Secondly, you can get the full Medium experience and support thousands of
    other writers and me by signing up for a membership. It only costs you $5 a month,
    and you have full access to all of the fantastic Medium articles, as well as the
    chance to make money with your writing.*'
  prefs: []
  type: TYPE_NORMAL
- en: '*If you sign up using* [***my link***](https://andymcdonaldgeo.medium.com/membership)***,***
    *you will support me directly with a portion of your fee, and it won’t cost you
    more. If you do so, thank you so much for your support.*'
  prefs: []
  type: TYPE_NORMAL
