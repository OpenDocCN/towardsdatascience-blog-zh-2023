["```py\n# Import the required libraries\nfrom sklearn.tree import DecisionTreeRegressor\nimport numpy as np\n# Define the dataset\nX = np.array([[1], [3], [4], [7], [9], [10], [11], [13], [14], [16]])\ny = np.array([3, 4, 3, 15, 17, 15, 18, 7, 3, 4])\n```", "```py\nimport matplotlib.pyplot as plt\n\n# Plot the dataset with the decision tree splits\nplt.figure(figsize=(10,6))\nplt.scatter(X, y, color='blue')\nplt.show()\n```", "```py\nfrom sklearn.tree import DecisionTreeRegressor\n\n# Fit the decision tree model\nmodel = DecisionTreeRegressor(max_depth=1)\nmodel.fit(X, y)\n\n# Generate predictions for a sequence of x values\nx_seq = np.arange(0, 17, 0.1).reshape(-1, 1)\ny_pred = model.predict(x_seq)\n```", "```py\nimport numpy as np\n\nX=np.arange(1,13,1).reshape(-1,1)\ny=np.concatenate((np.arange(1,12,1),12), axis=None)\n\nplt.scatter(X,y)\n```", "```py\nimport numpy as np\nfrom sklearn.tree import DecisionTreeRegressor\nimport plotly.graph_objs as go\nfrom plotly.subplots import make_subplots\n\n# Define the data\nX = np.array([[1, 2], [3, 4], [4, 5], [7, 2], [9, 5], [10, 4], [11, 3], [13, 5], [14, 3], [16, 1],\n              [10, 10], [16, 10], [12, 10]])\ny = np.array([3, 4, 3, 15, 17, 15, 18, 7, 3, 4,8,10,13])\n```", "```py\n# Fit the decision tree model\nmodel = DecisionTreeRegressor(max_depth=3)\nmodel.fit(X, y)\n```", "```py\n# Create an interactive 3D plot with Plotly\nfig = make_subplots(rows=1, cols=1, specs=[[{'type': 'surface'}]])\n\nfig.add_trace(go.Surface(x=x_seq, y=y_seq, z=z_seq, colorscale='Viridis', showscale=True,opacity = 0.5),\n              row=1, col=1)\n\nfig.add_trace(go.Scatter3d(x=X[:, 0], y=X[:, 1], z=y, mode='markers', marker=dict(size=5, color='red')),\n              row=1, col=1)\n\nfig.update_layout(title='Decision Tree with Max Depth = {}'.format(max_depth),\n                  scene=dict(xaxis_title='x1', yaxis_title='x2', zaxis_title='Predicted Y'))\n\nfig.show()\n```"]