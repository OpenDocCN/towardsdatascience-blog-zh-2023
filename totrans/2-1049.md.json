["```py\nmodel = ForecastingCascade(\n    Ridge(),\n    lags=range(1,24*7+1),\n    use_exog=False,\n)\n```", "```py\nCV = TemporalSplit(n_splits=10, test_size=y_test.shape[0])\n\npred_val_matrix = np.full(\n    shape=(X_train.shape[0], CV.get_n_splits(X_train)),\n    fill_value=np.nan,\n    dtype=float,\n)\n\nfor i, (id_train, id_val) in enumerate(CV.split(X_train)):\n\n    pred_val = model.fit(\n        X_train[id_train], \n        y_train[id_train]\n    ).predict(X_train[id_val])\n\n    pred_val_matrix[id_val, i] = np.array(\n        pred_val, dtype=float\n    )\n\npred_val = np.nanmean(pred_val_matrix, axis=1)\n```", "```py\nconformity_scores  = np.abs(\n    np.subtract(\n        y_train[~np.isnan(pred_val)], \n        pred_val[~np.isnan(pred_val)]\n    )\n)\n```", "```py\npred_test = model.fit(\n    X_train, \n    y_train\n).predict(X_test)\n\nestimated_test_distributions = np.add(\n    pred_test[:, None], conformity_scores\n)\n```", "```py\nTHRESHOLD = 40\n\nprob_test = np.mean(estimated_test_distributions > THRESHOLD, axis=1)\n\nprob_test = pd.Series(prob_test).expanding(1).max()\n```"]