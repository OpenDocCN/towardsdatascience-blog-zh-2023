["```py\nimport altair as alt\nimport pandas as pd\nfrom ydata_profiling import ProfileReport\n\ndf = pd.read_csv('tourist_arrivals_countries.csv', parse_dates=['Date'])\n\ndf = pd.melt(df, id_vars='Date', value_name='Tourist Arrivals', var_name='Country')\n```", "```py\nchart = alt.Chart(df).mark_line().encode(\n    x = 'Date:T', #A\n    y = 'Tourist Arrivals:Q', #B\n    color=alt.Color('Country:N') #C\n)\n\nchart.save('raw-chart.html')\n```", "```py\n# extract year from date\ndf.loc[:, 'Year'] = df['Date'].dt.year\n\n# filter out years before 1994 and after 2018\ndf = df[(df['Year'] >= 1994) & (df['Year'] <= 2018)]\n\n# group by year and country\ndf = df.groupby(['Year', 'Country'])['Tourist Arrivals'].sum().reset_index()\n```", "```py\nchart = alt.Chart(df).mark_line().encode(\n    x = 'Year:O',\n    y = 'Tourist Arrivals:Q',\n    color=alt.Color('Country:N')\n)\n\nchart.save(‘chart.html’)\n```", "```py\n# select only 1994 and 2018\ndf = df[(df['Year'] == 1994) | (df['Year'] == 2018)]\n\n# add a new column containing the difference for each country between the number of tourist arrivals in the year and 1994\nfor country in df['Country'].unique():\n    current = df[df['Country'] == country]['Tourist Arrivals']\n    base = df[(df['Country'] == country) & (df['Year'] == 1994)]['Tourist Arrivals'].values[0]\n    df.loc[df['Country'] == country, 'PI'] = (current - base)/ base*100\n```", "```py\nbase = alt.Chart(df).encode(\n    x = alt.X('Year:O', title=''),\n    y = alt.Y('Tourist Arrivals:Q', title='Tourist Arrivals'),\n    color=alt.Color('Country:N',\n                    scale=alt.Scale(scheme='set2'), \n                    legend=None),\n    strokeWidth=alt.condition(alt.datum.Country == 'PT', alt.value(7), alt.value(0.5))\n).properties(\n    title='Tourist Arrivals in Portugal (1994-2018)',\n    width=600,\n)\n\nchart = base.mark_line()\n\nchart.save('chart.html')\n```", "```py\nannotation = base.mark_text(\n    dx=10,\n    align='left',\n    fontSize=12\n).encode(\n    # format the text to show only 2 decimal places and add a percentage sign\n    text='label:N'\n).transform_filter(\n    alt.datum.Year == 2018\n).transform_calculate(\n    label='datum.Country + \"(Increase:\" + format(datum.PI, \".2f\") + \"%)\"'\n)\n\nchart = (chart + annotation)\n```"]