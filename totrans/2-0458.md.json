["```py\npsql -U <USERNAME>\n```", "```py\npostgres=# CREATE DATABASE dvdrental;\n```", "```py\npg_restore -U postgres -d dvdrental dvdrental.tar\n```", "```py\npostgres=# \\c dvdrental\ndvdrental=# \\dt\n```", "```py\n List of relations\n Schema |     Name      | Type  |  Owner\n--------+---------------+-------+----------\n public | actor         | table | postgres\n public | address       | table | postgres\n public | category      | table | postgres\n public | city          | table | postgres\n public | country       | table | postgres\n public | customer      | table | postgres\n public | film          | table | postgres\n public | film_actor    | table | postgres\n public | film_category | table | postgres\n public | inventory     | table | postgres\n public | language      | table | postgres\n public | payment       | table | postgres\n public | rental        | table | postgres\n public | staff         | table | postgres\n public | store         | table | postgres\n```", "```py\nOPENAI_API_KEY = 'YOUR-OPENAI-API-KEY'\nPSQL_HOST = 'localhost'\nPSQL_PORT = 'YOUR-POSTGRES-PORT'\nPSQL_USERNAME = 'YOUR-POSTGRES-USERNAME'\nPSQL_PASSWORD = 'YOUR-POSTGRES-PASSWORD'\nPSQL_DB = 'dvdrental'\n```", "```py\npip install langchain langchain-experimental openai psycopg2\n```", "```py\nfrom os import environ\nfrom dotenv import load_dotenv\n\nfrom langchain.chat_models import ChatOpenAI\nfrom langchain.utilities import SQLDatabase\nfrom langchain_experimental.sql import SQLDatabaseChain\n\nload_dotenv()\n```", "```py\n# Instantiating Our LLM\n\nOPENAI_API_KEY = environ.get(\"OPENAI_API_KEY\")\nllm = ChatOpenAI(model_name='gpt-3.5-turbo', temperature=0, openai_api_key=OPENAI_API_KEY)\n```", "```py\n# Database Setup\n\nPSQL_HOST = environ.get(\"PSQL_HOST\")\nPSQL_PORT = environ.get(\"PSQL_PORT\")\nPSQL_USERNAME = environ.get(\"PSQL_USERNAME\")\nPSQL_PASSWORD = environ.get(\"PSQL_PASSWORD\")\nPSQL_DB = environ.get(\"PSQL_DB\")\npsql_uri = f\"postgresql+psycopg2://{PSQL_USERNAME}:{PSQL_PASSWORD}@{PSQL_HOST}:{PSQL_PORT}/{PSQL_DB}\"\n\ndb = SQLDatabase.from_uri(psql_uri, sample_rows_in_table_info=3)\ndb.get_usable_table_names()\n```", "```py\n['actor',\n 'address',\n 'category',\n 'city',\n 'country',\n 'customer',\n 'film',\n 'film_actor',\n 'film_category',\n 'inventory',\n 'language',\n 'payment',\n 'rental',\n 'staff',\n 'store']\n```", "```py\n# Definining Our SQL Dabatabe Chain\n\ndb_chain = SQLDatabaseChain.from_llm(llm, db, verbose=True)\n```", "```py\n# Define a Function To Run the Chain with Our Query\n\ndef query(input: str) -> str:\n    response = db_chain.run(input)\n    return response\n```", "```py\n# Example 1:\n\nquery(\"What is the average length of films released in 2006\")\n```", "```py\n> Entering new SQLDatabaseChain chain...\nWhat is the average length of films released in 2006\nSQLQuery:SELECT AVG(length) FROM film WHERE release_year = 2006\nSQLResult: [(Decimal('115.2720000000000000'),)]\nAnswer:The average length of films released in 2006 is 115.272 minutes.\n> Finished chain.\n**'The average length of films released in 2006 is 115.272 minutes.'**\n```", "```py\n# Example 2:\n\nquery(\"Which actor played in movies with total longer duration? And how much was the duration?\")\n```", "```py\n> Entering new SQLDatabaseChain chain...\nWhich actor played in movies with total longer duration? And how much was the duration?\nSQLQuery:SELECT a.first_name, a.last_name, SUM(f.length) AS total_duration\nFROM actor a\nJOIN film_actor fa ON a.actor_id = fa.actor_id\nJOIN film f ON fa.film_id = f.film_id\nGROUP BY a.actor_id\nORDER BY total_duration DESC\nLIMIT 1;\nSQLResult: [('Mary', 'Keitel', 4962)]\nAnswer:Mary Keitel played in movies with a total duration of 4962 minutes.\n> Finished chain.\n**'Mary Keitel played in movies with a total duration of 4962 minutes.'**\n```"]