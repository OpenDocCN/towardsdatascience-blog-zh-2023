- en: When Point Forecasts Are Completely Useless
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/when-point-forecasts-are-completely-useless-79cd27d0b1e5](https://towardsdatascience.com/when-point-forecasts-are-completely-useless-79cd27d0b1e5)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: While point forecasts are very popular, be aware of some unlucky pitfalls
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://sarem-seitz.medium.com/?source=post_page-----79cd27d0b1e5--------------------------------)[![Sarem
    Seitz](../Images/f833f915a0eb061f47524a67685ba76c.png)](https://sarem-seitz.medium.com/?source=post_page-----79cd27d0b1e5--------------------------------)[](https://towardsdatascience.com/?source=post_page-----79cd27d0b1e5--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----79cd27d0b1e5--------------------------------)
    [Sarem Seitz](https://sarem-seitz.medium.com/?source=post_page-----79cd27d0b1e5--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----79cd27d0b1e5--------------------------------)
    ·11 min read·Jan 1, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e63f16578e099928702a3ae2905cb800.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Kai Pilger](https://unsplash.com/@kaip?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/1k3vsv7iIIc?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[In the last article](https://www.sarem-seitz.com/why-i-prefer-probabilistic-forecasts-hitting-time-probabilities/),
    we discussed one advantage of probabilistic forecasts over point forecasts — namely,
    handling time-to-exceedance problems. In this post, we will examine another limitation
    of point forecasts: Higher order statistical properties.'
  prefs: []
  type: TYPE_NORMAL
- en: The ideas will be very familiar to those with a background in mathematics or
    statistics. Readers without formal training in either will therefore probably
    benefit the most from this article.
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this post, you’ll have a better idea of how higher order statistical
    properties can impact the performance of your forecasts. In particular, we will
    see how point forecasts can actually completely fail without further adjustment.
  prefs: []
  type: TYPE_NORMAL
- en: Two examples of point forecast failure
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To sensitize you for the issues of point forecasts, let us continue with two
    very simple examples. Both time-series admit to a pretty simple, auto-regressive
    data generating process.
  prefs: []
  type: TYPE_NORMAL
- en: We will generate enough data for an auto-regressive Gradient Boosting model
    to be sensible. Thus, we avoid both using a model that is too inflexible and overfitting
    due to a lack of data.
  prefs: []
  type: TYPE_NORMAL
- en: Example 1 — Auto-regressive variance (GARCH)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/81b22ab336d9d7d27a911ed90de17f0a.png)'
  prefs: []
  type: TYPE_IMG
- en: Simulated time-series with auto-regressive variance. (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: 'This is a standard [GARCH](https://en.wikipedia.org/wiki/Autoregressive_conditional_heteroskedasticity)
    time-series as they are frequently encountered in econometrics. If you want to
    get some ideas on how you can handle such data, I have also written a few articles:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Random Forests and Boosting for ARCH-like volatility forecasts](https://www.sarem-seitz.com/random-forests-and-boosting-for-arch-like-volatility-forecasts/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Multivariate GARCH with Python and Tensorflow](https://www.sarem-seitz.com/multivariate-garch-with-python-and-tensorflow/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Let’s make GARCH more flexible with Normalizing Flows](https://www.sarem-seitz.com/lets-make-garch-more-flexible-with-normalizing-flows/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anyway, let us use the cookie cutter approach of Machine Learning for time-series
    for now. Namely, we use [Nixtla’s mlforecast package](https://github.com/Nixtla/mlforecast)
    to build an auto-regressive Boosting model for us. (This is not meant to bash
    on the Nixtla package. In fact, it is really helpful and convenient if you know
    what you are doing.)
  prefs: []
  type: TYPE_NORMAL
- en: 'The results look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/547e629395142581e08f22efb912319b.png)'
  prefs: []
  type: TYPE_IMG
- en: Gradient Boosting forecast of a time-series with auto-regressive variance. (Image
    by author)
  prefs: []
  type: TYPE_NORMAL
- en: Unfortunately, the result does not help at all. Although we have provided the
    actual ground-truth number of lags, the forecast is practically useless.
  prefs: []
  type: TYPE_NORMAL
- en: Example 2 — Auto-regressive, non-Gaussian data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This next example follows a more cooked up data generating process. Nevertheless,
    this doesn’t preclude some real-world time-series following a similar logic, too:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/98f5faffad8282b37d893cd967817496.png)'
  prefs: []
  type: TYPE_IMG
- en: Simulated time-series from an auto-regressive Beta-distribution. (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: 'Let us check how a Gradient Boosting model performs for this case:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1298ed3c3cc2c1ee50d68438515bfd2e.png)'
  prefs: []
  type: TYPE_IMG
- en: Gradient Boosting forecast of a time-series with auto-regressive Beta distribution.
    (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: Again, the forecast is utterly useless.
  prefs: []
  type: TYPE_NORMAL
- en: What has gone wrong with our point forecasts?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As you might know, `sklearn.ensemble.GradientBoostingRegressor` minimizes the
    **mean-squared error** ( **MSE**) by default. The following is a well known property
    of MSE-minimization:'
  prefs: []
  type: TYPE_NORMAL
- en: '***A distribution’s mean minimizes its mean-squared error.***'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Mathematically:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a656c6cfd9a307b5a1e93b1e3abdb603.png)'
  prefs: []
  type: TYPE_IMG
- en: (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: where we presume an arbitrarily large set of admissable functions. Also, we
    implicitly need to assume that the conditional mean actually exists. This is reasonably
    likely for most well-behaved forecasting problems.
  prefs: []
  type: TYPE_NORMAL
- en: Thus, both of the above models aim to forecast the mean of the conditional distribution
    of our observations. The issue here is that the conditional mean is actually constant
    by construction.
  prefs: []
  type: TYPE_NORMAL
- en: This is obvious for the first example — each observation has a conditional mean
    of zero. For the second example, we would have to do some math for a formal proof
    that is left to the interested reader.
  prefs: []
  type: TYPE_NORMAL
- en: Now, although the conditional mean remains constant over time, our time-series
    is still far from being just pure noise. Predicting the mean via MSE-minimization
    was rather inadequate to describe the future.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can go even further and proclaim:'
  prefs: []
  type: TYPE_NORMAL
- en: '***Even a perfect (point-) forecasting model can be useless if the forecast
    quantity is uninformative.***'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'We can visualize via plots of conditional densities against conditional means
    from our examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/57d1ccc30765fcd7982cc89a0a84736b.png)'
  prefs: []
  type: TYPE_IMG
- en: Conditional densities VS. (constant) conditional mean. (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: On the one hand, the conditional distribution is varying and can be predicted
    from past by construction. The conditional mean, however, is constant and does
    not tell us anything about the future distribution.
  prefs: []
  type: TYPE_NORMAL
- en: What can we do?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: At first glance, the above issues paint a rather grim picture of the capabilities
    of raw point forecasts. As always, the situation is of course much more granular.
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, let us discuss a rough pathway of what to do if your point forecasts
    aren’t really cutting it.
  prefs: []
  type: TYPE_NORMAL
- en: Assess if you even have problem at all — point forecasts can still work
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As we have just seen, point forecasts can fail miserably. Given that they are
    being widely used, however, indicates that they will cause trouble for your problem.
    Many forecasting problems can be solved reasonably well with standard approaches.
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes, you just need to put in a little more effort into your model. Simply
    using another loss function or another non-linear transformation of your features
    might be sufficient. Once you observe that a point forecast simply won’t cut it
    though, it might be time to go probabilistic.
  prefs: []
  type: TYPE_NORMAL
- en: 'Two cases can be good indicators:'
  prefs: []
  type: TYPE_NORMAL
- en: '**1) Your point forecasts show little variation and are almost constant.**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Mathematically:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/54d5a178dfac40adeb18808904fe4234.png)'
  prefs: []
  type: TYPE_IMG
- en: (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: This is what happened in our examples and should be visible in your model validation
    steps. As we have seen, there is no reason to conclude that something is wrong
    with your model or your data yet.
  prefs: []
  type: TYPE_NORMAL
- en: '**2) Occasional, large outliers frequently make your point forecasts useless.**'
  prefs: []
  type: TYPE_NORMAL
- en: This issue leads us into the domain of [extreme-value theory](https://en.wikipedia.org/wiki/Extreme_value_theory)
    and probably deserves a blog series of its own. Hence, we will only take a brief
    look at what is happening here.
  prefs: []
  type: TYPE_NORMAL
- en: 'As an exaggerated, yet illustrative example, consider the following time-series:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7e3bed2e7d958b7007f19fbc0f3770e7.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This is nothing more than samples from a [Cauchy distribution](https://en.wikipedia.org/wiki/Cauchy_distribution)
    whose location is determined by a sine. Now, let us see how the MSE evolves with
    increasing sample size if our (point-) forecast was just a continuance of the
    underlying sine:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5e90a1b682bd4c5982c315313233147b.png)'
  prefs: []
  type: TYPE_IMG
- en: Running MSE of the Sine-Cauchy forecast model. (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: Surprisingly, the MSE doesn’t even converge after **250.000** (**!**) observations.
    No matter how much data you observe, your **average (!)** squared error keeps
    growing. This is a property of a certain family of probability distributions that
    the Cauchy is part of.
  prefs: []
  type: TYPE_NORMAL
- en: You will likely never observe such a monstrosity in your day-to-day life. Almost
    all real-world time-series adhere to certain limitations that make an infinite
    MSE unlikely.
  prefs: []
  type: TYPE_NORMAL
- en: Nevertheless, it would be helpful to get at least some idea of how likely you
    will observe large outliers. Imagine, for example, how valuable a rough probability
    of an extreme collapse of the tourism sector could have been in 2019.
  prefs: []
  type: TYPE_NORMAL
- en: Adjust your definition of a ‘useful’ forecast
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Of course it can be very difficult to convince your stakeholders of the above
    issues of point forecasts. For business folks, probabilistic approaches might
    look like unnecessary rocket science.
  prefs: []
  type: TYPE_NORMAL
- en: Rather, we typically measure forecasting success by how closely predictions
    match future observations. If something goes wrong, just add more data and hope
    that you’ll be better off next time. However, consider the underlying complexity
    of most time-series systems. What are your chances of ever collecting all the
    relevant data?
  prefs: []
  type: TYPE_NORMAL
- en: This is like trying to collect and process all relevant factors to predict the
    exact outcome of a game of roulette. While possible in theory, the sheer amount
    of granularity makes this impossible in practice.
  prefs: []
  type: TYPE_NORMAL
- en: Nevertheless, you might discover that there are some physical flaws in the roulette
    table. If these flaws are skewing the odds in a certain direction, making your
    bets accordingly could make you a fortune in the long run.
  prefs: []
  type: TYPE_NORMAL
- en: 'If we transfer this analogy to general forecasting problems, this leads us
    to a paradigm shift:'
  prefs: []
  type: TYPE_NORMAL
- en: '***Instead of trying to predict the future as exactly as possible, forecast
    models should optimize our odds when betting on future outcomes.***'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Taking this betting metaphor further, we arrive at three conclusions for forecasting:'
  prefs: []
  type: TYPE_NORMAL
- en: '**1) Real-world decisions are almost always made under uncertainty**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Consider the following problem:'
  prefs: []
  type: TYPE_NORMAL
- en: You are an ice cream vendor and want to optimize your daily inventoy. For simplicity,
    we presume that each day, you either
  prefs: []
  type: TYPE_NORMAL
- en: Sell exactly `10` pounds of ice-cream with a `90%` chance or
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sell `0` pounds with a `10%` chance (because the weather is really bad, you
    know)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Also, presume that
  prefs: []
  type: TYPE_NORMAL
- en: You can buy `1` pound of ice cream for `1` money at the beginning of each day
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sell `1` pound for `1.2` money
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Your ice-cream inventory goes to zero at the end of each day (no overnight warehousing)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If your total losses exceed `-10` money you are going bankrupt
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Imagine you are building a demand forecast model for that problem to decide
    how much ice-cream you want to sell. If you go the point-forecast + MSE route,
    your result would be as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Expected demand is `0.9*10+0.1*0 = 9`, therefore the MSE-minimizing forecast
    is also `9` per day. Are you going to buy `9` pounds of ice-cream each day? What
    about the risk of bankruptcy if you don't sell anything multiple times in a row?
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/75a0789095f6ce521c4b40a1f6ef04f6.png)'
  prefs: []
  type: TYPE_IMG
- en: Probability Mass Function and expected value of the ice-cream vendor problem.
    (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: This is the point where uncertainty comes into play and you need to decide on
    how much risk you want to take. As often in life, this is another trade-off between
    profit and risk.
  prefs: []
  type: TYPE_NORMAL
- en: Unfortunately, the point-forecast alone doesn’t account for any uncertainty.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let us now presume that we had a probabilistic forecast model that was able
    to predict the respective **probability mass function** (pmf). From here, we can
    derive our earnings `R` for day `t` as a random variable given our inventory `x`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7df1425479da6b66d28a0e1245fdd646.png)'
  prefs: []
  type: TYPE_IMG
- en: (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: This information could then be used in a [stochastic program](https://en.wikipedia.org/wiki/Stochastic_programming#:~:text=A%20stochastic%20program%20is%20an,assumed%20to%20be%20known%20exactly.).
    The latter can be seen as a probabilistic extension to deterministic optimization.
    Here, we can also account for and optimize our risk when dealing with real-world
    uncertainty.
  prefs: []
  type: TYPE_NORMAL
- en: In fact, real-world complexity is worlds beyond our little ice-cream example.
    Consider yourself what this means for the likelihood that reality will diverge
    from your point forecasts.
  prefs: []
  type: TYPE_NORMAL
- en: '**2 ) Many small bets are safer than a few large ones**'
  prefs: []
  type: TYPE_NORMAL
- en: Back to the flawed roulette table, imagine that the probability of `0` is slightly
    higher than expected. Would you place all your chips on `0` in a single run or
    place small amounts on it for many rounds?
  prefs: []
  type: TYPE_NORMAL
- en: If you are unlucky, even the smallest possible bet size could lead you into
    bankruptcy. The chances of this happening are, nevertheless, much larger if you
    go all-in in a single turn. While it is beyond this article to discuss proper
    bet sizing, the [Kelly criterion](https://en.wikipedia.org/wiki/Kelly_criterion)
    might be a useful start.
  prefs: []
  type: TYPE_NORMAL
- en: In practice, this could mean going from monthly forecasts to daily forecasts.
    That is of course a very simplistic recommendation. Subject to other factors,
    daily forecasts might still be less accurate or not useful at all. At this point,
    yours and your stakeholder’s expertise are necessary to find the right balance.
  prefs: []
  type: TYPE_NORMAL
- en: '**3) Sometimes, it’s better not to play the game at all**'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s face it, there are always situations where you can only lose in the long
    run. If the signal-to noise ratio of your time-series is too low, it can be impossible
    to provide useful predictions.
  prefs: []
  type: TYPE_NORMAL
- en: Hedge funds with very deep pockets are [paying absurd sums of money for alternative
    data](https://edition.cnn.com/2019/07/10/investing/hedge-fund-drones-alternative-data/index.html).
    All that just to make their forecasts a tiny bit more accurate than that of their
    competitors. Unless you have access to the same data (if it is even good at all),
    you are unlikely to consistently outperform them on the same bets.
  prefs: []
  type: TYPE_NORMAL
- en: In case you have reached this point, you might want to look for new data to
    improve your forecasts. If that doesn’t help either, it could even make sense
    to rely on respective forecasts altogether.
  prefs: []
  type: TYPE_NORMAL
- en: Create multiple point forecasts of relevant summary statistics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Instead of focusing on forecasting mean via MSE-minimzation (or median through
    MAE-minimization),
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f1736a3fec01f4d65e5dce17ff234863.png)'
  prefs: []
  type: TYPE_IMG
- en: (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: you could predict other quantities that describe your distribution.
  prefs: []
  type: TYPE_NORMAL
- en: In **Example 1**, the most obvious would be conditional variance,
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1c8d9244fc042e71ff2e57a73ba18bee.png)'
  prefs: []
  type: TYPE_IMG
- en: (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: You can find a short overview on how to forecast conditional variance in [this
    article](https://www.sarem-seitz.com/random-forests-and-boosting-for-arch-like-volatility-forecasts/#:~:text=Estimating%20Variance%20directly).
  prefs: []
  type: TYPE_NORMAL
- en: Once your model predicts a period of high variance, you could decide to play
    it safer. What ‘playing it safe’ means is obviously depending on the context of
    your forecasting problem.
  prefs: []
  type: TYPE_NORMAL
- en: '**Example 2** might also benefit from a conditional variance forecast. However,
    notice that [conditional skewness](https://en.wikipedia.org/wiki/Skewness) is
    also playing a role here. One approach to deal with this situation might be a
    forecast of conditional quantiles, i.e.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/53fd358cd4b84dd75403d3e8693bb40a.png)'
  prefs: []
  type: TYPE_IMG
- en: (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: This is known as [**quantile regression**](https://en.wikipedia.org/wiki/Quantile_regression)and,
    e.g., sklearn’s GradientBoostingRegressor actually implements the respective loss.
  prefs: []
  type: TYPE_NORMAL
- en: Which quantities you should choose will ultimately depend on your specific problem.
    The biggest advantage here is that you don’t make any assumptions about the underlying
    distribution. Rather, you just let your model ‘learn’ the important aspects of
    the distribution that you care about.
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, it will be difficult to perform stochastic optimization with
    this approach. After, all you just compress the most relevant information into
    a several point forecasts. If you want to calculate the formally best decision
    given some forecast, you will therefore likely have to
  prefs: []
  type: TYPE_NORMAL
- en: Replace your point forecast by a probabilistic forecast
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The most challenging but also the most holistic approach. As we saw, the success
    of probabilistic methods often depends on the probability distribution you choose.
  prefs: []
  type: TYPE_NORMAL
- en: Technically, [non-parametric](https://en.wikipedia.org/wiki/Nonparametric_statistics)
    and ML methods can learn a probability distribution from the data, too. Keep in
    mind though, that time-series problems often involve much fewer observations than
    your typical ML use-case. As a result, these approaches can easily fall prey to
    overfitting here.
  prefs: []
  type: TYPE_NORMAL
- en: Especially if you are a Python user, you will probably have to implement many
    models yourself. Contrary to R, the Python ecosystem around forecasting seems
    to be much more focused on point forecasts. In case you only need a SARIMAX-like
    solution, `statsmodel` will, however, be your friend.
  prefs: []
  type: TYPE_NORMAL
- en: Below, I also summarized the three different approaches to forecasting that
    we have discussed so far. Keep in mind that there are advantages and disadvantages
    to all three.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c96281097ee894b297fc62e21453fbe8.png)'
  prefs: []
  type: TYPE_IMG
- en: Different forecasting styles compared. (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Hopefully, you now have a better idea of the pitfalls of point forecasts. While
    point forecasts are not bad per se, they just show you an incomplete picture of
    what is happening in an uncertain world.
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, probabilistic forecasts offer a much richer perspective on
    the future of a given time-series. If you need a sound approach to handle the
    uncertainty of real-world complex systems, this is the way to go. Keep in mind,
    though, that this route will require more manual effort in many situations.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**[1]** Hamilton, James Douglas. *Time series analysis*. Princeton university
    press, 2020.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[2]** Hyndman, Rob J., & Athanasopoulos, George. *Forecasting: principles
    and practice*. OTexts, 2018.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Originally published at* [*https://www.sarem-seitz.com*](https://www.sarem-seitz.com/when-point-forecasts-are-completely-useless/)
    *on January 1, 2023.*'
  prefs: []
  type: TYPE_NORMAL
