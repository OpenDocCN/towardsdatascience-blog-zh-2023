- en: 5 Python Decorators I Use in Almost All My Data Science Projects
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我在几乎所有数据科学项目中使用的 5 个 Python 装饰器
- en: 原文：[https://towardsdatascience.com/python-decorators-for-data-science-6913f717669a](https://towardsdatascience.com/python-decorators-for-data-science-6913f717669a)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/python-decorators-for-data-science-6913f717669a](https://towardsdatascience.com/python-decorators-for-data-science-6913f717669a)
- en: Decorators provide a new and convenient way for everything from caching to sending
    notifications.
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 装饰器提供了一种新颖且便捷的方法，从缓存到发送通知应有尽有。
- en: '[](https://thuwarakesh.medium.com/?source=post_page-----6913f717669a--------------------------------)[![Thuwarakesh
    Murallie](../Images/44f1a14a899426592bbd8c7f73ce169d.png)](https://thuwarakesh.medium.com/?source=post_page-----6913f717669a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----6913f717669a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----6913f717669a--------------------------------)
    [Thuwarakesh Murallie](https://thuwarakesh.medium.com/?source=post_page-----6913f717669a--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://thuwarakesh.medium.com/?source=post_page-----6913f717669a--------------------------------)[![Thuwarakesh
    Murallie](../Images/44f1a14a899426592bbd8c7f73ce169d.png)](https://thuwarakesh.medium.com/?source=post_page-----6913f717669a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----6913f717669a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----6913f717669a--------------------------------)
    [Thuwarakesh Murallie](https://thuwarakesh.medium.com/?source=post_page-----6913f717669a--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----6913f717669a--------------------------------)
    ·6 min read·Mar 13, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----6913f717669a--------------------------------)
    ·6 分钟阅读·2023年3月13日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/fc0bc39e9f13f04a39005e4e7610a8fe.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fc0bc39e9f13f04a39005e4e7610a8fe.png)'
- en: Photo by [Elena Mozhvilo](https://unsplash.com/@miracleday?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Elena Mozhvilo](https://unsplash.com/@miracleday?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: At first, every developer’s goal is to get things working. Slowly, we worry
    about readability and scalability. This is when we first start thinking about
    decorators.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 一开始，每个开发者的目标都是让事情运作起来。逐渐地，我们开始关注可读性和可扩展性。这时我们开始考虑装饰器。
- en: Decorators are an excellent way to give additional behavior to a function. And
    there are little things we data scientists often need to inject into a function
    definition.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 装饰器是为函数提供额外行为的绝佳方式。作为数据科学家，我们经常需要将一些小功能注入到函数定义中。
- en: With decorators, you’d be surprised to see how much you can reduce code repetition
    and improve readability. I certainly did.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 使用装饰器，你会惊讶于你能减少多少代码重复并提高可读性。我确实感到惊讶。
- en: '[](https://levelup.gitconnected.com/streamlit-openai-gpt3-example-app-b333da955ceb?source=post_page-----6913f717669a--------------------------------)
    [## Create GPT3 Powered Apps in Minutes With Streamlit'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://levelup.gitconnected.com/streamlit-openai-gpt3-example-app-b333da955ceb?source=post_page-----6913f717669a--------------------------------)
    [## 使用 Streamlit 在几分钟内创建 GPT3 驱动的应用程序'
- en: Learn to build intelligent apps without worrying too much about software development.
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 学会构建智能应用程序，而无需过多担心软件开发。
- en: levelup.gitconnected.com](https://levelup.gitconnected.com/streamlit-openai-gpt3-example-app-b333da955ceb?source=post_page-----6913f717669a--------------------------------)
    [](/etl-github-actions-cron-383f618704b6?source=post_page-----6913f717669a--------------------------------)
    [## How to Build Simple ETL Pipelines With GitHub Actions
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: levelup.gitconnected.com](https://levelup.gitconnected.com/streamlit-openai-gpt3-example-app-b333da955ceb?source=post_page-----6913f717669a--------------------------------)
    [](/etl-github-actions-cron-383f618704b6?source=post_page-----6913f717669a--------------------------------)
    [## 如何使用 GitHub Actions 构建简单的 ETL 流水线
- en: ETLs don’t have to be complex. If that’s the case, use GitHub Actions.
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ETL 不必复杂。如果是这样的话，可以使用 GitHub Actions。
- en: towardsdatascience.com](/etl-github-actions-cron-383f618704b6?source=post_page-----6913f717669a--------------------------------)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/etl-github-actions-cron-383f618704b6?source=post_page-----6913f717669a--------------------------------)
- en: Here are the five most common ones I use in almost every data-intensive project.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我在几乎每个数据密集型项目中使用的五种最常见的装饰器。
- en: 1\. The retry decorator
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. 重试装饰器
- en: In data science projects and software development projects, there are so many
    instances where we depend on external systems. Things are not in our control all
    the time.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据科学项目和软件开发项目中，我们经常依赖外部系统。事情并不总是在我们的控制之下。
- en: '[](/3-important-sql-optimization-technique-d6da3e9c8442?source=post_page-----6913f717669a--------------------------------)
    [## 3 SQL Optimization Techniques That Can Instantly Boost Query Speed'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/3-important-sql-optimization-technique-d6da3e9c8442?source=post_page-----6913f717669a--------------------------------)
    [## 3 SQL优化技巧，能立即提升查询速度'
- en: Simple hacks to try before moving to a different data model altogether
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在完全转到不同的数据模型之前，可以尝试一些简单的技巧。
- en: towardsdatascience.com](/3-important-sql-optimization-technique-d6da3e9c8442?source=post_page-----6913f717669a--------------------------------)
    [](https://levelup.gitconnected.com/3-ways-of-web-scraping-in-python-e953c4a96ec2?source=post_page-----6913f717669a--------------------------------)
    [## The Serene Symphony of Python Web Scraping — in 3 Movements
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/3-important-sql-optimization-technique-d6da3e9c8442?source=post_page-----6913f717669a--------------------------------)
    [](https://levelup.gitconnected.com/3-ways-of-web-scraping-in-python-e953c4a96ec2?source=post_page-----6913f717669a--------------------------------)
    [## Python网络抓取的宁静交响曲——三重奏'
- en: The easiest, the most flexible, and the most comprehensive ways to do web scraping
    in Python
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在Python中进行网络抓取的最简单、最灵活和最全面的方法
- en: levelup.gitconnected.com](https://levelup.gitconnected.com/3-ways-of-web-scraping-in-python-e953c4a96ec2?source=post_page-----6913f717669a--------------------------------)
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[levelup.gitconnected.com](https://levelup.gitconnected.com/3-ways-of-web-scraping-in-python-e953c4a96ec2?source=post_page-----6913f717669a--------------------------------)'
- en: When an unexpected event occurs, we might want our code to wait a while, allowing
    the external system to correct itself and rerun.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 当发生意外事件时，我们可能希望我们的代码等待一段时间，以便外部系统自行修正并重新运行。
- en: I prefer to implement this retry logic inside a python decorator so that I can
    annotate any function to apply the retry behavior.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我倾向于在Python装饰器中实现这个重试逻辑，以便可以注解任何函数来应用重试行为。
- en: Here’s the code for a retry decorator.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个重试装饰器的代码。
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In the above code, we try to get an API response. If it fails, we retry the
    same task 5 times. Between each retry, we wait for 2 seconds.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述代码中，我们尝试获取API响应。如果失败，我们重试相同的任务5次。每次重试之间，我们等待2秒。
- en: 2\. Caching function results
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. 缓存函数结果
- en: Some parts of our codebase rarely change their behaviors. Yet, it may take a
    big chunk of our computation power. In such situations, we can use a decorator
    to cache function calls.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的代码库中有些部分很少改变其行为。然而，它们可能会占用大量计算资源。在这种情况下，我们可以使用装饰器来缓存函数调用。
- en: '[](/poetry-to-complement-virtualenv-44088cc78fd1?source=post_page-----6913f717669a--------------------------------)
    [## You Are Not Still Using Virtualenv, Are You?'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/poetry-to-complement-virtualenv-44088cc78fd1?source=post_page-----6913f717669a--------------------------------)
    [## 你还在使用Virtualenv吗？'
- en: There is a better way to manage dependencies, package, and publish Python projects.
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 有一种更好的方法来管理依赖关系、打包和发布Python项目。
- en: towardsdatascience.com](/poetry-to-complement-virtualenv-44088cc78fd1?source=post_page-----6913f717669a--------------------------------)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/poetry-to-complement-virtualenv-44088cc78fd1?source=post_page-----6913f717669a--------------------------------)'
- en: The function will run only once if the inputs are the same. In every subsequent
    run, the results will be pulled from the cache. Hence, we don’t have to perform
    expensive computations all the time.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果输入相同，函数只会运行一次。在每次后续运行中，结果将从缓存中获取。因此，我们不必一直进行昂贵的计算。
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The decorator uses a dictionary, stores the function args, and returns values.
    When we execute this function, the decorated will check the dictionary for prior
    results. The actual function is called only when there’s no stored value before.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 装饰器使用字典来存储函数参数和返回值。当我们执行这个函数时，装饰器会检查字典中的先前结果。实际函数只有在没有存储值时才会被调用。
- en: The following is a Fibonacci number calculating a function. Since this is a
    recurrent function, the same function called is performed multiple times. But
    with caching, we can speed up this process.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个计算斐波那契数的函数。由于这是一个递归函数，相同的函数调用会被执行多次。但有了缓存，我们可以加速这个过程。
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Here are the execution times for this function with and without caching. Note
    that the cached version only takes a faction of a millisecond to run, whereas
    the non-cached version almost took a minute.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是这个函数在有缓存和无缓存情况下的执行时间。请注意，缓存版本的运行时间只有毫秒的一小部分，而未缓存版本几乎花了一分钟。
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Using a dictionary to hold previous execution data is a straightforward approach.
    However, there is a more sophisticated way to store caching data. You can use
    an in-memory database, such as Redis.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 使用字典来保存先前的执行数据是一种直接的方法。然而，还有一种更复杂的方式来存储缓存数据。你可以使用内存数据库，比如Redis。
- en: 3\. Timing functions
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. 计时函数
- en: This one is no surprise. When working with data-intensive functions, we’re eager
    to learn how long it takes to run.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不令人惊讶。当处理数据密集型函数时，我们渴望了解运行所需的时间。
- en: The usual way of doing this is by collecting two timestamps, one at the beginning
    and another at the end of the function. We can then compute the duration and print
    it along with the return values.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 通常的做法是收集两个时间戳，一个在函数开始时，一个在函数结束时。然后我们可以计算持续时间，并将其与返回值一起打印出来。
- en: But doing this again and again for multiple functions is a hassle.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 但对多个函数重复进行这项工作是很麻烦的。
- en: Instead, we can have a decorator do it. We can annotate any function that needs
    a duration printed.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，我们可以让装饰器来完成这件事。我们可以对任何需要打印持续时间的函数进行注解。
- en: 'Here’s an example Python decorator that prints the running time of a function
    when it’s called:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个示例 Python 装饰器，当函数被调用时，它会打印运行时间：
- en: '[PRE5]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'You can use this decorator to time the execution of a function:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用这个装饰器来计时函数的执行时间：
- en: '[PRE6]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Calling the function would print the time it takes to run.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 调用函数将打印运行所需的时间。
- en: '[PRE7]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 4\. Logging function calls
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4\. 记录函数调用
- en: This one is very much an extension of the previous decorator. But it has some
    particular uses.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这个装饰器很大程度上是对前一个装饰器的扩展。但它有一些特定的用途。
- en: If you follow software design principles, you’d appreciate the single responsibility
    principle. This essentially means each function will have its one and only one
    responsibility.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你遵循软件设计原则，你会欣赏单一职责原则。这本质上意味着每个函数将有其唯一的责任。
- en: '[](/plotly-dashboards-in-python-28a3bb83702c?source=post_page-----6913f717669a--------------------------------)
    [## This is How I Create Dazzling Dashboards Purely in Python.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/plotly-dashboards-in-python-28a3bb83702c?source=post_page-----6913f717669a--------------------------------)
    [## 这是我如何仅用 Python 创建炫目仪表盘的方法。'
- en: Plotly dash apps are the fastest way to build production-grade dashboards in
    python.
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Plotly dash 应用程序是用 Python 构建生产级仪表盘的最快方式。
- en: towardsdatascience.com](/plotly-dashboards-in-python-28a3bb83702c?source=post_page-----6913f717669a--------------------------------)
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/plotly-dashboards-in-python-28a3bb83702c?source=post_page-----6913f717669a--------------------------------)'
- en: When you design your code in such a way, you’d also want to log the execution
    information of your functions. This is where logging decorators come in handy.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 当你以这种方式设计你的代码时，你还会希望记录函数的执行信息。这就是日志记录装饰器派上用场的地方。
- en: The following example illustrates this.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例说明了这一点。
- en: '[PRE8]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The above code is a simplified version of an ETL pipeline. We have three separate
    functions to handle each extract, transform, and load. We have wrapped each of
    them using our `log_execution` decorator.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的代码是一个简化版的 ETL 流水线。我们有三个独立的函数来处理提取、转换和加载。我们用我们的`log_execution`装饰器包装了它们。
- en: 'Now, whenever the code is executed, you’d see an output similar to this:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，每当代码被执行时，你会看到类似这样的输出：
- en: '[PRE9]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: We could also have the execution time printed inside this decorator. But I’d
    love to have them both in separate decorators. That way, I can choose which one
    (or both) to use for a function.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以让执行时间在这个装饰器中打印出来。但我更喜欢将它们分开到不同的装饰器中。这样，我可以选择在函数中使用哪一个（或两个）。
- en: Here’s how to use multiple decorators on a single function.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是如何在一个函数上使用多个装饰器的方法。
- en: '[PRE10]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 5\. Notification decorator
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5\. 通知装饰器
- en: Finally, a very useful decorator in production systems is the notification decorator.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，一个在生产系统中非常有用的装饰器是通知装饰器。
- en: Once again, even with several retries, even a well-tested codebase fails. And
    when that happens, we need to inform someone about it to take quick action.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，即使经过多次重试，即使是经过良好测试的代码库也会失败。当这种情况发生时，我们需要通知某人以便快速采取行动。
- en: This isn’t new if you’ve ever built a data pipeline and hoped it would work
    fine forever.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你曾经构建过数据管道并希望它能永久稳定工作，这并不新鲜。
- en: The following decorator sends an email whenever the execution of the inner function
    fails. It doesn’t have to be an email notification in your case. You can configure
    it to send a Teams/slack notification.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 以下装饰器会在内部函数执行失败时发送一封电子邮件。在你的情况下，它不一定是电子邮件通知。你可以配置它发送 Teams/slack 通知。
- en: '[PRE11]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Conclusion
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: Decorators are a very convenient way to apply new behavior to our functions.
    Without them, there will be a lot of code repetition.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 装饰器是一种非常方便的方式来为我们的函数应用新行为。如果没有它们，将会有很多代码重复。
- en: In this post, I’ve discussed my most frequently used decorators. You can extend
    these for your specific needs. For instance, you can use a Redis server to store
    cache responses instead of dictionaries. This will give you more control over
    the data, such as persistence. Or you could tweak the code to increase the waiting
    time in the retry decorator progressively.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我讨论了我最常用的装饰器。你可以根据你的特定需求扩展这些装饰器。例如，你可以使用 Redis 服务器来存储缓存响应，而不是使用字典。这将使你对数据有更多的控制，比如持久性。或者，你可以调整代码，逐步增加重试装饰器中的等待时间。
- en: In all of my projects, I use some version of these decorators. Though their
    behavior differs slightly, these are the common goals I frequently use decorators
    for.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在我所有的项目中，我都会使用这些装饰器的某个版本。尽管它们的行为略有不同，但这些是我经常使用装饰器的共同目标。
- en: I hope this post helps you.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 希望这篇文章对你有所帮助。
- en: Thanks for reading, friend! If you enjoyed my article, let’s keep in touch on
    [**LinkedIn**](https://www.linkedin.com/in/thuwarakesh/), [**Twitter**](https://twitter.com/Thuwarakesh),
    and [**Medium**](https://thuwarakesh.medium.com/).
  id: totrans-80
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 感谢阅读，朋友！如果你喜欢我的文章，请在 [**LinkedIn**](https://www.linkedin.com/in/thuwarakesh/)、[**Twitter**](https://twitter.com/Thuwarakesh)
    和 [**Medium**](https://thuwarakesh.medium.com/) 上保持联系。
- en: ''
  id: totrans-81
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Not a Medium member yet? Please use this link to [**become a member**](https://thuwarakesh.medium.com/membership)
    because, at no extra cost for you, I earn a small commission for referring you.
  id: totrans-82
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 还不是 Medium 的会员？请使用这个链接 [**成为会员**](https://thuwarakesh.medium.com/membership)，因为在不增加额外费用的情况下，我可以获得一小部分推荐佣金。
