- en: Develop Your Own Spelling Check Toolkit with Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python 开发你自己的拼写检查工具包
- en: 原文：[https://towardsdatascience.com/develop-your-own-spelling-check-toolkit-with-python-740bf84a865d](https://towardsdatascience.com/develop-your-own-spelling-check-toolkit-with-python-740bf84a865d)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/develop-your-own-spelling-check-toolkit-with-python-740bf84a865d](https://towardsdatascience.com/develop-your-own-spelling-check-toolkit-with-python-740bf84a865d)
- en: Creating an application to verify your spellings effectively with Python
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Python 创建一个有效检查拼写的应用程序
- en: '[](https://bharath-k1297.medium.com/?source=post_page-----740bf84a865d--------------------------------)[![Bharath
    K](../Images/b6f215f28132a953bcae80842301e303.png)](https://bharath-k1297.medium.com/?source=post_page-----740bf84a865d--------------------------------)[](https://towardsdatascience.com/?source=post_page-----740bf84a865d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----740bf84a865d--------------------------------)
    [Bharath K](https://bharath-k1297.medium.com/?source=post_page-----740bf84a865d--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://bharath-k1297.medium.com/?source=post_page-----740bf84a865d--------------------------------)[![Bharath
    K](../Images/b6f215f28132a953bcae80842301e303.png)](https://bharath-k1297.medium.com/?source=post_page-----740bf84a865d--------------------------------)[](https://towardsdatascience.com/?source=post_page-----740bf84a865d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----740bf84a865d--------------------------------)
    [Bharath K](https://bharath-k1297.medium.com/?source=post_page-----740bf84a865d--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----740bf84a865d--------------------------------)
    ·7 min read·Jan 11, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----740bf84a865d--------------------------------)
    ·7 分钟阅读·2023年1月11日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/7afeb5ad5b1c2c058199cdc11b12f4fd.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7afeb5ad5b1c2c058199cdc11b12f4fd.png)'
- en: Photo by [Olesia 🇺🇦 Buyar](https://unsplash.com/@olesichka?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Olesia 🇺🇦 Buyar](https://unsplash.com/@olesichka?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Whenever I start writing articles or any other work-related items, my primary
    focus is to put out my ideas and compile them into a document or piece of paper.
    During this process, I often find myself running into spelling errors or grammatical
    mistakes.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 每当我开始撰写文章或其他工作相关内容时，我的主要关注点是将我的想法整理成文档或纸张。在这个过程中，我常常发现自己会遇到拼写错误或语法错误。
- en: Hence, it is a fantastic idea to build your own spell-check software, especially
    if you run into similar problems and want to optimize your work while your priority
    of concentration revolves around generating and developing your ideas.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，建立你自己的拼写检查软件是一个绝妙的主意，尤其是当你遇到类似问题并希望优化工作时，而你专注的优先级是围绕生成和开发你的想法。
- en: While several tools already serve this purpose, the advantage of building your
    own software is that you can customize the project for additional improvements.
    Several additions, such as an interactive environment (built with Tkinter or other
    similar libraries), natural language processing techniques (like autocorrect),
    and many other extra functionalities, can be considered to enhance the project
    further.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然已经有几个工具可以完成这个目的，但自己构建软件的好处在于你可以定制项目以进行额外改进。可以考虑的几种添加功能，如交互环境（使用 Tkinter 或其他类似库构建）、自然语言处理技术（如自动纠错）以及许多其他附加功能，都可以进一步增强项目。
- en: It is also critical to note that while there are several enhancements that you
    can make to the project, it is difficult for the artificial intelligence built
    to understand the true semantic meaning behind sentences. Hence, statements of
    humor, sarcasm, or generic phrases might be misunderstood by the software built.
    We will look at tackling these challenges in future articles.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 同样重要的是要注意，虽然你可以对项目进行多种改进，但人工智能仍难以理解句子背后的真正语义。因此，幽默、讽刺或通用短语的陈述可能会被软件误解。我们将在未来的文章中讨论如何应对这些挑战。
- en: A project that I would encourage the readers to check out before proceeding
    with this article is a guide on how to build your language filter with Python
    from the link provided below. We can compile the work in this article and the
    previous one to further upgrade the project, where certain inappropriate slang
    words might be censored while pointing out spelling errors.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我鼓励读者在继续阅读本文之前查看一个项目，该项目是如何使用Python构建语言过滤器的指南，链接如下。我们可以将本文和之前的工作整合起来，进一步升级项目，在此过程中可以屏蔽某些不适当的俚语，同时指出拼写错误。
- en: '[](/build-your-language-filter-with-python-d6502f9c224b?source=post_page-----740bf84a865d--------------------------------)
    [## Build Your Language Filter With Python'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/build-your-language-filter-with-python-d6502f9c224b?source=post_page-----740bf84a865d--------------------------------)
    [## 使用Python构建您的语言过滤器'
- en: A guide on how to build a language filter in python useful for censoring foul
    language and other inappropriate stuff
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何在Python中构建语言过滤器的指南，适用于审查粗俗语言和其他不适当的内容
- en: towardsdatascience.com](/build-your-language-filter-with-python-d6502f9c224b?source=post_page-----740bf84a865d--------------------------------)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/build-your-language-filter-with-python-d6502f9c224b?source=post_page-----740bf84a865d--------------------------------)'
- en: 'Developing the Spelling Check Application:'
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开发拼写检查应用程序：
- en: '![](../Images/095bd1b0d63cea9f3f77bec91c4f3eb0.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/095bd1b0d63cea9f3f77bec91c4f3eb0.png)'
- en: Photo by [Dariusz Sankowski](https://unsplash.com/es/@dariuszsankowski?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Dariusz Sankowski](https://unsplash.com/es/@dariuszsankowski?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: In this section of the article, we will work on constructing the application
    to highlight the spellings accordingly with their appropriate colors to signify
    if they are right or wrong (Green highlighting a correct word while red signifying
    a possible error). Each sub-section of this article will cover all the major components
    of the project.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文的这一部分，我们将构建应用程序，以便根据适当的颜色突出显示拼写，以指示它们是否正确（绿色突出显示正确单词，而红色表示可能的错误）。本文的每个子部分将涵盖项目的所有主要组件。
- en: Our primary objective is to develop appropriate spell-check software for the
    user. Hence, we will not convert the wrong words directly into the closest suggested
    word, as in the case of an autocorrect project. We will look at such a task in
    a future article! For now, let us get started with the spelling check application
    with Python.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的主要目标是为用户开发适当的拼写检查软件。因此，我们不会将错误单词直接转换为最接近的建议单词，就像自动纠正项目那样。我们将在未来的文章中探讨这种任务！现在，让我们开始使用Python构建拼写检查应用程序。
- en: 'Importing the essential libraries:'
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入核心库：
- en: The essential libraries that we will utilize for this task are the *natural
    language processing toolkit (NLTK)* and its corresponding word corpus containing
    a list of the widespread English words. Note that if the developers wish to, they
    can choose to create their own dictionary containing all the words they want to
    add to their vocabulary. However, this process may be quite tedious but worth
    the pain for the specific task.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在此任务中将使用的核心库是*自然语言处理工具包（NLTK）*及其对应的词库，包含了一列常见的英语单词。请注意，如果开发者愿意，他们可以选择创建自己的词典，包含所有他们想要添加到词汇中的单词。然而，这个过程可能相当繁琐，但对于特定任务而言是值得的。
- en: The other libraries that we will utilize for this project are the term color
    and *regular expressions* modules. All the libraries mentioned in this article
    can be installed with a straightforward `pip install` command. The regular expressions
    library helps us to pre-process the unnecessary contents from the particular sentence
    to only focus on the entered words. On the other hand, the term color library
    helps to segregate the right and wrong words by assigning the appropriate color.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将用于该项目的其他库是term color和*正则表达式*模块。本文中提到的所有库都可以通过简单的`pip install`命令安装。正则表达式库帮助我们从特定句子中预处理不必要的内容，以便只关注输入的单词。另一方面，term
    color库帮助通过分配适当的颜色来区分正确和错误的单词。
- en: Below is the list of all the required libraries that must be imported to get
    started with the project.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是开始项目所需导入的所有库的列表。
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Pre-processing the input sentence:'
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预处理输入句子：
- en: In this section of the project, we will focus on accepting an input sentence
    from the user to spell test the sentence appropriately. Using the regular expressions
    substitute command, we will replace punctuations and other special characters
    with a blank space. We do the following step to prevent the inclusion of these
    characters along with the words. We can also convert the characters into lower
    case and prepare to evaluate the sentence. The code block for performing the following
    actions is provided below.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在本项目的这一部分，我们将重点关注从用户那里接受输入句子，以适当地对句子进行拼写测试。使用正则表达式替换命令，我们将用空格替换标点符号和其他特殊字符。我们采取以下步骤，以防止这些字符与单词一起包含。我们还可以将字符转换为小写，并准备评估句子。下面提供了执行以下操作的代码块。
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Creating the sequential pattern for spell checking the data:'
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为数据拼写检查创建顺序模式：
- en: In this section, we will split the sentence and verify the spelling of each
    word individually. We can use the split command to split each word based on spaces.
    Note that since we have already pre-processed the sentence in the previous steps,
    all punctuations and special characters are removed accordingly.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将拆分句子并逐个验证每个单词的拼写。我们可以使用拆分命令根据空格拆分每个单词。请注意，由于我们在前面的步骤中已经预处理了句子，因此所有标点符号和特殊字符都被相应地移除。
- en: The next step is to check if each word in the sentence exists in the list of
    the *nltk* words package. A word with no inclusion of the respective word in the
    package will be printed in red using the term color library functionality that
    we previously imported. All the correct words will be interpreted in green, and
    the sentence will be provided to the user. Below is the code block for computing
    the following process.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是检查句子中的每个单词是否存在于*nltk*单词包的列表中。没有在包中包含的单词将使用我们之前导入的term color库功能以红色打印。所有正确的单词将以绿色解释，句子将提供给用户。下面是计算以下过程的代码块。
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Once we finish coding the program, we can proceed to test the output via the
    command prompt or a local terminal in the interactive development environment.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们完成了程序的编码，就可以通过命令提示符或交互式开发环境中的本地终端测试输出。
- en: 'Testing the output:'
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试输出：
- en: '![](../Images/82ddfb3bd7a0ee3772405daf59f66441.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/82ddfb3bd7a0ee3772405daf59f66441.png)'
- en: Screenshot by Author
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截图
- en: Once we have finished coding our project, we can test the output by entering
    a random sentence and experimenting with how the program works. In about 30 lines
    of code, we can notice that we have been successfully able to detect a pattern
    of words that may be spelled incorrectly by marking them in red while all the
    correctly spelled words are marked in green.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们完成了项目的编码，就可以通过输入随机句子并实验程序的工作方式来测试输出。在大约30行代码中，我们可以发现我们成功地标记了可能拼写错误的单词为红色，同时所有拼写正确的单词标记为绿色。
- en: The program helps to deduce an error in the spelling of a particular sentence
    or paragraph, but there are several improvements that we can make to further make
    this project much better. We will cover a few more of the additional improvements
    that curious developers can explore in the upcoming section.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 该程序帮助推断特定句子或段落中的拼写错误，但我们可以进行一些改进，以使该项目更进一步。我们将在即将到来的部分中介绍一些好奇的开发人员可以探索的附加改进。
- en: 'Additional improvements:'
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 额外的改进：
- en: In this section, we will look at a few of the many improvements that we can
    add to improve this project further. A few noteworthy additions would be as follows
    for developers to start working on next —
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将查看我们可以添加的一些改进，以进一步改进该项目。开发人员可以开始着手下一步的一些值得注意的改进如下 —
- en: Adding a language filter, as discussed in the previous section, to censor foul
    language or any other inappropriate slang words makes it a project that can be
    deployed on an effective framework.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加语言过滤器，如前一节所述，用于审查粗俗语言或其他不当俚语，使得该项目可以部署在有效的框架上。
- en: Using deep learning and natural language processing for the inclusion of autocorrect
    techniques and next-word predictions.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用深度学习和自然语言处理来包含自动纠正技术和下一个单词预测。
- en: Developing a user interface for the following project instead of working on
    a command terminal or the compiler of the IDE. I have provided a list of the seven
    best UI graphics tools available in Python for the efficient development of your
    Projects with some starter codes that you can check out from the link below.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开发一个用户界面用于以下项目，而不是在命令终端或 IDE 的编译器中工作。我提供了一个 Python 中七个最佳 UI 图形工具的列表，以高效开发你的项目，并附有一些入门代码，你可以从下面的链接查看。
- en: '[](/7-best-ui-graphics-tools-for-python-developers-with-starter-codes-2e46c248b47c?source=post_page-----740bf84a865d--------------------------------)
    [## 7 Best UI Graphics Tools For Python Developers With Starter Codes'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/7-best-ui-graphics-tools-for-python-developers-with-starter-codes-2e46c248b47c?source=post_page-----740bf84a865d--------------------------------)
    [## 7 个最佳 Python 开发者 UI 图形工具及入门代码'
- en: The seven best UI graphics tools available in Python for developing cool user
    interface technologies
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 七款最佳 Python UI 图形工具，用于开发酷炫的用户界面技术
- en: towardsdatascience.com](/7-best-ui-graphics-tools-for-python-developers-with-starter-codes-2e46c248b47c?source=post_page-----740bf84a865d--------------------------------)
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/7-best-ui-graphics-tools-for-python-developers-with-starter-codes-2e46c248b47c?source=post_page-----740bf84a865d--------------------------------)
- en: 'Conclusion:'
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论：
- en: '![](../Images/aaa13de052f3192ce6621be440506e3f.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/aaa13de052f3192ce6621be440506e3f.png)'
- en: Photo by [Aaron Burden](https://unsplash.com/@aaronburden?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Aaron Burden](https://unsplash.com/@aaronburden?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: “It is a damn poor mind that can think of only one way to spell a word.”
  id: totrans-50
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “只有一种拼写方式的思想，真是极其贫乏。”
- en: ― **Andrew Jackson**
  id: totrans-51
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: ― **安德鲁·杰克逊**
- en: Typing or writing are essential elements in most people’s lifestyles. While
    typing numerous words, sentences, and paragraphs, it is not uncommon to run into
    different types of spelling mistakes ranging from slightly longer ones to mediocre
    ones to the simplest spelling mistakes. While there are several tools that pinpoint
    these errors, it is extremely satisfying to build your own custom spell-check
    application that can be further upgraded to be the most suitable device for your
    liking.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 打字或写作是大多数人生活中不可或缺的元素。在打字时，遇到各种拼写错误是常见的，从稍微长一点的错误到中等错误，再到最简单的拼写错误。虽然有许多工具可以指出这些错误，但能够构建自己的自定义拼写检查应用程序，并进一步升级为最适合自己需求的工具，极具满足感。
- en: In this article, we learned how to build a simple spell-checking software application
    with Python in about 30 lines of code. We made use of the natural language processing
    toolkit library to simplify the process of accumulating most of the reasonable
    English words available in a typical dictionary. We utilized regular expressions
    for streamlining the data and used the term color library to highlight the right
    and wrong words accordingly.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们学习了如何用 Python 代码构建一个简单的拼写检查软件，大约 30 行代码。我们利用自然语言处理工具库简化了从典型词典中积累大部分合理英语单词的过程。我们使用正则表达式来简化数据，并使用
    term color 库来相应地突出正确和错误的单词。
- en: If you want to get notified about my articles as soon as they go up, check out
    the following [link](https://bharath-k1297.medium.com/subscribe) to subscribe
    for email recommendations. If you wish to support other authors and me, then subscribe
    to the below link.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望在我的文章发布后立即收到通知，请查看以下 [链接](https://bharath-k1297.medium.com/subscribe) 订阅邮件推荐。如果你愿意支持我和其他作者，请订阅下面的链接。
- en: '[](https://bharath-k1297.medium.com/membership?source=post_page-----740bf84a865d--------------------------------)
    [## Join Medium with my referral link - Bharath K'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://bharath-k1297.medium.com/membership?source=post_page-----740bf84a865d--------------------------------)
    [## 使用我的推荐链接加入 Medium - Bharath K'
- en: Read every story from Bharath K (and thousands of other writers on Medium).
    Your membership fee directly supports…
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阅读 Bharath K（以及 Medium 上其他成千上万的作家）的每一个故事。你的会员费直接支持…
- en: bharath-k1297.medium.com](https://bharath-k1297.medium.com/membership?source=post_page-----740bf84a865d--------------------------------)
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: bharath-k1297.medium.com](https://bharath-k1297.medium.com/membership?source=post_page-----740bf84a865d--------------------------------)
- en: If you have any queries related to the various points stated in this article,
    then feel free to let me know in the comments below. I will try to get back to
    you with a response as soon as possible.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对文章中提到的各种要点有任何疑问，请随时在评论区告诉我。我会尽快回复你。
- en: Check out some of my other articles in relation to the topic covered in this
    piece that you might also enjoy reading!
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 查看一些与本文主题相关的其他文章，您可能会喜欢阅读！
- en: '[](/the-ultimate-replacements-to-jupyter-notebooks-51da534b559f?source=post_page-----740bf84a865d--------------------------------)
    [## The Ultimate Replacements to Jupyter Notebooks'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '[## Jupyter Notebooks 的终极替代方案](https://towardsdatascience.com/the-ultimate-replacements-to-jupyter-notebooks-51da534b559f?source=post_page-----740bf84a865d--------------------------------)'
- en: Discussing an excellent replacement option to Jupyter Notebooks for interpreting
    Data Science projects
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 讨论了一个优于 Jupyter Notebooks 的优秀替代选项，用于解读数据科学项目
- en: towardsdatascience.com](/the-ultimate-replacements-to-jupyter-notebooks-51da534b559f?source=post_page-----740bf84a865d--------------------------------)
    [](/7-best-research-papers-to-read-to-get-started-with-deep-learning-projects-59e11f7b9c32?source=post_page-----740bf84a865d--------------------------------)
    [## 7 Best Research Papers To Read To Get Started With Deep Learning Projects
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '[## Jupyter Notebooks 的终极替代方案](https://towardsdatascience.com/the-ultimate-replacements-to-jupyter-notebooks-51da534b559f?source=post_page-----740bf84a865d--------------------------------)
    [## 7 篇最佳研究论文，助力深度学习项目入门](https://towardsdatascience.com/7-best-research-papers-to-read-to-get-started-with-deep-learning-projects-59e11f7b9c32?source=post_page-----740bf84a865d--------------------------------)'
- en: The seven best research papers that have stood the test of time and will help
    you to create amazing projects
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 七篇经受时间考验的最佳研究论文，将帮助你创造出色的项目
- en: towardsdatascience.com](/7-best-research-papers-to-read-to-get-started-with-deep-learning-projects-59e11f7b9c32?source=post_page-----740bf84a865d--------------------------------)
    [](/visualizing-cpu-memory-and-gpu-utilities-with-python-8028d859c2b0?source=post_page-----740bf84a865d--------------------------------)
    [## Visualizing CPU, Memory, And GPU Utilities with Python
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 使用 Python 可视化 CPU、内存和 GPU 利用率](https://towardsdatascience.com/visualizing-cpu-memory-and-gpu-utilities-with-python-8028d859c2b0?source=post_page-----740bf84a865d--------------------------------)'
- en: Analyzing CPU, memory usage, and GPU components for monitoring your PC and deep
    learning projects
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分析 CPU、内存使用情况和 GPU 组件，以便监控你的 PC 和深度学习项目
- en: towardsdatascience.com](/visualizing-cpu-memory-and-gpu-utilities-with-python-8028d859c2b0?source=post_page-----740bf84a865d--------------------------------)
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 使用 Python 可视化 CPU、内存和 GPU 利用率](https://towardsdatascience.com/visualizing-cpu-memory-and-gpu-utilities-with-python-8028d859c2b0?source=post_page-----740bf84a865d--------------------------------)'
- en: Thank you all for sticking on till the end. I hope all of you enjoyed reading
    the article. Wish you all a wonderful day!
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢大家一直看到最后。希望大家喜欢这篇文章。祝大家有美好的一天！
