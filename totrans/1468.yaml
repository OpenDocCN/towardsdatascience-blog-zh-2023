- en: Make Your Charts Great with UTF-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/make-your-charts-great-with-utf-8-f1ec9dcc97d0](https://towardsdatascience.com/make-your-charts-great-with-utf-8-f1ec9dcc97d0)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Incorporate custom icons in Plotly Express
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@lee_vaughan?source=post_page-----f1ec9dcc97d0--------------------------------)[![Lee
    Vaughan](../Images/9f6b90bb76102f438ab0b9a4a62ffa3f.png)](https://medium.com/@lee_vaughan?source=post_page-----f1ec9dcc97d0--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f1ec9dcc97d0--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f1ec9dcc97d0--------------------------------)
    [Lee Vaughan](https://medium.com/@lee_vaughan?source=post_page-----f1ec9dcc97d0--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----f1ec9dcc97d0--------------------------------)
    ·5 min read·Jun 14, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5d0d9a25466dce66642e54b02e5357ec.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Le Vu](https://unsplash.com/@xiaowuuuuuuu?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/hf92uVYPGr0?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: Python’s major graphing libraries make beautiful charts out-of-the-box, but
    they’re designed for exploratory data analysis, professional reports, and scientific
    articles. They can be a bit dry for consumption by the general public and other
    non-technical folks.
  prefs: []
  type: TYPE_NORMAL
- en: In this *Quick Success Data Science* project, we’ll look at a way to spice up
    your graphs using readily available icons that can be treated as text. Specifically,
    we’ll use the popular *Plotly Express* library to make a bar chart of the theoretical
    maximum number of squares each chess piece can control at one time (assuming the
    piece is in the center of an empty board).
  prefs: []
  type: TYPE_NORMAL
- en: To make this a more engaging infographic, we’ll decorate the bars with symbols
    available in the UTF-8 collection of characters.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b5e7c35bad22385e48f77bd73e84be97.png)'
  prefs: []
  type: TYPE_IMG
- en: Example of decorated bars in a bar chart (image by the author)
  prefs: []
  type: TYPE_NORMAL
- en: What is UTF-8?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: According to Wikipedia, “UTF-8 is a variable-length character encoding standard
    used for electronic communication. Defined by the Unicode Standard, the name is
    derived from Unicode (or Universal Coded Character Set) Transformation Format
    — 8-bit. UTF-8 is the dominant encoding for the World Wide Web (and internet technologies).”
  prefs: []
  type: TYPE_NORMAL
- en: With UTF-8, every character you may want to use, such as the symbol for pi or
    the letter “A,” is assigned a unique code. Besides familiar text characters, UTF-8
    includes icons for all types of things, from smiling faces to jet planes to snails.
    These icons can be treated as *text* when annotating Plotly Express charts.
  prefs: []
  type: TYPE_NORMAL
- en: Finding UTF-8 Icons
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can search for UTF-8 icons on this [site](https://www.compart.com/de/unicode/).
    Rather than search for each individual chess piece, search for “chess.” This will
    return the page shown below, with a listing of compatible icons.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3f313f531da2e7e6ff64ef583bb96dda.png)'
  prefs: []
  type: TYPE_IMG
- en: Results of searching for the Unicode symbol for “chess” (image by the author)
  prefs: []
  type: TYPE_NORMAL
- en: If you click the white knight icon, you’ll get the screen below.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8ddf82aab465a6fb8c125ef1817efcdf.png)'
  prefs: []
  type: TYPE_IMG
- en: Results of clicking on the white knight icon (image by the author)
  prefs: []
  type: TYPE_NORMAL
- en: Here’s the fun part. To use this icon, simply highlight and copy the large image.
    You can then paste this image directly into your Python code, as I’ll demonstrate
    shortly. There’s no need to enter the actual UTF-8 code.
  prefs: []
  type: TYPE_NORMAL
- en: The Plotly Express Library
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To make the chart, we’ll use [*Plotly Express*](https://plotly.com/python/plotly-express/),
    a higher-level version of the Plotly graphing library. This library abstracts
    away much of the drudgery in making plots and lets you easily produce attractive
    figures with a lot of built-in functionality.
  prefs: []
  type: TYPE_NORMAL
- en: Plotly Express requires Plotly as a dependency. You can install it with either
    conda or pip.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s the conda installation:'
  prefs: []
  type: TYPE_NORMAL
- en: '`conda install -c plotly plotly_express`'
  prefs: []
  type: TYPE_NORMAL
- en: 'And here’s the pip version:'
  prefs: []
  type: TYPE_NORMAL
- en: '`pip install plotly`'
  prefs: []
  type: TYPE_NORMAL
- en: The Code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The following code was run in JupyterLab. It’s presented and described *by cell.*
  prefs: []
  type: TYPE_NORMAL
- en: Importing Libraries
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Plotly Express is designed to work well with data in the *pandas DataFrame*
    format, so we’ll want to import both Plotly Express and pandas. Pandas can be
    installed with either `conda install pandas` or `pip install pandas`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Entering the Data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We’ll enter the data into two dictionaries which use the names of the pieces
    as keys. One will hold the number of squares controlled per piece and one will
    hold the UTF-8 symbols. We’ll merge these on the *piece name*, so these should
    be the same in both dictionaries.
  prefs: []
  type: TYPE_NORMAL
- en: Note how you can directly paste the icon from the UTF-8 search page referenced
    previously. Is that cool or what? You just need to enclose it in single or double
    quotes as it’s treated as a string.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/194e1d74c7e7cf8bd970afded68efcf2.png)'
  prefs: []
  type: TYPE_IMG
- en: The merged DataFrame (image by the author)
  prefs: []
  type: TYPE_NORMAL
- en: Creating the Chart
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Plotly Express makes it easy to generate standard charts such as bar charts,
    scattergrams, heatmaps, and so on. Here, we’ll use the `bar()` method to make
    a bar chart. Once you pass the method the DataFrame’s *name*, you just need to
    provide the *column names* to access the data in subsequent arguments. This makes
    for very readable code.
  prefs: []
  type: TYPE_NORMAL
- en: The `text` argument captures the UTF-8 symbol, which will be placed automatically
    near the top of each bar. To control the size of the symbol, use the `textfont_size`
    argument of the `update_traces()` method. The `marker_color` argument refers to
    the *bar* color, *not* the symbol color.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/c6da525a746f7da54483530da32553ad.png)'
  prefs: []
  type: TYPE_IMG
- en: The theoretical maximum number of squares each piece can control at one time
    (image by the author)
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, UTF-8 icons can be treated as regular text when making plots
    in Plotly Express. This means that you can use them as text annotations and place
    them anywhere you want. In the example that follows, we place a *red smiley face*
    above the Knight bar to demonstrate the process.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/9d6019bde4e2921847f96c655538e55a.png)'
  prefs: []
  type: TYPE_IMG
- en: Bar chart with red smiley face posted over the Knight bar (image by the author)
  prefs: []
  type: TYPE_NORMAL
- en: Results
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: UTF-8 icons let you add a little whimsy to your plots, giving them an “infographics”
    type of feel. While not necessary or even desired for analytical work or scientific
    articles, decorating plots in this manner can be beneficial when preparing newsletters,
    tutorials, annual reports, and other documents aimed at a non-technical audience.
  prefs: []
  type: TYPE_NORMAL
- en: Thanks!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Thanks for reading and please follow me for more *Quick Success Data Science*
    projects in the future.
  prefs: []
  type: TYPE_NORMAL
