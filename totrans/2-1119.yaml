- en: How to Build an LLM Application
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-to-build-an-llm-application-360848c957db](https://towardsdatascience.com/how-to-build-an-llm-application-360848c957db)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Using Langchain and OpenAI to Build LLM Centred Apps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://johnadeojo.medium.com/?source=post_page-----360848c957db--------------------------------)[![John
    Adeojo](../Images/f6460fae462b055d36dce16fefcd142c.png)](https://johnadeojo.medium.com/?source=post_page-----360848c957db--------------------------------)[](https://towardsdatascience.com/?source=post_page-----360848c957db--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----360848c957db--------------------------------)
    [John Adeojo](https://johnadeojo.medium.com/?source=post_page-----360848c957db--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----360848c957db--------------------------------)
    ·5 min read·Jul 21, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5f840382aba59b8fb02a918285107a91.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Image by Author: Generated with Midjourney'
  prefs: []
  type: TYPE_NORMAL
- en: LLM Centric Apps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The rate of innovation in AI has been tremendous over a short period. Specifically,
    two innovations have opened up a plethora of possibilities for building apps centred
    around large language models (LLMs): [Function calling](https://openai.com/blog/function-calling-and-other-api-updates)
    and [agents](https://python.langchain.com/docs/modules/agents/).'
  prefs: []
  type: TYPE_NORMAL
- en: In this article, I demonstrate how you can utilise function calling and agents
    to perform searches on flight databases, enabling you to find cheap flights, short
    flights, long flights, or anything that suits your preference.
  prefs: []
  type: TYPE_NORMAL
- en: 'Please note — At the very least, you will require the following to make this
    work for yourself:'
  prefs: []
  type: TYPE_NORMAL
- en: An [OpenAI API key](https://www.howtogeek.com/885918/how-to-get-an-openai-api-key/)
    — For accessing the large language models.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An [Amadeus API key](https://developers.amadeus.com/) — For accessing the flight
    data.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, let’s delve into the technical details.
  prefs: []
  type: TYPE_NORMAL
- en: Autonomous Agent Chains
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Langchain](https://python.langchain.com/docs/get_started/introduction.html)
    has been at the forefront of the LLM-powered agent. It’s a simple, yet potent
    concept.'
  prefs: []
  type: TYPE_NORMAL
- en: Essentially, you can equip an Agent with the “reasoning” capability of an LLM,
    in our case, this will be GPT-4.
  prefs: []
  type: TYPE_NORMAL
- en: You can grant agents access to a variety of tools. These can include a search
    engine, pandas, SQL, Wolfram Alpha, etc. The list is expanding every month with
    developers adding more tools.
  prefs: []
  type: TYPE_NORMAL
- en: The agent, powered by a large language model, employs analytical reasoning to
    determine how to leverage the tool to complete a task you assign.
  prefs: []
  type: TYPE_NORMAL
- en: Function Calling
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A development by OpenAI, function calling allows you to parse arguments for
    a function from a natural language input.
  prefs: []
  type: TYPE_NORMAL
- en: This has significant implications for how users can interact with our app using
    natural language or even speech.
  prefs: []
  type: TYPE_NORMAL
- en: Function calls will become clearer later with the coded examples provided.
  prefs: []
  type: TYPE_NORMAL
- en: Building a Flight Search App
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We can develop an app to query flights with natural language using just four
    components, excluding the front end.
  prefs: []
  type: TYPE_NORMAL
- en: 'Gif By Author: Demo of the Flights Search LLM App based on the query —” Please
    give me flights from London to Greece departing on the 15th November 2023 and
    returning on the 10th of December 2023\. For one Adult.”'
  prefs: []
  type: TYPE_NORMAL
- en: '**Flight Data API**: The flight data is pulled from Amadeus’ flight API containing
    all relevant details about flights.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Function Call**: The large language model (LLM) of choice, which is OpenAI’s
    GPT-4 for the purpose of this app.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SQL Database**: Stores data pulled in an in-memory SQL database.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The SQL Database Agent**: Uses an LLM and SQL Alchemy. The LLM generates
    the SQL queries from a natural language input. SQL Alchemy executes the query.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The overall architecture looks something like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2e8a1fb8ce415be5fd8ce86a683d672c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Image by Author: Flights app flow chart'
  prefs: []
  type: TYPE_NORMAL
- en: OpenAI Function Calling Script
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Function calls enable us to extract structured data from a natural language
    input. This is perfect for the flight search app since we need to extract key
    details about flights to enable us to request data from the Amadeus flight API:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Script by Author: Function Calling to get args to pull data from flights API'
  prefs: []
  type: TYPE_NORMAL
- en: Amadeus API Request Script
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Next, we send a request for flight booking data to Amadeus. They provide a free
    tier, but you will need to sign up to receive your API keys.
  prefs: []
  type: TYPE_NORMAL
- en: I have written a script to [transform](https://gist.github.com/john-adeojo/fcd8a286ce2c3c97c22d4c8b33456cf0)
    the data such that it’s suitable for SQL queries. This is key to the performance
    of your application. Note the function *load_data()* is covered in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: 'Script by Author: Requests flight data from Amadeus API, transforms and saves
    to in memory SQL database'
  prefs: []
  type: TYPE_NORMAL
- en: Create Database Script
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once we have our data, we need to create an SQL database and store our data
    their so that our agent can query it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Script by Author: Store data in SQL lite database in memory'
  prefs: []
  type: TYPE_NORMAL
- en: SQL Database Agent Script
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We can call our SQL database agent to query the stored flights database based
    on the request. The process follows this general workflow:'
  prefs: []
  type: TYPE_NORMAL
- en: Step 1 — Combines the natural language query from the user into the prompt template.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Step 2 — Sends the combined query and prompt to the SQL database agent
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Step 3 — The SQL database agent works to generate the right query to respond
    to the user request using the [ReAct](https://python.langchain.com/docs/modules/agents/agent_types/react.html)
    framework.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here’s the script:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Script by Author: SQL Database Agent'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s the prompt template:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Script by Author: Prompt template for generating the query to feed the SQL
    database agent.'
  prefs: []
  type: TYPE_NORMAL
- en: Before we move on, I should briefly cover the ReAct framework.
  prefs: []
  type: TYPE_NORMAL
- en: In essence, ReAct is a framework for prompting LLMs that mixes thinking and
    doing. It helps the model make plans and adjust them, and also lets it interact
    with outside sources like databases or environments to get more information.
  prefs: []
  type: TYPE_NORMAL
- en: This method has been tested on different tasks and has shown better results
    and is easier for humans to understand and trust. For more detail on ReAct, read
    this [resource](https://react-lm.github.io/).
  prefs: []
  type: TYPE_NORMAL
- en: Bringing it All Together
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The app consists of six scripts in total including the front end which is developed
    with [Streamlit](https://streamlit.io/). The setup instructions and end to end
    project is available in my [GitHub repo](https://github.com/john-adeojo/ai_travel_agent/tree/main).
  prefs: []
  type: TYPE_NORMAL
- en: I have an end to end walkthrough showing you how to clone the app from my GitHub
    repo to run on your own machine.
  prefs: []
  type: TYPE_NORMAL
- en: I have recorded a live demo via my [YouTube](https://youtu.be/ycAgX_Oe1Q4) channel.
    You can see the app in action, take a peep under the hood, and see how to set
    up on your own machine.
  prefs: []
  type: TYPE_NORMAL
- en: Final Thoughts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Function calling and SQL Database agents are incredibly powerful. I envision
    them being used to build many LLM-centric applications. However, I would like
    to raise some cautions.
  prefs: []
  type: TYPE_NORMAL
- en: '**Prompt Engineering**: This plays a major part in the performance of your
    application. Research into prompt engineering has delivered frameworks like ReAct.
    However, there is still a lot of engineering required to deliver reasonable responses.
    The prompt template, in particular, is tricky to get right.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Latency**: The app takes a long time to run end-to-end; it’s certainly not
    the instant feedback we are often used to. Less performant models like GPT-3.5
    will run faster, but at the expense of the capability to answer more complex queries.
    To a certain extent, the latency issues can be mitigated with a good front end
    and loading bar from a customer experience perspective. Long term, we would expect
    to see faster models that are performant.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Hallucinations**: There is a tendency for LLMs to hallucinate, which may
    return incorrect results from time to time. The prompt engineering frameworks
    are designed to reduce the hallucination rate, however, more work still needs
    to be done. I anticipate that more advanced models will suffer less with this
    hallucination problem, just as we have seen GPT-4 hallucinate at a lower rate
    than GPT-3.5.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Data Curation:** Using the SQL Database agent can work well if the data is
    also well curated. Most of my time was spent deciding on the right logical representation
    of the data to ensure that the LLM could query it correctly.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**LLM Limitations**: There are several bugs in the app that could be resolved
    by introducing more tools. A prime example relates to dates. Occasionally, the
    LLM fails to infer a date if the year and month aren’t explicitly stated. Providing
    the LLM with access to Python via an agent could help rectify this issue.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I welcome feedback on the prototype along with any suggestions to improve it.
  prefs: []
  type: TYPE_NORMAL
- en: Thanks for reading.
  prefs: []
  type: TYPE_NORMAL
- en: If you’re keen to enhance your skills in artificial intelligence, join the waiting
    list for [my course](https://www.data-centric-solutions.com/course), where I will
    guide you through the process of developing large language model powered applications.
  prefs: []
  type: TYPE_NORMAL
- en: If you’re seeking AI-transformation for your business, book a discovery call
    today.
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://www.brainqub3.com/?source=post_page-----360848c957db--------------------------------)
    [## Brainqub3 | AI software development'
  prefs: []
  type: TYPE_NORMAL
- en: At Brainqub3 we develop bespoke AI software. We create qub3s, advanced artificial
    brains, using the latest AI to…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: www.brainqub3.com](https://www.brainqub3.com/?source=post_page-----360848c957db--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: For more insights on artificial intelligence, data science, and large language
    models you can subscribe to the [YouTube](https://www.youtube.com/channel/UCkXe-exqi25V4GnZendgEaA)
    channel.
  prefs: []
  type: TYPE_NORMAL
