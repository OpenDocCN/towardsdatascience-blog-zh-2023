- en: Where Is the Bus? GTFS Will Tell Us!
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 公交车在哪里？GTFS 将告诉我们！
- en: 原文：[https://towardsdatascience.com/where-is-the-bus-gtfs-will-tell-us-f8adc18a2f8e](https://towardsdatascience.com/where-is-the-bus-gtfs-will-tell-us-f8adc18a2f8e)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/where-is-the-bus-gtfs-will-tell-us-f8adc18a2f8e](https://towardsdatascience.com/where-is-the-bus-gtfs-will-tell-us-f8adc18a2f8e)
- en: Show the real-time locations of public transport vehicles in the Netherlands
    based on GTFS real-time data
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于 GTFS 实时数据，显示荷兰公共交通车辆的实时位置
- en: '[](https://leo-vander-meulen.medium.com/?source=post_page-----f8adc18a2f8e--------------------------------)[![Leo
    van der Meulen](../Images/533301394386083d0768f4717978be60.png)](https://leo-vander-meulen.medium.com/?source=post_page-----f8adc18a2f8e--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f8adc18a2f8e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f8adc18a2f8e--------------------------------)
    [Leo van der Meulen](https://leo-vander-meulen.medium.com/?source=post_page-----f8adc18a2f8e--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://leo-vander-meulen.medium.com/?source=post_page-----f8adc18a2f8e--------------------------------)[![Leo
    van der Meulen](../Images/533301394386083d0768f4717978be60.png)](https://leo-vander-meulen.medium.com/?source=post_page-----f8adc18a2f8e--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f8adc18a2f8e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f8adc18a2f8e--------------------------------)
    [Leo van der Meulen](https://leo-vander-meulen.medium.com/?source=post_page-----f8adc18a2f8e--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----f8adc18a2f8e--------------------------------)
    ·15 min read·Jan 19, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----f8adc18a2f8e--------------------------------)
    ·阅读时间 15 分钟·2023年1月19日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/d6c103c95ab09741daa4efd1bf8340fd.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d6c103c95ab09741daa4efd1bf8340fd.png)'
- en: Map of actual locations public transport vehicles in Utrecht (image by author)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 乌得勒支公共交通车辆的实际位置地图（图片由作者提供）
- en: Public transport and open data is a combination with tremendous potential. Timetables,
    disruptions, routes, it is all there in the public domain, ready to be used for
    all kind of applications. This time we will look at the available real-time information
    in the Netherlands. The real-time data is available in GTFS Realtime format and
    available at [ovapi.nl](https://ovapi.nl) (for the Netherlands).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 公共交通和开放数据的结合具有巨大的潜力。时间表、干扰、路线，所有这些都在公共领域，随时可以用于各种应用。此次我们将查看荷兰的实时信息。实时数据以 GTFS
    Realtime 格式提供，并在 [ovapi.nl](https://ovapi.nl) 上（针对荷兰）。
- en: 'Warning: it will take some work to get it up and running and implementing a
    first use case.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 警告：将其启动并实现第一个用例需要一些工作。
- en: General Transit Feed Specification
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通用交通信息规范
- en: GTFS is a standard for sharing public transportation schedules, including the
    associated geographical information. It consists of two parts. First, there is
    the static specification for scheduled information on transport services (GTFS
    Static) and second there is the realtime status information (GTFS Realtime).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: GTFS 是一个用于共享公共交通时间表的标准，包括相关的地理信息。它由两个部分组成。首先是关于运输服务的计划信息的静态规范（GTFS Static），其次是实时状态信息（GTFS
    Realtime）。
- en: The standard originates from 2005 when efforts were made to integrate public
    transport services in Google Maps. At that time there was no standardized format
    for sharing time schedule information. Original, the G of GTFS stood for *Google*,
    but to increase adaption it was changed to *General*.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 该标准起源于 2005 年，当时为了将公共交通服务整合到 Google Maps 中。那时没有用于共享时间表信息的标准格式。最初，GTFS 中的 G 代表
    *Google*，但为了增加采用率，它被更改为 *General*。
- en: All details of the GTFS standard can be found on [Google Transit](https://developers.google.com/transit)
    pages and on [gtfs.org](https://gtfs.org/).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: GTFS 标准的所有细节可以在 [Google Transit](https://developers.google.com/transit) 页面和
    [gtfs.org](https://gtfs.org/) 找到。
- en: GTFS Static
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GTFS Static
- en: The latest version of the static information is available from OVapi [here](https://gtfs.ovapi.nl/nl/)
    and is always names `gtfs-nl.zip`. It changes, on average, every three or four
    days. There is also an archive of previous version of the GTFS file in the folder
    ‘`archive`’.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 静态信息的最新版本可以从 OVapi [这里](https://gtfs.ovapi.nl/nl/) 获得，文件名始终为 `gtfs-nl.zip`。它平均每三到四天更改一次。‘`archive`’
    文件夹中还有以前版本的 GTFS 文件的归档。
- en: 'The zipped file contains the following data files:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 压缩文件包含以下数据文件：
- en: '**agency.txt** — The list of agencies for which transit data is provided'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**agency.txt** — 提供交通数据的机构列表'
- en: '**routes.txt** — All transit routes. A route is a a group of trips and is seen
    as a service by the customer. An examples is a bus line (line 5 in Amsterdam to
    *Westergasfabriek*) or train service (serie 3300 is the soptrain between *Hoorn
    Kersenboogerd* and *Den Haag Central*)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**routes.txt** — 所有的公共交通路线。一个路线是一组行程，客户视之为一种服务。例如，阿姆斯特丹的公交线路 5 到*Westergasfabriek*，或火车服务（系列
    3300 是*Hoorn Kersenboogerd* 和*Den Haag Central*之间的快车）。'
- en: '**trips.txt** — All transit trips. A trip is one bus/train on a route, connecting
    two or more stop locations. Stop locations can differ per trip (e.g. skipping
    specific stations). A trip belongs to one route.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**trips.txt** — 所有的公共交通行程。一个行程是沿着路线行驶的一辆公交车/火车，连接两个或多个停靠点位置。每个行程的停靠点可能不同（例如，跳过特定车站）。一个行程属于一个路线。'
- en: '**calendar_dates.txt** — A table linking dates to services. For each data an
    entry is present with the trip IDs of all trips running that day. The GTFS standard
    uses this file as a exception file for the service patterns (e.g. weekly pattern)
    specified in the optional file *calendar.txt.* This GTFS provider only uses the
    calendar_dates to map services to dates. A service is one or more trips and is
    defined by the service ID in the trips specification.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**calendar_dates.txt** — 将日期与服务关联的表格。每个日期都有一个条目，包含当天运行的所有行程的 ID。GTFS 标准使用此文件作为可选文件*calendar.txt*中服务模式（例如每周模式）的异常文件。此
    GTFS 提供商仅使用 calendar_dates 将服务映射到日期。服务是一项或多项行程，由行程规范中的服务 ID 定义。'
- en: '**stops.txt** — All stop locations. This can be a bus stop or train station.
    Stops are defined on the level of platform and combined to location in the shape
    of stopareas. A train station has one stop for each platform and one stoparea
    (the station).'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**stops.txt** — 所有的停靠点位置。这可以是一个公交车站或火车站。停靠点在平台级别上定义，并组合成停靠区域的形式。一个火车站每个平台有一个停靠点和一个停靠区域（车站）。'
- en: '**feed_info.txt** — Generic feed info like source, versioning and validity
    period'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**feed_info.txt** — 通用的源信息，如源、版本和有效期。'
- en: '**shapes.txt** — For each route a list of geographical locations (lat,lon)
    to draw the transit service on a map. A trip is associated with a shape as individual
    trips on a route can have a different path.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**shapes.txt** — 每条路线的地理位置列表（纬度，经度），用于在地图上绘制公共交通服务。一个行程与一个形状相关联，因为路线上的个别行程可能有不同的路径。'
- en: '**stop_times.txt** — For each stop on each trip the arrival and departure time.
    The largest file of the dataset (1 GB of data).'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**stop_times.txt** — 每个行程每个停靠点的到达和离开时间。数据集中最大文件（1 GB 数据）。'
- en: '**transfers.txt** — List of all possible transfers between two stop locations,
    e.g. one platform to another platform at the same station.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**transfers.txt** — 列出所有可能的转乘点之间的转乘，例如在同一车站的一个平台到另一个平台。'
- en: 'The image below shows the used parts of the GTFS Static standard and there
    relations:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的图片展示了 GTFS Static 标准的使用部分及其关系：
- en: '![](../Images/ac1dc700e1f9e635bdd839c91d4f6bba.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ac1dc700e1f9e635bdd839c91d4f6bba.png)'
- en: GTFS Static for dutch public transport (image by author)
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: GTFS Static for dutch public transport（图片由作者提供）
- en: GTFS Realtime
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GTFS Realtime
- en: The second part of the standard specifies the way real-time information is provided.
    The specification uses [Protocol Buffers](https://developers.google.com/protocol-buffers/docs/overview),
    a language and platform independent mechanism for serialization of structured
    data. It is a Google standard with bindings for several languages like C#, Go,
    Java and Python. Details for the GTFS Realtime standard can be found on the site
    of [Google Transit](https://developers.google.com/transit/gtfs-realtime).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 标准的第二部分规定了实时信息的提供方式。规范使用了[Protocol Buffers](https://developers.google.com/protocol-buffers/docs/overview)，这是一种语言和平台独立的结构化数据序列化机制。它是谷歌标准，支持多种语言如
    C#、Go、Java 和 Python。GTFS Realtime 标准的详细信息可以在[Google Transit](https://developers.google.com/transit/gtfs-realtime)网站上找到。
- en: 'The GTFS Realtime for The Netherlands uses the three feed types defined by
    GTFS with an additional feed for train updates:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 荷兰的 GTFS Realtime 使用了 GTFS 定义的三种源类型，并增加了一个用于火车更新的源：
- en: '**Trip Update** — Updates on trips. For each active trip one, and no more than
    one, update is available. If there is no update message for a specific trip, the
    assumption is that the trip is not running.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Trip Update** — 行程更新。每个活跃行程有且仅有一个更新可用。如果没有针对特定行程的更新消息，则假设该行程没有运行。'
- en: '**Vehicle Positions** — If available (depends on vehicle), the current location
    of a vehicle on a trip. It provides information on the next stop and current delay
    of the vehicle on this specific trip.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**车辆位置** — 如果可用（取决于车辆），车辆在行程中的当前位置。它提供了关于下一站点和当前延误的信息。'
- en: '**Service Alerts** — A service alert is generated for each disruption in the
    network. If a disruption leads to cancellations and/or delays, these are communicated
    as *Trip Updates* and *Vehicle Positions*.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务警报** — 每次网络中出现中断时，都会生成服务警报。如果中断导致了取消和/或延误，这些信息会以*行程更新*和*车辆位置*的形式传达。'
- en: '**Train updates** — Updates on trains, comparable with the trip update but
    only for the trains. This feed is not part of the default GTFS Realtime specification.
    It provides updates on arrival and departure times and scheduled tracks. For each
    stop in a trip the updates are part of the message.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**列车更新** — 关于列车的更新，与行程更新类似，但仅适用于列车。此信息源不是默认的GTFS Realtime规范的一部分。它提供到达和出发时间以及计划轨道的更新。每次行程中的每一站，更新都是消息的一部分。'
- en: Decoding Protocol Buffers
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解码协议缓冲区
- en: To start using protocol buffers we need the `protoc` tool from Github. The latest
    version can be found [here](https://github.com/protocolbuffers/protobuf/releases/).
    Find the `protoc-<release>-<platform>.zip` and download this.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用协议缓冲区，我们需要从Github获取`protoc`工具。最新版本可以在[这里](https://github.com/protocolbuffers/protobuf/releases/)找到。找到`protoc-<release>-<platform>.zip`并下载。
- en: Download the Protocol Buffer definitions from [OVapi](http://gtfs.ovapi.nl/nl/).
    Tou need both the `gtfs-realtime.proto` and the `gtfs-realtime-OVapi.proto`. The
    last file contains the specific OVapi extensions and.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 从[OVapi](http://gtfs.ovapi.nl/nl/)下载协议缓冲区定义。你需要`gtfs-realtime.proto`和`gtfs-realtime-OVapi.proto`两个文件。最后一个文件包含特定的OVapi扩展。
- en: '![](../Images/bbfb7c493ecf620dfae147e08caac2ce.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bbfb7c493ecf620dfae147e08caac2ce.png)'
- en: GTFS Realtime data from OVapi (screenshot from the website of OVapi)
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 来自OVapi的GTFS Realtime数据（来自OVapi网站的截图）
- en: You can also download the latest protocol buffers from this location, named
    `tripUpdates.pb`, `vehiclePositions.pb`, `alerts.pb` and `trainUpdates.pb`.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以从此位置下载最新的协议缓冲区，文件名为`tripUpdates.pb`、`vehiclePositions.pb`、`alerts.pb`和`trainUpdates.pb`。
- en: 'When all files are placed in the same directory, it is possible to use the
    protoc tool to decode the protocol buffer messages:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 当所有文件都放在同一目录中时，可以使用protoc工具解码协议缓冲消息：
- en: '[PRE0]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'which gives the decode contents from the `vehiclePositions.pb`:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这将解码`vehiclePositions.pb`中的内容：
- en: '[PRE1]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: After the header, for each entity an entry follows (only one shown here, the
    file contains approx. 3200 entries) with the update information for a specific
    vehicle in a JSON like style. The `transit_realtime.ovapi*` fields are the OVapi
    specific data fields. The header specifies if the file is an increment or a full
    set. This source always returns a full dataset. This data stream contains information
    on all forms of public transport, except for trains.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在头部信息之后，每个实体都有一个条目（这里只显示了一个，文件中大约有3200个条目），其中包含特定车辆的更新信息，类似于JSON格式。`transit_realtime.ovapi*`字段是OVapi特定的数据字段。头部信息指定了文件是增量更新还是完整数据集。该源始终返回完整数据集。这个数据流包含了所有公共交通工具的信息，列车除外。
- en: Each active trip is returned as an `entity`. Within the trip, all stops are
    listed with a `stop_time_update` (only one given above, but repeated for all stops
    in a trip). Each update contains around 1600 entities (depending on time, day
    of week and holiday season) and a total of 50.000 st op time updates. This data
    stream contains updates on trains, which are not in the vehicle updates, but lack
    the current geographical location.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 每个活动行程被返回为一个`entity`。在行程中，所有站点都列出了一个`stop_time_update`（这里只显示了一个，但对于行程中的所有站点都有重复）。每个更新包含大约1600个实体（根据时间、星期几和假期季节有所不同），总共有50,000个停靠时间更新。这个数据流包含列车更新，但不在车辆更新中，且缺乏当前的地理位置。
- en: The numbers above show we are dealing with some serious data streams in size
    and frequency (full updates are published every minute).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的数字显示我们正在处理一些在大小和频率上都非常庞大的数据流（完整更新每分钟发布一次）。
- en: Reading protocol buffers in Python
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Python读取协议缓冲区
- en: 'The next step is to read the protocol buffers in Python. After reading different
    blogs and websites this seemed a straight forward process, but in practice it
    is not that simple. Several attempts where needed, with a combination of versions
    of python and packages. The following combination is working for me:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是用Python读取协议缓冲区。在阅读了不同的博客和网站之后，这似乎是一个简单的过程，但实际上并非如此简单。需要多次尝试，结合不同版本的Python和软件包。以下组合对我有效：
- en: '[PRE2]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The full install of the packages used in this article contains:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 本文中使用的完整软件包安装包含：
- en: '[PRE3]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now we can compile the protocol buffer definitions to the required python files:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以将协议缓冲区定义编译为所需的python文件：
- en: '[PRE4]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This will generate two files; `gtfs_realtime_pb2.py` and `gtfs_realtime_OVapi_pb2.py`.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成两个文件；`gtfs_realtime_pb2.py` 和 `gtfs_realtime_OVapi_pb2.py`。
- en: 'If you are working in an Anaconda environment with Jupyter notebooks it might
    be required to install `protobuf` using `conda` :'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在使用 Anaconda 环境中的 Jupyter notebooks，可能需要通过 `conda` 安装 `protobuf`：
- en: '[PRE5]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Linux environments are simpler but require the `libprotobuf` to be installed
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 环境更简单，但需要安装 `libprotobuf`
- en: '[PRE6]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This part takes some hassle and does not always feel predictable, but once it
    is running, you are good to go!
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这一部分需要一些麻烦，并且并不总是可预测的，但一旦它运行起来，你就可以继续了！
- en: Parsing protocol buffers messages
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解析协议缓冲区消息
- en: 'Now we are able to decode the protocol buffers in Python:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们能够在 Python 中解码协议缓冲区：
- en: '[PRE7]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This will result in four Python dictionaries, containing the real-time updates
    from the four different protocol buffer streams.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成四个 Python 字典，包含来自四个不同协议缓冲流的实时更新。
- en: Parse data to dataframes
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将数据解析为数据框
- en: Panda dataframes have a dictionary converter built into the constructor, but
    this only works well with dictionaries with one level of data and no nested structures.
    There are tools like `flatten_jon` that can help in the process, but it is complex
    to realize and slow to execute.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Panda 数据框具有内置于构造函数中的字典转换器，但这仅对具有一级数据且没有嵌套结构的字典效果良好。像 `flatten_jon` 这样的工具可以帮助处理，但实现起来复杂且执行速度慢。
- en: 'The files have the following structure:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 文件具有以下结构：
- en: '[PRE8]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This will be translated to:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这将被转换为：
- en: '[PRE9]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: After some experimentation it seems best to write the code manually to convert
    to nested dictionaries to a new one level dictionary and convert this to a dataframe.
    The `protobuf3-to-dict` package ([source](https://pypi.org/project/protobuf3-to-dict/0.1.5/))
    is used to convert the protocol buffer to a Python dictionary first. This dictionary
    has the same nested structure as the original protocol buffer.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 经过一些实验后，似乎手动编写代码将嵌套字典转换为新的单层字典并将其转换为数据框是最好的。`protobuf3-to-dict` 包（[源代码](https://pypi.org/project/protobuf3-to-dict/0.1.5/)）用于首先将协议缓冲区转换为
    Python 字典。此字典具有与原始协议缓冲区相同的嵌套结构。
- en: Alerts
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 警报
- en: 'The least complex buffer is the alert buffer (after conversion to a dictionary):'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的缓冲区是警报缓冲区（转换为字典后）：
- en: '[PRE10]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Structure wise, the entity array needs to be flattened to get one row with one
    validity period per alert. On a data level a conversion is needed from a UNIX
    timestamp (field `timestamp` in the header and `start` and `stop` fields in the
    active_period. The cause and effect fields are enumerations specified in the [GTFS
    specification](https://developers.google.com/transit/gtfs-realtime/reference).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 从结构上看，实体数组需要被展平，以便每个警报有一行一个有效期。在数据层面，需要将 UNIX 时间戳（头部的 `timestamp` 字段以及 `active_period`
    中的 `start` 和 `stop` 字段）转换。因果字段是 [GTFS 规范](https://developers.google.com/transit/gtfs-realtime/reference)
    中规定的枚举。
- en: 'A utility function is written to convert a timestamp column to a column with
    `datetime` objects. All UNIX timestamps are in UTC so a conversion to the local
    time in the Netherlands is required:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 编写了一个实用函数，将时间戳列转换为 `datetime` 对象列。所有 UNIX 时间戳均为 UTC，因此需要转换为荷兰当地时间：
- en: '[PRE11]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now it is time to convert the alert dictionary to a dataframe with one alert
    per active period per row:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是将警报字典转换为每个活动周期每行一个警报的 dataframe 的时候了：
- en: '[PRE12]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The result is the following dataframe:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是以下数据框：
- en: '![](../Images/2f47bc20440f2a0726155b263c94cd17.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2f47bc20440f2a0726155b263c94cd17.png)'
- en: Alerts dataframe (image by author)
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 警报数据框（图片来源于作者）
- en: 'Cause en effect are optional fields so a check is needed to see if they are
    part of dictionary. This overview of alerts needs to be related to the stops and
    routes the alert influences. Two separate tables are created to couple routes
    and stops to alerts:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 因果关系字段是可选的，因此需要检查它们是否是字典的一部分。这个警报概述需要与警报影响的停靠点和路线相关联。创建两个单独的表来将路线和停靠点与警报关联：
- en: '[PRE13]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'With result:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 结果为：
- en: '![](../Images/1502100d50e80f16d6448370b6eed644.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1502100d50e80f16d6448370b6eed644.png)'
- en: Mapping of alerts on stops and routes (image by author)
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 警报在停靠点和路线上的映射（图片来源于作者）
- en: Trip Updates
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 行程更新
- en: The next step is the conversion of the trip updates. There are some optional
    fields, like arrival and departure time, some timestamps, some additional fields
    and something special about the start time of a trip, the so called business day.
    The hours field does not run from 00 to 23 but from 00 to 27\. The business day
    in public transport is 28 hours, running till 4:00 in the morning. It a trip is
    technically part of the previous day, the hours are extended to 27\. If a trip
    belongs to the actual day, the hour is 00 to 04.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是转换 trip updates。有些可选字段，如到达和离开时间、一些时间戳、一些额外字段以及与行程开始时间相关的特别内容，即所谓的业务日。小时字段不是从00到23，而是从00到27。公共交通的业务日为28小时，运行至早上4:00。如果行程技术上属于前一天，则小时数延长至27。如果行程属于当天，则小时数为00到04。
- en: 'For our purposes, we recalculate the business day to a normal 24 hours day.
    This implies that when the hour is greater than 23, we subtract 24 from the hours
    and add one day to the date, moving it to the first four hours of a day:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的目的，我们将业务日重新计算为正常的24小时制。这意味着当小时大于23时，我们从小时中减去24，并将日期加一天，将其移动到一天的前四小时：
- en: '[PRE14]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: This method converts a date (string format ‘20230131’) an time (string format
    ‘13:23:45’ and converts it to a `datetime` object with a ‘normal’ 24 hour based
    date an time.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 该方法将日期（字符串格式‘20230131’）和时间（字符串格式‘13:23:45’）转换为`datetime`对象，并使用‘正常’的24小时制日期和时间。
- en: The additional fields added by OVapi are parsed by the Protocol Buffer code
    but are not replaced with their human readable names. I have not been able to
    parse the buffers and have the field…
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: OVapi 添加的额外字段由 Protocol Buffer 代码解析，但不会被替换成人类可读的名称。我无法解析缓冲区并获取字段…
- en: '[PRE15]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '…parsed with their names. The result is always:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: …用它们的名称进行解析。结果总是：
- en: '[PRE16]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: These keys must be used to find the `realtime_trip_id` in the dictionary.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 必须使用这些键在字典中查找`realtime_trip_id`。
- en: 'It is now possible to convert the Trip Update to a data frame:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 现在可以将 Trip Update 转换为数据框：
- en: '[PRE17]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'and the resulting dataframe:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 以及结果数据框：
- en: '![](../Images/800173472bbf00403fce0c7c4f325d48.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/800173472bbf00403fce0c7c4f325d48.png)'
- en: Trip updates dataframe (without id column, image by author)
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: Trip updates 数据框（没有 id 列，作者提供的图片）
- en: Performance
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 性能
- en: 'The dataframe creation is an expensive task. Creating the array of dictionaries
    is efficient but the DataFrame constructor takes a significant amount of time.
    In simplified form the dataframe is created in the format:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 创建数据框是一项昂贵的任务。创建字典数组效率较高，但 DataFrame 构造函数需要相当长的时间。简化形式下，数据框的创建格式如下：
- en: '[PRE18]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'It is faster to create a separate array per column and pass theses to the constructor:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 创建每列单独的数组并将其传递给构造函数的速度更快：
- en: '[PRE19]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Both implementations result in the same dataframe. In the first implementation,
    each row added the columns need to be matched on column name. The alternative
    version prevents this. It requires more code to be written, but the dataframe
    creation is about 10 to 20 times faster. The implementation on Github uses the
    alternative form.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 两种实现结果相同。在第一种实现中，每行添加的列需要按列名匹配。替代版本避免了这种情况。虽然需要编写更多代码，但数据框的创建速度快约10到20倍。GitHub
    上的实现使用了替代形式。
- en: The implementation on Github also assures that all ID’s are integers, instead
    of strings to improve lookup and merge performance.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub 上的实现还确保所有 ID 都是整数，而不是字符串，以提高查找和合并性能。
- en: Data model
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据模型
- en: 'Parsing of VehiclePositions and TrainUpdates is more or less the same, see
    the source code on Github for the code. The GTFS Realtime data refers to the trips,
    routes and stops from the GTFS Static data. The relationships are as follows (white
    is static, orange is realtime):'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 车辆位置和列车更新的解析或多或少是相同的，查看 GitHub 上的源代码以获取代码。GTFS 实时数据引用 GTFS 静态数据中的行程、路线和站点。它们之间的关系如下（白色为静态，橙色为实时）：
- en: '![](../Images/72a043b6bbdbcb683c49ffb29b219c89.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/72a043b6bbdbcb683c49ffb29b219c89.png)'
- en: Relation between GTFS Realtime and GTFS Static (image by authour)
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: GTFS 实时数据与 GTFS 静态数据之间的关系（作者提供的图片）
- en: The `calendar`, `shapes` and `transfers` are not shown to keep the image clear.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保持图像清晰，`calendar`、`shapes` 和 `transfers` 未显示。
- en: The code on Github consists of a `GTFS` class and a notebook with some example
    usages. The GTFS class contains both the static and real-time information which
    can be updated independently. Some caching is added to prevent unnecessary parsing
    of the input files. This is especially useful for the static data where parsing
    the stop times is time consuming as it contains more than 14 million entries.
    The cached version is filtered for a specific day and contains around 2 million
    rows.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: Github 上的代码包括一个 `GTFS` 类和一个包含一些示例用法的笔记本。GTFS 类包含静态和实时信息，且可以独立更新。增加了一些缓存机制以防止不必要的输入文件解析。这对于静态数据尤其有用，因为解析停靠时间是耗时的，因为它包含超过
    1400 万条记录。缓存版本针对特定日期进行了过滤，包含大约 200 万条记录。
- en: 'The class is used as follows:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 该类的使用方式如下：
- en: '[PRE20]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The static GTFS file is cached for a week. The parsed contents for a few hours
    and a maximum of a day. The protocol buffer files are also cached for a few minutes
    to improve performance during development. The last one can be overridden by specifying
    the maximum age in minutes as parameter of the `update_realtime` method.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 静态 GTFS 文件的缓存周期为一周。解析内容的缓存周期为几小时至最多一天。协议缓冲文件也会缓存几分钟，以提高开发期间的性能。最后一个缓存可以通过在 `update_realtime`
    方法的参数中指定最大年龄来覆盖。
- en: 'The downloaded an parsed data is stored in the class:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 下载并解析的数据存储在该类中：
- en: '[PRE21]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: A few of them will be used in the following example. Other use cases might need
    the other information.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 其中的一些将用于以下示例。其他用例可能需要其他信息。
- en: Plotting stops and the actual locations
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 绘制站点和实际位置
- en: The dataset contains all the public transport stops in the Netherlands. It can
    be used to generate a heatmap of stops in the country. The `folium` package is
    used with the plugin to generate heatmaps.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集包含荷兰所有的公共交通站点。它可以用来生成国家范围内的站点热力图。`folium` 包与插件一起用于生成热力图。
- en: '[PRE22]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '![](../Images/e9fbe5096301fa0d29671ade2a90332d.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e9fbe5096301fa0d29671ade2a90332d.png)'
- en: Heatmap of public transport stops (image by author)
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 公共交通站点热力图（作者提供的图像）
- en: Please note that this heatmap only shows the number of stops as they are distributed
    over the country. In this plot, a stop with only one stopping bus a day weights
    the same as a stop with a bus every 5 minutes. It is an indication of the accessibility,
    not the actual accessibility.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，此热力图仅显示站点的数量以及它们在全国范围内的分布。在此图中，每日仅有一辆车停靠的站点与每5分钟就有一辆车停靠的站点权重相同。这是对可达性的一个指示，而不是实际的可达性。
- en: With the GTFS realtime information it is possible to add the location of all
    vehicles (except trains, the train updates do not contain locations) can be added.
    For this, we zoom in to a region, in this case the city Utrecht.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 利用 GTFS 实时信息，可以添加所有车辆的位置（除火车外，火车更新不包含位置）。为此，我们缩放到一个区域，这里以城市乌特勒支为例。
- en: '[PRE23]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: First, the bounding box of the region is defined. The `stops` dataframe and
    `vehicle_position` dataframe are geopandas so it is possible to filter them on
    the bounding box with the `cx` method. This method filters the dataframe so all
    rows are within the specified bounding box.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，定义该区域的边界框。`stops` 数据框和 `vehicle_position` 数据框是 geopandas 对象，因此可以使用 `cx` 方法在边界框上进行过滤。此方法过滤数据框，以确保所有行都在指定的边界框内。
- en: 'A folium map is created at the center of the bounding box with a zoom factor
    that shows only the region of the bounding box. Then, for all stops a small blue
    circle is drawn on the map and for all vehicle a red circle. Each stop has a popup
    with the stop name and each vehicle with the line number and direction. This results
    in the following map:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在边界框中心创建一个 folium 地图，缩放因子仅显示边界框区域。然后，为所有站点在地图上绘制一个小蓝圈，为所有车辆绘制一个红圈。每个站点都有一个弹出框，显示站点名称，每辆车则显示线路号和方向。这会生成以下地图：
- en: '![](../Images/d6c103c95ab09741daa4efd1bf8340fd.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d6c103c95ab09741daa4efd1bf8340fd.png)'
- en: Map of actual locations public transport vehicles in Utrecht (image by author)
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 乌特勒支公共交通车辆实际位置地图（作者提供的图像）
- en: 'This map is created during the afternoon of a weekday. The same map during
    the evening in the weekend shows less vehicles on the road:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 这张地图是在工作日的下午创建的。周末晚上的同一地图显示了道路上的车辆较少：
- en: '![](../Images/6053def4d800f612fd302b569e5241c5.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6053def4d800f612fd302b569e5241c5.png)'
- en: Map of actual locations public transport vehicles in Utrecht (image by author)
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 乌特勒支公共交通车辆实际位置地图（作者提供的图像）
- en: By merging the actual data with the static stops, stop times, trips and routes,
    all information is available per item on the map.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将实际数据与静态站点、站点时间、行程和路线合并，所有信息都可以在地图上的每个项目中查看。
- en: Final words
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 最后的话
- en: It took some true effort to get to the goal of this article, a map with the
    current position of public transport vehicles. We needed to pars all static information,
    decode protocol buffers and combine all this information. The final map is then
    made in a breeze.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 达到这篇文章的目标，制作一个包含公共交通车辆当前位置的地图，确实花费了不少努力。我们需要解析所有静态信息，解码协议缓冲区并将所有这些信息结合起来。最终地图的制作则相对轻松。
- en: But all this hard work can be re-used for other purposes; creating dynamic departure
    lists for a stop, an up to date travel planner, tools to help us in case of disruptions,
    etc.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 但所有这些辛勤工作可以用于其他目的；例如，为一个站点创建动态出发列表、一个最新的旅行规划器、在出现中断时帮助我们的工具等等。
- en: To be honest, the work was not always enjoyable, especially getting the protocol
    buffers to work took some hard work and the performance needed a lot of tweaking.
    But I am happy with the end results. Th final [class](https://github.com/lmeulen/GTFS-Visuals/blob/main/GTFS.py)
    and [Notebook](https://github.com/lmeulen/GTFS-Visuals/blob/main/GTFS%20Protobuf.ipynb)
    van be found on [Github](https://github.com/lmeulen/GTFS-Visuals).
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 说实话，这项工作并不总是令人愉快，特别是让协议缓冲区正常工作花费了不少努力，而且性能也需要大量的调整。不过我对最终的结果感到满意。最终的[class](https://github.com/lmeulen/GTFS-Visuals/blob/main/GTFS.py)和[Notebook](https://github.com/lmeulen/GTFS-Visuals/blob/main/GTFS%20Protobuf.ipynb)可以在[Github](https://github.com/lmeulen/GTFS-Visuals)上找到。
- en: 'I hope you enjoyed this article. For more inspiration, check some of my other
    articles:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你喜欢这篇文章。欲获取更多灵感，请查看我其他的一些文章：
- en: '[Summarize a text in Python — continued](https://medium.com/towards-data-science/summarize-a-text-with-python-continued-bbbbb5d37adb)'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用 Python 总结文本 — 续篇](https://medium.com/towards-data-science/summarize-a-text-with-python-continued-bbbbb5d37adb)'
- en: '[Using Eurostat statistical data on Europe with Python](/using-eurostat-statistical-data-on-europe-with-python-2d77c9b7b02b)'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Python 处理 Eurostat 欧洲统计数据](/using-eurostat-statistical-data-on-europe-with-python-2d77c9b7b02b)'
- en: '[Solar panel power generation analysis](/solar-panel-power-generation-analysis-7011cc078900)'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[太阳能电池板发电分析](/solar-panel-power-generation-analysis-7011cc078900)'
- en: '[Perform a function on columns in a CSV file](https://towardsdev.com/perform-a-function-on-columns-in-a-csv-file-a889ef02ca03)'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[对 CSV 文件中的列执行函数](https://towardsdev.com/perform-a-function-on-columns-in-a-csv-file-a889ef02ca03)'
- en: '[Create a heatmap from the logs of your activity tracker](/create-a-heatmap-from-the-logs-of-your-activity-tracker-c9fc7ace1657)'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[从活动跟踪器日志中创建热图](/create-a-heatmap-from-the-logs-of-your-activity-tracker-c9fc7ace1657)'
- en: '[Parallel web requests with Python](/parallel-web-requests-in-python-4d30cc7b8989)'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用 Python 进行并行网络请求](/parallel-web-requests-in-python-4d30cc7b8989)'
- en: If you like this story, please hit the Follow button!
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢这个故事，请点击关注按钮！
- en: '*Disclaimer: The views and opinions included in this article belong only to
    the author.*'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '*免责声明：本文中的观点和意见仅代表作者本人。*'
