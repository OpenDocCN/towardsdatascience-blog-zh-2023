- en: Hands on Sampling Techniques and comparison, in Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实践中的采样技术和比较，使用Python
- en: 原文：[https://towardsdatascience.com/hands-on-sampling-techniques-and-comparison-in-python-6342c70f2099](https://towardsdatascience.com/hands-on-sampling-techniques-and-comparison-in-python-6342c70f2099)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/hands-on-sampling-techniques-and-comparison-in-python-6342c70f2099](https://towardsdatascience.com/hands-on-sampling-techniques-and-comparison-in-python-6342c70f2099)
- en: Here’s a step-by-step tutorial on how to sample your dataset efficiently using
    Python
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 这是一个关于如何使用Python高效采样数据集的逐步教程
- en: '[](https://piero-paialunga.medium.com/?source=post_page-----6342c70f2099--------------------------------)[![Piero
    Paialunga](../Images/de2185596a49484698733e85114dd1ff.png)](https://piero-paialunga.medium.com/?source=post_page-----6342c70f2099--------------------------------)[](https://towardsdatascience.com/?source=post_page-----6342c70f2099--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----6342c70f2099--------------------------------)
    [Piero Paialunga](https://piero-paialunga.medium.com/?source=post_page-----6342c70f2099--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://piero-paialunga.medium.com/?source=post_page-----6342c70f2099--------------------------------)[![Piero
    Paialunga](../Images/de2185596a49484698733e85114dd1ff.png)](https://piero-paialunga.medium.com/?source=post_page-----6342c70f2099--------------------------------)[](https://towardsdatascience.com/?source=post_page-----6342c70f2099--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----6342c70f2099--------------------------------)
    [Piero Paialunga](https://piero-paialunga.medium.com/?source=post_page-----6342c70f2099--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----6342c70f2099--------------------------------)
    ·8 min read·Dec 1, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----6342c70f2099--------------------------------)
    ·8 min read·2023年12月1日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/95ead638268cc3c48bbd3a81345c2412.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/95ead638268cc3c48bbd3a81345c2412.png)'
- en: Image by author
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: I was putting the Christmas tree up with my wife. We went to the basement, took
    the tree, brought it upstairs, and started building it from bottom to top. It’s
    always a magic moment🎄
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我和我的妻子一起布置圣诞树。我们去了地下室，拿了树，把它搬到楼上，然后从下往上开始搭建。这总是一个神奇的时刻🎄
- en: 'Then it was the point to put the balls on the tree. And immediately I thought:
    there are at least three ways to put the balls on the tree.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 然后是把球放到树上的环节。我立刻想到：至少有三种方式可以把球放到树上。
- en: '**Uniformly**: put the balls uniformly on the tree, kind of like that'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**均匀地**：将球均匀地放在树上，就像这样'
- en: '![](../Images/27d251a59d187aad89471f266bb3f509.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/27d251a59d187aad89471f266bb3f509.png)'
- en: Image by author, made using [Freepik](https://www.freepik.com/)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供，使用 [Freepik](https://www.freepik.com/) 制作
- en: '**Randomly**: put the balls randomly on the tree, closing your eyes and putting
    the ball wherever you feel like (I started doing this and my wife went MAD)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**随机地**：将球随机地放在树上，闭上眼睛随便放哪里（我开始这样做，我的妻子疯了）'
- en: '![](../Images/9c8b491a96c276c9551aa2c6e399e869.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9c8b491a96c276c9551aa2c6e399e869.png)'
- en: Image by author, made using [Freepik](https://www.freepik.com/)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供，使用 [Freepik](https://www.freepik.com/) 制作
- en: '**Latin Hypercube**: Splitting the tree into N sections and extracting randomly
    in each one of these sections. It’s very hard to draw it without running any code,
    but a possible Latin Hypercube looks like this:'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**拉丁超立方体**：将树分成N个部分，并在每个部分中随机抽取。很难在不运行任何代码的情况下绘制，但可能的拉丁超立方体如下所示：'
- en: '![](../Images/e6178a5cd52634b880858d71ae374640.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e6178a5cd52634b880858d71ae374640.png)'
- en: Image by author, made using [Freepik](https://www.freepik.com/)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供，使用 [Freepik](https://www.freepik.com/) 制作
- en: I tried and show this to my wife. She smiled and said “Whatever”, so I went
    to my computer in the hope that your reaction would be something more satisfactory
    😤
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我尝试并把这个展示给了我的妻子。她微笑着说“随便”，于是我回到电脑前，希望你的反应能更令人满意 😤
- en: 'Jokes aside, when dealing with Machine Learning problems there are two different
    scenarios:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 说笑归说笑，当处理机器学习问题时，有两种不同的情况：
- en: '**You don’t have any control over the dataset**.You have a client, or a company,
    that hands you a dataset. That’s what you will have to deal with until a necessary
    (eventual) re-training will be scheduled.'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**你无法控制数据集**。你有一个客户或公司，会给你一个数据集。这是你必须处理的，直到安排必要的（最终的）重新训练。'
- en: For example, in the city of New York, you want to predict the price of a house
    based on some given features. They just give you the dataset and they want you
    to build your model so that when a new client arrives you have an AI software
    that can predict the price based on the features of the house of interest.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在纽约市，你想根据一些给定的特征预测房屋的价格。他们只给你数据集，并希望你建立一个模型，以便当新客户到来时，你有一个AI软件可以根据感兴趣的房屋特征预测价格。
- en: '**2\. You can build your Design of Experiment**. This is when you have a forward
    model or a real-world experiment that you can always set up to run.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**2\. 你可以建立你的实验设计**。这指的是你有一个前向模型或一个可以随时设置运行的真实世界实验。'
- en: For example, in a laboratory, you want to predict a physical signal given an
    experimental setup. You can always go to the lab and generate new data.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在实验室中，你想在给定实验设置的情况下预测一个物理信号。你可以随时去实验室生成新的数据。
- en: The considerations that you make in the two cases are completely different.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 你在这两种情况下做出的考虑是完全不同的。
- en: In the first case you can expect a dataset that is unbalanced in its features,
    maybe with missing input values and a skewed distribution of the target values.
    It’s the joy and damnation of a data scientist's job to deal with these things
    though. You do data augmentation, data filtering, fill in the miss values, do
    some ANOVA testing if you can and so forth. In the second case, you have complete
    control over what’s going on in your dataset, especially from the input perspective.
    This means that if you have a NaN value you can repeat the experiment, if you
    have several NaN values you can investigate that weird area of your dataset, if
    you have a suspicious large value for some given features you can just repeat
    the experiment to make sure it’s not an hallucination of your setup.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一个情况下，你可以期待一个在特征上不平衡的数据集，可能有缺失的输入值和目标值的偏斜分布。处理这些问题是数据科学家的乐趣与诅咒。你进行数据增强、数据过滤、填补缺失值，如果可能的话进行一些ANOVA测试等等。在第二种情况下，你对数据集中的情况有完全的控制权，特别是从输入的角度来看。这意味着如果你有一个NaN值，你可以重复实验；如果你有几个NaN值，你可以调查数据集中的那个奇怪区域；如果你有一些特征的值非常大，你可以重复实验以确保这不是你设置的幻觉。
- en: As we have this amount of control we want to make sure to cover the input parameter
    space efficiently. For example, if you have 3 parameters, and you know the boundaries
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们有这种控制权，我们想确保高效地覆盖输入参数空间。例如，如果你有3个参数，并且你知道它们的边界
- en: '![](../Images/e303cf515210c11b74440370aa35f3fc.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e303cf515210c11b74440370aa35f3fc.png)'
- en: Image by author
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: where i goes from 1 to 3 (or from 0 to 2 if you like Python so much 😁). In this
    case, x_i is the i-th variable and it will always be larger than x_i^L(ower boundary),
    but it will always be smaller than x_i^U(pper boundary).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 i 从 1 到 3（或者从 0 到 2，如果你喜欢 Python 😁）。在这种情况下，x_i 是第 i 个变量，它总是大于 x_i^L（下边界），但总是小于
    x_i^U（上边界）。
- en: We have our 3-dimensional cube.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有我们的三维立方体。
- en: '![](../Images/44eeb5bf58ae7c259e478be4f096ed53.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/44eeb5bf58ae7c259e478be4f096ed53.png)'
- en: Image by author
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Now, remember that we have complete control of our dataset. How do we sample?
    In other words, how do we determine the **x**s ? What are the points that we want
    to select so that we run the forward model (experiment or simulation) and get
    the target values?
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，记住我们对数据集有完全的控制权。我们如何进行采样？换句话说，我们如何确定**x**s？我们想选择哪些点，以便运行前向模型（实验或模拟）并获得目标值？
- en: As you can expect there are multiple methods to do so. Each method has its advantages
    and disadvantages. In this study, we will discuss them, show the theory behind
    them, and display the code for everyone to use and understand more about the beautiful
    world of sampling. 🙂
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所期待的，有多种方法可以做到这一点。每种方法都有其优点和缺点。在本研究中，我们将讨论它们，展示它们背后的理论，并提供代码供大家使用，进一步了解美妙的采样世界。🙂
- en: 'Let’s start with the uniform sampling:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从均匀采样开始：
- en: 1\. Uniform Sampling
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 均匀采样
- en: The uniform sampling method is arguably the most simple and famous one.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 均匀采样方法可以说是最简单和最著名的一种。
- en: 'It is just about splitting each parameter (or dimension) in steps. Let’s assume
    that we have 3 steps per dimension, for 2 dimensions. Each dimension goes from
    0 to 1 (we will extend this in a minute). This would be the sampling:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是将每个参数（或维度）分成若干步骤。假设我们有每个维度3个步骤，2个维度。每个维度从0到1（我们稍后会扩展）。这将是采样：
- en: (0,0)
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: (0,0)
- en: (0,0.5)
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: (0,0.5)
- en: (0,1)
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: (0,1)
- en: (0.5,0)
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: (0.5,0)
- en: (0.5,0.5)
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: (0.5,0.5)
- en: (0.5,1)
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: (0.5,1)
- en: (1,0)
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: (1,0)
- en: (1,0.5)
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: (1,0.5)
- en: (1,1)
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: (1,1)
- en: 'This means that we fix one variable at a time and increase by step. Fairly
    simple. Let’s code it:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: 1.1 Uniform Sampling Code
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'How do we do this? Let’s avoid this kind of structure:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: for a in dimensions 1
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: for b in dimension 2
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ….
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'for last letter of the alphabet in dimension number of letters in the alphabet:
    **X.append(**[a,b,…,last letter of the alphabet])'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We don’t want this as it is not very efficient and you need to define a variable
    per dimension and it is annoying. Let’s use the magic **numpy** instead.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: the question **np.meshgrid(*points)** does what you would do using the for loop
    but in an optimized way. Your parameter dict is meant to be the dictionary that
    tells you what is the min and max for each parameter.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: 'Using this bit of code you will generate a 0/1 cube and a cube with three different
    dimensions (for example -5 to 1 in the first dimension, 0 to 10 in the second
    dimension and -1 to 1 in the third dimension):'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: 'We have three dimensions, let’s plot the first 2:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a89e734c64928746624d0d52f05c8423.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
- en: 1.2 Pros and Cons
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Pros:** This method is very known for two reasons. The first reason is that
    it is super easy to implement. It’s really a for loop between variables. The second
    reason is that of course you are covering the parameter space uniformly, which
    is ideal if you want to make sure not to lose important parts of the parameter
    space'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: '**Cons**: The huge problem with this method is of course the exponential dependency.
    If we assume that the number of dimensions is fixed (let’s say 6) for a steps
    = 10 design you are already looking at a million point realization. And the problem,
    again, is the exponentiality of the thing. So if you want to increase the number
    of steps by doubling it (20 steps instead of 10) you are now talking about a 64M
    point problem.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Random Sampling
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'An alternative to the uniform sampling is the random sampling. How does it
    work? It’s very simple: in the cube of interest, you just select the points randomly
    in the boundaries.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: 2.1 Random Sampling Code
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The random sampling method is extremely simple to code, for both 0–1 cubes
    and custom boundaries cubes. This is how:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s plot this:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: 2.2 Pros and Cons
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Pros:** Even in this case, the random sampling is extremely simple to understand
    and to code (as you saw). Another pro is that this method can capture the complexity
    of the output space better than the uniform sampling, especially for large dimensions.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: '**Cons**: The problem is the inherent randomness of the sampling. This can
    potentially create clusters and areas of scarce exploration.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: Just to be a little more in-depth, the paper produced by [Pedergnana et al](https://www.researchgate.net/publication/282527646_Smart_sampling_and_incremental_function_learning_for_very_large_high_dimensional_data/citations)
    (extremely good) compares the difference between these two methods and other ones,
    especially for high dimensionality.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Latin Hypercube Sampling
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Latin Hypercube Sampling is usually defined as “Uniformly randomized sampling”.
    I think this is a very beautiful definition. Let me explain the idea.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 拉丁超立方体抽样通常定义为“均匀随机抽样”。我认为这是一个非常美丽的定义。让我解释一下这个思想。
- en: The key idea behind LHS is to divide the parameter space into equally probable
    intervals along each dimension and ensure that, within each interval, only one
    sample is taken. This results in a stratified and well-distributed sample that
    covers the entire parameter space.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: LHS 的关键思想是将参数空间划分为每个维度沿线的等概率区间，并确保在每个区间内只抽取一个样本。这会产生一个分层且分布均匀的样本，覆盖整个参数空间。
- en: The cool thing about the Latin Hypercube is that you can use [optimization methods](https://smt.readthedocs.io/en/latest/_src_docs/sampling_methods/lhs.html),
    for example, to maximize the minimum distance between points and place the point
    in a randomized location within its interval.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 拉丁超立方体的妙处在于你可以使用[优化方法](https://smt.readthedocs.io/en/latest/_src_docs/sampling_methods/lhs.html)，例如，最大化点之间的最小距离，并将点放置在其区间内的随机位置。
- en: 3.1 Latin Hypercube code
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.1 拉丁超立方体代码
- en: This method deserves a custom installation, namely Surrogate Modelling Toolbox
    (smt)
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这个方法需要自定义安装，即代理建模工具箱（smt）
- en: '[PRE0]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Super easy to do that:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 超级简单：
- en: 3.2 Pros and Cons
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.2 优缺点
- en: The Latin hypercube is visually similar to random sampling, but in multiple
    dimensions, it helps to preserve a form of **regularity** in the random sampling
    without the limits of uniform sampling. This method is, in its variation, the
    preferred one for large dimensions with few samples (which is the trickiest case
    to consider). The con of this method is the fact that it is much more complex
    both to implement and to describe, so it requires domain knowledge and a little
    bit of hands-on practice.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 拉丁超立方体在视觉上类似于随机抽样，但在多个维度中，它有助于保持随机抽样的一种**规则性**，而不受均匀抽样的限制。这个方法在其变体中是高维度少样本（这是最棘手的情况）的首选。这个方法的缺点在于它在实现和描述上都更复杂，因此需要领域知识和一些实际操作经验。
- en: 4\. Conclusions
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4. 结论
- en: 'In this blog post, we saw three designs of experiment, or sampling, techniques
    for machine learning cases where a control of the input parameters is possible.
    In particular, we saw:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇博客文章中，我们讨论了三种实验设计或抽样技术，适用于可以控制输入参数的机器学习案例。特别是，我们讨论了：
- en: '**Uniform (Grid) Sampling**: this is a method of building a N-th dimensional
    grid, where N is the number of dimensions. Straightforward to use, but not detailed
    enough especially for large dimensions.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**均匀（网格）抽样**：这是构建 N 维网格的方法，其中 N 是维度的数量。使用简单，但对于大维度来说不够详细。'
- en: '**Random Sampling is the method of defining the N-th dimensional cube and extracting**
    random values in the cube. Straightforward to use and better functioning than
    uniform sampling in the case of large dimensions, but still not optimal as it
    can create clusters and too dense areas'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**随机抽样是定义 N 维立方体并提取**立方体内随机值的方法。使用简单，在大维度的情况下比均匀抽样更有效，但仍然不理想，因为它可能会创建聚类和过于密集的区域。'
- en: '**Latin Hypercube Sampling** is a method that regularizes Random Sampling by
    imposing that at least one point is sampled for different sections of the N-th
    dimensional hypercube. Optimal for large dimensionality and few samples but requires
    domain knowledge and an optimization procedure'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**拉丁超立方体抽样**是一种通过在 N 维超立方体的不同部分至少抽取一个点来规范化随机抽样的方法。适用于高维度和样本较少的情况，但需要领域知识和优化程序。'
- en: We saw the three cases with coding examples for both unitary cubes (0 to 1 for
    each variable) and custom limits for each variable.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到三种情况的编码示例，包括单位立方体（每个变量的范围从0到1）和每个变量的自定义限制。
- en: No method is perfect, and adopting one or the other depends on your end goal.
    I hope that this article gives you a little bit of a framework to work on when
    deciding which design of experiment is best to adopt :)
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 没有方法是完美的，选择哪种方法取决于你的最终目标。希望这篇文章能为你在决定采用哪种实验设计时提供一点框架 :)
- en: 5\. Conclusions
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5. 结论
- en: 'If you liked the article and you want to know more about machine learning,
    or you just want to ask me something, you can:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢这篇文章，想了解更多机器学习相关内容，或者有其他问题，你可以：
- en: A. Follow me on [**Linkedin**](https://www.linkedin.com/in/pieropaialunga/),
    where I publish all my stories
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: A. 关注我在[**Linkedin**](https://www.linkedin.com/in/pieropaialunga/)，我会发布我的所有故事
- en: B. Subscribe to my [**newsletter**](https://piero-paialunga.medium.com/subscribe).
    It will keep you updated about new stories and give you the chance to text me
    to receive all the corrections or doubts you may have.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 订阅我的[**新闻通讯**](https://piero-paialunga.medium.com/subscribe)。它将使你了解最新的故事，并给你机会通过短信联系我，获取所有的修正或解答你的疑问。
- en: C. Become a [**referred member**](https://piero-paialunga.medium.com/membership),
    so you won’t have any “maximum number of stories for the month” and you can read
    whatever I (and thousands of other Machine Learning and Data Science top writers)
    write about the newest technology available.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 成为[**推荐会员**](https://piero-paialunga.medium.com/membership)，这样你就不会受到“每月故事数量上限”的限制，可以阅读我（以及数千名其他机器学习和数据科学顶级作者）撰写的关于最新技术的内容。
