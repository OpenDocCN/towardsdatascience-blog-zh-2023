["```py\nimport matplotlib.pyplot as plt\n```", "```py\nimport pandas as pd\n\n# Define fictional example dataframe\ndf = pd.DataFrame(\n          {'feature 1' : ['cat 1', 'cat 2', 'cat 3', 'cat 4'],\n           'feature 2' : [400, 300, 200, 100]\n          })\n```", "```py\nimport seaborn as sns\n\n# Create a basic bar chart from the example dataframe\nfig, ax = plt.subplots(1,1, figsize = (6, 4))\nsns.barplot(data =  df, \n            x = 'feature 1', \n            y = 'feature 2', \n            color = 'tan')\n\n# Add title\nax.set_title('Meaningful Title')\n\nplt.show()\n```", "```py\n# Remove top and right spines\nax.spines['right'].set_visible(False)\nax.spines['top'].set_visible(False)\n```", "```py\n# Remove ticks on x-axis\nax.tick_params(bottom = False)\n```", "```py\n# Define colors of individual bars\ncustom_colors = ['lightgrey', 'tan', 'lightgrey', 'lightgrey']\n\n# De-emphasize less important bars\nsns.barplot(data =  df, \n            x = 'feature 1', \n            y = 'feature 2', \n            palette = custom_colors) \n```", "```py\n# Mute colors of spines\nax.spines['left'].set_color('grey')   \nax.spines['bottom'].set_color('grey')\n\n# Mute colors of ticks\nax.tick_params(colors = 'grey')\n\n# Mute colors of labels\nax.set_xlabel('feature 1', color = 'grey')\nax.set_ylabel('feature 2', color = 'grey')\n```", "```py\n# Add text annotations\nax.annotate('Look at \"cat 2\". \\nThis is important!',\n             xy = (1.5, 360), \n              ha = 'center',\n              fontsize = 11,\n           )\n```", "```py\n# Annotate bar chart with values\nfor bar in ax.patches:\n    ax.annotate(int(bar.get_height()),\n                xy = (bar.get_x() + bar.get_width() / 2, bar.get_height()), \n                ha = 'center', \n                va = 'center',\n                xytext = (0, 8),\n                textcoords = 'offset points'\n                )\n```", "```py\n# Make only part of text bold\nax.annotate('Look at \"cat 2\". \\nThis is $\\\\bf{important}$!', \n            #...\n           )\n\n# Make all of the text bold\nax.annotate('Look at \"cat 2\". \\nThis is important!', \n            #...\n            fontweight='bold',\n           )\n```", "```py\n# Remove ticks on x-axis\nax.tick_params(bottom = False)\n# Add important take away to plot \nax.annotate('Look at \"cat 2\". \\nThis is $\\\\bf{important}$!', # Emphasize important terms\n            xy = (1.5, 360), \n            ha = 'center',\n            color = 'tan', \n            fontsize = 11,\n           )\n```", "```py\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Define color palette\nhighlight_color = 'tan'\nmuted_color = 'dimgrey'\nmuted_color2 = 'lightgrey'\ncustom_colors = [muted_color2, 'tan', muted_color2, muted_color2]\n\n# Create a basic bar chart from the example dataframe\nfig, ax = plt.subplots(1,1, figsize = (6, 4))\n\nsns.barplot(data =  df, \n            x = 'feature 1', \n            y = 'feature 2', \n            palette = custom_colors) # De-emphasize less important bars\n\n# Add title\nax.set_title('Meaningful Title')\n\n# Mute colors of labels\nax.set_xlabel('feature 1', color = muted_color)\nax.set_ylabel('feature 2', color = muted_color)\n\n# Remove unimportant spines and mute color of remaining spines\nax.spines['right'].set_visible(False)      # Remove top and right spines\nax.spines['top'].set_visible(False)        # Remove top and right spines \nax.spines['left'].set_color(muted_color)   # Mute colors of spines\nax.spines['bottom'].set_color(muted_color) # Mute colors of spines\n\n# Remove ticks on x-axis and mute colors of ticks\nax.tick_params(bottom = False,        # Remove ticks on x-axis\n    colors = muted_color,             # Mute colors of ticks\n)\n\n# Annotate bar chart with values\nfor i, bar in enumerate(ax.patches):\n    ax.annotate(int(bar.get_height()),\n    xy = (bar.get_x() + bar.get_width() / 2, bar.get_height()), \n    ha = 'center', \n    va = 'center',\n    xytext = (0, 8),\n    textcoords = 'offset points',\n    color = custom_colors[i])\n\n# Add important take away to plot \nax.annotate('Look at \"cat 2\". \\nThis is $\\\\bf{important}$!', # Emphasize important terms\n            xy = (1.5, 360), \n            ha = 'center',\n            color = highlight_color, \n            fontsize = 11,\n           )\n\nplt.show()\n```"]