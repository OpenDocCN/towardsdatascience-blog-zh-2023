- en: How to Build an ELT with Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-to-build-an-elt-with-python-8f5d9d75a12e](https://towardsdatascience.com/how-to-build-an-elt-with-python-8f5d9d75a12e)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Extracting, Loading and Transforming Data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@marietruong?source=post_page-----8f5d9d75a12e--------------------------------)[![Marie
    Truong](../Images/2816e49beef958724dc0f38cfa49c4be.png)](https://medium.com/@marietruong?source=post_page-----8f5d9d75a12e--------------------------------)[](https://towardsdatascience.com/?source=post_page-----8f5d9d75a12e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----8f5d9d75a12e--------------------------------)
    [Marie Truong](https://medium.com/@marietruong?source=post_page-----8f5d9d75a12e--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----8f5d9d75a12e--------------------------------)
    ·7 min read·Feb 7, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3bb2cf8a93d38e55adefa041419b80d8.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [JJ Ying](https://unsplash.com/@jjying?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: ELT (Extract, Load, Transform) is a modern approach to data integration that
    differs slightly from ETL (Extract, Transform, Data). ETL transforms data before
    loading it inside the data warehouse, whereas in an ELT, the raw data is loaded
    directly inside the data warehouse and transformed using SQL.
  prefs: []
  type: TYPE_NORMAL
- en: Building ELTs is a very important part of data and analytics engineers’s job,
    and it can also be a useful skill for data analysts and scientists with a wider
    scope, or job seekers building a complete portfolio.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this article, we’ll build a short ELT pipeline in Python using data from
    [dummyJSON](https://dummyjson.com/). dummyJSON is a fake REST API. It provides
    9 types of resources:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/63f9d7d997ffb2a73d9b21d5c41a3987.png)'
  prefs: []
  type: TYPE_IMG
- en: Screenshot of dummyjson.com
  prefs: []
  type: TYPE_NORMAL
- en: We will try to find out which customers spent the most money on our dummy shop.
  prefs: []
  type: TYPE_NORMAL
- en: 'This script will involve 3 steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Extracting Data from dummyJSON API
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Loading raw data to BigQuery
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Executing a query to perform the analysis
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Let’s start building our pipeline!
  prefs: []
  type: TYPE_NORMAL
- en: Extracting Data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We will need to retrieve 2 resources from the API: carts, and users.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s create a function that makes the API call and returns the JSON data:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: We use the **requests** library to make a simple HTTP GET request. We check
    that it’s a success with the status code and return the JSON data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'We have our data about orders! Let’s try it with customers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'This time, something catches our attention: there is a total of 100 users,
    but we only received 30.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/07b7c1c7143edc8e7c90c6a6d51785af.png)'
  prefs: []
  type: TYPE_IMG
- en: Screenshot by Author
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, we need to call that API again until we have all the data, skipping
    the ones that we already have. However, we are not interested in sending those
    *total*, *skip*, and *limit* keys to our data warehouse; let’s keep only the users
    and carts.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is our updated function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: This time, we have our 100 users!
  prefs: []
  type: TYPE_NORMAL
- en: Loading Data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now, it’s time to upload our data to BigQuery. We are going to use the [BigQuery
    client library for Python](https://cloud.google.com/bigquery/docs/reference/libraries).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/67f493aa3d84f23c718c80a2abbb3f57.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [cloud.google.com/bigquery/docs/batch-loading-data](http://cloud.google.com/bigquery/docs/batch-loading-data)'
  prefs: []
  type: TYPE_NORMAL
- en: Looking at the documentation, we see that it’s possible to load a local file
    into BigQuery. Right now, our JSON is only a dict. Let’s download it to a local
    file.
  prefs: []
  type: TYPE_NORMAL
- en: We are going to use the native library **json** and write our JSON data inside
    a file. One thing we need to keep in mind is that BigQuery accepts JSONS in a
    newline delimited format, not a comma delimited format.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'We can now check that our carts.json file is in the right JSON format:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Let’s try to upload our files now!
  prefs: []
  type: TYPE_NORMAL
- en: First, we need to [download the client library for Python](https://cloud.google.com/bigquery/docs/reference/libraries).
  prefs: []
  type: TYPE_NORMAL
- en: 'Once this is done, we have to [download a service account key](https://cloud.google.com/bigquery/docs/authentication/service-account-file)
    and create an environment variable to tell BigQuery where our credentials are
    stored. In the terminal, we can enter the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, we can write our Python function. Luckily, BigQuery documentation gives
    us a code sample:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a98dd38fd0458a0b7c93aabaac288d7e.png)'
  prefs: []
  type: TYPE_IMG
- en: Screenshot by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'We can define a new function using this sample:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: We told BigQuery to truncate our table every time, so if we rerun the script,
    existing rows will be overwritten.
  prefs: []
  type: TYPE_NORMAL
- en: 'We now have our 2 tables inside BigQuery:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/40a669a1e0ec8bdd1355a5b43bfad3de.png)'
  prefs: []
  type: TYPE_IMG
- en: Screenshot by Author
  prefs: []
  type: TYPE_NORMAL
- en: Transforming Data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It’s time to move on to the last letter in ELT!
  prefs: []
  type: TYPE_NORMAL
- en: We want to have a table with the users and the amount they spent on our shop.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s join our two tables to have this information:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/1c71b7052b8f3a7a0b7f59703d641317.png)'
  prefs: []
  type: TYPE_IMG
- en: Screenshot by Author
  prefs: []
  type: TYPE_NORMAL
- en: Seems like Trace Douglas is our top spender! Let’s add this table as a part
    of our ELT.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: I removed the ORDER BY as this is computationally expensive; we can still order
    our results once we query the **dummy_best_spenders** table.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s check that our table was created:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/24a0e10ad92790fc0311bb985ba07139.png)'
  prefs: []
  type: TYPE_IMG
- en: Screenshot by Author
  prefs: []
  type: TYPE_NORMAL
- en: That’s it, we built our first ELT in just a few lines of code!
  prefs: []
  type: TYPE_NORMAL
- en: Going Further with ELTs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When dealing with real and bigger projects, there are a few more things to
    consider:'
  prefs: []
  type: TYPE_NORMAL
- en: We will deal with larger amounts of data. There will be new data every day,
    so we have to incrementally append data to our tables instead of treating all
    the data every day.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As our ELTs get more complex, with multiple sources of data, we might need to
    use a workflow orchestration tool like Airflow or Prefect.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We can only load files that weight less than 10MB directly into BigQuery. To
    load bigger files, we need to load them in Cloud Storage first.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Resources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[BigQuery client library](https://cloud.google.com/python/docs/reference/bigquery/latest/google.cloud.bigquery.client.Client)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Requests: HTTP for Humans](https://requests.readthedocs.io/en/latest/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[JSON encoder and decoder](https://docs.python.org/3/library/json.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I hope you enjoyed this article! If you did, please follow me for more content
    on Python, SQL, and analytics.
  prefs: []
  type: TYPE_NORMAL
- en: Become a member and read all stories on Medium. Your membership fee will directly
    support me and other writers you read. You’ll also get full access to every story
    on Medium.
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/@marietruong/membership?source=post_page-----8f5d9d75a12e--------------------------------)
    [## Join Medium with my referral link — Marie Truong'
  prefs: []
  type: TYPE_NORMAL
- en: Read every story from Marie Truong (and thousands of other writers on Medium).
    Your membership fee directly supports…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: medium.com](https://medium.com/@marietruong/membership?source=post_page-----8f5d9d75a12e--------------------------------)
  prefs: []
  type: TYPE_NORMAL
