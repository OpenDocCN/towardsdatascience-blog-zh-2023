- en: 'Human-Learn: Rule-Based Learning as an Alternative to Machine Learning'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/human-learn-rule-based-learning-as-an-alternative-to-machine-learning-baf1899ecb3a](https://towardsdatascience.com/human-learn-rule-based-learning-as-an-alternative-to-machine-learning-baf1899ecb3a)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Incorporate Domain Knowledge into Your Model with Rule-Based Learning
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://khuyentran1476.medium.com/?source=post_page-----baf1899ecb3a--------------------------------)[![Khuyen
    Tran](../Images/98aa66025ad29b618e875c75f1c400a5.png)](https://khuyentran1476.medium.com/?source=post_page-----baf1899ecb3a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----baf1899ecb3a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----baf1899ecb3a--------------------------------)
    [Khuyen Tran](https://khuyentran1476.medium.com/?source=post_page-----baf1899ecb3a--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----baf1899ecb3a--------------------------------)
    ·7 min read·Jan 1, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: Motivation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You are given a labeled dataset and assigned to predict a new one. What would
    you do?
  prefs: []
  type: TYPE_NORMAL
- en: The first approach that you probably try is to train a machine learning model
    to find rules for labeling new data.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1044eec31dae2c0e7f68aa7188b489cc.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: This is convenient, but it is challenging to know why the machine learning model
    comes up with a particular prediction. You also can’t incorporate your domain
    knowledge into the model.
  prefs: []
  type: TYPE_NORMAL
- en: Instead of depending on a machine learning model to make predictions, is there
    a way to set the rules for data labeling based on your knowledge?
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/cfa0724b6d540aa558c2d888cdb6878e.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: That is when human-learn comes in handy.
  prefs: []
  type: TYPE_NORMAL
- en: What is human-learn?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: human-learn is a Python package to create rule-based systems that are easy to
    construct and are compatible with scikit-learn.
  prefs: []
  type: TYPE_NORMAL
- en: 'To install human-learn, type:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'In the previous article, I talked about how to create a human learning model
    by drawing:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/human-learn-create-rules-by-drawing-on-the-dataset-bcbca229f00?source=post_page-----baf1899ecb3a--------------------------------)
    [## human-learn: Create a Human Learning Model by Drawing'
  prefs: []
  type: TYPE_NORMAL
- en: Use your Domain Knowledge to Label your Data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/human-learn-create-rules-by-drawing-on-the-dataset-bcbca229f00?source=post_page-----baf1899ecb3a--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: In this article, we will learn how to create a model with a simple function.
  prefs: []
  type: TYPE_NORMAL
- en: 'Feel free to play and fork the source code of this article here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://github.com/khuyentran1401/Data-science/blob/master/machine-learning/human_learn_examples/rule_based_model.ipynb?source=post_page-----baf1899ecb3a--------------------------------)
    [## Data-science/rule_based_model.ipynb at master · khuyentran1401/Data-science'
  prefs: []
  type: TYPE_NORMAL
- en: Collection of useful data science topics along with code and articles — Data-science/rule_based_model.ipynb
    at master ·…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: github.com](https://github.com/khuyentran1401/Data-science/blob/master/machine-learning/human_learn_examples/rule_based_model.ipynb?source=post_page-----baf1899ecb3a--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: To evaluate the performance of a rule-based model, let’s start with predicting
    a dataset using a machine learning model.
  prefs: []
  type: TYPE_NORMAL
- en: Machine Learning Model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We will use the[*Occupation Detection Dataset*](https://archive.ics.uci.edu/ml/machine-learning-databases/00357/)from
    UCI Machine Learning Repository as an example for this tutorial.
  prefs: []
  type: TYPE_NORMAL
- en: Our task is to predict room occupancy based on temperature, humidity, light,
    and CO2\. A room is not occupied if `Occupancy=0` and is occupied if `Occupancy=1`
    .
  prefs: []
  type: TYPE_NORMAL
- en: 'After downloading the dataset, unzip and read the data:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Take a look at the first ten records of the `train` dataset:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/b9b0f6b71bad5cf8a64842ba8df73043.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'Train the scikit-learn’s `RandomForestClassifier` model on the training dataset
    and use it to predict the test dataset:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/a8582d20ad9c1a25cc9a26b9777dbc58.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: The score is pretty good. However, we are unsure how the model comes up with
    these predictions.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s see if we can label the new data with simple rules.
  prefs: []
  type: TYPE_NORMAL
- en: Rule-Based Model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are four steps to create rules for labeling data:'
  prefs: []
  type: TYPE_NORMAL
- en: Generate a hypothesis
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Observe the data to validate the hypothesis
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Start with simple rules based on the observations
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Improve the rules
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Generate a Hypothesis
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Light in a room is a good indicator of whether a room is occupied. Thus, we
    can assume that the lighter a room is, the more likely it will be occupied.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s see if this is true by looking at the data.
  prefs: []
  type: TYPE_NORMAL
- en: Observe the Data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To validate our guess, let’s use a box plot to find the difference in the amount
    of light between an occupied room (`Occupancy=1`) and an empty room (`Occupancy=0`).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/085bcdf2cab8d01a1c3eb0d56592f75f.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: We can see a significant difference in the median between an occupied and an
    empty room.
  prefs: []
  type: TYPE_NORMAL
- en: Start with Simple Rules
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now, we will create rules for whether a room is occupied based on the light
    in that room. Specifically, if the amount of light is above a certain threshold,
    `Occupancy=1` and `Occupancy=0` otherwise.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d424677a5204dae2f8b17353596754d9.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: But what should that threshold be? Let’s start with picking `100` to be threshold
    and see what we get.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/838ac0be44c442e05785c036f4f12ba0.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'To create a rule-based model with human-learn, we will:'
  prefs: []
  type: TYPE_NORMAL
- en: Write a simple Python function that specifies the rules
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use `FunctionClassifier` to turn that function into a scikit-learn model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Predict the test set and evaluate the predictions:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/017a7959f333721390155797542c738d.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: The accuracy is better than what we got earlier using `RandomForestClassifier`!
  prefs: []
  type: TYPE_NORMAL
- en: Improve the Rules
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let’s see if we can get a better result by experimenting with several thresholds.
    We will use parallel coordinates to analyze the relationships between a specific
    value of light and room occupancy.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/836ada2674bd7b4913173fda8d64e37a.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: From the parallel coordinates, we can see that the room with a light above 250
    Lux has a high chance of being occupied. The optimal threshold that separates
    an occupied room from an empty room seems to be somewhere between 250 Lux and
    750 Lux.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s find the best threshold in this range using scikit-learn’s `GridSearch`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Get the best threshold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Plot the threshold on the box plot.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0cf82b8aa8b48292ba75a93d7c648abd.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'Use the model with the best threshold to predict the test set:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/28090f529d202cd18a041aa9740f0d4e.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: The threshold of `365` gives a better result than the threshold of `100`.
  prefs: []
  type: TYPE_NORMAL
- en: Combine ML Model and Rule-Based Model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Using domain knowledge to create rules with a rule-based model is nice, but
    there are some disadvantages:'
  prefs: []
  type: TYPE_NORMAL
- en: It doesn’t generalize well to unseen data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is difficult to come up with rules for complex data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There is no feedback loop to improve the model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thus, combing a rule-based model and an ML model will help data scientists scale
    and improve the model while still being able to incorporate their domain expertise.
  prefs: []
  type: TYPE_NORMAL
- en: One straightforward way to combine the two models is to decide whether to reduce
    false negatives or false positives.
  prefs: []
  type: TYPE_NORMAL
- en: Reduce False Negatives
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You might want to reduce false negatives in scenarios such as predicting whether
    a patient has cancer (it is better to make a mistake telling patients that they
    have cancer than to fail to detect cancer).
  prefs: []
  type: TYPE_NORMAL
- en: To reduce false negatives, choose **positive labels** when two models disagree.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2165e7bcb6d2b4fb5d0a2437bdf98d85.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Reduce False Positives
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You might want to reduce false positives in scenarios such as recommending videos
    that might be violent to kids (it is better to make the mistake of not recommending
    kid-friendly videos than to recommend adult videos to kids).
  prefs: []
  type: TYPE_NORMAL
- en: To reduce false positives, choose **negative labels** when two models disagree.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3671651d544719f677c8781af5bbecae.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: You can also use other more complex policy layers to decide which prediction
    to choose from.
  prefs: []
  type: TYPE_NORMAL
- en: For a deeper dive into how to combine an ML model and a rule-based model, I
    recommend checking [this excellent video](https://youtu.be/gXe9iXNTuDc) by Jeremy
    Jordan.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Congratulations! You have just learned what a rule-based model is and how to
    combine it with a machine-learning model. I hope this article gives you the knowledge
    needed to develop your own rule-based model.
  prefs: []
  type: TYPE_NORMAL
- en: I like to write about data science concepts and play with different data science
    tools. You could connect with me on [LinkedIn](https://www.linkedin.com/in/khuyen-tran-1401/)
    and [Twitter](https://twitter.com/KhuyenTran16).
  prefs: []
  type: TYPE_NORMAL
- en: 'Star [this repo](https://github.com/khuyentran1401/Data-science) if you want
    to check the code for the articles I have written. Follow me on Medium to stay
    informed with my latest data science articles:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/predict-movie-ratings-with-user-based-collaborative-filtering-392304b988af?source=post_page-----baf1899ecb3a--------------------------------)
    [## Predict Movie Ratings with User-Based Collaborative Filtering'
  prefs: []
  type: TYPE_NORMAL
- en: A Comprehensive Introduction to Collaborating Filtering in Python
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'towardsdatascience.com](/predict-movie-ratings-with-user-based-collaborative-filtering-392304b988af?source=post_page-----baf1899ecb3a--------------------------------)
    [](/shap-explain-any-machine-learning-model-in-python-24207127cad7?source=post_page-----baf1899ecb3a--------------------------------)
    [## SHAP: Explain Any Machine Learning Model in Python'
  prefs: []
  type: TYPE_NORMAL
- en: A Comprehensive Guide to SHAP and Shapley Values
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/shap-explain-any-machine-learning-model-in-python-24207127cad7?source=post_page-----baf1899ecb3a--------------------------------)
    [](/supercharge-your-python-string-with-textblob-2d9c08a8da05?source=post_page-----baf1899ecb3a--------------------------------)
    [## Supercharge your Python String with TextBlob
  prefs: []
  type: TYPE_NORMAL
- en: Get more insights out of your text within one line of code!
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/supercharge-your-python-string-with-textblob-2d9c08a8da05?source=post_page-----baf1899ecb3a--------------------------------)
    [](/similarity-encoding-for-dirty-categories-using-dirty-cat-d9f0b581a552?source=post_page-----baf1899ecb3a--------------------------------)
    [## Similarity Encoding for Dirty Categories Using dirty_cat
  prefs: []
  type: TYPE_NORMAL
- en: towardsdatascience.com](/similarity-encoding-for-dirty-categories-using-dirty-cat-d9f0b581a552?source=post_page-----baf1899ecb3a--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Reference
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Data citation:'
  prefs: []
  type: TYPE_NORMAL
- en: Accurate occupancy detection of an office room from light, temperature, humidity
    and CO2 measurements using statistical learning models. Luis M. Candanedo, VÃ©ronique
    Feldheim. Energy and Buildings. Volume 112, 15 January 2016, Pages 28–39.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
