- en: 'An Introduction to a Powerful Optimization Technique: Simulated Annealing'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 强大的优化技术简介：模拟退火
- en: 原文：[https://towardsdatascience.com/an-introduction-to-a-powerful-optimization-technique-simulated-annealing-87fd1e3676dd](https://towardsdatascience.com/an-introduction-to-a-powerful-optimization-technique-simulated-annealing-87fd1e3676dd)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/an-introduction-to-a-powerful-optimization-technique-simulated-annealing-87fd1e3676dd](https://towardsdatascience.com/an-introduction-to-a-powerful-optimization-technique-simulated-annealing-87fd1e3676dd)
- en: '![](../Images/14be4f75d59bab24c155145334bc6078.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/14be4f75d59bab24c155145334bc6078.png)'
- en: It’s all about the temperature. Image by Dall-E 2.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这完全与温度有关。图像由Dall-E 2提供。
- en: Explanation, parameters, strengths, weaknesses and use cases
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解释、参数、优点、缺点和使用案例
- en: '[](https://hennie-de-harder.medium.com/?source=post_page-----87fd1e3676dd--------------------------------)[![Hennie
    de Harder](../Images/3e4f2cccd6cb976ca3f8bf15597daea8.png)](https://hennie-de-harder.medium.com/?source=post_page-----87fd1e3676dd--------------------------------)[](https://towardsdatascience.com/?source=post_page-----87fd1e3676dd--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----87fd1e3676dd--------------------------------)
    [Hennie de Harder](https://hennie-de-harder.medium.com/?source=post_page-----87fd1e3676dd--------------------------------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://hennie-de-harder.medium.com/?source=post_page-----87fd1e3676dd--------------------------------)[![Hennie
    de Harder](../Images/3e4f2cccd6cb976ca3f8bf15597daea8.png)](https://hennie-de-harder.medium.com/?source=post_page-----87fd1e3676dd--------------------------------)[](https://towardsdatascience.com/?source=post_page-----87fd1e3676dd--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----87fd1e3676dd--------------------------------)
    [Hennie de Harder](https://hennie-de-harder.medium.com/?source=post_page-----87fd1e3676dd--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----87fd1e3676dd--------------------------------)
    ·9 min read·Mar 15, 2023
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----87fd1e3676dd--------------------------------)
    ·9分钟阅读·2023年3月15日
- en: --
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '**Simulated annealing is an optimization technique that tries to find the global
    optimum for a mathematical optimization problem. It is a great technique and you
    can apply it to a wide range of problems. In this post we’ll dive into the definition,
    strengths, weaknesses and use cases of simulated annealing.**'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**模拟退火是一种优化技术，试图为数学优化问题找到全局最优解。这是一种很棒的技术，你可以将其应用于广泛的问题。在本文中，我们将深入探讨模拟退火的定义、优点、缺点和使用案例。**'
- en: You are not supposed to have favorite machine learning models or optimization
    techniques. But people do have their favorites, take LightGBM for example. In
    optimization, one technique I like is simulated annealing. It’s easy to understand
    and works for many different types of problems.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你不应该有最喜欢的机器学习模型或优化技术。但人们确实有他们的偏爱，比如LightGBM。在优化方面，我喜欢的一种技术是模拟退火。它易于理解，适用于许多不同类型的问题。
- en: This post requires knowledge about mathematical optimization problems and local
    search. If you don’t have this knowledge, [this post](https://medium.com/towards-data-science/mathematical-optimization-heuristics-every-data-scientist-should-know-b26de0bd43e6)
    is a good start.
  id: totrans-10
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 本文需要有关数学优化问题和局部搜索的知识。如果你没有这些知识，[这篇文章](https://medium.com/towards-data-science/mathematical-optimization-heuristics-every-data-scientist-should-know-b26de0bd43e6)是一个很好的起点。
- en: What is Simulated Annealing?
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是模拟退火？
- en: Simulated annealing (SA) is a stochastic optimization algorithm used to find
    the global minimum of a cost function. It is a meta-heuristic in local search
    to solve the problem of getting stuck in local minima. The algorithm is based
    on the physical process of [annealing in metallurgy](https://www.chemeurope.com/en/encyclopedia/Annealing_%28metallurgy%29.html),
    where metal is heated and then slowly cooled. By doing this, the metal is softened
    and prepared for further work. The algorithm was introduced [in 1983 in this paper](https://www.dcs.gla.ac.uk/~pat/ads2/java/TxSxP/papers/sa.pdf).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟退火（SA）是一种随机优化算法，用于寻找成本函数的全局最小值。它是一种局部搜索的元启发式方法，解决了陷入局部最小值的问题。该算法基于[冶金中的退火过程](https://www.chemeurope.com/en/encyclopedia/Annealing_%28metallurgy%29.html)，其中金属被加热然后缓慢冷却。通过这种方式，金属变得柔软，并为进一步加工做好准备。该算法在[1983年的这篇论文中介绍](https://www.dcs.gla.ac.uk/~pat/ads2/java/TxSxP/papers/sa.pdf)。
- en: In SA, the algorithm starts with an initial solution to the problem and a high
    initial temperature. The solution is perturbed by making a random change to it,
    and the resulting new solution is evaluated using an objective function. If the
    new solution is better (i.e., has a lower cost), it is accepted as the new current
    solution. If the new solution is worse (i.e., has a higher cost), it may still
    be accepted with a probability that depends on the temperature and the degree
    of worsening, this is called the acceptance value. The idea is to allow the algorithm
    to occasionally accept worse solutions early on in the process, in order to explore
    a wider range of solutions and avoid getting stuck in local minima.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在模拟退火（SA）中，算法从一个初始解和一个较高的初始温度开始。通过对解进行随机变化来扰动该解，然后使用目标函数评估结果的新解。如果新解更好（即，成本更低），则接受它作为新的当前解。如果新解更差（即，成本更高），它仍然有可能被接受，这个接受的概率取决于温度和恶化的程度，这称为接受值。这个想法是允许算法在过程的早期偶尔接受更差的解，以探索更广泛的解范围，并避免陷入局部最小值。
- en: 'The *metropolis acceptance criterion* is used normally to calculate the acceptance
    value. The inputs are the temperature and the difference between the score of
    the neighbor solution (new solution) and the current solution. So first, calculate
    the difference, and if it’s below zero accept the current solution. If it’s above
    zero, calculate the acceptance value, or the probability of accepting this solution
    while it’s worse:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 通常使用*Metropolis 接受准则*来计算接受值。输入包括温度以及邻域解（新解）和当前解之间的分数差异。首先计算差异，如果低于零则接受当前解。如果高于零，则计算接受值，即在更差时接受此解的概率：
- en: '![](../Images/c8de40e24b75a747d4a803693bbe5df1.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c8de40e24b75a747d4a803693bbe5df1.png)'
- en: As the algorithm progresses, the temperature is gradually decreased according
    to a cooling schedule. This reduces the likelihood of accepting worse solutions
    and allows the algorithm to converge towards the global minimum. There are different
    types of cooling schedules that can be used, such as linear, logarithmic, or geometric
    cooling.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 随着算法的进展，温度会根据冷却计划逐渐降低。这减少了接受较差解的可能性，并允许算法向全局最小值收敛。可以使用不同类型的冷却计划，例如线性、对数或几何冷却。
- en: SA terminates either when a satisfactory solution is found, or when a maximum
    number of iterations or a certain convergence criteria is met.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: SA 在找到一个满意的解，或者达到最大迭代次数或某些收敛标准时终止。
- en: '![](../Images/3a7dab5df8bfff401eb24d203a6ef028.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3a7dab5df8bfff401eb24d203a6ef028.png)'
- en: Pseudocode and functions used in a basic version of Simulated Annealing.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 基本版本的模拟退火中使用的伪代码和函数。
- en: Parameters
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参数
- en: 'If you want to get the best out of your simulated annealing implementation
    (and obviously you do), it’s important to pay attention to its parameters. Here
    are the most important ones:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想充分发挥模拟退火实现的优势（显然你是这样想的），那么注意其参数是很重要的。以下是最重要的参数：
- en: Temperature and Cooling Schedule
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 温度和冷却计划
- en: The initial temperature is the starting temperature of the system and determines
    the probability of accepting a worse solution. If the initial temperature is too
    high, the algorithm may accept too many bad solutions, while if it is too low,
    the algorithm may get stuck in a local minimum.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 初始温度是系统的起始温度，并决定接受较差解的概率。如果初始温度过高，算法可能会接受过多的糟糕解；而如果温度过低，算法可能会陷入局部最小值。
- en: 'Directly related is the cooling schedule: it determines how fast the temperature
    decreases during the annealing process. If the cooling schedule is too slow, the
    algorithm may not converge to a good solution in a reasonable amount of time,
    while if it is too fast, the algorithm may converge to a suboptimal solution.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 直接相关的是冷却计划：它决定了在退火过程中温度下降的速度。如果冷却计划过于缓慢，算法可能无法在合理的时间内收敛到一个好的解；而如果冷却计划过于迅速，算法可能会收敛到一个次优解。
- en: '![](../Images/dba8609b3350c8bea415467e2448fcde.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dba8609b3350c8bea415467e2448fcde.png)'
- en: Different cooling schedules to determine the temperature for a given iteration.
    Starting temperature set to 100 and iteration limit of 100\. Image by author.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的冷却计划用于确定给定迭代的温度。初始温度设置为 100，迭代限制为 100。图像由作者提供。
- en: Acceptance Criterion
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 接受准则
- en: The acceptance criterion determines the threshold for accepting or rejecting
    a new solution. The value of the acceptance criterion is the probability that
    a new solution is accepted while it scores worse than the current solution. It
    is based on the difference between the new solution score and the current solution
    score.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 接受标准决定了接受或拒绝新解决方案的阈值。接受标准的值是指在新解决方案的得分低于当前解决方案的情况下接受新解决方案的概率。它基于新解决方案得分与当前解决方案得分之间的差异。
- en: 'Below the acceptance values for different deltas (1, 10 and 100) related to
    different cooling schedules:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是与不同冷却计划相关的不同增量（1、10 和 100）的接受值：
- en: '![](../Images/8dd8328098dc9c3f93824d84041e1575.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8dd8328098dc9c3f93824d84041e1575.png)'
- en: Acceptance values for different deltas and cooling schedules. Image by author.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 不同增量和冷却计划的接受值。作者提供的图片。
- en: 'So if we look at one example, iteration 75 and delta 10, the probabilities
    for accepting the solution are:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 所以如果我们看一个例子，迭代次数 75 和增量 10，接受解决方案的概率是：
- en: '![](../Images/e9214f081a01982f6586a2e9e1ada6e1.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e9214f081a01982f6586a2e9e1ada6e1.png)'
- en: The differences are quite large! That’s why it’s important to test different
    cooling schedules with different parameters.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 差异相当大！这就是为什么测试不同参数的冷却计划很重要。
- en: Number of Iterations
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 迭代次数
- en: The number of iterations should be set high enough to allow the algorithm to
    converge to a good solution, but not so high that the algorithm takes too long
    to run.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 迭代次数应设置得足够高，以允许算法收敛到良好的解决方案，但又不至于过高，以至于算法运行时间过长。
- en: Neighborhood Function
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 邻域函数
- en: 'This is the set of moves that can be applied to the current solution to generate
    a new one. The neighborhood function should be chosen carefully to balance the
    exploration of the search space with the exploitation of good solutions. For every
    problem, you can construct it in different ways. Below are 4 different types of
    local moves for the traveling salesman problem:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这是可以应用于当前解决方案以生成新解决方案的一组操作。邻域函数应该谨慎选择，以平衡对搜索空间的探索和对良好解决方案的利用。对于每个问题，你可以用不同的方法构造它。以下是旅行商问题的
    4 种不同的局部移动类型：
- en: '![](../Images/fcda92795fa9d83acc1cbca2bdbd2af3.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fcda92795fa9d83acc1cbca2bdbd2af3.png)'
- en: Common local moves for the traveling salesman problem. Image by author.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 旅行商问题的常见局部移动。作者提供的图片。
- en: Strengths & Weaknesses
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 优势与劣势
- en: 'SA is powerful and effective. Here are five strength points of the meta-heuristic:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: SA 强大且有效。以下是该元启发式算法的五个优点：
- en: '**Strength 1\. Effective in finding global optima**'
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**优势 1\. 有效寻找全局最优解**'
- en: Instead of getting stuck in local optima (like local search), SA is designed
    to find the global minimum of a cost function. By allowing for random moves and
    probabilistic acceptance of worse solutions, it can effectively search large solution
    spaces and find global optima, even in the presence of local optima.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 与局部搜索不同，SA 旨在找到成本函数的全局最小值。通过允许随机移动和以概率接受更差的解决方案，它可以有效地搜索大范围的解决方案空间，找到全局最优解，即使在存在局部最优解的情况下。
- en: 'Below you can see what happens when you apply local search without meta-heuristic
    like SA. You start somewhere and you only accept better solutions. Then you end
    up in a local minimum:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 下面你可以看到当你应用局部搜索而没有像 SA 这样的元启发式算法时会发生什么。你从某个地方开始，只接受更好的解决方案。然后你会陷入局部最小值：
- en: '![](../Images/b3c269143cb8a2e8e67fd81431da1683.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b3c269143cb8a2e8e67fd81431da1683.png)'
- en: Local search. The final solution depends on the starting solution. Gif by author.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 局部搜索。最终解决方案取决于起始解决方案。作者提供的 GIF。
- en: 'Simulated annealing can escape local minima, because it accepts worse solutions.
    If we start with the same solution, this can happen with SA:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟退火可以逃离局部最小值，因为它接受更差的解决方案。如果我们从相同的解决方案开始，SA 可能会这样发生：
- en: '![](../Images/af2bb59146f79a4249504e32775a9810.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/af2bb59146f79a4249504e32775a9810.png)'
- en: Simulated annealing search for the optimal solution. Gif by author.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟退火搜索最优解。作者提供的 GIF。
- en: Besides SA, you can try other meta-heuristics to escape local minima, like iterated
    local search or tabu search.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 SA，你可以尝试其他元启发式算法以逃离局部最小值，如迭代局部搜索或禁忌搜索。
- en: '**Strength 2\. Robustness**'
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**优势 2\. 鲁棒性**'
- en: Simulated annealing can handle a wide range of optimization problems with different
    types of cost functions, constraints, and search spaces. It does not rely on assumptions
    about the nature of the cost function, and is robust to noise and uncertainty
    in the input.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟退火可以处理各种优化问题，具有不同类型的成本函数、约束条件和搜索空间。它不依赖于关于成本函数本质的假设，并且对输入中的噪声和不确定性具有鲁棒性。
- en: '**Strength 3\. Flexibility**'
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**优势 3. 灵活性**'
- en: Another strength is that SA can be easily customized and adapted to different
    problem domains and search spaces. The cooling schedule, neighborhood structure,
    and acceptance criterion can be tuned to suit the specific problem being solved.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个优势是模拟退火（SA）可以很容易地自定义和适应不同的问题领域和搜索空间。冷却计划、邻域结构和接受标准可以调整以适应特定的解决问题。
- en: '**Strength 4\. Efficient**'
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**优势 4. 高效**'
- en: Generally, the algorithm is efficient in terms of computational resources required
    to find a solution. It can often find good solutions quickly, particularly in
    the early stages of the algorithm when large, random moves are allowed. If the
    problem is large, you can save a lot of time by using SA instead of exact algorithms
    like MIP, while still getting good quality solutions.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，算法在找到解决方案所需的计算资源方面是高效的。它通常能迅速找到良好的解决方案，尤其是在算法的早期阶段，当允许大的随机移动时。如果问题很大，使用SA而不是像MIP这样的精确算法可以节省大量时间，同时仍能获得高质量的解决方案。
- en: '**Strength 5\. Parallelizable**'
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**优势 5. 可并行化**'
- en: 'Parallelizing allows for faster optimization and the ability to search a wider
    range of solutions simultaneously. SA is easy to parallelize. Below a code snippet
    that sets up parallelization:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 并行化可以实现更快的优化和同时搜索更广泛的解决方案范围。SA容易并行化。以下是设置并行化的代码片段：
- en: '[PRE0]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Beware, the implementations of `simulated_annealing` and the `Problem` class
    are really simplistic and unreal. A random number is returned and the lowest one
    is accepted as the best solution.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，`simulated_annealing`和`Problem`类的实现非常简单且不真实。返回一个随机数，最低的被接受为最佳解。
- en: 'As with any optimization technique, there are some downsides too. Here are
    the most important ones:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 与任何优化技术一样，也有一些缺点。以下是最重要的几点：
- en: '**Weakness 1\. Tuning**'
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**劣势 1. 调优**'
- en: Tuning is required. E.g. the cooling schedule, neighborhood structure, and acceptance
    criterion require tuning in order to achieve good results. To finetune these parameters,
    it’s best to use a combination of domain knowledge and experimentation. It’s not
    only important to tune for different problems, but problems with the same structure
    that are different in size are probably also better off with different parameters.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 需要调优。例如，冷却计划、邻域结构和接受标准需要调整以获得良好的结果。要微调这些参数，最好结合领域知识和实验。调优不仅对不同问题重要，对于结构相同但大小不同的问题，可能也需要不同的参数。
- en: '**Weakness 2\. No guarantee of optimality**'
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**劣势 2. 无法保证最优解**'
- en: Simulated annealing cannot guarantee finding the global optimum, as it relies
    on probabilistic moves and acceptance of worse solutions. It can only guarantee
    finding a locally optimal solution. By using SA, you don’t know the gap between
    the optimal solution and the current best solution, while this is possible if
    you would use an exact algorithm.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟退火不能保证找到全局最优解，因为它依赖于概率性移动和接受较差的解。它只能保证找到局部最优解。使用SA时，你不知道最优解和当前最佳解之间的差距，而使用精确算法可以知道这个差距。
- en: '![](../Images/0a92ba1d2b3bb45d2ff31ec4c76ce9d3.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0a92ba1d2b3bb45d2ff31ec4c76ce9d3.png)'
- en: Gurobi log with % gap between the current solution and the best possible solution.
    Image by author.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: Gurobi日志显示当前解决方案和最佳可能解决方案之间的百分比差距。图片由作者提供。
- en: '**Weakness 3\. Slow convergence**'
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**劣势 3. 收敛慢**'
- en: In some cases, SA can converge slowly, particularly for complex problems with
    large search spaces. This can make it inefficient for problems with tight time
    constraints. One way to solve this is to specify a time limit.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，SA的收敛可能较慢，特别是对于具有大搜索空间的复杂问题。这可能使得它对于时间限制紧迫的问题效率低下。解决这个问题的一种方法是指定时间限制。
- en: When should you try Simulated Annealing?
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你什么时候应该尝试模拟退火？
- en: There are several use cases that are a good fit for simulated annealing. [Combinatorial
    optimization problems](https://en.wikipedia.org/wiki/Combinatorial_optimization)
    with a large search space and a [non-convex](https://en.wikipedia.org/wiki/Convex_set)
    objective function, are really well suited for simulated annealing. Examples are
    the minimum spanning tree problem, traveling salesman, capacitated vehicle routing
    problem or the graph coloring problem.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个使用场景非常适合模拟退火。[组合优化问题](https://en.wikipedia.org/wiki/Combinatorial_optimization)具有大搜索空间和[非凸](https://en.wikipedia.org/wiki/Convex_set)目标函数，非常适合模拟退火。例子包括最小生成树问题、旅行商问题、带容量的车辆路径问题或图着色问题。
- en: Also for [nonlinear](https://en.wikipedia.org/wiki/Nonlinear_programming) optimization
    problems, simulated annealing can be effective. If these problems have multiple
    local optima, traditional gradient-based optimization techniques may fail. For
    example, simulated annealing has been used for [protein folding](https://pubmed.ncbi.nlm.nih.gov/16732545/)
    and [molecular conformation](https://www.cell.com/structure/pdf/S0969-2126(97)00190-1.pdf)
    problems.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 对于[非线性](https://en.wikipedia.org/wiki/Nonlinear_programming)优化问题，模拟退火算法可能会有效。如果这些问题有多个局部最优点，传统的基于梯度的优化技术可能会失败。例如，模拟退火算法已经被用于[蛋白质折叠](https://pubmed.ncbi.nlm.nih.gov/16732545/)和[分子构象](https://www.cell.com/structure/pdf/S0969-2126(97)00190-1.pdf)问题。
- en: On the other hand, for certain types of problems you shouldn’t consider simulated
    annealing. It may not be the best choice for [convex](https://en.wikipedia.org/wiki/Convex_set)
    optimization problems, where traditional gradient-based optimization techniques
    are often more efficient and effective.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，对于某些类型的问题，你不应考虑模拟退火。对于[凸](https://en.wikipedia.org/wiki/Convex_set)优化问题，传统的基于梯度的优化技术通常更为高效和有效。
- en: Simulated annealing can be computationally expensive and slow for large-scale
    optimization problems with high-dimensional search spaces. In these cases, other
    optimization techniques such as genetic algorithms or particle swarm optimization
    may be more effective, because they look at multiple solutions at once.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 对于大规模优化问题，尤其是高维搜索空间中的问题，模拟退火可能计算开销大且速度慢。在这些情况下，其他优化技术，如遗传算法或粒子群优化，可能更为有效，因为它们可以同时考虑多个解。
- en: '![](../Images/1e6ce417cd06f81f58a1fcfd7650a9e7.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1e6ce417cd06f81f58a1fcfd7650a9e7.png)'
- en: Protein folding. Photo by [National Cancer Institute](https://unsplash.com/@nci?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 蛋白质折叠。照片由[国家癌症研究所](https://unsplash.com/@nci?utm_source=medium&utm_medium=referral)提供，发布在[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Conclusion
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Simulated annealing is a stochastic optimization algorithm based on the physical
    process of annealing in metallurgy. It can be used to find the global minimum
    of a cost function by allowing for random moves and probabilistic acceptance of
    worse solutions, thus effectively searching large solution spaces and avoiding
    getting stuck in local minima. SA is powerful, robust, flexible, efficient, and
    parallelizable. However, it requires tuning, cannot guarantee finding the global
    optimum, and can converge slowly in some cases. To get the best results, it’s
    important to pay attention to its parameters, such as the initial temperature,
    cooling schedule, neighborhood function, acceptance criterion, and number of iterations.
    For some use cases, you should consider other techniques like genetic algorithms
    or particle swarm optimization.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟退火是一种基于冶金中退火物理过程的随机优化算法。它通过允许随机移动和对较差解的概率接受，来寻找成本函数的全局最小值，从而有效地搜索大型解空间并避免陷入局部最优。模拟退火算法强大、鲁棒、灵活、高效且可并行化。然而，它需要调优，不能保证找到全局最优，并且在某些情况下可能收敛缓慢。为了获得最佳结果，重要的是关注其参数，如初始温度、降温计划、邻域函数、接受准则和迭代次数。对于一些使用场景，你应该考虑其他技术，如遗传算法或粒子群优化。
- en: Related
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关内容
- en: '[](/exact-algorithm-or-heuristic-20d59d7fb359?source=post_page-----87fd1e3676dd--------------------------------)
    [## Exact Algorithm or Heuristic?'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/exact-algorithm-or-heuristic-20d59d7fb359?source=post_page-----87fd1e3676dd--------------------------------)
    [## 精确算法还是启发式算法？'
- en: A step-by-step guide to make the right choice for your mathematical optimization
    problem
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一个逐步指南，帮助你为数学优化问题做出正确选择。
- en: towardsdatascience.com](/exact-algorithm-or-heuristic-20d59d7fb359?source=post_page-----87fd1e3676dd--------------------------------)
    [](/four-ways-to-combine-mathematical-optimization-and-machine-learning-8cb874276254?source=post_page-----87fd1e3676dd--------------------------------)
    [## Five ways to combine Mathematical Optimization and Machine Learning
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/exact-algorithm-or-heuristic-20d59d7fb359?source=post_page-----87fd1e3676dd--------------------------------)
    [](/four-ways-to-combine-mathematical-optimization-and-machine-learning-8cb874276254?source=post_page-----87fd1e3676dd--------------------------------)
    [## 五种将数学优化与机器学习结合的方法
- en: Practical examples of combining two forces.
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结合两种力量的实际示例。
- en: towardsdatascience.com](/four-ways-to-combine-mathematical-optimization-and-machine-learning-8cb874276254?source=post_page-----87fd1e3676dd--------------------------------)
    [](/mathematical-optimization-heuristics-every-data-scientist-should-know-b26de0bd43e6?source=post_page-----87fd1e3676dd--------------------------------)
    [## Mathematical Optimization Heuristics Every Data Scientist Should Know
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/four-ways-to-combine-mathematical-optimization-and-machine-learning-8cb874276254?source=post_page-----87fd1e3676dd--------------------------------)
    [](/mathematical-optimization-heuristics-every-data-scientist-should-know-b26de0bd43e6?source=post_page-----87fd1e3676dd--------------------------------)
    [## 数学优化启发式算法每个数据科学家都应该知道'
- en: Local search, genetic algorithms and more.
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 本地搜索、遗传算法等等。
- en: towardsdatascience.com](/mathematical-optimization-heuristics-every-data-scientist-should-know-b26de0bd43e6?source=post_page-----87fd1e3676dd--------------------------------)
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/mathematical-optimization-heuristics-every-data-scientist-should-know-b26de0bd43e6?source=post_page-----87fd1e3676dd--------------------------------)'
