- en: Causal Effects via Regression
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/causal-effects-via-regression-28cb58a2fffc](https://towardsdatascience.com/causal-effects-via-regression-28cb58a2fffc)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 3 Popular Techniques With Python Example Code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://shawhin.medium.com/?source=post_page-----28cb58a2fffc--------------------------------)[![Shaw
    Talebi](../Images/1449cc7c08890e2078f9e5d07897e3df.png)](https://shawhin.medium.com/?source=post_page-----28cb58a2fffc--------------------------------)[](https://towardsdatascience.com/?source=post_page-----28cb58a2fffc--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----28cb58a2fffc--------------------------------)
    [Shaw Talebi](https://shawhin.medium.com/?source=post_page-----28cb58a2fffc--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----28cb58a2fffc--------------------------------)
    ·8 min read·Jan 10, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: This is the 5th article in a series on [causal effects](https://shawhin.medium.com/understanding-causal-effects-37a054b2ec3b).
    In previous articles, we discussed different ways to compute treatment effects
    from data. Here, I introduce an alternative approach to estimating causal effects
    via 3 popular regression-based techniques. I conclude the article with example
    Python code of how one can use these techniques in practice.
  prefs: []
  type: TYPE_NORMAL
- en: '**Key Points:**'
  prefs: []
  type: TYPE_NORMAL
- en: Regression is a way to learn relationships between variables using data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '3 popular regression-based approaches for estimating causal effects are: **linear
    regression**, **double machine learning**, and **meta-learners**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/da426069a321bd774489946b0979accc.png)'
  prefs: []
  type: TYPE_IMG
- en: Toy example of causal effect via linear regression. Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: '**What is regression?**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Regression** is **a way to learn the relationships between variables using
    data**. For example, the relationship between height and weight for adult [Huon
    tree kangaroos](https://www.zoo.org/view.image?Id=5582) in Papua New Guinea.'
  prefs: []
  type: TYPE_NORMAL
- en: The output of a regression process is called a **model**. This is essentially
    **something that we can use to make predictions** e.g. you give me a tree kangaroo’s
    height, and I can tell you their weight (approximately).
  prefs: []
  type: TYPE_NORMAL
- en: The key benefit of regression is we can **use data to fit our models to reality**.
  prefs: []
  type: TYPE_NORMAL
- en: To use regression for estimating causal effects, we develop data-driven models
    that capture the relationships between treatments, covariates, and outcomes. Then
    interrogate these models to quantify causal effects.
  prefs: []
  type: TYPE_NORMAL
- en: Before we defined causal effects in terms of the [Average Treatment Effect (ATE)](/causal-effects-f30f962ffff3),
    i.e. the difference in outcome means between treatment and control groups. There
    was no need for models since we would estimate causal effects directly from data!
  prefs: []
  type: TYPE_NORMAL
- en: In the regression framework, however, causal effects are derived differently.
    To see this, we start with the simplest regression-based approach to estimating
    causal effects, linear regression.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/causal-effects-f30f962ffff3?source=post_page-----28cb58a2fffc--------------------------------)
    [## Causal Effects'
  prefs: []
  type: TYPE_NORMAL
- en: What is a treatment effect and how to compute it?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/causal-effects-f30f962ffff3?source=post_page-----28cb58a2fffc--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: '**Linear Regression**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For this approach, we train a linear model to predict the outcome variable (Y)
    in terms of the treatment variable (X). We then define the **causal effect** as
    **the coefficient for the treatment variable in the regression model estimating
    the outcome**. A simple example of this is given below.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d2ddc152462c72ba1e5b4c9f52c2ef83.png)'
  prefs: []
  type: TYPE_IMG
- en: A simple example of using linear regression to estimate the causal effect of
    X on Y. Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: Where **Y** is an outcome variable, **X** is the treatment variable, **b** is
    the intercept (which we can interpret as an error term), and **Θ** is the causal
    effect of X on Y. Notice how the causal effect is defined in this regression framework
    is **fundamentally different** than how we defined it in [past articles](/causal-effects-f30f962ffff3)
    of this series.
  prefs: []
  type: TYPE_NORMAL
- en: To go a step further, we can include confounders in the linear model. In this
    context, a **confounder** is **a variable that influences both the treatment and
    outcome variables**. By doing this, we can reduce the bias of our causal effect
    estimate due to confounders. For more details on how to use linear regression
    for estimating causal effects, I refer the reader to the chapter by Gelman and
    Hill [1].
  prefs: []
  type: TYPE_NORMAL
- en: '**Double Machine Learning**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While the simplicity of linear regression makes it easy to work with, it may
    not accurately capture the relationships between variables (e.g. when variables
    have non-linear relationships). This is where more sophisticated techniques are
    helpful.
  prefs: []
  type: TYPE_NORMAL
- en: One such technique is called **Double Machine Learning (DML)**. The paper that
    introduces the approach is substantial (about 70 pages), however, the whole process
    can be broken down into 3 simple steps [2].
  prefs: []
  type: TYPE_NORMAL
- en: '**Train** **2 regression models**. One is to predict the **outcome variable**
    in terms of relevant covariates. And another to predict the **treatment variable**
    in terms of covariates.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Compute the residuals** of each model. In other words, if f(Z) estimates
    Y in terms of Z and g(Z) estimates X in terms of Z, their residuals are given
    by U = Y-f(Z) and V = X-g(Z), respectively.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Compute treatment effect**. Using the residuals we can compute the treatment
    effect directly using the equation below.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../Images/2ce4c194f951d390fefdca6ffbd9c4a9.png)'
  prefs: []
  type: TYPE_IMG
- en: Expression for causal effect for double machine learning approach [3]. Image
    by author.
  prefs: []
  type: TYPE_NORMAL
- en: It is called Double Machine Learning because we train 2 machine learning models,
    f(Z) and g(Z). Additionally, **there is no restriction on the machine learning
    approaches** we use, they can be as simple as linear regression or as sophisticated
    as a billion-parameter neural network.
  prefs: []
  type: TYPE_NORMAL
- en: 'One important detail when doing DML is that it is necessary to split the available
    data into 2 subsets: a **main sample** and an **auxiliary sample**. The subsets
    are then used to perform a process called **Cross Fitting**.'
  prefs: []
  type: TYPE_NORMAL
- en: This consists of using the main and auxiliary samples to train the models g(Z)
    and f(Z), respectively, then switching i.e. using the main sample to train f(Z)
    and the auxiliary sample to train g(Z).
  prefs: []
  type: TYPE_NORMAL
- en: We can then average the resulting causal effect estimates from each sample-model
    pairing. While this may seem like an extra step, it turns out to be important
    in keeping the math simple for our causal effect estimate. For more details check
    out page 5 of the DML paper [2].
  prefs: []
  type: TYPE_NORMAL
- en: Meta-learners
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Meta-learners** aim to **capture the relationship between treatments, covariates,
    and outcomes by training regression models**. In contrast to linear regression
    and DML, causal effects from meta-learners are not defined as a regression coefficient.
    Instead, the regression models are used to simulate unobserved outcomes for each
    unit to give Individual Treatment Effects (ITEs). The ITEs can then be used to
    calculate the ATE.'
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, for so-called *heterogeneous* causal effects, the **Conditional
    Average Treatment Effect (CATE)** can be used. This is simply **the ATE for a
    particular sub-population** (e.g. causal effect for male kangaroos, female babies,
    etc). Heterogeneous treatment effects are treatment effects that have variation
    across a wide population.
  prefs: []
  type: TYPE_NORMAL
- en: '**T-learner**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The first type of meta-learner is a **T-learner** (or two-learner). Here we
    train **2 outcome models** (hence the name), one for the **control group** and
    another for the **treatment group** [4].
  prefs: []
  type: TYPE_NORMAL
- en: This technique can be broken down into a 2-step process.
  prefs: []
  type: TYPE_NORMAL
- en: '**Train 2 models** to estimate the outcome variable in terms of covariates
    for the control and treatment groups, respectively.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use each model to generate (control and treatment) outcome predictions for each
    unit and get ITEs, which can be used to **compute ATE.**
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../Images/9f4880976d187b9824bb6c6e174189eb.png)'
  prefs: []
  type: TYPE_IMG
- en: Overview of T-learner process. Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: '**S-learner**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Next, we have the **S-learner** (single-learner). This is similar to a T-learner,
    but instead of training 2 outcome models, we only create one but **include the
    treatment variable as a predictor** [4].
  prefs: []
  type: TYPE_NORMAL
- en: To get causal effects using this technique we again follow a 2-step process.
  prefs: []
  type: TYPE_NORMAL
- en: '**Train model** to estimate outcome variables in terms of covariates **and**
    treatment values.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use model predictions for each unit to estimate ITE which can be aggregated
    to **get ATE**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../Images/303465ea42a4b5f6546f0c393b8d2b1e.png)'
  prefs: []
  type: TYPE_IMG
- en: Overview of S-learner process. Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: '**X-learner**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The final type of meta-learner is the **X-learner**. This approach overlaps
    with the T-learner but goes a few steps further.
  prefs: []
  type: TYPE_NORMAL
- en: The 4-step process for X-learner [4].
  prefs: []
  type: TYPE_NORMAL
- en: '**Train 2 models** to estimate outcome variables in terms of covariates for
    control and treatment groups, respectively. (Just like we do for a T-learner).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Use models to impute unobserved outcome values**. For example, if unit i=0
    has X₀=1 and Y₀=1 we then use the control group model to estimate the unobserved
    outcome for X₀=0\. Then, use imputed outcome values to compute ITEs for control
    and treatment groups, separately.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Train 2 more models** to estimate ITEs for treatment and control groups,
    respectively.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Estimate CATE** by combining ITE models using a weight function, *w()*. (Tip:
    use [propensity score](/propensity-score-5c29c480130c) for *w*).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../Images/6d77726ea2aa4c258372c13d4116adf8.png)'
  prefs: []
  type: TYPE_IMG
- en: Overview of X-learner process. Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: For more on Meta-learners, I refer the reader to the paper by Kunzel et al.
    [4] and the Causal ML documentation [5].
  prefs: []
  type: TYPE_NORMAL
- en: '[](/propensity-score-5c29c480130c?source=post_page-----28cb58a2fffc--------------------------------)
    [## Causal Effects via Propensity Scores'
  prefs: []
  type: TYPE_NORMAL
- en: How to estimate effects from observational data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/propensity-score-5c29c480130c?source=post_page-----28cb58a2fffc--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: 'Example code: Estimating Treatment Effect of Grad School on Income ([once again](/causal-inference-962ae97cefda))'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this example, we estimate the causal effect of having a graduate degree on
    making more than $50k a year using the 3 regression-based techniques. We use the
    open-source [DoWhy](https://py-why.github.io/dowhy/v0.8/) library and open-access
    data from the [UCI machine learning repository](https://archive.ics.uci.edu/ml/datasets/census+income)
    [6].
  prefs: []
  type: TYPE_NORMAL
- en: The example code can be found at the [GitHub Repo](https://github.com/ShawhinT/YouTube-Blog/tree/main/causality/causal_effects_regression).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Once we have our libraries and data, we must define our causal model. This essentially
    defines our treatments, outcomes, and covariates.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Here we define “hasGraduateDegree” as the treatment, “greaterThan50k” as the
    outcome, and “age” as the lone confounder.
  prefs: []
  type: TYPE_NORMAL
- en: First, we try **linear regression**. The DoWhy library makes everything super
    easy, so we just run 2 lines of code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Next, we try **Double ML** which is a bit overkill for this simple example,
    especially with the treatment and outcome variable only taking values of 0 or
    1.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Note for this example the models we use in the DML process are all linear regression,
    however, more sophisticated techniques can (and many times should) be used for
    more complex problems.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we try the **X-learner** making use of decision trees for our sub-models.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[](https://github.com/ShawhinT/YouTube-Blog/tree/main/causal_effects_regression?source=post_page-----28cb58a2fffc--------------------------------)
    [## YouTube-Blog/causal_effects_regression at main · ShawhinT/YouTube-Blog'
  prefs: []
  type: TYPE_NORMAL
- en: You can't perform that action at this time. You signed in with another tab or
    window. You signed out in another tab or…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: github.com](https://github.com/ShawhinT/YouTube-Blog/tree/main/causal_effects_regression?source=post_page-----28cb58a2fffc--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: '**More on Causality**: [Causal Effects Overview](https://shawhin.medium.com/understanding-causal-effects-37a054b2ec3b)
    | [Causality: Intro](/causality-an-introduction-f8a3f6ac4c4a) | [Causal Inference](/causal-inference-962ae97cefda)
    | [Causal Discovery](/causal-discovery-6858f9af6dcb)'
  prefs: []
  type: TYPE_NORMAL
- en: Resources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Connect**: [My website](https://shawhintalebi.com/) | [Book a call](https://calendly.com/shawhintalebi)
    | [Ask me anything](https://shawhintalebi.com/connect/)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Socials**: [YouTube 🎥](https://www.youtube.com/channel/UCa9gErQ9AE5jT2DZLjXBIdA)
    | [LinkedIn](https://www.linkedin.com/in/shawhintalebi/) | [Twitter](https://twitter.com/ShawhinT)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Support**: [Buy me a coffee](https://www.buymeacoffee.com/shawhint) ☕️'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://shawhin.medium.com/subscribe?source=post_page-----28cb58a2fffc--------------------------------)
    [## Get FREE access to every new story I write'
  prefs: []
  type: TYPE_NORMAL
- en: Get FREE access to every new story I write P.S. I do not share your email with
    anyone By signing up, you will create a…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: shawhin.medium.com](https://shawhin.medium.com/subscribe?source=post_page-----28cb58a2fffc--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] [Causal inference using regression on the treatment variable](http://www.stat.columbia.edu/~gelman/arm/chap9.pdf)
    by Andrew Gelman and Jennifer Hill'
  prefs: []
  type: TYPE_NORMAL
- en: '[2] [Double/Debiased Machine Learning for Treatment and Causal Parameters](https://arxiv.org/abs/1608.00060)
    by Victor Chernozhukov et al.'
  prefs: []
  type: TYPE_NORMAL
- en: '[3] [DoubleML](https://docs.doubleml.org/stable/guide/basics.html) Python library
    documentation'
  prefs: []
  type: TYPE_NORMAL
- en: '[4] [Meta-learners for Estimating Heterogeneous Treatment Effects using Machine
    Learning](https://arxiv.org/abs/1706.03461) by Kunzel et al.'
  prefs: []
  type: TYPE_NORMAL
- en: '[5] [CausalML](https://causalml.readthedocs.io/en/latest/methodology.html#meta-learner-algorithms)
    Python library documentation (Meta-learners)'
  prefs: []
  type: TYPE_NORMAL
- en: '[6] Dua, D. and Graff, C. (2019). [UCI Machine Learning Repository](https://archive.ics.uci.edu/ml/datasets/census+income)
    [http://archive.ics.uci.edu/ml]. Irvine, CA: University of California, School
    of Information and Computer Science. (CC BY 4.0)'
  prefs: []
  type: TYPE_NORMAL
