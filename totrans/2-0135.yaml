- en: 6 Use Cases in Python Where * and ** Come in Handy
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python 中 * 和 ** 的 6 种用例
- en: 原文：[https://towardsdatascience.com/6-use-cases-in-python-where-and-come-in-handy-530dd9d04875](https://towardsdatascience.com/6-use-cases-in-python-where-and-come-in-handy-530dd9d04875)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/6-use-cases-in-python-where-and-come-in-handy-530dd9d04875](https://towardsdatascience.com/6-use-cases-in-python-where-and-come-in-handy-530dd9d04875)
- en: Explained with examples
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过示例进行解释
- en: '[](https://sonery.medium.com/?source=post_page-----530dd9d04875--------------------------------)[![Soner
    Yıldırım](../Images/c589572e9d1ee176cd4f5a0008173f1b.png)](https://sonery.medium.com/?source=post_page-----530dd9d04875--------------------------------)[](https://towardsdatascience.com/?source=post_page-----530dd9d04875--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----530dd9d04875--------------------------------)
    [Soner Yıldırım](https://sonery.medium.com/?source=post_page-----530dd9d04875--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://sonery.medium.com/?source=post_page-----530dd9d04875--------------------------------)[![Soner
    Yıldırım](../Images/c589572e9d1ee176cd4f5a0008173f1b.png)](https://sonery.medium.com/?source=post_page-----530dd9d04875--------------------------------)[](https://towardsdatascience.com/?source=post_page-----530dd9d04875--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----530dd9d04875--------------------------------)
    [Soner Yıldırım](https://sonery.medium.com/?source=post_page-----530dd9d04875--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----530dd9d04875--------------------------------)
    ·5 min read·Jun 19, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----530dd9d04875--------------------------------)
    ·阅读时间 5 分钟·2023年6月19日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/bee7c0a318f34a43becb83b38cfb4d44.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bee7c0a318f34a43becb83b38cfb4d44.png)'
- en: Photo by [Szabolcs Toth](https://unsplash.com/@szabolcs_taking_pictures?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/FYt8CIOosOw?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[Szabolcs Toth](https://unsplash.com/@szabolcs_taking_pictures?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)拍摄，发布在[Unsplash](https://unsplash.com/photos/FYt8CIOosOw?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)上
- en: If you ever go through the documentation of a Python library, it’s inevitable
    to notice the use of * or ** in several places.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你曾经浏览过 Python 库的文档，你会不可避免地注意到在多个地方使用了*或**。
- en: But, what do they (* and **) do?
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，*和**到底有什么作用？
- en: We’ll learn 7 use cases where * and ** come in handy including the cases you
    notice in documentations.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将学习 * 和 ** 有用的 7 种用例，包括你在文档中看到的情况。
- en: The use cases are best explained with examples so let’s jump right into it.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 用例最好通过示例进行说明，所以我们直接进入主题。
- en: 1\. Call a function with iterables
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1. 使用可迭代对象调用函数
- en: Let’s say you define a function that takes 5 positional arguments, adds them
    together, and returns the sum.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你定义了一个接受 5 个位置参数的函数，将它们相加并返回总和。
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'If the values passed to the function as arguments are stored in an iterable
    (e.g. list), you can call the function using the list directly but you need to
    use * as shown below:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果传递给函数的参数存储在一个可迭代对象中（例如列表），你可以直接使用列表调用函数，但你需要使用*，如下所示：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If you try to call the function as `calculate_sum(numbers)` , Python will complain,
    raising a `TypeError` . What * does here is to unpack the values in the iterable,
    sometimes referred to as argument unpacking.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你尝试调用函数`calculate_sum(numbers)`，Python 会报错，抛出`TypeError`。*的作用是解包可迭代对象中的值，有时被称为参数解包。
- en: It is important to note that the number of values in the `numbers` list must
    be equal to the number of arguments the function takes, which is 5 in this case.
    Otherwise, we’ll get a `TypeError` .
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，`numbers` 列表中的值的数量必须等于函数所需的参数数量，这里是 5。如果不匹配，我们会得到一个`TypeError`。
- en: '*If you’d also like to learn more about Pandas, visit my course* [*500 Exercises
    to Master Python Pandas*](https://www.udemy.com/course/500-exercises-to-master-python-pandas/learn/lecture/37842166#overview)*.*'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你也想了解更多关于 Pandas 的信息，可以访问我的课程* [*500 Exercises to Master Python Pandas*](https://www.udemy.com/course/500-exercises-to-master-python-pandas/learn/lecture/37842166#overview)*。*'
- en: 2\. Call a function with dictionaries
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2. 使用字典调用函数
- en: This use case is similar to the previous one. In the previous example, the function
    only has positional arguments. In the case of a function with keyword arguments,
    we can still do argument unpacking but with ** instead of *.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这个用例类似于之前的示例。在之前的示例中，函数只有位置参数。在具有关键字参数的函数中，我们仍然可以进行参数解包，但使用的是**而不是*。
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The function calculates the mass of an object using its density, length, width,
    and height. Let’s say the measures are stored in a Python dictionary. We can use
    the dictionary directly to call the function as shown below:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数使用物体的密度、长度、宽度和高度来计算质量。假设这些测量值存储在一个 Python 字典中。我们可以直接使用字典来调用函数，如下所示：
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Similar to the first example, if we try to call it as `calculate_mass(density,
    measures)` , we’ll get a `TypeError` . This is another example of argument unpacking.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于第一个例子，如果我们尝试以 `calculate_mass(density, measures)` 的形式调用它，我们会得到一个 `TypeError`。这是另一个参数解包的例子。
- en: 3\. Define a function with any number of positional arguments
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. 定义一个可以接受任意数量位置参数的函数
- en: You define a function that sums up the given values but you don’t want to put
    a constraint on the number of values to pass as arguments. Instead, you want it
    to be dynamic and sums up any number of given values.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 你定义一个函数来汇总给定的值，但你不想对传递的值数量施加约束。相反，你希望它具有动态性，能够汇总任意数量的给定值。
- en: 'Here is how we can define this function:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是我们如何定义这个函数：
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The `*args` expression packs the arguments passed to the function allowing us
    to use any number of arguments or an iterable to call the function.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`*args` 表达式将传递给函数的参数打包，使我们可以使用任意数量的参数或可迭代对象来调用函数。'
- en: 'Here are different ways of calling this function:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是调用这个函数的不同方式：
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: In the case of using an iterable to call the function, we still need to put
    a * when calling the function.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用可迭代对象来调用函数的情况下，我们仍然需要在调用函数时加上 `*`。
- en: 'Note on positional and keyword arguments:'
  id: totrans-34
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 关于位置参数和关键字参数的说明：
- en: ''
  id: totrans-35
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Positional arguments are declared by a name only. When a function is called,
    values for positional arguments must be given. Otherwise, we will get an error.
  id: totrans-36
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 位置参数仅通过名称声明。当函数被调用时，必须提供位置参数的值。否则，我们会得到一个错误。
- en: ''
  id: totrans-37
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Keyword arguments are declared by a name and a default value. If we do not specify
    the value for a keyword argument, it takes the default value.
  id: totrans-38
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 关键字参数通过名称和默认值来声明。如果我们没有为关键字参数指定值，它将采用默认值。
- en: 4\. Define a function with any number of keyword arguments
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4\. 定义一个可以接受任意数量关键字参数的函数
- en: This one is similar to the previous use case but we’ll create a function that
    takes keyword arguments.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这一个与之前的用例类似，但我们将创建一个接受关键字参数的函数。
- en: '[PRE6]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The function greets people given their name. If it’s called with additional
    keyword arguments of information about the people, the function prints them as
    well.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数根据名字向人们打招呼。如果它被调用时附带了关于这些人的其他关键信息，函数也会打印这些信息。
- en: The `**kwargs` expression allows us to pass any number of keyword arguments
    when calling the function.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`**kwargs` 表达式允许我们在调用函数时传递任意数量的关键字参数。'
- en: 'Here are different ways of calling this function:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是调用这个函数的不同方式：
- en: '[PRE7]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: In the case of passing the keyword arguments as a dictionary, we need to put
    a ** when calling the function.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在将关键字参数作为字典传递时，我们需要在调用函数时加上 `**`。
- en: 5\. Combine dictionaries
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5\. 合并字典
- en: We can use ** for combining dictionaries.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 `**` 来合并字典。
- en: '[PRE8]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: In this case, using `ages = {ages, new_items}` will raise a `TypeError` as well.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，使用 `ages = {ages, new_items}` 也会引发 `TypeError`。
- en: 6\. Packing values into iterables
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6\. 将值打包成可迭代对象
- en: 'Let’s say we have a list with multiple values. We want to assign a value from
    this list to another variable and assign the remaining ones to a different variable.
    It’ll be more clear when we go through the examples below:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们有一个包含多个值的列表。我们想要从这个列表中将一个值赋给另一个变量，并将其余的值赋给一个不同的变量。通过下面的例子会更清楚：
- en: '[PRE9]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The first value is assigned to a variable named `first` and the remaining ones
    are packed into another list named `others` .
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个值被分配给一个名为 `first` 的变量，其余的值被打包到另一个名为 `others` 的列表中。
- en: 'We can also use it as shown in the example below:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以按照下面的例子来使用它：
- en: '[PRE10]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'This use case might be helpful when working with functions that return multiple
    values. Here is an example:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这个用例在处理返回多个值的函数时可能会有所帮助。这里是一个例子：
- en: '[PRE11]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The `my_func` function returns a tuple with 4 values. The first one is assigned
    to a variable named `first_one` and the others to a list named `other_sums` .
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '`my_func` 函数返回一个包含 4 个值的元组。第一个值分配给一个名为 `first_one` 的变量，其他值分配给一个名为 `other_sums`
    的列表。'
- en: Final words
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结束语
- en: As demonstrated in the examples we’ve done, the * and ** are quite useful in
    Python. We can use them for argument packing and unpacking.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在例子中演示的，`*` 和 `**` 在 Python 中非常有用。我们可以用它们来进行参数的打包和解包。
- en: They’re also used when defining and calling functions to add more flexibility
    and versatility.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这些也在定义和调用函数时使用，以增加更多的灵活性和多功能性。
- en: '*You can become a* [*Medium member*](https://sonery.medium.com/membership)
    *to unlock full access to my writing, plus the rest of Medium. If you already
    are, don’t forget to* [*subscribe*](https://sonery.medium.com/subscribe) *if you’d
    like to get an email whenever I publish a new article.*'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '*你可以成为* [*Medium 会员*](https://sonery.medium.com/membership) *以解锁对我所有写作内容的完全访问权限，以及
    Medium 上的其他内容。如果你已经是会员，请不要忘记* [*订阅*](https://sonery.medium.com/subscribe) *，如果你希望在我发布新文章时收到电子邮件的话。*'
- en: Thank you for reading. Please let me know if you have any feedback.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢你的阅读。如果你有任何反馈，请告诉我。
