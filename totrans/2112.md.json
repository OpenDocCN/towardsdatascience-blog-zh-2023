["```py\nimport pandas as pd\nimport numpy as np\nimport datetime\nimport matplotlib.pyplot as plt\n\nfrom neuralforecast.core import NeuralForecast\nfrom neuralforecast.models import NHITS, NBEATS, PatchTST\n\nfrom neuralforecast.losses.numpy import mae, mse\n\nfrom nixtlats import TimeGPT\n\n%matplotlib inline\n```", "```py\nwith open(\"data/timegpt_api_key.txt\", 'r') as file:\n        API_KEY = file.read()\n```", "```py\ndf = pd.read_csv('data/medium_views_published_holidays.csv')\ndf['ds'] = pd.to_datetime(df['ds'])\n\ndf.head()\n```", "```py\npublished_dates = df[df['published'] == 1]\n\nfig, ax = plt.subplots(figsize=(12,8))\n\nax.plot(df['ds'], df['y'])\nax.scatter(published_dates['ds'], published_dates['y'], marker='o', color='red', label='New article')\nax.set_xlabel('Day')\nax.set_ylabel('Total views')\nax.legend(loc='best')\n\nfig.autofmt_xdate()\n\nplt.tight_layout()\n```", "```py\ntrain = df[:-168]\ntest = df[-168:]\n```", "```py\nfuture_exog = test[['unique_id', 'ds', 'published', 'is_holiday']]\n\ntimegpt = TimeGPT(token=API_KEY)\n\ntimegpt_preds = []\n\nfor i in range(0, 162, 7):\n\n    timegpt_preds_df = timegpt.forecast(\n        df=df.iloc[:1213+i],\n        X_df = future_exog[i:i+7],\n        h=7,\n        finetune_steps=10,\n        id_col='unique_id',\n        time_col='ds',\n        target_col='y'\n    )\n\n    preds = timegpt_preds_df['TimeGPT']\n\n    timegpt_preds.extend(preds)\n```", "```py\ntest['TimeGPT'] = timegpt_preds\n\ntest.head()\n```", "```py\nhorizon = 7\n\nmodels = [NHITS(h=horizon,\n               input_size=5*horizon,\n               max_steps=50),\n         NBEATS(h=horizon,\n               input_size=5*horizon,\n               max_steps=50),\n         PatchTST(h=horizon,\n                 input_size=5*horizon,\n                 max_steps=50)]\n```", "```py\nnf = NeuralForecast(models=models, freq='D')\n```", "```py\npreds_df = nf.cross_validation(\n    df=df, \n    static_df=future_exog , \n    step_size=7, \n    n_windows=24\n)\n```", "```py\npreds_df['TimeGPT'] = test['TimeGPT']\n```", "```py\npreds_df = preds_df.round({\n    'NHITS': 0,\n    'NBEATS': 0,\n    'PatchTST': 0,\n    'TimeGPT': 0\n})\n\ndata = {'N-HiTS': [mae(preds_df['NHITS'], preds_df['y']), mse(preds_df['NHITS'], preds_df['y'])],\n       'N-BEATS': [mae(preds_df['NBEATS'], preds_df['y']), mse(preds_df['NBEATS'], preds_df['y'])],\n       'PatchTST': [mae(preds_df['PatchTST'], preds_df['y']), mse(preds_df['PatchTST'], preds_df['y'])],\n       'TimeGPT': [mae(preds_df['TimeGPT'], preds_df['y']), mse(preds_df['TimeGPT'], preds_df['y'])]}\n\nmetrics_df = pd.DataFrame(data=data)\nmetrics_df.index = ['mae', 'mse']\n\nmetrics_df.style.highlight_min(color='lightgreen', axis=1)\n```"]