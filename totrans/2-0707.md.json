["```py\ndef transform_data(data_interval_end):\n    # do not use date.today()\n    return pd.DataFrame(data={'date': [data_interval_end], 'quantity': [10]})\n\ntransform_task = PythonOperator(\n    task_id='transform_data',\n    python_callable=transform_data,\n    op_args=[{{ data_interval_end}}],  \n    provide_context=False,\n    dag=dag,\n)\n```", "```py\nUPDATE my_table\nSET quantity = amount * price * exchange_rate\nWHERE date >= '2023-11-01'\n```", "```py\ndepend_on_past = False\nmax_active_runs = X # The maximum number of active DAG runs allowed for the DAG.\nmax_active_tasks = X # The total number of tasks that can run at the same time for a given DAG run.\nconcurrency = X # The maximum number of task instances allowed to run concurrently across all active DAG runs for a given DAG.\nmax_active_tis_per_dag = X # The maximum number of times that the same task can run concurrently across all DAG runs.\n```", "```py\n# pseudo code\nearliest_order_date = find_earliest_date_in_batch(new_batch)\npartitions_to_be_updated = f\"select * from summary where date >={earliest_order_date}\"\n# can be heavy\nupdated_partitions = update_historical_data(partitions_to_be_updated, new_batch)\nupdate_table(updated_partitions)\n```"]