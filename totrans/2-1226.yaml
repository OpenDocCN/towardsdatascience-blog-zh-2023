- en: How to Plot Coordinates on Landsat Satellite Images with Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何在 Landsat 卫星图像上绘制坐标，使用 Python
- en: 原文：[https://towardsdatascience.com/how-to-plot-coordinates-on-landsat-satellite-images-with-python-5671613887aa](https://towardsdatascience.com/how-to-plot-coordinates-on-landsat-satellite-images-with-python-5671613887aa)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-plot-coordinates-on-landsat-satellite-images-with-python-5671613887aa](https://towardsdatascience.com/how-to-plot-coordinates-on-landsat-satellite-images-with-python-5671613887aa)
- en: Mapping pixel positions to geographic coordinates using Landsat metadata and
    Rasterio
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Landsat 元数据和 Rasterio 将像素位置映射到地理坐标
- en: '[](https://conorosullyds.medium.com/?source=post_page-----5671613887aa--------------------------------)[![Conor
    O''Sullivan](../Images/2dc50a24edb12e843651d01ed48a3c3f.png)](https://conorosullyds.medium.com/?source=post_page-----5671613887aa--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5671613887aa--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5671613887aa--------------------------------)
    [Conor O''Sullivan](https://conorosullyds.medium.com/?source=post_page-----5671613887aa--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://conorosullyds.medium.com/?source=post_page-----5671613887aa--------------------------------)[![Conor
    O''Sullivan](../Images/2dc50a24edb12e843651d01ed48a3c3f.png)](https://conorosullyds.medium.com/?source=post_page-----5671613887aa--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5671613887aa--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5671613887aa--------------------------------)
    [Conor O''Sullivan](https://conorosullyds.medium.com/?source=post_page-----5671613887aa--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----5671613887aa--------------------------------)
    ·8 min read·May 16, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----5671613887aa--------------------------------)
    ·阅读时间 8 分钟·2023年5月16日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/45e764239f69e9589c7b61ffd50583f1.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/45e764239f69e9589c7b61ffd50583f1.png)'
- en: Photo by [GeoJango Maps](https://unsplash.com/@geojango_maps?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源于 [GeoJango Maps](https://unsplash.com/@geojango_maps?utm_source=medium&utm_medium=referral)
    在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Location, location, location! Not just a housing market cliché but also incredibly
    important to remote sensing. Whether it’s for monitoring environmental changes,
    analyzing urban development, or tracking crop health, precise geolocation is crucial.
    We need to know the exact coordinates of objects in satellite images to ensure
    accurate analysis and interpretation.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 位置，位置，位置！这不仅仅是房地产市场的陈词滥调，而且对于遥感也极其重要。无论是监测环境变化、分析城市发展，还是跟踪作物健康，精确的地理定位至关重要。我们需要知道卫星图像中物体的确切坐标，以确保分析和解释的准确性。
- en: 'So, we’ll explore how to plot coordinates directly onto Landsat scenes using
    two approaches:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们将探讨如何使用两种方法将坐标直接绘制到 Landsat 场景上：
- en: The Landsat metadata file (MLT)
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Landsat 元数据文件 (MLT)
- en: Rasterio — a package used to access geospatial raster data
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rasterio — 一个用于访问地理空间栅格数据的包
- en: We’ll also use Rasterio to **reproject** the coordinates of a satellite image.
    Specially, we’ll go from the original coordinate reference system **(UTM)** to
    the one used by google maps **(EPSG:4326).** Along the way, we’ll discuss the
    code and you can find the full project on [GitHub](https://github.com/conorosully/medium-articles/blob/master/src/remote%20sensing/landsat_GPS.ipynb).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将使用 Rasterio 来 **重新投影** 卫星图像的坐标。特别是，我们将从原始坐标参考系统 **(UTM)** 转换到 Google Maps
    使用的坐标系统 **(EPSG:4326)**。在此过程中，我们将讨论代码，你可以在 [GitHub](https://github.com/conorosully/medium-articles/blob/master/src/remote%20sensing/landsat_GPS.ipynb)
    上找到完整的项目。
- en: Downloading Landsat scenes
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载 Landsat 场景
- en: 'We need to start by downloading a Landsat scene. You can do this using the
    [EarthExplorer](http://earthexplorer.usgs.gov) portal. Alternatively, if you want
    to use Python, the article below takes you through the process:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要从下载一个 Landsat 场景开始。你可以使用 [EarthExplorer](http://earthexplorer.usgs.gov)
    门户完成此操作。或者，如果你想使用 Python，下面的文章会引导你完成整个过程：
- en: '[](/downloading-landsat-satellite-images-with-python-a2d2b5183fb7?source=post_page-----5671613887aa--------------------------------)
    [## Downloading Landsat Satellite Images with Python'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/downloading-landsat-satellite-images-with-python-a2d2b5183fb7?source=post_page-----5671613887aa--------------------------------)
    [## 使用 Python 下载 Landsat 卫星图像'
- en: Streamline Landsat scene downloads with the landsatxplore Python package
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 landsatxplore Python 包简化 Landsat 场景下载
- en: towardsdatascience.com](/downloading-landsat-satellite-images-with-python-a2d2b5183fb7?source=post_page-----5671613887aa--------------------------------)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/downloading-landsat-satellite-images-with-python-a2d2b5183fb7?source=post_page-----5671613887aa--------------------------------)
- en: In the end, you should have a folder similar to **Figure 1**. These are all
    the files available for a [Landsat level 2 science product](https://www.usgs.gov/landsat-missions/landsat-collection-2-level-2-science-products).
    We’ll be working with the red visible band (***_B4.TIF**) and the JSON metadata
    file (***_MTL.json**). These are highlighted below.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，你应该有一个类似于**图 1**的文件夹。这些是所有可用的[Landsat 二级科学产品](https://www.usgs.gov/landsat-missions/landsat-collection-2-level-2-science-products)文件。我们将使用可见红光带（***_B4.TIF**）和
    JSON 元数据文件（***_MTL.json**）。这些文件在下面已被突出显示。
- en: '![](../Images/72690c5614f470746158f244bfcedea7.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/72690c5614f470746158f244bfcedea7.png)'
- en: 'Figure 1: Landsat level-2 science product files (source: author)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1：Landsat 二级科学产品文件（来源：作者）
- en: This particular scene was taken above the east coast of Ireland. To see this
    we visualise the red band. We load the tiff file (line 9). We [scale the band](https://www.usgs.gov/faqs/how-do-i-use-scale-factor-landsat-level-2-science-products)
    (line 12) and [clip it to enhance it’s contrast](/visualising-the-rgb-channels-of-satellite-images-with-python-6d541af1f98d)
    (line 15). You can see the resulting image in **Figure 2**.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这个特定场景拍摄于爱尔兰东海岸上方。为了查看这个，我们可视化红光带。我们加载 tiff 文件（第 9 行）。我们[缩放光带](https://www.usgs.gov/faqs/how-do-i-use-scale-factor-landsat-level-2-science-products)（第
    12 行）并[裁剪以增强对比度](/visualising-the-rgb-channels-of-satellite-images-with-python-6d541af1f98d)（第
    15 行）。你可以在**图 2**中看到结果图像。
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](../Images/479bbc78afa84f057620906d134e887e.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/479bbc78afa84f057620906d134e887e.png)'
- en: 'Figure 2: Visible red light band of Landsat scene of the east coast of Ireland
    (source: author)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2：爱尔兰东海岸 Landsat 场景的可见红光带（来源：作者）
- en: We want to plot a point for Howth, an Irish village, directly onto this image.
    Looking at **Figure 2**, you can see it sticking out at about 1/3 of the way down
    the coast. The specific latitude and longitude points we want to plot are given
    in **Figure 3**.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望将一个点直接绘制到这个图像上，指向爱尔兰村庄 Howth。看着**图 2**，你可以看到它大约在沿海的 1/3 处突出。我们要绘制的具体经纬度点在**图
    3**中给出。
- en: '![](../Images/67741b06fe8bf6bff3d54c9dc98456ba.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/67741b06fe8bf6bff3d54c9dc98456ba.png)'
- en: 'Figure 3: Latitude and longitude coordinates for Howth, Dublin (source: google
    maps)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3：Howth, Dublin 的纬度和经度坐标（来源：谷歌地图）
- en: Plotting points using Landsat metadata (MLT)
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Landsat 元数据（MLT）绘制点
- en: Okay, so plotting points with the MLT file is not as straightforward as using
    Rasterio. Still, it is worth exploring this method. You will see that we do not
    have to rely on a package. We will also learn about the coordinate reference system
    (CRS) used by Landsat.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，因此使用 MLT 文件绘制点不像使用 Rasterio 那样简单。不过，探索这种方法是值得的。你会发现我们不必依赖于任何包。我们还将了解 Landsat
    使用的坐标参考系统（CRS）。
- en: Landsat metadata
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Landsat 元数据
- en: The MLT file contains a lot of metadata about the Landsat scene. You can find
    all the details in the [data format control book](https://www.usgs.gov/media/files/landsat-8-9-olitirs-collection-2-level-2-data-format-control-book).
    We are interested in the **projection attributes**. These are details about the
    scenes CRS and will allow us to geolocate the pixels in **Figure 2**. We load
    these attributes (lines 4–5).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: MLT 文件包含大量关于 Landsat 场景的元数据。你可以在[数据格式控制手册](https://www.usgs.gov/media/files/landsat-8-9-olitirs-collection-2-level-2-data-format-control-book)中找到所有细节。我们对**投影属性**感兴趣。这些是关于场景
    CRS 的详细信息，并将允许我们对**图 2**中的像素进行地理定位。我们加载这些属性（第 4–5 行）。
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Figure 4**, gives the list of projection attribute**s**. The first item tells
    us that [UTM](https://www.usgs.gov/faqs/how-are-utm-coordinates-measured-usgs-topographic-maps#:~:text=The%20UTM%20(Universal%20Transverse%20Mercator,Zone%2019%2C%20which%20includes%20Maine.)
    is the CRS for this scene. This is a projected coordinate system (PCS). It is
    used to project geolocation on the Earth surface (a sphere) onto the scene (2D
    surface). Later we will see how this differs from a geographic coordinate system
    (GCS).'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 4**提供了投影属性的列表。第一个项目告诉我们[UTM](https://www.usgs.gov/faqs/how-are-utm-coordinates-measured-usgs-topographic-maps#:~:text=The%20UTM%20(Universal%20Transverse%20Mercator,Zone%2019%2C%20which%20includes%20Maine.)
    是该场景的 CRS。这是一个投影坐标系统（PCS）。它用于将地球表面（球体）上的地理位置投影到场景（二维表面）上。稍后我们将看到它与地理坐标系统（GCS）的不同之处。'
- en: '![](../Images/4464cca16e268f97e8662b0f17b47f3a.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4464cca16e268f97e8662b0f17b47f3a.png)'
- en: 'Figure 4: projection attribute for Landsat scenes (source: author)'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4：Landsat 场景的投影属性（来源：作者）
- en: 'When converting UTM to pixel positions, we will need two other pieces of information
    from **Figure 4**. These are:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在将 UTM 转换为像素位置时，我们需要从**图 4**中获取另外两条信息。这些是：
- en: GRID_CELL_SIZE_REFLECTVE — this tells us that each pixel covers 30 square meters
    of land
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GRID_CELL_SIZE_REFLECTVE——这告诉我们每个像素覆盖30平方米的土地
- en: Projection coordinates (e.g. CORNER_UL_PROJECTION_X_PRODUCT) — these give the
    UTM coordinates (in meters) for the scenes bounding box
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 投影坐标（例如 CORNER_UL_PROJECTION_X_PRODUCT）——这些给出了场景边界框的 UTM 坐标（以米为单位）
- en: In fact, we only need the first 2 coordinates. These are for the upper left
    (UL) corner of the bounding box. Looking at **Figure 5**, we see how this information
    is used to convert to pixel position. We know each pixel is 30m². This means that
    we can start at (543000, 6004200) and add/subtract 30m to get the start of the
    next pixel. We select a pixel if the UTM coordinates fall in that pixel’s range.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，我们只需要前两个坐标。这些坐标是用于边界框的左上角（UL）。查看**图 5**，我们可以看到这些信息如何用于转换为像素位置。我们知道每个像素是30平方米。这意味着我们可以从（543000，6004200）开始，增加/减少30米来获取下一个像素的起始位置。如果UTM坐标落在该像素范围内，我们就选择这个像素。
- en: '![](../Images/6e3a6a8f18549a06a93222c69d1a2ef4.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6e3a6a8f18549a06a93222c69d1a2ef4.png)'
- en: 'Figure 5: UTM coordinates of start and end of pixels'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5：像素起始和结束的 UTM 坐标
- en: Plotting coordinates on a Landsat band
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Landsat 波段上绘制坐标
- en: We use this information to create the **coords_to_pixels** function. As parameters,
    it takes the UTM coordinates for the UL corner (**ul**) and the coordinate we
    want to convert (**utm**).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用这些信息创建了**coords_to_pixels**函数。作为参数，它接受 UL 角的 UTM 坐标（**ul**）和我们想要转换的坐标（**utm**）。
- en: '[PRE2]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We can now use this function to find the pixels for our point on Howth. We start
    by getting the UTM coordinates for the UL corner (lines 4–5). We took our points
    straight from google maps and so they are given in latitude and longitude (lines
    8–9). We convert these to UTM coordinates (line 12) which gives us values of **(694624,
    5918089)**. Finally, we convert these to pixels (line 16). This gives us pixel
    values of **(5054, 2870)**.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以使用这个函数来找到我们在 Howth 的点的像素。我们从 UL 角的 UTM 坐标开始（第 4-5 行）。我们直接从谷歌地图上获取了我们的点，因此它们以纬度和经度的形式给出（第
    8-9 行）。我们将这些转换为 UTM 坐标（第 12 行），得到**（694624，5918089）**。最后，我们将这些转换为像素（第 16 行）。这给了我们像素值**（5054，2870）**。
- en: '[PRE3]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Let’s see how accurate this is. We add a white circle to the image in **Figure
    2** at the given pixel values (line 5). To see our point we zoom in by cropping
    the image around the circle (lines 8–9). Comparing **Figure 6** to the point in
    **Figure 3**, we can see that we have accurately plotted the point onto the Landsat
    scene. In general, [90% of all Landsat points will have a positional error of
    less than 12 meters](https://www.sciencedirect.com/science/article/pii/S003442571400042X).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这有多准确。我们在**图 2**中给定的像素值（第 5 行）上向图像中添加一个白色圆圈。为了看到我们的点，我们通过裁剪图像周围的圆圈来放大（第
    8-9 行）。将**图 6**与**图 3**中的点进行比较，我们可以看到我们已经准确地将点绘制到 Landsat 场景中。一般而言，[90%的 Landsat
    点位置误差小于12米](https://www.sciencedirect.com/science/article/pii/S003442571400042X)。
- en: '[PRE4]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/eab237551bd84541beea2e6fb4a53305.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/eab237551bd84541beea2e6fb4a53305.png)'
- en: 'Figure 6: Howth coordinates plotted using Landsat Metadata file (source: author)'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6：使用 Landsat 元数据文件绘制的 Howth 坐标（来源：作者）
- en: Plotting coordinates with rasterio
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 rasterio 绘制坐标
- en: The above process works! But, we can make our lives easier using the Rasterio
    package. We open the tiff file for the red visible light band (line 4). Metadata
    about the scene is embedded in the file. For example, we print the CRS (line 7)
    which outputs **“EPSG:32629”**. This is the [EPSG code](https://epsg.io/32629)
    for UTM zone 29N. In other words, the same CRS that was given in the MLT file.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 上述过程有效！但是，我们可以使用 Rasterio 包让我们的生活更轻松。我们打开红色可见光波段的 tiff 文件（第 4 行）。场景的元数据嵌入在文件中。例如，我们打印
    CRS（第 7 行），输出**“EPSG:32629”**。这是[EPSG 代码](https://epsg.io/32629)，表示 UTM 区域 29N。换句话说，与
    MLT 文件中给出的 CRS 相同。
- en: '[PRE5]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: We can use the **index** function to convert UTM to pixel coordinates (line
    9). This outputs **(5054, 2870).** The same as before!
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用**index**函数将 UTM 转换为像素坐标（第 9 行）。这输出**（5054，2870）**。和之前一样！
- en: '[PRE6]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: So, with Rasterio we no longer have to worry about the bounding box or even
    the CRS. However, we still have to convert latitude and longitude to UTM. If we
    want to plot the latitude and longitude directly, we will have to reproject the
    Landsat scene to the Google Maps CRS.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，使用 Rasterio，我们不再需要担心边界框甚至 CRS。然而，我们仍然需要将纬度和经度转换为 UTM。如果我们想直接绘制纬度和经度，我们将不得不将
    Landsat 场景重新投影到 Google Maps CRS。
- en: Reprojecting a Landsat scene
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 重投影 Landsat 场景
- en: 'We do this using the code below. In summary, it takes the red band image, reprojects
    it to EPSG:4326 (Google Maps CRS), and saves the reprojected image to a new file.
    Some things to point out:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用下面的代码来完成这一任务。总的来说，它将红色光谱带图像重投影到 EPSG:4326（Google Maps CRS），并将重投影图像保存到新文件中。有几点需要注意：
- en: We calculate a new transform function (line 12). This is what Rasterio uses
    to convert coordinates to pixels.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们计算一个新的转换函数（第12行）。这是 Rasterio 用来将坐标转换为像素的内容。
- en: When we reproject the file we use the nearest resampling method (line 42). This
    means we use the value of the nearest cells to fill in the values of other cells.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当我们重投影文件时，我们使用最近邻重采样方法（第42行）。这意味着我们使用最近的单元格的值来填充其他单元格的值。
- en: We need a resampling method because the reprojection process will “warp” the
    image to fit the new CRS. We will see this when we output the reprojected image.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要一种重采样方法，因为重投影过程会“扭曲”图像以适应新的 CRS。我们将在输出重投影图像时看到这一点。
- en: '[PRE7]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: To confirm the process has worked, we load the projected image (line 2) and
    output its CRS (line 3). This gives us **“EPSG:4326”**. Success!
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确认过程已成功完成，我们加载投影图像（第2行）并输出其 CRS（第3行）。这给我们 **“EPSG:4326”**。成功！
- en: '[PRE8]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: We can now get the pixel coordinates directly from lat/long coordinates. This
    gives a value of **(6336, 2227).** These are different to before because, as mentioned,
    the projected image has been warped.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以直接从经纬度坐标获取像素坐标。这给出了**（6336，2227）**的值。这些值与之前不同，因为如前所述，投影图像已经被扭曲。
- en: '[PRE9]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: We can see this when we plot the point on the projected image in **Figure 7**.
    Comparing it to **Figure 6**, the aspect ratio has changed. In fact, many of the
    pixels will have been altered. This is because, unlike UTM, EPSG:4326 is a *geographic*
    coordinate system (GCS). It is used to plot points on a sphere (i.e. the Earth).
    Trying to display an image with this CRS on a 2D plane leads to the distorted
    aspect ratio.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在**图 7**中绘制点在投影图像上时，我们可以看到这一点。与**图 6**相比，纵横比发生了变化。实际上，许多像素已经被更改。这是因为，与UTM不同，EPSG:4326
    是一个*地理*坐标系统（GCS）。它用于在球体上（即地球）绘制点。在二维平面上显示具有此CRS的图像会导致纵横比的扭曲。
- en: '![](../Images/19ba93f168f4927b41283bbe8b63ac18.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/19ba93f168f4927b41283bbe8b63ac18.png)'
- en: 'Figure 6: Howth coordinates plotted on the projected image (source: author)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6：霍斯坐标在投影图像上绘制（来源：作者）
- en: This article has focused on plotting coordinates on a single band. If you are
    working with multiple bands or RGB visualisations, the underlying method will
    be the same. This is because all bands in the Landsat scene will have the same
    CRS. See the article below for details on visualising the RGB channels.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 本文重点讨论了在单个光谱带上绘制坐标。如果你正在处理多个光谱带或 RGB 可视化，底层方法将是相同的。这是因为 Landsat 场景中的所有光谱带将具有相同的
    CRS。有关 RGB 通道可视化的详细信息，请参见下面的文章。
- en: '[](/visualising-the-rgb-channels-of-satellite-images-with-python-6d541af1f98d?source=post_page-----5671613887aa--------------------------------)
    [## Visualising the RGB Channels of Satellite Images with Python'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/visualising-the-rgb-channels-of-satellite-images-with-python-6d541af1f98d?source=post_page-----5671613887aa--------------------------------)
    [## 使用 Python 可视化卫星图像的 RGB 通道'
- en: How to deal with multiple spectral bands, large pixel values and skewed RGB
    channels when visualising satellite images
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何处理可视化卫星图像时的多个光谱带、大像素值和扭曲的 RGB 通道
- en: towardsdatascience.com](/visualising-the-rgb-channels-of-satellite-images-with-python-6d541af1f98d?source=post_page-----5671613887aa--------------------------------)
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/visualising-the-rgb-channels-of-satellite-images-with-python-6d541af1f98d?source=post_page-----5671613887aa--------------------------------)'
- en: I hope you enjoyed this article! You can find me on [Mastodon](https://sigmoid.social/@conorosully)
    | [Twitter](https://twitter.com/conorosullyDS) | [YouTube](https://www.youtube.com/channel/UChsoWqJbEjBwrn00Zvghi4w)
    | [Newsletter](https://mailchi.mp/aa82a5ce1dc0/signup) — sign up for FREE access
    to a [Python SHAP course](https://adataodyssey.com/courses/shap-with-python/)
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你喜欢这篇文章！你可以在 [Mastodon](https://sigmoid.social/@conorosully) | [Twitter](https://twitter.com/conorosullyDS)
    | [YouTube](https://www.youtube.com/channel/UChsoWqJbEjBwrn00Zvghi4w) | [Newsletter](https://mailchi.mp/aa82a5ce1dc0/signup)
    上找到我 — 免费注册以获取 [Python SHAP 课程](https://adataodyssey.com/courses/shap-with-python/)
- en: '[](https://conorosullyds.medium.com/membership?source=post_page-----5671613887aa--------------------------------)
    [## Join Medium with my referral link — Conor O’Sullivan'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://conorosullyds.medium.com/membership?source=post_page-----5671613887aa--------------------------------)
    [## 使用我的推荐链接加入 Medium — Conor O’Sullivan'
- en: As a Medium member, a portion of your membership fee goes to writers you read,
    and you get full access to every story…
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 作为 Medium 会员，你的会员费的一部分将用于支持你阅读的作者，并且你可以全面访问每个故事……
- en: conorosullyds.medium.com](https://conorosullyds.medium.com/membership?source=post_page-----5671613887aa--------------------------------)
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '[conorosullyds.medium.com](https://conorosullyds.medium.com/membership?source=post_page-----5671613887aa--------------------------------)'
- en: '**References**'
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**参考资料**'
- en: '[Maurício Cordeiro](https://medium.com/u/8878c77fe1a3?source=post_page-----5671613887aa--------------------------------)
    **Python for Geosciences: Raster Merging, Clipping and Reprojection with Rasterio**
    [https://medium.com/analytics-vidhya/python-for-geosciences-raster-merging-clipping-and-reprojection-with-rasterio-9f05f012b88a](https://medium.com/analytics-vidhya/python-for-geosciences-raster-merging-clipping-and-reprojection-with-rasterio-9f05f012b88a)'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '[Maurício Cordeiro](https://medium.com/u/8878c77fe1a3?source=post_page-----5671613887aa--------------------------------)
    **Python 在地球科学中的应用：使用 Rasterio 进行栅格合并、裁剪和重投影** [https://medium.com/analytics-vidhya/python-for-geosciences-raster-merging-clipping-and-reprojection-with-rasterio-9f05f012b88a](https://medium.com/analytics-vidhya/python-for-geosciences-raster-merging-clipping-and-reprojection-with-rasterio-9f05f012b88a)'
- en: BGU **Rasters (rasterio)** [https://geobgu.xyz/py/rasterio.html#raster-file-connection](https://geobgu.xyz/py/rasterio.html#raster-file-connection)
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: BGU **栅格 (rasterio)** [https://geobgu.xyz/py/rasterio.html#raster-file-connection](https://geobgu.xyz/py/rasterio.html#raster-file-connection)
- en: '[gerdoo](https://medium.com/u/4334b7a2376e?source=post_page-----5671613887aa--------------------------------)
    **Indexing Georeferenced Landsat Images** [https://medium.com/@gerdoo/georeferencing-landsat-images-in-python-92d5d5aafc67](https://medium.com/@gerdoo/georeferencing-landsat-images-in-python-92d5d5aafc67)'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[gerdoo](https://medium.com/u/4334b7a2376e?source=post_page-----5671613887aa--------------------------------)
    **地理参考 Landsat 图像的索引** [https://medium.com/@gerdoo/georeferencing-landsat-images-in-python-92d5d5aafc67](https://medium.com/@gerdoo/georeferencing-landsat-images-in-python-92d5d5aafc67)'
- en: PyGIS **Raster Coordinate Reference Systems (CRS)** [https://pygis.io/docs/d_raster_crs_intro.html](https://pygis.io/docs/d_raster_crs_intro.html)
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: PyGIS **栅格坐标参考系统 (CRS)** [https://pygis.io/docs/d_raster_crs_intro.html](https://pygis.io/docs/d_raster_crs_intro.html)
