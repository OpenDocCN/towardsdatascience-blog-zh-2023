- en: How To Install Traefik Ingress Controller In Kubernetes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何在 Kubernetes 中安装 Traefik Ingress Controller
- en: 原文：[https://towardsdatascience.com/how-to-install-traefik-ingress-controller-in-kubernetes-fa2b9079e942](https://towardsdatascience.com/how-to-install-traefik-ingress-controller-in-kubernetes-fa2b9079e942)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-install-traefik-ingress-controller-in-kubernetes-fa2b9079e942](https://towardsdatascience.com/how-to-install-traefik-ingress-controller-in-kubernetes-fa2b9079e942)
- en: Provide load balancing, name-based virtual hosting, and SSL-termination
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提供负载均衡、基于名称的虚拟主机和 SSL 终止
- en: '[](https://medium.knulst.de/?source=post_page-----fa2b9079e942--------------------------------)[![Paul
    Knulst](../Images/9fcb767d927a1fe53ee739c584fdf92c.png)](https://medium.knulst.de/?source=post_page-----fa2b9079e942--------------------------------)[](https://towardsdatascience.com/?source=post_page-----fa2b9079e942--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----fa2b9079e942--------------------------------)
    [Paul Knulst](https://medium.knulst.de/?source=post_page-----fa2b9079e942--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.knulst.de/?source=post_page-----fa2b9079e942--------------------------------)[![Paul
    Knulst](../Images/9fcb767d927a1fe53ee739c584fdf92c.png)](https://medium.knulst.de/?source=post_page-----fa2b9079e942--------------------------------)[](https://towardsdatascience.com/?source=post_page-----fa2b9079e942--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----fa2b9079e942--------------------------------)
    [Paul Knulst](https://medium.knulst.de/?source=post_page-----fa2b9079e942--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----fa2b9079e942--------------------------------)
    ·5 min read·Jan 4, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----fa2b9079e942--------------------------------)
    ·5 分钟阅读·2023年1月4日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/2c753cb3418bb0cc7907fc66fb5f7b5c.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2c753cb3418bb0cc7907fc66fb5f7b5c.png)'
- en: Photo by [Growtika Developer Marketing Agency](https://unsplash.com/@growtika?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    / [Unsplash](https://unsplash.com/s/photos/kubernetes-k8s?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Growtika 开发者营销机构](https://unsplash.com/@growtika?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    / [Unsplash](https://unsplash.com/s/photos/kubernetes-k8s?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: This tutorial will show how to use Traefik as an Ingress Controller in Kubernetes
    (or k8s) to provide load balancing, name-based virtual hosting, and SSL termination.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程将展示如何使用 Traefik 作为 Kubernetes（或 k8s）中的 Ingress Controller，以提供负载均衡、基于名称的虚拟主机和
    SSL 终止。
- en: To follow this tutorial, you need.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要跟随本教程，你需要：
- en: A running Kubernetes cluster or a Managed Kubernetes
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个运行中的 Kubernetes 集群或一个托管的 Kubernetes
- en: A Load Balancer that dynamically distributes your traffic to any Kubernetes
    resource that is marked as [LoadBalancer](https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/)
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个负载均衡器，它动态地将流量分配到标记为 [LoadBalancer](https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/)
    的任何 Kubernetes 资源上
- en: A PRIMARY_DOMAIN
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 PRIMARY_DOMAIN
- en: 'Note: The domain that I use in this post is `PRIMARY_DOMAIN`, please change
    accordingly. If your desired domain is `paulsblog.dev`, replace `PRIMARY_DOMAIN`
    with `paulsblog.dev`.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：我在此帖子中使用的域名是 `PRIMARY_DOMAIN`，请相应更改。如果你的目标域名是 `paulsblog.dev`，请将 `PRIMARY_DOMAIN`
    替换为 `paulsblog.dev`。
- en: What is an Ingress Controller?
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 Ingress Controller？
- en: An Ingress Controller is an API object that will manage external access to any
    deployed service in a Kubernetes cluster. Typically HTTP or HTTPS is used. Furthermore,
    it provides load balancing, name-based virtual hosting, and SSL termination.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Ingress Controller 是一个 API 对象，它将管理对 Kubernetes 集群中任何已部署服务的外部访问。通常使用 HTTP 或 HTTPS。此外，它提供负载均衡、基于名称的虚拟主机和
    SSL 终止。
- en: Why do you need an Ingress Controller?
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么你需要一个 Ingress Controller？
- en: 'This list will show the most important benefits of using an Ingress Controller
    in a Kubernetes cluster:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 此列表将展示在 Kubernetes 集群中使用 Ingress Controller 的最重要的好处：
- en: Load balance any traffic between every service that is deployed outside of the
    Kubernetes cluster
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将任何流量负载均衡到部署在 Kubernetes 集群外的每个服务之间
- en: Allow HTTP traffic between services within the cluster but enforce HTTPS traffic
    from outside the Kubernetes cluster while terminating encryption.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许集群内的服务之间进行 HTTP 流量，但强制要求从 Kubernetes 集群外部的 HTTPS 流量，同时终止加密。
- en: Simplify interaction between internal services and re-route when required by
    changing the Ingress Routing Rule.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简化内部服务之间的交互，并在需要时通过更改 Ingress 路由规则重新路由。
- en: Prepare Kubernetes Environment
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备 Kubernetes 环境
- en: Installing Helm, Kubernetes Package Manager
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Helm，即 Kubernetes 包管理器
- en: To install Helm on your Kubernetes cluster, you can use the official Helm installer
    script that will automatically install the latest version.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要在你的 Kubernetes 集群上安装 Helm，你可以使用官方的 Helm 安装脚本，它将自动安装最新版本。
- en: Before installing Helm, you can get a deeper understanding of Helm if you read
    about it in [the official Helm documentation](https://helm.sh/docs/). Afterward,
    download the script and execute it locally.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装 Helm 之前，你可以通过阅读 [官方 Helm 文档](https://helm.sh/docs/) 来深入了解 Helm。之后，下载脚本并在本地执行。
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Configure `kubectl` To Access The Kubernetes Cluster
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 `kubectl` 以访问 Kubernetes 集群
- en: 'If `kubectl` is used, you can use three different techniques to work with the
    cluster:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用 `kubectl`，你可以使用三种不同的技术来操作集群：
- en: '**1\. Use** `**--kubeconfig**` **flag for every command:**'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**1\. 对每个命令使用** `**--kubeconfig**` **标志：**'
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**2\. Use** `**KUBECONFIG**` **environment variable:**'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**2\. 使用** `**KUBECONFIG**` **环境变量：**'
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**3\. Copy the config file to** `**$HOME/.kube/config**`'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**3\. 将配置文件复制到** `**$HOME/.kube/config**`'
- en: Prepare Helm Chart
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备 Helm Chart
- en: 'To install Traefik, you should add the official Traefik Helm repository to
    your Helm client. This could be done by executing:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 Traefik，你应该将官方 Traefik Helm 仓库添加到你的 Helm 客户端。这可以通过执行以下操作来完成：
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Afterward, you have to configure the Helm chart by creating a `values.yaml`.
    All possible values can be found [in the GitHub of the Traefik Helm chart](https://github.com/traefik/traefik-helm-chart/blob/master/traefik/values.yaml)
    and will be used to set the static configuration of the Traefik proxy.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，你需要通过创建一个 `values.yaml` 来配置 Helm 图表。所有可能的值可以在 [Traefik Helm 图表的 GitHub](https://github.com/traefik/traefik-helm-chart/blob/master/traefik/values.yaml)
    中找到，并将用于设置 Traefik 代理的静态配置。
- en: 'Now, you should create a `values.yaml` and paste the following into it:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你应该创建一个 `values.yaml` 文件，并将以下内容粘贴进去：
- en: '[PRE4]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This `values.yaml` is used to configure the Traefik proxy and will:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 `values.yaml` 用于配置 Traefik 代理，并将：
- en: use IONOS as the certificate resolver. To find your provider [consult the traefik
    documentation](https://doc.traefik.io/traefik/https/acme/#dnschallenge)
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 IONOS 作为证书解析器。要查找你的提供商，请 [查阅 Traefik 文档](https://doc.traefik.io/traefik/https/acme/#dnschallenge)
- en: set the certificates main domain to `PRIMARY_DOMAIN`
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将证书主域设置为 `PRIMARY_DOMAIN`
- en: set the certificates sans to `*.PRIMARY_DOMAIN`
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将证书 sans 设置为 `*.PRIMARY_DOMAIN`
- en: store every generated certificate in `/data/acme.json`
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将每个生成的证书存储在 `/data/acme.json` 中
- en: 'run a busybox init container to fix a common permission problem that is explained
    here: [https://github.com/containous/traefik/issues/6972](https://github.com/containous/traefik/issues/6972)'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行一个 busybox 初始化容器以解决一个常见的权限问题，详细说明请参阅 [https://github.com/containous/traefik/issues/6972](https://github.com/containous/traefik/issues/6972)
- en: load the IONOS_API_KEY from a secret. If using some other provider add every
    needed environment variable
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从一个密钥中加载 IONOS_API_KEY。如果使用其他提供商，请添加所需的所有环境变量
- en: deactivate the Traefik dashboard
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁用 Traefik 仪表板
- en: enable persistence for the Traefik proxy
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用 Traefik 代理的持久化
- en: Install Traefik Proxy As Ingress Controller
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Traefik 代理作为 Ingress 控制器
- en: To install Traefik Proxy in your Kubernetes cluster, follow the next four simple
    steps
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 要在你的 Kubernetes 集群中安装 Traefik 代理，按照接下来的四个简单步骤操作
- en: '**1\. Begin with creating a Kubernetes namespace:**'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**1\. 首先创建一个 Kubernetes 命名空间：**'
- en: '[PRE5]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**2\. Create a** `**treafik-secret.yaml**` **that will contain the secret used
    within the Helm chart for SSL certificate creation:**'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**2\. 创建一个** `**treafik-secret.yaml**` **文件，包含在 Helm 图表中用于 SSL 证书创建的密钥：**'
- en: '[PRE6]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**3\. Apply the secret in your Kubernetes cluster:**'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**3\. 在你的 Kubernetes 集群中应用密钥：**'
- en: '[PRE7]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '**4\. Install Traefik using Helm and apply** `**values.yaml**`'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**4\. 使用 Helm 安装 Traefik 并应用** `**values.yaml**`'
- en: '[PRE8]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'If you change anything within the `values.yaml` and want to update the Traefik
    proxy, this can be done by executing:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在 `values.yaml` 中更改了任何内容并且想要更新 Traefik 代理，可以通过执行以下操作来完成：
- en: '[PRE9]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'After some minutes, your Traefik is deployed correctly, and you can map your
    PRIMARY_DOMAIN A record to the IP of the Traefik Load Balancer. You can find the
    external IP by executing:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 几分钟后，你的 Traefik 将正确部署，你可以将你的 PRIMARY_DOMAIN A 记录映射到 Traefik 负载均衡器的 IP。你可以通过执行以下操作找到外部
    IP：
- en: '[PRE10]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'It should output the following:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 它应该输出以下内容：
- en: '![](../Images/57988e456ba61fe464300998cb117bb0.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/57988e456ba61fe464300998cb117bb0.png)'
- en: The output of kubectl gets all within the traefik namespace
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: kubectl 的输出包含所有 traefik 命名空间中的内容
- en: When the external IP is not set, wait some time and retry it. If you did not
    receive an external IP, you probably did not have an external load balancer installed/bought.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 当外部 IP 尚未设置时，请等待一段时间并重试。如果你没有收到外部 IP，可能是因为你没有安装/购买外部负载均衡器。
- en: Enable Traefik Dashboard
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启用 Traefik 仪表板
- en: To enable the Traefik Dashboard within the Kubernetes cluster, you will have
    to create an Ingress route and a middleware to enable Basic authentication.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Kubernetes 集群中启用 Traefik 仪表盘，你需要创建一个 Ingress 路由和一个中间件以启用基本认证。
- en: Create a new folder called `traefik-dashboard` which will contain every file
    to set up the Traefik dashboard.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为 `traefik-dashboard` 的新文件夹，其中包含设置 Traefik 仪表盘所需的所有文件。
- en: 'Now, create a base64 encoded user and password that will be used within the
    Kubernetes secret:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，创建一个 base64 编码的用户和密码，这将用于 Kubernetes 密钥中：
- en: '[PRE11]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Afterward, copy the `htpasswd` string and create the Kubernetes secret `001-auth-secret`
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，复制 `htpasswd` 字符串并创建 Kubernetes 密钥 `001-auth-secret`。
- en: '[PRE12]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Then create a Kubernetes middleware `002-middleware` which will use the basic
    auth secret:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 然后创建一个 Kubernetes 中间件 `002-middleware`，它将使用基本认证密钥：
- en: '[PRE13]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Now you can create the Ingress route `003-ingressroute` for the Traefik dashboard:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以为 Traefik 仪表盘创建 Ingress 路由 `003-ingressroute`：
- en: '[PRE14]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'If you named the files as described, you should have the following file structure:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你按照描述命名了文件，你应该拥有以下文件结构：
- en: '[PRE15]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Switch to the upper folder and use the following command to apply all files
    in the correct order:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 切换到上级文件夹，并使用以下命令按正确的顺序应用所有文件：
- en: '[PRE16]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: After some minutes, the Traefik dashboard is online and can be reached by its
    domain (https://traefik.PRIMARY_DOMAIN).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 几分钟后，Traefik 仪表盘上线，并可以通过其域名 (https://traefik.PRIMARY_DOMAIN) 访问。
- en: Closing Notes
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结束语
- en: I hope this article gave you a quick and neat overview of how to set up Traefik
    Proxy as an Ingress Controller within your Kubernetes cluster.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望这篇文章给你提供了一个关于如何在 Kubernetes 集群中设置 Traefik Proxy 作为 Ingress Controller 的简洁概述。
- en: Using Helm to set up a Traefik Ingress controller makes it easy to install,
    reconfigure, and update the Traefik Proxy.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Helm 设置 Traefik Ingress 控制器使得安装、重新配置和更新 Traefik Proxy 变得简单。
- en: With this setup, you can deploy any Kubernetes Pod/Service and use an IngressRoute
    to make it accessible through SSL with any subdomain.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个设置，你可以部署任何 Kubernetes Pod/Service，并使用 IngressRoute 通过任何子域名使其通过 SSL 访问。
- en: I would love to hear your feedback about this tutorial. Furthermore, if you
    already run a Traefik installation and use a different approach, please comment
    here and explain what you have done differently. Also, if you have any questions,
    please ask them in the comments. I will answer them if possible.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我非常希望听到你对这个教程的反馈。此外，如果你已经运行了 Traefik 安装并使用了不同的方法，请在这里评论并解释你做了什么不同的事情。如果你有任何问题，请在评论中提问。我会尽可能回答。
- en: Feel free to connect with me on [my blog](https://www.paulsblog.dev), [LinkedIn](https://www.linkedin.com/in/paulknulst/),
    [Twitter](https://twitter.com/paulknulst), and [GitHub](https://github.com/paulknulst).
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎通过 [我的博客](https://www.paulsblog.dev)、[LinkedIn](https://www.linkedin.com/in/paulknulst/)、[Twitter](https://twitter.com/paulknulst)
    和 [GitHub](https://github.com/paulknulst) 与我联系。
- en: '*This article was initially published on my blog at* [*https://www.paulsblog.dev/how-to-install-traefik-ingress-controller-in-kubernetes/*](https://www.paulsblog.dev/how-to-install-traefik-ingress-controller-in-kubernetes/)'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '*这篇文章最初发布在我的博客* [*https://www.paulsblog.dev/how-to-install-traefik-ingress-controller-in-kubernetes/*](https://www.paulsblog.dev/how-to-install-traefik-ingress-controller-in-kubernetes/)'
