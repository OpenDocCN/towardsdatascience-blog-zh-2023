- en: 'Enhancing Python Documentation: A Step-by-Step Guide to Linking Source Code'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/enhancing-python-documentation-a-step-by-step-guide-to-linking-source-code-9da102b2bb2a](https://towardsdatascience.com/enhancing-python-documentation-a-step-by-step-guide-to-linking-source-code-9da102b2bb2a)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[](https://piskunow.medium.com/?source=post_page-----9da102b2bb2a--------------------------------)[![Pablo
    Piskunow](../Images/ee0402d41010f97f5e4a51494ae3b517.png)](https://piskunow.medium.com/?source=post_page-----9da102b2bb2a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----9da102b2bb2a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----9da102b2bb2a--------------------------------)
    [Pablo Piskunow](https://piskunow.medium.com/?source=post_page-----9da102b2bb2a--------------------------------)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----9da102b2bb2a--------------------------------)
    ·4 min read·Dec 7, 2023
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: You read the description of this class method, but still don’t understand what
    is happening. If only you could quickly read the source code…
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Bridging the Gap Between Documentation and Code: Simplifying Python Learning'
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Python’s power lies not just in its simplicity and efficiency but also in its
    vast community and rich documentation. But what if you could make that documentation
    even more interactive and informative? Today, I’ll walk you through enhancing
    your Sphinx-generated Python documentation by linking it directly to the corresponding
    source code on GitHub.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f1ac9810e77866bfc357b8a03fa99355.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
- en: Image by author using Dalle-3\. Prompt “Abstract image, black acquarel on a
    light cream canvas, showing handwritten snippets linked to the inner workings
    of a machine with thin arrows”.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 1: Documenting with Sphinx'
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When we write proper docstrings in our Python code, we lay the groundwork for
    generating comprehensive API documentation. Tools like Sphinx’s `autodoc` and
    `automodule` are great for extracting these docstrings from our modules, classes,
    and functions. But, they typically fall short in providing direct links to the
    source code.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: 'If you need to get started with Sphinx, check these tutorials:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://www.sphinx-doc.org/en/master/tutorial/automatic-doc-generation.html?source=post_page-----9da102b2bb2a--------------------------------)
    [## Sphinx'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: In the previous section of the tutorial you manually documented a Python function
    in Sphinx. However, the description…
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: www.sphinx-doc.org](https://www.sphinx-doc.org/en/master/tutorial/automatic-doc-generation.html?source=post_page-----9da102b2bb2a--------------------------------)  [##
    Building a Documentation Project with Sphinx - Intro to Documentation with Sphinx
    and…
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: For the purpose of this tutorial, we will be writing documentation using reStructuredText.
    If you're looking to use…
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为了本教程的目的，我们将使用 reStructuredText 编写文档。如果你希望使用…
- en: sphinx-intro-tutorial.readthedocs.io](https://sphinx-intro-tutorial.readthedocs.io/en/latest/sphinx_first_steps.html?source=post_page-----9da102b2bb2a--------------------------------)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[sphinx-intro-tutorial.readthedocs.io](https://sphinx-intro-tutorial.readthedocs.io/en/latest/sphinx_first_steps.html?source=post_page-----9da102b2bb2a--------------------------------)'
- en: 'Step 2: Setting up Sphinx `linkcode`'
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 2 步：设置 Sphinx `linkcode`
- en: 'To add this functionality, first, we need to modify our Sphinx configuration.
    This involves adding `sphinx.ext.linkcode` to our list of extensions in the `conf.py`
    file of our documentation source:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加此功能，首先我们需要修改 Sphinx 配置。这包括在文档源的 `conf.py` 文件中将 `sphinx.ext.linkcode` 添加到扩展列表中：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Step 3: Basic Linkcode Implementation'
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 3 步：基本的 Linkcode 实现
- en: 'Our next step is to define the `linkcode_resolve` function. This function is
    responsible for determining the URL that the documentation should point to:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的下一步是定义 `linkcode_resolve` 函数。这个函数负责确定文档应该指向的 URL：
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Here, we’re simply pointing to the file in the GitHub repository but not yet
    to the specific line of code.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们只是指向 GitHub 仓库中的文件，而不是特定的代码行。
- en: 'Step 4: Finding the Line Number'
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 4 步：查找行号
- en: Getting the Module Object
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 获取模块对象
- en: 'First, you’re obtaining the module object where the target class, method, attribute,
    or function (henceforth simply referred to as ‘object’) is defined. In Python,
    every loaded module is stored in a dictionary called `sys.modules`. You’re accessing
    this dictionary to retrieve the module object based on its name:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要获取定义目标类、方法、属性或函数（以下简称“对象”）的模块对象。在 Python 中，每个加载的模块都存储在一个名为 `sys.modules`
    的字典中。你需要访问这个字典，以根据其名称检索模块对象：
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Iterating Over the Fully Qualified Name
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 遍历完全限定名称
- en: 'Next, you iterate over the fully qualified name of the object. A fully qualified
    name includes all the hierarchical levels through which the object can be accessed,
    like `module.class.method`. This iteration helps you to dig into the module structure
    and reach the exact object you need:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你需要遍历对象的完全限定名称。完全限定名称包括访问对象所需的所有层级，例如 `module.class.method`。这个遍历过程帮助你深入模块结构，找到你需要的确切对象：
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Using the Inspect Module to Find the Line Number
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Inspect 模块查找行号
- en: 'Finally, you use the `inspect` module to find the line number in the source
    code where the definition of this object begins:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你使用 `inspect` 模块找到源代码中定义该对象的行号：
- en: '[PRE4]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Making one function to retrieve the line number**'
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**创建一个函数来检索行号**'
- en: 'To make a function that works for all cases, we need to add some extra checks:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使函数适用于所有情况，我们需要添加一些额外的检查：
- en: '[PRE5]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: In summary, this step involves locating the module where the target object is
    defined, traversing the module’s structure to find the exact object (be it a class,
    method, attribute, or function), and then using the `inspect` module to find the
    line number where this object is defined in the source code.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，这一步骤涉及定位目标对象所在的模块，遍历模块结构以找到确切的对象（无论是类、方法、属性还是函数），然后使用 `inspect` 模块找到该对象在源代码中定义的行号。
- en: 'Step 6: Finalizing Linkcode Resolution'
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 6 步：完成 Linkcode 解析
- en: 'We integrate the line number retrieval into the `linkcode_resolve` function:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将行号检索集成到 `linkcode_resolve` 函数中：
- en: '[PRE6]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This approach allows your documentation to provide a direct link to the specific
    line in the source code, enhancing the clarity and usefulness of the documentation.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法使你的文档能够提供指向源代码中特定行的直接链接，从而提高文档的清晰度和实用性。
- en: 'Extra: Branch Adaptation for ReadTheDocs'
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 额外：ReadTheDocs 的分支适配
- en: For those using ReadTheDocs, you can adapt this function to reference different
    branches (like `main` or `develop`). So how to build two different documentations
    pointing to each of those branches?
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 对于使用 ReadTheDocs 的用户，你可以调整这个函数以参考不同的分支（如 `main` 或 `develop`）。那么如何构建两个不同的文档来指向这两个分支呢？
- en: When ReadTheDocs builds the documentation, it uses it’s own environment with
    a variable called `READTHEDOCS_VERSION`, which typically is ‘stable’ or ‘latest’.
    I have added another build called ‘develop’ that points to the branch of the same
    name on my git repository.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 当 ReadTheDocs 构建文档时，它使用自己的环境，其中包含一个名为 `READTHEDOCS_VERSION` 的变量，通常为 ‘stable’
    或 ‘latest’。我添加了一个名为 ‘develop’ 的构建，它指向我的 Git 仓库中的同名分支。
- en: 'We can add the following to our `linkcode_resolve` function:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在 `linkcode_resolve` 函数中添加以下内容：
- en: '[PRE7]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Note that if building locally, or more generally in an environment where `READTHEDOCS_VERSION`
    is not defined, the default branch linked will be `main`.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果在本地构建，或者更一般地在未定义`READTHEDOCS_VERSION`的环境中，默认链接的分支将是`main`。
- en: Feel free to check the [GitHub repository](https://github.com/piskunow/kpm-tools/blob/b2223ad4fb24c2f995f22f5afab0ebc1cc554abf/docs/conf.py#L68)
    where this is implemented, and the [documentation](https://kpm-tools.readthedocs.io/en/latest/api.html).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 随时查看这个[GitHub 仓库](https://github.com/piskunow/kpm-tools/blob/b2223ad4fb24c2f995f22f5afab0ebc1cc554abf/docs/conf.py#L68)和[文档](https://kpm-tools.readthedocs.io/en/latest/api.html)，了解相关实现。
- en: Conclusion
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: With this setup, your Sphinx documentation will now have direct links to the
    source code, greatly enhancing its utility and user experience. This small addition
    can significantly improve the usability and effectiveness of your documentation,
    making it an invaluable tool for both new learners and experienced developers
    alike.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个设置，你的Sphinx文档现在将直接链接到源代码，大大提升了其实用性和用户体验。这一小小的增加可以显著提高文档的可用性和有效性，使其成为新手和经验丰富的开发者的宝贵工具。
- en: Remember, the journey of coding is as much about sharing knowledge and solutions
    as it is about solving problems. So, if you found this tutorial helpful, I encourage
    you to spread the word and help others in their coding adventures.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，编码的旅程不仅仅是解决问题，也关乎分享知识和解决方案。所以，如果你觉得这个教程对你有帮助，我鼓励你传播这个消息，帮助其他人进行他们的编码冒险。
- en: Happy coding, and until next time!
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 祝编码愉快，下次见！
- en: '*Discover more of my work and exclusive content on my* [*Gumroad profile*](https://dataguy.gumroad.com/)
    *or* [*personal website*](https://piskunow.com/)*.*'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '*在我的* [*Gumroad 个人资料*](https://dataguy.gumroad.com/) *或* [*个人网站*](https://piskunow.com/)*上发现更多我的作品和独家内容。*'
- en: '*Disclaimer: I do not hold any affiliation with Sphinx, I only find it a great
    open source tool.*'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '*免责声明：我与Sphinx没有任何关系，我只是觉得它是一个很棒的开源工具。*'
