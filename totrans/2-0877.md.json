["```py\npsql \\\n  -h $hostname -d $dbname -U $username \\\n  -c \"\\copy mytable (column1, column2)  from '/path/to/local/file.csv' with delimiter as ','\"\n```", "```py\nimport psycopg2\nimport csv\nimport time\n\ndef timing_decorator(func):\n    def wrapper(*args, **kwargs):\n        start_time = time.time()\n        result = func(*args, **kwargs)\n        end_time = time.time()\n        print(f\"Function {func.__name__} took {end_time - start_time} seconds to run.\")\n        return result\n    return wrapper\n\n# Establish a connection to the PostgreSQL database\nconn = psycopg2.connect(\n    host=\"localhost\",\n    database=\"playground\",\n    user=\"<your-user-name>\",\n    password=\"<your-password>\",\n)\n\n# Define the path to the CSV file and the name of the table to load it into\ncsv_file_path = \"./data.csv\"\ntable_name = \"temp_table\"\n\n@timing_decorator\ndef load_csv_with_insert():\n\n    # Create a cursor object\n    cur = conn.cursor()\n\n    # Open the CSV file and read its contents\n    with open(csv_file_path, 'r') as f:\n        csv_reader = csv.reader(f)\n        next(csv_reader) # skip header row\n\n        # Define the query to insert data into the table\n        insert_query = f\"INSERT INTO {table_name} VALUES ({','.join(['%s']*len(next(csv_reader)))})\"\n\n        # Iterate over the CSV rows and execute the insert query for each row\n        for row in csv_reader:\n            cur.execute(insert_query, row)\n\n        # Commit the changes to the database\n        conn.commit()\n\n    # Close the cursor and connection\n    cur.close()\n\nload_csv_with_insert()\nconn.close()\n```", "```py\nFunction load_csv_with_insert took 1046.109834432602 seconds to run.\n```", "```py\nimport pandas as pd\nfrom sqlalchemy import create_engine\nimport time\n\n...\n\nconn = create_engine(\"postgresql+psycopg2://thuwa:Flora1990@localhost:5432/playground\")\n\n@timing_decorator\ndef load_csv_with_pandas():\n    df = pd.read_csv(csv_file_path)\n\n    df.to_sql(table_name, conn, if_exists=\"append\", chunksize=100, index=False)\n\nload_csv_with_pandas()\n```", "```py\nFunction load_csv_with_pandas took 376.70790338516235 seconds to run.\n```", "```py\n...\n\n@timing_decorator\ndef load_csv_with_copy():\n    # Create a cursor object\n    cur = conn.cursor()\n\n    # Use the COPY command to load the CSV file into the table\n    with open(csv_file_path, \"r\") as f:\n        next(f)  # skip header row\n        cur.copy_from(f, table_name, sep=\",\")\n        conn.commit()\n\n    # Close the cursor and connection\n    cur.close()\n```", "```py\nFunction load_csv_with_copy took 50.60594058036804 seconds to run.\n```", "```py\nimport io\n\n...\n\n@timing_decorator\ndef load_dataframe_with_copy(df):\n    # Create a cursor object\n    cur = conn.cursor()\n\n    # Convert the DataFrame to a CSV file-like object\n    csv_buffer = io.StringIO()\n    df.to_csv(csv_buffer, index=False, header=False)\n\n    # Use the COPY command to load the CSV file into the table\n    csv_buffer.seek(0)\n    cur.copy_from(csv_buffer, table_name, sep=\",\")\n    conn.commit()\n\n    # Close the cursor and connection\n    cur.close()\n\ndf = pd.read_csv(csv_file_path)\n\n# Do data processing on df\n\nload_dataframe_with_copy(df)\n```"]