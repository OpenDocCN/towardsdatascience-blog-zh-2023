- en: How to Automatically Extract and Label Data Points on a Seaborn KDE Plot
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何自动提取和标记Seaborn KDE图上的数据点
- en: 原文：[https://towardsdatascience.com/how-to-automatically-extract-and-label-data-points-on-a-seaborn-kde-plot-52a576238301](https://towardsdatascience.com/how-to-automatically-extract-and-label-data-points-on-a-seaborn-kde-plot-52a576238301)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-automatically-extract-and-label-data-points-on-a-seaborn-kde-plot-52a576238301](https://towardsdatascience.com/how-to-automatically-extract-and-label-data-points-on-a-seaborn-kde-plot-52a576238301)
- en: '[](https://medium.com/@lee_vaughan?source=post_page-----52a576238301--------------------------------)[![Lee
    Vaughan](../Images/9f6b90bb76102f438ab0b9a4a62ffa3f.png)](https://medium.com/@lee_vaughan?source=post_page-----52a576238301--------------------------------)[](https://towardsdatascience.com/?source=post_page-----52a576238301--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----52a576238301--------------------------------)
    [Lee Vaughan](https://medium.com/@lee_vaughan?source=post_page-----52a576238301--------------------------------)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@lee_vaughan?source=post_page-----52a576238301--------------------------------)[![Lee
    Vaughan](../Images/9f6b90bb76102f438ab0b9a4a62ffa3f.png)](https://medium.com/@lee_vaughan?source=post_page-----52a576238301--------------------------------)[](https://towardsdatascience.com/?source=post_page-----52a576238301--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----52a576238301--------------------------------)
    [Lee Vaughan](https://medium.com/@lee_vaughan?source=post_page-----52a576238301--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----52a576238301--------------------------------)
    ·8 min read·Sep 5, 2023
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----52a576238301--------------------------------)
    ·8分钟阅读·2023年9月5日
- en: --
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/cdbbc4c1c1002109c7b24d9cd28ea6c6.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cdbbc4c1c1002109c7b24d9cd28ea6c6.png)'
- en: DALL·E 2023— An impressionist painting of an undulating mountain range with
    brightly colored circles along the ridgeline (all remaining images by the author).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: DALL·E 2023——一幅印象派风格的山脉起伏画作，山脊线上带有明亮的彩色圆圈（其余图片均由作者提供）。
- en: A *Kernel Density Estimate plot* is a method — similar to a histogram — for
    visualizing the distribution of data points. While a histogram *bins and counts*
    observations, a KDE plot *smooths* the observations using a Gaussian kernel. As
    alternatives to histograms, KDEs are arguably more attractive, easier to compare
    in the same figure, and better at accentuating patterns in data distributions.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '*核密度估计图* 是一种方法——类似于直方图——用于可视化数据点的分布。虽然直方图*对观测值进行分箱和计数*，但KDE图*使用高斯核*平滑观测值。作为直方图的替代方案，KDE图可能更具吸引力，更易于在同一图形中进行比较，并且更好地突出数据分布中的模式。'
- en: '![](../Images/eb84d573c206ec87f791d6343da9abf9.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/eb84d573c206ec87f791d6343da9abf9.png)'
- en: A histogram versus a KDE plot
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 直方图与KDE图
- en: Annotating statistical measures like the mean, median, or mode on KDEs makes
    them more meaningful. While adding lines for these measures is *easy*, making
    them look clean and uncluttered is not.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在KDE图上注释统计度量值如均值、中位数或众数，使其更具意义。虽然为这些度量值添加线条是*简单*的，但使它们看起来整洁且不杂乱却并非易事。
- en: '![](../Images/365149b556f136d9ae8847a26388cdf9.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/365149b556f136d9ae8847a26388cdf9.png)'
- en: Marker lines added with the easy method (left) vs. with the harder but more
    attractive method (right)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 使用简单方法添加的标记线（左）与使用更复杂但更具吸引力的方法（右）
- en: In this *Quick Success Data Science* project, we’ll use US Census and Congressional
    datasets to programmatically annotate multiple KDE plots with *median values*.
    This approach will ensure that the plot annotation *automatically* adjusts for
    updates to the datasets.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个*快速成功数据科学*项目中，我们将使用美国人口普查和国会数据集，程序化地注释多个KDE图并标记*中位数值*。这种方法将确保图形注释*自动*调整数据集的更新。
- en: For more details on KDE plots, see my previous article [here](https://medium.com/towards-data-science/when-are-songwriters-most-successful-9fdf90708e77).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解有关KDE图的更多细节，请参见我之前的文章 [这里](https://medium.com/towards-data-science/when-are-songwriters-most-successful-9fdf90708e77)。
- en: The Datasets
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据集
- en: Because the United States has [*Age of Candidacy* laws](https://en.wikipedia.org/wiki/Age_of_candidacy),
    the birthdays of members of Congress are part of the public record. For convenience,
    I’ve already compiled a CSV file of the names of the current members of Congress,
    along with their birthdays, branch of government, and party, and stored it in
    this [Gist](https://gist.github.com/rlvaugh/35069885b74ca52a63aab217863440e0).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 由于美国有[*候选年龄*](https://en.wikipedia.org/wiki/Age_of_candidacy)法律，国会成员的生日是公共记录的一部分。为了方便起见，我已编制了一份包含现任国会成员姓名、生日、政府部门和政党的CSV文件，并将其存储在此[Gist](https://gist.github.com/rlvaugh/35069885b74ca52a63aab217863440e0)中。
- en: For the US population, we’ll use the Census Bureau’s [*Monthly Postcensal Civilian
    Population*](https://www.census.gov/data/tables/time-series/demo/popest/2020s-national-detail.html)
    table for July 2023\. As with the previous dataset, this is public information
    that I’ve saved to a CSV file in this [Gist](https://gist.github.com/rlvaugh/51bcfe65693183da26c38a41402f9094).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 对于美国人口，我们将使用人口普查局的[*月度后普查平民人口*](https://www.census.gov/data/tables/time-series/demo/popest/2020s-national-detail.html)表格，数据截止到2023年7月。与前面的数据集一样，这些是公开信息，我已将其保存到此[Gist](https://gist.github.com/rlvaugh/51bcfe65693183da26c38a41402f9094)的CSV文件中。
- en: Installing Libraries
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装库
- en: 'For this project, we’ll need to install seaborn for plotting and pandas for
    data analysis. You can install these libraries as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个项目，我们需要安装seaborn用于绘图，pandas用于数据分析。你可以按以下方式安装这些库：
- en: 'With conda: `conda install pandas seaborn`'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '使用conda: `conda install pandas seaborn`'
- en: 'With pip: `pip install pandas seaborn`'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '使用pip: `pip install pandas seaborn`'
- en: The Code
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码
- en: The following code was written in JuptyerLab and is described *by cell*.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码在JuptyerLab中编写，并按*单元格*描述。
- en: Importing Libraries
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入库
- en: The secret to extracting values from seaborn KDE plots is to import the matplotlib
    `[Line2D](https://matplotlib.org/stable/api/_as_gen/matplotlib.lines.Line2D.html)`
    class, which gives us access to the coordinates of the points along the curve.
    In addition, we'll use matplotlib `[patches](https://matplotlib.org/stable/api/_as_gen/matplotlib.patches.Patch.html)`
    to plot rectangles delineating the legal age limits for serving in the House and
    the Senate. A `patch` is a matplotlib `artist` object with a *face color* and
    an *edge color*.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 从seaborn KDE图中提取值的秘诀是导入matplotlib的`[Line2D](https://matplotlib.org/stable/api/_as_gen/matplotlib.lines.Line2D.html)`类，这使我们可以访问曲线上的点坐标。此外，我们将使用matplotlib的`[patches](https://matplotlib.org/stable/api/_as_gen/matplotlib.patches.Patch.html)`绘制矩形，以标示出众议院和参议院的合法年龄限制。`patch`是一个具有*面色*和*边缘颜色*的matplotlib
    `artist`对象。
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Loading the Congressional Dataset and Calculating Ages
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加载国会数据集并计算年龄
- en: The following code loads the Congressional dataset and calculates each member’s
    age as of 8/25/2023\. It first converts this reference date, along with the DataFrame’s
    “Birthday” column, to `datetime` format using pandas’ `to_datetime()` method.
    It then uses these "date aware" formats to generate an "Age" column by subtracting
    the two values, extracting the number of days, and then converting the days to
    years by dividing by 365.25.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码加载国会数据集并计算每位成员截至2023年8月25日的年龄。它首先将参考日期和数据框的“生日”列转换为`datetime`格式，使用pandas的`to_datetime()`方法。然后利用这些“日期感知”格式生成“年龄”列，通过减去两个值、提取天数，然后将天数除以365.25转换为年份。
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/7b1fbe1b24f243cb2f262d4ae828b8fa.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7b1fbe1b24f243cb2f262d4ae828b8fa.png)'
- en: Loading the Population Dataset
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加载人口数据集
- en: Next, we load the population data as a pandas DataFrame.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将人口数据加载为pandas DataFrame。
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/a676cbc9bce9cf989040bd312832e0b4.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a676cbc9bce9cf989040bd312832e0b4.png)'
- en: Finding the Median Age of the US Population
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 计算美国人口的中位年龄
- en: Here’s a fun problem. How do you find the median age of the US population? That
    is, how do you relate the median population value to an age?
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个有趣的问题。你如何找到美国人口的中位年龄？也就是说，你如何将中位人口值与年龄关联起来？
- en: 'The key is to plot the population’s *cumulative distribution* against *age*.
    Since you must be 25 years old or older to serve in Congress, we’ll first filter
    the DataFrame to those ages. Here’s the concept:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 关键是将人口的*累计分布*绘制与*年龄*进行对比。由于你必须年满25岁或以上才能在国会服务，我们首先将数据框过滤到这些年龄。这里是这个概念：
- en: '![](../Images/96c53fc6c818547e4929ca4631776f70.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/96c53fc6c818547e4929ca4631776f70.png)'
- en: Finding the median age for the US population > 24 years old using a cumulative
    distribution plot
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 使用累计分布图找到美国人口中年龄大于24岁的中位年龄
- en: 'And here’s the commented code:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这是带有注释的代码：
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Making a Simple Stacked KDE Plot
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 制作一个简单的堆叠KDE图
- en: Before we annotate the plot, let’s see what we get “out of the box,” so to speak.
    We’ll layer multiple KDE plots in the same figure. These will include one for
    the House of Representatives, one for the Senate, and one for the US population
    over the age of 24.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们注释图表之前，让我们看看“开箱即用”的效果如何。我们将在同一图形中分层多个 KDE 图。这些包括众议院一个、参议院一个，以及一个针对 24 岁以上美国人口的图。
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/8a339ce721ecc41304e8d77de4c0c43c.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8a339ce721ecc41304e8d77de4c0c43c.png)'
- en: A simple layered KDE plot
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简单的分层 KDE 图
- en: An important parameter for the `kdeplot()` method is `common_norm`, which stands
    for "common normalization."
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '`kdeplot()` 方法的一个重要参数是 `common_norm`，代表“公共归一化”。'
- en: According to seaborn’s [documentation](https://seaborn.pydata.org/generated/seaborn.kdeplot.html),
    “When `common_norm` is set to `True`, all the KDE curves will be normalized together
    using the same scale. This can be useful when you want to compare the overall
    distribution shapes of different groups. It’s particularly helpful when you have
    multiple groups with different sample sizes or different ranges of values, as
    it ensures that the curves are directly comparable in terms of their shapes.”
  id: totrans-48
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 根据 seaborn 的 [文档](https://seaborn.pydata.org/generated/seaborn.kdeplot.html)，“当
    `common_norm` 设置为 `True` 时，所有 KDE 曲线将使用相同的比例进行归一化。这在你想比较不同组的总体分布形状时非常有用。尤其是在你有多个组具有不同样本量或不同值范围时，它确保了曲线在形状上可以直接比较。”
- en: Note that, in this case, the normalization is only applied to the House and
    Senate curves, as the population data is plotted separately from a different DataFrame.
    This is because we need to *weigh* the ages by their population value, as our
    population dataset doesn’t include a distinct age value for each individual.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在这种情况下，归一化仅应用于众议院和参议院曲线，因为人口数据是从不同的 DataFrame 中单独绘制的。这是因为我们需要*加权*年龄数据，以适应我们的人口数据集没有每个人的独特年龄值的情况。
- en: Finding the Median Age Values for the House and Senate
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 寻找众议院和参议院的中位年龄值
- en: While attractive, the previous plot makes the reader work too hard. The x-axis
    needs more resolution, and it would be nice to know where the mean or median value
    falls on the curves. Since both houses of Congress include a few very old members
    that can skew the mean, we’ll focus on the median value.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管前面的图表很吸引人，但它让读者工作过于繁重。x 轴需要更多的分辨率，而且知道均值或中位数值在曲线上的位置会更好。由于两院都包括一些非常年长的成员，这可能会影响均值，因此我们将关注中位数值。
- en: First, we’ll need to find the median values for each branch (we found the population
    median previously). And since we want to programmatically find the plot coordinates
    for the annotations, we’ll make a *separate* DataFrame for each *branch*. This
    will make it easier to extract the curve data.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要为每个分支找到中位值（我们之前已经找到了人口中位值）。由于我们希望程序化地找到注释的图表坐标，我们将为每个*分支*创建一个*单独的* DataFrame。这将使得提取曲线数据更容易。
- en: '[PRE5]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Plotting and Annotating the KDE
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绘制和注释 KDE
- en: The following commented code draws and annotates the plot. Our goal here is
    to find the (x, y) coordinates for the median values on the curves so that we
    can programmatically provide these coordinates when drawing lines and posting
    text. This makes the code adaptable to any changes in the input data.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 以下注释代码绘制并注释了图表。我们的目标是找到曲线上的 (x, y) 坐标，以便我们在绘制线条和发布文本时可以程序化地提供这些坐标。这使得代码能够适应输入数据的任何变化。
- en: So how do we do this? Well, when seaborn makes a KDE plot, it returns a matplotlib
    `[axes](https://matplotlib.org/stable/api/axes_api.html)` object. This type of
    object has a `[get_lines()](https://matplotlib.org/stable/api/_as_gen/matplotlib.axes.Axes.get_lines.html)`
    method that returns a *list of lines* contained by that object. These lines are
    `[Line2D](https://matplotlib.org/stable/api/_as_gen/matplotlib.lines.Line2D.html)`
    objects that have a `get_data()` method that returns the line data as (x, y) pairs.
    Because these coordinates may not include the exact values we want, we'll use
    NumPy's `[interp()](https://numpy.org/doc/stable/reference/generated/numpy.interp.html)`
    method to interpolate the values.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 那么我们该怎么做呢？当 seaborn 创建一个 KDE 图时，它会返回一个 matplotlib `[axes](https://matplotlib.org/stable/api/axes_api.html)`
    对象。这个类型的对象具有一个 `[get_lines()](https://matplotlib.org/stable/api/_as_gen/matplotlib.axes.Axes.get_lines.html)`
    方法，返回一个包含该对象的*线段列表*。这些线段是 `[Line2D](https://matplotlib.org/stable/api/_as_gen/matplotlib.lines.Line2D.html)`
    对象，具有一个 `get_data()` 方法，该方法以 (x, y) 对的形式返回线数据。因为这些坐标可能不包括我们想要的确切值，我们将使用 NumPy
    的 `[interp()](https://numpy.org/doc/stable/reference/generated/numpy.interp.html)`
    方法来插值这些值。
- en: '[PRE6]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/0fb799e6652aa4882838b4fa936a49fa.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0fb799e6652aa4882838b4fa936a49fa.png)'
- en: The annotated KDE plots
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 注释过的KDE图
- en: In the previous code, we plotted the population KDE *outside* the loop as the
    age data had to be weighted by its population value.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的代码中，我们将人口KDE图绘制在循环*之外*，因为年龄数据需要按其人口值加权。
- en: We also *manually* annotated the colored rectangles and text for the age limits
    as the programmatic solution is not very appealing. “Hardwiring” these annotations
    is acceptable as this information is *fixed* and won’t change with changes to
    the input data.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还*手动*标注了年龄限制的彩色矩形和文本，因为程序化的解决方案不是很吸引人。将这些注释“硬编码”是可以接受的，因为这些信息是*固定的*，不会随着输入数据的变化而改变。
- en: Summary
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this project, we programmatically extracted the (x, y) coordinates of points
    along a KDE curve and used them to annotate a plot. The result was a much cleaner-looking
    plot where vertical marker lines terminate when they intersect the curve, and
    text annotations begin at that intersection point. This makes the code much more
    flexible, as these annotations will automatically update with any changes to the
    input data.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，我们通过编程提取了KDE曲线上点的(x, y)坐标，并用它们来标注图表。结果是图表看起来更加整洁，其中垂直标记线在与曲线相交时终止，而文本注释从该交点开始。这使得代码更加灵活，因为这些注释会随着输入数据的变化自动更新。
- en: We also used a *cumulative distribution* to find the median value of a pandas
    DataFrame column that corresponds to the median value of a related column. We
    had to do this as our age-versus-population input data was binned.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还使用了*累积分布*来找到一个pandas DataFrame列的中位数值，该值对应于相关列的中位数值。我们必须这样做，因为我们的年龄与人口输入数据已被分箱。
- en: Thanks!
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 谢谢！
- en: Thanks for reading and please follow me for more *Quick Success Data Science*
    projects in the future.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读，请关注我以获取更多未来的*快速成功数据科学*项目。
