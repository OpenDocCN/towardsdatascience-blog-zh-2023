["```py\n# Data Handling\nimport numpy as np\nimport pandas as pd\n\n# Data visualization Libraries\nimport plotly.express as px\nimport plotly.io as pio\nimport plotly.graph_objects as go\npio.renderers.default='notebook'\n```", "```py\n# Temperature Patterns - Weather Stations:\nplot = px.scatter(df, x='datetime',\n                  y='AirTempCelsius',\n                  color='station_key')\nplot.update_layout(\n    title={'text': \"Temperature Recordings over Time\\\n                    <br><sup>Whitefish N, MT and Harding Cutoff,\\\n                    SD Weather Stations</sup>\",\n           'xanchor': 'left',\n           'yanchor': 'top',\n           'x': 0.1},\n    xaxis_title='',\n    yaxis_title='Temperature in Celsius',\n    legend_title_text='Weather Station:')\nplot.show()\n```", "```py\n# Generate plot:\nplot = px.histogram(df, x='AirTempCelsius',\n                    color='station_key', barmode='overlay')\nplot.update_layout(\n    title={'text': \"Number of Occurrences of Each Temperature (Celsius)\\\n                    <br><sup>Whitefish N, MT and Harding Cutoff, SD\\\n                    Weather Stations</sup>\",\n           'xanchor': 'left',\n           'yanchor': 'top',\n           'x': 0.1},\n    xaxis_title='Temperature in Celsius',\n    yaxis_title='Count',\n    legend_title_text='Weather Station:')\nplot.show()\n```", "```py\n# Set datetime column as pandas datetime data:\ndf['datetime'] = pd.to_datetime(df['datetime'])\n```", "```py\nprint(\"Dataframe 'datetime' Column Value:\", df['datetime'][0])\nprint(\"Extracting Day Number:\", df['datetime'].dt.day[0])\nprint(\"Extracting Day Name:\", df['datetime'].dt.day_name()[0])\n```", "```py\nprint(\"Dataframe 'datetime' Column Value:\", df['datetime'][0])\nprint(\"Extracting Month Number:\", df['datetime'].dt.month[0])\nprint(\"Extracting Month Name:\", df['datetime'].dt.month_name()[0])\n```", "```py\n# Day name column (example: Sunday):\ndf['DayName'] = df['datetime'].dt.day_name()\n# Day number column:\ndf['Day'] = df['datetime'].dt.day\n# Month name column (example: February):\ndf['MonthName'] = df['datetime'].dt.month_name()\n# Month number column:\ndf['Month'] = df['datetime'].dt.month\n# Year:\ndf['Year'] = df['datetime'].dt.year\n# Julian date:\ndf['JulianDate'] = df['datetime'].dt.strftime('%j')\n```", "```py\n# Classify seasons:\ndf['Season'] = ['Winter' if x == 'December' else\n                'Winter' if x == 'January' else\n                'Winter' if x == 'February' else\n                'Spring' if x == 'March' else\n                'Spring' if x == 'April' else\n                'Spring' if x == 'May' else\n                'Summer' if x == 'June' else\n                'Summer' if x == 'July' else\n                'Summer' if x == 'August' else\n                'Fall' if x == 'September' else\n                'Fall' if x == 'October' else\n                'Fall' if x == 'November' else\n                'NaN' for x in df['MonthName']]\n```", "```py\n# Show one station with seasons plotted:\nplot = px.scatter(df[df['station_key'] == 'Whitefish N'],\n                  x='datetime', y='AirTempCelsius', color='Season',\n                  color_discrete_sequence=[\"#3366cc\", \"#109618\", \"#d62728\",\n                  \"#ff9900\"])\nplot.update_layout(\n    title={'text': \"Temperature Patterns by Season\\\n                    <br><sup>Data from Whitefish N, MT Weather Station</br>\",\n           'xanchor': 'left',\n           'yanchor': 'top',\n           'x': 0.1},\n    xaxis_title='',\n    yaxis_title='Temperature in Celsius',\n    legend_title_text='Season:')\nplot.show()\n```", "```py\n# Generate plot:\nplot = px.histogram(df, x='AirTempCelsius', color='station_key',\n                    barmode='overlay', facet_row='Season')\nplot.update_layout(title={'text': \"Temperature Recordings, 2019 to 2022\\\n                                  <br><sup>Whitefish N, MT and Harding \\\n                                  Cutoff, SD Weather Stations</sup>\",\n                          'xanchor': 'left',\n                          'yanchor': 'top',\n                          'x': 0.1}, legend_title_text='Month',\n                   xaxis_title='Recorded Temperature')\nplot.update_layout(legend_title_text='Weather Station:')\nplot.update_yaxes(title=\"\")\nplot.for_each_annotation(lambda a: a.update(text=a.text.split(\"=\")[-1]))\nplot.show()\n```", "```py\n# Prep Data:\ndf1 = df[df['Year'] == 2020]\ndf1.sort_values(by=['JulianDate'], inplace=True)\n\n# Generate plot:\nplot = px.line(df1[df1['Season'] == 'Summer'],\n               y=\"AirTempCelsius\", x=\"JulianDate\", color=\"station_key\",\n               color_discrete_sequence=[\"#3366cc\", \"#d62728\"])\nplot.update_layout(title={'text': \"Summer Temperature Recordings, 2020\\\n                                  <br><sup>Whitefish N, MT and Harding \\\n                                  Cutoff, SD Weather Stations</sup>\",\n                          'xanchor': 'left',\n                          'yanchor': 'top',\n                          'x': 0.1}, legend_title_text='Month',\n                   xaxis_title='Julian Date',\n                   yaxis_title='Temperature in Degrees Celsius')\nplot.update_layout(legend_title_text='Weather Station:')\nplot.show()\n```", "```py\n# Generate Plot:\nplot = px.line(df[(df.datetime.dt.year == 2020) &\n                  ((df.datetime.dt.month == 6) |\n                   (df.datetime.dt.month == 7) |\n                   (df.datetime.dt.month == 8))],\n               x=df[(df.datetime.dt.year == 2020) &\n                    ((df.datetime.dt.month == 6) |\n                     (df.datetime.dt.month == 7) |\n                     (df.datetime.dt.month == 8))].datetime.dt.strftime('%j'),\n               y=df[(df.datetime.dt.year == 2020) &\n                    ((df.datetime.dt.month == 6) |\n                     (df.datetime.dt.month == 7) |\n                     (df.datetime.dt.month == 8))].AirTempCelsius,\n               color=\"station_key\",\n               color_discrete_sequence=[\"#d62728\", \"#3366cc\"])\nplot.update_layout(title={'text': \"Summer Temperature Recordings, 2020\\\n                                  <br><sup>Whitefish N, MT and Harding \\\n                                  Cutoff, SD Weather Stations</sup>\",\n                          'xanchor': 'left',\n                          'yanchor': 'top',\n                          'x': 0.1}, legend_title_text='Month',\n                   xaxis_title='Julian Date',\n                   yaxis_title='Temperature in Degrees Celsius')\nplot.update_layout(legend_title_text='Weather Station:')\nplot.show()\n```"]