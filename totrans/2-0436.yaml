- en: Building a LAS File Data Explorer App with Streamlit
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/building-a-las-file-data-explorer-app-with-streamlit-347289e0d000](https://towardsdatascience.com/building-a-las-file-data-explorer-app-with-streamlit-347289e0d000)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Exploring Log ASCII Standard files using Python and Streamlit
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://andymcdonaldgeo.medium.com/?source=post_page-----347289e0d000--------------------------------)[![Andy
    McDonald](../Images/df11d647be032aeb3d31852affb33a64.png)](https://andymcdonaldgeo.medium.com/?source=post_page-----347289e0d000--------------------------------)[](https://towardsdatascience.com/?source=post_page-----347289e0d000--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----347289e0d000--------------------------------)
    [Andy McDonald](https://andymcdonaldgeo.medium.com/?source=post_page-----347289e0d000--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----347289e0d000--------------------------------)
    ·14 min read·Feb 3, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c6d1f16ce8d9cc0c63a877d3f82c55e0.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
- en: Photo by [Carlos Muza](https://unsplash.com/fr/@kmuza?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: LAS files are standard and simple ways to transfer and store well-log and/or
    petrophysical data within the oil and gas industry. The format was developed in
    the late 80s and early 90s by the [Canadian Well Logging Society](https://www.cwls.org/products/#products-las)
    as a way to standardise and organise digital log information. LAS files are essentially
    structured ASCII files that contain multiple sections with information about the
    well and data from it; as such, they can be readily viewed within a typical text
    editor like Notepad or TextEdit.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '[Streamlit](https://streamlit.io/) is one of my favourite Python libraries
    for creating quick and easy to use dashboards or interactive tools. It is also
    great if you want to create an app where you or the end user doesn’t have to worry
    about code. Therefore, within this article, we are going to see how we can use
    Streamlit to build a data explorer app for LAS files.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: If you want to see the full app in action, check out the short video below.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: 'Or explore the source code on GitHub:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://github.com/andymcdgeo/las_explorer?source=post_page-----347289e0d000--------------------------------)
    [## GitHub - andymcdgeo/las_explorer: LAS Explorer is a Streamlit web app that
    allows you to understand…'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: LAS Explorer is a Streamlit web app that allows you to understand the contents
    of a LAS file. Also includes the ability…
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: github.com](https://github.com/andymcdgeo/las_explorer?source=post_page-----347289e0d000--------------------------------)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: 'If you want to see how to work with LAS files in Python, then the following
    articles may be of interest:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: '[Loading and Displaying Well Log Data from LAS Files With Python](https://medium.com/@andymcdonaldgeo/loading-and-displaying-well-log-data-b9568efd1d8)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Python 加载和显示 LAS 文件中的井日志数据](https://medium.com/@andymcdonaldgeo/loading-and-displaying-well-log-data-b9568efd1d8)'
- en: '[Loading Multiple Well Log LAS Files Using Python](https://medium.com/towards-data-science/loading-multiple-well-log-las-files-using-python-39ac35de99dd)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Python 加载多个井日志 LAS 文件](https://medium.com/towards-data-science/loading-multiple-well-log-las-files-using-python-39ac35de99dd)'
- en: Installing and Setting Up Streamlit
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和设置 Streamlit
- en: The first part of our app will involve importing the required libraries and
    modules.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应用的第一部分将涉及导入所需的库和模块。
- en: 'These are:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是：
- en: '[Streamlit](https://streamlit.io/)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Streamlit](https://streamlit.io/)'
- en: '[lasio](https://lasio.readthedocs.io/en/latest/) for loading las files'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[lasio](https://lasio.readthedocs.io/en/latest/) 用于加载 las 文件'
- en: '[missingno](https://github.com/ResidentMario/missingno) which is used for identifying
    missing data'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[missingno](https://github.com/ResidentMario/missingno) 用于识别缺失数据'
- en: '[pandas](https://pandas.pydata.org/) for working with dataframes'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[pandas](https://pandas.pydata.org/) 用于处理数据框'
- en: '[StringIO](https://docs.python.org/3/library/io.html) from io to handle content
    from the las file'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[StringIO](https://docs.python.org/3/library/io.html) 来自 io 以处理 las 文件中的内容'
- en: '[plotly](https://plotly.com/) for displaying interactive plots'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[plotly](https://plotly.com/) 用于显示交互式图表'
- en: After importing these libraries, we can add a line at the end to set the page
    width to be a full page and change the app's title in the browser window.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 导入这些库后，我们可以在最后添加一行代码，将页面宽度设置为全页，并更改浏览器窗口中的应用标题。
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To check Streamlit is working, we can run the following command in the terminal:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 为了检查 Streamlit 是否正常工作，我们可以在终端中运行以下命令：
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Which will open up a browser window with a blank Streamlit app.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打开一个浏览器窗口，显示一个空白的 Streamlit 应用。
- en: '![](../Images/ce56ef96bf1ce36e5180e244365386a2.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ce56ef96bf1ce36e5180e244365386a2.png)'
- en: Blank Streamlit app. Image by the author.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 空白的 Streamlit 应用。图片来源：作者。
- en: Loading LAS Files with st.file_uploader
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 st.file_uploader 加载 LAS 文件
- en: The first piece of code we are going to add to this app is a call to `st.sidebar`.
    This will create a column on the left-hand side of the app, and we will use this
    to store our navigation menu and file uploader widget.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要添加到应用中的第一段代码是调用 `st.sidebar`。这将创建一个位于应用左侧的列，我们将用它来存储我们的导航菜单和文件上传小部件。
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We can use `st.sidebar.write` to add a few messages and instructions for the
    end user. In this example, we will keep it relatively simple with the app name
    and a message on how to get started.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 `st.sidebar.write` 添加一些消息和说明给最终用户。在这个示例中，我们将保持相对简单，提供应用名称和如何开始的消息。
- en: Once the sidebar is in place, we can start implementing the file uploader piece
    of our code.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦侧边栏到位，我们可以开始实现文件上传器的代码部分。
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: To do this, we need to call upon `st.file_uploader`. We will also restrict the
    file types to just .las files. To make this more useful, we may want to include
    the capitalised version of the extension as well.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们需要调用 `st.file_uploader`。我们还将限制文件类型为 .las 文件。为了更实用，我们可能还希望包含大写版本的扩展名。
- en: Next, we will call upon the load data function, which we will come to shortly.
    This function will be set up to return `las_file` as a [lasio](https://lasio.readthedocs.io/en/latest/)
    las file object and `well_data` as dataframe containing the well log measurements.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将调用 load data 函数，稍后我们将详细介绍。该函数将设置为返回 `las_file` 作为一个 [lasio](https://lasio.readthedocs.io/en/latest/)
    las 文件对象，以及 `well_data` 作为包含井日志测量数据的数据框。
- en: Following that, we will check if we have a las file. If it is set to `None`
    then nothing will happen; however, if the file has been loaded successfully through
    the `load_data` function, then it will not be `None` and therefore execute the
    code underneath it.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 随后，我们将检查是否有 las 文件。如果设置为 `None`，则不会发生任何事情；然而，如果文件通过 `load_data` 函数成功加载，则它不会是
    `None`，因此会执行下面的代码。
- en: The code within the if function essentially displays a coloured callout followed
    by the well name of the las file.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: if 函数中的代码本质上显示了一个彩色标注，后跟 las 文件的井名称。
- en: Before we run the Streamlit app, we need to create the `load_data` function.
    This will allow us to read the data and generate the lasio las file object and
    pandas dataframe.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行 Streamlit 应用之前，我们需要创建 `load_data` 函数。这将允许我们读取数据并生成 lasio las 文件对象和 pandas
    数据框。
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: When we run the Streamlit LAS Data Explorer app, we will see our sidebar on
    the left along with the file uploader widget.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们运行 Streamlit LAS 数据浏览器应用时，我们将看到左侧的侧边栏以及文件上传小部件。
- en: '![](../Images/e007770c957c92d2c3c6141ad56f5809.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e007770c957c92d2c3c6141ad56f5809.png)'
- en: After adding the sidebar to the LAS File Data Explorer Streamlit app. Image
    by the author.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: We can then click on Browse Files and search for a las file.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: Once that file has been loaded, we will see the green callout saying the file
    was loaded successfully, followed by the well name contained within the file.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/51bdd3a62af01037c708cb0bb5093e0c.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
- en: Successful LAS file read with the LAS Data Explorer Streamlit app. Image by
    the author.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: Adding a Home Page to the Streamlit App
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When someone launches the LAS Data Explorer app for the first time, it would
    be great to display the app's name and a brief description of what it does.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: When we rerun the app, we will now see our home page. This could be expanded
    to include extra instructions, details about the app and how to get in touch if
    there is a problem.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d1dd6594adfb16e968d7d2fea2d2b605.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
- en: LAS Data Explorer Streamlit App after creating a Home page. Image by the author.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: When building a Streamlit app, it is good practice to split code up into functions
    and call them at the appropriate time. This makes the code more modular and easier
    to navigate.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: For our home page, we will place the above code into a function called `home()`.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Adding Navigation Radio Buttons
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When building Streamlit apps, it is very easy to fall into the trap of continuously
    adding sections one after the other resulting in a long scrollable web page.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: One way to make Streamlit apps more navigable is by adding a navigation menu.
    This allows you to split content over multiple pages.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: One way to achieve this is to use a series of radio buttons, which, when toggled,
    will change the content displayed on the main part of the app.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: First, we need assign a title for our navigation section, and then we have to
    call upon `st.sidebar.radio` and pass in a list of pages we want the user to be
    able to navigate to.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: When we run the app, we will see that we now have a navigation menu represented
    by the radio buttons.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6c2ca513cc7fcdf569e9f48ebab903d9.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
- en: LAS Data Explorer after adding in a radio button navigation menu. Image by the
    author.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: At the moment, if you click on the buttons, nothing will happen.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: We need to tell Streamlit what to do when a selection is made.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: This is achieved by creating an if/elif statement like the one below. When an
    option is selected, then a specific function will be called.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: For example, if the user has Home selected, then the home function that was
    created earlier will be displayed.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Let’s begin implementing the other sections to start displaying some content.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: Retrieving Well Header Information from LAS Files
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Within each las file, there is a section at the top that contains information
    about the well. This includes Well Name, Country, Operator and much more.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3b4294ef005e261350ab4b7d7fbd200f.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
- en: Example of a LAS file header from the Volve field. Image by the author.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: To read this information, we will create a new function called `header` and
    then loop through each row within the header.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 为了读取这些信息，我们将创建一个名为`header`的新函数，然后遍历头部中的每一行。
- en: To prevent errors when the user clicks on the Header Information radio button,
    we need to check if a las file object has been created during the loading process.
    Otherwise, we present the user with an error.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 为了防止用户点击头信息单选按钮时出现错误，我们需要检查在加载过程中是否已经创建了las文件对象。否则，我们将向用户展示错误。
- en: Then for each header item, we will display the descriptive name ( `item.descr`
    ), the mnemonic ( `item.mnemonic` ) and the associated value ( `item.value` ).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，对于每个头项，我们将显示描述名称（`item.descr`）、助记符（`item.mnemonic`）和相关值（`item.value`）。
- en: '[PRE9]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: When the app is rerun, and the Header Information page is selected from the
    Navigation menu, we will now see the relevant well information.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 当应用程序重新运行，并从导航菜单中选择头信息页面时，我们现在会看到相关的井信息。
- en: '![](../Images/71b233ef386247fe9b6f0ddae9f4160c.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/71b233ef386247fe9b6f0ddae9f4160c.png)'
- en: Well log header information from a LAS file. Image by the author.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 来自LAS文件的井日志头信息。图片由作者提供。
- en: Retrieving Well Log Measurement Information
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检索井日志测量信息
- en: After the header information has been successfully read, we next want to look
    at what well log measurements are contained within the las file.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在成功读取头信息后，我们接下来要查看las文件中包含了哪些井日志测量。
- en: 'To do this, we will create a simple function called `raw_data` which will:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们将创建一个简单的函数，名为`raw_data`，它将：
- en: go through each measurement within the las file and write out it’s mnemonic,
    unit and description
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 遍历las文件中的每个测量，写出它的助记符、单位和描述
- en: provide a count of the total number of measurements present
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供测量总数的统计
- en: create a statistical summary table for each measurement using the `describe`
    method from pandas
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用pandas的`describe`方法为每个测量创建一个统计摘要表
- en: create a data table with all of the raw values
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个包含所有原始值的数据表
- en: This is a lot for a single function to do and could benefit from being tidied
    up, but for this simple app, we will keep it all together.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一个单一的函数来说，这个工作量很大，可能需要整理一下，但对于这个简单的应用程序，我们将把它们保持在一起。
- en: '[PRE10]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: When the Streamlit app is rerun, we will see all of the information relating
    to the well log measurements.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 当Streamlit应用重新运行时，我们将看到所有与井日志测量相关的信息。
- en: First, we have the well measurement information and associated statistics.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们有井测量信息和相关统计数据。
- en: '![](../Images/7fb388fbacd25a036973c9e73523bfa7.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7fb388fbacd25a036973c9e73523bfa7.png)'
- en: LAS Well Log Measurement information. Image by the author.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: LAS井日志测量信息。图片由作者提供。
- en: Followed by the raw data values.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 然后是原始数据值。
- en: '![](../Images/c585ed15258da4b1499594eada13a222.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c585ed15258da4b1499594eada13a222.png)'
- en: LAS Well Log Measurement information. Image by the author.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: LAS井日志测量信息。图片由作者提供。
- en: Visualising Well Log Data With Plotly in Streamlit
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Plotly在Streamlit中可视化井日志数据
- en: As with any dataset, it can be hard to get a handle on what the data looks like
    by analysing the raw numbers. To take things to the next level, we can use interactive
    plots.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 与任何数据集一样，仅通过分析原始数字很难掌握数据的外观。为了进一步深入，我们可以使用交互式图表。
- en: These will make it easier for the end user to get a better understanding of
    the data.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这些将使最终用户更容易更好地理解数据。
- en: The following code generates multiple plots on a Streamlit page. It is all contained
    within a single function for ease of use within this app. Remember, each function
    represents a page within the LAS Data Explorer app.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码在Streamlit页面上生成多个图表。所有内容都包含在一个函数中，以便在这个应用程序中使用。请记住，每个函数代表LAS数据探索器应用中的一个页面。
- en: 'To save having to use multiple pages, the code below will generate three expanders
    for three different plots: a line plot, a histogram and a scatter plot (also known
    as a cross plot within Petrophysics).'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免使用多个页面，下面的代码将为三种不同的图生成三个展开器：折线图、直方图和散点图（在岩石物理学中也称为交叉图）。
- en: '[PRE11]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Once the above code has been implemented, we can see that we have the LAS File
    Visualisation page with three expandable boxes.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦上述代码实现后，我们可以看到LAS文件可视化页面，包含三个可展开的框。
- en: '![](../Images/b2277d27b9176219e7f258401c21e79d.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b2277d27b9176219e7f258401c21e79d.png)'
- en: Within geoscience and petrophysics, we often plot data on line plots — often
    referred to as log plots. The y-axis often represents the depth along a wellbore
    and the x-axis representing the data we want to visualise. This allows us to visualise
    trends and patterns within these measurements with depth easily.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在地球科学和岩石物理学中，我们经常在折线图上绘制数据——通常称为日志图。y 轴通常表示井眼深度，而 x 轴表示我们希望可视化的数据。这使我们可以轻松地可视化这些测量数据随深度的趋势和模式。
- en: Within the Log Plot section, we can select specific columns from the dataframe
    and display them in the interactive Plotly chart.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在日志图部分，我们可以从数据框中选择特定列，并在交互式 Plotly 图表中显示它们。
- en: '![](../Images/fa2de2c2f4c290464a6c3795e6f31432.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fa2de2c2f4c290464a6c3795e6f31432.png)'
- en: Well log plots created using Plotly and displayed in the LAS Data Explorer Streamlit
    app. Image by the author.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Plotly 创建的井日志图，并显示在 LAS 数据探索者 Streamlit 应用中。图片由作者提供。
- en: '[Histograms show the data distribution and allow us to contain a large amount
    of data within a small and concise plot.](/using-histograms-to-visualise-well-log-data-16142e2c7f81)'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '[直方图显示数据分布，并允许我们在一个小而简洁的图表中包含大量数据。](/using-histograms-to-visualise-well-log-data-16142e2c7f81)'
- en: Within the Histogram section, we have a few basic options. We can select a column
    from the dataframe to display and decide whether we want that displayed linearly
    or logarithmically.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在直方图部分，我们有一些基本选项。我们可以从数据框中选择一列进行显示，并决定是否以线性或对数方式显示。
- en: Finally, we have the option to use the colour picker from Streamlit. [This allows
    you to choose the colour for the histogram](https://medium.com/p/7929973393ea)
    and can enhance your visualisation for presentations and reports.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以使用 Streamlit 的颜色选择器。[这允许你为直方图选择颜色](https://medium.com/p/7929973393ea)，可以增强你在演示和报告中的可视化效果。
- en: '![](../Images/dc03b53c1ec75ba918ff8c6971dffdb4.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dc03b53c1ec75ba918ff8c6971dffdb4.png)'
- en: Histogram created using Plotly within the LAS Data Explorer Streamlit app. Image
    by the author.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Plotly 在 LAS 数据探索者 Streamlit 应用中创建的直方图。图片由作者提供。
- en: '[Scatter plots (crossplots) are commonly used within petrophysics and data
    science to compare two variables.](https://medium.com/towards-data-science/scatterplot-creation-and-visualisation-with-matplotlib-in-python-7bca2a4fa7cf)
    From this type of graph, we can understand if there is a relationship between
    the two variables and how strong that relationship is.'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '[散点图（交叉图）通常在岩石物理学和数据科学中用于比较两个变量。](https://medium.com/towards-data-science/scatterplot-creation-and-visualisation-with-matplotlib-in-python-7bca2a4fa7cf)
    从这种图表中，我们可以了解两个变量之间是否存在关系以及这种关系的强度。'
- en: Within the Crossplot section of the Data Visualisation page, we can select x
    and y axis variables, as well as a third variable, to colour code the data.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据可视化页面的交叉图部分，我们可以选择 x 轴和 y 轴变量，以及一个第三变量，用于数据的颜色编码。
- en: Finally, we can set the x and y axes to linear scale or logarithmic scale.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以将 x 轴和 y 轴设置为线性刻度或对数刻度。
- en: '![](../Images/348f7963bd9b23693ef3cc99d207eaeb.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/348f7963bd9b23693ef3cc99d207eaeb.png)'
- en: Scatter plot / crossplot created using Plotly within the LAS Data Explorer Streamlit
    app. Image by the author.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Plotly 在 LAS 数据探索者 Streamlit 应用中创建的散点图/交叉图。图片由作者提供。
- en: Identifying Missing Data within Well Log Measurements
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 识别井日志测量中的缺失数据
- en: Missing data is one of the most common data quality issues we face when working
    with datasets. It can be missing for a multitude of reasons ranging from sensor
    failure to improper and possible careless data management.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 缺失数据是我们在处理数据集时面临的最常见的数据质量问题之一。它可能因多种原因而缺失，从传感器故障到不当和可能粗心的数据管理。
- en: When working with datasets, it is essential that missing data is identified
    and the root cause behind that data being missing is understood. A proper understanding
    of why data is missing is key to developing pragmatic solutions on how to deal
    with the missing data, especially as many machine learning algorithms are incapable
    of handling missing values.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理数据集时，识别缺失数据并理解数据缺失的根本原因是至关重要的。对数据缺失原因的正确理解是开发务实解决方案的关键，尤其是许多机器学习算法无法处理缺失值。
- en: Within Python, we could use the textual data summaries provided by the pandas
    `describe` function. Whilst this is useful, it often helps to visualise missing
    data values on graphs. This allows us to easily identify patterns and relationships
    that may not be obvious with text based summaries.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 中，我们可以使用 pandas 的 `describe` 函数提供的文本数据摘要。虽然这很有用，但在图表中可视化缺失数据值通常更有帮助。这使我们能够轻松识别可能在基于文本的摘要中不明显的模式和关系。
- en: To create interactive plots of data completeness, we can leverage the [Plotly
    library](https://plotly.com/). The code below sets up the Missing Data Visualisation
    page within the LAS Data Explorer app.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建数据完整性的交互式图表，我们可以利用 [Plotly 库](https://plotly.com/)。下面的代码设置了 LAS 数据浏览器应用中的缺失数据可视化页面。
- en: First, we check if we have a valid las file; if we do, we start creating the
    page with some explanatory text.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们检查是否有有效的 LAS 文件；如果有，我们开始创建页面并添加一些说明文本。
- en: Next, we give the user an option to select all data within the dataframe or
    select specific columns. To the right of this, we allow the user to change the
    colour of the bars in the charts.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们为用户提供一个选项，以选择数据框中的所有数据或选择特定列。在这旁边，我们允许用户更改图表中条形的颜色。
- en: Then we move onto to plotting the data based on the user selection.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们继续根据用户选择绘制数据。
- en: '[PRE12]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: When we visit this page of the LAS Data Explorer, we are presented with an interactive
    Plotly chart, as seen below. if the user has selected “All Data”, then all the
    columns will show.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们访问 LAS 数据浏览器的这一页时，我们会看到一个互动的 Plotly 图表，如下所示。如果用户选择了“所有数据”，则所有列都会显示出来。
- en: '![](../Images/05ec22356a228b728c275d467e1467f0.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/05ec22356a228b728c275d467e1467f0.png)'
- en: Using a Streamlit to display all columns from a pandas dataframe in a plotly
    chart. Image by the author.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Streamlit 在 Plotly 图表中显示 pandas 数据框的所有列。图片由作者提供。
- en: If a user has selected “Custom Selection” then they can select the columns directly
    from the dataframe.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户选择了“自定义选择”，则他们可以直接从数据框中选择列。
- en: '![](../Images/f58d870090025380fb3466a42ec3e98a.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f58d870090025380fb3466a42ec3e98a.png)'
- en: Using a Streamlit multiselect to select columns from a dataframe and display
    them in a plotly chart. Image by the author.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Streamlit 多选框从数据框中选择列，并在 Plotly 图表中显示它们。图片由作者提供。
- en: 'Check out my article below if you want to see other ways of identifying missing
    values using Python:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想查看使用 Python 识别缺失值的其他方法，请查看下面的文章：
- en: '[Using the missingno Python Library to Identify and Visualise Missing Data
    Prior to Machine Learning](/using-the-missingno-python-library-to-identify-and-visualise-missing-data-prior-to-machine-learning-34c8c5b5f009)'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 missingno Python 库识别和可视化机器学习前的缺失数据](/using-the-missingno-python-library-to-identify-and-visualise-missing-data-prior-to-machine-learning-34c8c5b5f009)'
- en: Summary
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Within this article, we have seen how to build an app using Streamlit and Python
    for exploring LAS files. Whilst this is a basic app, it can provide a useful alternative
    to looking at raw LAS files within a text editor. Additional functionality could
    be added to edit the files or convert them to another standard format. The possibilities
    are endless!
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们展示了如何使用 Streamlit 和 Python 构建一个用于探索 LAS 文件的应用程序。虽然这是一个基础应用，但它可以作为查看原始
    LAS 文件的一种有用替代方案。还可以添加更多功能来编辑文件或将其转换为其他标准格式。可能性无穷无尽！
- en: Data Used Within This Tutorial
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本教程中使用的数据
- en: The data used within this tutorial is a subset of the Volve Dataset that Equinor
    released in 2018\. Full details of the dataset, including the licence, can be
    found at the link below.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程中使用的数据是 Equinor 于 2018 年发布的 Volve 数据集的一个子集。数据集的完整详细信息，包括许可证，可以在下面的链接中找到。
- en: '[](https://www.equinor.com/energy/volve-data-sharing?source=post_page-----347289e0d000--------------------------------)
    [## Volve field data set'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '[## Volve 田野数据集](https://www.equinor.com/energy/volve-data-sharing?source=post_page-----347289e0d000--------------------------------)'
- en: Equinor has offically made a complete set of data from a North Sea oil field
    available for research, study and…
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Equinor 已正式提供了一整套来自北海油田的数据，用于研究、学习等……
- en: www.equinor.com](https://www.equinor.com/energy/volve-data-sharing?source=post_page-----347289e0d000--------------------------------)
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '[www.equinor.com](https://www.equinor.com/energy/volve-data-sharing?source=post_page-----347289e0d000--------------------------------)'
- en: 'The Volve data license is based on CC BY 4.0 license. Full details of the license
    agreement can be found here:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: Volve 数据许可证基于 CC BY 4.0 许可证。许可证协议的完整详细信息可以在这里找到：
- en: '[https://cdn.sanity.io/files/h61q9gi9/global/de6532f6134b9a953f6c41bac47a0c055a3712d3.pdf?equinor-hrs-terms-and-conditions-for-licence-to-data-volve.pdf](https://cdn.sanity.io/files/h61q9gi9/global/de6532f6134b9a953f6c41bac47a0c055a3712d3.pdf?equinor-hrs-terms-and-conditions-for-licence-to-data-volve.pdf=)'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://cdn.sanity.io/files/h61q9gi9/global/de6532f6134b9a953f6c41bac47a0c055a3712d3.pdf?equinor-hrs-terms-and-conditions-for-licence-to-data-volve.pdf](https://cdn.sanity.io/files/h61q9gi9/global/de6532f6134b9a953f6c41bac47a0c055a3712d3.pdf?equinor-hrs-terms-and-conditions-for-licence-to-data-volve.pdf=)'
- en: '*Thanks for reading. Before you go, you should definitely subscribe to my content
    and get my articles in your inbox.* [***You can do that here!***](https://andymcdonaldgeo.medium.com/subscribe)*Alternatively,
    you can* [***sign up for my newsletter***](https://fabulous-founder-2965.ck.page/2ca286e572)
    *to get additional content straight into your inbox for free.*'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '*感谢阅读。在离开之前，你应该肯定地订阅我的内容，并将我的文章发送到你的收件箱。* [***你可以在这里做到这一点！***](https://andymcdonaldgeo.medium.com/subscribe)*另外，你还可以*
    [***注册我的通讯***](https://fabulous-founder-2965.ck.page/2ca286e572) *以便免费获取额外的内容。*'
- en: '*Secondly, you can get the full Medium experience and support thousands of
    other writers and me by signing up for a membership. It only costs you $5 a month,
    and you have full access to all of the fantastic Medium articles, as well as the
    chance to make money with your writing.*'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '*其次，你可以通过注册会员，获得完整的Medium体验，支持我和其他成千上万的作家。每月只需花费5美元，你即可全面访问所有精彩的Medium文章，还能有机会通过写作赚钱。*'
- en: '*If you sign up using* [***my link***](https://andymcdonaldgeo.medium.com/membership)***,***
    *you will support me directly with a portion of your fee, and it won’t cost you
    more. If you do so, thank you so much for your support.*'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你使用* [***我的链接***](https://andymcdonaldgeo.medium.com/membership)***，***
    *你将直接通过你的费用的一部分支持我，而且不会额外花费你更多。如果你这样做了，非常感谢你的支持。*'
