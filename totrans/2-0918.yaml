- en: Forget about SQLite, Use DuckDB Instead — And Thank Me Later
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 忘掉 SQLite，改用 DuckDB——然后感谢我
- en: 原文：[https://towardsdatascience.com/forget-about-sqlite-use-duckdb-instead-and-thank-me-later-df76ee9bb777](https://towardsdatascience.com/forget-about-sqlite-use-duckdb-instead-and-thank-me-later-df76ee9bb777)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/forget-about-sqlite-use-duckdb-instead-and-thank-me-later-df76ee9bb777](https://towardsdatascience.com/forget-about-sqlite-use-duckdb-instead-and-thank-me-later-df76ee9bb777)
- en: Introduction to DuckDB and its Python integration
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DuckDB 及其 Python 集成介绍
- en: '[](https://polmarin.medium.com/?source=post_page-----df76ee9bb777--------------------------------)[![Pol
    Marin](../Images/a4f69a96717d453db9791f27b8f85e86.png)](https://polmarin.medium.com/?source=post_page-----df76ee9bb777--------------------------------)[](https://towardsdatascience.com/?source=post_page-----df76ee9bb777--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----df76ee9bb777--------------------------------)
    [Pol Marin](https://polmarin.medium.com/?source=post_page-----df76ee9bb777--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://polmarin.medium.com/?source=post_page-----df76ee9bb777--------------------------------)[![Pol
    Marin](../Images/a4f69a96717d453db9791f27b8f85e86.png)](https://polmarin.medium.com/?source=post_page-----df76ee9bb777--------------------------------)[](https://towardsdatascience.com/?source=post_page-----df76ee9bb777--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----df76ee9bb777--------------------------------)
    [Pol Marin](https://polmarin.medium.com/?source=post_page-----df76ee9bb777--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----df76ee9bb777--------------------------------)
    ·8 min read·Mar 16, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----df76ee9bb777--------------------------------)
    ·8分钟阅读·2023年3月16日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/c7283a6d2ba1b4298e72e882280c3f4b.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c7283a6d2ba1b4298e72e882280c3f4b.png)'
- en: Photo by [Krzysztof Niewolny](https://unsplash.com/@epan5?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源 [Krzysztof Niewolny](https://unsplash.com/@epan5?utm_source=medium&utm_medium=referral)
    于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: 'We, programmers, tend to default to SQLite when we want to work on local environments
    with an embedded database. While that works fine most of the time, it’s like using
    a bicycle to travel 100 km away: probably not the best option.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们程序员往往在需要在本地环境中使用嵌入式数据库时默认选择 SQLite。虽然大多数时候这工作得很好，但就像骑自行车旅行100公里：可能不是最佳选择。
- en: Introducing DuckDB.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 介绍 DuckDB。
- en: I first learned about DuckDB in September 2022, while in PyCon Spain at Granada.
    Now, after 6 months of using it, I can’t live without it. And I want to contribute
    to the community by providing my fellow programmers and data-related professionals
    an intro to this fantastic analytical database system.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我第一次了解到 DuckDB 是在 2022 年 9 月，在格拉纳达的 PyCon 西班牙上。现在，经过 6 个月的使用，我已经离不开它了。我希望通过为我的程序员和数据相关专业人士提供对这个出色分析数据库系统的介绍来回馈社区。
- en: 'In this post, I’ll go over the next main points:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我将讨论以下主要点：
- en: 'Intro to DuckDB: what it is, why should you use it and when.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DuckDB简介：它是什么，为什么你应该使用它以及何时使用。
- en: DuckDB integration into Python.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DuckDB 集成到 Python 中。
- en: Get ready!
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 准备好！
- en: 'If you can’t see the whole story, consider using my referral link to have unlimited
    access to all Medium’s stories: [https://medium.com/@polmarin/membership](https://medium.com/@polmarin/membership)'
  id: totrans-15
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果你无法看到整个故事，考虑使用我的推荐链接以获得对所有 Medium 故事的无限访问：[https://medium.com/@polmarin/membership](https://medium.com/@polmarin/membership)
- en: What is DuckDB?
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是 DuckDB？
- en: 'If you check DuckDB’s website[1], this is the first thing you see on their
    home page: *DuckDB is an in-process SQL OLAP database management system.*'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查看 DuckDB 的官网[1]，你会在首页看到的第一件事是：*DuckDB 是一个内嵌 SQL OLAP 数据库管理系统。*
- en: Let’s try to decipher this sentence because it contains relevant info there.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试解读这句话，因为其中包含相关信息。
- en: '*In-process SQL* means that DuckDB’s features run in your application, not
    an external process to which your application connects. In other words: there
    is no client sending instructions nor a server to read and process them. SQLite
    works the same way, while PostgreSQL, MySQL…, do not.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*内嵌SQL* 意味着 DuckDB 的功能在你的应用程序中运行，而不是在你的应用程序连接的外部进程中。换句话说：没有客户端发送指令，也没有服务器来读取和处理它们。SQLite
    的工作方式相同，而 PostgreSQL、MySQL 等则不然。'
- en: '*OLAP* stands for OnLine Analytical Processing, and Microsoft defines it as
    a technology that organizes large business databases and supports complex analysis.
    It can be used to perform complex analytical queries without negatively affecting
    transactional systems[2]. Another example of an OLAP database management system
    is Teradata.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: So basically, DuckDB is a great option if you’re looking for a serverless data
    analytics database management system. I highly suggest you check the fantastic
    peer-reviewed paper from Dr. Mark Raasveldt and Dr. Hannes Mühleisen [3]— the
    two most important DuckDB developers—to see the gap DuckDB is trying to fill.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, it’s a relational database management system (DBMS) that supports
    SQL. That’s why we’re comparing it with other DBMSs that share the same characteristics
    like SQLite or PostgreSQL.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: Why DuckDB?
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We now know DuckDB’s role in the database industry. But why should we choose
    it above many other options we might have for a given project?
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: A one-size-fits-all doesn’t exist when it comes to database management systems
    and DuckDB is no exception. We’ll go over some of its features to help you decide
    when it’s a good idea for you to use it or not.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: 'Long story short, it’s a high-performance tool. As shown on their GitHub page[4]:
    “*It is designed to be fast, reliable, and easy to use.*” Getting into more detail…'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: '**It’s created to support analytical query workloads** (OLAP). The way they
    do it is by vectorizing query executions (columnar-oriented), while other DBMSs
    mentioned previously (SQLite, PostgreSQL…) process each row sequentially. This
    is why its performance increases.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**DuckDB adopts SQLite’s best feature: simplicity**. Simplicity in installation,
    and embedded in-process operation is what DuckDB developers chose for this DBMS
    after seeing SQLite’s success because of those features.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Furthermore, DuckDB has no external dependencies, or server software to install,
    update, or maintain. As said, it’s completely embedded and this has the additional
    advantage of high-speed data transfer to and from the database.
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Skilled creators**. They are a research group that created it to create a
    stable and mature database system. This is done through intensive and thorough
    testing, with a test suit that currently contains millions of queries, adapted
    from test suites of SQLite, PostgreSQL, and MonetDB.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**It’s complete**. It supports complex queries in SQL, it provides transactional
    guarantees (the ACID properties you’ve surely heard of), it supports secondary
    indexes to speed up queries… And, what’s more important, it is deeply integrated
    into Python and R for efficient interactive data analysis.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It also provides APIs for C, C++, Java…
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Free and Open Source**. It can’t get better than that.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are the official advantages.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: 'But there are more, and I want to highlight one more: **DuckDB doesn’t have
    to be a Pandas substitute**. They can work hand in hand and, if you are a Pandas
    fan like me, you can make efficient SQL on Pandas with DuckDB.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 但还有更多，我想强调一点：**DuckDB不一定要替代Pandas**。它们可以协同工作，如果你像我一样是Pandas的粉丝，你可以在Pandas中使用DuckDB进行高效的SQL操作。
- en: This is amazing.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这真是太棒了。
- en: You can find more complete explanations on DuckDB’s website[1].
  id: totrans-37
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可以在DuckDB的网站[1]上找到更完整的解释。
- en: When to use DuckDB?
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么时候使用DuckDB？
- en: It really will depend on your preferences but let’s go back to the paper its
    co-founders released [3] (I highly recommend you read it, it’s only 4 pages long
    and it’s pure gold).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这确实取决于你的个人偏好，但让我们回到其共同创始人发布的论文[3]（我强烈推荐你阅读，它只有4页，内容非常宝贵）。
- en: 'They explain that there is a clear need for embeddable analytical data management.
    SQLite is embedded but it’s too slow if we want to use it for exhaustive data
    analysis. They keep on with “this needs stems from two main sources: Interactive
    data analysis and “edge” computing.”'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 他们解释说，嵌入式分析数据管理有着明显的需求。SQLite是嵌入式的，但如果我们想用它进行全面的数据分析，它太慢了。他们继续说：“这种需求来自两个主要来源：交互式数据分析和‘边缘’计算。”
- en: 'So these are the top-2 use cases for DuckDB:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这是DuckDB的前两大用例：
- en: '**Interactive data analysis**. Most data professionals now use R or Python
    libraries like *dplyr* or *Pandas* in their local environments to work with the
    data they retrieve from a database. DuckDB offers the possibility of using SQL
    efficiency for our local development without risking performance. And you can
    reap these benefits without having to give up your favorite coding language (more
    on that later).'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交互式数据分析**。大多数数据专业人士现在在本地环境中使用R或Python库，如*dplyr*或*Pandas*来处理他们从数据库中检索的数据。DuckDB提供了在本地开发中利用SQL效率的可能性，而不会影响性能。你可以在不放弃你喜欢的编程语言的情况下享受这些好处（稍后会详细介绍）。'
- en: '**Edge computing**. Using Wikipedia''s definition “Edge computing is a distributed
    computing paradigm that brings computation and data storage closer to the sources
    of data.” [5] Using an embedded DBMS, it can’t get much closer than that!'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**边缘计算**。根据维基百科的定义，“边缘计算是一种分布式计算范式，将计算和数据存储更接近数据源。” [5] 使用嵌入式DBMS，它可以更接近这一点！'
- en: 'DuckDB can be installed and used in different environments: Python, R, Java,
    node.js, Julia, C++… Here, we’ll focus on Python and you’ll shortly see how easy
    it is to use.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: DuckDB可以在不同的环境中安装和使用：Python、R、Java、node.js、Julia、C++……在这里，我们将重点关注Python，你很快会看到它的使用是多么简单。
- en: Using DuckDB with Python (an intro)
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用DuckDB与Python（入门）
- en: 'Open your terminal and navigate to the desired directory, because we’re about
    to start. Create a new virtual environment — or not — and install DuckDB:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 打开你的终端并导航到所需的目录，因为我们马上就要开始了。创建一个新的虚拟环境——或者不创建——并安装DuckDB：
- en: '[PRE0]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '*Remove or update the version if you want another one.*'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你需要另一个版本，请删除或更新。*'
- en: Onto the cool stuff now. To make things more interesting, I’ll be using real
    data I found on Kaggle about Spotify’s most streamed songs of all time[6]. And
    I’ll work on a typical Jupyter Notebook.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在进入有趣的部分。为了使事情更有趣，我将使用我在Kaggle上找到的关于Spotify最流行歌曲的真实数据[6]。我将使用典型的Jupyter Notebook进行操作。
- en: 'Licensing: [CC0: Public Domain](https://creativecommons.org/publicdomain/zero/1.0/)'
  id: totrans-50
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '许可证： [CC0: 公共领域](https://creativecommons.org/publicdomain/zero/1.0/)'
- en: 'As the data we’ve obtained comes as two CSV files — Features.csv and Streams.csv
    — , we need to create a new database and load them in:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们获得的数据是两个CSV文件——Features.csv和Streams.csv——，我们需要创建一个新数据库并将其加载：
- en: '[PRE1]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Just like that, we’ve created a brand new database, added two new tables, and
    filled them with all the data. All with 4 simple lines of code (5 if we take the
    import into account). Cool huh?
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样，我们创建了一个全新的数据库，添加了两个新表，并用所有数据填充它们。仅用4行简单的代码（如果考虑到导入，则为5行）。很酷吧？
- en: 'Let’s show the content from the streams table:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们展示一下流媒体表中的内容：
- en: '[PRE2]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/1b14f38369e905b3b71441e75cd25fdc.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1b14f38369e905b3b71441e75cd25fdc.png)'
- en: Visualization of the top-100 streamed songs of all time— Screenshot by the author.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 所有时间流媒体前100首歌曲的可视化— 作者截图。
- en: 'Let’s start doing some analytics tasks. For example, I want to know how many
    songs are there in the top 100 that are pre-2000\. Here’s one way to do it:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始进行一些分析任务。例如，我想知道前100首歌曲中有多少首是在2000年之前的。这是其中一种方法：
- en: '[PRE3]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/af4c8403ac158fe51d4fe5355108773a.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/af4c8403ac158fe51d4fe5355108773a.png)'
- en: Songs in the top-100 streamed of all time, from before the year 2000 — Screenshot
    by the author.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 所有时间流媒体前100首歌曲中的2000年之前的歌曲 — 作者截图。
- en: 'I mentioned before how easy it is to work with DuckDB and Pandas at the same
    time. Here’s a way to do the same but using Pandas:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我之前提到过，使用 DuckDB 和 Pandas 同时工作是多么简单。这里有一种使用 Pandas 做到相同的方式：
- en: '[PRE4]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: All I’m doing is converting into a DataFrame the initial query and then applying
    the filter the Pandas way. The result is the same, but what about their performance?
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我所做的只是将初始查询转换成 DataFrame，然后以 Pandas 的方式应用过滤器。结果是一样的，但它们的性能如何呢？
- en: '[PRE5]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Can you see that? The operation was rather easy: we were applying a simple
    filter to a 100-row table. But the execution time using Pandas is almost 4 times
    as much if we compare it with the DuckDB implementation.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 你看到了吗？操作相当简单：我们只对一个 100 行的表应用了一个简单的过滤器。但如果我们将其与 DuckDB 实现进行比较，使用 Pandas 的执行时间几乎是其
    4 倍。
- en: Imagine if we had tried a more exhaustive analytical operation… The improvement
    could be huge.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，如果我们尝试一个更为详尽的分析操作……改进可能会非常巨大。
- en: I think it doesn’t make much more sense to put more examples because this introduction
    to DuckDB would then be transformed into an SQL intro. And this is not what I
    want.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为再提供更多的示例意义不大，因为这将使 DuckDB 的介绍变成 SQL 入门。这并不是我想要的。
- en: But feel free to play with any dataset you might have and start using SQL on
    your DuckDB database. You’ll quickly see its benefits.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 但请随意使用你可能拥有的任何数据集，并开始在 DuckDB 数据库上使用 SQL。你会很快看到它的好处。
- en: 'To finish with this brief intro, let’s export the last result (pre-2000 songs)
    as a parquet file — because they are always a better alternative to traditional
    CSVs. Again, this will be extremely simple:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 为了结束这个简短的介绍，让我们将最后的结果（2000 年前的歌曲）导出为 parquet 文件——因为它们始终是比传统 CSV 更好的替代品。同样，这将是非常简单的：
- en: '[PRE6]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: All I’ve done is put the previous query within the brackets and DuckDB just
    copies the query’s result to the `old_songs.parquet` file.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我所做的只是将之前的查询放在括号内，DuckDB 只会将查询结果复制到 `old_songs.parquet` 文件中。
- en: '*Et voilà.*'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '*瞧瞧。*'
- en: Conclusion
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: DuckDB has been a life changer for me and I think it could also be for many
    people out there.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: DuckDB 对我来说是一次生活的改变，我认为它也可以对很多人产生影响。
- en: I hope this post was entertaining and informative. It wasn’t meant to be a tutorial
    or guide so that’s why I haven’t gotten a lot into code examples, but I believe
    there’s enough to understand the main points.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 希望这篇文章既有趣又有信息量。它并不打算成为教程或指南，所以我没有详细讲解代码示例，但我相信已经有足够的信息来理解主要观点。
- en: '[PRE7]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'If you’d like to support me further, consider subscribing to Medium’s Membership
    through the link you find below: it won’t cost you any extra penny but it’ll help
    me through this process. Thanks a lot!'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想进一步支持我，请考虑通过下面的链接订阅 Medium 的会员：这不会花费你额外的钱，但将帮助我完成这个过程。非常感谢！
- en: '[](https://medium.com/@polmarin/membership?source=post_page-----df76ee9bb777--------------------------------)
    [## Join Medium with my referral link — Pol Marin'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@polmarin/membership?source=post_page-----df76ee9bb777--------------------------------)
    [## 使用我的推荐链接加入 Medium — Pol Marin'
- en: Read every story from Pol Marin (and thousands of other writers on Medium).
    Your membership fee directly supports Pol…
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阅读 Pol Marin 的每一篇故事（以及 Medium 上其他成千上万的作者的故事）。你的会员费用直接支持 Pol……
- en: medium.com](https://medium.com/@polmarin/membership?source=post_page-----df76ee9bb777--------------------------------)
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: medium.com](https://medium.com/@polmarin/membership?source=post_page-----df76ee9bb777--------------------------------)
- en: Resources
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 资源
- en: '[1] [DuckDB](https://duckdb.org/)'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] [DuckDB](https://duckdb.org/)'
- en: '[2] [Online analytical processing (OLAP) — Azure Architecture Center](https://learn.microsoft.com/en-us/azure/architecture/data-guide/relational-data/online-analytical-processing)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] [在线分析处理 (OLAP) — Azure 架构中心](https://learn.microsoft.com/en-us/azure/architecture/data-guide/relational-data/online-analytical-processing)'
- en: '[3] Mark Raasveldt and Hannes Mühleisen. 2019\. DuckDB: an Embeddable Analytical
    Database. In 2019 International Conference on Management of Data (SIGMOD ’19),
    June 30-July 5, 2019, Amsterdam, Netherlands. ACM, New York, NY, USA, 4 pages.
    [https://doi.org/10.1145/3299869.3320212](https://doi.org/10.1145/3299869.3320212)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '[3] Mark Raasveldt 和 Hannes Mühleisen. 2019\. DuckDB: an Embeddable Analytical
    Database. In 2019 International Conference on Management of Data (SIGMOD ’19),
    June 30-July 5, 2019, Amsterdam, Netherlands. ACM, New York, NY, USA, 4 pages.
    [https://doi.org/10.1145/3299869.3320212](https://doi.org/10.1145/3299869.3320212)'
- en: '[4] [DuckDB — GitHub](https://github.com/duckdb/duckdb)'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '[4] [DuckDB — GitHub](https://github.com/duckdb/duckdb)'
- en: '[5] [Edge computing — Wikipedia](https://en.wikipedia.org/wiki/Edge_computing)'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[5] [边缘计算 — 维基百科](https://en.wikipedia.org/wiki/Edge_computing)'
- en: '[6] [Most Streamed Songs (of all time) — Kaggle](https://www.kaggle.com/datasets/amaanansari09/most-streamed-songs-all-time)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[6] [历史上最流行的歌曲 — Kaggle](https://www.kaggle.com/datasets/amaanansari09/most-streamed-songs-all-time)'
