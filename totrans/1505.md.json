["```py\npip install -U \"pandas==2.0.0rc0\" pyarrow datatable polars\n```", "```py\nimport datatable as dt\nimport pandas as pd\nimport polars as pl\n```", "```py\ndt.__version__\n```", "```py\n'1.0.0'\n```", "```py\npd.__version__\n```", "```py\n'2.0.0rc0'\n```", "```py\npl.__version__\n```", "```py\n'0.16.14'\n```", "```py\nfrom pathlib import Path\n\ndata = Path(\"data\")\ndata_csv = data / \"census_data.csv\"\ndata_parquet = data / \"census_data.parquet\"\n```", "```py\nimport datatable as dt\nimport pandas as pd\n\ndf = dt.fread(\"data.csv\").to_pandas()\n```", "```py\nimport time\n\nimport datatable as dt\nimport pandas as pd\nimport polars as pl\n\n# Define a DataFrame to store the results\nresults_df = pd.DataFrame(\n    columns=[\"Function\", \"Library\", \"Runtime (s)\"]\n)\n```", "```py\ndef timer(results: pd.DataFrame):\n    \"\"\"\n    A decorator to measure the runtime of the passed function. \n    It stores the runtime, the function name, and the passed \n    function's \"library\" parameter into the `results` DataFrame \n    as a single row.\n    \"\"\"\n```", "```py\n# Task 1: Reading CSVs\n@timer(results_df)\ndef read_csv(path, library):\n    if library == \"pandas\":\n        return pd.read_csv(path, engine=\"pyarrow\")\n    elif library == \"polars\":\n        return pl.read_csv(path)\n    elif library == \"datatable\":\n        return dt.fread(str(path))\n```", "```py\n# Task 2: Writing to CSVs\n@timer(results_df)\ndef write_to_csv(df, path, library):\n    ...\n\n# Task 3: Reading to Parquet\n@timer(results_df)\ndef read_parquet(path, library):\n    ...\n\n# Task 4: Writing to Parquet\n@timer(results_df)\ndef write_to_parquet(df, path, library):\n    ...\n\n# Task 5: Sort\n@timer(results_df)\ndef sort(df, column, library):\n    ...\n\n# Task 6: Groupby\n@timer(results_df)\ndef groupby(df, library):\n    ...\n```", "```py\nfrom pathlib import Path\n\n# Define the file paths\ndata = Path(\"data\")\ndata_csv = data / \"census_data.csv\"\ndata_parquet = data / \"census_data.parquet\"\n\n# libraries = [\"pandas\", \"polars\", \"datatable\"]\nl = \"datatable\"\n\n# Task 3/4\ndf = read_parquet(data_parquet, library=l)\nwrite_to_parquet(df, data_parquet, library=l)\n\n# Task 1/2\ndf = read_csv(data_csv, library=l)\nwrite_to_csv(df, data_csv, library=l)\n\n# Task 5/6\nsort(df, \"age\", library=l)\ngroupby(df, library=l)\n```", "```py\ng = sns.catplot(\n    data=results_df,\n    kind=\"bar\",\n    x=\"Function\",\n    y=\"Runtime (s)\",\n    hue=\"Library\",\n)\n```"]