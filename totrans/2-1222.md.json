["```py\n# Scikit Learn\npip install scikit-learn\n\n# Pandas\npip install pandas\n\n# Matplotlib\npip install matplotlib\n```", "```py\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.cluster import KMeans\n\n# load the customer data into a DataFrame\ncustomer_df = pd.read_csv('customer_data.csv')\n\n# Check the first 5 rows\ncustomer_df.head()\n```", "```py\nplt.scatter(customer_df[\"Age\"], \n            customer_df[\"Spending Score (1-100)\"])\n\nplt.xlabel(\"Age\")\nplt.ylabel(\"Spending Score (1-100)\")\n```", "```py\n plt.scatter(customer_df[\"Age\"], \n            customer_df[\"Annual Income (k$)\"])\n\nplt.xlabel(\"Age\")\nplt.ylabel(\"Annual Income (k$)\")\n```", "```py\nplt.scatter(customer_df[\"Spending Score (1-100)\"], \n            customer_df[\"Annual Income (k$)\"])\n\nplt.xlabel(\"Spending Score (1-100)\")\nplt.ylabel(\"Annual Income (k$)\")\n```", "```py\n# Check for null values\ncustomer_df.isnull().sum()\n```", "```py\nrelevant_cols = [\"Age\", \"Annual Income (k$)\", \"Spending Score (1-100)\"]\n\ncustomer_df = customer_df[relevant_cols]\n```", "```py\nfrom sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\n\nscaler.fit(customer_df)\n\nscaled_data = scaler.transform(customer_df)\n```", "```py\ndef find_best_clusters(df, maximum_K):\n\n    clusters_centers = []\n    k_values = []\n\n    for k in range(1, maximum_K):\n\n        kmeans_model = KMeans(n_clusters = k)\n        kmeans_model.fit(df)\n\n        clusters_centers.append(kmeans_model.inertia_)\n        k_values.append(k)\n\n    return clusters_centers, k_values\n```", "```py\ndef generate_elbow_plot(clusters_centers, k_values):\n\n    figure = plt.subplots(figsize = (12, 6))\n    plt.plot(k_values, clusters_centers, 'o-', color = 'orange')\n    plt.xlabel(\"Number of Clusters (K)\")\n    plt.ylabel(\"Cluster Inertia\")\n    plt.title(\"Elbow Plot of KMeans\")\n    plt.show()\n```", "```py\nclusters_centers, k_values = find_best_clusters(scaled_data, 12)\n\ngenerate_elbow_plot(clusters_centers, k_values)\n```", "```py\nkmeans_model = KMeans(n_clusters = 5)\n\nkmeans_model.fit(scaled_data)\n```", "```py\ncustomer_df[\"clusters\"] = kmeans_model.labels_\n\ncustomer_df.head()\n```", "```py\nplt.scatter(customer_df[\"Spending Score (1-100)\"], \n            customer_df[\"Annual Income (k$)\"], \n            c = customer_df[\"clusters\"])\n```"]