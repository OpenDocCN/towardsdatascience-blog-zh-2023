- en: How to Perform KMeans Clustering Using Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用 Python 执行 KMeans 聚类
- en: 原文：[https://towardsdatascience.com/how-to-perform-kmeans-clustering-using-python-7cc296cec092](https://towardsdatascience.com/how-to-perform-kmeans-clustering-using-python-7cc296cec092)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-perform-kmeans-clustering-using-python-7cc296cec092](https://towardsdatascience.com/how-to-perform-kmeans-clustering-using-python-7cc296cec092)
- en: A complete overview of the KMeans clustering and implementation with Python
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: KMeans 聚类和 Python 实现的完整概述
- en: '[](https://zoumanakeita.medium.com/?source=post_page-----7cc296cec092--------------------------------)[![Zoumana
    Keita](../Images/34a15c1d03687816dbdbc065f5719f80.png)](https://zoumanakeita.medium.com/?source=post_page-----7cc296cec092--------------------------------)[](https://towardsdatascience.com/?source=post_page-----7cc296cec092--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----7cc296cec092--------------------------------)
    [Zoumana Keita](https://zoumanakeita.medium.com/?source=post_page-----7cc296cec092--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://zoumanakeita.medium.com/?source=post_page-----7cc296cec092--------------------------------)[![Zoumana
    Keita](../Images/34a15c1d03687816dbdbc065f5719f80.png)](https://zoumanakeita.medium.com/?source=post_page-----7cc296cec092--------------------------------)[](https://towardsdatascience.com/?source=post_page-----7cc296cec092--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----7cc296cec092--------------------------------)
    [Zoumana Keita](https://zoumanakeita.medium.com/?source=post_page-----7cc296cec092--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----7cc296cec092--------------------------------)
    ·7 min read·Jan 17, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----7cc296cec092--------------------------------)
    ·阅读时间 7 分钟·2023 年 1 月 17 日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: Introduction
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: 'Imagine that you are a Data Scientist working for a retail company and your
    boss requests for the customers’ segmentation into the following groups: low,
    average, medium, or platinum customers based on spending behavior for targeted
    marketing purposes and product recommendations.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你是一家零售公司工作的数据科学家，你的老板要求将客户根据消费行为划分为以下组别：低价值、平均价值、中等价值或铂金客户，以便进行有针对性的市场营销和产品推荐。
- en: '*Knowing that there is no such historical label associated with those customers,
    how is it possible to categorize them?*'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*考虑到这些客户没有任何历史标签，我们如何对他们进行分类？*'
- en: This is where clustering can help. It is an unsupervised machine-learning technique
    used to group unlabeled data into similar categories or clusters.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是聚类能够发挥作用的地方。它是一种无监督机器学习技术，用于将未标记的数据分组到相似的类别或簇中。
- en: This conceptual article will focus more on the K-means clustering approach,
    one of the many techniques in unsupervised machine learning. It will start by
    providing an overview of what K-means clustering is, before walking you through
    a step-by-step implementation in Python using the popular `Scikit-learn` library.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本概念文章将更多地关注 K-means 聚类方法，这是无监督机器学习中众多技术之一。文章将首先概述 K-means 聚类的基本概念，然后带你逐步实现 Python
    中的操作，使用流行的 `Scikit-learn` 库。
- en: What is K-Means Clustering?
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 K-Means 聚类？
- en: The idea behind K-means clustering is to divide a dataset into a specified number
    of clusters (k), where all the points within the same cluster are similar to one
    another, and those in different clusters are different.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: K-means 聚类的基本思想是将数据集划分为指定数量的簇（k），其中同一簇内的所有点彼此相似，而不同簇中的点则不同。
- en: It starts by randomly assigning each data point to a cluster, and then it iteratively
    improves the clusters by moving the data points to the cluster center that is
    closest to them. This logic continues until the cluster assignments stop changing,
    or a maximum number of iterations is reached.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 它的工作原理是随机将每个数据点分配到一个簇中，然后通过将数据点移动到距离它们最近的簇中心来迭代改进这些簇。这一逻辑持续进行，直到簇分配停止变化，或者达到最大迭代次数。
- en: What are the key steps of K-means clustering?
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: K-means 聚类的关键步骤是什么？
- en: 'Below are the five main steps of the k-means algorithm:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 K-means 算法的五个主要步骤：
- en: '![](../Images/2610f3f6f8203ae41401ad9e3af82484.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2610f3f6f8203ae41401ad9e3af82484.png)'
- en: Five main steps in K-Means Clustering (Image by Author)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: K-Means 聚类的五个主要步骤（图像由作者提供）
- en: Below we can see an illustration of K-means where the convergence is reached
    at the 14th iteration.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 下面我们可以看到 K-means 的一个示意图，其中在第 14 次迭代时达到了收敛。
- en: '![](../Images/25ecacf287650a53419b0b12d8514e19.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/25ecacf287650a53419b0b12d8514e19.png)'
- en: Convergence of *k*-means clustering algorithm ([Image from Wikipedia](https://en.wikipedia.org/wiki/K-means_clustering))
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '*k*-均值聚类算法的收敛（[图片来源于维基百科](https://en.wikipedia.org/wiki/K-means_clustering)）'
- en: K-means clustering in Action
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: K-means 聚类的实际应用
- en: Now that we have an understanding of how k-means works, let’s see how to implement
    it in Python.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们了解了 K-means 的工作原理，让我们看看如何在 Python 中实现它。
- en: 'To begin, you need to install the following libraries:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要安装以下库：
- en: '`Pandas` for loading the data frame.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `Pandas` 加载数据框。
- en: '`Matplotlib` for data visualizations.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `Matplotlib` 进行数据可视化。
- en: '`Scikit-learn` to use the `Kmean` algorithm.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `Scikit-learn` 的 `Kmean` 算法。
- en: 'The installation can be performed as follows using `pip`, the Python package
    manager:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 安装可以通过 `pip`，Python 包管理器，按如下方式进行：
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Import libraries and load the data
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入库并加载数据
- en: Now that you have an understanding of the K-means clustering algorithm, let’s
    dive deep. We will be using the [Mall Customer Data](https://www.kaggle.com/datasets/shwetabh123/mall-customers)
    freely available on Kaggle.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你对 K-means 聚类算法有了理解，让我们深入探讨。我们将使用 [Mall Customer Data](https://www.kaggle.com/datasets/shwetabh123/mall-customers)，这是
    Kaggle 上免费提供的数据。
- en: 'It contains for each customer this basic information: `ID`, `Gender`, `Age`,
    `Income`, and `Annual Spending score`'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个客户，它包含这些基本信息：`ID`、`Gender`、`Age`、`Income` 和 `Annual Spending score`
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The previous `.head()` statement should generate the following result:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的 `.head()` 语句应该生成以下结果：
- en: '![](../Images/a00dbf8657271fa7dd5eedb591b3daaf.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a00dbf8657271fa7dd5eedb591b3daaf.png)'
- en: First 5 rows of the Customer data (Image by Author)
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 客户数据的前 5 行（图片由作者提供）
- en: Explore the data
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索数据
- en: Let’s have a quick statistical and visual understanding of the data before any
    further implementation of the algorithm.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在进一步实现算法之前，让我们快速统计和可视化地了解数据。
- en: '[PRE2]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/32ae14bab6a9f4cfd40f6734b0d9b2a7.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/32ae14bab6a9f4cfd40f6734b0d9b2a7.png)'
- en: Scatter Plot of Customers’ Age and their Spending Score (Image By Author)
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 客户年龄与花费得分的散点图（图片由作者提供）
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/2fd0f59d38c739d8217cc03202549c94.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2fd0f59d38c739d8217cc03202549c94.png)'
- en: Scatter Plot of Customers’ Age and their Annual Income (Image By Author)
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 客户年龄与年收入的散点图（图片由作者提供）
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/1926663f6c7994ee5f0573bf86982e92.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1926663f6c7994ee5f0573bf86982e92.png)'
- en: Scatter Plot of Customers’ Spending Score and their Annual Income (Image By
    Author)
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 客户花费得分与年收入的散点图（图片由作者提供）
- en: All these plots have different results, thus leading to different interpretations.
    For instance, the first plot seems to propose two different groups of customers,
    whereas the second one is not obvious and from the last one it looks like there
    are five different groups. This is where Kmeans will be helpful in efficiently
    generating the correct groups/clusters.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些图表有不同的结果，从而导致不同的解释。例如，第一个图表似乎提出了两个不同的客户群体，而第二个图表不明显，最后一个图表显示了五个不同的群体。这时，Kmeans
    将有助于有效生成正确的群体/簇。
- en: Also, we notice from the following result that there are no missing values in
    the data.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们从以下结果中看到数据中没有缺失值。
- en: '[PRE5]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/fb47ca1e71039f263e87d237d118fbc0.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fb47ca1e71039f263e87d237d118fbc0.png)'
- en: No null values in the data (Image by Author)
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 数据中没有空值（图片由作者提供）
- en: Get the relevant columns for clustering
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 获取用于聚类的相关列
- en: 'Not all the columns are relevant for the clustering. In this example, we will
    use the numerical ones: `Age`, `Annual Income`, and `Spending Score`'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 并不是所有的列都与聚类相关。在这个例子中，我们将使用数值列：`Age`、`Annual Income` 和 `Spending Score`
- en: '[PRE6]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Data Transformation
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据转换
- en: Kmeans is sensitive to the measurement units and scales of the data. It is better
    to standardize the data first to tackle this issue. Also, this is a common practice
    prior to implementing any machine learning model.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Kmeans 对数据的测量单位和尺度敏感。最好先对数据进行标准化以解决这个问题。此外，这是在实施任何机器学习模型之前的常见做法。
- en: Basically, the standardization substracts the mean of any feature from the actual
    values of that feature and divides the feature’s standard deviation.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，标准化过程是从实际值中减去任何特征的均值，然后除以该特征的标准差。
- en: 'The process is straightforward and is done as follows in Python:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程很简单，以下是用 Python 完成的步骤：
- en: Use the `StandardScaler` class from the `sklearn.preprocessing` module.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `sklearn.preprocessing` 模块中的 `StandardScaler` 类。
- en: Apply the `fit()` method to compute the mean and standard deviation of the features.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用 `fit()` 方法来计算特征的均值和标准差。
- en: Then finally use the `transform()` to scale the data.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后最终使用 `transform()` 来缩放数据。
- en: '[PRE7]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Determine the best number of cluster
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 确定最佳的簇数量
- en: A clustering model will not be relevant if we fail to identify the correct number
    of clusters to consider. Multiple techniques exist in the literature. We are going
    to consider the Elbow method, which is a heuristic method, and one of the widely
    used to find the optimal number of clusters.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们未能确定正确的簇数量，则聚类模型将无关紧要。文献中存在多种技术。我们将考虑肘部法，它是一种启发式方法，也是寻找最佳簇数量的广泛使用方法之一。
- en: The first helper function creates for each value of `K` the corresponding `KMeans`
    model and saves its inertia along with the actual `K` value.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个辅助函数为每个`K`值创建对应的`KMeans`模型，并保存其惯性值及实际`K`值。
- en: The second function uses those inertias and `K` values to generate the final
    Elbow plot.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个函数利用这些惯性值和`K`值生成最终的肘部图。
- en: '[PRE8]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Now, we can apply the functions to the dataset using a maximum `K` value of
    `12` and get the final result.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以使用最大`K`值为`12`的函数对数据集进行处理，得到最终结果。
- en: '[PRE10]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Below is the final result.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是最终结果。
- en: '![](../Images/ff7dca91c819e23166e404210d4ffc6f.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ff7dca91c819e23166e404210d4ffc6f.png)'
- en: Graphic for finding the optimal number of clusters (Image by Author)
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 寻找最佳簇数量的图表（图片由作者提供）
- en: From the plot, we notice that the cluster inertia decreases as we increase the
    number of clusters. Also the drop the inertia is minimal after `K=5` hence `5`
    can be considered as the optimal number of clusters.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 从图中我们可以看到，随着簇的数量增加，簇的惯性减少。而且，在`K=5`之后，惯性的下降幅度最小，因此`5`可以被认为是最佳的簇数量。
- en: Create the final KMeans model
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建最终的KMeans模型
- en: Once we have determined the optimal number of clusters, we can finally apply
    the KMeans model to that value as follows.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们确定了最佳的簇数量，我们可以按照以下步骤将KMeans模型应用于该值。
- en: '[PRE11]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: We can access the cluster to which each data point belongs by using the `.labels_`
    attribute. Let’s create a new column corresponding to those values.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过使用`.labels_`属性来访问每个数据点所属的簇。让我们创建一个对应这些值的新列。
- en: '[PRE12]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![](../Images/cbb0bca74c9adba6f05e52f62c2c1a08.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cbb0bca74c9adba6f05e52f62c2c1a08.png)'
- en: Final dataset after clustering (Image by Author)
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 聚类后的最终数据集（图片由作者提供）
- en: 'By looking at the first 5 customers, we can observe that the first two and
    last two have been assigned to the first cluster (cluster #1), whereas the third
    customer belongs to the third cluster (cluster #3)'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 通过查看前5个客户，我们可以观察到前两个和最后两个被分配到第一个簇（簇#1），而第三个客户属于第三个簇（簇#3）。
- en: Visualize the clusters
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可视化簇
- en: Now that we have generated the clusters, the final step is to visualize them.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经生成了簇，最后一步是可视化它们。
- en: '[PRE13]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![](../Images/cdd8dad72510c59e60c065afe9baf18b.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cdd8dad72510c59e60c065afe9baf18b.png)'
- en: Clusters visualization (Image by Author)
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 簇可视化（图片由作者提供）
- en: The KMeans clustering seems to generate a pretty good result, and the five clusters
    are well separated from each other, even though there is a slight overlap between
    the purple and the yellow clusters.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: KMeans聚类似乎生成了相当不错的结果，五个簇之间分隔良好，尽管紫色和黄色簇之间有轻微的重叠。
- en: 'The general observation is that :'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 总体观察如下：
- en: Customers on the top left have a low spending score and a high annual income.
    A good marketing strategy could be implemented to target those customers so that
    they can spend more.
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 左上角的客户消费评分较低但年收入较高。可以实施一种好的营销策略来针对这些客户，使他们能够花费更多。
- en: On the other hand, customers on the bottom left have a low annual income and
    also spends less, which makes sense, because they are trying to adjust their spending
    habit to their budget.
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 另一方面，左下角的客户年收入较低，支出也较少，这很合理，因为他们试图根据预算调整消费习惯。
- en: The top right customers are similar to the bottom left, the difference is that
    they have enough budget to spend.
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 右上角的客户与左下角的客户类似，不同之处在于他们有足够的预算来消费。
- en: Finally, the yellow group of customers spends beyond their budget.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最终，黄色组的客户超出了他们的预算。
- en: Conclusion
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Congrats, you have learned how to perform KMeans clustering using Python. I
    hope you’ve gained the required skills to efficiently analyze your unlabeled datasets.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜，你已经学会了如何使用Python进行KMeans聚类。希望你已经掌握了高效分析未标记数据集所需的技能。
- en: If you like reading my stories and wish to support my writing, consider [becoming
    a Medium member](https://zoumanakeita.medium.com/membership). With a $ 5-a-month
    commitment, you unlock unlimited access to stories on Medium.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢阅读我的故事并希望支持我的写作，可以考虑[成为 Medium 会员](https://zoumanakeita.medium.com/membership)。通过每月$5的承诺，你可以无限制地访问
    Medium 上的故事。
- en: Feel free to follow me on [my social networks](https://linktr.ee/zoumana). It
    is always a pleasure to discuss AI, ML, Data Science, NLP, and MLOps stuff!
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 随时在[我的社交网络](https://linktr.ee/zoumana)上关注我。讨论 AI、ML、数据科学、NLP 和 MLOps 相关话题总是一件愉快的事！
- en: The source code of the blog is [available on GitHub](https://github.com/keitazoumana/Medium-Articles-Notebooks/blob/main/KMean_Clustering.ipynb).
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 博客的源代码[可以在 GitHub 上找到](https://github.com/keitazoumana/Medium-Articles-Notebooks/blob/main/KMean_Clustering.ipynb)。
