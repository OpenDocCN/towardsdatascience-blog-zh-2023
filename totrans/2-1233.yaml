- en: The Art of Machine Learning Experimentation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-to-run-machine-learning-experiments-that-really-matter-2ba0a88bc579](https://towardsdatascience.com/how-to-run-machine-learning-experiments-that-really-matter-2ba0a88bc579)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 5 simple strategies to help you get the most out of your ML experiments
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@samuel.flender?source=post_page-----2ba0a88bc579--------------------------------)[![Samuel
    Flender](../Images/390d82a673de8a8bb11cef66978269b5.png)](https://medium.com/@samuel.flender?source=post_page-----2ba0a88bc579--------------------------------)[](https://towardsdatascience.com/?source=post_page-----2ba0a88bc579--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----2ba0a88bc579--------------------------------)
    [Samuel Flender](https://medium.com/@samuel.flender?source=post_page-----2ba0a88bc579--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----2ba0a88bc579--------------------------------)
    ·7 min read·Jan 17, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c90986e2d4e211752d520f635a80b495.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Oudom Pravat](https://unsplash.com/@opravat?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Experimentation is at the heart of the Machine Learning profession. We progress
    because we experiment.
  prefs: []
  type: TYPE_NORMAL
- en: However, not all experiments are equally meaningful. Some create more business
    impact than others. Yet, the art of selecting, executing, and iterating on experiments
    with a focus on impact isn’t usually covered in standard ML curricula.
  prefs: []
  type: TYPE_NORMAL
- en: This creates a lot of confusion. New ML practitioners may get the impression
    that you’re supposed to simply throw everything at a problem and “see what sticks”.
    That’s not how it works.
  prefs: []
  type: TYPE_NORMAL
- en: To be clear, I’m not talking about the statistics of offline and online tests
    and their variants, such as [A/B testing](/the-joy-of-a-b-testing-theory-practice-and-pitfalls-de58acbdb04a).
    I’m talking about what happens before and after the experiment is done. How do
    we select what to experiment on? What do we do if the outcome is negative? How
    do we iterate as efficiently as possible?
  prefs: []
  type: TYPE_NORMAL
- en: More broadly, how can you get the most out of your ML experiments? Here are
    5 simple strategies that you can adopt.
  prefs: []
  type: TYPE_NORMAL
- en: 1 — Know when to experiment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As ML practitioner, there will always be a Million questions on your mind. What
    if we dropped this feature? What if we added that neural network layer? What if
    we used this other library which claims to be faster? The possibilities for spending
    your time are endless.
  prefs: []
  type: TYPE_NORMAL
- en: 'How should you decide what to experiment on, given your limited time budget?
    Here are some practical tips:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Prioritize experiments with the highest expected gain.** Take your time to
    fully understand the existing model and find out where the largest gaps are: that’s
    where you want to focus your efforts. For example, if a model uses just a handful
    of features, the best experiments are probably around feature discovery. If a
    model is a simple logistic regression model, work on model architecture may be
    more promising.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Don’t experiment to learn things that are already known.** Before even thinking
    about launching any experiments, do your research. If there’s a broad consensus
    in the literature about a question you’re trying to answer, then you probably
    don’t need to design an experiment around it. Trust the consensus, unless you
    have strong reasons not to.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Define clear success criteria prior to the experiment.** If you don’t have
    clear success criteria, you’ll never know when you’re done. It’s as simple as
    that. I’ve seen too many models that were never deployed because the launch criteria
    changed after the experiments were run. Avoid this pitfall by defining and communicating
    clear criteria prior to running any experiments.'
  prefs: []
  type: TYPE_NORMAL
- en: 2 — Always start with a hypothesis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Scientific experimentation always starts with a hypothesis. We hypothesize first,
    and then run an experiment that will either confirm it or rule it out. Either
    way, we have gained knowledge. That’s how science works.
  prefs: []
  type: TYPE_NORMAL
- en: A scientific hypothesis has to be a statement, usually with the word “because”
    in it. It can’t be a question. “Which model is better?” Is not an hypothesis.
  prefs: []
  type: TYPE_NORMAL
- en: 'A hypothesis could be:'
  prefs: []
  type: TYPE_NORMAL
- en: “I hypothesize that a BERT model works better for this problem because the context
    of words matters, not just their frequencies”,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “I hypothesize that a neural net works better than logistic regression for this
    problem because the dependencies between the features and the target is non-linear”,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “I hypothesize that adding this set of features will improve model performance
    because they’re also used in that other, related use-case”,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: and so on.
  prefs: []
  type: TYPE_NORMAL
- en: Too often I’ve seen people run large numbers of experiments and present the
    results in long spreadsheets, without a clear conclusion. When asked “Why is this
    number bigger than that number?”, the answer is often some form of ad-hoc guess.
    This is HARKing, hypothesizing after the results are known.
  prefs: []
  type: TYPE_NORMAL
- en: HARKing is the opposite of science, it’s pseudoscience. It’s dangerous because
    it can result in [statistical flukes](/is-my-model-really-better-560e729f81d2),
    results that appear to be real but are simply the result of chance alone (and
    don’t materialize in production).
  prefs: []
  type: TYPE_NORMAL
- en: The scientific method — formulating a hypothesis prior to the experiment — is
    the best guard against fluke discoveries.
  prefs: []
  type: TYPE_NORMAL
- en: 3 — Create tight feedback loops
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Changing one thing in your ML pipeline should be as simple as changing one line
    of code and executing a submit script in a terminal. If it’s much more complicated
    than that, it’s a good idea to first tighten your feedback loop. A tight feedback
    loop simply means that you can test ideas quickly, without any complicated stunts.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some ideas on how to do that:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Automate naming.** Time spent thinking about how to name something (a model,
    a trial, a dataset, an experiment, etc) is time that’s not spent actually experimenting.
    Instead of trying to come up with clever and insightful names such as “BERT_lr0p05_batchsize64_morefeatures_bugfix_v2”,
    automate naming with libraries such as [coolname](https://pypi.org/project/coolname/),
    and instead simply dump the parameters into logfiles.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Log generously.** When logging experimental parameters, err on the side of
    logging more than you need. Logging is cheap, but re-running experiments because
    you don’t remember which knobs you’ve changed is expensive.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Avoid notebooks.** Notebooks are hard to version, hard to share, and mix
    code with logs, making you scroll up and down each time you want to change something.
    They do have their use-cases, for example in exploratory data analysis and visualization,
    but in ML experimentation, scripts are usually better: they can be versioned,
    shared, and create a clear boundary between code and logs, i.e. inputs and outputs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Start small and fail fast.** It’s a good idea run an experiment first on
    a small, sub-sampled, dataset. This allows you to get quick feedback without losing
    too much time, and “fail fast”: if the idea isn’t working, you’ll want to know
    as soon as possible.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Change one thing at a time.** If you change multiple things at the same time,
    you simply can’t know which of these things caused the change in model performance
    that you’re seeing. Make your life easier by changing just one thing at a time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 4 — Avoid “shiny new thing” bias.
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: All too often I’ve seen people getting overly excited about the latest ML research
    paper and trying to force it into their particular use-case. The reality is that
    the problems we tackle in ML production are oftentimes much different from the
    problems studied in ML research.
  prefs: []
  type: TYPE_NORMAL
- en: For example, large language models such as BERT drastically moved the needle
    on academic benchmark datasets such as as GLUE, which contains linguistically
    tricky problems such as
  prefs: []
  type: TYPE_NORMAL
- en: “The trophy did not fit into the suitcase because it was too small. What was
    too small, the trophy or the suitcase?”
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: However, a typical business problem may be as simple as detecting all products
    in an e-commerce catalog that contain batteries, a problem for which a simple
    bag-of-words approach is perfectly fine, and BERT may be overkill.
  prefs: []
  type: TYPE_NORMAL
- en: The antidote to “shiny new thing” bias is, once again, to rigorously follow
    the scientific method and formulate clear hypotheses prior to running any experiments.
  prefs: []
  type: TYPE_NORMAL
- en: “It’s a new model” is not a hypothesis.
  prefs: []
  type: TYPE_NORMAL
- en: 5 — Avoid experiment purgatory
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The outcome of an experiment can be either positive (we confirm the hypothesis)
    or negative (we reject it), and either outcome is equally valuable. Positive outcomes
    improve our production models and hence our business metrics, while negative outcomes
    narrow down our search space.
  prefs: []
  type: TYPE_NORMAL
- en: 'Too many times I’ve seen peers stuck in “experiment purgatory”: the experimental
    outcome was negative (the idea didn’t work), yet instead of wrapping up and moving
    on, they kept trying different modifications of the original idea, perhaps because
    of organizational pressure, perhaps because of “sunk cost” bias, or who knows
    why.'
  prefs: []
  type: TYPE_NORMAL
- en: Experiment purgatory prevents you from moving on to other, more fruitful ideas.
    Accept that negative experimental results are simply part of the process, and
    move on when you need to. It’s how an empirical science is supposed to progress.
  prefs: []
  type: TYPE_NORMAL
- en: 'Coda: always be experimenting'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To summarize,
  prefs: []
  type: TYPE_NORMAL
- en: '**know when to experiment**: prioritize experiments with the most expected
    gain,'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**always start with a hypothesis**: avoid the pseudoscience of HARKing,'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**create tight feedback loops**: make it as easy as possible for you to test
    ideas quickly,'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**avoid “shiny new thing” bias**: remember that success on academic problems
    isn’t necessarily a good indicator for success on business problems,'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**avoid experiment purgatory**: accept that negative results are part of the
    process and move on when you need to.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let me end with a piece of advice that my science manager at Amazon once gave
    me:'
  prefs: []
  type: TYPE_NORMAL
- en: The machines of the best ML scientists are rarely idle.
  prefs: []
  type: TYPE_NORMAL
- en: What he meant was that the best ML scientists always have a backlog of experiments
    that they want to run, which correspond to different hypotheses that they’ve formulated
    and want to test. Whenever their machines are about to sit idle (such as when
    they’re about to take off for the weekend), they simply submit experiments from
    their backlog before they log off.
  prefs: []
  type: TYPE_NORMAL
- en: Machine Learning is an empirical field. More experimentation leads to more knowledge
    and ultimately more expertise. Master the art of impactful ML experimentation,
    and you’re on your way to become an ML expert.
  prefs: []
  type: TYPE_NORMAL
- en: '*👉* [*Follow*](/@samuel.flender) *me on Medium to see more of my content in
    your feed.'
  prefs: []
  type: TYPE_NORMAL
- en: 📫* [*Subscribe*](/subscribe/@samuel.flender) *and get my next post straight
    to your inbox.
  prefs: []
  type: TYPE_NORMAL
- en: 💪* [*Become a Medium member*](/@samuel.flender/membership) *and unlock unlimited
    access.*
  prefs: []
  type: TYPE_NORMAL
- en: '*Still curious about how to maximize your impact as an ML professional? Check
    out the post linked below 👇*'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/the-most-effective-creatives-maximize-leverage-not-hours-worked-20ed0070fdd7?source=post_page-----2ba0a88bc579--------------------------------)
    [## The Most Effective Creatives Maximize Leverage, Not Hours Worked'
  prefs: []
  type: TYPE_NORMAL
- en: 'Forget ‘quiet quitting’: 3 strategies for creating more business impact with
    fewer hours'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/the-most-effective-creatives-maximize-leverage-not-hours-worked-20ed0070fdd7?source=post_page-----2ba0a88bc579--------------------------------)
  prefs: []
  type: TYPE_NORMAL
