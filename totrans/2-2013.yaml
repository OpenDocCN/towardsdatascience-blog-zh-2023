- en: 'The DVC Guide: Data Version Control For All Your Data Science Projects'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/the-dvc-guide-data-version-control-for-all-your-data-science-projects-382d5b5aab00](https://towardsdatascience.com/the-dvc-guide-data-version-control-for-all-your-data-science-projects-382d5b5aab00)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Become familiar with data versioning just like code versioning
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://ipom.medium.com/?source=post_page-----382d5b5aab00--------------------------------)[![Yash
    Prakash](../Images/6cfe15667aa78356af800a4854e9517f.png)](https://ipom.medium.com/?source=post_page-----382d5b5aab00--------------------------------)[](https://towardsdatascience.com/?source=post_page-----382d5b5aab00--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----382d5b5aab00--------------------------------)
    [Yash Prakash](https://ipom.medium.com/?source=post_page-----382d5b5aab00--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----382d5b5aab00--------------------------------)
    ·6 min read·Feb 17, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/aa7bec53d0532117c63382ccdc27c733.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Dmitri Sobolevski](https://unsplash.com/@dbrenan?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: As data scientists, we experiment with different versions of code, models, and
    data. Additionally, we even use version control system like Git to manage our
    code, track versions, move forward and backward in time, and share our code with
    our teams.
  prefs: []
  type: TYPE_NORMAL
- en: The versioning of code is important because it helps reproduce software on a
    much larger scale. The versioning of data is important is because it helps develop
    machine learning models with similar metrics at any given time by any developer
    in your team or organization.
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, it is crucial to version your models as well as data. But veteran
    software engineers will know that using Git for storing large files is a big no.
  prefs: []
  type: TYPE_NORMAL
- en: Not only is Git inefficient with larger files, it is also not a standardized
    environment for storing large data files. Most data is stored in AWS S3 buckets,
    Google Cloud Storage, or any institutional remote storage server.
  prefs: []
  type: TYPE_NORMAL
- en: So how do we version data? Enter DVC.
  prefs: []
  type: TYPE_NORMAL
- en: Introducing DVC
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[DVC](https://dvc.org) is a system for Data Version Control that works hand
    in hand with Git to track our data files. It even has a similar syntax like Git
    so it’s quite easy to learn.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s take a look at some of the great data versioning features of DVC in this
    article. But first, lets make a new project folder and a virtual environment and
    install it as a Python package:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'or if you use *Pipenv*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'You should see an output like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b9b8b57ca2672a94e65aa4b85cf865d9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'installing DVC: image from author'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, lets initialize a git repository. You should see the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c96c7a9a88bfe91f4d0a1c51fd61c5ba.png)'
  prefs: []
  type: TYPE_IMG
- en: 'dvc init: image from author'
  prefs: []
  type: TYPE_NORMAL
- en: Perfect! We can now go ahead into adding our data into DVC.
  prefs: []
  type: TYPE_NORMAL
- en: Adding + committing data into DVC
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'I have one data file in my project’s data folder like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e838e5531e935e153da30b8420c41afd.png)'
  prefs: []
  type: TYPE_IMG
- en: 'folder structure: image from author'
  prefs: []
  type: TYPE_NORMAL
- en: 'To run a size check from the terminal, use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: You'll see the following output as the data file is displayed as 5.2 MB.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/05bbd67a72b64ed0d2c0653052293422.png)'
  prefs: []
  type: TYPE_IMG
- en: 'data file check: image from author'
  prefs: []
  type: TYPE_NORMAL
- en: 'We can now add this data file to DVC. Run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'You’ll see the following output, prompting us to run the git add command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f437384afb28e9508876ad1da4377750.png)'
  prefs: []
  type: TYPE_IMG
- en: 'dvc added data: image from author'
  prefs: []
  type: TYPE_NORMAL
- en: 'We will now run the git add command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Now that we’ve added our new **.dvc** file to our git tracking, we can go ahead
    and commit it to our git:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Setting up a remote storage for our data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We can simply utilize Google Drive for storing our versioned datasets and in
    this tutorial we’re going to do exactly that.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s create a new folder in our Google drive and look at its URL:'
  prefs: []
  type: TYPE_NORMAL
- en: https://drive.google.com/drive/u/0/folders/**cVtFRMoZKxe5iNMd-K_T50Ie**
  prefs: []
  type: TYPE_NORMAL
- en: Highlighted in bold is the ID of the folder that we want to copy to our terminal
    so that DVC can track our data in that newly created Drive folder.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s do that:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Time to commit our changes to git:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Perfect! Now we can push our data to our remote storage.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: It’ll ask for an authentication code or simply take you to perform authentication
    in your browser, simply follow the instructions and you’ll be good to go.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fff1a9ef0fec6025ca9d27e0aaa87659.png)'
  prefs: []
  type: TYPE_IMG
- en: 'remote data in Google drive: image from author'
  prefs: []
  type: TYPE_NORMAL
- en: Pulling remote data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you or your colleagues want to access the remotely stored data, it can be
    done with the **pull** command.
  prefs: []
  type: TYPE_NORMAL
- en: 'But first, let’s delete the data and its cache stored locally so that we can
    pull it from remote:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, pull:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'You’ll see the following output on pulling the file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d17d702a154b18599c940c5ae5b805fb.png)'
  prefs: []
  type: TYPE_IMG
- en: 'pulled file from remote: image from author'
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, once dvc is tracking your data file, pulling it from remote
    storage is a breeze.
  prefs: []
  type: TYPE_NORMAL
- en: Tracking a different version of data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Imagine if we want to track a new version of the same data file, we can easily
    add it to dvc and subsequently, to git again:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, you’ll see a new version of the .dvc file is ready to be committed to
    our git:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/37ec787d81997a55690f131ce9f9c40d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'committing new .dvc file changes: image from author'
  prefs: []
  type: TYPE_NORMAL
- en: Commit the file.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, we can push our latest dataset to remote storage:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Looking at our Google drive, we can see that we have two versions of our data
    stored:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/749828eabe216a3fc9d8c3d32981bace.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Google drive data versions: image from author'
  prefs: []
  type: TYPE_NORMAL
- en: Returning to a different dataset version
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With DVC, it become easy to go back in time to an older version of a dataset.
  prefs: []
  type: TYPE_NORMAL
- en: 'If we look at the git log of our project so far, we see that we have commited
    two **.dvc** file versions to git:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5b94cc24b8689d288570d1a91dd95968.png)'
  prefs: []
  type: TYPE_IMG
- en: Therefore, we must go back to our previous version of the **.dvc** file, as
    that is the one git is tracking.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, simply do a Git checkout to an older commit, like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'Second, do a checkout of dvc:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: You’ll see the following output. We have now restored our data file to its previous
    version!
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/02287fd41f79a4b4cc1f503f2fbd0857.png)'
  prefs: []
  type: TYPE_IMG
- en: 'restoring data to its previous version: image from author'
  prefs: []
  type: TYPE_NORMAL
- en: 'Additionally, if you want to keep these dataset changes, simply commit it to
    git again:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Perfect! Till now, you have learned most of the fundamental data versioning
    features of DVC. Great job!
  prefs: []
  type: TYPE_NORMAL
- en: Final words…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: DVC provides us with a massive helping hand in versioning datasets for our data
    science projects, and after this article, I hope you have some useful knowledge
    about getting started with it.
  prefs: []
  type: TYPE_NORMAL
- en: Practising on some sample projects and exploring the DVC documentation will
    be your best bet to advance your skill with this amazing tool.
  prefs: []
  type: TYPE_NORMAL
- en: If you liked this article, every week I put out a story in which I share little
    pieces of knowledge from the world of data science and programming in general.
    [Follow me to never miss them!](https://ipom.medium.com) 😄
  prefs: []
  type: TYPE_NORMAL
- en: You can also connect with me on [LinkedIn](https://www.linkedin.com/in/yashprakash13/)
    and [Twitter](https://twitter.com/csandyash).
  prefs: []
  type: TYPE_NORMAL
- en: 'A couple of other articles from me that you may fancy reading:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/the-reusable-python-logging-template-for-all-your-data-science-apps-551697c8540?source=post_page-----382d5b5aab00--------------------------------)
    [## The Reusable Python Logging Template For All Your Data Science Apps'
  prefs: []
  type: TYPE_NORMAL
- en: towardsdatascience.com](/the-reusable-python-logging-template-for-all-your-data-science-apps-551697c8540?source=post_page-----382d5b5aab00--------------------------------)
    [](/the-easy-python-ci-cd-pipeline-using-docker-compose-and-github-actions-80498f47b341?source=post_page-----382d5b5aab00--------------------------------)
    [## The Easy Python CI/CD Pipeline Using Docker Compose and GitHub Actions
  prefs: []
  type: TYPE_NORMAL
- en: Continuously deploy a real world project on a VPS
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/the-easy-python-ci-cd-pipeline-using-docker-compose-and-github-actions-80498f47b341?source=post_page-----382d5b5aab00--------------------------------)
  prefs: []
  type: TYPE_NORMAL
