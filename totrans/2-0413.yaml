- en: Brief Introduction to Correspondence Analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/brief-introduction-to-correspondence-analysis-a88297ebba2a](https://towardsdatascience.com/brief-introduction-to-correspondence-analysis-a88297ebba2a)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Learn the basic steps to run a Multiple Correspondence Analysis in R
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://gustavorsantos.medium.com/?source=post_page-----a88297ebba2a--------------------------------)[![Gustavo
    Santos](../Images/a19a9f4525cdeb6e7a76cd05246aa622.png)](https://gustavorsantos.medium.com/?source=post_page-----a88297ebba2a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----a88297ebba2a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----a88297ebba2a--------------------------------)
    [Gustavo Santos](https://gustavorsantos.medium.com/?source=post_page-----a88297ebba2a--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----a88297ebba2a--------------------------------)
    ·7 min read·Jan 16, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/59dc59e603fb47dc094c0959e1b008a4.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [John Barkiple](https://unsplash.com/@barkiple?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/l090uFWoPaI?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Datasets are made of numbers and/ or text. Thus, we should expect that not all
    the variables will be just about numbers, which, by the way, count on many techniques
    to be analyzed, tested and worked.
  prefs: []
  type: TYPE_NORMAL
- en: When we are working with numerical variables, there are tools like correlation,
    PCA, scaling, normalization, and a bunch of tests. On the other hand, if we’re
    working with text, more specifically, categories, we should go after other techniques
    to apply to our data analysis.
  prefs: []
  type: TYPE_NORMAL
- en: One of these tools is the Correspondence Analysis [CA].
  prefs: []
  type: TYPE_NORMAL
- en: Correspondence analysis is an statistical technique that can show us **the relationships
    between the categories within two variables, based on data given in a contingency
    table**.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: As seen in the definition, it is an statistical tool. Conceptually, it is similar
    to Principal Component Analysis [PCA], but applied to categorical data, as it
    gives us power to display a dataset in a 2D graphic, showing which categories
    corresponds (or relates) to what.
  prefs: []
  type: TYPE_NORMAL
- en: 'CA can be useful for a Data Scientist in many ways, like understanding how
    different types of customers buy a set of products, which types of movies are
    preferred by each age range or yet our example for this tutorial: what types of
    products are bought in register 1 and register 2.'
  prefs: []
  type: TYPE_NORMAL
- en: Imports and Creating some data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We’ll start by importing the necessary libraries and creating some data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Creating the data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: This is a sample of the data. So we have the register numbers and a pair of
    products by transaction.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2a5921f1eab5d46c39c37edd43b12ddf.png)'
  prefs: []
  type: TYPE_IMG
- en: Sample of the dataset created. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Statistics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first step to perform a CA is to begin with the statistical tests. So, as
    we’re working with more than a pair of variables, we will have to perform Chi-squared
    tests for each pair of variables, and all of them must be statistically significant
    for at least one pair. For example, product1 must pass the test with either the
    product2 or register.
  prefs: []
  type: TYPE_NORMAL
- en: 'The test to be performed is a hypothesis test where:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Ho (*p-value > 0.05*) means that the variables are not associated** and'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Ha (p-value ≤ 0.05) means that the variables are associated**.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: One way to quickly test the pairs of variables is using a for loop.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The results show that all the Chi² tests are under the threshold of p-Value
    < 0.05, so we can reject the null hypothesys in favor of the alternative and understand
    that there is statistically significant association between the variables.
  prefs: []
  type: TYPE_NORMAL
- en: Another option is to use the function `stj.xtab()` from the library sjPlot.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: It displays this beautifully formatted table that already carries the observed
    values, the expected values in green, as well as the percentages for each category
    and the p-value and Chi² statistic.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6e0a441d4a666bfe3f4987126a905d28.png)'
  prefs: []
  type: TYPE_IMG
- en: Result from the stj.xtab() function. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Multiple Correspondence Analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It is time to create our Multiple Correspondence Analysis, or just MCA. We can
    use the function `dudi.acm()` from the **ade4** library. The `scannf= FALSE` argument
    is just to prevent it to show the eigenvalues bar plot.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Once we run this, the output is a `List` of 12 objects in R. If we run `ACM$co`,
    for example, we will see the coordinates of each category for the 2 Principal
    Components calculated. This means the X and Y coordinates, or where each point
    will be placed on a 2D graphic.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: If we run `ACM$cw`, we can see the percentages of each category in the dataset
    as a whole.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: In a MCA, we will be able to extract `n = num_categories — n_variables` dimensions.
    In this exercise, we have 3 variables (`register1, register2`, `product1` and
    `product2`) and 13 categories ( `banana, bread, milk, yogurt, sauce, water, strawberries,
    pasta, sauce`, some repeated for product 1 and 2). So, `13–3 = 10`dimensions.
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, we can see the 10 *eigenvalues* of each category with `ACM$eig`.
    These values are the amount of variance captured by each category, in a simple
    way.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Creating the Perceptual Map
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The final step is creating the perceptual map, where we will see the categories
    plotted on a graphic. To do that, we must create a base data frame to hold the
    names of the categories and their respective X and Y coordinates. First, let’s
    check how many categories each variable holds.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Great. Now we will create a `data.frame` object where we are getting the coordinates
    `ACM$co`, which will load the category name and the X and Y coordinates, and `Variable`
    column with the name of the variable (product1 or product2) for labeling purposes.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/4fb519c9b1cdf9c3cf8d3015b206ff4e.png)'
  prefs: []
  type: TYPE_IMG
- en: The X and Y coordinates. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: From here, it’s just a matter of creating the plot using ggplot2 now.
  prefs: []
  type: TYPE_NORMAL
- en: We will start with the `df_ACM object`, take the rownames and create a column
    out of that ( `rownames_to_column()` ), then rename that column to `Category`.
    Next, we mutate the names like `product1.banana` to just `banana`, for example.
    Then we pipe this new data frame with a ggplot function, provide `x=Comp1` and
    `y=Comp2` and the label will be `Category`, and each variable has a different
    color. It will be a scatterplot ( `geom_point` ) and we use `geom_label_repel`
    so the names are not over the points. `vline` and `hline` are to create the reference
    lines where the 0 is.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Here’s the result.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/15ce4173806bc209ae62bdaa43795fc5.png)'
  prefs: []
  type: TYPE_IMG
- en: Perceptual Map for the MCA. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: 'The result shows us some interesting insights:'
  prefs: []
  type: TYPE_NORMAL
- en: Register 1 receives more fruits strawberry and bananas, some water, some pasta
    and sauce.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Register 2 processes much more bread and milk or yogurt transactions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Notice that pasta and sauce are more distant from both registers. That’s because
    there were 4 transactions for that combination on register1 and 2 on register2\.
    The other combinations were either processed by rgs1 or rgs2.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Before You Go
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: MCA is a powerful tool. You should look it up and use whenever possible to create
    good analysis if you’re dealing with categorical data. However, have in mind that
    it will be harder to apply as we increase the number of variables and categories.
  prefs: []
  type: TYPE_NORMAL
- en: Imagine, for example a dataset with 30 variables with 5 categories each! That’s
    a lot to test and analyze. In that case, other techniques may be better, or perhaps
    some transformations to decrease the number of categories or creating a subset
    of the data to be analyzed.
  prefs: []
  type: TYPE_NORMAL
- en: If you liked this content, follow my blog for more.
  prefs: []
  type: TYPE_NORMAL
- en: '[](http://gustavorsantos.medium.com/?source=post_page-----a88297ebba2a--------------------------------)
    [## Gustavo Santos - Medium'
  prefs: []
  type: TYPE_NORMAL
- en: Read writing from Gustavo Santos on Medium. Data Scientist. I extract insights
    from data to help people and companies…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: gustavorsantos.medium.com](http://gustavorsantos.medium.com/?source=post_page-----a88297ebba2a--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Reference
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[](https://en.wikipedia.org/wiki/Eigenvalues_and_eigenvectors?source=post_page-----a88297ebba2a--------------------------------)
    [## Eigenvalues and eigenvectors - Wikipedia'
  prefs: []
  type: TYPE_NORMAL
- en: In linear algebra, an eigenvector () or characteristic vector of a linear transformation
    is a nonzero vector that…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: en.wikipedia.org](https://en.wikipedia.org/wiki/Eigenvalues_and_eigenvectors?source=post_page-----a88297ebba2a--------------------------------)  [##
    Correspondence analysis - Wikipedia
  prefs: []
  type: TYPE_NORMAL
- en: Correspondence analysis ( CA) is a multivariate statistical technique proposed
    by Herman Otto Hartley (Hirschfeld) and…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: en.wikipedia.org](https://en.wikipedia.org/wiki/Correspondence_analysis?source=post_page-----a88297ebba2a--------------------------------)  [##
    ade4 package - RDocumentation
  prefs: []
  type: TYPE_NORMAL
- en: Tools for multivariate data analysis. Several methods are provided for the analysis
    (i.e., ordination) of one-table…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: www.rdocumentation.org](https://www.rdocumentation.org/packages/ade4/versions/1.7-20?source=post_page-----a88297ebba2a--------------------------------)
  prefs: []
  type: TYPE_NORMAL
