- en: Write Readable Tests for Your Machine Learning Models with Behave
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Behave编写可读的机器学习模型测试
- en: 原文：[https://towardsdatascience.com/write-readable-tests-for-your-machine-learning-models-with-behave-ec4a27b91490](https://towardsdatascience.com/write-readable-tests-for-your-machine-learning-models-with-behave-ec4a27b91490)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/write-readable-tests-for-your-machine-learning-models-with-behave-ec4a27b91490](https://towardsdatascience.com/write-readable-tests-for-your-machine-learning-models-with-behave-ec4a27b91490)
- en: Use natural language to test the behavior of your ML models
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用自然语言测试你的机器学习模型的行为
- en: '[](https://khuyentran1476.medium.com/?source=post_page-----ec4a27b91490--------------------------------)[![Khuyen
    Tran](../Images/98aa66025ad29b618e875c75f1c400a5.png)](https://khuyentran1476.medium.com/?source=post_page-----ec4a27b91490--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ec4a27b91490--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ec4a27b91490--------------------------------)
    [Khuyen Tran](https://khuyentran1476.medium.com/?source=post_page-----ec4a27b91490--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://khuyentran1476.medium.com/?source=post_page-----ec4a27b91490--------------------------------)[![Khuyen
    Tran](../Images/98aa66025ad29b618e875c75f1c400a5.png)](https://khuyentran1476.medium.com/?source=post_page-----ec4a27b91490--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ec4a27b91490--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ec4a27b91490--------------------------------)
    [Khuyen Tran](https://khuyentran1476.medium.com/?source=post_page-----ec4a27b91490--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ec4a27b91490--------------------------------)
    ·9 min read·Mar 11, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[数据科学的未来](https://towardsdatascience.com/?source=post_page-----ec4a27b91490--------------------------------)
    ·阅读时间9分钟·2023年3月11日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: Motivation
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动机
- en: Imagine you create an ML model to predict customer sentiment based on reviews.
    Upon deploying it, you realize that the model incorrectly labels certain positive
    reviews as negative when they’re rephrased using negative words.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，你创建了一个机器学习模型来预测基于评论的客户情感。在部署后，你意识到模型错误地将某些积极评论标记为负面，当这些评论使用负面词汇重新表述时。
- en: '![](../Images/049bdad843d061aa87383a5f7e15731b.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/049bdad843d061aa87383a5f7e15731b.png)'
- en: Image by Author
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: This is just one example of how an extremely accurate ML model can fail without
    proper testing. Thus, testing your model for accuracy and reliability is crucial
    before deployment.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是一个极其准确的机器学习模型在没有适当测试时可能失败的例子。因此，在部署前测试模型的准确性和可靠性至关重要。
- en: 'But how do you test your ML model? One straightforward approach is to use unit-test:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 但你如何测试你的机器学习模型呢？一种简单的方法是使用单元测试：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This approach works but can be challenging for non-technical or business participants
    to understand. Wouldn’t it be nice if you could incorporate **project objectives
    and goals** into your tests, expressed in **natural language**?
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法有效，但可能对非技术或业务参与者来说较为挑战。如果你可以将**项目目标和愿景**融入到测试中，并用**自然语言**表达出来，那将会非常好。
- en: '![](../Images/d0e6e410b99df2ac762eabb205c4337a.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d0e6e410b99df2ac762eabb205c4337a.png)'
- en: Image by Author
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: That is when behave comes in handy.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这时，behave就派上用场了。
- en: 'Feel free to play and fork the source code of this article here:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 随意在此处玩耍并分叉本文的源代码：
- en: '[## Data-science/data_science_tools/behave_examples at master · khuyentran1401/Data-science'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[## Data-science/data_science_tools/behave_examples at master · khuyentran1401/Data-science'
- en: You can't perform that action at this time. You signed in with another tab or
    window. You signed out in another tab or…
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 你现在无法执行该操作。你已经在另一个标签页或窗口中登录。你在另一个标签页或窗口中注销了...
- en: github.com](https://github.com/khuyentran1401/Data-science/tree/master/data_science_tools/behave_examples?source=post_page-----ec4a27b91490--------------------------------)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[github.com](https://github.com/khuyentran1401/Data-science/tree/master/data_science_tools/behave_examples?source=post_page-----ec4a27b91490--------------------------------)'
- en: What is behave?
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是behave？
- en: '[behave](https://github.com/behave/behave) is a Python framework for behavior-driven
    development (BDD). BDD is a software development methodology that:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[behave](https://github.com/behave/behave)是一个用于行为驱动开发（BDD）的Python框架。BDD是一种软件开发方法论：'
- en: Emphasizes collaboration between stakeholders (such as business analysts, developers,
    and testers)
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 强调利益相关者之间的协作（如业务分析师、开发人员和测试人员）
- en: Enables users to define requirements and specifications for a software application
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用户能够定义软件应用的需求和规格
- en: Since behave provides a common language and format for expressing requirements
    and specifications, it can be ideal for defining and validating the behavior of
    machine learning models.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 由于behave提供了用于表达需求和规范的通用语言和格式，它可以理想地用于定义和验证机器学习模型的行为。
- en: 'To install behave, type:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装behave，请输入：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Let’s use behave to perform various tests on machine learning models.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用behave对机器学习模型进行各种测试。
- en: Invariance Testing
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不变性测试
- en: Invariance testing tests whether an ML model produces consistent results under
    different conditions.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 不变性测试测试的是机器学习模型在不同条件下是否产生一致的结果。
- en: An example of invariance testing involves verifying if a model is invariant
    to paraphrasing. If a model is paraphrase-variant, it may misclassify a positive
    review as negative when the review is rephrased using negative words.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 不变性测试的一个示例是验证模型是否对意译不变。如果模型对意译有变化，它可能会将正面评论误分类为负面评论，当评论使用负面词语重新表述时。
- en: '![](../Images/049bdad843d061aa87383a5f7e15731b.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/049bdad843d061aa87383a5f7e15731b.png)'
- en: Image by Author
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Feature File
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 功能文件
- en: To use behave for invariance testing, create a directory called `features`.
    Under that directory, create a file called `invariant_test_sentiment.feature`.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用behave进行不变性测试，请创建一个名为`features`的目录。在该目录下，创建一个名为`invariant_test_sentiment.feature`的文件。
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Within the `invariant_test_sentiment.feature` file, we will specify the project
    requirements:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在`invariant_test_sentiment.feature`文件中，我们将指定项目需求：
- en: '![](../Images/d0e6e410b99df2ac762eabb205c4337a.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d0e6e410b99df2ac762eabb205c4337a.png)'
- en: Image by Author
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: The “Given,” “When,” and “Then” parts of this file present the actual steps
    that will be executed by behave during the test.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 本文件的“Given”、“When”和“Then”部分展示了在测试过程中behave将执行的实际步骤。
- en: Python Step Implementation
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python步骤实现
- en: 'To implement the steps used in the scenarios with Python, start with creating
    the `features/steps` directory and a file called `invariant_test_sentiment.py`
    within it:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Python实现场景中的步骤，请首先创建`features/steps`目录，并在其中创建一个名为`invariant_test_sentiment.py`的文件：
- en: '[PRE3]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The `invariant_test_sentiment.py` file contains the following code, which tests
    whether the sentiment produced by the [TextBlob](https://textblob.readthedocs.io/en/dev/)
    model is consistent between the original text and its paraphrased version.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`invariant_test_sentiment.py`文件包含以下代码，用于测试由[TextBlob](https://textblob.readthedocs.io/en/dev/)模型生成的情感在原始文本和其意译版本之间是否一致。'
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Explanation of the code above:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码的解释：
- en: 'The steps are identified using decorators matching the feature''s predicate:
    `given`, `when`, and `then`.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用装饰器识别步骤，这些装饰器匹配功能的谓词：`given`、`when`和`then`。
- en: The decorator accepts a string containing the rest of the phrase in the matching
    scenario step.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 装饰器接受一个字符串，其中包含匹配场景步骤的其余短语。
- en: The `context` variable allows you to share values between steps.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`context`变量允许在步骤之间共享值。'
- en: Run the Test
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行测试
- en: 'To run the `invariant_test_sentiment.feature` test, type the following command:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行`invariant_test_sentiment.feature`测试，请输入以下命令：
- en: '[PRE5]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Output:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '[PRE6]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The output shows that the first two steps passed and the last step failed, indicating
    that the model is affected by paraphrasing.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 输出显示前两个步骤通过了，最后一步失败了，这表明模型受到了意译的影响。
- en: Directional Testing
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 方向性测试
- en: Directional testing is a statistical method used to assess whether the impact
    of an independent variable on a dependent variable is in a particular direction,
    either positive or negative.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 方向性测试是一种统计方法，用于评估自变量对因变量的影响是否朝着特定方向，即正面或负面。
- en: An example of directional testing is to check whether the presence of a specific
    word has a positive or negative effect on the sentiment score of a given text.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 方向性测试的一个示例是检查特定单词的存在是否对给定文本的情感评分有正面或负面的影响。
- en: '![](../Images/385055fc35ff3f35bb00f85ead08d732.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/385055fc35ff3f35bb00f85ead08d732.png)'
- en: Image by Author
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: To use behave for directional testing, we will create two files `directional_test_sentiment.feature`
    and `directional_test_sentiment.py` .
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用behave进行方向性测试，我们将创建两个文件`directional_test_sentiment.feature`和`directional_test_sentiment.py`。
- en: '[PRE7]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Feature File
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 功能文件
- en: 'The code in `directional_test_sentiment.feature` specifies the requirements
    of the project as follows:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '`directional_test_sentiment.feature`文件中的代码指定了项目的要求如下：'
- en: '![](../Images/ead5a7ac4c1c8299d8d7006ba84be61d.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ead5a7ac4c1c8299d8d7006ba84be61d.png)'
- en: Image by Author
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Notice that “And” is added to the prose. Since the preceding step starts with
    “Given,” behave will rename “And” to “Given.”
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，“And”被添加到文本中。由于前一步以“Given”开头，behave将把“And”重命名为“Given”。
- en: Python Step Implementation
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python 步骤实现
- en: The code in`directional_test_sentiment.py` implements a test scenario, which
    checks whether the presence of the word “awesome ” positively affects the sentiment
    score generated by the TextBlob model.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '`directional_test_sentiment.py` 文件中的代码实现了一个测试场景，该场景检查“awesome”一词的出现是否对 TextBlob
    模型生成的情感分数产生积极影响。'
- en: '[PRE8]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The second step uses the parameter syntax `{word}`. When the `.feature` file
    is run, the value specified for `{word}` in the scenario is automatically passed
    to the corresponding step function.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 第二步使用参数语法 `{word}`。当运行 `.feature` 文件时，场景中为 `{word}` 指定的值会自动传递给相应的步骤函数。
- en: This means that if the scenario states that the same sentence should include
    the word “awesome,” behave will automatically replace `{word}` with “awesome.”
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着如果场景中指出相同的句子应包含“awesome”一词，behave 将自动用“awesome”替换 `{word}`。
- en: This conversion is useful when you want to use different values for the `{word}`
    parameter without changing both the `.feature` file and the `.py` file.
  id: totrans-73
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这种转换在你想使用不同的 `{word}` 参数值而不需要更改 `.feature` 文件和 `.py` 文件时非常有用。
- en: Run the Test
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行测试
- en: '[PRE9]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Output:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '[PRE10]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Since all the steps passed, we can infer that the sentiment score increases
    due to the new word’s presence.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 由于所有步骤都通过了，我们可以推断情感分数因新词的出现而增加。
- en: Minimum Functionality Testing
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最小功能测试
- en: Minimum functionality testing is a type of testing that verifies if the system
    or product meets the minimum requirements and is functional for its intended use.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 最小功能测试是一种验证系统或产品是否符合最低要求并在其预期用途上可用的测试类型。
- en: One example of minimum functionality testing is to check whether the model can
    handle different types of inputs, such as numerical, categorical, or textual data.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 最小功能测试的一个例子是检查模型是否能处理不同类型的输入，例如数值型、类别型或文本数据。
- en: '![](../Images/88fb1b0325f8be6754fd265d1df1fe6e.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/88fb1b0325f8be6754fd265d1df1fe6e.png)'
- en: Image by Author
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: To use minimum functionality testing for input validation, create two files
    `minimum_func_test_input.feature` and `minimum_func_test_input.py` .
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 要进行最小功能测试以验证输入，请创建两个文件 `minimum_func_test_input.feature` 和 `minimum_func_test_input.py`。
- en: '[PRE11]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Feature File
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 特性文件
- en: 'The code in `minimum_func_test_input.feature` specifies the project requirements
    as follows:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '`minimum_func_test_input.feature` 文件中的代码将项目要求指定如下：'
- en: '![](../Images/6a01908e8891fafa5ddc6a8c63ec7864.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6a01908e8891fafa5ddc6a8c63ec7864.png)'
- en: Image by Author
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Python Step Implementation
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python 步骤实现
- en: The code in `minimum_func_test_input.py` implements the requirements, checking
    if the output generated by `predict` for a specific input type meets the expectations.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '`minimum_func_test_input.py` 文件中的代码实现了这些要求，检查 `predict` 对特定输入类型生成的输出是否符合预期。'
- en: '[PRE12]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Run the Test
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行测试
- en: '[PRE13]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Output:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '[PRE14]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Since all the steps passed, we can conclude that the model outputs match our
    expectations.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 由于所有步骤都通过了，我们可以得出结论，模型输出符合我们的预期。
- en: Disadvantages of behave and why you should still use it
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: behave 的缺点及其使用理由
- en: This section will outline some drawbacks of using behave compared to pytest,
    and explain why it may still be worth considering the tool.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将概述使用 behave 相较于 pytest 的一些缺点，并解释为什么仍然值得考虑该工具。
- en: Learning Curve
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 学习曲线
- en: Using Behavior-Driven Development (BDD) in behavior may result in a steeper
    learning curve than the more traditional testing approach used by pytest.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在行为驱动开发（BDD）中使用行为可能导致比 pytest 使用的传统测试方法更陡峭的学习曲线。
- en: '**Counter argument:** The focus on collaboration in BDD can lead to better
    alignment between business requirements and software development, resulting in
    a more efficient development process overall.'
  id: totrans-102
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**反驳观点：** BDD 对协作的关注可以导致业务需求与软件开发之间的更好对齐，从而使整体开发过程更高效。'
- en: '![](../Images/997f01b32b12d6697a10c99df49b456f.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/997f01b32b12d6697a10c99df49b456f.png)'
- en: Image by Author
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Slower performance
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 性能较慢
- en: behave tests can be slower than pytest tests because behave must parse the feature
    files and map them to step definitions before running the tests.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: behave 测试可能比 pytest 测试更慢，因为 behave 需要解析特性文件并将其映射到步骤定义，然后才能运行测试。
- en: '**Counter argument:** behave’s focus on well-defined steps can lead to tests
    that are easier to understand and modify, reducing the overall effort required
    for test maintenance.'
  id: totrans-107
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**反驳观点：** behave 对明确步骤的关注可以导致更易理解和修改的测试，从而减少测试维护所需的总体工作量。'
- en: '![](../Images/acaeb6ecc483180ec3bfb2aa196c6fd1.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/acaeb6ecc483180ec3bfb2aa196c6fd1.png)'
- en: Image by Author
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: '**Less flexibility**'
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**灵活性较差**'
- en: behave is more rigid in its syntax, while pytest allows more flexibility in
    defining tests and fixtures.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: behave 的语法更为严格，而 pytest 在定义测试和夹具方面提供了更多灵活性。
- en: '**Counter argument:** behave’s rigid structure can help ensure consistency
    and readability across tests, making them easier to understand and maintain over
    time.'
  id: totrans-112
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**反驳观点：** behave 的严格结构有助于确保测试的一致性和可读性，使其更易于理解和维护。'
- en: '![](../Images/b7052dbc23df11719d20a57def2b68ce.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b7052dbc23df11719d20a57def2b68ce.png)'
- en: Image by Author
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Summary
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: Although behave has some drawbacks compared to pytest, its focus on collaboration,
    well-defined steps, and structured approach can still make it a valuable tool
    for development teams.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 behave 相比 pytest 存在一些缺点，但其对协作、明确步骤和结构化方法的关注仍能使其成为开发团队的重要工具。
- en: Conclusion
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Congratulations! You have just learned how to utilize behave for testing machine
    learning models. I hope this knowledge will aid you in creating more comprehensible
    tests.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你刚刚学会了如何使用 behave 测试机器学习模型。我希望这些知识能帮助你创建更易理解的测试。
- en: I love writing about data science concepts and playing with different data science
    tools. You can connect with me on [LinkedIn](https://www.linkedin.com/in/khuyen-tran-1401/)
    and [Twitter](https://twitter.com/KhuyenTran16).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢写关于数据科学的概念和玩弄不同的数据科学工具。你可以通过 [LinkedIn](https://www.linkedin.com/in/khuyen-tran-1401/)
    和 [Twitter](https://twitter.com/KhuyenTran16) 与我联系。
- en: 'Star [this repo](https://github.com/khuyentran1401/Data-science) if you want
    to check the code for the articles I have written. Follow me on Medium to stay
    notified about my latest data science articles:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想查看我写的文章的代码，请给 [这个仓库](https://github.com/khuyentran1401/Data-science) 点个星。关注我在
    Medium 上，及时获取我最新的数据科学文章：
- en: '[](/pytest-for-data-scientists-2990319e55e6?source=post_page-----ec4a27b91490--------------------------------)
    [## Pytest for Data Scientists'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/pytest-for-data-scientists-2990319e55e6?source=post_page-----ec4a27b91490--------------------------------)
    [## 数据科学家的 Pytest'
- en: A Comprehensive Guide to Pytest for your Data Science Projects
  id: totrans-122
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**Pytest** 数据科学项目的综合指南'
- en: 'towardsdatascience.com](/pytest-for-data-scientists-2990319e55e6?source=post_page-----ec4a27b91490--------------------------------)
    [](/great-expectations-always-know-what-to-expect-from-your-data-51214866c24?source=post_page-----ec4a27b91490--------------------------------)
    [## Great Expectations: Always Know What to Expect From Your Data'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/pytest-for-data-scientists-2990319e55e6?source=post_page-----ec4a27b91490--------------------------------)
    [](/great-expectations-always-know-what-to-expect-from-your-data-51214866c24?source=post_page-----ec4a27b91490--------------------------------)
    [## 伟大的期望：总是了解你的数据期望
- en: Ensure Your Data Works as Expected Using Python
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 确保你的数据按预期工作，使用 Python
- en: towardsdatascience.com](/great-expectations-always-know-what-to-expect-from-your-data-51214866c24?source=post_page-----ec4a27b91490--------------------------------)
    [](/validate-your-pandas-dataframe-with-pandera-2995910e564?source=post_page-----ec4a27b91490--------------------------------)
    [## Validate Your pandas DataFrame with Pandera
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/great-expectations-always-know-what-to-expect-from-your-data-51214866c24?source=post_page-----ec4a27b91490--------------------------------)
    [](/validate-your-pandas-dataframe-with-pandera-2995910e564?source=post_page-----ec4a27b91490--------------------------------)
    [## 使用 Pandera 验证你的 pandas DataFrame
- en: Make Sure Your Data Matches Your Expectation
  id: totrans-126
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 确保你的数据符合预期
- en: towardsdatascience.com](/validate-your-pandas-dataframe-with-pandera-2995910e564?source=post_page-----ec4a27b91490--------------------------------)
    [](/detect-defects-in-a-data-pipeline-early-with-validation-and-notifications-83e9b652e65a?source=post_page-----ec4a27b91490--------------------------------)
    [## Detect Defects in a Data Pipeline Early with Validation and Notifications
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/validate-your-pandas-dataframe-with-pandera-2995910e564?source=post_page-----ec4a27b91490--------------------------------)
    [](/detect-defects-in-a-data-pipeline-early-with-validation-and-notifications-83e9b652e65a?source=post_page-----ec4a27b91490--------------------------------)
    [## 通过验证和通知早期检测数据管道中的缺陷
- en: Build a Robust Data Pipeline in Python with Deepchecks and Prefect
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 Deepchecks 和 Prefect 在 Python 中构建稳健的数据管道
- en: towardsdatascience.com](/detect-defects-in-a-data-pipeline-early-with-validation-and-notifications-83e9b652e65a?source=post_page-----ec4a27b91490--------------------------------)
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/detect-defects-in-a-data-pipeline-early-with-validation-and-notifications-83e9b652e65a?source=post_page-----ec4a27b91490--------------------------------)
