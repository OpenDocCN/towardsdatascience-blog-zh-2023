- en: How to deploy a Panel app to Hugging Face using Docker
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用 Docker 将 Panel 应用部署到 Hugging Face
- en: 原文：[https://towardsdatascience.com/how-to-deploy-a-panel-app-to-hugging-face-using-docker-6189e3789718](https://towardsdatascience.com/how-to-deploy-a-panel-app-to-hugging-face-using-docker-6189e3789718)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-deploy-a-panel-app-to-hugging-face-using-docker-6189e3789718](https://towardsdatascience.com/how-to-deploy-a-panel-app-to-hugging-face-using-docker-6189e3789718)
- en: 5 simple steps
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 五个简单步骤
- en: '[](https://sophiamyang.medium.com/?source=post_page-----6189e3789718--------------------------------)[![Sophia
    Yang, Ph.D.](../Images/c133f918245ea4857dc46df3a07fc2b1.png)](https://sophiamyang.medium.com/?source=post_page-----6189e3789718--------------------------------)[](https://towardsdatascience.com/?source=post_page-----6189e3789718--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----6189e3789718--------------------------------)
    [Sophia Yang, Ph.D.](https://sophiamyang.medium.com/?source=post_page-----6189e3789718--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://sophiamyang.medium.com/?source=post_page-----6189e3789718--------------------------------)[![Sophia
    Yang, Ph.D.](../Images/c133f918245ea4857dc46df3a07fc2b1.png)](https://sophiamyang.medium.com/?source=post_page-----6189e3789718--------------------------------)[](https://towardsdatascience.com/?source=post_page-----6189e3789718--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----6189e3789718--------------------------------)
    [Sophia Yang, Ph.D.](https://sophiamyang.medium.com/?source=post_page-----6189e3789718--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----6189e3789718--------------------------------)
    ·5 min read·Jan 6, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----6189e3789718--------------------------------)
    ·阅读时间 5 分钟·2023 年 1 月 6 日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: By [Sophia Yang](https://twitter.com/sophiamyang) and [Marc Skov Madsen](https://twitter.com/MarcSkovMadsen)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 作者：[Sophia Yang](https://twitter.com/sophiamyang) 和 [Marc Skov Madsen](https://twitter.com/MarcSkovMadsen)
- en: Do you wish to deploy a Panel app to Hugging Face but don’t know how? With five
    simple steps, we can easily deploy our Panel app to Hugging Face using Docker.
    This article will walk you through this process step by step. By the end of this
    article, you should be able to deploy your own app as shown below on Hugging Face.
    It’s super easy and it’s free. What are you waiting for? Let’s get started!
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 你是否想将 Panel 应用部署到 Hugging Face，但不知道怎么做？通过五个简单的步骤，我们可以轻松地使用 Docker 将 Panel 应用部署到
    Hugging Face。本文将逐步指导你完成这个过程。到本文结束时，你应该能够如下面所示地在 Hugging Face 上部署你自己的应用。这非常简单，而且是免费的。你还在等什么？让我们开始吧！
- en: '![](../Images/37a77f74d355a73e70094a5b74a72734.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/37a77f74d355a73e70094a5b74a72734.png)'
- en: 'Panel app hosted on Hugging Face: [https://huggingface.co/spaces/sophiamyang/panel_example](https://huggingface.co/spaces/sophiamyang/panel_example)'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 托管在 Hugging Face 上的 Panel 应用： [https://huggingface.co/spaces/sophiamyang/panel_example](https://huggingface.co/spaces/sophiamyang/panel_example)
- en: 'Standalone app link: [https://sophiamyang-panel-example.hf.space/app](https://sophiamyang-panel-example.hf.space/app)'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 独立应用链接： [https://sophiamyang-panel-example.hf.space/app](https://sophiamyang-panel-example.hf.space/app)
- en: Five steps to deploy a Panel app to Hugging Face
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 Panel 应用部署到 Hugging Face 的五个步骤
- en: '**Step 1:** [https://huggingface.co/spaces](https://huggingface.co/spaces)'
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**步骤 1：** [https://huggingface.co/spaces](https://huggingface.co/spaces)'
- en: Go to [https://huggingface.co/spaces](https://huggingface.co/spaces) and click
    “Create new Space”
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 访问 [https://huggingface.co/spaces](https://huggingface.co/spaces) 并点击“创建新空间”
- en: '![](../Images/4465a2567cc3d4c45118cabd7d6b4923.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4465a2567cc3d4c45118cabd7d6b4923.png)'
- en: '**Step 2: Create a new space**'
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**步骤 2：创建新空间**'
- en: Give it a “Space name”. Here I call it “panel_example”. Select Docker as the
    Space SDK, and then click “Create Space”.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 给它一个“空间名称”。这里我称之为“panel_example”。选择 Docker 作为空间 SDK，然后点击“创建空间”。
- en: '![](../Images/d5ad60e769ec646ccae8bbacef34a78a.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d5ad60e769ec646ccae8bbacef34a78a.png)'
- en: '**Step 3: Clone repo**'
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**步骤 3：克隆仓库**'
- en: 'Clone the Hugging Face repo in your command line (please remember to change
    the path to your own user name and Space name):'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在命令行中克隆 Hugging Face 仓库（请记得将路径更改为你自己的用户名和空间名称）：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Now you should see a “panel_example” directory in your computer with just a
    README.md file in it.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你应该在电脑上看到一个名为“panel_example”的目录，其中只有一个 README.md 文件。
- en: '**Step 4: Create three files**'
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**步骤 4：创建三个文件**'
- en: 'Now let’s create three files in this folder:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们在这个文件夹中创建三个文件：
- en: '`app.py` is the file for our Panel app'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app.py` 是我们 Panel 应用的文件'
- en: 'You can copy the app.py file from: [https://huggingface.co/spaces/sophiamyang/panel_example/blob/main/app.py](https://huggingface.co/spaces/sophiamyang/panel_example/blob/main/app.py)'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从 [https://huggingface.co/spaces/sophiamyang/panel_example/blob/main/app.py](https://huggingface.co/spaces/sophiamyang/panel_example/blob/main/app.py)
    复制 app.py 文件
- en: To learn more about how to create a Panel app, check out our previous blog post
    on [the easiest way to create an interactive dashboard in Python](/the-easiest-way-to-create-an-interactive-dashboard-in-python-77440f2511d1?sk=e1ea8c40c090cdbe7689333267f73b25)
    and [3 ways to build a Panel visualization dashboard](https://sophiamyang.medium.com/3-ways-to-build-a-panel-visualization-dashboard-6e14148f529d?sk=2cd93ae39586305bae8cfaead2bf7bb4).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于如何创建 Panel 应用的信息，请查看我们之前的博客文章 [创建交互式仪表板的最简单方法](/the-easiest-way-to-create-an-interactive-dashboard-in-python-77440f2511d1?sk=e1ea8c40c090cdbe7689333267f73b25)
    和 [构建 Panel 可视化仪表板的 3 种方法](https://sophiamyang.medium.com/3-ways-to-build-a-panel-visualization-dashboard-6e14148f529d?sk=2cd93ae39586305bae8cfaead2bf7bb4)。
- en: '`requirements.txt` defines the required packages for our Panel app.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`requirements.txt` 定义了我们 Panel 应用所需的包。'
- en: 'We only need two packages for our Panel app: panel and hvplot. Thus, we only
    include these two packages in our [requirements.txt](https://huggingface.co/spaces/sophiamyang/panel_interactive/blob/main/requirements.txt).'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的 Panel 应用只需要两个包：panel 和 hvplot。因此，我们只在我们的 [requirements.txt](https://huggingface.co/spaces/sophiamyang/panel_interactive/blob/main/requirements.txt)
    中包含这两个包。
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '`Dockerfile` lists all the commands we would like Docker to run in order to
    build and run an image as a container. To learn more about Docker, check out this
    [video](https://www.youtube.com/watch?v=0H2miBK_gAk).'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Dockerfile` 列出了我们希望 Docker 执行的所有命令，以便构建和运行镜像作为容器。要了解更多关于 Docker 的信息，请查看这个
    [视频](https://www.youtube.com/watch?v=0H2miBK_gAk)。'
- en: In this Dockerfile, we specify the base image from `python:3.9`, set the working
    directory as `/code`, copy the `requirements.txt` file to the container, run `pip
    install` to install packages into containers, copy every file in the directory
    to the container, and then CMD provides the command to run our Panel app for the
    container. Note that normally to serve a Panel app, we run `panel serve app.py`.
    In this file, we break down the command into a list of strings. We also need to
    define the address and the port since the Hugging Face uses port 7860 as the default.
    We also need to define the flag `allow-websocket-origin` to allow the connection
    to server websocket.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个 Dockerfile 中，我们指定了 `python:3.9` 作为基础镜像，将工作目录设置为 `/code`，将 `requirements.txt`
    文件复制到容器中，运行 `pip install` 来安装包到容器中，将目录中的每个文件复制到容器中，然后 CMD 提供了运行 Panel 应用的命令。请注意，通常我们运行
    `panel serve app.py` 来服务一个 Panel 应用。在这个文件中，我们将命令拆分为字符串列表。我们还需要定义地址和端口，因为 Hugging
    Face 使用端口 7860 作为默认端口。我们还需要定义标志 `allow-websocket-origin` 以允许连接到服务器的 websocket。
- en: '! Important: please remember change ​​sophiamyang-panel-example.hf.space to
    YOURUSERNAME-SPACENAME.hf.space.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '! 重要：请记得将 sophiamyang-panel-example.hf.space 更改为 YOURUSERNAME-SPACENAME.hf.space。'
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Step 5:** Commit all the changes and push the changes using git:'
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**第 5 步：** 提交所有更改并使用 git 推送更改：'
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Now you should see these files on your Hugging Face Space.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你应该能在你的 Hugging Face 空间中看到这些文件。
- en: '![](../Images/0c89e3759067eed9d7639ecce81283ae.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0c89e3759067eed9d7639ecce81283ae.png)'
- en: 'And after a few minutes of Hugging Face’s hard work in building our app, our
    Panel app will show up in the App tab and you can find the standalone app link
    here: [https://sophiamyang-panel-example.hf.space/app](https://sophiamyang-panel-example.hf.space/app)'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在经过 Hugging Face 几分钟的努力构建我们的应用程序后，我们的 Panel 应用将会出现在应用标签中，你可以在这里找到独立应用链接：[https://sophiamyang-panel-example.hf.space/app](https://sophiamyang-panel-example.hf.space/app)。
- en: '![](../Images/37a77f74d355a73e70094a5b74a72734.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/37a77f74d355a73e70094a5b74a72734.png)'
- en: How to run Docker locally? (optional step)
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何本地运行 Docker？（可选步骤）
- en: 'As you are developing your app, you might want to run your app via Docker locally
    before deploying to Hugging Face. In step 4, `app.py`and `requirements.txt` are
    the same as above. However, we do need to make a tiny change to the `Dockerfile`:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在你开发应用时，你可能希望在部署到 Hugging Face 之前，通过 Docker 本地运行应用。在第 4 步中，`app.py` 和 `requirements.txt`
    与上述相同。然而，我们需要对 `Dockerfile` 做一个小的更改：
- en: '! Important: we need to change ​​sophiamyang-panel-example.hf.space to 0.0.0.0:7860
    when we run Docker locally. Alternatively, a **better** way is to add 0.0.0.0:7860
    to the allowed WebSockets in addition to the Hugging Face URL:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '! 重要：我们在本地运行 Docker 时需要将 sophiamyang-panel-example.hf.space 更改为 0.0.0.0:7860。另一种**更好的**方法是将
    0.0.0.0:7860 添加到允许的 WebSockets 中，除了 Hugging Face URL：'
- en: '[PRE4]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'To use Docker locally, we only need to know three commands:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 要在本地使用 Docker，我们只需了解三个命令：
- en: '[PRE5]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: First, let’s make sure we are in the project directory. And then we run `docker
    build -t panel-image .` to build a Docker image based on the files in this directory.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，确保我们在项目目录中。然后运行 `docker build -t panel-image .` 来根据这个目录中的文件构建 Docker 镜像。
- en: 'Second, let’s run this Docker image: `docker run --name panel-container -p
    7860:7860 panel-image`. Now you should see your app running in 0.0.0.0: 7860.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其次，运行这个 Docker 镜像：`docker run --name panel-container -p 7860:7860 panel-image`。现在你应该可以在
    0.0.0.0:7860 看到你的应用程序正在运行。
- en: 'If you would like to make any changes to your files, you will need to remove
    the container: `docker rm panel-container`docker rm panel-container and then repeat
    the first two commands we just mentioned.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你想对文件进行任何更改，你需要先删除容器：`docker rm panel-container`，然后重复前面提到的前两个命令。
- en: Can we serve multiple Panel apps at the same time on Hugging Face?
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们可以在 Hugging Face 上同时服务多个 Panel 应用程序吗？
- en: 'Yes, you absolutely can. Check out my example here: [https://huggingface.co/spaces/sophiamyang/Panel_apps](https://huggingface.co/spaces/sophiamyang/Panel_apps)
    and its corresponding standalone app link here: [https://sophiamyang-panel-apps.hf.space/](https://sophiamyang-panel-apps.hf.space/)'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，你绝对可以。查看我的示例：[https://huggingface.co/spaces/sophiamyang/Panel_apps](https://huggingface.co/spaces/sophiamyang/Panel_apps)
    和相应的独立应用链接：[https://sophiamyang-panel-apps.hf.space/](https://sophiamyang-panel-apps.hf.space/)
- en: '![](../Images/712b5fa5f6fdae723a2d4aed0d7bfc27.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/712b5fa5f6fdae723a2d4aed0d7bfc27.png)'
- en: When we click on one of the apps, for example, “Text Analysis”, we can see our
    text analysis app showing up on Hugging Face.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们点击其中一个应用程序，例如，“文本分析”，我们可以看到我们的文本分析应用在 Hugging Face 上显示出来。
- en: '![](../Images/b18b0f21093ff66368b4b247150756bb.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b18b0f21093ff66368b4b247150756bb.png)'
- en: '**Conclusion**'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**结论**'
- en: In this article, we demonstrated how to deploy a Panel app to Hugging Face using
    Docker with five simple steps. Give it a try! If you have questions or want to
    share your app with the Panel community, check out [https://discourse.holoviz.org/.](https://discourse.holoviz.org/.)
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们展示了如何通过 Docker 将 Panel 应用程序部署到 Hugging Face，分为五个简单步骤。试试看吧！如果你有问题或想与
    Panel 社区分享你的应用程序，请访问 [https://discourse.holoviz.org/.](https://discourse.holoviz.org/.)
- en: '**References**:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**参考文献**：'
- en: '[https://panel.holoviz.org/](https://panel.holoviz.org/)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://panel.holoviz.org/](https://panel.holoviz.org/)'
- en: '[https://huggingface.co/docs/hub/spaces-sdks-docker-first-demo](https://huggingface.co/docs/hub/spaces-sdks-docker-first-demo)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://huggingface.co/docs/hub/spaces-sdks-docker-first-demo](https://huggingface.co/docs/hub/spaces-sdks-docker-first-demo)'
- en: '[https://www.youtube.com/watch?v=0H2miBK_gAk](https://www.youtube.com/watch?v=0H2miBK_gAk)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.youtube.com/watch?v=0H2miBK_gAk](https://www.youtube.com/watch?v=0H2miBK_gAk)'
- en: Blog post [the easiest way to create an interactive dashboard in Python](/the-easiest-way-to-create-an-interactive-dashboard-in-python-77440f2511d1?sk=e1ea8c40c090cdbe7689333267f73b25)
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 博客文章 [在 Python 中创建交互式仪表盘的最简单方法](/the-easiest-way-to-create-an-interactive-dashboard-in-python-77440f2511d1?sk=e1ea8c40c090cdbe7689333267f73b25)
- en: Blog post [3 ways to build a Panel visualization dashboard](https://sophiamyang.medium.com/3-ways-to-build-a-panel-visualization-dashboard-6e14148f529d?sk=2cd93ae39586305bae8cfaead2bf7bb4)
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 博客文章 [构建 Panel 可视化仪表盘的 3 种方法](https://sophiamyang.medium.com/3-ways-to-build-a-panel-visualization-dashboard-6e14148f529d?sk=2cd93ae39586305bae8cfaead2bf7bb4)
- en: . . .
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: . . .
- en: By [Sophia Yang](https://twitter.com/sophiamyang) and [Marc Skov Madsen](https://twitter.com/MarcSkovMadsen)
    on January 6, 2022.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 由 [Sophia Yang](https://twitter.com/sophiamyang) 和 [Marc Skov Madsen](https://twitter.com/MarcSkovMadsen)
    于 2022 年 1 月 6 日发布。
- en: Sophia Yang is a Senior Data Scientist at Anaconda. Connect with me on [LinkedIn](https://www.linkedin.com/in/sophiamyang/),
    [Twitter](https://twitter.com/sophiamyang), and [YouTube](https://www.youtube.com/SophiaYangDS)
    and join the DS/ML [Book Club](https://dsbookclub.github.io/) ❤️
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Sophia Yang 是 Anaconda 的高级数据科学家。请在 [LinkedIn](https://www.linkedin.com/in/sophiamyang/)、[Twitter](https://twitter.com/sophiamyang)
    和 [YouTube](https://www.youtube.com/SophiaYangDS) 上与我联系，并加入 DS/ML [书友会](https://dsbookclub.github.io/)
    ❤️
