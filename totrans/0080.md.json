["```py\nimport tensorflow as tf\nfrom tensorflow.keras.layers import Input, Concatenate, Dense\n\ndef pinn_model(n_layers:int, n_nodes:int, activation:tf.keras.activations, x_range:tuple, y_range:tuple):\n    x = Input((1,), name=name+'_input_x')\n    y = Input((1,), name=name+'_input_y')\n\n    # normalize data between -1 and 1\n    x_norm = (x - x_range[0]) / (x_range[1] - x_range[0])\n    y_norm = (y - y_range[0]) / (y_range[1] - y_range[1])\n    xy = Concatenate()([x_norm, y_norm]) * 2 - 1\n\n    u = Dense(n_nodes, activation=activation, kernel_initializer='glorot_normal')(xy)\n    for i in range(1, n_layers):\n        u = Dense(n_nodes, activation=activation, kernel_initializer='glorot_normal')(u) + u\n    u = Dense(1, use_bias=False, kernel_initializer='glorot_normal')(u)\n\n    return tf.keras.Model([x, y], u)\n```"]