- en: What Is the Probability That Two Persons Have the Same Initials?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/what-is-the-probability-that-two-persons-have-the-same-initials-0ea3bcb9bcf2](https://towardsdatascience.com/what-is-the-probability-that-two-persons-have-the-same-initials-0ea3bcb9bcf2)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Learn how to use simulations, replications, and for loops in R to answer many
    probability questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://antoinesoetewey.medium.com/?source=post_page-----0ea3bcb9bcf2--------------------------------)[![Antoine
    Soetewey](../Images/51d7837d18ff15a62cac2343a485e35d.png)](https://antoinesoetewey.medium.com/?source=post_page-----0ea3bcb9bcf2--------------------------------)[](https://towardsdatascience.com/?source=post_page-----0ea3bcb9bcf2--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----0ea3bcb9bcf2--------------------------------)
    [Antoine Soetewey](https://antoinesoetewey.medium.com/?source=post_page-----0ea3bcb9bcf2--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----0ea3bcb9bcf2--------------------------------)
    ·14 min read·Dec 6, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b36732ed29bfc20fcc73ac6fe8f5bb8a.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Mario Gogh](https://unsplash.com/@mariogogh?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Last week, I joined a team to work on a collaborative project. The team was
    already established for a few months, with several scientists working together
    on the project. For simplicity, they used to sign documents, mention colleagues
    in emails, etc. with their initials (the first letter of their first name followed
    by the first letter of their last name).
  prefs: []
  type: TYPE_NORMAL
- en: A couple of days after joining the project, when I needed to sign my first document
    with my initials, we realized that another person in the team had the exact same
    initials than me.
  prefs: []
  type: TYPE_NORMAL
- en: This was not really an issue, as we decided that I would write my initials backward,
    that is, “SA” instead of “AS”, and the other person would keep signing with “AS”
    as usual.
  prefs: []
  type: TYPE_NORMAL
- en: 'It could have stopped here. However, the idea to write a post about this rather
    trivial anecdote came to me when the team leader claimed, in the middle of a meeting:
    “That’s very unfortunate that you two have the same initials! What are the chances
    of this happening to us?!”.'
  prefs: []
  type: TYPE_NORMAL
- en: We spent a couple of minutes trying to estimate this probability, which in the
    end were mostly based on our intuitions rather than on a formal calculation. This
    piqued my curiosity.
  prefs: []
  type: TYPE_NORMAL
- en: Given that the project we are working on requires the use of simulations, I
    decided to focus on answering this question via simulations in R. That being said,
    as for most simulations, it is a good practice to verify these results. This is
    done using [probability theory](https://statsandr.com/blog/the-9-concepts-and-formulas-in-probability-that-every-data-scientist-should-know/).
    This comparison will allow to assess the truthfulness of results obtained through
    simulations.
  prefs: []
  type: TYPE_NORMAL
- en: 'Furthermore, I thought that it would be a nice way to illustrate methods not
    often presented in my posts: for loops, replications and writing functions in
    R.'
  prefs: []
  type: TYPE_NORMAL
- en: How likely is it?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before answering the question raised by the team leader, there are three things
    to note:'
  prefs: []
  type: TYPE_NORMAL
- en: Although the team leader was curious to know the probability that *exactly two
    persons* have the same initials, we are actually more interested in the probability
    that *at least two persons* have the same initials (as the problem also occurs
    if more than two persons within a team have the same initials).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The team consists of 8 people.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We restrict ourselves to two-letters initials (the first letter being the first
    letter of the first name, the second letter being the first letter of the last
    name). This means that middle names are not taken into account, and only the first
    letter is considered for compound names.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In this post, we will show how to compute this probability:'
  prefs: []
  type: TYPE_NORMAL
- en: in our context, that is, for a team of 8 persons, and
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: for completeness, for teams of all sizes from 2 to 100 persons.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As stated in the introduction, we will compute these probabilities first through
    simulations and then through probability theory.
  prefs: []
  type: TYPE_NORMAL
- en: For our team
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We start by creating a vector of size 8, corresponding to the initials of a
    team of 8 persons randomly sampled among all 26 letters of the Latin alphabet:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: As we can see, everyone has different initials in this simulated team of 8 persons,
    but this will not always be the case.
  prefs: []
  type: TYPE_NORMAL
- en: 'To estimate, via simulations, how likely is that at least two persons have
    the same initials among the team, we need to replicate this vector of 8 sampled
    initials a large number of times (say 1,000 replications):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is a matrix of 8 rows and 1000 columns, where:'
  prefs: []
  type: TYPE_NORMAL
- en: each rows corresponds to the sampled initials of a person, and
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: each column corresponds to one simulated team of 8 people.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For better readability, we rename:'
  prefs: []
  type: TYPE_NORMAL
- en: the row names as `M1` to `M8`, corresponding to persons 1 to 8, and
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the column names as `T1` to `T1000`, corresponding to teams 1 to 1000.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'We now need to compute, among the 1000 teams simulated, how many of them have
    at least two persons with the same initials:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Here, for each column of our data frame `dat` (from the first to the 1000th
    column), we ask whether there are duplicates or not. This is done repeatedly over
    all columns thanks to a for loop. For each column, the result is `TRUE` if there
    are duplicates, otherwise it is `FALSE`. The result of each iteration is saved
    in the `duplicates` vector. As `TRUE = 1` and `FALSE = 0` in R, we can then count
    how many columns (and thus teams) have duplicates by summing the number of `TRUE`
    in the `duplicates` vector.
  prefs: []
  type: TYPE_NORMAL
- en: As we can see from the output above, among the 1000 simulated teams, 41 of them
    have duplicates, that is, 41 of them have at least two persons with the same initials.
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, based on the simulations, we can expect the probability that at least
    two persons with the same initials in a team of 8 persons to be close to 4.1%.
  prefs: []
  type: TYPE_NORMAL
- en: This is a good starting point. Notice, however, that I wrote close to 4.1% because
    this probability will vary each time it is computed via simulations.
  prefs: []
  type: TYPE_NORMAL
- en: 'For instance, if we repeat the exact same process a second time:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: We now find a probability of 4.4%. This is not an error, but it is due to randomness
    when sampling initials.
  prefs: []
  type: TYPE_NORMAL
- en: Luckily, we can make the computation of this probability more robust thanks
    to replications. Intuitively, it works as follows. We repeat the same computation
    multiple times, giving us a range of possible probabilities. This allows us to
    assess the uncertainty of our result, and understand how the probability might
    vary due to taking different random samples of initials.
  prefs: []
  type: TYPE_NORMAL
- en: So the goal is to compute our probability multiple times (say 100 times), and
    see its distribution.
  prefs: []
  type: TYPE_NORMAL
- en: 'To repeat the same computation multiple times, it is best to write a function
    in order to avoid copy pasting the same code over and over. So we first write
    a function (called `initials`) which computes the probability that at least two
    persons share the same initials among a team of n people:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'A function in R requires to include:'
  prefs: []
  type: TYPE_NORMAL
- en: the parameters inside `()`, and
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the computation inside `{}`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We can then use our function to compute the probability that at least two persons
    share the same initials among a team of 8 people. And we combine it with the `replicate()`
    function to compute this probability 100 times.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, we visualize the distribution of these 100 probabilities thanks to
    a histogram and a boxplot (with the [{ggplot2} package](https://statsandr.com/blog/graphics-in-r-with-ggplot2/)):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/bc9df0d9dd98a1666a280fa5f50cfca5.png)'
  prefs: []
  type: TYPE_IMG
- en: Plot by author
  prefs: []
  type: TYPE_NORMAL
- en: These two plots show that the probability that at least two persons share the
    same initials among a team of 8 people is most likely between 3.5% and 4.5%.
  prefs: []
  type: TYPE_NORMAL
- en: For the record, during the meeting at the root of all this thinking, most of
    us thought that it was much less likely. Indeed, I believe we were tempted to
    compute the probability that someone who joins the team has “AS” as initials.
    This is indeed much less likely, as the probability is only 1/26 × 1/26 ≃ 0.15%.
  prefs: []
  type: TYPE_NORMAL
- en: 'However, this does not take into account the fact:'
  prefs: []
  type: TYPE_NORMAL
- en: that the newcomer can have the same initials as any other person, and
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: that it is not only the newcomer who can have the same initials as another person
    (2 people already working in the team when the newcomer arrives could have the
    same initials as well).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are puzzled by this finding, I recommend reading about the [birthday’s
    paradox](https://en.wikipedia.org/wiki/Birthday_problem). The birthday’s paradox
    states that the probability of two people sharing the same birthday becomes surprisingly
    high with a relatively small group of individuals. In practice, in a group of
    just 23 people, there is a greater than 50% chance that at least two individuals
    share the same birthday, illustrating our counterintuitive intuitions about the
    likelihood of such coincidences. This phenomenon arises due to the multitude of
    possible birthday pairs within the group, similar to the multitude of possible
    pairs if initials within a team.
  prefs: []
  type: TYPE_NORMAL
- en: For teams of different sizes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We are now interested in computing this probability not just for a team of 8
    persons, but for teams of different sizes. We can do this with the help of our
    function defined earlier.
  prefs: []
  type: TYPE_NORMAL
- en: 'For the illustration, let’s compute the probability that at least two persons
    have the same initials, for teams of 2 and up to 100 persons:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'We are left with storing these probabilities together with the number of persons
    in the team in a data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: Of course, two people having the same initials in a team of 1 (if we can call
    this a team…) is impossible.
  prefs: []
  type: TYPE_NORMAL
- en: 'An event which is impossible has a probability equal to 0\. We thus impute
    this probability in our data frame, in the first row:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, we visualize these probabilities in function of the number of persons
    in the team:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/7884bb57ec1810906ce9e7d0ca335b59.png)'
  prefs: []
  type: TYPE_IMG
- en: Plot by author
  prefs: []
  type: TYPE_NORMAL
- en: From the plot above, we see that the probability that at least two persons have
    the same initials reaches 50% when the team exceeds around 30 people.
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, notice that this probability becomes close to 100% when the team reaches
    around 75 people.
  prefs: []
  type: TYPE_NORMAL
- en: Verification
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For the sake of completeness, we now compare results obtained through simulations
    with results obtained from probability theory.
  prefs: []
  type: TYPE_NORMAL
- en: 'We first define the function that will be used to compare results found above:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: For our team
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: The probability that at least two persons have the same initials in a team of
    8 is 4.07%. This is close to the probability found with simulations, and within
    the range of 3.5% — 4.5%.
  prefs: []
  type: TYPE_NORMAL
- en: For teams of different sizes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We now compute the probability for teams between 1 and 100 persons:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, we visualize these probabilities in function of the number of persons
    in the team:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/b55649ecc5d806a8d561670ad6377081.png)'
  prefs: []
  type: TYPE_IMG
- en: Plot by author
  prefs: []
  type: TYPE_NORMAL
- en: 'For an easier comparison, we plot probabilities found thanks to simulations
    and thanks to probability theory on the same plot:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/3374f3e5fccf33bb3d28d7484dbfa71b.png)'
  prefs: []
  type: TYPE_IMG
- en: Plot by author
  prefs: []
  type: TYPE_NORMAL
- en: The plot above shows that results using probability theory are relatively similar
    to results obtained through simulations, indicating that the simulations are trustworthy.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The initial question, raised during a meeting, was “What is the probability
    that, among our team consisting of 8 persons, two have the same initials?”.
  prefs: []
  type: TYPE_NORMAL
- en: In this post, we first showed how to compute this probability through simulations
    in R. Secondly, we verified the veracity of the simulations thanks to probability
    theory. Furthermore, we illustrated how for loops, replications and writing a
    function can be used in R to answer a probability problem.
  prefs: []
  type: TYPE_NORMAL
- en: 'As a side note, it is important to keep in mind that in this post, we assumed
    the following:'
  prefs: []
  type: TYPE_NORMAL
- en: All letters of the alphabet had the same probability of occurring, meaning that
    all pairs of initials were equally probable. This is probably not the case in
    reality, as a first and last name starting both with X is not as probable as a
    first and last name starting respectively with M and K. This bias could be limited
    by specifying different weights when sampling initials.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We restricted ourselves to two-letters initials. Therefore, for compound first
    or last names, only the first letter is considered. Middle names are also not
    taken into account.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Last but not least, note that you will find slightly different results than
    mine, even if you use the exact same code. This is due to randomness. To replicate
    results as shown in this post, use `set.seed(6)`.
  prefs: []
  type: TYPE_NORMAL
- en: Thanks for reading.
  prefs: []
  type: TYPE_NORMAL
- en: As always, if you have a question or a suggestion related to the topic covered
    in this article, please add it as a comment so other readers can benefit from
    the discussion.
  prefs: []
  type: TYPE_NORMAL
- en: You can always use a larger number of replications, but in our case the final
    result is similar with more replications, and the aim of the post is more to show
    the development than the final answer.[↩︎](https://statsandr.com/blog/what-is-the-probability-that-two-persons-have-the-same-initials/#fnref1)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Related articles
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Google Analytics in R: Review of 2022](https://statsandr.com/blog/review-of-2022/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to keep yourself updated with the latest R news?](https://statsandr.com/blog/how-to-keep-up-to-date-with-the-latest-r-news/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Koh-Lanta 2022: the ambassadors probability problem](https://statsandr.com/blog/koh-lanta-2022-ambassadors-probability-problem/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Stats and R is 2 years old!](https://statsandr.com/blog/statsandr-is-2-years-old/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to track the performance of your blog in R?](https://statsandr.com/blog/track-blog-performance-in-r/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Originally published at* [*https://statsandr.com*](https://statsandr.com/blog/what-is-the-probability-that-two-persons-have-the-same-initials/)
    *on December 6, 2023.*'
  prefs: []
  type: TYPE_NORMAL
