- en: 8 Techniques to Model Seasonality
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/8-techniques-to-model-seasonality-2f81d739710](https://towardsdatascience.com/8-techniques-to-model-seasonality-2f81d739710)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: How to handle seasonality for forecasting
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://vcerq.medium.com/?source=post_page-----2f81d739710--------------------------------)[![Vitor
    Cerqueira](../Images/9e52f462c6bc20453d3ea273eb52114b.png)](https://vcerq.medium.com/?source=post_page-----2f81d739710--------------------------------)[](https://towardsdatascience.com/?source=post_page-----2f81d739710--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----2f81d739710--------------------------------)
    [Vitor Cerqueira](https://vcerq.medium.com/?source=post_page-----2f81d739710--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----2f81d739710--------------------------------)
    ·8 min read·Jul 14, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f4f0a31997052cf1d398d56f6c0843f8.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Clark Young](https://unsplash.com/@cbyoung?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: This article is a follow-up to a [previous post](https://medium.com/towards-data-science/3-types-of-seasonality-and-how-to-detect-them-4e03f548d167).
    There, we identified 3 types of seasonal patterns.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, we’ll:'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to describe the seasonality of a time series.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Go over 8 approaches you can use to model seasonality.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Modeling Seasonal Patterns
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Seasonality refers to repeatable patterns that recur over some period. It is
    an important source of variation that is important to model.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6a4af74cbdac7dfb5c56d993334d96ea.png)'
  prefs: []
  type: TYPE_IMG
- en: A time series and its seasonally-adjusted version. The data source is in the
    next section. Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: There are several ways of handling seasonality. Some approaches remove the seasonal
    component before modeling. Seasonally-adjusted data (a time series minus the seasonal
    component) [highlights long-term effects such as trends or business cycles](https://otexts.com/fpp2/components.html).
    Other approaches add extra variables that capture the cyclical nature of seasonality.
  prefs: []
  type: TYPE_NORMAL
- en: Before going over different methods, let’s create a time series and describe
    its seasonal patterns.
  prefs: []
  type: TYPE_NORMAL
- en: Analysis example
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We’ll use the same process we did in the [previous article](https://medium.com/towards-data-science/3-types-of-seasonality-and-how-to-detect-them-4e03f548d167)
    (see also reference [1]):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Here’s what this series look like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fd7b12b7da013e2103b66e92a0d3982e.png)'
  prefs: []
  type: TYPE_IMG
- en: Artificial time series with a stochastic stationary seasonality. Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can start by describing the seasonal pattern by its strength:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The result is 0.90 which suggests that [seasonality is indeed strong](https://medium.com/towards-data-science/3-types-of-seasonality-and-how-to-detect-them-4e03f548d167).
  prefs: []
  type: TYPE_NORMAL
- en: 'The auto-correlation plot of this time series is shown in the following figure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9f68dc7b77a616b8d16f83a580381751.png)'
  prefs: []
  type: TYPE_IMG
- en: Auto-correlation up to 24 lags. Image by author
  prefs: []
  type: TYPE_NORMAL
- en: The auto-correlation shows an oscillatory behavior. It has a significant peak
    on the first seasonal lag (12). These patterns confirm the relevance of the seasonality.
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, we check for seasonal unit roots using the Canova-Hansen test:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The result is 0, which indicates that there’s no seasonal unit root. So, we
    can conclude that the seasonal pattern is stationary.
  prefs: []
  type: TYPE_NORMAL
- en: So, how can we deal with seasonal patterns such as this one?
  prefs: []
  type: TYPE_NORMAL
- en: 8 Techniques to Model Seasonality
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the rest of this article, you’ll learn about 8 techniques to model seasonality.
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Seasonal dummy variables
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Seasonal dummies are a set of binary variables. These represent whether an observation
    belongs to a given period (e.g. January).
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s an example of how you can create these variables:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: This code results in the data below.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d1c525da5802d5f6f3f4ffc9ea19d685.png)'
  prefs: []
  type: TYPE_IMG
- en: Seasonal dummies before and after one-hot encoding. Image by author
  prefs: []
  type: TYPE_NORMAL
- en: First, we get information about the quarter and month in each observation (left-hand
    side table). This information is stored in the *datetime_feats* object*.* Then,
    we use one-hot encoding to create dummy variables (right-hand side table).
  prefs: []
  type: TYPE_NORMAL
- en: Seasonal dummies are especially effective if seasonality is deterministic. If
    we don’t expect changes in the seasonal pattern, both in intensity and periodicity.
  prefs: []
  type: TYPE_NORMAL
- en: We can check the coefficients of seasonal dummies to analyze the seasonal effects
    and changes therein. This can be beneficial for model interpretability.
  prefs: []
  type: TYPE_NORMAL
- en: The downside of seasonal dummies is that they assume that different periods
    are independent. January observations are correlated with those collected in December.
    But, dummy variables are blind to this correlation. So, if there are changes in
    the seasonal pattern, dummy variables may not be the best option.
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Fourier series
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/7b53bb4e6745e964edea39307a64606c.png)'
  prefs: []
  type: TYPE_IMG
- en: Example sine and cosine terms. Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: Fourier series are periodic and deterministic variables based on sine and cosine
    waves. Contrary to seasonal dummies, these trigonometric functions model seasonality
    as a cyclical pattern. This structure reflects reality better.
  prefs: []
  type: TYPE_NORMAL
- en: 'This approach is implemented in sktime Python package:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'You need to specify two main parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: 'sp_list: the seasonal periods as a list (e.g. 12 for monthly data)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'fourier_terms_list: the number of terms, which refers to the number of sine
    and cosine series to include. These affect the smoothness of the representation.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In practice, Fourier series are explanatory variables that you can add to the
    model. For example, [you can combine these with lagged features](/time-series-for-climate-change-forecasting-energy-demand-79f39c24c85e).
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Radial Basis Functions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/1079eba54b2dc583dda55e7e4ac5d376.png)'
  prefs: []
  type: TYPE_IMG
- en: 3 example radial basis functions. Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: Radial basis functions (RBF) are an alternative to the Fourier series. The idea
    is to create repeating bell-shaped curves to model repeating patterns.
  prefs: []
  type: TYPE_NORMAL
- en: RBFs are implemented in the *scikit-lego* Python package with the method *RepeatingBasisFunction:*
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The three most important parameters of this method are:'
  prefs: []
  type: TYPE_NORMAL
- en: 'n_periods: number of basis functions to include'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'input_range: the input range of the column we want to create the basis functions
    with. For example, in the example above we use (1, 12) which is the range of the
    months;'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'width: Width of the radial basis functions, which controls their smoothness'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Like the Fourier series, RBF variables can be used as explanatory variables
    in the model.
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Seasonal Auto-regression
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Auto-regression is the basis of most forecasting models. The idea is to use
    recent past observations (lags) to predict future values. This concept can be
    extended to model seasonality. Seasonal auto-regression models include past values
    of the same season as predictors.
  prefs: []
  type: TYPE_NORMAL
- en: 'SARIMA is a popular method that applies this idea:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: In the preceding code, we run *auto_arima* to find the best configuration of
    ARIMA. The resulting model includes the first lag of the same season as input.
  prefs: []
  type: TYPE_NORMAL
- en: Using seasonal lags as explanatory variables is an effective way of modeling
    seasonality. Note that you should deal with seasonal unit roots when using this
    approach. You can use *nsdiffs* and the Canova-Hansen test as we did before, and
    use seasonal differencing if necessary.
  prefs: []
  type: TYPE_NORMAL
- en: 5\. Adding Extra Variables
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Methods such as seasonal dummies or Fourier series capture recurrent patterns.
    But, these approaches are proxies for the things that cause seasonality.
  prefs: []
  type: TYPE_NORMAL
- en: Exogenous variables such as temperature or the number of working days in each
    month can be useful to model seasonality.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ddb1b5468ce9d5444fc6e3f391e3341e.png)'
  prefs: []
  type: TYPE_IMG
- en: Daily average temperature time series. Image by author. Data source in reference
    [2].
  prefs: []
  type: TYPE_NORMAL
- en: You can include these variables in a model by using an [ARDL formulation](https://medium.com/towards-data-science/machine-learning-for-forecasting-supervised-learning-with-multivariate-time-series-b5b5044fe068).
  prefs: []
  type: TYPE_NORMAL
- en: 6\. Adjustment via Seasonal Differencing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We can deal with seasonality by removing it from the data before modeling. This
    can be done with seasonal differencing or decomposition.
  prefs: []
  type: TYPE_NORMAL
- en: Seasonal differencing is the process of taking the difference between consecutive
    observations of the same season. This operation is especially useful to remove
    seasonal unit roots.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use the *diff* method to do seasonal differencing:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Above, we also build a Ridge regression model on the differenced series. You
    can get the forecasts on the original scale by reverting the differencing operation.
  prefs: []
  type: TYPE_NORMAL
- en: 7\. Adjustment via Decomposition
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can also remove seasonality with time series decomposition methods, such
    as STL.
  prefs: []
  type: TYPE_NORMAL
- en: What’s the difference between differencing and decomposition?
  prefs: []
  type: TYPE_NORMAL
- en: Both differencing and decomposition are used to remove seasonality from a time
    series. But, the transformed data is modeled differently.
  prefs: []
  type: TYPE_NORMAL
- en: When applying seasonal differencing, models work with the differenced data.
    You need to revert the differencing operation to get the forecasts on the original
    scale.
  prefs: []
  type: TYPE_NORMAL
- en: With a decomposition-based approach, you need two sets of forecasts. One for
    the seasonal part and another for the seasonally-adjusted data. The final forecast
    is the sum of the forecasts of each part. Most often, a seasonal naive method
    is used to forecast the seasonal component.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s an example of how a decomposition-based approach works:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: In this example, we build a Ridge regression model to forecast the seasonally-adjusted
    data. A seasonal naive model forecasts the seasonal component. Then, both forecasts
    are added together.
  prefs: []
  type: TYPE_NORMAL
- en: 8\. Dynamic Linear Models (DLM)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The parameters of a regression model are usually static. They do not change
    over time or are time-invariant. A DLM is a particular case of linear regression.
    The main feature is that the parameters vary with time, instead of being static.
  prefs: []
  type: TYPE_NORMAL
- en: DLMs posit that the structure of a seasonal time series changes over the seasons.
    So, a reasonable approach is to build a model with time-varying parameters. Parameters
    that vary seasonally.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 15 of the book](https://atsa-es.github.io/atsa-labs/sec-seasonal-dlm-overview.html)
    in reference [1] provides a neat R example of this approach. They use a time-varying
    MARSS (Multivariate Auto-Regressive State-Space) method to model changing seasonality.'
  prefs: []
  type: TYPE_NORMAL
- en: Key Takeaways
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this article, you learned about 8 different ways of modeling seasonality.
    These are:'
  prefs: []
  type: TYPE_NORMAL
- en: Seasonal dummies
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fourier series
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Radial basis functions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Seasonal auto-regression
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exogenous variables
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Seasonal differencing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Seasonal decomposition
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dynamic models with seasonally-varying parameters
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We used a time series with stochastic stationary seasonality as an example.
    Yet, some of the methods may not be the most appropriate for this type of seasonality.
    You should test different approaches and select one (or more) that suits your
    data.
  prefs: []
  type: TYPE_NORMAL
- en: Thank you for reading and see you in the next story!
  prefs: []
  type: TYPE_NORMAL
- en: Related Articles
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[3 Types of Seasonality and How to Detect Them](https://medium.com/towards-data-science/3-types-of-seasonality-and-how-to-detect-them-4e03f548d167)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Understanding Time Series Trend](https://medium.com/towards-data-science/understanding-time-series-trend-addfd9d7764e)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Time Series for Climate Change: Forecasting Energy Demand](/time-series-for-climate-change-forecasting-energy-demand-79f39c24c85e)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[https://github.com/vcerqueira/blog/blob/main/posts/seasonality/8_methods.py](https://github.com/vcerqueira/blog/blob/main/posts/seasonality/8_methods.py)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] Holmes, Elizabeth E., Mark D. Scheuerell, and E. J. Ward. “Applied time
    series analysis for fisheries and environmental data.” *NOAA Fisheries, Northwest
    Fisheries Science Center, Seattle, WA* (2020).'
  prefs: []
  type: TYPE_NORMAL
- en: '[2] [Weather, Snow, and Streamflow data from four western juniper-dominated
    Experimental Catchments in south western Idaho, USA.](https://data.nal.usda.gov/dataset/data-weather-snow-and-streamflow-data-four-western-juniper-dominated-experimental-catchments-south-western-idaho-usa)
    (Licence: U.S. Public Domain)'
  prefs: []
  type: TYPE_NORMAL
- en: '[3] Sims, Christopher A. “Seasonality in regression.” Journal of the American
    Statistical Association 69.347 (1974): 618–626.'
  prefs: []
  type: TYPE_NORMAL
