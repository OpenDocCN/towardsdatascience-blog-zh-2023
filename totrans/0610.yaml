- en: Creating Time Series Plots in Grafana
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/creating-time-series-plots-in-grafana-f9dade30dff4](https://towardsdatascience.com/creating-time-series-plots-in-grafana-f9dade30dff4)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Learn how to plot dynamic time series plots using Python and Grafana
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://weimenglee.medium.com/?source=post_page-----f9dade30dff4--------------------------------)[![Wei-Meng
    Lee](../Images/10fc13e8a6858502d6a7b89fcaad7a10.png)](https://weimenglee.medium.com/?source=post_page-----f9dade30dff4--------------------------------)[](https://towardsdatascience.com/?source=post_page-----f9dade30dff4--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----f9dade30dff4--------------------------------)
    [Wei-Meng Lee](https://weimenglee.medium.com/?source=post_page-----f9dade30dff4--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----f9dade30dff4--------------------------------)
    ·5 min read·Feb 9, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d9cd7b7c201a9cd6cf930c74708e8d41.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Dan Lohmar](https://unsplash.com/@dlohmar?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Grafana is a multi-platform open source analytics and interactive visualization
    web application. If you are performing data analytics, Grafana is an invaluable
    tool that allows you to build dashboards using a combination of various data sources,
    as well as different build-in visualization types.
  prefs: []
  type: TYPE_NORMAL
- en: You can download and install Grafana from [https://grafana.com/grafana/download](https://grafana.com/grafana/download).
    Platforms supported include Mac, Windows, Linux, Docker and ARM.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: For this article, I will show you how you can build a time series plot showing
    the temperature and humidity of a particular location.
  prefs: []
  type: TYPE_NORMAL
- en: For this article, I am going to assume that you are already familiar with the
    basics of Grafana and MySQL. If you are new to Grafana, check out my article ([https://www.codemag.com/Article/2207061/Developing-Dashboards-Using-Grafana](https://www.codemag.com/Article/2207061/Developing-Dashboards-Using-Grafana))
    from Code Magazine.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[](https://www.codemag.com/Article/2207061/Developing-Dashboards-Using-Grafana?source=post_page-----f9dade30dff4--------------------------------)
    [## Developing Dashboards Using Grafana'
  prefs: []
  type: TYPE_NORMAL
- en: 'By Wei-Meng Lee Published in:CODE Magazine: 2022 - July/August Last updated:
    August 31, 2022 In my earlier article on…'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: www.codemag.com](https://www.codemag.com/Article/2207061/Developing-Dashboards-Using-Grafana?source=post_page-----f9dade30dff4--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Sample App
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For this article, there will be three components that I will be working on:'
  prefs: []
  type: TYPE_NORMAL
- en: A Python script to continuous write values into a MySQL server. In real-life,
    the Python script may be reading values from sensors. For this article, I will
    simulate some random temperature and humidity values. These values will be sent
    to a MySQL server every five seconds.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A MySQL server containing a database to store all the values sent by the Python
    script.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Grafana dashboard to pull the data from the MySQL server.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/5c7f71dcb93c2fe8d9d31492ed259e14.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author; Logo of Python from [https://commons.wikimedia.org/wiki/File:Python_Windows_source_code_icon_2016.svg](https://commons.wikimedia.org/wiki/File:Python_Windows_source_code_icon_2016.svg)
  prefs: []
  type: TYPE_NORMAL
- en: 'The MySQL server will have a database named **WeatherReadings**, with one single
    table named **Readings**. The schema of the table looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: All images in this article created by author.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/496fb361395dc0c6da540eb7bae3409e.png)'
  prefs: []
  type: TYPE_IMG
- en: Creating the Database and Table
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following SQL statement creates the database and the table in MySQL:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Creating the Python Script
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following Python script connects to the MySQL server using the **mysqlclient**
    package and writes values to the database table:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The above script does the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Connects to the MySQL server’s **WeatherReadings** database using the `user1`
    account with “*password*” as password.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Defines the `insert_record()` function to insert a new temperature and humidity
    value into the **Readings** table.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `update()` function calls the `insert_record()` function every five seconds,
    simulating temperature and humidity values.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note that when saving the date and time, I used the utcnow() function instead
    of the `now()` function. The `utcnow()` function returns the current date and
    time in UTC (or Coordinated Universal Time). For example, Singapore’s time zone
    is UTC +8, and so if the current date and time in Singapore is 2023–02–08 **10**:07:38,
    then UTC time is 2023–02–08 **02**:07:38 (minus 8 hours). The reason for storing
    the time in UTC is because Grafana will automatically convert the UTC time to
    local time based on the browser time zone.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Configuring Grafana
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With the Python script out of the way, it is now time to configure Grafana.
  prefs: []
  type: TYPE_NORMAL
- en: Adding a MySQL Data Source
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In Grafana, add a new **MySQL Data Source** and configure it as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9f0fe2e3e42f5a9ee34cb902f545c0b7.png)'
  prefs: []
  type: TYPE_IMG
- en: Adding a Panel to the Dashboard
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Create a new Dashboard in Grafana and click on the **Add a new panel** button:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/657942338ad00dbd69acc31587398786.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Use the default **Time Series** panel and configure the panel with the following
    values:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0d453db9ab58a036846ddd40cda67551.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Note the SQL statement used:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: You need to set the `datetime` field as `time` in order for the **Time Series**
    panel to recognise the data as a time series.
  prefs: []
  type: TYPE_NORMAL
- en: 'Configure the **Title** property for the panel as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e2a1377e43f82c2a89674643051a23fd.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Configure the various properties for the **Graph styles** property for the
    panel as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/17c22e4cf042725acebed6a0007d6bda.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Click the **Apply** button to exit the panel and return to the dashboard. You
    should now see the panel displaying the time series for the temperature and humidity
    readings:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9a80cfc081e0d7586a6aad1c48ad0d33.png)'
  prefs: []
  type: TYPE_IMG
- en: Updating the Time Series Dynamically
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Click on the arrow displayed next to the refresh button and select **5s**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/54d753844f3556db90d96b5a2646771d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This will cause the panel to fetch data from the MySQL data source every five
    seconds. The panel should now refresh every five seconds:'
  prefs: []
  type: TYPE_NORMAL
- en: If you like reading my articles and that it helped your career/study, please
    consider signing up as a Medium member. It is $5 a month, and it gives you unlimited
    access to all the articles (including mine) on Medium. If you sign up using the
    following link, I will earn a small commission (at no additional cost to you).
    Your support means that I will be able to devote more time on writing articles
    like this.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://weimenglee.medium.com/membership?source=post_page-----f9dade30dff4--------------------------------)
    [## Join Medium with my referral link - Wei-Meng Lee'
  prefs: []
  type: TYPE_NORMAL
- en: Read every story from Wei-Meng Lee (and thousands of other writers on Medium).
    Your membership fee directly supports…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: weimenglee.medium.com](https://weimenglee.medium.com/membership?source=post_page-----f9dade30dff4--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this article, you learned how to plot a time series using Grafana and MySQL
    server. In the real-world, your data would be continually sent to the database
    server and Grafana would be configured to refresh its data every few seconds (up
    to you to configure).
  prefs: []
  type: TYPE_NORMAL
