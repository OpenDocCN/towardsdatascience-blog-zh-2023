- en: A Recommendation System For Academic Research (And Other Data Types)!
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个学术研究（以及其他数据类型）的推荐系统！
- en: 原文：[https://towardsdatascience.com/a-recommendation-system-for-academic-research-and-other-data-types-db5c5a68f1f5](https://towardsdatascience.com/a-recommendation-system-for-academic-research-and-other-data-types-db5c5a68f1f5)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/a-recommendation-system-for-academic-research-and-other-data-types-db5c5a68f1f5](https://towardsdatascience.com/a-recommendation-system-for-academic-research-and-other-data-types-db5c5a68f1f5)
- en: Implementing Natural Language Processing and Graph Theory to compare and recommend
    different types of documents
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实施自然语言处理和图论来比较和推荐不同类型的文档
- en: '[](https://ben-mccloskey20.medium.com/?source=post_page-----db5c5a68f1f5--------------------------------)[![Benjamin
    McCloskey](../Images/7118f5933f2affe2a7a4d3375452fa4c.png)](https://ben-mccloskey20.medium.com/?source=post_page-----db5c5a68f1f5--------------------------------)[](https://towardsdatascience.com/?source=post_page-----db5c5a68f1f5--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----db5c5a68f1f5--------------------------------)
    [Benjamin McCloskey](https://ben-mccloskey20.medium.com/?source=post_page-----db5c5a68f1f5--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://ben-mccloskey20.medium.com/?source=post_page-----db5c5a68f1f5--------------------------------)[![本杰明·麦克洛斯基](../Images/7118f5933f2affe2a7a4d3375452fa4c.png)](https://ben-mccloskey20.medium.com/?source=post_page-----db5c5a68f1f5--------------------------------)[](https://towardsdatascience.com/?source=post_page-----db5c5a68f1f5--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----db5c5a68f1f5--------------------------------)
    [本杰明·麦克洛斯基](https://ben-mccloskey20.medium.com/?source=post_page-----db5c5a68f1f5--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----db5c5a68f1f5--------------------------------)
    ·15 min read·Mar 29, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----db5c5a68f1f5--------------------------------)
    ·阅读时间15分钟·2023年3月29日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/0dd61847b82293c61235cf84a6d1f226.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0dd61847b82293c61235cf84a6d1f226.png)'
- en: Photo by [Shubham Dhage](https://unsplash.com/@theshubhamdhage?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Shubham Dhage](https://unsplash.com/@theshubhamdhage?utm_source=medium&utm_medium=referral)
    在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral) 提供
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: 'Many of the projects people develop today generally begin with the first crucial
    step: *Active Research*. Investing in what other people have done and building
    on their work is important for your project’s ability to add value. Not only should
    you learn from the strong conclusions of what other people have done, but you
    also will want to figure out what you *shouldn’t do* in your project to ensure
    its success.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 许多人现在开发的项目通常都从第一个关键步骤开始：*积极研究*。投资于别人所做的工作并在此基础上构建对你的项目增加价值至关重要。你不仅要从他人的结论中学习，还要找出在你的项目中*不应该做*的事情，以确保成功。
- en: 'As I worked through my thesis, I started collecting lots of different types
    of research files. For example, I had collections of different academic publications
    I read through as well as excel sheets with information containing the results
    of different experiments. As I completed the research for my thesis, I wondered:
    **Is there a way to create a recommendation system that can compare all the research
    I have in my archive and help guide me in my next project?**'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在我完成论文的过程中，我开始收集各种类型的研究文件。例如，我有不同的学术出版物的合集，以及包含不同实验结果的Excel表格。当我完成论文的研究时，我在想：**是否有办法创建一个推荐系统，比较我档案中的所有研究，并帮助指导我下一个项目？**
- en: In fact, there is!
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，确实有！
- en: '*Note: Not only would this be for a repository of all of the research you may
    be collecting from various search engines, but it will also work for any directory
    you have containing various types of different documents.*'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*注意：这不仅适用于你可能从各种搜索引擎收集的所有研究资料的存储库，也适用于你拥有的包含各种不同文档的目录。*'
- en: The Setup
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置
- en: I developed this recommendation with my team using Python 3\. Shoutout to them
    as well! We achieved something awesome here.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我和我的团队使用Python 3开发了这个推荐系统。也要向他们致敬！我们在这里取得了很棒的成就。
- en: There are lots of APIs that support this recommendation system and researching
    what each specific API can perform may be beneficial for your own learning.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多API支持这个推荐系统，研究每个具体的API可以执行的操作可能对你的学习有益。
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The Hurdle
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 障碍
- en: One big hurdle I had to overcome was the need for the recommendation machine’s
    ability to compare different types of files. For example, I wanted to see if an
    excel spreadsheet has information similar or is connected to the information within
    a PowerPoint and academic PDF journal. The trick to doing this was reading every
    file type into Python and transforming each object into a single string of words.
    This *normalizes* all the data and allows for the calculation of a similarity
    metric.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我必须克服的一大难题是推荐机器比较不同类型文件的能力。例如，我想看看一个 Excel 电子表格中的信息是否与 PowerPoint 和学术 PDF 期刊中的信息相似或相关。做到这一点的诀窍是将每种文件类型读取到
    Python 中，并将每个对象转换为一个单一的字符串。这*规范化*了所有数据，并允许计算相似性度量。
- en: PDF Reading Class
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PDF 阅读类
- en: The first class we will look at for this project is the **pdfReader** class
    which is able to format a PDF to be readable in Python. Of all the file formats,
    I would argue that PDFs are one of the most important since many of the journal
    articles downloaded from research repositories such as Google Scholar are in PDF
    format.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先关注的课程是**pdfReader**类，它可以将 PDF 格式化为可在 Python 中读取的格式。在所有文件格式中，我认为 PDF 是最重要的之一，因为许多从研究库（如
    Google Scholar）下载的期刊文章都是 PDF 格式的。
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Microsoft Powerpoint Reader
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Microsoft PowerPoint 阅读器
- en: The **pptReader** class is capable of reading Microsoft Powerpoint files into
    Python.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**pptReader** 类能够将 Microsoft PowerPoint 文件读取到 Python 中。'
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Microsoft Word Document Reader
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Microsoft Word 文档阅读器
- en: The **wordDocReader** class can be used for reading Microsoft Word Documents
    in Python. It utilizes the [*doc2txt*](https://pypi.org/project/doc2text/) API
    and returns a string of the text/information located within a given word document.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**wordDocReader** 类可以用于在 Python 中读取 Microsoft Word 文档。它利用了[*doc2txt*](https://pypi.org/project/doc2text/)
    API，并返回给定 Word 文档中位于的文本/信息的字符串。'
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Microsft Excel Reader
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Microsoft Excel 阅读器
- en: Sometimes researchers will include excel sheets of their results with their
    publications. Being able to read the column names, and even the values, could
    help with recommending results that are like what you are searching for. For example,
    what if you were researching information on the past performance of a certain
    stock? Maybe you search for the name and symbol which is annotated in a historical
    performance excel sheet. This recommendation system would recommend the excel
    sheet to you to help with your research.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 有时研究人员会将他们的结果以 Excel 表格的形式随出版物一起提供。能够读取列名，甚至是数值，可能有助于推荐与你搜索内容相似的结果。例如，如果你在研究某只股票的过去表现？也许你会在历史表现的
    Excel 表格中搜索名称和符号。这种推荐系统会向你推荐这个 Excel 表格，以帮助你的研究。
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The **csvReader** class will allow for CSV files to be included in your database
    and to be used in the system’s recommendations.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**csvReader** 类将允许将 CSV 文件包含在你的数据库中，并在系统的推荐中使用。'
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Here’s a helpful class. Not many people think about how there is valuable information
    stored within the bodies of PowerPoint presentations. These presentations are
    by and large created to visualize key ideas and information to the audience. The
    following class will help relate any PowerPoints you have in your database to
    other bodies of information in hopes of steering you towards connected pieces
    of work.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个有用的类。不是很多人会考虑到 PowerPoint 演示文稿中存储着有价值的信息。这些演示文稿主要是为了将关键观点和信息可视化展示给观众。以下课程将帮助你将数据库中的任何
    PowerPoint 文件与其他信息体关联，希望能引导你找到相关的工作。
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The final class for this system is a Microsoft Word document reader. Word documents
    are another valuable source of information. Many people will write reports, indicating
    their findings and ideas in word document format.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 本系统的最终课程是一个 Microsoft Word 文档阅读器。Word 文档是另一个宝贵的信息来源。许多人会撰写报告，以 Word 文档格式表示他们的发现和想法。
- en: '[PRE7]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: That’s a wrap for the classes used in today’s project. **Please note:** there
    are tons of other file types you can use to enhance your recommendation system.
    A current version of the code being developed will accept images and try to relate
    them to other documents within a database!
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 今天项目中使用的课程就到这里了。**请注意：** 还有许多其他文件类型可以用来增强你的推荐系统。当前版本的代码正在开发中，将接受图像并尝试将其与数据库中的其他文档关联！
- en: Data Processing
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据处理
- en: Preprocessing
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预处理
- en: Let’s look at how to preprocess this data. This recommendation system was built
    for a repository of academic research, therefore the need to break the text down
    using the preprocessing steps guided by Natural Language Processing (NLP) was
    important.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何预处理这些数据。这个推荐系统是为一个学术研究库构建的，因此使用自然语言处理（NLP）指导的预处理步骤来分解文本是非常重要的。
- en: The data processing class is simply called *datapreprocessor* and the first
    function within the class is a word parts of speech tagger.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 数据处理类被简单地称为*datapreprocessor*，类中的第一个函数是一个词性标记器。
- en: '[PRE8]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This function tags the parts of speech in a word and will come in handy later
    in the project.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数为单词标记词性，这在项目后续阶段会非常有用。
- en: 'Second, there is a function that conducts the normal NLP steps many of us have
    seen before. These steps are:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 第二步，有一个函数执行许多我们已经见过的标准NLP步骤。这些步骤包括：
- en: Lowercase each word
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将每个单词都转为小写
- en: Remove the punctuation
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 去掉标点符号
- en: Remove digits (*I only wanted to look at non-numeric information. This step
    could be taken out if desired*)
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 去掉数字（*我只想查看非数字信息。如果需要，可以省略此步骤*）
- en: Stopword removal.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 停用词移除。
- en: Lemmanitizaion. **This is where the get_wordnet_pos() function comes in handy
    for including parts of speech!**
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 词形还原。**在这一过程中，get_wordnet_pos()函数对于包含词性非常有用！**
- en: '[PRE9]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Next, there is a function to read all of the files into the system.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，有一个函数可以将所有文件读入系统中。
- en: '[PRE10]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '**As this is the first version of this system, I want to foot stomp that the
    code can be adapted to include many other file types!**'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**由于这是该系统的第一个版本，我想强调一下代码可以调整以包含许多其他文件类型！**'
- en: The next function is called the **database_preprocess()** which is used to process
    all of the files within your given database. The input is a list of the files,
    each with its associated string of text (processed already). The strings of text
    are then *vectorized* using **sklearn’s tfidVectorizer.** What is that exactly?
    Basically, it will transform all the text into different feature vectors based
    on the frequency of each given word. We do this so we can look at how closely
    related documents are using similarity formulas relating to vector arithmetic.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个函数被称为**database_preprocess()**，用于处理给定数据库中的所有文件。输入是一个文件列表，每个文件都有其关联的文本字符串（已处理）。这些文本字符串随后使用**sklearn的tfidfVectorizer**进行*向量化*。这到底是什么？基本上，它会根据每个给定单词的频率，将所有文本转换为不同的特征向量。我们这样做是为了通过与向量算术相关的相似度公式查看文档的相关性。
- en: '[PRE11]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The reason a vectorizer is created off of the database is that when a user gives
    a list of terms to search for in the database, those words will be vectorized
    based on their frequency in said database. **This is the biggest weakness of the
    current system. As we increase the size of the database, the time and computational
    allocation needed for calculating similarities will increase and slow down the
    system**. One recommendation given during a quality control meeting was to use
    Reinforcement Learning for recommending different articles of data.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个基于数据库的向量化器的原因是，当用户给出一个需要在数据库中搜索的术语列表时，这些单词将根据其在数据库中的频率被向量化。**这是当前系统的最大弱点。随着数据库规模的增加，计算相似度所需的时间和计算资源将增加，从而减慢系统速度**。在质量控制会议上提出的一个建议是使用强化学习来推荐不同的数据文章。
- en: Next, we can use an input processor that processes any word provided into a
    vector. This is synonymous to when you type a request into a search engine.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们可以使用一个输入处理器，将任何提供的单词处理成向量。这类似于你在搜索引擎中输入请求的过程。
- en: '[PRE12]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Since all of the information within and given to the database will be vectors,
    we can use **cosine similarity** to compute the angle between the vectors. The
    closer the angle is to 0, the less similar the two said vectors will be.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 由于数据库中的所有信息及给定的信息都将是向量，我们可以使用**余弦相似度**来计算向量之间的角度。角度越接近0，两个向量的相似度就越低。
- en: '[PRE13]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Once the capability of finding the similarity score between two vectors is done,
    rankings can now be created between the words being searched and the documents
    located within the database.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦找到两个向量之间的相似度分数，便可以创建搜索词与数据库中文档之间的排名。
- en: '[PRE14]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The vector file list is the list of vectors we created from the files before.
    The query vector is a vector of the words being searched. The file dictionary
    was created earlier which uses file names for the keys and the files’ text as
    values. Similarities are computed, and then a ranking is created favoring the
    most similar pieces of information to the queried words being recommended first.
    Note, what if there are greater than 3 recommendations? Incorporating elements
    of **Networks and Graph Theory** will add an extra level of computational benefit
    to this system and create more confident recommendations.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 向量文件列表是我们之前从文件中创建的向量列表。查询向量是正在搜索的词的向量。之前创建了文件字典，它使用文件名作为键，文件文本作为值。计算相似度后，会创建一个排名，优先推荐与查询词最相似的信息。注意，如果推荐结果超过3个怎么办？结合**网络与图论**的元素将为系统增加额外的计算优势，并生成更有信心的推荐。
- en: Page Rank Theory
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 页面排名理论
- en: Let’s take a quick detour and go over the theory of page rank. Don’t get me
    wrong, cosine similarity is a powerful computation for measuring the similarity
    between vectors, put incorporating page rank into your recommendation algorithm
    allows for similarity comparisons across multiple vectors (data within your database).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们稍作绕道，回顾一下页面排名理论。别误会，余弦相似度是测量向量之间相似性的强大计算方法，但将页面排名融入你的推荐算法，可以进行多个向量（你数据库中的数据）之间的相似性比较。
- en: Page rank was first designed by Larry Page to rank websites and measure their
    importance [1]. The basic idea is that a website can be deemed “more important”
    if more websites are linked to it. Drawing from this idea, a node on a graph can
    be ranked as more important if there is a decrease in the distance of its edge
    to other nodes. The shorter the collective distance a node has compared to other
    nodes in a graph, the more important said node is.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 页面排名最初由拉里·佩奇（Larry Page）设计，用于对网站进行排名并衡量其重要性[1]。基本思想是，如果更多的网站链接到一个网站，那么这个网站可以被认为是“更重要的”。借鉴这一思想，如果图中的一个节点到其他节点的边距离减少，该节点可以被认为更重要。节点相对于图中其他节点的整体距离越短，该节点就越重要。
- en: Today we will use one variation of PageRank called *eigenvector centrality*.
    E*igenvector centrality* is like PageRank in that it measures the connections
    between nodes of a graph, assigning higher scores for stronger connections. Biggest
    difference? E*igenvector centrality* will account for the importance of nodes
    connected to a given node to estimate how important that node is. This is synonymous
    with saying, a person who knows lots of important people may be very important
    themselves through these strong relationships. All-in-all, these two algorithms
    are very close in the way they are implemented.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 今天我们将使用页面排名的一种变体，称为*特征向量中心性*。*特征向量中心性*类似于页面排名，它衡量图中节点之间的连接，为更强的连接分配更高的分数。最大不同点？*特征向量中心性*会考虑与给定节点连接的节点的重要性，以估计该节点的相对重要性。这就好比说，认识许多重要人物的人，可能自己也通过这些强大的关系变得非常重要。总体而言，这两个算法在实现方式上非常相似。
- en: For this database, after the vectors are computed, they can be placed into a
    graph where their edge distance is determined by their similarity to other vectors.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个数据库，在计算出向量之后，可以将它们放入图中，其中它们的边距离由它们与其他向量的相似度决定。
- en: '[PRE15]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Okay, now what? We have the recommendations created by using the cosine similarity
    between each data point in the database, and recommendations computed by the eigenvector
    centrality algorithm. Which recommendations should we output? **Both!**
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 好了，接下来呢？我们有使用数据库中每个数据点之间的余弦相似度创建的推荐，以及通过特征向量中心性算法计算的推荐。我们应该输出哪些推荐？**两者都输出！**
- en: '[PRE16]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The final function of this script will weigh the different recommendations produced
    by cosine similarity and eigenvector centrality. Currently, 80% of the weight
    will be given to the recommendations produced by the cosine similarity recommendations,
    and 20% of the weight will be given to eigenvector centrality recommendations.
    The final recommendations can be computed based on these weights and aggregated
    together to produce recommendations that are representative of all the similarity
    computations in the system. The weights can easily be changed by the developer
    to reflect which batch of recommendations they feel are more important.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这个脚本的最终功能将根据余弦相似度和特征向量中心性加权不同的推荐。目前，80% 的权重将分配给余弦相似度生成的推荐，20% 的权重将分配给特征向量中心性生成的推荐。最终的推荐可以根据这些权重进行计算，并汇总生成代表系统中所有相似度计算的推荐。开发者可以轻松调整权重，以反映他们认为更重要的推荐批次。
- en: Example
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 示例
- en: Let's do a quick example with this code. The documents within my database are
    all in the formats previously discussed and pertain to different areas of machine
    learning. More documents in the database are related to *Generative Adversarial
    Networks (GANS),*so I would suspect those to be recommended first when “Generative
    Adversarial Network” is the query term.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用这段代码做一个快速示例。我的数据库中的文档都以之前讨论的格式存在，并涉及机器学习的不同领域。数据库中更多的文档与*生成对抗网络（GANs）*相关，因此我预计当查询词为“生成对抗网络”时，这些文档会被优先推荐。
- en: '[PRE17]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Running this block of code produces the following recommendations, along with
    the weight value for each recommendation.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 运行这段代码会生成以下推荐，并附上每个推荐的权重值。
- en: '**[(‘GAN_presentation.pptx’, 0.3411272882084124), (‘Using GANs to Augment UAV
    Data_V2.docx’, 0.16293615818015078), (‘GANS_DAY_1.docx’, 0.12546058188955278),
    (‘ml_pdf.pdf’, 0.10864164490536887)]**'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**[(‘GAN_presentation.pptx’, 0.3411272882084124), (‘Using GANs to Augment UAV
    Data_V2.docx’, 0.16293615818015078), (‘GANS_DAY_1.docx’, 0.12546058188955278),
    (‘ml_pdf.pdf’, 0.10864164490536887)]**'
- en: Let’s try one more. What if I query “Machine Learning” ?
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 再试一次。如果我查询“机器学习”会怎么样？
- en: '**[(‘ml_pdf.pdf’, 0.31244922151487337), (‘GAN_presentation.pptx’, 0.18170070184645432),
    (‘GANS_DAY_1.docx’, 0.14825501243059303), (‘Using GANs to Augment UAV Data_V2.docx’,
    0.1309153863914564)]**'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**[(‘ml_pdf.pdf’, 0.31244922151487337), (‘GAN_presentation.pptx’, 0.18170070184645432),
    (‘GANS_DAY_1.docx’, 0.14825501243059303), (‘Using GANs to Augment UAV Data_V2.docx’,
    0.1309153863914564)]**'
- en: Aha! As expected, the first document recommended is an introductory brief to
    machine learning! I only used 7 documents for this example, and the more documents
    added, the more recommendations one will receive!
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 啊哈！正如预期的那样，第一个推荐文档是机器学习的介绍性简报！我仅使用了 7 个文档作为示例，添加的文档越多，收到的推荐也会越多！
- en: Conclusion
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Today we looked at how you can create a recommendation system for files you
    collect (especially if you are collecting research for a project). The main feature
    of this system is that it goes one step further in computing the cosine similarity
    of vectors by adopting the eigenvector centrality algorithm for more concise,
    and better recommendations. Try this out today, and I hope it helps you get a
    better understanding of how related the pieces of data you possess are.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 今天我们探讨了如何为你收集的文件创建推荐系统（尤其是当你收集研究材料用于项目时）。该系统的主要特点是，通过采用特征向量中心性算法计算向量的余弦相似度，从而提供更简洁、更好的推荐。今天试试看，希望这能帮助你更好地理解你拥有的数据之间的相关性。
- en: '**If you enjoyed today’s reading, PLEASE give me a follow and let me know if
    there is another topic you would like me to explore! If you do not have a Medium
    account, sign up through my link** [**here**](https://ben-mccloskey20.medium.com/membership)
    **(I receive a small commission when you do this)! Additionally, add me on** [**LinkedIn**](https://www.linkedin.com/in/benjamin-mccloskey-169975a8/),
    **or feel free to reach out! Thanks for reading!**'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果你喜欢今天的阅读内容，请关注我，并告诉我是否有其他你希望我探讨的主题！如果你没有 Medium 账号，可以通过我的链接** [**这里**](https://ben-mccloskey20.medium.com/membership)
    **注册（这样我会收到少量佣金）！此外，你还可以在** [**LinkedIn**](https://www.linkedin.com/in/benjamin-mccloskey-169975a8/)
    **上添加我，或随时联系我！感谢你的阅读！**'
- en: Sources
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 来源
- en: '[https://www.geeksforgeeks.org/page-rank-algorithm-implementation/](https://www.geeksforgeeks.org/page-rank-algorithm-implementation/)'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://www.geeksforgeeks.org/page-rank-algorithm-implementation/](https://www.geeksforgeeks.org/page-rank-algorithm-implementation/)'
- en: 'Full Code: [https://github.com/benmccloskey/Research_recommend_model/blob/main/app.py](https://github.com/benmccloskey/Research_recommend_model/blob/main/app.py)'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完整代码：[https://github.com/benmccloskey/Research_recommend_model/blob/main/app.py](https://github.com/benmccloskey/Research_recommend_model/blob/main/app.py)
