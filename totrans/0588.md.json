["```py\nyears_list = list(range(2014,2023,2))\n\nlist_programming = [\n\n{\n    'Name' : [\"Javascript\" for i in range(5)],\n    'Year' : years_list,\n    'Rank' : [1,1,1,1,1]\n},\n\n{\n    'Name' : [\"Python\" for i in range(5)],\n    'Year' : years_list,\n    'Rank' : [4,3,3,2,2]\n},\n\n{\n    'Name' : [\"Java\" for i in range(5)],\n    'Year' : years_list,\n    'Rank' : [2,2,2,3,3]\n},\n\n{\n    'Name' : [\"Typescript\" for i in range(5)],\n    'Year' : years_list,\n    'Rank' : [10,10,7,4,4]\n},\n\n{\n    'Name' : [\"C#\" for i in range(5)],\n    'Year' : years_list,\n    'Rank' : [8,6,6,5,5]\n},\n\n{\n    'Name' : [\"C++\" for i in range(5)],\n    'Year' : years_list,\n    'Rank' : [6,5,5,7,6]\n},\n\n{\n    'Name' : [\"PHP\" for i in range(5)],\n    'Year' : years_list,\n    'Rank' : [3,4,4,6,7]\n},\n\n{\n    'Name' : [\"Shell\" for i in range(5)],\n    'Year' : years_list,\n    'Rank' : [9,9,9,9,8]\n},\n\n{\n    'Name' : [\"C\" for i in range(5)],\n    'Year' : years_list,\n    'Rank' : [7,8,7,7,9]\n},\n\n{\n    'Name' : [\"Ruby\" for i in range(5)],\n    'Year' : years_list,\n    'Rank' : [5,7,10,10,10]\n}\n\n]\n```", "```py\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nfig, ax = plt.subplots()\n```", "```py\nplt.rcParams[\"figure.figsize\"] = (12,6)\n```", "```py\nfor element in list_programming:\n  ax.plot(element[\"Year\"], \n          element[\"Rank\"], \n          \"o-\",                       # format of marker / format of line\n          markerfacecolor=\"white\")\n```", "```py\nplt.gca().invert_yaxis()\nplt.yticks(np.arange(1, 11, 1))\n```", "```py\nax.annotate(element[\"Name\"][0], \n              xy=(2022, element[\"Rank\"][4]), \n              xytext=(2022.2,element[\"Rank\"][4]), \n              va=\"center\")\n```", "```py\nfor element in list_programming:\n  ax.plot(element[\"Year\"], \n          element[\"Rank\"], \n          \"o-\", # format of marker / format of line\n          markerfacecolor=\"white\",\n          linewidth=3)\n  ax.annotate(element[\"Name\"][0], \n              xy=(2022, element[\"Rank\"][4]), \n              xytext=(2022.2,element[\"Rank\"][4]), \n              va=\"center\")\n\nplt.gca().invert_yaxis()\nplt.yticks(np.arange(1, 11, 1))\n\nfor spine in ax.spines.values():\n    spine.set_visible(False)\n```"]