- en: How To Deploy GitLab With Docker In 5 Seconds Or Less
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何在 5 秒钟或更短时间内使用 Docker 部署 GitLab
- en: 原文：[https://towardsdatascience.com/how-to-deploy-gitlab-with-docker-in-5-seconds-or-less-e1f9e95c0b76](https://towardsdatascience.com/how-to-deploy-gitlab-with-docker-in-5-seconds-or-less-e1f9e95c0b76)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-deploy-gitlab-with-docker-in-5-seconds-or-less-e1f9e95c0b76](https://towardsdatascience.com/how-to-deploy-gitlab-with-docker-in-5-seconds-or-less-e1f9e95c0b76)
- en: The Quickest Way To Spin Up A Production-Ready GitLab Instance
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动生产就绪的 GitLab 实例的最快方法
- en: '[](https://medium.knulst.de/?source=post_page-----e1f9e95c0b76--------------------------------)[![Paul
    Knulst](../Images/9fcb767d927a1fe53ee739c584fdf92c.png)](https://medium.knulst.de/?source=post_page-----e1f9e95c0b76--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e1f9e95c0b76--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e1f9e95c0b76--------------------------------)
    [Paul Knulst](https://medium.knulst.de/?source=post_page-----e1f9e95c0b76--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.knulst.de/?source=post_page-----e1f9e95c0b76--------------------------------)[![保罗·克努尔斯特](../Images/9fcb767d927a1fe53ee739c584fdf92c.png)](https://medium.knulst.de/?source=post_page-----e1f9e95c0b76--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e1f9e95c0b76--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e1f9e95c0b76--------------------------------)
    [保罗·克努尔斯特](https://medium.knulst.de/?source=post_page-----e1f9e95c0b76--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e1f9e95c0b76--------------------------------)
    ·3 min read·Mar 27, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e1f9e95c0b76--------------------------------)
    ·阅读时间 3 分钟·2023年3月27日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/6f7b205b9c7f1725f99062be645e2e6a.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6f7b205b9c7f1725f99062be645e2e6a.png)'
- en: '[Image by rawpixel.com](https://www.freepik.com/free-photo/development-growth-progress-icon-concept_2758711.htm)
    on Freepik'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[由 rawpixel.com 提供的图片](https://www.freepik.com/free-photo/development-growth-progress-icon-concept_2758711.htm)
    来源于 Freepik'
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: '**GitLab is a web-based Git repository management tool** that helps teams to
    collaborate on code. Also, it provides a complete DevOps platform, from version
    control, code review, issue tracking, and CI/CD.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**GitLab 是一个基于 Web 的 Git 仓库管理工具**，帮助团队协作编写代码。同时，它提供了一个完整的 DevOps 平台，从版本控制、代码审查、问题跟踪到
    CI/CD。'
- en: One of the key benefits of Gitlab is its versatility and flexibility because
    it can be hosted on-premise and can be easily customized to suit the needs of
    every team. Additionally, it has a wide range of features and integrations, making
    it a good choice for teams.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: GitLab 的一个关键优势是其多样性和灵活性，因为它可以在本地托管，并且可以轻松定制以满足每个团队的需求。此外，它具有广泛的功能和集成，使其成为团队的不错选择。
- en: '**Using Docker,** it is incredibly easy and fast to set up a GitLab instance.
    You can spin up a Gitlab instance in a single command, without having to worry
    about installing and configuring dependencies manually.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**使用 Docker，** 设置 GitLab 实例极其简单快速。您可以通过一条命令启动 GitLab 实例，无需手动安装和配置依赖项。'
- en: '**This makes it a great choice for software developers who want to start with
    GitLab quickly and easily.**'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**这使它成为希望快速轻松开始使用 GitLab 的软件开发人员的绝佳选择。**'
- en: Deploy GitLab using Sameersbn Compose file
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Sameersbn Compose 文件部署 GitLab
- en: 'The first step to deploy GitLab is downloading the up-to-date version of the
    Compose file:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 部署 GitLab 的第一步是下载最新版本的 Compose 文件：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, generate three at least 64 characters long random strings, open the Compose
    file, and use these strings for:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，生成三个至少 64 个字符长的随机字符串，打开 Compose 文件，并使用这些字符串进行：
- en: '`GITLAB_SECRETS_OTP_KEY_BASE`: Used to encrypt 2FA secrets in the database.
    No user will be able to log in with 2FA if you lose this key'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GITLAB_SECRETS_OTP_KEY_BASE`：用于加密数据库中的 2FA 密钥。如果您丢失此密钥，用户将无法使用 2FA 登录。'
- en: '`GITLAB_SECRETS_DB_KEY_BASE`: Used for encrypting CI secrets and import credentials.
    If changed/lost you will not be able to use CI secrets anymore.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GITLAB_SECRETS_DB_KEY_BASE`：用于加密 CI 密钥和导入凭证。如果更改或丢失，您将无法再使用 CI 密钥。'
- en: '`GITLAB_SECRETS_SECRET_KEY_BASE`: Use to generate password reset links and
    standard auth features. You cannot reset passwords through emails this is changed/lost.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GITLAB_SECRETS_SECRET_KEY_BASE`：用于生成密码重置链接和标准认证功能。如果更改或丢失，您将无法通过电子邮件重置密码。'
- en: Start your GitLab instance
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动您的 GitLab 实例
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**After some minutes GitLab is started and usable.**'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**几分钟后，GitLab 就会启动并可用。**'
- en: Deploy GitLab Manually Using Docker Commands
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Docker 命令手动部署 GitLab
- en: Instead of downloading the up-to-date Compose file from Sameersbn, you can manually
    launch the GitLab container, a Redis container, and a PostgreSQL container with
    three simple steps.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 与其从 Sameersbn 下载最新的 Compose 文件，不如通过三个简单的步骤手动启动 GitLab 容器、Redis 容器和 PostgreSQL
    容器。
- en: 'Step 1: Start the PostgreSQL container'
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤 1：启动 PostgreSQL 容器
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Step 2: Start the Redis container'
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤 2：启动 Redis 容器
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Step 3: Start the GitLab container'
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤 3：启动 GitLab 容器
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '*Note: The docker commands use shared volumes (indicated through* `*./*`*)
    that will be created in the directory the Docker run command is executed*'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '*注意：docker 命令使用共享卷（通过* `*./*`*）在执行 Docker run 命令的目录中创建。*'
- en: Accessing Your GitLab Instance
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 访问你的 GitLab 实例
- en: After the GitLab application is started successfully (could take some minutes)
    you can switch to your browser, point it to `http://localhost:10080`, and set
    a password for the root user account.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在 GitLab 应用程序成功启动后（可能需要几分钟），你可以切换到浏览器，指向 `http://localhost:10080`，并为 root 用户账户设置密码。
- en: Now, the GitLab application is ready for testing and **you can start pushing
    your code to it!**
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，GitLab 应用程序已经准备好进行测试，**你可以开始向其中推送代码！**
- en: Conclusion
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Setting up a personal GitLab is no rocket science and can be done in less than
    3 seconds (*image download and start-up times not included).*
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 设置个人 GitLab 并不是火箭科学，**不到 3 秒**就能完成（*不包括镜像下载和启动时间*）。
- en: Although this tutorial is for personal setup on your development machine, you
    can easily do this on any server to make the GitLab instance available for everyone.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然本教程是针对你开发机器上的个人设置，但你也可以在任何服务器上轻松完成，以便让 GitLab 实例对所有人可用。
- en: If doing this, I would suggest using the Sameersbn Compose file and adding a
    Traefik Proxy in front of it to make it available over a public domain name instead
    of an IP.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这样做，我建议使用 Sameersbn Compose 文件，并在前面添加一个 Traefik 代理，以便通过公共域名而不是 IP 访问。
- en: 'The following tutorial covers all steps needed to set up a Traefik proxy that
    can be used to make GitLab accessible with a Hostname and secure the connection
    with an SSL certificate:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 以下教程涵盖了设置 Traefik 代理所需的所有步骤，以便通过主机名访问 GitLab 并用 SSL 证书保护连接：
- en: '[](https://www.paulsblog.dev/how-to-setup-traefik-with-automatic-letsencrypt-certificate-resolver/?source=post_page-----e1f9e95c0b76--------------------------------)
    [## How to setup Traefik v2 with automatic Let''s Encrypt certificate resolver'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 如何设置带有自动 Let''s Encrypt 证书解析器的 Traefik v2](https://www.paulsblog.dev/how-to-setup-traefik-with-automatic-letsencrypt-certificate-resolver/?source=post_page-----e1f9e95c0b76--------------------------------)'
- en: Today it is really important to have SSL-encrypted websites. This guide will
    show how easy it is to have an automatic…
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 今天拥有 SSL 加密的网站非常重要。本指南将展示如何轻松实现自动化……
- en: www.paulsblog.dev](https://www.paulsblog.dev/how-to-setup-traefik-with-automatic-letsencrypt-certificate-resolver/?source=post_page-----e1f9e95c0b76--------------------------------)
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '[www.paulsblog.dev](https://www.paulsblog.dev/how-to-setup-traefik-with-automatic-letsencrypt-certificate-resolver/?source=post_page-----e1f9e95c0b76--------------------------------)'
- en: I hope this article gave you a quick and neat overview of how to set up your
    personal instance of GitLab.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 希望这篇文章为你提供了设置个人 GitLab 实例的快速而清晰的概述。
- en: Do you have any questions regarding this tutorial? I would love to hear your
    thoughts and answer your questions. Please share everything in the comments.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本教程有任何疑问吗？我很乐意听取你的想法并回答你的问题。请在评论中分享一切。
- en: Feel free to connect with me on [my blog](https://www.paulsblog.dev/), [LinkedIn](https://www.linkedin.com/in/paulknulst/),
    [Twitter](https://twitter.com/paulknulst), and [GitHub](https://github.com/paulknulst).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过 [我的博客](https://www.paulsblog.dev/)、[LinkedIn](https://www.linkedin.com/in/paulknulst/)、[Twitter](https://twitter.com/paulknulst)
    和 [GitHub](https://github.com/paulknulst) 随时联系我。
- en: Thank you for reading, and **happy coding!** 🥳 👨🏻‍💻
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读，**祝编程愉快！** 🥳 👨🏻‍💻
- en: '*This post was initially published in my blog at* [*https://www.paulsblog.dev/how-to-deploy-gitlab-with-docker-in-5-seconds-or-less/*](https://www.paulsblog.dev/how-to-deploy-gitlab-with-docker-in-5-seconds-or-less/)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '*此帖子最初发布在我的博客上* [*https://www.paulsblog.dev/how-to-deploy-gitlab-with-docker-in-5-seconds-or-less/*](https://www.paulsblog.dev/how-to-deploy-gitlab-with-docker-in-5-seconds-or-less/)'
