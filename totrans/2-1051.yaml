- en: Host Your Google Earth Engine RESTful APIs on Colab for Free
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/host-your-google-earth-engine-restful-apis-on-colab-for-free-3a95abc729d0](https://towardsdatascience.com/host-your-google-earth-engine-restful-apis-on-colab-for-free-3a95abc729d0)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: With FastAPI and ngrok
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://dgg32.medium.com/?source=post_page-----3a95abc729d0--------------------------------)[![Sixing
    Huang](../Images/48f445636ed1e32a53b610f6afc93ef2.png)](https://dgg32.medium.com/?source=post_page-----3a95abc729d0--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3a95abc729d0--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3a95abc729d0--------------------------------)
    [Sixing Huang](https://dgg32.medium.com/?source=post_page-----3a95abc729d0--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----3a95abc729d0--------------------------------)
    ·8 min read·Jan 6, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5ed2171b29624898c3a85015cd02aad1.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [NASA](https://unsplash.com/@nasa?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/images/nature/earth?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: Geospatial data has been in high demand. It reveals how our planet changes over
    time. When we talk about geospatial, we think of [Google Earth Engine](https://earthengine.google.com/)
    (GEE). This service has several advantages. It hosts many large data collections
    that span over 37 years. All computations run on Google’s powerful cloud infrastructure.
    What’s more, it is free for non-profit projects. With GEE, we can study the [land
    use land cover](https://medium.com/geekculture/monitor-land-use-changes-with-google-earth-engine-65cd15e10c6c)
    (LULC), the [vegetation](https://medium.com/p/909a2ad51a48), the local climate
    ([here](https://medium.com/p/c6aa77fecdb1) and [here](https://medium.com/p/ae21261854d6)),
    and even [the crop production in the US](https://medium.com/p/9cfd14813e99) for
    free.
  prefs: []
  type: TYPE_NORMAL
- en: However, GEE does have a high barrier to entry. Firstly, proficiency in JavaScript
    or Python is a must. Secondly, we need to be familiar with many geospatial concepts,
    such as image collection, geometry, and satellite bands. Thirdly, its asynchronous
    request-response pattern takes some getting used to for newcomers.
  prefs: []
  type: TYPE_NORMAL
- en: This poses a small challenge for many data scientists. More often than not,
    they just want some values for a set of coordinates quickly, such as the soil
    pH or the mean land temperature. As of this writing, they would need to go through
    a fair bit of coding because GEE provides no RESTful API. Wouldn’t it be nice
    if we can fill that gap ourselves (Video 1)? Our APIs should wrap up some common
    GEE computations and offer HTTP access across the internet.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9632d01b74d6d2de04831c9114b171c8.png)'
  prefs: []
  type: TYPE_IMG
- en: Video 1\. Google Earth Engine API created on Google Colab with FastAPI. Video
    by author.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s do it in this article. I choose [FastAPI](https://fastapi.tiangolo.com/)
    for the job. This trendy library allows us to build high-performance APIs in Python,
    one of the two service languages in GEE. And Google Colab is the platform of choice.
    Colab not only is integrated with GEE seamlessly, but it can also serve the APIs
    on HTTP publicly with the help of [ngrok](https://ngrok.com/) (Video 1). In this
    article, I am going to describe the construction of two APIs. One returns the
    land temperature and the other calculates the soil pH for a given set of coordinates.
    Afterward, I will demonstrate how to use the APIs to get the metadata for some
    bacteria from [BacDive](https://bacdive.dsmz.de/).
  prefs: []
  type: TYPE_NORMAL
- en: The APIs are defined here.
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://colab.research.google.com/drive/1BNsFLHA_ISC7sDSLF4-znBNY9YSIUbh1?usp=sharing&source=post_page-----3a95abc729d0--------------------------------)
    [## Google Colaboratory GEE APIs'
  prefs: []
  type: TYPE_NORMAL
- en: colab.research.google.com](https://colab.research.google.com/drive/1BNsFLHA_ISC7sDSLF4-znBNY9YSIUbh1?usp=sharing&source=post_page-----3a95abc729d0--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: This is the Python app that validates data in BacDive with our GEE APIs.
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://colab.research.google.com/drive/12NXlV6Q8Qrs6hLqEIeEmQ1cm_CElCkOB?usp=sharing&source=post_page-----3a95abc729d0--------------------------------)
    [## Google Colaboratory BacDive'
  prefs: []
  type: TYPE_NORMAL
- en: colab.research.google.com](https://colab.research.google.com/drive/12NXlV6Q8Qrs6hLqEIeEmQ1cm_CElCkOB?usp=sharing&source=post_page-----3a95abc729d0--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Google Earth Engine APIs with FastAPI and ngrok
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: First off, you will need a [Google Earth Engine account](https://earthengine.google.com/signup/)
    and an [ngrok account](https://dashboard.ngrok.com/signup). Find your ngrok Authtoken
    on your account page (Figure 1).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a08e0958258bc02ef0ba8277a41d01f9.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1\. Store the Authtoken in your ngrok account page. Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: 1.1 Initialization
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create a Colab notebook. After the library imports, let’s initialize both GEE
    and ngrok. First, follow Google’s instructions to authenticate and initialize
    GEE (Lines 1 & 2). Afterward, the `input` function will prompt you for your ngrok
    Authtoken (Line 3). Paste your Authtoken in the input box and confirm. The code
    will then authorize your ngrok instance at Line 4.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 1.2 GEE wrapper functions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Next, we can create some wrapper functions that encapsulate the GEE interactions.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: In general, GEE stores measurement results in images. Some measurements, such
    as elevation and soil pH, were done only once. They are stored in single images.
    In contrast, other measurements, such as soil temperature and precipitation, are
    done periodically. They are instead stored in image collections. The two functions
    `generate_collection` (Lines 1–3) and `generate_image` (Lines 14–15) return image
    collections and single images, respectively. Then, we would like to get the mean
    measurement values for the target regions (Lines 5–12 & Lines 17–18).
  prefs: []
  type: TYPE_NORMAL
- en: 1.3 FastAPI
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It is time to set up FastAPI in our notebook.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'In this code block, we first initialize a FastAPI app. Then we define three
    routes: the root, `land-surface-temperature`, and `soil-ph`. In the latter two,
    we use our functions from Section 1.2 to request the measurement values from GEE.
    The temperature values come from the `MOD11A1.061 Terra Land Surface Temperature
    and Emissivity Daily Global 1km` dataset ([MODIS data and products acquired through
    the LP DAAC have no restrictions on subsequent use, sale, or redistribution](https://developers.google.com/earth-engine/datasets/catalog/MODIS_061_MOD11A1#terms-of-use)),
    while the pH values are provided by the `OpenLandMap Soil pH in H2O` dataset ([CC-BY-SA-4.0](https://spdx.org/licenses/CC-BY-SA-4.0.html)).'
  prefs: []
  type: TYPE_NORMAL
- en: 1.4 ngrok
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now let’s start the API service. The code here is borrowed from [an answer](https://stackoverflow.com/questions/63833593/how-to-run-fastapi-uvicorn-in-google-colab)
    on stackoverflow.com.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The code will generate an endpoint URL and keep running (Video 1).
  prefs: []
  type: TYPE_NORMAL
- en: 1.5 Test
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We can now test the service. Click the endpoint URL, and you will be greeted
    by the “hello world” message at the root (Video 1).
  prefs: []
  type: TYPE_NORMAL
- en: Amazingly, FastAPI will generate the documentation automatically. You can visit
    it at the `/redoc` route (Figure 2).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/08a40f14f1cd561d1d59ed5f5052617f.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2\. Documentation prepared by FastAPI. Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s test the `land-surface-temperature` API. Encode the required parameters
    as key-value pairs after the “?” mark in your URL. For example, the following
    query string allows us to get the land surface temperature for (52.72389418745157,
    -92.03593750000002) between 2020–01–1 and 2020–05–01.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/67d871616cf004a5ced9da477a3fbd67.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3\. The land surface temperature for (52.72389418745157, -92.03593750000002)
    between 2020–01–1 and 2020–05–01\. Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: Be aware that the returned value is in Kelvin (Figure 3).
  prefs: []
  type: TYPE_NORMAL
- en: The `soil-ph` API works similarly. But it does not require a sampling period.
    So the following query string alone can request the soil pH for the same pair
    of coordinates (Video 1).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 2\. Compare BacDive’s lab results to the wild metadata from GEE
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The [**BacDive**](https://bacdive.dsmz.de/) database by DSMZ collects information
    about bacterial isolates, including their growth temperature, pH, and metabolic
    profiles. Be aware that nearly all its information is generated in the lab. And
    it is likely that microorganisms behave quite differently in the wild.
  prefs: []
  type: TYPE_NORMAL
- en: Recently, [**BacDive**](https://bacdive.dsmz.de/)has integrated [**Microbeatlas**](https://microbeatlas.org/).
    The embedded maps of [Microbeatlas](https://microbeatlas.org/) show the global
    distributions of 16S sequences of many bacteria (Figure 4).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3ca372d78a44bc5fd86a86239ab39ea8.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4\. [BacDive](https://bacdive.dsmz.de/strain/132485) with [Microbeatlas](https://microbeatlas.org/).
    Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: This crossover is great. Now, researchers can not only learn how the bacteria
    behave in the lab (BacDive) but also where they can be found around the world
    (Microbeatlas). But we can do more. We can gather the wild metadata from our freshly
    minted GEE APIs and compare them with BacDive’s lab results. This comparison can
    show us whether bacteria live differently in the lab and in the wild.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s take the bacterium [*Rhodopseudomonas palustris* R1](https://bacdive.dsmz.de/strain/1822)
    as our example. Its Microbeatlas [page](https://microbeatlas.org/index.html?action=taxon&taxon_id=90_86%3B96_297%3B97_329%3B98_429%3B99_5209&stattab=map)
    shows us that this bacterium can be found in a long list of samples (Figure 5).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/079c61d1fec73eca2a0212f2c271cd8a.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 5\. The global distribution of [*Rhodopseudomonas palustris* R1](https://bacdive.dsmz.de/strain/1822)
    according to [Microbeatlas](https://microbeatlas.org/index.html?action=taxon&taxon_id=90_86%3B96_297%3B97_329%3B98_429%3B99_5209&stattab=map).
    Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: As of 2023–01–05, the `DOWNLOAD` button in Microbeatlas does not work. So I
    filtered these samples with the keyword “soil”. And then I examined the top samples
    and chose those with complete location and time data (Table 1).
  prefs: []
  type: TYPE_NORMAL
- en: Table 1\. Five soil samples *in which* [*Rhodopseudomonas palustris* R1](https://bacdive.dsmz.de/strain/1822)
    can be found abundantly.
  prefs: []
  type: TYPE_NORMAL
- en: With the following Python code, we can get the land temperature and pH values
    for these samples (also available in my Colab link above).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: The results are shown in Table 2.
  prefs: []
  type: TYPE_NORMAL
- en: Table 2\. Temperature and pH values of the five samples according to GEE.
  prefs: []
  type: TYPE_NORMAL
- en: On the one hand, the temperature values of these top five samples range from
    11 to 19 °C. They are much lower than the growth temperature of 28–30 °C shown
    in BacDive. On the other hand, BacDive does not record the growth pH for this
    bacterium. But our results indicate that [*Rhodopseudomonas palustris* R1](https://bacdive.dsmz.de/strain/1822)
    can be found abundantly in acidic soil and thus fill the information gap in BacDive.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This article shows how easy it is to prototype our own RESTful APIs for GEE
    with FastAPI and ngrok on Colab. With several lines of code, we can set up fully
    functional APIs for free on the internet. We can now request geospatial results
    from GEE via simple URLs. Hopefully, these APIs will attract more users and researchers
    to GEE, too. I have only showcased two APIs in this article. And I encourage you
    to build more APIs for your projects. You can modify the query string design,
    too. But be aware that this setup is not scalable. In production, we’d better
    deploy the APIs on [Deta](https://www.deta.sh/?ref=fastapi) or other cloud infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: As you can see in the BacDive section, these simple APIs are very useful. We
    used them to fill the information gaps in BacDive. But why stop there? For example,
    we can sequence microbial DNA around the world and combine the results with the
    GEE metadata. These analyses may reveal the environmental factors that facilitate
    or limit the spread of certain microorganisms. This knowledge can help us fight
    infectious diseases and contain pandemics.
  prefs: []
  type: TYPE_NORMAL
- en: '*Data from BacDive is licensed under a* [*Creative Commons Attribution 4.0
    International License*](http://creativecommons.org/licenses/by/4.0/)*.*'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://dgg32.medium.com/membership?source=post_page-----3a95abc729d0--------------------------------)
    [## Join Medium with my referral link - Sixing Huang'
  prefs: []
  type: TYPE_NORMAL
- en: As a Medium member, a portion of your membership fee goes to writers you read,
    and you get full access to every story…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: dgg32.medium.com](https://dgg32.medium.com/membership?source=post_page-----3a95abc729d0--------------------------------)
  prefs: []
  type: TYPE_NORMAL
