["```py\npython -m pip install tenacity\n```", "```py\nconda install -c conda-forge tenacity\n```", "```py\n@retry()\nasync def coro_func():\n    pass\n```", "```py\n@retry(stop=stop_after_attempt(5))\nasync def coro_func():\n    pass\n```", "```py\n@retry(wait=wait_fixed(2))\nasync def coro_func():\n    pass\n```", "```py\n@retry(wait=wait_incrementing(start=1, increment=1, max=5))\nasync def coro_func():\n    pass\n```", "```py\n@retry(reraise=True, stop=stop_after_attempt(3))\nasync def coro_func():\n    pass\n```", "```py\nfrom tenacity import *\n\ndef check_is_even(retry_state: RetryCallState):\n    if retry_state.outcome.exception():\n        return True\n\n    return retry_state.outcome.result() % 2 == 0\n```", "```py\ndef my_before_log(logger: Logger):\n    def my_log(retry_state: RetryCallState):\n        fn = retry_state.fn\n        args = retry_state.args\n        attempt = retry_state.attempt_number\n\n        if attempt > 2:\n            logger.warning(f\"Start retry method {fn.__name__} with args: {args}\")\n    return my_log\n```"]