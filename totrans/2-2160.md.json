["```py\nname = \"Yen\"\n\nif name == \"Yen\":\n    print(\"This is your account.\")\nelif name == \"Ben\":\n    print(\"This is your sister's account.\")\nelse:\n    print(\"Fraud attempt.\")\n```", "```py\nname = \"Yen\"\n\nmatch name:\n    case \"Yen\":\n        print(\"This is your account.\")\n    case \"Ben\":\n        print(\"This is your sister's account.\")\n    case _:\n        print(\"Fraud attempt.\")\n```", "```py\n# Online Python compiler (interpreter) to run Python online.\n# Write Python 3 code in this online editor and run it.\nclass Honda:\n    # See below for explanation of __match_args__\n    __match_args__ = (\"year\", \"model\", \"cost\")\n    def __init__(self, year, model, cost):\n        self.year = year\n        self.model = model\n        self.cost = cost\n\nclass Subaru:\n    __match_args__ = (\"year\", \"model\", \"cost\")\n    def __init__(self, year, model, cost):\n        self.year = year\n        self.model = model\n        self.cost = cost\n\ncar = Subaru(2021, \"Outback\", 18000) \n```", "```py\nif isinstance(car, Honda):\n    print(\"Honda \" + car.model)\nelif isinstance(car, Subaru):\n    print(\"Subaru \" + car.model)\nelse:\n    print(\"Failure :(\")\n```", "```py\nmatch car:\n    case Honda(year, model, cost):\n        print(\"Honda \" + model)\n    case Subaru(year, model, cost):\n        print(\"Subaru \" + model)\n    case _:\n        print(\"Failure\")\n```", "```py\n>>> my_str = \"hello\"\n>>> my_str[1:3]\n'el'\n```", "```py\n>>> my_lst = ['apple', 'orange', 'blackcurrant', 'mango', 'pineapple']\n>>> my_lst[:3]\n['apple', 'orange', 'blackcurrant']\n>>> my_lst[2:]\n['blackcurrant', 'mango', 'pineapple']\n```", "```py\n>>> my_str[:]\n'hello'\n>>> my_lst[:]\n['apple', 'orange', 'blackcurrant', 'mango', 'pineapple']\n```", "```py\n>>> new_lst = my_lst[2:]\n>>> new_lst\n['blackcurrant', 'mango', 'pineapple']\n>>> my_lst\n['apple', 'orange', 'blackcurrant', 'mango', 'pineapple']\n```", "```py\n>>> my_str[:-1]\n'hell'\n```", "```py\n>>> my_long_lst = ['apple', 'orange', 'blackcurrant', 'mango', 'pineapple', 'grapes', 'kiwi', 'papaya', 'coconut']\n>>> my_long_lst[1:-1:2]\n['orange', 'mango', 'grapes', 'papaya']\n```", "```py\n>>> my_long_lst[-1:1:-2]\n['coconut', 'kiwi', 'pineapple', 'blackcurrant']\n\n# To slice backwars successfully, the \"jump\" value must be negative\n# Otherwise, we just get an empty list\n>>> my_long_lst[-1:1:2]\n[]\n```", "```py\n>>> my_lst\n['apple', 'orange', 'blackcurrant', 'mango', 'pineapple']\n>>> my_lst[::-1]\n['pineapple', 'mango', 'blackcurrant', 'orange', 'apple']\n```"]