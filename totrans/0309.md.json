["```py\n--sample data from table PRODUCTS.\nSELECT\n    *\nFROM\n    CLASSICMODELS.PRODUCTS\nWHERE PRODUCTLINE IN ('Planes','Ships','Trains');\n```", "```py\n--total quantity in stock for each productline\nSELECT \n    PRODUCTLINE,\n    SUM(QUANTITYINSTOCK) AS TOTAL_QUNATITY\nFROM \n    CLASSICMODELS.PRODUCTS\nWHERE PRODUCTLINE IN ('Planes','Ships','Trains')\nGROUP BY PRODUCTLINE; \n```", "```py\n--sum() as a window function\nSELECT \n    PRODUCTNAME,\n    PRODUCTLINE,\n    QUANTITYINSTOCK,\n    SUM(QUANTITYINSTOCK) OVER (PARTITION BY PRODUCTLINE) AS TOTAL_QUANTITY\nFROM\n    CLASSICMODELS.PRODUCTS\nWHERE PRODUCTLINE IN ('Planes','Ships','Trains');\n```", "```py\n--empty OVER() clause\nSELECT \n    PRODUCTNAME,\n    PRODUCTLINE,\n    QUANTITYINSTOCK,\n    SUM(QUANTITYINSTOCK) OVER () AS TOTAL_QUANTITY\nFROM\n    CLASSICMODELS.PRODUCTS\nWHERE PRODUCTLINE IN ('Planes','Ships','Trains');\n```", "```py\n--OVER() with PARTITION BY\nSELECT \n    PRODUCTNAME,\n    PRODUCTLINE,\n    QUANTITYINSTOCK,\n    SUM(QUANTITYINSTOCK) OVER (PARTITION BY PRODUCTLINE) AS TOTAL_QUANTITY\nFROM\n    CLASSICMODELS.PRODUCTS\nWHERE PRODUCTLINE IN ('Planes','Ships','Trains');\n```", "```py\nSELECT \n    PRODUCTNAME,\n    PRODUCTLINE,\n    QUANTITYINSTOCK,\n    SUM(QUANTITYINSTOCK) OVER (PARTITION BY PRODUCTLINE ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS TOTAL\nFROM\n    CLASSICMODELS.PRODUCTS\nWHERE PRODUCTLINE IN ('Planes','Ships','Trains');\n```", "```py\n--finding out minimum and maximum MSRP for each productline\nSELECT\n    PRODUCTNAME,\n    PRODUCTLINE,\n    MSRP,\n    MIN(MSRP) OVER(PARTITION BY PRODUCTLINE) AS MIN_MSRP,\n    MAX(MSRP) OVER(PARTITION BY PRODUCTLINE) AS MAX_MSRP\nFROM\n    CLASSICMODELS.PRODUCTS\nWHERE PRODUCTLINE IN ('Planes','Ships','Trains');\n```", "```py\n--using window alias\nSELECT\n    PRODUCTNAME,\n    PRODUCTLINE,\n    MSRP,\n    MIN(MSRP) OVER MSRP_WINDOW AS MIN_MSRP,\n    MAX(MSRP) OVER MSRP_WINDOW AS MAX_MSRP\nFROM\n    CLASSICMODELS.PRODUCTS\nWHERE PRODUCTLINE IN ('Planes','Ships','Trains')\nWINDOW MSRP_WINDOW AS (PARTITION BY PRODUCTLINE);\n```"]