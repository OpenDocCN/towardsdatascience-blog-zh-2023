- en: Animate Maps with Plotly Express
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Plotly Express 动画地图
- en: 原文：[https://towardsdatascience.com/animate-maps-with-plotly-express-d783127afcd0](https://towardsdatascience.com/animate-maps-with-plotly-express-d783127afcd0)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/animate-maps-with-plotly-express-d783127afcd0](https://towardsdatascience.com/animate-maps-with-plotly-express-d783127afcd0)
- en: Invigorate Your Infographics!
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 振兴你的信息图！
- en: '[](https://medium.com/@lee_vaughan?source=post_page-----d783127afcd0--------------------------------)[![Lee
    Vaughan](../Images/9f6b90bb76102f438ab0b9a4a62ffa3f.png)](https://medium.com/@lee_vaughan?source=post_page-----d783127afcd0--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d783127afcd0--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d783127afcd0--------------------------------)
    [Lee Vaughan](https://medium.com/@lee_vaughan?source=post_page-----d783127afcd0--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@lee_vaughan?source=post_page-----d783127afcd0--------------------------------)[![Lee
    Vaughan](../Images/9f6b90bb76102f438ab0b9a4a62ffa3f.png)](https://medium.com/@lee_vaughan?source=post_page-----d783127afcd0--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d783127afcd0--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d783127afcd0--------------------------------)
    [Lee Vaughan](https://medium.com/@lee_vaughan?source=post_page-----d783127afcd0--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d783127afcd0--------------------------------)
    ·9 min read·Jul 11, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d783127afcd0--------------------------------)
    ·9 分钟阅读·2023 年 7 月 11 日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/c173db5b859806e3f3e30abb0f52171a.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c173db5b859806e3f3e30abb0f52171a.png)'
- en: Selected states colored by the year they entered the union (all images by the
    author unless otherwise noted)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 按年上色的选定州（所有图片均为作者提供，除非另有说明）
- en: Animated maps are a great tool for grabbing attention and conveying information.
    Whether you’re a businessperson preparing a presentation, a journalist preparing
    infographics, or a teacher preparing class lessons, animations will increase your
    audience’s engagement, focus, and level of retention. And even if you don’t plan
    to show a live animation, the functionality is still useful for preparing static
    displays over different time frames.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 动态地图是引起注意和传达信息的绝佳工具。无论你是准备演示文稿的商人、准备信息图的记者，还是准备课堂教学的老师，动画都会提高观众的参与度、注意力和记忆力。即使你不打算展示实时动画，这个功能对于在不同时间框架中准备静态展示仍然很有用。
- en: In this *Quick Success Data Science* project, we’ll use Python, pandas, and
    Plotly Express to visualize the evolution of the United States. Specifically,
    we’ll use [choropleth maps](https://en.wikipedia.org/wiki/Choropleth_map) to animate
    the entry of US states into the union by day, by year, and over larger timeframes.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个 *快速成功的数据科学* 项目中，我们将使用 Python、pandas 和 Plotly Express 来可视化美国的演变。具体来说，我们将使用
    [choropleth maps](https://en.wikipedia.org/wiki/Choropleth_map) 来按天、按年以及在更大的时间范围内动画展示美国各州加入联邦的过程。
- en: The Code
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码
- en: The following code was written in Jupyter Lab and is presented *by cell*.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码是在 Jupyter Lab 中编写的，并以 *单元格* 形式呈现。
- en: Installing and Importing Libraries
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装和导入库
- en: Plotly Express is a high-level version of the Plotly graphing library and requires
    Plotly as a dependency. You can install it with either conda or pip.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Plotly Express 是 Plotly 图形库的高级版本，需要 Plotly 作为依赖。你可以通过 conda 或 pip 安装它。
- en: 'Here’s the conda installation:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 conda 安装命令：
- en: '`conda install -c plotly plotly_express`'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '`conda install -c plotly plotly_express`'
- en: 'And here’s the pip version:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 pip 版本：
- en: '`pip install plotly`'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '`pip install plotly`'
- en: 'To install the pandas data analysis package, use either:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 pandas 数据分析包，可以使用以下命令之一：
- en: '`conda install pandas`'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '`conda install pandas`'
- en: 'or:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 或者：
- en: '`pip install pandas`'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '`pip install pandas`'
- en: We’ll also need the NumPy (Numerical Python) library. You shouldn’t need to
    install it directly as it’s included with pandas.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要 NumPy（数值 Python）库。你不需要直接安装它，因为它已包含在 pandas 中。
- en: 'Here are the imports. We’re using aliases for easier typing:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这是导入部分。我们使用了别名以方便输入：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Loading and Preparing the Data
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加载和准备数据
- en: For convenience, I’ve created a CSV file of the required data and stored it
    in this [Gist](https://gist.github.com/rlvaugh/13b17ae878cb1ef10146d6ebf42d4858).
    The file includes columns for the state name, its official abbreviation, the date
    it entered the union, and the order in which it entered. The file is sorted in
    ascending order by date. We’ll load it as a pandas DataFrame because Plotly Express
    plays very well with pandas.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 为方便起见，我创建了所需数据的CSV文件，并将其存储在这个[Gist](https://gist.github.com/rlvaugh/13b17ae878cb1ef10146d6ebf42d4858)中。该文件包括州名、官方缩写、加入联邦的日期以及加入顺序。文件按日期升序排序。我们将其加载为pandas
    DataFrame，因为Plotly Express与pandas兼容性很好。
- en: In addition to the *day*, we’ll want to animate the data using the *year* of
    statehood. This will make it easier to recognize states that entered the union
    in the same year. To do this, we’ll make a new DataFrame column, named `Year`,
    and typecast it as an integer.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 除了*天*，我们还希望使用*年份*对数据进行动画处理。这将使我们更容易识别在同一年加入联邦的州。为此，我们将创建一个新的DataFrame列，命名为`Year`，并将其转换为整数类型。
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/9f1bfc3c0aff78df4959c2fbbe9ebe0b.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9f1bfc3c0aff78df4959c2fbbe9ebe0b.png)'
- en: The head of the DataFrame (all images by author unless noted otherwise)
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: DataFrame的头部（所有图片由作者提供，除非另有说明）
- en: Plotting a Static Choropleth Map Colored by Date of Entry
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 按加入日期着色的静态 Choropleth 地图
- en: Creating a choropleth map in Plotly Express couldn’t be easier. Just call the
    built-in `[choropleth()](https://plotly.com/python/choropleth-maps/)` method.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在Plotly Express中创建choropleth地图非常简单。只需调用内置的`[choropleth()](https://plotly.com/python/choropleth-maps/)`方法。
- en: The first argument is the DataFrame that we want to animate. After that, we
    just need to reference *columns* in the DataFrame.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个参数是我们想要动画的DataFrame。之后，我们只需引用DataFrame中的*列*。
- en: Plotly Express also comes with some built-in geospatial datasets. To select
    the one for American states, we’ll use the `scope`, `locationmode`, and `locations`
    parameters. The `abbr` argument, used with the `locations` parameter, represents
    the state’s official [abbreviation](https://en.wikipedia.org/wiki/List_of_U.S._state_and_territory_abbreviations),
    such as NY for New York and TX for Texas.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Plotly Express 还附带一些内置的地理空间数据集。要选择适用于美国各州的数据集，我们将使用`scope`、`locationmode`和`locations`参数。`abbr`参数与`locations`参数一起使用，表示州的官方[缩写](https://en.wikipedia.org/wiki/List_of_U.S._state_and_territory_abbreviations)，例如纽约的NY和德州的TX。
- en: For color, I chose the `Portland` color scale. if you want to try something
    different, then visit the Plotly [docs](https://plotly.com/python/builtin-colorscales/)
    to see the available options.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 颜色方面，我选择了`Portland`颜色尺度。如果你想尝试其他选项，请访问Plotly的[文档](https://plotly.com/python/builtin-colorscales/)查看可用的选项。
- en: 'Pro Tip: to reverse a Plotly color bar, append “_r” to the end of its name.'
  id: totrans-36
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 专业提示：要反转Plotly颜色条，请在其名称末尾附加“_r”。
- en: '[PRE2]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/17334114ca1b87fae242baa06f37b5d2.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/17334114ca1b87fae242baa06f37b5d2.png)'
- en: The static map with an active hover window over Colorado.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 具有活动悬停窗口的科罗拉多州静态地图。
- en: The resulting map is currently static (non-animated), but it comes with many
    interactive features. You can hover the cursor over a state to see a pop-up window
    of its metadata. The toolbar at the upper right permits actions such as taking
    a screenshot, zooming, panning, box selecting, and resetting to the “home” screen.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的地图目前是静态的（非动画），但它具有许多交互功能。你可以将光标悬停在一个州上，查看其元数据的弹出窗口。右上角的工具栏允许执行截屏、缩放、平移、框选和重置为“主页”屏幕等操作。
- en: Despite all this functionality, the map is a little boring. Let’s jazz it up
    by adding animation.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管具有所有这些功能，但地图看起来有些乏味。让我们通过添加动画来为它增添一些活力。
- en: Animating by Entry Date
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 按加入年份进行动画
- en: You can animate the previous map with just one extra parameter, `animation_frame`.
    Here, we animate using the `data_entered` column, which captures the date the
    state entered the union.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过一个额外的参数`animation_frame`为之前的地图添加动画。在这里，我们使用`data_entered`列进行动画，该列捕捉了州加入联邦的日期。
- en: To ensure that the color bar includes the data’s minimum and maximum values,
    we need to include an argument for the `range_color` parameter. Otherwise, the
    scale will default to the value of the state actively being displayed. This time,
    I chose the `Earth` color bar, because it has an antique, “historical” look.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 为确保颜色条包含数据的最小值和最大值，我们需要为`range_color`参数包含一个参数。否则，比例将默认显示当前活跃状态的值。这次，我选择了`Earth`颜色条，因为它具有古老的“历史”外观。
- en: '[PRE3]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/07665ae503ba9f5ee723bb89d0a71530.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/07665ae503ba9f5ee723bb89d0a71530.png)'
- en: Map animated on the date of statehood
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 根据州成立日期进行动画的地图
- en: To run the animation, either press the play button or use the slider. Only one
    state will display at a time. The interesting thing here is that the states don’t
    enter in a logical progression from east to west, but “jump around” a lot from
    north to south and from east to west.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行动画，可以按播放按钮或使用滑块。一次只会显示一个州。有趣的是，州的进入并不是按东到西的逻辑顺序，而是经常在南北和东西之间“跳跃”。
- en: Animating by Entry Year
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 按进入年份动画
- en: To see all the states that entered the union in a given year, just change the
    `animation_frame` argument to the `Year` column.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看在给定年份进入联盟的所有州，只需将 `animation_frame` 参数更改为 `Year` 列。
- en: '[PRE4]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/a525ea8a0c3e2597fb78113a56d303aa.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a525ea8a0c3e2597fb78113a56d303aa.png)'
- en: Map animated by year
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 按年份动画
- en: Animating the States Grouped Over a Large Timeframe
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 动画化的大时间跨度的州
- en: 'While animating the states by their day or year of entry is interesting, it’s
    hard to get the big picture. In the following example, we’ll lump the states together
    over four significant timespans:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管按州的入驻日期或年份进行动画化很有趣，但很难获得整体视图。在以下示例中，我们将州按四个重要时间跨度进行汇总：
- en: When the thirteen original colonies entered the union
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 十三个原始殖民地进入联盟时
- en: The subsequent expansion up to the Civil War
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扩展至内战前的后续扩展
- en: The settling of the wild west
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开拓荒野
- en: The 20th century
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 20世纪
- en: 'To group the states over these timespans, we’ll use NumPy’s `select()` method
    to create a new column in the DataFrame. This requires three steps:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在这些时间跨度上对州进行分组，我们将使用 NumPy 的 `select()` 方法在数据框中创建新列。这需要三个步骤：
- en: Create a list of the conditions for the new column using date ranges,
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用日期范围创建新列的条件列表，
- en: Create a list of values for the new column for each condition,
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为每个条件创建新列的值列表，
- en: Create the new column by calling the `np.select()` method and passing it the
    lists from the two previous steps.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过调用 `np.select()` 方法并传递前两个步骤中的列表来创建新列。
- en: We’ll name the new column `Timespan`. To use it for the animation, change the
    `animation_frame` argument to `Timespan`.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将新列命名为 `Timespan`。要用于动画，请将 `animation_frame` 参数更改为 `Timespan`。
- en: '[PRE5]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/a205676ff0eb65fc7bf310d9d60ce145.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a205676ff0eb65fc7bf310d9d60ce145.png)'
- en: Map animated by timespan
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 按时间跨度动画
- en: Note that we changed the *speed* of the animation (in milliseconds) in the last
    line. You can use this code with any previous animations if you find them too
    fast.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们在最后一行更改了动画的*速度*（以毫秒为单位）。如果你觉得之前的动画太快，可以使用这段代码。
- en: Making Static Infographics
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 制作静态信息图
- en: What if you want to capture the results as *static images*, for example, to
    make handouts?
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想将结果作为*静态图像*保存，例如，用于制作手册，该怎么办？
- en: Well, for jobs like this, I like to “hardwire” the results by copying and editing
    the master DataFrame and then looping through the copies to plot the maps. This
    provides for better control over things like figure titles and color bar ranges.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 对于像这样的任务，我喜欢通过复制和编辑主数据框，然后循环遍历这些副本来绘制地图，这样可以更好地控制图形标题和颜色条范围。
- en: And to ensure that the color bar includes the *end members* for each time period,
    we’ll provide four lists that specify the dates we want to see annotated.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保颜色条包括每个时间段的*终端成员*，我们将提供四个列表，指定我们希望看到标注的日期。
- en: '[PRE6]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/41b1cc196bc4075753bf439e2048e8cf.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/41b1cc196bc4075753bf439e2048e8cf.png)'
- en: Static map of the original 13 colonies colored by year of entry
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 原始13个殖民地的静态地图，根据进入年份进行着色
- en: '![](../Images/15b6c3e65274cc5c7b2c6035f4d2389c.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/15b6c3e65274cc5c7b2c6035f4d2389c.png)'
- en: Static map of the antebellum expansion period states colored by year of entry
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 进入联盟前的扩展时期州的静态地图，根据进入年份进行着色
- en: '![](../Images/4a9b10a6eb77d2feae03f2c869360f54.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4a9b10a6eb77d2feae03f2c869360f54.png)'
- en: Static map of the westward expansion period states colored by year of entry
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 向西扩展时期州的静态地图，根据进入年份进行着色
- en: '![](../Images/fd90c4772b4cd1571a49dcea576b1733.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fd90c4772b4cd1571a49dcea576b1733.png)'
- en: Static map of the 20th century period states colored by year of entry
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 20世纪各时期的静态地图，根据进入年份进行着色
- en: Static Maps with Persistence
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 带有持久性的静态地图
- en: We’re still not getting the (truly) big picture. It would be nice to see *all*
    the states in the union on a given date.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们仍然没有得到（真正的）整体视图。如果能够看到在某一特定日期联盟中的*所有*州，那就太好了。
- en: The code in the following cell “builds up” the map over time. The states added
    in *previous* timeframes remain *visible* on the map so that the last map shows
    *all* the states of the union.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 以下单元格中的代码“逐渐构建”地图。*之前*时间段添加的州仍然在地图上*可见*，这样最后的地图会显示*所有*的联盟州。
- en: To accomplish this, we need to refilter the master DataFrame so that the minimum
    value preserved is *always* 1787\. We’ll also need a new `dates` list better suited
    for this new visualization.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这一目标，我们需要重新过滤主数据框，以确保保留的最小值*始终*为1787年。我们还需要一个更适合这种新可视化的`dates`列表。
- en: '[PRE7]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../Images/e66ba484946edbf6490ecf74ee57b84d.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e66ba484946edbf6490ecf74ee57b84d.png)'
- en: Example of a persistent map showing states that entered the union between 1787-1860
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 显示1787-1860年间加入联邦的州的持久地图示例
- en: For brevity, I’m only showing one of the four maps generated by the previous
    cell.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简洁起见，我仅展示了前一个单元生成的四张地图中的一张。
- en: Summary
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'With only a single parameter, Plotly Express lets you convert beautiful *static*
    maps into beautiful *moving* maps. Besides being engaging, these animated maps
    also make it easy to spot outliers in a dataset. For example, despite being an
    American and fairly well-versed in history, I was surprised to see that:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 只需一个参数，Plotly Express 就可以将美丽的*静态*地图转换为美丽的*动态*地图。除了富有吸引力外，这些动画地图还使得发现数据集中的异常值变得容易。例如，尽管我是一名美国人且对历史相当了解，但我还是很惊讶地发现：
- en: Delaware was the first state to ratify the Constitution and is thus the first
    state in the union (who knew?),
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 特拉华州是第一个批准宪法的州，因此也是联邦中的第一个州（谁知道呢？）。
- en: Maine, though part of New England, was a relatively late addition,
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缅因州，尽管是新英格兰的一部分，却是相对较晚加入的州。
- en: Oklahoma did not become a state until the 20th century,
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 俄克拉荷马州直到20世纪才成为一个州。
- en: Arizona and New Mexico did not become states until 1912, despite being part
    of the Mexican Cessation of 1848.
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 亚利桑那州和新墨西哥州直到1912年才成为州，尽管它们是1848年墨西哥割让的一部分。
- en: Other datasets that would be fun to explore are the states ordered by secession
    during the American Civil War, the states ordered by population, or the states
    ordered by electoral college votes.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 其他值得探索的数据集包括按美国内战期间脱离联邦顺序排列的州，按人口排列的州，或按选举团票数排列的州。
- en: And if you want to use Plotly Express to build animated choropleths for other
    countries, here’s an example of how to do this for the [Canadian provinces](https://mahshadn.medium.com/animated-choropleth-map-with-discrete-colors-using-python-and-plotly-styling-5e208e5b6bf8).
    The province polygons are built with [Geojson](https://en.wikipedia.org/wiki/GeoJSON)
    files.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想使用Plotly Express为其他国家构建动画染色地图，这里有一个为[加拿大省份](https://mahshadn.medium.com/animated-choropleth-map-with-discrete-colors-using-python-and-plotly-styling-5e208e5b6bf8)构建的示例。省份多边形使用[Geojson](https://en.wikipedia.org/wiki/GeoJSON)文件构建。
- en: Thanks!
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 谢谢！
- en: Thanks for reading and please follow me for more *Quick Success Data Science*
    projects in the future.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读，请关注我以获取未来更多的*快速成功数据科学*项目。
