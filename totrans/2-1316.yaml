- en: Implementation of a Siamese Network in Keras and TensorFlow
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Keras和TensorFlow中实现Siamese网络
- en: 原文：[https://towardsdatascience.com/implementation-of-a-siamese-network-in-keras-and-tensorflow-aa327418e177](https://towardsdatascience.com/implementation-of-a-siamese-network-in-keras-and-tensorflow-aa327418e177)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/implementation-of-a-siamese-network-in-keras-and-tensorflow-aa327418e177](https://towardsdatascience.com/implementation-of-a-siamese-network-in-keras-and-tensorflow-aa327418e177)
- en: '![](../Images/b1a1da818760b158826b71ceb1e2665f.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b1a1da818760b158826b71ceb1e2665f.png)'
- en: Photo by [Markus Spiske](https://unsplash.com/@markusspiske?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Markus Spiske](https://unsplash.com/@markusspiske?utm_source=medium&utm_medium=referral)
    拍摄，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Learn the techniques behind object detection (and much more) with example code.
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 学习对象检测背后的技术（以及更多）和示例代码。
- en: '[](https://rashida00.medium.com/?source=post_page-----aa327418e177--------------------------------)[![Rashida
    Nasrin Sucky](../Images/42bd057e8eca255907c43c29a498f2ca.png)](https://rashida00.medium.com/?source=post_page-----aa327418e177--------------------------------)[](https://towardsdatascience.com/?source=post_page-----aa327418e177--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----aa327418e177--------------------------------)
    [Rashida Nasrin Sucky](https://rashida00.medium.com/?source=post_page-----aa327418e177--------------------------------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://rashida00.medium.com/?source=post_page-----aa327418e177--------------------------------)[![Rashida
    Nasrin Sucky](../Images/42bd057e8eca255907c43c29a498f2ca.png)](https://rashida00.medium.com/?source=post_page-----aa327418e177--------------------------------)[](https://towardsdatascience.com/?source=post_page-----aa327418e177--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----aa327418e177--------------------------------)
    [Rashida Nasrin Sucky](https://rashida00.medium.com/?source=post_page-----aa327418e177--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----aa327418e177--------------------------------)
    ·7 min read·Aug 14, 2023
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----aa327418e177--------------------------------)
    ·阅读时间7分钟·2023年8月14日
- en: --
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: Neural Networks are great and very popular in AI/ML spaces, but they require
    too much data to train. For tasks like object detection, signature verification,
    voice verification, and prescription pills recognition regular neural network
    techniques would be much more time-consuming and expensive because of this excessive
    data requirement. In these types of work, a **Siamese network** can be very powerful
    because it requires a lot less data than a regular neural network. In addition,
    an imbalanced dataset can also perform well.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 神经网络在AI/ML领域非常强大且流行，但它们训练所需的数据量过多。对于对象检测、签名验证、语音验证和药品识别等任务，常规神经网络技术由于数据需求过大，会变得更加耗时和昂贵。在这些类型的工作中，**Siamese网络**可以非常强大，因为它比常规神经网络所需的数据少得多。此外，不平衡的数据集也可以表现良好。
- en: This tutorial will give you a high-level overview of a Siamese Network and a
    complete example of working with it. I worked with the fashion-mnist dataset here
    but this similar structure is good for a lot of other use cases.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程将为你提供Siamese网络的高级概述，并提供一个完整的示例。我在这里使用了fashion-mnist数据集，但这种相似的结构适用于许多其他用例。
- en: What is a Siamese Network?
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是Siamese网络？
- en: Siamese networks contain one or more identical networks, and those identical
    networks have the same parameters and weights. If the weights of one network update,
    the weights of the other network also update. They have to be identical. The final
    layer is usually an embedding layer that calculates the distance between the outputs.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Siamese网络包含一个或多个相同的网络，这些相同的网络具有相同的参数和权重。如果一个网络的权重更新，另一个网络的权重也会更新。它们必须是相同的。最终层通常是一个嵌入层，计算输出之间的距离。
- en: You feed them a pair of inputs. Each network will compute the features of inputs
    and find the similarity between two inputs using the distance between the two
    images. So, there are only two classes. Either the images are similar or dissimilar.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 你给它们一对输入。每个网络将计算输入的特征，并使用两张图像之间的距离来找出输入之间的相似性。因此，只有两种类别。要么图像相似，要么不相似。
- en: The concept will be much clearer when you will work on an example. Learning
    by doing is always the best idea.
  id: totrans-13
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当你实际操作一个例子时，概念会变得更加清晰。通过实践学习始终是最好的方法。
- en: Necessary Imports and Functions Definition
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 必要的导入和函数定义
- en: Let’s start with the necessary imports. We will import more if necessary.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从必要的导入开始。如果有必要，我们将导入更多内容。
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: As we discussed in the previous section, the Siamese network takes a **pair
    of inputs** at a time and the output is ‘yes’ or ‘no’. If the images are similar
    it’s ‘yes’ otherwise it is ‘no’. Or, the Siamese network can also output the distance
    between the two images that we will do in this tutorial. So, we need to prepare
    our dataset that way. Our dataset needs to be pairs of images, not single images.
    For the positive class, there will be two images of the same type and for the
    negative class, there will be two images of different types.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在前一节中讨论的，Siamese网络一次接受**一对输入**，输出为‘yes’或‘no’。如果图像相似，则为‘yes’，否则为‘no’。或者，Siamese网络还可以输出两张图像之间的距离，这在本教程中我们将进行。因此，我们需要以这种方式准备数据集。我们的数据集需要是图像对，而不是单张图像。对于正类，将会有两张相同类型的图像；而对于负类，将会有两张不同类型的图像。
- en: This next code block defines a function ‘create_pairs’ that will make pairs
    of images which means putting two images stacking together where sometimes two
    images will be the same type and sometimes, they will be of different types. When
    two images match or are the same type, the label will be 1 and when the images
    will not match, the label will be 0.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个代码块定义了一个函数‘create_pairs’，该函数将生成图像对，这意味着将两张图像叠加在一起，其中有时两张图像是相同类型的，有时则是不同类型的。当两张图像匹配或是相同类型时，标签将为
    1；而当图像不匹配时，标签将为 0。
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The next function calculates the Euclidean distance between two images and
    follows the traditional formula for Euclidean distance:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个函数计算两张图像之间的欧几里得距离，并遵循传统的欧几里得距离公式：
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Model and Cost
  id: totrans-22
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 模型与成本
- en: The Siamese model is pretty similar to other TensorFlow models. We will use
    two sets of **Conv-MaxPooling-Dropout layers, GlobalAveragePooling**, and a Dense
    layer at the end. Finally, it will return the model.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Siamese 模型与其他 TensorFlow 模型非常相似。我们将使用两组**卷积-最大池化-丢弃层、全局平均池化**，最后一层为 Dense。最后，它将返回模型。
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: A regular binary cross-entropy loss function is good enough as we are doing
    a binary classification here. But for the Siamese network, a **Contrastive loss**
    is more appropriate. If you think about it, actually the goal of a Siamese network
    is not only just classifying between similar or dissimilar images but also to
    differentiate between them. We want to know how good a job the Siamese network
    is doing on distinguishing between similar or dissimilar images.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 正常的二元交叉熵损失函数对于我们做二元分类已经足够好。但对于Siamese网络，**对比损失**更为合适。如果你考虑一下，实际上Siamese网络的目标不仅仅是对相似或不相似的图像进行分类，还要区分它们。我们希望知道Siamese网络在区分相似或不相似图像方面做得有多好。
- en: 'Here is the formula for contrastive loss:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这是对比损失的公式：
- en: '![](../Images/fd701ad2009ed317c53ee8a018be9832.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fd701ad2009ed317c53ee8a018be9832.png)'
- en: Image by Author
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: Here, Y is the true label (either 0 or 1)
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，Y 是真实标签（0 或 1）
- en: D is the Euclidean distance
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: D 是欧几里得距离
- en: The margin is usually 1
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 边际通常为 1
- en: 'Let’s make a function contrastiveLoss:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个函数 contrastiveLoss：
- en: '[PRE4]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: These are some common functions that can be used for any other Siamese network
    of the same type as well.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是可以用于任何其他同类型Siamese网络的常见函数。
- en: Model Training
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模型训练
- en: We need the dataset to train the model for sure. For this tutorial, I will use
    the [public dataset](https://github.com/zalandoresearch/fashion-mnist/blob/master/LICENSE)
    (MIT license), fashion_mnist dataset available to load using the TensorFlow library
    itself.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们确实需要数据集来训练模型。在本教程中，我将使用[公共数据集](https://github.com/zalandoresearch/fashion-mnist/blob/master/LICENSE)（MIT
    许可证），fashion_mnist 数据集，该数据集可以通过 TensorFlow 库加载。
- en: '[PRE5]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Some simple data processing tasks are necessary, to begin with. To scale the
    image data, we will divide the image data by 255\. Also, another dimension needs
    to be added to both training and testing images to make them three-dimensional.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 一些简单的数据处理任务是必要的，首先要做的是。为了缩放图像数据，我们将图像数据除以 255\。另外，还需要为训练和测试图像添加另一个维度，以使其成为三维的。
- en: '[PRE6]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Next, we will create two inputs for two images in an image pair and pass them
    both to the Siamese model we built earlier to extract the features from both of
    the images.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将为图像对中的两张图像创建两个输入，并将它们传递到之前构建的Siamese模型中，以提取这两张图像的特征。
- en: The **Euclidean distance** function will be useful here to find the distance
    between the two extracted features. The smaller the distance between the two feature
    images, the more similar they are.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**欧几里得距离**函数在这里将非常有用，用于找到两个提取特征之间的距离。两个特征图像之间的距离越小，它们就越相似。'
- en: Finally, the model takes the two images as inputs and outputs the distance.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，模型将两张图像作为输入，并输出距离。
- en: '[PRE7]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Now compile the model to train the Siamese model using the contrastive loss
    we defined earlier. The necessary parameters are the pairs of images, the pairs
    of labels, batch size, and the number of epochs.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在编译模型以训练我们之前定义的对比损失的孪生模型。必要的参数包括图像对、标签对、批处理大小和训练轮数。
- en: '[PRE8]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Output:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '[PRE9]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Let’s plot some of the pairs with their distances. We will take 4 pairs of images
    randomly. **OpenCV library** can be used for this. First, it requires some basic
    image processing like scaling and then adding one extra dimension to both the
    dimensions of the images. Then we will use the model to predict the distance between
    the images in each pair. Finally, you can plot them to see the distance and the
    pairs.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们绘制一些图像对及其距离。我们将随机选择 4 对图像。可以使用**OpenCV 库**来实现。首先，它需要一些基本的图像处理，如缩放，然后将额外的维度添加到图像的两个维度中。接下来，我们将使用模型预测每对图像之间的距离。最后，你可以绘制这些图像对以查看距离和图像对。
- en: '[PRE10]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![](../Images/985059e1940a618b170954ce7eaf4934.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/985059e1940a618b170954ce7eaf4934.png)'
- en: Look at these pictures and the corresponding distances. As you can see, the
    predict function does not give you the label 0 or 1 in this case. It gives you
    the distances between the two images in the image pairs. When the images in the
    pairs are more similar the distance is much smaller.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 看看这些图片及其相应的距离。正如你所见，预测函数在这种情况下并未给出标签 0 或 1。它给出的是图像对之间的距离。当图像对中的图像更相似时，距离会更小。
- en: If you want you can set a threshold distance based on your use cases to distinguish
    between similar and dissimilar images to get the label as well.
  id: totrans-52
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果需要，你可以根据使用案例设置一个阈值距离，以区分相似和不相似的图像，从而获得标签。
- en: Conclusion
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: This same kind of model and technique can be used for many different types of
    tasks as I mentioned in the introduction. Because it can work with a smaller number
    of data, the data collection part becomes easier. Hopefully, it will be useful
    for you.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我在介绍中提到的，这种模型和技术可以用于许多不同类型的任务。因为它可以处理较少的数据，所以数据收集部分变得更容易。希望它对你有用。
- en: Feel free to follow me on [Twitter](https://twitter.com/rashida048) and like
    my [Facebook](https://www.facebook.com/rashida.smith.161) page.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎在 [Twitter](https://twitter.com/rashida048) 上关注我，并点赞我的 [Facebook](https://www.facebook.com/rashida.smith.161)
    页面。
- en: More Reading
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: '[Regression in TensorFlow Using Both Sequential and Function APIs | by Rashida
    Nasrin Sucky | Towards Data Science (medium.com)](https://medium.com/p/314e74b537ca)'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 TensorFlow 中使用 Sequential 和 Function API 进行回归 | 作者：Rashida Nasrin Sucky
    | 数据科学导向 (medium.com)](https://medium.com/p/314e74b537ca)'
- en: '[Using a Keras Tuner for Hyperparameter Tuning of a TensorFlow Model | by Rashida
    Nasrin Sucky | Jul, 2023 | Towards AI (medium.com)](https://medium.com/p/41978f53111)'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '[使用 Keras Tuner 对 TensorFlow 模型进行超参数调整 | 作者：Rashida Nasrin Sucky | 2023 年 7
    月 | 数据科学导向 (medium.com)](https://medium.com/p/41978f53111)'
- en: '[How to Perform Image Segmentation with Thresholding Using OpenCV | by Rashida
    Nasrin Sucky | Towards Data Science (medium.com)](https://medium.com/p/b2a78abb07ac)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[如何使用 OpenCV 进行阈值图像分割 | 作者：Rashida Nasrin Sucky | 数据科学导向 (medium.com)](https://medium.com/p/b2a78abb07ac)'
- en: '[Some Basic Image Preprocessing Operations for Beginners in Python | by Rashida
    Nasrin Sucky | Towards Data Science (medium.com)](https://medium.com/p/7d297316853b)'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '[Python 初学者的一些基本图像预处理操作 | 作者：Rashida Nasrin Sucky | 数据科学导向 (medium.com)](https://medium.com/p/7d297316853b)'
- en: '[How to Define Custom Layer, Activation Function, and Loss Function in TensorFlow
    | by Rashida Nasrin Sucky | Towards Data Science (medium.com)](https://medium.com/p/bdd7e78eb67)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '[如何在 TensorFlow 中定义自定义层、激活函数和损失函数 | 作者：Rashida Nasrin Sucky | 数据科学导向 (medium.com)](https://medium.com/p/bdd7e78eb67)'
- en: '[A Step-by-Step Tutorial to Develop a Multi-Output Model in TensorFlow | by
    Rashida Nasrin Sucky | Towards Data Science (medium.com)](https://medium.com/p/ec9f13e5979c)'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '[逐步教程：在 TensorFlow 中开发多输出模型 | 作者：Rashida Nasrin Sucky | 数据科学导向 (medium.com)](https://medium.com/p/ec9f13e5979c)'
