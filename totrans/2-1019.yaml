- en: A guide to handling categorical variables in Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理 Python 中分类变量的指南
- en: 原文：[https://towardsdatascience.com/guide-to-handling-categorical-variables-in-python-854d0b65a6ae](https://towardsdatascience.com/guide-to-handling-categorical-variables-in-python-854d0b65a6ae)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/guide-to-handling-categorical-variables-in-python-854d0b65a6ae](https://towardsdatascience.com/guide-to-handling-categorical-variables-in-python-854d0b65a6ae)
- en: '*A guide on how to approach categorical variables for machine learning and
    data science purposes*'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*如何处理分类变量以用于机器学习和数据科学的指南*'
- en: '[](https://medium.com/@theDrewDag?source=post_page-----854d0b65a6ae--------------------------------)[![Andrea
    D''Agostino](../Images/58c7c218815f25278aae59cea44d8771.png)](https://medium.com/@theDrewDag?source=post_page-----854d0b65a6ae--------------------------------)[](https://towardsdatascience.com/?source=post_page-----854d0b65a6ae--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----854d0b65a6ae--------------------------------)
    [Andrea D''Agostino](https://medium.com/@theDrewDag?source=post_page-----854d0b65a6ae--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@theDrewDag?source=post_page-----854d0b65a6ae--------------------------------)[![Andrea
    D''Agostino](../Images/58c7c218815f25278aae59cea44d8771.png)](https://medium.com/@theDrewDag?source=post_page-----854d0b65a6ae--------------------------------)[](https://towardsdatascience.com/?source=post_page-----854d0b65a6ae--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----854d0b65a6ae--------------------------------)
    [Andrea D''Agostino](https://medium.com/@theDrewDag?source=post_page-----854d0b65a6ae--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----854d0b65a6ae--------------------------------)
    ·13 min read·Jun 16, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----854d0b65a6ae--------------------------------)
    ·13分钟阅读·2023年6月16日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/e99d8b89a83f713a851916579c9a484c.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e99d8b89a83f713a851916579c9a484c.png)'
- en: Photo by [Thomas Haas](https://unsplash.com/@thomashaas?utm_source=ghost&utm_medium=referral&utm_campaign=api-credit)
    / [Unsplash](https://unsplash.com/?utm_source=ghost&utm_medium=referral&utm_campaign=api-credit)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Thomas Haas](https://unsplash.com/@thomashaas?utm_source=ghost&utm_medium=referral&utm_campaign=api-credit)
    / [Unsplash](https://unsplash.com/?utm_source=ghost&utm_medium=referral&utm_campaign=api-credit)
    提供
- en: Handling categorical variables in a data science or machine learning project
    is no easy task. This type of work requires deep knowledge of the field of application
    and a broad understanding of the multiple methodologies available.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据科学或机器学习项目中处理分类变量并非易事。这种工作需要对应用领域有深入的了解，并且需要对多种可用方法有广泛的理解。
- en: For this reason, the present article will focus on explaining the following
    concepts
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 出于这个原因，本文将重点解释以下概念
- en: '**what are categorical variables** and how to divide them into the different
    types'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**什么是分类变量**及如何将它们划分为不同类型'
- en: how to convert them to **numeric value** based on their type
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何根据它们的类型将它们转换为**数值**
- en: tools and technologies for their management mainly using **Sklearn**
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理这些变量的工具和技术主要使用**Sklearn**
- en: Proper handling of categorical variables can greatly improve the result of our
    predictive model or analysis. In fact, most of the information relevant to learning
    and understanding data could be contained in the available categorical variables.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 适当处理分类变量可以大大改善我们预测模型或分析的结果。事实上，学习和理解数据的大部分相关信息可能都包含在可用的分类变量中。
- en: Just think of tabular data, split by the variable `gender` or by a certain `color`.
    These spits, based on the number of categories, can bring out significant differences
    between groups and which can inform the analyst or the learning algorithm.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 想想表格数据，按变量`gender`或某种`color`进行划分。这些划分基于类别数量，可以揭示组之间的显著差异，从而为分析师或学习算法提供信息。
- en: Let’s start by defining what they are and how they can present themselves.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从定义分类变量是什么以及它们如何表现自己开始。
- en: Definition of categorical variable
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分类变量的定义
- en: Categorical variables are a type of variable used in statistics and data science
    to represent qualitative or nominal data. These variables can be defined as a
    class or category of data that cannot be quantified continuously, but only discretely.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 分类变量是用于统计学和数据科学中的一种变量，用于表示定性或名义数据。这些变量可以定义为一种类别或数据类别，这些数据无法连续量化，而只能离散表示。
- en: For example, an example of a categorical variable might be a **person’s eye
    color,** which can be blue, green, or brown.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，一个分类变量的例子可能是**一个人的眼睛颜色，** 可能是蓝色、绿色或棕色。
- en: Most learning models don’t work with data in a categorical format. We must first
    convert them into numeric format so that the information is preserved.
  id: totrans-19
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 大多数学习模型无法处理分类格式的数据。我们必须先将它们转换为数字格式，以便信息得以保留。
- en: 'Categorical variables can be classified into two types:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 分类变量可以分为两种类型：
- en: Nominal
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名义型
- en: Ordinal
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有序
- en: '**Nominal variables** are variables that are not constrained by a precise order.
    Gender, color, or brands are examples of nominal variables since they are not
    sortable.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**名义变量**是没有严格顺序限制的变量。性别、颜色或品牌就是名义变量的例子，因为它们不能排序。'
- en: '**Ordinal variables** are instead categorical variables divided into logically
    orderable levels. A column in a dataset that consists of levels such as *First,
    Second, and Third* can be considered an ordinal categorical variable.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**有序变量**是将分类变量划分为逻辑上可排序的级别的变量。数据集中包含*第一、第二和第三*等级别的列可以被认为是有序的分类变量。'
- en: You can go deeper into the breakdown of categorical variables by considering
    **binary and cyclic variables.**
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过考虑**二元变量和循环变量**来深入了解分类变量的分解。
- en: 'A **binary variable** is simple to understand: it is a categorical variable
    that can only take on two values.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**二元变量**很简单理解：它是一个只能取两个值的分类变量。'
- en: A **cyclic variable**, on the other hand, is characterized by a repetition of
    its values. For example, the days of the week are cyclical, and so are the seasons.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**循环变量**则具有值的重复特征。例如，星期几是循环的，季节也是如此。'
- en: How to transform categorical variables
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何转换分类变量
- en: Now that we’ve defined what categorical variables are and what they look like,
    let’s tackle the question of transforming them using a practical example — a Kaggle
    dataset called *cat-in-the-dat*.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经定义了分类变量是什么以及它们的样子，让我们通过一个实际的例子来解决转化它们的问题——一个名为*cat-in-the-dat*的Kaggle数据集。
- en: The dataset
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据集
- en: This is an open source dataset at the basis of an introductory competition to
    the management and modeling of categorical variables, called the Categorical Feature
    Encoding Challenge II. You can download the data directly from the link below.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个开源数据集，作为对分类变量管理和建模的入门竞赛基础，称为分类特征编码挑战 II。你可以从下面的链接直接下载数据。
- en: '[](https://www.kaggle.com/c/cat-in-the-dat-ii?source=post_page-----854d0b65a6ae--------------------------------)
    [## Categorical Feature Encoding Challenge II'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://www.kaggle.com/c/cat-in-the-dat-ii?source=post_page-----854d0b65a6ae--------------------------------)
    [## 分类特征编码挑战 II'
- en: Binary classification, with every feature a categorical (and interactions!)
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 二元分类，每个特征都是分类的（以及交互！）
- en: www.kaggle.com](https://www.kaggle.com/c/cat-in-the-dat-ii?source=post_page-----854d0b65a6ae--------------------------------)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: www.kaggle.com](https://www.kaggle.com/c/cat-in-the-dat-ii?source=post_page-----854d0b65a6ae--------------------------------)
- en: The peculiarity of this dataset is that it contains exclusively categorical
    data. So it becomes the perfect use case for this guide. It includes nominal,
    ordinal, cyclic, and binary variables.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这个数据集的特殊性在于它仅包含分类数据。因此，它成为本指南的完美使用案例。它包括名义型、序数型、循环型和二元变量。
- en: We will see techniques for transforming each variable into a format usable by
    a learning model.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看到将每个变量转换为学习模型可用格式的技术。
- en: The dataset looks like this
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集如下所示：
- en: '![](../Images/7dfe5816387a98c71f30b084a1b0cf26.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7dfe5816387a98c71f30b084a1b0cf26.png)'
- en: Image by author.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片。
- en: Since the target variable can only take on two values, this is a binary classification
    task. We will use the AUC metric to evaluate our model.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 由于目标变量只能取两个值，因此这是一个二元分类任务。我们将使用 AUC 指标来评估我们的模型。
- en: Now we are going to apply techniques for managing categorical variables using
    the mentioned dataset.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将应用处理分类变量的技术，使用上述提到的数据集。
- en: 1\. Label Encoding (mapping to an arbitrary number)
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. 标签编码（映射到任意数字）
- en: The simplest technique there is for converting a category into a usable format
    is to assign each category to an arbitrary number.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 将分类转换为可用格式的最简单方法是将每个类别分配一个任意数字。
- en: Take for example the `ord_2` column which contains the categories
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`ord_2`列包含的类别
- en: '[PRE0]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The mapping could be done like this using Python and Pandas:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用 Python 和 Pandas 进行这样的映射：
- en: '[PRE1]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'However, this method has a problem: you have to manually declare the mapping.
    For a small number of categories this is not a problem, but for a large number
    it could be.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这种方法有一个问题：你必须手动声明映射。对于少量类别这不是问题，但对于大量类别可能会有问题。
- en: For this we will use Scikit-Learn and the `LabelEncoder` object to achieve the
    same result in a more flexible way.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们将使用 Scikit-Learn 和 `LabelEncoder` 对象以更灵活的方式实现相同的结果。
- en: '[PRE2]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Mapping is controlled by Sklearn. We can visualize it like this:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 映射由 Sklearn 控制。我们可以这样可视化它：
- en: '[PRE3]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note the `.fillna(“NONE")` in the code snippet above. In fact, Sklearn’s label
    encoder does not handle empty values and will give an error when applying it if
    any are found.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 注意上面的代码片段中的 `.fillna(“NONE")`。实际上，Sklearn 的标签编码器不处理空值，如果发现任何空值，应用时会产生错误。
- en: One of the most important things to keep in mind for the correct handling of
    categorical variables is to always handle the empty values. In fact, most of the
    relevant techniques don’t work if these aren’t taken care of.
  id: totrans-54
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 正确处理分类变量时最重要的一点是始终处理空值。实际上，大多数相关技术在未处理这些值时无法正常工作。
- en: 'The label encoder maps arbitrary numbers to each category in the column, without
    an explicit declaration of the mapping. This is convenient, but introduces a problem
    for some predictive models: *it introduces the need to scale the data if the column
    is not the target one*.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 标签编码器将任意数字映射到列中的每个类别，而无需显式声明映射。这很方便，但对某些预测模型引入了一个问题：*如果列不是目标列，它引入了需要对数据进行缩放的需求*。
- en: In fact, machine learning beginners often ask what the difference is between
    label encoder and one hot encoder, which we will see shortly. **The label encoder,
    by design, should be applied to the labels, ie the target variable we want to
    predict and not to the other columns.**
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，机器学习初学者经常问标签编码器和 one hot 编码器之间的区别，我们很快会看到。**标签编码器从设计上应应用于标签，即我们想要预测的目标变量，而不是其他列。**
- en: Having said that, some models also very relevant in the field work well even
    with an encoding of this type. I’m talking about tree models, among which XGBoost
    and LightGBM stand out.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 说到这一点，一些在领域内非常相关的模型即使使用这种类型的编码也能很好地工作。我指的是树模型，其中 XGBoost 和 LightGBM 脱颖而出。
- en: So feel free to use label encoders if you decide to use tree models, but otherwise,
    we have to use one hot encoding.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，如果你决定使用树模型，可以自由使用标签编码器，但否则，我们必须使用 one hot 编码。
- en: 2\. One Hot Encoding
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. One Hot 编码
- en: As I already mentioned in my article about [vector representations in machine
    learning](https://medium.com/towards-data-science/vector-representations-for-machine-learning-5047c50aaeff),
    one hot encoding is a very common and famous vectorization technique (i.e. converting
    a text into a number).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我在我的文章中提到的[机器学习中的向量表示](https://medium.com/towards-data-science/vector-representations-for-machine-learning-5047c50aaeff)，one
    hot 编码是一种非常常见且著名的向量化技术（即将文本转换为数字）。
- en: 'It works like this: for each category present, a square matrix is created whose
    only possible values are 0 and 1\. This matrix informs the model that among all
    possible categories, this observed row has the value denoted by 1.'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 它的工作原理是：对于每个存在的类别，创建一个仅可能包含 0 和 1 的方阵。这个矩阵通知模型，在所有可能的类别中，这一观察到的行具有由 1 表示的值。
- en: 'An example:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 一个例子：
- en: '[PRE4]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The array is of size *n_categories*. This is very useful information, because
    one hot encoding typically requires **a sparse representation** of the converted
    data.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 数组的大小为 *n_categories*。这是非常有用的信息，因为 one hot 编码通常需要**稀疏表示**转换后的数据。
- en: What does it mean? It means that for large numbers of categories, the matrix
    could become equally large. Being populated only by values of 0 and 1 and since
    only one of the positions can be populated by a 1, this makes the one hot representation
    very redundant and cumbersome.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着什么？这意味着对于大量类别，矩阵也可能变得非常大。由于矩阵仅由 0 和 1 组成，并且只有一个位置可以被 1 填充，这使得 one hot 表示非常冗余和繁琐。
- en: A sparse matrix solves this problem — only the positions of the 1’s are saved,
    while values equal to 0 are not saved. This simplifies the mentioned problem and
    allows us to save a huge array of information in exchange for very little memory
    usage.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 稀疏矩阵解决了这个问题——只保存 1 的位置，而不保存值为 0 的位置。这简化了上述问题，并使我们能够以极少的内存使用量保存大量的信息。
- en: Let’s see what such an array looks like in Python, applying the code from before
    again
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看在 Python 中这样一个数组的样子，再次应用之前的代码。
- en: '[PRE5]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Python returns an object by default, not a list of values. To get such a list,
    you need to use `.toarray()`
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Python 默认返回一个对象，而不是值列表。要获得这样的列表，你需要使用 `.toarray()`
- en: '[PRE6]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Don’t worry if you don’t fully understand the concept: we will soon see how
    to apply the label and one hot encoder to the dataset to train a predictive model.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不完全理解这个概念也不用担心：我们很快会看到如何将标签编码和独热编码应用于数据集，以训练预测模型。
- en: Label encoding and one hot encoding are the most important techniques for handling
    categorical variables. Knowing these two techniques will allow you to handle most
    cases that involve categorical variables.
  id: totrans-72
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 标签编码和独热编码是处理分类变量的最重要技术。掌握这两种技术将使你能够处理大多数涉及分类变量的情况。
- en: 3\. Transformations and aggregations
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. 转换和聚合。
- en: Another method of converting from categorical to numeric format is to perform
    a transformation or aggregation on the variable.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 将分类数据转换为数值格式的另一种方法是对变量进行转换或聚合。
- en: By grouping with `.groupby()` it is possible to use the count of the values
    present in the column as the output of the transformation.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 通过`.groupby()`分组，可以将列中存在值的计数用作转换的输出。
- en: '[PRE7]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: using `.transform()` we can replace these numbers to the corresponding cell
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`.transform()`我们可以将这些数字替换到相应的单元格中。
- en: '[PRE8]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: It is possible to apply this logic also with other mathematical operations —
    the method that most improves the performance of our model should be tested.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以使用其他数学操作应用这种逻辑——应测试最能提高模型性能的方法。
- en: 4\. Create new categorical features from categorical variables
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4\. 从分类变量创建新的分类特征。
- en: We look at the ord_1 column together with ord_2
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将 ord_1 列与 ord_2 一起查看。
- en: '![](../Images/b9ed1890cb1951a94860379758143a9f.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b9ed1890cb1951a94860379758143a9f.png)'
- en: image by author.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源于作者。
- en: We can create new categorical variables by merging existing variables. For example,
    we can merge ord_1 with ord_2 to create a new feature
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过合并现有变量来创建新的分类变量。例如，我们可以将 ord_1 与 ord_2 合并，以创建一个新特征。
- en: '[PRE9]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This technique can be applied in practically any case. The idea that must guide
    the analyst is to improve the performance of the model by adding information that
    was originally difficult to understand to the learning model.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术几乎可以应用于任何情况。指导分析师的思想是通过向学习模型中添加原本难以理解的信息来提高模型的性能。
- en: 5\. Use NaN as a categorical variable
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5\. 将 NaN 作为分类变量使用。
- en: Very often null values are removed. This is typically not a move I recommend,
    **as the NaNs contain potentially useful information to our model.**
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 很多时候，空值会被删除。我通常不推荐这样做，**因为 NaNs 可能包含对我们的模型有用的信息**。
- en: One solution is to treat NaNs as a category in their own right.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 一种解决方案是将 NaNs 视为一个独立的类别。
- en: Let’s look at the ord_2 column again
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 再次查看 ord_2 列。
- en: '[PRE10]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Now let’s try applying the `.fillna(“NONE")` to see how many empty cells exist
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们尝试应用`.fillna(“NONE")`，以查看有多少个空单元格存在。
- en: '[PRE11]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: As a percentage, NONE represents about 3% of the entire column. It’s a pretty
    noticeable amount. Exploiting the NaN makes even more sense and can be done with
    the One Hot Encoder mentioned earlier.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 作为百分比，NONE 约占整列的 3%。这是一个相当显著的量。利用 NaN 更有意义，并且可以使用之前提到的独热编码来完成。
- en: Tracking rare categories
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 跟踪稀有类别。
- en: 'Let’s remember what the OneHotEncoder does: it creates a sparse matrix whose
    number of columns and rows is equal to the number of unique categories in the
    referenced column. *This means that we must also take into account the categories
    that could be present in the test set and that could be absent in the train set.*'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们记住 OneHotEncoder 的作用：它创建一个稀疏矩阵，其列数和行数等于引用列中唯一类别的数量。*这意味着我们还必须考虑可能存在于测试集中但可能在训练集中缺失的类别*。
- en: The situation is similar for the LabelEncoder — there may be categories in the
    test set but which are not present in the training set and this could create problems
    during the transformation.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 LabelEncoder 情况类似——测试集中可能存在但训练集中没有的类别，这可能在转换过程中造成问题。
- en: We solve this problem by concatenating the datasets. This will allow us to apply
    the encoders to all data and not just the training data.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过连接数据集来解决这个问题。这将允许我们将编码器应用于所有数据，而不仅仅是训练数据。
- en: '[PRE12]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![](../Images/e8556ff3c302b82438c4094d26f5789f.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e8556ff3c302b82438c4094d26f5789f.png)'
- en: Image by author.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源于作者。
- en: This methodology helps us if we have the test set. If we don’t have the test
    set, we will take into account a value like NONE when a new category becomes part
    of our training set.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们有测试集，这种方法对我们很有帮助。如果没有测试集，当新类别成为训练集的一部分时，我们将考虑使用类似 NONE 的值。
- en: Model categorical data
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模型分类数据。
- en: Now let’s move on to the training of a simple model. We will follow the steps
    from the article on how to design and implement a cross-validation at the following
    link 👇
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们开始训练一个简单的模型。我们将按照以下链接中关于如何设计和实现交叉验证的步骤进行 👇
- en: '[](/what-is-cross-validation-in-machine-learning-14d2a509d6a5?source=post_page-----854d0b65a6ae--------------------------------)
    [## What is cross-validation in machine learning'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/what-is-cross-validation-in-machine-learning-14d2a509d6a5?source=post_page-----854d0b65a6ae--------------------------------)
    [## 什么是机器学习中的交叉验证'
- en: Learn what cross-validation is — a fundamental technique for building generalizable
    models
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 了解什么是交叉验证——构建通用模型的基本技术
- en: towardsdatascience.com](/what-is-cross-validation-in-machine-learning-14d2a509d6a5?source=post_page-----854d0b65a6ae--------------------------------)
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/what-is-cross-validation-in-machine-learning-14d2a509d6a5?source=post_page-----854d0b65a6ae--------------------------------)
- en: We start from scratch, importing our data and creating our folds with Sklearn’s
    `StratifiedKFold`.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从头开始，导入数据并使用Sklearn的`StratifiedKFold`创建折叠。
- en: '[PRE13]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: This little snippet of code will create a Pandas dataframe with 5 groups to
    test our model against.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这段小代码将创建一个包含5个组的Pandas数据框，以测试我们的模型。
- en: '![](../Images/bb127860185f608bac6b4229aa4ab9cf.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bb127860185f608bac6b4229aa4ab9cf.png)'
- en: Image by author.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图像。
- en: Now let’s define a function that will test a logistic regression model on each
    group.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们定义一个函数，用于测试每个组上的逻辑回归模型。
- en: '[PRE14]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: I invite the interested reader to read the article on cross-validation to understand
    in more detail the functioning of the code shown.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我邀请感兴趣的读者阅读有关交叉验证的文章，以更详细地理解所展示代码的工作原理。
- en: Now let’s see how instead to apply a tree model like XGBoost, which also works
    well with a LabelEncoder.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看如何应用像XGBoost这样的树模型，它也与LabelEncoder配合得很好。
- en: '[PRE15]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Conclusions
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: 'In conclusion, there are also other techniques worth mentioning for handling
    categorical variables:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，还有其他值得一提的技术来处理分类变量：
- en: '**Target-based encoding**, where the category is converted into the average
    value assumed by the target variable in correspondence with it'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于目标的编码**，即将类别转换为目标变量在对应类别下的平均值'
- en: '[**The embeddings of a neural network**](https://medium.com/towards-data-science/vector-representations-for-machine-learning-5047c50aaeff),
    which can be used to represent the textual entity'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**神经网络的嵌入**](https://medium.com/towards-data-science/vector-representations-for-machine-learning-5047c50aaeff)，可用于表示文本实体'
- en: In summary, here are the essential steps for a correct management of categorical
    variables
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，正确管理分类变量的关键步骤如下
- en: always treat null values
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 总是处理空值
- en: apply LabelEncoder or OneHotEncoder based on the type of variable and template
    we want to use
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据变量的类型和我们想使用的模板应用LabelEncoder或OneHotEncoder
- en: reason in terms of variable enrichment, considering NaN or NONE as categorical
    variables that can inform the model
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从变量丰富的角度考虑，将NaN或NONE视为可以告知模型的分类变量
- en: Model the data!
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建模数据！
- en: Thank you for your time,
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢你的时间，
- en: Andrea
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 安德烈亚
- en: Recommended Reads
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 推荐阅读
- en: For the interested, here are a list of books that I recommended for each ML-related
    topic. There are ESSENTIAL books in my opinion and have greatly impacted my professional
    career.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 对于感兴趣的读者，以下是我推荐的每个机器学习相关主题的书单。这些书在我看来是**必不可少**的，并且对我的职业生涯产生了重大影响。
- en: '*Disclaimer: these are Amazon affiliate links. I will receive a small commission
    from Amazon for referring you these items. Your experience won’t change and you
    won’t be charged more, but it will help me scale my business and produce even
    more content around AI.*'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '*免责声明：这些是亚马逊的附属链接。我将从亚马逊获得少量佣金，以推荐这些商品给你。你的体验不会改变，你也不会被多收费，但这将帮助我扩大业务，并制作更多关于AI的内容。*'
- en: '**Intro to ML:** [*Confident Data Skills: Master the Fundamentals of Working
    with Data and Supercharge Your Career*](https://amzn.to/3ZzKTz6)by Kirill Eremenko'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**机器学习简介：** [*自信的数据技能：掌握数据工作的基础，提升你的职业生涯*](https://amzn.to/3ZzKTz6)作者Kirill
    Eremenko'
- en: '**Sklearn / TensorFlow:** [*Hands-On Machine Learning with Scikit-Learn, Keras,
    and TensorFlow*](https://amzn.to/433F4Nm) by Aurelien Géron'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Sklearn / TensorFlow：** [*用Scikit-Learn、Keras和TensorFlow进行实践机器学习*](https://amzn.to/433F4Nm)作者Aurelien
    Géron'
- en: '**NLP:** [*Text as Data: A New Framework for Machine Learning and the Social
    Sciences*](https://amzn.to/3zvH43j)by Justin Grimmer'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NLP：** [*文本作为数据：机器学习和社会科学的新框架*](https://amzn.to/3zvH43j)作者Justin Grimmer'
- en: '**Sklearn / PyTorch:** [*Machine Learning with PyTorch and Scikit-Learn: Develop
    machine learning and deep learning models with Python*](https://amzn.to/3Gcavve)
    by Sebastian Raschka'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Sklearn / PyTorch：** [*用 PyTorch 和 Scikit-Learn 进行机器学习：用 Python 开发机器学习和深度学习模型*](https://amzn.to/3Gcavve)
    作者：Sebastian Raschka'
- en: '**Data Viz:** [*Storytelling with Data: A Data Visualization Guide for Business
    Professionals*](https://amzn.to/3HUtGtB) by Cole Knaflic'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据可视化：** [*用数据讲故事：商务专业人士的数据可视化指南*](https://amzn.to/3HUtGtB) 作者：Cole Knaflic'
- en: Useful Links (written by me)
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 有用的链接（由我编写）
- en: '**Learn how to perform a top-tier Exploratory Data Analysis in Python**: [*Exploratory
    Data Analysis in Python — A Step-by-Step Process*](/exploratory-data-analysis-in-python-a-step-by-step-process-d0dfa6bf94ee)'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**学习如何在 Python 中进行顶级的探索性数据分析**：[*Python 中的探索性数据分析——逐步过程*](/exploratory-data-analysis-in-python-a-step-by-step-process-d0dfa6bf94ee)'
- en: '**Learn the basics of PyTorch:** [*Introduction to PyTorch: from training loop
    to prediction*](https://medium.com/towards-data-science/introduction-to-pytorch-from-training-loop-to-prediction-a70372764432)'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**学习 PyTorch 的基础知识：** [*PyTorch 入门：从训练循环到预测*](https://medium.com/towards-data-science/introduction-to-pytorch-from-training-loop-to-prediction-a70372764432)'
- en: '**Learn the basics of TensorFlow**: [*Get started with TensorFlow 2.0 — Introduction
    to deep learning*](https://medium.com/towards-data-science/a-comprehensive-introduction-to-tensorflows-sequential-api-and-model-for-deep-learning-c5e31aee49fa)'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**学习 TensorFlow 的基础知识**：[*从 TensorFlow 2.0 开始——深度学习入门*](https://medium.com/towards-data-science/a-comprehensive-introduction-to-tensorflows-sequential-api-and-model-for-deep-learning-c5e31aee49fa)'
- en: '**Perform text clustering with TF-IDF in Python**: [*Text Clustering with TF-IDF
    in Python*](https://medium.com/mlearning-ai/text-clustering-with-tf-idf-in-python-c94cd26a31e7)'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用 TF-IDF 在 Python 中进行文本聚类**：[*Python 中的 TF-IDF 文本聚类*](https://medium.com/mlearning-ai/text-clustering-with-tf-idf-in-python-c94cd26a31e7)'
- en: '**If you want to support my content creation activity, feel free to follow
    my referral link below and join Medium’s membership program**. I will receive
    a portion of your investment and you’ll be able to access Medium’s plethora of
    articles on data science and more in a seamless way.'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果你想支持我的内容创作活动，请随意通过下面的推荐链接加入 Medium 的会员计划**。我将从你的投资中获得一部分，同时你也可以无缝访问 Medium
    上关于数据科学等领域的大量文章。'
- en: '[](https://medium.com/@theDrewDag/membership?source=post_page-----854d0b65a6ae--------------------------------)
    [## Join Medium with my referral link - Andrea D''Agostino'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 通过我的推荐链接加入 Medium - Andrea D''Agostino](https://medium.com/@theDrewDag/membership?source=post_page-----854d0b65a6ae--------------------------------)'
- en: As a Medium member, a portion of your membership fee goes to writers you read,
    and you get full access to every story…
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 作为 Medium 会员，你的部分会员费用将分配给你阅读的作者，并且你可以全面访问每一个故事……
- en: medium.com](https://medium.com/@theDrewDag/membership?source=post_page-----854d0b65a6ae--------------------------------)
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '[medium.com](https://medium.com/@theDrewDag/membership?source=post_page-----854d0b65a6ae--------------------------------)'
