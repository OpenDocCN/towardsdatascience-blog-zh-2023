["```py\nimport pandas as pd\n\ndf = pd.read_csv('https://bit.ly/3ZgrmW0', \n                 usecols=['date', 'mortalities'])\ndf.date = pd.to_datetime(df.date)\ndf = df.sort_values('date')\ndf = df.set_index('date')\ndf.tail()\n```", "```py\ndf.plot();\n\n# Optional code to save the figure:\n# fig = df.plot().get_figure();\n# fig.savefig('file_name.png',  bbox_inches='tight', dpi=600)\n```", "```py\nprint(f\"Max. Value: {df['mortalities'].max()}\")\nprint(f\"Date: {df['mortalities'].idxmax()}\")\n```", "```py\n# Set aberrant spike at 2020-7-27 to CDC value of 239 deaths:\ndf.loc['2020-7-27', 'mortalities'] = 239  \ndf.plot();\n```", "```py\n# Examine values by weekday:\ndf_weekdays = df.copy()\ndf_weekdays['weekdays'] = df.index.day_name()\n\ndf_weekdays.iloc[103:120].plot(figsize=(10, 5), rot=90, x='weekdays');\n```", "```py\n# Highlight Mondays in the DataFrame printout:\ndf_weekdays = df_weekdays.iloc[90:115]\ndf_weekdays.style.apply(lambda x: ['background: lightgrey' \n                                   if x.weekdays == 'Monday'\n                                   else '' for i in x], axis=1)\n```", "```py\n# Resample weekly to remove serrations:\ndf.resample('W').sum().plot(grid=True);\n```"]