- en: Use the Synonyms APIs to Update Synonyms Conveniently in Elasticsearch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/use-the-synonyms-apis-to-update-synonyms-conveniently-in-elasticsearch-9d43e350a2e3](https://towardsdatascience.com/use-the-synonyms-apis-to-update-synonyms-conveniently-in-elasticsearch-9d43e350a2e3)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Learn a new way to update Elasticsearch synonyms without re-indexing or reloading
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://lynn-kwong.medium.com/?source=post_page-----9d43e350a2e3--------------------------------)[![Lynn
    G. Kwong](../Images/b9a05b6587db5ca41c1d8264adda5b06.png)](https://lynn-kwong.medium.com/?source=post_page-----9d43e350a2e3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----9d43e350a2e3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----9d43e350a2e3--------------------------------)
    [Lynn G. Kwong](https://lynn-kwong.medium.com/?source=post_page-----9d43e350a2e3--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----9d43e350a2e3--------------------------------)
    ·5 min read·Nov 25, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b3193155f751500d3dee5b98319411e9.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Tumisu on Pixabay
  prefs: []
  type: TYPE_NORMAL
- en: The synonyms feature of Elasticsearch is very powerful and can significantly
    enhance your search engine’s efficiency when properly used. A common issue when
    using the synonyms feature is to update the synonyms set.
  prefs: []
  type: TYPE_NORMAL
- en: The synonyms defined inline in the settings of an index cannot be updated directly,
    and we need to close the index, update the settings, and re-open the index to
    make the changes effective. Another way is to use a synonyms file which can be
    updated by reloading the index. However, using an index file is difficult to manage
    when the Elasticsearch server is distributed or hosted in the cloud. This is because
    we need to put the file on all cluster nodes.
  prefs: []
  type: TYPE_NORMAL
- en: The good news is that there is a third way to do it now, which is much more
    convenient than the previous two. We can now use the synonyms APIs to manage synonyms.
    Even though it’s still a beta functionality of Elasticsearch at the time of writing,
    I think it will be adopted soon because this functionality is highly demanded
    by developers and can solve the tricky problem of updating synonyms sets very
    conveniently. We will explore the common usage of the synonyms APIs in this post.
  prefs: []
  type: TYPE_NORMAL
- en: Preparation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We will use the following `docker-compose.yaml` file to start Elasticsearch
    and Kinana locally for demonstration.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Note that you need to have at least version 8.10.0 of Elasticsearch to use the
    synonyms APIs. The latest version available would be the best as the feature should
    have become more mature then.
  prefs: []
  type: TYPE_NORMAL
- en: Create a synonyms set
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When Elasticsearch and Kibana are started with the above `docker-compose.yaml`
    file, we can go to [http://localhost:5601](http://localhost:5601) to manage Elasticsearch
    indexes and synonyms.
  prefs: []
  type: TYPE_NORMAL
- en: To use the synonyms APIs to manage synonyms, we need to create a synonyms set
    first before it can be used in an Elasticsearch index.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can use the `_synonyms` endpoint to create or update a synonyms set using
    the `PUT` request:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '`products-synonyms-set` is a user-defined name of the synonyms set.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`synonyms_set` is the required key for the request body which includes an array
    of synonyms rules.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each synonym rule is an object with an optional `id` key and a mandatory `synonyms`
    key. If the `id` is not provided, an identifier will be created by Elasticsearch.
    The value for `synonyms` is a rule defined in the Solr format as used in the [previous
    post](/how-to-use-the-synonyms-feature-correctly-in-elasticsearch-7bdf856a94cb).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create an Elasticsearch index using the synonyms set
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'When the synonyms set is created, it can be used in the `synonym` or `synonym_graph`
    token filters when an index is created:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: As we can see, the configurations for using a synonyms set are very similar
    to those using a synonyms file, as demonstrated in [this post](/how-to-use-the-synonyms-feature-correctly-in-elasticsearch-7bdf856a94cb)
    with great details. We just need to change `synonyms_path` to `synonyms_set`.
  prefs: []
  type: TYPE_NORMAL
- en: Test the synonyms set
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We can use the `_analyze` endpoint to analyze some text and test the synonyms
    added in the previous step using the API:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: It shows that the synonyms added by the API are working properly.
  prefs: []
  type: TYPE_NORMAL
- en: Update a synonyms set
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let’s now use the synonyms API to update the synonyms set. This is where the
    synonyms API really shines because we don’t need to close, open, or reload the
    corresponding Elasticsearch indexes, which alleviates the pain dramatically for
    developers.
  prefs: []
  type: TYPE_NORMAL
- en: We can use the `PUT` method to update the synonyms set as a whole. Be extremely
    careful here, otherwise, you will replace the original set with a new one containing
    only the new synonym rules, which is very destructive in production.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s add a new synonym rule to `inventory-synonyms-set`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Note that the original synonyms set should be added here as well.
  prefs: []
  type: TYPE_NORMAL
- en: 'When an existing synonyms set is updated, the search analyzers that use the
    synonym set are reloaded automatically for all indices, which can be seen in the
    response of the `PUT` request above:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'We can use the `_analyze` endpoint to test the newly added synonym:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Yes, the synonyms set is updated successfully and it’s effective in real time
    with no need to close, open, or reload the corresponding index.
  prefs: []
  type: TYPE_NORMAL
- en: 'Besides, we can also perform incremental updates by adding a rule directly.
    In this case, we need to specify an `id` for the rule in the path:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'You can also delete a synonym rule by its id:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Updating the synonym rules individually works in the same as when the synonyms
    set is updated as a whole.
  prefs: []
  type: TYPE_NORMAL
- en: Monitor synonyms sets
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We can use the `GET` method to retrieve the content of a synonyms set directly:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'In practice, we would want to write some script to count the number of synonyms
    for an index to make sure the synonyms are not removed accidentally as shown above.
    The following code snippet in Python can count the number of synonyms in a synonyms
    set:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: In this work, we introduced the basics of Elasticsearch synonyms API and demonstrated
    how to use it to manage synonyms conveniently. With this functionality, we don’t
    need to close and open an index as with inline synonyms or reload the index manually
    as with a synonyms file. It can make our search engines more stable and our work
    as a developer much easier.
  prefs: []
  type: TYPE_NORMAL
- en: Related articles
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[How to Use the Synonyms Feature Correctly in Elasticsearch](/how-to-use-the-synonyms-feature-correctly-in-elasticsearch-7bdf856a94cb)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Important Syntax Updates of Elasticsearch 8 in Python](/important-syntax-updates-of-elasticsearch-8-in-python-4423c5938b17)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
