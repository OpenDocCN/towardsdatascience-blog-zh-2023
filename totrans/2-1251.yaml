- en: How to Test Your Python Code with Pytest
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用Pytest测试您的Python代码
- en: 原文：[https://towardsdatascience.com/how-to-test-your-python-code-with-pytest-c8f055979dd7](https://towardsdatascience.com/how-to-test-your-python-code-with-pytest-c8f055979dd7)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-test-your-python-code-with-pytest-c8f055979dd7](https://towardsdatascience.com/how-to-test-your-python-code-with-pytest-c8f055979dd7)
- en: Programming, Python
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编程，Python
- en: Simplify your testing process and enhance code quality with Pytest
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简化您的测试过程，并通过Pytest提升代码质量
- en: '[](https://alod83.medium.com/?source=post_page-----c8f055979dd7--------------------------------)[![Angelica
    Lo Duca](../Images/45aa2e2e504bb3af6d3b8009dc6f030e.png)](https://alod83.medium.com/?source=post_page-----c8f055979dd7--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c8f055979dd7--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c8f055979dd7--------------------------------)
    [Angelica Lo Duca](https://alod83.medium.com/?source=post_page-----c8f055979dd7--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://alod83.medium.com/?source=post_page-----c8f055979dd7--------------------------------)[![Angelica
    Lo Duca](../Images/45aa2e2e504bb3af6d3b8009dc6f030e.png)](https://alod83.medium.com/?source=post_page-----c8f055979dd7--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c8f055979dd7--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c8f055979dd7--------------------------------)
    [Angelica Lo Duca](https://alod83.medium.com/?source=post_page-----c8f055979dd7--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c8f055979dd7--------------------------------)
    ·5 min read·Jun 1, 2023
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c8f055979dd7--------------------------------)
    ·5分钟阅读·2023年6月1日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/8fa752ecf9ee0df5ef35b90402cbbda7.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8fa752ecf9ee0df5ef35b90402cbbda7.png)'
- en: Image by Author
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图像
- en: 'Are you tired of spending hours debugging your code and fixing errors that
    could have easily been prevented? We know how frustrating it can be to have code
    that doesn’t work correctly, especially when you’re under pressure to deliver
    results. But fear not! There’s a solution: Pytest.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 您是否厌倦了花费几个小时调试代码和修复那些本可以轻易避免的错误？我们知道当您的代码不能正确工作时，尤其是在需要迅速交付结果的压力下，这会让人感到非常沮丧。但是别担心！有一个解决方案：Pytest。
- en: Pytest is a robust testing framework that helps ensure your code works as expected,
    even under different scenarios and conditions. Integrating Pytest into your code
    allows you to identify and fix bugs before they become problems, saving you time
    and effort in the long run.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Pytest是一个强大的测试框架，帮助确保您的代码在不同的场景和条件下按预期工作。将Pytest集成到您的代码中可以帮助您在问题变成麻烦之前发现并修复错误，从而节省时间和精力。
- en: In this article, we’ll show you how to start with Pytest. From setting up your
    environment to writing tests that cover all your code, we’ve got you covered.
    So why wait? Let’s start testing and ensure your code works flawlessly every time.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将向您展示如何开始使用Pytest。从设置环境到编写覆盖所有代码的测试，我们为您提供了完整的指导。那么还等什么？让我们开始测试，确保您的代码每次都能完美运行。
- en: 'We’ll cover:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将涵盖：
- en: An Overview of Pytest
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pytest概述
- en: A Practical Example
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实际示例
- en: Let’s start by describing an overview of Pytest.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从Pytest的概述开始描述。
- en: An Overview of Pytest
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Pytest概述
- en: 'Pytest is a testing framework for Python that focuses on simplicity and ease
    of use. To install Pytest, run the following command:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Pytest是一个关注简单性和易用性的Python测试框架。要安装Pytest，请运行以下命令：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Pytest follows a modular and extensible architecture, allowing developers to
    organize tests into individual test functions or classes.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Pytest遵循模块化和可扩展的架构，允许开发人员将测试组织成单独的测试函数或类。
- en: 'When you build your test using Pytest, you must follow the steps described
    below:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当您使用Pytest构建测试时，必须遵循以下步骤：
- en: '**Create a new script** `test_<mytest>.py` for your tests. Import Pytest into
    the script.'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**创建一个新的脚本** `test_<mytest>.py` 用于您的测试。将Pytest导入到脚本中。'
- en: '**Define Your Test Functions:** A test function is a Python function that verifies
    a specific aspect of your code’s behavior. Each test function should be self-contained,
    focusing on a single test case. Pytest automatically discovers and executes these
    test functions.'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**定义您的测试函数**：测试函数是一个Python函数，用于验证代码行为的特定方面。每个测试函数应该是自包含的，专注于单个测试用例。Pytest会自动发现并执行这些测试函数。'
- en: '**Test Naming Convention**: Each test function must start with `test_` to make
    Pytest recognize it correctly.'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**测试命名规范**：每个测试函数必须以`test_`开头，以便Pytest正确识别它。'
- en: '**Test Assertions**: Use test assertions to define the function''s behavior.
    Pytest provides a wide range of powerful assertion functions.'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**测试断言**：使用测试断言来定义函数的行为。Pytest 提供了广泛的强大断言函数。'
- en: '**Test Fixtures**: Fixtures are functions that provide reusable and preconfigured
    resources or test data to your test functions.'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**测试夹具**：夹具是提供可重用和预配置的资源或测试数据的函数，供你的测试函数使用。'
- en: A List of Some Assets Functions
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一些资产函数列表
- en: 'Here are some of the main assertions provided by Pytest:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是 Pytest 提供的一些主要断言：
- en: '`assert`: Make simple assertions by checking if a given condition is true'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`assert`：通过检查给定条件是否为真来进行简单断言。'
- en: '`assertEqual`: Compare two values for equality. It checks if the expected value
    is equal to the actual value'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`assertEqual`：比较两个值的相等性。它检查期望值是否等于实际值。'
- en: '`assertTrue` and `assertFalse`: Verify if a given condition is true or false.'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`assertTrue` 和 `assertFalse`：验证给定条件是否为真或假。'
- en: '`assertRaises`: Check if a specific exception is raised when executing a code.'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`assertRaises`：检查在执行代码时是否抛出特定异常。'
- en: '`assertIn` and `assertNotIn`: Verify if a value is present or absent in a given
    collection or sequence'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`assertIn` 和 `assertNotIn`：验证值是否在给定集合或序列中存在或不存在。'
- en: '`assertAlmostEqual`: Compare floating-point values to a specified degree of
    precision.'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`assertAlmostEqual`：将浮点值与指定的精度进行比较。'
- en: '`assertDictEqual`: Check if two dictionaries have the same set of key-value
    pairs.'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`assertDictEqual`：检查两个字典是否具有相同的键值对集合。'
- en: '`assertRaisesRegex`: Verify if a specific exception is raised and the exception
    message matches a regular expression pattern.'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`assertRaisesRegex`：验证是否抛出特定异常，并且异常消息是否匹配正则表达式模式。'
- en: Now that you have seen the basic concepts behind Pytest let’s move on to a practical
    example.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经了解了 Pytest 背后的基本概念，让我们进入实际示例。
- en: A Practical Example
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实际示例
- en: Let’s imagine we want to build a calculator and test if we have implemented
    it correctly. First, we define the core functions, and then we write tests.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们设想构建一个计算器并测试其实现是否正确。首先，我们定义核心函数，然后编写测试。
- en: Core Functions
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 核心函数
- en: 'The core functions implement the calculator''s operations. For example, we
    can write the following simple code to implement the primary operations:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 核心函数实现了计算器的操作。例如，我们可以编写以下简单代码来实现主要操作：
- en: '[PRE1]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Save the file as `calculator.py`.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 将文件保存为 `calculator.py`。
- en: Test Functions
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试函数
- en: 'In the same directory where we save the core functions, add another script
    for the tests named `test_calculator.py`. First, import the core functions and
    the Pytest library:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们保存核心函数的相同目录中，添加一个名为 `test_calculator.py` 的脚本。首先，导入核心函数和 Pytest 库：
- en: '[PRE2]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then, add a test for each function in the `calculator.py` file. For each function,
    add a separate test. For example, to test the `add()` function, write the following
    test:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，为 `calculator.py` 文件中的每个函数添加测试。对于每个函数，添加一个单独的测试。例如，要测试 `add()` 函数，编写以下测试：
- en: '[PRE3]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Similarly, you can write tests for the other functions. You can find the complete
    example in [this GitHub repository](https://github.com/alod83/data-science/tree/master/Tests/Calculator).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，你可以为其他函数编写测试。你可以在[这个 GitHub 仓库](https://github.com/alod83/data-science/tree/master/Tests/Calculator)中找到完整的示例。
- en: 'To run tests, open a terminal and run the following command from the folder
    where there are the two scripts:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行测试，打开终端，并从包含两个脚本的文件夹中运行以下命令：
- en: '[PRE4]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You should obtain the following output:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '[PRE5]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Using Test Fixtures
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用测试夹具
- en: 'Let’s modify the previous example to support test fixtures. First, create a
    new directory and a new file named `calculator.py`. Wrap the calculation functions
    in a class:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们修改前面的示例以支持测试夹具。首先，创建一个新目录和一个名为 `calculator.py` 的新文件。将计算函数封装在一个类中：
- en: '[PRE6]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Then, create another script called `test_calculator.py` in the same directory.
    Import Pytest and the `Calculator` class at the beginning of the script:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在相同目录中创建另一个名为 `test_calculator.py` 的脚本。在脚本开始时导入 Pytest 和 `Calculator` 类：
- en: '[PRE7]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Use the `@pytest.fixture` decorator to define a fixture named `calculator`.
    Fixtures are functions that provide reusable resources or setup actions for tests.
    In this case, the `calculator` fixture creates an instance of the `Calculator`
    class and returns it.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `@pytest.fixture` 装饰器定义一个名为 `calculator` 的夹具。夹具是提供可重用资源或设置操作的函数。在这种情况下，`calculator`
    夹具创建了 `Calculator` 类的实例并返回它。
- en: '[PRE8]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now we can use the test fixture `calculator` in our tests:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以在测试中使用测试夹具 `calculator`：
- en: '[PRE9]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Finally, run the test:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，运行测试：
- en: '[PRE10]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'You should obtain the following output:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '[PRE11]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: You can find the complete example in [this GitHub repository](https://github.com/alod83/data-science/tree/master/Tests/CalculatorFixture).
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[这个 GitHub 仓库](https://github.com/alod83/data-science/tree/master/Tests/CalculatorFixture)中找到完整的示例。
- en: Summary
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Congratulations! You have just learned how to add tests to your Python code
    using Pytest! Embracing Pytest as your testing framework ensures the reliability
    and longevity of your Python code!
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你刚刚学习了如何使用 Pytest 为你的 Python 代码添加测试！将 Pytest 作为你的测试框架可以确保你的 Python 代码的可靠性和长期稳定性！
- en: 'Using Pytest is simple: you need to write intuitive test functions!'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Pytest 非常简单：你只需编写直观的测试函数！
- en: You may also be interested in…
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你可能还感兴趣的是……
- en: '[](https://medium.com/syntaxerrorpub/4-docker-options-you-may-not-know-fef301a5ce03?source=post_page-----c8f055979dd7--------------------------------)
    [## 4 Docker Options You May Not Know'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/syntaxerrorpub/4-docker-options-you-may-not-know-fef301a5ce03?source=post_page-----c8f055979dd7--------------------------------)
    [## 你可能不知道的 4 种 Docker 选项'
- en: How to remove an image in Docker, rebuild an image from the base image, pass
    some configuration files to a Docker…
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何在 Docker 中删除镜像，从基础镜像重建镜像，将一些配置文件传递给 Docker……
- en: medium.com](https://medium.com/syntaxerrorpub/4-docker-options-you-may-not-know-fef301a5ce03?source=post_page-----c8f055979dd7--------------------------------)
    [](/how-to-install-spark-nlp-5fcd36fab378?source=post_page-----c8f055979dd7--------------------------------)
    [## How to Install Spark NLP
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '[medium.com](https://medium.com/syntaxerrorpub/4-docker-options-you-may-not-know-fef301a5ce03?source=post_page-----c8f055979dd7--------------------------------)
    [](/how-to-install-spark-nlp-5fcd36fab378?source=post_page-----c8f055979dd7--------------------------------)
    [## 如何安装 Spark NLP'
- en: A step-by-step tutorial on how to make Spark NLP work on your local computer
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关于如何在本地计算机上使 Spark NLP 工作的分步教程
- en: towardsdatascience.com](/how-to-install-spark-nlp-5fcd36fab378?source=post_page-----c8f055979dd7--------------------------------)
    [](/getting-started-with-data-cleaning-in-python-pandas-76d977f95b57?source=post_page-----c8f055979dd7--------------------------------)
    [## Getting Started with Data Cleaning in Python Pandas
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/how-to-install-spark-nlp-5fcd36fab378?source=post_page-----c8f055979dd7--------------------------------)
    [](/getting-started-with-data-cleaning-in-python-pandas-76d977f95b57?source=post_page-----c8f055979dd7--------------------------------)
    [## Python Pandas 数据清洗入门'
- en: A practical example of performing data cleaning using the popular Python library.
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一个使用流行的 Python 库进行数据清洗的实际示例。
- en: towardsdatascience.com](/getting-started-with-data-cleaning-in-python-pandas-76d977f95b57?source=post_page-----c8f055979dd7--------------------------------)
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/getting-started-with-data-cleaning-in-python-pandas-76d977f95b57?source=post_page-----c8f055979dd7--------------------------------)'
