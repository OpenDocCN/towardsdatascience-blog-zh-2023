- en: 'Unlock the Power of Causal Inference and Front-door Adjustment: An In-Depth
    Guide for Data Scientists'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解锁因果推断和前门调整的力量：数据科学家的深入指南
- en: 原文：[https://towardsdatascience.com/unlock-the-power-of-causal-inference-front-door-adjustment-an-in-depth-guide-for-data-scientists-8e7b8ba33421](https://towardsdatascience.com/unlock-the-power-of-causal-inference-front-door-adjustment-an-in-depth-guide-for-data-scientists-8e7b8ba33421)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/unlock-the-power-of-causal-inference-front-door-adjustment-an-in-depth-guide-for-data-scientists-8e7b8ba33421](https://towardsdatascience.com/unlock-the-power-of-causal-inference-front-door-adjustment-an-in-depth-guide-for-data-scientists-8e7b8ba33421)
- en: A full explanation of causal inference front-door adjustment with examples including
    all the Python source code
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对因果推断前门调整的全面解释，包括所有 Python 源代码的示例
- en: '[](https://grahamharrison-86487.medium.com/?source=post_page-----8e7b8ba33421--------------------------------)[![Graham
    Harrison](../Images/c6bfe00c6e0cfcdf3bd042c7fdc03554.png)](https://grahamharrison-86487.medium.com/?source=post_page-----8e7b8ba33421--------------------------------)[](https://towardsdatascience.com/?source=post_page-----8e7b8ba33421--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----8e7b8ba33421--------------------------------)
    [Graham Harrison](https://grahamharrison-86487.medium.com/?source=post_page-----8e7b8ba33421--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://grahamharrison-86487.medium.com/?source=post_page-----8e7b8ba33421--------------------------------)[![Graham
    Harrison](../Images/c6bfe00c6e0cfcdf3bd042c7fdc03554.png)](https://grahamharrison-86487.medium.com/?source=post_page-----8e7b8ba33421--------------------------------)[](https://towardsdatascience.com/?source=post_page-----8e7b8ba33421--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----8e7b8ba33421--------------------------------)
    [Graham Harrison](https://grahamharrison-86487.medium.com/?source=post_page-----8e7b8ba33421--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----8e7b8ba33421--------------------------------)
    ·11 min read·Feb 14, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----8e7b8ba33421--------------------------------)
    ·11分钟阅读·2023年2月14日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/5e39a34966dc35b7649fbd31372905e3.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5e39a34966dc35b7649fbd31372905e3.png)'
- en: Photo by [Evelyn Paris](https://unsplash.com/@evelynparis?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/s/photos/front-door?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Evelyn Paris](https://unsplash.com/@evelynparis?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    提供，来源于 [Unsplash](https://unsplash.com/s/photos/front-door?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
- en: Objective
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 目标
- en: By the end of this article you will understand the magic of causal inference
    front-door adjustment that can calculate the effect of an event on an outcome
    even where there are other factors affecting both that are unmeasured or even
    unknown and you will have full access to all the Python code.
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在这篇文章结束时，你将理解因果推断的前门调整的魔力，它可以计算事件对结果的影响，即使存在其他未测量或甚至未知的因素影响两个变量，并且你将能够访问所有 Python
    代码。
- en: I have scoured the Internet and many books trying to find a fully working example
    of the front-door formula in Python and I have drawn a blank, so unless there
    are sources out there that I have missed, what you are about to read is genuinely
    unique …
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我在互联网和许多书籍中搜寻，试图找到一个在 Python 中完全工作的前门公式示例，但一无所获，因此，除非有我遗漏的资源，否则你即将阅读的内容确实是独一无二的…
- en: Introduction
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: In a recent article I explored the power of the backdoor adjustment formula
    to calculate the true effect of an event on an outcome even if there are observable
    factors that are “confounding” both …
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在一篇最近的文章中，我探讨了“后门”调整公式的力量，来计算事件对结果的真实影响，即使存在“混淆”两个因素的可观察因素…
- en: '[](/unlock-the-power-of-causal-inference-a-data-scientists-guide-to-understanding-backdoor-686d2826efa4?source=post_page-----8e7b8ba33421--------------------------------)
    [## Unlock the Power of Causal Inference : A Data Scientist’s Guide to Understanding
    Backdoor…'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/unlock-the-power-of-causal-inference-a-data-scientists-guide-to-understanding-backdoor-686d2826efa4?source=post_page-----8e7b8ba33421--------------------------------)
    [## 解锁因果推断的力量：数据科学家理解“后门”调整的指南…'
- en: A fully working example of the backdoor adjustment formula using Python & the
    pgmpy library including a full…
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 Python 和 pgmpy 库的“后门”调整公式的完整示例，包括完整…
- en: towardsdatascience.com](/unlock-the-power-of-causal-inference-a-data-scientists-guide-to-understanding-backdoor-686d2826efa4?source=post_page-----8e7b8ba33421--------------------------------)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/unlock-the-power-of-causal-inference-a-data-scientists-guide-to-understanding-backdoor-686d2826efa4?source=post_page-----8e7b8ba33421--------------------------------)
- en: The aim was to establish the true effect of taking a drug on patient recovery
    rates and the magic of the backdoor adjustment formula recovered this effect even
    though “male” was obscuring that result because -
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 目的是确定服用药物对患者恢复率的真实效果，而后门调整公式的魔力恢复了这一效果，即使“男性”掩盖了这一结果，因为 -
- en: A higher proportion of males took the drug compared to females
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 男性服用药物的比例高于女性
- en: Males had a higher recovery rate than females
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 男性的恢复率高于女性
- en: '![](../Images/156b7bf498014086f377c16a34404c0d.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/156b7bf498014086f377c16a34404c0d.png)'
- en: Image by Author
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图片作者
- en: In this example “male” is a “confounder” but the values for “male” were included
    in the observation data and then the back door formula was applied to prove that
    the drug trial was having a positive impact.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，“男性”是一个“混杂因素”，但“男性”的值已包含在观察数据中，然后应用了后门公式来证明药物试验有积极效果。
- en: But what if the “confounder” could not be measured and was not included in the
    data?
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 但是如果“混杂因素”无法测量且未包含在数据中会怎样？
- en: A Real World Example
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 现实世界的例子
- en: During the 1950’s there was a statistical war raging between scientists who
    strongly believed that smoking caused respiratory illness and the tobacco companies
    who managed to produce “evidence” to the contrary.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在1950年代，科学家们强烈相信吸烟导致呼吸道疾病，与此同时烟草公司设法提供了相反的“证据”，这场统计战持续不断。
- en: The essence of this evidence was the proposal by the tobacco companies that
    a genetic factor was responsible for both smokers taking up smoking and there
    likelihood of developing respiratory illness. This was a convenient hypothesis
    for the tobacco companies because it was nearly impossible to test.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这一证据的实质是烟草公司提出的假设，即遗传因素对吸烟者和发展呼吸道疾病的可能性负责。这对烟草公司来说是一个方便的假设，因为几乎无法测试。
- en: Here is a proposal for the causal links between the factors involved …
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这是关于相关因素之间因果联系的提议…
- en: '![](../Images/47a0f60df958ede48be00fd25c93254a.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/47a0f60df958ede48be00fd25c93254a.png)'
- en: Image by Author
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图片作者
- en: A Causal Inference Solution
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个因果推断解决方案
- en: If this is the only data you have i.e. a simple backdoor path from an unobserved
    confounder to both an event and an outcome then there is nothing that can be done;
    the true effect cannot be recovered.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这是你唯一的数据，即来自未观察到的混杂因素到事件和结果的简单后门路径，那么什么也做不了；真实效果无法恢复。
- en: However there are other “patterns” where the effect can be recovered including
    the front-door criteria and instrumental variables. This article will fully explain
    the first of those patterns.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，还有其他“模式”可以恢复效果，包括前门标准和工具变量。本文将全面解释这些模式中的第一个。
- en: To satisfy the front-door criteria there needs to be an intermediary between
    the event and the outcome, and in the smoking example it could look like this
    -
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 要满足前门标准，需要在事件和结果之间有一个中介，在吸烟的例子中可能是这样的 -
- en: '![](../Images/0cff8c5e5b449c817835245a9e94dba7.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0cff8c5e5b449c817835245a9e94dba7.png)'
- en: Image by Author
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图片作者
- en: i.e. smoking causes tar and tar causes respiratory illness rather than a direct
    causal link.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 即吸烟导致焦油，焦油导致呼吸道疾病，而不是直接的因果联系。
- en: When this pattern exists, the effect of the event (smoking) on the outcome (respiratory
    illness) can be isolated and recovered irrespective of the influence of an unobserved
    confounder using the “Front-Door Adjustment Formula” as proposed by Judea Pearl
    in “The Book of Why” and “Causal Inference in Statistics”.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 当这种模式存在时，可以使用“前门调整公式”来隔离和恢复事件（吸烟）对结果（呼吸道疾病）的影响，不受未观察到的混杂因素的影响，如Judea Pearl在《为什么的书》和《统计中的因果推断》中所提议的那样。
- en: '[](https://amzn.to/3iCVF8r?source=post_page-----8e7b8ba33421--------------------------------)
    [## The Book of Why: The New Science of Cause and Effect (Penguin Science)'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 为什么的书：因果关系的新科学（企鹅科学）](https://amzn.to/3iCVF8r?source=post_page-----8e7b8ba33421--------------------------------)'
- en: 'Buy The Book of Why: The New Science of Cause and Effect (Penguin Science)
    01 by Pearl, Judea, Mackenzie, Dana (ISBN…'
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 购买《为什么的书：因果关系的新科学》（企鹅科学）01，作者：Judea Pearl, Dana Mackenzie (ISBN…
- en: 'amzn.to](https://amzn.to/3iCVF8r?source=post_page-----8e7b8ba33421--------------------------------)
    [](https://amzn.to/3WblFp1?source=post_page-----8e7b8ba33421--------------------------------)
    [## Causal Inference in Statistics: A Primer'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 统计中的因果推断：初学者指南](https://amzn.to/3iCVF8r?source=post_page-----8e7b8ba33421--------------------------------)
    [##](https://amzn.to/3WblFp1?source=post_page-----8e7b8ba33421--------------------------------) '
- en: 'Buy Causal Inference in Statistics: A Primer 1 by Pearl, Judea, Glymour, Madelyn,
    Jewell, Nicholas P. (ISBN…'
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '购买《Causal Inference in Statistics: A Primer 1》由Pearl, Judea, Glymour, Madelyn,
    Jewell, Nicholas P.（ISBN…）'
- en: amzn.to](https://amzn.to/3WblFp1?source=post_page-----8e7b8ba33421--------------------------------)
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '[amzn.to](https://amzn.to/3WblFp1?source=post_page-----8e7b8ba33421--------------------------------)'
- en: Excluding the influence of an unobserved confounder seems like magic and the
    implications genuinely are amazing but if you follow the steps in the rest of
    this article you will be able to add this amazing technique to your data science
    tool bag with just a few lines of Python code!
  id: totrans-42
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 排除未观察混杂因素的影响似乎很神奇，实际效果也确实令人惊叹，但如果你按照本文其余部分的步骤，你将能够通过几行Python代码将这一惊人技术添加到你的数据科学工具包中！
- en: Getting Started
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 入门
- en: The first thing we need are some test data. I have created a synthetic dataset
    using my `BinaryDataGenerator` class. If you would like the full source code,
    head over to this article -
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先需要一些测试数据。我使用我的`BinaryDataGenerator`类创建了一个合成数据集。如果你想要完整的源代码，请访问这篇文章 -
- en: '[](/how-to-generate-synthetic-data-for-any-causal-inference-project-in-less-than-10-lines-of-code-158688a89349?source=post_page-----8e7b8ba33421--------------------------------)
    [## How to Generate Synthetic Data for any Causal Inference Project in less than
    10 Lines of Code'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[如何在少于10行代码中生成任何因果推断项目的合成数据](https://towardsdatascience.com/how-to-generate-synthetic-data-for-any-causal-inference-project-in-less-than-10-lines-of-code-158688a89349?source=post_page-----8e7b8ba33421--------------------------------)
    [## 如何在少于10行代码中生成任何因果推断项目的合成数据'
- en: If 99% are Vaccinated, 1% Get a Reaction and 2% Get the Disease How Can You
    Generate Representative Synthetic Data?
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如果99%的人接种疫苗，1%有反应，2%得病，你如何生成具有代表性的合成数据？
- en: towardsdatascience.com](/how-to-generate-synthetic-data-for-any-causal-inference-project-in-less-than-10-lines-of-code-158688a89349?source=post_page-----8e7b8ba33421--------------------------------)
    ![](../Images/8c47851d495c09a77b07f5013c9ef399.png)
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](https://towardsdatascience.com/how-to-generate-synthetic-data-for-any-causal-inference-project-in-less-than-10-lines-of-code-158688a89349?source=post_page-----8e7b8ba33421--------------------------------)
    ![](../Images/8c47851d495c09a77b07f5013c9ef399.png)'
- en: Image by Author
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: A summary analysis of the data is as follows -
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 数据的总结分析如下 -
- en: There were 800 people in the sample.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 样本中有800人。
- en: 50% of the sample population were smokers (400/800)
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 50%的样本人口是吸烟者（400/800）
- en: 95% of smokers had tar deposits (380/400)
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 95%的吸烟者有焦油沉积物（380/400）
- en: 5% of non-smokers had tar deposits (20/400)
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 5%的非吸烟者有焦油沉积物（20/400）
- en: 15% of smokers with tar had respiratory illness (47/380)
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 15%有焦油的吸烟者有呼吸系统疾病（47/380）
- en: 10% of smokers with no tar had respiratory illness (2/20)
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 10%没有焦油的吸烟者有呼吸系统疾病（2/20）
- en: 95% of smokers with tar had respiratory illness (19/20)
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 95%有焦油的吸烟者有呼吸系统疾病（19/20）
- en: 90% of non-smokers with no tar had respiratory illness (342/380)
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 90%没有焦油的非吸烟者有呼吸系统疾病（342/380）
- en: 'First Attempt : Using the Pgmpy Library'
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 初次尝试：使用Pgmpy库
- en: In my article on backdoor criteria I started by showing a simple solution using
    `pgmpy`.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在我关于后门标准的文章中，我首先展示了一个使用`pgmpy`的简单解决方案。
- en: Given how easy it was to apply the backdoor criteria in that example, it should
    be very straightforward to apply the front-door criteria in the same way. Here
    is the code that should do it …
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于在那个示例中应用后门标准如此简单，按同样的方式应用前门标准应该非常直接。这是应该能做到的代码……
- en: 'The expected result is 4.5% (much more on this later!) but `pgmpy` crashes
    with `ValueError: Maximum Likelihood Estimator works only for models with all
    observed variables. Found latent variables: set()`.'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '预期结果是4.5%（稍后会详细讨论！）但`pgmpy`崩溃，显示`ValueError: Maximum Likelihood Estimator works
    only for models with all observed variables. Found latent variables: set()`.'
- en: After a lot of research and also raising an issue with the developers my conclusion
    is that `pgmpy` does not work when applying the "do" operator (i.e. making an
    intervention) where there is an unobserved confounder and that `pgmpy` cannot
    apply the front-door adjustment formula.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 经过大量研究并与开发人员沟通后，我得出的结论是，当存在未观察到的混杂因素时，`pgmpy`在应用“do”操作符（即进行干预）时不起作用，并且`pgmpy`无法应用前门调整公式。
- en: It is worse than that though as the `DoWhy` library does not work in this instance
    either.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 更糟的是，`DoWhy`库在这种情况下也不起作用。
- en: '`DoWhy` can deal with unobserved confounders when calculating the "Average
    Treatment Effect" (ATE) but when the "do" operator is being applied to simulate
    an intervention it fails in the same way as `pgmpy`.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '`DoWhy`可以处理在计算“平均处理效果”（ATE）时的未观察混杂因素，但当“do”操作符用于模拟干预时，它与`pgmpy`一样失败。'
- en: ATE is applied to continuous variables so we can ask `DoWhy` a question like
    "If carbon-dioxide emissions increase by 100 million tonnes what is the causal
    effect on the increase global temperatures?" and `DoWhy` will produce a result.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: ATE应用于连续变量，因此我们可以问`DoWhy`一个问题，如“如果二氧化碳排放增加1亿吨，对全球温度的因果效应是什么？”`DoWhy`将产生一个结果。
- en: However, when applying a “do” intervention to discrete, binary data for example
    “What is the probability of respiratory illness given that everyone in the sample
    smokes?” neither `pgmpy` or `DoWhy` can perform the calculation where an unobserved
    confounder is present and to date I have not found any other libraries that can.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当对离散的二元数据应用“do”干预，例如“在样本中每个人都吸烟的情况下，呼吸道疾病的概率是多少？”时，`pgmpy`或`DoWhy`无法进行计算，并且到目前为止我没有找到其他可以的库。
- en: My backdoor article moved on from the `pgmpy` implementation to provide an example
    of the maths to show what `pgmpy` was doing behind the scenes. In this article
    an understanding of the maths is required up front so that we can build our own
    implementation of the front-door adjustment formula in Python ...
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我的后门文章从`pgmpy`实现转向提供数学示例，以展示`pgmpy`在幕后所做的工作。在这篇文章中，理解数学是前提，以便我们可以在Python中构建自己的前门调整公式实现……
- en: 'Second Attempt: Working it Out by Hand'
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二次尝试：手工计算
- en: The objective is to calculate the Average Causal Effect (ACE) by simulating
    the following -
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 目标是通过模拟以下内容来计算平均因果效应（ACE） -
- en: Travel back in time and perform and intervention which forces everyone to smoke.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 回到过去，执行一个干预，强制每个人都吸烟。
- en: Perform the same time-travelling trick again and this time force everyone to
    quit.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次执行相同的时间旅行技巧，这次强制每个人都戒烟。
- en: Subtract the second result from the first.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从第一个结果中减去第二个结果。
- en: Expressed mathematically using the “do” operator this amazing feat looks like
    this -
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 使用“do”操作符在数学上表达，这一惊人的成就看起来像这样 -
- en: '![](../Images/07db103e91c421dd0df39d002ec43bef.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/07db103e91c421dd0df39d002ec43bef.png)'
- en: And as we know that there is an unobserved confounder and a front-door path
    in the data so we need to substitute each side of the ACE formula with the front-door
    adjustment formula as proposed by Judea Pearl …
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们知道数据中存在一个未观察到的混杂因素和一个前门路径，所以我们需要用Judea Pearl提出的前门调整公式替换ACE公式的每一侧……
- en: '![](../Images/056ab66fad0fc04d78cbe9dd35c88585.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/056ab66fad0fc04d78cbe9dd35c88585.png)'
- en: 'Let’s start with the left hand side of the ACE formula, substitute it for the
    front-door adjustment formula and use the variables that are present in our data
    instead of x, y and z. To keep things neat and tidy the following abbreviations
    will be used: S = smoking, R = respiratory, T = Tar …'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从ACE公式的左侧开始，用前门调整公式替换，并使用数据中存在的变量代替x、y和z。为了保持整洁，以下缩写将被使用：S = 吸烟，R = 呼吸，T
    = 焦油……
- en: '![](../Images/9099e7b429da60951069958d59f3d642.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9099e7b429da60951069958d59f3d642.png)'
- en: t can take values {0, 1} and s can take values {0, 1} so we now need to expand
    as follows …
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: t 可以取值 {0, 1}，s 可以取值 {0, 1}，因此我们现在需要展开如下……
- en: '![](../Images/5a383b86ee966f41413bfc40e555f30c.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5a383b86ee966f41413bfc40e555f30c.png)'
- en: … and the inner ∑𝑠 terms can be further expanded as follows …
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: … 内部的 ∑𝑠 项可以进一步展开如下……
- en: '![](../Images/56cc56844797e3f5cb68ceffce4789c9.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/56cc56844797e3f5cb68ceffce4789c9.png)'
- en: Now it should be a simple matter of substituting the conditional probabilities
    from the data. A Python function will be provided to calculate any conditional
    probability from data in the next section, but for now here are the values that
    are needed …
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在只需替换数据中的条件概率即可。在下一节中，将提供一个Python函数来计算数据中的任何条件概率，但现在需要的值如下……
- en: '![](../Images/fd7c5f8773c3cad33c89585decc82951.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fd7c5f8773c3cad33c89585decc82951.png)'
- en: Substituting these conditional probabilities gives …
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 替换这些条件概率得到……
- en: '![](../Images/c81434d95e4c4bc5262f3ba6a98055d0.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c81434d95e4c4bc5262f3ba6a98055d0.png)'
- en: So …
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 所以……
- en: '![](../Images/8f66da751c44afdc64454dfa6f166486.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8f66da751c44afdc64454dfa6f166486.png)'
- en: … and if you re-calculate all of the steps above again for 𝑃(𝑅=1∣𝑑𝑜(𝑆=0)) the
    answer is …
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: … 如果你重新计算上面所有的步骤，得到𝑃(𝑅=1∣𝑑𝑜(𝑆=0))的答案是……
- en: '![](../Images/c064cdf3f3c9bff54819633857d79713.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c064cdf3f3c9bff54819633857d79713.png)'
- en: And so the overall Average Causal Effect (ACE) is …
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，整体的平均因果效应（ACE）是……
- en: '![](../Images/036800924741e13adb0f4c01b3afd1a4.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/036800924741e13adb0f4c01b3afd1a4.png)'
- en: That was a lot of effort to work out the Average Causal Effect by hand! Fortunately,
    now that the workings of the front-door adjustment formula are fully understood
    it is relatively easy to convert all of this to Python so that the whole thing
    can be fully automated for any dataset where the features are discrete values
    …
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 手动计算平均因果效应是相当费力的！幸运的是，现在前门调整公式的工作原理已完全理解，将所有这些转换为 Python 相对简单，以便可以针对任何特征为离散值的数据集完全自动化整个过程…
- en: 'Third Attempt: A Reusable Python Function'
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三次尝试：一个可重复使用的 Python 函数
- en: The third attempt involves building a re-usable Pythn function that implements
    the Maths in the previous section for any simple DAG and any `DataFrame` so that
    the Maths can be put to one side once it has been understood.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 第三次尝试涉及构建一个可重复使用的 Python 函数，该函数实现了前一节中的数学，适用于任何简单的 DAG 和任何`DataFrame`，以便在理解数学后可以将其搁置一边。
- en: The implementation of this function will need to use of conditional probabilities
    and it will require a simple Python function to calculate those probabilities
    from any `DataFrame`.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数的实现需要使用条件概率，并且需要一个简单的 Python 函数来从任何`DataFrame`计算这些概率。
- en: I have left the details of the `calc_cond_prob` function out of this article
    to keep the focus on front-door adjustment but you can read a full explanation
    and download the source code from this article …
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我将 `calc_cond_prob` 函数的细节留在了本文之外，以便专注于前门调整，但你可以从这篇文章中阅读完整的解释并下载源代码…
- en: '[](/unlock-the-secret-to-effortlessly-calculating-conditional-probabilities-from-any-dataframe-a232ca71e33c?source=post_page-----8e7b8ba33421--------------------------------)
    [## How to Calculate Conditional Probabilities from Any DataFrame in 3 Lines of
    Code'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/unlock-the-secret-to-effortlessly-calculating-conditional-probabilities-from-any-dataframe-a232ca71e33c?source=post_page-----8e7b8ba33421--------------------------------)
    [## 如何在 3 行代码中从任何 DataFrame 计算条件概率'
- en: Learn to write a simple Python function that will calculate conditional probabilities
    using notation like p(exam=1 |…
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 学习编写一个简单的 Python 函数，使用诸如 p(exam=1 |… 的符号来计算条件概率
- en: towardsdatascience.com](/unlock-the-secret-to-effortlessly-calculating-conditional-probabilities-from-any-dataframe-a232ca71e33c?source=post_page-----8e7b8ba33421--------------------------------)
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/unlock-the-secret-to-effortlessly-calculating-conditional-probabilities-from-any-dataframe-a232ca71e33c?source=post_page-----8e7b8ba33421--------------------------------)
- en: Once you have donwloaded `calc_cond_prob` it can be used to easily calculate
    conditional probabilities from any `DataFrame` as follows ...
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你下载了 `calc_cond_prob`，就可以像这样轻松地从任何 `DataFrame` 计算条件概率…
- en: 𝑝(𝑟𝑒𝑠𝑝𝑖𝑟𝑎𝑡𝑜𝑟𝑦=0∣𝑠𝑚𝑜𝑘𝑖𝑛𝑔=0,𝑡𝑎𝑟=0)=0.1
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 𝑝(𝑟𝑒𝑠𝑝𝑖𝑟𝑎𝑡𝑜𝑟𝑦=0∣𝑠𝑚𝑜𝑘𝑖𝑛𝑔=0,𝑡𝑎𝑟=0)=0.1
- en: … or alternatively the `outcome / result` and `events` can be specified explicitly
    as follows ...
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: … 或者可以明确指定 `outcome / result` 和 `events` 如下…
- en: 𝑝(𝑟𝑒𝑠𝑝𝑖𝑟𝑎𝑡𝑜𝑟𝑦=0∣𝑠𝑚𝑜𝑘𝑖𝑛𝑔=0,𝑡𝑎𝑟=0)=0.1
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 𝑝(𝑟𝑒𝑠𝑝𝑖𝑟𝑎𝑡𝑜𝑟𝑦=0∣𝑠𝑚𝑜𝑘𝑖𝑛𝑔=0,𝑡𝑎𝑟=0)=0.1
- en: The previous section explained the Mathematics behind the Pearlean front-door-adjustment
    formula and provided a fully worked example.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 前一节解释了 Pearlean 前门调整公式背后的数学，并提供了一个完整的示例。
- en: Given those building blocks (and the `calc_cod_prob` function) a Python function
    can be developed that will calculate the front_door_adjustment formula for anny
    `DataFrame` that contains the following features -
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 根据这些构建块（以及 `calc_cod_prob` 函数），可以开发一个 Python 函数，该函数将计算前门调整公式，用于包含以下特征的任何 `DataFrame`
    -
- en: X — treatment
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: X — 处理
- en: Y — outcome
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Y — 结果
- en: Z — mediator
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Z — 中介
- en: Here is the full source code for front-door adjustment …
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这是前门调整的完整源代码…
- en: … and the function can be called as like this …
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: … 并且可以像这样调用该函数…
- en: Conclusion
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: To start with the elephant in the room, if the effect of smoking was an increase
    in the average probability of respiratory illness of just 4.5% this would not
    persuade many smokers to quit.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 首先讨论问题，如果吸烟对呼吸系统疾病的平均概率仅增加了 4.5%，这不会说服许多吸烟者戒烟。
- en: However we saw that the individual probability of respiratory illness given
    smoking 𝑃(𝑟𝑒𝑠𝑝𝑖𝑟𝑎𝑡𝑜𝑟𝑦=1∣𝑑𝑜(𝑠𝑚𝑜𝑘𝑖𝑛𝑔=1))=54.75%.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们看到给定吸烟的呼吸系统疾病的单独概率 𝑃(𝑟𝑒𝑠𝑝𝑖𝑟𝑎𝑡𝑜𝑟𝑦=1∣𝑑𝑜(𝑠𝑚𝑜𝑘𝑖𝑛𝑔=1))=54.75%。
- en: The reason the average causal effect is so low is that our fictitious tobacco
    companies pulled the dastardly trick of stacking the deck by ensuring that lots
    of non-smokers with respiratory illness made it into the sample in an attempt
    to obfuscate the truth i.e. that smoking does causes respiratory illness.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 平均因果效应之所以如此低，是因为我们的虚构烟草公司使用了卑劣的手段，通过确保大量有呼吸系统疾病的非吸烟者被纳入样本，以掩盖真相，即吸烟确实会导致呼吸系统疾病。
- en: But even with this noise in the data, and even if we accept the unlikely hypothesis
    that an unmeasurable genetic factor exists that confounds both the event and the
    outcome, the magic of the front-door adjustment formula has still uncovered a
    positive causal link between smoking and respiratory illness!
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 即使数据中有这些噪音，即使我们接受一个不太可能的假设，即存在一个无法测量的遗传因素，使事件和结果都受到混淆，前门调整公式的魔力仍然揭示了吸烟与呼吸系统疾病之间的正向因果关系！
- en: This amazing outcome is unlike anything I have discovered in other data science
    techniques and it plays into the most common questions that customers of my machine
    learning predictions always ask, i.e. -
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这个惊人的结果与我在其他数据科学技术中发现的任何东西都不同，它涉及到我的机器学习预测的客户总是问的最常见的问题，即 -
- en: Why does that happen?
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么会发生这种情况？
- en: What should I do to change the outcome and improve things?
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我应该做什么来改变结果并改善情况？
- en: These types of “why?” questions make the knowledge, ability and understanding
    required to apply front-door adjustment in order to calculate the effect of “interventions”
    an invaluable addition to the data science toolkit.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 这些类型的“为什么？”问题使得应用前门调整以计算“干预”效果所需的知识、能力和理解成为数据科学工具包中不可或缺的补充。
- en: Unfortunately the currently available libraries including `pgmpy` and `DoWhy`
    do not work when applying the "do" operator to discrete data sets that include
    an unobserved confounder and a front-door path.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，目前可用的库，包括 `pgmpy` 和 `DoWhy`，在对包含未观察到的混淆变量和前门路径的离散数据集应用“do”操作时无法正常工作。
- en: That is a massive gap in the functionality of those libaries and having searched
    at length to find a Python solution with a worked example both online and in books
    I could not find anything.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这是这些库功能上的一个巨大缺陷，经过长时间的搜索，包括在线和书籍中的实际示例，我找不到任何解决方案。
- en: Unless I have over-looked some examples that makes this article unique and I
    wish I had been able to read it when front-door adjustment began to fascinate
    me rather than having to do all that research myself.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 除非我遗漏了一些示例，使得这篇文章独一无二，我希望在前门调整开始吸引我时能够阅读这篇文章，而不是自己做所有这些研究。
- en: It was a lot of fun though and I really hope you like the result!
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 不过这非常有趣，我真的希望你喜欢这个结果！
- en: Bonus Section
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附加部分
- en: So having said that `pgmpy` does not work in this scenario and having come so
    far in my learning journey I decided to write a version of the front-door adjustment
    formula in Python to correct that omission.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 既然如此，`pgmpy` 在这种情况下不起作用，并且在我的学习过程中已经走了这么远，我决定用 Python 编写一个前门调整公式的版本，以纠正这一遗漏。
- en: Just to note I decided to re-factor the formula to make the Python implementation
    a bit more concise changing this …
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 仅仅是为了说明，我决定重构公式，使得 Python 实现更简洁，改动了这个 …
- en: '![](../Images/262b4abdfcd1a3168c3429f2e6a8ea6d.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/262b4abdfcd1a3168c3429f2e6a8ea6d.png)'
- en: into this ..
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 改成这样 ..
- en: '![](../Images/1be1f021a1e014d468e1b86a6883083b.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1be1f021a1e014d468e1b86a6883083b.png)'
- en: … which is mathematically equivalent and is just like saying —
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: … 这是数学上等效的，就像是在说 —
- en: 4 x 3 x 1 x 2 x 2 = 4 x 1x 2 x 2 x 3
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 4 x 3 x 1 x 2 x 2 = 4 x 1 x 2 x 2 x 3
- en: 'Note: see “Causal Inference in Statistics” by Pearl, Glymour and Jewell, p68
    (3.15) and p69 (3.16) for a full explanation of this equivalence.'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 注：有关这一等效性的完整解释，请参见 Pearl、Glymour 和 Jewell 的《统计学中的因果推断》，第68页（3.15）和第69页（3.16）。
- en: 'Back to the solution, the first step is to create the causal model using `pgmpy`
    classes. To note: the unobserved confounder must be removed from the `edges` list
    as this is what causes the `BayesianNetwork.fit()` method to crash with a `ValueError`
    ...'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 回到解决方案，第一步是使用 `pgmpy` 类创建因果模型。需要注意的是：未观察到的混淆变量必须从 `edges` 列表中删除，因为这会导致 `BayesianNetwork.fit()`
    方法因 `ValueError` 崩溃 …
- en: Once the set-up is complete, the front-door formula can be implemented in Python
    as follows …
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦设置完成，前门公式可以在 Python 中实现如下 …
- en: And just to prove that it works, the calculation produces exactly the same results
    as both the manual calculation and the earlier Python function that works directly
    on the `DataFrame` ...
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 只是为了证明它的有效性，计算结果与手动计算以及之前直接在 `DataFrame` 上工作的 Python 函数完全一致 …
- en: Connect and Get in Touch …
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系并保持联系 …
- en: If you enjoyed this article you can get unlimited access to thousands more by
    becoming a Medium member for just $5 a month by [clicking on my referral link](https://grahamharrison-86487.medium.com/membership)
    (I will receive a proportion of the fees if you sign up using this link at no
    extra cost to you).
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢这篇文章，你可以通过[点击我的推荐链接](https://grahamharrison-86487.medium.com/membership)以每月仅需$5成为Medium会员，享受对成千上万篇文章的无限访问（如果你通过此链接注册，我将获得费用的一部分，对你没有额外费用）。
- en: '[](https://grahamharrison-86487.medium.com/membership?source=post_page-----8e7b8ba33421--------------------------------)
    [## Join Medium with my referral link — Graham Harrison'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://grahamharrison-86487.medium.com/membership?source=post_page-----8e7b8ba33421--------------------------------)
    [## 使用我的推荐链接加入Medium — Graham Harrison'
- en: Read every story from Graham Harrison (and thousands of other writers on Medium).
    Enhance your knowledge of Data…
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阅读Graham Harrison的每个故事（以及Medium上成千上万其他作家的作品）。提升你对数据的知识…
- en: grahamharrison-86487.medium.com](https://grahamharrison-86487.medium.com/membership?source=post_page-----8e7b8ba33421--------------------------------)
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: grahamharrison-86487.medium.com](https://grahamharrison-86487.medium.com/membership?source=post_page-----8e7b8ba33421--------------------------------)
- en: … or connect by …
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: … 或通过 … 连接
- en: '[Subscribing to a free e-mail whenever I publish a new story](https://grahamharrison-86487.medium.com/subscribe).'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '[订阅我的免费电子邮件，以便每当我发布新故事时你都会收到通知](https://grahamharrison-86487.medium.com/subscribe)。'
- en: '[Taking a quick look at my previous articles](https://grahamharrison-86487.medium.com/).'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '[快速查看我的上一篇文章](https://grahamharrison-86487.medium.com/)。'
- en: '[Downloading my free strategic data-driven decision making framework](https://relentless-originator-3199.ck.page/5f4857fd12).'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '[下载我免费的战略数据驱动决策框架](https://relentless-originator-3199.ck.page/5f4857fd12)。'
- en: Visiting my data science website — [The Data Blog](https://www.the-data-blog.co.uk/).
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 访问我的数据科学网站 — [数据博客](https://www.the-data-blog.co.uk/)。
