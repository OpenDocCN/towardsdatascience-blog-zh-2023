- en: Deploy Your Own MLflow Workspace On-Premise with Docker
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在本地使用 Docker 部署自己的 MLflow 工作区
- en: 原文：[https://towardsdatascience.com/deploy-your-own-mlflow-workspace-on-premise-with-docker-b54294676f0b](https://towardsdatascience.com/deploy-your-own-mlflow-workspace-on-premise-with-docker-b54294676f0b)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/deploy-your-own-mlflow-workspace-on-premise-with-docker-b54294676f0b](https://towardsdatascience.com/deploy-your-own-mlflow-workspace-on-premise-with-docker-b54294676f0b)
- en: Manage the lifecycle of your ML models like a Pro
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 像专业人士一样管理你的 ML 模型生命周期
- en: '[](https://tinztwinspro.medium.com/?source=post_page-----b54294676f0b--------------------------------)[![Janik
    and Patrick Tinz](../Images/a08aa54f553f606ef5df86f9411c36ac.png)](https://tinztwinspro.medium.com/?source=post_page-----b54294676f0b--------------------------------)[](https://towardsdatascience.com/?source=post_page-----b54294676f0b--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----b54294676f0b--------------------------------)
    [Janik and Patrick Tinz](https://tinztwinspro.medium.com/?source=post_page-----b54294676f0b--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://tinztwinspro.medium.com/?source=post_page-----b54294676f0b--------------------------------)[![Janik
    and Patrick Tinz](../Images/a08aa54f553f606ef5df86f9411c36ac.png)](https://tinztwinspro.medium.com/?source=post_page-----b54294676f0b--------------------------------)[](https://towardsdatascience.com/?source=post_page-----b54294676f0b--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----b54294676f0b--------------------------------)
    [Janik 和 Patrick Tinz](https://tinztwinspro.medium.com/?source=post_page-----b54294676f0b--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----b54294676f0b--------------------------------)
    ·8 min read·Apr 17, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----b54294676f0b--------------------------------)
    ·8 分钟阅读·2023年4月17日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/fa03e98f888a6fd039fc9344664945b8.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fa03e98f888a6fd039fc9344664945b8.png)'
- en: Photo by [Isaac Smith](https://unsplash.com/@isaacmsmith?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Isaac Smith](https://unsplash.com/@isaacmsmith?utm_source=medium&utm_medium=referral)
    提供，来自 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: '[MLflow](https://mlflow.org) is an **open source platform** to manage the lifecycle
    of ML models end to end. It tracks the code, data and results for each ML experiment,
    which means you have a history of all experiments at any time. A dream for every
    Data Scientist. Moreover, MLflow is **library-agnostic**, which means you can
    use all ML libraries like TensorFlow, PyTorch or scikit-learn. All MLflow functions
    are available via a [REST API](https://mlflow.org/docs/latest/rest-api.html#rest-api),
    [CLI](https://mlflow.org/docs/latest/cli.html), [Python API](https://mlflow.org/docs/latest/python_api/index.html),
    [R API](https://mlflow.org/docs/latest/R-api.html) and [Java API](https://mlflow.org/docs/latest/java_api/index.html).'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[MLflow](https://mlflow.org) 是一个 **开源平台**，用于端到端管理 ML 模型的生命周期。它跟踪每次 ML 实验的代码、数据和结果，这意味着你可以随时查看所有实验的历史记录。每位数据科学家的梦想。此外，MLflow
    是 **库无关** 的，这意味着你可以使用所有 ML 库，如 TensorFlow、PyTorch 或 scikit-learn。所有 MLflow 功能都可以通过
    [REST API](https://mlflow.org/docs/latest/rest-api.html#rest-api)、[CLI](https://mlflow.org/docs/latest/cli.html)、[Python
    API](https://mlflow.org/docs/latest/python_api/index.html)、[R API](https://mlflow.org/docs/latest/R-api.html)
    和 [Java API](https://mlflow.org/docs/latest/java_api/index.html) 访问。'
- en: As a Data Scientist, you spend a lot of time optimizing ML models. The best
    models often depend on an optimal hyperparameter or feature selection, and it
    is challenging to find an optimal combination. Also, you have to remember all
    experiments, which is very time-consuming. MLflow is an efficient platform to
    address these challenges.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 作为数据科学家，你花费大量时间优化 ML 模型。最佳模型通常依赖于最佳的超参数或特征选择，而找到最佳组合具有挑战性。此外，你还需要记住所有实验，这非常耗时。MLflow
    是解决这些挑战的高效平台。
- en: In this post, we briefly introduce the basics of MLflow and show how to set
    up an MLflow workspace on-premise. We set up the MLflow environment in a Docker
    stack so that we can run it on all systems. In this context, we have the services
    Postgres database, SFTP server, JupyterLab and MLflow tracking server UI. Let’s
    start.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们简要介绍了 MLflow 的基础知识，并展示了如何在本地设置 MLflow 工作区。我们在 Docker 堆栈中设置了 MLflow
    环境，以便在所有系统上运行它。在这个背景下，我们设置了 Postgres 数据库、SFTP 服务器、JupyterLab 和 MLflow 追踪服务器 UI。让我们开始吧。
- en: MLflow basics
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MLflow 基础知识
- en: Currently, MLflow offers four components for managing the ML lifecycle. The
    following figure shows an overview.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，MLflow 提供了四个组件来管理 ML 生命周期。下图显示了一个概述。
- en: '![](../Images/6322e381f4201221dcd3172e5b3ba394.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6322e381f4201221dcd3172e5b3ba394.png)'
- en: MLflow components overview (Image by author)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: MLflow 组件概述（图片来源：作者）
- en: '**MLflow Tracking** is used to track and query experiments. It tracks the model
    parameters, code, data and model artifacts. In addition, MLFlow’s tracking server
    provides a web UI, which shows the history of all experiments. The MLﬂow library
    already provides the web UI. The tracking server distinguishes between different
    experiments. You can compare your ML models in the experiments by visualising
    the results.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**MLflow 追踪**用于追踪和查询实验。它跟踪模型参数、代码、数据和模型工件。此外，MLFlow 的追踪服务器提供了一个 web 界面，显示所有实验的历史记录。MLflow
    库已经提供了 web 界面。追踪服务器区分不同的实验。您可以通过可视化结果来比较实验中的 ML 模型。'
- en: '**MLflow Project** is a component used for packaging data science code in a
    reusable and reproducible way.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**MLflow 项目**是一个用于以可重用和可复现的方式打包数据科学代码的组件。'
- en: The **MLﬂow Models** format provides a uniform storage format for ML models
    created with different libraries (e.g. TensorFlow, PyTorch or scikit-learn). The
    uniform format enables deployment in diverse environments.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**MLflow 模型**格式为使用不同库（例如 TensorFlow、PyTorch 或 scikit-learn）创建的 ML 模型提供了统一的存储格式。统一格式可以在多种环境中进行部署。'
- en: The **Model Registry** component allows providing of produced models from staging
    to production. It enables the management of ML models in a central model repository.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**模型注册表**组件允许将生成的模型从暂存阶段转移到生产阶段。它使得在中央模型库中管理 ML 模型成为可能。'
- en: You can learn more about the components in the [official documentation](https://mlflow.org/docs/latest/index.html)
    or the MLflow [GitHub repo](https://github.com/mlflow/mlflow).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[官方文档](https://mlflow.org/docs/latest/index.html)或 MLflow 的[GitHub 仓库](https://github.com/mlflow/mlflow)中了解更多关于组件的信息。
- en: Technical requirements
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'You will need the following prerequisites:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 您将需要以下先决条件：
- en: The latest version of Docker must be installed on your machine. If you do not
    have it installed yet, please follow the [instructions](https://docs.docker.com/get-docker/).
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的机器上必须安装最新版本的 Docker。如果您尚未安装，请按照[说明](https://docs.docker.com/get-docker/)进行操作。
- en: The latest version of Docker Compose must be installed on your machine. Please
    follow the [instructions](https://docs.docker.com/compose/install/).
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的机器上必须安装最新版本的 Docker Compose。请按照[说明](https://docs.docker.com/compose/install/)进行操作。
- en: Access to a terminal (macOS, Linux or Windows).
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问终端（macOS、Linux 或 Windows）。
- en: Setup MLflow Workspace
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 MLflow 工作区
- en: 'First, you should check that you have Docker and Docker Compose installed correctly.
    Open the terminal of your choice and enter the following command:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，您应该检查是否正确安装了 Docker 和 Docker Compose。打开您选择的终端并输入以下命令：
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If the installation is correct, you can see the Docker version (Maybe you have
    a different version.). Next, you can check the same for your Docker Compose installation.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果安装正确，您可以看到 Docker 版本（也许您有不同的版本）。接下来，您可以检查 Docker Compose 的安装情况。
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Yeah. Everything is ok. Now we can start with the MLflow Workspace.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 好了，一切正常。现在我们可以开始设置 MLflow 工作区了。
- en: There are [several ways](https://mlflow.org/docs/latest/tracking.html#how-runs-and-artifacts-are-recorded)
    to use MLflow. You can use MLflow with localhost or you deploy a complete stack
    for a production environment. We will focus on the second option in this article.
    We have set up a production-ready MLflow workspace, which we explain in this article.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 有[几种方法](https://mlflow.org/docs/latest/tracking.html#how-runs-and-artifacts-are-recorded)可以使用
    MLflow。您可以在本地主机上使用 MLflow，或者为生产环境部署一个完整的栈。本文将重点介绍第二种选项。我们已经设置了一个生产就绪的 MLflow 工作区，我们将在本文中进行说明。
- en: Please download or clone the [MLflow Workspace](https://github.com/tinztwins/mlflow-workspace)
    from our GitHub repo. The project contains four services, which you can see in
    the following figure.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 请从我们的 GitHub 仓库下载或克隆[MLflow 工作区](https://github.com/tinztwins/mlflow-workspace)。该项目包含四个服务，如下图所示。
- en: '![](../Images/e93e48a936372041b38426e4f5712a47.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e93e48a936372041b38426e4f5712a47.png)'
- en: Various services MLflow Workspace (Image by author)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 各种服务 MLflow 工作区（图像由作者提供）
- en: You can start all services by executing the following command in the terminal.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过在终端中执行以下命令来启动所有服务。
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The first time you start it, it takes a while until all the Docker images are
    pulled. It’s the right time to get a coffee. ☕️
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 第一次启动时，所有 Docker 镜像下载需要一些时间。现在正是去喝咖啡的时候。☕️
- en: After everything has started, please open a web browser of your choice. Next,
    you can access the Jupyter server by entering the following URL [http://127.0.0.1:8888](http://127.0.0.1:8888/)
    into your web browser. You can log in with the password `mlflow`. Next, visit
    the MLflow UI website at [http://127.0.0.1:5001](http://127.0.0.1:5001/). Note
    that we are on localhost. If you run the MLflow Workspace on a remote server,
    please specify the IP address of your server.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 一切启动后，请打开你选择的 web 浏览器。接下来，你可以通过输入以下网址 [http://127.0.0.1:8888](http://127.0.0.1:8888/)
    来访问 Jupyter 服务器。你可以使用密码 `mlflow` 登录。接下来，访问 MLflow UI 网站 [http://127.0.0.1:5001](http://127.0.0.1:5001/)。请注意，我们在本地主机上。如果你在远程服务器上运行
    MLflow 工作区，请指定你服务器的 IP 地址。
- en: You can test the MLflow Workspace by running the notebook `/notebooks/mlflow_example.ipynb`.
    If no error appears, the setup was successful. Congratulations!
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过运行笔记本 `/notebooks/mlflow_example.ipynb` 来测试 MLflow 工作区。如果没有出现错误，则设置成功。祝贺你！
- en: 'When you have finished working on a notebook, you can shut down the Workspace.
    The Workspace saves your work persistently so that you can continue working the
    next time. You can shut down the Workspace with the following command:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 当你完成在笔记本上的工作后，可以关闭工作区。工作区会持久保存你的工作，以便你下次继续工作。你可以使用以下命令关闭工作区：
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: After we have completed the setup, we can now take a closer look at the individual
    services.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 完成设置后，我们可以更深入地查看各个服务。
- en: JupyterLab
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: JupyterLab
- en: This service provides a JupyterLab environment. In the MLflow Workspace, we
    use the [jupyter/scipy-notebook](https://hub.docker.com/r/jupyter/scipy-notebook)
    image from DockerHub. You can also use other Jupyter images if you want. In the
    future, we plan to replace the image with a JuypterHub image so that each Data
    Scientist has their own account. An advantage of this approach is that the accounts
    also communicate with the MLflow tracking server. It allows us a better user management.
    Look forward to more updates on the Workspace.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 该服务提供了一个 JupyterLab 环境。在 MLflow 工作区中，我们使用了来自 DockerHub 的 [jupyter/scipy-notebook](https://hub.docker.com/r/jupyter/scipy-notebook)
    镜像。如果你愿意，也可以使用其他 Jupyter 镜像。未来，我们计划将镜像更换为 JuypterHub 镜像，以便每个数据科学家都有自己的账户。这样做的一个好处是，这些账户还能与
    MLflow 跟踪服务器进行通信，从而实现更好的用户管理。请期待有关工作区的更多更新。
- en: SFTP Server
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SFTP 服务器
- en: This service provides remote data storage. SFTP (Secure File Transfer Protocol)
    is a file transfer protocol that provides secure access to a remote computer.
    For more information about SFTP, please read the following article.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 该服务提供了远程数据存储。SFTP（安全文件传输协议）是一种文件传输协议，提供对远程计算机的安全访问。有关 SFTP 的更多信息，请阅读以下文章。
- en: '[](https://levelup.gitconnected.com/set-up-an-sftp-server-with-docker-353fb513ccfd?source=post_page-----b54294676f0b--------------------------------)
    [## Set up an SFTP server with Docker'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://levelup.gitconnected.com/set-up-an-sftp-server-with-docker-353fb513ccfd?source=post_page-----b54294676f0b--------------------------------)
    [## 使用 Docker 设置 SFTP 服务器'
- en: Free — Open Source — Secure
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 免费 — 开源 — 安全
- en: levelup.gitconnected.com](https://levelup.gitconnected.com/set-up-an-sftp-server-with-docker-353fb513ccfd?source=post_page-----b54294676f0b--------------------------------)
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: levelup.gitconnected.com](https://levelup.gitconnected.com/set-up-an-sftp-server-with-docker-353fb513ccfd?source=post_page-----b54294676f0b--------------------------------)
- en: In this project, we use the [atmoz/sftp](https://hub.docker.com/r/atmoz/sftp)
    image from DockerHub. You can also use other storage technologies, such as AWS
    S3 or HDFS. In the MLflow Workspace, the SFTP server provides the artifact store.
    In this store, we save the ML models and other artifacts such as Jupyter notebooks
    or Python scripts.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，我们使用了来自 DockerHub 的 [atmoz/sftp](https://hub.docker.com/r/atmoz/sftp)
    镜像。你也可以使用其他存储技术，如 AWS S3 或 HDFS。在 MLflow 工作区中，SFTP 服务器提供了工件存储。在这个存储中，我们保存 ML 模型以及其他工件，如
    Jupyter 笔记本或 Python 脚本。
- en: MLflow Tracking Server
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MLflow 跟踪服务器
- en: This service provides the MLflow UI. This web UI enables the management of your
    ML experiments. You can also compare different ML models via the web UI. To build
    this service we used the Docker image [python](https://hub.docker.com/_/python).
    The web UI is accessible via [http://127.0.0.1:5001](http://127.0.0.1:5001/).
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 该服务提供了 MLflow UI。这个 web UI 使得管理你的 ML 实验变得简单。你还可以通过 web UI 比较不同的 ML 模型。我们使用了
    Docker 镜像 [python](https://hub.docker.com/_/python) 来构建该服务。可以通过 [http://127.0.0.1:5001](http://127.0.0.1:5001/)
    访问 web UI。
- en: Postgres database
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Postgres 数据库
- en: This service provides a Postgres database for the backend store. PostgreSQL
    is a free and open-source relational database management system. We use it to
    store parameters and evaluation metrics. The MLflow Workspace uses the official
    [postgres](https://hub.docker.com/_/postgres) Docker image from DockerHub.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: The MLflow Workspace is running, and we have understood the basic functionality
    of the services. It’s time to implement a practical example with the Workspace.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: Use of the MLflow Workspace
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We explain the functionality of the workspace with a small ML example. In this
    example, we will try to separate the two classes in the [sklearn moon dataset](https://scikit-learn.org/stable/modules/generated/sklearn.datasets.make_moons.html).
    We use the Random Forest as ML model. First, we load the data and visualise it.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/96c9b37bb71e27ca0560768aa721b204.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
- en: Moon data (Image by author)
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: You can see that we have two classes. We want to separate these two classes
    with a Random Forest. In addition, we also want to track the metrics and parameters
    of the individual experiments. We achieve this by including MLflow commands in
    our code. You can check out the full code in our [GitHub repo](https://github.com/tinztwins/mlflow-workspace/blob/main/notebooks/examples/logging/logging_example.ipynb).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: After running the code with different parameters for the Random forest model,
    our experiments appear in the web UI.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e0a5fa4af75e3c5b9d1b7601f56ab4dd.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
- en: MLflow tracking UI (Image by author)
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: You can see two runs. Next, we can compare these two runs. To do this, click
    on the checkboxes of the two runs and click on Compare. A new web page opens where
    you can carry out extensive comparisons. The following figure shows an example.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9e99af1090b6dc942c9461608127853e.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
- en: Comparison of two Random Forest runs (Image by author)
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: We see the details for the two runs. MLflow distinguishes the runs via run IDs.
    It also saves the start time, the end time and the duration of the run. The second
    section lists the model parameters. In the first run we used 100 trees, and in
    the second run only two trees. It is practical that you can filter by differences.
    The third section lists all the metrics we tracked. The metrics show that both
    models work similarly well, with the first model performing slightly better. MLflow
    offers many more comparison functions, e.g. you can compare different metrics
    or parameters in graphs (Parallel Coordinates Plot, Scatter Plot, Box Plot and
    Contour Plot). The MLflow Workspace is extremely helpful for Data Scientists because
    it tracks all model combinations with metrics and code. It avoids chaos with many
    experiments, and you always keep an overview.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this article we presented a production-ready MLflow Workspace. We briefly
    described the setup with Docker and run an example in the Workspace. In addition,
    we invite all Data Scientists to test the MLflow Workspace so that we can improve
    it continuously. Feedback is always welcome. Write your thoughts in the comments.
    Thanks.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们展示了一个生产就绪的 MLflow 工作区。我们简要描述了使用 Docker 进行设置，并在工作区中运行了一个示例。此外，我们邀请所有数据科学家测试
    MLflow 工作区，以便我们可以不断改进它。欢迎反馈。请在评论中写下你的想法。谢谢。
- en: 👉🏽 [**You can find all our Freebies on our digital products page!**](https://shop.tinztwins.de/)
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 👉🏽 [**你可以在我们的数字产品页面找到所有免费资源！**](https://shop.tinztwins.de/)
- en: 👉🏽 [**Join our free weekly Magic AI newsletter for the latest AI updates!**](https://magicai.tinztwins.de)
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 👉🏽 [**加入我们免费的每周魔法 AI 新闻通讯，获取最新的 AI 更新！**](https://magicai.tinztwins.de)
- en: '[**Subscribe for free**](https://tinztwinspro.medium.com/subscribe) **to get
    notified when we publish a new story:**'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '[**免费订阅**](https://tinztwinspro.medium.com/subscribe) **以便在我们发布新故事时获得通知：**'
- en: '[](https://tinztwinspro.medium.com/subscribe?source=post_page-----b54294676f0b--------------------------------)
    [## Get an email whenever Janik and Patrick Tinz publishes.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://tinztwinspro.medium.com/subscribe?source=post_page-----b54294676f0b--------------------------------)
    [## 每当 Janik 和 Patrick Tinz 发布文章时，获取电子邮件通知。'
- en: Get an email whenever Janik and Patrick Tinz publishes. By signing up, you will
    create a Medium account if you don’t…
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 每当 Janik 和 Patrick Tinz 发布文章时，您会收到电子邮件。通过注册，您将创建一个 Medium 账户（如果您还没有的话）...
- en: tinztwinspro.medium.com](https://tinztwinspro.medium.com/subscribe?source=post_page-----b54294676f0b--------------------------------)
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: tinztwinspro.medium.com](https://tinztwinspro.medium.com/subscribe?source=post_page-----b54294676f0b--------------------------------)
- en: Learn more about us on our [About page](https://medium.com/@tinztwinspro/about).
    Don’t forget to follow us on [X](https://twitter.com/tinztwins). Thanks so much
    for reading. If you liked this article, feel free to share it. **Have a great
    day!**
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的 [关于页面](https://medium.com/@tinztwinspro/about) 了解更多关于我们的信息。别忘了在 [X](https://twitter.com/tinztwins)
    上关注我们。非常感谢你的阅读。如果你喜欢这篇文章，欢迎分享。**祝你有美好的一天！**
- en: Sign up for a Medium membership using [our link](https://tinztwinspro.medium.com/membership)
    to read unlimited Medium stories.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 [我们的链接](https://tinztwinspro.medium.com/membership) 注册 Medium 会员，以便阅读无限量的
    Medium 故事。
