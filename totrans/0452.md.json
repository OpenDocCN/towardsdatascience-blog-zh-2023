["```py\n!pip install pyvis\n```", "```py\nfrom pyvis.network import Network\n\nnet = Network(\n    notebook=True,\n)\n```", "```py\nnet.add_node(\"Singapore\")\nnet.add_node(\"San Francisco\")\nnet.add_node(\"Tokyo\")\nnet.add_nodes([\"Riga\", \"Copenhagen\"],\n              color=['lightgreen', 'yellow'])\n```", "```py\nnet.show('mygraph.html')\n```", "```py\nnet.add_edge(\"Singapore\",\"San Francisco\") \nnet.add_edge(\"San Francisco\",\"Tokyo\")\nnet.add_edges(\n    [\n        (\"Riga\",\"Copenhagen\"),\n        (\"Copenhagen\",\"Singapore\"),\n        (\"Singapore\",\"Tokyo\"),\n        (\"Riga\",\"San Francisco\"),\n        (\"San Francisco\",\"Singapore\"),\n    ]\n)\n\nnet.show('mygraph.html')\n```", "```py\nnet = Network(\n    notebook=True,\n    directed=True\n)\n```", "```py\nnet.repulsion(\n    node_distance=100,\n    central_gravity=0.2,\n    spring_length=200,\n    spring_strength=0.05,\n    damping=0.09,\n)\n```", "```py\nnet.repulsion(\n    spring_length=400,\n    damping=0.01,\n)\nnet.show('mygraph.html')\n```", "```py\nnet.show_buttons(filter_='physics')\nnet.show('mygraph.html')\n```", "```py\nnet.show_buttons(filter_= True)\n```", "```py\nimport pandas as pd\ndf = pd.read_csv('flights.csv', \n                 usecols = [\"ORIGIN_AIRPORT\", \"DESTINATION_AIRPORT\",\"YEAR\"])\n```", "```py\ndf_between_airports = df.groupby(by=[\"ORIGIN_AIRPORT\", \"DESTINATION_AIRPORT\"]).count()\ndf_between_airports = df_between_airports['YEAR'].rename('COUNT').reset_index() \ndf_between_airports = df_between_airports.query('ORIGIN_AIRPORT.str.len() <= 3 & DESTINATION_AIRPORT.str.len() <= 3')\ndf_between_airports = df_between_airports.sort_values(by=\"COUNT\", ascending=False)\ndf_between_airports\n```", "```py\ntop = 130\ndf_between_airports = df_between_airports.head(top)\ndf_between_airports['COUNT'] = df_between_airports['COUNT'] / 5000\ndf_between_airports\n```", "```py\nnode_sizes = df_between_airports.groupby('ORIGIN_AIRPORT').COUNT.agg(sum)\nnode_sizes\n```", "```py\nORIGIN_AIRPORT\nANC     1.2766\nATL    20.2544\nBOS     6.3382\nBWI     1.1674\nCLT     1.2614\nDAL     1.2524\nDCA     4.0138\nDEN    11.5638\nDFW     5.5244\nEWR     2.0252\nFLL     2.5436\nHNL     5.1544\nHOU     1.2592\nJAX     1.0192\nJFK     6.1684\nKOA     1.2694\nLAS     6.8754\nLAX    21.0822\nLGA     7.3132\nLIH     1.1710\nMCO     2.7096\nMIA     2.2936\nMSP     2.3608\nMSY     1.1186\nOAK     1.2562\nOGG     1.6626\nORD    12.6836\nPHL     2.3876\nPHX     7.2886\nSAN     2.4130\nSEA     7.3736\nSFO    12.2998\nSJC     1.2678\nSLC     3.4424\nSMF     1.1148\nTPA     1.4166\nName: COUNT, dtype: float64\n```", "```py\nfrom pyvis.network import Network\n\nnet = Network(\n    notebook = True,\n    directed = True,            # directed graph\n    bgcolor = \"black\",          # background color of graph \n    font_color = \"yellow\",      # use yellow for node labels\n    cdn_resources = 'in_line',  # make sure Jupyter notebook can display correctly\n    height = \"1000px\",          # height of chart\n    width = \"100%\",             # fill the entire width    \n    )\n\n# get all the nodes from the two columns\nnodes = list(set([*df_between_airports['ORIGIN_AIRPORT'], \n                  *df_between_airports['DESTINATION_AIRPORT']\n                 ]))\n\n# extract the size of each airport\nvalues = [node_sizes[node] for node in nodes]\n\n# extract the edges between airports\nedges = df_between_airports.values.tolist()\n\n# use this if you don't need to set the width of the edges\n# edges = df_between_airports.iloc[:,:2].values.tolist()\n\n# add the nodes, the value is to set the size of the nodes\nnet.add_nodes(nodes, value = values)\n\n# add the edges\nnet.add_edges(edges)\n\nnet.show('flights.html')\n```", "```py\n...\n...\n\n# add the edges\nnet.add_edges(edges)\n\n# color the nodes red if their count is more than 20\nfor n in net.nodes:\n    if n['value'] > 20:\n        n['color'] = 'red'\n\nnet.show('flights.html')\n```"]