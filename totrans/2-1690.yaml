- en: 'Product Managers Must Decide: Features or User Design'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/product-managers-must-decide-features-or-user-design-e3a14a27859](https://towardsdatascience.com/product-managers-must-decide-features-or-user-design-e3a14a27859)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Opinion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Product managers can optimize user design or feature development. Not both.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://thedatageneralist.medium.com/?source=post_page-----e3a14a27859--------------------------------)[![Steven
    Finkelstein](../Images/042d68c3b1cc37a776771fb177ac2beb.png)](https://thedatageneralist.medium.com/?source=post_page-----e3a14a27859--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e3a14a27859--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e3a14a27859--------------------------------)
    [Steven Finkelstein](https://thedatageneralist.medium.com/?source=post_page-----e3a14a27859--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e3a14a27859--------------------------------)
    ·7 min read·Jan 18, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/db456f6851ca33a01597b987bbab77a5.png)'
  prefs: []
  type: TYPE_IMG
- en: image is by [Austin Distel](https://unsplash.com/@austindistel?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/s/photos/startup-growth-chart?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: The bifurcation of markets into two extremes seems to be a common theme across
    many applications. Whether it is the right vs. left in journalism, the [demand
    for data scientists](https://thedatageneralist.com/the-future-of-data-scientists/),
    or the divide between discount vs. luxury retail; the stable state often settles
    at the extremes. When it comes to building software, the two extremes I have noticed
    are optimizing for feature development vs. optimizing for user design. If your
    product gets caught in the middle, you likely won’t make it.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/aba6227f799da363c638ae737399fa05.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: Why can you only choose one?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The convergence to the extremes occurs because the two development goals have
    orthogonal paths. With the constraints inherent to project management (see below),
    there are limitations in developing a quality software product. A team can only
    prioritize a limited number of tasks in a given timeframe. These constraints,
    coupled with the your pricing and sales strategy, will force development to choose
    between the two extremes.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9ba1e4c5f32434452c7110b1cfab116d.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: Let’s imagine an early-stage tech startup is deciding on the optimal development
    path for building a B2B project management software. They have 10 employees tasked
    with releasing the beta version of the software in 12 months time. One of the
    earliest decisions for this software product is choosing whether it will be a
    web app, mobile app, one of each, or both (i.e. desktop vs. phone). This one decision
    impacts the tech stack, thus having huge cascading effects. If you pursue only
    the web app, but want to incorporate several external software integrations, this
    will require a more complex engineering effort. This would reduce time available
    to optimize for user design. Alternatively, if you desire a web app and a native
    mobile IOS app, this typically requires two *different* front-end frameworks.
    Because the amount of front-end work is essentially doubled, this reduces time
    availability for adding features.
  prefs: []
  type: TYPE_NORMAL
- en: In a separate workstream, there are discussions on the optimal pricing and sales
    strategy. The complexity of the software product, often correlated with the number
    of features, has a direct impact on the optimal sales strategy. The more complex
    the product, the harder it will be to push a product-led growth strategy, which
    often emphasizes a self-service model for acquiring users. Complex software products
    typically require demos for customers, have higher pricing points, and might benefit
    from 3rd party deployment partners. Simpler products that optimize for user design
    over features have an easier path towards the product-led growth strategy because
    users will learn how to use the products quickly. While some of these decisions
    could potentially be delayed, the further you progress in the development journey,
    the more your decisions will push you towards the trade-off between feature development
    vs. user design.
  prefs: []
  type: TYPE_NORMAL
- en: From personal experience, I was heavily involved in helping choose one organization’s
    enterprise Laboratory Information Management System (LIMS). It involved a lengthy
    process of information gathering as we researched LIMS options, received demos
    from some providers, and interviewed our users to understand their requirements.
    After all of this work, the two finalists for our decision were the LIMS provider
    with the most features and the one with the best user design. Perhaps knowing
    this framework could have saved us some time.
  prefs: []
  type: TYPE_NORMAL
- en: Why does the market reward the extremes?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In [*Startup=Growth*](http://www.paulgraham.com/growth.html) Paul Graham states,
    “If you have such an idea and don’t grow fast enough, competitors will. Growing
    too slowly is particularly dangerous in a business with network effects, which
    the best startups usually have to some degree.”
  prefs: []
  type: TYPE_NORMAL
- en: I believe the market for software products converges to the two extremes because
    of network effects and exponential growth. Optimizing for features or user design
    will lead to faster growth rates in user adoption than settling for a combination
    of the two because growth is not linear.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/84ed3f474167d90ef34d967ef5c2a62a.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: The features optimized product will satisfy the requirements of a more diverse
    set of teams and increase optionality for future requirements because it has more
    capabilities than competitors. While simple products might only work for a specific
    niche, complex products likely satisfy requirements across multiple department
    types or industries. Additionally, developing more features often requires reliance
    on external software integrations. The diversity of teams, in combination with
    the external software integrations will expose the product to a larger addressable
    market of potential customers. Each additional user becoming exposed to the product
    is free advertising feeding the growth loop.
  prefs: []
  type: TYPE_NORMAL
- en: The user design optimized product has several innate advantages. When combined
    with the self-service freemium model (i.e. product-led growth), simplicity will
    convert more potential customers because the product is easier to learn. Simplicity
    reduces friction in the user acquisition process. Within organizations that already
    use the product, intuitive products will benefit from increased user adoption.
    Users love products that are easy to use. With simplicity at the core, the pool
    of users will grow because it includes less technical users as well. Back when
    my tech-challenged parents were ready for their first smart phone, I immediately
    recommended the IPhone because Steven Jobs was obsessed with optimizing for user
    design.
  prefs: []
  type: TYPE_NORMAL
- en: When should you focus on features vs. user design?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The development strategy should remain flexible and preserve optionality wherever
    possible. When the time comes to choose a path, there are a number of factors
    that I would consider.
  prefs: []
  type: TYPE_NORMAL
- en: '**Talent**'
  prefs: []
  type: TYPE_NORMAL
- en: Which technologies are your employees most skilled in? If you want to build
    a native mobile app, it often requires using specific languages that certain folks
    specialize in. If you desire a web app with a limitless set of external integrations,
    then you likely need more full stack or backend engineers. The talent within your
    organization and/or the talent that you can afford might dictate your strategy.
  prefs: []
  type: TYPE_NORMAL
- en: '**Target Consumer**'
  prefs: []
  type: TYPE_NORMAL
- en: Who is your target consumer? Are you targeting the tech savvy millennial consumer
    or are your users technically challenged? If you are building a consumer-facing
    brand, then aesthetics and simplicity will likely matter more than it does for
    a B2B product.
  prefs: []
  type: TYPE_NORMAL
- en: '**Competition**'
  prefs: []
  type: TYPE_NORMAL
- en: Are you a first mover in this industry or are there already several direct and
    indirect competitors? Less competition gives you more options, while increased
    competition will push you to become the antithesis of the leader in order to achieve
    growth.
  prefs: []
  type: TYPE_NORMAL
- en: '**Sales and Pricing Strategy**'
  prefs: []
  type: TYPE_NORMAL
- en: How do you plan on acquiring and converting users? How much do you plan on charging
    users? A product-led growth strategy will be more challenging for more complex
    software products; however it is not out of the question. Hila Qu, former Director
    of Growth at Gitlab, delves into the tradeoffs between the two strategies in a
    [recent article](https://www.lennysnewsletter.com/p/five-steps-to-starting-your-plg-motion).
  prefs: []
  type: TYPE_NORMAL
- en: When does it not matter?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Distribution Power** There is at least one key exception to this optimization
    theory — Microsoft. When Microsoft enters your industry, you can throw features
    and user design out the window. Just take a look at Teams vs. Slack. Slack is
    objectively the better software product in almost every possible way. However,
    none of that mattered because Microsoft Office/365 is so embedded in organizations
    that Teams became the budget-conscience choice for most organizations. Distribution
    power allows organizations to open up the playbook and choose their own development
    journey.'
  prefs: []
  type: TYPE_NORMAL
- en: '**AI/ML** While most situations force feature development and user design improvements
    into orthogonal paths, there are some exceptions. Recommendation systems are a
    common AI/ML application in many products which I’d consider a complex feature
    addition that could improve user design. One familiar example with Twitter is
    when you select to follow someone and it triggers additional recommended people
    to follow. This process makes it easier to find other accounts you are more likely
    to enjoy, which is an improvement to the user experience. Make no mistake though,
    incorporating AI/ML into the backend of an application is no easy task.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/81f3cbf1d80388224d3086eceb4ca172.png)'
  prefs: []
  type: TYPE_IMG
- en: Twitter suggested follows example
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While there are some exceptions, I have noticed that the market tends to reward
    software products that are optimized for features or user design — not both. If
    growth is the primary objective, then identifying which path to optimize should
    be the priority. Aiming for both will only push user adoption to competitors who
    optimize correctly. After all, unicorns don’t exist for a reason.
  prefs: []
  type: TYPE_NORMAL
- en: ~ The Data Generalist
  prefs: []
  type: TYPE_NORMAL
- en: '[Data Science Career Advisor](https://thedatageneralist.com/career-advisor/)'
  prefs: []
  type: TYPE_NORMAL
