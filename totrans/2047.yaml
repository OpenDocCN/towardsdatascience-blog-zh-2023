- en: 'The PATH Variable For the Confused Data Scientist: How to Manage It'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/the-path-variable-for-the-confused-data-scientist-how-to-manage-it-b469bfb45785](https://towardsdatascience.com/the-path-variable-for-the-confused-data-scientist-how-to-manage-it-b469bfb45785)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Understanding what PATH is and how to add paths to it in both Windows and Unix-like
    systems
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://ibexorigin.medium.com/?source=post_page-----b469bfb45785--------------------------------)[![Bex
    T.](../Images/516496f32596e8ad56bf07f178a643c6.png)](https://ibexorigin.medium.com/?source=post_page-----b469bfb45785--------------------------------)[](https://towardsdatascience.com/?source=post_page-----b469bfb45785--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----b469bfb45785--------------------------------)
    [Bex T.](https://ibexorigin.medium.com/?source=post_page-----b469bfb45785--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----b469bfb45785--------------------------------)
    ·6 min read·Jun 26, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a9244c84c570bd3ac2c3898d6baa89aa.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by me with Midjourney
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes I feel like people on StackOverflow have compasses stuck to the roof
    of their heads. They always seem to find the PATH.
  prefs: []
  type: TYPE_NORMAL
- en: I think it isn’t in your PATH.
  prefs: []
  type: TYPE_NORMAL
- en: You might’ve messed up your PATH.
  prefs: []
  type: TYPE_NORMAL
- en: Did you add it to your PATH?
  prefs: []
  type: TYPE_NORMAL
- en: Check if the executable is in your PATH.
  prefs: []
  type: TYPE_NORMAL
- en: “I mean, what the fudge *is* PATH?” I would always say whenever I read such
    sentences, red in the face, trying to fix a bug. Now, it is over three years in
    my data science journey and I fully know what it is. Almost.
  prefs: []
  type: TYPE_NORMAL
- en: And in this article, I intend to teach how to manage this confusing environment
    variable in both Windows and Unix-like systems.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s get started!
  prefs: []
  type: TYPE_NORMAL
- en: Commands have paths, too
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: What is the one terminal command you use the most? Without a doubt, mine is
    `git` as I frequently make commits while writing articles.
  prefs: []
  type: TYPE_NORMAL
- en: 'The reason I am asking is because most terminal commands have their own paths
    in the operating system as well. To find that path, you only have to run `which
    valid_command_name`. For example, here is the path to my `git` instance:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: You might recognize that the above is an absolute path. But it is a path to
    what, exactly?
  prefs: []
  type: TYPE_NORMAL
- en: An executable binary file! (If you are in Windows, you will get a `.exe` file
    path)
  prefs: []
  type: TYPE_NORMAL
- en: It contains instructions on what to do when `git` commands are run. All terminal
    commands are shell scripts or executables in some form that perform certain tasks.
  prefs: []
  type: TYPE_NORMAL
- en: For example, you can try the `which` command on built-in terminal commands like
    `clear`, `cat` or `touch` and you would get absolute paths (for even the `which`
    command itself).
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you get the path to the executable, you can try running a command with
    its full path like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: And it works! But here is what’s interesting — how can the word `git` is equivalent
    to the absolute path `/usr/bin/git`? I mean, `git` is just a word.
  prefs: []
  type: TYPE_NORMAL
- en: How does your computer know the full executable paths of so many commands and
    can run them with only a single keyword?
  prefs: []
  type: TYPE_NORMAL
- en: (This is the eureka moment!)
  prefs: []
  type: TYPE_NORMAL
- en: Using the PATH variable!
  prefs: []
  type: TYPE_NORMAL
- en: Behold — the PATH!
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The PATH is a variable that holds the absolute paths to executable files that
    run almost all terminal commands, whether built-in or user-installed.
  prefs: []
  type: TYPE_NORMAL
- en: 'When you type any command such as `conda env create`, the operating system
    looks for an executable called `conda` within your PATH variable. If it can''t
    find the executable, it returns a `command not found` error:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: You can print the paths in your PATH with a single command.
  prefs: []
  type: TYPE_NORMAL
- en: 'On Unix-like systems:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'On Windows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Each path in PATH is separated by a colon in Unix and a semicolon in Windows.
  prefs: []
  type: TYPE_NORMAL
- en: It is thanks to these paths that you don’t have to remember dozens of absolute
    paths to executables installed in your system.
  prefs: []
  type: TYPE_NORMAL
- en: Working with PATH in Windows
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Editing the PATH variable is different in Unix-like systems and stubborn Windows.
    This section is about managing your PATH variable in Windows.
  prefs: []
  type: TYPE_NORMAL
- en: 'The most common operation you will do with PATH is adding new paths to it.
    For example, to add the `C:\Users\user\Desktop\articles` directory to PATH, you
    should open the Command Prompt or Powershell with administrator privileges. Then,
    run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: But, don’t rush — if you aren’t careful `setx` command may end up very badly
    for your PATH. So, the safe thing to do in Windows is to add paths via the System
    Properties Window.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a step-by-step instructions and a GIF to add a new path to PATH:'
  prefs: []
  type: TYPE_NORMAL
- en: Click the Start button and search for “**Edit the system environment variables**”
    and click on the first result.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on “**Environment Variables**” from the pop-up window.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Decide whether the new path should be added for the current user or the entire
    system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Under “**User variables for your_username**” or “**System variables**”, scroll
    down till you find the “**Path**” variable.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select it and click **Edit**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the new pop-up Window, click “**New**” and paste the new path, e.g. `C:\Users\user\Desktop\articles`
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click OK three times.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../Images/8186c6d09aa9b3eaa74944fb520bf6df.png)'
  prefs: []
  type: TYPE_IMG
- en: GIF by me.
  prefs: []
  type: TYPE_NORMAL
- en: From the final pop-up window, you can also delete or change the order of paths
    (see the final section on the importance of order).
  prefs: []
  type: TYPE_NORMAL
- en: Working with PATH in Unix
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In Unix-like systems, adding a new path to PATH is much easier.
  prefs: []
  type: TYPE_NORMAL
- en: 'For instance, to add the `/home/bexgboost/articles` path, you have to run the
    following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'The new path will be added to the very beginning of PATH. To add it to the
    end, you have to change the place of `$PATH`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: But the new path will be added only for the duration of the current terminal
    session. To add it your PATH environment variable permanently, you have to append
    the `export` command to your shell configuration file.
  prefs: []
  type: TYPE_NORMAL
- en: 'The specific configuration file depends on the shell you’re using:'
  prefs: []
  type: TYPE_NORMAL
- en: 'For Bash: Add the `export` command to `~/.bashrc` or `~/.bash_profile` (you
    may also consider `.profile`, see [here](https://serverfault.com/questions/261802/what-are-the-functional-differences-between-profile-bash-profile-and-bashrc)
    for the differences).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For Zsh: Add the `export` command to `~/.zshrc`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For Fish: Add the `export` command to `~/.config/fish/config.fish`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Once you choose your own from the list (I will choose `.bash_profile`), use
    the following `echo` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Then, reload the configuration file with `source ~/.bash_profile` and it is
    done.
  prefs: []
  type: TYPE_NORMAL
- en: The order of paths
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The order of paths in the PATH variable determines the priority in which directories
    are searched when executing commands or programs.
  prefs: []
  type: TYPE_NORMAL
- en: When you enter a command in the terminal, the operating system looks for its
    executable by sequentially checking each path in PATH from left to right. If multiple
    directories contain executables with the same name, the first one will be used.
  prefs: []
  type: TYPE_NORMAL
- en: For example, if you have multiple Python versions on your system, the leftmost
    Python executable in your PATH will be used when you run `python` in the terminal.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the world of data science and ML, the terminal is often overlooked. Instead,
    online courses and bootcamps draw the attention of beginners to shinier IDEs like
    VSCode or JupyterLab.
  prefs: []
  type: TYPE_NORMAL
- en: But someday, the inevitable happens and they have to open up the rusty shell
    on their own machines. That’s when they hit a giant roadblock in their PATH.
  prefs: []
  type: TYPE_NORMAL
- en: I hope this article will let you crush that roadblock to pieces.
  prefs: []
  type: TYPE_NORMAL
- en: Thank you for reading!
  prefs: []
  type: TYPE_NORMAL
- en: Loved this article and, let’s face it, its bizarre writing style? Imagine having
    access to dozens more just like it, all written by a brilliant, charming, witty
    author (that’s me, by the way :).
  prefs: []
  type: TYPE_NORMAL
- en: For only 4.99$ membership, you will get access to not just my stories, but a
    treasure trove of knowledge from the best and brightest minds on Medium. And if
    you use [my referral link](https://ibexorigin.medium.com/membership), you will
    earn my supernova of gratitude and a virtual high-five for supporting my work.
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://ibexorigin.medium.com/membership?source=post_page-----b469bfb45785--------------------------------)
    [## Join Medium with my referral link - Bex T.'
  prefs: []
  type: TYPE_NORMAL
- en: As a Medium member, a portion of your membership fee goes to writers you read,
    and you get full access to every story…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: ibexorigin.medium.com](https://ibexorigin.medium.com/membership?source=post_page-----b469bfb45785--------------------------------)
  prefs: []
  type: TYPE_NORMAL
