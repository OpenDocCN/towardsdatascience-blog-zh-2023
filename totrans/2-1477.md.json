["```py\n!pip install --quiet apache_beam\n```", "```py\nmkdir -p data\n```", "```py\nimport apache_beam as beam\nfrom apache_beam.coders.coders import Coder\n\nclass CustomCoder(Coder):\n    \"\"\"A custom coder used for reading and writing strings as UTF-8.\"\"\"\n\n    def encode(self, value):\n        return value.encode(\"utf-8\", \"replace\")\n\n    def decode(self, value):\n        return value.decode(\"utf-8\", \"ignore\")\n\n    def is_deterministic(self):\n        return True\np1 = beam.Pipeline()\n\nsales = (p1\n         |beam.io.ReadFromText('data/sales_data_sample.csv', coder=CustomCoder(), skip_header_lines=1)\n         |beam.io.WriteToText('data/output'))\np1.run()\n```", "```py\n!head -n 5 data/output-00000-of-00001\n```", "```py\n10107,30,95.7,2,2871,2/24/2003 0:00,Shipped,1,2,2003,Motorcycles,95,S10_1678,Land of Toys Inc.,2125557818,897 Long Airport Avenue,,NYC,NY,10022,USA,NA,Yu,Kwai,Small\n10121,34,81.35,5,2765.9,5/7/2003 0:00,Shipped,2,5,2003,Motorcycles,95,S10_1678,Reims Collectables,26.47.1555,59 rue de l'Abbaye,,Reims,,51100,France,EMEA,Henriot,Paul,Small\n10134,41,94.74,2,3884.34,7/1/2003 0:00,Shipped,3,7,2003,Motorcycles,95,S10_1678,Lyon Souveniers,+33 1 46 62 7555,27 rue du Colonel Pierre Avia,,Paris,,75508,France,EMEA,Da Cunha,Daniel,Medium\n10145,45,83.26,6,3746.7,8/25/2003 0:00,Shipped,3,8,2003,Motorcycles,95,S10_1678,Toys4GrownUps.com,6265557265,78934 Hillside Dr.,,Pasadena,CA,90003,USA,NA,Young,Julie,Medium\n10159,49,100,14,5205.27,10/10/2003 0:00,Shipped,4,10,2003,Motorcycles,95,S10_1678,Corporate Gift Ideas Co.,6505551386,7734 Strong St.,,San Francisco,CA,,USA,NA,Brown,Julie,Medium\n```", "```py\np2 = beam.Pipeline()\nsales = (p2\n         |beam.io.ReadFromText('data/sales_data_sample.csv', coder=CustomCoder(), skip_header_lines=1)\n         |beam.Map(lambda row: row.split(','))\n         |beam.io.WriteToText('data/output2'))\np2.run()\n```", "```py\n!head -n 5 data/output2-00000-of-00001\n```", "```py\n['10107', '30', '95.7', '2', '2871', '2/24/2003 0:00', 'Shipped', '1', '2', '2003', 'Motorcycles', '95', 'S10_1678', 'Land of Toys Inc.', '2125557818', '897 Long Airport Avenue', '', 'NYC', 'NY', '10022', 'USA', 'NA', 'Yu', 'Kwai', 'Small']\n['10121', '34', '81.35', '5', '2765.9', '5/7/2003 0:00', 'Shipped', '2', '5', '2003', 'Motorcycles', '95', 'S10_1678', 'Reims Collectables', '26.47.1555', \"59 rue de l'Abbaye\", '', 'Reims', '', '51100', 'France', 'EMEA', 'Henriot', 'Paul', 'Small']\n['10134', '41', '94.74', '2', '3884.34', '7/1/2003 0:00', 'Shipped', '3', '7', '2003', 'Motorcycles', '95', 'S10_1678', 'Lyon Souveniers', '+33 1 46 62 7555', '27 rue du Colonel Pierre Avia', '', 'Paris', '', '75508', 'France', 'EMEA', 'Da Cunha', 'Daniel', 'Medium']\n['10145', '45', '83.26', '6', '3746.7', '8/25/2003 0:00', 'Shipped', '3', '8', '2003', 'Motorcycles', '95', 'S10_1678', 'Toys4GrownUps.com', '6265557265', '78934 Hillside Dr.', '', 'Pasadena', 'CA', '90003', 'USA', 'NA', 'Young', 'Julie', 'Medium']\n['10159', '49', '100', '14', '5205.27', '10/10/2003 0:00', 'Shipped', '4', '10', '2003', 'Motorcycles', '95', 'S10_1678', 'Corporate Gift Ideas Co.', '6505551386', '7734 Strong St.', '', 'San Francisco', 'CA', '', 'USA', 'NA', 'Brown', 'Julie', 'Medium']\n```", "```py\np3 = beam.Pipeline()\nsales = (p3\n         |beam.io.ReadFromText('data/sales_data_sample.csv', coder=CustomCoder(), skip_header_lines=1)\n         |beam.Map(lambda row: row.split(','))\n         |beam.Filter(lambda row:row[10] == \"Classic Cars\")\n         |beam.io.WriteToText('data/output3'))\np3.run()\n```", "```py\n!head -n 5 data/output3-00000-of-00001\n```", "```py\n['10103', '26', '100', '11', '5404.62', '1/29/2003 0:00', 'Shipped', '1', '1', '2003', 'Classic Cars', '214', 'S10_1949', 'Baane Mini Imports', '07-98 9555', 'Erling Skakkes gate 78', '', 'Stavern', '', '4110', 'Norway', 'EMEA', 'Bergulfsen', 'Jonas', 'Medium']\n['10112', '29', '100', '1', '7209.11', '3/24/2003 0:00', 'Shipped', '1', '3', '2003', 'Classic Cars', '214', 'S10_1949', '\"Volvo Model Replicas', ' Co\"', '0921-12 3555', 'Berguvsvgen  8', '', 'Lule', '', 'S-958 22', 'Sweden', 'EMEA', 'Berglund', 'Christina', 'Large']\n['10126', '38', '100', '11', '7329.06', '5/28/2003 0:00', 'Shipped', '2', '5', '2003', 'Classic Cars', '214', 'S10_1949', '\"Corrida Auto Replicas', ' Ltd\"', '(91) 555 22 82', '\"C/ Araquil', ' 67\"', '', 'Madrid', '', '28023', 'Spain', 'EMEA', 'Sommer', 'Martn', 'Large']\n['10140', '37', '100', '11', '7374.1', '7/24/2003 0:00', 'Shipped', '3', '7', '2003', 'Classic Cars', '214', 'S10_1949', 'Technics Stores Inc.', '6505556809', '9408 Furth Circle', '', 'Burlingame', 'CA', '94217', 'USA', 'NA', 'Hirano', 'Juri', 'Large']\n['10150', '45', '100', '8', '10993.5', '9/19/2003 0:00', 'Shipped', '3', '9', '2003', 'Classic Cars', '214', 'S10_1949', '\"Dragon Souveniers', ' Ltd.\"', '+65 221 7555', '\"Bronz Sok.', ' Bronz Apt. 3/6 Tesvikiye\"', '', 'Singapore', '', '79903', 'Singapore', 'Japan', 'Natividad', 'Eric', 'Large']\n```", "```py\np3a = beam.Pipeline()\nsales = (p3a\n         |beam.io.ReadFromText('data/sales_data_sample.csv', coder=CustomCoder(), skip_header_lines=1)\n         |beam.Map(lambda row: row.split(','))\n         #|beam.Filter(lambda row:row[10] == \"Classic Cars\")\n         |beam.Map(lambda row: (row[10], int(row[1])))\n         |beam.io.WriteToText('data/output3a'))\np3a.run()\n!head -n 10 data/output3a-00000-of-00001\n```", "```py\n('Motorcycles', 30)\n('Motorcycles', 34)\n('Motorcycles', 41)\n('Motorcycles', 45)\n('Motorcycles', 49)\n('Motorcycles', 36)\n('Motorcycles', 29)\n('Motorcycles', 48)\n('Motorcycles', 22)\n('Motorcycles', 41)\n```", "```py\np4 = beam.Pipeline()\nsales = (p4\n         |beam.io.ReadFromText('data/sales_data_sample.csv', coder=CustomCoder(), skip_header_lines=1)\n         |beam.Map(lambda row: row.split(','))\n         #|beam.Filter(lambda row:row[10] == \"Classic Cars\")\n         |beam.Map(lambda row: (row[10], int(row[1])))\n         |beam.CombinePerKey(sum)\n         |beam.io.WriteToText('data/output4'))\np4.run()\n!head -n 10 data/output4-00000-of-00001\n```", "```py\n('Motorcycles', 11663)\n('Classic Cars', 33992)\n('Trucks and Buses', 10777)\n('Vintage Cars', 21069)\n('Planes', 10727)\n('Ships', 8127)\n('Trains', 2712)\n```", "```py\ndef quantity_filter(row):\n  name, count = row \n  if count > 2000:\n    return row \n\np7 = beam.Pipeline() \nsales = (p7\n         |beam.io.ReadFromText('data/sales_data_sample.csv', coder=CustomCoder(), skip_header_lines=1)\n         |beam.Map(lambda row: row.split(','))\n         |beam.Map(lambda row: (row[17], int(row[1])))\n         |beam.CombinePerKey(sum)\n         |beam.Map(quantity_filter)\n         |beam.io.WriteToText('data/output7'))\np7.run()\n!head -n 10 data/output7-00000-of-00001\n```", "```py\n('NYC', 5294)\nNone\nNone\nNone\n('San Francisco', 2139)\nNone\n('', 33574)\nNone\nNone\nNone\n```", "```py\np8 = beam.Pipeline() \nsales = (p8\n         |beam.io.ReadFromText('data/sales_data_sample.csv', coder=CustomCoder(), skip_header_lines=1)\n         |beam.Map(lambda row: row.split(','))\n         |beam.Map(lambda row: (row[17], int(row[1])))\n         |beam.CombinePerKey(sum)\n         |beam.Map(quantity_filter)\n         |beam.Filter(lambda row: row != None)\n         |beam.io.WriteToText('data/output8'))\np8.run()\n!head -n 10 data/output8-00000-of-00001\n```", "```py\n('NYC', 5294)\n('San Francisco', 2139)\n('', 33574)\n('New Bedford', 2043)\n('San Rafael', 6366)\n```"]