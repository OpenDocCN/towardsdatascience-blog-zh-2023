["```py\nn=20    # Sample size\nset.seed(1234)\npop = \"lognorm\"      # population type\nif (pop==\"F(2,10)\") x=rf(n,df1=2,df2=10)\nif (pop==\"chisq(3)\") x=rchisq(n,df=3)\nif (pop==\"t(3)\") x=rt(n,df=3)\nif (pop==\"lognorm\") x=rlnorm(n)\n\n# Bootstrapping sample mean \nB=10000          # number of bootstrap iterations \nstat=matrix(NA,nrow=B)\nfor(i in 1:B){\n  xboot=sample(x,size=n,replace = TRUE)\n  stat[i,] = mean(xboot)\n}\n\n# Plots\nplot(density(stat),col=\"red\",lwd=2,main=pop,xlab=\"\")\nm=mean(x); s=sd(x)/sqrt(n)\ncurve(dnorm(x,mean=m,sd=s),add=TRUE, yaxt=\"n\")\nrug(stat)\n```", "```py\nx = c(-0.63, 0.18,-0.84,1.60,0.33, -0.82,0.49,0.74,0.58,-0.31,\n      1.51,0.39,-0.62,-2.21,1.12,-0.04,-0.02,0.94,0.82,0.59)\n\ny=c(1.14,0.54,0.01,-0.02,1.26,-0.29,0.43,0.82,1.90,1.51,\n    1.83,2.01,1.37,2.54,3.55, 3.99,5.28,5.41,3.69,2.85)\n\n# Install MKinfer package\nlibrary(MKinfer)\n# One-sample test for X with H0: mu = 0\nboot.t.test(x,mu=0)\n# One-sample test for Y with H0: mu = 1\nboot.t.test(y,mu=1)\n# Two-sample test for X and Y with H0: mu(x) - mu(y) = -1\nboot.t.test(x,y,mu=-1)\n```"]