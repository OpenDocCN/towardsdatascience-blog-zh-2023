- en: Error Handling in R and Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/error-handling-in-r-and-python-5a4d60f3fba6](https://towardsdatascience.com/error-handling-in-r-and-python-5a4d60f3fba6)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: If an error comes up in the middle of a function, that can be handled
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://gustavorsantos.medium.com/?source=post_page-----5a4d60f3fba6--------------------------------)[![Gustavo
    Santos](../Images/a19a9f4525cdeb6e7a76cd05246aa622.png)](https://gustavorsantos.medium.com/?source=post_page-----5a4d60f3fba6--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5a4d60f3fba6--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5a4d60f3fba6--------------------------------)
    [Gustavo Santos](https://gustavorsantos.medium.com/?source=post_page-----5a4d60f3fba6--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----5a4d60f3fba6--------------------------------)
    ·5 min read·Apr 27, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/aa8bcccb535506d244fe491e4c34f330.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
- en: Photo by [Joshua Hoehne](https://unsplash.com/@mrthetrain?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/WPrTKRw8KRQ?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'One thing is true: *if you ever coded, you faced an error. Period.*'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: Errors are not always a bad thing. I agree that they can drive us mad sometimes,
    especially if we have looked the code over and over again without finding the
    bug. However, error messages must be understood as something that is not working
    as expected in your code.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: Let’s face it, we can create N test scenarios, but the end user will find the
    bug N+1\. And that’s ok, as long as we can plan for the most common ones.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: In this article, we will go over known error handling functions that can keep
    our code running, even if an error occurs. And we’ll see code snippets for R and
    Python.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: Read on.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: Error Handling
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Error handling is a programming resource to make your code keep working after
    finding an error, without breaking.
  id: totrans-15
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Imagine that you are writing a function that takes two numbers, calculates
    the difference between them and return the percent value of the difference compared
    to the first number. That is a pretty straightforward function, but if you enter
    a number as string, the code will break and throw an error to the screen: *I can’t
    make math operations with text, buddy.*'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: That is when the error handling can be useful. If we know that this is a common
    error from the end user side, I can plan to make my code work around that error
    and return the result even if the numbers were entered as strings.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: 'The programmer can say:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: Try running this piece of code.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If this does not work and you face an error, run this piece of code instead.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s move on and see how to code that.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: Coding
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: R
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In R, the function to be used for error handling is `tryCatch`. Like explained
    before, it will try to run the main code, but if it “catches” an error, the secondary
    code (the workaround) can run.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在 R 中，用于错误处理的函数是`tryCatch`。如前所述，它将尝试运行主要代码，但如果它“捕获”到错误，则次要代码（解决方法）可以运行。
- en: Going back to that example in the previous section, a function to calculate
    percent difference without error handling would be like this.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 回到上一节的示例，一个没有错误处理的百分比差异计算函数如下。
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Notice, in Test2, that if we enter a string, the code won’t move forward. It
    breaks.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在 Test2 中，如果我们输入字符串，代码不会继续执行。它会中断。
- en: Now, we can use `tryCatch` and make the function returns the value even if we
    enter the numbers as string.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以使用`tryCatch`并使函数即使在输入数字作为字符串时也返回值。
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Perfect! It worked just fine. Let’s find out how we can do the same code in
    Python now.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 完美！它工作得很好。现在我们来看看如何用 Python 实现相同的代码。
- en: Python
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python
- en: Writing the same function in Python is also very simple. We should use the `try
    ... except` format, in this case. As you may have already concluded, `try` the
    main code snippet, but if an exception (error) occurs, run the secondary code
    snippet, the workaround.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 中编写相同的函数也非常简单。在这种情况下，我们应该使用`try ... except`格式。正如你可能已经得出的结论，`try` 是主要代码片段，但如果发生异常（错误），则运行次要代码片段，即解决方法。
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Very good. Code working properly.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 非常好。代码运行正常。
- en: Finally
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 最终
- en: We could add a `finally` clause to any of the functions from both languages.
    This argument will always run, regardless if the try block raises an error or
    not. So it could be a completion message or a summary, for example.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在两种语言中的任何一个函数中添加`finally`子句。这个子句会始终运行，无论 try 块是否引发错误。因此，它可以是一个完成消息或总结，例如。
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: I know these functions are simple and that there would be a much better solution
    to create them without using error handling. However, I think this was the most
    gentle way to teach how to write a function with exceptions.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道这些函数很简单，并且有更好的方法来创建它们而不使用错误处理。然而，我认为这是最温和的方式来教你如何编写带有异常的函数。
- en: Now, it’s your turn to apply that to your job, in many different use cases and
    forms to help you solving business problems.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 现在轮到你把它应用到你的工作中，以帮助你解决业务问题，适用于许多不同的用例和形式。
- en: Before You Go
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在你离开之前
- en: In this quick tutorial, we learned how to handle errors using R or Python.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个快速教程中，我们学习了如何使用 R 或 Python 处理错误。
- en: Error handling is a programming resource to make your code keep running, even
    if it finds an expected kind of error. In our example, it was a string input instead
    of number.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 错误处理是一个编程资源，它使你的代码在遇到预期错误时仍能继续运行。在我们的示例中，这个错误是输入了字符串而不是数字。
- en: 'R Error Handling:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: R 错误处理：
- en: Use the function `tryCatch(expression, error, finally)`
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用函数`tryCatch(expression, error, finally)`
- en: 'In Python:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 中：
- en: 'Use the function `try: expression except: expression finally: expression`'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '使用函数`try: expression except: expression finally: expression`'
- en: If you liked this content, follow my blog for more.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢这个内容，请关注我的博客获取更多信息。
- en: '[](https://gustavorsantos.medium.com/?source=post_page-----5a4d60f3fba6--------------------------------)
    [## Gustavo Santos - Medium'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://gustavorsantos.medium.com/?source=post_page-----5a4d60f3fba6--------------------------------)
    [## Gustavo Santos - Medium'
- en: Read writing from Gustavo Santos on Medium. Data Scientist. I extract insights
    from data to help people and companies…
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阅读 Gustavo Santos 在 Medium 上的文章。数据科学家。我从数据中提取见解，帮助个人和公司……
- en: gustavorsantos.medium.com](https://gustavorsantos.medium.com/?source=post_page-----5a4d60f3fba6--------------------------------)
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: gustavorsantos.medium.com](https://gustavorsantos.medium.com/?source=post_page-----5a4d60f3fba6--------------------------------)
- en: Find me on [LinkedIn](https://www.linkedin.com/in/gurezende/) too.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以在[LinkedIn](https://www.linkedin.com/in/gurezende/)找到我。
- en: Now, I have a [Topmate page](https://topmate.io/gustavo_santos) as well, where
    you can book some time with me if you’d like to talk about Data Science.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我还有一个[Topmate 页面](https://topmate.io/gustavo_santos)，你可以在那里预约时间，如果你想讨论数据科学的话。
- en: Reference
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考
- en: '[](https://www.w3schools.com/python/python_try_except.asp?source=post_page-----5a4d60f3fba6--------------------------------)
    [## Python Try Except'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://www.w3schools.com/python/python_try_except.asp?source=post_page-----5a4d60f3fba6--------------------------------)
    [## Python Try Except'
- en: The try block lets you test a block of code for errors. The except block lets
    you handle the error. The else block lets…
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: try 块让你测试一块代码是否有错误。except 块让你处理错误。else 块让……
- en: www.w3schools.com](https://www.w3schools.com/python/python_try_except.asp?source=post_page-----5a4d60f3fba6--------------------------------)
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: www.w3schools.com](https://www.w3schools.com/python/python_try_except.asp?source=post_page-----5a4d60f3fba6--------------------------------)
- en: '[https://en.wikipedia.org/wiki/Exception_handling](https://en.wikipedia.org/wiki/Exception_handling)'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Exception_handling](https://en.wikipedia.org/wiki/Exception_handling)'
- en: '[](https://www.statology.org/r-trycatch/?source=post_page-----5a4d60f3fba6--------------------------------)
    [## How to Write Your First tryCatch() Function in R - Statology'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://www.statology.org/r-trycatch/?source=post_page-----5a4d60f3fba6--------------------------------)
    [## 如何在 R 中编写你的第一个 tryCatch() 函数 - Statology'
- en: You can use a tryCatch() function in R to return the value of some expression
    or produce a custom message if a warning…
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 你可以使用 `tryCatch()` 函数在 R 中返回某个表达式的值，或者在出现警告时生成自定义消息…
- en: www.statology.org](https://www.statology.org/r-trycatch/?source=post_page-----5a4d60f3fba6--------------------------------)
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: www.statology.org](https://www.statology.org/r-trycatch/?source=post_page-----5a4d60f3fba6--------------------------------)
