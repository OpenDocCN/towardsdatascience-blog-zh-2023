- en: Natural Language Fundamentals — Intro & Language Model Implementation of Sentiment
    Analysis, Machine Translation and Named-Entity Recognition
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/natural-language-fundamentals-intro-implementation-of-sentiment-analysis-machine-translation-c79662e52624](https://towardsdatascience.com/natural-language-fundamentals-intro-implementation-of-sentiment-analysis-machine-translation-c79662e52624)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Multilingual language modeling in the Natural Language space
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@fmnobar?source=post_page-----c79662e52624--------------------------------)[![Farzad
    Mahmoodinobar](../Images/2d75209693b712300e6f0796bd2487d0.png)](https://medium.com/@fmnobar?source=post_page-----c79662e52624--------------------------------)[](https://towardsdatascience.com/?source=post_page-----c79662e52624--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----c79662e52624--------------------------------)
    [Farzad Mahmoodinobar](https://medium.com/@fmnobar?source=post_page-----c79662e52624--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----c79662e52624--------------------------------)
    ·9 min read·Mar 20, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/93e4900e458bc59ccf6ab8f6b69ece8c.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [RetroSupply](https://unsplash.com/@retrosupply) from [Unsplash](https://unsplash.com/photos/kZvmEpyfiJs)
  prefs: []
  type: TYPE_NORMAL
- en: We humans use words, sounds, gestures and symbols to convey complex concepts
    and abstracts to each other in different forms such as speech, writing and signs.
    With the advent of computers and in order to take advantage of these powerful
    machines, we had to come up with ways for computers to understand human communications
    and the existing corpus of knowledge. Hence, the Natural Language Processing (NLP),
    Understanding (NLU) and Generation (NLG) branches of Artificial Intelligence were
    born. Boundaries of these three areas are sometimes unclear and the overall Natural
    Language space encompasses various applications in today’s Computer and Data Science
    world. Probably the most common of such applications are (I) Sentiment Analysis,
    (II) Machine Translation and (III) Named-Entity Recognition (NER), which we will
    define and implement in this post.
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/@fmnobar/membership?source=post_page-----c79662e52624--------------------------------)
    [## Join Medium with my referral link'
  prefs: []
  type: TYPE_NORMAL
- en: Read every story from Farzad (and other writers on Medium). Your membership
    fee directly supports Farzad and other…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: medium.com](https://medium.com/@fmnobar/membership?source=post_page-----c79662e52624--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: In order to implement these three tasks, we will leverage existing “Pre-Trained
    Language Models”. Therefore, let’s first understand what language modeling is.
    I do recommend glancing through the “Language Modeling” section but if you are
    mainly interested in the application and/or implementation, feel free to skip
    it.
  prefs: []
  type: TYPE_NORMAL
- en: Language Modeling
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Language modeling encompasses various methods that use statistics and probability,
    combined with machine learning architectures (such as and especially deep neural
    networks) to determine the likelihood of a sequence of words occurring in a string,
    such as a sentence. Based on the calculated probability, certain decisions can
    be made — for example, a model can generate a string/response to a user-provided
    prompt (such as ChatGPT), perform a text classification to determine whether a
    word in question is a noun, a verb, etc. Thanks to the large corpora of textual
    data available all around us these days, such language models are usually trained
    on vast amounts of textual data. Consequently, such models are also referred to
    as Large Language Models. At this point you may be wondering how this is relevant
    to our post — we are just getting there. These pre-trained language models then
    can be further trained (i.e. fine-tuned) to perform specific tasks, such as sentiment
    analysis, machine translation and named-entity recognition, which we will explore
    in further detail today. Going deeper into the architecture and training strategies
    of language models is beyond the intent of this post, but if you are interested
    in that topic, feel free to visit the post below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/@fmnobar/intro-to-pre-trained-models-in-nlp-6bf7490a49fa?source=post_page-----c79662e52624--------------------------------)
    [## Pre-Trained Models in NLP'
  prefs: []
  type: TYPE_NORMAL
- en: Fundamentals of Pre-Trained Models and their down-stream tasks.
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: medium.com](https://medium.com/@fmnobar/intro-to-pre-trained-models-in-nlp-6bf7490a49fa?source=post_page-----c79662e52624--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Now that we are familiar with what Natural Language space and Language Modeling
    are, let’s go to the fun part of using these models!
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Sentiment Analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Task of identifying the sentiment of a piece of text, such as whether it is
    positive, negative, or neutral, is called Sentiment Analysis. It is used in applications
    such as social media monitoring, customer feedback analysis, and product review
    analysis. As you can imagine, this one is quite useful for a lot of companies.
    For example, a large online retail company would not be able to dedicate the human
    resources required to manually read all the comments about various products. Instead,
    they can run a Sentiment Analysis model on the reviews and analyze the results,
    saving time and money in the process. Next, let’s see how we can implement this.
  prefs: []
  type: TYPE_NORMAL
- en: 1.1\. Sentiment Analysis — Implementation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In this example, we first load a pre-trained langugae model from the Transformers
    library. Then, we use the model to generate sentiment from the input sentence.
    Finally, we test it on two different sentences, one positive and one negative,
    to verify model’s performance. Below are the two sentences that we will be using:'
  prefs: []
  type: TYPE_NORMAL
- en: '`I loved this movie!`, which we expect to be classified as a “Positive” sentiment
    by the model'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`I did not like this movie.`, which we expect to be classified as a “Negative”
    sentiment by the model'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s see how it works!
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Results:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a7b2a502990181b233f5a8c4829fa741.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Results look pretty good and as we expected. If you are interested in a more
    in-depth look at Sentiment Analysis, the following post is for you:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/sentiment-analysis-intro-and-implementation-ddf648f79327?source=post_page-----c79662e52624--------------------------------)
    [## Sentiment Analysis — Intro and Implementation'
  prefs: []
  type: TYPE_NORMAL
- en: Sentiment Analysis using NLTK, scikit-learn and TextBlob
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/sentiment-analysis-intro-and-implementation-ddf648f79327?source=post_page-----c79662e52624--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Let’s talk about Machine Translation next.
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Machine Translation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Task of using computers to translate text from one language to another is called
    Machine Translation. The most well-known example for most users is Google Translate
    — what Google Translate does is called Machine Translation! Applications are plentiful.
    For example, one can read and understand information in other languages.
  prefs: []
  type: TYPE_NORMAL
- en: 2.1\. Machine Translation — Implementation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To implement Machine Translation, we are going to use mBART-50, developed by
    [Facebook AI](https://arxiv.org/pdf/2008.00401.pdf), from the [Transformers](https://huggingface.co/docs/transformers/index)
    library, which is a pre-trained language model for Machine Translation. The steps
    are very similar to what we did in the Sentiment Analysis and are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Install Transformers as follows: `pip install transformers`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Import the library
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Load the pre-trained model
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run example sentences through the model and return the results
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is interesting about mBART-50 is that it is a multilingual Machine Translation
    model, meaning it can translate to and from different languages. Let’s test this
    capability in action, where we translate one sentence to 6 different languages,
    using one model!
  prefs: []
  type: TYPE_NORMAL
- en: '**Pro Tip:** I emphasized the multilingual nature of this language model because
    historically, Neural Machine Translation models used to be able to translate only
    from one specific language to another specific language. For example, we would
    need to train one specific model for translation from English to French and train
    a separate model to translate from English to German. On the other hand, these
    multilingual machine translation models can translate from many languages to many
    languages using one single model, which is quite impressive!'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'In the following code block, we import the libraries, load the models and then
    create the `translator` function, which accepts three arguments: (1) A sentence
    (`source_sentence`), (2) The language of the provided sentence (`source_language`)
    and (3) The language that we would like the sentence to be translated to (`target_language`).
    Then `translator` returns the translation as instructed.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Next, let’s test our function by translating `Multilingual machine translation
    is impressive!` to French, Spanish, Italian, German, Simplified Chinese and Japanese.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Results:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/33ff48d10d8bc93efc50209423b753b2.png)'
  prefs: []
  type: TYPE_IMG
- en: And we see the translations in the target languages in the results! I do not
    personally speak any of these languages but I verified them using Google Translate
    and the translations seem accurate!
  prefs: []
  type: TYPE_NORMAL
- en: Last but not least, let’s look at Named-Entity Recognition.
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Named-Entity Recognition (NER)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Task of identifying and categorizing named entities in text and categorizing
    them into pre-defined classes is called Named-Entity Recognition or NER for short.
    Some examples of these categories are: person names, locations, dates, organizations,
    numbers, etc. You may be wondering why we would need such a model. NER has many
    applications in the Natural Language space. For example, Visa, American Express,
    Amazon, etc. can use NER to identify and black-out sensitive information in a
    customer communication to protect customers’ sensitive information, such as date
    of birth and credit card information. Another application for social media companies
    such as Meta is identifying locations and individual names in comments/posts and
    using them for content recommendation.'
  prefs: []
  type: TYPE_NORMAL
- en: Now that we understand what NER is, let’s implement it and look at the results.
  prefs: []
  type: TYPE_NORMAL
- en: 3.1\. NER — Implementation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In this example, we are going to use [spaCy](https://spacy.io) pre-trained
    model for NER. The implementation is pretty straightforward. We will follow these
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Install and download the required data
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Import the library
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Load the pre-trained tasks, inclusive of NER
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run an example sentence through the model and return the results
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If you need to install spaCy and download the data, you can use the following
    commands ([source](https://spacy.io/usage/models)):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'I ran the installation above using the Command Line Interface. It is as simple
    as (I) opening the Terminal and then (II) running the above two lines. If you
    need a more detailed Command Line tutorial, feel free to check out the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/command-line-interface-cli-tutorial-how-advanced-users-interact-with-computers-28cf88f81ce?source=post_page-----c79662e52624--------------------------------)
    [## Command Line Interface (CLI) Tutorial — How Advanced Users Interact with Computers'
  prefs: []
  type: TYPE_NORMAL
- en: A CLI intro to increase productivity in interacting with computers
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/command-line-interface-cli-tutorial-how-advanced-users-interact-with-computers-28cf88f81ce?source=post_page-----c79662e52624--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Next, let’s implement and apply NER to the following sentence:`Farzad wrote
    this Medium article in March 2023, using an Apple laptop, on a Jupyter notebook!`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Results:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/24a127a3d560d0fab77ace3d9ff9e0d7.png)'
  prefs: []
  type: TYPE_IMG
- en: That’s quite interesting! Let’s talk about the results. The first line identified
    the nouns — I do not personally agree with all of them but still, that is quite
    impressive! The second line has correctly identified “write” and “use” as verbs
    and the third block has identified “Medium” as a location, “March 2023” as a date,
    “Apple” as an organization (this one is interesting since apple could also be
    the name of a fruit but the model recognized the company name, presumably based
    on the context of the sentence) and “Jupyter” as a person (this one needs some
    improvement). There are ways to further train these pre-trained models to ensure
    NER works more accurately for every use case but the point we wanted to articulate
    here was to showcase how these pre-trained language models can be used to accomplish
    complicated tasks such as NER with a reasonable level of accuracy.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this post, we briefly walked through the world of Natural Language Processing
    (NLP), Understanding (NLU) and Generation (NLG) and tried to understand their
    importance by introducing and implementing some of the most common tasks within
    the Natural Language space, using language modeling. We then moved on to the introduction
    and language model implementation of (I) Sentiment Analysis, (II) Machine Translation
    and (III) Named-Entity Recognition (NER) and looked at the impressive results
    of these powerful pre-trained language models in multiple languages.
  prefs: []
  type: TYPE_NORMAL
- en: Thanks for Reading!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you found this post helpful, please [follow me on Medium](https://medium.com/@fmnobar)
    and subscribe to receive my latest posts!
  prefs: []
  type: TYPE_NORMAL
- en: '*(All images, unless otherwise noted, are by the author.)*'
  prefs: []
  type: TYPE_NORMAL
