- en: Navigating the Clustering Landscape
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/navigating-the-clustering-landscape-b7930ac44147](https://towardsdatascience.com/navigating-the-clustering-landscape-b7930ac44147)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: CLUSTERING | MACHINE LEARNING | PYTHON
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A Comparison of Main Clustering Algorithms with Practical Python Examples
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://david-farrugia.medium.com/?source=post_page-----b7930ac44147--------------------------------)[![David
    Farrugia](../Images/082ed61e24c7c26a4ae1c77343a87824.png)](https://david-farrugia.medium.com/?source=post_page-----b7930ac44147--------------------------------)[](https://towardsdatascience.com/?source=post_page-----b7930ac44147--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----b7930ac44147--------------------------------)
    [David Farrugia](https://david-farrugia.medium.com/?source=post_page-----b7930ac44147--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----b7930ac44147--------------------------------)
    ·7 min read·May 29, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/95b6eab856ff3a4e575767f07f2d4ebe.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Aleks Dorohovich](https://unsplash.com/ja/@doctype?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: The field of machine learning is ever-growing and have peeked high interest
    in the recent years. Especially with the current AI hype that’s going on at the
    moment, the mystical world of data science and machine learning have definitely
    benefited from vast public exposure.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, we’re going to direct the spotlight on a fascinating subfield
    of machine learning — clustering.
  prefs: []
  type: TYPE_NORMAL
- en: Let us try to paint a picture, shall we?
  prefs: []
  type: TYPE_NORMAL
- en: Suppose that you’re standing in the midst of a really busy city, surrounded
    by thousands of people. Every single individual in that moment is 100% unique.
    They are their own person — yet, you all have common characteristics or traits
    that connect you as a group. Perhaps its your fashion sense, line of work, political
    or religious beliefs, or even the type of food that you like.
  prefs: []
  type: TYPE_NORMAL
- en: This is the essence of clustering — seeking to find hidden patterns and groupings
    within an ocean of data points. In the world of machine learning, clustering techniques
    are the cartographers of the data universe, mapping out constellations of information
    that would otherwise seem random or disconnected.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, we’re going to dive deep into the main types of clustering
    techniques, shedding light on their unique characteristics, their strengths, and
    their applications. Whether you’re a seasoned data professional or a curious reader,
    I invite you to join me on this exciting expedition.
  prefs: []
  type: TYPE_NORMAL
- en: K-Means Clustering
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let’s imagine for second that we are beekeepers. We have a swarm of bees buzzing
    around and our objective is to group them into K distinct hives (i.e., our clusters).
  prefs: []
  type: TYPE_NORMAL
- en: To start, we randomly pick K bees. These bees will act as our cluster centroids.
  prefs: []
  type: TYPE_NORMAL
- en: Like bees drawn to honey, each bee (data point) will gravitate towards the nearest
    hive (centroid).
  prefs: []
  type: TYPE_NORMAL
- en: After all the bees have found a hive, we’ll determine the new centroid of each
    hive (update centroids). We’ll keep repeating this process until the bees settle
    down and stop switching hives.
  prefs: []
  type: TYPE_NORMAL
- en: And voila, that’s the essence of K-means clustering!
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/20e946c5190d3a24157b1ec8c2053fab.png)'
  prefs: []
  type: TYPE_IMG
- en: K-means Clustering Flowchart. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: '*Pros*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Simple and easy to understand
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Easily scalable
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Efficient in terms of computational cost
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Cons*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You need to specify K in advance
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Sensitive to the initial selection of centroids
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Assumes clusters are spherical and equally sized (which may not always be the
    case)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Perfect Use-Cases
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Market segmentation
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Document clustering
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Image segmentation
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Anomaly detection
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Python Example
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Hierarchical Clustering (Agglomerative Clustering)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Suppose that you’re attending a large family wedding where the familial connections
    are unclear.
  prefs: []
  type: TYPE_NORMAL
- en: Your first task is to identify the immediate family members, like siblings or
    parents and children, and bring them together.
  prefs: []
  type: TYPE_NORMAL
- en: Following this, you hunt for other relations who share a close bond with these
    established groups and incorporate them.
  prefs: []
  type: TYPE_NORMAL
- en: You continue this process, gradually piecing together the whole family and friends
    tapestry until everyone is interconnected.
  prefs: []
  type: TYPE_NORMAL
- en: And voila, that’s the essence of hierarchical clustering!
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/175da4150e35165ce0a466ca7226fb6e.png)'
  prefs: []
  type: TYPE_IMG
- en: Hierarchical Clustering Flowchart. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: Pros
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: No need to specify the number of clusters
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Provides a hierarchy of clusters which can be useful
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Cons
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Computationally expensive for large datasets
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Sensitive to the choice of distance measure
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Perfect Use-Cases
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Gene sequencing
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Social network analysis
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Building taxonomy trees
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Python Example
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Density-Based Spatial Clustering of Applications with Noise (DBSCAN)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Imagine that you’re an avid birdwatcher.
  prefs: []
  type: TYPE_NORMAL
- en: Armed with your trusty pair of binoculars, you go around scanning the horizon
    to spot gatherings of birds in the sky. Each time you spot a bird, you look around
    to see if there’s a specific number of birds (we’ll refer to this concept as the
    minimum points or MinPts) within a given radius (mathematically defined as epsilon).
  prefs: []
  type: TYPE_NORMAL
- en: If your observation checks out, congrats! You’ve identified a cluster of birds!
  prefs: []
  type: TYPE_NORMAL
- en: Following this, you look for more birds that are within reach of this cluster
    and incorporate them into the group. This pattern continues until all the birds
    are either labeled as part of a group or determined to be lone flyers (outliers).
  prefs: []
  type: TYPE_NORMAL
- en: And voila, that’s the essence of DBSCAN!
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/57c867fc2ec63e1eb1ba30f002647a45.png)'
  prefs: []
  type: TYPE_IMG
- en: DBSCAN Clustering Flowchart. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: '*Pros*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: No need to specify the number of clusters.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Can discover clusters of arbitrary shape.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Good at separating high density clusters from low density noise.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Cons*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Not good for data with varying density clusters.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Sensitive to the choice of epsilon and MinPts.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Perfect Use-Cases
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Spatial data analysis
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Anomaly detection
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Image segmentation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Python Example
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Mean Shift Clustering
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Picture yourself being in a pitch-black room and using only a flashlight, your
    goal is to locate your friends.
  prefs: []
  type: TYPE_NORMAL
- en: Once you flick on the flashlight, it illuminates a few individuals nearby. You
    then assess their average (mean) position and manoeuvre your flashlight beam in
    that direction.
  prefs: []
  type: TYPE_NORMAL
- en: You continue to repeat this process, each time adjusting your light towards
    the calculated mean location, until you find yourself amidst your friends.
  prefs: []
  type: TYPE_NORMAL
- en: And voila, that’s the essence of Mean Shift Clustering!
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/067422ea18324623144c6bb74d79cd27.png)'
  prefs: []
  type: TYPE_IMG
- en: Mean Shift Clustering Flowchart. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: '*Pros*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: No need to specify the number of clusters
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Can discover clusters of arbitrary shape
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Cons*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Computationally expensive for large datasets.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The bandwidth parameter can greatly influence the results.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Perfect Use-Cases
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Image segmentation
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Video tracking
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Computer vision
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Python Example
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Spectral Clustering
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Picture yourself as a music conductor tasked with assembling an orchestra from
    a pool of musicians.
  prefs: []
  type: TYPE_NORMAL
- en: You begin by listening to each musician perform. You note the similarity of
    their musical styles to create a sort of “musical compatibility chart” — your
    similarity matrix.
  prefs: []
  type: TYPE_NORMAL
- en: This chart then serves as a template (the harmonic blueprint — calculated using
    the Laplacian method), which you then scrutinise to spot distinct clusters of
    similarity. Mathematically, this is achieved through eigenvalue decomposition.
  prefs: []
  type: TYPE_NORMAL
- en: Ultimately, each musician finds their place in a specific group based on this
    analysis (using K-means clustering).
  prefs: []
  type: TYPE_NORMAL
- en: And voila, that’s the essence of Spectral Clustering!
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/25ef580a5efd36fbd36d54c0cb75375e.png)'
  prefs: []
  type: TYPE_IMG
- en: Spectral Clustering Flowchart. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: '*Pros*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Can discover clusters of arbitrary shape.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Works well for a small number of clusters.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Cons*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Computationally expensive for large datasets.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The choice of similarity measure and number of clusters can greatly influence
    the results.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Perfect Use-Cases
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Image segmentation
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Social network analysis
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Gene expression analysis
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Python Example
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Concluding Remarks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this article, we’ve delved into some of the more significant clustering algorithms
    pivotal to the field of machine learning. We’ve examined how these methods achieve
    their goals, talked about their advantages and disadvantages, and highlighted
    the scenarios where they’re most effective.
  prefs: []
  type: TYPE_NORMAL
- en: Choosing an apt clustering technique is much like choosing the right instrument
    for a specific task. It’s essential to factor in the type of data you’re dealing
    with and the particular problem you’re striving to address. For instance, it would
    be unwise to employ a density-based clustering approach when dealing with hierarchical
    data.
  prefs: []
  type: TYPE_NORMAL
- en: The sphere of clustering in machine learning is a vibrant landscape, teeming
    with possibilities for exploration, discovery, and groundbreaking ideas.
  prefs: []
  type: TYPE_NORMAL
- en: As we persist in probing and grasping this domain, we’re doing more than just
    making data comprehensible; we’re also laying the foundation for pioneering advances
    that could reshape the way we interact with the world around us. So, maintain
    your spirit of exploration, continue enriching your understanding, and never stop
    clustering!
  prefs: []
  type: TYPE_NORMAL
- en: '**Did you enjoy this post? For $5/month, you can become a member to unlock
    unlimited access to Medium. You will be directly supporting me and all your other
    favourite writers on Medium. So huge thanks for that!**'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://david-farrugia.medium.com/membership?source=post_page-----b7930ac44147--------------------------------)
    [## Join Medium with my referral link - David Farrugia'
  prefs: []
  type: TYPE_NORMAL
- en: Get exclusive access to all my ⚡premium⚡ content and all over Medium without
    limits. Support my work by buying me a…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: david-farrugia.medium.com](https://david-farrugia.medium.com/membership?source=post_page-----b7930ac44147--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Want to Get in Touch?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I would love to hear your thoughts on the topic, or anything AI and Data.
  prefs: []
  type: TYPE_NORMAL
- en: Drop me an email at ***davidfarrugia53@gmail.com*** should you wish to get in
    touch.
  prefs: []
  type: TYPE_NORMAL
- en: '[Linkedin](https://www.linkedin.com/in/david-farrugia/)'
  prefs: []
  type: TYPE_NORMAL
