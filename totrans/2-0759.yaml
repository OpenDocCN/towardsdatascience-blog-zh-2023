- en: Use Pandas Data Frames More Effectively with the Top 7 Column Operations
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Pandas 数据框更有效地进行 7 种顶级列操作
- en: 原文：[https://towardsdatascience.com/dominate-pandas-data-frames-with-the-top-7-column-operations-2a11521e9e2d](https://towardsdatascience.com/dominate-pandas-data-frames-with-the-top-7-column-operations-2a11521e9e2d)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/dominate-pandas-data-frames-with-the-top-7-column-operations-2a11521e9e2d](https://towardsdatascience.com/dominate-pandas-data-frames-with-the-top-7-column-operations-2a11521e9e2d)
- en: The complete guide to performing the top 7 Pandas column operations, in different
    ways
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 完整指南，介绍以不同方式执行 7 种顶级 Pandas 列操作
- en: '[](https://federicotrotta.medium.com/?source=post_page-----2a11521e9e2d--------------------------------)[![Federico
    Trotta](../Images/e997e3a96940c16ab5071629016d82fd.png)](https://federicotrotta.medium.com/?source=post_page-----2a11521e9e2d--------------------------------)[](https://towardsdatascience.com/?source=post_page-----2a11521e9e2d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----2a11521e9e2d--------------------------------)
    [Federico Trotta](https://federicotrotta.medium.com/?source=post_page-----2a11521e9e2d--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://federicotrotta.medium.com/?source=post_page-----2a11521e9e2d--------------------------------)[![Federico
    Trotta](../Images/e997e3a96940c16ab5071629016d82fd.png)](https://federicotrotta.medium.com/?source=post_page-----2a11521e9e2d--------------------------------)[](https://towardsdatascience.com/?source=post_page-----2a11521e9e2d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----2a11521e9e2d--------------------------------)
    [Federico Trotta](https://federicotrotta.medium.com/?source=post_page-----2a11521e9e2d--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----2a11521e9e2d--------------------------------)
    ·15 min read·Jul 6, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----2a11521e9e2d--------------------------------)
    ·阅读时间 15 分钟·2023 年 7 月 6 日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/4a4f32645b84448222d2511ae309f680.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4a4f32645b84448222d2511ae309f680.png)'
- en: Image by [Alan](https://pixabay.com/it/users/ad_images-6663717/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=2987596)
    on [Pixabay](https://pixabay.com/it//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=2987596)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Alan](https://pixabay.com/it/users/ad_images-6663717/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=2987596)
    提供，来源于 [Pixabay](https://pixabay.com/it//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=2987596)
- en: When it comes to data analysis, [Pandas](https://pandas.pydata.org/) is the
    most used [Python](/how-to-study-python-for-data-science-888a1ad649ae) library
    to manipulate and prepare the data for further analyses and Machine Learning.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据分析方面，[Pandas](https://pandas.pydata.org/) 是最常用的 [Python](/how-to-study-python-for-data-science-888a1ad649ae)
    库，用于操控和准备数据以进行进一步的分析和机器学习。
- en: The reality is that Pandas is a really flexible library and [can be used even
    to convert file formats](/how-to-convert-a-csv-file-into-an-xlsx-one-with-python-and-pandas-27aabc279d69).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 现实是 Pandas 是一个非常灵活的库，[甚至可以用来转换文件格式](/how-to-convert-a-csv-file-into-an-xlsx-one-with-python-and-pandas-27aabc279d69)。
- en: However, even if we use some Pandas features barely every day, we spend a lot
    of time Googling how to do something in Pandas.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，即使我们几乎每天使用一些 Pandas 功能，我们仍然花费大量时间 Googling 如何在 Pandas 中做某些事情。
- en: I know, I caught you!
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道，我抓住你了！
- en: 'But let’s be honest: some features are difficult to remember, maybe because
    we can reach the same goal with different methods. So, there’s nothing to be ashamed
    of if we Google the same things every day.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 但说实话：一些功能很难记住，也许是因为我们可以用不同的方法达到相同的目标。所以，每天 Google 同样的内容也没有什么可羞愧的。
- en: 'However, saving time is always a good idea. For this reason, in this article,
    we’ll go through the 7 top features to manipulate Pandas columns. This way you
    won''t need to Google them anymore: you just need to save this article (maybe,
    by bookmarking it) and return to it whenever you need it.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，节省时间始终是个好主意。为此，在本文中，我们将探讨操控 Pandas 列的 7 个顶级功能。这样你就不需要再去 Google 查找了：只需保存这篇文章（也许通过收藏它）并在需要时返回查看即可。
- en: 'This is what you’ll find here:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这是你会在这里找到的内容：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: How to create a new Pandas column
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何创建一个新的 Pandas 列
- en: First of all, let’s remember that a Pandas column is also called a [Pandas series](https://pandas.pydata.org/docs/reference/api/pandas.Series.html).
    This means that a Pandas data frame is an ordered collection of Pandas series.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们记住 Pandas 列也被称为 [Pandas 系列](https://pandas.pydata.org/docs/reference/api/pandas.Series.html)。这意味着
    Pandas 数据框是有序的 Pandas 系列集合。
- en: There are a few methods to create a new Pandas column. Let’s see them all.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种方法可以创建新的 Pandas 列。我们来看看它们吧。
- en: Create a Pandas column as a Pandas series
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个 Pandas 列作为 Pandas 系列
- en: 'The correct method to create a Pandas column that is thought to “live” on its
    own is through the Pandas series method like so:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个被认为“独立存在”的 Pandas 列的正确方法是通过 Pandas 系列方法，如下所示：
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: I said “the correct method” because, as we’ve said, a Pandas column is a Pandas
    series. So, if we just need a single column we should use this method if we’d
    like to be “**formally** correct”.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我说“正确的方法”是因为，正如我们所说，Pandas 列是 Pandas 系列。因此，如果我们只需要单列，我们应该使用这种方法，如果我们想要“**正式**正确”。
- en: Create a Pandas column as a Pandas data frame
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个 Pandas 列作为 Pandas 数据框
- en: However, the reality is that we won’t need a column on its own much often.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，现实是我们不会经常需要一个单独的列。
- en: 'So, another way to create a Pandas column is by creating a new Pandas data
    frame with just one column: this way, we could enrich it in a second moment with
    other columns.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，创建 Pandas 列的另一种方法是通过创建一个只有一列的新 Pandas 数据框：这样，我们可以在第二步中用其他列来丰富它。
- en: 'We can do it like so:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以这样做：
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: So, here the difference with the previous example is that, in this case, the
    Pandas column has also the name. In this case, we’ve called it “A”.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，这里与之前的例子不同的是，这次 Pandas 列也有名字。在这种情况下，我们将其命名为“A”。
- en: '[PRE3]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Create a Pandas column as a Pandas data frame, starting from a NumPy array
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从 NumPy 数组开始创建 Pandas 列作为 Pandas 数据框
- en: One of the superpowers of Pandas is that it can “accept” NumPy arrays as input
    values. In other words, we can create a data frame starting from a NumPy array.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas 的超级能力之一是它可以“接受” NumPy 数组作为输入值。换句话说，我们可以从 NumPy 数组创建一个数据框。
- en: 'In the case of a single column, we can create a one-dimensional array and transform
    it into a data frame: this results in a data frame with a single column.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 对于单列的情况，我们可以创建一个一维数组并将其转换为数据框：这将得到一个只有一列的数据框。
- en: 'We can do it like so:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以这样做：
- en: '[PRE4]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: How to add a new column to a Pandas data frame
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何向 Pandas 数据框添加新列
- en: The possibility to add a new column to a Pandas data frame is somehow paired
    with the creation of a new column.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 将新列添加到 Pandas 数据框的可能性与创建新列的过程有某种程度上的关联。
- en: What I mean here is that we first need to create a Pandas data frame, then a
    single Pandas column, then we need to add the column to the data frame.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我的意思是，我们首先需要创建一个 Pandas 数据框，然后是一个单独的 Pandas 列，最后需要将该列添加到数据框中。
- en: Also in this case we have multiple possibilities to do so. Let’s see them all.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们也有多种可能的实现方法。让我们全部查看一下。
- en: 'Adding a new column to a Pandas data frame: the standard method'
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向 Pandas 数据框添加新列：标准方法
- en: The standard method to add a new column to a Pandas data frame is to create
    the data frame, then create a separate column, then add it to the data frame.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 向 Pandas 数据框添加新列的标准方法是先创建数据框，然后创建一个单独的列，最后将其添加到数据框中。
- en: 'We’ll use this method throughout all the following examples. So, here’s how
    we can do so:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在接下来的所有示例中使用这种方法。所以，我们可以这样做：
- en: '[PRE5]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'So, let’s analyze what we’ve done step by step:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们一步一步分析我们所做的：
- en: We’ve created a Pandas data frame with the method `pd.DataFrame()`.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用 `pd.DataFrame()` 方法创建了一个 Pandas 数据框。
- en: We’ve created a new column with `df['B']`, meaning we called this new column
    “B”.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们用 `df['B']` 创建了一个新列，这意味着我们将这个新列命名为“B”。
- en: We’ve assigned the values to the newly created column, with a list of numbers.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们已经将值分配给新创建的列，使用了一个数字列表。
- en: So, what’s another method to create a new column? Is by using **a list of numbers**,
    if we already have a data frame.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，创建新列的另一种方法是什么？如果我们已经有一个数据框，可以使用**数字列表**。
- en: 'Adding a new column to a Pandas data frame: applying functions'
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向 Pandas 数据框添加新列：应用函数
- en: The power of the standard method to add a new column to an existing data frame
    gives us the possibility to create a new column and add it to an existing data
    frame, all in one line of code.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 将新列添加到现有数据框的标准方法使我们能够创建一个新列并将其添加到现有数据框中，所有这些都在一行代码中完成。
- en: 'For example, say that we want to create two new columns as a combination of
    an existing column. We can do so by applying functions to existing columns like
    so:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设我们想创建两个新列作为现有列的组合。我们可以通过将函数应用于现有列来做到这一点，如下所示：
- en: '[PRE6]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'So, here’s what we’ve done:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，这里是我们所做的：
- en: We've created a Pandas column (“A”) as a data frame.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们已经创建了一个 Pandas 列（“A”）作为一个数据框。
- en: We’ve created column “B” by doubling the values of column “A”.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们通过将列“A”的值翻倍来创建了列“B”。
- en: We’ve created column “C” by applying a lambda function to column “A”. In particular,
    in this case, we’re squaring the values of column “A”.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们通过将lambda函数应用于列“A”创建了列“C”。具体来说，在这种情况下，我们是在对列“A”的值进行平方运算。
- en: All of these columns are stored together in a unique data frame.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些列都一起存储在一个唯一的数据框中。
- en: 'Adding a new column to a Pandas data frame: using Pandas series or single Pandas
    columns'
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向Pandas数据框添加新列：使用Pandas系列或单个Pandas列
- en: Of course, we can add columns to a Pandas data frame even when the columns are
    Pandas series or Pandas data frame.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们可以向Pandas数据框中添加列，即使这些列是Pandas系列或Pandas数据框。
- en: 'Here’s how we can do so:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是我们可以做到的：
- en: '[PRE7]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: So, in the above case, we’ve created a Pandas series and, then, we’ve added
    it to the existing data frame by giving it a name.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，在上面的例子中，我们创建了一个Pandas系列，然后通过给它命名将其添加到现有的数据框中。
- en: 'In the case of a Pandas column created as a Pandas data frame, we have:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在作为Pandas数据框创建的Pandas列的情况下，我们有：
- en: '[PRE8]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: And here we are.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样。
- en: '[PRE9]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: How to rename a column in Pandas
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何重命名Pandas列
- en: Renaming a Pandas column (or more than one) is another typical daily task we
    need to perform, but that we often can’t remember.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 重命名Pandas列（或多个列）是我们需要执行的另一个典型的日常任务，但我们常常记不住。
- en: Also, in this case, we have different methods to do so. Let’s see them all.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，在这种情况下，我们有不同的方法来做到这一点。让我们看看它们。
- en: 'How to rename a Pandas column: the rename() method'
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何重命名Pandas列：`rename()`方法
- en: 'We can rename a Pandas column with the `rename()` method like so:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`rename()`方法来重命名Pandas列，如下所示：
- en: '[PRE10]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: So, it’s like we’re using a dictionary. Inside the `rename()` method, in fact,
    we need to pass the argument `columns` and specify the actual name and the new
    name inside curly braces, separating them with a column. Just like we do in dictionaries.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，这就像我们在使用字典。在`rename()`方法中，实际上，我们需要传递参数`columns`，并在大括号中指定实际名称和新名称，用冒号分隔它们。就像我们在字典中做的那样。
- en: 'Of course, we can use this method to rename multiple columns like so:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们可以使用这种方法重命名多个列，如下所示：
- en: '[PRE11]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: And, again, it’s as we’d work with dictionaries.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，这就像我们在使用字典一样。
- en: 'How to rename a Pandas column: the column attribute'
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何重命名Pandas列：`column`属性
- en: 'To rename one Pandas column (or more than one, as we’ll see) we can use the
    `columns` attribute like so:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 要重命名一个Pandas列（或多个列，如我们将看到的），我们可以使用`columns`属性，如下所示：
- en: '[PRE12]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: So, in this case, the `columns` attribute gives us the possibility to use a
    list of strings to rename the columns.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，在这种情况下，`columns`属性让我们可以使用字符串列表来重命名列。
- en: 'How to rename a Pandas column: the set_axis() method'
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何重命名Pandas列：`set_axis()`方法
- en: 'To rename one (or more than one) Pandas column we can use the `set_axis()`
    method like so:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 要重命名一个（或多个）Pandas列，我们可以使用`set_axis()`方法，如下所示：
- en: '[PRE13]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: So, even in this case, we use a list of strings to rename the columns, but here
    we also need to pass the parameters `axis=1` and `inplace=True` because the `set_axis()`
    method sets the axes from zero, so is recreating them. This lets this method rename
    the columns.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，即使在这种情况下，我们也使用字符串列表来重命名列，但这里我们还需要传递参数`axis=1`和`inplace=True`，因为`set_axis()`方法是从零开始设置轴，因此它会重新创建它们。这使得这个方法可以重命名列。
- en: 'How to rename a Pandas column: using lambda functions'
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何重命名Pandas列：使用lambda函数
- en: When we have to deal with strings as in the case of Pandas columns names, we
    can use lambda functions to modify the characters of the text.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们处理字符串（如Pandas列名称的情况）时，我们可以使用lambda函数来修改文本中的字符。
- en: 'For example, we may want (or need) to rename the columns by simply lowering
    the letters. We can do it like so:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可能希望（或需要）通过简单地将字母转为小写来重命名列。我们可以这样做：
- en: '[PRE14]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: And here we are.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样。
- en: How to drop a Pandas column
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何删除Pandas列
- en: Dropping a Pandas column (or more than one) is another task we need to perform
    very often. Maybe because its values are not significant, maybe because its values
    are all `NULL` or for other reasons.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 删除Pandas列（或多个列）是我们经常需要执行的另一个任务。也许是因为它的值不重要，也许是因为它的值都是`NULL`或其他原因。
- en: To perform this task we have two methods. Let’s see them both.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行这个任务，我们有两种方法。让我们看看它们。
- en: 'How to drop a Pandas column: using the drop() method'
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何删除Pandas列：使用drop()方法
- en: The typical method to drop a Pandas column (or more than one) is by using the
    `drop()` method.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 删除Pandas列（或多个列）的典型方法是使用`drop()`方法。
- en: Here the only thing to get in mind is to decide if we want to drop some columns
    and create a new data frame, or if we want to drop them and substitute the current
    data frame.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，唯一需要记住的是决定是否要删除某些列并创建一个新的数据框，或者是否要删除这些列并替换当前的数据框。
- en: 'Let me show the difference:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: So, we’ve dropped the column “A” by using the `drop()` method specifying the
    name of the column we wanted to drop and the axis (`axis=1` in Pandas indicates
    the vertical direction and must be specified).
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: In this case, we've decided to substitute the data frame `df`. So, at the end
    of the process, the data frame `df` hasn’t column “A”.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: 'Instead, if we want to create another data frame, let’s say we call id `df_2`,
    we have to do it like so:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: So, in this case, we’ve dropped two columns and created a new data frame with
    just columns “B” and “C”.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: This may be useful if we think we may need the original data frame `df` in the
    future, for further analyses.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: 'How to drop a Pandas column: using the column index'
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In Pandas, columns can be singled out via the indexes. This means that we can
    drop them using indexes like so:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: So, in this case, we’ve created a new data frame with just columns “C” and “D”
    and we've deleted columns “A” and “B” by using their indexes.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: 'Remembering that in Python we start counting from 0 (so, the first column is
    at index 0 and is column “A”), we have to say that this method may not be optimal
    if we have tens of columns for a simple reason: we should find the one (or the
    ones) we want to drop by counting them, which is subject to errors.'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: How to find unique values in a Pandas column
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Finding unique values in a Pandas column is another task that we may need to
    perform daily, because duplicated values have to be treated in a particular way.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: 'Also in this case we have a couple of methods to do so: one shows the duplicates
    in one column and the other removes them.'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: Let’s see them both.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: 'How to find unique values in a Pandas column: using the value_counts() method
    to find duplicates'
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If we want to see if a Pandas column has duplicated values, and we also want
    to see how much are they, we can use the `value_counts()` like so:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'So, the result here tells that:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: The name of the column is “A” and the types are all “int64”.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We have two 1s.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We have two 3s.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We have one 2.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: So, it shows us the values and tells us how many of them are present in the
    column of our interest.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: 'How to find unique values in a Pandas column: using the drop_duplicates() method
    to drop duplicates'
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If we want to drop the duplicates values in a Pandas column (because we know
    there are duplicates in it) we can use the `drop_duplicates()` method like so:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: So, we have removed the duplicates from column “A”, creating a new Pandas column
    called `unique_values`.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: 'How to find unique values in a Pandas column: studying a data frame'
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: At this point, you may be asking:” *Well, if I have a big data frame with tens
    of columns, how can I know that properly some columns have some duplicates*?”
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: Good question! The thing we can do is to first study the whole data frame.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, we may want to see if any columns have duplicates. We can do it
    like so:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: So, this code returns “True” if there are columns with duplicates and “False”
    if there aren’t.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: 'And how about if we want to know the name of the columns that actually have
    duplicates? We can do it like so:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 那如果我们想知道哪些列实际上有重复项呢？我们可以像这样做：
- en: '[PRE21]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'And, so, the above code shows:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，上面的代码显示了：
- en: The columns with the duplicates.
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含重复项的列。
- en: The values of the duplicates.
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重复项的值。
- en: We can now investigate any further with the `value_counts()` method or drop
    them with the `drop_duplicates()` method.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以进一步调查 `value_counts()` 方法或使用 `drop_duplicates()` 方法删除重复项。
- en: How to transform a Pandas column into a list
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何将 Pandas 列转换为列表
- en: Transforming a Pandas column into a list is a useful feature that can give us
    the possibility to “isolate” all the values from a Pandas column to put them into
    a list. Then, we can do whatever we may need with a list, which is easily manageable
    (iterating, and so on).
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Pandas 列转换为列表是一个有用的特性，它可以让我们“隔离”所有来自 Pandas 列的值，将其放入列表中。然后，我们可以对列表进行任何需要的操作，因为列表很容易管理（如迭代等）。
- en: We have two possibilities to do this transformation.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有两种方法可以进行这个转换。
- en: 'How to transform a Pandas column into a list: using the list() method'
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何将 Pandas 列转换为列表：使用 list() 方法
- en: 'The `list()` method is a built-in Python function that converts an iterable
    object into a list. We can use it like so:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '`list()` 方法是一个内置的 Python 函数，用于将可迭代对象转换为列表。我们可以像这样使用它：'
- en: '[PRE22]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: So, we’ve easily extracted our values and put them into a list.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我们已经轻松地提取了我们的值并将其放入列表中。
- en: 'How to transform a Pandas column into a list: using the to_list() method'
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何将 Pandas 列转换为列表：使用 to_list() 方法
- en: 'To achieve the same result, we can use the `to_list()` method from Pandas.
    But take care: **it’s available from Pandas version 1.2.0 or later**.'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现相同的结果，我们可以使用 Pandas 的 `to_list()` 方法。但请注意：**它在 Pandas 版本 1.2.0 或更高版本中可用**。
- en: 'We can use it like so:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以像这样使用它：
- en: '[PRE23]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: And, of course, we’ve obtained the same result as before.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们得到了与之前相同的结果。
- en: How to sort a Pandas data frame for a column
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何按列对 Pandas 数据框进行排序
- en: There are a lot of situations in which we need to sort our columns. By sorting
    we mean ordering, so we can choose to order the data in ascending or descending
    way.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多情况需要对列进行排序。排序意味着排序，因此我们可以选择按升序或降序排列数据。
- en: We can reach this goal with the following methods.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过以下方法实现这个目标。
- en: 'How to sort a Pandas data frame for a column: using the sort_values() method'
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何按列对 Pandas 数据框进行排序：使用 sort_values() 方法
- en: 'To sort a Pandas data frame for a column, we can use the `sort_values()`like
    so:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 要按列对 Pandas 数据框进行排序，我们可以像这样使用 `sort_values()`：
- en: '[PRE24]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'So, as we can see, the data frame has been sorted with column “A” in ascending
    order. In fact, if we check:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我们可以看到，数据框已按列“A”升序排序。实际上，如果我们检查：
- en: In the initial data frame, in column “A” the number 1 is in the 4th position.
    In column “B”, the number 28 is in the fourth position.
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在初始数据框中，列“A”中的数字 1 位于第 4 个位置。在列“B”中，数字 28 位于第四个位置。
- en: In the sorted data frame, in column “A”, the number 1 is in the first position.
    In column “B”, the number 28 is in the first position.
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在排序后的数据框中，列“A”中的数字 1 位于第一个位置。在列“B”中，数字 28 位于第一个位置。
- en: So, we sort the data frame but we don’t lose the relations between the values
    of the columns.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们对数据框进行排序，但不会丢失列值之间的关系。
- en: 'A very useful feature of this method is that it can sort a column by putting
    `NaNs` as first values. We can do it like so:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 这个方法的一个非常有用的特性是它可以通过将 `NaNs` 作为第一个值来排序列。我们可以像这样做：
- en: '[PRE25]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: And here we are.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 我们到了这里。
- en: 'How to sort a Pandas data frame for a column: using the sort_index() method'
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何按列对 Pandas 数据框进行排序：使用 sort_index() 方法
- en: 'We can also sort a data frame for index value like so:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以按如下方式对数据框进行排序，以根据索引值排序：
- en: '[PRE26]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: And, as we can see, the indexes are ordered (in ascending way).
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所见，索引是有序的（按升序排列）。
- en: Conclusions
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In this article, we’ve seen the top 7 operations on Pandas columns that we perform
    barely every day.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们已经看到了在 Pandas 列上执行的 7 种主要操作，这些操作我们几乎每天都会执行。
- en: This guide will help you save a lot of time if you save it, because we’ve performed
    the same task in different ways so that you won't need to Google them anymore,
    saving a lot of time.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你保存这份指南，它将帮助你节省很多时间，因为我们已经以不同的方式执行了相同的任务，这样你就不需要再谷歌搜索它们了，节省了很多时间。
- en: '![](../Images/5079e3af9eda458328cb258c452fb935.png)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5079e3af9eda458328cb258c452fb935.png)'
- en: Federico Trotta
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 费德里科·特罗塔
- en: Hi, I’m Federico Trotta and I’m a freelance Technical Writer.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 你好，我是费德里科·特罗塔，我是一名自由职业技术作家。
- en: Want to collaborate with me? [Contact me](https://bio.link/federicotrotta).
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 想与我合作吗？ [联系我](https://bio.link/federicotrotta)。
