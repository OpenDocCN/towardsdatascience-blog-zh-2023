["```py\nimport seaborn as sns\n\ndiamonds = sns.load_dataset(\"diamonds\")\ndiamonds.head()\n```", "```py\ndiamonds.columns\n```", "```py\nIndex(['carat', 'cut', 'color', 'clarity', 'depth', 'table', 'price', 'x', \n       'y', 'z'],\n      dtype='object')\n```", "```py\nimport numpy as np\nfrom sklearn.preprocessing import OrdinalEncoder\n\n# Extract feature and target arrays\nX, y = diamonds.drop(\"carat\", axis=1), diamonds[\"carat\"]\n# Select categorical column names\ncats = X.select_dtypes(exclude=np.number).columns.tolist()\n\n# Encode categoricals\nX.loc[:, cats] = OrdinalEncoder().fit_transform(X[cats])\n```", "```py\ny.describe()\n```", "```py\ncount    53940.000000\nmean         0.797940\nstd          0.474011\nmin          0.200000\n25%          0.400000\n50%          0.700000\n75%          1.040000\nmax          5.010000\nName: carat, dtype: float64\n```", "```py\nimport matplotlib.pyplot as plt\nsns.histplot(y)\n\nplt.xlabel(\"Carat\");\n```", "```py\nX.drop(cats, axis=1).describe()\n```", "```py\nsns.histplot(X[\"price\"])\n\nplt.title(\"Histogram of Diamond Carats\")\nplt.xlabel(\"Carat\");\n```", "```py\nsns.boxplot(x=\"cut\", y=\"price\", data=diamonds, whis=2)\n\nplt.xlabel(\"\")\nplt.ylabel(\"Price\");\n```", "```py\nfrom scipy.stats import zscore\n\nzscore(y).abs()[:5]\n```", "```py\n0    1.198168\n1    1.240361\n2    1.198168\n3    1.071587\n4    1.029394\nName: carat, dtype: float64\n```", "```py\nfrom scipy.stats import zscore\n\n# Calculate the abs of zscore and filter above 3\nis_outlier = zscore(y).abs() > 3\noutliers_y = y[is_outlier]\n\nnum_outliers = len(outliers_y)\nprint(f\"The number of outliers: {num_outliers}\")\nprint(f\"Percentage of outliers: {num_outliers / len(y):.3f}\")\n```", "```py\nThe number of outliers: 439\nPercentage of outliers: 0.008\n```", "```py\n# Find the median\nmedian_y = y.median()\n\n# Find the abs value of differences between the median\nabs_diffs = (y - median_y).abs()\n# Take the median of differences\nmad = abs_diffs.median()\n\nmad\n```", "```py\n0.32000000000000006\n```", "```py\nfrom scipy.stats import median_abs_deviation\n\nmedian_abs_deviation(y)\n```", "```py\n0.32000000000000006\n```", "```py\nfrom pyod.models.mad import MAD\n\n# Reshape the target to make it 2D\ny_2d = y.values.reshape(-1, 1)\n# Fit to the target\nmad = MAD().fit(y_2d)\n\n# Extract the inlier/outlier labels\nlabels = mad.labels_\nlabels\n```", "```py\narray([0, 0, 0, ..., 0, 1, 0])\n```", "```py\noutliers_y_mad = y[labels == 1]\n\nnum_outliers = len(outliers_y_mad)\nprint(f\"The number of outliers: {num_outliers}\")\nprint(f\"Percentage of outliers: {num_outliers / len(y):.3f}\")\n```", "```py\nThe number of outliers: 222\nPercentage of outliers: 0.004\n```", "```py\n# Filter for inliers, marked as 0s\ninliers = y[labels == 0]\n\nsns.histplot(inliers)\n\nplt.title(\"Histogram of Diamond Carats After Outliers\")\nplt.xlabel(\"Carat\");\n```"]