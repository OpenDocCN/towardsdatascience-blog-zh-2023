- en: 'Charts that Tell a Story: Turn a Data Visualization into Something More'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 讲述故事的图表：将数据可视化转变为更有意义的东西
- en: 原文：[https://towardsdatascience.com/charts-that-tell-a-story-turn-a-plotly-visualization-into-something-more-a723e427d5aa](https://towardsdatascience.com/charts-that-tell-a-story-turn-a-plotly-visualization-into-something-more-a723e427d5aa)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/charts-that-tell-a-story-turn-a-plotly-visualization-into-something-more-a723e427d5aa](https://towardsdatascience.com/charts-that-tell-a-story-turn-a-plotly-visualization-into-something-more-a723e427d5aa)
- en: '[](https://medium.com/@kurt.klingensmith?source=post_page-----a723e427d5aa--------------------------------)[![Kurt
    Klingensmith](../Images/2249e99f12d10f81598c754b1aaf76cc.png)](https://medium.com/@kurt.klingensmith?source=post_page-----a723e427d5aa--------------------------------)[](https://towardsdatascience.com/?source=post_page-----a723e427d5aa--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----a723e427d5aa--------------------------------)
    [Kurt Klingensmith](https://medium.com/@kurt.klingensmith?source=post_page-----a723e427d5aa--------------------------------)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@kurt.klingensmith?source=post_page-----a723e427d5aa--------------------------------)[![Kurt
    Klingensmith](../Images/2249e99f12d10f81598c754b1aaf76cc.png)](https://medium.com/@kurt.klingensmith?source=post_page-----a723e427d5aa--------------------------------)[](https://towardsdatascience.com/?source=post_page-----a723e427d5aa--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----a723e427d5aa--------------------------------)
    [Kurt Klingensmith](https://medium.com/@kurt.klingensmith?source=post_page-----a723e427d5aa--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----a723e427d5aa--------------------------------)
    ·9 min read·Mar 29, 2023
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----a723e427d5aa--------------------------------)
    ·阅读时间 9 分钟·2023年3月29日
- en: --
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/2d64ae634a4dc6519ffaf708147a18f7.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2d64ae634a4dc6519ffaf708147a18f7.png)'
- en: Photo by [Erik Mclean](https://unsplash.com/@introspectivedsgn?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/bOJC9SwFfQk?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Erik Mclean](https://unsplash.com/@introspectivedsgn?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    在 [Unsplash](https://unsplash.com/photos/bOJC9SwFfQk?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    上拍摄。
- en: Data visualizations convey ideas that dataframes and tables cannot. But effectively
    telling a story through data visualization requires an aesthetically pleasing,
    interpretable chart that provides the context necessary for the visualization
    to stand on its own.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 数据可视化传达了数据框和表格无法表达的想法。然而，通过数据可视化有效讲述故事需要一个具有美感、可解释的图表，这样图表才能提供必要的上下文，自成一体。
- en: Fortunately, Python contains numerous data visualization libraries, such as
    [Plotly Express](https://plotly.com/python/plotly-express/), that quickly create
    charts via a single line of code [1]. While useful, such charts can rarely stand
    alone in a formal publication or survive scrutiny without further context provided;
    a professional, standalone chart that tells a story through data requires a little
    extra work. This article walks through the steps to elevate a data visualization
    to the next level.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，Python 包含了许多数据可视化库，例如 [Plotly Express](https://plotly.com/python/plotly-express/)，可以通过一行代码快速创建图表
    [1]。虽然这些图表很有用，但它们在正式出版物中很少能单独存在，或者在没有提供更多上下文的情况下经受得住审查；一个讲述数据故事的专业、独立图表需要额外的工作。本文介绍了将数据可视化提升到下一个水平的步骤。
- en: 'Code:'
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代码：
- en: Code for this walkthrough is available at the [**GitHub page linked here**](https://github.com/kurtklingensmith/Visualizations).
    Feel free to download the code and follow along in Jupyter notebook — click “code”
    and “Download ZIP” to get the ipynb file.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程的代码可以在 [**GitHub 页面链接**](https://github.com/kurtklingensmith/Visualizations)
    上获取。请随意下载代码，并在 Jupyter notebook 中跟随操作——点击“代码”和“下载 ZIP”即可获取 ipynb 文件。
- en: 1\. Data Preparation and Initial Visualization
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 数据准备和初步可视化
- en: 'The libraries used are:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 使用的库有：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Returning to an old favorite dataset, the [Seaborn library](https://seaborn.pydata.org)’s
    automotive dataset (labeled ‘mpg’) provides great data on vehicle fuel consumption
    during the energy crisis era [2]. This data, via use of the groupby function,
    will provide average vehicle miles per gallon (MPG) by year from 1970 to 1982\.
    Here is the code to load and prepare the dataframe:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 回到一个老牌的数据集，[Seaborn 库](https://seaborn.pydata.org) 的汽车数据集（标记为‘mpg’）提供了能源危机时期的车辆燃料消耗的优质数据
    [2]。通过使用 groupby 函数，这些数据将提供 1970 年至 1982 年间每加仑平均行驶里程（MPG）。以下是加载和准备数据框的代码：
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The dataframe head should look like this:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 数据框的头部应该如下所示：
- en: '![](../Images/b2ceecdcbc0021090490a730dc198cfd.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b2ceecdcbc0021090490a730dc198cfd.png)'
- en: Screenshot by author.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截图。
- en: 'One line of code in plotly express gives the following bar chart:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一行代码在 plotly express 中生成以下柱状图：
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/fa78a65a40c47f0ef7aaecae1899b5c1.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fa78a65a40c47f0ef7aaecae1899b5c1.png)'
- en: Screenshot by author.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截图。
- en: Only a few lines of code were necessary to prepare and visualize the data. But
    would such a visualization be worthy of publication in a magazine or formal business
    report? Probably not.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 仅需几行代码即可准备和可视化数据。但这样的可视化是否值得在杂志或正式商业报告中发表？可能不够。
- en: '2\. The Next Level: Labels, Formats, Colors'
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 下一层级：标签、格式、颜色
- en: 'First, let’s look at color schemes for the chart. Running the following code
    updates the color value and template:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们来看一下图表的颜色方案。运行以下代码将更新颜色值和模板：
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The updated chart now appears like this:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 更新后的图表现在如下所示：
- en: '![](../Images/d5297f43b9abd8713a05848cd7f5bec2.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d5297f43b9abd8713a05848cd7f5bec2.png)'
- en: Screenshot by author.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截图。
- en: 'The first change in the above code was adding the ‘Average MPG’ column to color.
    While technically redundant (the ‘Average MPG’ is already captured in the y-value,
    or bar height), specifying the color as ‘Average MPG’ allows application of a
    color scale to aid in quick interpretation. In this case, the Plotly diverging
    color scale “RdYlGn” maps nicely to the data: less efficient years are red, while
    more efficient years are green, and the in between are orange and yellow. Discover
    other Plotly color schemes [here](https://plotly.com/python/builtin-colorscales/)
    [3].'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码的第一个更改是将“平均 MPG”列添加到颜色中。虽然从技术上讲是多余的（“平均 MPG” 已在 y 值或柱状高度中捕获），但将颜色指定为“平均
    MPG”允许应用颜色刻度以帮助快速解释。在这种情况下，Plotly 的发散颜色刻度“RdYlGn”与数据很好地映射：较低效的年份为红色，而较高效的年份为绿色，中间则是橙色和黄色。在[这里](https://plotly.com/python/builtin-colorscales/)发现其他
    Plotly 颜色方案[3]。
- en: Because the color and y-values are the same, the colorbar that Plotly would
    normally include is redundant; the above code eliminates it. Finally, the code
    changes the default Plotly theme to ‘plotly_white’. Read more about Plotly themes
    [here](https://plotly.com/python/templates/) [4].
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 由于颜色和 y 值相同，Plotly 通常包含的颜色条是多余的；上述代码将其去除。最后，代码将默认的 Plotly 主题更改为“plotly_white”。有关
    Plotly 主题的更多信息，请[点击这里](https://plotly.com/python/templates/) [4]。
- en: '**Note:** If considering colorblind-friendly schemes, read [this Towards Data
    Science Article](/two-simple-steps-to-create-colorblind-friendly-data-visualizations-2ed781a167ec)
    on how to adjust color schemes [5]. For this article, the Red-Yellow-Green is
    retained both as a proof of concept as well as the fact that the MPG information
    is still conveyed by the y-axis (bar height) value.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 如果考虑无色盲友好的方案，请阅读[这篇《Towards Data Science》文章](/two-simple-steps-to-create-colorblind-friendly-data-visualizations-2ed781a167ec)，了解如何调整颜色方案[5]。在这篇文章中，保留了红黄绿颜色方案，既作为概念验证，也因为
    MPG 信息仍通过 y 轴（柱状高度）值传达。'
- en: 3\. Labels
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 标签
- en: 'The next steps label the axes:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的步骤标记轴：
- en: '[PRE4]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Plotly will normally default axis titles to the column title of the data in
    the specified axes, but [**update_xaxes()** and **update_yaxes**()](https://plotly.com/python/axes/)
    allows further customization [6]. Note that MPG is spelled out as “Miles Per Gallon”
    to avoid confusing the viewer with acronyms. Additionally, for the x-axis, the
    “dtick” value is set to 1; this ensures each bar along the x-axis has a model
    year value placed below it.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: Plotly 通常会将轴标题默认为指定轴的数据列标题，但[**update_xaxes()** 和 **update_yaxes()**](https://plotly.com/python/axes/)允许进一步自定义[6]。请注意，MPG
    被拼写为“每加仑英里数”以避免用缩写混淆观众。此外，对于 x 轴，“dtick” 值被设置为 1；这确保了 x 轴上的每个柱状图下方都有一个型号年份值。
- en: 'The following code updates the title:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码更新标题：
- en: '[PRE5]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The function [**update_layout**()](https://plotly.com/python/reference/layout/)
    allows for the addition of a title [7]. Note the text incorporates HTML-style
    code: <b> and </b> create bold text for the contents within; <i> and </i> do the
    same for italicizing; <br> represents a page break; and lastly, <sup> represents
    a superscript for the chart’s subtitle. The \ between text lines in the title
    allows the text block to continue on the next line of code, creating cleaner code
    blocks.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 函数 [**update_layout**()](https://plotly.com/python/reference/layout/) 允许添加标题[7]。请注意，文本包含
    HTML 风格代码：<b> 和 </b> 用于加粗文本；<i> 和 </i> 用于斜体；<br> 代表分页符；最后，<sup> 代表图表副标题的上标。标题中的
    \ 使文本块在下一行代码上继续，从而创建更整洁的代码块。
- en: The font is also adjustable, as is the font’s color. Find other colors easily
    with Google’s [**color picker**](https://g.co/kgs/KHVrPZ) [8].
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 字体也可以调整，字体的颜色也是如此。可以使用 Google 的 [**颜色选择器**](https://g.co/kgs/KHVrPZ) [8] 轻松找到其他颜色。
- en: 'Finally, we use the [**add_annotation**()](https://plotly.com/python/text-and-annotations/)
    function to annotate the data source on our chart [9]:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们使用 [**add_annotation**()](https://plotly.com/python/text-and-annotations/)
    函数在图表上注释数据源[9]：
- en: '[PRE6]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'All of this results in the following:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些最终产生了以下结果：
- en: '![](../Images/1c94f5a63974d98a8b5eb05e4e78b4e4.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1c94f5a63974d98a8b5eb05e4e78b4e4.png)'
- en: Screenshot by author.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截屏。
- en: Note how the chart has a title and subtitle that introduce the context for the
    data, while the axes provide unambiguous labels and the bars’ height and color
    quickly show each year’s average MPG. Additionally, there is a data source reference
    at the bottom. This could be a good stopping point for a chart headed to publication
    but, to show how far a visualization can go, the next section will introduce some
    more options.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 注意图表有标题和副标题，引入了数据的背景，同时轴提供了明确的标签，条形的高度和颜色迅速显示了每年的平均 MPG。此外，底部有数据源参考。这可能是一个适合出版的图表的良好停止点，但为了展示可视化的进一步可能性，下一部分将介绍更多选项。
- en: 4\. Add Annotations
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 添加注释
- en: 'To add more context to the chart, the following code creates a horizontal line
    representing the average MPG from 1970 to 1982 as well as an annotation box describing
    the line:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 为了为图表增加更多背景，以下代码创建了一条表示1970年至1982年平均 MPG 的水平线以及一个描述该线的注释框：
- en: '[PRE7]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'When added to the chart, this yields:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 添加到图表中后，结果如下：
- en: '![](../Images/293e6bbeb1beb33b46ba81e9d296f96e.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/293e6bbeb1beb33b46ba81e9d296f96e.png)'
- en: Screenshot by author.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截屏。
- en: Note how the add_annotation() function allows the creation of a border (bordercolor=‘black’)
    and an arrow. The x and y values in the add_annotation() function position the
    callout and may require some trial and error to get the box at the desired spot.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 注意 `add_annotation()` 函数允许创建边框（bordercolor=‘black’）和箭头。`add_annotation()` 函数中的
    x 和 y 值定位标注框，可能需要一些试验和错误以将框放置在所需的位置。
- en: 'This line and callout box help further emphasize that MPG improved significantly
    in years 1980, 1981, and 1982\. Additionally, it shows that from 1975 to 1979,
    average MPG showed consistent improvement year over year. Suppose it is necessary
    to highlight this period of improvement; it can be done with the following code:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这条线和标注框进一步强调了1980年、1981年和1982年 MPG 的显著提升。此外，它还显示了1975年至1979年期间，平均 MPG 年年稳步提升。如果需要突出显示这段改进时期，可以使用以下代码完成：
- en: '[PRE8]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The function [**add_vrect()**](https://plotly.com/python/horizontal-vertical-shapes/)
    creates a rectangular box that can highlight a specific section of the graph [10];
    in this case, it highlights the period of consistent improvement in the late 1970’s.
    Placement of the add_vrect() code matters; placing it after the add_hline() function
    means it will be over the horizontal line versus under as seen below:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 函数 [**add_vrect()**](https://plotly.com/python/horizontal-vertical-shapes/)
    创建一个矩形框，用于突出显示图表的特定部分[10]；在这种情况下，它突出显示了1970年代末期的一段持续改进的时期。`add_vrect()` 代码的位置很重要；将其放在
    `add_hline()` 函数之后意味着它会在水平线的上方，而不是下面，如下所示：
- en: '![](../Images/29b09c0b41b22b79f53ac6f46a219212.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/29b09c0b41b22b79f53ac6f46a219212.png)'
- en: Screenshot by author.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截屏。
- en: 'It may seem like there’s nothing left to add, but there is one more possibility:
    an explanation for the rise in fuel economy. **Let’s assume the chart is part
    of a study that found decreasing engine sizes directly contributed to improvements
    in MPG**. Fortunately, the Seaborn MPG data includes engine displacement data.
    With some data preparation below as well as some new annotations, the final piece
    is ready for the chart:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 可能看起来没有其他需要添加的内容，但还有一个可能性：解释燃油经济性的提升。**假设该图表是某项研究的一部分，该研究发现发动机尺寸的减小直接促成了每加仑英里数的提升**。幸运的是，Seaborn
    MPG 数据包括发动机排量数据。经过以下的一些数据准备以及一些新的注释，最终的图表准备好了：
- en: '[PRE9]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The data preparation section calculates the average engine displacement in
    the 1970s (70 through 79) as well as the three years from the eighties (80, 81,
    and 82). This is then passed into a text string that is used for the text value
    in the add_annotation() function. The final chart appears as follows:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 数据准备部分计算了1970年代（70到79年）的平均发动机排量以及1980年代的三年（80、81和82年）。这些数据随后被传入文本字符串中，用于 `add_annotation()`
    函数中的文本值。最终图表如下所示：
- en: '![](../Images/c0f396f3f8410dec5b6cec4a7166c491.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c0f396f3f8410dec5b6cec4a7166c491.png)'
- en: Screenshot by author.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 作者截屏。
- en: 'This chart can now stand alone and tell the story of average yearly fuel mileage
    during the energy crisis era. Some final considerations:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这个图表现在可以独立存在，并讲述能源危机时代的年均燃油里程的故事。一些最后的考虑事项：
- en: 'Less is generally more: stop adding to a chart when it’s reached its ability
    to convey the necessary information given the context the chart is presented in.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 少即是多：当图表已经达到能够传达必要信息的能力时，就停止添加内容。
- en: A standalone infographic might need more items, while a chart displayed during
    an oral presentation or as part of a written report would suffice with fewer items.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个独立的信息图可能需要更多的项目，而在口头报告中或作为书面报告的一部分展示的图表，则可以用更少的项目来满足要求。
- en: Color schemes, font choices, and sizes impact readability and accessibility.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 颜色方案、字体选择和尺寸影响可读性和无障碍性。
- en: If the customer cannot understand the mesage of a chart, it’s not the customer’s
    fault.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果客户无法理解图表的含义，那不是客户的错。
- en: 5\. Conclusion
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5\. 结论
- en: Python’s various visualization libraries, to include Plotly Express, offer a
    quick way to generate highly customizable charts that can range from a basic visualization
    to a fully customized standalone product. Building out visualizations with an
    understanding of how to best convey the story results in the most effective messaging.
    Experiment with the code yourself and feel free to [**download the full notebook
    at the GitHub page**](https://github.com/kurtklingensmith/Visualizations).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: Python 的各种可视化库，包括 Plotly Express，提供了一种快速生成高度可定制图表的方法，这些图表可以从基础可视化到完全自定义的独立产品。通过理解如何最好地传达故事来构建可视化，能够产生最有效的传递效果。自己动手尝试代码，并随时
    [**在 GitHub 页面下载完整笔记本**](https://github.com/kurtklingensmith/Visualizations)。
- en: 'Generate The Final Chart in a Single Block of Code:'
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在一个代码块中生成最终图表：
- en: '[PRE10]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'References:'
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考文献：
- en: '[1] Plotly, [Plotly Express in Python](https://plotly.com/python/plotly-express/)
    (2023).'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] Plotly, [Python 中的 Plotly Express](https://plotly.com/python/plotly-express/)
    (2023)。'
- en: '[2] Seaborn, [Seaborn: statistical data visualization](https://seaborn.pydata.org)
    (2023).'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] Seaborn, [Seaborn：统计数据可视化](https://seaborn.pydata.org) (2023)。'
- en: '[3] Plotly, [Built-in continuous color scales in Python](https://plotly.com/python/builtin-colorscales/)
    (2023).'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '[3] Plotly, [Python 中的内置连续颜色比例尺](https://plotly.com/python/builtin-colorscales/)
    (2023)。'
- en: '[4] Plotly, [Theming and templates in Python](https://plotly.com/python/templates/)
    (2023).'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '[4] Plotly, [Python 中的主题和模板](https://plotly.com/python/templates/) (2023)。'
- en: '[5] CR Ferreira, [Two Simple Stemps to Create Colorblind-Friendly Data Visualizations](/two-simple-steps-to-create-colorblind-friendly-data-visualizations-2ed781a167ec)
    (2020), Towards Data Science.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[5] CR Ferreira, [创建色盲友好型数据可视化的两个简单步骤](/two-simple-steps-to-create-colorblind-friendly-data-visualizations-2ed781a167ec)
    (2020)，数据科学前沿。'
- en: '[6] Plotly, [Axes in Python](https://plotly.com/python/axes/) (2023).'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '[6] Plotly, [Python 中的坐标轴](https://plotly.com/python/axes/) (2023)。'
- en: '[7] Plotly, [Layout in Python](https://plotly.com/python/reference/layout/)
    (2023).'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[7] Plotly, [Python 中的布局](https://plotly.com/python/reference/layout/) (2023)。'
- en: '[8] Google, [google color picker](https://g.co/kgs/KHVrPZ) (2023).'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[8] Google, [Google 颜色选择器](https://g.co/kgs/KHVrPZ) (2023)。'
- en: '[9] Plotly, [Text and annotations in Python](https://plotly.com/python/text-and-annotations/)
    (2023)'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '[9] Plotly, [Python 中的文本和注释](https://plotly.com/python/text-and-annotations/)
    (2023)'
- en: '[10] Plotly, [Horizontal and Vertical lines and rectangles in Python](https://plotly.com/python/horizontal-vertical-shapes/)
    (2023).'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '[10] Plotly, [Python 中的水平和垂直线条及矩形](https://plotly.com/python/horizontal-vertical-shapes/)
    (2023)。'
