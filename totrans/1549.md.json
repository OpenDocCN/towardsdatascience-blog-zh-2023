["```py\n# Import libraries\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# Show all columns/rows of the dataframe\npd.set_option(\"display.max_columns\", None)\npd.set_option(\"display.max_rows\", None)\n\n# Read the data\ndf = pd.read_csv('auto-cleaned.csv')\n\n# Return top 5 rows of the dataframe\ndf.head()\n```", "```py\n# Create the scatterplot\nsns.regplot(data = df, x = 'price', y = 'engine-size', fit_reg = False)\nplt.show()\n```", "```py\n# Create the overall correlation\ncorr = np.round(df.corr(numeric_only = True), 2)\n\n# Return correlation only with price\nprice_corr = corr['price'].sort_values(ascending = False)\nprice_corr\n```", "```py\n# Apply value_counts to the df['class'] column\ndf['body-style'].value_counts()\n```", "```py\nsns.FacetGrid(data = df, col = 'body-style').map(plt.scatter, 'price', 'engine-size').add_legend()\nplt.show()\n```", "```py\nbodies = df['body-style'].unique()\n\nfor body in bodies:\n    print(body)\n    print(df.loc[df['body-style'] == body, ['price', 'engine-size']].corr())\n    print()\n```", "```py\ncrosstab = pd.crosstab(df['body-style'], df['num-of-cylinders'])\ncrosstab\n```", "```py\n# Approach 1\n\n# Create the crosstab (similar to previous question)\ncrosstab = pd.crosstab(df['body-style'], df['num-of-cylinders'])\n\n# Normalize the crosstab by row\ncrosstab_normalized = crosstab.apply(lambda x: x/x.sum(), axis = 1)\n\n# Round the results to two decimal places\nround(crosstab_normalized, 2)\n```", "```py\n# Approach 2\n\n# Group by and count occurences using size method\ngrouped_table = df.groupby(['body-style', 'num-of-cylinders']).size()\n\n# Pivot the results using unstack and apply the row normalization\ngrouped_table_normalized = grouped_table.unstack().fillna(0).apply(lambda x: x/x.sum(), axis = 1)\n\n# Round the results to two decimal places\nround(grouped_table_normalized, 2)\n```", "```py\n# Set the figure size\nplt.figure(figsize = (10, 5))\n\n# Create the boxplots\nsns.boxplot(x = df['body-style'], y = df['price'])\nplt.show()\n```", "```py\n# Set the figure size\nplt.figure(figsize = (10, 5))\n\n# Create the boxplots\nsns.boxplot(x = df[df['body-style'] == 'sedan']['num-of-cylinders'], y = df[df['body-style'] == 'sedan']['price'])\nplt.show()\n```"]