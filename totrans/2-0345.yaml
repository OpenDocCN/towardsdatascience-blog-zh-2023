- en: Automated Feature Engineering in Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/automated-feature-engineering-in-python-5733426530bf](https://towardsdatascience.com/automated-feature-engineering-in-python-5733426530bf)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: MACHINE LEARNING | PYTHON | DATA SCIENCE
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A guide to augmenting your dataset with new and informative features using Upgini
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://david-farrugia.medium.com/?source=post_page-----5733426530bf--------------------------------)[![David
    Farrugia](../Images/082ed61e24c7c26a4ae1c77343a87824.png)](https://david-farrugia.medium.com/?source=post_page-----5733426530bf--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5733426530bf--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5733426530bf--------------------------------)
    [David Farrugia](https://david-farrugia.medium.com/?source=post_page-----5733426530bf--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----5733426530bf--------------------------------)
    ·5 min read·May 2, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9bef5b09a779382f78f011904ab77b6f.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Alina Grubnyak](https://unsplash.com/@alinnnaaaa?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: One of the most vital skills of any data scientist or machine learning professional
    is the ability to extract deeper and more meaningful features from any given dataset.
    This concept, more commonly known as feature engineering, is perhaps one of the
    most powerful techniques to master when modelling machine learning algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: Learning from data involves a lot of engineering. Although most of its complexities
    have now been abstracted away by modern high-level tools such as sklearn, there
    still remains the critical need to fully understand the data and shape it into
    the problem that you want to solve.
  prefs: []
  type: TYPE_NORMAL
- en: Extracting better features helps with providing additional (and potentially
    stronger) underlying relationships to the model regarding the business domain
    and its influencing factors.
  prefs: []
  type: TYPE_NORMAL
- en: Needless to say, feature engineering is incredibly time-consuming and exhaustive.
    It requires a lot of creativity, technical expertise, and also in most cases,
    trial and error.
  prefs: []
  type: TYPE_NORMAL
- en: I’ve recently came across a new tool, Upgini. Fitting with the current trend
    on Large Language Models (LLM), Upgini exploits the power of OpenAI’s GPT LLM
    to automate the entire feature engineering process for our dataset.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, we will go through the Upgini package and discuss its functionality.
  prefs: []
  type: TYPE_NORMAL
- en: 'For the purpose of this article, we will be using the Amazon Fine Food Review
    dataset (licensed under CC0: Public Domain).'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://www.kaggle.com/datasets/snap/amazon-fine-food-reviews?sort=votes&source=post_page-----5733426530bf--------------------------------)
    [## Amazon Fine Food Reviews'
  prefs: []
  type: TYPE_NORMAL
- en: Analyze ~500,000 food reviews from Amazon
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: www.kaggle.com](https://www.kaggle.com/datasets/snap/amazon-fine-food-reviews?sort=votes&source=post_page-----5733426530bf--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: 'For more information on the Upgini package, you can visit its GitHub page here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://github.com/upgini/upgini/tree/main?source=post_page-----5733426530bf--------------------------------)
    [## GitHub - upgini/upgini: Data search library for Machine Learning → Easily
    find and add relevant…'
  prefs: []
  type: TYPE_NORMAL
- en: Data search library for Machine Learning → Easily find and add relevant features
    to your ML pipeline from hundreds of…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: github.com](https://github.com/upgini/upgini/tree/main?source=post_page-----5733426530bf--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Getting Started with Upgini
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'First things first, we can install Upgini directly through pip:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'We also load in our dataset:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/84d054dba97a4201c46fede2b0d1a11a.png)'
  prefs: []
  type: TYPE_IMG
- en: Snippet of the result data — Image by author
  prefs: []
  type: TYPE_NORMAL
- en: We also filter our dataset to include reviews that have more than 10 helpfulness
    and were published after 2011–01–01.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: We also transform Helpfulness into a binary variable with 0.50 ratio.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Finally, we create a new column — combined — that will concatenate the summary
    and text into a single column. We also take this opportunity to drop any duplicates.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Feature Search and Enrichment with Upgini
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We are now ready to start searching for new features.
  prefs: []
  type: TYPE_NORMAL
- en: Following from the Upgini documentation, we can start a feature search using
    the FeaturesEnricher object. Within that FeaturesEnricher, we can specify a SearchKey
    (i.e., the column that we want to search for).
  prefs: []
  type: TYPE_NORMAL
- en: 'We can search for the following column types:'
  prefs: []
  type: TYPE_NORMAL
- en: '*email*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*hem*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*IP*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*phone*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*date*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*datetime*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*country*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*post code*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let us import these into Python.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: We can now start a feature start.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: After some time, Upgini presents us with a list of search results — potentially
    relevant features to augment our dataset.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/010dad917d0aea0c4c85c18192732703.png)'
  prefs: []
  type: TYPE_IMG
- en: Snippet of the found features. Image by author
  prefs: []
  type: TYPE_NORMAL
- en: It seems that Upgini calculates the SHAP value for every found feature to measure
    the overall impact of that feature on the data and model quality.
  prefs: []
  type: TYPE_NORMAL
- en: For every returned feature, we also can see and visit its source directly.
  prefs: []
  type: TYPE_NORMAL
- en: The package also evaluates the performance of a model on the original and enriched
    dataset.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ca2bbfc159667e4a29a9d954e30805db.png)'
  prefs: []
  type: TYPE_IMG
- en: Results obtained after enrichment. Image by author
  prefs: []
  type: TYPE_NORMAL
- en: Here we can see that by adding the enriched features, we managed to slightly
    improve the model’s performance. Admittedly, this performance gain is negligible.
  prefs: []
  type: TYPE_NORMAL
- en: Feature Generation using GPT models
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Digging deeper into the documentation, it seems that the FeaturesEnricher also
    accepts another parameter — generate_features.
  prefs: []
  type: TYPE_NORMAL
- en: generate_features allows us to search for and generated feature embeddings for
    text columns. This sounds really promising. We do have text columns — combined
    and ProfileName.
  prefs: []
  type: TYPE_NORMAL
- en: Upgini has two LLMs connected to a search engine — GPT-3.5 from OpenAI and GPT-J
    — from the Upgini documentation
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Let run this enrichment, shall we?
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Upgini found us 222 relevant features. Again, per feature we get a report on
    their SHAP value, source, and its coverage on our data.
  prefs: []
  type: TYPE_NORMAL
- en: This time, we can also note that we have some generated features (i.e., the
    text GPT embeddings features).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/291b224637f69d9f69ff9e7f0b396f35.png)'
  prefs: []
  type: TYPE_IMG
- en: Example of the text embeddings features that were generated. Image by author
  prefs: []
  type: TYPE_NORMAL
- en: And the evaluated performance?
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6c3a8af77a768ec60789a5fd2a77ca09.png)'
  prefs: []
  type: TYPE_IMG
- en: Evaluation metrics. Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: With the newly generated features we see a massive boost in predictive performance
    — an uplift of 0.1\. And the best part is that all of it was fully automated!
  prefs: []
  type: TYPE_NORMAL
- en: 'We definitely want to keep these features, given the massive performance gain
    that we observed. We can do this as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/dba6328edf36d43c4d2736b3ecf4cb86.png)'
  prefs: []
  type: TYPE_IMG
- en: The resultant dataset. Image by author
  prefs: []
  type: TYPE_NORMAL
- en: The result is a dataset composed of 11 features. From this point onwards, we
    can proceed as we normally would with any other machine learning task.
  prefs: []
  type: TYPE_NORMAL
- en: Concluding Remarks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Upgini offers plenty of potential. I’m still trying out its features and getting
    familiar with its different functionality — but so far, it’s proving to be quite
    useful — especially that GPT feature generator!
  prefs: []
  type: TYPE_NORMAL
- en: Let me know your results!
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Amazon Fine Food Reviews Dataset by Stanford Network Analysis Project in Kaggle
    — licensed under CC0: Public Domain.'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://www.kaggle.com/datasets/snap/amazon-fine-food-reviews?sort=votes&source=post_page-----5733426530bf--------------------------------)
    [## Amazon Fine Food Reviews'
  prefs: []
  type: TYPE_NORMAL
- en: Analyze ~500,000 food reviews from Amazon
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: www.kaggle.com](https://www.kaggle.com/datasets/snap/amazon-fine-food-reviews?sort=votes&source=post_page-----5733426530bf--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: '**Did you enjoy this post? For $5/month, you can become a member to unlock
    unlimited access to Medium. You will be directly supporting me and all your other
    favourite writers on Medium. So huge thanks for that!**'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://david-farrugia.medium.com/membership?source=post_page-----5733426530bf--------------------------------)
    [## Join Medium with my referral link - David Farrugia'
  prefs: []
  type: TYPE_NORMAL
- en: Get exclusive access to all my ⚡premium⚡ content and all over Medium without
    limits. Support my work by buying me a…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: david-farrugia.medium.com](https://david-farrugia.medium.com/membership?source=post_page-----5733426530bf--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Want to Get in Touch?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I would love to hear your thoughts on the topic, or anything AI and Data.
  prefs: []
  type: TYPE_NORMAL
- en: Drop me an email at ***davidfarrugia53@gmail.com*** should you wish to get in
    touch.
  prefs: []
  type: TYPE_NORMAL
- en: '[Linkedin](https://www.linkedin.com/in/david-farrugia/)'
  prefs: []
  type: TYPE_NORMAL
