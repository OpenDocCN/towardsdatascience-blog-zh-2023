- en: How to Improve Your ChatGPT Outputs Using Configuration Parameters
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-to-improve-your-chatgpt-outputs-using-configuration-parameters-0eebd575646e](https://towardsdatascience.com/how-to-improve-your-chatgpt-outputs-using-configuration-parameters-0eebd575646e)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ChatGPT, Generative AI
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A focus on configuring the temperature, the Top P, the frequency penalty, and
    the presence penalty directly in your ChatGPT prompts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://alod83.medium.com/?source=post_page-----0eebd575646e--------------------------------)[![Angelica
    Lo Duca](../Images/45aa2e2e504bb3af6d3b8009dc6f030e.png)](https://alod83.medium.com/?source=post_page-----0eebd575646e--------------------------------)[](https://towardsdatascience.com/?source=post_page-----0eebd575646e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----0eebd575646e--------------------------------)
    [Angelica Lo Duca](https://alod83.medium.com/?source=post_page-----0eebd575646e--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----0eebd575646e--------------------------------)
    ·9 min read·Dec 13, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c1db168e5e52dd71355c933addc5f3c2.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Growtika](https://unsplash.com/@growtika?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: I’ve recently been reading a very interesting book by David Clinton, entitled
    [The Complete Obsolete Guide to Generative AI](https://www.manning.com/books/the-complete-obsolete-guide-to-generative-ai),
    published by Manning Publications. In the second chapter, the author describes
    what the main parameters of an AI model are and how to configure them to adapt
    to their needs. The configuration parameters include temperature, Top P value,
    frequency penalty, and presence penalty.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring these parameters could help ChatGPT understand the type of output
    you want to produce. For example, you could set some parameters if you want ChatGPT
    to generate a more deterministic output (strictly related to the input). Instead,
    if you want ChatGPT to be more creative while generating the output, you could
    set other parameters.
  prefs: []
  type: TYPE_NORMAL
- en: 'To understand how the output type works, David Clinton gives an example related
    to weather in his book. A more deterministic output could be: *Today, it’s sunny,
    and the temperature is 30°C*. A more creative output could be: *Today, it’s sunny,
    and you may have a walk*.'
  prefs: []
  type: TYPE_NORMAL
- en: Driven by the descriptions I found in the book, I tried to implement some examples
    myself to see how to apply what was written in the book in a practical case. I
    hope you, too, can benefit from this article.
  prefs: []
  type: TYPE_NORMAL
- en: For those familiar with the OpenAI API, the configuration parameters can be
    passed directly as arguments in the API functions. Instead, using them in the
    ChatGPT web interface is not immediate. In this article, I’ll show you how to
    include these parameters directly in the ChatGPT prompt.
  prefs: []
  type: TYPE_NORMAL
- en: To do practical tests, we will use an imaginary scenario and the free version
    of ChatGPT, which you can find at this link. I remind you that before using ChatGPT,
    you must create an account and read the platform’s usage policies.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this article, we’ll cover:'
  prefs: []
  type: TYPE_NORMAL
- en: Scenario Setup
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Temperature
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Top P value
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Frequency penalty
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Presence penalty
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scenario Setup
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As a scenario, we will use the use case described in the third chapter of my
    book, [Data Storytelling with Generative AI using Python and Altair](https://www.manning.com/books/data-storytelling-with-generative-ai).
    If you are interested, you can download the Python code relating to this scenario
    for free from the book’s [GitHub repository](https://github.com/alod83/Data-Storytelling-with-Generative-AI-Using-Python-and-Altair/tree/main/CaseStudies/population),
    available at this link.
  prefs: []
  type: TYPE_NORMAL
- en: 'Imagine that you want to generate the description associated with the following
    chart:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e4e47a41b045d158a821435fc3cb047c.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: The chart describes a comparison between the population growth in North America
    (NA) and the average value for the rest of the world. The chart shows the difference
    between each year and the baseline, 1960\. There is a gap of 367 million. You
    want ChatGPT to generate a description for your chart.
  prefs: []
  type: TYPE_NORMAL
- en: 'We’ll use the following baseline prompt and then adapt it to the various configurations:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Write a commentary of 200 characters for the following scenario: a comparison
    between the population growth in North America and the rest of the world. There
    is a gap of 367 million in 2020, with North America having the lower value.*'
  prefs: []
  type: TYPE_NORMAL
- en: Temperature
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Temperature defines the amount of randomness used while generating the output.
    It enables the user to adjust the level of creativity and unpredictability of
    the output. Temperature ranges from 0 (highly structured and conservative output)
    to 2 (highly creative and unpredictable output), and the default value is 1.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s try different temperature values for our scenario.
  prefs: []
  type: TYPE_NORMAL
- en: Temperature = 0 (conservative)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Write the following prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Write a commentary of 200 characters for the following scenario using a* ***temperature
    = 0****: a comparison between the population growth in North America and the rest
    of the world. There is a gap of 367 million in 2020, with North America having
    the lower value.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following figure shows a possible output produced by ChatGPT:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9d9e5b8df10e83753b8a13fabe78d4de.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author using the ChatGPT interface
  prefs: []
  type: TYPE_NORMAL
- en: The produced output is very similar to the original text, meaning that the text
    is very conservative.
  prefs: []
  type: TYPE_NORMAL
- en: Temperature = 1 (medium)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Write the following prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Write a commentary of 200 characters for the following scenario using a* ***temperature
    = 1****: a comparison between the population growth in North America and the rest
    of the world. There is a gap of 367 million in 2020, with North America having
    the lower value.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following figure shows a possible output produced by ChatGPT:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8f9684e86545f84cec8e6c69f02aa656.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author using the ChatGPT interface
  prefs: []
  type: TYPE_NORMAL
- en: ChatGPT has introduced something new compared to the original text, including
    the factors that have contributed to this contrast.
  prefs: []
  type: TYPE_NORMAL
- en: Temperature = 2 (high creativity)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Write the following prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Write a commentary of 200 characters for the following scenario using a* ***temperature
    = 2****: a comparison between the population growth in North America and the rest
    of the world. There is a gap of 367 million in 2020, with North America having
    the lower value.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following figure shows a possible output produced by ChatGPT:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/92311fc00fe255a36268f747d1e0316d.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author using the ChatGPT interface
  prefs: []
  type: TYPE_NORMAL
- en: The level of creativity here is high because it includes aspects related to
    society (societal dynamics).
  prefs: []
  type: TYPE_NORMAL
- en: Top P
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Top P is also known as nucleus sampling or penalty-free sampling. It helps to
    control the diversity of the generated text. Use this technique if you want to
    generate responses that don’t completely deviate from the topic. The range is
    between 0 and 1\. A higher Top P makes the output more diverse, while a lower
    value makes the model more deterministic. The default value is 1.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s try different Top P values for our scenario.
  prefs: []
  type: TYPE_NORMAL
- en: Top P = 0.1 (more deterministic)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Write the following prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Write a commentary of 200 characters for the following scenario using a* ***Top
    P = 0.1****: a comparison between the population growth in North America and the
    rest of the world. There is a gap of 367 million in 2020, with North America having
    the lower value.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following figure shows a possible output produced by ChatGPT:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b96bed3812a313957783605a0ecf1235.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author using the ChatGPT interface
  prefs: []
  type: TYPE_NORMAL
- en: The produced output is very similar to the original input prompt.
  prefs: []
  type: TYPE_NORMAL
- en: Top P = 0.9 (more diverse)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Write the following prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Write a commentary of 200 characters for the following scenario using a* ***Top
    P = 0.9****: a comparison between the population growth in North America and the
    rest of the world. There is a gap of 367 million in 2020, with North America having
    the lower value.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following figure shows a possible output produced by ChatGPT:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/65ca789cfb208117c5a960eaa7a73d2b.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author using the ChatGPT interface
  prefs: []
  type: TYPE_NORMAL
- en: Compared to the original prompt, the text is diverse since it contains different
    words.
  prefs: []
  type: TYPE_NORMAL
- en: Frequency Penalty
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Frequency penalty reduces redundant output. This enables you to control the
    trade-off between generating diverse responses and avoiding repetitive patterns.
    The value can range from -2.0 (high repetition) and 2.0 (low repetition).
  prefs: []
  type: TYPE_NORMAL
- en: Let’s try different Frequency Penalty values for our scenario.
  prefs: []
  type: TYPE_NORMAL
- en: Frequency Penalty = -2 (high repetition)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Write the following prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Write a commentary of 200 characters for the following scenario using a* ***Frequency
    Penalty = -2****: a comparison between the population growth in North America
    and the rest of the world. There is a gap of 367 million in 2020, with North America
    having the lower value.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following figure shows a possible output produced by ChatGPT:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d2e886f6f5310584a8fa11fef9f76df5.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author using the ChatGPT interface
  prefs: []
  type: TYPE_NORMAL
- en: The text is very similar to the input prompt.
  prefs: []
  type: TYPE_NORMAL
- en: Frequency Penalty = 0 (neutral)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Write the following prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Write a commentary of 200 characters for the following scenario using a* ***Frequency
    Penalty = 0****: a comparison between the population growth in North America and
    the rest of the world. There is a gap of 367 million in 2020, with North America
    having the lower value.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following figure shows a possible output produced by ChatGPT:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2cbb49a281b329ef540111450a1474ab.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author using the ChatGPT interface
  prefs: []
  type: TYPE_NORMAL
- en: In this case, the text introduces something novel compared to the original text.
  prefs: []
  type: TYPE_NORMAL
- en: Frequency Penalty = 2 (low repetition)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Write the following prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Write a commentary of 200 characters for the following scenario using a* ***Frequency
    Penalty = 2****: a comparison between the population growth in North America and
    the rest of the world. There is a gap of 367 million in 2020, with North America
    having the lower value.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following figure shows a possible output produced by ChatGPT:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3082ff219159a3fabebefe15cc1b521d.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author using the ChatGPT interface
  prefs: []
  type: TYPE_NORMAL
- en: The text is different from the original prompt and introduces many elements
    of novelty.
  prefs: []
  type: TYPE_NORMAL
- en: Presence Penalty
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Presence Penalty controls the repetition of phrases and words in generated texts.
    It prevents the model from repeating the same phrasing or words too often in the
    generated output. The presence penalty ranges from -2 (more flexible while generating
    text) to 2 (strong discouragement in repetition).
  prefs: []
  type: TYPE_NORMAL
- en: It may seem that frequency and presence penalties may overlap. However, they
    represent different concepts.
  prefs: []
  type: TYPE_NORMAL
- en: 'In his book, The Complete Obsolete Guide to Generative AI, David Clinton explains
    the difference:'
  prefs: []
  type: TYPE_NORMAL
- en: The frequency penalty […] discourages the model from repeating the same words
    or phrases too frequently within the generated text. The presence penalty […]
    encourages the model to generate words that were not in the input.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Let’s try different Presence Penalty values for our scenario.
  prefs: []
  type: TYPE_NORMAL
- en: Presence Penalty = -2 (more flexible)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Write the following prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Write a commentary of 200 characters for the following scenario using a* ***Presence
    Penalty = -2****: a comparison between the population growth in North America
    and the rest of the world. There is a gap of 367 million in 2020, with North America
    having the lower value.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following figure shows a possible output produced by ChatGPT:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/bbab777c54419769f2b2fc10c07e025d.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author using the ChatGPT interface
  prefs: []
  type: TYPE_NORMAL
- en: Presence Penalty = 2 (strong discouragement in repetition)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Write the following prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Write a commentary of 200 characters for the following scenario using a* ***Presence
    Penalty = 2****: a comparison between the population growth in North America and
    the rest of the world. There is a gap of 367 million in 2020, with North America
    having the lower value.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following figure shows a possible output produced by ChatGPT:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e1256dc0c33fc44dde7f806f7932d43f.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author using the ChatGPT interface
  prefs: []
  type: TYPE_NORMAL
- en: A high presence penalty value encourages the model to generate new unseen words.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Congratulations! You have just learned how to use the temperature, Top P value,
    frequency penalty, and presence penalty in your ChatGPT prompt!
  prefs: []
  type: TYPE_NORMAL
- en: Keep in mind to set one parameter each time; otherwise, the model could get
    confused.
  prefs: []
  type: TYPE_NORMAL
- en: If you’ve read this far, I’m pretty satisfied for today. Thanks, and see you
    next time :)
  prefs: []
  type: TYPE_NORMAL
- en: Resources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I have elaborated on the theory described in this article from Chapter 2 of
    the book by David Clinton, [The Complete Obsolete Guide to Generative AI](https://www.manning.com/books/the-complete-obsolete-guide-to-generative-ai).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'I have elaborated on the example described in this article from Chapter 3 of
    my book, [Data Storytelling with Generative AI: Using Python and Altair](https://www.manning.com/books/data-storytelling-with-generative-ai).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You may also be interested in…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[](https://medium.com/it-books/book-review-generative-ai-for-data-analytics-5fb9142ef889?source=post_page-----0eebd575646e--------------------------------)
    [## Book Review: Generative AI for Data Analytics'
  prefs: []
  type: TYPE_NORMAL
- en: A preliminary review of the book Generative AI for Data Analytics by Artur Guja,
    Marlena Siwiak, and Marian Siwiak on…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: medium.com](https://medium.com/it-books/book-review-generative-ai-for-data-analytics-5fb9142ef889?source=post_page-----0eebd575646e--------------------------------)
    [](https://medium.com/geekculture/how-to-use-chatgpt-to-convert-text-into-a-powerpoint-presentation-4c152e5a968a?source=post_page-----0eebd575646e--------------------------------)
    [## How to Use ChatGPT to Convert Text into a PowerPoint Presentation
  prefs: []
  type: TYPE_NORMAL
- en: A speedy way to convert a long text to a short PowerPoint Presentation using
    only ChatGPT
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'medium.com](https://medium.com/geekculture/how-to-use-chatgpt-to-convert-text-into-a-powerpoint-presentation-4c152e5a968a?source=post_page-----0eebd575646e--------------------------------)
    [](https://medium.com/it-books/book-review-the-ai-powered-developer-by-nathan-b-crocker-5540d36aed89?source=post_page-----0eebd575646e--------------------------------)
    [## Book Review: The AI-Powered Developer by Nathan B. Crocker'
  prefs: []
  type: TYPE_NORMAL
- en: A preliminary review of the book The AI-Powered Developer by Nathan B. Crocker
    on how to use generative AI tools to…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: medium.com](https://medium.com/it-books/book-review-the-ai-powered-developer-by-nathan-b-crocker-5540d36aed89?source=post_page-----0eebd575646e--------------------------------)
  prefs: []
  type: TYPE_NORMAL
