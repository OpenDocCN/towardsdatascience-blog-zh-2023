["```py\ninstall.packages(\"safestats\")\nlibrary(safestats)\n```", "```py\ndesignObj <- designSafeTwoProportions(\n  na = 1,\n  nb = 1,        # na and nb are of equal size so 1:1\n  alpha = 0.05,  # significance level\n  beta = 0.2,    # risk of type II error\n  delta = 0.05,  # minimal effect we like to detect\n)\n\ndesignObj\n```", "```py\n Safe Test of Two Proportions Design\n\n na±2se, nb±2se, nBlocksPlan±2se = 1±0, 1±0, 4355±180.1204\n              minimal difference = 0.05\n                     alternative = twoSided\n         alternative restriction = none\n                 power: 1 - beta = 0.8\n parameter: Beta hyperparameters = standard, REGRET optimal\n                           alpha = 0.05\ndecision rule: e-value > 1/alpha = 20\n\nTimestamp: 2023-11-15 10:58:37 CET\n\nNote: Optimality of hyperparameters only verified for equal group sizes (na = nb = 1)\n```", "```py\nset.seed(10)\nsuccessProbA = 0.05  # success probability for A 5%\nsuccessProbB = 0.08  # success probability for B 8%\nnTotal = designObj[[\"nPlan\"]][\"nBlocksPlan\"]  # use the nBlocksPlan value as sample size\nya <- rbinom(n = nTotal, size = 1, prob = successProbA)\nyb <- rbinom(n = nTotal, size = 1, prob = successProbB)\n```", "```py\nsafe.prop.test(ya=ya, yb=yb, designObj=designObj)\n```", "```py\n Safe Test of Two Proportions\n\ndata:  ya and yb. nObsA = 4355, nObsB = 4355\n\ntest: Beta hyperparameters = standard, REGRET optimal\ne-value = 77658 > 1/alpha = 20 : TRUE\nalternative hypothesis: true difference between proportions in group a and b is not equal to 0 \n\ndesign: the test was designed with alpha = 0.05\nfor experiments with na = 1, nb = 1, nBlocksPlan = 4355\nto guarantee a power = 0.8 (beta = 0.2)\nfor minimal relevant difference = 0.05 (twoSided) \n```", "```py\npValuesRejected <- c()\neValuesRejected <- c()\nalpha <- 0.05\nealpha <- 1/alpha\n\n# repeat the experiment 1000 times, calculate the p-value and the e-value\nfor (i in seq(1, 1000, by = 1)) {\n  # create data, use the same value of nTotal as before (4355)\n  set.seed(i)\n  ya <- rbinom(n = nTotal, size = 1, prob = 0.05)\n  yb <- rbinom(n = nTotal, size = 1, prob = 0.05)\n\n  # calculate the p-value, H0 rejected if it's smaller than alpha\n  testresultp <- prop.test(c(sum(ya), sum(yb)), n=c(nTotal, nTotal))\n  if (testresultp$p.value < alpha){\n    pValuesRejected <- c(pValuesRejected, 1)\n  } else{\n    pValuesRejected <- c(pValuesRejected, 0)\n  }\n\n  # calculate the e-value, H0 rejected if it's bigger than 1/alpha\n  testresulte <- safe.prop.test(ya=ya, yb=yb, designObj=designObj)\n  if (testresulte[[\"eValue\"]] > ealpha){\n    eValuesRejected <- c(eValuesRejected, 1)\n  } else{\n    eValuesRejected <- c(eValuesRejected, 0)\n  }\n}\n```", "```py\n> sum(pValuesRejected)\n[1] 48\n> sum(eValuesRejected)\n[1] 0\n```"]