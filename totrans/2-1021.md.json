["```py\n# Creating primary axis (CO2 emissions)\nfig, ax1 = plt.subplots(figsize=(15, 9))\nax1.plot(climate_data['Year'], climate_data['CO₂ emissions (billions of tonnes)'],\n         color='steelblue',linewidth=2, label='CO2 emissions (billions of tonnes)')\nax1.set_xlabel('Year',weight='bold',fontsize=11)\nax1.set_ylabel('CO2 Emissions (Billions of Tonnes)',color='blue',weight='bold',fontsize=11)\n\n# Adjusting gridlines on primary y-axis\nax1.grid(color='blue', linestyle='--', linewidth=0.5, alpha=0.3)\n\n# Creating secondary y-axis (relative avg temp)\nax2 = ax1.twinx()\nax2.plot(climate_data['Year'], climate_data['avg temp'],\n         color='salmon', linewidth=2, label='Average Temperature (°C)')\nax2.set_ylabel('Average Temperature (°C)',color='red',weight='bold',fontsize=11)\n\n# Setting x-axis limits for ax\nax1.set_xlim(1850, 2022)\n\n# Setting y-axis limits for both ax1 and ax2\nax1.set_ylim(0, 1.15 * max(climate_data['CO₂ emissions (billions of tonnes)']))\nax2.set_ylim(0.999 * min(climate_data['avg temp']), 16.1)\n\n# Combining legends for both axes\nlines, labels = ax1.get_legend_handles_labels()\nlines2, labels2 = ax2.get_legend_handles_labels()\nax2.legend(lines + lines2, labels + labels2, loc='upper right',fontsize=10)\n\n# Set title\nplt.title('Global CO2 Emissions compared to Average Global Temperature, 1850-2021',weight='bold',fontsize=14)\n\n# Show plot\nplt.show()\n```", "```py\n# Spline for CO2 data\ntheta1 = np.polyfit(climate_data['Year'], \n                    climate_data['CO₂ emissions (billions of tonnes)'],3)\nCO2_spline = theta1[3]+theta1[2]*pow(climate_data['Year'],\n                                     1)+theta1[1]*pow(climate_data['Year'],\n                                                      2)+theta1[0]*pow(climate_data['Year'],3)\n\n#plotting CO2 spline\nax1.plot(climate_data['Year'], CO2_spline,\n         color='blue', linestyle ='dashed', linewidth=2, label=None)\n\n# Spline for temp data\ntheta2 = np.polyfit(climate_data['Year'], \n                    climate_data['avg temp'],3)\ntemp_spline = theta2[3]+theta2[2]*pow(climate_data['Year'],\n                                      1)+theta2[1]*pow(climate_data['Year'],\n                                                       2)+theta2[0]*pow(climate_data['Year'],3)\n```", "```py\n# Adding horizontal constant line at 14C (pre-industrial mean temp)\nax2.axhline(y=14, color='black', linestyle='--',alpha=cnst_alpha)\npre_ind_label = 'Pre-industrial Temperatures'\nax2.text(1882,14.03,pre_ind_label,color='black',alpha=cnst_alpha)\n\n#Adding horizontal constant line at 15.5C (+1.5C Mean Temp)\nax2.axhline(y=15, color='darkgoldenrod', linestyle='--',alpha=cnst_alpha)\nincrease_label1 = '+1°C increase'\nax2.text(1882,15.03,increase_label1,color='darkgoldenrod',alpha=cnst_alpha)\n\n# Adding horizontal constant line at 15C (+1C mean temp)\nax2.axhline(y=15.5, color='red', linestyle='--',alpha=cnst_alpha)\nincrease_label2 = '+1.5°C increase'\nax2.text(1882,15.53,increase_label2,color='red',alpha=cnst_alpha)\n\n#Adding horizontal constant line at 16C (+2C Mean Temp)\nax2.axhline(y=16, color='darkred', linestyle='--',alpha=cnst_alpha)\nincrease_label3 = '+2°C increase'\nax2.text(1882,16.03,increase_label3,color='darkred',alpha=cnst_alpha)\n```", "```py\n#Adding vertical constant line at 1988 (IPCC)\nplt.axvline(x=1988, color='darkgreen',linestyle='--',alpha=cnst_alpha)\nIPCC_label='IPCC (1988)'\nax2.text(1986,13.5,IPCC_label,color='darkgreen',weight='bold',fontsize=10,rotation=90,alpha=cnst_alpha)\n\n#Adding vertical constant line at 1995 (Kyoto)\nplt.axvline(x=1997, color='darkgreen',linestyle='--',alpha=cnst_alpha)\nkyoto_label='Kyoto (1997)'\nax2.text(1995,13.5,kyoto_label,color='darkgreen',weight='bold',fontsize=10,rotation=90,alpha=cnst_alpha)\n\n#Adding vertical constant line at 2015 (Paris)\nplt.axvline(x=2015, color='darkgreen',linestyle='--',alpha=cnst_alpha)\nparis_label='Paris (2015)'\nax2.text(2013,13.5,paris_label,color='darkgreen',weight='bold', fontsize=10,rotation=90,alpha=cnst_alpha)\n```", "```py\n# Specifying regions to shade on the x-axis\nplt.axvspan(1870, 1910, alpha=0.1, color='darkorange', \n            label='Second Industrial Revolution')\nplt.axvspan(1945, 2022, alpha=0.1, color='royalblue', \n            label='The Anthropocene')\n```", "```py\n#adding callouts for key dates\n# Points to annotate (x, y, annotation_text)\ncallouts = [(1886, climate_data.loc[climate_data['Year'] == 1886, 'avg temp'].values[0], 'Automobile \\ninvented'),\n            (1903, climate_data.loc[climate_data['Year'] == 1903, 'avg temp'].values[0], 'Airplane \\ninvented'),\n            (1921, climate_data.loc[climate_data['Year'] == 1921, 'avg temp'].values[0], 'Automobiles in America\\nexceed 10 million'),\n            (1938, climate_data.loc[climate_data['Year'] == 1938, 'avg temp'].values[0], 'Rise in global\\ntemperatures proven;\\nOil discovered in\\nSaudi Arabia'), \n            (1968, climate_data.loc[climate_data['Year'] == 1968, 'avg temp'].values[0], 'Melting ice caps \\npredicted'), \n            (1985, climate_data.loc[climate_data['Year'] == 1985, 'avg temp'].values[0], 'Ozone hole \\ndiscovered'),\n            (1994, climate_data.loc[climate_data['Year'] == 1994, 'avg temp'].values[0], '1st climate change \\ntreaty signed into law'),\n            (2003, climate_data.loc[climate_data['Year'] == 2003, 'avg temp'].values[0], 'European heatwave \\nkills 70,000+'),\n            (2021, climate_data.loc[climate_data['Year'] == 2021, 'avg temp'].values[0], 'EU climate law\\nratified')\n           ]\n\n# Iterate over specified points and add minimal annotations\nfor point in callouts:\n    x_point, y_point, annotation_text = point\n    ax2.annotate(annotation_text, xy=(x_point, y_point), xytext=(x_point - 35, y_point + 0.7),\n                 arrowprops=dict(arrowstyle='-', color='black'),\n                 fontsize=9, weight='bold')  # Set font size for annotation text\n```"]