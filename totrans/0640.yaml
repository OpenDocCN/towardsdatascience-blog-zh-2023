- en: Data Engineering Interview Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[https://towardsdatascience.com/data-engineering-interview-questions-fdef62e46505](https://towardsdatascience.com/data-engineering-interview-questions-fdef62e46505)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Tips to prepare for a job interview
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://mshakhomirov.medium.com/?source=post_page-----fdef62e46505--------------------------------)[![üí°Mike
    Shakhomirov](../Images/bc6895c7face3244d488feb97ba0f68e.png)](https://mshakhomirov.medium.com/?source=post_page-----fdef62e46505--------------------------------)[](https://towardsdatascience.com/?source=post_page-----fdef62e46505--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----fdef62e46505--------------------------------)
    [üí°Mike Shakhomirov](https://mshakhomirov.medium.com/?source=post_page-----fdef62e46505--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ¬∑Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----fdef62e46505--------------------------------)
    ¬∑20 min read¬∑Nov 30, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a7bc9856e987821675426d58096e4630.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Ignacio Amen√°bar](https://unsplash.com/@amenabarladrondeguevara?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: This story aims to shed some light on various data engineering interview scenarios
    and typical discussions. It covers almost every question you might be asked and
    I hope it will be useful for beginner and intermediate-level data practitioners
    during the job interview preparation. Throughout my almost fifteen-year career
    in analytics and data engineering, I interviewed many people and now I would like
    to share my observations with you.
  prefs: []
  type: TYPE_NORMAL
- en: Are data engineering interviews tough? No, not really if you understand what
    you are dealing with. Many companies have tech blogs where they describe their
    stacks and the tech they use. I would recommend doing some research beforehand.
  prefs: []
  type: TYPE_NORMAL
- en: Data engineering interviews are quite simple per se and the job is very rewarding.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The interviews are quite simple indeed as questions follow the same pattern
    typically. The number of **data platform types** [1] is limited to just four and
    that would define the answer helping you to pass. So if we know what we are engineering
    then it‚Äôs not a very big task to answer interview questions correctly.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/data-platform-architecture-types-f255ac6e0b7?source=post_page-----fdef62e46505--------------------------------)
    [## Data Platform Architecture Types'
  prefs: []
  type: TYPE_NORMAL
- en: How well does it answer your business needs? Dilemma of a choice.
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/data-platform-architecture-types-f255ac6e0b7?source=post_page-----fdef62e46505--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Data engineering (DE) interviews are easy to pass unless you are tasked with
    coding. This is a whole different story and usually, this would be the second
    part of the interview process. Below is my collection of DE interview questions
    and answers. Enjoy!
  prefs: []
  type: TYPE_NORMAL
- en: What is your DE like on a day-to-day basis?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Usually hiring managers start the conversation with this simple question. Here
    we would want to demonstrate the abundance of enthusiasm and experience with various
    DE tools and frameworks. Provide some data pipeline examples to decorate your
    answer. It can be a couple of data pipelines you built or a full life cycle project
    with a data warehouse in the centre of this infrastructure. Don‚Äôt call it a tutorial.
    It is always better to say something like‚Ä¶
  prefs: []
  type: TYPE_NORMAL
- en: ‚Äú‚Ä¶ a full-lifecycle project from requirements gathering to data pipeline design
    and go live.‚Äù
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'It looks more professional and this is the impression you would want to create.
    Try to be concise but also be fluent in describing your day-to-day work. For example,
    you can say that you are a student, your main focus is data quality at the moment
    and you designed and built data pipelines to check data using row conditions in
    the first place before loading data into the data platform. Alternatively, you
    could mention that you know how to work with SDKs to load data into the data warehouse,
    etc. You can find some good examples in this article [2]:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/python-for-data-engineers-f3d5db59b6dd?source=post_page-----fdef62e46505--------------------------------)
    [## Python for Data Engineers'
  prefs: []
  type: TYPE_NORMAL
- en: Advanced ETL techniques for beginners
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/python-for-data-engineers-f3d5db59b6dd?source=post_page-----fdef62e46505--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: It is not very difficult. You can say that you have various data sources on
    the left-hand side and you can create data pipelines following this pattern below
    to integrate them into your data warehouse (DWH) solution.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a533b28c5e039871007b44ee56caff97.png)'
  prefs: []
  type: TYPE_IMG
- en: Data warehouse exmaple. Image by author
  prefs: []
  type: TYPE_NORMAL
- en: 'Consider this example of data loading into a BigQuery data warehouse using
    Pandas and google.cloud libraries [3]:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: How do you create data pipelines?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You would want to make clear that you are confident working with both third-party
    ETL tools (Fivetran, Stitch, etc.) and bespoke data connectors you can write yourself.
    A data pipeline is something that extracts, transforms and/or loads data from
    point A into the destination at point B [4].
  prefs: []
  type: TYPE_NORMAL
- en: '[](/data-pipeline-design-patterns-100afa4b93e3?source=post_page-----fdef62e46505--------------------------------)
    [## Data pipeline design patterns'
  prefs: []
  type: TYPE_NORMAL
- en: Choosing the right architecture with examples
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/data-pipeline-design-patterns-100afa4b93e3?source=post_page-----fdef62e46505--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: So all you need is to demonstrate that you know how to do it following three
    main data pipeline design patterns ‚Äî **batch** (aggregate and process in chunks),
    **streaming** (process and load record by record), **change data capture** (CDC,
    identify and capture changes at point A to process and load into B).
  prefs: []
  type: TYPE_NORMAL
- en: CDC and streaming are closely connected.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: For example, we can use MySQL binary log file to move data into our DWH solution
    in real time. It must be used with care and is not always the most cost-effective
    tool for data pipelines but it is worth mentioning this. Keep everything in order
    following the conceptual design diagram. It helps to explain many ETL things.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f319a0d445798a12e7ff1aa554120f2a.png)'
  prefs: []
  type: TYPE_IMG
- en: Conceptual data pipeline design. Image by author
  prefs: []
  type: TYPE_NORMAL
- en: What do you know about data platform design?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In a nutshell, there are four data platform architecture types that would define
    the selection of tools you might want to use while building a pipeline. This is
    the key to this question ‚Äî it helps to choose the right DE tools and techniques.
    Data lakes, warehouses, and lake houses each have their benefits and serve each
    purpose. The fourth architecture type is **Data Mesh** where data management is
    decentralised. **Data Mesh** defines the state when we have different data domains
    (company departments) with their own teams and shared data resources. It might
    seem a bit more chaotic but many companies choose this model to reduce data bureaucracy.
  prefs: []
  type: TYPE_NORMAL
- en: Typically data warehouses offer better data governance compared to data lakes.
    It makes the data stack look modern and flexible due to built-in ANSI-SQL capabilities.
    The shift to a lake or data warehouse would depend primarily on the skillset of
    your users. The Data warehouse solution will enable more interactivity and narrow
    down our choice to a SQL-first product (Snowflake, BigQuery, etc.).
  prefs: []
  type: TYPE_NORMAL
- en: Data lakes are for users with programming skills and we would want to go for
    Python-first products like Databricks, Galaxy, Dataproc, EMR.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: What is data modeling?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Data modelling is an essential part of data engineering as data is being transformed
    using relationships between entities (tables, views, silos, data lakes). You would
    want to demonstrate that you understand how this process works in terms of **the
    conceptual** and **physical** design process. We always start with the concept
    of creating a model for our business process or a data transformation task. Then
    it is followed by a functional model which is a prototype and it aims to prove
    that our conceptual model works for this task. In the end, we will create a physical
    model which contains the final infrastructure including all required physical
    entities and objects. It‚Äôs good to say that it doesn‚Äôt have to be SQL entities
    always. Conceptual data modelling might include all types of data platforms with
    semi-structured data files in the cloud storage. A good example would be a scenario
    when we need to prepare data in the data lake first and then use it to train the
    machine learning (ML) model. I previously wrote about it in this story:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://pub.towardsai.net/orchestrate-machine-learning-pipelines-with-aws-step-functions-d8216a899bd5?source=post_page-----fdef62e46505--------------------------------)
    [## Orchestrate Machine Learning Pipelines with AWS Step Functions'
  prefs: []
  type: TYPE_NORMAL
- en: Advanced-Data Engineering and ML Ops with Infrastructure as Code
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: pub.towardsai.net](https://pub.towardsai.net/orchestrate-machine-learning-pipelines-with-aws-step-functions-d8216a899bd5?source=post_page-----fdef62e46505--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: 'It‚Äôs always good to mention that you are familiar with **templating engines**
    such as **DBT** and **Dataform** that can be used for this task. Why? It helps
    a lot with data transformation **unit tests** [4] and data environments [5], prevents
    human errors and provides better deployment workflows. I previously wrote about
    it here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/continuous-integration-and-deployment-for-data-platforms-817bf1b6bed1?source=post_page-----fdef62e46505--------------------------------)
    [## Continuous Integration and Deployment for Data Platforms'
  prefs: []
  type: TYPE_NORMAL
- en: CI/CD for data engineers and ML Ops
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/continuous-integration-and-deployment-for-data-platforms-817bf1b6bed1?source=post_page-----fdef62e46505--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: What is the difference between Star and Snowflake schema?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Very often job interviewers test your knowledge of data engineering design schemas.
    Try to be concise and say that Star schema is where we can take advantage of super
    large denormalised datasets connected to one fact table. That‚Äôs why it‚Äôs a Star
    database design pattern as it looks like a star. This is more suitable for data
    warehouse OLAP-style analytics pipelines. Data in those datasets is not always
    up-to-date but that‚Äôs fine because we need it to be materialised this way and
    we can update the required fields if needed.
  prefs: []
  type: TYPE_NORMAL
- en: Opposite to a Star schema Snowflake schema design has the same fact table in
    the center but it is linked with many other fact and dimension tables which are
    typically **denormalised.** This schema design is more suitable for OLTP data
    processing when data needs to be always up-to-date and individual rows can be
    pulled fast to use in the application.
  prefs: []
  type: TYPE_NORMAL
- en: On a scale from 1 to 10 how good are your SQL skills?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Make sure you can explain your answer. SQL is a natural dialect to model data
    transformation and create analytics datasets. Working confidently with incremental
    table updates gives you 6 out of 10 straight away. Consider this example below.
    It creates an **incremental** table using MERGE:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'I wrote about advanced techniques before. I think it‚Äôs a good place to start
    the preparation [6]:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/advanced-sql-techniques-for-beginners-211851a28488?source=post_page-----fdef62e46505--------------------------------)
    [## Advanced SQL techniques for beginners'
  prefs: []
  type: TYPE_NORMAL
- en: On a scale from 1 to 10 how good are your data warehousing skills?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/advanced-sql-techniques-for-beginners-211851a28488?source=post_page-----fdef62e46505--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Running SQL unit tests for data transformation scripts and working with custom
    user-defined functions (UDF) [7] would grant you 9 out of 10.
  prefs: []
  type: TYPE_NORMAL
- en: How do I get 10 out of 10 in SQL?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It would be something very tricky and obviously related to your expert knowledge
    of a particular tool, i.e. converting a table into **an array of structs** and
    passing them to UDF.
  prefs: []
  type: TYPE_NORMAL
- en: This is useful when you need to apply a user-defined function (UDF) with some
    complex logic to each row or table.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'You can always consider your table as an array of TYPE STRUCT objects and then
    pass each one of them to UDF. It depends on your logic. For example, I use it
    in purchase stacking to calculate expire times:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: What is the difference between OLAP and OLTP?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Online analytical processing (OLAP) and Online transactional processing (OLTP)
    are data processing systems designed for completely different purposes. OLAP aims
    to aggregate and store the data for analytical purposes such as reporting and
    large-scale data processing, That‚Äôs why denormalised super big tables are seen
    very often here. OLTP processing is different in the way we process data ‚Äî it
    would have a single transaction focus and require lightning-fast data processing.
    Good examples are in-app purchases, managing user accounts and updating store
    content. Data for OLTP is stored in indexed tables connected using the Snowflake
    pattern where dimension tables are mostly normalised.
  prefs: []
  type: TYPE_NORMAL
- en: What data engineering frameworks do you know?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We can‚Äôt know everything. I interviewed a lot of people and it‚Äôs not necessary
    to have experience with all data engineering tools and frameworks. You can name
    a few: **Python ETL (PETL), Bonobo, Apache Airflow, Bubbles, Kestra, Luigi** and
    I previously wrote about the ETL frameworks explosion we witnessed during the
    past couple of years.'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/modern-data-engineering-e202776fb9a9?source=post_page-----fdef62e46505--------------------------------)
    [## Modern Data Engineering'
  prefs: []
  type: TYPE_NORMAL
- en: Platform Specific Tools and Advanced Techniques
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/modern-data-engineering-e202776fb9a9?source=post_page-----fdef62e46505--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: We don‚Äôt need to be super experienced with all frameworks but demonstrating
    confidence is a must.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'In order to demonstrate confidence with various data tools we would want to
    learn at least one or two and then use the basic principles (data engineering
    principles). Using this approach we can answer almost every DE question:'
  prefs: []
  type: TYPE_NORMAL
- en: Why did you do it this way? ‚Äî I got this from basic principles.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Having said this it would be just fine to learn a few things from Apache Airflow
    and demonstrate it with a simple pipeline example. For example, we can run ml_engine_training_op
    after we export data into the cloud storage (bq_export_op) and make this workflow
    run daily or weekly.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9d08e679e0eaf09488813ce519b4a635.png)'
  prefs: []
  type: TYPE_IMG
- en: ML model training using Airflow. Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: Consider this example below.
  prefs: []
  type: TYPE_NORMAL
- en: '*It creates a simple data pipeline graph to export data into a cloud storage
    bucket and then trains the ML model using MLEngineTrainingOperator.*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: What would you use to orchestrate your data pipelines?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'It is important to differentiate the ETL frameworks we can use for data transformation
    and the frameworks we use to orchestrate our data pipelines. You can mention a
    few: **Airflow, Prefect, Dagster, Kestra, Argo, Luigi**. These are the most popular
    ones at the moment. These are open-source projects free to use. However, a good
    answer should indicate that you are capable of performing data pipeline orchestration
    using your own bespoke tools. If you like AWS you can deploy and orchestrate data
    pipelines using CloudFormation (Infrastructure as code) and Step Functions. I
    previously wrote about it here [9]:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/data-pipeline-orchestration-9887e1b5eb7a?source=post_page-----fdef62e46505--------------------------------)
    [## Data Pipeline Orchestration'
  prefs: []
  type: TYPE_NORMAL
- en: Data pipeline management done right simplifies deployment and increases the
    availability and accessibility of data for‚Ä¶
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/data-pipeline-orchestration-9887e1b5eb7a?source=post_page-----fdef62e46505--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: In fact, we don‚Äôt even need Step Functions here as it would be a very platform-specific
    choice. We could use platform-agnostic Terraform (Infrastructure as code) and
    Serverless to deploy microservices with required data pipelines orchestrating
    logic.
  prefs: []
  type: TYPE_NORMAL
- en: What is your programming language?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The answer to this question depends on the company stack. Long story short,
    you won‚Äôt miss it if you answer Python. This one is a coding absolute in DE and
    data science because of its simplicity and the numerous libraries and open-source
    data tools available in the market.
  prefs: []
  type: TYPE_NORMAL
- en: However, don‚Äôt limit yourself with to Python.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: It is always good to be familiar with other languages, i.e. JAVA, JavaScript,
    Scala, Spark and R. R for example is good for data science and is very popular
    among scholars and universities. It is always good to mention Spark. It‚Äôs not
    a language (framework) but it became very popular due to its great scalability
    and capabilities for large-scale data processing [8].
  prefs: []
  type: TYPE_NORMAL
- en: You might not know Spark but if you know Python then you can always use a Spark
    API connector (PySpark).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: What is *args and **kwargs?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Typically, it would be the next one if you named Python in the previous question.
    Answering a question about function arguments is the most common one I ask during
    job interviews. You would want to be ready to answer it and maybe even impress
    your interviewer with a few lines of code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: How good are you with CLI tools and shell scripting?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Cloud vendor command-line tools are based on REST API and enable data engineers
    with a powerful command-line interface to communicate with cloud services endpoints
    to describe and modify resources. Data engineers use CLI tools with bash scripting
    to chain commands. It helps to create powerful scripts and interact with cloud
    services with ease. Consider this example below. It will invoke the AWS Lambda
    function called pipeline-manager:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'We can create something even more powerful to deploy our serverless microservices.
    Consider this example below. It will check if the storage bucket for the lambda
    package exists, upload and deploy our ETL service as a Lambda Function [10]:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: How do you deploy your data pipelines?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are no right or wrong answers but if you say ‚Äú I manually create pipeline
    steps and then deploy them in the cloud using vendor‚Äôs console‚Ä¶‚Äù that wouldn‚Äôt
    be the best answer.
  prefs: []
  type: TYPE_NORMAL
- en: Now the good answer would be to mention scripts. This tells the interviewer
    that you are an intermediate user familiar with shell scripting at a minimum.
    You would want to say that whatever you deploy, can be deployed using bash scripts
    and CLI tools. All major cloud vendors have their command line tools and you would
    want to be at least familiar with one of them.
  prefs: []
  type: TYPE_NORMAL
- en: The optimal way which is often considered as best practice is to deploy your
    pipelines using Infrastructure as code and CI/CD tools [11].
  prefs: []
  type: TYPE_NORMAL
- en: '[](/continuous-integration-and-deployment-for-data-platforms-817bf1b6bed1?source=post_page-----fdef62e46505--------------------------------)
    [## Continuous Integration and Deployment for Data Platforms'
  prefs: []
  type: TYPE_NORMAL
- en: CI/CD for data engineers and ML Ops
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/continuous-integration-and-deployment-for-data-platforms-817bf1b6bed1?source=post_page-----fdef62e46505--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: How good are you with Data Science?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As a data engineer you don‚Äôt need to know all the intricacies of data science
    model training and hypertuning but remember that a good data scientist must be
    a good data engineer. Doesn‚Äôt have to be vice versa but it is always good to demonstrate
    at least some knowledge of basic data science algorithms. For example, you can
    mention that you know how to create linear and logistic regression models. One
    creates quantitative output (a predicted number) when the other one returns a
    simple answer ‚Äî ‚Äúyes‚Äù or ‚Äúno‚Äù (1/0). In fact, all major data science models can
    be easily trained using SQL inside your data warehouse solution.
  prefs: []
  type: TYPE_NORMAL
- en: Let‚Äôs imagine our use case is churn prediction.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Consider **BigQuery ML** where we can create a logistic regression like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: What do you know about data quality and data reliability?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This is always a good question because you might be asked about possible ways
    to ensure data quality in your data platform. It is one of the data engineer‚Äôs
    daily routine jobs to improve data pipelines in terms of data accuracy. Data engineers
    connect data sources and deploy pipelines where data must be extracted and then
    very often it has to be transformed according to business requirements.
  prefs: []
  type: TYPE_NORMAL
- en: We would want to make sure that all required fields exist (data quality) and
    no data is missing (reliability).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: How do we do it? It‚Äôs always good to mention self-fixing pipelines and that
    you know how to deploy them. Data engineers can deploy data quality pipelines
    in a similar way they deploy ETL pipelines. To put it simply, you would want to
    use row conditions for one dataset and based on the outcome deploy a fixing step,
    i.e. extract missing data and load it.
  prefs: []
  type: TYPE_NORMAL
- en: Using row conditions for your datasets aims to ensure data quality.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: All data quality checks can be scheduled as scripts and if any of them fail
    to meet certain conditions then we can send an email notification. It‚Äôs worth
    saying that modern data warehouse solutions allow SQL scripts to do such checks
    but it doesn‚Äôt have to be limited to SQL. Any data check script can be run on
    data in the data lake or anywhere else. It just depends on the type of our data
    platform. Good coding skills are a must in this case so we would want to demonstrate
    that we know how to create a simple patrol application that can scan our data
    depending on where it is located physically.
  prefs: []
  type: TYPE_NORMAL
- en: The SQL-based answer is also good but it would be more suitable for the Data
    Developer role as SQL is often considered the main data querying dialect in analytics.
    Consider this example below. It will use SQL with row conditions to check if there
    are any records with NULL `payment_date`. It will also check for duplicates.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'As a result BigQuery will send an automated email containing the alert:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/333076df44ae7cc144559f8d8999a013.png)'
  prefs: []
  type: TYPE_IMG
- en: Email alert. Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: What algorithm would you use to extract or process a very large dataset?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This question might be a trap if you had previous questions about data transformation
    with Python. If you like Python then you are probably a big fan of the Pandas
    library and you probably already mentioned this during the interview. Well, this
    is the kind of question where you wouldn‚Äôt want to use Pandas. The thing is that
    Pandas doesn‚Äôt work with big datasets very well, especially with data transformation.
    You will always be limited to your machine‚Äôs memory while running data transformations
    in the Pandas data frame.
  prefs: []
  type: TYPE_NORMAL
- en: The right answer would be to mention that if memory is limited then you would
    find a scalable solution for this task. This can be a simple Python **generator**
    and, yes, it can take a lot of time but at least it won‚Äôt fail.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: The optimal answer should include transforming the data using distributed computing
    and ideally some tool that is fast for this purpose and scales well. Spark or
    HIVE-based tools might be a good choice.
  prefs: []
  type: TYPE_NORMAL
- en: When would you use Hadoop in your pipelines?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You would want to mention that Hadoop is an open-source Big Data processing
    framework developed by Apache Foundation and it brings all the benefits of distributed
    data processing. That‚Äôs why it became so popular in data pipelines processing
    large volumes of data. It has its own intrinsic components that aim to ensure
    data quality (HDFS ‚Äî Hadoop Distributed Data System) and scalability (MapReduce).
    Even if you don‚Äôt have experience with Hadoop it should be enough just to mention
    these things as there are a lot of tools built on top of Apache Hadoop, i.e. **Apache
    Pig** (a programming platform that executes Hadoop jobs in MapReduce) or **Apache
    Hive** ‚Äî a data warehouse project where we can use standard SQL dialect to process
    data stored in databases and file systems that integrate with Hadoop.
  prefs: []
  type: TYPE_NORMAL
- en: How would you approach a big data migration project?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'During the job interview, you might be asked this question as interviewers
    would want to understand your experience regarding data migration and approach
    to data validation when it is complete. Here I would recommend starting with business
    requirements. It might be cost-effectiveness, data governance or overall database
    performance. Depending on these requirements we can select the optimal solution
    as a destination point for our migration project. For example, if your current
    data platform is built on a data lake and there are a lot of business stakeholders
    who want to access the data then your choice should be between ANSI-SQL data warehouse
    solutions where we can offer better data governance and granular access controls.
    On the opposite, if our data warehouse solution has cost-effectiveness issues
    related to data storage then migrating or archiving to datalake might be a good
    option. I previously wrote about it here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/geekculture/data-warehouse-dba-tasks-i-do-daily-32d9f823d799?source=post_page-----fdef62e46505--------------------------------)
    [## Data Warehouse DBA Tasks I Do Daily'
  prefs: []
  type: TYPE_NORMAL
- en: Monitoring Activity And Managing Resources Like a Pro Or ‚ÄúMy table‚Ä¶ Where has
    it gone?‚Äù
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: medium.com](https://medium.com/geekculture/data-warehouse-dba-tasks-i-do-daily-32d9f823d799?source=post_page-----fdef62e46505--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Once the migration is complete we would want to validate the data. Data consistency
    is the top priority for data engineers and you would want to demonstrate that
    you know how to validate that no data is lost when the migration is complete.
    For instance, we could calculate the total number of records per partition in
    the data warehouse and then compare it against the number of records in data lake
    partitions. `count(*)` is the least expensive operation but it is very effective
    for data validation and can be run fast. In fact in many DWH solutions `count(*)`
    is free.
  prefs: []
  type: TYPE_NORMAL
- en: Which ETL tools do you know and how is it different from ELT?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Answering this question we would want to demonstrate that we know how to extract,
    transform and load the data not only with third-party tools but also by writing
    our own bespoke data connectors and loaders.
  prefs: []
  type: TYPE_NORMAL
- en: You can start with a quick note that there are managed solutions like Fivetran,
    Stitch, etc. that help with ETL. Don‚Äôt forget to mention their pricing models
    that often are based on the number of records processed.
  prefs: []
  type: TYPE_NORMAL
- en: You don‚Äôt need third-party ETL tools when you know how to code.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Don‚Äôt be shy about saying this phrase. It is fairly easy to create your own
    ETL tool and then load the data into the DWH solution of your choice. Consider
    one of my previous articles where I extract millions of rows of data from MySQL
    or Postgres databases as an example. It explains how to create a robust data connector
    and extract data in chunks in a memory-efficient manner [12]. Things like this
    were designed to be serverless and can be easily deployed and scheduled in the
    cloud.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/building-a-batch-data-pipeline-with-athena-and-mysql-7e60575ff39c?source=post_page-----fdef62e46505--------------------------------)
    [## Building a Batch Data Pipeline with Athena and MySQL'
  prefs: []
  type: TYPE_NORMAL
- en: An End-To-End Tutorial for Beginners
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/building-a-batch-data-pipeline-with-athena-and-mysql-7e60575ff39c?source=post_page-----fdef62e46505--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: We can even create our own bespoke data loading manager if we need to prepare
    and transform data before loading it into the DWH destination using cloud SDKs.
    It‚Äôs a fairly complex application but it‚Äôs worth learning it. Here is the tutorial.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: ‚ÄúWhat is your approach to ‚Ä¶?‚Äù type of question is very common in data engineering
    interviews. Be ready to answer these scenario questions. During the interview,
    you can be asked to design a pipeline or a data platform. That‚Äôs all it is if
    you take a look at the wider picture. Every data platform has its own business
    and functional requirements ‚Äî it‚Äôs always good to put this phrase in and then
    mention that you would select data tools based on these requirements. Decorate
    your answers with data pipeline examples and you will most definitely pass.
  prefs: []
  type: TYPE_NORMAL
- en: Recommended read
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] [https://medium.com/towards-data-science/data-platform-architecture-types-f255ac6e0b7](https://medium.com/towards-data-science/data-platform-architecture-types-f255ac6e0b7)'
  prefs: []
  type: TYPE_NORMAL
- en: '[2] [https://medium.com/towards-data-science/python-for-data-engineers-f3d5db59b6dd](https://medium.com/towards-data-science/python-for-data-engineers-f3d5db59b6dd)'
  prefs: []
  type: TYPE_NORMAL
- en: '[3] [https://towardsdatascience.com/modern-data-engineering-e202776fb9a9](/modern-data-engineering-e202776fb9a9)'
  prefs: []
  type: TYPE_NORMAL
- en: '[4] [https://medium.com/towards-data-science/unit-tests-for-sql-scripts-with-dependencies-in-dataform-847133b803b7](https://medium.com/towards-data-science/unit-tests-for-sql-scripts-with-dependencies-in-dataform-847133b803b7)'
  prefs: []
  type: TYPE_NORMAL
- en: '[5] [https://medium.com/towards-data-science/continuous-integration-and-deployment-for-data-platforms-817bf1b6bed1](https://medium.com/towards-data-science/continuous-integration-and-deployment-for-data-platforms-817bf1b6bed1)'
  prefs: []
  type: TYPE_NORMAL
- en: '[6] [https://towardsdatascience.com/advanced-sql-techniques-for-beginners-211851a28488](/advanced-sql-techniques-for-beginners-211851a28488)'
  prefs: []
  type: TYPE_NORMAL
- en: '[7] [https://cloud.google.com/bigquery/docs/user-defined-functions](https://cloud.google.com/bigquery/docs/user-defined-functions)'
  prefs: []
  type: TYPE_NORMAL
- en: '[8] [https://spark.apache.org/](https://spark.apache.org/)'
  prefs: []
  type: TYPE_NORMAL
- en: '[9] [https://medium.com/towards-data-science/data-pipeline-orchestration-9887e1b5eb7a](https://medium.com/towards-data-science/data-pipeline-orchestration-9887e1b5eb7a)'
  prefs: []
  type: TYPE_NORMAL
- en: '[10] [https://towardsdatascience.com/how-to-become-a-data-engineer-c0319cb226c2](/how-to-become-a-data-engineer-c0319cb226c2)'
  prefs: []
  type: TYPE_NORMAL
- en: '[11] [https://medium.com/towards-data-science/continuous-integration-and-deployment-for-data-platforms-817bf1b6bed1](https://medium.com/towards-data-science/continuous-integration-and-deployment-for-data-platforms-817bf1b6bed1)'
  prefs: []
  type: TYPE_NORMAL
- en: '[12] [https://medium.com/towards-data-science/mysql-data-connector-for-your-data-warehouse-solution-db0d338b782d](https://medium.com/towards-data-science/mysql-data-connector-for-your-data-warehouse-solution-db0d338b782d)'
  prefs: []
  type: TYPE_NORMAL
