["```py\nfrom sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nimport joblib\n\n#import data\niris = load_iris()\nx,y = iris.data, iris.target\nx_train, x_test, y_train, y_test = train_test_split(x, y)\n\n#train and save model\nclr = RandomForestClassifier()\nclr.fit(x_train, y_train)\njoblib.dump(clr, 'model.pkl', compress = 9)\n```", "```py\n%%capture\n!pip install skl2onnx\nfrom skl2onnx import convert_sklearn\nfrom skl2onnx.common.data_types import FloatTensorType\nimport joblib\n```", "```py\nclr = joblib.load('model.pkl')\ninitial_type = [('float_input', FloatTensorType([None, 4]))]\nonx = convert_sklearn(clr, initial_types = initial_type)\nwith open('model.onnx' , 'wb') as f:\n  f.write(onx.SerializeToString()) \n```", "```py\n%%capture\n!pip install onnxruntime\nimport onnxruntime as rt\nimport numpy as np\n```", "```py\ndata = np.array([[5.4, 6.3, 2.6, 7.4], [3.4, 6.2, 7.4, 2.3],[5.2, 6.4, 4.2,5.6]])\n\nsess = rt.InferenceSession('model.onnx')\ninput_name = sess.get_inputs()[0].name\nlabel_name = sess.get_outputs()[0].name\npred_onx = sess.run([label_name], {input_name: data.astype(np.float32)})[0]\nprint(pred_onx)\n```"]