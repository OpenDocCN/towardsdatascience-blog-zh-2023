- en: 5 Steps to Build Beautiful Bar Charts with Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/5-steps-to-build-beautiful-bar-charts-with-python-3691d434117a](https://towardsdatascience.com/5-steps-to-build-beautiful-bar-charts-with-python-3691d434117a)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: How to use the full capabilities of Matplotlib to tell a more compelling story
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://guillaume-weingertner.medium.com/?source=post_page-----3691d434117a--------------------------------)[![Guillaume
    Weingertner](../Images/fbfb34af986a7788394b6033c6954d57.png)](https://guillaume-weingertner.medium.com/?source=post_page-----3691d434117a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----3691d434117a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----3691d434117a--------------------------------)
    [Guillaume Weingertner](https://guillaume-weingertner.medium.com/?source=post_page-----3691d434117a--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----3691d434117a--------------------------------)
    ·7 min read·Jan 23, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a5aac1b4be76c70f2fbd259728b8c68b.png)'
  prefs: []
  type: TYPE_IMG
- en: Average Airlines Delay in US Domestic Flights in 2008 — Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Motivation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Telling a compelling story with data gets way easier when the charts supporting
    this very story are **clear**, **self-explanatory** and **visually pleasing**
    to the audience.
  prefs: []
  type: TYPE_NORMAL
- en: In many cases, substance and form are just equally important.
  prefs: []
  type: TYPE_NORMAL
- en: Great data poorly presented will not catch the attention it deserves while poor
    data presented in a slick way will easily be discredited.
  prefs: []
  type: TYPE_NORMAL
- en: Matplotlib makes it quick and easy to plot data with off-the-shelf functions
    but the fine tuning steps take more effort.
  prefs: []
  type: TYPE_NORMAL
- en: I spent quite some time researching best practices to build compelling charts
    with Matplotlib, so you don’t have to.
  prefs: []
  type: TYPE_NORMAL
- en: In this article I focus on **bar charts** and explain how I stitched together
    the bits of knowledge I found here and there to go from this…
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ac695c7158e02d061dca9dd61eb1be34.png)'
  prefs: []
  type: TYPE_IMG
- en: Average Airlines Delay in US Domestic Flights in 2008 — Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: '… to that:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a5aac1b4be76c70f2fbd259728b8c68b.png)'
  prefs: []
  type: TYPE_IMG
- en: Average Airlines Delay in US Domestic Flights in 2008 — Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: '#0 The Data'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To illustrate the methodology, I used a public dataset about Airlines delay
    in US domestic flights in 2008:'
  prefs: []
  type: TYPE_NORMAL
- en: '2008, “Data Expo 2009: Airline on time data”, [https://doi.org/10.7910/DVN/HG7NV7](https://doi.org/10.7910/DVN/HG7NV7),
    Harvard Dataverse, V1'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Public domain [CC0 1.0](http://creativecommons.org/publicdomain/zero/1.0)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'After importing the necessary packages to read the data and build our graphs,
    I simply grouped the data by months and calculated the mean delay, using the code
    below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The dataset used throughout the article to build the different versions of
    the bar chart is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d6b1eafc16e8ab4721fdc6c137d2f0f9.png)'
  prefs: []
  type: TYPE_IMG
- en: Dataset used in this article — Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: '#1 The Basic Plot'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To be fair, with two lines of code you can already build a bar chart and get
    some basic insights from it.
  prefs: []
  type: TYPE_NORMAL
- en: Admittedly this chart is not the most beautiful, nor is it the most useful as
    key information is lacking, but you can already tell that traveling in December
    will likely result in a delayed flight.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/ac695c7158e02d061dca9dd61eb1be34.png)'
  prefs: []
  type: TYPE_IMG
- en: The most basic bar chart from Matplotlib — Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: '#2 The Essentials'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let’s add a few vital things to our chart to make it more readable to the audience.
  prefs: []
  type: TYPE_NORMAL
- en: '**Grids**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To improve its readability the grids of a graph are essential. Their transparency
    is set to 0.5 so they don’t interfere too much with the data points.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**X-axis and Y-axis reformatting**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I voluntarily added more parameters than necessary here to have a more comprehensive
    view of the fine tuning possibilities. For example, the x-axis did not need a
    major_formatter and a major_locator object as we are only setting up labels, but
    if the reader’s x-axis consists of other figures, than this can come in handy.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Bar labels**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bar labels are added on top of each bar to make the comparison between close
    data points easier and give more details about their actual values.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/924f8adcc67ffc3c209f677fd5ce9f98.png)'
  prefs: []
  type: TYPE_IMG
- en: Adding a few essentials features to our chart — Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: '#3 The Professional Look'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Adding a few more features to our graph will make it look way more professional.
    They will go on top of any graphs (not only bar charts) and are independent of
    the data we are using in this article.
  prefs: []
  type: TYPE_NORMAL
- en: 'Thanks to the code snippet below, these adjustments will take little to no
    effort to implement. Author’s advice: save it and re-use it at will.'
  prefs: []
  type: TYPE_NORMAL
- en: The reader can tweak them to create their own visual identity.
  prefs: []
  type: TYPE_NORMAL
- en: '**Spines**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The spines make up the box visible around the graph. They are removed, except
    for the right one which is set to be a bit thicker.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Red line and rectangle on top**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A red line and rectangle are added above the title to nicely isolate the graph
    from the text above it.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Title and subtitle**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is a graph without a title to introduce it?
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The subtitle can be used to further explain the content or even present a first
    conclusion.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Source** A must have, in all charts ever produced.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Margin adjustments**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The margins surrounding the graph area are adjusted to make sure all the space
    available is used.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**White background**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting a white background (from transparent by default) will be useful when
    sending the chart via emails, Teams or any other tool, where a transparent background
    can be problematic.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/ad040c67c94d53bcb93cd66782a93264.png)'
  prefs: []
  type: TYPE_IMG
- en: Our visual identity applied to the chart makes it neater — Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: '#4 The Color Gradient'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The graph as we left it in the previous section is neat and tidy and ready to
    be included in a presentation. Playing on the color of the bars and adding a gradient
    to better visualize the variations is not essential but will add an appealing
    feature to it.
  prefs: []
  type: TYPE_NORMAL
- en: This use case does not necessarily have the best documentation online but is
    actually not too hard to implement with the *LinearSegmentedColormap* and *Normalize*
    functions of Matplotlib.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/3d34ed9be4d2f9e36c72a49e2c288b15.png)'
  prefs: []
  type: TYPE_IMG
- en: Still the same bar chart with an extra color feature — Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: '#5 The Final Touch'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To get to the end result, introduced at the beginning of the article, the only
    thing left to do is implementing these few extra components:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Average data line**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Showing the average data line on the graph is a useful way to help the audience
    quickly figure out what is going on.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Second color scale**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thanks to a second color scale we highlight data above average (or any threshold)
    to make the visualization easier to grasp in a short amount of time.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Legend**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When we added a second color scale, we introduced the need for a legend on our
    chart.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/a5aac1b4be76c70f2fbd259728b8c68b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The final product: the graph is easily readable — Image by Author'
  prefs: []
  type: TYPE_NORMAL
- en: '#6 Final Thoughts'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The intent of this article was to share the knowledge gathered here and there
    to build a more compelling bar chart using Matplotlib. I tried to make it as practical
    as possible with re-usable code snippets.
  prefs: []
  type: TYPE_NORMAL
- en: I am sure there are other adjustments to be made that I did not think of. If
    you have any improvement ideas, feel free to comment and make this article more
    useful to all!
  prefs: []
  type: TYPE_NORMAL
- en: This article only focused on **bar charts**, stay tuned for more!
  prefs: []
  type: TYPE_NORMAL
- en: '*Thanks for reading all the way to the end of the article!'
  prefs: []
  type: TYPE_NORMAL
- en: Feel free to leave a message below, or reach out to me through* [*LinkedIn*](https://www.linkedin.com/in/guillaume-weingertner-a4a27972/)
    *if you have any questions / remarks!*
  prefs: []
  type: TYPE_NORMAL
