- en: 'My First Week of the #30DayMapChallange'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/my-first-week-of-the-30daymapchallange-1bef0646c88e](https://towardsdatascience.com/my-first-week-of-the-30daymapchallange-1bef0646c88e)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/d9f4e2b84a00fc0fbb83821ed61c4183.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by the Author.
  prefs: []
  type: TYPE_NORMAL
- en: 'My personal take on the first week of the #30DayMapChallange, a daily social
    challenge aimed at designing thematic maps every day in November.'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@janosovm?source=post_page-----1bef0646c88e--------------------------------)[![Milan
    Janosov](../Images/77b62460041f66ec4585a81baef81a03.png)](https://medium.com/@janosovm?source=post_page-----1bef0646c88e--------------------------------)[](https://towardsdatascience.com/?source=post_page-----1bef0646c88e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----1bef0646c88e--------------------------------)
    [Milan Janosov](https://medium.com/@janosovm?source=post_page-----1bef0646c88e--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----1bef0646c88e--------------------------------)
    ·5 min read·Nov 7, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: Since 2019, the Geographic Information System (GIS) and spatial analytics community
    have been quite busy each November — thanks to a fun challenge called the [#30DayMapChallange](https://30daymapchallenge.com).
    Each year, this challenge has a thematic schedule, proposing a topic that should
    be the primary directive for map visualisation to be posted on that particular
    day. While the issues certainly mean a constraint, they also help participants
    to find mutual interest, share data sources, and express individual styles visually
    and technologically.
  prefs: []
  type: TYPE_NORMAL
- en: Here, I would like to briefly overview my first week of this challenge, detailing
    and showing the different maps I created — usually in Python.
  prefs: []
  type: TYPE_NORMAL
- en: '*In this article, all images were created by the author.*'
  prefs: []
  type: TYPE_NORMAL
- en: Day 1 — Points
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first day of this challange usually goes for the most simple geometry of
    them all — points. To create my POI map, I used [NASA’s Open Data Portal’s Meteorite
    Landing data](https://lnkd.in/dC-KWjyw). This dataset contains about 40k observations,
    which, when placed on a map, show a remarkable correlation with population densities.
    So either meteorites target inhabited lands, or we have more data on meteorites
    where there are more people to find them, right?
  prefs: []
  type: TYPE_NORMAL
- en: To create this (interactive) map, I used Python, in particular, Folium.
  prefs: []
  type: TYPE_NORMAL
- en: 'On the visualization, I sized each dot marker, corresponding to one meteorite,
    based on its recorded mass in grams, which ranges from 0.01 g to 60,000 kg or
    60 tons. By the way, this 60-ton giant Hoba and was found in 1920 in Grootfonteinn,
    Namibia. Then, I coloured each marker based on the time of its discovery. Fun
    fact: the first recorded meteorite, Nōgata (472g), was found in Fukuoka Prefecture,
    Japan, in 861, shortly after the impact. After this observation, there is nothing
    in the data for centuries in the database. Then, finally, Elbogen came in 1399
    (107000.0), and then, Rivolta de Bassi (103.3g) in 1490 and Ensisheim (127000.0g)
    in 1491\. Looking at later periods in the data set, it turns out that 35% of the
    meteorites were recorded after 2000 and 98% after 1899.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1d7b3c38b5985a4642443e6438874cfb.png)'
  prefs: []
  type: TYPE_IMG
- en: Day 1 — Points
  prefs: []
  type: TYPE_NORMAL
- en: Day 2 — Lines
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'After Points, naturally, comes lines (or LineStrings, if I want to be specific).
    As a network scientist and a geospatial data scientist, my choice was obvious:
    visualise the road network of my home town, Budapest, using data collected from
    OpenStreetMap via the package [OSMNx](https://osmnx.readthedocs.io/).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Fun fact about this network: it has 115,539 nodes and 316,096 edges, while
    the length of all road segments measures 1,879 km!'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d9f4e2b84a00fc0fbb83821ed61c4183.png)'
  prefs: []
  type: TYPE_IMG
- en: Day 2 — Lines
  prefs: []
  type: TYPE_NORMAL
- en: Day 3 — Polygons
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: First points, then lines — and now, polygons! On this map, I took every country
    of the world as a single polygon building on [Natural Earth](https://www.naturalearthdata.com/downloads/10m-cultural-vectors/)
    data. To add a nice gradient colouring, I coloured each country based on its distance
    from the equator. All computations were done in Python, and visuals were done
    using Matplotlib.
  prefs: []
  type: TYPE_NORMAL
- en: The map has a rather odd shape because I used the so-called Larrivee Projection,
    which was developed by Léo Larrivée in 1988 for the Canadian. You can learn more
    about different map projections [here](https://medium.com/towards-data-science/the-world-map-with-many-faces-map-projections-f58a210ff2f7).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/04e4d6e49933ef6ddd963ed976bfffa2.png)'
  prefs: []
  type: TYPE_IMG
- en: Day 3 — Polygons
  prefs: []
  type: TYPE_NORMAL
- en: Day 4 — A bad map
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The fourth day of the map challenge was unusual — while everybody was busy creating
    the best maps of their lives, we had to develop a bad one. However, the way it
    was terrible was open to interpretation.
  prefs: []
  type: TYPE_NORMAL
- en: To ensure mine was bad enough, I did some maths to arrive at a nonsense, absolutely
    bad map of Germany. First, I downloaded Germany’s admin boundaries from OpenStreetMap
    using the OSMNx package. Second, split it into hexagons using Uber’s [H3](https://eng.uber.com/h3/)
    library, using hexagon level 6, resulting in 12122 hexagons. Third, for each hexagon,
    I computed its centroid’s long and lat coordinates (using epsg:4326), until 14
    decimals. Then, I added each digit in both the long and lat coordinates, arriving
    at my ‘score’ that is used to colour each hexagon cell. Voile! Senseless!
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ff78469a98ae208ba69be0c704930c71.png)'
  prefs: []
  type: TYPE_IMG
- en: Day 4 — A bad map
  prefs: []
  type: TYPE_NORMAL
- en: Day 5 — Analog map
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After four days of intense data wrangling, day 5 drove us out to the wilderness
    and made us build analogue maps. So, as we were still pretty close to Halloween,
    I decided to combine it with the map challenge and carve the map of Budapest on
    it.
  prefs: []
  type: TYPE_NORMAL
- en: The scary part is a bit hidden — I am using EPSG:23700, the local projection
    system of Hungary, which looks excellent with Budapest but is most likely terrible
    when used on the geometries of any other country. Try it if you dare!
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fd4eede96884b6a77a6a1025e96e5e30.png)'
  prefs: []
  type: TYPE_IMG
- en: Day 5 — Analog map
  prefs: []
  type: TYPE_NORMAL
- en: Day 6 — Asia
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For day 6, I returned to the previously introduced Natural Earth database and
    downloaded their GIS file containing the global time zones. As day six was about
    Asia, I had to do some filtering to arrive at the 48 Asian countries, after which
    I arrived at the following map — using Python and Matplotlib.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7e29b75af5849fd034909f507a0bbcbd.png)'
  prefs: []
  type: TYPE_IMG
- en: Day6 — Asia
  prefs: []
  type: TYPE_NORMAL
- en: Day 7 — Navigation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'I recently came across an exciting dataset titled Roman Road Network (version
    2008) on [Harvard’s Dataverse](https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi%3A10.7910%2FDVN%2FTI0KAU+https%3A%2F%2Ftowardsdatascience.com%2Fdo-all-the-roads-lead-to-rome-5b6756ce7d52):
    the historical road networks of the Roman Empire in a perfect GIS format. I turned
    it into a network analytics project published on [Towards Data Science](https://medium.com/towards-data-science/do-all-the-roads-lead-to-rome-5b6756ce7d52).
    As this project showed, indeed, all the roads led to Rome back in the day; I believe
    that this is a — relatively simple but still — navigational map, steering everyone
    to the centre who sets foot on any of these roads.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5db9464845a60e2ca10caaf2d2b1b907.png)'
  prefs: []
  type: TYPE_IMG
- en: Day 7 — Navigation
  prefs: []
  type: TYPE_NORMAL
- en: 'This was the summary of my first week doing the #30DayMapChallange — three
    more weeks to go, so get ready for many more maps to come! Now, also with video
    and code tutorials, on my [Patreon](https://www.patreon.com/milanjanosov) channel
    as well.'
  prefs: []
  type: TYPE_NORMAL
