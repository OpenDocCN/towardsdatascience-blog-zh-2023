- en: How to Create Beautiful Waffle Charts for Data Visualisation in Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-to-create-beautiful-waffle-charts-for-data-visualisation-in-python-e9760a3f8594](https://towardsdatascience.com/how-to-create-beautiful-waffle-charts-for-data-visualisation-in-python-e9760a3f8594)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A Great Alternative to Pie Charts for Data Visualisation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://andymcdonaldgeo.medium.com/?source=post_page-----e9760a3f8594--------------------------------)[![Andy
    McDonald](../Images/df11d647be032aeb3d31852affb33a64.png)](https://andymcdonaldgeo.medium.com/?source=post_page-----e9760a3f8594--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e9760a3f8594--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e9760a3f8594--------------------------------)
    [Andy McDonald](https://andymcdonaldgeo.medium.com/?source=post_page-----e9760a3f8594--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e9760a3f8594--------------------------------)
    ·7 min read·Feb 8, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c740dc252169908c5588b10befba75a6.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Mae Mu](https://unsplash.com/es/@picoftasty?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Waffle charts are a great way to visualise categorical data, are aesthetically
    pleasing and easy for readers to understand — which is one of the key goals of
    effective data visualisations. They also provide a nicer looking alternative to
    pie charts.
  prefs: []
  type: TYPE_NORMAL
- en: Waffle charts are square or rectangular displays made up of smaller squares
    in a grid pattern. Most commonly, it is a 10 x 10 grid, but they can be any dimension
    you want them to be, and this will depend on the data you are looking to display.
    Each square within the grid is coloured based on a category and represents a portion
    of the whole. From these plots, we can see contributions of individual categories
    or display progress towards a goal.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/844d510b8f4f936babcac25b2a44fd6e.png)'
  prefs: []
  type: TYPE_IMG
- en: Example of a waffle chart showing different lithologies found within a well.
    Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Waffle charts have several uses, including visualising progress towards a goal,
    understanding how individual parts making up a whole, and even seeing how much
    expenses are eating into gross profit.
  prefs: []
  type: TYPE_NORMAL
- en: Advantages and Disadvantages of Waffle Charts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As with any data visualisation tool, there are advantages and disadvantages
    to displaying data in specific formats.
  prefs: []
  type: TYPE_NORMAL
- en: 'Waffle charts have several advantages for displaying data, including:'
  prefs: []
  type: TYPE_NORMAL
- en: A great alternative to the pie chart
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interesting and aesthetically pleasing to look at
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Easy to read and interpret
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data is not distorted
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Great way to visualise a small number of categories
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Easy to visualise progress towards a goal
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Even with these advantages, there are a few disadvantages to using waffle charts:'
  prefs: []
  type: TYPE_NORMAL
- en: It can be hard to read if you have a large number of categories to display
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It can be hard to compare non-adjacent categories
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Can’t include text or numbers within the squares due to their size
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Accuracy can be impacted if the values are smaller than the square’s representative
    value. eg. if a square equals one unit, and you have a half unit
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Within the article, we will use geological lithology data to see how we can
    use Python to display Waffle charts.
  prefs: []
  type: TYPE_NORMAL
- en: Building Waffle Charts Using Python and PyWaffle
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Importing Libraries and Creating Data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[**It is possible to create waffle charts using matplotlib**](/waffle-charts-using-pythons-matplotlib-94252689a701);
    however, there is a very convenient library called [**pywaffle**](https://pywaffle.readthedocs.io/en/latest/)
    which makes this process much easier.'
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we have to install the [**pywaffle library**](https://pypi.org/project/pywaffle/)
    by using the following command within the terminal:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, within our code, we need to import a few more libraries: [**pandas**](https://pandas.pydata.org/)
    and [**matplotlib**](https://matplotlib.org/).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: For this example, we will be using some basic lithology data. This represents
    the different percentages of rock types within two different wells.
  prefs: []
  type: TYPE_NORMAL
- en: Rather than loading data, we can quickly create our pandas dataframe from a
    dictionary.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'When we view the dataframe, this is what we are presented with:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e8bb3f55b25cd6314a03868550a8fa4f.png)'
  prefs: []
  type: TYPE_IMG
- en: Different lithology percentages for two wells within a pandas dataframe. Image
    by the author.
  prefs: []
  type: TYPE_NORMAL
- en: And finally, we will create some basic colours that will make the waffle chart
    visually appealing and make it easy for us to compare across the different wells.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Creating a Simple Waffle Chart with PyWaffle
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Including values and labels inside a waffle chart can make it very messy. So,
    for this example, we will be storing that information within a legend.
  prefs: []
  type: TYPE_NORMAL
- en: To do this, we will create a new variable called `plot_labels` and using a list
    comprehension; we will join together the values with the label.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Next, we can move on to creating the waffle chart.
  prefs: []
  type: TYPE_NORMAL
- en: We do this by calling upon `plt.figure` and passing in `Waffle` to the `FigureClass`
    parameter. This is followed by several additional parameters, including the data
    we are going to display, the colours and the labels.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we can setup the legend directly within the call to `plt.figure()`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: When we run the above code, we will get back the following waffle chart.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/844d510b8f4f936babcac25b2a44fd6e.png)'
  prefs: []
  type: TYPE_IMG
- en: Waffle chart showing different lithologies created with PyWaffle — a python
    library. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: We can see right away the contribution of each lithology to the overall composition
    of the well.
  prefs: []
  type: TYPE_NORMAL
- en: When the squares are filled in, the process starts from the bottom left corner.
    If we want to change the starting position, we can do so by adding a `starting_location`
    parameter to the `plt.figure()` method.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: When we run this, we will see that the waffle chart has flipped along the horizontal
    axis.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/45ff9299fd714e17797adab897bee240.png)'
  prefs: []
  type: TYPE_IMG
- en: Waffle chart showing different lithologies after changing the starting location.
    Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Comparing Different Waffle Charts with Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that we have the first well, we can run the same code on the second well.
    We do this be changing the values to use Well2 instead of Well1.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/29437a96b4c94c74c18c887bf86fbcc4.png)'
  prefs: []
  type: TYPE_IMG
- en: Waffle chart showing different lithologies for a second well. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: This looks great, and we could easily create individual plots per well and stitch
    them together in PowerPoint. However, there is a way to do it through PyWaffle,
    and that is by passing in a dictionary containing the subplot position and contents.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: The above code will generate the following waffle plots allowing us to compare
    the lithology differences between the two wells.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1422058bb9547b46e526b687991a8d11.png)'
  prefs: []
  type: TYPE_IMG
- en: Multiple waffle charts on the same figure making it easier to compare different
    groups of data. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: How to Split Categories into Individual Waffle Charts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To make things easier for our readers, we can break out each of the categories
    into their own waffle subplot. This can make it easier for the reader to follow
    the story and make direct comparisons with other groups containing the same categories.
  prefs: []
  type: TYPE_NORMAL
- en: To do this, we need to leverage matplotlib’s subplots functionality.
  prefs: []
  type: TYPE_NORMAL
- en: We need to loop through each of the categories and then add the individual subplots
    using `Waffle.make_waffle()`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: When we run this code, we get back the following figure with the individual
    categories.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3670a8eac1aed39283b6dce17c13ff89.png)'
  prefs: []
  type: TYPE_IMG
- en: Multiple waffle plots split by category using matplotlib’s subplot functionality.
    Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Using Circles and Icons Instead of Squares with PyWaffle
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If we want to spice up our data visualisation, we can introduce different shapes
    and icons instead of the standard squares.
  prefs: []
  type: TYPE_NORMAL
- en: 'To do this, we can add two parameters: `icons` and `font_size` . The first
    allows us to specify an icon from the [**font-awesome**](https://fontawesome.com)website,
    and the second allows us to control the size of the icon.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: After running the code, we get the following plot.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e532d84981203104aa72dbdeff8231a8.png)'
  prefs: []
  type: TYPE_IMG
- en: Waffle chart with circles instead of squares. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: This provides the user with a way to greatly customise the waffle chart, especially
    if you are looking for a particular style when presenting the data to the user.
    For example, if you were creating a presentation of a poster discussing bees,
    you could swap the circles/squares out for bee icons.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Waffle charts are an excellent tool for data visualisation. They bring extra
    interest to the story being conveyed by the data and provide a nice alternative
    to pie charts. The PyWaffle library is simple to use and can be applied to various
    datasets, including geological and petrophysical ones.
  prefs: []
  type: TYPE_NORMAL
- en: '*Thanks for reading. Before you go, you should definitely subscribe to my content
    and get my articles in your inbox.* [***You can do that here!***](https://andymcdonaldgeo.medium.com/subscribe)*Alternatively,
    you can* [***sign up for my newsletter***](https://fabulous-founder-2965.ck.page/2ca286e572)
    *to get additional content straight into your inbox for free.*'
  prefs: []
  type: TYPE_NORMAL
- en: '*Secondly, you can get the full Medium experience and support thousands of
    other writers and me by signing up for a membership. It only costs you $5 a month,
    and you have full access to all of the fantastic Medium articles, as well as the
    chance to make money with your writing.*'
  prefs: []
  type: TYPE_NORMAL
- en: '*If you sign up using* [***my link***](https://andymcdonaldgeo.medium.com/membership)***,***
    *you will support me directly with a portion of your fee, and it won’t cost you
    more. If you do so, thank you so much for your support.*'
  prefs: []
  type: TYPE_NORMAL
