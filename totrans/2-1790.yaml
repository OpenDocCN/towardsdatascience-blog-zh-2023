- en: Rise Up! Building an Alert System for My Standing Desk using Data and Home Assistant
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Rise Up! 使用数据和 Home Assistant 为我的站立式办公桌建立警报系统
- en: 原文：[https://towardsdatascience.com/rise-up-building-an-alert-system-for-my-standing-desk-using-data-and-home-assistant-a7574236f579](https://towardsdatascience.com/rise-up-building-an-alert-system-for-my-standing-desk-using-data-and-home-assistant-a7574236f579)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/rise-up-building-an-alert-system-for-my-standing-desk-using-data-and-home-assistant-a7574236f579](https://towardsdatascience.com/rise-up-building-an-alert-system-for-my-standing-desk-using-data-and-home-assistant-a7574236f579)
- en: Integrating a microprocessor, Home Assistant, Grafana, InfluxDB, and Telegram
    for a smarter desk and a healthier workspace
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将微处理器、Home Assistant、Grafana、InfluxDB 和 Telegram 集成，为桌子提供智能化和更健康的工作环境
- en: '[](https://medium.com/@juandes?source=post_page-----a7574236f579--------------------------------)[![Juan
    De Dios Santos](../Images/1bc957898384f469e6975ac7ce49b79b.png)](https://medium.com/@juandes?source=post_page-----a7574236f579--------------------------------)[](https://towardsdatascience.com/?source=post_page-----a7574236f579--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----a7574236f579--------------------------------)
    [Juan De Dios Santos](https://medium.com/@juandes?source=post_page-----a7574236f579--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@juandes?source=post_page-----a7574236f579--------------------------------)[![Juan
    De Dios Santos](../Images/1bc957898384f469e6975ac7ce49b79b.png)](https://medium.com/@juandes?source=post_page-----a7574236f579--------------------------------)[](https://towardsdatascience.com/?source=post_page-----a7574236f579--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----a7574236f579--------------------------------)
    [Juan De Dios Santos](https://medium.com/@juandes?source=post_page-----a7574236f579--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----a7574236f579--------------------------------)
    ·11 min read·May 25, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----a7574236f579--------------------------------)
    ·11 分钟阅读·2023年5月25日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/0fc8679dadbc1e23eb5c4424087070cb.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0fc8679dadbc1e23eb5c4424087070cb.png)'
- en: 'Picture generated by DALL-E. Prompt: “A standing desk with a laptop. The laptop’s
    image needs to be a line chart.”'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 DALL-E 生成。提示：“一个带有笔记本电脑的站立式办公桌。笔记本电脑的图像需要是折线图。”
- en: We are all well aware of the health risks associated with prolonged sitting.
    It can lead to muscle deterioration, back problems, an increased risk of diabetes,
    and more ([source](https://www.betterhealth.vic.gov.au/health/healthyliving/the-dangers-of-sitting)).
    Yeah, it’s that bad. Yet, despite these harmful effects, many of us — including
    myself — spend extended periods sitting. We do it because we like it or because
    our work demands it, as in my case.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们都很清楚长期坐着的健康风险。这可能导致肌肉退化、背部问题、糖尿病风险增加等（[source](https://www.betterhealth.vic.gov.au/health/healthyliving/the-dangers-of-sitting)）。是的，情况确实很糟糕。然而，尽管有这些有害影响，我们中的许多人——包括我自己——还是会长时间坐着。我们这样做是因为我们喜欢这样，或者因为我们的工作需要这样，就像我一样。
- en: To combat these health risks, I got a standing desk. And I love this desk. It
    looks cool and allows me to configure height presets that I switch between throughout
    the day. However, I must confess there are extended periods when the desk is at
    its lowest setting — mirroring my lack of movement. To address this issue (and
    also as a fun excuse to start a new project), I installed a microprocessor under
    my desk. This microprocessor monitors the desk height, and it is the entry point
    of a flow that ends up with a Telegram notification that reminds me to stand up
    if the desk’s height is at what I’ve deemed the “sitting” preset for too long.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 为了应对这些健康风险，我买了一个站立式办公桌。我非常喜欢这个桌子。它看起来很酷，并允许我配置高度预设，我在一天中切换这些预设。然而，我必须承认，有时候桌子会一直保持在最低设置，这反映了我缺乏运动。为了应对这个问题（同时也作为一个有趣的借口来启动一个新项目），我在桌子下安装了一个微处理器。这个微处理器监控桌子的高度，它是一个流的入口，最终会通过
    Telegram 发送通知提醒我，如果桌子的高度保持在我定义的“坐着”预设太久的话，就提醒我站起来。
- en: I equipped the attached microprocessor with a distance sensor to track its height
    over time and record it in Home Assistant, an open-source home automation platform
    that functions as a hub for smart home devices. The microprocessor I used is an
    ESP32 Thing Plus from SparkFun. This type of device includes a WiFi module, enabling
    the development of web servers. For this project, I set up a web server with an
    endpoint that returns the distance the sensor measures. In this case, this measurement
    is the distance from the desk to the floor — data I’m using to analyze my desk
    usage and to send alerts after a prolonged period of sitting. This article explains
    how I did it.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我给附加的微处理器配备了一个距离传感器，以便随着时间的推移跟踪其高度并将其记录在Home Assistant中，Home Assistant是一个开源的家庭自动化平台，作为智能家居设备的中心枢纽。我使用的微处理器是来自SparkFun的ESP32
    Thing Plus。这种设备包括一个WiFi模块，支持开发网络服务器。对于这个项目，我设置了一个网络服务器，具有一个返回传感器测量距离的端点。在这种情况下，这个测量值是桌子到地板的距离——这些数据用于分析我的桌子使用情况，并在长时间坐着后发出警报。本文解释了我是如何做到的。
- en: The setup
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置
- en: The centerpiece of this project is my standing desk. It’s a pretty normal standing
    desk with a controller for adjusting the height, and four buttons for setting
    specific height presets.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目的核心是我的站立桌。它是一款非常普通的站立桌，配有一个用于调整高度的控制器和四个用于设置特定高度预设的按钮。
- en: The [SparkFun Thing Plus ESP32](https://www.sparkfun.com/products/15663) microcontroller
    is another key component. Of all its features, the ones relevant to this project
    are the WiFI transceiver and SparkFun’s Qwiic Connect System, which allows you
    to connect sensors without the need for soldering. The sensor I’m using to measure
    the desk’s height is a [SparkFun Distance Sensor — 1.3 Meter, VL53L4CD (Qwiic)](https://www.sparkfun.com/products/18993).
    It measures distance by emitting an infrared laser and timing the reflection from
    the target.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[SparkFun Thing Plus ESP32](https://www.sparkfun.com/products/15663) 微控制器是另一个关键组件。在所有功能中，与此项目相关的是WiFi收发器和SparkFun的Qwiic连接系统，它允许在不需要焊接的情况下连接传感器。我用来测量桌子高度的传感器是
    [SparkFun Distance Sensor — 1.3 Meter, VL53L4CD (Qwiic)](https://www.sparkfun.com/products/18993)。它通过发射红外激光并计时目标的反射来测量距离。'
- en: I’ve situated the microprocessor and sensor beneath the desk. Since neither
    my floor nor the desk legs are reflective, I’ve taped a small piece of foil to
    the desk leg under the sensor to facilitate the reflection of the sensor’s laser.
    Therefore, I’m technically measuring the distance between the desk and its base,
    which is approximately 5 cm above the floor.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我将微处理器和传感器放置在桌子下方。由于我的地板和桌腿都不反光，我在传感器下方的桌腿上粘贴了一小块箔纸，以便反射传感器的激光。因此，我实际上是在测量桌子与其底座之间的距离，大约是距离地面5厘米。
- en: I’m storing the sensor’s data in my Home Assistant installation. Home Assistant
    is a complex system with many functions and features. For the purposes of this
    project, we need to know that I have it installed on a Raspberry Pi, which is
    connected to my home network, that it can raise alerts and send them to different
    platforms, and that it can host InfluxDB (a time series database designed to handle
    high volumes of time-stamped data), and Grafana (a data visualization and monitoring
    tool).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我将传感器的数据存储在我的Home Assistant安装中。Home Assistant是一个功能复杂的系统，具有许多功能和特性。就这个项目而言，我们需要知道的是，我已经将其安装在一个连接到我的家庭网络的Raspberry
    Pi上，它可以发出警报并将其发送到不同的平台，并且它可以托管InfluxDB（一个处理高量时间戳数据的时间序列数据库）和Grafana（一个数据可视化和监控工具）。
- en: You can learn more about Home Assistant [here](https://www.home-assistant.io/).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[这里](https://www.home-assistant.io/)了解更多关于Home Assistant的信息。
- en: '![](../Images/7597cc854fcb0249c148a67cb7917cbb.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7597cc854fcb0249c148a67cb7917cbb.png)'
- en: My (messy) setup. On the left, you have the desk (see the foil?), and on the
    right, the microprocessor and sensor. I’m aware of how ugly it is.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我的（杂乱的）设置。左侧是桌子（看看箔纸吗？），右侧是微处理器和传感器。我意识到它有多丑。
- en: The microprocessor program
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 微处理器程序
- en: The desk might be the centerpiece of this project, but the microprocessor program
    is undoubtedly the brain. This program, which I’ve written to track the desk’s
    height, sets up a web server on the ESP32 board to serve via an endpoint the distance
    measurements taken by the SparkFun VL53L1X distance sensor.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 桌子可能是这个项目的核心，但微处理器程序无疑是大脑。这个程序，我编写了用来跟踪桌子高度的程序，在ESP32板上设置了一个网络服务器，通过一个端点提供由SparkFun
    VL53L1X距离传感器采集的距离测量数据。
- en: 'Here’s the code:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是代码：
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: I’m starting the code by importing the necessary libraries, which include the
    WiFi module and the distance sensor library. After the libraries, we define two
    constants with the WiFi’s SSID and password. Next, we create the web server, specify
    its port, and initialize the sensor. Then comes the `setup()` function, where
    the main logic lies. The first half of this function is to initiate the WiFi connection
    and the distance sensor. Once both are ready, it proceeds to set up the two routes
    for the web server.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我开始编写代码，导入必要的库，包括WiFi模块和距离传感器库。在库之后，我们定义了两个常量：WiFi的SSID和密码。接下来，我们创建Web服务器，指定其端口，并初始化传感器。然后是`setup()`函数，其中包含主要逻辑。这个函数的前半部分是启动WiFi连接和距离传感器。一旦两者都准备好，它将继续为Web服务器设置两个路径。
- en: The first route, `GET /distance`, retrieves the sensor’s distance measurement
    and returns it as plain text (e.g., `695`).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个路径，`GET /distance`，检索传感器的距离测量值并以纯文本形式返回（例如，`695`）。
- en: The second route, `GET /ping`, is a health check to ensure the program is running.
    Although the first endpoint could also serve this purpose, I created a distinct
    endpoint specifically for health checks.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 第二条路径，`GET /ping`，是一个健康检查，以确保程序正在运行。尽管第一个端点也可以完成这个目的，但我专门创建了一个不同的端点用于健康检查。
- en: Now, we need to upload the program into the Arduino. I won’t delve into how
    to do this here, but you can refer to this guide if you need assistance [https://support.arduino.cc/hc/en-us/articles/4733418441116-Upload-a-sketch-in-Arduino-IDE](https://support.arduino.cc/hc/en-us/articles/4733418441116-Upload-a-sketch-in-Arduino-IDE).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要将程序上传到Arduino。我在这里不会深入探讨如何做，但如果你需要帮助，可以参考这个指南[https://support.arduino.cc/hc/en-us/articles/4733418441116-Upload-a-sketch-in-Arduino-IDE](https://support.arduino.cc/hc/en-us/articles/4733418441116-Upload-a-sketch-in-Arduino-IDE)。
- en: Once the program is running, you can test it using a cURL command like `curl
    -X GET http://192.168.1.XXX/distance`, as long as the device executing the command
    is on the same network as the microprocessor. Please note that you'll need to
    replace the `XXX` with the actual IP of the microprocessor. A way to find the
    IP is by looking at the list of connected devices to your network on your router
    control panel.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦程序运行，你可以使用类似`curl -X GET http://192.168.1.XXX/distance`的cURL命令进行测试，只要执行命令的设备与微处理器在同一网络上。请注意，你需要将`XXX`替换为微处理器的实际IP。找到IP的一种方法是查看路由器控制面板上的连接设备列表。
- en: Consuming the endpoint from Home Assistant
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从Home Assistant消耗端点
- en: The next step involves integrating the `/distance` endpoint with Home Assistant
    using a [sensor](https://www.home-assistant.io/integrations/sensor/) component.
    For simplicity, I’ll assume that you have Home Assistant installed and are familiar
    with its basics.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是使用[sensor](https://www.home-assistant.io/integrations/sensor/)组件将`/distance`端点与Home
    Assistant集成。为了简便起见，我假设你已经安装了Home Assistant并熟悉其基础知识。
- en: 'A sensor component monitors the state and conditions of entities, which can
    be a physical sensor or an endpoint like the one we have created. To set this
    up, you’ll need to access Home Assistant’s configuration file, `configuration.yaml`,
    either through the [File Editor](https://www.home-assistant.io/getting-started/configuration/)
    or the console. Once you’re in the file, look for an existing `sensor` key in
    the YAML file or create one if it’s not already there. Under this key, add the
    following:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 传感器组件监控实体的状态和条件，这可以是物理传感器或像我们创建的端点。要设置此功能，你需要通过[文件编辑器](https://www.home-assistant.io/getting-started/configuration/)或控制台访问Home
    Assistant的配置文件`configuration.yaml`。进入文件后，查找YAML文件中现有的`sensor`键，如果没有，则创建一个。在此键下，添加以下内容：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This configuration sets up a [*RESTful*](https://www.home-assistant.io/integrations/rest/)
    platform — one that consumes a REST endpoint — within a sensor component. It has
    four values:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 此配置在传感器组件中设置了一个[*RESTful*](https://www.home-assistant.io/integrations/rest/)平台——一个消耗REST端点的平台。它有四个值：
- en: '`name`: A descriptive name for the endpoint.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`：端点的描述性名称。'
- en: '`unique_id`: A unique identifier for the sensor.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`unique_id`：传感器的唯一标识符。'
- en: '`unit_of_measurement`: The sensor’s unit of measurement. In our case, it’s
    “mm,” as the distance sensor measures in millimeters.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`unit_of_measurement`：传感器的测量单位。在我们的案例中，它是“mm”，因为距离传感器以毫米为单位进行测量。'
- en: '`resource`: The URL of the endpoint to consume.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`resource`：要使用的端点的URL。'
- en: There’s also an optional field named `method` for specifying the HTTP method
    of the request. I’m not using it because it defaults to `GET`, which is the method
    of our endpoint.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个名为`method`的可选字段，用于指定请求的HTTP方法。我没有使用它，因为它默认为`GET`，这是我们端点的方法。
- en: Now save the file and reload it to apply the changes. To ensure it works correctly,
    consider creating a new module in your dashboard to display the value the sensor
    reads. Alternatively, you can locate the entity in the “states” tab of the Developer
    Tools.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在保存文件并重新加载以应用更改。为确保其正常工作，考虑在仪表盘中创建一个新模块以显示传感器读取的值。或者，您可以在开发者工具的“states”选项卡中找到该实体。
- en: '![](../Images/422c6e76dc8fe92c32107eb28b790da2.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/422c6e76dc8fe92c32107eb28b790da2.png)'
- en: The sensor, as seen from the “states” tab of the Developer Tools.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 从开发者工具的“states”选项卡中可以看到传感器。
- en: The following section explains how you can use InfluxDB and Grafana to visualize
    the data.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 下一部分解释了如何使用InfluxDB和Grafana来可视化数据。
- en: Visualize the data using Grafana and InfluxDB
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Grafana和InfluxDB可视化数据
- en: Prior to starting this project, I envisioned displaying the desk’s literal ups
    and down with a visualization tool. And luckily for the Home Assistant community
    and me, a [member](https://github.com/frenck) of such created an add-on that seamlessly
    let you integrate [InfluxDB](https://github.com/hassio-addons/addon-influxdb)
    and [Grafana](https://github.com/hassio-addons/addon-grafana) into the platform.
    InfluxDB is a high-performance, open-source time-series database that efficiently
    stores and manages large amounts of time-stamped data, making it perfect for tracking
    the desk’s altitude over time. Grafana is an open-source data visualization and
    monitoring platform that allows users to create interactive, customizable dashboards.
    Combining InfluxDB and Grafana allows for real-time data collection, storage,
    and visualization of the desk’s movements, providing a seamless experience in
    tracking it. For instructions on how to install them, please refer to their respective
    documentation at [InfluxDB](https://github.com/hassio-addons/addon-influxdb/blob/main/README.md)
    and [Grafana](https://github.com/hassio-addons/addon-grafana/blob/main/README.md).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始这个项目之前，我设想了用一个可视化工具显示桌面的实际升降。幸运的是，对于Home Assistant社区和我来说，有一个[成员](https://github.com/frenck)创建了一个插件，可以无缝地将[InfluxDB](https://github.com/hassio-addons/addon-influxdb)和[Grafana](https://github.com/hassio-addons/addon-grafana)集成到平台中。InfluxDB是一个高性能的开源时间序列数据库，能够高效地存储和管理大量时间戳数据，非常适合跟踪桌面的高度变化。Grafana是一个开源的数据可视化和监控平台，允许用户创建交互式、自定义的仪表盘。将InfluxDB和Grafana结合起来，可以实时收集、存储和可视化桌面的移动数据，提供了跟踪桌面高度的无缝体验。有关如何安装它们的说明，请参考[InfluxDB](https://github.com/hassio-addons/addon-influxdb/blob/main/README.md)和[Grafana](https://github.com/hassio-addons/addon-grafana/blob/main/README.md)的文档。
- en: 'After installation and setup (which includes adding InfluxDB as a data source
    in Grafana), navigate to Grafana’s dashboard to create a new dashboard and panel;
    this panel is where we’ll visualize the desk’s height. At the bottom of the page
    is the query area, where we’ll define the query that gets the data from InfluxDB.
    Begin by selecting “InfluxDB” from the “Data source” menu. Then, fill up the blanks
    like this:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 安装和设置（包括在Grafana中添加InfluxDB作为数据源）完成后，导航到Grafana的仪表盘以创建新的仪表盘和面板；这个面板就是我们将可视化桌面高度的地方。页面底部是查询区域，我们将在这里定义从InfluxDB获取数据的查询。首先，从“数据源”菜单中选择“InfluxDB”。然后，按照如下方式填写空白：
- en: '`FROM`: Select the name of the InfluxDB data source (mine is `default`). In
    the field next to it, select “mm” — this is the name of the table storing data
    from sensors whose unit of measurement is millimeters.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FROM`：选择InfluxDB数据源的名称（我的为`default`）。在旁边的字段中，选择“mm”——这是存储单位为毫米的传感器数据的表的名称。'
- en: '`WHERE`: Use this clause to only filter for the entity `desk_distance`.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`WHERE`：使用此子句仅过滤实体`desk_distance`。'
- en: '`SELECT`Select `value` from the menu. I also applied the `mean()` aggregation
    and the mathematical formula `math(/1000)` to transform the Y-axis scale to meters.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SELECT`：从菜单中选择`value`。我还应用了`mean()`聚合函数和数学公式`math(/1000)`，将Y轴刻度转换为米。'
- en: '`GROUP_BY`: Use `time($_interval)` to group the data by `$_interval`, where
    `$_interval`is a time interval calculated by Grafana (see the explanation [here](https://grafana.com/docs/grafana/latest/dashboards/variables/add-template-variables/#__interval))
    and `fill(linear)` fills any missing data points within the specified time range
    using linear interpolation. I’m using this to avoid seeing gaps in my visualization.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GROUP_BY`：使用 `time($_interval)` 按 `$_interval` 分组数据，其中 `$_interval` 是由 Grafana
    计算的时间间隔（参见解释[这里](https://grafana.com/docs/grafana/latest/dashboards/variables/add-template-variables/#__interval)），而
    `fill(linear)` 使用线性插值填充指定时间范围内的任何缺失数据点。我使用这个方法来避免在我的可视化中出现间隙。'
- en: '![](../Images/26b8e0d9c766adbddc132cc5998eb920.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/26b8e0d9c766adbddc132cc5998eb920.png)'
- en: The above query.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 上述查询。
- en: 'After configuring these parameters, you’ll get a chart similar to this:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 配置这些参数后，你将得到一个类似于这样的图表：
- en: '![](../Images/5c20b9755b1703cf1ffd92bd398315cd.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5c20b9755b1703cf1ffd92bd398315cd.png)'
- en: How my chart looks like.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我的图表是这样的。
- en: 'This chart represents two days of data. The y-axis displays the desk’s height
    in mm., while the x-axis shows the time. You can clearly see the two presets I
    use most frequently: the sitting preset, with a height of around 700 mm, and the
    standing preset, which elevates the desk to nearly a meter high.”'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这个图表表示两天的数据。y 轴显示桌子的高度（单位：毫米），而 x 轴显示时间。你可以清楚地看到我最常使用的两个预设：坐着的预设，桌子高度约为 700
    毫米，和站立的预设，将桌子升高到近一米的高度。
- en: Sending alerts to Telegram
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发送警报到 Telegram
- en: The ultimate goal of this project was to develop a notification system reminding
    me to stand after extended periods of sitting. By using the data collected from
    the distance sensor, Home Assistant’s [alert](https://www.home-assistant.io/integrations/alert/)
    integration can send these reminders whenever an event happens. These notifications
    are sent through another integration, [notify](https://www.home-assistant.io/integrations/notify/),
    which supports a variety of platforms, including Twilio, email, and Telegram—which
    I’ll use for this project.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目的最终目标是开发一个提醒我在长时间坐着后站立的通知系统。通过使用从距离传感器收集的数据，Home Assistant 的[警报](https://www.home-assistant.io/integrations/alert/)集成可以在事件发生时发送这些提醒。这些通知通过另一个集成[通知](https://www.home-assistant.io/integrations/notify/)发送，该集成支持多种平台，包括
    Twilio、电子邮件和 Telegram——我将在这个项目中使用它。
- en: 'Setting up an alert from Home Assistant to Telegram involves two key steps:
    creating a Telegram bot to receive the alert and defining the alert in Home Assistant.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Home Assistant 设置一个 Telegram 的警报涉及两个关键步骤：创建一个 Telegram 机器人来接收警报，以及在 Home Assistant
    中定义警报。
- en: Creating the bot
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建机器人
- en: I used an existing Telegram bot called [BotFather](https://core.telegram.org/bots/tutorial)
    to create my alert bot. To get started, initiate a chat with BotFather by searching
    for it in a new chat window. Once you’ve started the conversation, follow the
    on-screen instructions, which are mostly questions about your new bot, such as
    its name. BotFather will then provide you with an API token to control your recently
    created bot and a link to initiate a Telegram conversation with it.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用了一个现有的 Telegram 机器人[BotFather](https://core.telegram.org/bots/tutorial)来创建我的警报机器人。要开始，打开一个新的聊天窗口并搜索
    BotFather，开始对话。开始对话后，按照屏幕上的说明操作，这些说明大多是关于你的新机器人的问题，例如其名称。BotFather 然后会提供一个 API
    令牌来控制你最近创建的机器人，以及一个启动 Telegram 对话的链接。
- en: '![](../Images/64b5e7e8e9e54ccaf873d4c23f2059cf.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/64b5e7e8e9e54ccaf873d4c23f2059cf.png)'
- en: QR code to BotFather
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: BotFather 的二维码
- en: Next, you’ll need the chat ID from your conversation with your bot. I obtained
    this ID using a curl request `$ curl -X GET https://api.telegram.org/bot<YOUR_API_TOKEN>/getUpdates`
    (before doing this, you need to message the bot) where `YOUR_API_TOKEN` is the
    API key you got from BotFather. The API response is a JSON with a `chat` object
    and a field named `id` containing the chat ID.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你需要从与你的机器人对话中获取 chat ID。我通过 curl 请求 `$ curl -X GET https://api.telegram.org/bot<YOUR_API_TOKEN>/getUpdates`
    获得了这个 ID（在此之前，你需要给机器人发送一条消息），其中 `YOUR_API_TOKEN` 是你从 BotFather 获得的 API 密钥。API
    响应是一个 JSON 对象，其中包含一个 `chat` 对象和一个名为 `id` 的字段，包含 chat ID。
- en: You can also get the ID using another bot called [GetIDs](https://t.me/getidsbot)
    which provides information about chats and messages. However, I didn’t try this
    method.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用另一个名为[GetIDs](https://t.me/getidsbot)的机器人来获取 ID，它提供关于聊天和消息的信息。不过，我没有尝试这种方法。
- en: Defining the alert
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义警报
- en: 'The final step involves defining the alert in Home Assistant. Open the `configuration.yaml`
    file and configure the bot as follows:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步涉及在 Home Assistant 中定义警报。打开`configuration.yaml`文件，并按如下方式配置机器人：
- en: '[PRE2]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Next, create the notifier to send notifications via the bot you’ve just configured:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，创建通知器，通过你刚刚配置的机器人发送通知：
- en: '[PRE3]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Finally, define the alert itself under the `automation` key (create it if you
    don’t have it):'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在`automation`键下定义警报本身（如果没有，则创建它）：
- en: '[PRE4]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: My alert name is *Desk Distance Alert 45 minutes*, and as the name points out,
    it sends a notification when my desk has been lowered for more than 45 minutes.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我的警报名称是*桌面距离警报 45 分钟*，正如名称所示，当我的桌面降低超过 45 分钟时，它会发送通知。
- en: I defined the “45 minutes” condition in `trigger`. Here, we need a `numeric_state`
    automation that fires an action when an entity’s state meets a condition. My condition
    triggers when the desk height is `below` 900mm `for` 45 `minutes` You're free
    to customize this for your needs. Also, note that `entity_id` is the word `sensor`
    followed by the id you used to name your sensor, e.g., `sensor.desk_distance`.
    My trigger is accompanied by an `action` that executes when the trigger fires
    up. This `action` uses the `NOTIFICATION_NAME` notify service we created earlier
    to notify through it.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我在`trigger`中定义了“45分钟”条件。在这里，我们需要一个`numeric_state`自动化，当实体的状态满足条件时触发一个动作。我的条件是在桌面高度`below`
    900mm `for` 45 `minutes` 时触发。你可以根据需要自定义这个条件。另外，注意`entity_id`是`sensor`这个词后跟你用来命名传感器的id，例如`sensor.desk_distance`。我的触发器伴随一个`action`，当触发器启动时执行。这个`action`使用我们之前创建的`NOTIFICATION_NAME`通知服务来发送通知。
- en: I also added a `message` with an encouraging name that will hopefully motivate
    me to get up.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我还添加了一个`message`，名字带有鼓励性质，希望能激励我起身。
- en: '![](../Images/fdbe08974fb83d89cc66f52bef805716.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fdbe08974fb83d89cc66f52bef805716.png)'
- en: The notification
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 通知
- en: To test the process, create a temporary alert that triggers in one minute, or
    navigate to the automation dashboard at `https://your_ha_location/config/automation/dashboard`.
    If the alert appears in the list, click the three-dot symbol on the right and
    manually select “Run” to trigger it. If all goes well, you should receive a notification
    from Telegram."
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测试这个过程，创建一个在一分钟内触发的临时警报，或访问`https://your_ha_location/config/automation/dashboard`的自动化仪表板。如果警报出现在列表中，点击右侧的三点符号，手动选择“运行”以触发它。如果一切顺利，你应该会收到来自Telegram的通知。
- en: Conclusion
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: As someone who spends a large chunk of my day sitting behind a desk, I found
    it crucial to address the negative impact this can have on my health. Recognizing
    this, I was driven to find a solution — a way to remind myself to take the necessary
    breaks, move, and stand.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个在桌子后面坐了大半天的人，我发现解决这种对健康的负面影响至关重要。认识到这一点，我被驱动去寻找一个解决方案——一种提醒自己休息、移动和站立的方法。
- en: By integrating an ESP32 microprocessor, a SparkFun VL53L1X distance sensor,
    Home Assistant, Grafana, InfluxDB, and Telegram, I’ve crafted a system that tracks
    my desk’s height in real-time, visualizes that data, and sends me a nudge when
    I’ve been sitting for too long.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 通过整合ESP32微处理器、SparkFun VL53L1X距离传感器、Home Assistant、Grafana、InfluxDB和Telegram，我打造了一个实时跟踪桌面高度、可视化数据并在我坐得太久时提醒我的系统。
- en: But this project isn’t just about my standing desk; it’s about using tech tools
    (and sensors I’ve had in a box for a long time) to make small changes that improve
    our daily habits. Whether you’re buried in work or lost in your own projects,
    it’s essential not to overlook your health (note to self, of course). Thankfully,
    with the right tools and a bit of data, we can build systems that not only assist
    in our productivity but also contribute to our well-being.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 但这个项目不仅仅是关于我的升降桌；它还涉及利用技术工具（以及我放在箱子里很久的传感器）来做出小的改变，从而改善我们的日常习惯。无论你是沉浸在工作中还是迷失在自己的项目里，都不应忽视健康（当然是给自己提个醒）。幸运的是，借助合适的工具和一点数据，我们可以建立既有助于生产力又有助于健康的系统。
