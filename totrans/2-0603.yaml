- en: Creating Animation to Show 4 Centroid-Based Clustering Algorithms using Python
    and Sklearn
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python 和 Sklearn 创建 4 种基于质心的聚类算法的动画
- en: 原文：[https://towardsdatascience.com/creating-animation-to-show-4-centroid-based-clustering-algorithms-using-python-and-sklearn-d397ade89cb3](https://towardsdatascience.com/creating-animation-to-show-4-centroid-based-clustering-algorithms-using-python-and-sklearn-d397ade89cb3)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/creating-animation-to-show-4-centroid-based-clustering-algorithms-using-python-and-sklearn-d397ade89cb3](https://towardsdatascience.com/creating-animation-to-show-4-centroid-based-clustering-algorithms-using-python-and-sklearn-d397ade89cb3)
- en: Using data visualization and animations to understand the process of 4 Centroid-based
    clustering algorithms.
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用数据可视化和动画来理解4种基于质心的聚类算法的过程。
- en: '[](https://medium.com/@borih.k?source=post_page-----d397ade89cb3--------------------------------)[![Boriharn
    K](../Images/1b23a79640f5272c1382918bfdba03b0.png)](https://medium.com/@borih.k?source=post_page-----d397ade89cb3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d397ade89cb3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d397ade89cb3--------------------------------)
    [Boriharn K](https://medium.com/@borih.k?source=post_page-----d397ade89cb3--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@borih.k?source=post_page-----d397ade89cb3--------------------------------)[![Boriharn
    K](../Images/1b23a79640f5272c1382918bfdba03b0.png)](https://medium.com/@borih.k?source=post_page-----d397ade89cb3--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d397ade89cb3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d397ade89cb3--------------------------------)
    [Boriharn K](https://medium.com/@borih.k?source=post_page-----d397ade89cb3--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d397ade89cb3--------------------------------)
    ·9 min read·Aug 16, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d397ade89cb3--------------------------------)
    ·阅读时间 9 分钟·2023年8月16日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/25a9aac387589c5c2e52ada5e0acd659.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/25a9aac387589c5c2e52ada5e0acd659.png)'
- en: Photo by [Mel Poole](https://unsplash.com/@melpoole?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Mel Poole](https://unsplash.com/@melpoole?utm_source=medium&utm_medium=referral)
    提供，发布在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Clustering analysis
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 聚类分析
- en: Clustering analysis is an effective machine learning technique that groups data
    by their similarities and differences. The obtained data groups can be used for
    various purposes, such as segmenting, structuring, and decision-making.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 聚类分析是一种有效的机器学习技术，通过数据的相似性和差异性将数据分组。获得的数据组可以用于各种目的，如分割、结构化和决策制定。
- en: To perform clustering analysis, many methods are available based on different
    algorithms. This article will mainly focus on centroid-based clustering, which
    is a common and useful technique.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行聚类分析，有许多基于不同算法的方法可供选择。本文将主要关注基于质心的聚类，这是一种常见且有用的技术。
- en: Centroid-based clustering
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于质心的聚类
- en: Basically, the centroid-based technique works by repeatedly calculating to obtain
    optimal centroids (cluster centers) and then assigning data points to the nearest
    ones.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，基于质心的技术通过反复计算来获得最佳的质心（聚类中心），然后将数据点分配给最近的质心。
- en: Due to having many iterations, data visualization can be used to express what
    happens during the process. Thus, the purpose of this article is to create animations
    to show the centroid-based process with Python and Sklearn.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 由于需要进行多次迭代，数据可视化可以用来表达过程中的变化。因此，本文的目的是使用 Python 和 Sklearn 创建动画，以展示基于质心的过程。
- en: '![](../Images/ceb40ec4b89cf6e64341067db7fb515b.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ceb40ec4b89cf6e64341067db7fb515b.png)'
- en: An example of a clustering animation in this article. Image by Author.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本文中的聚类动画示例。图片由作者提供。
- en: Sklearn ([Scikit-learn](https://scikit-learn.org/stable/index.html)) is a powerful
    library that helps us perform clustering analysis efficiently. The followings
    are the centroid-based clustering techniques that we will work with.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Sklearn ([Scikit-learn](https://scikit-learn.org/stable/index.html)) 是一个强大的库，帮助我们高效地执行聚类分析。以下是我们将使用的基于质心的聚类技术。
- en: '**K-means clustering**'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**K-means 聚类**'
- en: '**MiniBatch K-means clustering**'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**MiniBatch K-means 聚类**'
- en: '**Bisecting K-means clustering**'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Bisecting K-means 聚类**'
- en: '**Mean-Shift clustering**'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Mean-Shift 聚类**'
- en: Let’s get started
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 开始吧
- en: '**Getting Data**'
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**获取数据**'
- en: Start with importing libraries.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 从导入库开始。
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: As an example, this article will use a generated dataset, which can be easily
    created using sklearn’s `make_blobs()`. If you have your dataset, this step can
    be skipped.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 作为示例，本文将使用生成的数据集，该数据集可以使用 sklearn 的 `make_blobs()` 轻松创建。如果你有自己的数据集，可以跳过此步骤。
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/9ad10b163feb1b0e7d9fcc43a82a81ae.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9ad10b163feb1b0e7d9fcc43a82a81ae.png)'
- en: 1\. K-Means clustering
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. K-Means 聚类
- en: 'This is a common method for centroid-based clustering. The process can be briefly
    explained: starting with defining the number of clusters. Next, some data points
    are randomly selected as initial centroids. The other data points are assigned
    to the closest centroids using minimum [Euclidean](https://en.wikipedia.org/wiki/Euclidean_distance)
    distance.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一种基于质心的聚类常见方法。过程可以简要解释为：首先定义簇的数量。接下来，一些数据点被随机选择作为初始质心。其他数据点通过最小 [Euclidean](https://en.wikipedia.org/wiki/Euclidean_distance)
    距离分配到最近的质心。
- en: Then, re-initializing the centroids by calculating the average of each cluster’s
    data points. Thus, the centroids are updated. After that, repeat the process of
    assigning and re-initializing. The algorithm will keep on iterating until achieving
    the optimal centroids.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，通过计算每个簇的数据点的平均值来重新初始化质心。因此，质心将被更新。之后，重复分配和重新初始化的过程。算法将继续迭代，直到达到最佳质心。
- en: Now, let’s work with Python code. Start with defying a list of iteration numbers.
    As an example, this article will run only the first ten iterations. If you want
    to change the number, please feel free to modify the code below.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们开始使用 Python 代码。首先定义一个迭代次数的列表。作为示例，本文将只运行前十次迭代。如果你想更改数量，请随意修改下面的代码。
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Define a function and variables.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 定义函数和变量。
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Here comes the clustering process. We can use Sklearn’s [Kmeans](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.KMeans.html#sklearn.cluster.KMeans),
    the defined function, and Python’s for-loop to return three values: centroids,
    clustering labels, and boundaries in each iteration. These values will be kept
    in lists for plotting later.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是聚类过程。我们可以使用 Sklearn 的 [Kmeans](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.KMeans.html#sklearn.cluster.KMeans)、定义的函数和
    Python 的 for 循环来返回三个值：每次迭代中的质心、聚类标签和边界。这些值将保存在列表中以便后续绘图。
- en: '[PRE4]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Create a DataFrame from the list of clustering labels.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 从聚类标签列表中创建一个 DataFrame。
- en: '[PRE5]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/b6b9c1cd650d5b5ba1281c030b8786fe.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b6b9c1cd650d5b5ba1281c030b8786fe.png)'
- en: Define a function applying for-loop to create scatter plots. This function will
    also be applied to visualize other clustering techniques in this article as well.
    Please consider that the results are exported onto your computer as PNG files
    for combining into animation as a GIF file later.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 定义一个函数，使用 for 循环来创建散点图。这个函数也将用于可视化本文中的其他聚类技术。请注意，结果将导出为 PNG 文件，以便稍后合并成 GIF 动画。
- en: '[PRE6]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Plot the K-means clustering result.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制 K-means 聚类结果。
- en: '[PRE7]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../Images/cf82c48e94504194132f0b18fb07bc1d.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cf82c48e94504194132f0b18fb07bc1d.png)'
- en: An example of a scatter plot showing the K-means clustering process. Image by
    Author.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 展示 K-means 聚类过程的散点图示例。图像来源：作者。
- en: Define a function to combine the plots into an animation. The result will be
    saved onto your computer.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 定义一个函数，将图像合并为动画。结果将保存到你的计算机上。
- en: '[PRE8]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Apply the function.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 应用该函数。
- en: '[PRE9]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Voilà!!
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '看！ '
- en: '![](../Images/c5281ca679c9c9248e2c15568413dfbf.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c5281ca679c9c9248e2c15568413dfbf.png)'
- en: Animation showing the K-means clustering process. Image by Author.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 动画展示 K-means 聚类过程。图像来源：作者。
- en: The animation shows that data points are assigned to different clusters in the
    first iteration. Then, some data are allocated to adjacent clusters due to the
    recalculation. The red triangles show the centroids in each step. The process
    will keep continuing until the centroids reach the optimal points.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 动画显示了在第一次迭代中数据点被分配到不同的簇中。然后，由于重新计算，一些数据被分配到相邻的簇中。红色三角形显示了每一步的质心。该过程将持续进行，直到质心达到最佳点。
- en: 2\. MiniBatch K-means clustering
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. MiniBatch K-means 聚类
- en: Instead of processing all data points as the K-means clustering, MiniBatch K-means
    randomly takes small batches of data for each iteration. This results in improving
    the clustering speed while returning slightly different outcomes.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 与 K-means 聚类处理所有数据点不同，MiniBatch K-means 在每次迭代时随机取小批量数据。这会提高聚类速度，同时返回略有不同的结果。
- en: Sklearn’s [MiniBatchKmeans](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.MiniBatchKMeans.html#sklearn.cluster.MiniBatchKMeans)
    function can be used to perform the MiniBatch K-means clustering. We will use
    the same steps as previously explained in the K-means process.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Sklearn的 [MiniBatchKmeans](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.MiniBatchKMeans.html#sklearn.cluster.MiniBatchKMeans)
    函数可以用于执行MiniBatch K-means聚类。我们将使用与之前K-means过程相同的步骤。
- en: '[PRE10]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![](../Images/5b6aeb488c651a5ede851f1e0a753ddb.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5b6aeb488c651a5ede851f1e0a753ddb.png)'
- en: An example of a scatter plot showing the MiniBatch K-means clustering process.
    Image by Author.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 显示MiniBatch K-means聚类过程的散点图示例。图像来源：作者。
- en: Thanks to the defined function from the previous step. We can create an animation
    with just one line of code.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 多亏了前一步定义的函数，我们只需一行代码就可以创建动画。
- en: '[PRE11]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![](../Images/4b04d7cd265b78dc792ee2d702b2223a.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4b04d7cd265b78dc792ee2d702b2223a.png)'
- en: Animation showing the MiniBatch K-means clustering process. Image by Author.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 显示MiniBatch K-means聚类过程的动画。图像来源：作者。
- en: Compared with the result from K-means, clustering areas in the first iteration
    of MiniBatch K-means is approximately close to K-means’ fifth or sixth iteration.
    Thus, it can be noticed that the MiniBatch K-means returns faster clustering.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 与K-means的结果相比，MiniBatch K-means在第一次迭代中的聚类区域大致接近K-means的第五或第六次迭代。因此，可以看出MiniBatch
    K-means返回的聚类速度更快。
- en: 3\. Bisecting K-means clustering
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 二分K-means聚类
- en: Bisecting K-means applies K-means to divide the whole data points into two clusters
    in the first step. After that, the algorithm will select the cluster with the
    largest sum of squares to be divided into two clusters again. The process will
    keep repeating until the total number of clusters equals K.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 二分K-means算法在第一步应用K-means将所有数据点划分为两个簇。之后，算法将选择平方和最大的簇，再次将其划分为两个簇。这个过程会不断重复，直到簇的总数等于K。
- en: This algorithm can also be considered a hybrid method between [divisive hierarchical
    clustering](https://www.geeksforgeeks.org/ml-hierarchical-clustering-agglomerative-and-divisive-clustering/)
    and K-means. It is an effective way to deal with a large number of K.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这个算法也可以被视为 [划分层次聚类](https://www.geeksforgeeks.org/ml-hierarchical-clustering-agglomerative-and-divisive-clustering/)
    和K-means之间的一种混合方法。它是一种处理大量K的有效方法。
- en: Now we are going to work with the code part. Start by creating a list of numbers
    to use with the for-loop function. To compare with other algorithms in this article,
    I will make a list of numbers from one to five.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将处理代码部分。首先创建一个数字列表，用于for循环函数。为了与本文中的其他算法进行比较，我将创建一个从一到五的数字列表。
- en: '[PRE12]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Next, we will use [Sklearn](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.BisectingKMeans.html#sklearn.cluster.BisectingKMeans)’s
    `BisectingKMeans` function to do the Bisecting K-means clustering.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将使用 [Sklearn](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.BisectingKMeans.html#sklearn.cluster.BisectingKMeans)
    的 `BisectingKMeans` 函数来进行二分K-means聚类。
- en: '[PRE13]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![](../Images/d07501a72e78537b695944ea8768831d.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d07501a72e78537b695944ea8768831d.png)'
- en: An example of a scatter plot showing the Bisecting K-means clustering process.
    Image by Author.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 显示二分K-means聚类过程的散点图示例。图像来源：作者。
- en: Combine the plots into an animation.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 将图表合并成动画。
- en: '[PRE14]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![](../Images/b9b9a5231359ba52c865488d1d421653.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b9b9a5231359ba52c865488d1d421653.png)'
- en: Animation showing the Bisecting K-means clustering process. Image by Author.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 显示二分K-means聚类过程的动画。图像来源：作者。
- en: From the animation, it can be seen that the whole data points in the first step
    are divided into two clusters in the second step. Then, the cluster with a larger
    sum of squared is divided again into two clusters. Thus, we have three clusters
    in the third iteration. The bisecting K-means process will continue until the
    cluster number reaches the K number, which is five in this article.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 从动画中可以看到，在第一步中，所有数据点被划分为两个簇，在第二步中，平方和较大的簇再次被划分为两个簇。因此，在第三次迭代中我们有了三个簇。二分K-means过程将继续，直到簇的数量达到K值，即本文中的五个。
- en: 4\. Mean-shift clustering
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 均值漂移聚类
- en: Mean-shift clustering calculates the local mean point within a certain radius
    (bandwidth) and assigns data points toward the highest density. The algorithm
    will keep calculating until convergence. This method is also known as a hill-climbing
    algorithm due to its behavior.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 均值漂移聚类计算某一半径（带宽）内的局部均值点，并将数据点分配到最高密度的地方。算法会不断计算直到收敛。这种方法也被称为爬山算法，因为它的行为特征。
- en: '**Note:** Mean-shift clustering technique is also considered a density-based
    algorithm [[link1](https://en.wikipedia.org/wiki/Cluster_analysis#Density-based_clustering),
    [link2](https://www.geeksforgeeks.org/ml-mean-shift-clustering/)] as well.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** Mean-shift 聚类技术也被认为是一种基于密度的算法 [[link1](https://en.wikipedia.org/wiki/Cluster_analysis#Density-based_clustering),
    [link2](https://www.geeksforgeeks.org/ml-mean-shift-clustering/)]。'
- en: Next, let’s use [Sklearn](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.MeanShift.html)’s
    `MeanShift` function to do the Mean-shift clustering. The main difference compared
    with the previous K-means methods is that there is no need to define the number
    of K. By the way, we need to calculate the bandwidth for use as a parameter for
    Mean-shift clustering.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们使用 [Sklearn](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.MeanShift.html)
    的 `MeanShift` 函数进行 Mean-shift 聚类。与之前的 K-means 方法相比，主要区别在于不需要定义 K 的数量。顺便提一下，我们需要计算带宽作为
    Mean-shift 聚类的参数。
- en: '[PRE15]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![](../Images/2bf6b62dd8e52cc02d1667d8cfaf7031.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2bf6b62dd8e52cc02d1667d8cfaf7031.png)'
- en: An example of a scatter plot showing the Meanshift K-means clustering process.
    Image by Author.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 一个展示 Meanshift K-means 聚类过程的散点图示例。图像作者提供。
- en: Apply the function to create an animation.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 应用该函数以创建动画。
- en: '[PRE16]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Ta-da!!
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 哒哒！！
- en: '![](../Images/fc3deadfd7c28c8d97aa24a1e8a122b3.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fc3deadfd7c28c8d97aa24a1e8a122b3.png)'
- en: Animation showing the Meanshift clustering process. Image by Author.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 展示 Meanshift 聚类过程的动画。图像作者提供。
- en: In the first iteration, we can see many centroids due to the algorithm trying
    to find the highest density of data points within the bandwidth used. In the following
    iteration there are only three centroids in the second iteration and two centroids
    left in the following iterations. This happens because the algorithm keeps finding
    a higher density of data points for assigning centroids.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一次迭代中，我们可以看到许多质心，因为算法试图在使用的带宽内找到数据点的最高密度。在随后的迭代中，第二次迭代中只有三个质心，而接下来的迭代中只剩下两个质心。这是因为算法不断寻找更高的数据点密度来分配质心。
- en: Key takeaways
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关键要点
- en: In summary, the centroid-based clustering methods aim to find centroids to be
    used as references for clustering data. In order to achieve that, the algorithm
    has to calculate the centroids to get the optimal ones repeatedly. This results
    in the changes of centroids and clusters during the process.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，基于质心的聚类方法旨在找到质心作为数据聚类的参考。为实现这一目标，算法必须重复计算质心以获得最优的质心。这导致了在过程中质心和簇的变化。
- en: The purpose of this article is to apply data visualization to express the process,
    which can be useful in showing how each algorithm works and monitoring the change
    in the process. If you have any suggestions or questions, please feel free to
    comment.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 本文的目的是应用数据可视化来表达过程，这有助于展示每种算法的工作原理并监控过程中的变化。如果你有任何建议或问题，请随时评论。
- en: Thanks for reading.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读。
- en: 'Here are some of my data visualization articles that you may find interesting:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一些我写的数据可视化文章，你可能会觉得有趣：
- en: 'Visualizing 3 Sklearn Cross-validation: K-Fold, Shuffle & Split, and Time Series
    Split ([link](https://medium.com/towards-data-science/visualizing-sklearn-cross-validation-k-fold-shuffle-split-and-time-series-split-a13221eb5a56))'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可视化 3 种 Sklearn 交叉验证：K-Fold、Shuffle & Split 和 Time Series Split ([link](https://medium.com/towards-data-science/visualizing-sklearn-cross-validation-k-fold-shuffle-split-and-time-series-split-a13221eb5a56))
- en: 9 Visualizations with Python that Catch More Attention than a Bar Chart ([link](/9-visualizations-that-catch-more-attention-than-a-bar-chart-72d3aeb2e091))
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 9 个使用 Python 的可视化效果比条形图更吸引注意力 ([link](/9-visualizations-that-catch-more-attention-than-a-bar-chart-72d3aeb2e091))
- en: 8 Visualizations with Python to Handle Multiple Time-Series Data ([link](/8-visualizations-with-python-to-handle-multiple-time-series-data-19b5b2e66dd0))
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 8 个使用 Python 处理多时间序列数据的可视化 ([link](/8-visualizations-with-python-to-handle-multiple-time-series-data-19b5b2e66dd0))
- en: Visualizing the Effect of Multicollinearity on Multiple Regression Model ([link](https://medium.com/towards-data-science/visualizing-the-effect-of-multicollinearity-on-multiple-regression-model-8f323ef542a9))
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可视化多重共线性对多重回归模型的影响 ([link](https://medium.com/towards-data-science/visualizing-the-effect-of-multicollinearity-on-multiple-regression-model-8f323ef542a9))
- en: References
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考资料
- en: 'Techniques, A. (n.d.). *What are the benefits and challenges of using cluster
    analysis in decision making?*. Cluster Analysis for Decision Making: Benefits
    and Challenges. [https://www.linkedin.com/advice/3/what-benefits-challenges-using-cluster-analysis](https://www.linkedin.com/advice/3/what-benefits-challenges-using-cluster-analysis)'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Techniques, A. (n.d.). *使用聚类分析进行决策的好处和挑战是什么？*。《决策中的聚类分析：好处与挑战》。 [https://www.linkedin.com/advice/3/what-benefits-challenges-using-cluster-analysis](https://www.linkedin.com/advice/3/what-benefits-challenges-using-cluster-analysis)
- en: Wikimedia Foundation. (2023, July 24). *Cluster analysis*. Wikipedia. [https://en.wikipedia.org/wiki/Cluster_analysis](https://en.wikipedia.org/wiki/Cluster_analysis)
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wikimedia Foundation. (2023年7月24日). *聚类分析*。《维基百科》。 [https://en.wikipedia.org/wiki/Cluster_analysis](https://en.wikipedia.org/wiki/Cluster_analysis)
- en: '*Examples*. Scikit. (n.d.). [https://scikit-learn.org/stable/auto_examples](https://scikit-learn.org/stable/auto_examples/)'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*示例*。《Scikit》。 (n.d.). [https://scikit-learn.org/stable/auto_examples](https://scikit-learn.org/stable/auto_examples/)'
- en: Sharma, N. (2023, April 19). *K-means clustering explained*. neptune.ai. [https://neptune.ai/blog/k-means-clustering](https://neptune.ai/blog/k-means-clustering)
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sharma, N. (2023年4月19日). *K均值聚类解析*。《neptune.ai》。 [https://neptune.ai/blog/k-means-clustering](https://neptune.ai/blog/k-means-clustering)
- en: 'GeeksforGeeks. (2023b, January 23). *ML: Mini batch K-means clustering algorithm*.
    GeeksforGeeks. [https://www.geeksforgeeks.org/ml-mini-batch-k-means-clustering-algorithm](https://www.geeksforgeeks.org/ml-mini-batch-k-means-clustering-algorithm)'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GeeksforGeeks. (2023年1月23日). *机器学习：小批量K均值聚类算法*。《GeeksforGeeks》。 [https://www.geeksforgeeks.org/ml-mini-batch-k-means-clustering-algorithm](https://www.geeksforgeeks.org/ml-mini-batch-k-means-clustering-algorithm)
- en: Firdaus, A. (2020, May 9). *Bisecting K-means clustering*. Medium. [https://medium.com/@afrizalfir/bisecting-kmeans-clustering-5bc17603b8a2](https://medium.com/@afrizalfir/bisecting-kmeans-clustering-5bc17603b8a2)
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Firdaus, A. (2020年5月9日). *二分K均值聚类*。《Medium》。 [https://medium.com/@afrizalfir/bisecting-kmeans-clustering-5bc17603b8a2](https://medium.com/@afrizalfir/bisecting-kmeans-clustering-5bc17603b8a2)
- en: Yufeng. (2022, February 22). *Understanding mean shift clustering and implementation
    with Python*. Medium. [https://towardsdatascience.com/understanding-mean-shift-clustering-and-implementation-with-python-6d5809a2ac40](/understanding-mean-shift-clustering-and-implementation-with-python-6d5809a2ac40)
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Yufeng. (2022年2月22日). *理解均值漂移聚类及其在Python中的实现*。《Medium》。 [https://towardsdatascience.com/understanding-mean-shift-clustering-and-implementation-with-python-6d5809a2ac40](/understanding-mean-shift-clustering-and-implementation-with-python-6d5809a2ac40)
- en: Wikimedia Foundation. (2023, July 24). *Mean shift*. Wikipedia. [https://en.wikipedia.org/wiki/Mean_shift](https://en.wikipedia.org/wiki/Mean_shift)
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wikimedia Foundation. (2023年7月24日). *均值漂移*。《维基百科》。 [https://en.wikipedia.org/wiki/Mean_shift](https://en.wikipedia.org/wiki/Mean_shift)
