- en: 'Unlocking the Potential of JupyterLab: Discover the Powerful Text Editor You
    Never Knew You Had'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/unlocking-the-potential-of-jupyterlab-discover-the-powerful-text-editor-you-never-knew-you-had-af18bf5bce3f](https://towardsdatascience.com/unlocking-the-potential-of-jupyterlab-discover-the-powerful-text-editor-you-never-knew-you-had-af18bf5bce3f)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Unleash Your Coding Efficiency and Productivity in JupyterLab with a GreatText
    Editor
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://dpoulopoulos.medium.com/?source=post_page-----af18bf5bce3f--------------------------------)[![Dimitris
    Poulopoulos](../Images/ce535a1679779f5a2ec8b024e6691e50.png)](https://dpoulopoulos.medium.com/?source=post_page-----af18bf5bce3f--------------------------------)[](https://towardsdatascience.com/?source=post_page-----af18bf5bce3f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----af18bf5bce3f--------------------------------)
    [Dimitris Poulopoulos](https://dpoulopoulos.medium.com/?source=post_page-----af18bf5bce3f--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----af18bf5bce3f--------------------------------)
    ·6 min read·Mar 1, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/57b23df7d15ff6e2347d4393828a6cea.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Luca Bravo](https://unsplash.com/@lucabravo?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/XJXWbfSo2f0?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: 'This article is the first part of a series. Check out the full series: [Part
    II](/jupyter-already-has-a-perfect-text-editor-this-is-how-you-can-configure-it-4d3eb37878f1),
    [Part III](/jupyter-already-has-a-perfect-text-editor-building-a-python-ide-20063044749b),
    [Part IV](/the-perfect-text-editor-for-jupyter-a-complete-python-ide-608dd466560b).'
  prefs: []
  type: TYPE_NORMAL
- en: JupyterLab is an open-source web-based interactive coding environment that many
    would argue is not a complete IDE. One of the many reasons that support this is
    that JupyterLab does not have a powerful text editor.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/jupyter-is-now-a-full-fledged-ide-annual-review-751675634493?source=post_page-----af18bf5bce3f--------------------------------)
    [## Jupyter Is Now a Full-fledged IDE: Annual Review'
  prefs: []
  type: TYPE_NORMAL
- en: Omnipresence, tools to keep you in the zone, and education were the main themes
    for Project Jupyter in 2022
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/jupyter-is-now-a-full-fledged-ide-annual-review-751675634493?source=post_page-----af18bf5bce3f--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: JupyterLab allows users to create and share documents that contain live code,
    equations, visualizations, and narrative text. It provides a flexible and powerful
    platform for scientific computing, data analysis, and machine learning workflows
    while enabling users to run code in various environments, from local machines
    to remote servers and cloud services.
  prefs: []
  type: TYPE_NORMAL
- en: Yet, many data scientists and engineers use it only for experimentation. When
    it comes to productionize their work, they turn to an IDE to put all the pieces
    together.
  prefs: []
  type: TYPE_NORMAL
- en: The most popular IDE these days is Microsoft Visual Studio Code. VS Code, among
    others, offers a powerful text editor, a debugger, and multiple plugins that make
    working with Git, Docker, or almost any programming language a breeze. But what
    if I tell you you can have a similar experience in JupyterLab?
  prefs: []
  type: TYPE_NORMAL
- en: In this series of articles, we’ll build a VC Code experience in JupyterLab and
    create a Docker image that we can use anywhere we want as our custom workspace.
    Let’s begin!
  prefs: []
  type: TYPE_NORMAL
- en: '**Part II of this story is out:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/jupyter-already-has-a-perfect-text-editor-this-is-how-you-can-configure-it-4d3eb37878f1?source=post_page-----af18bf5bce3f--------------------------------)
    [## Jupyter Already Has a Perfect Text Editor: This is How You Can Configure It'
  prefs: []
  type: TYPE_NORMAL
- en: How to get a VS Code-like experience in Jupyter with a great text editor
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/jupyter-already-has-a-perfect-text-editor-this-is-how-you-can-configure-it-4d3eb37878f1?source=post_page-----af18bf5bce3f--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: '[Learning Rate](https://www.dimpo.me/newsletter?utm_source=medium&utm_medium=article&utm_campaign=neovim)
    is a newsletter for those who are curious about the world of ML and MLOps. If
    you want to learn more about topics like this subscribe [here](https://www.dimpo.me/newsletter?utm_source=medium&utm_medium=article&utm_campaign=neovim).
    You’ll hear from me on the last Sunday of every month with updates and thoughts
    on the latest MLOps news and articles!'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Why should you care?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before we begin, let’s answer one question: why should you care? You already
    have Visual Studio Code; why must you build a similar experience in JupyterLab?
    Moreover, VS Code already has a great editor for Jupyter Notebooks. As a matter
    of fact, I usually find the VS Code UI for Notebooks better.'
  prefs: []
  type: TYPE_NORMAL
- en: Well, if you code locally, you never ssh into a remote machine or use different
    workstations to do your work, then you probably don’t need this.
  prefs: []
  type: TYPE_NORMAL
- en: However, most of us today need to connect to a remote server to complete our
    tasks. For example, I use Kubeflow to design and run my ML experiments and pipelines.
    The coding environment in Kubeflow is usually a Jupyter server.
  prefs: []
  type: TYPE_NORMAL
- en: So, what would you do in such a case? Having a VS Code server can be challenging.
    You either have to [pay a subscription](https://github.com/features/codespaces)
    for it or learn to live with the limitations of the [code server](https://github.com/coder/code-server)
    (a great project, nonetheless). Any alternatives, preferably open-source ones?
  prefs: []
  type: TYPE_NORMAL
- en: This story is for you. At the end of this series, we’ll have a robust coding
    environment in JupyterLab for Python. Extending it to support more programming
    languages will be trivial.
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter already has the perfect text editor
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It may be a surprise to say that JupyterLab already has a great text editor.
    Why is that? Jupyter has a terminal emulator; thus, we can install Neovim. Then,
    we can configure Neovim to look and act however we want.
  prefs: []
  type: TYPE_NORMAL
- en: The ultimate goal for this series of articles is to install Neovim and make
    it work like a Python IDE. Trust me, in the end, you will have the core pieces
    you need to move away from VS Code towards a universal text editor, one that you
    can take with you anywhere.
  prefs: []
  type: TYPE_NORMAL
- en: 'The finished experience will look something like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/bf26f9b2d357744f69b3527f9800cfe0.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: We see a complete IDE experience with a file explorer, a code outline, an integrated
    terminal, code linting, and IntelliSense with code completion and documentation
    pop-ups! We even have little quirks like a beautiful status bar and icons for
    each file according to its contents.
  prefs: []
  type: TYPE_NORMAL
- en: In future articles, we’ll explore every hidden gem, like multiline commenting,
    the spell checker, navigating the panes, and configuring the plugins in a VS Code
    native way. For starters, let’s install Neovim and create our initial configuration.
  prefs: []
  type: TYPE_NORMAL
- en: Install Neovim in JupyterLab
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The first step towards creating this VS Code-like experience in Jupyter is
    running a Jupyter server that we can configure. We’ll use the upstream data science
    image, which we will pull from DockerHub. So, whenever you’re ready, run the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: We need `sudo` access because we will install various Debian packages and plugins.
    The arguments we pass will grant the default user (`jovyan`) passwordless access
    to `sudo` rights. More about this in the [docs](https://jupyter-docker-stacks.readthedocs.io/en/latest/using/recipes.html#using-sudo-within-a-container).
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, launch a terminal in JupyterLab and install the latest version of Neovim:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'To verify that everything works as expected, run `nvim`. At the time of writing
    this, the latest stable version is `v0.8.3`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a4c435b5b0938c38e14c1c713a8756eb.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Autor
  prefs: []
  type: TYPE_NORMAL
- en: Learn Vim
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Neovim is based on Vim, a powerful and highly customizable text editor mainly
    for Unix-like operating systems. It is designed to be used entirely from the keyboard,
    with commands based on a combination of keystrokes and mnemonic abbreviations.
  prefs: []
  type: TYPE_NORMAL
- en: So, why Neovim and not Vim? Neovim is a fork of Vim, which means it is based
    on the same core code as Vim but with additional features and improvements. The
    primary goal of Neovim is to provide better extensibility, more modern development
    practices, and a more maintainable codebase than Vim.
  prefs: []
  type: TYPE_NORMAL
- en: There are many advantages of Neovim over Vim, but enumerating them is not the
    goal of this article. However, if you know how to navigate around Vim, you can
    transfer this knowledge to Neovim. Thus, let’s see how to learn ViM!
  prefs: []
  type: TYPE_NORMAL
- en: 'There are many resources available online; however, the best way, in my opinion,
    is `vimtutor`. First, install Vim:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, run `vimtutor` in a terminal:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3205653c243a0c1599f1c7b572f8478a.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: '`vimtutor` has seven lessons covering the fundamental concepts of Vim. Completing
    this interactive tutorial will give you all the tools you need to start with Vim
    and Neovim.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In this article, I’ll leave you with this: learn your Vim bindings! Don’t worry
    if you forget some keystrokes; practice will make everything easier.'
  prefs: []
  type: TYPE_NORMAL
- en: In the following article, we’ll start configuring Neovim. We’ll start by configuring
    the core functionality and looks of the editor. Then, we’ll dive deeper into more
    specialized plugins that will transform our editor into a feature-packed Python
    IDE.
  prefs: []
  type: TYPE_NORMAL
- en: About the Author
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: My name is [Dimitris Poulopoulos](https://www.dimpo.me/?utm_source=medium&utm_medium=article&utm_campaign=neovim),
    and I’m a machine learning engineer working for [Arrikto](https://www.arrikto.com/).
    I have designed and implemented AI and software solutions for major clients such
    as the European Commission, Eurostat, IMF, the European Central Bank, OECD, and
    IKEA.
  prefs: []
  type: TYPE_NORMAL
- en: If you are interested in reading more posts about Machine Learning, Deep Learning,
    Data Science, and DataOps, follow me on [Medium](https://towardsdatascience.com/medium.com/@dpoulopoulos/follow),
    [LinkedIn](https://www.linkedin.com/in/dpoulopoulos/), or [@james2pl](https://twitter.com/james2pl)
    on Twitter.
  prefs: []
  type: TYPE_NORMAL
- en: Opinions expressed are solely my own and do not express the views or opinions
    of my employer.
  prefs: []
  type: TYPE_NORMAL
