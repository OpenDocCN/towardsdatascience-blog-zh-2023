["```py\nimport pandas as pd\nimport pydeck as pdk\n```", "```py\n# Specify the column names to keep:\ncolumns_to_keep = [\"city\", \"lat\", \"lng\", \"population\", 'density']\n\n# Load the CSV file into a DataFrame and keep only the specified columns:\ndf_us = pd.read_csv('https://bit.ly/3ObClvP', usecols=columns_to_keep)\n\n# Scale the population column for easier comparison to Australia:\ndf_us['popl_div_100'] = (df_us['population'] / 100)  \n\ndisplay(df_us)\n```", "```py\n# Build the map layer:    \nlayer = pdk.Layer(type='ColumnLayer',\n                  data=df_us,\n                  get_position=['lng', 'lat'],\n                  get_elevation='population',\n                  auto_highlight=True,\n                  elevation_scale=0.03,\n                  pickable=True,\n                  get_fill_color=['population', 255],\n                  coverage=5)\n\n# Set the view parameters:\nview_state = pdk.ViewState(longitude=-95, \n                           latitude=36,\n                           zoom=3.8,\n                           min_zoom=3,\n                           max_zoom=15,\n                           pitch=45.0,\n                           bearing=0)\n\n# Render the map:\nr = pdk.Deck(layers=[layer], initial_view_state=view_state)\nr.to_html('usa_popl.html')\n```", "```py\n# Build the map layer:\nlayer = pdk.Layer(type='ColumnLayer', \n                  data=df_us,\n                  get_position=['lng', 'lat'],\n                  get_elevation='density',\n                  auto_highlight=True,\n                  elevation_scale=20,\n                  pickable=True,\n                  get_fill_color=['density', 220],\n                  coverage=2)\n\n# Set the view parameters:\nview_state = pdk.ViewState(longitude=-95,\n                           latitude=36,\n                           zoom=3.8,\n                           min_zoom=3,\n                           max_zoom=15,\n                           pitch=45.0,\n                           bearing=0)\n\n# Render the map:\nr = pdk.Deck(layers=[layer], initial_view_state=view_state)\nr.to_html('usa_density.html')\n```", "```py\n## Specify the column names to keep:\ncolumns_to_keep = [\"city\", \"lat\", \"lng\", \"population\"]\n\n# Load the Australia CSV file into a DataFrame:\ndf_au = pd.read_csv('https://bit.ly/3PXwziA', usecols=columns_to_keep)\ndf_au['popl_div_100'] = (df_au['population'] / 100)\ndisplay(df_au)\n```", "```py\n# Build the map layer:      \nlayer = pdk.Layer(type='ColumnLayer',\n                  data=df_au,\n                  get_position=['lng', 'lat'],\n                  get_elevation='population',\n                  auto_highlight=True,\n                  elevation_scale=0.2,\n                  pickable=True,\n                  get_fill_color=['popl_div_100', 220],\n                  coverage=6)\n\n# Set the view parameters:\nview_state = pdk.ViewState(longitude=138,\n                           latitude=-33,\n                           zoom=3.6,\n                           min_zoom=3,\n                           max_zoom=15,\n                           pitch=55.0,\n                           bearing=310)\n\n# Render the map:\nr = pdk.Deck(layers=[layer], initial_view_state=view_state)\nr.to_html('au.html')\n```", "```py\n# Build the map layer:      \nlayer = pdk.Layer(type='ColumnLayer',\n                  data=df_us,\n                  get_position=['lng', 'lat'],\n                  get_elevation='popl_div_100',\n                  auto_highlight=True,\n                  elevation_scale=30,\n                  pickable=True,\n                  get_fill_color=[0, 0, 0],\n                  coverage=3)\n\n# Set the view:\nview_state = pdk.ViewState(longitude=-95,\n                           latitude=36,\n                           zoom=3,\n                           min_zoom=3,\n                           max_zoom=15,\n                           pitch=0,\n                           bearing=0)\n\n# Render the map:\nr = pdk.Deck(layers=[layer], initial_view_state=view_state,\n             map_style=pdk.map_styles.LIGHT)\nr.to_html('us_popl_light.html')\n```"]