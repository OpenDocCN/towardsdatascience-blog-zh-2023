["```py\ndef subtract_open_from_close(df):\n    subtracted_price = []\n    for i,row in df.iterrows():\n        subtracted_price.append(row['Open'] - row['Close'])\n\n    df['SubtractedPrice'] = subtracted_price\n    return df\n\n%timeit -n 1 -r 1 subtract_open_from_close(df)\n14 s ± 0 ns per loop (mean ± std. dev. of 1 run, 1 loop each)\n```", "```py\ndef subtract_open_from_close_vectorized(df):\n    df['SubtractedPrice'] = df['Open'] - df['Close']\n    return df\n\n%timeit subtract_open_from_close_vectorized(df)\n2.24 ms ± 57.3 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)\n```", "```py\ndf = spread_df.copy()\ndef subtract_open_from_close(df):\n    subtracted_price = []\n    for tup in df.itertuples():\n        subtracted_price.append(tup.Open - tup.Close)\n\n    df['SubtractedPrice'] = subtracted_price\n    return df\n\n%timeit -n 1 -r 1 subtract_open_from_close(df)\n821 ms ± 0 ns per loop (mean ± std. dev. of 1 run, 1 loop each)\n```", "```py\n%timeit df[df['ExtractDate'] == '2022-01-03']\n61.7 ms ± 1.67 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)\n\n%timeit df.query(\"ExtractDate=='2022-01-03'\")\n32.4 ms ± 1.4 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)\n```", "```py\njan22 = df[df['ExtractDate'].str.startswith('2022-01')] # 2279 rows\n\n%timeit jan22[jan22['ExtractDate'] == '2022-01-03']\n339 µs ± 13.8 µs per loop (mean ± std. dev. of 7 runs, 1,000 loops each)\n\n%timeit jan22.query(\"ExtractDate=='2022-01-03'\")\n831 µs ± 37.5 µs per loop (mean ± std. dev. of 7 runs, 1,000 loops each)\n```", "```py\n%timeit df.to_csv(\"data.csv\")\n1.82 s ± 43.7 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n\n%timeit df.to_parquet('data.parquet.gzip', compression='gzip')\n1.07 s ± 26.1 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n```", "```py\n%timeit df = pd.read_csv(\"data.csv\")\n212 ms ± 8.1 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n\n%timeit df = pd.read_parquet('data.parquet.gzip')\n73 ms ± 1.89 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)\n```", "```py\n **Thanks for reading the post!** \n            I really hope you enjoyed it and found it insightful.\n\n          Follow me for more content like this one, it helps a lot!\n                                  **@polmarin**\n```"]