["```py\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nfrom neuralforecast.core import NeuralForecast\nfrom neuralforecast.models import NHITS, NBEATS, TimesNet\n\nfrom neuralforecast.losses.numpy import mae, mse\n```", "```py\ndf = pd.read_csv('data/etth1.csv')\n\ndf['ds'] = pd.to_datetime(df['ds'])\n\ndf.head()\n```", "```py\nfig, ax = plt.subplots()\n\nax.plot(df['y'])\nax.set_xlabel('Time')\nax.set_ylabel('Oil temperature')\n\nfig.autofmt_xdate()\nplt.tight_layout()\n```", "```py\nhorizon = 96\n\nmodels = [NHITS(h=horizon,\n               input_size=2*horizon,\n               max_steps=50),\n         NBEATS(h=horizon,\n               input_size=2*horizon,\n               max_steps=50),\n         TimesNet(h=horizon,\n                 input_size=2*horizon,\n                 max_steps=50)]\n```", "```py\nnf = NeuralForecast(models=models, freq='H')\n```", "```py\npreds_df = nf.cross_validation(df=df, step_size=horizon, n_windows=2)\n```", "```py\nfig, ax = plt.subplots()\n\nax.plot(preds_df['y'], label='actual')\nax.plot(preds_df['NHITS'], label='N-HITS', ls='--')\nax.plot(preds_df['NBEATS'], label='N-BEATS', ls=':')\nax.plot(preds_df['TimesNet'], label='TimesNet', ls='-.')\n\nax.legend(loc='best')\nax.set_xlabel('Time steps')\nax.set_ylabel('Oil temperature')\n\nfig.autofmt_xdate()\nplt.tight_layout()\n```", "```py\ndata = {'N-HiTS': [mae(preds_df['NHITS'], preds_df['y']), mse(preds_df['NHITS'], preds_df['y'])],\n       'N-BEATS': [mae(preds_df['NBEATS'], preds_df['y']), mse(preds_df['NBEATS'], preds_df['y'])],\n       'TimesNet': [mae(preds_df['TimesNet'], preds_df['y']), mse(preds_df['TimesNet'], preds_df['y'])]}\n\nmetrics_df = pd.DataFrame(data=data)\nmetrics_df.index = ['mae', 'mse']\n\nmetrics_df.style.highlight_min(color='lightgreen', axis=1)\n```"]