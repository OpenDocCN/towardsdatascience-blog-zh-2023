- en: Slicing A Pandas Dataframe Using “&” and “|” Instead of “and” and “or”
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用“&”和“|”而不是“and”和“or”来切片 Pandas 数据框
- en: 原文：[https://towardsdatascience.com/slicing-a-pandas-dataframe-using-and-instead-of-and-and-or-eca8fed7751](https://towardsdatascience.com/slicing-a-pandas-dataframe-using-and-instead-of-and-and-or-eca8fed7751)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/slicing-a-pandas-dataframe-using-and-instead-of-and-and-or-eca8fed7751](https://towardsdatascience.com/slicing-a-pandas-dataframe-using-and-instead-of-and-and-or-eca8fed7751)
- en: 3-MINUTES PANDAS
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3分钟 Pandas
- en: 'when you see ValueError: The truth value of a Series is ambiguous. Use a.empty,
    a.bool(), a.item(), a.any() or a.all()'
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '当你看到 ValueError: The truth value of a Series is ambiguous. Use a.empty, a.bool(),
    a.item(), a.any() or a.all() 时'
- en: '[](https://jianan-lin.medium.com/?source=post_page-----eca8fed7751--------------------------------)[![Yufeng](../Images/8b1a4c165aaac045ea819f850017b7cd.png)](https://jianan-lin.medium.com/?source=post_page-----eca8fed7751--------------------------------)[](https://towardsdatascience.com/?source=post_page-----eca8fed7751--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----eca8fed7751--------------------------------)
    [Yufeng](https://jianan-lin.medium.com/?source=post_page-----eca8fed7751--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://jianan-lin.medium.com/?source=post_page-----eca8fed7751--------------------------------)[![Yufeng](../Images/8b1a4c165aaac045ea819f850017b7cd.png)](https://jianan-lin.medium.com/?source=post_page-----eca8fed7751--------------------------------)[](https://towardsdatascience.com/?source=post_page-----eca8fed7751--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----eca8fed7751--------------------------------)
    [Yufeng](https://jianan-lin.medium.com/?source=post_page-----eca8fed7751--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----eca8fed7751--------------------------------)
    ·6 min read·Apr 14, 2023
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----eca8fed7751--------------------------------)
    ·阅读时间6分钟·2023年4月14日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/500c0747fef4427deeade943cf346e84.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/500c0747fef4427deeade943cf346e84.png)'
- en: Photo by [TJ Arnold](https://unsplash.com/@missinformed?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [TJ Arnold](https://unsplash.com/@missinformed?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Data filtering/slicing is an everyday task if you work with data.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你处理数据，数据过滤/切片是一项日常任务。
- en: The general idea of data slicing is to select the rows whose column values meet
    certain criteria. For example, choose the rows whose second column value is less
    than 3, the rows whose third column value is in a pre-defined list, the rows whose
    fifth column value starts with ‘ABC’, and so on ([see this post for how to do
    slicing in details](https://medium.com/towards-data-science/extract-rows-columns-from-a-dataframe-in-python-r-678e5b6743d6)).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 数据切片的一般思路是选择那些列值符合特定标准的行。例如，选择第二列值小于3的行、选择第三列值在预定义列表中的行、选择第五列值以‘ABC’开头的行等（[详细了解如何切片](https://medium.com/towards-data-science/extract-rows-columns-from-a-dataframe-in-python-r-678e5b6743d6)）。
- en: If you do the data slicing in the Python library `pandas`and combine several
    criteria by `and`or `or`operators, you must have encountered this,
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在 Python 库`pandas`中进行数据切片，并使用`and`或`or`运算符结合多个标准，你一定遇到过这种情况。
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Here’s an example. Let’s create a data frame in pandas,
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个示例。让我们在 pandas 中创建一个数据框，
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The data frame looks like this,
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 数据框如下所示，
- en: '![](../Images/73a4f2d2f68c867403473f925ed507ec.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/73a4f2d2f68c867403473f925ed507ec.png)'
- en: created toy data frame (image by author)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 创建的玩具数据框（图片由作者提供）
- en: Then, by using ‘***and***’, we tried to select the persons who are at most 25
    years old but earn at least 50,000 per year.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，使用‘***and***’，我们尝试选择年龄不超过25岁但年收入至少为50,000的人。
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Here’s what I got,
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我得到的结果，
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: I used `and` to combine the two criteria together in order to get the rows that
    meet both criteria from the data frame.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用了`and`来将两个标准结合在一起，以便从数据框中获取满足两个标准的行。
- en: I receive this “value error” because it’s ambiguous to treat a pandas series
    object as a boolean object even though that pandas series consist of boolean values.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我收到这个“值错误”，因为即使该 pandas series 由布尔值组成，将 pandas series 对象视为布尔对象仍然是模糊的。
- en: Specifically, in the expression `(df[‘age’]<=30) and (df[‘income’]>=50000)`,
    Python tried to convert the boolean pandas Series `df[‘age’]<=30` and `df[‘income’]>=50000`
    to a single bool value first.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 具体来说，在表达式 `(df[‘age’]<=30) and (df[‘income’]>=50000)` 中，Python 尝试将布尔 pandas
    Series `df[‘age’]<=30` 和 `df[‘income’]>=50000` 首先转换为单个布尔值。
- en: It’s ambiguous because Python doesn’t know whether it should assign it to `True`
    only if all the values are `True` or if any of the values are `True` . Therefore,
    it resulted in a value error.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这很模糊，因为Python不知道是应该仅当所有值都为`True`时才分配`True`，还是只要任何一个值为`True`。因此，结果出现了值错误。
- en: It’s very simple to solve such a problem and the key is to avoid converting
    the pandas series to a single boolean value.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 解决此类问题非常简单，关键是避免将pandas系列转换为单一布尔值。
- en: Avoid pandas.Series() to bool conversion
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 避免pandas.Series()到布尔值的转换
- en: In the example above, we actually need an element-wise `and` between two pandas
    series. Here we go.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的例子中，我们实际上需要在两个pandas系列之间进行逐元素的`and`操作。来吧。
- en: The simplest solution is to change `and` to `&` .
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的解决方案是将`and`改为`&`。
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: which yields,
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 结果为，
- en: '![](../Images/d338e8149e90459d310bbbef768a7f65.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d338e8149e90459d310bbbef768a7f65.png)'
- en: '& instead of `and` result (image by author)'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`&`而非`and`结果（作者提供的图片）'
- en: Same thing for the `or` operation.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`or`操作也是一样的。'
- en: For example, we want to select the persons whose is still a student or is under
    25 years old.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们希望选择那些仍然是学生或者年龄在25岁以下的人。
- en: Using `or` will result in the same value error as using `and` ,
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`or`将导致与使用`and`相同的值错误，
- en: '[PRE5]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Instead, we should do this,
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，我们应该这样做，
- en: '[PRE7]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: which yields,
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 结果为，
- en: '![](../Images/7b4b152441e492c9f3f16d9a002063fe.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7b4b152441e492c9f3f16d9a002063fe.png)'
- en: '| instead of ‘or’ result (image by author)'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`|`而非`or`结果（作者提供的图片）'
- en: Of course, we can also use the NumPy functions to achieve the same operation
    because the pandas series are built upon NumPy arrays.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们也可以使用NumPy函数来实现相同的操作，因为pandas系列是建立在NumPy数组之上的。
- en: '[PRE8]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: which gives us the same result as using `&` ,
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 结果与使用`&`得到的相同，
- en: '![](../Images/e966a98f2aacab3cb7e56f7104c124b9.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e966a98f2aacab3cb7e56f7104c124b9.png)'
- en: np.logical_and() result (image by author)
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: np.logical_and()结果（作者提供的图片）
- en: And similarly for the `or` operation,
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`or`操作也是类似的，
- en: '[PRE9]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: which yields,
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 结果为，
- en: '![](../Images/1e0eccb7f92e20eee96eee87159ec079.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1e0eccb7f92e20eee96eee87159ec079.png)'
- en: np.logical_or() result (image by author)
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: np.logical_or()结果（作者提供的图片）
- en: To make the codes look tidy, I recommend using `&` and `|` for data slicing.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使代码看起来整洁，我建议在数据切片中使用`&`和`|`。
- en: Avoid chained comparisons
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 避免链式比较
- en: Sometimes you may get confused when you do use `&` and `|` but still get the
    same errors.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 有时你可能会感到困惑，即使使用了`&`和`|`，仍然得到相同的错误。
- en: It’s a high chance that you did the chained comparisons.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 你很可能做了链式比较。
- en: For example, by using the same data above, we want to get those persons between
    20 to 25 years old and with a GPA of at least 3.0.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，使用上述相同的数据，我们希望获取那些年龄在20到25岁之间且GPA至少为3.0的人。
- en: '[PRE10]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: which yields,
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 结果为，
- en: '[PRE11]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Don’t confuse this error with the ones we see above. Even though the error messages
    are the same, the reason is no more about the `&` operation. It’s about the chained
    comparisons in `20<df['age']<25` .
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 不要将此错误与我们上面看到的错误混淆。虽然错误信息相同，但原因不再是`&`操作。这是关于`20<df['age']<25`的链式比较。
- en: It’s not allowed to do the chained comparisons in pandas data slicing, unfortunately.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，pandas数据切片中不允许进行链式比较。
- en: Therefore, the chained comparisons have to be split into two standalone comparisons.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，链式比较必须拆分为两个独立的比较。
- en: '[PRE12]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Now we get the correct result,
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们得到了正确的结果，
- en: '![](../Images/fa2d543f4b27336ceecb74047e64362f.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fa2d543f4b27336ceecb74047e64362f.png)'
- en: avoid chained comparisons (image by author)
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 避免链式比较（作者提供的图片）
- en: And don’t forget to use parenthesis for every criterion you want to use `&`
    or `|` to combine, otherwise the operators `&` and `|` will get higher precedence
    to execute than the comparisons.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 并且不要忘记对每个你希望用`&`或`|`结合的条件使用括号，否则操作符`&`和`|`将比比较操作有更高的优先级。
- en: For example,
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，
- en: '[PRE13]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: will give the same error message.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 将给出相同的错误信息。
- en: '[PRE14]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Takeaways
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 重点总结
- en: Use `&` and `|` instead of `and` and `or` to combine comparisons in the pandas
    data slicing.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`&`和`|`而非`and`和`or`来结合pandas数据切片中的比较。
- en: Avoid using chained comparisons as one criterion for data slicing.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 避免使用链式比较作为数据切片的一个标准。
- en: Thanks for reading! Hope you enjoy using the Pandas trick in your work!
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读！希望你在工作中享受使用Pandas技巧！
- en: Please [subscribe to my Medium](https://jianan-lin.medium.com/subscribe) if
    you want to read more stories from me. And you can also join the Medium membership
    by my [referral link](https://jianan-lin.medium.com/membership)!
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想阅读更多我的故事，请[订阅我的Medium](https://jianan-lin.medium.com/subscribe)。你还可以通过我的[推荐链接](https://jianan-lin.medium.com/membership)加入Medium会员！
