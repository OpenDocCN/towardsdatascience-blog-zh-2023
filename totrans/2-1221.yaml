- en: How to Perform Image Segmentation with Thresholding Using OpenCV
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用 OpenCV 进行阈值化图像分割
- en: 原文：[https://towardsdatascience.com/how-to-perform-image-segmentation-with-thresholding-using-opencv-b2a78abb07ac](https://towardsdatascience.com/how-to-perform-image-segmentation-with-thresholding-using-opencv-b2a78abb07ac)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-perform-image-segmentation-with-thresholding-using-opencv-b2a78abb07ac](https://towardsdatascience.com/how-to-perform-image-segmentation-with-thresholding-using-opencv-b2a78abb07ac)
- en: '![](../Images/d02ca3281b7d0e272bd0b812d2f46411.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d02ca3281b7d0e272bd0b812d2f46411.png)'
- en: Photo by [Lysander Yuen](https://unsplash.com/@lysanderyuen?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Lysander Yuen](https://unsplash.com/@lysanderyuen?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Simple, Otsu, and Adaptive Thresholding Implementation with Examples
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简单、Otsu 和自适应阈值化的实现及示例
- en: '[](https://rashida00.medium.com/?source=post_page-----b2a78abb07ac--------------------------------)[![Rashida
    Nasrin Sucky](../Images/42bd057e8eca255907c43c29a498f2ca.png)](https://rashida00.medium.com/?source=post_page-----b2a78abb07ac--------------------------------)[](https://towardsdatascience.com/?source=post_page-----b2a78abb07ac--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----b2a78abb07ac--------------------------------)
    [Rashida Nasrin Sucky](https://rashida00.medium.com/?source=post_page-----b2a78abb07ac--------------------------------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://rashida00.medium.com/?source=post_page-----b2a78abb07ac--------------------------------)[![Rashida
    Nasrin Sucky](../Images/42bd057e8eca255907c43c29a498f2ca.png)](https://rashida00.medium.com/?source=post_page-----b2a78abb07ac--------------------------------)[](https://towardsdatascience.com/?source=post_page-----b2a78abb07ac--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----b2a78abb07ac--------------------------------)
    [Rashida Nasrin Sucky](https://rashida00.medium.com/?source=post_page-----b2a78abb07ac--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----b2a78abb07ac--------------------------------)
    ·6 min read·Jan 12, 2023
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----b2a78abb07ac--------------------------------)
    ·6分钟阅读·2023年1月12日
- en: --
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: One of the most commonly used segmentation techniques is thresholding. It is
    widely used in computer vision and is very useful to separate the object that
    we are interested in from the background. This article will focus on the thresholding
    techniques in OpenCV.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 阈值化是最常用的分割技术之一。它在计算机视觉中被广泛使用，并且对于将我们感兴趣的对象从背景中分离出来非常有用。本文将重点讨论 OpenCV 中的阈值化技术。
- en: There are three different types of thresholding. We will know how they work
    at a high level and basically focus on how to use them in OpenCV with examples.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 有三种不同类型的阈值化方法。我们将了解它们的高层工作原理，并主要关注如何在 OpenCV 中使用它们及示例。
- en: What is Thresholding
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是阈值化
- en: Thresholding is the process of binarization of an image. If you get confused
    between grayscale images and binary images as I used to in my beginning, in grayscale
    images, there might be an array of shades. But in the binary images, the pixel
    values are either 0 or 255.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 阈值化是图像二值化的过程。如果你像我刚开始时一样对灰度图像和二值图像感到困惑，灰度图像可能有一系列的阴影。但在二值图像中，像素值要么是0，要么是255。
- en: Simple Thresholding
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简单阈值化
- en: This is the most basic type of thresholding and is harder to use in a lot of
    practical applications. But still, we need to start with learning this one to
    understand how thresholding actually works. We will see how simple thresholding
    can work well.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一种最基本的阈值化方法，在许多实际应用中更难使用。但我们仍然需要从学习这种方法开始，以理解阈值化的实际工作原理。我们将看到简单阈值化如何发挥作用。
- en: '**Simple thresholding can work well in very controlled lighting conditions
    where there is high contrast between the foreground (the object we are interested
    in, in the image) and background.** The hardest part about simple thresholding
    is, we need to manually supply the threshold values which may take a lot of trials.
    In that way, it may become very time-consuming. Let’s work on an example.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**简单的阈值化在前景（图像中我们感兴趣的对象）和背景之间对比度高的非常受控的光照条件下表现良好。** 简单阈值化最困难的部分在于，我们需要手动提供阈值，这可能需要多次试验。这样，可能会变得非常耗时。让我们来做一个示例。'
- en: We will use the following image for this tutorial. Please feel free to save
    this image and follow along.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用以下图像进行本教程。请随意保存此图像并跟随操作。
- en: '![](../Images/f6aa932fe5bacf571bc1c77e437b73f9.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f6aa932fe5bacf571bc1c77e437b73f9.png)'
- en: Photo by [Lucas Hoang](https://unsplash.com/@zuizuii?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由[Lucas Hoang](https://unsplash.com/@zuizuii?utm_source=medium&utm_medium=referral)提供，在[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)上
- en: First, we need to import the necessary libraries.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要导入必要的库。
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Reading the image using OpenCV as an array:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 使用OpenCV将图像读取为数组：
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: As thresholding is binarization, we start with a grayscale image. Also, using
    a Gaussian blur on the grayscale image will help get rid of some high-frequency
    edges and noises.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 由于阈值化是二值化，我们从灰度图像开始。此外，对灰度图像应用高斯模糊有助于去除一些高频边缘和噪声。
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Here is the simple thresholding:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这是简单的阈值化：
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The first parameter is the blurred image,
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个参数是模糊后的图像，
- en: 45 is the threshold value that says if the pixel value is greater than 45 it
    will become 255, otherwise 0\. So, the third parameter is 255\. If you choose
    a value different than 255, such as 200, the pixels greater than 45 will become
    200**.**
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 45是阈值，表示如果像素值大于45，它将变为255，否则为0。因此，第三个参数是255。如果你选择不同于255的值，如200，那么大于45的像素将变为200**。**
- en: Please feel free to try with a different value and see what happens.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 请随意尝试不同的值，看看会发生什么。
- en: I decided to use a threshold value of 45 after a lot of trials.
  id: totrans-29
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在经过很多次试验后，我决定使用阈值45。
- en: 'So, it took some time. Here is what ‘thresh’ looks like:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，花了一些时间。这是‘thresh’的样子：
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/479f2fcf937fe14d2e88db3061d56355.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/479f2fcf937fe14d2e88db3061d56355.png)'
- en: Image by Author
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: 'We can use cv2.THRESH_BINARY_INV as well which will do the otherwise. Let’s
    see how it looks if the same threshold value 45 is used with cv2.THRESH_BINARY_INV:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以使用cv2.THRESH_BINARY_INV，它会做相反的操作。让我们看看如果用cv2.THRESH_BINARY_INV使用相同的阈值45效果如何：
- en: '[PRE5]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/bccfe144b6d159b97e4a6b2ff83b550b.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bccfe144b6d159b97e4a6b2ff83b550b.png)'
- en: Image by Author
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: In this case, when the pixel is greater than the threshold value of 45, it becomes
    0 and 255 otherwise.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，当像素大于阈值45时，它变为0，否则为255。
- en: As I mentioned before I had to go through quite a few trials to find that threshold
    value of 45.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我之前提到的，我经历了很多次试验才找到阈值45。
- en: But if the lighting conditions is different for the same picture this threshold
    value wouldn’t work.
  id: totrans-40
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 但如果同一张图片的光照条件不同，这个阈值将不起作用。
- en: That’s why in a real-world application where we may not have prior knowledge
    about the lighting condition, it is hard to work this way. **We need to find an
    optimum threshold value that can scale.**
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么在实际应用中，当我们可能没有关于光照条件的先验知识时，这种方法很难使用。 **我们需要找到一个可以缩放的最佳阈值。**
- en: Otsu Thresholding
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Otsu 阈值化
- en: In Otsu’s thresholding, OpenCV finds an optimum threshold value for you. It
    takes the grayscale image and computes the optimum threshold value, T.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在Otsu的阈值化中，OpenCV为你找到最佳阈值。它接受灰度图像并计算最佳阈值T。
- en: Here is a high-level overview of how Otsu’s method chooses the threshold value.
    If a distribution is made with all the pixel values of a grayscale image, Otsu’s
    method finds a threshold that optimally separates the peaks of the distribution.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是Otsu方法选择阈值的高级概述。如果用所有灰度图像的像素值制作分布图，Otsu方法会找到一个最佳阈值，来最优地分隔分布的峰值。
- en: '[PRE6]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Look, here we used 0 as the threshold value. Simply because Ostu’s will find
    the optimal threshold value for us.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 看，这里我们使用了0作为阈值，仅仅因为Otsu的算法会为我们找到最佳阈值。
- en: 'Let’s see what is the optimal threshold value:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看最佳阈值是多少：
- en: '[PRE7]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Output:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '[PRE8]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Here is the image of the ‘threshOtsu’:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这是‘threshOtsu’的图像：
- en: '[PRE9]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](../Images/450c46ecd70501a73106f19904be1302.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/450c46ecd70501a73106f19904be1302.png)'
- en: Image by Author
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: We wanted to focus on the meter reading part, right? So, how can we do that
    from this image? Just masking the original image using bitwise_and operation.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想专注于计量读取部分，对吧？那么，我们如何从这张图像中做到这一点？只需使用bitwise_and操作对原始图像进行遮罩。
- en: '[PRE10]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Here is the image:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是图像：
- en: '![](../Images/ec690976b9604baa3dcab02737f3be3a.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ec690976b9604baa3dcab02737f3be3a.png)'
- en: Image by Author
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Lots of noises in the background are smoothed out.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 背景中的大量噪声被平滑掉了。
- en: The problem with both simple and Otsu’s thresholding methods is they use a single
    thresholding value all over the image which may not be a good idea. The thresholding
    value that works well for one area of the image may not be good for the other
    areas of the image.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 简单和Otsu阈值化方法的问题是它们在整个图像上使用单一的阈值，这可能不是一个好主意。对图像某个区域有效的阈值可能对图像的其他区域不适用。
- en: Adaptive Thresholding
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自适应阈值
- en: 'The adaptive thresholding method considers a small set of pixels and computes
    a threshold for each small region of the image. We will explain some more after
    this example:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 自适应阈值方法考虑了一小部分像素，并为图像的每个小区域计算一个阈值。我们将在这个示例后进一步解释：
- en: '[PRE11]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Here the second parameter 255 means, when the pixel is greater than the local
    threshold it becomes 255\. The fifth parameter 17 says it will be a 17x17 region
    of the image to compute a local threshold. Finally, 3 is a constant. This value
    is subtracted from the computed threshold value. Based on your project you need
    to choose a region of the image to compute the local threshold and the constant.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这里第二个参数255表示当像素值大于局部阈值时，它变为255。第五个参数17表示它将是图像的17x17区域用于计算局部阈值。最后，3是一个常数，这个值会从计算的阈值中减去。根据你的项目，你需要选择一个图像区域来计算局部阈值和常数。
- en: 'Here is what the image looks like:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是图像的样子：
- en: '![](../Images/06fe2f7ffae29bdf7e1e0191dd2d6b7e.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/06fe2f7ffae29bdf7e1e0191dd2d6b7e.png)'
- en: Image by Author
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图像
- en: As per the discussion above, adaptive thresholding also needs some trials to
    find the last two parameters. But still, the method itself does a lot for us.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 根据上述讨论，自适应阈值也需要一些尝试来确定最后两个参数。但方法本身仍然对我们做了很多工作。
- en: Conclusion
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: All three thresholding methods are important. Each of them may come in handy
    based on your situation or your project. Please feel free to try different images.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 所有三种阈值方法都很重要。根据你的情况或项目，每种方法都有可能派上用场。请随意尝试不同的图像。
- en: Feel free to follow me on [Twitter](https://twitter.com/rashida048) and like
    my [Facebook](https://www.facebook.com/rashida.smith.161) page.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 随时欢迎关注我的[Twitter](https://twitter.com/rashida048)并点赞我的[Facebook](https://www.facebook.com/rashida.smith.161)页面。
- en: More Reading
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: '[](/morphological-operations-for-image-preprocessing-in-opencv-in-detail-15fccd1e5745?source=post_page-----b2a78abb07ac--------------------------------)
    [## Morphological Operations for Image Preprocessing in OpenCV, in Detail'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/morphological-operations-for-image-preprocessing-in-opencv-in-detail-15fccd1e5745?source=post_page-----b2a78abb07ac--------------------------------)
    [## 形态学操作用于OpenCV中的图像预处理，详细介绍'
- en: Erosion, dilation, opening, closing, morphological gradient, tophat / whitehat,
    and blackhat explained with examples
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 腐蚀、膨胀、开运算、闭运算、形态学梯度、顶帽/白帽和黑帽的解释及示例
- en: towardsdatascience.com](/morphological-operations-for-image-preprocessing-in-opencv-in-detail-15fccd1e5745?source=post_page-----b2a78abb07ac--------------------------------)
    [](/some-basic-image-preprocessing-operations-for-beginners-in-python-7d297316853b?source=post_page-----b2a78abb07ac--------------------------------)
    [## Some Basic Image Preprocessing Operations for Beginners in Python
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/morphological-operations-for-image-preprocessing-in-opencv-in-detail-15fccd1e5745?source=post_page-----b2a78abb07ac--------------------------------)
    [](/some-basic-image-preprocessing-operations-for-beginners-in-python-7d297316853b?source=post_page-----b2a78abb07ac--------------------------------)
    [## Python初学者的一些基本图像预处理操作
- en: 'OpenCV for beginners: move or translate, resize, and cropping'
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: OpenCV入门：移动或平移、调整大小和裁剪
- en: towardsdatascience.com](/some-basic-image-preprocessing-operations-for-beginners-in-python-7d297316853b?source=post_page-----b2a78abb07ac--------------------------------)
    [](/a-step-by-step-tutorial-to-develop-a-multi-output-model-in-tensorflow-ec9f13e5979c?source=post_page-----b2a78abb07ac--------------------------------)
    [## A Step-by-Step Tutorial to Develop a Multi-Output Model in TensorFlow
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/some-basic-image-preprocessing-operations-for-beginners-in-python-7d297316853b?source=post_page-----b2a78abb07ac--------------------------------)
    [](/a-step-by-step-tutorial-to-develop-a-multi-output-model-in-tensorflow-ec9f13e5979c?source=post_page-----b2a78abb07ac--------------------------------)
    [## 逐步教程：在TensorFlow中开发多输出模型
- en: With complete code
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 附有完整代码
- en: towardsdatascience.com](/a-step-by-step-tutorial-to-develop-a-multi-output-model-in-tensorflow-ec9f13e5979c?source=post_page-----b2a78abb07ac--------------------------------)
    [](https://pub.towardsai.net/some-simple-but-advanced-styling-in-pythons-matplotlib-visualization-107f3be56a24?source=post_page-----b2a78abb07ac--------------------------------)
    [## Some Simple But Advanced Styling in Python’s Matplotlib Visualization
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/a-step-by-step-tutorial-to-develop-a-multi-output-model-in-tensorflow-ec9f13e5979c?source=post_page-----b2a78abb07ac--------------------------------)
    [](https://pub.towardsai.net/some-simple-but-advanced-styling-in-pythons-matplotlib-visualization-107f3be56a24?source=post_page-----b2a78abb07ac--------------------------------)
    [## Python的Matplotlib可视化中的一些简单但高级的样式
- en: Adding Some Extra Flavor to Your Python Plots
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为你的Python绘图增添一些额外的风味
- en: pub.towardsai.net](https://pub.towardsai.net/some-simple-but-advanced-styling-in-pythons-matplotlib-visualization-107f3be56a24?source=post_page-----b2a78abb07ac--------------------------------)
    [](/precision-recall-and-f1-score-of-multiclass-classification-learn-in-depth-6c194b217629?source=post_page-----b2a78abb07ac--------------------------------)
    [## Precision, Recall, and F1 Score of Multiclass Classification — Learn in Depth
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: pub.towardsai.net](https://pub.towardsai.net/some-simple-but-advanced-styling-in-pythons-matplotlib-visualization-107f3be56a24?source=post_page-----b2a78abb07ac--------------------------------)
    [](/precision-recall-and-f1-score-of-multiclass-classification-learn-in-depth-6c194b217629?source=post_page-----b2a78abb07ac--------------------------------)
    [## 多分类的精准率、召回率和F1分数 — 深入学习
- en: Manual Calculation From a Confusion Matrix and the Syntax of sklearn Library
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从混淆矩阵手动计算和sklearn库的语法
- en: towardsdatascience.com](/precision-recall-and-f1-score-of-multiclass-classification-learn-in-depth-6c194b217629?source=post_page-----b2a78abb07ac--------------------------------)
    [](/how-to-make-animated-and-racing-bar-plots-in-python-c5c7c3c648f7?source=post_page-----b2a78abb07ac--------------------------------)
    [## How to Make Animated and Racing Bar Plots in Python
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/precision-recall-and-f1-score-of-multiclass-classification-learn-in-depth-6c194b217629?source=post_page-----b2a78abb07ac--------------------------------)
    [](/how-to-make-animated-and-racing-bar-plots-in-python-c5c7c3c648f7?source=post_page-----b2a78abb07ac--------------------------------)
    [## 如何在Python中制作动画和竞赛条形图
- en: Complete Working Code
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 完整的工作代码
- en: towardsdatascience.com](/how-to-make-animated-and-racing-bar-plots-in-python-c5c7c3c648f7?source=post_page-----b2a78abb07ac--------------------------------)
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/how-to-make-animated-and-racing-bar-plots-in-python-c5c7c3c648f7?source=post_page-----b2a78abb07ac--------------------------------)
