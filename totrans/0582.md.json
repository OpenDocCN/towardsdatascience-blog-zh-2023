["```py\nimport openai\nfrom sk import my_sk # importing secret key from external file\nimport time\n\n# imported secret key (or just copy-paste it here)\nopenai.api_key = my_sk \n\n# create a chat completion\nchat_completion = openai.ChatCompletion.create(model=\"gpt-3.5-turbo\", \n                    messages=[{\"role\": \"user\", \"content\": \"Listen to your\"}])\n```", "```py\n{'id': 'chatcmpl-7dk1Jkf5SDm2422nYRPL9x0QrlhI4',\n 'object': 'chat.completion',\n 'created': 1689706049,\n 'model': 'gpt-3.5-turbo-0613',\n 'choices': [<OpenAIObject at 0x7f9d1a862b80> JSON: {\n    \"index\": 0,\n    \"message\": {\n      \"role\": \"assistant\",\n      \"content\": \"heart.\"\n    },\n    \"finish_reason\": \"stop\"\n  }],\n 'usage': <OpenAIObject at 0x7f9d1a862c70> JSON: {\n   \"prompt_tokens\": 10,\n   \"completion_tokens\": 2,\n   \"total_tokens\": 12\n }}\n```", "```py\n# setting max number of tokens\n\n# create a chat completion\nchat_completion = openai.ChatCompletion.create(model=\"gpt-3.5-turbo\", \n                    messages=[{\"role\": \"user\", \"content\": \"Listen to your\"}],\n                    max_tokens = 1)\n\n# print the chat completion\nprint(chat_completion.choices[0].message.content)\n\n\"\"\"\nOutput:\n>>> heart \n\"\"\"\n```", "```py\n# setting number of completions\n\n# create a chat completion\nchat_completion = openai.ChatCompletion.create(model=\"gpt-3.5-turbo\", \n                                messages=[{\"role\": \"user\", \"content\": \"Listen to your\"}],\n                                max_tokens = 2,\n                                n=5)\n\n# print the chat completion\nfor i in range(len(chat_completion.choices)):\n    print(chat_completion.choices[i].message.content)\n\n\"\"\"\nOuput:\n>>> heart.\n>>> heart and\n>>> heart.\n>>>\n>>> heart,\n>>>\n>>> heart,\n\"\"\"\n```", "```py\n# temperature=0\n\n# create a chat completion\nchat_completion = openai.ChatCompletion.create(model=\"gpt-3.5-turbo\", \n                                messages=[{\"role\": \"user\", \"content\": \"Listen to your\"}],\n                                max_tokens = 2,\n                                n=5,\n                                temperature=0)\n\n# print the chat completion\nfor i in range(len(chat_completion.choices)):\n    print(chat_completion.choices[i].message.content)\n\n\"\"\"\nOutput:\n>>> heart.\n>>> heart.\n>>> heart.\n>>> heart.\n>>> heart.\n\"\"\"\n```", "```py\n# temperature=2\n\n# create a chat completion\nchat_completion = openai.ChatCompletion.create(model=\"gpt-3.5-turbo\", \n                                messages=[{\"role\": \"user\", \"content\": \"Listen to your\"}],\n                                max_tokens = 2,\n                                n=5,\n                                temperature=2)\n\n# print the chat completion\nfor i in range(len(chat_completion.choices)):\n    print(chat_completion.choices[i].message.content)\n\n\"\"\"\nOutput:\n>>> judgment\n>>> Advice\n>>> .inner awareness\n>>> heart.\n>>>\n>>> ging ist\n\"\"\"\n```", "```py\n# initial prompt with system message and 2 task examples\nmessages_list = [{\"role\":\"system\", \"content\": \"I am Roxette lyric completion assistant. When given a line from a song, I will provide the next line in the song.\"},\n                 {\"role\":\"user\", \"content\": \"I know there's something in the wake of your smile\"},\n                 {\"role\":\"assistant\", \"content\": \"I get a notion from the look in your eyes, yeah\"},\n                 {\"role\":\"user\", \"content\": \"You've built a love but that love falls apart\"},\n                 {\"role\":\"assistant\", \"content\": \"Your little piece of Heaven turns too dark\"},\n                 {\"role\":\"user\", \"content\": \"Listen to your\"}]\n\n# sequentially generate 4 chat completions\nfor i in range(4):\n    # create a chat completion\n    chat_completion = openai.ChatCompletion.create(model=\"gpt-3.5-turbo\", \n                                    messages=messages_list,\n                                    max_tokens = 15,\n                                    n=1,\n                                    temperature=0)\n\n    # print the chat completion\n    print(chat_completion.choices[0].message.content)\n\n    new_message = {\"role\":\"assistant\", \"content\":chat_completion.choices[0].message.content} # append new message to message list\n    messages_list.append(new_message)\n    time.sleep(0.1)\n\n\"\"\"\nOutput:\n>>> Heart when he's calling for you\n>>> Listen to your heart, there's nothing else you can do\n>>> I don't know where you're going and I don't know why\n>>> But listen to your heart before you tell him goodbye\n\"\"\"\n```"]