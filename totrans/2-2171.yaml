- en: Unconventional Datetime Transformation Made Easy Using Python’s Pandas Library
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python 的 Pandas 库简化非传统的日期时间转换
- en: 原文：[https://towardsdatascience.com/unconventional-datetime-transformation-made-easy-using-pythons-pandas-library-aa9a8c65d885](https://towardsdatascience.com/unconventional-datetime-transformation-made-easy-using-pythons-pandas-library-aa9a8c65d885)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/unconventional-datetime-transformation-made-easy-using-pythons-pandas-library-aa9a8c65d885](https://towardsdatascience.com/unconventional-datetime-transformation-made-easy-using-pythons-pandas-library-aa9a8c65d885)
- en: Explained with a real-life example
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过实际例子进行解释
- en: '[](https://jin-cui.medium.com/?source=post_page-----aa9a8c65d885--------------------------------)[![Jin
    Cui](../Images/e5ddcbaa6d7da38f960d2c5fea71b538.png)](https://jin-cui.medium.com/?source=post_page-----aa9a8c65d885--------------------------------)[](https://towardsdatascience.com/?source=post_page-----aa9a8c65d885--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----aa9a8c65d885--------------------------------)
    [Jin Cui](https://jin-cui.medium.com/?source=post_page-----aa9a8c65d885--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://jin-cui.medium.com/?source=post_page-----aa9a8c65d885--------------------------------)[![Jin
    Cui](../Images/e5ddcbaa6d7da38f960d2c5fea71b538.png)](https://jin-cui.medium.com/?source=post_page-----aa9a8c65d885--------------------------------)[](https://towardsdatascience.com/?source=post_page-----aa9a8c65d885--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----aa9a8c65d885--------------------------------)
    [Jin Cui](https://jin-cui.medium.com/?source=post_page-----aa9a8c65d885--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----aa9a8c65d885--------------------------------)
    ·5 min read·Jul 25, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----aa9a8c65d885--------------------------------)
    ·5 分钟阅读·2023年7月25日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/49d6e85e7f4bde965d3e8a9f34f2d78e.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/49d6e85e7f4bde965d3e8a9f34f2d78e.png)'
- en: Photo by [Debby Hudson](https://unsplash.com/@hudsoncrafted?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Debby Hudson](https://unsplash.com/@hudsoncrafted?utm_source=medium&utm_medium=referral)
    在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Background
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 背景
- en: Very recently I was tasked with analyzing leaves taken by employees at a client’s
    company. In particular, I need to understand whether an employee has taken leave
    in a given period, ultimately setting a benchmark for measuring employees’ compliance
    with return to office policies.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，我的任务是分析客户公司员工的请假情况。特别是，我需要了解员工在特定时间段内是否请假，*最终*设定一个衡量员工是否遵守办公室回归政策的基准。
- en: 'I was provided with the following two leaves datasets:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我获得了以下两个请假数据集：
- en: '**Time Off** **Data** (“Dataset A”) which sets out shorter term leaves such
    as annual leave or sick leave taken by an employee. These leaves were unique at
    a per employee per date level (i.e. each row in the dataset represents a day of
    leave taken by a particular employee).'
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**休假** **数据**（“数据集 A”），列出了员工的短期请假，如年假或病假。这些请假数据在每个员工每一天的层面上是唯一的（即数据集中的每一行代表某一员工的某一天请假）。'
- en: '**Leave of Absence Data** (“Dataset B”) which sets out the *from* and *to*
    dates of longer term leaves taken by an employee. Some examples of these leaves
    are parental leave, maternity leave, leave without paid and career break. This
    dataset is on a ‘leave-as-you-go’ basis for employees who have taken longer term
    leaves, in that each row represents a date range for an employee, who may appear
    in multiple rows in the dataset with multiple date ranges (e.g. employees may
    prefer to take parental leave in batches of 3 days a week for 30 weeks, which
    would appear as 30 date ranges across 30 rows in the dataset).'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**休假数据**（“数据集 B”），列出了员工的长期请假的 *开始* 和 *结束* 日期。这些请假的例子包括育儿假、产假、无薪假期和职业休假。这个数据集以“请假即走”的方式记录员工的长期请假，每一行代表一个日期范围，员工可能会在数据集中出现多行，每行代表一个不同的日期范围（例如，员工可能会选择每周三天的育儿假，持续30周，这将在数据集中显示为30个日期范围，分布在30行中）。'
- en: The two datasets augment each other as an employee could take both shorter and
    longer term leaves in a given period.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个数据集相辅相成，因为员工在特定时间段内可能会请短期和长期假。
- en: For my analysis, I would like to merge the two datasets into a common format
    so that all leaves by a particular employee are accounted for. Since Dataset A
    is already of a structured tabular format at a per date per employee level, I
    needed to convert Dataset B into a similar format as shown in the image below
    (for a dataset I created for the purpose of demonstration).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我的分析，我希望将两个数据集合并为一种通用格式，以便能够记录特定员工的所有假期。由于数据集 A 已经是按日期和员工级别的结构化表格格式，我需要将数据集
    B 转换为类似的格式，如下图所示（这是我为了演示目的创建的数据集）。
- en: '![](../Images/cbfc27733b930e0ef1cb60e4ba3343be.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cbfc27733b930e0ef1cb60e4ba3343be.png)'
- en: 'Image 1: Datetime transformation. Dataset and image by author'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1：日期时间转换。数据集和图像由作者提供
- en: Methodology
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 方法论
- en: 'The transformation illustrated in image 1 presented a number of challenges
    given it’s not ‘one-to-one’ and it involves dates. To achieve the transformation,
    I followed the methodology below:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1 中展示的转换带来了许多挑战，因为它不是‘一对一’的，而且涉及到日期。为了实现这一转换，我遵循了如下方法：
- en: The date ranges in Dataset B (as shown in the table on the left in image 1)
    were broken up into unique (working) dates
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据集 B 中的日期范围（如图 1 左侧表格所示）被拆分为唯一（有效）日期
- en: The broken up dates associated with the same employee which appear in multiple
    rows were converted into two columns grouped by employee and then unique dates
    (as shown in the table on the right in image 1)
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关联到同一员工的拆分日期出现在多个行中，这些日期被转换为两个按员工分组的列，然后是唯一日期（如图 1 右侧的表格所示）
- en: How did I implement the above in Python? Read on for a step-by-step guide!
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我是如何在 Python 中实现上述功能的？继续阅读，获取详细的逐步指南！
- en: Datetime Transformation using Pandas
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Pandas 进行日期时间转换
- en: '**Step 1: Load libraries and data**'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤 1：加载库和数据**'
- en: 'As the name of the step implies:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 正如该步骤名称所暗示的：
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The image below shows a print of the data ingested and data type by column.
    You should ensure that the two date columns are of the datetime data type, which
    if they are not, they can be converted to using [***pd.to_datetime()***](https://www.geeksforgeeks.org/python-pandas-to_datetime/).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了数据的打印输出和按列的数据类型。你应该确保这两个日期列的数据类型为 datetime，如果不是，可以使用 [***pd.to_datetime()***](https://www.geeksforgeeks.org/python-pandas-to_datetime/)
    进行转换。
- en: '![](../Images/9aad92cf08ec905c78dac0a0b2a164e7.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9aad92cf08ec905c78dac0a0b2a164e7.png)'
- en: 'Image 2: Data and data type by column. Image by author'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2：按列的数据和数据类型。图像由作者提供
- en: '**Step 2: Get unique dates per row**'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤 2：获取每行的唯一日期**'
- en: 'We will then ‘explode’ the date ranges in each row of the data into unique
    dates. This can be achieved using the [***pd.date_range***](https://pandas.pydata.org/docs/reference/api/pandas.date_range.html)
    method and specifying the *freq* parameter as ‘D’:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们将数据中每一行的日期范围‘拆分’为唯一的日期。这可以使用 [***pd.date_range***](https://pandas.pydata.org/docs/reference/api/pandas.date_range.html)
    方法来实现，并将 *freq* 参数指定为 ‘D’：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The output of this is shown in the image below. For instance, date range from
    2023–02–01 to 2023–02–03 for employee B in row 2 is now broken up into three unique
    dates.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 其输出显示在下图中。例如，2023–02–01 到 2023–02–03 的日期范围中的员工 B 在第 2 行，现在被拆分成三个唯一日期。
- en: '![](../Images/9ee0e12508bb57170eaffdf010319871.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9ee0e12508bb57170eaffdf010319871.png)'
- en: 'Image 3: Explode dates. Image by author'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3：拆分日期。图像作者提供
- en: You may notice that there are some non-working dates in the last row as 2023–07–15
    and 2023–07-16 in the date range fall on a weekend. To get business dates only,
    add a line of code to restrict the weekday index to less than 5 per the code below
    below. In addition, I’ve provided an option to restrict dates to a range in the
    commented-out code.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会注意到，最后一行中有一些无效日期，如 2023–07–15 和 2023–07-16，这些日期落在周末。为了仅获取工作日日期，请在以下代码中添加一行代码，将工作日索引限制为小于
    5。此外，我在注释掉的代码中提供了一个限制日期范围的选项。
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Step 2: Row to column transformation**'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤 2：行到列的转换**'
- en: Now we have the date ranges broken up. We will move on to collapse these at
    an employee level. For instance, both row 2 and 5 in image 3 above correspond
    to employee C.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经拆分了日期范围。接下来我们将按员工级别将这些日期合并。例如，图 3 中的第 2 行和第 5 行都对应于员工 C。
- en: To convert the dates in multiple rows into just one column by employee, we add
    back the ‘Employee’ identifier to the *df_date* dataframe generated above, and
    then apply Pandas’ [***.melt()***](https://pandas.pydata.org/docs/reference/api/pandas.melt.html)method
    over the ‘Employee’ column.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将多个行中的日期转换为按员工划分的单一列，我们将‘员工’标识符添加回上述生成的 *df_date* 数据框中，然后对‘员工’列应用 Pandas 的
    [***.melt()***](https://pandas.pydata.org/docs/reference/api/pandas.melt.html)
    方法。
- en: '[PRE3]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The output of the code above is exactly what we are after as shown below.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的代码输出正是我们所追求的，见下图。
- en: '![](../Images/be275aea9f1f7bd5c5f4b61431357500.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/be275aea9f1f7bd5c5f4b61431357500.png)'
- en: 'Image 4: Final output. Image by author'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4：最终输出。图像由作者提供
- en: Mission accomplished! This dataframe can now be appended to Dataset A like-for-like
    for further analysis.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 任务完成！这个数据框现在可以与数据集 A 一一对应地进行进一步分析。
- en: Concluding Thoughts
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: When I first encountered this problem, I was contemplating a solution in various
    tools such as SQL, R and Python. Through a bit of research, I ultimately chose
    Python as it appeared to be the easiest to implement, particularly for breaking
    up date ranges into individual dates and unpivoting columns into rows (noting
    that the *melt* method is also available in R).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当我第一次遇到这个问题时，我考虑了使用 SQL、R 和 Python 等多种工具。通过一些研究，我最终选择了 Python，因为它看起来是实现起来最简单的，特别是对于将日期范围拆分为单独日期和将列转换为行（需要注意的是，*melt*
    方法在 R 中也可用）。
- en: In saying that, I’ll be more than happy to receive feedback on some of the other
    ways the readers think are more practical in solving this data transformation
    problem — leave them in the comments!
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 说到这里，我非常欢迎大家对其他读者认为更实用的数据转换解决方法提供反馈——请在评论区留言！
- en: '*As I ride the AI/ML wave, I enjoy writing and sharing step-by-step guides
    and how-to tutorials in comprehensive language with ready-to-run codes. If you
    would like to access all my articles (and articles from other practitioners/writers
    on Medium), you can sign up using* [*the link*](https://medium.com/@jin-cui/membership)
    *here!*'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '*在我乘风 AI/ML 浪潮的同时，我喜欢用全面的语言编写和分享逐步指南和操作教程，附带现成的代码。如果你想访问我所有的文章（以及 Medium 上其他从业者/作者的文章），你可以使用*
    [*这个链接*](https://medium.com/@jin-cui/membership) *注册！*'
