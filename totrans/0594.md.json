["```py\nimport matplotlib.pyplot as plt\nimport numpy as np\n```", "```py\nlithologies = ['Shale', 'Sandstone', \n               'Limestone', 'Dolomite', \n               'Anhydrite', 'Coal', 'Tuff']\n\nwell1 = [47, 35, 10, 1, 0, 2, 5]\n\nwell2 = [7, 10, 51, 22, 10, 0, 0]\n```", "```py\nlithologies = [*lithologies, lithologies[0]]\nwell1 = [*well1, well1[0]]\nwell2 = [*well2, well2[0]]\n```", "```py\n[7, 10, 51, 22, 10, 0, 0, 7]\n```", "```py\nlabel_loc = np.linspace(start=0, stop=2 * np.pi, num=len(lithologies))\n```", "```py\nfig, ax = plt.subplots(figsize=(10,10), subplot_kw=dict(polar=True))\n\nax.plot(label_loc, well1, lw=2)\nax.plot(label_loc, well2, lw=2)\n\nlines, labels = plt.thetagrids(np.degrees(label_loc), labels=lithologies)\n\nplt.show()\n```", "```py\nfig, ax = plt.subplots(figsize=(10,10), subplot_kw=dict(polar=True))\n\nax.plot(label_loc, well1, lw=2)\nax.plot(label_loc, well2, lw=2)\n\nax.fill(label_loc, well1, alpha=0.3)\nax.fill(label_loc, well2, alpha=0.3)\n\nlines, labels = plt.thetagrids(np.degrees(label_loc), labels=lithologies)\n\nplt.show()\n```", "```py\nfig, ax = plt.subplots(figsize=(10,10), subplot_kw=dict(polar=True))\n\nax.plot(label_loc, well1, lw=2)\nax.plot(label_loc, well2, lw=2)\n\nax.fill(label_loc, well1, alpha=0.3)\nax.fill(label_loc, well2, alpha=0.3)\n\nlines, labels = plt.thetagrids(np.degrees(label_loc), labels=lithologies)\n\nax.tick_params(axis='both', which='major', pad=30, labelsize=15)\n\nplt.show()\n```", "```py\nimport mplcyberpunk\n\nwith plt.style.context('cyberpunk'):\n    fig, ax = plt.subplots(figsize=(10,10), subplot_kw=dict(polar=True))\n\n    ax.plot(label_loc, well1, lw=2)\n    ax.plot(label_loc, well2, lw=2)\n\n    ax.fill(label_loc, well1, alpha=0.3)\n    ax.fill(label_loc, well2, alpha=0.3)\n\n    lines, labels = plt.thetagrids(np.degrees(label_loc), labels=lithologies)\n\n    ax.tick_params(axis='both', which='major', pad=30, labelsize=15)\n\n    plt.show()\n```", "```py\nwith plt.style.context('cyberpunk'):\n    fig, ax = plt.subplots(figsize=(10,10), subplot_kw=dict(polar=True))\n\n    ax.plot(label_loc, well1, lw=2)\n    ax.plot(label_loc, well2, lw=2)\n\n    ax.fill(label_loc, well1, alpha=0.3)\n    ax.fill(label_loc, well2, alpha=0.3)\n\n    lines, labels = plt.thetagrids(np.degrees(label_loc), labels=lithologies)\n\n    ax.tick_params(axis='both', which='major', pad=30, labelsize=15)\n\n    ax.spines['polar'].set_linewidth(3)\n\n    edge_color = (1, 1, 1, 0.2) \n    ax.spines['polar'].set_color(edge_color) \n\n    ax.grid(color='white', alpha=0.3)\n\n    plt.show()\n```", "```py\nwith plt.style.context('cyberpunk'):\n    fig, ax = plt.subplots(figsize=(10,10), subplot_kw=dict(polar=True))\n\n    ax.plot(label_loc, well1, lw=2)\n    ax.plot(label_loc, well2, lw=2)\n\n    ax.fill(label_loc, well1, alpha=0.3)\n    ax.fill(label_loc, well2, alpha=0.3)\n\n    lines, labels = plt.thetagrids(np.degrees(label_loc), labels=lithologies)\n\n    ax.tick_params(axis='both', which='major', pad=30, labelsize=15)\n\n    ax.spines['polar'].set_linewidth(3)\n\n    edge_color = (1, 1, 1, 0.2) \n    ax.spines['polar'].set_color(edge_color) \n\n    ax.grid(color='white', alpha=0.3)\n\n    ax.set_ylim(0, 60)\n\n    plt.show()\n```", "```py\nfrom matplotlib.patches import Patch\n\nwith plt.style.context('cyberpunk'):\n    fig, ax = plt.subplots(figsize=(10,10), subplot_kw=dict(polar=True))\n\n    ax.plot(label_loc, well1, lw=2)\n    ax.plot(label_loc, well2, lw=2)\n\n    ax.fill(label_loc, well1, alpha=0.3)\n    ax.fill(label_loc, well2, alpha=0.3)\n\n    lines, labels = plt.thetagrids(np.degrees(label_loc), labels=lithologies)\n\n    ax.tick_params(axis='both', which='major', pad=30, labelsize=15)\n\n    ax.spines['polar'].set_linewidth(3)\n\n    edge_color = (1, 1, 1, 0.2) \n    ax.spines['polar'].set_color(edge_color) \n\n    ax.grid(color='white', alpha=0.3)\n\n    ax.set_ylim(0, 60)\n\n    # Create custom legend handles\n    well1_legend = Patch(facecolor='C0', alpha=0.5, label='Well 1')\n    well2_legend = Patch(facecolor='C1', alpha=0.5, label='Well 2')\n\n    # Add a legend with custom position and handles\n    ax.legend(handles=[well1_legend, well2_legend],\n              bbox_to_anchor=(1.3, 0.2), fontsize=20, \n              frameon=True)\n\n    plt.show()\n```"]