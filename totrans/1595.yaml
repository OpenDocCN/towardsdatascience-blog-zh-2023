- en: Only Use LLMs If You Know How to Do the Task on Your Own
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/only-use-llms-if-you-know-how-to-do-the-task-on-your-own-0d56e0d07572](https://towardsdatascience.com/only-use-llms-if-you-know-how-to-do-the-task-on-your-own-0d56e0d07572)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Otherwise you may end up with silent mistakes or harsh consequences
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://sonery.medium.com/?source=post_page-----0d56e0d07572--------------------------------)[![Soner
    Yıldırım](../Images/c589572e9d1ee176cd4f5a0008173f1b.png)](https://sonery.medium.com/?source=post_page-----0d56e0d07572--------------------------------)[](https://towardsdatascience.com/?source=post_page-----0d56e0d07572--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----0d56e0d07572--------------------------------)
    [Soner Yıldırım](https://sonery.medium.com/?source=post_page-----0d56e0d07572--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----0d56e0d07572--------------------------------)
    ·5 min read·Oct 25, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3fa18907e4700b861655f9aa3c121946.png)'
  prefs: []
  type: TYPE_IMG
- en: (image created by author with Midjourney)
  prefs: []
  type: TYPE_NORMAL
- en: To most of us (or all of us), LLMs are mysterious boxes that get complicated
    things done surprisingly quickly. We’re usually not interested in the “how” part
    as long as they give us what we need.
  prefs: []
  type: TYPE_NORMAL
- en: ChatGPT, and other LLMs, are surely a productivity booster. They can easily
    handle a variety of tasks, which otherwise would be tedious and time-consuming.
  prefs: []
  type: TYPE_NORMAL
- en: However, we can’t always rely on them entirely. For instance, when it comes
    to data analysis, how can we make sure ChatGPT’s insights about the data are accurate?
    Yes, it knows Pandas, a popular data analysis library, but what if it makes a
    mistake? Or, what happens if it partially does the task and fails to perform the
    rest?
  prefs: []
  type: TYPE_NORMAL
- en: 'The best solution that complements ChatGPT is you. You need to know how to
    do the task on your own so that:'
  prefs: []
  type: TYPE_NORMAL
- en: You can make sure ChatGPT’s solution is correct.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can substitute ChatGPT when it fails to perform or doesn’t know how to.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In this article, I’ll show you three examples that back up my aforementioned
    two claims.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example 1: Data cleaning with Pandas'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: I had a used car dataset that contains prices and some other attributes of used
    cars. It was kind of a messy dataset and required lots of cleaning. I used the
    ChatGPT Advanced Data Analysis (ADA) plugin for this task.
  prefs: []
  type: TYPE_NORMAL
- en: It performed well for the most part. However, there was a very specific operation
    that ChatGPT ADA failed to do. Hence, the task couldn’t be completed if I didn’t
    know how to do it myself.
  prefs: []
  type: TYPE_NORMAL
- en: Let me first explain the part ChatGPT ADA could not handle.
  prefs: []
  type: TYPE_NORMAL
- en: Probably due to data-entry errors, some rows of the make (i.e. car brand or
    manufacturer) column include year values. When I investigated these rows, I realized
    that the make values were recorded in the model column. To fix this, the make
    part needs to be extracted from the model column and used for replacing the year
    value in the make column.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is how to fix it:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ce00faa90a2d2f3201605ff660678aba.png)'
  prefs: []
  type: TYPE_IMG
- en: (image by author)
  prefs: []
  type: TYPE_NORMAL
- en: I asked ChatGPT ADA several times but it failed to provide an approach for fixing
    this issue. Its best shot was to replace these year values with “Unknown”.
  prefs: []
  type: TYPE_NORMAL
- en: 'Then, I wrote the following prompt in excruciating detail to get ChatGPT ADA
    give me the Python code needed to solve the task:'
  prefs: []
  type: TYPE_NORMAL
- en: For rows in which the make value is actually a year value, the model column
    includes the correct make value. For these rows, extract the first word of the
    value in the model column and use it to replace the year value in the make column.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Here is the code written by ChatGPT ADA for this specific issue:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: It’s not the most optimal solution but does the task.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example 2: Replacing missing values'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The dataset I was trying to clean had missing values (indicated with “other”,
    “unknown”, or None) in a column. I asked ChatGPT to replace them with the most
    frequent value in the column.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b2edb3b38309216cf98893936cbc01bf.png)'
  prefs: []
  type: TYPE_IMG
- en: (image by author)
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is ChatGPT’s response:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: It’s correct as it replaces the values that do not contain “cylinders” with
    the most common value. However, it includes the use of the `apply` function, which
    is not suggested when working with large datasets. The `apply` function is not
    a vectorized operation and can be a performance bottleneck.
  prefs: []
  type: TYPE_NORMAL
- en: 'A better approach that uses a vectorized operation is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: If I didn’t know Pandas, I wouldn’t be able to realize the use of the `apply`
    function could potentially cause performance issues and look for alternative solutions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example 3: Writing a unit test in a more Pythonic way'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: I wanted to test if ChatGPT can improve unit tests or make them more Pythonic.
  prefs: []
  type: TYPE_NORMAL
- en: 'I wrote the following unit test, which is actually quite simple:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'When I asked ChatGPT to improve it, what I expected was a small update as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: The second version eliminates the creation of the intermediate variable `query`
    , which is unnecessary.
  prefs: []
  type: TYPE_NORMAL
- en: 'At the first attempt, ChatGPT wrote the unit test as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: This is wrong. The `count` method doesn’t have a `flags` parameter. Also, how
    is this simpler (or more Pythonic) than my first attempt?
  prefs: []
  type: TYPE_NORMAL
- en: The second try was correct but still not any simpler.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, I told ChatGPT this was not simpler than my solution and suggested using
    the following (which was what I had in mind):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: ChatGPT approved my new suggestion by accepting it was more compact and Pythonic.
  prefs: []
  type: TYPE_NORMAL
- en: Final thoughts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The example use cases I showed in this article do not make ChatGPT or other
    LLMs any less useful. I’ve used it for many different tasks and got satisfying
    results.
  prefs: []
  type: TYPE_NORMAL
- en: What I wanted to emphasize is that they can make mistakes. Some of these mistakes
    are clear and some can be silent. To make sure you have accurate results, keep
    an eye on how ChatGPT does what it does. I suggest not relying on it entirely
    on tools you have no idea about. You can still use it for learning new tools but
    make sure you test it before taking any important action.
  prefs: []
  type: TYPE_NORMAL
- en: '*If you liked the article, make sure you clap and comment to help me earn more.*
    [*Follow me*](https://medium.com/@sonery) *for more content on Python, Data Science,
    Machine Learning, and AI.*'
  prefs: []
  type: TYPE_NORMAL
- en: Thank you for reading. Please let me know if you have any feedback.
  prefs: []
  type: TYPE_NORMAL
