- en: Mastering the Unknown with GPT-4 and the Flipped Interaction Pattern
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/mastering-the-unknown-with-gpt-4-and-the-flipped-interaction-pattern-1f23acbc4c91](https://towardsdatascience.com/mastering-the-unknown-with-gpt-4-and-the-flipped-interaction-pattern-1f23acbc4c91)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Leverage GPT-4 to Generate High-Quality Questions, Redefining Problem Solving
    and Decision Making
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@andrea.ialenti?source=post_page-----1f23acbc4c91--------------------------------)[![Andrea
    Ialenti](../Images/1ff6e8084c4ae1e2ae7d7f69be972fcd.png)](https://medium.com/@andrea.ialenti?source=post_page-----1f23acbc4c91--------------------------------)[](https://towardsdatascience.com/?source=post_page-----1f23acbc4c91--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----1f23acbc4c91--------------------------------)
    [Andrea Ialenti](https://medium.com/@andrea.ialenti?source=post_page-----1f23acbc4c91--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----1f23acbc4c91--------------------------------)
    ·19 min read·Jul 13, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/307379d188a04bc88e4564a658528548.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Ali Kazal](https://unsplash.com/@lureofadventure?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/UU69D-_nwPI?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Like me, you’ve probably been dazzled by the strides recently made in the field
    of Generative AI. It feels like we are living in a science-fiction reality, where
    machines understand us.
  prefs: []
  type: TYPE_NORMAL
- en: At the heart of this revolution, **OpenAI’s GPT-4 has emerged as a marvel in
    the realm of language models**. As someone who had the privilege of playing around
    with it, I can testify to its astonishing capabilities.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this article I want to share a technique that intrigued me quite a lot.
    In literature it is referenced as the **Flipped Interaction Pattern**, and I found
    it to be a very powerful framework to help in problem solving tasks. The distinct
    aspect of this prompt engineering method lies in its “reversed” (i.e. flipped)
    approach: instead of directly asking for answers or solutions from the AI, it
    p**rimarily focuses making the AI deliver the right questions that could effectively
    drive us towards our desired solution**.'
  prefs: []
  type: TYPE_NORMAL
- en: In this article, I’ll walk you through how it works, why it’s beneficial, and
    provide real-life examples of its effectiveness. By the end of it, I hope you’ll
    be equipped with a useful technique - one that can be applied to a vast array
    of problems, possibly with results that may surprise you.
  prefs: []
  type: TYPE_NORMAL
- en: Why the **Flipped Interaction Pattern**?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In today’s world, the depth of our knowledge can often be compared to a pool
    — long and narrow. We dive deep into some specialties, becoming experts in some
    specific domains. This hyper-specialization allows us to excel in our respective
    fields, but at the same time, it can leave us feeling lost when we encounter problems
    outside our areas of expertise. As a software engineer, I may be well-versed in
    algorithms, data structures, and coding, but put a spade in my hand and ask me
    to tend a garden, and I will transform any green into a wasteland.
  prefs: []
  type: TYPE_NORMAL
- en: This is where the Dunning-Kruger effect may come into play. As per this psychological
    hypothesis, **there’s a cognitive bias where people with low ability at a task
    overestimate their ability to perform it**. Essentially, **we don’t know what
    we don’t know**, and this can lead to overconfidence, and mistakes.
  prefs: []
  type: TYPE_NORMAL
- en: The problem, however, is not just about being an amateur in an unfamiliar field.
    I**t’s about our inability to even ask the right questions to guide us towards
    a solution**. What are the key factors to consider when gardening? What should
    I be wary of? Where do I even start? These are questions we may not know to ask
    when stepping outside our areas of expertise.
  prefs: []
  type: TYPE_NORMAL
- en: '**That’s where this version of the Flipped Interaction Pattern comes into play**.
    This method acknowledges that **the effectiveness of a solution hinges on the
    quality of questions that precede it**. Instead of asking GPT to provide a solution
    to a problem, we are going to use GPT-4 to help identifying the questions that
    need to be asked in order to land a solution.'
  prefs: []
  type: TYPE_NORMAL
- en: The Flipped Interaction Pattern in Action
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let’s apply this technique to gardening. The challenge? Give new life to my
    derelict front garden.
  prefs: []
  type: TYPE_NORMAL
- en: 'To apply the Pattern, we start with a carefully crafted prompt. This prompt
    sets the stage for our conversation with GPT-4\. Here’s the basic template:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'In our specific case, we are going to use the following initial prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Let’s analyze the different elements.
  prefs: []
  type: TYPE_NORMAL
- en: '**Persona Assignment:** The first part of our prompt sets the persona that
    GPT-4 will adopt to help us solve our problem — in this case, a *professional
    gardener*. Assigning a persona to GPT-4 it’s a well known strategy that demonstrated
    its effectiveness in making GPT output more relevant and accurate responses.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Problem Statement:** The next portion of our prompt explicitly outlines our
    problem. Ideally, we want to include as much detail as possible; that’s because
    the more context we provide, the better the model can tailor its questions.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Sequential Querying:** Lastly, our prompt emphasizes that GPT-4’s **queries
    should follow a sequential format**. This element of our technique is critical
    as it ensures the AI’s subsequent questions **build on previous answers**.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Let’s see how the conversation unfolds.
  prefs: []
  type: TYPE_NORMAL
- en: GAIrdening
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can find the full conversation at this [link](https://chat.openai.com/share/69934c41-c498-4676-ae0b-9266b9c5f12d).
    For reference I am also writing the conversation below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: It’s clear that ChatGPT probes for vital details such as the garden’s size,
    the condition of the soil, lighting situation, preferred types of plants, local
    climate, my readiness for maintenance (lol), the primary purpose of the garden,
    budget, and potential allergies.
  prefs: []
  type: TYPE_NORMAL
- en: In retrospect, after walking through the AI's questions, I appreciate how these
    queries led me to consider aspects of my garden renovation that I might have otherwise
    overlooked.
  prefs: []
  type: TYPE_NORMAL
- en: 'Two examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '**ChatGPT''s inquiry on sunlight**: "*What is the sunlight situation in your
    garden? Does it receive full sunlight, partial sun, or is it mostly in the shade?*"
    This question highlighted the importance of understanding the garden''s light
    conditions to select suitable plants. To be honest, this is a crucial detail I
    may have easily ignored if I were to work on this task alone.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: GPT-4 asked, "*Do you have* ***any known allergies*** *to specific plants, trees,
    or flowers that we should avoid including in your garden?*", reminding me of an
    aspect I would have easily missed without the guidance.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In sum, the step-by-step questioning strategy implemented by GPT-4 not only
    deepened my understanding of the problem at hand but also allowed the AI to generate
    a more detailed and personalized solution.
  prefs: []
  type: TYPE_NORMAL
- en: 'This is the final recommendation GPT gave me about my garden renovation:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Automating the Flipped Interaction Pattern
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'I have tested this technique many times, so I am quite confident that it will
    work in most cases, **especially using GPT-4 as LLM (vs using GPT-3)**. Let’s
    move to a more experimental approach: **is it possible automate this method?**
    To answer this question, we are going to need a bit of coding (finally).'
  prefs: []
  type: TYPE_NORMAL
- en: '**We will create two AI agents that will talk eachother**, one will pose the
    questions, the `inquiry_persona`, the other will provide the answers, the `response_persona`.
    We are going to initialize our agents with some instructions, **so that they share
    a common goal**. Finally, we are going to make the two AI talk, until the `inquiry_persona`
    will provide the final response. It’s essential to note that **these agents must
    maintain a dialogue history**, recalling their own responses as well as the other’s.
    The organizational structure of the system is shown in the diagram below.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/aaa0be53d9549ca5969be3020175b78d.png)'
  prefs: []
  type: TYPE_IMG
- en: Handcrafted with love using Google Drawings ❤
  prefs: []
  type: TYPE_NORMAL
- en: Implementation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First let’s have a look at how we could initialize the two agents:'
  prefs: []
  type: TYPE_NORMAL
- en: The `inquiry_persona` agent has an initial prompt that is very similar to the
    one we saw earlier. There are some **minor differences because the model we are
    going to use for this experiment is GPT-3.5, and I had to make some extra effort
    to make it work properly**.
  prefs: []
  type: TYPE_NORMAL
- en: The `response_persona` agent is initialized with the same `TASK`, and is made
    conscious of who the other agent is.
  prefs: []
  type: TYPE_NORMAL
- en: Next step is to fill those variables with the info we need to solve our problem.
  prefs: []
  type: TYPE_NORMAL
- en: 'Consider a scenario where a Software Engineer is seeking a raise and needs
    to outline a strategy for requesting this salary increase. This person may setup
    the prompts as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Now that the prompts are ready we only need to call the API, and handle the
    conversation. The following is a function to call the OpenAI API; the function
    only has to return the response, we will manually handle this response.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we can write the piece of code that handles the conversation(s)
  prefs: []
  type: TYPE_NORMAL
- en: As you can notice we use two conversations. In this way we are able to separately
    initialize the two agents (i.e., setting a distinct personas to define “who” the
    agent is). The conversations are initialized with our starting messages, and these
    messages are stored in the lists `main_conversation` and `side_conversation`.
    **These lists allow the agents to keep memory of the dialogue.**
  prefs: []
  type: TYPE_NORMAL
- en: 'The code then generates the first responses for each AI persona using the `complete()`
    function: this function will take the full conversation history and output the
    “next response”. Note that with Chat models (like GPT-3.5), messages/roles can
    be customized using the [ChatML](https://learn.microsoft.com/en-us/azure/cognitive-services/openai/how-to/chatgpt)
    markup language (which is what’s happening behind the scenes by setting `role`
    and `content` in the `dicts`)'
  prefs: []
  type: TYPE_NORMAL
- en: The loop is the core of the conversation. **At each iteration, the two agents
    will see the whole conversation history available so far**.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s execute the code to see how the conversation unravels.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: And here the final recommendation from the AI
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Of course my initial prompting is probably too generic and open ended to generate
    a final response tailored to our specific case, but think about the learnings:'
  prefs: []
  type: TYPE_NORMAL
- en: '**You have an idea of what to look after** if your are facing that particular
    problem (research the market to see how your peers are being paid, gather info
    on what your contribution brought to the Company)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You have an idea on **how a Software Engineer should answer to those questions**
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You actually have a final recommendation that, although generic, is a **good
    starting point**
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, remember that at this point you can manually followup to help GPT correct/improve
    its final reponse. Maybe it’s me, but all of this looks like magic.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Flipped Interaction Pattern leverages GPT to help focusing on the questions
    rather than the answers. This method enables you to gain a deeper understanding
    of the issues at hand, and provides an AI a framework to offer personalized and
    accurate responses; basically you only need to be able to formulate your problem!
  prefs: []
  type: TYPE_NORMAL
- en: 'Overall, I have found this method quite useful, so I would encourage you to
    test it out, but please: consider the automation part just a fun exercise, and
    avoid delegating possible conversations with your manager to it!'
  prefs: []
  type: TYPE_NORMAL
- en: Please feel free to reach out if you test this method, or have ideas for improvements!
  prefs: []
  type: TYPE_NORMAL
- en: '[](/the-perks-of-data-science-how-i-found-my-new-home-in-dublin-5ff84fc97ec4?source=post_page-----1f23acbc4c91--------------------------------)
    [## The Perks of Data Science: How I Found My New Home in Dublin'
  prefs: []
  type: TYPE_NORMAL
- en: A Data Scientist quest to find a property in a high demand/low offer market
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/the-perks-of-data-science-how-i-found-my-new-home-in-dublin-5ff84fc97ec4?source=post_page-----1f23acbc4c91--------------------------------)
    [](/how-i-saved-christmas-with-the-travelling-salesman-problem-3d85c190ed9d?source=post_page-----1f23acbc4c91--------------------------------)
    [## How I saved Christmas with the Travelling Salesman Problem
  prefs: []
  type: TYPE_NORMAL
- en: A nice visualization of the Santa’s optimal trip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/how-i-saved-christmas-with-the-travelling-salesman-problem-3d85c190ed9d?source=post_page-----1f23acbc4c91--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Appendix
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Below the full code if you want to just copy-paste and try!
  prefs: []
  type: TYPE_NORMAL
