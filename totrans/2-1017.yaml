- en: Grow a Treemap with Python and Plotly Express
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Python和Plotly Express创建树状图
- en: 原文：[https://towardsdatascience.com/grow-a-treemap-with-python-and-plotly-express-963706a2bd74](https://towardsdatascience.com/grow-a-treemap-with-python-and-plotly-express-963706a2bd74)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/grow-a-treemap-with-python-and-plotly-express-963706a2bd74](https://towardsdatascience.com/grow-a-treemap-with-python-and-plotly-express-963706a2bd74)
- en: Turn a government PDF into a financial planning tool
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将政府PDF转换为财务规划工具
- en: '[](https://medium.com/@lee_vaughan?source=post_page-----963706a2bd74--------------------------------)[![Lee
    Vaughan](../Images/9f6b90bb76102f438ab0b9a4a62ffa3f.png)](https://medium.com/@lee_vaughan?source=post_page-----963706a2bd74--------------------------------)[](https://towardsdatascience.com/?source=post_page-----963706a2bd74--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----963706a2bd74--------------------------------)
    [Lee Vaughan](https://medium.com/@lee_vaughan?source=post_page-----963706a2bd74--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@lee_vaughan?source=post_page-----963706a2bd74--------------------------------)[![Lee
    Vaughan](../Images/9f6b90bb76102f438ab0b9a4a62ffa3f.png)](https://medium.com/@lee_vaughan?source=post_page-----963706a2bd74--------------------------------)[](https://towardsdatascience.com/?source=post_page-----963706a2bd74--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----963706a2bd74--------------------------------)
    [Lee Vaughan](https://medium.com/@lee_vaughan?source=post_page-----963706a2bd74--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----963706a2bd74--------------------------------)
    ·8 min read·Apr 7, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----963706a2bd74--------------------------------)
    ·8分钟阅读·2023年4月7日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/b3a0fa3113923d8d9c7a5a3b1e3e8827.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b3a0fa3113923d8d9c7a5a3b1e3e8827.png)'
- en: Photo by Robert Murray on Unsplash!
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：Robert Murray，来自Unsplash！
- en: '*Hierarchical* data is a data model where items are linked to each other in
    parent-child relationships, forming a tree structure. Some obvious examples are
    family trees and corporate organization charts.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*层级*数据是一种数据模型，其中项目通过父子关系相互链接，形成树状结构。一些显而易见的例子包括家谱和公司组织结构图。'
- en: A *treemap* is a diagram that represents hierarchical data using nested rectangles.
    The area of each rectangle corresponds to its numerical value. Treemaps have been
    around for about 30 years. An early application was to visualize hard drive usage,
    as demonstrated in the figure below.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '*树状图*是一种使用嵌套矩形表示层级数据的图示。每个矩形的面积对应其数值。树状图已经存在大约30年了。早期的应用是可视化硬盘使用情况，如下图所示。'
- en: '![](../Images/5fbfa693cbf1cf386397aaca4297ed39.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5fbfa693cbf1cf386397aaca4297ed39.png)'
- en: Allocation of hard disk space visualized with a treemap ([Carnivore1973 via
    Wikimedia Commons](https://commons.wikimedia.org/w/index.php?search=Carnivore1973&title=Special%3AMediaSearch&go=Go&type=image))
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 硬盘空间分配通过树状图进行可视化（[Carnivore1973 via Wikimedia Commons](https://commons.wikimedia.org/w/index.php?search=Carnivore1973&title=Special%3AMediaSearch&go=Go&type=image)）
- en: 'Treemaps let you capture both the *value* of individual categories and the
    *structure* of the hierarchy. They’re useful for:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 通过**树状图**，你可以捕捉到单独类别的*价值*以及层级的*结构*。它们对于以下场景非常有用：
- en: Displaying hierarchical data when the number of categories overwhelms a bar
    chart.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在类别数量超出条形图承载能力时显示层级数据。
- en: Highlighting proportions between individual categories and the whole.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 突出显示单个类别与整体之间的比例。
- en: Distinguishing categories using different sizes and colors.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用不同的大小和颜色区分类别。
- en: Spotting patterns, primary contributors, and outliers.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发现模式、主要贡献者和异常值。
- en: Bringing a fresh look to data visualization.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为数据可视化带来新鲜的视角。
- en: In this *Quick Success Data Science* project, we’ll use Python to create a treemap
    to help people budget for expenses. We’ll first use the *tabula-py* library to
    turn a web-based *Bureau of Labor Statistics* PDF into a pandas DataFrame. Then
    we’ll use the *Plotly Express* library to turn the DataFrame into an attractive
    and interactive area-based visualization.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个*快速成功数据科学*项目中，我们将使用Python创建一个树状图，以帮助人们制定预算。我们首先会使用*tabula-py*库将基于网页的*劳动统计局*PDF转换为pandas
    DataFrame。然后，我们将使用*Plotly Express*库将DataFrame转换为一个吸引人且互动的基于区域的可视化图表。
- en: Consumer Expenditure Surveys
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 消费者支出调查
- en: With the pandemic and subsequent inflationary surge, consumer spending has drawn
    a lot of attention. Individuals need to know how to budget effectively, and policymakers
    need to understand what sectors are causing the most financial burden to potential
    voters.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 随着疫情和随后的通货膨胀激增，消费者支出引起了广泛关注。个人需要了解如何有效预算，政策制定者需要了解哪些行业对潜在选民造成了最大的财务负担。
- en: To help track income and spending, the *Census Bureau* uses *Consumer Expenditure
    Surveys* to collect information on US consumers’ expenditures, income, and demographic
    characteristics. The *Bureau of Labor Statistics (BLS)* then compiles these statistics
    into [annual reports](https://www.bls.gov/cex/tables-getting-started-guide.htm#section2)
    published in September.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 为了跟踪收入和支出，*人口普查局*使用*消费者支出调查*收集美国消费者的支出、收入和人口特征信息。随后，*劳工统计局（BLS）*将这些统计数据汇编成每年在九月份发布的[年度报告](https://www.bls.gov/cex/tables-getting-started-guide.htm#section2)。
- en: These BLS reports are in the [public domain](https://www.bls.gov/bls/linksite.htm)
    and are useful to both policymakers and individuals. Young people just starting
    out can use the tables as a starting point for preparing budgets and savings plans.
    Older people can use the same tables to help plan their retirement. You can view
    a complete table [here](https://www.bls.gov/cex/tables/calendar-year/aggregate-group-share/reference-person-age-ranges-2021.pdf)
    and part of one in the figure below.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这些BLS报告属于[公共领域](https://www.bls.gov/bls/linksite.htm)，对政策制定者和个人都有用。刚刚起步的年轻人可以利用这些表格作为准备预算和储蓄计划的起点。年长者可以利用这些表格来帮助规划退休。你可以[在这里](https://www.bls.gov/cex/tables/calendar-year/aggregate-group-share/reference-person-age-ranges-2021.pdf)查看完整的表格，并在下面的图示中查看部分内容。
- en: '![](../Images/1276bf992c99e58646db88dd097a4fa1.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1276bf992c99e58646db88dd097a4fa1.png)'
- en: The first lines of the 2021 BLS Consumer Expenditure Survey Table 1300 (from
    the Bureau of Labor Statistics)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 2021年BLS消费者支出调查表1300的前几行（来自劳工统计局）
- en: 'Consumer Expenditure tables lump expenditures into 14 different types, as listed
    below:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 消费支出表将支出分为14种不同的类型，如下所示：
- en: '![](../Images/a5bda3dfcd29b142a0e1eec9e55082d0.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a5bda3dfcd29b142a0e1eec9e55082d0.png)'
- en: Explanation of expenditure types (from the Bureau of Labor Statistics)
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 支出类型解释（来自劳工统计局）
- en: The **cash contributions** category includes support for college students living
    away from home, alimony and child support payments, and personal cash gifts, such
    as those for birthdays or weddings. It also includes contributions to religious,
    charitable, or political organizations.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**现金捐赠**类别包括对离家上大学的学生的资助、赡养费和抚养费，以及个人现金礼物，例如生日或婚礼礼物。它还包括对宗教、慈善或政治组织的捐赠。'
- en: The Plotly Express and Tabula Libraries
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Plotly Express和Tabula库
- en: '[*Plotly Express*](https://plotly.com/python/plotly-express/) is a higher-level
    version of the *Plotly* graphing library. It lets you easily produce attractive
    figures with a lot of built-in functionality.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[*Plotly Express*](https://plotly.com/python/plotly-express/)是*Plotly*图形库的高级版本。它让你可以轻松制作出具有许多内置功能的吸引人的图形。'
- en: A weakness of treemaps is that small rectangles may not be labeled, or the labels
    may be illegible. Plotly Express helps to overcome this limitation by providing
    an interactive “hover window” that appears when the cursor pauses over a rectangle.
    This popup window contains detailed information that would be impractical to display
    directly on the diagram.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Treemaps的一个缺点是小矩形可能没有标签，或者标签可能难以辨认。Plotly Express通过提供一个交互式的“悬停窗口”来帮助克服这一限制，当光标停留在矩形上时，该弹出窗口会显示详细信息，这在图表上直接显示是不切实际的。
- en: The [*tabula-py*](https://tabula-py.readthedocs.io/en/latest/getting_started.html)
    library is a Python wrapper of tabula-java, which enables table extraction from
    a PDF. The extracted data can then be converted into a list of DataFrames, or
    a CSV, TSV, or JSON file.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[*tabula-py*](https://tabula-py.readthedocs.io/en/latest/getting_started.html)库是tabula-java的Python封装，它可以从PDF中提取表格。提取的数据可以转换成DataFrame列表，或CSV、TSV或JSON文件。'
- en: 'You can install Plotly Express and tabula-py with pip or conda. Plotly Express
    requires Plotly as a dependency. Here’s the conda installation example:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过pip或conda安装Plotly Express和tabula-py。Plotly Express需要Plotly作为依赖项。以下是conda安装示例：
- en: '`conda install plotly plotly_express tabula-py`'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`conda install plotly plotly_express tabula-py`'
- en: The Process
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 过程
- en: 'Our job will be to convert the BLS “Table 1300” PDF into a pandas DataFrame
    and then into a treemap. While tabula-py provides multiple format conversions
    for PDFs, we’ll take the CSV route here:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的任务是将 BLS “表格 1300” PDF 转换为 pandas DataFrame，然后转换为树图。虽然 tabula-py 提供了多种 PDF
    格式转换，但我们将在这里使用 CSV 格式：
- en: Use tabula-py to read the PDF from the web and convert it to a CSV.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 tabula-py 从网络读取 PDF 并将其转换为 CSV。
- en: Use pandas to convert the CSV to a DataFrame.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 pandas 将 CSV 转换为 DataFrame。
- en: Use pandas to clean and prepare the DataFrame for plotting.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 pandas 清理和准备 DataFrame 以供绘图。
- en: Use Plotly Express to plot the treemap.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Plotly Express 绘制树图。
- en: Importing Libraries
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入库
- en: The following snippet imports the libraries we’ll need, sets up Jupyter Notebook
    to show the maximum rows in a DataFrame, and rounds float values in DataFrames
    to two decimal places.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码导入我们所需的库，设置 Jupyter Notebook 以显示 DataFrame 中的最大行数，并将 DataFrame 中的浮点值四舍五入到两位小数。
- en: '[PRE0]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Converting the PDF Table into a DataFrame
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 PDF 表格转换为 DataFrame
- en: To convert the web-based PDF into a DataFrame, we’ll first use tabula-py to
    convert it into a CSV file and then use pandas to convert the CSV file into a
    DataFrame.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将基于 Web 的 PDF 转换为 DataFrame，我们将首先使用 tabula-py 将其转换为 CSV 文件，然后使用 pandas 将 CSV
    文件转换为 DataFrame。
- en: '[PRE1]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/8bdecf7f44a05927651b05f5b2ea40f0.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8bdecf7f44a05927651b05f5b2ea40f0.png)'
- en: The head of the initial DataFrame (image by author)
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 初始 DataFrame 的前几行（图片由作者提供）
- en: Wrangling the Data
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据处理
- en: Now we need to clean the DataFrame. Row 4 contains the number of [consumer units](https://www.bls.gov/cex/csxgloss.htm#cu),
    *in thousands*, for each age bracket, stored in columns 3–9\. We’ll need the number
    of consumer units for each bracket to determine *average* expenditures later.
    The following code extracts the unit information, removes punctuation, converts
    the results to integers, and multiplies by 1,000.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要清理 DataFrame。第 4 行包含每个年龄段的[消费者单位](https://www.bls.gov/cex/csxgloss.htm#cu)的数量，*以千为单位*，存储在第
    3 到第 9 列中。我们需要每个年龄段的消费者单位数量，以便稍后确定*平均*支出。以下代码提取单位信息，移除标点符号，将结果转换为整数，并乘以 1,000。
- en: '[PRE2]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Next, we create a dictionary that uses as keys and values the age brackets —
    based on the DataFrame column headers — and the number of consumer units in each
    bracket.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们创建一个字典，以年龄段作为键和值——基于 DataFrame 列标题——以及每个年龄段的消费者单位数量。
- en: '[PRE3]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Preparing an Age Bracket for Plotting
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备一个用于绘图的年龄段
- en: We’ll want to plot a *single* age bracket at a time. The following code designates
    the bracket (for 25–34-year-olds), produces a new DataFrame for this bracket,
    does some more data cleaning and renaming, and calculates the percentage share
    and average expenditure for each expenditure type.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望一次绘制一个*单一*年龄段。以下代码指定年龄段（25–34 岁），为该年龄段生成一个新的 DataFrame，进行更多数据清理和重命名，并计算每种支出类型的百分比份额和平均支出。
- en: The expenditure type *names*, such as “Food” and “Housing,” were found by scrolling
    through Table 1300\. These represent high-level summaries of much more granular
    expenditure details. The age bracket column represents the *percent* of the aggregate
    spending attributed to that age group.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 支出类型*名称*，如“食品”和“住房”，是通过浏览表格 1300 找到的。这些代表了更详细的支出信息的高层总结。年龄段列表示该年龄组的总支出*百分比*。
- en: '[PRE5]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/0876da9c5d96fd610bd80c2e9a2d856d.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0876da9c5d96fd610bd80c2e9a2d856d.png)'
- en: The DataFrame ready for plotting (image by author)
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 准备好绘图的 DataFrame（图片由作者提供）
- en: Plotting the Treemap
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 绘制树图
- en: Plotly Express comes with over 30 functions for creating entire figures at once.
    The `treemap()` function takes the DataFrame, “the top-level” category (in this
    case, the “Expenditure Type”), the remaining categories (`df.index`), and column
    names for the values and colors. We'll also specify a color scale (“portland”)
    and dimensions for the figure.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Plotly Express 提供了超过 30 个函数来一次性创建整个图形。`treemap()` 函数接受 DataFrame、“顶级”类别（在此情况下为“支出类型”）、剩余类别（`df.index`）以及值和颜色的列名称。我们还将指定一个颜色比例（“portland”）和图形的尺寸。
- en: '[PRE6]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/4c36158f54e018479059d668f63110a1.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4c36158f54e018479059d668f63110a1.png)'
- en: The treemap for average expenditures for 25–34-year-olds (image by author)
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 25–34 岁群体的平均支出树图（图片由作者提供）
- en: You can see how this figure could be useful for financial planners trying to
    explain budgeting to a client. Compared to several pages of text, it’s a *lot*
    easier on the eyes. And with Plotly Express, you can drill down to see the detailed
    values by simply hovering your cursor over a rectangle, as demonstrated for the
    healthcare sector below.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到这张图表对财务规划师解释预算给客户可能非常有用。与几页文字相比，它*更*容易看懂。而且使用 Plotly Express，你可以通过简单地将光标悬停在矩形上来深入查看详细值，如下所示的医疗保健部分。
- en: '![](../Images/3821af7545957ccf505b93ca756a3804.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3821af7545957ccf505b93ca756a3804.png)'
- en: Example of the hover feature showing details for healthcare spending (image
    by author)
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 显示医疗保健支出详细信息的悬停功能示例（图像由作者提供）
- en: 'Although it won’t change the appearance of the table, you can switch the display
    to show “Expenditure Percent” by switching the arguments for the `values` and
    `color` parameters, as so:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这不会改变表格的外观，但你可以通过切换`values`和`color`参数的值来显示“支出百分比”，如下所示：
- en: '[PRE7]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../Images/5b650daaac2afe378abc7b23b4d469f4.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5b650daaac2afe378abc7b23b4d469f4.png)'
- en: The treemap for average expenditure percent for 25–34-year-olds (image by author)
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 25-34岁人群的平均支出百分比树形图（图像由作者提供）
- en: Based on the previous treemap, it’s apparent that 25–34-year-olds tend to spend
    most of their income on housing, transportation, and insurance. But what about
    seniors?
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 根据之前的树形图，可以看出25-34岁的人群往往将大部分收入用于住房、交通和保险。但那老年人呢？
- en: If you change the `AGE` variable to `'75 years'` and rerun the code, you'll
    see that healthcare has become much more important, as are cash contributions,
    which probably take the form of charitable donations and gifts to family. The
    color bar also indicates that expenditures are generally lower than for the 25–34-year-old
    bracket.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你将`AGE`变量更改为`'75 years'`并重新运行代码，你会看到医疗保健变得更加重要，现金捐赠也增加了，这可能表现为慈善捐款和家庭礼物。颜色条还表明支出通常低于25-34岁的人群。
- en: '![](../Images/13339842216d8223e60021402ece2875.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/13339842216d8223e60021402ece2875.png)'
- en: The treemap for average expenditures for 75+ year-olds (image by author)
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 75岁以上人群的平均支出树形图（图像由作者提供）
- en: 'One final observation about treemaps: because the data is *sorted*, you can
    distinguish between categories with similar values. In the previous figure, while
    both “Food” and “Transportation” are similar in size, you can be sure that “Food”
    is larger because of its position in the hierarchy.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 关于树形图的一个最终观察：由于数据是*排序的*，你可以区分类似值的类别。在前面的图中，尽管“食品”和“交通”的大小相似，但你可以确定“食品”因其在层级中的位置而更大。
- en: Caveat Emptor!
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 买者自慎！
- en: The values in the BLS table represent *nationwide* averages. Local variations
    may occur. For example, housing and transportation costs will undoubtedly be higher
    in large urban areas versus small rural towns. Additionally, all the expenditure
    estimates are subject to [error](https://www.bls.gov/cex/ce-se-2016.pdf). Therefore,
    this data should be used *directionally*, rather than *absolutely*, for any financial
    planning purposes.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: BLS 表中的数值代表*全国*平均值。可能会出现地方差异。例如，大型城市的住房和交通成本无疑高于小型农村镇。此外，所有支出估算都可能存在[误差](https://www.bls.gov/cex/ce-se-2016.pdf)。因此，这些数据应当*方向性*使用，而非*绝对性*使用于任何财务规划目的。
- en: Summary
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: The tabula-py module greatly simplifies the process of converting PDF tables
    into useful formats like CSV. Likewise, Plotly Express, paired with a pandas DataFrame,
    makes it easy to generate interactive treemaps. With a treemap, you can easily
    visualize — and communicate — relationships in hierarchical data.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: tabula-py 模块大大简化了将 PDF 表格转换为 CSV 等有用格式的过程。同样，Plotly Express 与 pandas DataFrame
    配对，能够轻松生成互动的树形图。使用树形图，你可以轻松地可视化和传达层级数据中的关系。
- en: Treemaps are interesting, but they aren’t the only game in town. To see the
    same basic data presented with Sankey diagrams, check out this [post](https://www.visualcapitalist.com/how-americans-make-and-spend-their-money-by-age-group/)
    in the *Visual Capitalist*.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 树形图很有趣，但并不是唯一的选择。要查看使用桑基图呈现的相同基本数据，请查看*Visual Capitalist*中的这个[帖子](https://www.visualcapitalist.com/how-americans-make-and-spend-their-money-by-age-group/)。
- en: Thanks!
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 谢谢！
- en: Thanks for reading. If you enjoyed this article, then check out my books, [*Impractical
    Python Projects*](https://a.co/d/gxMMzzf) and [*Real-world Python*](https://a.co/d/d8rGegu),for
    more coding ideas.And follow me to see more *Quick Success Data Science* projects
    in the future.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读。如果你喜欢这篇文章，可以查看我的书籍，[*不切实际的 Python 项目*](https://a.co/d/gxMMzzf) 和 [*现实世界的
    Python*](https://a.co/d/d8rGegu)，以获取更多编码点子。并关注我，未来会有更多 *快速成功的数据科学* 项目。
