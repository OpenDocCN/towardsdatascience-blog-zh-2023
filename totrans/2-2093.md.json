["```py\nemail_addresses = [\n  'mikehuls42@gmail.com',\n  'mike@mikehuls.com',\n  'johndoe@some_email.com',\n  'obviously_wrong@address',\n  'otheraddress.com',\n  'thisis@@wrong.too',\n  'thisone_is@valid.com'\n]\n```", "```py\ndef send_email_address_to_validation_api(email_address:str):\n  # We'll simulate the request to the validation API by just sleeping between 1 and 2 seconds\n  sleep_time = random.random() + 1\n  time.sleep(sleep_time)\n  # Randomly return a true / false depending on the sleep_time\n  return sleep_time > 1.5\n```", "```py\nfor email_address in email_addresses:\n  is_valid = send_email_address_to_validation_api(email_address=email_address)\n  # do other stuff with the email address and validity\n```", "```py\nresults: [bool] = map(send_email_address_to_validation_api, email_addresses)\n```", "```py\nNON THREADED           11.772 secs\n```", "```py\nfrom multiprocessing.pool import ThreadPool\n```", "```py\nwith ThreadPool(processes=10) as t_pool:\n  results = t_pool.map(send_email_address_to_validation_api, email_addresses)\n```", "```py\nNON THREADED           11.772 secs\nTHREADED MAP            1.901 secs\n```", "```py\nstrt_time_t_imap = time.perf_counter()\nwith ThreadPool(processes=10) as t_pool:\n  for res in t_pool.imap(send_email_address_to_validation_api, email_addresses):\n    print(time.perf_counter() - strt_time_t_imap, 'seconds')\n```", "```py\n1.4051628 seconds\n1.4051628 seconds\n1.7985222 seconds\n1.7985749 seconds\n1.7985749 seconds\n1.7985957 seconds\n1.7986305 seconds\n```", "```py\nNON THREADED           11.772 secs\nTHREADED MAP            1.901 secs\nTHREADED IMAP           1.901 secs(first result accessible after 1.4  secs)\n```", "```py\nstrt_time_t_imap = time.perf_counter()\nwith ThreadPool(processes=10) as t_pool:\n  for res in t_pool.imap_unordered(send_email_address_to_validation_api, email_addresses):\n    print(time.perf_counter() - strt_time_t_imap, res)\n```", "```py\n1.0979514 seconds\n1.2382307 seconds\n1.3781070 seconds\n1.4730333 seconds\n1.7439070 seconds\n1.7909826 seconds\n1.9953354 seconds\n```", "```py\nNON THREADED           11.772 secs\nTHREADED MAP            1.901 secs\nTHREADED IMAP           1.901 secs(first result accessible after 1.4  secs)\nTHREADED IMAP_UNORDERED 1.901 secs(first result accessible after 1.09 secs)\n```", "```py\ndef load_ad():\n    time.sleep(1)\n    return \"ad loaded\"\n```", "```py\ndef load_clickbait():\n    time.sleep(1.5)\n    return \"clickbait loaded\"def load_banner():\n    time.sleep(2)\n    return \"banner loaded\"def load_posts():\n    time.sleep(3)\n    return \"posts loaded\"\n```", "```py\nwith ThreadPool(processes=4) as t_pool:  # limit to 4 processes as we only need to execute \n  results = t_pool.imap_unordered(lambda x: x(), [load_ad, load_posts, load_banner, load_clickbait])\n```"]