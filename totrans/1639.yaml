- en: 'PCA for Multivariate Time Series: Forecasting Dynamic High-Dimensional Data'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/pca-for-multivariate-time-series-forecasting-dynamic-high-dimensional-data-ab050a19e8db](https://towardsdatascience.com/pca-for-multivariate-time-series-forecasting-dynamic-high-dimensional-data-ab050a19e8db)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: System Forecasting in Presence of Noise and Serial Correlation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@cerlymarco?source=post_page-----ab050a19e8db--------------------------------)[![Marco
    Cerliani](../Images/48a07a024349bac3c8e397bf5a0372e2.png)](https://medium.com/@cerlymarco?source=post_page-----ab050a19e8db--------------------------------)[](https://towardsdatascience.com/?source=post_page-----ab050a19e8db--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----ab050a19e8db--------------------------------)
    [Marco Cerliani](https://medium.com/@cerlymarco?source=post_page-----ab050a19e8db--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----ab050a19e8db--------------------------------)
    ·5 min read·Jan 31, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d24175ab02c0431b2c94255d1da09b50.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Viva Luna Studios](https://unsplash.com/@vivalunastudios?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Multi-step ahead forecasting of multivariate time series is known to be a complex
    predictive task. We have to take care of the large dimensionality of both inputs
    and outputs; we have to handle the cross-sectional and temporal dependencies adequately;
    last but not least, we have to ensure an acceptable level of long-term accuracy.
  prefs: []
  type: TYPE_NORMAL
- en: Nowadays, analytic applications which handle huge data in temporal and cardinality
    dimensions are very common. Accordingly, all the solutions built on top of these
    systems must be able to manipulate large datasets. **In the Internet of Things
    (IoT) era, it’s usual to deal with large sets of time series, which show, in most
    cases, strong correlation patterns**. These dynamics happen very often in fields
    like telecommunication, industrial manufacturing, finance, electric grid, and
    so on.
  prefs: []
  type: TYPE_NORMAL
- en: Supposing being a data scientist. We are responsible for developing a predictive
    analytic application that provides multi-step forecasts of an IoT system made
    by correlated and noisy sensors. **Multivariate forecasting is widely discussed
    in the literature**. From statistical techniques like VAR (Vector Auto-Regressive
    Model) to more sophisticated and recent deep learning-based methodologies, there
    are a lot of available solutions to carry out a predictive task. However, the
    real world is more sophisticated and cruel than expected. **Managing large sets
    of high-frequency sensors in real-time requires developing solutions that blend
    an adequate degree of accuracy with reasonable responsive latency**.
  prefs: []
  type: TYPE_NORMAL
- en: In this post, we try to develop a predictive application for multivariate and
    multi-step sensor forecasting that can be used in a near real-time mode. That’s
    possible by **mixing dimensional reduction with forecasting techniques suited
    for multivariate contexts**. The proposed methodology is popular in the economic
    forecasting literature and is known as Dynamic Factor Modeling [1]. In other words,
    **we stack on top of the results of dimensional reduction techniques (like PCA)
    our favorite forecasting algorithm** to predict future system dynamics.
  prefs: []
  type: TYPE_NORMAL
- en: EXPERIMENT SETUP
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For the scope of the post, we generate multiple synthetic time series. The series
    can be separated into two groups according to their sinusoidal dynamics. Everything
    would be perfect except that the signals are hidden by noise.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6e422fba63700901728baa73339c911f.png)'
  prefs: []
  type: TYPE_IMG
- en: Synthetic dynamics present in the data [image by the author]
  prefs: []
  type: TYPE_NORMAL
- en: We add a good degree of noise to our time series to replicate the chaotic behavior
    of real-world systems and make the forecasting task more difficult.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9c0d9ba27682035af1cbad7abfd8714d.png)'
  prefs: []
  type: TYPE_IMG
- en: Simulated series with noise to forecast [image by the author]
  prefs: []
  type: TYPE_NORMAL
- en: With multiple time series at our disposal, our scope is to forecast them various
    steps in advance. **Having to carry out a multivariate forecasting task in a near
    real-time mode we should find a trade-off between prediction accuracy and the
    duration of the inference process**.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s see how we can approach the problem.
  prefs: []
  type: TYPE_NORMAL
- en: MULTIVARIATE DYNAMIC FORECASTING
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Dynamic Factor Modeling** (DFM) is a technique for multivariate forecasting
    taken from the economic literature [1]. The basic idea behind DFM is that **a
    small number of series can account for the time behavior of a much larger number
    of variables**. If we can obtain accurate estimates of these factors, the entire
    forecasting task can be simplified by using the estimated dynamic factors instead
    of using all series.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9536d14c090c2e31ea973c7ca37c2b88.png)'
  prefs: []
  type: TYPE_IMG
- en: Dynamic Factor Modeling estimation flow [image by the author]
  prefs: []
  type: TYPE_NORMAL
- en: 'The quality of the predictions obtained with DFM depends on two main aspects:
    the goodness of factors estimation and the accuracy of factors forecasting. There
    are various ways to estimate dynamic factors. The most common and adopted in the
    machine learning ecosystem [2] consists in obtaining the principal components
    of a set of data through orthogonal rotations (PCA).'
  prefs: []
  type: TYPE_NORMAL
- en: '**DFM is also a model-agnostic technique**. In other words, any dimensionality
    reduction and any forecasting strategy can be used to perform forecasting. For
    our experiment, we use standard PCA and naive direct forecasting. Below is a code
    snapshot on how to carry out DFM estimation and prediction.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: As a final step, we try to solve the same task by simply adopting multivariate
    direct forecasting on all the series at our disposal. Regardless of the results
    achieved, this methodology is not sustainable since it requires lagged feature
    computations for all the series at our disposal. This may require **handling an
    enormous set of lagged variables which makes forecasting not possible for most
    systems due to physical (memory) and time limits**.
  prefs: []
  type: TYPE_NORMAL
- en: We adopt a temporal cross-validation strategy to validate the results of both
    methodologies and store performances.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/36eb20be5b3330c36bfe59bf1615068d.png)'
  prefs: []
  type: TYPE_IMG
- en: Visual comparison of forecasts of both methodologies [image by the author]
  prefs: []
  type: TYPE_NORMAL
- en: DFM outperforms naive multivariate direct forecasting. It leads to better accuracy
    in a lower time (inference/estimation time is dependent on the number of system
    variables). Inspecting the forecasts produced we may observe that DFM can correctly
    discriminate and reproduce the double sinusoidal dynamics present in the original
    series.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/14a3fea925c119f465c26663666b4120.png)'
  prefs: []
  type: TYPE_IMG
- en: Comparison of multivariate forecasting performances [image by the author]
  prefs: []
  type: TYPE_NORMAL
- en: SUMMARY
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this post, we proposed a practical application of Dynamic Factor Modeling.
    It confirms to be a valid approach to modeling multivariate time series forecasting.
    It’s particularly suited to forecasting high-dimensional data which also shows
    a possible high degree level of noise. As always, **the perfect forecasting technique
    that suits all situations doesn’t exist**. As data scientists, we are responsible
    to experiment with techniques we don’t know before. **Only with continuous self-learning,
    we can choose and discriminate the best possible solutions for our daily tasks**.
  prefs: []
  type: TYPE_NORMAL
- en: '[**CHECK MY GITHUB REPO**](https://github.com/cerlymarco/MEDIUM_NoteBook)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Keep in touch: [Linkedin](https://www.linkedin.com/in/marco-cerliani-b0bba714b/)'
  prefs: []
  type: TYPE_NORMAL
- en: REFERENCES
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] M. Forni, M. Hallin, M. Lippi, and L. Reichlin, “[*The generalized dynamic
    factor model*](https://www.jstor.org/stable/27590616)”, Journal of the American
    Statistical Association, vol. 100, no. 471, pp. 830–840.'
  prefs: []
  type: TYPE_NORMAL
- en: '[2] G. Bontempi, Y. -A. Le Borgne and J. de Stefani, “[*A Dynamic Factor Machine
    Learning Method for Multi-variate and Multi-step-Ahead Forecasting*](https://ieeexplore.ieee.org/document/8259781)”,
    2017 IEEE International Conference on Data Science and Advanced Analytics (DSAA),
    Tokyo, Japan, 2017, pp. 222–231.'
  prefs: []
  type: TYPE_NORMAL
