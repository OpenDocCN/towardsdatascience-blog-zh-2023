- en: How To Use Argument Parsing for Greater Efficiency in Machine Learning Workflows
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何利用参数解析提升机器学习工作流的效率
- en: 原文：[https://towardsdatascience.com/how-to-use-argument-parsing-for-greater-efficiency-in-machine-learning-workflows-2f637eaf5f6a](https://towardsdatascience.com/how-to-use-argument-parsing-for-greater-efficiency-in-machine-learning-workflows-2f637eaf5f6a)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-use-argument-parsing-for-greater-efficiency-in-machine-learning-workflows-2f637eaf5f6a](https://towardsdatascience.com/how-to-use-argument-parsing-for-greater-efficiency-in-machine-learning-workflows-2f637eaf5f6a)
- en: A complete guide on how to use argparse for your command line applications and
    how it can be leveraged for machine learning projects
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何使用 argparse 来提升命令行应用程序的效率，并且如何将其应用于机器学习项目的完整指南
- en: '[](https://thomasdorfer.medium.com/?source=post_page-----2f637eaf5f6a--------------------------------)[![Thomas
    A Dorfer](../Images/9258a1735cee805f1d9b02e2adf01096.png)](https://thomasdorfer.medium.com/?source=post_page-----2f637eaf5f6a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----2f637eaf5f6a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----2f637eaf5f6a--------------------------------)
    [Thomas A Dorfer](https://thomasdorfer.medium.com/?source=post_page-----2f637eaf5f6a--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://thomasdorfer.medium.com/?source=post_page-----2f637eaf5f6a--------------------------------)[![Thomas
    A Dorfer](../Images/9258a1735cee805f1d9b02e2adf01096.png)](https://thomasdorfer.medium.com/?source=post_page-----2f637eaf5f6a--------------------------------)[](https://towardsdatascience.com/?source=post_page-----2f637eaf5f6a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----2f637eaf5f6a--------------------------------)
    [Thomas A Dorfer](https://thomasdorfer.medium.com/?source=post_page-----2f637eaf5f6a--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----2f637eaf5f6a--------------------------------)
    ·6 min read·Mar 29, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----2f637eaf5f6a--------------------------------)
    ·阅读时间 6 分钟·2023年3月29日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/69122e7dab880b86b587b9c89ca6fe94.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/69122e7dab880b86b587b9c89ca6fe94.png)'
- en: Image by the Author.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源于作者。
- en: If you’ve spent some time roaming around in the world of data science or software
    engineering, you have most likely come across some applications that require you
    to use your command-line interface, or CLI. Common examples include [Azure CLI](https://learn.microsoft.com/en-us/cli/azure/)
    for managing Azure resources or [Git](https://git-scm.com/book/en/v2/Getting-Started-The-Command-Line)
    for version control and source code management.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在数据科学或软件工程领域有过一些探索，你很可能遇到过需要使用命令行接口（CLI）的应用程序。常见的例子包括用于管理 Azure 资源的 [Azure
    CLI](https://learn.microsoft.com/en-us/cli/azure/) 或用于版本控制和源代码管理的 [Git](https://git-scm.com/book/en/v2/Getting-Started-The-Command-Line)。
- en: The same type of functionality and program interactivity can be achieved with
    your own custom Python application. Command-line arguments are a great tool to
    enrich your application with the necessary flexibility that allows you and your
    users to seamlessly configure and customize the behavior of the program.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 同样的功能和程序互动性也可以通过你自己定制的 Python 应用程序来实现。命令行参数是丰富应用程序功能的绝佳工具，它允许你和你的用户无缝配置和定制程序的行为，从而增加了必要的灵活性。
- en: One popular and (perhaps) the most frequently used Python library for parsing
    command-line arguments is [**argparse**](https://docs.python.org/3/library/argparse.html).
    In this article, we’ll explore some of its core functionalities and — using concrete
    examples — take a closer look at how to efficiently leverage them for Python applications.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 一个流行且（也许是）最常用的 Python 库来解析命令行参数是 [**argparse**](https://docs.python.org/3/library/argparse.html)。在本文中，我们将探索一些其核心功能，并通过具体示例详细了解如何高效地将其应用于
    Python 应用程序。
- en: An Introduction to argparse
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: argparse 简介
- en: Python’s argparse module offers an intuitive and user-friendly way to parse
    command-line arguments. In a nutshell, all you need to do is (1) create an `ArgumentParser`
    object, (2) add your argument specifications through the `add_argument()` method,
    and (3) run the parser with the `parse_args()` method. Let’s now explore each
    of these three steps in a bit more detail and see how they can be combined to
    form a fully functional command-line parser.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Python 的 argparse 模块提供了一种直观且用户友好的方式来解析命令行参数。简而言之，你只需完成以下三步：（1）创建一个 `ArgumentParser`
    对象，（2）通过 `add_argument()` 方法添加参数规范，（3）使用 `parse_args()` 方法运行解析器。现在让我们详细探讨这三个步骤，并看看如何将它们组合成一个功能齐全的命令行解析器。
- en: First, the `[ArgumentParser](https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser)`
    object serves as a container that holds necessary information such as the name
    of the program or a brief description of it. This information can be retrieved
    by the user through the help arguments `-h` or `--help` and provides them with
    a better understanding of the intent of the program.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，`[ArgumentParser](https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser)`
    对象作为一个容器，保存了必要的信息，如程序的名称或简要描述。用户可以通过帮助参数 `-h` 或 `--help` 检索这些信息，从而更好地理解程序的意图。
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Second, we can add positional or optional arguments through the `add_argument()`
    method. Positional arguments are specified by simply providing the argument name,
    whereas optional arguments need to be identified through the `—` prefix. A single
    dash is used to specify an abbreviated version of the argument, usually a single
    letter, and a double dash is used to provide a more descriptive argument name.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，我们可以通过 `add_argument()` 方法添加位置参数或可选参数。位置参数通过直接提供参数名称来指定，而可选参数需要通过 `—` 前缀进行识别。一个单破折号用于指定参数的缩写版本，通常是一个字母，而双破折号用于提供更具描述性的参数名称。
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Finally, we can run the parser using the `parse_args()` method, which then allows
    us to access and manipulate the arguments specified in the CLI.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以使用 `parse_args()` 方法运行解析器，这样我们就可以访问和操作 CLI 中指定的参数。
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We can now run this program — let’s name it `program.py` — in our CLI with
    some random arguments to see how it works:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以在 CLI 中运行这个程序——我们称之为 `program.py`——并使用一些随机参数来查看它的工作情况：
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We have now constructed a functionality that allows us to specify input arguments
    directly on the command-line and then use these to perform any operations we would
    like. You can probably imagine by now how useful this can be for any development
    process that requires the repeated run of a program and thus an easy and seamless
    way of interaction.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经构建了一个功能，允许我们直接在命令行上指定输入参数，然后使用这些参数执行任何我们想要的操作。你现在可能已经能够想象这对于任何需要重复运行程序的开发过程有多么有用，从而实现了一种简单而无缝的交互方式。
- en: Utility in Machine Learning
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机器学习中的实用工具
- en: Let’s assume you have built a machine learning or deep learning model in Python
    and you would like to run it using different hyperparameters, such as learning
    rate, batch size, or number of epochs, and store the results in different directories.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你已经在 Python 中构建了一个机器学习或深度学习模型，你希望使用不同的超参数，如学习率、批处理大小或训练轮次，并将结果存储在不同的目录中。
- en: Specifying these hyperparameters directly on the command-line considerably simplifies
    the way you interact with that program. It enables you to do experimentation with
    different model configurations without actually having to modify the underlying
    source code, thus also reducing the likelihood of introducing unintended bugs.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 直接在命令行上指定这些超参数大大简化了与该程序的交互方式。它使你能够在不实际修改底层源代码的情况下对不同的模型配置进行实验，从而减少了引入意外错误的可能性。
- en: 'Example: Train a Random Forest Classifier'
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例：训练随机森林分类器
- en: Imagine you want to build an experimentation workflow that allows you to seamlessly
    and repeatedly train a random forest classifier. You want to configure it in such
    a way that you can simply pass the training dataset, some hyperparameters, and
    the model’s target directory to the CLI and it will just run it, train the model
    and store it in the specified location for you.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，你想建立一个实验工作流，使你能够无缝且反复地训练随机森林分类器。你希望以一种方式进行配置，以便你只需将训练数据集、一些超参数和模型的目标目录传递给
    CLI，它就会运行、训练模型并将其存储在指定位置。
- en: For this example, we’ll use the publicly available [Iris Species](https://www.kaggle.com/datasets/uciml/iris)
    dataset. We can load the dataset through `seaborn` and save it as `iris.csv`.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将使用公开的 [鸢尾花种类](https://www.kaggle.com/datasets/uciml/iris) 数据集。我们可以通过
    `seaborn` 加载数据集并将其保存为 `iris.csv`。
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The get a better idea of what our data looks like, we can visualize it with
    a [pair plot](https://seaborn.pydata.org/generated/seaborn.pairplot.html):'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地了解我们的数据，我们可以使用 [成对图](https://seaborn.pydata.org/generated/seaborn.pairplot.html)
    可视化它：
- en: '![](../Images/1fece23c463a551e30046124c72fdc6f.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1fece23c463a551e30046124c72fdc6f.png)'
- en: 'Image by the Author. Dataset used: [Iris Species](https://www.kaggle.com/datasets/uciml/iris).
    License: [CC0 Public Domain](https://creativecommons.org/publicdomain/zero/1.0/).'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片。使用的数据集：[鸢尾花种类](https://www.kaggle.com/datasets/uciml/iris)。许可证：[CC0
    公开领域](https://creativecommons.org/publicdomain/zero/1.0/)。
- en: 'Now on to our main task: building a parser functionality into our Python program.
    To train the random forest classifier, we’d like to pass it the training dataset
    — that’s going to be our positional argument — two hyperparameters, and a target
    path where our model will be stored. The latter ones will be our optional arguments.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在开始我们的主要任务：在我们的Python程序中构建一个解析器功能。为了训练随机森林分类器，我们希望将训练数据集传递给它——这将是我们的位置参数——两个超参数，以及一个我们希望保存模型的目标路径。后者将是我们的可选参数。
- en: For the optional arguments, we will also specify the type through the `type`
    keyword, the default values through the `default` keyword, and a helpful description
    of the argument through the `help` keyword.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 对于可选参数，我们还将通过`type`关键字指定类型，通过`default`关键字指定默认值，并通过`help`关键字提供参数的有用描述。
- en: Then, we will parse the arguments and store the results in the variable `args`,
    which we will later use to specify the dataset that we’re reading in, the hyperparameters
    to train the classifier, and the location where we’d like the model to be saved.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将解析参数并将结果存储在变量`args`中，稍后我们将使用这些结果来指定我们正在读取的数据集、训练分类器的超参数以及我们希望模型保存的位置。
- en: 'Here’s how this looks in code:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码的样子如下：
- en: '[PRE5]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Now, let’s save that script as `train_rf.py` and place it in the same directory
    as our training dataset, `iris.csv`.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们将脚本保存为`train_rf.py`并将其放置在与我们的训练数据集`iris.csv`相同的目录中。
- en: Next, we open up a terminal window from which we can call this program with
    custom-defined arguments. In the example below, we specify `n_estimators` to be
    100 and `max_depth` to be 10\. Regarding `model_path`, we’re happy with the default
    path and don’t need to specify it in this case.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们打开一个终端窗口，从中可以用自定义参数调用这个程序。在下面的示例中，我们将`n_estimators`指定为100，将`max_depth`指定为10。至于`model_path`，我们对默认路径感到满意，因此在这种情况下无需指定。
- en: '[PRE6]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This line will train our random forest classifier and, after a short while,
    you’ll see a file named `model.pkl` appear in your directory, which you can then
    use to validate your model on a test set or to produce predictions.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这行代码将训练我们的随机森林分类器，过一会儿，你将会看到一个名为`model.pkl`的文件出现在你的目录中，你可以用它来在测试集上验证你的模型或生成预测。
- en: I hope this article gave you some insights on how to use argparse in Python
    to parse arguments directly from the CLI and, consequently, improve the user experience
    and interactivity of your machine learning application.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望这篇文章给你提供了一些关于如何在Python中使用argparse直接从CLI解析参数的见解，从而改善你的机器学习应用程序的用户体验和互动性。
- en: Happy coding!
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 编程愉快！
- en: 'More Resources:'
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多资源：
- en: '[argparse — Parser for command-line options, arguments and sub-commands — Python
    3.11.2 documentation](https://docs.python.org/3/library/argparse.html)'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[argparse — 命令行选项、参数和子命令的解析器 — Python 3.11.2 文档](https://docs.python.org/3/library/argparse.html)'
- en: Liked this article?
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 喜欢这篇文章吗？
- en: Let’s connect! You can find me on [Twitter](https://twitter.com/ThomasADorfer)
    and [LinkedIn](https://www.linkedin.com/in/thomasdorfer/).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们联系一下吧！你可以在 [Twitter](https://twitter.com/ThomasADorfer) 和 [LinkedIn](https://www.linkedin.com/in/thomasdorfer/)
    上找到我。
- en: If you like to support my writing, you can do so through a [Medium Membership](https://thomasdorfer.medium.com/membership),
    which provides you access to all my stories as well as those of thousands of other
    writers on Medium.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望支持我的写作，你可以通过 [Medium会员](https://thomasdorfer.medium.com/membership) 来实现，这将为你提供访问我所有故事以及Medium上成千上万其他作者故事的权限。
- en: '[](https://medium.com/@thomasdorfer/membership?source=post_page-----2f637eaf5f6a--------------------------------)
    [## Join Medium with my referral link - Thomas A Dorfer'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@thomasdorfer/membership?source=post_page-----2f637eaf5f6a--------------------------------)
    [## 通过我的推荐链接加入Medium - Thomas A Dorfer'
- en: Read every story from Thomas A Dorfer (and thousands of other writers on Medium).
    Your membership fee directly supports…
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阅读Thomas A Dorfer（以及Medium上成千上万的其他作者）的每一篇文章。您的会员费直接支持……
- en: medium.com](https://medium.com/@thomasdorfer/membership?source=post_page-----2f637eaf5f6a--------------------------------)
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: medium.com](https://medium.com/@thomasdorfer/membership?source=post_page-----2f637eaf5f6a--------------------------------)
