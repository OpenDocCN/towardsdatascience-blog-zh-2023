["```py\nresults = await asyncio.gather(*aws, return_exceptions=True)\n```", "```py\n# This is *not* a @coroutine!  It is just an iterator (yielding Futures).\ndef as_completed(fs, *, timeout=None):\n  # ...\n  for f in todo:\n      f.add_done_callback(_on_completion)\n  if todo and timeout is not None:\n      timeout_handle = loop.call_later(timeout, _on_timeout)\n  for _ in range(len(todo)):\n      yield _wait_for_one()\n```"]