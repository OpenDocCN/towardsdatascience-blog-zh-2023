["```py\n# we define our numbers list\nnumbers: list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n# we also define a flag variable to indicate if an even number was found\nfound_even: bool = False\n\nfor num in numbers:\n    # if number modulus 2 is 0, then it is even\n    if num % 2 == 0:\n        print(f\"{num} is even\")\n        # we set our flag to True because we found an even number\n        found_even = True\n        # we can stop execution because we found an even number\n        break\n\n# if the flag is False, no even numbers where found\nif not found_even:\n    print(\"No even numbers found\")\n```", "```py\nnumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nfor num in numbers:\n    if num % 2 == 0:\n        print(f\"{num} is even\")\n        break\nelse:\n    print(\"No even numbers found\")\n```", "```py\nimport random\n\nrand = None\nwhile True:\n    # generate a random number between 1 and 100\n    rand = random.randint(1, 100)\n    # if the random number is 10, break the execution\n    if rand != 10:\n        print(rand)\n    else:\n        break\n\n# this will only be executed if we get a 10 and break the loop\nprint(\"We got a 10!\")\n```", "```py\nimport random\n\nwhile (rand := random.randint(1, 100)) != 10:\n    print(rand)\n\nprint(\"We got a 10!\")\n```", "```py\ndef some_function(x, y, z):\n    # do something with x, y, z\n    ...\n\n# we can use it anywhere we like\nsome_list = [1, 2, 3, ...]\n```", "```py\ndef my_function(x):\n    return x * 2\n\nmy_function.counter = 0\nmy_function.counter += 1\nprint(my_function.counter)\n```", "```py\ndef my_function(x):\n    \"\"\"This is a docstring for my_function.\"\"\"\n    return x * 2\n\nprint(my_function.__name__)\nprint(my_function.__doc__)\n```", "```py\nx = 5\ny = 10\n\nif x > y:\n    result: str = \"x is greater than y\"\nelse:\n    result: str = \"y is greater than or equal to x\"\n\nprint(result)\n```", "```py\nx = 5\ny = 10\n\nresult = \"x is greater than y\" if x > y else \"y is greater than or equal to x\"\n\nprint(result)\n```"]