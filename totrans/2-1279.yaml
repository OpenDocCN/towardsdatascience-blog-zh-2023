- en: How You Can (And Why You Should) Secure Your API Keys
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-you-can-and-why-you-should-secure-your-api-keys-e433acc2f22d](https://towardsdatascience.com/how-you-can-and-why-you-should-secure-your-api-keys-e433acc2f22d)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Simple best practices for protecting API keys
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@aashishnair?source=post_page-----e433acc2f22d--------------------------------)[![Aashish
    Nair](../Images/23f4b3839e464419332b690a4098d824.png)](https://medium.com/@aashishnair?source=post_page-----e433acc2f22d--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e433acc2f22d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e433acc2f22d--------------------------------)
    [Aashish Nair](https://medium.com/@aashishnair?source=post_page-----e433acc2f22d--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e433acc2f22d--------------------------------)
    ·4 min read·Mar 7, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/41c6b18ecfb3f3b57ea5f82d0acd5b4d.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [regularguy.eth](https://unsplash.com/@moneyphotos?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: API keys play the important role of identifying the applications making requests.
    They are a security measure that ensures that unauthenticated people can’t access
    information on a given server. However, without sufficient protection of these
    keys, it is easy for external parties to acquire these keys and cause some real
    damage.
  prefs: []
  type: TYPE_NORMAL
- en: To avoid this outcome, businesses may employ IT administrators, who are responsible
    for storing, managing, and rotating API keys for multiple people and projects
    using sophisticated tools (e.g., AWS Secrets Manager).
  prefs: []
  type: TYPE_NORMAL
- en: However, due to the severe consequences of sharing/leaking API keys, the burden
    of keeping them secure shouldn’t fall on the administrators alone; every team
    member should understand the importance of keeping their API keys secure.
  prefs: []
  type: TYPE_NORMAL
- en: Here, we delve into the damage that can be done by leaking API keys and explore
    simple best practices for protecting them.
  prefs: []
  type: TYPE_NORMAL
- en: Consequences of Sharing API Keys
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Failing to secure API keys is harmful for various reasons.
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, it leads to people or businesses incurring costs for API calls that
    they haven’t even used. A notable victim is DevFactor founder Andrew Hoffman,
    who [received a $2,375 bill after accidentally posting his AWS keys on GitHub](https://www.theregister.com/2015/01/06/dev_blunder_shows_github_crawling_with_keyslurping_bots/)!
    Unfortunately, there are bots crawling across public spaces, so revealing API
    keys for even a short duration of time can be a costly mistake.
  prefs: []
  type: TYPE_NORMAL
- en: Secondly, attackers that acquire such keys can access and leverage any of the
    information accessible by the API. This can be seen in the rise in cases of cybercriminals
    that use leaked cryptocurrency exchange API keys to [steal cryptocurrencies from
    their victims’ accounts](https://cybernews.com/security/report-how-cybercriminals-abuse-api-keys-to-steal-millions/).
  prefs: []
  type: TYPE_NORMAL
- en: Finally, it increases the likelihood of apps being subject to malicious activity
    such as DDoS attacks, where attackers crash servers by flooding them with fake
    traffic.
  prefs: []
  type: TYPE_NORMAL
- en: Fortunately, these undesirable outcomes can be prevented with some care and
    caution, which can be exercised using the following tips.
  prefs: []
  type: TYPE_NORMAL
- en: Tip 1 - Avoid Storing API Keys Directly in Code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The easiest way to store API keys would be to embed them directly into the program
    that makes the API calls, but this allows readers to instantly attain the same
    access rights for the API in question.
  prefs: []
  type: TYPE_NORMAL
- en: A preferable alternative would be to store them as environmental variables.
    Environmental variables are essentially objects that can be defined in the operating
    system outside of the application.
  prefs: []
  type: TYPE_NORMAL
- en: On Windows, one can create a new environmental variable by opening the “Settings”
    window, selecting “System”, “Advanced system settings”, “Environment Variables”,
    and then clicking on “New”.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3903581f583104d6bf74ffe3808a52fe.png)'
  prefs: []
  type: TYPE_IMG
- en: Create a New Variable (Created By Author)
  prefs: []
  type: TYPE_NORMAL
- en: Another option would be to create an environmental variable using code. For
    example, here’s how one could create an environmental variable in Python with
    the os library.
  prefs: []
  type: TYPE_NORMAL
- en: When the environmental variable is stored, it can be easily accessed via code.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1e471410be1c9f475d15a354bafb48f1.png)'
  prefs: []
  type: TYPE_IMG
- en: Code Output (Created By Author)
  prefs: []
  type: TYPE_NORMAL
- en: Tip 2 - Avoid uploading API Keys to Code Repositories
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When uploading a project into a repository, it is important to ensure that all
    files containing API keys will not be included in the upload.
  prefs: []
  type: TYPE_NORMAL
- en: The simplest way to do so is by using a .gitignore file. A .gitignore file tells
    git which files should be intentionally ignored when pushing projects to a repository.
  prefs: []
  type: TYPE_NORMAL
- en: 'To create a .gitignore file, simply enter the following command in git bash:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Alternatively, one can create a text file and name it “.gitignore”.
  prefs: []
  type: TYPE_NORMAL
- en: To omit the files with API keys, simply enter their file paths into the .gitignore
    file.
  prefs: []
  type: TYPE_NORMAL
- en: Tip 3 - Rotate API Keys
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Ultimately, even seasoned professionals can get careless and expose API keys.
    To rectify such a mistake, one can rotate API keys (i.e., replacing the old key
    with a newly generated one) when they are compromised (or suspected to be compromised).
  prefs: []
  type: TYPE_NORMAL
- en: Rotating API keys mitigates the risk of exposing keys to other parties. As a
    safety measure, some teams switch their keys periodically (e.g., every 90 days)
    even when there has been no breach. The best approach for rotating API keys depends
    on the API in question, so there isn’t a one-size-fits-all way to achieve this.
  prefs: []
  type: TYPE_NORMAL
- en: 'Note: When rotating a key, do ensure that the application will make API calls
    with the new key as opposed to the outdated one.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Tip 4 - Delete Unneeded API Keys
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Finally, when certain API keys are no longer needed, it is best to simply delete
    them altogether.
  prefs: []
  type: TYPE_NORMAL
- en: This step should be completed only after verifying that the API key is not being
    utilized by the app (i.e., still in production).
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/7faf7034f24fb96b35f3ea3b6cf6aaf9.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Prateek Katyal](https://unsplash.com/@prateekkatyal?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Given the importance of API keys in projects, teams may comprise personnel that
    are responsible for managing API keys. However, leaks of API keys can be caused
    by novices and seasoned professionals alike.
  prefs: []
  type: TYPE_NORMAL
- en: Thus, every member should be aware of how easily API keys can be leaked, what
    methods can be used to prevent leakages, and what solutions can be used to rectify
    leakages.
  prefs: []
  type: TYPE_NORMAL
- en: Thank you for reading!
  prefs: []
  type: TYPE_NORMAL
