- en: Why Your RAG Is Not Reliable in a Production Environment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么你的 RAG 在生产环境中不可靠
- en: 原文：[https://towardsdatascience.com/why-your-rag-is-not-reliable-in-a-production-environment-9e6a73b3eddb](https://towardsdatascience.com/why-your-rag-is-not-reliable-in-a-production-environment-9e6a73b3eddb)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/why-your-rag-is-not-reliable-in-a-production-environment-9e6a73b3eddb](https://towardsdatascience.com/why-your-rag-is-not-reliable-in-a-production-environment-9e6a73b3eddb)
- en: And how you should tune it properly
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 以及你应该如何正确调整它
- en: '[](https://ahmedbesbes.medium.com/?source=post_page-----9e6a73b3eddb--------------------------------)[![Ahmed
    Besbes](../Images/93804d9291439715e578f204b79c9bdd.png)](https://ahmedbesbes.medium.com/?source=post_page-----9e6a73b3eddb--------------------------------)[](https://towardsdatascience.com/?source=post_page-----9e6a73b3eddb--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----9e6a73b3eddb--------------------------------)
    [Ahmed Besbes](https://ahmedbesbes.medium.com/?source=post_page-----9e6a73b3eddb--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://ahmedbesbes.medium.com/?source=post_page-----9e6a73b3eddb--------------------------------)[![Ahmed
    Besbes](../Images/93804d9291439715e578f204b79c9bdd.png)](https://ahmedbesbes.medium.com/?source=post_page-----9e6a73b3eddb--------------------------------)[](https://towardsdatascience.com/?source=post_page-----9e6a73b3eddb--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----9e6a73b3eddb--------------------------------)
    [Ahmed Besbes](https://ahmedbesbes.medium.com/?source=post_page-----9e6a73b3eddb--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----9e6a73b3eddb--------------------------------)
    ·7 min read·Oct 12, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----9e6a73b3eddb--------------------------------)
    ·阅读时间 7 分钟·2023年10月12日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/96beae64de9f7f71263e41a7767a45fe.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/96beae64de9f7f71263e41a7767a45fe.png)'
- en: Photo by [Ivan Jermakov](https://unsplash.com/@ivanjermakov?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Ivan Jermakov](https://unsplash.com/@ivanjermakov?utm_source=medium&utm_medium=referral)
    在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: With the rise of LLMs, the Retrieval Augmented Generation (RAG) [framework](https://arxiv.org/abs/2005.11401)
    also gained popularity by making it possible to build question-answering systems
    over data.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 随着 LLM 的兴起，检索增强生成（RAG）[框架](https://arxiv.org/abs/2005.11401) 也因能够在数据上构建问答系统而获得了广泛关注。
- en: We’ve all seen those demos of chatbots conversing with PDFs or emails.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们都见过那些聊天机器人与 PDF 或电子邮件对话的演示。
- en: While these systems are certainly impressive, they might not be reliable in
    production without tweaking and experimentation.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这些系统确实令人印象深刻，但在生产环境中，如果不进行调整和实验，它们可能不够可靠。
- en: '***In this post, I explore the problems behind the RAG framework and go over
    some tips to improve its performance. This goes from leveraging document metadata
    to fine-tuning hyperparameters.***'
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '***在这篇文章中，我探讨了 RAG 框架背后的问题，并提出了一些提升其性能的技巧。这些技巧包括利用文档元数据和调整超参数。***'
- en: These findings are based on my experience as an ML engineer who’s still learning
    about this tech and building RAGs in the pharmaceutical industry.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这些发现基于我作为一名 ML 工程师的经验，我仍在学习这项技术并在制药行业构建 RAG。
- en: Without much further ado, let’s have a look 🔍
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 事不宜迟，我们来看一看 🔍
- en: If you’re interested in practical tips to increase your productivity in building
    ML systems, you feel free to subscribe to my [newsletter](https://thetechbuffet.substack.com/).
  id: totrans-14
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果你对提高构建 ML 系统的生产力感兴趣，可以随时订阅我的 [通讯](https://thetechbuffet.substack.com/)。
- en: I send weekly insights in programming and system design to help you ship AI
    products faster.
  id: totrans-15
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我每周发送关于编程和系统设计的见解，帮助你更快地推出 AI 产品。
- en: RAG in a nutshell ⚙️
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: RAG 简要介绍 ⚙️
- en: Let’s get the basics right first.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们要弄清楚基本概念。
- en: Here’s how RAG works.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 RAG 的工作原理。
- en: It first takes an input question and retrieves relevant documents to it from
    an external database. Then, it passes those chunks as a context in a prompt to
    help an LLM generate an *augmented* answer.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 它首先接受一个输入问题，并从外部数据库中检索相关文档。然后，它将这些片段作为上下文传递给提示，以帮助 LLM 生成一个 *增强的* 回答。
- en: 'That’s basically saying:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这基本上是说：
- en: '*“Hey LLM, here’s my question, and here are some pieces of text to help you
    understand the problem. Give me an answer.”*'
  id: totrans-21
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*“嘿 LLM，这里是我的问题，还有一些文本片段帮助你理解问题。给我一个回答。”*'
- en: '![](../Images/fa22dfd8e1aebc6a46efc827dcf82c0a.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fa22dfd8e1aebc6a46efc827dcf82c0a.png)'
- en: Image by the author
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: You should not be fooled by the simplicity of this diagram.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 不要被这个图表的简单性所欺骗。
- en: 'In fact, RAG hides a certain complexity and involves the following components
    behind the scenes:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，RAG 隐藏了某些复杂性，并且涉及以下组件：
- en: 'Loaders to parse external data in different formats: PDFs, websites, Doc files,
    etc.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解析不同格式的外部数据的加载器：PDF、网站、Doc 文件等。
- en: Splitters to chunk the raw data into smaller pieces of text
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于将原始数据分割成较小文本块的分割器
- en: An embedding model to convert the chunks into vectors
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于将文本块转换为向量的嵌入模型
- en: A vector database to store the vectors and query them
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于存储和查询向量的向量数据库
- en: A prompt to combine the question and the retrieved documents
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于将问题和检索到的文档结合的提示
- en: An LLM to generate the answer
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于生成答案的 LLM
- en: If you like diagrams, here’s another for you.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢图示，这里有另一个给你。
- en: A tad more complex but it illustrates the indexing and retrieval processes.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 稍微复杂一点，但它展示了索引和检索过程。
- en: '![](../Images/883ab9133ece2fa4c0037256a7a67418.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/883ab9133ece2fa4c0037256a7a67418.png)'
- en: Image modified by the author
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 作者修改的图像
- en: Phew!
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 哎呀！
- en: Don’t worry though, you can still prototype your RAG very quickly.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 不过别担心，你仍然可以很快原型化你的 RAG。
- en: Frameworks like [LangChain](https://www.langchain.com/) abstracted most of the
    steps involved in building a RAG and it became easy to prototype those systems.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 像[LangChain](https://www.langchain.com/)这样的框架抽象了构建 RAG 涉及的大部分步骤，使得原型设计这些系统变得容易。
- en: How easy is that? 5-line-of-code easy.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这有多简单？五行代码就搞定了。
- en: '![](../Images/e6e3739a9cd5b8aa3d08e942a5b00d40.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e6e3739a9cd5b8aa3d08e942a5b00d40.png)'
- en: 'Of course, there’s always a problem with the apparent simplicity of such code
    snippets: depending on your use case, they don’t always work as-is and need very
    careful tuning.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这种代码片段的明显简化总是有问题的：根据你的使用情况，它们并不总是能按原样工作，需要非常仔细的调整。
- en: They’re great as quick-starts but they’re certainly not a reliable solution
    for an industrialized application.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 它们作为快速启动的工具很棒，但绝对不是工业化应用的可靠解决方案。
- en: The problems with RAG
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: RAG 的问题
- en: If you start building RAG systems with little to no tuning, you may be surprised.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你开始构建 RAG 系统而几乎没有调整，你可能会感到惊讶。
- en: Here’s what I noticed during the first weeks of using LangChain and building
    RAGs.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我在使用 LangChain 和构建 RAG 的前几周所注意到的情况。
- en: '**1 — The retrieved documents are not always relevant to the question.**'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**1 — 检索到的文档不总是与问题相关。**'
- en: If you closely look at the chunks that the database retrieves, you will sometimes
    notice that they’re not exactly relevant to the problem. They’re certainly similar
    to the question to some extent but in many cases, they’re not fully aligned with
    what the user asks for. Moreover, these chunks can often be redundant and overlapping
    which makes the generated answer … repetitive.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你仔细查看数据库检索到的块，你有时会注意到它们并不完全与问题相关。它们与问题在某种程度上相似，但在许多情况下，它们并没有完全对准用户的请求。此外，这些块往往冗余且重叠，这使得生成的答案……重复。
- en: Here’s a small experiment that shows that the most similar documents to the
    query (in the embedding space) are neither the most relevant ones nor the most
    semantically similar (how surprising is that!).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个小实验，展示了与查询（在嵌入空间）最相似的文档既不是最相关的，也不是最语义相似的（这真令人惊讶！）。
- en: In this example, the model disregarded the sentiment of the sentence and wasn’t
    even robust to plural (adding an “s” decreases the similarity by 8%)
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，模型忽略了句子的情感，并且对复数形式（添加“s”将相似度降低了 8%）也不够鲁棒。
- en: '![](../Images/0712ca4a3ee2e3aef95fbb18d94d77d8.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0712ca4a3ee2e3aef95fbb18d94d77d8.png)'
- en: '**2 — RAG systems lack basic world knowledge** If you instruct a RAG to only
    rely on an external database to provide answers, it may surprise you by inventing
    facts or refusing to answer simple questions.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**2 — RAG 系统缺乏基本的世界知识** 如果你指示 RAG 仅依赖外部数据库来提供答案，它可能会通过编造事实或拒绝回答简单问题来让你感到惊讶。'
- en: I built a RAG once on tennis-related Reddit posts. While it successfully answered
    questions about the Wimbledon Open of that time, it was unable to answer general
    questions on tennis rules.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我曾经在与网球相关的 Reddit 帖子上构建过一个 RAG。虽然它成功回答了有关当时温布尔登公开赛的问题，但对网球规则的一般问题却无能为力。
- en: I know you’re not supposed to ask questions beyond the scope of the data you
    feed the system, but if you deploy a RAG-based service, you should expect anything
    from the users.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道你不应该问超出系统数据范围的问题，但如果你部署了基于 RAG 的服务，你应该对用户提出的任何问题做好准备。
- en: '**3 — Speed**'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**3 — 速度**'
- en: Depending on the type of database you use and the size of the LLM, your RAG
    can be painfully slow. This can degrade the user experience. You should make your
    benchmarks first before building your solution.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你使用的数据库类型和LLM的大小，你的RAG可能会非常慢。这会降低用户体验。你应该在构建解决方案之前先做一些基准测试。
- en: '**4 — A lossy process**'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**4 — 一个有损的过程**'
- en: Given how RAG splits the raw data into chunks, embeds those chunks, and retrieves
    the top K similar ones, the intrinsic information is gradually lost and distilled.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 由于RAG将原始数据分割成块，嵌入这些块，并检索最相似的K个，固有的信息会逐渐丧失和提炼。
- en: Therefore, it becomes impossible to retain all the information from the external
    documents and provide a perfect answer to the question.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，保留外部文档中的所有信息并提供完美的答案几乎是不可能的。
- en: 'This is important to keep in mind: we’re dealing with a lot of approximations
    here.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 记住这一点很重要：我们在这里处理的是很多近似值。
- en: Tips to improve the performance of your RAG
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提升RAG性能的技巧
- en: RAGs can show strange behaviors if you blindly plug them into your data.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你盲目地将RAG接入数据，它可能会表现出奇怪的行为。
- en: You can however solve these issues by applying some tips and best practices.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过应用一些技巧和最佳实践来解决这些问题。
- en: 👉 **Inspect and clean your data**
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 👉 **检查和清理数据**
- en: The good old “garbage in, garbage out” principle still applies to RAG.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: “垃圾进，垃圾出”的原则仍然适用于RAG。
- en: If you feed documents that are noisy (Hello HTML tags!), not consistent with
    each other, confusing, or even redundant, the generated answer will suffer and
    reflect these defects.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你提供的文档是噪声较大的（例如HTML标签！）、彼此不一致、令人困惑，甚至是重复的，那么生成的答案将会受到影响，并反映出这些缺陷。
- en: Be cautious when selecting the data your RAG will tap into.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择RAG将使用的数据时要小心。
- en: For example, instead of combining FAQs that are inherently short with long PDFs,
    you could create two vector stores instead.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，与其将固有较短的FAQ与长PDF合并，不如创建两个向量存储。
- en: 'Here’s a quick sanity check to assess the data quality: do the exercise for
    a question or two. If you find it hard to get an answer with the support of the
    data you have at your disposal, don’t expect the RAG to perform better.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个快速的质量检查来评估数据质量：尝试回答一两个问题。如果你发现很难用现有的数据支持得到答案，那就不要指望RAG表现得更好。
- en: 👉 **Finetune the chunk size, the top_k, and the chunk overlap**
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 👉 **微调块大小、top_k和块重叠**
- en: These parameters are **very** important since chunking is the core part of a
    RAG system. (Remember, the documents we retrieve from the store are **chunks**!)
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这些参数**非常**重要，因为分块是RAG系统的核心部分。（记住，我们从存储中检索到的文档是**块**！）
- en: These parameters impact the quality of the retrieved results and consequently,
    the generated answer.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这些参数影响检索结果的质量，从而影响生成的答案。
- en: For example, a small chunk size might not catch enough context, while a big
    chunk size might introduce a lot of irrelevant noise.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，小块大小可能无法捕捉到足够的上下文，而大块大小可能引入大量无关的噪声。
- en: There is no miraculous magic number I can give you here. The best solution is
    to run experiments and validate these hyperparameters on a test set. (Yes, building
    a test set is important!)
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这里没有什么神奇的数字可以给你。最好的解决方案是进行实验并在测试集上验证这些超参数。（是的，构建测试集很重要！）
- en: There’s also this [guide](https://www.pinecone.io/learn/chunking-strategies/)
    on chunking strategies from Pinecone that’s worth reading.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: Pinecone有一个关于分块策略的[指南](https://www.pinecone.io/learn/chunking-strategies/)，值得阅读。
- en: 👉 **Leverage your document metadata**
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 👉 **利用文档元数据**
- en: It’s sometimes useful to filter over the available metadata (for example the
    date) after the documents are retrieved from the database. This provides another
    filtering dimension and doesn’t cost anything.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候在从数据库检索到文档后，基于可用的元数据（例如日期）进行过滤是有用的。这提供了另一种过滤维度，而且不需要额外费用。
- en: '👉 **Tweak your system prompt** to give your RAG a default behavior or specific
    instructions. Here’s a system prompt I used in one of my projects:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 👉 **调整你的系统提示**以给RAG一个默认行为或特定指令。这是我在一个项目中使用的系统提示：
- en: '[PRE0]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 👉 **Transform the input query**
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 👉 **转换输入查询**
- en: If you don’t express yourself clearly enough, the RAG might not find the relevant
    documents it needs to build a useful context. One way to solve that could be to
    **rephrase** the query by the LLM and try again.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你表达得不够清楚，RAG可能找不到它需要的相关文档来建立有用的上下文。解决这一问题的一种方法是通过LLM**重新表述**查询，然后再试一次。
- en: Another solution could be to try the [HyDE](https://boston.lti.cs.cmu.edu/luyug/HyDE/HyDE.pdf)
    method that takes the query, generates a hypothetical response, and uses both
    for retrieval in the embedding space.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种解决方案可能是尝试[HyDE](https://boston.lti.cs.cmu.edu/luyug/HyDE/HyDE.pdf)方法，它接受查询，生成一个假设性回应，并在嵌入空间中使用这两者进行检索。
- en: Query transformation is an exciting area that could improve RAG systems since
    LLMs tend to work better over smaller queries.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 查询转换是一个令人兴奋的领域，它可能会改善RAG系统，因为LLMs往往在较小的查询上表现更好。
- en: Conclusion
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: That’s it for today!
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 今天就到这里！
- en: I hope you’ve enjoyed this post and learned something useful about RAGs.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你喜欢这篇文章，并从中学到了有关RAG的一些有用信息。
- en: As this technology is relatively new, many optimization techniques will emerge
    making this framework more reliable and ready for industrialized applications.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这项技术相对较新，许多优化技术将会出现，使这个框架更加可靠，并准备好用于工业化应用。
- en: If you too are building RAGs, I’m curious to know which optimization techniques
    you use. Please let me know in the comments.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你也在构建RAG，我很好奇你使用了哪些优化技术。请在评论中告诉我。
- en: Until next time 👋!
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 下次见👋！
