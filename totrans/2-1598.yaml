- en: openCypher* against any Relational Database
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: openCypher* 针对任何关系数据库
- en: 原文：[https://towardsdatascience.com/opencypher-against-any-relational-database-a3b2388579df](https://towardsdatascience.com/opencypher-against-any-relational-database-a3b2388579df)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/opencypher-against-any-relational-database-a3b2388579df](https://towardsdatascience.com/opencypher-against-any-relational-database-a3b2388579df)
- en: Relational Databases as Graph Databases = Mindful (openCypher-2-SQL)
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关系数据库作为图形数据库 = Mindful (openCypher-2-SQL)
- en: '[](https://victormorgante.medium.com/?source=post_page-----a3b2388579df--------------------------------)[![Victor
    Morgante](../Images/46b797426e0d0840c0d0f6dd76f46ae5.png)](https://victormorgante.medium.com/?source=post_page-----a3b2388579df--------------------------------)[](https://towardsdatascience.com/?source=post_page-----a3b2388579df--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----a3b2388579df--------------------------------)
    [Victor Morgante](https://victormorgante.medium.com/?source=post_page-----a3b2388579df--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://victormorgante.medium.com/?source=post_page-----a3b2388579df--------------------------------)[![Victor
    Morgante](../Images/46b797426e0d0840c0d0f6dd76f46ae5.png)](https://victormorgante.medium.com/?source=post_page-----a3b2388579df--------------------------------)[](https://towardsdatascience.com/?source=post_page-----a3b2388579df--------------------------------)[![数据科学前沿](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----a3b2388579df--------------------------------)
    [Victor Morgante](https://victormorgante.medium.com/?source=post_page-----a3b2388579df--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----a3b2388579df--------------------------------)
    ·8 min read·Jul 25, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [数据科学前沿](https://towardsdatascience.com/?source=post_page-----a3b2388579df--------------------------------)
    ·8 分钟阅读·2023年7月25日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/f3e3a60ae9575d4bbb263f5fbe810297.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f3e3a60ae9575d4bbb263f5fbe810297.png)'
- en: Image by author. Yin Yang Moon. Modification of Royalty Free Photo by [Syed
    Ahmad](https://unsplash.com/@syedabsarahmad?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/eWD4O1Me4rM?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。阴阳月。由 [Syed Ahmad](https://unsplash.com/@syedabsarahmad?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    修改的免版税照片 [Unsplash](https://unsplash.com/photos/eWD4O1Me4rM?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
- en: A limited subset of openCypher graph queries over any relational database is
    the Mindful initiative. The queries are read-only and without metagraph queries
    at this stage. Mindful is a closed-source modification of [Microsoft’s openCypher
    to SQL transpiler](https://github.com/microsoft/openCypherTranspiler) under [the
    MIT license](https://github.com/microsoft/openCypherTranspiler/blob/master/LICENSE),
    and where Mindful generates SQL to operate over any relational/SQL database.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何关系数据库上运行的 openCypher 图查询的有限子集是 Mindful 计划。此阶段的查询是只读的，且不包含元图查询。Mindful 是 [微软的
    openCypher 到 SQL 转换器](https://github.com/microsoft/openCypherTranspiler) 的封闭源代码修改版，遵循
    [MIT 许可证](https://github.com/microsoft/openCypherTranspiler/blob/master/LICENSE)，其中
    Mindful 生成 SQL 以操作任何关系/SQL 数据库。
- en: With that in mind…let us begin by understanding the scope…
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到这一点……让我们开始了解范围……
- en: “Any relational database” in the context of Mindful means that openCypher queries
    are converted to SQL that targets **any actual relational database**, rather than
    relational databases that have to have specially modified tables for graph-type-queries
    or that inject data as JSON into fields and performing graph-like queries over
    that JSON data.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Mindful 的背景下，“任何关系数据库”意味着 openCypher 查询被转换为针对**任何实际关系数据库**的 SQL，而不是那些需要为图类型查询特别修改表格或将数据作为
    JSON 注入字段并在该 JSON 数据上执行图形查询的关系数据库。
- en: openCypher queries are converted to SQL to run against any stock-standard relational
    database.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: openCypher 查询被转换为 SQL，以便在任何标准关系数据库上运行。
- en: 'Explanatory video:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 解释视频：
- en: Applicability to your business — The Data Science
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对您业务的适用性 — 数据科学
- en: You may have an existing data warehouse, semantic layer or database that is
    a relational in nature and that uses SQL as the primary query language…and you
    want to query your data assets using graph queries.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能已经拥有一个现有的数据仓库、语义层或本质上是关系型的数据库，并且使用 SQL 作为主要查询语言……而您希望使用图形查询来查询您的数据资产。
- en: Conversely you may have an urgent need to migrate from your existing graph database
    to a relational/SQL based database and need tools for the data migration testing
    and implementation. Mindful, an openCypher-to-SQL transpiler is designed to be
    the tool that you use to achieve your aims.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，你可能急需从现有的图数据库迁移到关系/SQL 基于数据库，并需要数据迁移测试和实施工具。Mindful，一个 openCypher 到 SQL 的转译器，旨在成为实现你目标的工具。
- en: Extant implementations of graph queries over relational databases require special
    tables for effective node types and edge types (say tables with single column
    primary keys). The Mindful implementation allows you to run filter openCypher
    queries over your relational database where your tables have multi-column primary
    keys.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 现有的在关系数据库上进行图查询的实现需要特殊的表来有效表示节点类型和边类型（例如，具有单列主键的表）。Mindful 实现允许你在具有多列主键的表上运行
    filter openCypher 查询。
- en: In this article, we expose how this can be done with no risk to your existing
    relational data stack, by adopting a data science strategy where meta-information
    about the homomorphic graph structure of your relational data is stored within
    JSON in the comments section of your DDL. For instance, ORACLE, SQL Server, PostgreSQL
    and most mainstream relational databases support comments against the meta-data/DDL.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们展示了如何在不影响现有关系数据库栈的情况下实现这一点，通过采用一种数据科学策略，在DDL的评论部分使用JSON存储有关关系数据的同态图结构的元信息。例如，ORACLE、SQL
    Server、PostgreSQL 和大多数主流关系数据库都支持对元数据/DDL进行注释。
- en: In effect, you turn your relational data stack into a graph-compatible data
    stack by documenting your database using the tools provided, as standard, in your
    existing database/warehouse or semantic layer.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，通过使用现有数据库/数据仓库或语义层中提供的标准工具对数据库进行文档化，你将你的关系数据栈转换为图兼容的数据栈。
- en: Let’s dive into the data science and database theory that makes this work…
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入探讨使这一切成为可能的数据科学和数据库理论……
- en: Being Mindful
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关注细节
- en: 'It seems clear that the modern database management systems are characterised
    by the following notions that we will explore:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现代数据库管理系统显然具有以下特点，我们将对其进行探讨：
- en: 1\. Any relational database can be viewed as a graph database or a relational
    database depending on one’s point of view (as below); and
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 任何关系数据库都可以视为图数据库或关系数据库，取决于你的观点（如下所示）；以及
- en: 2\. Database schema are omnipresent once a database is in use. E.g. Even previously
    schemaless-promoting graph-database-businesses such as [Neo4j are starting to
    talk ‘schema’](https://neo4j.com/developer-blog/describing-property-graph-data-model/).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦数据库投入使用，数据库架构随处可见。例如，甚至连以前提倡无架构的图数据库业务如[Neo4j也开始谈论“架构”](https://neo4j.com/developer-blog/describing-property-graph-data-model/)。
- en: Being mindful of that positioning, we can picture all databases of merit in
    the future providing graph query languages ***and*** run-of-the-mill structured
    query language (SQL) queries.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到这一定位，我们可以想象，未来所有有价值的数据库都将提供图查询语言***以及***普通结构化查询语言（SQL）查询。
- en: Any Relational Database viewed as a Graph Database
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 任何关系数据库都可以视作图数据库
- en: 'The graph-relational paradigm, [relational knowledge graphs](/what-is-a-relational-knowledge-graph-bb747b27ff3f)
    and multi-model databases are nothing new, however to set the stage, take note
    of the homomorphic mapping of an Entity-Relationship Diagram and its corresponding
    Property-Graph Schema and vice versa:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图-关系范式、[关系知识图谱](/what-is-a-relational-knowledge-graph-bb747b27ff3f) 和多模型数据库并不新鲜，但为了设定背景，请注意实体-关系图与其对应的属性图模式及其反向映射：
- en: '![](../Images/6a872ad64fd4c16ec21eb6ddac3d92fb.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6a872ad64fd4c16ec21eb6ddac3d92fb.png)'
- en: Homomorphic Mapping — Property Graph Schema to Entity-Relationship Diagram.
    Image by author.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 同态映射——属性图模式到实体-关系图。图像作者提供。
- en: Our schema is for booking seats at a cinema to watch a film. A person can make
    a booking for one or more seats for a session to watch a film in a cinema; and
    where a seat is in a section and a row in that cinema.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的架构用于在电影院预订座位以观看电影。一个人可以为在电影院观看电影的一个或多个座位进行预订；其中座位位于该电影院的某个区域和行中。
- en: '![](../Images/4f625ec6112a7fc989a5b5c7f1ef7b2b.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4f625ec6112a7fc989a5b5c7f1ef7b2b.png)'
- en: Sutterstock Image, 2187621947\. Licenced to Victor Morgante / FactEngine. [Royalty
    Free Standard Licence 2187621947](https://www.shutterstock.com/image-photo/diverse-group-people-enjoying-watching-movie-2187621947)
    on Shutterstock.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Shutterstock图片，2187621947\. 授权给Victor Morgante / FactEngine。 [免版税标准许可证2187621947](https://www.shutterstock.com/image-photo/diverse-group-people-enjoying-watching-movie-2187621947)在Shutterstock上。
- en: The database theory…
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据库理论…
- en: 'There are two aspects that make Mindful successful:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 使Mindful成功的两个方面是：
- en: '**Foreign Key Relationships** and **Many-to-Many Tables** in otherwise relational
    databases are synonymous with **Edge Types** of graph databases;'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**外键关系**和**多对多表**在其他关系数据库中与图数据库的**边类型**是同义的；'
- en: Graph query languages such as openCypher support queries which can be written
    in such a way that the queries are analogous with SQL queries.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 图查询语言如openCypher支持可以用类似于SQL查询的方式编写的查询。
- en: Let us have a look at these things in isolation…
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们单独查看这些内容…
- en: Foreign Keys and Many-to-Many Tables
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 外键和多对多表
- en: '**Foreign Key <-> Edge Type**'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**外键 <-> 边类型**'
- en: Foreign keys relationships in relational databases have a 1:1 mapping with their
    corresponding Edge Type within a property graph schema.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 关系数据库中的外键关系与属性图模式中的对应边类型有1:1的映射关系。
- en: In our schema each Row record within a table named, Row, has a foreign key reference
    to the Cinema record in the ‘Cinema’ table, representing the cinema that the row
    ‘IS IN’.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的模式中，每个名为Row的表中的Row记录都有一个指向‘Cinema’表中Cinema记录的外键引用，表示该行‘IS IN’的影院。
- en: '![](../Images/283b3889c8fe08c922063d3f42c2dd13.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/283b3889c8fe08c922063d3f42c2dd13.png)'
- en: Foreign Key Reference in an Entity-Relationship Diagram. Image by author.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 实体关系图中的外键引用。图片由作者提供。
- en: …there is a corresponding Edge Type in our property graph schema.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: …在我们的属性图模式中有一个对应的边类型。
- en: '![](../Images/ffc13811f679e7b8034259d55d73681c.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ffc13811f679e7b8034259d55d73681c.png)'
- en: Edge Type in a Property Graph Schema. Image by author.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 属性图模式中的边类型。图片由作者提供。
- en: …In our DDL (Database Definition Language), this can easily be represented by
    a piece of JSON (JavaScript Object Notation) representing the “IS_IN” label of
    the property graph schema, embedded as a comment/documentation against the corresponding
    Foreign Key reference definition in the CREATE TABLE DDL statement for the ‘Row’
    table.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: …在我们的DDL（数据库定义语言）中，这可以通过一个表示属性图模式的“IS_IN”标签的JSON（JavaScript对象表示法）轻松表示，嵌入为CREATE
    TABLE DDL语句中‘Row’表的对应外键参考定义的注释/文档。
- en: '[PRE0]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '…we can view the homomorphism between the relational and graph views as a morphing
    animation:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: …我们可以将关系视图和图视图之间的同态视为一种变形动画：
- en: '![](../Images/7277ccb0652ecad3458aa7b126fc073b.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7277ccb0652ecad3458aa7b126fc073b.png)'
- en: Morphism between Foreign Key Relationship and Edge Type. Image by author.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 外键关系与边类型之间的同态。图片由作者提供。
- en: '**Many-to-Many Table <-> Edge Type**'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**多对多表 <-> 边类型**'
- en: Similarly, many-to-many join tables in relational databases have a morphism
    to their corresponding edge type within a property graph schema of a traditional
    graph database.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，关系数据库中的多对多连接表在传统图数据库的属性图模式中与其对应的边类型具有同态。
- en: In our schema a booking may have many seats, and a seat (over its lifetime)
    may have many bookings.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的模式中，一个预订可能有多个座位，而一个座位（在其生命周期内）可能有多个预订。
- en: Note that in our schema, the primary keys of the ‘Booking’ and ‘Seat’ tables
    are multi-column, and our Primary Key on the ‘BookingHasSeat’ many-to-many join
    table has seven columns.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，在我们的模式中，‘Booking’和‘Seat’表的主键是多列的，而我们在‘BookingHasSeat’多对多连接表上的主键有七列。
- en: '![](../Images/c6127e58561036a7741bf9f14fa888a4.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c6127e58561036a7741bf9f14fa888a4.png)'
- en: Many-to-Many Join Table in an ER Diagram. Image by author.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在ER图中的多对多连接表。图片由作者提供。
- en: …there is a corresponding edge type, labelled ‘HAS’, between the Booking and
    Seat node types in the property graph schema view.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: …在属性图模式视图中，Booking和Seat节点类型之间有一个标记为‘HAS’的对应边类型。
- en: '![](../Images/6486f14c401d5d931ab4ff57d670db84.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6486f14c401d5d931ab4ff57d670db84.png)'
- en: Edge Type in a Property Graph Schema. Image by author.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 属性图模式中的边类型。图片由作者提供。
- en: …we can easily capture the ‘HAS’ label as JSON within a comment against the
    Primary Key of the ‘BookingHasSeat’ table within the DDL of the CREATE TABLE statement
    of the table.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: …我们可以很容易地将‘HAS’标签作为JSON捕获在DDL中‘BookingHasSeat’表主键的注释中。
- en: '[PRE1]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '…we can view this homomorphism between the relational and graph views as a
    morphing animation too:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: …我们也可以将关系视图和图视图之间的同态视为一种变形动画：
- en: '![](../Images/abe388d3b2d5ea6edfe25f192801da0a.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/abe388d3b2d5ea6edfe25f192801da0a.png)'
- en: '**Architecture**'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**架构**'
- en: The plumbing of Mindful then becomes fairly straightforward to understand. With
    a suitable morphism mapped from a relational schema to a graph schema, and where
    we can store the meta-information about the morphism within the DDL of the relational
    database itself, we have a very simple mechanism by which to be able to write
    openCypher queries over a relational database…because in effect the metamodel
    of a relational database has a homomorphism to the metamodel of a graph database
    approaching an isomorphism. I.e. They are practically conceptually the same when
    viewed through a suitable lense.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: Mindful 的实现变得相当简单易懂。通过将适当的同态从关系模式映射到图模式，并且我们可以将有关同态的元信息存储在关系数据库的 DDL 中，我们有一种非常简单的机制来编写
    openCypher 查询……因为实际上，关系数据库的元模型与图数据库的元模型之间接近同构。即，从适当的视角来看，它们在概念上几乎是相同的。
- en: Morphism — openCypher to SQL
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 同态 — openCypher 到 SQL
- en: …a tale of two types of query
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: …两种查询类型的故事
- en: 'Graph query languages have two types of query:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图查询语言有两种查询类型：
- en: Filtering Queries; and
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 过滤查询；以及
- en: Meta-Graph/Graph Traversal Queries.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 元图/图遍历查询。
- en: A meta-graph query is a type of query that finds paths, relationships or structures
    within the ‘graph’ (or the model) of a property graph schema.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 元图查询是一种在属性图模式的“图”（或模型）中查找路径、关系或结构的查询类型。
- en: 'Filtering queries, on the other hand, filter out data from the superset of
    all data in a database. E.g. In natural language: “What cinemas did Peter make
    a booking for?”'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，过滤查询从数据库的所有数据的超集中过滤数据。例如，用自然语言表达：“Peter 预订了哪些影院？”
- en: We are most interested in filtering queries at this stage, because that is where
    the Mindful code is at, but a meta-graph query might ask the question, otherwise
    presented in natural language, “What is the shortest path between a person, Peter,
    and the cinema he made a booking for?”.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一阶段，我们最感兴趣的是过滤查询，因为这是Mindful代码所处的阶段，但一个元图查询可能会提出这样的问题，其他形式的自然语言表述为：“从一个人Peter到他预订的影院的最短路径是什么？”。
- en: 'Pictorially, we can see that for our schema, the shortest path is from Person,
    to Booking, to Session, to Cinema, as below (rather than Person-Booking-Seat-Row-Cinema):'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 从图像上看，我们可以看到，对于我们的模式，最短路径是从人到预订，再到会话，再到影院，如下所示（而不是人-预订-座位-行-影院）：
- en: '![](../Images/7e93b4419851aa009306fc07eca31620.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7e93b4419851aa009306fc07eca31620.png)'
- en: Shortest Path — Person to Cinema — Meta-Graph/Graph Traversal. Image by author.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 最短路径 — 人到影院 — 元图/图遍历。图像作者提供。
- en: For our purposes here though…we want filtering queries and because openCypher
    filtering queries have a morphism to SQL queries, and where **standard SQL does
    not support meta-graph queries**.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的目的……我们需要过滤查询，因为 openCypher 过滤查询与 SQL 查询有同态，而 **标准 SQL 不支持元图查询**。
- en: Let’s Query using openCypher
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 让我们使用 openCypher 查询
- en: 'Supposing that we want to know which film the person with login-name, “Peter”,
    saw on which date and time at which cinema on which seat letter and row number…we
    can write the following openCypher query for our schema:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们想知道登录名为“Peter”的人在哪个日期和时间在什么影院观看了哪个电影，以及座位字母和行号……我们可以为我们的模式编写以下 openCypher
    查询：
- en: '**MATCH (p:Person)<-[:IS_FOR]-(b:Booking)-[:HAS]->(seat:Seat)-[:IS_IN]->(:Row)-[:IS_IN]->(c:Cinema),
    (b)-[:IS_FOR]->(s:Session)-[:IS_FOR]->(f:Film)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**MATCH (p:Person)<-[:IS_FOR]-(b:Booking)-[:HAS]->(seat:Seat)-[:IS_IN]->(:Row)-[:IS_IN]->(c:Cinema),
    (b)-[:IS_FOR]->(s:Session)-[:IS_FOR]->(f:Film)'
- en: WHERE p.LoginName = ‘Peter’
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: WHERE p.LoginName = ‘Peter’
- en: RETURN p.LoginName, f.Name, s.DateTime, seat.Letter, seat.RowNr, c.CinemaName**
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: RETURN p.LoginName, f.Name, s.DateTime, seat.Letter, seat.RowNr, c.CinemaName
- en: It is a filter type query because we are filtering the results down to those
    where the person’s login-name is “Peter”.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一种过滤类型的查询，因为我们正在将结果筛选到那些登录名为“Peter”的人。
- en: '…now let us run the query over a relational database using software hooked
    up to Mindful:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: …现在让我们在关系数据库上运行这个查询，使用连接到Mindful的软件：
- en: '![](../Images/f70c7dd3285950b2f9736e61ffbe4ea1.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f70c7dd3285950b2f9736e61ffbe4ea1.png)'
- en: openCypher Query over a Relational Database — Results. Image by author.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: openCypher 查询与关系数据库 — 结果。图像作者提供。
- en: 'The microsoft openCypher to SQL transpiler (and Mindful) at this stage produces
    quite laborious SQL which I will not produce here, but enough to say that the
    equivalent SQL query is quite long by comparison to the openCypher query. Here’s
    an equivalent SQL query for our schema:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，微软的 openCypher 到 SQL 转译器（以及 Mindful）生成的 SQL 相当繁琐，我在这里不会展示，但足以说明，相比于 openCypher
    查询，相应的 SQL 查询相当长。以下是我们模式的等效 SQL 查询：
- en: '[PRE2]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Wrapping it up
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: So, it is as simple as that. We have shown a homomorphism between relational
    and graph schema such that software can be written such that openCypher queries
    (filter-type) can be executed over any relational database suitably configured,
    and where the openCypher is converted to SQL.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，这就是如此简单。我们展示了关系模式和图模式之间的同态，使得可以编写软件，以便在任何适当配置的关系数据库上执行 openCypher 查询（过滤类型），并且
    openCypher 被转换为 SQL。
- en: Thanks for reading. As time permits I will write more on graph databases, relational
    databases, graph queries and homomorphism.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读。时间允许的话，我将写更多关于图数据库、关系数据库、图查询和同态的内容。
- en: — — — — — — —
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: — — — — — — —
- en: '*Mindful openCypher queries are read-only and without meta-graph queries at
    this stage.'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '*Mindful openCypher 查询目前为只读，并且在此阶段没有元图查询。*'
- en: 'Attribution: The schema in this article is derived from that originally shared
    open-source under the [ActiveFacts examples github page of Data Constellation](https://github.com/cjheath/activefacts-examples/tree/master/orm)
    under a [MIT licence](https://github.com/cjheath/activefacts-examples/blob/master/LICENSE.txt).'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 归属：本文中的模式源于最初在 [ActiveFacts examples github 页面](https://github.com/cjheath/activefacts-examples/tree/master/orm)
    下以 [MIT 许可证](https://github.com/cjheath/activefacts-examples/blob/master/LICENSE.txt)
    开源共享的内容。
- en: — — — — — — — — — — — — — end — — — — — — — — — — -
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: — — — — — — — — — — — — — 结束 — — — — — — — — — — —
