["```py\n!pip install ipywidgets widgetsnbextension\n```", "```py\n!jupyter nbextension enable --py widgetsnbextension --sys-prefix\n```", "```py\nimport pandas as pd\n\ndf = pd.read_csv('insurance.csv')\ndf\n```", "```py\ndf.query(f'children == 3')\n```", "```py\nfrom ipywidgets import interact\n\ndef f(children):\n    display(df.query(f'children == {children}'))\n```", "```py\ninteract(f, children = 5) \n```", "```py\ndef f(age):\n    display(df.query(f'age > {age}'))\n\ninteract(f, age = (df['age'].min(), df['age'].max()))\n```", "```py\ndef f(bmi):\n    display(df.query(f'bmi > {bmi}'))\n\ninteract(f, bmi = (df['bmi'].min(), df['bmi'].max()))\n```", "```py\ndef f(region):\n    display(df.query(f'region == \"{region}\"'))    \n\ninteract(f, region = df['region'].unique())\n```", "```py\nregions = [(i.capitalize(),i) for i in df['region'].unique()]\n```", "```py\n[('Southwest', 'southwest'), ('Southeast', 'southeast'), ('Northwest', 'northwest'), ('Northeast', 'northeast')]\n```", "```py\nregions.append(('All Regions','@*'))\n```", "```py\n[('Southwest', 'southwest'),\n ('Southeast', 'southeast'),\n ('Northwest', 'northwest'),\n ('Northeast', 'northeast'),\n ('All Regions', '@*')]\n```", "```py\ndef f(region):\n    display(df.query(f'region.str.contains(\"{region}\")'))    \n\ninteract(f, region = regions)\n```", "```py\nYES, NO = 'yes', 'no'\n\ndef f(smoker):\n    display(df.query(f'smoker == \"{YES if smoker == True else NO}\"'))    \n\ninteract(f, smoker = True)\n```", "```py\ndef f(region):\n    display(df.query(f'region.str.contains(\"{region}\")'))   \n\ninteract(f, region = \"\")\n```", "```py\nfrom ipywidgets import widgets\n\ndef f(region):\n    display(df.query(f'region.str.contains(\"{region}\")'))\n\ninteract(f, region = widgets.Text('', continuous_update = False));\n```", "```py\ndef f(smoker):\n    display(df.query(f'smoker == \"{smoker}\"'))    \n\ninteract(f, smoker = widgets.RadioButtons(options=[\"yes\", \"no\"], value=\"no\"));\n```", "```py\nfrom ipywidgets import interactive\nimport ipywidgets as widgets\n\nreport_output = widgets.Output()\ndisplay(report_output)\n\ndef f(age, bmi, children, region, sex, smoker):\n    filtered = df.query(f'age >= {age} and bmi >= {bmi} and smoker == \"{smoker}\" and region.str.contains(\"{region}\") and sex==\"{sex}\" and children=={children}')\n    with report_output:\n        report_output.clear_output()\n        display(filtered)\n\nregions = [(i.capitalize(),i) for i in df['region'].unique()]\nregions.append(('All Regions','@*'))\n\ninteractive(f, \n            age = (df['age'].min(), df['age'].max()), \n            bmi = (df['bmi'].min(), df['bmi'].max()), \n            children = (df['children'].min(), df['children'].max()),\n            region = regions,           \n            sex = widgets.RadioButtons(options=[\"female\", \"male\"], value=\"female\"),\n            smoker = widgets.RadioButtons(options=[\"yes\", \"no\"], value=\"no\"),             \n           )\n```", "```py\ninteractive(f, \n            {'manual': True},\n            age = (df['age'].min(), df['age'].max()), \n            bmi = (df['bmi'].min(), df['bmi'].max()), \n            children = (df['children'].min(), df['children'].max()),\n            region = regions,           \n            sex = widgets.RadioButtons(options=[\"female\", \"male\"], value=\"female\"),\n            smoker = widgets.RadioButtons(options=[\"yes\", \"no\"], value=\"no\"),             \n           )\n```"]