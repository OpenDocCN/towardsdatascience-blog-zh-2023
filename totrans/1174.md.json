["```py\nlibrary(shiny)\nlibrary(DT)\nlibrary(dplyr)\nlibrary(readr)\nlibrary(ggplot2)\n\nui <- fluidPage(titlePanel(\n  h1(\n    \"How R and Shiny Can Help You Find the Best Cocomelon Videos for Your Kids\",\n    align = \"center\"\n  )\n),\n\nsidebarLayout(\n  sidebarPanel(\n    textInput(\n      inputId = 'number_records_display',\n      label = 'Number of records to Display',\n      value = '10'\n    ),\n    width = 3\n  ),\n\n  mainPanel(\n    h1(\"Explore Cocomelon Youtube Videos\", align = \"center\"),\n    strong(\"The following charts display the scatter plot by views and likes\"),\n    plotOutput(\"plot\"),\n    tableOutput(\"video_table\")\n  )\n))\n\nserver <- function(input, output) {\n  data <-\n    reactive(\n      read_csv(\"~/Downloads/cocomelon_2023_3_2.csv\") %>%\n        transform(\n          statistics.viewCount = as.numeric(statistics.viewCount),\n          statistics.likeCount = as.numeric(statistics.likeCount),\n          statistics.favoriteCount = as.numeric(statistics.favoriteCount),\n          snippet.publishedAt = as.Date(snippet.publishedAt)\n        ) %>% mutate(\n          views = statistics.viewCount / 1000000,\n          likes = statistics.likeCount / 10000,\n          number_days_since_publish = as.numeric(Sys.Date() - snippet.publishedAt)\n        ) %>% arrange(desc(statistics.viewCount))\n    )\n\n  output$plot <- renderPlot({\n    videos <-\n      data() %>% head(input$number_records_display)\n    ggplot(videos, aes(statistics.viewCount, statistics.likeCount)) +\n      geom_point()\n  }, res = 96)\n\n  output$video_table <- renderTable(\n    data() %>% select(\n      snippet.title,\n      statistics.viewCount,\n      statistics.likeCount,\n      contentDetails.duration,\n      number_days_since_publish\n    ) %>% head(input$number_records_display)\n  )\n}\n\nshinyApp(ui = ui, server = server)\n```", "```py\nlibrary(shiny)\nlibrary(DT)\nlibrary(dplyr)\nlibrary(readr)\nlibrary(ggplot2)\n\nui <- fluidPage(titlePanel(\n  h1(\n    \"How R and Shiny Can Help You Find the Best Cocomelon Videos for Your Kids\",\n    align = \"center\"\n  )\n),\n\nsidebarLayout(\n  sidebarPanel(\n    textInput(\n      inputId = 'number_records_display',\n      label = 'Number of records to Display',\n      value = '10'\n    ),\n    uiOutput(\"iframe\"),\n    width = 4\n  ),\n\n  mainPanel(\n    h1(\"Explore Cocomelon Youtube Videos\", align = \"center\"),\n    strong(\"The following charts display the scatter plot by views and likes\"),\n    textOutput(\"video_title\"),\n    plotOutput(\"plot\", click = \"plot_click\"),\n    verbatimTextOutput(\"clicked_video\"),\n    DT::dataTableOutput(\"video_table\")\n  )\n))\n\nserver <- function(input, output) {\n  data <-\n    reactive(\n      read_csv(\"~/Downloads/cocomelon_2023_3_2.csv\") %>%\n        transform(\n          statistics.viewCount = as.numeric(statistics.viewCount),\n          statistics.likeCount = as.numeric(statistics.likeCount),\n          statistics.favoriteCount = as.numeric(statistics.favoriteCount),\n          snippet.publishedAt = as.Date(snippet.publishedAt)\n        ) %>% mutate(\n          views = statistics.viewCount / 1000000,\n          likes = statistics.likeCount / 10000,\n          number_days_since_publish = as.numeric(Sys.Date() - snippet.publishedAt)\n        ) %>% select(\n          snippet.title,\n          statistics.viewCount,\n          statistics.likeCount,\n          contentDetails.duration,\n          number_days_since_publish,\n          player.embedHtml\n        ) %>% arrange(desc(statistics.viewCount))\n    )\n\n  output$plot <- renderPlot({\n    videos <-\n      data() %>% head(input$number_records_display)\n    ggplot(videos, aes(statistics.viewCount, statistics.likeCount)) +\n      geom_point()\n  }, res = 96)\n\n  output$video_table = DT::renderDataTable({\n    req(input$plot_click)\n    top_videos <- data() %>% select(\n      snippet.title,\n      statistics.viewCount,\n      statistics.likeCount,\n      contentDetails.duration,\n      number_days_since_publish\n    ) %>% head(input$number_records_display)\n\n    near_point <- nearPoints(top_videos,input$plot_click)\n\n    datatable(top_videos) %>%\n      formatStyle(\n        columns = 'statistics.viewCount',\n        target = 'row',\n        backgroundColor = styleEqual(near_point$statistics.viewCount, c('yellow'))\n      )\n  })\n\n  output$iframe <- renderUI({\n    near_point <- nearPoints(data() %>% head(input$number_records_display) ,input$plot_click)\n    HTML(near_point$player.embedHtml)\n  })\n}\n\nshinyApp(ui = ui, server = server)\n```", "```py\nnear_points <- brushedPoints(top_videos,input$plot_brush)\n```", "```py\ntheme = bs_theme(bootswatch = \"sketchy\")\n```"]