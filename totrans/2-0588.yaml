- en: Create Bump Charts With Matplotlib
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Matplotlib创建凸形图
- en: 原文：[https://towardsdatascience.com/create-bump-charts-with-matplotlib-431b0e6fcb90](https://towardsdatascience.com/create-bump-charts-with-matplotlib-431b0e6fcb90)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/create-bump-charts-with-matplotlib-431b0e6fcb90](https://towardsdatascience.com/create-bump-charts-with-matplotlib-431b0e6fcb90)
- en: Explore changes in rank over time using only Matlpotlib
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 仅使用Matplotlib探索排名随时间的变化
- en: '[](https://medium.com/@bruno.ponne?source=post_page-----431b0e6fcb90--------------------------------)[![Bruno
    Ponne](../Images/991b4b721c13ed0b6ceaaa1fac81a007.png)](https://medium.com/@bruno.ponne?source=post_page-----431b0e6fcb90--------------------------------)[](https://towardsdatascience.com/?source=post_page-----431b0e6fcb90--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----431b0e6fcb90--------------------------------)
    [Bruno Ponne](https://medium.com/@bruno.ponne?source=post_page-----431b0e6fcb90--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@bruno.ponne?source=post_page-----431b0e6fcb90--------------------------------)[![Bruno
    Ponne](../Images/991b4b721c13ed0b6ceaaa1fac81a007.png)](https://medium.com/@bruno.ponne?source=post_page-----431b0e6fcb90--------------------------------)[](https://towardsdatascience.com/?source=post_page-----431b0e6fcb90--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----431b0e6fcb90--------------------------------)
    [Bruno Ponne](https://medium.com/@bruno.ponne?source=post_page-----431b0e6fcb90--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----431b0e6fcb90--------------------------------)
    ·6 min read·Mar 13, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于[数据科学前沿](https://towardsdatascience.com/?source=post_page-----431b0e6fcb90--------------------------------)
    ·6分钟阅读·2023年3月13日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/9a8af50a9aedd0efa207c9d23bd9d92e.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9a8af50a9aedd0efa207c9d23bd9d92e.png)'
- en: Photo by [blueberry Maki](https://unsplash.com/@yukkien?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[blueberry Maki](https://unsplash.com/@yukkien?utm_source=medium&utm_medium=referral)提供，来源于[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: There is nothing so stable as change. *Bob Dylan*
  id: totrans-8
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 没有什么比变化更稳定的了。*鲍勃·迪伦*
- en: When I was a teenager I loved to check the most popular songs on Billboard,
    even though my taste was often different from what Billboard presented to me.
    Usually, my favorite songs ended up failing to reach the top positions. Despite
    that, it was a great source of new and good songs for me. I even liked to check
    which songs were popular in the past. I found out, for instance, that on the week
    I was born, on August 1987, [*I Still Haven’t Found What I’m Looking For*](https://www.youtube.com/watch?v=e3-5YC_oHjE)was
    the number one song on the [Hot Billboard 100](https://www.billboard.com/charts/hot-100/1987-08-08/)!
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当我还是青少年时，我喜欢查看Billboard上最受欢迎的歌曲，尽管我的口味通常与Billboard展示的内容不同。通常，我最喜欢的歌曲最终未能进入前列。尽管如此，这对我来说仍然是一个获取新歌和好歌的极佳来源。我甚至喜欢查看过去哪些歌曲曾经流行。例如，我发现，在我出生的那一周，即1987年8月，[*I
    Still Haven’t Found What I’m Looking For*](https://www.youtube.com/watch?v=e3-5YC_oHjE)
    是[Hot Billboard 100](https://www.billboard.com/charts/hot-100/1987-08-08/)的第一名！
- en: Humans are always comparing, evaluating, and ranking all aspects of life. What
    are the best football teams in 2023? Who was the best tennis player in 2022 and
    what was the most used programming language on GitHub last year? We want to know
    what’s trending right now. But as with everything in life, ranks change all the
    time.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 人类总是在比较、评估和排名生活的各个方面。2023年最好的足球队是什么？2022年最好的网球运动员是谁，去年在GitHub上使用最多的编程语言是什么？我们想知道现在的趋势是什么。但正如生活中的一切一样，排名总是在变化。
- en: In this lesson, you will learn how to show changes in rank with basic [Matplotlib](https://matplotlib.org/),
    with no need for additional libraries. As an example, you will use data published
    by the [Octoverse Report 2022,](https://octoverse.github.com/2022/top-programming-languages)
    which analyzed the most popular programming languages in 2022.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本课程中，你将学习如何使用基础的[Matplotlib](https://matplotlib.org/)，无需额外的库来显示排名的变化。作为示例，你将使用[Octoverse
    Report 2022](https://octoverse.github.com/2022/top-programming-languages)发布的数据，该报告分析了2022年最受欢迎的编程语言。
- en: 1\. What is a bump chart?
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. 什么是**凸形图**？
- en: A bump chart is similar to a line plot but focused on exploring changes in rank
    over time. Imagine, for example, that each line in the figure below represents
    the rank of a singer’s popularity. The line and its color represent the singer,
    the x-axis represents the year, and, the y-axis, the rank.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 凸形图类似于折线图，但专注于探索排名随时间的变化。例如，想象一下下图中的每条线代表一位歌手的受欢迎程度排名。这条线及其颜色代表歌手，x轴代表年份，y轴代表排名。
- en: '![](../Images/9cead2c88ed11e91d54ba6303d2dd237.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9cead2c88ed11e91d54ba6303d2dd237.png)'
- en: Image created by the Author using Matplotlib
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 作者使用 Matplotlib 创建的图像
- en: '2\. Our competitors: the programming languages'
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. 我们的竞争对手：编程语言
- en: According to [Octoverse](https://octoverse.github.com/), in 2022, programmers
    used around 500 languages to develop software on GitHub. JavaScript was the most
    used language followed by Python, the language we will use to build our bump chart.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 根据[Octoverse](https://octoverse.github.com/)，在 2022 年，程序员在 GitHub 上使用了大约 500
    种语言来开发软件。JavaScript 是使用最广泛的语言，其次是 Python，我们将使用它来构建我们的气泡图。
- en: The report also revealed that the [Hashicorp Configuration Language](https://www.ibm.com/topics/terraform)
    (HCL) was the fastest-growing language on GitHub reflecting the expansion of cloud
    infrastructure. Rust and Typescript were the second and third in growth, respectively.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 报告还揭示了[Hashicorp 配置语言](https://www.ibm.com/topics/terraform)（HCL）是 GitHub 上增长最快的语言，反映了云基础设施的扩展。Rust
    和 Typescript 分别位居增长的第二和第三。
- en: There are several rankings using different data and methods to estimate the
    position of each language. Another ranking is [Stack Overflow’s 2020 Developer
    Survey](https://insights.stackoverflow.com/survey/2020#technology-programming-scripting-and-markup-languages-professional-developers),
    which presents similar but not identical results. This post will use the Octoverse
    data as an example.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种排名使用不同的数据和方法来估计每种语言的位置。另一个排名是[Stack Overflow 2020 开发者调查](https://insights.stackoverflow.com/survey/2020#technology-programming-scripting-and-markup-languages-professional-developers)，它提供了类似但不完全相同的结果。这篇文章将使用
    Octoverse 数据作为示例。
- en: To make reproducibility easier, the data is code generated and stored in a list
    of dictionaries, as shown below.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更容易复现，数据是通过代码生成并存储在字典列表中，如下所示。
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 3\. Matplotlib subplots method
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. Matplotlib 子图方法
- en: 'There are several ways you can create a plot with Matplotlib, but to get flexibility,
    it is recommended to use `subplots()`. This method creates two objects: one object
    of the class `Figure`and one of the class `Axes`. The `Figure` object will be
    the container of your plot, while the `Axes` object will be the plot itself.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种方法可以用 Matplotlib 创建图形，但为了获得灵活性，建议使用`subplots()`。此方法创建两个对象：一个`Figure`类的对象和一个`Axes`类的对象。`Figure`对象将是你的图形的容器，而`Axes`对象将是图形本身。
- en: '![](../Images/3000c354cce9283a44dc106398ab0f7c.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3000c354cce9283a44dc106398ab0f7c.png)'
- en: Image created by the Author
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 作者创建的图像
- en: The code below loads the necessary libraries and creates the two objects just
    mentioned.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码加载所需的库，并创建刚才提到的两个对象。
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 4\. Setting plot size
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4\. 设置图形大小
- en: In Matplotlib you may change the size of your plot using `plt.rcParams["figure.figsize"]`.
    We will set it to be 12 inches wide and 6 inches high.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Matplotlib 中，你可以使用`plt.rcParams["figure.figsize"]`改变图形的大小。我们将其设置为宽 12 英寸，高
    6 英寸。
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 5\. Calling the plot method for each programming language
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5\. 为每种编程语言调用绘图方法
- en: For each dictionary in our list, we will call the *ax* `plot` method specifying
    the years on the x-axis and the ranks on the y-axis. Moreover, you can choose
    the style of the marker and line with “o-” indicating we would like a line with
    a dot as the marker. Note that the marker face color was set to white, meaning
    the dot is filled with white.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 对于列表中的每个字典，我们将调用 *ax* 的`plot`方法，指定 x 轴上的年份和 y 轴上的排名。此外，你可以选择标记和线条的样式，“o-”表示我们希望使用点作为标记的线条。请注意，标记的面颜色设置为白色，这意味着点是填充白色的。
- en: The result is almost what we want, but further adjustments are needed.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 结果几乎符合我们的期望，但仍需要进一步调整。
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/0f9d0ef70b6c282e570eb6fa8213f2a1.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0f9d0ef70b6c282e570eb6fa8213f2a1.png)'
- en: Image created by the Author using Matplotlib
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 作者使用 Matplotlib 创建的图像
- en: 6\. Inverting the y-axis and setting axis ticks
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6\. 反转 y 轴和设置轴刻度
- en: It would be nice to have the number one language at the top of the chart. Besides
    that, we would like all the rank numbers to be shown on the y-axis.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 最好将排名第一的语言放在图表的顶部。此外，我们希望所有排名数字都显示在 y 轴上。
- en: We could go about it by using the command `plt.gca().invert_yaxis()`*.* Additionally,
    we can set the y ticks by passing a [NumPy](https://numpy.org/) array with the
    values to `plt.yticks()`. A NumPy array can be created by `np.arange().`
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用命令`plt.gca().invert_yaxis()`来实现。此外，我们可以通过将带有值的[NumPy](https://numpy.org/)数组传递给`plt.yticks()`来设置
    y 刻度。NumPy 数组可以通过`np.arange()`创建。
- en: '[PRE4]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 7\. Labelling the lines
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 7\. 标记线条
- en: We need to identify to which programming language each of the lines corresponds.
    To achieve that, we can use the *ax* `*annotate*`method. The first parameter it
    receives is the text we would like to annotate. We will use `list_programming["Name"][0]`to
    get the language names.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要确定每条线对应的编程语言。为此，我们可以使用*ax* `*annotate*`方法。它接收的第一个参数是我们想要注释的文本。我们将使用`list_programming["Name"][0]`来获取语言名称。
- en: The `xy`parameter is the point we wish to annotate. In our case, it is the end
    of each line. The `xytext` parameter is the point where we would like to add our
    text. Note that `xytext` will be almost the same as `xy`but a bit more to the
    right on the x-axis. Finally, `va`refers to the vertical alignment.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`xy`参数是我们希望注释的点。在我们的案例中，它是每条线的末端。`xytext`参数是我们希望添加文本的点。注意`xytext`几乎与`xy`相同，但在x轴上稍微向右。最后，`va`表示垂直对齐。'
- en: '[PRE5]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 8\. Changing linewidth in Matplotlib
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8\. 在Matplotlib中更改线宽
- en: The line indicating the path of each language is relatively thin and we could
    increase its width with the `linewidth`parameter inside the `plot method.`
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 表示每种语言路径的线条相对较细，我们可以通过在`plot method`中的`linewidth`参数来增加其宽度。
- en: 9\. Clearing the plot
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9\. 清除图形
- en: To make the plot clearer, the frame of the plot could be suppressed. To do that,
    note that each `Axes`object has 4 spines. One spine is one side of the plot frame.
    We can iterate them with a for loop and set their visibility attribute to `False`.
    Check out all of these adjustments below.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使图形更清晰，可以隐藏图形的框架。为此，请注意每个`Axes`对象有4个脊柱。一个脊柱是图形框架的一侧。我们可以用for循环迭代它们，并将它们的可见性属性设置为`False`。查看下面的所有这些调整。
- en: '[PRE6]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/53dea7b31f9b0b31f534eca7d89b1042.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/53dea7b31f9b0b31f534eca7d89b1042.png)'
- en: Image created by the Author using Matplotlib
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者使用Matplotlib创建
- en: A lot better isn’t it?
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 要好得多，是不是？
- en: This bump chart does not require any additional library. Moreover, Matplotlib
    allows you to customize it in many ways! In [this post](https://www.codingthepast.com/2023/02/11/Use-Matplotlib-line-plot-to-create-visualizations.html),
    I show further recommendations for plotting compelling visualizations with Matplotlib.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这个碰撞图不需要任何额外的库。此外，Matplotlib允许你以多种方式自定义它！在[这篇文章](https://www.codingthepast.com/2023/02/11/Use-Matplotlib-line-plot-to-create-visualizations.html)中，我展示了使用Matplotlib绘制引人注目的可视化图形的进一步建议。
- en: 10\. The top programming languages in 2022
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 10\. 2022年排名前十的编程语言
- en: Now we can have a clear picture of how programming languages evolved over the
    last decade.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以清晰地看到编程语言在过去十年中的演变情况。
- en: JavaScript has maintained the top position since 2014\. According to [Berkeley
    Boot Camps](https://bootcamp.berkeley.edu/blog/most-in-demand-programming-languages/),
    JavaScript’s popularity is explained because most web browsers utilize it. In
    2014, Python was the fourth most used language and since then the language has
    grown in popularity. Today it is the second most used language on GitHub. Finally,
    Java has lost some popularity but remains the third most used language.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 自2014年以来，JavaScript一直保持领先地位。根据[伯克利训练营](https://bootcamp.berkeley.edu/blog/most-in-demand-programming-languages/)，JavaScript的流行是因为大多数网页浏览器都使用它。2014年，Python是第四大使用语言，自那时以来，Python的受欢迎程度不断增长。如今，它是GitHub上第二大使用语言。最后，Java的受欢迎程度有所下降，但仍然是第三大使用语言。
- en: Conclusion
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: In this post, you learned to show changes in rank with a basic Matplotlib graph.
    To achieve that, there is no need for additional libraries, all you need is to
    understand Matplotlib objects and how to customize them to show your data.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，你学会了用基本的Matplotlib图形显示排名变化。为此，不需要额外的库，只需理解Matplotlib对象及如何自定义它们以展示你的数据。
- en: If you enjoyed this post, **follow me** to know more about data visualization!
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢这篇文章，**关注我**以了解更多数据可视化的内容！
