- en: Data Modelling For Data Engineers
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据工程师的数据建模
- en: 原文：[https://towardsdatascience.com/data-modelling-for-data-engineers-93d058efa302](https://towardsdatascience.com/data-modelling-for-data-engineers-93d058efa302)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/data-modelling-for-data-engineers-93d058efa302](https://towardsdatascience.com/data-modelling-for-data-engineers-93d058efa302)
- en: The definitive guide for beginners
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 初学者的终极指南
- en: '[](https://mshakhomirov.medium.com/?source=post_page-----93d058efa302--------------------------------)[![💡Mike
    Shakhomirov](../Images/bc6895c7face3244d488feb97ba0f68e.png)](https://mshakhomirov.medium.com/?source=post_page-----93d058efa302--------------------------------)[](https://towardsdatascience.com/?source=post_page-----93d058efa302--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----93d058efa302--------------------------------)
    [💡Mike Shakhomirov](https://mshakhomirov.medium.com/?source=post_page-----93d058efa302--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://mshakhomirov.medium.com/?source=post_page-----93d058efa302--------------------------------)[![💡Mike
    Shakhomirov](../Images/bc6895c7face3244d488feb97ba0f68e.png)](https://mshakhomirov.medium.com/?source=post_page-----93d058efa302--------------------------------)[](https://towardsdatascience.com/?source=post_page-----93d058efa302--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----93d058efa302--------------------------------)
    [💡Mike Shakhomirov](https://mshakhomirov.medium.com/?source=post_page-----93d058efa302--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----93d058efa302--------------------------------)
    ·9 min read·Dec 3, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----93d058efa302--------------------------------)
    ·阅读时间 9 分钟·2023年12月3日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/38909e6454cd7c166ad2897c1828b42d.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/38909e6454cd7c166ad2897c1828b42d.png)'
- en: Photo by [Sebastian Svenson](https://unsplash.com/@sebastiansvenson?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Sebastian Svenson](https://unsplash.com/@sebastiansvenson?utm_source=medium&utm_medium=referral)
    在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Data modelling is an essential part of data engineering. In this story, I would
    like to talk about different data models, the role of SQL in data transformation
    and the data enrichment process. SQL is a powerful tool that helps to manipulate
    data. With data transformation pipelines we can transform and enrich data loaded
    into our data platform. We will discuss various methods of data manipulation,
    scheduling and incremental table updates. In order to make this process efficient
    we would want to know a few essential things about data modelling first.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 数据建模是数据工程的重要组成部分。在这个故事中，我想讨论不同的数据模型、SQL在数据转换中的作用以及数据增强过程。SQL是一个强大的工具，帮助操作数据。通过数据转换管道，我们可以转换和增强加载到数据平台中的数据。我们将讨论各种数据操作方法、调度和增量表更新。为了使这个过程高效，我们需要首先了解一些关于数据建模的基本知识。
- en: What is data modelling?
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是数据建模？
- en: A **data model** aims to organise elements of your data and standardise how
    the data elements relate to one another.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据模型**旨在组织数据元素并标准化数据元素之间的关系。'
- en: '**Data Models** ensure the quality of the data, semantic configurations and
    consistency in naming conventions. It helps to design the database ***conceptually***
    and create logical connections between data elements, i.e. primary and foreign
    keys, tables, etc.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据模型**确保数据的质量、语义配置和命名一致性。它有助于从***概念上***设计数据库，并在数据元素之间建立逻辑连接，例如主键和外键、表格等。'
- en: Good and thorough **data model design** is crucial if you need the most reliable
    and cost-effective data transformation for your data platform. It guarantees that
    the data is processed without delays and unnecessary steps.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要最可靠和具有成本效益的数据转换，良好而全面的**数据模型设计**是至关重要的。它保证数据处理没有延迟和不必要的步骤。
- en: Companies use a procedure known as **dimensional data modelling** to process
    data. **Source** — **Production** — **Analytics** level split between schemas
    (datasets) enables effective data governance and makes sure our data is ready
    for business intelligence and machine learning.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 公司使用一种称为**维度数据建模**的程序来处理数据。**来源** — **生产** — **分析**级别在模式（数据集）之间的划分实现了有效的数据治理，并确保我们的数据为业务智能和机器学习做好准备。
- en: Any measurable information is being stored in **fact tables**, i.e. ***transactions,
    sessions, requests, etc.***
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 任何可衡量的信息都存储在**事实表**中，即***事务、会话、请求等***。
- en: '**Foreign keys** are used in the fact tables, and they are connected to Dimension
    Tables. **Dimension Tables** have descriptive data that is linked to the Fact
    Table, i.e. ***brand, product type/code, country, etc.***'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**外键** 用于事实表中，并且它们与维度表相连接。**维度表** 拥有与事实表相关的描述性数据，例如 ***品牌、产品类型/代码、国家等。***'
- en: '**Dimensions and Facts** based on business requirements are being tied into
    the **Schema**.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 根据业务需求，**维度和事实** 被整合到 **模式** 中。
- en: The two most popular schema types are **Star and Snowflake.** Not to say that
    these are the most frequent questions during data engineering job interviews [1].
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 最受欢迎的两种模式类型是 **星型模式和雪花模式**。并且这些也是数据工程师面试中最常见的问题之一 [1]。
- en: '[](/data-engineering-interview-questions-fdef62e46505?source=post_page-----93d058efa302--------------------------------)
    [## Data Engineering Interview Questions'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/data-engineering-interview-questions-fdef62e46505?source=post_page-----93d058efa302--------------------------------)
    [## 数据工程面试问题]'
- en: Tips to prepare for a job interview
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 准备工作面试的提示
- en: towardsdatascience.com](/data-engineering-interview-questions-fdef62e46505?source=post_page-----93d058efa302--------------------------------)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/data-engineering-interview-questions-fdef62e46505?source=post_page-----93d058efa302--------------------------------)'
- en: '**Star Schema**: The Star Schema is the Schema with a **highly denormalised**
    structure. This is very common in modern data warehouses where data is repeated
    in many tables. Each Dimension represents one Dimension Table. Dimension Tables
    have foreign keys that are joined with the Fact Tables to get the results. Data
    redundancy is high, but due to the simplicity of the schema design, it can offer
    performance benefits. It is more denormalised; It means fewer joins between tables,
    and therefore, it is optimised for querying.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**星型模式**：星型模式是一个具有**高度非规范化**结构的模式。这在现代数据仓库中非常常见，数据会在多个表中重复。每个维度代表一个维度表。维度表具有与事实表连接的外键，以获取结果。数据冗余较高，但由于模式设计的简单性，它可以提供性能上的好处。它更为非规范化；这意味着表之间的连接较少，因此它在查询时表现更优。'
- en: '![](../Images/9b14f90ff13ea78dd0d641f374a68a32.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9b14f90ff13ea78dd0d641f374a68a32.png)'
- en: Star Schema example. Image by author.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 星型模式示例。作者提供的图片。
- en: '**Snowflake Schema**: Snowflake schema extends Star schema with more normalised
    dimensional tables. This Schema uses less disk space as all the tables are normalised
    and split down into further dimension tables. It is easy to add Dimensions to
    this Schema, and the data redundancy is also less because of the complex Schema
    design.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**雪花模式**：雪花模式扩展了星型模式，具有更多规范化的维度表。此模式使用较少的磁盘空间，因为所有表都经过规范化，并拆分成进一步的维度表。添加维度到此模式中很容易，而且由于复杂的模式设计，数据冗余也较少。'
- en: '![](../Images/8adb908d8436beaba878067695fffce1.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8adb908d8436beaba878067695fffce1.png)'
- en: Snowflake Schema example. Image by author.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 雪花模式示例。作者提供的图片。
- en: '**Galaxy Schema**: Similar to the schemas stated above, a galaxy schema has
    several fact tables from **more than one-dimensional models**.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**星系模式**：类似于上述模式，星系模式具有来自 **多个维度模型** 的多个事实表。'
- en: Relational, Dimensional and Multi-dimensional data modelling
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关系型、维度型和多维数据建模
- en: Pure **relational data modelling** is often seen in OLTP data pipelines and
    relational (transactional) databases feeding data into the application. In this
    scenario data transaction speed and size is crucial. In this case, we would want
    to apply a highly-normalised data schema design. Data is always up-to-date but
    running reports might become a challenging task due to a high number of joins
    on various dimension tables.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 纯粹的 **关系型数据建模** 通常出现在OLTP数据管道和向应用程序提供数据的关系（事务）数据库中。在这种情况下，数据事务速度和大小至关重要。在这种情况下，我们希望应用高度规范化的数据模式设计。数据总是最新的，但由于在各种维度表上的连接次数较多，运行报告可能成为一个具有挑战性的任务。
- en: '**Dimensional modelling** as a process aims to ensure the most efficient data
    storage structure and faster data transformation for large amounts of data. The
    reason we would want to do this is simple — a more performant data platform with
    easy management and data governance. For instance, Snowflake schema helps to reduce
    data redundancy which is opposite to Star schema and is more suitable for OLAP
    analytics and reporting (no need to perform expensive joins).'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**维度建模** 作为一个过程，旨在确保最有效的数据存储结构以及更快的数据转换，以处理大量数据。我们希望这样做的原因很简单——提供一个更高效的数据平台，便于管理和数据治理。例如，雪花模式有助于减少数据冗余，这与星型模式相反，更适合用于OLAP分析和报告（无需执行昂贵的连接操作）。'
- en: The **Multi-Dimensional Data Model** represents data in **cubes**.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/238f2155f5f94f08b9e98346270ad4b9.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
- en: Data points (values) in a three-dimensional data cube. Image by author.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: It adds complexity but also makes data structure more efficient for complex
    reporting. Data is stored in aggregated cubes (tables) which adds more capabilities
    for users to perform robust OLAP data transformations, i.e. pivoting, drill-down
    features, and advanced dashboarding with multiple dimensions simultaneously. Often
    it is not necessary to aggregate and preserve the data. We can define the data
    model as a **cube** using SQL with ROLLUP [2].
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: The ROLLUP function is used to perform aggregation at multiple levels. This
    is useful when you have to work with dimension graphs.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/866e98ef7b2cc52b52fefcdbf67e3bd9.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
- en: Image by author
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: Consider this SQL below. It provides input data and a required SQL transformation
    to create a multi-dimensional data model.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Any dataset we create as a custom SQL query can be considered as a dimensional
    model.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: '[](/advanced-sql-techniques-for-beginners-211851a28488?source=post_page-----93d058efa302--------------------------------)
    [## Advanced SQL techniques for beginners'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: On a scale from 1 to 10 how good are your data warehousing skills?
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/advanced-sql-techniques-for-beginners-211851a28488?source=post_page-----93d058efa302--------------------------------)
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: Dimensional and multi-dimensional models are very often seen in data warehouse
    solutions. The dimensional data model makes schemas simple and more clear for
    business users.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: How to create a dimensional model?
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To introduce a dimensional model element into our data platform design we create
    dimensional models. It can be a schema or a database or even a part of our data
    platform in the data lake that can describe various business processes defined
    by many fact tables. Let’s consider a single business process with two fact tables.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we would want to **identify a business process** we need to transform
    into our data model and define the **granularity** of each fact table. Let’s imagine
    it’s an in-app store purchase with the following data in fact table rows for a
    payment transaction:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Granularity** refers to the level of information stored in our table. For
    example, in our example, the in-app payments are recorded with each transaction;
    hence, the granularity is **transaction-level** which can be easily transformed
    into **daily**. It is important that the fact tables in our dimensional model
    are consistent with the granularity specified. It means we would want to load
    atomic data into the same dimensional structures.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: 'Typically we would want to **transform and incrementally update** data like
    so:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Next, we need to define **the dimensions** for each fact table. In our case,
    we have ***payment transactions*** as facts. These **facts** can contain such
    useful data as the total number of items sold, currency exchange rates, total
    revenue, tax, etc. Further **dimensions** will provide context for our in-app
    purchase data, i.e. **time, product and user** dimension data. Each dimension
    can help to answer important business questions. *For instance, we might want
    to know which is the best-selling product or what was the average spend among
    users.*
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要为每个事实表定义**维度**。在我们的案例中，**支付交易**作为事实。这些**事实**可以包含有用的数据，例如销售的总数量、货币兑换率、总收入、税收等。进一步的**维度**将为我们的应用内购买数据提供背景，即**时间、产品和用户**维度数据。每个维度都可以帮助回答重要的业务问题。*例如，我们可能想知道哪个是最畅销的产品，或者用户的平均花费是多少。*
- en: Each in-app payment transaction will have foreign keys describing fact-to-dimension
    relationships and point to a relevant product, time of purchase or user profile.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 每个应用内支付交易将拥有描述事实与维度关系的外键，并指向相关的产品、购买时间或用户资料。
- en: Next, we would want to define **hierarchies. Hierarchies** help business users
    to understand different levels of **granularity** of our dataset. It also helps
    with navigation and advanced reporting features, i.e. drill down. For example,
    the product dimension might have a **hierarchy** that goes from `category` to
    `type` to `id` to `sub_id`.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们希望定义**层级**。层级有助于业务用户理解数据集的不同**粒度**级别。它还帮助导航和高级报告功能，即钻取。例如，产品维度可能具有一个**层级**，从`类别`到`类型`再到`ID`和`子ID`。
- en: We would want to use some calculations in our model called **Measures**. Measures
    are what we calculate using our fact table to generate data insights. It can be
    total `revenue`, `net revenue`, `tax amount`, etc.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望在模型中使用一些称为**度量**的计算。度量是我们使用事实表计算以生成数据洞察的内容。可以是总`收入`、`净收入`、`税额`等。
- en: 'With this multi-dimensional model businesses could answer some crucial questions:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个多维模型，企业可以回答一些关键问题：
- en: What was our total revenue for each product in the last year or month?
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 去年或上个月我们每个产品的总收入是多少？
- en: Users with what reputation level spend more?
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有何种声誉级别的用户花费更多？
- en: Which product was the best-selling one?
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哪个产品是最畅销的？
- en: How revenue this year can be compared to the same period last year?”
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 今年的收入如何与去年同期相比？
- en: Finally, we would want to verify our data model with users.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们希望通过用户验证我们的数据模型。
- en: Benefits of Dimensional Modeling
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 维度建模的好处
- en: '**Flexibility.** A dimensional modelling framework extends the data warehousing
    process. The design is highly adaptable to accommodate new business requirements
    or to alter the central repository. To represent updated business processes, new
    entities may be added to the model or the layout of existing ones might be adjusted.
    Dimensional models can handle these changes with ease. More columns can be added
    to dimension tables without disrupting current business intelligence applications
    that use the original tables.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**灵活性。** 一个维度建模框架扩展了数据仓库的过程。该设计高度适应以适应新的业务需求或更改中央仓库。为了表示更新后的业务流程，可以向模型中添加新实体或调整现有实体的布局。维度模型可以轻松处理这些变化。可以向维度表中添加更多列，而不会干扰使用原始表的当前商业智能应用程序。'
- en: '**Multi-dimensional Analytics:** Like it was demonstrated in the previous example
    we can use extra dimensions to create better graphs and more complex charts. Hierarchies
    help to understand data and analyse it simultaneously with drill-down features
    added to reporting dashboards. It is optimised for business intelligence (BI)
    needs and is easy to understand. Modern BI tools have built-in AI capabilities
    natively designed to understand dimension structure and data [3].'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**多维分析：** 正如前面的示例所示，我们可以使用额外的维度来创建更好的图表和更复杂的图形。层级结构有助于理解数据，并同时进行分析，报告仪表板中还增加了钻取功能。它针对商业智能（BI）需求进行了优化，并且易于理解。现代
    BI 工具内置了原生设计的 AI 功能，以理解维度结构和数据[3]。'
- en: '[](/artificial-intelligence-in-analytics-f11d2deafdf0?source=post_page-----93d058efa302--------------------------------)
    [## Artificial Intelligence in Analytics'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/artificial-intelligence-in-analytics-f11d2deafdf0?source=post_page-----93d058efa302--------------------------------)
    [## 分析中的人工智能'
- en: AI-powered Business Intelligence. A hype or reality?
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AI 驱动的商业智能。是炒作还是现实？
- en: towardsdatascience.com](/artificial-intelligence-in-analytics-f11d2deafdf0?source=post_page-----93d058efa302--------------------------------)
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/artificial-intelligence-in-analytics-f11d2deafdf0?source=post_page-----93d058efa302--------------------------------)
- en: '**Improved query speed:** Multi-dimensional tables are often denormalised and
    bring all the performance benefits of star schema design. Opposite to Snowflake
    schema, it enables **faster data retrieval** with fewer `join` operations.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**改进的查询速度：** 多维表通常是非规范化的，并带来星型架构设计的所有性能优势。与雪花架构相对，它通过减少`join`操作实现**更快的数据检索**。'
- en: Limitations of dimensional data modelling
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 维度数据建模的局限性
- en: While dimensional modelling is a strong technique for OLAP purposes, it does
    have certain limits, and in some cases, it may not be the best option.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管维度建模是OLAP用途的强大技术，但它确实有一定的限制，在某些情况下，可能不是最佳选择。
- en: '**Data changes frequently:** As dimensional datasets are often denormalised
    data redundancy is high here. Denormalised datasets might struggle with the requirements
    of real-time modifications. An OLTP approach may be more suited to such a scenario.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据经常变化：** 由于维度数据集通常是非规范化的，这里的数据冗余较高。非规范化的数据集可能在实时修改的需求下表现不佳。OLTP方法可能更适合这种情况。'
- en: '**Unstructured data:** Dimensional data modelling won’t perform well on **sparse
    and unstructured data.** Wherever we have limited fact data that can be tied to
    dimensions it might be inefficient, i.e. documents and text data. Document oriented
    database solution might be a better choice in this case.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**非结构化数据：** 维度数据建模在**稀疏和非结构化数据**上表现不佳。对于有限的事实数据，这些数据可以与维度关联，可能会低效，例如文档和文本数据。在这种情况下，面向文档的数据库解决方案可能是更好的选择。'
- en: '**Storage:** Denormalised datasets require more storage space compared to OLTP
    schemas.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**存储：** 非规范化的数据集需要比OLTP模式更多的存储空间。'
- en: Conclusion
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: Because of the benefits it provides, dimensional modelling is still the most
    often used data modelling approach for developing business data warehouses. It
    yields better reporting capabilities with multi-dimensional analysis, optimised
    query performance with fewer joins and faster data retrieval. Dimensional modelling
    makes the data warehousing design process more flexible and highly adaptable.
    It also has a certain limitation which makes it incompatible with unstructured
    datasets and OLTP pipelines due to a high requirement for data redundancy of the
    latter. Overall multi-domensional modelling is a great technique for OLAP and
    reporting which enables better query performance.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 由于其提供的好处，维度建模仍然是开发业务数据仓库时最常用的数据建模方法。它通过多维分析提供更好的报告能力，通过减少联接优化查询性能并加快数据检索。维度建模使数据仓库设计过程更灵活，更具适应性。它也有一定的局限性，使其与非结构化数据集和OLTP管道不兼容，因为后者对数据冗余的要求较高。总体而言，多维建模是一个出色的OLAP和报告技术，能够提供更好的查询性能。
- en: Recommended read
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 推荐阅读
- en: '[1] [https://medium.com/towards-data-science/data-engineering-interview-questions-fdef62e46505](https://medium.com/towards-data-science/data-engineering-interview-questions-fdef62e46505)'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] [https://medium.com/towards-data-science/data-engineering-interview-questions-fdef62e46505](https://medium.com/towards-data-science/data-engineering-interview-questions-fdef62e46505)'
- en: '[2] [https://medium.com/towards-data-science/advanced-sql-techniques-for-beginners-211851a28488](https://medium.com/towards-data-science/advanced-sql-techniques-for-beginners-211851a28488)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] [https://medium.com/towards-data-science/advanced-sql-techniques-for-beginners-211851a28488](https://medium.com/towards-data-science/advanced-sql-techniques-for-beginners-211851a28488)'
- en: '[3] [https://medium.com/towards-data-science/artificial-intelligence-in-analytics-f11d2deafdf0](https://medium.com/towards-data-science/artificial-intelligence-in-analytics-f11d2deafdf0)'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '[3] [https://medium.com/towards-data-science/artificial-intelligence-in-analytics-f11d2deafdf0](https://medium.com/towards-data-science/artificial-intelligence-in-analytics-f11d2deafdf0)'
- en: '[4] [https://towardsdatascience.com/modern-data-engineering-e202776fb9a9](/modern-data-engineering-e202776fb9a9)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[4] [https://towardsdatascience.com/modern-data-engineering-e202776fb9a9](/modern-data-engineering-e202776fb9a9)'
- en: '[5] [https://towardsdatascience.com/how-to-become-a-data-engineer-c0319cb226c2](/how-to-become-a-data-engineer-c0319cb226c2)'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[5] [https://towardsdatascience.com/how-to-become-a-data-engineer-c0319cb226c2](/how-to-become-a-data-engineer-c0319cb226c2)'
