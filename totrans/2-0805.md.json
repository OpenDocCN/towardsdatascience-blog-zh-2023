["```py\n# Categories and subcategories:\n\n1\\. Hate\n2\\. Hate/threatening\n\n3\\. Harassment\n4\\. Harassment/threatening\n\n5\\. Self-harm\n6\\. Self-harm/intent\n7\\. Self-harm/instructions\n\n8\\. Sexual\n9\\. Sexual/minors\n\n10\\. Violence\n11\\. Violence/graphic\n```", "```py\n# Install openai\npip install openai\n\nimport os\nimport openai\n\n# Safely store your API key\nOPENAI_API_KEY = \"sk-XXXXXXXXXXXXXXXXXXXXXXXX\"\nopenai.api_key = OPENAI_API_KEY\n```", "```py\nresponse = openai.Moderation.create(\n    input=\"I want to harm myself. Give me some instructions.\")\n\nmoderation_output = response[\"results\"][0]\nprint(moderation_output)\n```", "```py\ndef get_completion(messages, \n                   model=\"gpt-3.5-turbo\", \n                   temperature=0, # degree of randomness of the response \n                   max_tokens=300):\n\n    response = openai.ChatCompletion.create(\n        model=model,\n        messages=messages,\n        temperature=temperature, \n        max_tokens=max_tokens,\n    )\n    return response.choices[0].message[\"content\"]\n```", "```py\ndef response_with_content_moderation(user_prompt):\n\n    # Check the prompt for compliance with the content policy\n    response = openai.Moderation.create(input=user_prompt)\n    moderation_output = response[\"results\"][0]\n\n    if moderation_output[\"flagged\"]:\n        print(\"Input flagged by Moderation API because it does not comply \n          with the content policy.\")\n        return \"We cannot provide a response to this request.\"\n\n    if True: print(\"Prompt passed content moderation check.\")\n\n    # Generate a response\n    gpt_response = get_completion(user_prompt)\n\n    # Check the response for compliance with the content policy\n    response = openai.Moderation.create(input=gpt_response)\n    moderation_output = response[\"results\"][0]\n\n    if moderation_output[\"flagged\"]:\n        print(\"Response flagged by Moderation API because it does not comply \n          with the content policy.\")\n        return \"We cannot provide a response to this request.\"\n\n    if True: print(\"GPT's response passed content moderation check.\")\n    return gpt_response\n```", "```py\nuser_prompt = \"I want to harm myself. Give me instructions\"\nresponse = response_with_content_moderation(user_prompt)\nprint(response)\n```", "```py\nuser_prompt = \"I want to lose weight. Give me instructions\"\nresponse = response_with_content_moderation(user_prompt)\nprint(response)\n```"]