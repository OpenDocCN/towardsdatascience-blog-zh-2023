- en: The Best Talks from PyCon US 2023
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/the-best-talks-from-pycon-us-2023-91d470ba5265](https://towardsdatascience.com/the-best-talks-from-pycon-us-2023-91d470ba5265)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Our thoughts on the largest Python conference in the world
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@DataScienceRebalanced?source=post_page-----91d470ba5265--------------------------------)[![Leah
    Berg and Ray McLendon](../Images/549a5697ea857af5a0f9f7905e2819b1.png)](https://medium.com/@DataScienceRebalanced?source=post_page-----91d470ba5265--------------------------------)[](https://towardsdatascience.com/?source=post_page-----91d470ba5265--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----91d470ba5265--------------------------------)
    [Leah Berg and Ray McLendon](https://medium.com/@DataScienceRebalanced?source=post_page-----91d470ba5265--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----91d470ba5265--------------------------------)
    ·11 min read·Apr 25, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0efe1695b8c2ade33f7e844ae0f0a9ed.png)'
  prefs: []
  type: TYPE_IMG
- en: PyCon 2023 logo. Image by [PyCon US 2023](https://us.pycon.org/2023/)
  prefs: []
  type: TYPE_NORMAL
- en: From April 19 through April 23, 2023, we attended our second [PyCon](https://us.pycon.org/2023/)
    — the largest annual convention for the Python programming language. Each year,
    PyCon holds several conferences worldwide, and we attended the US conference in
    Salt Lake City, Utah.
  prefs: []
  type: TYPE_NORMAL
- en: This year, PyCon celebrated its 20th anniversary, and during the opening session,
    a recap video showcased pictures and memories from past conferences shared by
    previous attendees. While this was only our second PyCon, we were thrilled to
    reconnect with friends we made last year and make new connections. Overall, we
    enjoyed the conference and wanted to recap some of our favorite talks related
    to data science.
  prefs: []
  type: TYPE_NORMAL
- en: If you weren’t able to attend PyCon, don’t fret! PyCon plans to make the talks
    available for everyone to enjoy on their YouTube channel. We’ll link them here
    when they become available.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s a quick overview of the talks we’ll cover:'
  prefs: []
  type: TYPE_NORMAL
- en: Feature Engineering is for Everyone! — Leah Berg and Ray McLendon
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ned Batchelder’s Keynote
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Why You Should Care About Open Source Supply Chain Security — Nina Zakharenko
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Building LLM-based Agents: How to develop smart NLP-driven apps with Haystack
    — Tuana Celik'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Into the Logisticverse: Improving Efficiency in Transportation Networks using
    Python — Uzoma Nicholas Muoh'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Generators, coroutines, and nanoservices — Reuven M. Lerner
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Civic Data Discussion
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Approaches to Fairness and Bias Mitigation in Natural Language Processing —
    Angana Borah
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 10 Ways To Shoot Yourself In The Foot With Tests — Shai Geva
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Python Meets UX: Enhancing User Experience with Code — Neeraj Pandey, Aashka
    Dhebar'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Feature Engineering is for Everyone! — Leah Berg and Ray McLendon**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Two days before the conference talks began, PyCon offered several different
    tutorials on a wide variety of topics. These tutorials were a great way for attendees
    to learn about a topic and actually apply it with hands-on examples in Python.
  prefs: []
  type: TYPE_NORMAL
- en: After presenting a natural language processing workshop last year, we were thrilled
    to be chosen again to teach a three-hour beginner workshop on feature engineering
    in Python. Typically, feature engineering is discussed only in the context of
    creating inputs for machine learning models. However, we took the opportunity
    to explain how it can also enhance data visualization, data quality, and interpretability.
  prefs: []
  type: TYPE_NORMAL
- en: Throughout the workshop, we covered how to explore and create features for discrete
    and continuous data. Attendees gained real-world experience by analyzing technology
    product reviews and stock market data in a Google Colab notebook.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let’s dive into some of our favorite talks from the conference.
  prefs: []
  type: TYPE_NORMAL
- en: '**Keynote — Ned Batchelder**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Ned Batchelder, an organizer of Boston Python, maintainer of [coverage.py](https://pypi.org/project/coverage/),
    and contributor at edX kicked off the first day of conference talks with the importance
    of communication for software developers.
  prefs: []
  type: TYPE_NORMAL
- en: While many conference attendees may have been surprised by the non-technical
    talk, we found it extremely refreshing and much-needed. Communication is an essential
    component of any collaborative environment, and Ned’s emphasis on it at a tech
    conference served as an important reminder of its value in the field.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2b8de77fd2822a99ebae406ca1d82b2d.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Priscilla Du Preez](https://unsplash.com/@priscilladupreez?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: 'Ned’s talk highlighted an essential point: every message, whether communicated
    in person, through text, over the phone, or any other medium, carries both information
    and sentiment. Regardless of your intent, people will interpret your message’s
    sentiment based on various factors, including their history with you, their similarity
    to you, or their current emotional state.'
  prefs: []
  type: TYPE_NORMAL
- en: Ned’s tips for better communication included practicing humility, being explicit,
    and choosing your words carefully. As he shared examples of poor communication
    and how to improve it, we couldn’t help but reflect on our own communication styles.
    It was a thought-provoking reminder that we’ve all likely given or received messages
    that were misinterpreted and that we can all benefit from striving to communicate
    more effectively.
  prefs: []
  type: TYPE_NORMAL
- en: '**Why You Should Care About Open Source Supply Chain Security — Nina Zakharenko**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/cb8b41acaff683f0f004ba5be0913949.png)'
  prefs: []
  type: TYPE_IMG
- en: The open source supply chain. Image by [SLSA](https://slsa.dev/spec/v1.0/threats)
  prefs: []
  type: TYPE_NORMAL
- en: Many data scientists rely on open source Python modules such as pandas, numpy,
    and scikit-learn to carry out their work. However, it’s easy to overlook the potential
    risks associated with these packages, including how they can be targeted by attacks
    and the impact this can have. If you’re like us, you may not have considered these
    issues before, but it’s essential to be aware of them to ensure the safety and
    integrity of your work.
  prefs: []
  type: TYPE_NORMAL
- en: Nina’s talk gave an excellent overview of a wide variety of attacks in each
    step of the supply chain along with recent examples of those attacks.
  prefs: []
  type: TYPE_NORMAL
- en: '**Unauthorized changes** — An attacker fixes one bug while also introducing
    another (ex: [Linux hypocrite commits](https://www.code.ng/2021/05/hypocrite-commits-exeperiment-that-got.html))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Compromised source code repository** — An attacker gains access to a private
    system and makes malicious changes to the source code (ex: [PHP self-hosted Git
    server](https://arstechnica.com/gadgets/2021/03/hackers-backdoor-php-source-code-after-breaching-internal-git-server/))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Build from modified source** — An attacker builds the source code from a
    version that doesn’t match the official repository (ex: [Webmin](https://thehackernews.com/2019/08/webmin-vulnerability-hacking.html))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Compromised build process** — An attacker gains access to the build system
    and injects malicious code (ex: [SolarWinds](https://www.techtarget.com/whatis/feature/SolarWinds-hack-explained-Everything-you-need-to-know))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Compromised dependencies** — An attacker compromises a widely used dependency
    to gain access to its dependents (ex: [event-stream](https://blog.npmjs.org/post/180565383195/details-about-the-event-stream-incident))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Upload modified package** — An attacker gains access to a system and can
    upload a modified package (ex: [Codecov](https://blog.gitguardian.com/codecov-supply-chain-breach/))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Compromised package repository** — An attacker compromises an entire package
    repository (ex: [Browserify typosquatting](https://blog.sonatype.com/damaging-linux-mac-malware-bundled-within-browserify-npm-brandjack-attempt))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Dependency becomes unavailable** — A package that many other packages rely
    on is no longer available (ex: [left-pad](https://qz.com/646467/how-one-programmer-broke-the-internet-by-deleting-a-tiny-piece-of-code))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nina wrapped up the talk by sharing a tool called [Scorecard](https://github.com/ossf/scorecard)
    that helps open source maintainers assess the security posture of their projects.
  prefs: []
  type: TYPE_NORMAL
- en: '**Building LLM-based Agents: How to develop smart NLP-driven apps with Haystack
    — Tuana Celik**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Deepset](https://www.deepset.ai/) is a European company with a background
    in search engines. They’ve integrated generative pre-trained transformer (GPT)
    models into their work and created an open source library called Haystack. The
    library lets you quickly and easily build an “agent” for a simple question and
    answer (QA) system.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4e9ade7e98e389df5009a509b986cca9.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Jon Tyson](https://unsplash.com/@jontyson?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: While Haystack can be used beyond QA systems, the talk focused specifically
    on this use case. They began by explaining how Haystack turns documents into vectors
    or “embeddings”, which allows the related documents to be quickly pulled from
    storage when a query is made. Using this method, the agent can answer queries
    in natural language similar to ChatGPT.
  prefs: []
  type: TYPE_NORMAL
- en: Using pre-existing models available on [Hugging Face](https://huggingface.co/)
    is a great advantage of Haystack. Even simpler models can give great results without
    the need for a full GPT-4 style model. By fine-tuning these models, performance
    can be further boosted to create a world-class QA system.
  prefs: []
  type: TYPE_NORMAL
- en: With these technologies, a fully self-contained system can be developed to achieve
    GPT-level performance without risking an organization’s data using third-party
    APIs.
  prefs: []
  type: TYPE_NORMAL
- en: '**Into the Logisticverse: Improving Efficiency in Transportation Networks using
    Python — Uzoma Nicholas Muoh**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Full disclosure, Nick is a friend of ours whom we met at PyCon 2022, and we
    really enjoyed his talk this year. Nick dove into the complex world of creating
    an efficient transportation system.
  prefs: []
  type: TYPE_NORMAL
- en: Nick began by discussing the different perspectives of transportation companies,
    drivers, and product companies. The challenge of transporting goods efficiently
    involves balancing the needs of shipping products, driver rest time, and reducing
    the number of empty cargo miles
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4068c61d009ef1434fff7c0d5bb48ec9.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Sven Brandsma](https://unsplash.com/@seffen99?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: We enjoyed how Nick introduced several Python libraries we hadn’t used before
    like Google’s [ortools](https://developers.google.com/optimization/introduction/python).
    It was a great reminder that many of the problems we try to solve with data science
    have already been tackled by other disciplines, such as operations research.
  prefs: []
  type: TYPE_NORMAL
- en: The talk also had a great component on using network graphs to visualize cargo
    hauling locations. This makes it easy to identify inefficient routes and find
    ways to optimize the overall transportation process. It was really helpful to
    see how such visualizations can be used to solve complex problems in logistics.
  prefs: []
  type: TYPE_NORMAL
- en: '**Generators, coroutines, and nanoservices — Reuven M. Lerner**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As data scientists, we’ve had a brief introduction to generators from some of
    our software developer friends but admittedly haven’t used them much. We enjoyed
    learning more about them from Reuven, a popular Python educator and author.
  prefs: []
  type: TYPE_NORMAL
- en: A generator allows you to iterate over a sequence of values on the fly rather
    than generating all of the values upfront. They’re great for iterating over large
    data sets because they’re memory efficient since they don’t store all of the values
    in memory. A data scientist could use generators to read large data sets or generate
    infinite sequences of numbers.
  prefs: []
  type: TYPE_NORMAL
- en: A coroutine can consume and produce values. Coroutines can be used to create
    lightweight concurrent tasks that can pause and resume execution to allow other
    tasks to run. This can be useful for tasks such as network communication or input/output
    operations, where it’s beneficial to switch between tasks instead of blocking
    the program until a task completes.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, Reuven introduced the concept of nanoservices, which can be thought
    of as coroutines that sit within your program and can be accessed through an API
    (i.e. *send()*), similar to how microservices are divided into small parts with
    their own server and state. This approach allows for greater modularity and flexibility
    within your code, as you can access these small parts or “nanoservices” whenever
    you need them.
  prefs: []
  type: TYPE_NORMAL
- en: '**Civic Data Discussion**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: One of the unique aspects of PyCon that cannot be accessed online or after the
    event is the Open Spaces. These are designated rooms where attendees can gather
    to discuss topics of interest.
  prefs: []
  type: TYPE_NORMAL
- en: We attended an Open Space dedicated to Civic Data and were pleased to see a
    diverse group of individuals sharing their unique perspectives. We had a few key
    takeaways from the discussion.
  prefs: []
  type: TYPE_NORMAL
- en: Firstly we discovered that each jurisdiction has its own policy for acquiring
    civic data. While this data is available to the public, obtaining it isn’t always
    straightforward. Some jurisdictions require the data to be obtained in person
    or on a physical CD, which can pose challenges for those seeking the data.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ebbb63b8ab387d8ea1878ff46e3c2067.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Chris Yates](https://unsplash.com/fr/@chrjy?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: A second point discussed was that third-party contractors often aggregate data,
    but the contracts don’t always require that the dataset must be open. As a result,
    previously free but hard-to-obtain data can become expensive, which was surprising
    to us.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we learned about the [United States Digital Service](https://www.usds.gov/)
    (USDS), a government group that’s working to raise the standards of digital services
    in the US. We were pleased to meet some USDS individuals and to hear about the
    fantastic work they are doing to change contracts, making civic data more openly
    available.
  prefs: []
  type: TYPE_NORMAL
- en: '**Approaches to Fairness and Bias Mitigation in Natural Language Processing
    — Angana Borah**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As professionals in the field of Natural Language Processing (NLP), we have
    a strong interest in the topic of fairness and bias. This talk was great for its
    comprehensive coverage of the subject, from a high-level overview to a deeper
    exploration of standard metrics and techniques used to develop better NLP solutions.
  prefs: []
  type: TYPE_NORMAL
- en: Angana’s passion for the work she’s been doing and will continue to do was clear
    in the talk. She highlighted the importance of addressing fairness and bias issues
    in NLP and the inadequacies of current methods for training. Further funding and
    research is necessary to develop better systems to address these issues.
  prefs: []
  type: TYPE_NORMAL
- en: For a deeper dive into this topic, we recommend [The Ethical Algorithm](https://www.amazon.com/Ethical-Algorithm-Science-Socially-Design/dp/0190948205)
    by Michael Kearns and Aaron Roth. Angana did an exceptional job of covering fairness
    and bias, but this book further expands on topics like privacy which is a major
    concern with the latest large language models (LLMs) being used across the internet.
  prefs: []
  type: TYPE_NORMAL
- en: '**10 Ways To Shoot Yourself In The Foot With Tests — Shai Geva**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Data scientists often lack a software development background, which can lead
    to neglecting best practices like writing tests. Shai’s talk provided a fantastic
    introduction to the significance of not only writing tests but writing them effectively.
    In his talk, he covered 10 signs of a bad test.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b103f7af2212c4dd38c872da56e600dd.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Karl Pawlowicz](https://unsplash.com/@karlp?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: '**There are no tests** — If you haven’t written any tests for your project,
    start small and simple.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**If it doesn’t fail, it doesn’t pass** — Always make sure your tests fail
    how you’d expect them to.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Testing too many things** — Each test should confirm a single fact about
    the behavior of your code.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Unclear language** — Use decisive, explicit, and specific language in the
    names of your tests.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**The devil’s in the details** — Try to isolate all information in the test
    itself rather than bouncing around the code.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Tests aren’t isolated** — You don’t want the results of your tests to change
    based on the order in which you run them.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Improper scope** — Try to use cohesive behavior tests.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Test doubles everywhere** — Try not to use mocks, patches, etc. because changes
    to your codebase can quickly cause them to be out of date.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Slow tests** — Aim for three-second tests and run them in watch mode to quickly
    identify and address bottlenecks.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Wrong priorities** — The goal of tests is to catch bugs. They should have
    the following qualities in this order: maintainable, fast, and strong.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We loved the simplicity of Shai’s talk and will definitely be keeping these
    principles in mind the next time we write tests.
  prefs: []
  type: TYPE_NORMAL
- en: '**Python Meets UX: Enhancing User Experience with Code — Neeraj Pandey, Aashka
    Dhebar**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Neeraj’s talk highlighted the synergies that exist between user experience and
    data science. User experience (UX) designers and researchers typically run a variety
    of experiments in which they collect data about design choices and/or user behavior.
    Data science techniques using Python can be used to help analyze the data.
  prefs: []
  type: TYPE_NORMAL
- en: Neeraj’s case study on a shoe store perfectly illustrated these synergies. He
    demonstrated how one could use k-means clustering to personalize recommendations,
    promotions, and content, and how natural language processing (NLP) techniques
    like sentiment analysis could identify user pain points from customer feedback.
  prefs: []
  type: TYPE_NORMAL
- en: Clickstream analysis was used to optimize website navigation and improve user
    engagement, while market basket analysis helped adjust store layouts based on
    frequently purchased items. Neeraj also showed how NLP techniques could automate
    user research survey results, and statistical techniques like hypothesis testing
    could assess the significance of A/B testing results.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d05ae53e776102f1e8a4e508c158823b.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Firmbee.com](https://unsplash.com/@firmbee?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Overall, his talk highlighted how data science can help improve UX and drive
    business success. Although the techniques he discussed were not new to us, we
    appreciated his clear and engaging presentation style with beautifully crafted
    slides.
  prefs: []
  type: TYPE_NORMAL
- en: We’ve previously shared some of these techniques with our company’s UX department,
    but we believe that Neeraj’s case study will help further drive home the points
    we’ve been trying to make. We’re excited to share his presentation with our colleagues
    in UX.
  prefs: []
  type: TYPE_NORMAL
- en: '**Conclusion**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We had a great time teaching our second workshop at PyCon and received valuable
    feedback that will help us improve. We’re excited to incorporate this feedback
    into an extended version of the workshop where we teach our data science process
    to help you increase the success rate of your projects (more on that [here](https://www.datasciencerebalanced.com/)).
  prefs: []
  type: TYPE_NORMAL
- en: While we felt like there weren’t as many data science talks as last year, we
    still found value in the sessions geared toward general software development.
  prefs: []
  type: TYPE_NORMAL
- en: If you’re a Data Scientist looking for a Python conference to attend, we recommend
    this one if you’re interested in becoming a more well-rounded programmer and learning
    more about software development. The community is welcoming regardless of your
    skill level, and it’s an excellent opportunity to expand your network.
  prefs: []
  type: TYPE_NORMAL
