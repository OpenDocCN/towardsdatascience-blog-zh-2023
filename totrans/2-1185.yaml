- en: How to Fix Missing Dates for Time Series Analysis
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何修复时间序列分析中的缺失日期
- en: 原文：[https://towardsdatascience.com/how-to-fix-missing-dates-for-time-series-analysis-26358360abcc](https://towardsdatascience.com/how-to-fix-missing-dates-for-time-series-analysis-26358360abcc)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-fix-missing-dates-for-time-series-analysis-26358360abcc](https://towardsdatascience.com/how-to-fix-missing-dates-for-time-series-analysis-26358360abcc)
- en: Learn how to use TVFs in BigQuery to effortlessly generate date ranges for your
    time series analysis.
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 学习如何在 BigQuery 中使用 TVFs 来轻松生成时间序列分析所需的日期范围。
- en: '[](https://medium.com/@thomas.ellyatt?source=post_page-----26358360abcc--------------------------------)[![Tom
    Ellyatt](../Images/8756acdd11fef8db9a868820251e7575.png)](https://medium.com/@thomas.ellyatt?source=post_page-----26358360abcc--------------------------------)[](https://towardsdatascience.com/?source=post_page-----26358360abcc--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----26358360abcc--------------------------------)
    [Tom Ellyatt](https://medium.com/@thomas.ellyatt?source=post_page-----26358360abcc--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@thomas.ellyatt?source=post_page-----26358360abcc--------------------------------)[![汤姆·艾利亚特](../Images/8756acdd11fef8db9a868820251e7575.png)](https://medium.com/@thomas.ellyatt?source=post_page-----26358360abcc--------------------------------)[](https://towardsdatascience.com/?source=post_page-----26358360abcc--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----26358360abcc--------------------------------)
    [汤姆·艾利亚特](https://medium.com/@thomas.ellyatt?source=post_page-----26358360abcc--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----26358360abcc--------------------------------)
    ·7 min read·Jul 20, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----26358360abcc--------------------------------)
    ·阅读时长 7 分钟·2023年7月20日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/50974d6ab642db33cc05beee117d3727.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/50974d6ab642db33cc05beee117d3727.png)'
- en: My goal for this article is to help you understand TVFs and how to use them
    by walking you through an example which addresses the missing date issue common
    in time series analysis.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本文的目标是帮助你理解 TVFs 及其使用方法，通过一个例子来解决时间序列分析中常见的缺失日期问题。
- en: 'In some situations, dates with zero data are important and must be shown/included
    in your dataset. For example:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，零数据的日期是重要的，必须在数据集中显示/包含。例如：
- en: Businesses can benefit from identifying days with no sales in retail. These
    days are influenced by holidays or changes in customer behaviour.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 企业可以通过识别零销售的日期获益。这些日期受到节假日或客户行为变化的影响。
- en: Finding missing dates in data helps improve data quality by revealing anomalies
    or outliers caused by system failures or incomplete data capture. Showing missing
    dates is a useful tool for achieving this goal.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发现数据中的缺失日期有助于通过揭示系统故障或数据捕获不完整引起的异常或离群值来提高数据质量。显示缺失日期是实现这一目标的有用工具。
- en: These missing dates can cause issues for analysis and visualisation. Therefore,
    you need a solution that ensures all dates are present in the output, even if
    there is no corresponding data.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这些缺失日期可能会导致分析和可视化问题。因此，你需要一个解决方案，确保所有日期都在输出中，即使没有对应的数据。
- en: By the end of this article, you’ll have your very own TVF, which can generate
    this…
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 到本文结束时，你将拥有自己的 TVF，能够生成这个……
- en: '![](../Images/762c6ffcc7468c0ec8af7c7df722a9cd.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/762c6ffcc7468c0ec8af7c7df722a9cd.png)'
- en: From a single line of code!
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 只需一行代码！
- en: '![](../Images/e1951c31f988a78b375c4c0834625455.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e1951c31f988a78b375c4c0834625455.png)'
- en: 'We will cover:'
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们将涵盖：
- en: How to **generate dates** to plug missing gaps in your data
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何**生成日期**以填补数据中的缺失空白
- en: How you can **create a TVF** and the usage of parameters
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何**创建一个 TVF**及其参数的使用
- en: How to **call** **a TVF**
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何**调用** **TVF**
- en: We’ll look at **expanding our date generator** for greater flexibility.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们将探讨**扩展我们的日期生成器**以获得更大的灵活性。
- en: Finally, I’ll share **how you can access my TVF** and introduce you to an open-source
    project called **BigFunctions**.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，我将分享**如何访问我的 TVF**，并介绍一个名为**BigFunctions**的开源项目。
- en: The Problem
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'Consider this scenario: you’ve run a query which provides results of total
    survey responses by date for the last four weeks. Then, you bring the results
    into Google Sheets to quickly visualise the data.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑这种情况：你运行了一个查询，提供了过去四周的每日期总调查回应结果。然后，你将结果导入 Google Sheets 以快速可视化数据。
- en: '![](../Images/9a3eb50c7b520e100ba07bb36799c82c.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9a3eb50c7b520e100ba07bb36799c82c.png)'
- en: The chart above doesn’t highlight any missing data; it looks exactly as expected.
    Even if you choose to display all dates in the x-axis, you can be forgiven for
    not noticing the two missing days in July.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 上图没有突出显示任何缺失数据；它看起来完全符合预期。即使你选择在 x 轴上显示所有日期，你也可以原谅没注意到七月中缺失的两天。
- en: '![](../Images/529c22c8f7b9142adfe5bfb04b200452.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/529c22c8f7b9142adfe5bfb04b200452.png)'
- en: '**How Can We Solve This Problem**'
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**我们如何解决这个问题**'
- en: Before we get into the TVF topic, let’s talk about my method for solving such
    a problem and why I bundled it into a TVF.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入 TVF 话题之前，让我们谈谈我解决此类问题的方法，以及为什么我将其打包成 TVF。
- en: To solve this problem, I create what I like to call a **Date Axis.** This column
    of dates/weeks/months, whatever period you need, is built separately from the
    dataset you’re analysing. This ensures that the dates are independent and do not
    rely on the data to exist.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，我创建了我喜欢称之为 **日期轴** 的东西。这一列日期/周/月，无论你需要哪个时间段，都与正在分析的数据集分开构建。这确保了日期是独立的，不依赖于数据的存在。
- en: Creating the date axis is reasonably straightforward, although a chore if you
    frequently need to create one.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 创建日期轴相对直接，但如果你经常需要创建日期轴，可能会觉得有些繁琐。
- en: Below is a simple example which generates dates between the 19th of June and
    the 16th of July in 2023.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个简单的示例，它生成 2023 年 6 月 19 日至 7 月 16 日之间的日期。
- en: '[PRE0]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](../Images/44c35747f5f5de5f1aea9a923f60c220.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/44c35747f5f5de5f1aea9a923f60c220.png)'
- en: The generate_date_array function is the key part of this, but as the function
    name implies, the output is returned as an array. Therefore, we must unnest (flatten)
    this array for the next step.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`generate_date_array` 函数是关键部分，但正如函数名所示，输出是以数组形式返回的。因此，我们必须展开（扁平化）这个数组以进行下一步。'
- en: The date axis exists in a CTE as we need to treat it like a separate table to
    left join our actual data to the list of dates.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 日期轴存在于 CTE 中，我们需要将其视为一个单独的表，以便将实际数据左连接到日期列表上。
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/7852f57252c3f5ddb2cdceda525d8608.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7852f57252c3f5ddb2cdceda525d8608.png)'
- en: As you can see above, we have *null* values for the 1st and 2nd of July in our
    survey_responses table because those dates don’t exist. Using the date axis, we
    can easily spot these and handle them appropriately, which in this scenario, *null*
    values are replaced with 0.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所示，我们的 survey_responses 表中 7 月 1 日和 2 日的值为 *null*，因为这些日期不存在。使用日期轴，我们可以轻松发现这些并适当地处理，在这种情况下，*null*
    值被替换为 0。
- en: Re-plotting our updated data, we now capture the lack of responses at the beginning
    of July.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 重新绘制更新后的数据，我们现在捕捉到了 7 月初响应的缺失。
- en: '![](../Images/4151967423399465309fa627c0e1b166.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4151967423399465309fa627c0e1b166.png)'
- en: What even is a TVF?
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: TVF 到底是什么？
- en: TVF is an abbreviation for Table-Valued Function. Much like UDFs (User-Defined
    Functions), they allow you to specify a series of tasks which will be run whenever
    your custom function is called.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: TVF 是 Table-Valued Function 的缩写。与 UDF（用户定义函数）类似，它们允许你指定一系列任务，每当调用自定义函数时，这些任务都会运行。
- en: The difference between the two is the UDF returns a result for each row in your
    dataset, whereas the TVF returns an entire table.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 二者的区别在于 UDF 为数据集中的每一行返回结果，而 TVF 返回的是整个表。
- en: You may wonder what’s the point if the CTE approach does the job perfectly.
    Well, in a TVF, we can expand on the features and reusability of the date axis
    function and streamline our code.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会问，如果 CTE 方法已经能完美解决问题，那么 TVF 有什么意义。实际上，在 TVF 中，我们可以扩展日期轴函数的功能和重用性，简化我们的代码。
- en: There are many creative and useful ways to use TVFs, and in this article, we’ll
    be using one to generate a date axis.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 TVF 有很多创造性和实用的方法，在这篇文章中，我们将使用一个生成日期轴。
- en: Creating a TVF
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个 TVF
- en: '[PRE2]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Creating the TVF is nice and easy; start with `create or replace table function`
    followed by where in your project you want to save your TVF. Then, you can add
    parameters, which we’ve added two in this example.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 TVF 很简单；首先使用 `create or replace table function`，然后指定你希望将 TVF 保存到项目中的位置。接着，你可以添加参数，在这个例子中我们添加了两个。
- en: '`start_date DATE, end_date DATE`'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`start_date DATE, end_date DATE`'
- en: As shown below, these two parameters replace the static values we added to the
    generate_date_array function.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如下所示，这两个参数替换了我们添加到 `generate_date_array` 函数中的静态值。
- en: '`unnest(generate_date_array(start_date,end_date)) as dates`'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '`unnest(generate_date_array(start_date,end_date)) as dates`'
- en: When your TVF is created, you can call your new function as if it was a table.
    Note that I’ve added parenthesis at the end of the FROM clause to specify what
    values I want the TVF to use, with the 1st of July as the start date and the 7th
    of July as the end date.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的 TVF 被创建后，你可以像调用表一样调用你的新函数。注意，我在 FROM 子句的末尾添加了括号，以指定我希望 TVF 使用的值，其中 7 月 1
    日是开始日期，7 月 7 日是结束日期。
- en: '[PRE3]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/3d73f022e7d383fd3819474423cdaf30.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3d73f022e7d383fd3819474423cdaf30.png)'
- en: We can now update our original query to use the new TVF.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以更新原始查询以使用新的 TVF。
- en: '[PRE4]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Expanding on the TVF
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 扩展 TVF
- en: The function so far is quite limiting because it only provides dates. What if
    we wanted week start dates where the week started on Sundays, or do we want quarterly
    start and end dates for the last few years?
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 目前这个函数的功能相对有限，因为它只提供日期。如果我们想要以星期天为周开始的周起始日期，或者我们想要过去几年季度的开始和结束日期怎么办？
- en: Although we could add that logic into our CTE which calls the TVF, let’s handle
    that in the TVF instead so it’s there whenever we need it.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们可以将该逻辑添加到调用 TVF 的 CTE 中，但我们还是在 TVF 中处理它，这样当我们需要时就可以随时使用。
- en: My final version adds a few other possibilities depending on whether you need
    weekly, monthly, or quarterly date ranges.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我的最终版本根据你需要的周、月或季度日期范围，增加了其他一些可能性。
- en: '[PRE5]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This gets us the output we saw at the beginning of the article, where a single
    query line can generate years worth of dates, along with their week, month, and
    quarterly parts.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这使我们得到了文章开头看到的输出，其中单行查询可以生成一年的日期，以及它们的周、月和季度部分。
- en: '![](../Images/762c6ffcc7468c0ec8af7c7df722a9cd.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/762c6ffcc7468c0ec8af7c7df722a9cd.png)'
- en: As a bonus, this function we created doesn’t query any actual data. Meaning
    it's completely free to run and also lightning-fast.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 作为额外的好处，我们创建的这个函数不会查询任何实际数据。也就是说，它完全可以免费运行且速度极快。
- en: Even generating dates from 1820 to current took just 1 second.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 即使是生成从 1820 年到当前的日期也只花费了 1 秒钟。
- en: '[PRE6]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/c7d80a639a0da513b9572e15c5424439.png)![](../Images/4c37eeecc4001fb33124b51b18b25ff0.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c7d80a639a0da513b9572e15c5424439.png)![](../Images/4c37eeecc4001fb33124b51b18b25ff0.png)'
- en: Photo by [Benjamin Davies](https://unsplash.com/it/@bendavisual?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 由 [Benjamin Davies](https://unsplash.com/it/@bendavisual?utm_source=medium&utm_medium=referral)
    提供的照片，出处 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Accessing my TVF
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 访问我的 TVF
- en: To save yourself some time, you don’t have to create this TVF in your project;
    you can use the public version, which exists in the BigFunctions open-source project.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 为了节省时间，你不必在你的项目中创建这个 TVF；你可以使用公共版本，它存在于 BigFunctions 开源项目中。
- en: To add BigFunctions to your project, you can use the explorer add feature and
    then ‘*star a project by name*’ as shown below.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 要将 BigFunctions 添加到你的项目中，你可以使用探索器的添加功能，然后按照下面的示例‘*按名称标记项目*’。
- en: '![](../Images/6a1503b64ee92d1afdc931b6968cd42d.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6a1503b64ee92d1afdc931b6968cd42d.png)'
- en: These functions are available in every region, and inside each dataset, you
    will find **generate_dates** under **Routines**. Give the code below a try!
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数在每个区域都可以使用，在每个数据集中，你会在 **Routines** 下找到 **generate_dates**。试试下面的代码吧！
- en: '[PRE7]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: More details about BigFunctions can be found [here](https://unytics.io/bigfunctions/),
    which is chocked full of great custom functions, some of which even use Python
    to run all kinds of neat stuff. Check it out if you use BigQuery in your day-to-day
    role.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于 BigFunctions 的详细信息可以在 [这里](https://unytics.io/bigfunctions/) 找到，这里充满了很棒的自定义函数，其中一些甚至使用
    Python 来运行各种有趣的功能。如果你在日常工作中使用 BigQuery，可以查看一下。
- en: That brings this article to an end. If you have any questions, please feel free
    to comment, and I’ll answer as soon as possible.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 这篇文章就此结束。如果你有任何问题，请随时评论，我会尽快回答。
- en: I frequently write articles for BigQuery and Looker Studio. If you’re interested,
    consider following me here on Medium for more!
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我经常为 BigQuery 和 Looker Studio 撰写文章。如果你感兴趣，可以考虑在 Medium 上关注我以获取更多内容！
- en: '*All images, unless otherwise noted, are by the author.*'
  id: totrans-78
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*所有图像，除非另有说明，均由作者提供。*'
- en: '***Stay classy folks!'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '***保持优雅，大家！'
- en: Tom***
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: Tom***
