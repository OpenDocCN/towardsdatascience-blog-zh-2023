- en: 'The Power of Bayesian Causal Inference: A Comparative Analysis of Libraries
    to Reveal Hidden Causality in Your Dataset.'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 贝叶斯因果推断的力量：揭示数据集中隐藏因果关系的库的比较分析。
- en: 原文：[https://towardsdatascience.com/the-power-of-bayesian-causal-inference-a-comparative-analysis-of-libraries-to-reveal-hidden-d91e8306e25e](https://towardsdatascience.com/the-power-of-bayesian-causal-inference-a-comparative-analysis-of-libraries-to-reveal-hidden-d91e8306e25e)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/the-power-of-bayesian-causal-inference-a-comparative-analysis-of-libraries-to-reveal-hidden-d91e8306e25e](https://towardsdatascience.com/the-power-of-bayesian-causal-inference-a-comparative-analysis-of-libraries-to-reveal-hidden-d91e8306e25e)
- en: 'Reveal the hidden causal variables in your data set by using the best-suited
    Bayesian causal inference library: a comparison with hands-on examples of five
    popular libraries.'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用最适合的贝叶斯因果推断库揭示数据集中的隐藏因果变量：与五个流行库的实操示例进行比较。
- en: '[](https://erdogant.medium.com/?source=post_page-----d91e8306e25e--------------------------------)[![Erdogan
    Taskesen](../Images/8e62cdae0502687710d8ae4bbcd8966e.png)](https://erdogant.medium.com/?source=post_page-----d91e8306e25e--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d91e8306e25e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d91e8306e25e--------------------------------)
    [Erdogan Taskesen](https://erdogant.medium.com/?source=post_page-----d91e8306e25e--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://erdogant.medium.com/?source=post_page-----d91e8306e25e--------------------------------)[![Erdogan
    Taskesen](../Images/8e62cdae0502687710d8ae4bbcd8966e.png)](https://erdogant.medium.com/?source=post_page-----d91e8306e25e--------------------------------)[](https://towardsdatascience.com/?source=post_page-----d91e8306e25e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----d91e8306e25e--------------------------------)
    [Erdogan Taskesen](https://erdogant.medium.com/?source=post_page-----d91e8306e25e--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d91e8306e25e--------------------------------)
    ·20 min read·May 22, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----d91e8306e25e--------------------------------)
    ·阅读时间20分钟·2023年5月22日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/9da363a089f70e5f5c65add731ae7d3b.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9da363a089f70e5f5c65add731ae7d3b.png)'
- en: Photo by [Alexander Schimmeck](https://unsplash.com/@alschim?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/Aohf8gqa7Zc?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Alexander Schimmeck](https://unsplash.com/@alschim?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    提供，来源于 [Unsplash](https://unsplash.com/photos/Aohf8gqa7Zc?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
- en: Understanding the causal effect of variables in systems or processes is very
    valuable. There are a number of Python libraries that can assist in determining
    causal relationships. ***I will compare five popular causal inference libraries
    in their functionality, ease of use, and flexibility.*** Each is accompanied by
    hands-on examples. The included libraries are [*Bnlearn*](https://github.com/erdogant/bnlearn)*,*
    [*Pgmpy*](https://github.com/pgmpy/pgmpy)*,* [*CausalNex*](https://github.com/quantumblacklabs/causalnex)*,*
    [*DoWhy*](https://github.com/py-why/dowhy),and [*CausalImpact*](https://github.com/jamalsenouci/causalimpact/).
    By the end of this blog, you will have a better understanding of these five causal
    inference libraries and determine which fits best for your use case.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 理解系统或过程中的变量因果效应非常有价值。现在有许多Python库可以帮助确定因果关系。***我将比较五个流行的因果推断库在功能、易用性和灵活性方面的表现。***
    每个库都配有实际操作示例。包含的库有 [*Bnlearn*](https://github.com/erdogant/bnlearn)*,* [*Pgmpy*](https://github.com/pgmpy/pgmpy)*,*
    [*CausalNex*](https://github.com/quantumblacklabs/causalnex)*,* [*DoWhy*](https://github.com/py-why/dowhy)，和
    [*CausalImpact*](https://github.com/jamalsenouci/causalimpact/)。通过阅读本文，你将更好地理解这五个因果推断库，并确定哪个最适合你的使用场景。
- en: Background
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 背景
- en: Causal inference is to determine the cause-and-effect relationships between
    variables in a process or system. In general, we can separate variables into two
    distinct groups; ***driver and passenger variables***. Driver variables are those
    that *directly* influence the outcome or dependent variable, while passenger variables
    are those that do not have a direct effect but are correlated/ associated with
    the outcome variable.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 因果推断是确定过程或系统中变量之间的因果关系。一般来说，我们可以将变量分为两类；***驱动变量和乘客变量***。驱动变量是那些*直接*影响结果或因变量的变量，而乘客变量则是那些没有直接影响但与结果变量相关联的变量。
- en: The identification of ***driver variables*** can be crucial in projects such
    as predictive maintenance or in the security domain. The driver variables can
    help explain the causal relationship between the predictor and outcome variables.
    In contradiction, ***passenger variables*** do not have a direct effect on the
    outcome variable. However, they can still be useful as they can provide additional
    variation and thus understanding of the context in which the data was collected.
    *For example, if we find that engine failures are strongly correlated with location,
    we might suspect that there is an underlying driver variable that is causing the
    failure for a specific location.* Causal inference helps to make better decisions
    by identifying which variables to manipulate and which variables to monitor.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 识别***驱动变量***在预测维护或安全领域等项目中可能至关重要。驱动变量有助于解释预测变量和结果变量之间的因果关系。相反，***乘客变量***对结果变量没有直接影响。然而，它们仍然可以有用，因为它们可以提供额外的变化，从而理解数据收集的背景。*例如，如果我们发现引擎故障与地点有强相关性，我们可能会怀疑有一个潜在的驱动变量导致特定地点的故障。*
    因果推断有助于通过识别要操作的变量和要监控的变量来做出更好的决策。
- en: In causal inference, we not only seek to determine whether an event would occur,
    but also to understand the mechanism by which it occurs.
  id: totrans-12
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在因果推断中，我们不仅寻求确定一个事件是否会发生，还要理解它发生的机制。
- en: 'However, causal inference analysis is a challenging task because it requires
    separating the effects of multiple variables, accounting for confounding variables,
    and dealing with uncertainty. Luckily, Python has several libraries that can help
    data scientists perform causal inference. In this article, I will compare the
    five most popular causal inference libraries in Python: [***Bnlearn***](https://github.com/erdogant/bnlearn)***,***
    [***Pgmpy***](https://github.com/pgmpy/pgmpy)***,*** [***DoWhy***](https://github.com/py-why/dowhy)***,***
    [***CausalNex***](https://github.com/quantumblacklabs/causalnex)***, and*** [***CausalImpact***](https://github.com/jamalsenouci/causalimpact/).'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，因果推断分析是一项具有挑战性的任务，因为它需要分离多个变量的影响，考虑混杂变量，并处理不确定性。幸运的是，Python有几个库可以帮助数据科学家进行因果推断。在这篇文章中，我将比较Python中五个最受欢迎的因果推断库：[***Bnlearn***](https://github.com/erdogant/bnlearn)***、***
    [***Pgmpy***](https://github.com/pgmpy/pgmpy)***、*** [***DoWhy***](https://github.com/py-why/dowhy)***、***
    [***CausalNex***](https://github.com/quantumblacklabs/causalnex)*** 和 ***[CausalImpact](https://github.com/jamalsenouci/causalimpact/)***。
- en: '*If you find this article about Bayesian causal learning helpful, you are welcome
    to* [*follow me*](http://erdogant.medium.com/) *because I write more about Bayesian
    statistics. If you are thinking of taking a Medium membership, you can support
    my work a little bit by using my* [*referral link*](https://medium.com/@erdogant/membership)*.
    It is the same price as a coffee for which you can read every month unlimited
    articles.*'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你觉得这篇关于贝叶斯因果学习的文章有帮助，欢迎* [*关注我*](http://erdogant.medium.com/) *，因为我会写更多关于贝叶斯统计的内容。如果你考虑订阅Medium会员，可以通过我的*
    [*推荐链接*](https://medium.com/@erdogant/membership) *来稍微支持我的工作。这和买一杯咖啡的价格一样，你可以每月无限阅读所有文章。*'
- en: Comparison of Five Causal Inference Libraries.
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 五个因果推断库的比较。
- en: Let’s go through each of the five packages and examine their functionality in
    terms of problem-solving capacity. To compare the libraries most consistently,
    I will use the same data set (when possible) across the five libraries, namely
    the *Census Income data* *set.* This multivariate data set contains 14 nodes,
    with 48842 instances (or samples) [1]. Each node contains two or more possible
    states and can be used to estimate whether having a graduate degree is important
    for making more than 50k annually. We can load the data set using the *Bnlearn
    library*.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐一检查这五个软件包，并从解决问题的能力角度审视它们的功能。为了最一致地比较这些库，我将尽可能使用相同的数据集，即*普查收入数据* *集*。这个多变量数据集包含14个节点，具有48842个实例（或样本）[1]。每个节点包含两个或更多可能的状态，可以用来估计拥有研究生学位是否对年收入超过50k很重要。我们可以使用*Bnlearn库*加载数据集。
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Library 1: Bnlearn for Python.'
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 库1：Python的Bnlearn。
- en: '***Bnlearn*** is a Python package that is suited for creating and analyzing
    Bayesian Networks, for *discrete, mixed, and continuous data sets* [2, 3]. It
    is designed to be ease-of-use and contains the most-wanted Bayesian pipelines
    for causal learning in terms of structure learning, parameter learning, and making
    inferences. There is a range of statistical tests that can be used by simply specifying
    the parameters during initialization. *Bnlearn* also contains various helper functions
    to transform data sets, derive the topological ordering of the (entire) graph,
    comparison of two graphs, and to make various insightful plots, among others.
    *More details about structure learning with bnlearn can be found here:*'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '***Bnlearn*** 是一个适用于创建和分析贝叶斯网络的 Python 包，适用于*离散、混合和连续数据集*[2, 3]。它设计为易于使用，并包含了最受欢迎的贝叶斯管道，用于因果学习，包括结构学习、参数学习和推断。可以通过简单指定参数进行初始化来使用一系列统计测试。*Bnlearn*
    还包含各种辅助函数，用于转换数据集、推导（整个）图的拓扑排序、比较两个图以及制作各种有洞察力的图表等。*有关使用 bnlearn 进行结构学习的更多详细信息请参见这里：*'
- en: '[](/a-step-by-step-guide-in-detecting-causal-relationships-using-bayesian-structure-learning-in-python-c20c6b31cee5?source=post_page-----d91e8306e25e--------------------------------)
    [## A Step-by-Step Guide in detecting causal relationships using Bayesian Structure
    Learning in Python.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/a-step-by-step-guide-in-detecting-causal-relationships-using-bayesian-structure-learning-in-python-c20c6b31cee5?source=post_page-----d91e8306e25e--------------------------------)
    [## 使用贝叶斯结构学习在 Python 中检测因果关系的逐步指南。'
- en: The starters guide to effectively determine causality across variables.
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 入门指南，用于有效确定变量间的因果关系。
- en: towardsdatascience.com](/a-step-by-step-guide-in-detecting-causal-relationships-using-bayesian-structure-learning-in-python-c20c6b31cee5?source=post_page-----d91e8306e25e--------------------------------)
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/a-step-by-step-guide-in-detecting-causal-relationships-using-bayesian-structure-learning-in-python-c20c6b31cee5?source=post_page-----d91e8306e25e--------------------------------)'
- en: One of the great functionalities of *Bnlearn* is that it can learn the causal
    structure based on only the data set. There are six algorithms implemented for
    this task; `hillclimbsearch, exhaustivesearch, constraintsearch, chow-liu, naivebayes
    and TAN` and can be combined with scoring types `BIC, K2, BDEU`. Some methods
    require setting a root node, such as Tree-augmented Naive Bayes (`TAN`), which
    are recommended in case you know the outcome (or target) value. This will also
    dramatically lower the computational burden and is recommended in case you have
    many features. In addition, with the `independence test`, spurious edges can be
    easily pruned from the model. In the following example, I will use the `hillclimbsearch`
    method with scoring type `BIC` for structure learning. In this example, we will
    *not* define a target value but let the *Bnlearn* decide the entire causal structure
    purely on the data itself.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '*Bnlearn* 的一个重要功能是它可以仅基于数据集学习因果结构。为此任务实现了六种算法；`hillclimbsearch, exhaustivesearch,
    constraintsearch, chow-liu, naivebayes 和 TAN`，并且可以与评分类型 `BIC, K2, BDEU` 结合使用。一些方法需要设置根节点，例如增强型朴素贝叶斯（`TAN`），如果你知道结果（或目标）值的话，推荐使用。这也会显著降低计算负担，并且在特征很多的情况下推荐使用。此外，通过
    `independence test`，可以轻松地从模型中修剪掉虚假边缘。在下面的示例中，我将使用 `hillclimbsearch` 方法和评分类型 `BIC`
    进行结构学习。在这个示例中，我们*不会*定义目标值，而是让*Bnlearn* 完全基于数据自身决定整个因果结构。'
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: To determine the Directed Acyclic Graph (DAG), we need to specify the input
    data frame as shown in the code section above. After fitting a model, the results
    are stored in the `model` dictionary, which can be used for further analysis.
    An interactive plot of the causal structure is shown in Figure 1.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要确定有向无环图（DAG），我们需要指定输入数据框，如上面的代码部分所示。拟合模型后，结果存储在 `model` 字典中，可以用于进一步分析。因果结构的交互式图表如图
    1 所示。
- en: '![](../Images/6c470eca0ffd89d1bd84e07a043ab375.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6c470eca0ffd89d1bd84e07a043ab375.png)'
- en: Figure 1\. Interactive plot for structure learning using Bnlearn for the *Census
    Income data* *set. In case the CPDs are learned, the tooltip will describe the
    estimated CPDs (image by author).*
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1\. 使用 Bnlearn 进行结构学习的*人口普查收入数据* *集的交互式图表。如果学习到 CPD，工具提示将描述估计的 CPD（图片由作者提供）。*
- en: With the learned DAG (Figure 1), we can estimate the conditional probability
    distributions (CPDs, see code section below), and make inferences using *do-calculus*.
    *Or in other words, we can start asking questions to our data.*
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 通过学习到的有向无环图（图 1），我们可以估计条件概率分布（CPD，见下方代码部分），并使用*do-calculus* 进行推断。*换句话说，我们可以开始向数据提出问题。*
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**Question 1:** What is the probability of having a salary > 50k given the
    education is Doctorate: `P(salary | education=Doctorate)`'
  id: totrans-31
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**问题 1：** 在教育为博士的情况下，薪水>50k的概率是多少：`P(salary | education=Doctorate)`'
- en: Intuitively, we may expect a high probability because the education is “*doctorate”*.
    Let’s find out the posterior probability from our Bayesian model. In the code
    section below we derived a probability of `P=0.7093`. This confirms that when
    education is *doctorate,* there is a higher probability of having a salary of
    >50K compared to *not having a doctorate education*.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 从直观上看，我们可能会期望高概率，因为教育是“*博士*”。让我们从贝叶斯模型中找出后验概率。在下面的代码部分，我们得出了`P=0.7093`的概率。这证实了当教育为*博士*时，与*没有博士教育*相比，薪水>50K的概率更高。
- en: '[PRE4]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Let's now ask the question of whether lower education also results in a lower
    probability of having a salary of >50K. We can easily change education in `HS-grad`
    and again ask the question.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们询问一下较低教育是否也会导致薪水>50K的概率较低。我们可以轻松地将教育更改为`HS-grad`，然后再次提出这个问题。
- en: '**Question 2:** What is the probability of having a salary > 50k given the
    education is HS-grad: `*P(salary | education=*HS-grad*)*`'
  id: totrans-35
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**问题 2：** 在教育为HS-grad的情况下，薪水>50k的概率是多少：`*P(salary | education=*HS-grad*)*`'
- en: This results in a posterior probability of `P=0.1615` . Studying is thus very
    beneficial for a higher salary according to this data set. However, be aware that
    we did not use any other constraints as evidence that can influence the outcome.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这导致了`P=0.1615`的后验概率。根据这个数据集，学习对获得更高薪水非常有利。然而，请注意，我们没有使用任何其他约束作为可能影响结果的证据。
- en: '[PRE5]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Until this part, we used a single variable but all variables in the DAG can
    be used for *evidence*. Let’s make another more complex query.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 直到这一部分，我们使用了单一变量，但DAG中的所有变量都可以用作*证据*。让我们做另一个更复杂的查询。
- en: '**Question 3:** What is the probability of being in a certain workclass given
    that education is Doctorate and the marital status is never-married. `P(workclass|
    education=Doctorate, marital-status=never-married)`.'
  id: totrans-39
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**问题 3：** 在教育为博士且婚姻状态为未婚的情况下，属于某个工作类别的概率是多少：`P(workclass| education=Doctorate,
    marital-status=never-married)`。'
- en: 'In the code section below can be seen that this returns the probability for
    each *workclass*, with *workclass* being `private` having the highest probability:
    `P=0.5639`.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码部分可以看到，这返回了每个*工作类别*的概率，其中*工作类别*为`private`的概率最高：`P=0.5639`。
- en: '[PRE6]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Summary
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: '***Input data***: The input data can be discrete, continuous, or mixed data
    sets.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***输入数据***：输入数据可以是离散的、连续的或混合的数据集。'
- en: '**Advantages:** Contains the most wanted Bayesian pipelines for structure learning,
    parameter learning, and making inferences using *do-calculus*. Plots can be easily
    created and can be CPDs explored. Great for starters and experts that do not want
    to build the pipeline themselves.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**优势：** 包含最受欢迎的贝叶斯管道，用于结构学习、参数学习和使用*do-calculus*进行推断。可以轻松创建图表并探索CPD。适合初学者和不想自己构建管道的专家。'
- en: 'Library 2: Pgmpy.'
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 库 2：Pgmpy。
- en: '***Pgmpy*** is a library that provides tools for Probabilistic Graphical Models.
    It contains implementations of various statistical approaches for Structure Learning,
    Parameter Estimation, Approximations (Sampling Based), and Exact inference. An
    advantage is that the core functions are low-level statistical functions which
    makes it flexible to build your own causal blocks. Although this is great, it
    requires a good knowledge of Bayesian modeling and can therefore be more difficult
    than libraries such as *Bnlearn* when you are just starting with Bayesian modeling.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '***Pgmpy*** 是一个提供概率图模型工具的库。它包含了各种统计方法的实现，用于结构学习、参数估计、近似（基于采样）和精确推断。一个优点是核心函数是低级统计函数，这使得构建自己的因果块更加灵活。虽然这很棒，但它需要对贝叶斯建模有很好的了解，因此相比于像*Bnlearn*这样的库，对于刚开始学习贝叶斯建模的人来说可能更困难。'
- en: In terms of functionality, the same results can be derived as shown with *Bnlearn*
    because some of the core functionalities of *Pgmpy* are also utilized in *Bnlearn.*
    However, in *pgmpy* you do need to build the entire pipeline yourself, including
    the transformation steps required for the data, but also the collection of the
    results and making the plots. In the code section below I will briefly demonstrate
    how to learn the causal structure with the `hillclimbsearch` estimator and scoring
    method `BIC`. Note that different estimators may require very different steps
    in the pipeline.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在功能方面，可以得到与 *Bnlearn* 相同的结果，因为 *Bnlearn* 也利用了 *Pgmpy* 的一些核心功能。然而，在 *pgmpy* 中，你确实需要自己构建整个管道，包括数据所需的转换步骤，以及结果的收集和绘图。在下面的代码部分，我将简要演示如何使用
    `hillclimbsearch` 估计器和评分方法 `BIC` 学习因果结构。请注意，不同的估计器可能在管道中需要非常不同的步骤。
- en: '[PRE7]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: To make inferences on the data using do-calculus, we first need to estimate
    the CPDs as shown in the code section below.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 do-calculus 对数据进行推断时，我们首先需要估计 CPDs，如下方代码部分所示。
- en: '[PRE8]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Summary
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: '***Input data***: The input data set must be discrete.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***输入数据***：输入数据集必须是离散的。'
- en: '**Advantages:** Contains fundamental building blocks that can be used to create
    your own Bayesian pipelines.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**优点：** 包含可以用来创建自己贝叶斯管道的基础构建模块。'
- en: '**Disadvantage**: Requires good knowledge of Bayesian modeling.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缺点：** 需要对贝叶斯建模有良好的了解。'
- en: 'Library 3: CausalNex.'
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 库 3：CausalNex。
- en: '***CausalNex*** is a Python library for learning causal models from data, identifying
    causal pathways, and estimating causal effects [5]. *Causalnex* supports *only*
    discrete distributions, whereas continuous features, or features with a large
    number of categories, should be discretized prior to fitting the Bayesian Network.
    It is described that: “*models typically fit poorly in case many variables are
    used”*. However, helper functionalities are provided to reduce the cardinality
    of categorical features. Let’s examine the possibilities of Causalnex using the
    *Census Income data* *set.* First, we need to make the data numeric, since this
    is what the underlying NOTEARS [7] algorithm expects. We can do this by label
    encoding non-numeric variables (see code section).'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '***CausalNex*** 是一个用于从数据中学习因果模型、识别因果路径和估计因果效应的 Python 库 [5]。*Causalnex* 仅支持离散分布，而连续特征或具有大量类别的特征应在拟合贝叶斯网络之前进行离散化。描述中提到：“*如果使用了许多变量，模型通常会拟合较差*”。然而，提供了辅助功能以减少分类特征的基数。让我们使用
    *Census Income data* *set* 来检查 Causalnex 的可能性。首先，我们需要将数据转换为数值，因为这正是底层 NOTEARS
    [7] 算法所期望的。我们可以通过标签编码非数值变量来实现（见代码部分）。'
- en: '[PRE9]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: We can now apply the NOTEARS algorithm to learn the structure and visualize
    the causal model using the plot function. We need to apply thresholding to remove
    weaker edges and prevent having a fully connected graph. In addition, to avoid
    spurious edges, constraints on the edges can be included.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以应用 NOTEARS 算法来学习结构并使用绘图功能可视化因果模型。我们需要应用阈值处理以移除较弱的边缘，并防止图形完全连通。此外，为了避免伪边缘，可以对边缘施加约束。
- en: '[PRE11]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![](../Images/f0f8756492f19856ada7ee479124df78.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f0f8756492f19856ada7ee479124df78.png)'
- en: Figure 3\. Structure learning using Causalnex for the *Census Income data* *set.
    Labels without a node contained weaker edges that are removed using thresholding.
    (image by author).*
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3\. 使用 Causalnex 对 *Census Income data* *set* 进行结构学习。没有节点的标签包含较弱的边缘，这些边缘通过阈值处理被移除。（图像作者提供。）
- en: With the derived structure we can learn the conditional probability distribution
    (CPDs) and start making queries. However, there are a few additional steps to
    take, i.e., reducing the cardinality of categorical features, and discretizing
    numeric features. Note that we also need to specify the node states in the form
    of a dictionary to prevent manually converting numeric values into categorical
    labels. Although each step is important, for the sake of simplicity I will skip
    these steps to avoid many lines of code. For full details, I recommend reading
    the documentation manual [here](https://causalnex.readthedocs.io/en/latest/03_tutorial/01_first_tutorial.html).
    It also demonstrates how to use a few helper methods to make discretization easier.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 使用推导出的结构，我们可以学习条件概率分布（CPDs）并开始进行查询。然而，还需要进行一些额外的步骤，即减少分类特征的基数，并离散化数值特征。请注意，我们还需要以字典形式指定节点状态，以防止手动将数值转换为分类标签。尽管每个步骤都很重要，但为了简化起见，我将跳过这些步骤以避免代码行数过多。有关详细信息，建议阅读文档手册[这里](https://causalnex.readthedocs.io/en/latest/03_tutorial/01_first_tutorial.html)。它还演示了如何使用一些辅助方法来简化离散化过程。
- en: '[PRE12]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Summary
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 摘要
- en: '***Input data***: The input data set must be discrete. Continuous data is not
    supported.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***输入数据***：输入数据集必须是离散的。连续数据不支持。'
- en: '**Advantages:** Causal networks can be learned and inferences on the data can
    be performed.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**优点**：可以学习因果网络并对数据进行推断。'
- en: '**Disadvantage**: Requires intensive pre-processing steps but helper functionalities
    are provided to reduce the cardinality of categorical features.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缺点**：需要大量预处理步骤，但提供了辅助功能以减少分类特征的基数。'
- en: 'Library 4: DoWhy.'
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 库4：DoWhy。
- en: '***DoWhy***is a Python library for causal inference that supports explicit
    modeling and testing of causal assumptions [2, 3]. *In comparison to Bnlearn and
    Pgmpy, in the DoWhy library, it is obligatory to define both the outcome variable
    and the treatment variable.* The treatment variable is the variable of interest
    that you want to investigate the causal effect of, and the outcome variable is
    the variable that you want to measure the effect on. In addition, it is also recommended
    to provide a DAG, aka the causal relationships between the nodes. To create the
    causal graph for your dataset, you either need domain knowledge or you can connect
    each variable to the *target* and *treatment* variable. Note that the latter is
    automatically performed when no DAG is given. For this data set, I do not include
    a known structure and let *DoWhy* create edges between all variables to the *outcome*
    and *treatment* variable. The first code section shows the required pre-processing
    steps, and the second code section the creation of the causal model.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '***DoWhy***是一个用于因果推断的Python库，支持因果假设的明确建模和测试[2, 3]。*与Bnlearn和Pgmpy相比，在DoWhy库中，必须定义结果变量和处理变量。*
    处理变量是你想研究因果效应的变量，而结果变量是你想测量其效果的变量。此外，建议提供一个DAG，即节点之间的因果关系。要为你的数据集创建因果图，你需要领域知识，或者可以将每个变量连接到*目标*和*处理*变量。注意，如果没有提供DAG，后者会自动执行。对于这个数据集，我不包括已知的结构，而是让*DoWhy*在所有变量之间创建到*结果*和*处理*变量的边。第一个代码部分显示了所需的预处理步骤，第二个代码部分则是因果模型的创建。'
- en: '[PRE13]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![](../Images/235a7cef946f478e4c750264e1dde7a0.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/235a7cef946f478e4c750264e1dde7a0.png)'
- en: Figure 2\. DoWhy created this DAG to model the *Census Income data* *set with
    the outcome variable being “salary”, and the treatment variable “Education” (image
    by author).*
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图2。DoWhy创建了这个DAG来建模*人口普查收入数据* *集，其中结果变量为“salary”，处理变量为“Education”（图像由作者提供）。*
- en: As you may have noticed in the code section above, the treatment variable must
    be binary (set to Doctorate), and all categorical variables need to be encoded
    into numeric values. In the code section below we will be using the properties
    of the causal graph to identify the causal effect. The result may not be surprising.
    It shows that having a `Doctorate` *increases* the chances of a good `salary`.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在上面的代码部分中可能已经注意到的，处理变量必须是二元的（设置为Doctorate），并且所有分类变量需要编码为数值。在下面的代码部分，我们将使用因果图的属性来识别因果效应。结果可能不会令人惊讶。它表明，拥有`Doctorate`
    *增加*了获得良好`salary`的机会。
- en: '[PRE15]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Summary
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 摘要
- en: '***Input data***: Outcome variable, and Treatment variable. It is highly recommended
    to provide a causal DAG.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***输入数据***：结果变量和处理变量。强烈建议提供一个因果DAG。'
- en: '***Requirements:*** The treatment variable must be binary, and all categorical
    variables need to be encoded into numeric values.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***要求：*** 处理变量必须是二元的，所有分类变量需要编码成数值。'
- en: '**(dis)advantage:** The output contains many details which can be beneficial
    but make it also complicated to understand. Can not learn the causal DAG from
    the data.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**（优）缺点：** 输出包含许多细节，这些细节可能有利但也使理解变得复杂。无法从数据中学习因果 DAG。'
- en: '**Library 5: CausalImpact.**'
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**库 5：CausalImpact**。'
- en: '***CausalImpact***is a Python package for causal inference using Bayesian structural
    ***time-series models*** [4]. The main goal is to infer the expected effect of
    a given intervention by analyzing differences between expected and observed time
    series data, such as Program Evaluation, or Treatment Effect Analysis. It makes
    the assumption that the response variable can be precisely modeled by linear regression.
    However, it must not be affected by the intervention that took place. For instance,
    if a company wants to infer what impact a given marketing campaign will have on
    its “*revenue*”, then its daily “*visits*” cannot be used as a covariate as the
    total visits might be affected by the campaign. In the following example, we will
    create 100 observations with a response variable `y` and a predictor `x1`. Note
    that in real use cases, we will have many more predictor variables. For demonstration,
    the *intervention effect* is created by changing the response variable by 10 units
    after timepoint 71.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '***CausalImpact*** 是一个用于使用贝叶斯结构 ***时间序列模型*** 进行因果推断的 Python 包 [4]。其主要目标是通过分析期望和观察到的时间序列数据之间的差异来推断给定干预的预期效果，如程序评估或处理效果分析。它假设响应变量可以通过线性回归精确建模。然而，响应变量不能受到已发生干预的影响。例如，如果一家公司想要推断某个营销活动对其“*收入*”的影响，则其每日“*访问量*”不能作为协变量使用，因为总访问量可能会受到该活动的影响。在以下示例中，我们将创建
    100 个观测值，其中响应变量为 `y`，预测变量为 `x1`。请注意，在实际应用中，我们会有更多的预测变量。为了演示，*干预效果* 通过在时间点 71 之后将响应变量更改
    10 个单位来创建。'
- en: To estimate the causal effect, we first need to specify the pre-intervention
    period and post-intervention period. With the `run` function, we fit a time series
    model using MLE (default), and estimate the causal effect.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 为了估计因果效应，我们首先需要指定干预前期和干预后期。使用 `run` 函数，我们利用 MLE（默认）拟合时间序列模型，并估计因果效应。
- en: '[PRE17]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The Average column describes the average time during the post-intervention period.
    The Cumulative column sums up individual time points, which is a useful perspective
    if the response variable represents a flow quantity, such as queries, clicks,
    visits, installs, sales, or revenue. We see that in this example, there is a 100%
    probability of causal effect with a P-value of 0 which is correct because we included
    this in the data.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 平均列描述了处理后期的平均时间。累积列汇总了各个时间点的值，这在响应变量表示流量数量时（如查询、点击、访问、安装、销售或收入）是一个有用的视角。我们看到，在这个例子中，由于我们在数据中包含了这一点，因此因果效应的概率为
    100%，P 值为 0，这是正确的。
- en: '![](../Images/011842c2ac16833a2efa718c358531f8.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/011842c2ac16833a2efa718c358531f8.png)'
- en: Figure 4\. CausalImpact plot (image by author).
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4\. CausalImpact 图（作者提供的图片）。
- en: 'In the plot (Figure 4), we can see three panels that can be described as follows:
    In Panel 1, we can see the data along with a counterfactual prediction specifically
    for the post-treatment period. In the second panel, is shown the difference between
    the observed data and the counterfactual predictions. This difference represents
    the estimated pointwise causal effect, as determined by the model. The bottom
    panel depicts the cumulative effect of the intervention by aggregating the pointwise
    contributions from the previous panel. It is important to note that the validity
    of these inferences relies on the assumption that the covariates were not influenced
    by the intervention themselves. Additionally, the model assumes that the relationship
    established between the covariates and the treated time series during the pre-period
    remains consistent throughout the post-period.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在图（图 4）中，我们可以看到三个面板，具体描述如下：在面板 1 中，我们可以看到数据以及专门针对处理后期的反事实预测。在第二个面板中，展示了观察数据与反事实预测之间的差异。这一差异表示了由模型确定的逐点因果效应。底部面板通过汇总前一个面板中的逐点贡献来描绘干预的累积效果。需要注意的是，这些推断的有效性依赖于协变量没有受到干预本身的影响。此外，模型假设在预期期间建立的协变量与处理时间序列之间的关系在整个后期保持一致。
- en: Summary
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: '***Input data***: Time series data.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***输入数据：*** 时间序列数据。'
- en: '***Requirements:*** The pre-intervention period and post-intervention period
    needs to be specified.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***要求：*** 需要指定干预前和干预后的时间段。'
- en: '**Advantage:** Can determine the causal effects on time-series data.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**优点：** 可以确定时间序列数据上的因果效应。'
- en: Overall summary between the libraries.
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图书馆之间的整体总结。
- en: 'We have seen five libraries for learning causality, each with its own (dis)advantages
    and their focus to solve certain problems. A summary is as follows:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到五个用于学习因果关系的库，每个库都有其自身的优缺点和解决特定问题的重点。总结如下：
- en: The ***BnLearn***library is suited in use cases where you have discrete, mixed,
    or continuous data sets and need to derive the causal DAG from the data (structure
    learning), do parameter learning (CPD estimations), or in cases where you aim
    to make inferences (*do-calculus*). The advantages are that many pre- and post-processing
    steps are solved within the pipelines which makes it less error-prone. It allows
    categorical (string) labels as input and can remove spurious edges using statistical
    tests (independence test). In addition, edges or nodes can also be whitelisted
    or blacklisted. Note that it is not possible to entirely customize the modeling
    part as most processing steps are performed within the pipelines, which may give
    less control to the user.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '***BnLearn*** 库适用于具有离散、混合或连续数据集的情况，需要从数据中推导因果 DAG（结构学习）、进行参数学习（CPD 估计），或在你希望进行推理（*do-calculus*）的情况下。其优点在于许多预处理和后处理步骤都在管道中解决，从而减少了出错的可能性。它允许将类别（字符串）标签作为输入，并且可以使用统计测试（独立性测试）去除虚假的边。此外，还可以将边或节点列入白名单或黑名单。请注意，由于大多数处理步骤是在管道中执行的，因此无法完全自定义建模部分，这可能会降低用户的控制权。'
- en: The ***Pgmpy*** library contains low-level statistical functions to create and
    combine various methods for structure learning, parameter learning, and inferences.
    It is flexible in usage but requires good knowledge of Bayesian modeling. Note
    that the *Bnlearn* library utilizes some functions from *Pgmpy* and has therefore
    overlapping functionality. Or in other words, if you aim to create customized
    pipelines, it is recommended to use *Pgmpy.* Otherwise, I recommend using *bnlearn.*
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '***Pgmpy*** 库包含低级统计函数，用于创建和组合各种结构学习、参数学习和推理方法。它在使用上比较灵活，但需要对贝叶斯建模有良好的知识。请注意，*Bnlearn*
    库利用了来自 *Pgmpy* 的一些函数，因此功能有重叠。换句话说，如果你打算创建自定义管道，建议使用 *Pgmpy*。否则，我推荐使用 *bnlearn*。'
- en: The ***CausalNex*** library can be used to derive the causal DAG from the data,
    and make inferences. Note that it only works on discrete data sets. After detecting
    a causal DAG, edges can be removed by thresholding. Unfortunately, it can not
    work with categorical labels and needs to be converted into numerical values.
    In addition, various intermediate preprocessing steps are required. For example,
    reducing the cardinality of categorical features, describing numeric features,
    and specifying all of the states that each node can take in the form of a dictionary.
    Although this gives more control to the user in the modeling part, the extra modeling
    adds a layer of complexity.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '***CausalNex*** 库可以用来从数据中推导因果 DAG，并进行推理。请注意，它仅适用于离散数据集。在检测到因果 DAG 后，可以通过阈值来移除边。不幸的是，它无法处理类别标签，需要将其转换为数值。此外，还需要进行各种中间预处理步骤。例如，减少类别特征的基数，描述数值特征，并以字典形式指定每个节点可以采取的所有状态。尽管这给用户提供了更多的建模控制，但额外的建模增加了一层复杂性。'
- en: The ***DoWhy*** approach is ideal in cases where you want to estimate the causal
    effect if you have an *outcome variable* together with a *treatment* variable.
    Ideal for use cases where you need A/B testing, such as determining the causes
    of hotel booking cancellations. The *outcome* can be set as *“cancelation”*, and
    *treatment* can be set as *“different room assigned”.* Another use case could
    be to estimate the effect of a member rewards program. Note that this library
    is not designed to learn the causal DAG from the data. However, it does need a
    causal DAG as input for the model which you need to provide manually.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '***DoWhy*** 方法在你希望估计因果效应时是理想的，如果你有一个 *结果变量* 和一个 *处理* 变量。这非常适用于 A/B 测试的使用场景，例如确定酒店预订取消的原因。*结果*
    可以设置为 *“取消”*，*处理* 可以设置为 *“分配不同的房间”*。另一个使用场景可能是估计会员奖励计划的效果。请注意，该库并不旨在从数据中学习因果 DAG。然而，它确实需要一个作为模型输入的因果
    DAG，你需要手动提供。'
- en: '***CausalImpact***is a Python package for causal inference using Bayesian structural
    ***time-series models.*** Although it also computes causality, it is not comparable
    in functionality to the other libraries as it does not intend to create a causal
    DAG or make inferences on the data. The goal is to infer the expected effect of
    a given intervention by analyzing differences between expected and observed time
    series data, such as Program Evaluation, or Treatment Effect Analysis.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '***CausalImpact*** 是一个用于因果推断的 Python 包，使用贝叶斯结构***时间序列模型***。虽然它也计算因果关系，但其功能与其他库不可比拟，因为它不打算创建因果
    DAG 或对数据进行推断。目标是通过分析预期和观察到的时间序列数据之间的差异，推断给定干预的预期效果，例如程序评估或治疗效果分析。'
- en: Final words.
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最后的话。
- en: 'Modeling your data for causality can be challenging for many reasons. It starts
    with choosing the right library that matches your specific use case for which
    we have seen a comparison of five popular causal inference libraries: *Bnlearn,
    Pgmpy, CausalNex, DoWhy, and CausalImpact*. Each library has its own (dis)advantages
    and is best suited for certain use cases. The libraries are compared in their
    functionalities, capabilities, and interpretability of the results using the same
    data set. Only for *CausalImpact,* a different data set is used as it could only
    model continuous values and required time series data.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 对数据进行因果建模可能因多种原因而具有挑战性。首先需要选择合适的库，这些库与您的具体使用案例匹配。我们已经对五个流行的因果推断库进行了比较：*Bnlearn、Pgmpy、CausalNex、DoWhy
    和 CausalImpact*。每个库都有其自身的优缺点，并且最适合某些特定的使用案例。我们使用相同的数据集比较了这些库的功能、能力和结果的可解释性。只有*
    CausalImpact*使用了不同的数据集，因为它只能建模连续值并且需要时间序列数据。
- en: A grouping on functionality would cluster ***Bnlearn****,* ***Pgmpy****, and*
    ***CausalNex*** as they contain functionalities for structure learning, parameter
    learning, and making inferences. The second group is ***DoWhy*** and ***CausalImpact***
    which are designed to measure the causal effect of *treatment* variable(s) on
    an outcome variable *Y*, controlling for a set of features *X*. Besides the five
    causal libraries described here, more libraries are worth looking at, such as
    *EconML*, *Pyro*, and *CausalML*, which fall in the second group (causal effect
    of *treatment* variable on an *outcome* variable*)*.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 功能分组会将***Bnlearn***、***Pgmpy*** 和 ***CausalNex*** 聚类在一起，因为它们包含结构学习、参数学习和推断的功能。第二组是***DoWhy***
    和 ***CausalImpact***，它们旨在测量*处理*变量对结果变量*Y*的因果效应，同时控制一组特征*X*。除了这里描述的五个因果库，还有更多库值得关注，如*EconML*、*Pyro*
    和 *CausalML*，它们属于第二组（*处理*变量对*结果*变量的因果效应）。
- en: '*Be Safe. Stay Frosty.*'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '*保重。保持冷静。*'
- en: '***Cheers E.***'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '***干杯 E.***'
- en: '*Disclaimer: I am the developer of the Python bnlearn library. Whatever your
    decision for a causal library is, make sure you fully understand the modeling
    part and can interpret the results.*'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '*免责声明：我是 Python bnlearn 库的开发者。不管你对因果库的决定是什么，确保你完全理解建模部分并能够解释结果。*'
- en: '*If you found this article about Bayesian causal learning helpful, you are
    welcome to* [*follow me*](http://erdogant.medium.com/) *because I write more about
    Bayesian statistics. If you are thinking of taking a Medium membership, you can
    support my work a little bit by using my* [*referral link*](https://medium.com/@erdogant/membership)*.
    It is the same price as a coffee for which you can read every month unlimited
    articles.*'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你觉得这篇关于贝叶斯因果学习的文章有帮助，欢迎* [*关注我*](http://erdogant.medium.com/) *，因为我会写更多关于贝叶斯统计的文章。如果你考虑加入
    Medium 会员，你可以通过使用我的* [*推荐链接*](https://medium.com/@erdogant/membership)* 来稍微支持一下我的工作。价格和一杯咖啡相同，你可以每月无限阅读文章。*'
- en: Software
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 软件
- en: Bnlearn [Colab Notebook examples](https://erdogant.github.io/distfit/pages/html/Documentation.html#colab-notebook)
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bnlearn [Colab Notebook 示例](https://erdogant.github.io/distfit/pages/html/Documentation.html#colab-notebook)
- en: '[Comparison PDF file between eight Bayesian causality libraries.](https://erdogant.gumroad.com/l/Comparison_python_libraries_bayesian_causality?layout=profile)'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[八个贝叶斯因果库之间的比较 PDF 文件。](https://erdogant.gumroad.com/l/Comparison_python_libraries_bayesian_causality?layout=profile)'
- en: Let’s connect!
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 让我们联系吧！
- en: '[Let’s connect on LinkedIn](https://www.linkedin.com/in/erdogant/)'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在 LinkedIn 上连接](https://www.linkedin.com/in/erdogant/)'
- en: '[Follow me on Github](https://github.com/erdogant)'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在 Github 上关注我](https://github.com/erdogant)'
- en: '[Follow me on Medium](https://erdogant.medium.com/)'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在 Medium 上关注我](https://erdogant.medium.com/)'
- en: Related work with Bayesian Statistics
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与贝叶斯统计相关的工作
- en: '[](/a-step-by-step-guide-in-detecting-causal-relationships-using-bayesian-structure-learning-in-python-c20c6b31cee5?source=post_page-----d91e8306e25e--------------------------------)
    [## A Step-by-Step Guide in detecting causal relationships using Bayesian Structure
    Learning in Python.'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/a-step-by-step-guide-in-detecting-causal-relationships-using-bayesian-structure-learning-in-python-c20c6b31cee5?source=post_page-----d91e8306e25e--------------------------------)
    [## 逐步指南：使用贝叶斯结构学习检测因果关系'
- en: The starters guide to effectively determine causality across variables.
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 初学者指南，用于有效地确定变量之间的因果关系。
- en: towardsdatascience.com](/a-step-by-step-guide-in-detecting-causal-relationships-using-bayesian-structure-learning-in-python-c20c6b31cee5?source=post_page-----d91e8306e25e--------------------------------)
    [](/a-step-by-step-guide-in-designing-knowledge-driven-models-using-bayesian-theorem-7433f6fd64be?source=post_page-----d91e8306e25e--------------------------------)
    [## A step-by-step guide in designing knowledge-driven models using Bayesian theorem.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/a-step-by-step-guide-in-detecting-causal-relationships-using-bayesian-structure-learning-in-python-c20c6b31cee5?source=post_page-----d91e8306e25e--------------------------------)
    [](/a-step-by-step-guide-in-designing-knowledge-driven-models-using-bayesian-theorem-7433f6fd64be?source=post_page-----d91e8306e25e--------------------------------)
    [## 逐步指南：使用贝叶斯定理设计知识驱动模型
- en: In case you don’t have data but there is experts knowledge. A starters guide
    to convert knowledge into computer-aided…
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如果你没有数据但有专家知识。初学者指南将知识转化为计算机辅助…
- en: towardsdatascience.com](/a-step-by-step-guide-in-designing-knowledge-driven-models-using-bayesian-theorem-7433f6fd64be?source=post_page-----d91e8306e25e--------------------------------)
    [](/a-guide-to-find-the-best-boosting-model-using-bayesian-hyperparameter-tuning-but-without-c98b6a1ecac8?source=post_page-----d91e8306e25e--------------------------------)
    [## A Guide to Find the Best Boosting Model using Bayesian Hyperparameter Tuning
    but without…
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/a-step-by-step-guide-in-designing-knowledge-driven-models-using-bayesian-theorem-7433f6fd64be?source=post_page-----d91e8306e25e--------------------------------)
    [](/a-guide-to-find-the-best-boosting-model-using-bayesian-hyperparameter-tuning-but-without-c98b6a1ecac8?source=post_page-----d91e8306e25e--------------------------------)
    [## 寻找最佳增强模型的指南：使用贝叶斯超参数调优，但不包括…
- en: Boosted decision tree algorithms may outperform other models but overfitting
    is a real danger. Fit your model using the…
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 增强型决策树算法可能会优于其他模型，但过拟合是一个现实的危险。使用…
- en: towardsdatascience.com](/a-guide-to-find-the-best-boosting-model-using-bayesian-hyperparameter-tuning-but-without-c98b6a1ecac8?source=post_page-----d91e8306e25e--------------------------------)
    [](https://erdogant.medium.com/hands-on-guide-for-hyperparameter-tuning-with-bayesian-optimization-for-classification-models-2002224bfa3d?source=post_page-----d91e8306e25e--------------------------------)
    [## Hands-on Guide for Hyperparameter Tuning with Bayesian Optimization for Classification
    Models.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/a-guide-to-find-the-best-boosting-model-using-bayesian-hyperparameter-tuning-but-without-c98b6a1ecac8?source=post_page-----d91e8306e25e--------------------------------)
    [](https://erdogant.medium.com/hands-on-guide-for-hyperparameter-tuning-with-bayesian-optimization-for-classification-models-2002224bfa3d?source=post_page-----d91e8306e25e--------------------------------)
    [## 分类模型的贝叶斯优化超参数调优实践指南
- en: Learn how to split the data, optimize hyperparameters, prevent overtraining,
    select the best model, and create…
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 学习如何拆分数据、优化超参数、预防过拟合、选择最佳模型，并创建…
- en: erdogant.medium.com](https://erdogant.medium.com/hands-on-guide-for-hyperparameter-tuning-with-bayesian-optimization-for-classification-models-2002224bfa3d?source=post_page-----d91e8306e25e--------------------------------)
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: erdogant.medium.com](https://erdogant.medium.com/hands-on-guide-for-hyperparameter-tuning-with-bayesian-optimization-for-classification-models-2002224bfa3d?source=post_page-----d91e8306e25e--------------------------------)
- en: References
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: Census Income. (1996). UCI Machine Learning Repository. [https://doi.org/10.24432/C5S595](https://doi.org/10.24432/C5S595).
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Census Income. (1996). UCI机器学习库。 [https://doi.org/10.24432/C5S595](https://doi.org/10.24432/C5S595)。
- en: Taskesen E, [A Step-by-Step Guide in detecting causal relationships using Bayesian
    Structure Learning in Python](/a-step-by-step-guide-in-detecting-causal-relationships-using-bayesian-structure-learning-in-python-c20c6b31cee5),
    Medium, 2021
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Taskesen E, [使用Python中的贝叶斯结构学习检测因果关系的逐步指南](/a-step-by-step-guide-in-detecting-causal-relationships-using-bayesian-structure-learning-in-python-c20c6b31cee5)，Medium，2021
- en: Taskesen, E. (2020). [*Learning Bayesian Networks with the bnlearn Python Package.*](https://erdogant.github.io/bnlearn)
    (Version 0.3.22) [Computer software].
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Taskesen, E. (2020). [*使用bnlearn Python包学习贝叶斯网络。*](https://erdogant.github.io/bnlearn)
    (版本 0.3.22) [计算机软件]。
- en: 'Dowhy: [https://www.pywhy.org/dowhy/v0.8/getting_started/intro.html](https://www.pywhy.org/dowhy/v0.8/getting_started/intro.html)'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Dowhy: [https://www.pywhy.org/dowhy/v0.8/getting_started/intro.html](https://www.pywhy.org/dowhy/v0.8/getting_started/intro.html)'
- en: 'Amit Sharma, Emre Kiciman. DoWhy: An End-to-End Library for Causal Inference.
    2020\. [https://arxiv.org/abs/2011.04216](https://arxiv.org/abs/2011.04216)'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Amit Sharma, Emre Kiciman. DoWhy: 一种用于因果推断的端到端库。2020年。[https://arxiv.org/abs/2011.04216](https://arxiv.org/abs/2011.04216)'
- en: Kay H. et al, [*Inferring causal impact using Bayesian structural time-series
    models*](https://research.google/pubs/pub41854/), 2015, Annals of Applied Statistics
    (247–274, vol9)
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Kay H. 等，[*使用贝叶斯结构时间序列模型推断因果影响*](https://research.google/pubs/pub41854/)，2015年，《应用统计年鉴》（第9卷，第247–274页）
- en: 'Xun Zheng et al, [*DAGs with NO TEARS: Continuous Optimization for Structure
    Learning*](https://proceedings.neurips.cc/paper_files/paper/2018/file/e347c51419ffb23ca3fd5050202f9c3d-Paper.pdf),
    32nd Conference on Neural Information Processing Systems (NeurIPS 2018), Montréal,
    Canada.'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Xun Zheng 等，[*无泪的DAG: 结构学习的连续优化*](https://proceedings.neurips.cc/paper_files/paper/2018/file/e347c51419ffb23ca3fd5050202f9c3d-Paper.pdf)，第32届神经信息处理系统会议（NeurIPS
    2018），加拿大蒙特利尔。'
- en: AI4I 2020 [Predictive Maintenance Dataset.](https://archive-beta.ics.uci.edu/dataset/601/ai4i+2020+predictive+maintenance+dataset)
    (2020). UCI Machine Learning Repository.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AI4I 2020 [预测维护数据集](https://archive-beta.ics.uci.edu/dataset/601/ai4i+2020+predictive+maintenance+dataset)（2020）。UCI机器学习库。
