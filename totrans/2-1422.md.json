["```py\ndef find_coefficients(x, y):\n    n = len(x)\n    w1 = (n * x @ y - x.sum() * y.sum()) / (n * (x**2).sum() - x.sum()**2)\n    w0 = (y.sum() - w1 * x.sum()) / n\n    return w0, w1\n```", "```py\nx = np.array([1.55, 1.60, 1.63, 1.68, 1.70, 1.73, 1.75, 1.78, 1.80, 1.83])\ny = np.array([55.84, 58.57, 59.93, 63.11, 64.47, 66.28, 68.10, 69.92, 72.19, 74.46])\n```", "```py\ndef plot_data(x, y):\n    plt.scatter(x, y)\n    plt.xlabel('Height (m)')\n    plt.ylabel('Weight (kg)')\n    plt.grid()\n```", "```py\nplot_data(x, y)\n```", "```py\nw0, w1 = find_coefficients(x, y)\nprint('w0 =', w0)\nprint('w1 =', w1)\n```", "```py\nw0 = -47.94681481481781\nw1 = 66.41279461279636\n```", "```py\ndef plot_regression_line(x, y, w0, w1):\n    p_x = np.array([x.min(), x.max()])\n    p_y = w0 + w1 * p_x\n    plt.plot(p_x, p_y, 'r')\n```", "```py\nplot_data(x, y)\nplot_regression_line(x, y, w0, w1)\n```", "```py\ny_pred = w0 + w1 * x\n```", "```py\nfrom sklearn.metrics import mean_squared_error as MSE\n\nrmse = np.sqrt(MSE(y, y_pred))\nprint(f'RMSE: {rmse:.4f}')\n```", "```py\nRMSE: 0.5600\n```", "```py\nfrom sklearn.metrics import r2_score\n\nscore = r2_score(y, y_pred)\nprint(f'R2 score: {score:.4f}')\n```", "```py\nR2 score: 0.9905\n```"]