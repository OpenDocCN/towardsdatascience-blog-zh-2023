- en: 'Simulation 106: Modeling Information Diffusion and Social Contagion with Networks'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/simulation-106-modeling-information-diffusion-and-social-contagion-with-networks-7c1184004889](https://towardsdatascience.com/simulation-106-modeling-information-diffusion-and-social-contagion-with-networks-7c1184004889)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A graph-based approach to modeling the spread of information through social
    networks
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@ln8378?source=post_page-----7c1184004889--------------------------------)[![Le
    Nguyen](../Images/05289b40bb528d5ba2a0ee00d1a75990.png)](https://medium.com/@ln8378?source=post_page-----7c1184004889--------------------------------)[](https://towardsdatascience.com/?source=post_page-----7c1184004889--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----7c1184004889--------------------------------)
    [Le Nguyen](https://medium.com/@ln8378?source=post_page-----7c1184004889--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----7c1184004889--------------------------------)
    ·12 min read·Sep 7, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: Social media has completely revolutionized the information landscape. We are
    more connected to each other than we have every been in human history. News stories
    can reach us in an instant and ideas spread across the globe in days, but how
    does this work? How does information spread and can we model it? In this article,
    we will cover the theory behind information spread and use networks to model it.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/99fff460d87a864fcaeb53722e614a3e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1: [Artistic representation of our world connected by networks](https://commons.wikimedia.org/wiki/File:Social_Network_Visualization.png).
    Licensed under [Creative Commons](https://creativecommons.org/licenses/by-sa/4.0/deed.en).'
  prefs: []
  type: TYPE_NORMAL
- en: 'In this article we will:'
  prefs: []
  type: TYPE_NORMAL
- en: Learn the basics of graph and network theory
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Overview information diffusion and social contagion
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Build a computational framework to simulate the spread of ideas
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Graphs and Networks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What are Graphs and Networks?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A [graph](https://en.wikipedia.org/wiki/Graph_(discrete_mathematics)) is a mathematical
    structure that shows the relation between objects. It does this by representing
    each object as a *vertex* that is connected to other vertices with *edges* that
    show the relationship between them.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/794c503643701ecbd9926f22c12061f7.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2: [Example of a graph with 7 edges and 6 vertices](https://commons.wikimedia.org/wiki/File:6n-graf.svg)'
  prefs: []
  type: TYPE_NORMAL
- en: There are many [types of graphs](https://en.wikipedia.org/wiki/Graph_(discrete_mathematics)#Types_of_graphs)
    including [weighted graphs](https://en.wikipedia.org/wiki/Graph_(discrete_mathematics)#Weighted_graph)
    where all of the edges are given values to not just show relation but strength
    of relation and [directed graphs](https://en.wikipedia.org/wiki/Graph_(discrete_mathematics)#Directed_graph)
    where the edges have a direction to them to show directed relationships. The varying
    types of graphs make them a powerful tool to show the relationship between entities
    which we will discuss.
  prefs: []
  type: TYPE_NORMAL
- en: Conceptually, graphs and [networks](https://en.wikipedia.org/wiki/Network_theory)
    are identical and in most cases the terms can be used interchangeably. Though,
    by convention, *graph* is used to refer to the abstract mathematical concept and
    *network* is used for applied contexts. For instance, we used the terms “computer
    network” and “social network” even though computer or social graph would convey
    the same thing. For our purposes we will say that a network is an applied graph
    and the only difference in terminology we need is referring to *vertices* as *nodes*
    instead.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e92971f9f88596abfa2c09904f83e6a5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3: [Example of a network with specified features](https://commons.wikimedia.org/wiki/File:NetworkGraph.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Graph Theory
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Graph theory](https://en.wikipedia.org/wiki/Graph_theory#:~:text=In%20mathematics%2C%20graph%20theory%20is,also%20called%20links%20or%20lines).)
    is the branch of mathematics that studies graphs (and networks) and describes
    the properties of graphs as well as their applications. We will not be covering
    the entire field of graph theory in this article, but we will look at the highlights
    relevant to the spread of information.'
  prefs: []
  type: TYPE_NORMAL
- en: The spread of information can be modeled with a [flow graph](https://en.wikipedia.org/wiki/Flow_graph_(mathematics)),
    or in our case a [flow network](https://en.wikipedia.org/wiki/Flow_network). A
    flow network is a type of weighted [directed graph](https://en.wikipedia.org/wiki/Graph_(discrete_mathematics)#Directed_graph)
    that shows the transfer or transport of something within a structure. This could
    be water through pipes, data through a computer network, or, in our case, information
    in a social network.
  prefs: []
  type: TYPE_NORMAL
- en: A flow network has all the components of any network (nodes, edges, weights),
    but now they are specific representations of the flow of something in a given
    structure. In our case, *nodes* areindividualsin a social network who are connected
    to other individuals with *edges* that are *weight*ed by the degree of contact
    they have. Flow networks can also be built with a *source,* or the origin of the
    information, along with a *sink,* where the flow of information terminates and
    a *capacity* or maximum amount of information that can go through the network.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a4f953ccdecf9512ee9fa632d9379781.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4: [Example of a social flow network](https://commons.wikimedia.org/wiki/File:Moreno_Sociogram_2nd_Grade.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 4 is a social flow network that represents a classroom. Each student
    (and the teacher) is a node in this network that is connected to others in the
    classroom with directed edges showing who they have contact with. In this case,
    the edges are not weighted but the nodes are sized by their [centrality](https://en.wikipedia.org/wiki/Centrality).
  prefs: []
  type: TYPE_NORMAL
- en: There are many measures of graph/network centrality but overall centrality gives
    the importance of a node inside of a network. A few examples are [degree centrality](https://en.wikipedia.org/wiki/Centrality#Degree_centrality)
    which is defined as the number of edges connected to a node and [closeness centrality](https://en.wikipedia.org/wiki/Centrality#Closeness_centrality)
    which is the number of short paths a node has to all other nodes. In the case
    of figure 4, we see nodes sized be degree centrality, with the teacher (SL) being
    the most central node in the network with the highest degree centrality.
  prefs: []
  type: TYPE_NORMAL
- en: With a basic understanding of graphs and networks, we can go over the next piece
    we need; information diffusion and social contagion.
  prefs: []
  type: TYPE_NORMAL
- en: Information Diffusion and Social Contagion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Information diffusion](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7123536/)
    refers to the spreading of information through a population or system. For a population,
    information spreads by members interacting in various ways such as in person,
    online, in writing, through speech or recording. Information diffusion is use
    to describe the spread of rumors, effectiveness of an advertising campaign, and
    any other of information through a population.'
  prefs: []
  type: TYPE_NORMAL
- en: We can’t talk about information diffusion without also talking about [social
    contagion](https://en.wikipedia.org/wiki/Social_contagion). It looks at *how*
    information is spread through a population in the information diffusion process
    and the factors that influence it. Social contagion factors in social connections,
    media coverage and cultural norms among other things to study how fast or how
    contagious information is, how much of a population information spreads to, and
    the resistance members of a population have to new information. Social contagion
    can be used to study phenomenon like the rapid spread of a viral video, propagation
    of conspiracy theories, and adoption of new trends.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/911a9bda09ff88be9428281f0aaaaca2.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5: [Illustration of information diffusion and social contagion](https://commons.wikimedia.org/wiki/File:%D7%94%D7%93%D7%91%D7%A7%D7%94.jpg).
    We can see information spreading from a single person and propagating or diffusing
    through a larger population. The arrows in this diagram indicate a contagion process
    of this information.'
  prefs: []
  type: TYPE_NORMAL
- en: Diffusion and Contagion Models
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Information diffusion and social contagion are both well researched topics that
    have theoretical models developed for them. We will first look at a simple information
    diffusion model known as the [two-step flow model](https://en.wikipedia.org/wiki/Two-step_flow_of_communication).
  prefs: []
  type: TYPE_NORMAL
- en: The two-step flow model starts with mass media of some kind such as a news network
    or a large company putting out an idea that is then picked up by opinion leaders/highly
    influential members of a community. Then, members of the community will adopted
    the idea from opinion leaders they are closest to. This two step process of media
    to opinion leader then leader to their community assumes most people don’t adopt
    ideas straight from mass media; they need a source that is closer to them to share
    the idea for them to adopt it.
  prefs: []
  type: TYPE_NORMAL
- en: For example, say there’s a new phone releases and there are advertisements for
    it everywhere. The general population will likely be jaded to the advertising
    or overwhelmed with advertisements from competing phone companies and it will
    not convince them to purchase the new phone. Now, if they hear about the new phone
    from a closer source, say a favorite celebrity, influencer, coworker, or family
    member, that will be much more persuasive. We can see a visualization of this
    two-step flow process in figure 6.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/27f52cfaa0cd709666e020f594d525df.png)'
  prefs: []
  type: TYPE_IMG
- en: 'figure 6: [The two-step flow model of information diffusion](https://scholarworks.rit.edu/cgi/viewcontent.cgi?article=12588&context=theses)'
  prefs: []
  type: TYPE_NORMAL
- en: Before diving into simulation, we will look at a model for social contagion.
    Social contagion treats the spread of information like a disease (hence “contagion”)
    that spreads through contact with the information. Thus, the basic social contagion
    model draws from disease modeling and resembles a SIR curve like we saw [previously
    when we modeled disease spread](https://medium.com/@ln8378/simulation-102-agent-based-disease-modeling-17307f2de2f3).
  prefs: []
  type: TYPE_NORMAL
- en: This curve can be seen in figure 7 which is a line modeling of what we saw in
    figure 5\. First, an idea is held by a individual or small group who spread it
    to the people closest to them. Then those people spread it to the people closest
    to them spreading the information outward into the population. This iterative
    process will spread the idea exponentially at first until it hits a critical mass
    after going mainstream which will then spread the idea linearly. This growth will
    start to taper off once it reaches everyone and runs out of people to spread through.
    This is the same behavior we see with diseases that spread through contact, so
    it makes sense that information spreads in a similar manner.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b452d241f4257006c442f12e8c1bc3a7.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7: [Contagion curve of information](https://scholarworks.rit.edu/cgi/viewcontent.cgi?article=12588&context=theses)'
  prefs: []
  type: TYPE_NORMAL
- en: We can now combine our understanding of networks and how ideas spread to create
    a computational framework to simulate the spread of information and ideas.
  prefs: []
  type: TYPE_NORMAL
- en: Simulation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For this simulation we will be using a python class based approach similar to
    the one we created in our [agent-based disease model](https://medium.com/@ln8378/simulation-102-agent-based-disease-modeling-17307f2de2f3).
    We will also be using the [NetworkX](https://networkx.org/) library to build networks
    for us. We first start by creating a network class and adding some initial methods.
    We need a method to create an initial source of information in our network as
    well as add new nodes (people) and directed edges (connections). The code to do
    this is given below and is visualized in figure 8.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/15d721a029da296b9ca56fc54c838008.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8: Initial methods of network class.'
  prefs: []
  type: TYPE_NORMAL
- en: We can now initialize a source on information, add more people to our network
    and add connections between the source and the people in the network as well as
    connect people to other people. We need to add more functionality to our network
    class before we can run our full simulation though. We need a way to keep track
    of what people in the network the initial idea has reached and have a mechanism
    that propagates said idea.
  prefs: []
  type: TYPE_NORMAL
- en: This is done by adding features to our nodes, which is easily handled by the
    functionality of NetworkX. We give each person or node in our graph the feature
    “informed” that is a boolean value that tells us if the idea has reached them
    or not. Spreading an idea through our network will set more and more nodes to
    having the value 1 (true) for their *informed* feature.
  prefs: []
  type: TYPE_NORMAL
- en: With the *informed* feature added to our nodes we can also create a method to
    propagate and idea through our network. We do this by going through the list of
    edges in our network (provided by the NetworkX object) and seeing which nodes
    are connected to each other. If an informed node is connected to an uninformed
    node (*informed* feature value is 0 or false) then it will propagate its idea
    to the uninformed node; setting its *informed* feature value to 1.
  prefs: []
  type: TYPE_NORMAL
- en: To make this simulation more realistic, we will make the propagation mechanism
    probabilistic because not all interactions between people share ideas or the specific
    idea propagating through the graph. We will do this by weighting the edge values
    (giving the connections between nodes a strength value) and then rolling a random
    number against this edge value to see if we propagate the idea between the two
    nodes or not. For this simulation we will weight the edges by the degree centrality
    of the node they are coming out of, so more central, well connected nodes in the
    network will have a higher probability of propagating the idea.
  prefs: []
  type: TYPE_NORMAL
- en: Additionally this random roll against the edge value will be governed by a *resistance*
    value. The *resistance* value is something we see in social contagion theory that
    determines how resistant a person is to accepting or spreading a new idea. The
    lower the *resistance* value of an individual in our network, the more likely
    they are to roll favorably against the edge value and become informed.
  prefs: []
  type: TYPE_NORMAL
- en: Adding the *informed* feature and the propagation method is shown in the code
    below as well as visualized in figure 8.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/1835c01e9f0794f8bbbcaff5528c67a0.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8: Nodes are now binary colored in green (true) and red (false) to show
    their informed feature value. Edges are also weighted by degree centrality.'
  prefs: []
  type: TYPE_NORMAL
- en: With the methods we have constructed we can create a social network. Our network
    starts with a source of information and then we add 100 nodes (people to the network).
    Next we add in connections between people by randomly selecting 2 nodes out of
    the network and creating a directed edge between them. This is done 300 times,
    meaning on average every person is connected to 3 other people. Figure 9 shows
    the result of doing this with our initial social network where the idea is contained
    at the source.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/671599630678d6c3a23e2c3a3c240896.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9: Initial social network'
  prefs: []
  type: TYPE_NORMAL
- en: Now it is time to propagate the idea from our source through the rest of the
    network. We will simply add our propagation method into a loop and let it spread
    and idea through our network for a given number of time steps. Here we will propagate
    the idea for 50 time steps and give everyone a uniform resistance value of 0.3.
  prefs: []
  type: TYPE_NORMAL
- en: An animation of this spread is shown in figure 10 and the final network in figure
    11.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/80422660814f9ce50cd9383f90783101.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10: Animation of idea propagation'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/df154e9b51ea8c0811db1272cd12f2ee.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 11: Final network'
  prefs: []
  type: TYPE_NORMAL
- en: Through our simulation, we can keep track of how the idea spread through out
    network by saving the number of informed people per time step. This can be seen
    in figure 12, which very closes resembles the theoretical curve we would expect
    from social contagion theory in figure 7\. We see the classic S-shaped curve where
    the idea picks up exponentially, has a linear phase, and then flattens out at
    the end as our network becomes saturated with the idea. Looking closely at our
    network, there are a few nodes that have no edges pointing to them, only pointing
    out of them which means they flow information into the network but the reverse
    is not true. These nodes will never become informed so our total population will
    never fully be exposed to the source idea.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/486d7bc4bb8e6bd15d6a68a9f86a75d3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12: Contagion curve'
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this article we learned about graphs and networks as mathematical structures
    that represent relations between objects. We also learned about the spread of
    ideas by going over information diffusion and social contagion theory. We then
    combined our understanding of networks and the spread of ideas to simulate the
    spread of an idea through a social network.
  prefs: []
  type: TYPE_NORMAL
- en: Full Code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: All images used in this article were created by the author, taken from the author’s
    own work, or fall under [the creative commons license](https://creativecommons.org/licenses/).
  prefs: []
  type: TYPE_NORMAL
- en: Nguyen, Le, “A Graph-Based Approach to Studying the Spread of Radical Online
    Sentiment” (2023). Thesis. Rochester Institute of Technology. Accessed from
  prefs: []
  type: TYPE_NORMAL
- en: https://scholarworks.rit.edu/theses/11453
  prefs: []
  type: TYPE_NORMAL
