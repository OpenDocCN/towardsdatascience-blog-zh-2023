["```py\n# load packages\nlibrary(tidyverse)\nlibrary(hrbrthemes)\n\n# load data\nemployee_data <- mock_data \n\n# alternatively you could use something like employee_data <- read.csv(\"input.csv\")\n```", "```py\ndf <- employee_data %>%\n  mutate(Hire.Date = as.Date(Hire.Date, format = \"%m/%d/%Y\"),\n         Termination.Date = as.Date(Termination.Date, format = \"%m/%d/%Y\"))\n```", "```py\ndf <- employee_data %>%\n  mutate(Hire.Date = as.Date(Hire.Date, format = \"%m/%d/%Y\"),\n         Termination.Date = as.Date(Termination.Date, format = \"%m/%d/%Y\")) %>%\n  mutate(Termination.Date = if_else(is.na(Termination.Date), \n         as.Date(\"2100-12-31\"), Termination.Date))\n```", "```py\nmonth_seq <- seq(from = min(df$hire_date),\n                 to = max(df$hire_date),\n                 by = \"1 month\")\n```", "```py\nheadcount_data <- data.frame(Date = month_seq)\n```", "```py\nheadcount_data <- headcount_data %>%\n  mutate(Active.Employees = sapply(Date, function(x) {\n           sum(x >= df$hire_date & (is.na(df$termination_date) | x < df$termination_date))\n         })) \n```", "```py\nheadcount_data <- headcount_data %>% \n  mutate(year = as.integer(year(Date))\n```", "```py\nheadcount_data <- headcount_data %>%\n  mutate(context = case_when(\n    year == 2018 ~ \"Context for 2018\",\n    year == 2019 ~ \"Context for 2019\",\n    year == 2020 ~ \"COVID-19\",\n    TRUE ~ \"No additional context\"\n))\n```", "```py\nheadcount_data %>%\n  ggplot(aes(x = Date, y = Active.Employees)) +\n  geom_area()\n```", "```py\n# annotations\nannotation_ending_year <- max(headcount_data$year)\nannotation_ending_headcount <- max(headcount_data$Active.Employees)\n\n# titles\nlabels_title <- \"Our Headcount Story\"\nlabels_subtitle <- last(headcount_data$context)\n```", "```py\nheadcount_data %>%\n  ggplot(aes(x = Date, y = Active.Employees)) +\n  geom_area() +\n  labs(title = labels_title,\n       subtitle = labels_subtitle) +\n  annotate(\"text\", \n           x = max(headcount_data$Date),\n           y = max(headcount_data$Active.Employees),\n           label = annotation_ending_headcount,\n           hjust = -.25)\n```", "```py\n# create a vector for unique years\nyears <- unique(headcount_data$year)\n\n# empty list for plots to go to\nplots <- list()\n```", "```py\n# loop over the each year in years and create plots\nfor (i in 2:length(years)) {\n  # create subset adding one year at a time\n  subset_df <- headcount_data %>% \n    filter(year <= years[i])\n\n  # calculations for annotation\n  annotation_ending_year <- max(subset_df$Date)\n\n  annotation_ending_active <- subset_df %>% \n    filter(Date == ending_year) %>% \n    select(Active.Employees) %>% \n    as.numeric()\n\n  # create a plot (p) using the subset\n  p <- subset_df %>%\n    ggplot(aes(x = Date, y = Active.Employees)) +\n    geom_area() +\n    labs(title = labels_title,\n         subtitle = labels_subtitle) +\n    annotate(\"text\", \n             x = max(subset_df$Date),\n             y = max(subset_df$Active.Employees),\n             label = ending_active,\n             hjust = -.25)\n\n  # save each plot \n  ggsave(p, \n         file = paste(\"example_plot_\", years[i], \".png\"), \n         height = 6, width = 8, units = \"in\")\n}\n```", "```py\nannotate(\"rect\", xmin = , xmax = , ymin = , ymax = )\n```", "```py\nannotate(\"rect\", \n          xmin = floor_date(max(subset_df$Date), \"year\"), \n          xmax = ceiling_date(max(subset_df$Date), \"year\")\n```", "```py\n annotate(\"rect\",\n             xmin = floor_date(max(subset_df$Date), \"year\"),\n             xmax = ceiling_date(max(subset_df$Date), \"year\"),\n             ymin = -Inf, ymax = ending_active + 300)\n```", "```py\n annotate(\"rect\",\n             xmin = floor_date(max(subset_df$Date), \"year\"),\n             xmax = ceiling_date(max(subset_df$Date), \"year\"),\n             ymin = -Inf, ymax = ending_active + 300,\n             alpha = .1, color = \"gray\", fill = \"gray\")\n```", "```py\nscale_x_date(breaks = \"1 year\", date_labels = \"%Y\",\n                 expand = c(.1,.1),\n                 limits = c(min(headcount_data$Date), max(headcount_data$Date)))\n```", "```py\n# loop over the each year in years and create plots\nfor (i in 2:length(years)) {\n  # create subset adding one year at a time\n  subset_df <- headcount_data %>%\n    filter(year <= years[i])\n\n  # calculations for annotation\n  ending_year <- max(subset_df$Date)\n\n  ending_active <- subset_df %>%\n    filter(Date == ending_year) %>%\n    select(Active.Employees) %>%\n    as.numeric()\n\n  # create a plot (p) using the subset\n  p <- subset_df %>%\n    ggplot(aes(x = Date, y = Active.Employees)) +\n    geom_area(fill = \"#457b9d\") +\n    labs(title = \"Our Headcount Story\",\n         subtitle = paste(years[i],\":\", last(subset_df$context)),\n         x = \"\", y = \"\") +\n    scale_x_date(breaks = \"1 year\", date_labels = \"%Y\",\n                 expand = c(.1,.1),\n                 limits = c(min(headcount_data$Date), max(headcount_data$Date))) +\n    theme_classic(base_family = \"Arial\") +\n    theme(plot.title = element_text(size = 24, face = \"bold\", color = \"#457b9d\"),\n          plot.subtitle = element_text(size = 18),\n          panel.grid.major = element_blank(),\n          panel.grid.minor = element_blank(),\n          axis.ticks.y = element_blank(),\n          axis.text.y = element_blank(),\n          axis.line.y = element_blank()) +\n    annotate(\"text\", x = ending_year,\n             y = ending_active, label = ending_active,\n             vjust = -1.25, hjust = -.25, color = \"#457b9d\") +\n    annotate(\"rect\",\n             xmin = floor_date(max(subset_df$Date), \"year\"),\n             xmax = ceiling_date(max(subset_df$Date), \"year\"),\n             ymin = -Inf, ymax = ending_active + 300,\n             alpha = .1, color = \"gray\", fill = \"gray\")\n\n  # save each plot\n  ggsave(p,\n         file = paste(\"example_plot_final\", years[i], \".png\"),\n         height = 6, width = 8, units = \"in\")\n\n}\n```"]