- en: Implementing Deep Learning Using fastai — Image Classification
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/implementing-deep-learning-using-fastai-eff2fa05449e](https://towardsdatascience.com/implementing-deep-learning-using-fastai-eff2fa05449e)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Get a head-start in deep learning quickly and easily without wading through
    all the details
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://weimenglee.medium.com/?source=post_page-----eff2fa05449e--------------------------------)[![Wei-Meng
    Lee](../Images/10fc13e8a6858502d6a7b89fcaad7a10.png)](https://weimenglee.medium.com/?source=post_page-----eff2fa05449e--------------------------------)[](https://towardsdatascience.com/?source=post_page-----eff2fa05449e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----eff2fa05449e--------------------------------)
    [Wei-Meng Lee](https://weimenglee.medium.com/?source=post_page-----eff2fa05449e--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----eff2fa05449e--------------------------------)
    ·9 min read·Apr 19, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/86fd1ac707e69199d29b754c8a87c85b.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [NASA](https://unsplash.com/@nasa?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: 'In recent years, Artificial Intelligence (AI) has garnered a lot of attention,
    especially in the recent months with the launch of ChatGPT. One of the foundational
    technologies in AI is *deep learning*. Deep learning is a machine learning technique
    where you use neural networks to learn the relationships between the features
    and labels of a dataset. A neural network typically looks like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/73331b93543e8d1466f6b645d021cd5f.png)'
  prefs: []
  type: TYPE_IMG
- en: All images by author
  prefs: []
  type: TYPE_NORMAL
- en: The individual circles above are called *neurons* (or *nodes*). Each neuron
    has a value called a **bias** and each neuron is connected to one another. Each
    connection has a value called the **weight**. The leftmost layer of neurons is
    the **input layer** (where you send in your data to be predicted) while the rightmost
    layer is call the **output layer** (where the predicted result is)**.** A neural
    network can have as many (or few) hidden layers as necessary.
  prefs: []
  type: TYPE_NORMAL
- en: 'Learning deep learning requires you to know a few things:'
  prefs: []
  type: TYPE_NORMAL
- en: What are layers, weights, and biases
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Activation functions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Loss functions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Optimizers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Back propagation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In addition, there are several types of neural networks, such as:'
  prefs: []
  type: TYPE_NORMAL
- en: Artificial Neural Network (ANN)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Convolutional Neural Network (CNN)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Recurrent Neural Network (RNN)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Beginners to deep learning often have to grapple with these concepts before
    they would able to start building a working model.
  prefs: []
  type: TYPE_NORMAL
- en: This is where **fastai** comes in. **fastai** is a deep learning library that
    allows beginners and practitioners to quickly get started with standard deep learning
    models, and at the same time providing them with the ability to customize the
    models they are building.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, I will get you started with building your first deep learning
    model using **fastai**.
  prefs: []
  type: TYPE_NORMAL
- en: '**fastai** was founded in 2016 by Jeremy Howard and Rachel Thomas with the
    goal of democratizing deep learning. They do this by providing a massive open
    online course (MOOC) named “Practical Deep Learning for Coders,” which has no
    other prerequisites except for knowledge of the programming language Python. Source:
    [https://en.wikipedia.org/wiki/Fast.ai](https://en.wikipedia.org/wiki/Fast.ai)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**What exactly is fastai?**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For those of you who are familiar with **TensorFlow**, **fastai** is to **PyTorch**
    what **Keras** is to **TensorFlow** — put simply, it is a wrapper for PyTorch:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1f12e8b795798e441af119ac91bc9aba.png)'
  prefs: []
  type: TYPE_IMG
- en: 'But what is **PyTorch**? PyTorch is a machine learning framework based on the
    **Torch** library, used for applications such as computer vision and natural language
    processing, originally developed by Meta AI and now part of the Linux Foundation
    umbrella. It is free and open-source software released under the modified BSD
    license (Source: [https://en.wikipedia.org/wiki/PyTorch](https://en.wikipedia.org/wiki/PyTorch)).'
  prefs: []
  type: TYPE_NORMAL
- en: '**TensorFlow**, on the other hand, is another open-source library for machine
    learning and AI (developed by Google). Its main strength is in the training and
    inferencing of deep neural network. Because TensorFlow is more difficult to work
    with, **Keras** provides a high-level library that works on top of TensorFlow.
    Keras makes deep learning more more accessible to the developers.'
  prefs: []
  type: TYPE_NORMAL
- en: This is to say, you can now build deep learning neural networks without really
    understanding the details of how a neural network is constructed.
  prefs: []
  type: TYPE_NORMAL
- en: 'One of the main goals of **fastai** is to make deep learning *approachable*
    and *rapidly productive*. **fastai** offers APIs over four main application areas:'
  prefs: []
  type: TYPE_NORMAL
- en: Vision
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Text
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tabular and Time-Series Analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Collaborative filtering
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For this article, as a quick jumpstart to **fastai**, I will illustrate the
    use of **fastai** by using it to build a vision model to recognize images.
  prefs: []
  type: TYPE_NORMAL
- en: Installing fastai
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For this article, I will be using Jupyter Notebook. To install **fastai**,
    type the following command in a new cell:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Training a Vision Model for Image Recognition
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Using **fastai**, you can train a deep learning model very quickly without getting
    your hands too dirty.
  prefs: []
  type: TYPE_NORMAL
- en: While I say that you can build a deep learning model without getting your hands
    dirty with fastai, it would be really useful if you have some background knowledge
    of what deep learning is — what is a neural network, what are weights and biases,
    the different types of neural networks (in particular Convolution Neural Network
    used for the example in this article), and how to train and test a neural network.
    If you are interested, refer to my article on Code Magazine for the details on
    how deep learning works.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[](https://www.codemag.com/Article/2003071/Introduction-to-Deep-Learning?source=post_page-----eff2fa05449e--------------------------------)
    [## Introduction to Deep Learning'
  prefs: []
  type: TYPE_NORMAL
- en: 'By Wei-Meng Lee Published in:CODE Magazine: 2020 - March/April Last updated:
    August 31, 2022 Artificial intelligence…'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: www.codemag.com](https://www.codemag.com/Article/2003071/Introduction-to-Deep-Learning?source=post_page-----eff2fa05449e--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Using the sample images
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**fastai** comes with a set of sample images that you can download and use
    for your training. First, import the `vision` libraries from `fastai`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, print out the value of `URLs.PETS`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'It will return the following URL:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: This URL points to a tar file that contains a series of cats and dogs images.
  prefs: []
  type: TYPE_NORMAL
- en: 'Besides the `PETS` item, the `URLs` object also contains other sample images,
    like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9038b1ea3043548ba7da134700eb55a6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To download the sample images and untar it, use the `untar_data()` function,
    like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: The images will now be expanded onto the `/Users/weimenglee/.fastai/data/oxford-iiit-pet/images`
    directory.
  prefs: []
  type: TYPE_NORMAL
- en: 'Within the **images** folder, you can see a list of images containing the various
    breeds of cats and dogs:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d58f1b989ce837230ff6c92a04404934.png)'
  prefs: []
  type: TYPE_IMG
- en: As you can see, the filenames start with the animal name followed by an index.
  prefs: []
  type: TYPE_NORMAL
- en: Loading the Images using ImageDataLoaders
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The **images** folder contains images of 37 breeds of cats and dogs, and so
    you need a way to assign a label to each image and put them into the appropriate
    categories. For the labelling, we shall extract the part of the filename before
    the last underscore character (“`_`”) and use it as the label for the animal:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/bf8b0a5ff161673457d144d1073aca20.png)'
  prefs: []
  type: TYPE_IMG
- en: How do we categorize all these images? Fortunately, you can use the `ImageDataLoaders`
    class. The `ImageDataLoaders` class automatically constructs validation and training
    data from a list of images. Using the `from_name_func()` function, you can load
    up your training and validation data from the series of images stored in a folder.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, you need to define a function to extract the label for an image:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, use the `from_name_func()` function from the `ImageDataLoaders` class
    and pass it the following arguments:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: The `dls` variable is of type `fastai.data.core.DataLoaders`.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The result can now be be used for training.
  prefs: []
  type: TYPE_NORMAL
- en: Printing out the labels
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you are curious about the various breeds of cats and dogs in the training
    dataset, you can print them out using the `vocab` attribute in the `ImageDataLoaders`
    object:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Here are the 37 breeds of cats and dogs:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Training the Model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As we are building a vision model, we shall use the `vision_learner()` function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'The `vision_learner()` function takes in three arguments:'
  prefs: []
  type: TYPE_NORMAL
- en: the data loaders
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the pre-trained model to use
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the metric to use to evaluate the model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is **Resnet34**? Resnet34 is an image classification model. It is a CNN
    (Convolutional Neural Network) structured as 34 layers (hence its name). Resnet34
    is pre-trained on the ImageNet dataset, which contains more than 100,000 images
    across 200 classes. A CNN is usually used for image classification purposes.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Here, we use a pre-trained model — `resnet34`. A pre-trained model is a model
    that has already been trained using its own dataset. Remember in the previous
    section we need to resize the image to 224x224? This is because the `resnet34`
    was trained using images of that size. You may ask why don’t they use larger-sized
    images? Well, larger size images would definitely be better, but these comes at
    the price of speed and memory requirements.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this example, we are using *transfer learning*. Transfer learning is a machine
    learning method where a model developed for a task is reused as the starting point
    for a model on a second task. Transfer learning reduces the amount of time that
    you need to spend on training. The following figure shows the concept of how transfer
    learning works. The top part shows the network architecture of a pre-trained model.
    In a CNN, the early layers (starting from the left) are already trained to recognize
    basic shapes, edges, colors, etc. And the rightmost few layers are trained to
    recognize specific objects that the model has been trained to recognize:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7d920a038110c6fbdc39372f99b45a2e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In transfer learning, you don’t have to retrain the entire model — you can
    retain the early layers that can recognize basic shapes, while retaining the right-most
    few layers to recognize your specific objects that you want to train on:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2540483616daca39500d8e424b60c615.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To start the transfer learning process, you use the `fine_tune()` function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: The `1` you specified is the *epoch*, which is the number of times the model
    goes through your images to train the model.
  prefs: []
  type: TYPE_NORMAL
- en: The number of epoch that you should use depends on how much time you have for
    training. A high epoch takes a lot of time, but the result is generally more accurate
    than using a low epoch. On the other hand, specifying a high epoch means that
    the model is looking at your images repeatedly, which can lead to overfitting.
    Overfitting means that your model now is memorizing your images, and will perform
    badly when it is given a new image that it has never seen before.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'After the training, you should get some statistics on the training:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/49569ba4f44487b950dedd4f89dcd41a.png)'
  prefs: []
  type: TYPE_IMG
- en: Making Predictions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Our model is now trained and it is time to put it to the test! For this, I
    have downloaded the image of an American bulldog (**1024px-Bulldog_inglese.jpg**):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fe37e35f0554c916ed70416729a23d10.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [https://en.wikipedia.org/wiki/Bulldog#/media/File:Bulldog_inglese.jpg](https://en.wikipedia.org/wiki/Bulldog#/media/File:Bulldog_inglese.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Save the image to the same directory where you saved your Jupyter Notebook.
    You can now load the image and display it in Jupyter Notebook:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'You then send it for prediction using the `predict()` function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'The `predict()` function returns three values:'
  prefs: []
  type: TYPE_NORMAL
- en: the predicted label
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: a torch.Tensor object representing the index of the predicted label
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: probabilities for each label
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following shows the result of the prediction:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: As you can see from the result, the model correctly predicted that the image
    is an American bulldog.
  prefs: []
  type: TYPE_NORMAL
- en: '**If you like reading my articles and that it helped your career/study, please
    consider signing up as a Medium member. It is $5 a month, and it gives you unlimited
    access to all the articles (including mine) on Medium. If you sign up using the
    following link, I will earn a small commission (at no additional cost to you).
    Your support means that I will be able to devote more time on writing articles
    like this.**'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://weimenglee.medium.com/membership?source=post_page-----eff2fa05449e--------------------------------)
    [## Join Medium with my referral link - Wei-Meng Lee'
  prefs: []
  type: TYPE_NORMAL
- en: Read every story from Wei-Meng Lee (and thousands of other writers on Medium).
    Your membership fee directly supports…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: weimenglee.medium.com](https://weimenglee.medium.com/membership?source=post_page-----eff2fa05449e--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I hope this quick-start is able to shed some light on how to use **fastai**.
    There are several terms in deep learning that we have discussed in this article,
    but for a start you don’t really have to understand them in details. What you
    should focus on is trying to get the model trained and then using it for prediction.
    For future articles, I will give you more examples of how to use **fastai** to
    build some really interesting models. Have fun!
  prefs: []
  type: TYPE_NORMAL
