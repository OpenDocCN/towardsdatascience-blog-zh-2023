- en: Unleashing the Power of MLflow
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/unleashing-the-power-of-mlflow-36c17a693033](https://towardsdatascience.com/unleashing-the-power-of-mlflow-36c17a693033)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A whirlwind tour of Machine Learning Lifecycle Management
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://ms101196.medium.com/?source=post_page-----36c17a693033--------------------------------)[![Merlin
    Schäfer](../Images/70108782dda329ca5bbc4cfb5d650e5e.png)](https://ms101196.medium.com/?source=post_page-----36c17a693033--------------------------------)[](https://towardsdatascience.com/?source=post_page-----36c17a693033--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----36c17a693033--------------------------------)
    [Merlin Schäfer](https://ms101196.medium.com/?source=post_page-----36c17a693033--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----36c17a693033--------------------------------)
    ·6 min read·May 30, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8bdfedb66bb9008afbc4103934712f13.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Stephen Dawson](https://unsplash.com/pt-br/@dawson2406?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Have you ever found yourself training models, tuning hyperparameters, and selecting
    features for hours only to realize you’ve already had a good set of parameters
    but forgot to track them or save the model? I know I have, maybe more often than
    I’d like to admit. Before you open a spreadsheet and start writing down which
    alpha values or n neighbors your model uses, I’d like to introduce you to MLflow.
  prefs: []
  type: TYPE_NORMAL
- en: MLflow is a versatile open-source platform designed to manage the end-to-end
    machine learning lifecycle, developed by Databricks. It offers an array of benefits
    to machine learning practitioners, data scientists, and developers, enabling streamlined
    experimentation, reproducibility, and deployment of ML models. So, let’s explore
    what it can do for you!
  prefs: []
  type: TYPE_NORMAL
- en: Main components of MLflow
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before we delve into the nuts and bolts of using MLflow, it’s crucial to understand
    what MLflow is and why it’s a critical tool in today’s ML landscape.
  prefs: []
  type: TYPE_NORMAL
- en: MLflow helps to manage the machine learning lifecycle, including **experimentation**,
    **reproducibility**, and **deployment**. It accommodates any (Python) machine
    learning library. It provides ready-to-use interfaces for the most common ones,
    giving it a high degree of versatility to suit all your development needs.
  prefs: []
  type: TYPE_NORMAL
- en: 'MLflow consists of four main components:'
  prefs: []
  type: TYPE_NORMAL
- en: '**MLflow Tracking**: The main API, logs and organizes machine learning experiments.
    It records parameters, metrics, and artifacts (like models, notebooks, and scripts),
    enabling you to track your experiment runs and results. It comes with a UI you
    can access via localhost to view, visualize and manage your experiments.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**MLflow Projects**: A code packaging format for reproducibility and sharing.
    It defines a standard structure for ML code, making it easier for you to understand
    it, reuse it, and collaborate with others.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**MLflow Models**: A standard format for packaging ML models in multiple flavors
    (ML frameworks), and a repository for storing and sharing models. It simplifies
    model deployment across platforms.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**MLflow Model Registry**: A centralized model repository with model lineage,
    versioning, stage transitions, and annotations. It’s particularly useful in a
    collaborative environment when you need to compare and combine your models with
    those of your team members.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: MLflow’s strength lies in its ability to simplify and streamline the ML lifecycle,
    making it easy for you to track and compare experiments, reproduce code, manage
    models, and deploy solutions with relative ease.
  prefs: []
  type: TYPE_NORMAL
- en: 'Diving into MLflow Tracking: Manage your ML Experiments'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let’s kickstart the practical part of this tour with **MLflow Tracking**. The
    API and UI for logging and managing everything around your ML experiments.
  prefs: []
  type: TYPE_NORMAL
- en: You can use it in a simple script or scale it up for large-scale training environments.
    Let me illustrate the basic usage with a simple code snippet using ElasticNet
    regression from Scikit-learn.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: After running this script, you can view the logged run details in your MLflow
    tracking UI. The user-friendly interface allows you to filter and sort the runs
    based on different parameters and metrics, enabling a comparative analysis of
    various runs.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d5a0bd7414c2592449a68acd615a79ac.png)'
  prefs: []
  type: TYPE_IMG
- en: MLflow UI example
  prefs: []
  type: TYPE_NORMAL
- en: 'MLflow Model Registry: Streamline your Model Management'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: After getting started with MLflow Tracking, you may want to start organizing
    your models as well. This is where the MLflow Model Registry, a centralized model
    repository that integrates closely with MLflow Tracking, comes in. It is a great
    tool for individuals and teams to review, share, and collaborate on ML models.
  prefs: []
  type: TYPE_NORMAL
- en: The model registry streamlines the transition of models from experimentation
    to production. It achieves this by allowing model lineage tracking, model versioning,
    stage transitions, and model annotations.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use the model registry like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Log a model from MLflow Tracking**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**2\. Register a logged model in the registry**:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '*The model is registered using its run ID (*`*d16076a3ec534311817565e6527539c0*`
    *in the example).*'
  prefs: []
  type: TYPE_NORMAL
- en: '**3\. List all registered models**:'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can check if your model has been registered successfully by listing all
    registered models:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '**4\. Load the model from the registry**:'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can load the model from the registry for prediction or scoring:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '**5\. Transition the model versions between stages**:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Model Registry allows for model stage transitions. You can transition a model
    from ‘None’ to ‘Staging’, ‘Production’, or ‘Archived’ stages:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: In this example, we transitioned version 1 of our model into the ‘Production’
    stage for later usage.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding MLflow Models
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: How exactly does MLflow save your models?
  prefs: []
  type: TYPE_NORMAL
- en: MLflow Models offer a standard format for packaging your machine learning models
    that can be used in a variety of downstream tools. For instance, real-time serving
    through a REST API, batch inference on a Spark cluster, and more.
  prefs: []
  type: TYPE_NORMAL
- en: MLflow Models use a simple convention for packaging models where each model
    is saved as a directory containing any files necessary and a descriptor file that
    lists several “flavors” the model can be used in.
  prefs: []
  type: TYPE_NORMAL
- en: A flavor defines a specific model format or library the model can run with.
    There are flavors for the most important libraries. For example, a TensorFlow
    model can be loaded as a TensorFlow SavedModel format or as a Python function
    to be applied to input data.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have a model from a custom library or one that isn’t built-in you can
    still use it in the generic Python function flavor:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'When you’re ready to serve your model (e.g. for an API), you can use the `mlflow
    models serve` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: This command will serve the specified version of the model (`1` in this case)
    on the local host at port `1234`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Exploring MLflow Projects: Simplify your Code Packaging'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As stated above, MLflow Projects is a format for packaging your code in a reusable
    and reproducible way. It mainly helps you to share projects across teams and enables
    running them on different platforms. Each project is simply a directory or a repository
    that contains your code and a descriptor file named `MLproject`.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `MLproject` file defines the project''s structure, including its dependencies,
    entry points, and parameters for your code. Your `MLproject` file might look like
    this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: In this example, `main.py` is the entry point of the project. `alpha` and `l1_ratio`
    are parameters for this script. The `conda.yaml` file lists the project's Python
    dependencies.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can run the projects’ entry point via the `mlflow run` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: The command fetches the necessary dependencies, runs your code with the given
    and/or default parameters, and logs the results to the tracking server.
  prefs: []
  type: TYPE_NORMAL
- en: Wrapping Up
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This concludes our whirlwind tour of MLflow.
  prefs: []
  type: TYPE_NORMAL
- en: 'We’ve now covered all four components of MLflow: MLflow Tracking, MLflow Projects,
    MLflow Models, and MLflow Model Registry. These tools come together to provide
    you with a comprehensive platform for managing the machine learning lifecycle,
    facilitating better collaboration, code reusability, and experiment tracking.'
  prefs: []
  type: TYPE_NORMAL
- en: Whether you’re working alone or in multiple teams, dealing with simple models
    or complex ML pipelines, I hope you find MLflow to be a worthy tool to integrate
    into your workflow.
  prefs: []
  type: TYPE_NORMAL
- en: Remember, I merely scratched the surface of MLflow’s capabilities here. For
    a deeper dive into advanced features, examples and usage, check out the [official
    MLflow documentation](https://mlflow.org/docs/latest/index.html) or possible follow
    up posts.
  prefs: []
  type: TYPE_NORMAL
- en: As always I also hope you learned something that helps you along the way. Enjoy
    exploring and harnessing the power of MLflow in your machine-learning projects!
  prefs: []
  type: TYPE_NORMAL
- en: -Merlin
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://ms101196.medium.com/membership?source=post_page-----36c17a693033--------------------------------)
    [## Join Medium with my referral link - Merlin Schäfer'
  prefs: []
  type: TYPE_NORMAL
- en: Read every story from Merlin Schäfer (and thousands of other writers on Medium).
    Your membership fee directly supports…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: ms101196.medium.com](https://ms101196.medium.com/membership?source=post_page-----36c17a693033--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: '*Sources:*'
  prefs: []
  type: TYPE_NORMAL
- en: '*[1]* [*https://mlflow.org/docs/latest/index.html*](https://mlflow.org/docs/latest/index.html)'
  prefs: []
  type: TYPE_NORMAL
