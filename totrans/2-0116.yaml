- en: 5 Python Tricks That Distinguish Senior Developers From Juniors
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5个区分资深开发者和初级开发者的Python技巧
- en: 原文：[https://towardsdatascience.com/5-python-tricks-that-distinguish-senior-developers-from-juniors-826d57ab3940](https://towardsdatascience.com/5-python-tricks-that-distinguish-senior-developers-from-juniors-826d57ab3940)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/5-python-tricks-that-distinguish-senior-developers-from-juniors-826d57ab3940](https://towardsdatascience.com/5-python-tricks-that-distinguish-senior-developers-from-juniors-826d57ab3940)
- en: Illustrated through differences in approaches to Advent of Code puzzles
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过对Advent of Code难题解决方法的差异进行说明
- en: '[](https://medium.com/@tomergabay?source=post_page-----826d57ab3940--------------------------------)[![Tomer
    Gabay](../Images/1fb1d408bc89415918c1aa6733df44e1.png)](https://medium.com/@tomergabay?source=post_page-----826d57ab3940--------------------------------)[](https://towardsdatascience.com/?source=post_page-----826d57ab3940--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----826d57ab3940--------------------------------)
    [Tomer Gabay](https://medium.com/@tomergabay?source=post_page-----826d57ab3940--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@tomergabay?source=post_page-----826d57ab3940--------------------------------)[![Tomer
    Gabay](../Images/1fb1d408bc89415918c1aa6733df44e1.png)](https://medium.com/@tomergabay?source=post_page-----826d57ab3940--------------------------------)[](https://towardsdatascience.com/?source=post_page-----826d57ab3940--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----826d57ab3940--------------------------------)
    [Tomer Gabay](https://medium.com/@tomergabay?source=post_page-----826d57ab3940--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----826d57ab3940--------------------------------)
    ·6 min read·Jan 16, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----826d57ab3940--------------------------------)
    ·阅读时间6分钟·2023年1月16日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/0d25891630ba9198b83532dc75587a05.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0d25891630ba9198b83532dc75587a05.png)'
- en: Photo by [Afif Ramdhasuma](https://unsplash.com/@javaistan?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 由[Afif Ramdhasuma](https://unsplash.com/@javaistan?utm_source=medium&utm_medium=referral)拍摄的照片，来源于[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Every year since 2015 on the first of December [Advent of Code](https://adventofcode.com/)
    starts. As described on their website, Advent of Code (henceforth AoC) is
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 自2015年起，每年12月1日，[Advent of Code](https://adventofcode.com/)开始。正如他们网站上所描述的，Advent
    of Code（以下简称AoC）是
- en: an [Advent calendar](https://en.wikipedia.org/wiki/Advent_calendar) of small
    programming puzzles for a variety of skill sets and skill levels that can be solved
    in [any](https://github.com/search?q=advent+of+code) programming language you
    like. People use them as [interview](https://y3l2n.com/2018/05/09/interview-prep-advent-of-code/)
    [prep](https://twitter.com/dznqbit/status/1037607793144938497), [company training](https://twitter.com/pgoultiaev/status/950805811583963137),
    [university](https://gitlab.com/imhoffman/fa19b4-mat3006/wikis/home) [coursework](https://gribblelab.org/teaching/scicomp2021/index.html),
    [practice](https://twitter.com/mrdanielklein/status/936267621468483584) [problems](https://comp215.blogs.rice.edu/),
    a [speed contest](https://adventofcode.com/leaderboard), or to [challenge each
    other](https://www.reddit.com/r/adventofcode/search?q=flair%3Aupping&restrict_sr=on).
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一个[降临节日历](https://en.wikipedia.org/wiki/Advent_calendar)，包含各种技能水平的小编程难题，可以用[任何](https://github.com/search?q=advent+of+code)编程语言解决。人们将其用作[面试](https://y3l2n.com/2018/05/09/interview-prep-advent-of-code/)
    [准备](https://twitter.com/dznqbit/status/1037607793144938497)、[公司培训](https://twitter.com/pgoultiaev/status/950805811583963137)、[大学](https://gitlab.com/imhoffman/fa19b4-mat3006/wikis/home)
    [课程作业](https://gribblelab.org/teaching/scicomp2021/index.html)、[练习](https://twitter.com/mrdanielklein/status/936267621468483584)
    [问题](https://comp215.blogs.rice.edu/)、[速度竞赛](https://adventofcode.com/leaderboard)或[相互挑战](https://www.reddit.com/r/adventofcode/search?q=flair%3Aupping&restrict_sr=on)。
- en: In this article, we’ll take a look at five approaches to tackle common coding
    problems in a senior way instead of a junior one. Each coding problem is derived
    from an AoC puzzle, with many problems recurring multiple times throughout AoC
    and other coding challenges and assessments you might encounter e.g. in job interviews.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们将探讨五种高级解决常见编码问题的方法，而不是初级方法。每个编码问题都来源于AoC难题，许多问题在AoC和其他编码挑战及评估中反复出现，比如在求职面试中。
- en: To illustrate the concepts I won’t go into the solution of the full AoC puzzles,
    but rather only focus on a small part of a specific puzzle in which senior developers
    are easily distinguishable from juniors.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 为了阐明这些概念，我不会详细讲解完整的AoC难题解决方案，而是只专注于某个具体难题的一小部分，在这个难题中，资深开发者和初级开发者的差异非常明显。
- en: 1\. Read in a file effectively with comprehensions and splits
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 有效地使用推导式和分割读取文件
- en: On [Day1](https://adventofcode.com/2022/day/1) of AoC it is required to read
    in several blocks of numbers. Each block is separated by an empty line (thus actually
    `'\n’`).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [Day1](https://adventofcode.com/2022/day/1) 中，需要读取几个数字块。每个块之间由一个空行分隔（因此实际上是
    `'\n’`）。
- en: '**Input and desired output**'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**输入和期望输出**'
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Junior developer approach:** aloop with if-else statements'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**初级开发者方法：** 使用 if-else 语句的循环'
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Senior developer approach:** make use of list comprehensions and `.split()`'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**高级开发者方法：** 利用列表推导式和 `.split()`'
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Using list comprehensions we can fit the 10 previous lines into two, without
    losing significant (if any) understandability or readability, and while gaining
    in performance ([list comprehensions are faster than regular loops](https://wiki.python.org/moin/PythonSpeed/PerformanceTips#Loops)).
    For those that haven’t seen `map` before, `map` maps a function (the first argument)
    to an iterable in the second argument. In this specific situation, it applies
    `int()` to every value in the list, making every item an integer. For more info
    about `map` click [here](https://www.geeksforgeeks.org/python-map-function/).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 使用列表推导式，我们可以将之前的 10 行代码压缩成两行，而不会显著损失（如果有的话）可理解性或可读性，并且性能有所提升（[列表推导式比常规循环更快](https://wiki.python.org/moin/PythonSpeed/PerformanceTips#Loops)）。对于那些未曾见过
    `map` 的人，`map` 将一个函数（第一个参数）应用于第二个参数中的可迭代对象。在这种特定情况下，它将 `int()` 应用到列表中的每个值，使每个项目变成整数。有关
    `map` 的更多信息，请点击 [这里](https://www.geeksforgeeks.org/python-map-function/)。
- en: 2\. Use Enum instead of if-elif-else
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 使用 Enum 代替 if-elif-else
- en: 'On [Day2](https://adventofcode.com/2022/day/1) the challenge revolves around
    a game of *rock-paper-scissors.* A different chosen shape (rock, paper, or scissors)
    results in a different amount of points: 1 (*X)*, 2 (*Y)*, and 3 (*Z)* respectively.
    Here below are two approaches to tackle this problem.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [Day2](https://adventofcode.com/2022/day/1) 中，挑战围绕一个 *石头-剪刀-布* 游戏展开。不同选择的形状（石头、纸张或剪刀）会得到不同的点数：1
    (*X)*，2 (*Y)* 和 3 (*Z)*。以下是解决此问题的两种方法。
- en: '**Input and desired output**'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**输入和期望输出**'
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**Junior developer approach:** if-elif-else'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**初级开发者方法：** if-elif-else'
- en: '[PRE4]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Senior developer approach:** `Enum`'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**高级开发者方法：** `Enum`'
- en: '[PRE5]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Of course, in this example, the naive approach isn’t *that* terrible but using
    `[Enum](https://docs.python.org/3/library/enum.html)` results in shorter and more
    readable code. Especially when more options are possible the naive *if-elif-else*
    approach will get worse and worse, while with `Enum` it stays relatively easy
    to keep an overview. For more on `Enum` click [here](https://docs.python.org/3/library/enum.html).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，在这个例子中，简单的方法并不是 *那* 糟糕，但使用 `[Enum](https://docs.python.org/3/library/enum.html)`
    会导致更简洁和可读性更高的代码。特别是当选项更多时，简单的 *if-elif-else* 方法会变得越来越差，而使用 `Enum` 则相对容易保持概览。有关
    `Enum` 的更多信息，请点击 [这里](https://docs.python.org/3/library/enum.html)。
- en: 3\. Use lookup tables instead of dictionaries
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 使用查找表代替字典
- en: In [Day3](https://adventofcode.com/2022/day/3) letters have different values.
    Lowercase a-z has values 1 through 26, and uppercase a-z has values 27 through
    52\. Because of the many different possible values, using `Enum` like here above
    would result in many lines of code. A more practical approach here is to use a
    *lookup table:*
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [Day3](https://adventofcode.com/2022/day/3) 中，字母具有不同的值。小写字母 a-z 的值为 1 到 26，大写字母
    A-Z 的值为 27 到 52。由于可能的值很多，像上述那样使用 `Enum` 会导致很多行代码。这里更实用的方法是使用 *查找表：*
- en: '[PRE6]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**Junior developer approach:** creating a global dictionary'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**初级开发者方法：** 创建一个全局字典'
- en: '[PRE7]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '**Senior developer approach:** using a string as a lookup table'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**高级开发者方法：** 使用字符串作为查找表'
- en: '[PRE8]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Using the `.index()` method of a string we get the index, hence `letters.index('c')+1`
    will result in the expected value of 3\. There is no need to store the values
    in a dictionary because the index *is* the value. To prevent the `+1` you could
    simply add a whitespace character at the beginning of the string so that the index
    of `a` starts on 1\. However, this depends on whether you’d like to return a value
    of 0 for a whitespace or an error.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 使用字符串的 `.index()` 方法，我们可以获得索引，因此 `letters.index('c')+1` 将得到期望的值 3。没有必要将值存储在字典中，因为索引
    *就是* 值。为了避免 `+1`，你可以在字符串的开头添加一个空格字符，使得 `a` 的索引从 1 开始。然而，这取决于你是否希望返回空格的值为 0 还是错误。
- en: 'As you might have thought by now, yes, we could also solve the *rock, paper
    scissors* task using a lookup table:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你现在可能想到的，是的，我们也可以使用查找表来解决 *石头、剪刀、布* 任务：
- en: '[PRE9]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 4\. Advanced slicing
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 高级切片
- en: 'On [Day5](https://adventofcode.com/2022/day/5) it is required to read letters
    from lines (see input below). Each letter is on a fourth index, starting from
    index 1\. Now, virtually every Python programmer will be familiar with string
    and list slicing using e.g. `list_[10:20]` . But what many people don’t know is
    that you can define step size using e.g. `list_[10:20:2]` to define a step size
    of 2\. On Day5 (and in many other coding situations) this could save you a lot
    of unnecessarily complicated code:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [Day5](https://adventofcode.com/2022/day/5) 中，需要从行中读取字母（见下方输入）。每个字母在第四个索引上，从索引1开始。现在，几乎所有Python程序员都熟悉使用例如
    `list_[10:20]` 的字符串和列表切片。但很多人不知道，你可以使用例如 `list_[10:20:2]` 来定义步长为2。在Day5（以及许多其他编码场景中），这可以节省你大量不必要的复杂代码：
- en: '[PRE10]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '**Junior developer approach:** double for loop with `range` and indices'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**初级开发者方法：** 使用 `range` 和索引的双重循环'
- en: '[PRE11]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '**Senior developer approach:** using advanced slicing methods'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**高级开发者方法：** 使用高级切片方法'
- en: '[PRE12]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 5\. Use a class attribute to store class instances
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5\. 使用类属性存储类实例
- en: 'On [Day11](https://adventofcode.com/2022/day/11) a situation is described in
    which monkies pass objects to each other. In order to simplify we’ll pretend that
    they’re simply passing bananas to each other. Each monkey can be represented as
    an instance of a Python `class` with their `id` and their amount of bananas as
    instance attributes. However, there are many monkeys and they need to be able
    to interact with each other. A trick to store all the monkeys and for them to
    be able to interact with each other is to define a dictionary with all `Monkey`
    instances as a class attribute of the `Monkey` class. Using `Monkey.monkeys[id]`
    you can access all existing monkies without the need of a `Monkies` class or an
    external dictionary:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [Day11](https://adventofcode.com/2022/day/11) 中描述了一种猴子互相传递物品的情况。为了简化，我们假设它们只是互相传递香蕉。每只猴子可以被表示为一个Python
    `class` 的实例，其 `id` 和香蕉数量作为实例属性。然而，有很多猴子，它们需要能够互相交互。存储所有猴子并让它们能够互相交互的一个技巧是定义一个包含所有
    `Monkey` 实例的字典，将其作为 `Monkey` 类的类属性。使用 `Monkey.monkeys[id]`，你可以访问所有现有的猴子，而不需要 `Monkies`
    类或外部字典：
- en: '[PRE13]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 6\. Self-documenting expressions (BONUS)
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 6\. 自我文档化表达式（额外奖励）
- en: This trick is applicable virtually every time you write a Python program. Instead
    of defining in an f-string what you are printing (e.g.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这个技巧几乎在每次编写Python程序时都适用。与其在f-string中定义你正在打印的内容（例如
- en: '`print(f"x = {x}")` you can use `print(f"{x = }”)` to print the value with
    a specification of what you are printing.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '`print(f"x = {x}")` 你可以使用 `print(f"{x = }”)` 来打印值，并指定你正在打印的内容。'
- en: '[PRE14]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '**Junior developer approach:**'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**初级开发者方法：**'
- en: '[PRE15]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '**Senior developer approach:**'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**高级开发者方法：**'
- en: '[PRE16]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: To conclude
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We’ve looked at 5 Python tricks that distinguish senior developers from junior
    developers. Of course, only applying these tricks won’t promote someone suddenly
    to senior developer. However, through analyzing the difference in style and pattern
    between the two you can learn the difference in how a senior developer approaches
    coding problems versus a junior, and you can start to internalize these approaches
    so that you’ll eventually become a senior developer yourself!
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经探讨了5个Python技巧，这些技巧区分了高级开发者和初级开发者。当然，单单应用这些技巧并不能让人瞬间晋升为高级开发者。然而，通过分析这两者之间风格和模式的差异，你可以学习高级开发者与初级开发者在处理编码问题时的方法差异，并开始内化这些方法，以便最终自己成为高级开发者！
- en: If you liked this article and want to learn more about senior Python approaches,
    make sure to read my other article about where to find content to become more
    senior yourself!
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢这篇文章并希望了解更多关于高级Python方法的信息，请务必阅读我关于如何找到内容以提升自己成为更高级开发者的另一篇文章！
- en: '[](/how-to-level-up-your-python-skills-by-learning-from-these-professionals-3e906b83f355?source=post_page-----826d57ab3940--------------------------------)
    [## How to Level Up Your Python Skills by Learning From These Professionals'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/how-to-level-up-your-python-skills-by-learning-from-these-professionals-3e906b83f355?source=post_page-----826d57ab3940--------------------------------)
    [## 如何通过向这些专业人士学习提升你的Python技能'
- en: Prevent staying stuck at the junior level of Python programming
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 避免停留在Python编程的初级水平
- en: towardsdatascience.com](/how-to-level-up-your-python-skills-by-learning-from-these-professionals-3e906b83f355?source=post_page-----826d57ab3940--------------------------------)
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/how-to-level-up-your-python-skills-by-learning-from-these-professionals-3e906b83f355?source=post_page-----826d57ab3940--------------------------------)
- en: Resources
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 资源
- en: '[List comprehensions](https://wiki.python.org/moin/PythonSpeed/PerformanceTips#Loops)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[列表推导](https://wiki.python.org/moin/PythonSpeed/PerformanceTips#Loops)'
- en: '[Map explanation](https://www.geeksforgeeks.org/python-map-function/)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[映射解释](https://www.geeksforgeeks.org/python-map-function/)'
- en: '[Enumerate documentation](https://docs.python.org/3/library/enum.html)'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[枚举文档](https://docs.python.org/3/library/enum.html)'
- en: '[AoC Reddit](https://www.reddit.com/r/adventofcode/) (hints, solutions, and
    discussions)'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[AoC Reddit](https://www.reddit.com/r/adventofcode/)（提示、解决方案和讨论）'
