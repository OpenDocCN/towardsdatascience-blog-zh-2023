["```py\nCONTENTS\n========\n\nWhy use non-root?\n\nWhat you can & cannot do as a default non-root user\n\nThe Four Scenarios\n  1) Serve a model from host (Read Only)\n  2) Run data processing pipelines (Write within Container)\n  3) Libraries automatically writing files (Write within Container)\n  4) Save trained models (Write to Host)\n\nSummary\n```", "```py\n# Dockerfile\nFROM python:3.11-slim\n\nWORKDIR /app\n\n# create a dummy py file\nRUN echo \"print('I can run an existing py file')\" > example.py\n\n# create & switch to non-root user\nRUN adduser --no-create-home nonroot\nUSER nonroot\n```", "```py\ndocker build -t test .\ndocker run -it test bash\n```", "```py\n# Dockerfile\nFROM python:3.11-slim\n\nWORKDIR /app\n\nCOPY requirements.txt .\nRUN pip3 install --no-cache-dir --upgrade pip~=23.2.1 \\\n    && pip3 install --no-cache-dir -r requirements.txt\n\nCOPY ./project/ /app\n\n# add non-root user ---------------------\nRUN adduser --no-create-home nonroot\n# switch from root to non-root user -----\nUSER nonroot\n\nCMD [\"python\", \"inference.py\"]\n```", "```py\n# Dockerfile\n\n# ....\n\n# add non-root user & grant ownership to processing folder\nRUN adduser --no-create-home nonroot && \\\n    mkdir processing && \\\n    chown nonroot processing\n\n# switch from root to non-root user\nUSER nonroot\n\nCMD [\"python\", \"preprocess.py\"]\n```", "```py\n# Dockerfile\n\n# ....\n\n# add non-root user ................\n# change huggingface dl dir\nENV TRANSFORMERS_CACHE=/app/model\n\nRUN adduser --no-create-home nonroot && \\\n    # create supervisor files & huggingfacehub dir\n    touch /app/supervisord.log /app/supervisord.pid && \\\n    mkdir $TRANSFORMERS_CACHE && \\\n    # grant supervisor & huggingfacehub write access\n    chown nonroot /app/supervisord.log && \\\n    chown nonroot /app/supervisord.pid && \\\n    chown nonroot $TRANSFORMERS_CACHE\nUSER nonroot\n\nCMD [\"supervisord\", \"-c\", \"conf/supervisord.conf\"]\n```", "```py\n# Dockerfile\n\n# ....\n# add non-root group/user & create model folder\nENV UID=1001\nRUN addgroup --gid $UID nonroot && \\\n    adduser --uid $UID --gid $UID --no-create-home nonroot && \\\n    mkdir model\n\n# switch from root to non-root user\nUSER nonroot\n\nCMD [\"python\", \"train.py\"]\n```", "```py\n# in host terminal\n\n# add the same user & group\naddgroup --gid 1001\nadduser --uid 1001 --gid 1001 --no-create-home nonroot\n# create model dir to bind-mount & make nonroot an owner\nmkdir /home/model\nchown nonroot /home/model\n```", "```py\nversion: \"3.5\"\n\nservices:\n    modeltraining:\n        container_name: modeltraining\n        build:\n            dockerfile: Dockerfile\n        volumes:\n            - type: bind\n              source: /home/model # host dir\n              target: /app/model  # container dir\n```", "```py\ndocker run -d --name modeltraining -v /home/model:/app/model <image_name>\n```", "```py\ndocker exec -it -u 0 <container_id/name> bash\n```"]