- en: How to Sort a Data Frame by Multiple Columns in R
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: åŽŸæ–‡ï¼š[https://towardsdatascience.com/sort-r-dataframes-7fe3b0a1fbbd](https://towardsdatascience.com/sort-r-dataframes-7fe3b0a1fbbd)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Sorting data frames in R programming language
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://gmyrianthous.medium.com/?source=post_page-----7fe3b0a1fbbd--------------------------------)[![Giorgos
    Myrianthous](../Images/ff4b116e4fb9a095ce45eb064fde5af3.png)](https://gmyrianthous.medium.com/?source=post_page-----7fe3b0a1fbbd--------------------------------)[](https://towardsdatascience.com/?source=post_page-----7fe3b0a1fbbd--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----7fe3b0a1fbbd--------------------------------)
    [Giorgos Myrianthous](https://gmyrianthous.medium.com/?source=post_page-----7fe3b0a1fbbd--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: Â·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----7fe3b0a1fbbd--------------------------------)
    Â·4 min readÂ·Apr 27, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4ee5e1a89e83d4f4e809ddc061df614a.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Andre Taissin](https://unsplash.com/fr/@andretaissin?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/hOwcob_3dpc?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: R is a programming language widely used by statisticians and machine learning
    scientists. DataFrames are powerful R constructs that facilitate data processing,
    manipulation and analysis in an effective and powerful manner.
  prefs: []
  type: TYPE_NORMAL
- en: In todayâ€™s short tutorial we will be demonstrating how to sort R data frames
    over one on more columns, either in descending or ascending order.
  prefs: []
  type: TYPE_NORMAL
- en: First, letâ€™s create a data frame in R, that we will be referencing throughout
    this tutorial in order to demonstrate a few useful concepts around sorting.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Sort R DataFrame on a single column (ascending or descending)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now letâ€™s suppose we want to order our dataframe on a particular column. To
    do so, we can take advantage of the `[order()](https://stat.ethz.ch/R-manual/R-devel/library/base/html/order.html)`
    function, and slice our data frame accordingly. Within the `order` function, we
    can specify the column we would want R to consider when sorting the data frame.
  prefs: []
  type: TYPE_NORMAL
- en: '**Ascending order**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now letâ€™s suppose that we would like to order our dataframe in ascending order,
    over the `value` column. By default, `order()` function will sort the data frame
    in ascending order:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Descending order
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If youâ€™d like to specify a descending order, all you need to do is specify a
    negative sign to the column value, that essentially will indicate that we want
    to invert the ascending order.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Sort DataFrame on multiple columns
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The `order()` function can take as many column names as we wish. This means
    that we instruct the language to sort the data frame over multiple columns. At
    the same time, it is also possible to use a different ordering strategy (i.e.
    descending vs ascending) for different columns.
  prefs: []
  type: TYPE_NORMAL
- en: The order we provide the column names in `order()` function will determine the
    actual order that the function will sort the input data frame.
  prefs: []
  type: TYPE_NORMAL
- en: Now letâ€™s suppose we want to order our data frame over `value` and `id` columns,
    in descending and ascending order, respectively. We can do so, using the following
    code snippet.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Note how the entries with `id=1` and `id=7` are ordered in ascending order,
    following the descedning ordering based on `value` column.
  prefs: []
  type: TYPE_NORMAL
- en: Now letâ€™s suppose we want to order the data frame on the same columns, but this
    time we are going to use a descending order for both.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'As mentioned already, make sure to provide the columns in the order you wish
    the function to consider them while ordering the input data frame. Notice how
    the output will change, when the input columns to `order()` function change:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Final Thoughts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In todayâ€™s short tutorial we demonstrated how to order data frames in R based
    on certain columns, either in ascending or descending order. Data frames are powerful
    constructs that lets R programmers and statisticians analyse data and extract
    meaningful insights.
  prefs: []
  type: TYPE_NORMAL
- en: Data frame ordering is one of the most fundamental aspects when it comes to
    analysing data. I hope this article has helped you understand how you can quickly
    sort your frames based on your specific requirements.
  prefs: []
  type: TYPE_NORMAL
- en: ðŸ‘‰ [**Become a member**](https://gmyrianthous.medium.com/membership) **and read
    every story on Medium. Your membership fee directly supports me and other writers
    you read. Youâ€™ll also get full access to every story on Medium.**
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://gmyrianthous.medium.com/membership?source=post_page-----7fe3b0a1fbbd--------------------------------)
    [## Join Medium with my referral link â€” Giorgos Myrianthous'
  prefs: []
  type: TYPE_NORMAL
- en: As a Medium member, a portion of your membership fee goes to writers you read,
    and you get full access to every storyâ€¦
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: gmyrianthous.medium.com](https://gmyrianthous.medium.com/membership?source=post_page-----7fe3b0a1fbbd--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: ðŸ‘‡**Related articles you may also like** ðŸ‘‡
  prefs: []
  type: TYPE_NORMAL
- en: '[](/etl-vs-elt-68e221d78719?source=post_page-----7fe3b0a1fbbd--------------------------------)
    [## ETL vs ELT: Whatâ€™s the Difference?'
  prefs: []
  type: TYPE_NORMAL
- en: A comparison between ETL and ELT in the context of Data Engineering
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/etl-vs-elt-68e221d78719?source=post_page-----7fe3b0a1fbbd--------------------------------)
    [](/create-local-dbt-project-e12c31bd3992?source=post_page-----7fe3b0a1fbbd--------------------------------)
    [## Create a Local dbt Project
  prefs: []
  type: TYPE_NORMAL
- en: How to create a local dbt project with dummy data for testing purposes with
    Docker
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/create-local-dbt-project-e12c31bd3992?source=post_page-----7fe3b0a1fbbd--------------------------------)
  prefs: []
  type: TYPE_NORMAL
