["```py\nimport pandas as pd\n\nSTART_DATE = '2022-01-01'\nURL = f'https://erddap.marine.ie/erddap/tabledap/IWaveBNetwork.csv?time%2CSignificantWaveHeight&time%3E={START_DATE}T00%3A00%3A00Z&station_id=%22AMETS%20Berth%20B%20Wave%20Buoy%22'\n\n# reading data directly from erdap\ndata = pd.read_csv(URL, skiprows=[1], parse_dates=['time'])\n\n# setting time to index and getting the target series\nseries = data.set_index('time')['SignificantWaveHeight']\n\n# transforming data to hourly and from centimeters to meters\nseries_hourly = series.resample('H').mean() / 100\n```", "```py\nimport numpy as np\nfrom scipy.stats import norm\n\n# a random series from the uniform dist.\nz = np.random.standard_normal(1000)\n# estimating the standard dev.\ns = z.std()\n\n# fixing the exceedance threshold\n# this is a domain dependent parameter\nthreshold = 1\n# prediction for a given instant\nyhat = 0.8\n\n# probability that the actual value exceeds threshold\nexceedance_prob = 1 - norm.cdf(threshold, loc=yhat, scale=s)\n```", "```py\n# using past 24 lags to forecast the next value\nN_LAGS, HORIZON = 24, 1\n# the threshold for large waves is 6 meters\nTHRESHOLD = 6\n\n# train test split\ntrain, test = train_test_split(series_hourly, test_size=0.2, shuffle=False)\n\n# transforming the time series into a tabular format\nX_train, Y_train = time_delay_embedding(train, n_lags=N_LAGS, horizon=HORIZON, return_Xy=True)\nX_test, Y_test = time_delay_embedding(test, n_lags=N_LAGS, horizon=HORIZON, return_Xy=True)\n\n# training a random forest\nregression = RandomForestRegressor()\nregression.fit(X_train, Y_train)\n\n# getting point forecasts\npoint_forecasts = regression.predict(X_test)\n```", "```py\nimport numpy as np\nfrom scipy.stats import norm\n\nstd = Y_train.std()\n\nexceedance_prob = np.asarray([1 - norm.cdf(THRESHOLD, loc=x_, scale=std)\n                              for x_ in point_forecasts])\n```"]