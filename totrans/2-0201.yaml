- en: A Guide to Live Inference with a Forecasting Model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/a-guide-to-live-inference-with-a-forecasting-model-aef5c437d4e](https://towardsdatascience.com/a-guide-to-live-inference-with-a-forecasting-model-aef5c437d4e)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Beyond offline training and testing predictions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://vcerq.medium.com/?source=post_page-----aef5c437d4e--------------------------------)[![Vitor
    Cerqueira](../Images/9e52f462c6bc20453d3ea273eb52114b.png)](https://vcerq.medium.com/?source=post_page-----aef5c437d4e--------------------------------)[](https://towardsdatascience.com/?source=post_page-----aef5c437d4e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----aef5c437d4e--------------------------------)
    [Vitor Cerqueira](https://vcerq.medium.com/?source=post_page-----aef5c437d4e--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----aef5c437d4e--------------------------------)
    ·6 min read·Feb 22, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5712aa3104517bd883b73db69383a67c.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Fringer Cat](https://unsplash.com/@nittygritty_photo?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: There are many online resources about using machine learning for forecasting.
    Yet, these focus on doing offline training and testing predictions.
  prefs: []
  type: TYPE_NORMAL
- en: Here, you’ll learn how to create a model and use it to forecast *actual* future
    observations.
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Forecasting resources often overlook the application of models for live predictions.
  prefs: []
  type: TYPE_NORMAL
- en: There is plenty of information on applying machine learning to forecasting.
    But, most of it is focused on a specific stage of the forecasting life-cycle.
    For example, data pre-processing or model building.
  prefs: []
  type: TYPE_NORMAL
- en: These resources often lack information on how a model is applied in practice.
    That is, how to extend it from an offline setting to a live one.
  prefs: []
  type: TYPE_NORMAL
- en: This aspect is especially important in time series because observations are
    correlated and their order matters.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s see how we can build a model and use it to make live forecasts.
  prefs: []
  type: TYPE_NORMAL
- en: Case Study — Forecasting Waves’ Height
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](../Images/2bf813351bc8f3d94be17531491b6d3c.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Silas Baisch](https://unsplash.com/ko/@silasbaisch?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: We’ll use a time series about the height of ocean waves. Forecasting this kind
    of data is important to manage maritime operations.
  prefs: []
  type: TYPE_NORMAL
- en: The dataset is captured by a smart buoy that is placed on the coast of Ireland.
    You can check reference [1] for the details.
  prefs: []
  type: TYPE_NORMAL
- en: This time series is continually updated with new observations. So, it’s a perfect
    example to develop a forecasting model for live predictions.
  prefs: []
  type: TYPE_NORMAL
- en: 'We’ll cover the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Getting historical data;
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Pre-processing and feature engineering;
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Selecting and building a forecasting model;
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Getting the latest observations and making forecasts.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Getting historical data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let’s start by getting the data.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can read it directly from ERDAP’s server as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Here’s the time series plot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/dc8fced645beebc30284cf4208ef6bba.png)'
  prefs: []
  type: TYPE_IMG
- en: Hourly ocean wave height time series. Source in reference [1]. Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: Pre-processing and feature engineering
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before modeling, you may need to do some pre-processing.
  prefs: []
  type: TYPE_NORMAL
- en: 'For illustration purposes, we’ll do two things:'
  prefs: []
  type: TYPE_NORMAL
- en: Take the log of the data. This helps stabilize the variance;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Feature extraction using summary statistics.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here’s the code for both of these operations:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The class above also includes an *inverse_transform* method to revert the log
    transformation. This is important to revert the log forecasts back to their original
    scale.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The function *feature_engineering* computes a rolling average and a rolling
    standard deviation. These are two examples of some of the features that you can
    compute to improve forecasting models.
  prefs: []
  type: TYPE_NORMAL
- en: Our goal is to show how different preprocessing steps fit into the pipeline
    for live inference. In your case, you want to make sure these or other transformations
    are needed. For example, using cross-validation or statistical tests.
  prefs: []
  type: TYPE_NORMAL
- en: Building a forecasting model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The next step is to build a model and estimate its performance.
  prefs: []
  type: TYPE_NORMAL
- en: We start by splitting the data into training and testing sets. Then, we transform
    these for auto-regression using a sliding window. You can [check a previous article](/machine-learning-for-forecasting-transformations-and-feature-extraction-bbbea9de0ac2)
    to know more about supervised learning with time series.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Using this setup, we’ll build a model to forecast the next 24 hours based on
    the previous 24 lags.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are several techniques for building forecasting models. Here, we’ll focus
    on a Random Forest. This includes hyperparameter tuning using cross-validation.
    Here’s how you can do it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: After optimizing the parameters, you can apply the model to test data. This
    provides a reliable performance estimate.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Note that [hyperparameter optimization and performance estimation are done in
    two separate parts of the data](https://medium.com/towards-data-science/how-to-do-cross-validation-effectively-1bbeb1d69ee8).
  prefs: []
  type: TYPE_NORMAL
- en: 'The chosen model is re-trained with all available data. You can also store
    it in a file using *joblib*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Applying the model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'At this stage, we accomplished several things:'
  prefs: []
  type: TYPE_NORMAL
- en: Read and pre-processed the time series;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Built and optimized a forecasting model using cross-validation;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Estimated its performance using a test set.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, we’re ready to apply this model in the wild.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s start by getting the latest observations from the buoy.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Why do we need these observations?
  prefs: []
  type: TYPE_NORMAL
- en: Recall that our model is based on auto-regression. This means that it uses recent
    past observations to predict future ones. In our example, we use the past 24 observations
    to predict the next 24 hours of data. So, the input to the model is based on the
    past 24 recent observations.
  prefs: []
  type: TYPE_NORMAL
- en: We need to restructure this data before applying the model. This means applying
    the same transformations we did for training the final model. Then, we load and
    apply the model to this sample.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Here’s how the forecasts look like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/020fd0ea38d00f2bb13c688201b0c540.png)'
  prefs: []
  type: TYPE_IMG
- en: Forecasts of a Random Forest (in navy blue) for the next 24 hours. Image by
    author.
  prefs: []
  type: TYPE_NORMAL
- en: The forecasts of individual trees are also included to convey forecasting uncertainty.
  prefs: []
  type: TYPE_NORMAL
- en: Since these are actual forecasts, we need to wait to check how the model has
    performed.
  prefs: []
  type: TYPE_NORMAL
- en: Key Takeaways
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this article, we built a model and used it to make forecasts in a real-world
    scenario.
  prefs: []
  type: TYPE_NORMAL
- en: 'We explored:'
  prefs: []
  type: TYPE_NORMAL
- en: how to get the latest observations and structure them for an auto-regression
    model;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: how to store and load a model;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: how to apply and revert transformations to get forecasts on the original data
    scale.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thanks for reading, and see you in the next story!
  prefs: []
  type: TYPE_NORMAL
- en: Related Articles
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Machine Learning for Forecasting: Transformations and Feature Extraction](/machine-learning-for-forecasting-transformations-and-feature-extraction-bbbea9de0ac2)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Machine Learning for Forecasting: Supervised Learning with Multivariate Time
    Series](/machine-learning-for-forecasting-supervised-learning-with-multivariate-time-series-b5b5044fe068)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] [Irish Wave Buoys](https://erddap.marine.ie/erddap/tabledap/IWaveBNetwork.html)
    from Marine Institute (Dataset ID: IWaveBNetwork). License: CC BY 4.0'
  prefs: []
  type: TYPE_NORMAL
