- en: How to Change the Datetime Format in Pandas
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/datetime-format-pandas-541c661d41c2](https://towardsdatascience.com/datetime-format-pandas-541c661d41c2)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Working with datetimes in Python and pandas
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://gmyrianthous.medium.com/?source=post_page-----541c661d41c2--------------------------------)[![Giorgos
    Myrianthous](../Images/ff4b116e4fb9a095ce45eb064fde5af3.png)](https://gmyrianthous.medium.com/?source=post_page-----541c661d41c2--------------------------------)[](https://towardsdatascience.com/?source=post_page-----541c661d41c2--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----541c661d41c2--------------------------------)
    [Giorgos Myrianthous](https://gmyrianthous.medium.com/?source=post_page-----541c661d41c2--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----541c661d41c2--------------------------------)
    ·4 min read·Jan 6, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/985c477abc99a4c06172f1b8a1734c98.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Nathan Dumlao](https://unsplash.com/@nate_dumlao?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/LPRrEJU2GbQ?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: Pandas is one of the most commonly used packages in Python ecosystem that provides
    a rich functionality that helps developers analyse and transform data in-memory.
  prefs: []
  type: TYPE_NORMAL
- en: The representation of datetime constructs within a pandas DataFrame can sometimes
    become a bit challenging, especially if you are not very familiar with how the
    library handles such objects. Depending on whether you would like to represent
    a datetime as a pandas `object` dtype (`string`) or `datetime` you might find
    yourself going back and forth when it comes to working with such columns.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, we will demonstrate how to work with different representations
    of datetime objects in pandas as well as how to change the format or even the
    data type.
  prefs: []
  type: TYPE_NORMAL
- en: First, let’s create an example DataFrame that we will be referencing throughout
    this tutorial in order to demonstrate a few concepts.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Converting column of type object into datetime
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In the example dataframe, we provide the dates as strings and pandas will automatically
    parse the column as a `object` dtype. In order to do so, we simply need to call
    the `to_datetime()` method and assign the result back to the original column.
    Additionally, we specify the format of the dates to make sure that pandas parses
    them correctly:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Now if we print out the new dtypes of the dataframe we should see that the
    `colC` column’s type has changed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'If we also print the dataframe out, we’ll notice a slightly different format
    as well, given that the dtype of `colC` has changed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Changing the format of datetime objects
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that we have converted the data type of `colC` into `datetime`, we can take
    advantage of the `strftime()` method and modify the date format of the records.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s suppose that we would want the dates to be represented in `mm/dd/yyyy`
    format. All we need to do is specify this format when calling `strftime()`. Instead
    of overwriting the values in `colC`, let’s create a new column with the new format:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Now the newly created column `colE` will follow the specified format:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Note however that the resulting column will be of type `object` since `strftime`
    generates the output in string format:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Final Thoughts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Dealing with datetime objects in pandas can sometimes be a tricky task. This
    is because such objects can be represented using various data types, including
    `object` or `datetime`. In addition, the date format also varies and is mostly
    influenced by users’ locations (for exampe people in the US have a strong preference
    towards `mm/dd/yyyy` format).
  prefs: []
  type: TYPE_NORMAL
- en: In this article we demonstrated how to work with various different types and
    how to go back and forth when working with `object` and `datetime` objects. I
    hope the tutorial will help you work with such data types and more effectively!
  prefs: []
  type: TYPE_NORMAL
- en: '[**Become a member**](https://gmyrianthous.medium.com/membership) **and read
    every story on Medium. Your membership fee directly supports me and other writers
    you read. You’ll also get full access to every story on Medium.**'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://gmyrianthous.medium.com/membership?source=post_page-----541c661d41c2--------------------------------)
    [## Join Medium with my referral link — Giorgos Myrianthous'
  prefs: []
  type: TYPE_NORMAL
- en: As a Medium member, a portion of your membership fee goes to writers you read,
    and you get full access to every story…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: gmyrianthous.medium.com](https://gmyrianthous.medium.com/membership?source=post_page-----541c661d41c2--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: '**Related articles you may also like**'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/args-kwargs-python-d9c71b220970?source=post_page-----541c661d41c2--------------------------------)
    [## *args and **kwargs in Python'
  prefs: []
  type: TYPE_NORMAL
- en: Discussing the difference between positional and keyword arguments and how to
    use *args and **kwargs in Python
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/args-kwargs-python-d9c71b220970?source=post_page-----541c661d41c2--------------------------------)
    [](/pycache-python-991424aabad8?source=post_page-----541c661d41c2--------------------------------)
    [## What is __pycache__ in Python?
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the __pycache__ folder being created when running Python code
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/pycache-python-991424aabad8?source=post_page-----541c661d41c2--------------------------------)
  prefs: []
  type: TYPE_NORMAL
