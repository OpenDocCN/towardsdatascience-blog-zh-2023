- en: Top 10 errors in R and how to fix them
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: R语言中的前10个错误及其修复方法
- en: 原文：[https://towardsdatascience.com/top-10-errors-in-r-and-how-to-fix-them-e8848718c836](https://towardsdatascience.com/top-10-errors-in-r-and-how-to-fix-them-e8848718c836)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/top-10-errors-in-r-and-how-to-fix-them-e8848718c836](https://towardsdatascience.com/top-10-errors-in-r-and-how-to-fix-them-e8848718c836)
- en: In this post, I highlight the 10 most common errors in R and how to fix them.
    I also mention a couple of warnings (which are different than errors).
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在这篇文章中，我重点介绍了R语言中**10个最常见的错误及其解决方法**。我还提到了一些警告（它们与错误不同）。
- en: '[](https://antoinesoetewey.medium.com/?source=post_page-----e8848718c836--------------------------------)[![Antoine
    Soetewey](../Images/51d7837d18ff15a62cac2343a485e35d.png)](https://antoinesoetewey.medium.com/?source=post_page-----e8848718c836--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e8848718c836--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e8848718c836--------------------------------)
    [Antoine Soetewey](https://antoinesoetewey.medium.com/?source=post_page-----e8848718c836--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://antoinesoetewey.medium.com/?source=post_page-----e8848718c836--------------------------------)[![Antoine
    Soetewey](../Images/51d7837d18ff15a62cac2343a485e35d.png)](https://antoinesoetewey.medium.com/?source=post_page-----e8848718c836--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e8848718c836--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e8848718c836--------------------------------)
    [Antoine Soetewey](https://antoinesoetewey.medium.com/?source=post_page-----e8848718c836--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e8848718c836--------------------------------)
    ·19 min read·Feb 7, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----e8848718c836--------------------------------)
    ·19分钟阅读·2023年2月7日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/4de29e9b3b38890b3f696b925355bfba.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4de29e9b3b38890b3f696b925355bfba.png)'
- en: Photo by [Kai Pilger](https://unsplash.com/@kaip?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[Kai Pilger](https://unsplash.com/@kaip?utm_source=medium&utm_medium=referral)提供
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引言
- en: If you are just starting with R, you will often encounter errors in your code
    which prevent it to run. I remember when I was just starting to use R, errors
    in my code were so frequent that I almost gave up learning this programming language.
    I even recall that I went back to Excel a few times to finish my analyses because
    I could not find what was causing the issue.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你刚开始使用R，你会经常遇到阻止代码运行的错误。我记得在刚开始使用R时，我的代码错误频繁到我几乎放弃学习这门编程语言。我甚至回到Excel几次来完成分析，因为我找不到问题的根源。
- en: 'Fortunately, I forced myself to continue despite the difficulties of the beginning.
    And today, even if I still encounter errors almost every time I write R code,
    with experience and practice, it takes less and less time to fix them. If you
    are also struggling at the beginning, rest assured, it is normal: everyone experiences
    some frustration when learning a new programming language (and this is the case
    not only with R).'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，我强迫自己继续前进，尽管开始时困难重重。即使今天，我几乎每次写R代码时仍会遇到错误，但随着经验和练习，修复错误所需的时间越来越少。如果你也在刚开始时遇到困难，放心，这很正常：每个人在学习新编程语言时都会经历一些挫折（而且这不仅仅是R语言的情况）。
- en: In this post, I highlight the **10 most common errors in R and how to fix them**.
    Of course, errors depend on your code and your analyses, so it is impossible to
    cover all of them (and Google does it way better than me). However, I would like
    to focus on some common syntax mistakes that are frequent when learning R, and
    which can sometimes take a long time to be fixed before realizing that the solution
    is right in front of our eyes.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我重点介绍了**R语言中10个最常见的错误及其修复方法**。当然，错误取决于你的代码和分析，因此不可能涵盖所有错误（Google做得比我更好）。不过，我想专注于一些在学习R时常见的语法错误，有时这些错误需要较长时间才能解决，而解决方法就在眼前。
- en: This collection is based on my personal experience and the errors encountered
    by my students when I [teach](https://antoinesoetewey.com/teaching/) R. This list
    being non-exhaustive, feel free to comment (at the end of the post) with errors
    you often face when using R.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这个集合基于我的个人经验以及我在[教授](https://antoinesoetewey.com/teaching/)R语言时遇到的学生错误。这个列表并不详尽，欢迎在帖子末尾评论你在使用R时常遇到的错误。
- en: For each error, I provide examples and solutions to fix them. I also mention
    a couple of warnings (which are, strictly speaking, not errors) at the end of
    the post.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个错误，我提供了示例和解决方案。我还在文章的最后提到了一些警告（严格来说，这些不是错误）。
- en: 1\. Unmatched parentheses, curly braces, square brackets or quotes
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 不匹配的括号、大括号、方括号或引号
- en: One rather trivial but still quite frequent error is a missing parenthesis,
    curly brace, square bracket or quotation mark.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 一个相当简单但仍然很常见的错误是缺少括号、大括号、方括号或引号。
- en: 'This type of error is applicable to many programming languages. In R, for instance:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这种错误适用于许多编程语言。例如在R中：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: These errors are easy to detect when the code is basic, but can become much
    harder to spot with a more complex code, for instance:[1](https://statsandr.com/blog/top-10-errors-in-r/#fn1)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 当代码较简单时，这些错误容易检测，但在代码更复杂时，例如：[1](https://statsandr.com/blog/top-10-errors-in-r/#fn1)就会变得更加难以发现。
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Thankfully, if you use RStudio,[2](https://statsandr.com/blog/top-10-errors-in-r/#fn2)
    a closing parenthesis, curly brace, square bracket or quotation mark will automatically
    be written when you open one.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，如果你使用RStudio，[2](https://statsandr.com/blog/top-10-errors-in-r/#fn2) 当你打开一个括号、大括号、方括号或引号时，RStudio会自动写入对应的闭合符号。
- en: 'Bear in mind that when installing a package, you *must* use (single or double)
    quotation marks around the package’s name:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，在安装包时，你*必须*在包名周围使用（单引号或双引号）：
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Instead, write one of the two following options:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，写下以下两个选项之一：
- en: '[PRE5]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Solution
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'The solution of course is to simply match all opening parentheses, curly braces,
    square brackets and quotation marks with their closing counterparts:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案当然是确保所有的左括号、大括号、方括号和引号都与其对应的右括号匹配：
- en: '[PRE6]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Also, make sure:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，确保：
- en: 'to correctly place commas:'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 正确放置逗号：
- en: '[PRE14]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'you do not mix single and double quotation marks for the same element:'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保你不会对同一元素混用单引号和双引号：
- en: '[PRE19]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Note that `c('Group 1', "Group 2")` does not throw an error but for consistency,
    it is not recommended to mix single and double quotes within the same vector.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 注意 `c('Group 1', "Group 2")` 不会抛出错误，但为了保持一致性，不推荐在同一向量中混用单引号和双引号。
- en: 2\. Using a function that is not installed or loaded
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 使用未安装或未加载的函数
- en: 'If you encounter the following error: “Error in … : could not find function
    ‘…’”, for example:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '如果你遇到以下错误：“Error in … : could not find function ‘…’”，例如：'
- en: '![](../Images/0ef20392d1313d4ac1c7f6440d0d0173.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0ef20392d1313d4ac1c7f6440d0d0173.png)'
- en: Image by author
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: it means you are trying to use a function belonging to a package which is not
    yet installed or loaded.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着你正在尝试使用一个尚未安装或加载的包中的函数。
- en: Solution
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'To solve this error, you have to install the package (if it is not installed
    yet) and load it with the `install.packages()` and `library()` functions, respectively:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 要解决这个错误，你需要安装包（如果还未安装）并使用 `install.packages()` 和 `library()` 函数分别加载它：
- en: '[PRE21]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: If you are not sure about the usage of these two functions, see more details
    about [installing and loading a package in R](https://statsandr.com/blog/an-efficient-way-to-install-and-load-r-packages/).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对这两个函数的用法不确定，可以查看有关[在R中安装和加载包的详细信息](https://statsandr.com/blog/an-efficient-way-to-install-and-load-r-packages/)。
- en: 3\. Typos in function, variable, dataset, object or package names
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 函数、变量、数据集、对象或包名称中的拼写错误
- en: 'Another common mistake is to misspell a function, a variable, a dataset, an
    object or a package’s name, for example:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个常见错误是拼写函数、变量、数据集、对象或包的名称错误，例如：
- en: '[PRE23]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Solution
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'Make sure that you correctly spell all your functions, variables, datasets,
    objects and packages:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你正确拼写所有函数、变量、数据集、对象和包的名称：
- en: Note that **R is case sensitive**; `mean()` is considered different than `Mean()`
    for R!
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 注意**R语言区分大小写**；`mean()` 和 `Mean()` 在R中被认为是不同的！
- en: '[PRE33]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[PRE34]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[PRE35]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '[PRE39]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '[PRE41]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: If you are sure that you correctly spelled an object, a function or a dataset
    but you still have an error stating that “object ‘…’ is not found”, make sure
    that you defined your object/function/dataset *before* calling it!
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你确定你正确拼写了一个对象、函数或数据集，但仍然出现“对象‘…’未找到”的错误，确保你在调用它之前*定义*了你的对象/函数/数据集！
- en: It often happens that a student asks me to come to his/her computer because
    he/she runs the exact same code than me, but cannot make it work. Most of the
    time, if his/her code is indeed exactly the same than mine, he/she simply has
    not executed a object/function/dataset before running the code which includes
    that object/function/dataset. In other words, he/she simply tries to use an undefined
    object or variable.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 经常发生的情况是，学生让我去他的/她的电脑前，因为他/她运行了与我完全相同的代码，却无法使其正常工作。大多数时候，如果他的/她的代码确实与我的完全相同，他/她只是没有在运行包含该对象/函数/数据集的代码之前执行该对象/函数/数据集。换句话说，他/她只是试图使用一个未定义的对象或变量。
- en: Remember that writing code in a R script (contrarily to the console) does not
    mean it is compiled. You actually have to run it (by clicking on the Run button
    or using the keyboard shortcut) in order the code to be executed and used later.
    If you are still struggling with this, see the [basics of R and RStudio](https://statsandr.com/blog/how-to-install-r-and-rstudio/).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，在 R 脚本中编写代码（与控制台不同）并不意味着它会被编译。你实际上必须运行它（通过点击运行按钮或使用快捷键）以便代码被执行并在之后使用。如果你仍然遇到困难，可以参见[R
    和 RStudio 基础知识](https://statsandr.com/blog/how-to-install-r-and-rstudio/)。
- en: 4\. Missing, incorrect or misspelled arguments in functions
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 函数中的缺失、不正确或拼写错误的参数
- en: Most R functions require arguments. For example, the `rnorm()` function requires
    at least the number of observations, specified via the argument `n`.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数 R 函数需要参数。例如，`rnorm()`函数至少需要观察数，通过参数`n`指定。
- en: 'Your code will not run if you do not specify compulsory arguments, or if incorrectly
    specify an argument. Moreover, the result might not be what you expect if you
    misspell an argument:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有指定必要的参数，或者错误地指定了参数，你的代码将无法运行。此外，如果你拼写错误一个参数，结果可能不会是你所期望的：
- en: '[PRE43]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '[PRE45]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[PRE46]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '[PRE47]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: The last piece of code does not throw an error, but the result is not what we
    want.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一段代码不会抛出错误，但结果并不是我们想要的。
- en: Solution
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'To solve these errors, make sure to specify **at least all compulsory arguments**
    of the function, and the correct ones:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这些错误，请确保指定**至少所有必需的参数**，并且是正确的：
- en: In `rnorm()`, it is the standard deviation, `sd`, which can be specified in
    addition to the number of observations `n` (instead of the variance `var`).
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`rnorm()`中，除了观察数`n`之外，可以指定标准差`sd`（而不是方差`var`）。
- en: Removing `NA` is done with `na.rm` (instead of `narm`).
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除`NA`时应使用`na.rm`（而不是`narm`）。
- en: '[PRE49]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '[PRE50]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[PRE51]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[PRE52]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'If you do not know the arguments of a function by heart, you can always check
    the documentation with `?function_name` or `help(function_name)`, for example:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不记得一个函数的参数，可以随时使用`?function_name`或`help(function_name)`来查看文档，例如：
- en: '[PRE53]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '[PRE54]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 5\. Wrong, inappropriate or inconsistent data types
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5\. 错误、不适当或不一致的数据类型
- en: 'There are several [data types in R](https://statsandr.com/blog/data-types-in-r/),
    the main ones being:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在 R 中有几种[数据类型](https://statsandr.com/blog/data-types-in-r/)，主要有：
- en: Numeric
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数值型
- en: Character
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符
- en: Factor
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 因子
- en: Logical
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 逻辑
- en: You know that some operations and analyses are possible and appropriate only
    with some specific types of data.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 你知道某些操作和分析仅对某些特定类型的数据是可能和适当的。
- en: 'For example, it is not appropriate to compute the [mean](https://statsandr.com/blog/descriptive-statistics-in-r/#mean)
    of a factor or character variable:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，计算[均值](https://statsandr.com/blog/descriptive-statistics-in-r/#mean)时，使用因子或字符变量是不合适的：
- en: '[PRE55]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '[PRE56]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: '[PRE57]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '[PRE58]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Likewise, although it is technically possible, it makes little sense to draw
    a [barplot](https://statsandr.com/blog/descriptive-statistics-in-r/#barplot) of
    a [quantitative continuous](https://statsandr.com/blog/variable-types-and-examples/)
    variable because in most cases, the frequency will be 1 for each value:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，虽然技术上可能，但绘制[条形图](https://statsandr.com/blog/descriptive-statistics-in-r/#barplot)对于[连续定量](https://statsandr.com/blog/variable-types-and-examples/)变量意义不大，因为在大多数情况下，每个值的频率将是
    1。
- en: '[PRE59]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: '![](../Images/1c3f7da05a76fa39d1cb11ac662a462e.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1c3f7da05a76fa39d1cb11ac662a462e.png)'
- en: Plot by author
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 作者图
- en: '*(By the way, if your data is not already displayed in the form of a table,
    do not forget to add* `*table()*` *inside the* `*barplot()*` *function.)*'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '*(顺便说一下，如果你的数据还没有以表格形式显示，不要忘记在`*barplot()*`函数内添加`*table()*`。)*'
- en: Solution
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解决方案
- en: Make sure to use the appropriate operation and type of analysis depending on
    the variable(s) of interest.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 确保根据感兴趣的变量使用适当的操作和分析类型。
- en: 'For example:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: for factor variables, it is more appropriate to compute frequencies and/or relative
    frequencies, and draw barplots
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于因子变量，更合适的方法是计算频率和/或相对频率，并绘制条形图。
- en: for quantitative continuous variables, it is more appropriate to compute the
    mean, median, etc. and draw histograms, boxplots, etc.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于定量连续变量，计算均值、中位数等，以及绘制直方图、箱线图等更为合适。
- en: for logical variables, the mean,[3](https://statsandr.com/blog/top-10-errors-in-r/#fn3)
    a frequency table and a barplot are appropriate
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于逻辑变量，均值，[3](https://statsandr.com/blog/top-10-errors-in-r/#fn3) 频率表和条形图是合适的。
- en: for character variables, [word clouds](https://statsandr.com/blog/draw-a-word-cloud-with-a-shiny-app/)
    are the most appropriate (unless the variable can be considered as a factor variable
    because there are not too many different levels)
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于字符变量，[词云](https://statsandr.com/blog/draw-a-word-cloud-with-a-shiny-app/)是最合适的（除非该变量可以被视为因子变量，因为不同水平不多）。
- en: We now illustrate the examples in R:[4](https://statsandr.com/blog/top-10-errors-in-r/#fn4)
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们在R中说明这些示例：[4](https://statsandr.com/blog/top-10-errors-in-r/#fn4)
- en: '[PRE60]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: '[PRE61]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: '[PRE62]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: '[PRE63]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: '[PRE64]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '![](../Images/c5dc8c6ec5f0789de10055b6d4cb9dd0.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c5dc8c6ec5f0789de10055b6d4cb9dd0.png)'
- en: Plot by author
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 作者绘图
- en: '[PRE65]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: '[PRE66]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: '[PRE67]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: '[PRE68]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: '![](../Images/f8bdde4d4e8393d95c0daec1f0d122ed.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f8bdde4d4e8393d95c0daec1f0d122ed.png)'
- en: Plot by author
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 作者绘图
- en: '[PRE69]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: '[PRE70]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: '[PRE71]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: '[PRE72]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: '[PRE73]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: '[PRE74]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: '![](../Images/0239b95877a26e5064a2a75a2957bbc3.png)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0239b95877a26e5064a2a75a2957bbc3.png)'
- en: Plot by author
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 作者绘图
- en: For the interested reader, see the most common [descriptive statistics in R](https://statsandr.com/blog/descriptive-statistics-in-r/)
    for different types of data.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 对于感兴趣的读者，可以查看[在R中最常见的描述性统计](https://statsandr.com/blog/descriptive-statistics-in-r/)以了解不同类型的数据。
- en: Note that, as for descriptive statistics, the choice of the statistical test
    depends on the variable’s type. See this [flowchart](https://statsandr.com/blog/what-statistical-test-should-i-do/)
    to help you in selecting the most appropriate statistical test depending on the
    number of variables and their types.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，与描述性统计一样，选择统计测试取决于变量的类型。请查看这个[流程图](https://statsandr.com/blog/what-statistical-test-should-i-do/)来帮助你选择最合适的统计测试，取决于变量的数量和类型。
- en: 'An error linked to the one mentioned above is **inconsistent** data type. See
    it in practice with the following example:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 与上述问题相关的一个错误是**不一致**的数据类型。请查看以下示例：
- en: '[PRE75]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: '[PRE76]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: '[PRE77]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: '[PRE78]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: As you can see, vector `x` is numerical, whereas vector `y` is in the form of
    character. This is due to the fact that the last element of `y` is surrounded
    with quotation marks (and thus considered as a string instead of a numerical value),
    so the entire vector takes the character form.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，向量`x`是数值型的，而向量`y`是字符型的。这是因为`y`的最后一个元素被引号包围（因此被视为字符串而非数值），所以整个向量被视为字符型。
- en: This can happen when you [import a dataset into R](https://statsandr.com/blog/how-to-import-an-excel-file-in-rstudio/)
    and one or several elements of a variable are not encoded correctly. This leads
    to the entire variable to be considered as a character variable by R.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 当你[将数据集导入R](https://statsandr.com/blog/how-to-import-an-excel-file-in-rstudio/)时，如果变量的一个或多个元素未被正确编码，可能会发生这种情况。这会导致R将整个变量视为字符变量。
- en: To avoid this, it is a good practice to check the structure of your dataset
    (with `str()`) after importing it to make sure all your variables have the desired
    format. If not, you can either correct the values in the initial file or change
    the format in R (with `as.numeric()`).
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 为避免这种情况，导入数据集后，最好检查数据集的结构（使用`str()`），以确保所有变量都具有所需的格式。如果不符合，可以在初始文件中更正值或在R中更改格式（使用`as.numeric()`）。
- en: 6\. Forgetting the + sign in ggplot2
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 6\. 忘记在ggplot2中添加+号
- en: If you just learned to use the [ggplot2 package](https://statsandr.com/blog/graphics-in-r-with-ggplot2/)
    for your visualizations (and I highly recommend it!), a common mistake is to forget
    the `+` sign.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你刚学会使用[ggplot2包](https://statsandr.com/blog/graphics-in-r-with-ggplot2/)进行可视化（我强烈推荐！），一个常见错误是忘记`+`号。
- en: 'You know that a visualization made with ggplot2 is constructed by adding several
    layers:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 你知道使用ggplot2制作的可视化是通过添加多个图层构建的：
- en: '[PRE79]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '[PRE80]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: '![](../Images/78c5d04ba34a4a3945f71fd1711dd810.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/78c5d04ba34a4a3945f71fd1711dd810.png)'
- en: Plot by author
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 作者绘图
- en: Solution
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解决方案
- en: For all your graphics with ggplot2, do not forget to add a `**+**` **sign after
    each layer *except* the last one**.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 对于你所有的ggplot2图形，请不要忘记在每一层之后添加`**+**` **符号，*除了*最后一层**。
- en: 7\. Misunderstanding between = and ==
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 7\. =和==的误解
- en: 'Assignment in R can be done in three ways, from the most to the least common:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在R中，赋值可以通过三种方式完成，从最常见到最少见：
- en: '`<-`'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`<-`'
- en: '`=`'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`=`'
- en: '`assign()`'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`assign()`'
- en: The second method, that is `=`, should not be confused with `==`.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种方法，即`=`，不应与`==`混淆。
- en: 'Indeed, assigning an object (with any of the three above methods) is used to
    save something in R. For example, if we want to save the vector `(1, 3, 7)` and
    rename that vector `x`, we can write:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，赋值对象（使用上述任何一种方法）用于在R中保存某些东西。例如，如果我们想保存向量`(1, 3, 7)`并将该向量重命名为`x`，我们可以写：
- en: '[PRE81]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: '[PRE82]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'When executing this piece of code, you will see that the vector `x` of size
    3 appears in the tab “Environment” (the top right panel if you use the default
    view of RStudio):'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 执行这段代码时，你会看到大小为3的向量`x`出现在“Environment”标签页中（如果你使用RStudio的默认视图，它在右上角面板）：
- en: '![](../Images/28383f29ff75cb95aa0d13523ed68397.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/28383f29ff75cb95aa0d13523ed68397.png)'
- en: Image by author
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: 'From now on, we can use that vector simply by calling it by its name:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 从现在开始，我们可以通过调用其名称来简单使用那个向量：
- en: '[PRE83]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: '[PRE84]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: 'By no means, you can assign an object with `==`:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 绝对不要用`==`来赋值对象：
- en: '[PRE85]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: So you are wondering, when would we need to use `==`? Actually, it is used when
    you want to use an equal sign.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你会问，我们什么时候需要使用`==`？实际上，当你想使用等号时，它就会被用到。
- en: 'I understand that it may be abstract and confusing at the moment, so let’s
    suppose the following two scenarios as examples (which are the two most common
    cases when we use `==`):'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 我理解这可能会在目前显得抽象和令人困惑，因此让我们假设以下两个场景作为示例（这也是使用`==`时最常见的两个情况）：
- en: we want to check whether an assigned object or variable respects some conditions,
    and
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们想检查分配的对象或变量是否满足某些条件，并且
- en: we want to subset a dataframe based on one or several conditions.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们想根据一个或多个条件对数据框进行子集化。
- en: 'For these examples, suppose a [sample](https://statsandr.com/blog/what-is-the-difference-between-population-and-sample/)
    of 5 children:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这些例子，假设有一个包含5个孩子的[样本](https://statsandr.com/blog/what-is-the-difference-between-population-and-sample/)：
- en: '[PRE86]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: '[PRE87]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: '[PRE88]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: 'Let’s now write different pieces of code for these two scenarios to illustrate
    them:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们为这两个场景编写不同的代码来说明它们：
- en: 'We want to check whether the variable `Age` is equal to the vector `(1, 2,
    3, 4, 5)`:'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们想检查变量`Age`是否等于向量`(1, 2, 3, 4, 5)`：
- en: '[PRE89]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: '[PRE90]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: With this code, we ask whether the first element of the variable `Age` is equal
    to 1, the second element of the variable `Age` is equal to 2, and so on. The answer
    is of course `FALSE`, `FALSE`, `TRUE`, `FALSE` and `FALSE` since only the third
    child has an age **equal** to 3 years.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这段代码，我们询问变量`Age`的第一个元素是否等于1，第二个元素是否等于2，依此类推。答案当然是`FALSE`，`FALSE`，`TRUE`，`FALSE`和`FALSE`，因为只有第三个孩子的年龄**等于**3岁。
- en: 'We want to know which of our 5 sampled children are girls:'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们想知道我们5个样本中的哪些是女孩：
- en: '[PRE91]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: '[PRE92]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: The results show that the first, second and fifth children are girls, while
    the third and fourth children are not girls.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 结果显示，第一、第二和第五个孩子是女孩，而第三和第四个孩子不是女孩。
- en: 'If you write any of these two lines:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你写下以下任意一行：
- en: '[PRE93]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: You actually overwrite the `Age` and `Gender` variables, such that our 5 children
    will have an age from 1 to 5 (1 year for the first child, up to 5 years for the
    fifth child) and all of them will be girls.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 你实际上是覆盖了`Age`和`Gender`变量，使得我们的5个孩子将有一个从1到5的年龄（第一个孩子1岁，到第五个孩子5岁），他们都是女孩。
- en: 'Now suppose we want to subset our dataframe based on a condition, namely, we
    want to extract only the children who are 7 years old:'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在假设我们想根据一个条件对数据框进行子集化，即，我们只提取7岁的小孩：
- en: '[PRE94]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: '[PRE95]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: 'If you do not want to use the subset function, you can also use square brackets:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不想使用子集函数，你也可以使用方括号：
- en: '[PRE96]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: '[PRE97]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: As you can see in the previous examples, we do not want to assign anything.
    Instead, we are asking “is this variable or vector *equal* to something else?”.
    For that specific need, we use `==`.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 如你在前面的例子中看到的，我们并不想赋值任何东西。相反，我们在问“这个变量或向量*是否等于*其他东西？”对此特定需求，我们使用`==`。
- en: So to sum up, for technical reasons and in order to distinguish between the
    two concepts, R uses `=` for assignments, and `==` for the equality sign. Make
    sure to understand the difference between the two to avoid any errors.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，出于技术原因，为了区分这两个概念，R使用`=`进行赋值，`==`用于等号。确保理解这两者之间的区别以避免错误。
- en: 8\. Undefined columns selected
  id: totrans-217
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 8\. 选择了未定义的列
- en: 'If you are used to subset dataframes with square brackets, `[]`, instead of
    the `subset()` or `filter()` functions, you may have faced the error “Error in
    [.data.frame(…) : undefined columns selected”.'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '如果你习惯用方括号`[]`来子集数据框，而不是`subset()`或`filter()`函数，你可能会遇到“Error in [.data.frame(…)
    : undefined columns selected”错误。'
- en: This occurs when R does not understand the column you want to use while subsetting
    the dataset.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 当R在子集化数据集时无法理解你想使用的列时，就会发生这种情况。
- en: 'Considering the same sample of 5 children introduced earlier, the following
    code will throw an error:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑之前引入的5个孩子的样本，以下代码将引发错误：
- en: '[PRE98]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: '[PRE99]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: because it does not specify the column dimension.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 因为它没有指定列的维度。
- en: Solution
  id: totrans-224
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'Remember that dataframes in R have two dimensions:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，R中的数据框有两个维度：
- en: the rows (one for each experimental unit), and
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 行（每个实验单位一行），以及
- en: the columns (one for each variable)
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列（每个变量一列）
- en: and **in that particular order** (so row first, then column)!
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 并且**按照那个特定的顺序**（所以先是行，然后是列）！
- en: Since dataframes have two dimensions, R expects two dimensions when you call
    `dat[]`.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 由于数据框有两个维度，当你调用`dat[]`时，R期望两个维度。
- en: 'In particular, it expects the first and then the second dimension, **separated
    by a comma**:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是，它期望先是第一个维度然后是第二个维度，**用逗号分隔**：
- en: '[PRE100]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: '[PRE101]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: This code means that we are extracting all rows where `Age` is equal to 7 (first
    dimension, i.e. before the comma), for all variables of the dataset (since we
    did not specify any column after the comma).
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码意味着我们正在提取所有`Age`等于7的行（第一个维度，即逗号前面），对于数据集的所有变量（因为我们在逗号后面没有指定任何列）。
- en: For the interested reader, see more ways to [subset and manipulate data in R](https://statsandr.com/blog/data-manipulation-in-r/).
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 对感兴趣的读者，请参阅[在R中子集和操作数据的更多方法](https://statsandr.com/blog/data-manipulation-in-r/)。
- en: 9\. Problem when importing or using the wrong data file
  id: totrans-235
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 9. 导入或使用错误数据文件的问题
- en: Importing a dataset in R can be quite challenging for beginners, mainly due
    to the misunderstanding about the working directory.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 对初学者来说，在R中导入数据集可能非常具有挑战性，主要是由于对工作目录的误解。
- en: 'When importing a file, **R will not search for the file in all your folders**
    of your computer. Instead, it will look only in one specific folder. If your dataset
    is not inside that folder, it will result in an error such as “cannot open file
    ‘…’: No such file or directory”:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 在导入文件时，**R不会在你计算机上的所有文件夹中查找文件**。相反，它只会在一个特定的文件夹中查找。如果你的数据集不在那个文件夹中，就会出现“无法打开文件‘…’：没有此类文件或目录”的错误：
- en: '![](../Images/f959e5fc295037cf47ed64a93656d374.png)'
  id: totrans-238
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f959e5fc295037cf47ed64a93656d374.png)'
- en: Image by author
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: To fix this, you must specify the path to the folder where your dataset is located.
    In other words, you need to tell R in which folder you want it to work, hence
    the name working directory.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 要解决这个问题，你必须指定数据集所在文件夹的路径。换句话说，你需要告诉R你希望它在什么文件夹中工作，这就是所谓的工作目录。
- en: 'Setting the working directory can be done with the `setwd()` function or via
    the “Files” tab in the lower right panel of RStudio:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过`setwd()`函数或通过RStudio右下角面板的“文件”标签设置工作目录：
- en: '![](../Images/683454af6a073198bd8fb4086918c495.png)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/683454af6a073198bd8fb4086918c495.png)'
- en: Image by author
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Alternatively, you can move the dataset in the folder where R is currently working
    (this can be found with `getwd()`). See more details on [importing a file into
    R and about the working directory](https://statsandr.com/blog/how-to-import-an-excel-file-in-rstudio/).
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你可以将数据集移动到R当前工作文件夹中（可以通过`getwd()`找到）。有关[将文件导入R和工作目录的更多细节](https://statsandr.com/blog/how-to-import-an-excel-file-in-rstudio/)。
- en: Another related problem is to use the wrong file. This error is different than
    the previous ones in the sense that you will not encounter an error but your analyses
    will still be wrong.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个相关的问题是使用错误的文件。这种错误与之前的错误不同，因为你不会遇到错误，但你的分析结果仍然会是错误的。
- en: It may sound trivial, but make sure to import and use the correct data file!
    This is particularly the case if you have files for different points in time and
    which have a common structure (for example weekly or monthly data files with the
    exact same variables). It happened to me that I reported results for the wrong
    week (fortunately, without much consequence).
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能听起来很琐碎，但一定要确保导入和使用正确的数据文件！特别是当你有不同时间点的文件且这些文件有共同结构（例如，具有完全相同变量的每周或每月数据文件）时，这一点尤为重要。我曾经因为报告了错误的周数据而出现过这种情况（幸运的是，结果没有太大影响）。
- en: Also, make sure that you actually use all the rows you want to include in your
    analyses. It happened to me that, in order to test a model (and avoid long computing
    times), I extracted a random sample of the original dataset, and almost forgot
    about this sampling when running my final analyses.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，确保你实际使用了所有想要包含在分析中的行。我曾经为了测试一个模型（并避免长时间计算），从原始数据集中提取了一个随机样本，并在进行最终分析时几乎忘记了这个采样。
- en: It is thus a good practice to remind you to remove sampling and filters after
    you have tested your code (and before interpreting the final results).
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，良好的实践是，在测试代码后（以及在解释最终结果之前）提醒你删除抽样和过滤器。
- en: 10\. Problem when using the $ operator
  id: totrans-249
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 10\. 使用 $ 操作符时的问题
- en: 'For the last error of this top 10, I would like to focus on two related errors:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这十大错误中的最后一个，我想关注两个相关的错误：
- en: “$ operator is invalid for atomic vectors”, and
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: “$ 操作符对原子向量无效”，以及
- en: “object of type ‘closure’ is not subsettable”.
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: “‘closure’ 类型的对象无法进行子集操作”。
- en: I gather them in one single section because they are linked to each other in
    the sense that they both involve the `$` operator.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 我把它们放在一个单独的部分，因为它们彼此相关，涉及到 `$` 操作符。
- en: $ operator is invalid for atomic vectors
  id: totrans-254
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '`$` 操作符对原子向量无效'
- en: To understand this error, we first must recall that an atomic vector is a *one*-dimensional
    object (usually created with `c()`). This is different than dataframes or matrices
    which are *two*-dimensional (i.e., rows form the first dimension and columns correspond
    to the second dimension).
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 为了理解这个错误，我们首先必须回顾一下原子向量是一个 *一维* 对象（通常使用 `c()` 创建）。这不同于数据框或矩阵，这些是 *二维* 对象（即，行构成第一维，列对应第二维）。
- en: 'The error “$ operator is invalid for atomic vectors” occurs when we try to
    access an element of an atomic vector using the dollar operator (`$`):'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们尝试使用美元操作符（`$`）访问原子向量的一个元素时，会出现错误：“$ 操作符对原子向量无效”：
- en: '[PRE102]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: '[PRE103]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: '[PRE104]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: '[PRE105]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: '[PRE106]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: Solution
  id: totrans-262
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'The `$` operator cannot be used to extract elements in atomic vectors. Instead,
    we must use double brackets `[[]]` notation:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '`$` 操作符不能用来提取原子向量中的元素。相反，我们必须使用双括号 `[[]]` 语法：'
- en: '[PRE107]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: '[PRE108]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: 'Remember that the `$` operator can be used with dataframes, so we can also
    fix this error by first converting the atomic vector to a dataframe,[5](https://statsandr.com/blog/top-10-errors-in-r/#fn5)
    and then access an element by its name with the `$` operator:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 记住 `$` 操作符可以与数据框一起使用，因此我们还可以通过首先将原子向量转换为数据框，[5](https://statsandr.com/blog/top-10-errors-in-r/#fn5)，然后用
    `$` 操作符按名称访问元素来修复这个错误：
- en: '[PRE109]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: '[PRE110]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: '[PRE111]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: '[PRE112]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: '[PRE113]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: object of type ‘closure’ is not subsettable
  id: totrans-272
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ‘closure’ 类型的对象无法进行子集操作
- en: 'Another error (which I must admit is quite obscure and confusing when learning
    R) is the following: “object of type ‘closure’ is not subsettable”.'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个错误（我必须承认，这在学习 R 时非常晦涩和令人困惑）是：“‘closure’ 类型的对象无法进行子集操作”。
- en: 'This error occurs when we try to subset or access some elements of a function.
    An example with the well-known `mean()` function:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们尝试对函数进行子集操作或访问一些元素时，会出现这个错误。下面是一个使用著名的`mean()`函数的示例：
- en: '[PRE114]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: '[PRE115]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: 'In R, we can subset lists, vectors, matrices, dataframes, but not functions.
    So it throws an error because it is impossible to subset an object of type “closure”,
    and a function is of that type:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 在 R 中，我们可以对子集列表、向量、矩阵、数据框，但不能对子集函数。因此它抛出一个错误，因为无法对“closure”类型的对象进行子集操作，而函数就是这种类型：
- en: '[PRE116]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: '[PRE117]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: Most of the times, you will not encounter this error when using a basic function
    such as the `mean()` function (because it is unlikely that your goal is really
    to subset a function…).
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数时候，当使用像 `mean()` 这样的基本函数时，你不会遇到这个错误（因为你不太可能真的想对一个函数进行子集操作……）。
- en: Indeed, you will most likely face this error when trying to subset a dataset
    named `data`, but this dataset is not defined in the environment (because it has
    not been imported or created properly for instance).
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 确实，你最有可能在尝试对名为 `data` 的数据集进行子集操作时遇到这个错误，但这个数据集在环境中并不存在（例如，它可能没有被导入或正确创建）。
- en: 'To understand the concept, see the following examples:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 为了理解这个概念，请查看以下示例：
- en: '[PRE118]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: '[PRE119]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: '[PRE120]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: 'So far so good. Now suppose we made a mistake when creating the dataset:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，一切正常。现在假设我们在创建数据集时犯了一个错误：
- en: '[PRE121]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: You will notice that a comma is missing between variables `x` and `y`. As a
    result, the dataset named `data` is not created and thus not defined.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到在变量 `x` 和 `y` 之间缺少逗号。因此，名为 `data` 的数据集没有被创建，因此也没有定义。
- en: Therefore, if we now try to access the variable `x` from that dataset `data`,
    R will actually try to subset the function named `data` instead of the dataset
    named `data`!
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果我们现在尝试从那个数据集 `data` 中访问变量 `x`，R 实际上会尝试对名为 `data` 的函数进行子集操作，而不是名为 `data`
    的数据集！
- en: '[PRE122]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: '[PRE123]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: 'This happens because, I repeat, the dataset `data` does not exist, so R looks
    for an object named `data` and find a function with that name:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为，我重复一遍，数据集 `data` 不存在，因此 R 寻找一个名为 `data` 的对象，并找到一个具有该名称的函数：
- en: '[PRE124]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: '[PRE125]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: Warnings
  id: totrans-295
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 警告
- en: Warnings are different than errors in the sense that they alert you about something,
    but it does not prevent you from running the code. It is a good practice to read
    these warnings as they may give you valuable information.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 警告不同于错误，它们提醒你某些问题，但不会阻止代码运行。阅读这些警告是一个好习惯，因为它们可能提供有价值的信息。
- en: 'There are too many warnings to mention them all, but I would like to focus
    on two common ones:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 警告太多了，无法一一列举，但我想重点关注两个常见的：
- en: “NAs introduced by coercion”, and
  id: totrans-298
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: “由于强制转换引入了NAs”，以及
- en: “Removed … rows containing non-finite values (stat_bin())”.
  id: totrans-299
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: “删除了包含非有限值的行（stat_bin()）”。
- en: NAs introduced by coercion
  id: totrans-300
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 由于强制转换引入了NAs
- en: 'This warning occurs when you try to convert a vector which includes at least
    one non-numerical value to a numeric vector:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 当你尝试将一个包含至少一个非数值值的向量转换为数值向量时，会出现这个警告：
- en: '[PRE126]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: '[PRE127]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: '[PRE128]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: '[PRE129]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: You do not need to fix it since it is only a warning and not an error. R is
    simply informing you that at least one element in the initial vector was converted
    to `NA` because it could not be converted to a numeric value.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 你不需要修复它，因为这只是一个警告而不是错误。R只是通知你，初始向量中的至少一个元素由于无法转换为数值而被转换为`NA`。
- en: Removed … rows containing non-finite values (stat_bin())
  id: totrans-307
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 删除了包含非有限值的行（stat_bin()）
- en: 'This warning occurs when you use [ggplot2](https://statsandr.com/blog/graphics-in-r-with-ggplot2/)
    to draw plots. For instance:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用[ggplot2](https://statsandr.com/blog/graphics-in-r-with-ggplot2/)绘制图形时，会出现这个警告。例如：
- en: '[PRE130]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: '[PRE131]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: '[PRE132]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: '![](../Images/c6461c98394cdf8333bd305dfb5644d7.png)'
  id: totrans-312
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c6461c98394cdf8333bd305dfb5644d7.png)'
- en: Plot by author
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 作者绘制的图
- en: Again, as it is a warning you do not need to fix it. It is simply informing
    you that there are some missing values (`NA`) in the variable of interest and
    that these missing values are removed to construct the plot.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 再次说明，由于这是一个警告，你不需要修复它。它只是通知你变量中存在一些缺失值（`NA`），这些缺失值被移除以构建图形。
- en: Conclusion
  id: totrans-315
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Thanks for reading. I hope that this collection of errors prevented you from
    making some coding mistakes, or that it helped you in debugging your code.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读。我希望这些错误的集合帮助你避免了一些编码错误，或在调试代码时提供了帮助。
- en: If you still cannot fix your error, I would recommend to read the documentation
    of the function (if you struggle with a function in particular), or look online
    for the solution. Bear in mind that if you encounter an error, it is very likely
    that someone else posted the answer online (Stack Overflow is usually a good resource).
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你仍然无法修复错误，我建议查看函数的文档（如果你对某个函数特别挣扎），或在线查找解决方案。请记住，如果你遇到错误，很可能有人在网上发布了答案（Stack
    Overflow通常是一个不错的资源）。
- en: R has a steep learning curve, in particular if you are not familiar with another
    programming language. Nonetheless, with practice and time, you will make less
    and less coding errors, but more importantly, you will be more and more proficient
    in typing the right keywords in search engines, resulting in less time spent looking
    for the solution.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: R的学习曲线较陡，特别是如果你不熟悉其他编程语言的话。尽管如此，通过实践和时间，你会减少编码错误，更重要的是，你会越来越熟练于在搜索引擎中输入正确的关键词，从而减少寻找解决方案的时间。
- en: As always, if you have a question or a suggestion related to the topic covered
    in this article, please add it as a comment so other readers can benefit from
    the discussion.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 和往常一样，如果你对本文所涉及的话题有任何问题或建议，请在评论中添加，以便其他读者可以从讨论中受益。
- en: There are 2 mistakes in that piece of code, feel free to try to fix them as
    an exercise.[↩︎](https://statsandr.com/blog/top-10-errors-in-r/#fnref1)
  id: totrans-320
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这段代码中有2个错误，可以尝试修复它们作为练习。[↩︎](https://statsandr.com/blog/top-10-errors-in-r/#fnref1)
- en: And I strongly recommend using RStudio and not just R. See the differences [here](https://statsandr.com/blog/how-to-install-r-and-rstudio/).[↩︎](https://statsandr.com/blog/top-10-errors-in-r/#fnref2)
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我强烈建议使用RStudio而不仅仅是R。查看[这里](https://statsandr.com/blog/how-to-install-r-and-rstudio/)的区别。[↩︎](https://statsandr.com/blog/top-10-errors-in-r/#fnref2)
- en: Note that `mean()` applied to a logical variable gives the proportion of `TRUE`.[↩︎](https://statsandr.com/blog/top-10-errors-in-r/#fnref3)
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请注意，`mean()`应用于逻辑变量时会给出`TRUE`的比例。[↩︎](https://statsandr.com/blog/top-10-errors-in-r/#fnref3)
- en: '`par(mfrow = c(1, 2))` is used to put two plots next to each other.[↩︎](https://statsandr.com/blog/top-10-errors-in-r/#fnref4)'
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`par(mfrow = c(1, 2))`用于将两个图并排放置。[↩︎](https://statsandr.com/blog/top-10-errors-in-r/#fnref4)'
- en: Note that we also need to take the transpose of the vector `x` in order to have
    it as 1 row, 3 columns.[↩︎](https://statsandr.com/blog/top-10-errors-in-r/#fnref5)
  id: totrans-324
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请注意，我们还需要对向量`x`进行转置，以使其变为1行3列。[↩︎](https://statsandr.com/blog/top-10-errors-in-r/#fnref5)
- en: Related articles
  id: totrans-325
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 相关的文章
- en: '[RStudio addins, or how to make your coding life easier?](https://statsandr.com/blog/rstudio-addins-or-how-to-make-your-coding-life-easier/)'
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RStudio 插件，或者说如何让你的编程生活更轻松？](https://statsandr.com/blog/rstudio-addins-or-how-to-make-your-coding-life-easier/)'
- en: '[How to keep yourself updated with the latest R news?](https://statsandr.com/blog/how-to-keep-up-to-date-with-the-latest-r-news/)'
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何保持对最新R新闻的更新？](https://statsandr.com/blog/how-to-keep-up-to-date-with-the-latest-r-news/)'
- en: '[One-sample Wilcoxon test in R](https://statsandr.com/blog/one-sample-wilcoxon-test-in-r/)'
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[R中的单样本Wilcoxon检验](https://statsandr.com/blog/one-sample-wilcoxon-test-in-r/)'
- en: '[Hypothesis test by hand](https://statsandr.com/blog/hypothesis-test-by-hand/)'
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[手动假设检验](https://statsandr.com/blog/hypothesis-test-by-hand/)'
- en: '[ANOVA in R](https://statsandr.com/blog/anova-in-r/)'
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[R中的ANOVA](https://statsandr.com/blog/anova-in-r/)'
- en: '*Originally published at* [*https://statsandr.com*](https://statsandr.com/blog/top-10-errors-in-r/)
    *on February 7, 2023.*'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '*最初发布于* [*https://statsandr.com*](https://statsandr.com/blog/top-10-errors-in-r/)
    *2023年2月7日。*'
