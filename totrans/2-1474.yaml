- en: Making Your Data Analytics Come to Life using ipywidgets
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用ipywidgets让你的数据分析变得生动
- en: 原文：[https://towardsdatascience.com/making-your-data-analytics-come-to-life-using-ipywidgets-cfa9538279f7](https://towardsdatascience.com/making-your-data-analytics-come-to-life-using-ipywidgets-cfa9538279f7)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/making-your-data-analytics-come-to-life-using-ipywidgets-cfa9538279f7](https://towardsdatascience.com/making-your-data-analytics-come-to-life-using-ipywidgets-cfa9538279f7)
- en: Learn how to use widgets to dynamically update your data analytics
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解如何使用小部件动态更新数据分析
- en: '[](https://weimenglee.medium.com/?source=post_page-----cfa9538279f7--------------------------------)[![Wei-Meng
    Lee](../Images/10fc13e8a6858502d6a7b89fcaad7a10.png)](https://weimenglee.medium.com/?source=post_page-----cfa9538279f7--------------------------------)[](https://towardsdatascience.com/?source=post_page-----cfa9538279f7--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----cfa9538279f7--------------------------------)
    [Wei-Meng Lee](https://weimenglee.medium.com/?source=post_page-----cfa9538279f7--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://weimenglee.medium.com/?source=post_page-----cfa9538279f7--------------------------------)[![Wei-Meng
    Lee](../Images/10fc13e8a6858502d6a7b89fcaad7a10.png)](https://weimenglee.medium.com/?source=post_page-----cfa9538279f7--------------------------------)[](https://towardsdatascience.com/?source=post_page-----cfa9538279f7--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----cfa9538279f7--------------------------------)
    [Wei-Meng Lee](https://weimenglee.medium.com/?source=post_page-----cfa9538279f7--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----cfa9538279f7--------------------------------)
    ·8 min read·Feb 21, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page-----cfa9538279f7--------------------------------)
    ·8分钟阅读·2023年2月21日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/1b6b04b8bf8137635d612dde9f00c378.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1b6b04b8bf8137635d612dde9f00c378.png)'
- en: Photo by [John Schnobrich](https://unsplash.com/@johnschno?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[John Schnobrich](https://unsplash.com/@johnschno?utm_source=medium&utm_medium=referral)拍摄，来源于[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)。
- en: For my daily data analytics tasks, my favorite development environment is definitely
    Jupyter Notebook. Jupyter Notebook allows me to quickly modify my code and re-run
    the cell(s) to see the updates. However, this feature is not friendly to users
    who are using my Jupyter Notebook to view the results of my data analytics. It
    would be really useful if there is a way for users to interact with my program
    without the need to modify the code. This is where the **ipywidgets** package
    comes in.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我日常的数据分析任务，我最喜欢的开发环境绝对是Jupyter Notebook。Jupyter Notebook允许我快速修改代码并重新运行单元格以查看更新。然而，这一功能对使用我的Jupyter
    Notebook查看数据分析结果的用户并不友好。如果用户可以在不修改代码的情况下与我的程序进行交互，那将非常有用。这就是**ipywidgets**包发挥作用的地方。
- en: '**ipywidgets** is a package that contains interactive HTML widgets for Jupyter
    Notebook. Using the widgets in ipywidgets, your Jupyter notebooks will come alive
    and users can directly control their data and visualize the changes in their data.
    In this article, I will walk you through the process of using ipywidgets together
    with your dataset.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**ipywidgets**是一个包含Jupyter Notebook交互式HTML小部件的包。通过使用ipywidgets中的小部件，你的Jupyter笔记本将变得生动，用户可以直接控制他们的数据并可视化数据的变化。在本文中，我将带你深入了解如何将ipywidgets与数据集一起使用。'
- en: Installing ipywidgets
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装ipywidgets
- en: 'In your Jupyter notebook, install the **ipywidgets** and **widgetsnbextension**
    packages as follows:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的Jupyter笔记本中，按如下方式安装**ipywidgets**和**widgetsnbextension**包：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Then, enable the **widgetsnbextension** as follows:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，如下启用**widgetsnbextension**：
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Using the `interact` function
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`interact`函数
- en: For our examples, I am going to use the **insurance** dataset located at [https://www.kaggle.com/datasets/teertha/ushealthinsurancedataset?resource=download.](https://www.kaggle.com/datasets/teertha/ushealthinsurancedataset?resource=download.)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的示例，我将使用位于[https://www.kaggle.com/datasets/teertha/ushealthinsurancedataset?resource=download.](https://www.kaggle.com/datasets/teertha/ushealthinsurancedataset?resource=download.)的**保险**数据集。
- en: '***License****:* [*CC0: Public Domain*](https://creativecommons.org/publicdomain/zero/1.0/)*.*
    ***Description*** *— This dataset contains 1338 rows of insured data, where the
    Insurance charges are given against the following attributes of the insured: Age,
    Sex, BMI, Number of Children, Smoker and Region. The attributes are a mix of numeric
    and categorical variables.*'
  id: totrans-17
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '***许可证***:* [*CC0: 公共领域*](https://creativecommons.org/publicdomain/zero/1.0/)*.*
    ***描述*** *— 该数据集包含1338行被保险数据，其中保险费用是针对被保险人的以下属性给出的：年龄、性别、BMI、子女数量、是否吸烟和区域。这些属性包括数字变量和分类变量。*'
- en: 'Let’s first load the CSV file into a Pandas DataFrame:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先将CSV文件加载到Pandas DataFrame中：
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/6ed62f90c5b944154f7e5b7179f52b43.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6ed62f90c5b944154f7e5b7179f52b43.png)'
- en: All images by author
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 所有图片由作者提供
- en: Slider widgets
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 滑块控件
- en: 'Let’s say I want to retrieve all the rows containing 3 children. I could do
    something like this:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我想检索所有包含3个子项的行。我可以这样做：
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/fd4e271cee5bf51d061586cb3201e324.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fd4e271cee5bf51d061586cb3201e324.png)'
- en: If I want to retrieve rows with 4 children then I have to modify my statement
    and rerun the cell. Obviously, this is not very productive.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我想检索具有4个子项的行，那么我必须修改我的语句并重新运行单元格。显然，这不是很高效。
- en: 'This is where the `interact` function from the `ipywidgets` package comes in
    really handy:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这时，`ipywidgets`包中的`interact`函数就非常有用了：
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In the above code snippet, I defined a function named `f` that takes in one
    argument — `children`. The function will query the dataframe and display the result.
    The next statement is where the magic happens:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述代码片段中，我定义了一个名为`f`的函数，该函数接受一个参数——`children`。该函数将查询数据框并显示结果。接下来的语句就是魔法发生的地方：
- en: '[PRE5]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The `interact()` function (`ipywidgets.interact`) automatically creates user
    interface (UI) controls (known as *widgets*) and binds them to your specified
    function. The above statement will generate the following output containing an
    **IntSlider** widget as well as the dataframe:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '`interact()`函数（`ipywidgets.interact`）会自动创建用户界面（UI）控件（称为*小部件*），并将它们绑定到你指定的函数上。上述语句将生成一个包含**IntSlider**控件以及数据框的输出：'
- en: '![](../Images/281d1190a2bfb14f792b6524542d7f46.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/281d1190a2bfb14f792b6524542d7f46.png)'
- en: The value that you pass into the `children` parameter will determine what kind
    of UI control is generated. Here, you are passing in an integer and so a slider
    control is generated. If you pass in `n`, it generates an integer-valued slider
    control with a range of [-n,+3*n].
  id: totrans-33
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你传入`children`参数的值将决定生成什么类型的用户界面控件。在这里，你传入了一个整数，因此生成了一个滑块控件。如果你传入`n`，它将生成一个取值范围为[-n,+3*n]的整数值滑块控件。
- en: Go ahead and drag the slider. As you drag, the dataframe will dynamically update.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 去拖动滑块吧。当你拖动时，数据框将动态更新。
- en: 'We can do the same for the **age** field, but this time we want to set the
    range of age selectable:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以对**年龄**字段做同样的操作，但这次我们要设置可选择的年龄范围：
- en: '[PRE6]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/41594c7c4adc50b61d3afca42b909748.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/41594c7c4adc50b61d3afca42b909748.png)'
- en: The minimum age is 18 and maximum is 64\. The current slider value will be displayed
    in the middle position — 41 (which is (18+64)/2).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 最小年龄为18岁，最大年龄为64岁。当前滑块的值将显示在中间位置——41（即(18+64)/2）。
- en: 'If you pass in a floating-point number, such as BMI:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你传入一个浮点数，比如BMI：
- en: '[PRE7]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Then a **FloatSlider** widget will be displayed:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 然后会显示一个**FloatSlider**控件：
- en: '![](../Images/0f647129bb5b0b7ab91319de009d56cf.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0f647129bb5b0b7ab91319de009d56cf.png)'
- en: DropDown widget
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下拉控件
- en: 'What about selecting the region? We can pass in the region as a list:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 那么选择区域呢？我们可以将区域作为列表传入：
- en: '[PRE8]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You can now select one of the four regions using the DropDown control:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以使用下拉控制选择四个区域中的一个：
- en: '![](../Images/84dc15eab50d170a197826580727d9d2.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/84dc15eab50d170a197826580727d9d2.png)'
- en: 'What if I want to select *all* regions? For this, you need to get creative.
    First, I will create a list of tuples containing the four regions:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我想选择*所有*区域呢？为此，你需要发挥创造力。首先，我会创建一个包含四个区域的元组列表：
- en: '[PRE9]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The above code snippet generates the following list:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的代码片段生成了以下列表：
- en: '[PRE10]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The first element in each tuple is what is shown to the user. The second element
    is the value of the selected item.
  id: totrans-52
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 每个元组中的第一个元素是显示给用户的内容。第二个元素是所选项的值。
- en: 'Then, append a tuple — `(‘All Regions’,’@*’)`, to the list:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，将一个元组—`(‘All Regions’,’@*’)`，添加到列表中：
- en: '[PRE11]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The `regions` variable now looks like this:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 现在`regions`变量看起来是这样的：
- en: '[PRE12]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'You can now pass the `regions` variable to the `interact()` function:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以将`regions`变量传递给`interact()`函数：
- en: '[PRE13]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Note that I have to change my query statement to use the `contains()` function.
    You can now select the **All Regions** item to select rows from all regions:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我需要更改查询语句以使用 `contains()` 函数。你现在可以选择**所有区域**项，以从所有区域中选择行：
- en: '![](../Images/7060047fa8421333a175ac8c5b904d56.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7060047fa8421333a175ac8c5b904d56.png)'
- en: CheckBox widget
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 复选框小部件
- en: 'When you pass in a boolean value to the `interact()` function, it will display
    a `CheckBox` widget. Consider the following example:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 当你向 `interact()` 函数传入布尔值时，它会显示一个 `CheckBox` 小部件。考虑以下示例：
- en: '[PRE14]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The above code snippet displays a checkbox. Uncheck it and all non-smokers
    will be shown:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的代码片段显示了一个复选框。取消选中它，所有非吸烟者将会显示出来：
- en: '![](../Images/e1f33d0627f4c3d1081150b0e698e5bf.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e1f33d0627f4c3d1081150b0e698e5bf.png)'
- en: Text widget
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文本小部件
- en: 'Suppose you want the user to type in the region instead of selecting from a
    DropDown control. Easy, simply pass a string to the `interact()` function, like
    this:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你希望用户在区域中输入而不是从下拉控制中选择。很简单，只需将字符串传递给 `interact()` 函数，如下所示：
- en: '[PRE15]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'You will now see a text box where you can type in the region:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你将看到一个文本框，你可以在其中输入区域：
- en: '![](../Images/87a884928fdd84cef7c8c52e2ce1407e.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/87a884928fdd84cef7c8c52e2ce1407e.png)'
- en: There is one issue. Observe that as you type, the dataframe is automatically
    updated. This feature is known as **continuous update**. For large dataframe this
    will pose a problem as everytime you change the content of the text box it will
    re-query the dataframe, which can be time consuming.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个问题。观察到当你输入时，数据框会自动更新。这个功能被称为**连续更新**。对于大型数据框，这将是一个问题，因为每次你更改文本框的内容时，它都会重新查询数据框，这可能会耗费时间。
- en: 'You can disable continuous update by explicitly specifying the `Text` widget
    (control) and then setting the `continuous_update` parameter to `False`:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过显式指定 `Text` 小部件（控制）然后将 `continuous_update` 参数设置为 `False` 来禁用连续更新：
- en: '[PRE16]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The dataframe will now update after you have typed in your query and press
    the Return/Enter key:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 数据框现在会在你输入查询并按下 Return/Enter 键后更新：
- en: '![](../Images/9d43568b5eb9c381dc91b1518e9a14b4.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9d43568b5eb9c381dc91b1518e9a14b4.png)'
- en: RadioButtons widget
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 单选按钮小部件
- en: 'Radio buttons are another way for users to select from a predetermined list
    of possible values. For our dataset, you can use it to let users select between
    smokers and non-smokers:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 单选按钮是另一种让用户从预定的值列表中进行选择的方式。对于我们的数据集，你可以使用它来让用户在吸烟者和非吸烟者之间进行选择：
- en: '[PRE17]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: For radio buttons, you need to manually specify the `widgets.RadioButtons()`
    class.
  id: totrans-79
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 对于单选按钮，你需要手动指定 `widgets.RadioButtons()` 类。
- en: 'The above code snippet shows the set of radio buttons to select smokers and
    non-smokers:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的代码片段显示了一组单选按钮，用于选择吸烟者和非吸烟者：
- en: '![](../Images/cbfb73b49e128505a5d79b19a10b46cd.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cbfb73b49e128505a5d79b19a10b46cd.png)'
- en: Using the Interactive Function
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Interactive 函数
- en: Up till this point, so far so good. You had the ability to create and use individual
    widgets to filter different fields in the dataframe. But what if you want to combine
    them all into one big filter? This is where the `interactive()` function comes
    in.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，一切顺利。你已经能够创建和使用各个小部件来过滤数据框中的不同字段。但是如果你想将它们全部组合成一个大过滤器怎么办？这时 `interactive()`
    函数就派上用场了。
- en: 'The `interactive()` function is similar to the `interact()` function, but it
    allows you to pass in multiple values to create multiple widgets. The following
    `f()` function takes in six arguments, which are passed in through the `interactive()`
    function:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '`interactive()` 函数类似于 `interact()` 函数，但它允许你传入多个值以创建多个小部件。以下 `f()` 函数接收六个参数，这些参数通过
    `interactive()` 函数传入：'
- en: '[PRE18]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Where the code snippet is run, you will see the following:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行代码片段的地方，你将看到以下内容：
- en: '![](../Images/087d85440f2f23eb7ca57ad49a3b966f.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/087d85440f2f23eb7ca57ad49a3b966f.png)'
- en: 'As you interact with the widgets, the dataframe is automatically updated. If
    you have a large dataframe, you may find that updating the dataframe every time
    a value in the control is changed is messy (your screen will refresh for all these
    little changes), and so it might be better to avoid refreshing the dataframe until
    the user wants to see the updated dataframe. To do so, insert a second argument
    (`{‘manual’: True}`) to the `interactive()` function:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '当你与小部件互动时，数据框会自动更新。如果你有一个大型数据框，你可能会发现每次控制中的值发生变化时更新数据框是比较麻烦的（你的屏幕会因为这些小变化而刷新），因此，最好避免在用户希望查看更新的数据框之前刷新数据框。为此，将第二个参数
    (`{‘manual’: True}`) 插入到 `interactive()` 函数中：'
- en: '[PRE19]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: There will now be a button labelled **Run Interact**. You can change the values
    in the widgets and when you are ready to see the changes, click the **Run Interact**
    button and the dataframe will be updated.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现在将出现一个标有**运行互动**的按钮。你可以在小部件中更改值，当你准备好查看更改时，点击**运行互动**按钮，数据框将会更新。
- en: '![](../Images/2c39c5b816e1f6320c78320d7ebad66f.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2c39c5b816e1f6320c78320d7ebad66f.png)'
- en: '**If you like reading my articles and that it helped your career/study, please
    consider signing up as a Medium member. It is $5 a month, and it gives you unlimited
    access to all the articles (including mine) on Medium. If you sign up using the
    following link, I will earn a small commission (at no additional cost to you).
    Your support means that I will be able to devote more time on writing articles
    like this.**'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果你喜欢阅读我的文章并且这些文章对你的职业/学习有帮助，请考虑注册成为Medium会员。每月$5，它可以让你无限访问Medium上的所有文章（包括我的）。如果你通过以下链接注册，我将获得少量佣金（对你没有额外费用）。你的支持意味着我将能够投入更多时间撰写类似的文章。**'
- en: '[](https://weimenglee.medium.com/membership?source=post_page-----cfa9538279f7--------------------------------)
    [## Join Medium with my referral link - Wei-Meng Lee'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 通过我的推荐链接加入Medium - Wei-Meng Lee](https://weimenglee.medium.com/membership?source=post_page-----cfa9538279f7--------------------------------)'
- en: Read every story from Wei-Meng Lee (and thousands of other writers on Medium).
    Your membership fee directly supports…
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阅读Wei-Meng Lee的每一个故事（以及Medium上的其他数千名作者的故事）。你的会员费直接支持…
- en: weimenglee.medium.com](https://weimenglee.medium.com/membership?source=post_page-----cfa9538279f7--------------------------------)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '[weimenglee.medium.com](https://weimenglee.medium.com/membership?source=post_page-----cfa9538279f7--------------------------------)'
- en: Summary
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'This article briefly touched on using the `interact()` and `interactive()`
    functions to generate widgets to bind to functions. Here is a quick summary of
    the type of widgets created based on the datatype you supplied:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 本文简要介绍了使用`interact()`和`interactive()`函数生成小部件并绑定到函数的过程。以下是根据你提供的数据类型创建的小部件类型的快速总结：
- en: '**IntSlider** or **FloatSlider** — when you pass in an numeric value, or a
    tuple of two numeric values'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IntSlider**或**FloatSlider** — 当你传入一个数字值或一对数字值的元组时'
- en: '**DropDown** — when you pass in a list of values (or a list of tuples)'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**下拉菜单** — 当你传入一个值的列表（或元组的列表）时'
- en: '**Text** — when you pass in a string value'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文本** — 当你传入一个字符串值时'
- en: '**CheckBox** — when you pass in a boolean value (`True` or `False`)'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**复选框** — 当你传入一个布尔值（`True`或`False`）时'
- en: There are other types of widgets that require you to manually specify in the
    `interact()` and `interactive()` functions, such as **RadioButtons** and many
    others. In my next article, I will talk more about the other widgets that I did
    not have the chance to discuss in this article. Till then, have fun!
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他类型的小部件需要你在`interact()`和`interactive()`函数中手动指定，例如**单选按钮**及其他很多。在我的下一篇文章中，我将详细讲述在这篇文章中没有机会讨论的其他小部件。在此之前，祝你玩得开心！
