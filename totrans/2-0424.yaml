- en: Build a Web App with Jupyter and Mercury
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用 Jupyter 和 Mercury 构建 Web 应用
- en: 原文：[https://towardsdatascience.com/build-a-web-app-with-jupyter-and-mercury-9d59661441b7](https://towardsdatascience.com/build-a-web-app-with-jupyter-and-mercury-9d59661441b7)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/build-a-web-app-with-jupyter-and-mercury-9d59661441b7](https://towardsdatascience.com/build-a-web-app-with-jupyter-and-mercury-9d59661441b7)
- en: TUTORIAL
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 教程
- en: Mercury provides a simple way to transform Jupyter Notebooks into interactive
    web apps.
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Mercury 提供了一种简单的方法，将 Jupyter Notebooks 转换为互动式 Web 应用。
- en: '[](https://medium.com/@alan-jones?source=post_page-----9d59661441b7--------------------------------)[![Alan
    Jones](../Images/359379fab1d6685ff08080b98173e67c.png)](https://medium.com/@alan-jones?source=post_page-----9d59661441b7--------------------------------)[](https://towardsdatascience.com/?source=post_page-----9d59661441b7--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----9d59661441b7--------------------------------)
    [Alan Jones](https://medium.com/@alan-jones?source=post_page-----9d59661441b7--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@alan-jones?source=post_page-----9d59661441b7--------------------------------)[![Alan
    Jones](../Images/359379fab1d6685ff08080b98173e67c.png)](https://medium.com/@alan-jones?source=post_page-----9d59661441b7--------------------------------)[](https://towardsdatascience.com/?source=post_page-----9d59661441b7--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----9d59661441b7--------------------------------)
    [Alan Jones](https://medium.com/@alan-jones?source=post_page-----9d59661441b7--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----9d59661441b7--------------------------------)
    ·10 min read·May 9, 2023
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----9d59661441b7--------------------------------)
    ·阅读时间 10 分钟·2023年5月9日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/50813b13ceab9c877f4a450854919ac3.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/50813b13ceab9c877f4a450854919ac3.png)'
- en: Am I referring to code development or CO2 emissions? Photo by [Etienne Girardet](https://unsplash.com/@etiennegirardet?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我在提及代码开发还是 CO2 排放？照片由 [Etienne Girardet](https://unsplash.com/@etiennegirardet?utm_source=medium&utm_medium=referral)
    供稿于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Where would we be without Jupyter Notebooks? Surely they are one of the staples
    of the Data Science community.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有 Jupyter Notebooks，我们将会处于何地？它们无疑是数据科学社区的基石之一。
- en: They are great for prototyping and/or incrementally building and demonstrating
    a data science application. But they are not so good at presentation.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 它们非常适合原型设计和/或逐步构建和展示数据科学应用，但在演示方面不太好。
- en: If you want to show your stakeholders the results of your work as a web application,
    but not all the clever code that lies behind it, then you can re-code it all in
    Streamlit or Dash, or construct a web application with Flask or Django.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想将你的工作结果展示给利益相关者，但不想展示所有聪明的代码，那么你可以用 Streamlit 或 Dash 重新编码所有内容，或者用 Flask
    或 Django 构建一个 Web 应用。
- en: But there is an alternative.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 但还有一种替代方案。
- en: Mercury is a system that can transform your Notebook into a fully interactive
    web app. You can add widgets such as sliders and select boxes and produce a fully
    interactive application.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Mercury 是一个可以将你的 Notebook 转换为完全互动的 Web 应用的系统。你可以添加滑块和选择框等控件，制作一个完全互动的应用程序。
- en: It’s all 100% Python and quite straightforward and, although the result is rather
    less sophisticated than you might achieve with other tools, if you are looking
    for a simple solution it’s worth looking at.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这完全是 100% Python 和相当简单，尽管结果比起其他工具可能少了些复杂性，但如果你寻找的是一个简单的解决方案，值得一看。
- en: An example app
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个示例应用
- en: The app that we will create will look like the image below.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建的应用将如下图所示。
- en: '![](../Images/f77440dd2d1afdb9c4c25961fcac2843.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f77440dd2d1afdb9c4c25961fcac2843.png)'
- en: Image by author
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: 'You can see that it comprises two parts: a sidebar that contains text and inputs
    widgets — a slider and a select box; and a main window that contains the output
    of the notebook code. All Mercury apps follow this pattern of a sidebar containing
    controls and a main window displaying the code output.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到它由两部分组成：一个包含文本和输入控件的小侧边栏——一个滑块和一个选择框；以及一个包含笔记本代码输出的主窗口。所有 Mercury 应用都遵循这种模式，即小侧边栏包含控件，而主窗口显示代码输出。
- en: The map that you can see is a choropleth that shows the CO2 emissions by country
    over a period of time. The slider in the sidebar is used to select the correct
    year.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 你看到的地图是一个显示国家 CO2 排放量随时间变化的分级图。侧边栏中的滑块用于选择正确的年份。
- en: Scrolling down in the main window you would see a line graph that charts the
    emissions output for a particular continent over time. The continent is selected
    from the select box in the sidebar.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: Whenever the value of an input widget changes the code is re-run and new versions
    of the charts are displayed.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: Mercury V.2
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I first looked at Mercury a year or so ago and liked the simplicity of creating
    a web app from code that you had already written with Jupyter.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: There have been a lot of distractions over that year (PyScript, Streamlit, and
    some AI app that everyone seems to be talking about) but I’ve finally got around
    to looking again at Mercury and there have been a few changes.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: The main one is that version 2 boasts widgets that support interaction with
    an app. These replace the somewhat clunky YAML definitions from version 1 and,
    unlike in version 1, they can be operated in the Jupyter Notebook as well as the
    app.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: In this article, I’m going to build an app using the open source version which
    means that you will get Mercury branding on your app (commercial licenses are
    also available).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: First, write a Notebook
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We’ll build the notebook cell by cell and then convert it to a web app.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: But first, install the Mercury library.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'I’ll put a link to the source code and the data at the end but if you want
    to follow along you will need to create a new Jupyter Notebook and install the
    following libraries:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: That, of course, is your first cell.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: The next one is entirely concerned with Mercury and doesn’t output anything
    significant in the Notebook.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This cell sets up some information for Mercury when it creates the web version
    of the app. The first two fields are self-explanatory and this data is displayed
    in the Mercury version. And if you are happy to accept the default values for
    the rest, then these are the only fields you need to include.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: For reference, here is a list of all of the parameters and their use.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: '**title** (*string*) — the title of the application'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**description** (*string*) — description of the application'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**show_code** (*boolean*) — set this `True` to show the notebook code in the
    app. The default is `False`.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**show_prompt** (*boolean*) — set this `True` if you want to show notebook
    prompt in the application — `show_code` needs to be `True` as well. The default
    is `False`.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**continuous_update** (*boolean*) — the default is `True` meaning that the
    app is re-run after the value of an input widget changes. If set to `False` a
    *Run* button is displayed to re-run the app with the updated widget data.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**static_notebook** (*boolean*) — when set to `True` the app will not be re-run
    when a widget value changes, the notebook is static. The default is `False`i.e.
    it is an interactive app.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**show_sidebar** (*boolean*) — the app consists of a main display and a sidebar,
    this is displayed on startup by default. The sidebar can always be opened or closed
    by the user when the app is running.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**full_screen** (*boolean*) — the default is `True` meaning that notebook is
    displayed full width. Set to `False` to limit notebook width to 1140px.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**allow_download** (*boolean*) — by default there is *Download* button to export
    results as PDF or HTML. You can hide this button by setting `allow_download=False`.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, we need to download some data. Here is the next cell.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We are loading data from a local directory into Pandas dataframes. This data
    records CO2 emissions for many decades, globally, by country, by continent and
    by income group.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: Each of the dataframes looks similar to the table below.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3a9199c90acf651b9e671394da5bb4b6.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
- en: Image by author
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: 'They contain columns for:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: '*Entity*: country, continent, income group or ‘World’'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Code*: the ISO country code (if it is a country)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Year*'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Annual CO2 Emissions*: from burning fossil fuel and industrial processes'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Annual CO2 Emissions including land-use change*: the sum of the previous column
    and the next one'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Annual CO2 Emissions from land-use change*'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This is publicly available data that you can download from a number of sources,
    for example, *Our World in Data*¹.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: There’s a little more data here than we actually need — we’ll be using the first
    two dataframes for this exercise and only a subset of the columns.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: '**Widgets**'
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are a number of widgets available for input and output. We are only going
    to look at a couple of them but a full list can be found in the [Mercury documentation](https://runmercury.com/docs/).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: Here is the cell that contains the slider widget for selecting the year.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: On the first line, we see an output widget `mr.Note` that simply displays Markdown
    text. Here we are using it to prompt the user to select a year from the slider.
    We then calculate the range of years from the data and use those values to display
    a slider.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: 'The parameters for the slider widget are fairly self-explanatory: we start
    with a default value, then the max and min values, a label and finally step value.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: The value that is returned from the widget is actually a widget object. To get
    the value from that object we have to use the `.value` attribute, as we shall
    see below.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: The last line is another markdown string — a line that will separate the slider
    from the widget below it.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: In Jupyter the output is below the cell, as usual, and you will see the text
    and a simple slider that is fully operational and will change value as you would
    expect.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f8aacfde327b59fabd7e645d972d17be.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
- en: The slider widget in the notebook — image by author
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: When we have converted this to an app, the slider will be in the sidebar.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: The next cell displays the map. We first get the year value from the slider
    object and then work out the maximum and minimum values for the range of CO2 emissions.
    We then calculate the choropleth using Plotly and display it.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The map looks like the image below.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1ba1b51083cfc0cfcdf2b60cda0f0bfb.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
- en: Image by author
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: Another widget
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Following a similar pattern as before. First an instruction, then we calculate
    a unique list of all of the continents from the *Entity* column of the dataframe.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: This time we use the select widget `mr.Select`
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: which takes as parameters a default value, a list to select from and a label.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The output from the cell looks like the image below. But, again, in the app
    it will appear in the sidebar.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/534f6ff425fe5d7518a99c46d9dedddc.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
- en: The selectbox widget in the notebook — image by author
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: We then use the value from the select box to draw the appropriate line chart.
    We do this by using this value to filter the dataframe so that only data for the
    selected continent is returned. We then use that data to draw the chart.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The chart looks like the image below.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/719eede09f563ad61d3508629da02c40.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
- en: Image by author
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: This might seem an obvious thing to say but if you run the entire notebook,
    you will get results that correspond to the default values of the widgets. To
    change the widget values and get the corresponding charts with the new values,
    you need to run the notebook one cell at a time.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: There are other widgets such as fields to input text or numeric values, buttons
    and checkboxes — see the [documentation](https://runmercury.com/docs/) for details.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: That’s about it for the Jupyter Notebook. Now to create a web app.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: Create a web app
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'From a command prompt navigate to the directory that contains your notebook
    and type:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This will pick up all of the notebooks in that directory and run a web page
    like the one below that contains a panel for each notebook.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2299dc12ad600e7d8caf7af0df127a82.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
- en: Image by author
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: In my case, there is only a single notebook — the one we have just seen — and
    when you click on it it will run the app.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: To remind you it looks like this.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/66c13ce5cdb1f0bc6784f637fa5fc550.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
- en: Image by author
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: You can see that the widgets are a little more attractive than the ones that
    are displayed in the notebook and that they appear in a sidebar.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: 'The app is fully interactive: when you change a widget value all of the notebook
    cells below the widget are re-run. Thus changing the slider updates the map and
    the graph is re-drawn when the selection from the select box is changed.'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: I have to admit to cheating a little here. Mercury copies some demo apps and
    creates a file called *welcome.md* that contains a welcoming message. Although
    these are useful for the beginner, for clarity and simplicity, I have deleted
    the notebooks from my notebook folder and removed all the content from *welcome.md*.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: The result
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The result is a simple but functional app.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: The downside is that a Mercury app always has the same layout — a sidebar that
    contains the widgets and a main window where the results of the code are shown.
    Furthermore, the main window has a simple linear layout that cannot be changed.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: This is not very flexible and while quite adequate for many purposes, you can
    create much more sophisticated layouts with alternative app builders such as Streamlit
    or Dash.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: All in all, though, if you are happy writing Python in Jupyter Notebooks, the
    learning curve for Mercury is pretty negligible. And, while the result is not as flexible as other app builders,
    converting to an app is as simple as typing a command in a terminal window.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: Of course, our app is running on our local machine on a dedicated server. Publishing
    on the web is a different matter and I will look at the publishing options at
    a later date.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: In the meantime, thanks for reading and I hope this has been useful. The code
    and data for this article are available from a link on my [web page](http://alanjones2.github.io)
    along with a link to a demo app and instructions on how to publish your app on
    Mercury Cloud. You can see links to my other work there, too, and you can also
    sign up for my occasional newsletter.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[1] [Our World in Data](https://ourworldindata.org/) is a treasure trove of
    information whose mission is to publish *“research and data to make progress against
    the world’s largest problems”*. All of their work is made available under the
    [Creative Commons BY license](https://creativecommons.org/licenses/by/4.0/).'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: '*Disclaimer: I am not affiliated with Mercury.*'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
