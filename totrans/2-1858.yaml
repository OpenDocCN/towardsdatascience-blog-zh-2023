- en: Simplify Data Science Workflows on BigQuery with Fugue and Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Fugue 和 Python 简化 BigQuery 上的数据科学工作流
- en: 原文：[https://towardsdatascience.com/simplify-data-science-workflows-on-bigquery-with-fugue-and-python-5215a1b65e43](https://towardsdatascience.com/simplify-data-science-workflows-on-bigquery-with-fugue-and-python-5215a1b65e43)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/simplify-data-science-workflows-on-bigquery-with-fugue-and-python-5215a1b65e43](https://towardsdatascience.com/simplify-data-science-workflows-on-bigquery-with-fugue-and-python-5215a1b65e43)
- en: Speed Up Iteration and Cut Computation Cost
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加快迭代速度并降低计算成本
- en: '[](https://khuyentran1476.medium.com/?source=post_page-----5215a1b65e43--------------------------------)[![Khuyen
    Tran](../Images/98aa66025ad29b618e875c75f1c400a5.png)](https://khuyentran1476.medium.com/?source=post_page-----5215a1b65e43--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5215a1b65e43--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5215a1b65e43--------------------------------)
    [Khuyen Tran](https://khuyentran1476.medium.com/?source=post_page-----5215a1b65e43--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://khuyentran1476.medium.com/?source=post_page-----5215a1b65e43--------------------------------)[![Khuyen
    Tran](../Images/98aa66025ad29b618e875c75f1c400a5.png)](https://khuyentran1476.medium.com/?source=post_page-----5215a1b65e43--------------------------------)[](https://towardsdatascience.com/?source=post_page-----5215a1b65e43--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----5215a1b65e43--------------------------------)
    [Khuyen Tran](https://khuyentran1476.medium.com/?source=post_page-----5215a1b65e43--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----5215a1b65e43--------------------------------)
    ·6 min read·Apr 13, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表在 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----5215a1b65e43--------------------------------)
    ·阅读时间 6 分钟·2023 年 4 月 13 日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: Motivation
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动机
- en: 'Many data teams begin by establishing an analytics practice on data warehouses
    such as BigQuery. However, solely relying on BigQuery for data science workloads
    may not be the best approach due to various reasons:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 许多数据团队开始时会在数据仓库如 BigQuery 上建立分析实践。然而，仅依赖 BigQuery 处理数据科学工作负载可能不是最佳方法，原因有很多：
- en: '**Advanced needs beyond SQL**: Use cases such as data validation, visualization,
    and machine learning forecasting may require more advanced functionalities beyond
    the limitations of SQL grammar.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SQL 之外的高级需求**：如数据验证、可视化和机器学习预测等用例可能需要超出 SQL 语法限制的更高级功能。'
- en: '**Costly for exploration**: BigQuery may not be the most cost-effective solution
    for data science tasks due to its iterative nature, which involves extensive feature
    engineering and algorithm experimentation.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**探索成本高**：由于 BigQuery 的迭代特性，它可能不是数据科学任务中最具成本效益的解决方案，这涉及到大量的特征工程和算法实验。'
- en: 'For data scientists working with data on BigQuery, an ideal solution would
    enable them to:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 对于在 BigQuery 上处理数据的数据科学家而言，一个理想的解决方案应能够让他们：
- en: Use both SQL and Python to query data from BigQuery.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 SQL 和 Python 查询 BigQuery 中的数据。
- en: Interactively test various SQL queries locally
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 互动地在本地测试各种 SQL 查询
- en: Effortlessly switch back to BigQuery after thorough testing.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在彻底测试后轻松切换回 BigQuery。
- en: '![](../Images/5885ddbb9506439aefb9f64884f16214.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5885ddbb9506439aefb9f64884f16214.png)'
- en: Image by Author
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: The FugueSQL BigQuery integration allows you to do exactly that.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: FugueSQL BigQuery 集成允许你做到这一点。
- en: What is Fugue?
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Fugue 是什么？
- en: '[Fugue](https://github.com/fugue-project/fugue) is an open-source project that
    simplifies big data development by porting Python, Pandas, and SQL to distributed
    computing engines such as Spark, Dask, and Ray.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[Fugue](https://github.com/fugue-project/fugue) 是一个开源项目，通过将 Python、Pandas 和
    SQL 移植到如 Spark、Dask 和 Ray 等分布式计算引擎上，从而简化大数据开发。'
- en: '[](/introducing-fuguesql-sql-for-pandas-spark-and-dask-dataframes-63d461a16b27?source=post_page-----5215a1b65e43--------------------------------)
    [## Introducing FugueSQL — SQL for Pandas, Spark, and Dask DataFrames'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/introducing-fuguesql-sql-for-pandas-spark-and-dask-dataframes-63d461a16b27?source=post_page-----5215a1b65e43--------------------------------)
    [## 介绍 FugueSQL — Pandas、Spark 和 Dask 数据框的 SQL'
- en: An End-To-End SQL Interface for Data Science and Analytics
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 面向数据科学和分析的端到端 SQL 界面
- en: towardsdatascience.com](/introducing-fuguesql-sql-for-pandas-spark-and-dask-dataframes-63d461a16b27?source=post_page-----5215a1b65e43--------------------------------)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/introducing-fuguesql-sql-for-pandas-spark-and-dask-dataframes-63d461a16b27?source=post_page-----5215a1b65e43--------------------------------)
- en: In this article, we will use FugueSQL to simplify development on BigQuery.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将使用 FugueSQL 来简化在 BigQuery 上的开发。
- en: 'Feel free to play and fork the source code of this article here:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎在此处自由试验和分叉本文的源代码：
- en: '[](https://github.com/khuyentran1401/Data-science/blob/master/data_science_tools/fugue_bigquery.ipynb?source=post_page-----5215a1b65e43--------------------------------)
    [## Data-science/fugue_bigquery.ipynb at master · khuyentran1401/Data-science'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://github.com/khuyentran1401/Data-science/blob/master/data_science_tools/fugue_bigquery.ipynb?source=post_page-----5215a1b65e43--------------------------------)
    [## Data-science/fugue_bigquery.ipynb at master · khuyentran1401/Data-science'
- en: You can't perform that action at this time. You signed in with another tab or
    window. You signed out in another tab or…
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 目前无法执行该操作。你在另一个标签或窗口中登录。你在另一个标签或窗口中登出……
- en: github.com](https://github.com/khuyentran1401/Data-science/blob/master/data_science_tools/fugue_bigquery.ipynb?source=post_page-----5215a1b65e43--------------------------------)
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: github.com](https://github.com/khuyentran1401/Data-science/blob/master/data_science_tools/fugue_bigquery.ipynb?source=post_page-----5215a1b65e43--------------------------------)
- en: Installation and Setup
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和设置
- en: '**Install Fugue BigQuery**'
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**安装 Fugue BigQuery**'
- en: 'To install Fugue BigQuery integration, type:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 Fugue BigQuery 集成，请输入：
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Authenticate to Google BigQuery**'
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**对 Google BigQuery 进行身份验证**'
- en: To authenticate to Google BigQuery, the standard method is to specify the location
    of a credential JSON file using the `GOOGLE_APPLICATION_CREDENTIALS` environment
    variable.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 要对 Google BigQuery 进行身份验证，标准方法是使用 `GOOGLE_APPLICATION_CREDENTIALS` 环境变量指定凭证
    JSON 文件的位置。
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[How to obtain the credential JSON file.](https://cloud.google.com/bigquery/docs/quickstarts/quickstart-client-libraries)'
  id: totrans-34
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[如何获取凭证 JSON 文件。](https://cloud.google.com/bigquery/docs/quickstarts/quickstart-client-libraries)'
- en: Fugue BigQuery Usage
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Fugue BigQuery 使用
- en: Querying a Table
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查询表格
- en: 'Begin by setting up FugueSQL for use in Jupyter Notebook or Lab:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 开始时，设置 FugueSQL 以便在 Jupyter Notebook 或 Lab 中使用：
- en: '[PRE2]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: To run SQL queries using FugueSQL BigQuery integration, simply add `%%fsql bq`
    at the beginning of the cell.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 FugueSQL BigQuery 集成运行 SQL 查询，只需在单元格的开头添加 `%%fsql bq`。
- en: '![](../Images/54ab8678f513f412a2bb74f812a57c77.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/54ab8678f513f412a2bb74f812a57c77.png)'
- en: Image by Author
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Parametrization
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参数化
- en: FugueSQL allows you to use Jinja templating to parameterize your SQL queries.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: FugueSQL 允许你使用 Jinja 模板对 SQL 查询进行参数化。
- en: The query below parametrizes the `table` variable, which is particularly helpful
    when transitioning from a development table to a production table.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 以下查询对 `table` 变量进行参数化，这在从开发表过渡到生产表时特别有用。
- en: '![](../Images/39ecc58d373f10dfbcc9171f7267f963.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/39ecc58d373f10dfbcc9171f7267f963.png)'
- en: Image by Author
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Breaking Up Queries
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 拆分查询
- en: 'Fugue includes several improvements to standard SQL that facilitate query breakdown.
    These enhancements are illustrated in the query below:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Fugue 包含了多个改进的标准 SQL 功能，这些功能有助于查询拆分。以下查询展示了这些增强功能：
- en: The equal sign assigns the output of the query to the `df` variable, which is
    subsequently reused in another operation.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 等号将查询的输出分配给 `df` 变量，该变量随后在另一个操作中被重用。
- en: '`TAKE` returns the whole row. `PREPARTION BY` partitions the data by gender.
    `PRESORT` sorts the data by the `ct` column in descending order.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TAKE` 返回整行数据。`PREPARTION BY` 按性别对数据进行分区。`PRESORT` 按 `ct` 列以降序排序数据。'
- en: '`YIELD` makes the DataFrame available to subsequent Jupyter Notebook cells.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`YIELD` 使 DataFrame 可用于后续的 Jupyter Notebook 单元格。'
- en: '![](../Images/ab0bd2ba59bd5620b47ab4304c9cca19.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ab0bd2ba59bd5620b47ab4304c9cca19.png)'
- en: Image by Author
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: We can now access the `names` variable and perform additional queries in a separate
    Jupyter Notebook cell.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以访问 `names` 变量，并在另一个 Jupyter Notebook 单元格中执行额外的查询。
- en: '![](../Images/e6fa40eb031b2d4cf0b815ff4e1293e4.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e6fa40eb031b2d4cf0b815ff4e1293e4.png)'
- en: Image by Author
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: FugueSQL Python Extensions
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: FugueSQL Python 扩展
- en: TRANSFORM
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: TRANSFORM
- en: FugueSQL allows you to integrate Python functions into your SQL queries by using
    the [TRANSFORM keyword](https://fugue-tutorials.readthedocs.io/tutorials/quick_look/ten_minutes_sql.html#invoking-python-code).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: FugueSQL 允许你通过使用 [TRANSFORM 关键字](https://fugue-tutorials.readthedocs.io/tutorials/quick_look/ten_minutes_sql.html#invoking-python-code)
    将 Python 函数集成到 SQL 查询中。
- en: The following query shows how the `get_decade` function is applied to the data
    using `TRANSFORM` to generate a new column named `decade`.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 以下查询演示了如何使用 `TRANSFORM` 将 `get_decade` 函数应用于数据，以生成名为 `decade` 的新列。
- en: '![](../Images/9ffe27a4524af5ae4b2a9bf893938657.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9ffe27a4524af5ae4b2a9bf893938657.png)'
- en: Image by Author
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: With `TRANSFORM`, data scientists can now perform feature engineering on data
    and utilize new machine learning models on BigQuery.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `TRANSFORM`，数据科学家现在可以对数据进行特征工程，并在 BigQuery 上利用新的机器学习模型。
- en: OUTPUT
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: OUTPUT
- en: FugueSQL also provides built-in extensions that facilitate integration with
    other plotting libraries, such as seaborn.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: FugueSQL 还提供了内置扩展，方便与其他绘图库（如 seaborn）集成。
- en: In the code below, `OUPUT USING sns:lineplot()` brings the query results to
    pandas and then generates the line plot using seaborn.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码中，`OUPUT USING sns:lineplot()` 将查询结果导入 pandas，然后使用 seaborn 生成线图。
- en: '![](../Images/f38598549a765329d4269d01164a5e94.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f38598549a765329d4269d01164a5e94.png)'
- en: Image by Author
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Productionizing SQL Queries
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生产化 SQL 查询
- en: To transition from notebooks to production, we can eliminate the intermediate
    `YIELD` statements and pass the query as a string to the `fugue_sql()` function.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将笔记本过渡到生产环境，我们可以消除中间的 `YIELD` 语句，并将查询作为字符串传递给 `fugue_sql()` 函数。
- en: '[PRE3]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We can then use the `as_pandas()` function to convert the output to pandas for
    further analysis.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以使用 `as_pandas()` 函数将输出转换为 pandas 以进行进一步分析。
- en: '![](../Images/84863656a1d5fa2a1cc9d5f77c119e4a.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/84863656a1d5fa2a1cc9d5f77c119e4a.png)'
- en: Image by Author
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Iterating on Big Data
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 迭代大数据
- en: FugueSQL offers the capability to sample a BigQuery table into a smaller DataFrame
    using the `SAMPLE` keyword. This speeds up the iteration process and avoids the
    need to work with the complete dataset every time.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: FugueSQL 提供了使用 `SAMPLE` 关键字将 BigQuery 表采样到较小的数据框的功能。这加快了迭代过程，避免了每次都需要处理完整数据集。
- en: Here, the `YIELD` keyword is used again to make the `test` DataFrame available.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`YIELD` 关键字再次被使用，以便使 `test` 数据框可用。
- en: '![](../Images/1c687d93c4793baeaf7426b554c97d01.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1c687d93c4793baeaf7426b554c97d01.png)'
- en: Image by Author
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: In the next cell, we can test the query on the `test` DataFrame using FugueSQL
    with [DuckDB](https://duckdb.org/) backend to speed up the code.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个单元格中，我们可以使用 FugueSQL 和 [DuckDB](https://duckdb.org/) 后端在 `test` 数据框上测试查询，以加速代码。
- en: '[](/fugue-and-duckdb-fast-sql-code-in-python-e2e2dfc0f8eb?source=post_page-----5215a1b65e43--------------------------------)
    [## Fugue and DuckDB: Fast SQL Code in Python'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/fugue-and-duckdb-fast-sql-code-in-python-e2e2dfc0f8eb?source=post_page-----5215a1b65e43--------------------------------)
    [## Fugue 和 DuckDB：Python 中的快速 SQL 代码]'
- en: Optimize Your SQL Code with Python and DuckDB
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 Python 和 DuckDB 优化 SQL 代码
- en: towardsdatascience.com](/fugue-and-duckdb-fast-sql-code-in-python-e2e2dfc0f8eb?source=post_page-----5215a1b65e43--------------------------------)
    ![](../Images/0cb10bf231ecc4970be5ff82ff3e13c3.png)
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/fugue-and-duckdb-fast-sql-code-in-python-e2e2dfc0f8eb?source=post_page-----5215a1b65e43--------------------------------)
    ![](../Images/0cb10bf231ecc4970be5ff82ff3e13c3.png)
- en: Image by Author
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Once the query has undergone thorough testing, switching the engine to `bq`
    is a simple task.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦查询经过彻底测试，切换引擎到 `bq` 是一项简单的任务。
- en: '![](../Images/8b09f3c81267d9c86fa62e216d0456e4.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8b09f3c81267d9c86fa62e216d0456e4.png)'
- en: Image by Author
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Combining BigQuery with Spark, Dask, or Ray
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 BigQuery 与 Spark、Dask 或 Ray 结合使用
- en: If you are dealing with vast amounts of data in BigQuery, it may be too slow
    for a single machine to handle. Fugue provides a convenient way to integrate BigQuery
    with distributed computing frameworks such as Spark, Dask, and Ray.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在 BigQuery 中处理大量数据，单台机器可能处理速度过慢。Fugue 提供了将 BigQuery 与分布式计算框架（如 Spark、Dask
    和 Ray）集成的便捷方式。
- en: In the query below, the `transform()` function applies the `median` function
    in a distributed manner to each partition of a Dask DataFrame.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的查询中，`transform()` 函数以分布式方式将 `median` 函数应用到 Dask 数据框的每个分区。
- en: '[PRE4]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/9bca30fc45e4b0c1a7dde640dae651dc.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9bca30fc45e4b0c1a7dde640dae651dc.png)'
- en: Image by Author
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: When the query is executed, the data is automatically persisted in a temporary
    dataset. By default, the dataset is named `FUGUE_TEMP_DATASET` and must be created
    in the BigQuery workspace, as shown below.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 当查询执行时，数据会自动持久化到临时数据集。默认情况下，数据集名为 `FUGUE_TEMP_DATASET`，必须在 BigQuery 工作区中创建，如下所示。
- en: '![](../Images/41974e77c5b47c2224c6a50bdfe18002.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/41974e77c5b47c2224c6a50bdfe18002.png)'
- en: Image by Author
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Conclusion
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Congratulations! You have just learned how to quickly iterate on data that lives
    in BigQuery with FugueSQL. Fugue’s Python and SQL interoperability provides a
    frictionless developer experience with minimal boilerplate code.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜你！你刚刚学会了如何使用 FugueSQL 快速迭代 BigQuery 中的数据。Fugue 的 Python 和 SQL 互操作性提供了无摩擦的开发者体验，且代码冗余最小。
- en: I love writing about data science concepts and playing with different data science
    tools. You can connect with me on [LinkedIn](https://www.linkedin.com/in/khuyen-tran-1401/)
    and [Twitter](https://twitter.com/KhuyenTran16).
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢撰写数据科学概念和玩各种数据科学工具。你可以在[LinkedIn](https://www.linkedin.com/in/khuyen-tran-1401/)和[Twitter](https://twitter.com/KhuyenTran16)上与我联系。
- en: 'Star [this repo](https://github.com/khuyentran1401/Data-science) if you want
    to check the code for the articles I have written. Follow me on Medium to stay
    notified about my latest data science articles:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想查看我写的文章的代码，可以给[这个仓库](https://github.com/khuyentran1401/Data-science)加星。关注我在
    Medium 上，以便及时了解我最新的数据科学文章：
- en: '[](/validate-your-pandas-dataframe-with-pandera-2995910e564?source=post_page-----5215a1b65e43--------------------------------)
    [## Validate Your pandas DataFrame with Pandera'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 使用 Pandera 验证你的 pandas DataFrame'
- en: Make Sure Your Data Matches Your Expectation
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 确保你的数据符合预期
- en: towardsdatascience.com](/validate-your-pandas-dataframe-with-pandera-2995910e564?source=post_page-----5215a1b65e43--------------------------------)
    [](/write-clean-python-code-using-pipes-1239a0f3abf5?source=post_page-----5215a1b65e43--------------------------------)
    [## Write Clean Python Code Using Pipes
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 使用管道编写清晰的 Python 代码'
- en: A Short and Clean Approach to Processing Iterables
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 处理可迭代对象的简短而清晰的方法
- en: towardsdatascience.com](/write-clean-python-code-using-pipes-1239a0f3abf5?source=post_page-----5215a1b65e43--------------------------------)
    [](/2-tools-to-automatically-reload-when-python-files-change-90bb28139087?source=post_page-----5215a1b65e43--------------------------------)
    [## 2 Tools to Automatically Reload when Python Files Change
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 当 Python 文件发生更改时自动重新加载的 2 个工具'
- en: towardsdatascience.com](/2-tools-to-automatically-reload-when-python-files-change-90bb28139087?source=post_page-----5215a1b65e43--------------------------------)
    [](/create-observable-and-reproducible-notebooks-with-hex-460e75818a09?source=post_page-----5215a1b65e43--------------------------------)
    [## Create Observable and Reproducible Notebooks with Hex
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 使用 Hex 创建可观察和可重复的笔记本'
- en: How to integrate notebooks into your data pipeline
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何将笔记本集成到你的数据管道中
- en: towardsdatascience.com](/create-observable-and-reproducible-notebooks-with-hex-460e75818a09?source=post_page-----5215a1b65e43--------------------------------)
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 创建可观察和可重复的 Hex 笔记本'
