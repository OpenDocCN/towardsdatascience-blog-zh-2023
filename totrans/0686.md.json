["```py\nsepia_filter = np.array([\n    [0.393, 0.769, 0.189], \n    [0.349, 0.686, 0.168],\n    [0.272, 0.534, 0.131],\n])\n# input_img shape (H, W, 3)\n# sepia_filter shape (3, 3)\nsepia_img = input_img.dot(sepia_filter.T)  # <- why this is legal??\nsepia_img /= sepia_img.max()\n```", "```py\nI, J, K, L, C = 10, 20, 30, 40, 50\na = np.random.random((I, J, C))\nb = np.random.random((K, C, L))\nc = a.dot(b)\ni, j, k, l = 3, 2, 4, 5\nprint(c[i, j, k, l])\nprint(sum(a[i, j, :] * b[k, :, l]))\n```", "```py\n13.125012901284713\n13.125012901284713\n```", "```py\n# Example shapes for arrays a and b\na_shape = (4, 3, 2)\nb_shape = (3, 2, 5)\n# Create random arrays with the specified shapes\na = np.random.random(a_shape)\nb = np.random.random(b_shape)\n```", "```py\nc = a.dot(b)\nprint(c.shape)\n```", "```py\n(4, 3, 3, 5)\n```", "```py\nsepia_filter_T = sepia_filter.T\ndot(input_img, sepia_filter_T)[h, w, c] = sum(input_img[h, w, :] * sepia_filter_T[:, c])\n```", "```py\ndot(input_img, sepia_filter)[h, w, c] = sum(input_img[h, w, :] * sepia_filter[c, :])\n```", "```py\nsepia_img = np.einsum(\"HWC, OC -> HWO\", input_img, sepia_filter)\nsepia_img /= sepia_img.max()\n```", "```py\nplt.imshow(sepia_img)\nplt.axis(\"off\")\n```"]