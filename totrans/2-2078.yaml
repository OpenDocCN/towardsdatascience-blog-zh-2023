- en: The Ultimate Python and Tensorflow Set-Up Guide for Apple Silicon Macs (M1 &
    M2)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/the-ultimate-python-and-tensorflow-set-up-guide-for-apple-silicon-macs-m1-m2-e9ef304a2c06](https://towardsdatascience.com/the-ultimate-python-and-tensorflow-set-up-guide-for-apple-silicon-macs-m1-m2-e9ef304a2c06)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Step-by-step guide
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Installing TensorFlow and Python on ARM Macs was never easier
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://polmarin.medium.com/?source=post_page-----e9ef304a2c06--------------------------------)[![Pol
    Marin](../Images/a4f69a96717d453db9791f27b8f85e86.png)](https://polmarin.medium.com/?source=post_page-----e9ef304a2c06--------------------------------)[](https://towardsdatascience.com/?source=post_page-----e9ef304a2c06--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----e9ef304a2c06--------------------------------)
    [Pol Marin](https://polmarin.medium.com/?source=post_page-----e9ef304a2c06--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----e9ef304a2c06--------------------------------)
    ·6 min read·Feb 25, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2cd7fe5600bcbb2c4b7f9f2473504fe0.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Ales Nesetril](https://unsplash.com/de/@alesnesetril?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: I switched jobs one year ago and I found myself with a brand new M1 MacBook
    Pro to work with. I had to install everything a data scientist needs, which was
    a real pain.
  prefs: []
  type: TYPE_NORMAL
- en: To make things worse, it turns out that I didn’t set it up properly and it was
    chaos.
  prefs: []
  type: TYPE_NORMAL
- en: But a coworker shared a set of steps and, after following them and being able
    to set it all up successfully, I thought I could share it with you all. So I summarized
    and expanded it with extra info and steps for completeness. As I haven’t found
    anything like this on the Internet, or at least when I searched, I decided to
    make it public so everyone can benefit from it.
  prefs: []
  type: TYPE_NORMAL
- en: In this story, you’ll find a step-by-step guide on how to successfully install
    Python and Tensorflow in M1 and M2 Macs without going through the pain of trying
    to set it all up on your own.
  prefs: []
  type: TYPE_NORMAL
- en: 'The workflow is relatively straightforward:'
  prefs: []
  type: TYPE_NORMAL
- en: We’ll first install the basic requirements any developer needs on a Mac (if
    you’re not using a new Mac, chances are that you already have those covered).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then move on to the Python installation using **pyenv**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, install and set up Tensorflow properly for an M1 or M2 Mac.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: All you need is an ARM Mac and you’re ready to go!
  prefs: []
  type: TYPE_NORMAL
- en: Setting Up Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Macs nowadays already come with Python installed, at least Python2, but I believe
    there are better and recommended ways of working with Python in an arm64 like
    your M1 or M2 MacBook.
  prefs: []
  type: TYPE_NORMAL
- en: XCode Command line tools
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First, you’ll need to **install XCode Command line** tools:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: These tools are **for software developers that run on the command line**, in
    the Terminal application. Since before Apple’s beginnings, this assortment of
    Unix-based tools has been the foundation of almost all software development.
  prefs: []
  type: TYPE_NORMAL
- en: Homebrews
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once we have the command line tools installed, we’ll need to **install two homebrews**.
    Why two? We want one native (Apple Silicon) and one for Intel (also named Rosetta).
    To do so, we’ll have to have one Terminal/iTerm2 for each architecture. It’s easy.
  prefs: []
  type: TYPE_NORMAL
- en: '*I recommend using iTerm2[1] as it is an improved terminal for macOS, but it
    works the same way if you prefer to stick to the built-in terminal.*'
  prefs: []
  type: TYPE_NORMAL
- en: Go to your Applications folder, duplicate the “iTerm” and rename the copy to
    “intel iTerm” (or similar). For that new app, right-click and select “Get Info”.
    In the General section, check “Open using Rosetta”.
  prefs: []
  type: TYPE_NORMAL
- en: Now we have to set up Homebrew [2].
  prefs: []
  type: TYPE_NORMAL
- en: 'From the Intel Terminal, run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'If you don’t know what terminal you’re using, use `uname -m` and see the output:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '- If you see `x86_64`, then you’re in the Intel/Rosetta one.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '- But if the output shows `arm64`, you’re in the native one (M1/M2).'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Now open the native Terminal (the default iTerm or Terminal), and run the next
    set of instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Now check, on both terminals, if they are both properly installed.
  prefs: []
  type: TYPE_NORMAL
- en: 'On Intel iTerm:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'On native iTerm:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, to properly manage both environments, we need to set them up properly.
    Just add this configuration in your `~/.zshrc` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: For brew to work properly, only the first part is needed… But the other flags
    added afterward will probably be helpful (maybe needed?) as well.
  prefs: []
  type: TYPE_NORMAL
- en: 'For the record: we’ll always try to install packages using the native brew
    first. Only if some package fails to install and after being sure it’s not able
    through the native version, then we’ll use the Intel brew.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Pyenv
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Ok so now we are in a position to start installing Python-related stuff. We’ll
    start with **pyenv**, which will make the process of installing various Python
    versions extremely smooth.
  prefs: []
  type: TYPE_NORMAL
- en: 'Open your native terminal and simply type the command below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Build dependencies
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For pyenv to work properly, we need to install several dependencies[3]. In
    our case:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Additionally, we want to add the same dependencies in our intel homebrew so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'At this point, you can already start installing Python versions as you want.
    Here’s an example you’d use if you wanted to install Python 3.9.9 and set it as
    default:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: And, if you want to see your currently installed versions, just use `pyenv versions`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Because with this kind of process a double check is always worth it, so run
    the next command: `~/.pyenv/versions/3.9.9/bin/python` replacing `3.9.9` with
    the version you decided to install and set as global. Once in the shell, try to
    import `ctypes`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: If it doesn’t break, then it’s properly installed.
  prefs: []
  type: TYPE_NORMAL
- en: Pipenv
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'While having it installed isn’t mandatory, it’s always a good practice to use
    environments for your projects. That’s why I also decided to put it in here because
    it’s easy and good practice. To install it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: And now you can just use it in any project as you will. You can check the basic
    usage of pipenv on their official documentation[4] or just find online tutorials.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Tensorflow
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: On to the second part now. Installing TensorFlow on an M1 or M2 Mac has been
    a nightmare for many of us, but it doesn’t have to anymore.
  prefs: []
  type: TYPE_NORMAL
- en: 'You will recall that we edited the `~/.zshrc` file a while ago. Now, we’ll
    add this to the end:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Once that’s added, we’ll have to download miniconda right into our `~/` directory.
    You can directly download it from [https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-arm64.sh](https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-arm64.sh)
    and manually move it to the home folder.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once downloaded, my advice is to quit and reopen the native terminal and then
    run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'Now that we have conda installed, we’ll activate the environment and install
    some dependencies for Tensorflow:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Again, restart your terminal by quitting (Cmd + Q) and reopening it, and you
    can now install Tensorflow. I’ll do it in a dedicated environment this way:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Go to your project folder: for example`cd Documents/project`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Activate the environment: `pipenv shell`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Install Tensorflow: `pipenv install tensorflow-macos`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Et voilà!* You should now be ready to use TensorFlow properly on your M1 or
    M2 Mac.'
  prefs: []
  type: TYPE_NORMAL
- en: See how there’s a package that I installed called *tensorflow-metal*[5] to accelerate
    the training of our models in our Mac’s GPU so you could consider installing it
    with
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now you know how to go through the pain of setting up a brand new Mac for data
    science and get the most out of its new chips.
  prefs: []
  type: TYPE_NORMAL
- en: I hope this was helpful enough and any doubts or problems you might encounter,
    feel free to comment on this story — I or another expert will surely help you.
  prefs: []
  type: TYPE_NORMAL
- en: I don’t want to leave without kindly thanking you for going through my story.
    I frequently post on Medium and, if you enjoyed this post, feel free to follow
    me. It helps a lot.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you’d like to support me further, consider subscribing to Medium’s Membership
    through the link you find below: it won’t cost you any extra penny but it’ll help
    me through this process. Thanks a lot!'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/@polmarin/membership?source=post_page-----e9ef304a2c06--------------------------------)
    [## Join Medium with my referral link — Pol Marin'
  prefs: []
  type: TYPE_NORMAL
- en: Read every story from Pol Marin (and thousands of other writers on Medium).
    Your membership fee directly supports Pol…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: medium.com](https://medium.com/@polmarin/membership?source=post_page-----e9ef304a2c06--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Resources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[1] [iTerm2 — macOS Terminal Replacement](https://iterm2.com/index.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '[2] Noah Peters, [Setup Homebrew on Apple Silicon](https://noahpeeters.de/posts/apple-silicon/homebrew-setup/)'
  prefs: []
  type: TYPE_NORMAL
- en: '[3] [Pyenv wiki](https://github.com/pyenv/pyenv/wiki#suggested-build-environment)'
  prefs: []
  type: TYPE_NORMAL
- en: '[4] [Basic Usage of Pipenv](https://pipenv.pypa.io/en/latest/basics/#basic-usage-of-pipenv)'
  prefs: []
  type: TYPE_NORMAL
- en: '[5] [Official PyPi — Tensorflow-metal package](https://pypi.org/project/tensorflow-metal/)'
  prefs: []
  type: TYPE_NORMAL
