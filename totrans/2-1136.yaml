- en: How to Create a Lipstick Chart with Matplotlib
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[https://towardsdatascience.com/how-to-create-a-lipstick-chart-with-matplotlib-2fde5412fee9](https://towardsdatascience.com/how-to-create-a-lipstick-chart-with-matplotlib-2fde5412fee9)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Matplotlib Tutorial
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A data visualization when the lower the value, the better
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@oscarleo?source=post_page-----2fde5412fee9--------------------------------)[![Oscar
    Leo](../Images/7733c9147bad2875a35155fca3903aa8.png)](https://medium.com/@oscarleo?source=post_page-----2fde5412fee9--------------------------------)[](https://towardsdatascience.com/?source=post_page-----2fde5412fee9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----2fde5412fee9--------------------------------)
    [Oscar Leo](https://medium.com/@oscarleo?source=post_page-----2fde5412fee9--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ¬∑Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----2fde5412fee9--------------------------------)
    ¬∑6 min read¬∑Sep 2, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b56bd1ce8dea80d01f57cf4978f28670.png)'
  prefs: []
  type: TYPE_IMG
- en: Today, I will show you how to create a lipstick chart for visualizing progress
    on metrics where the lower the value, the better.
  prefs: []
  type: TYPE_NORMAL
- en: It‚Äôs perfect when metrics have similar trends and topics but not the same scale.
    My aim is to share a message rather than ‚Äújust‚Äù a plot.
  prefs: []
  type: TYPE_NORMAL
- en: I‚Äôve prepared a simple dataset about mortality and diseases so that you can
    focus on creating the visualization.
  prefs: []
  type: TYPE_NORMAL
- en: The data comes from the [World Bank](https://data.worldbank.org/) and is publicly
    available under Creative Commons licenses. If you want to learn more, I‚Äôve written
    about the visualization in my new free newsletter, [Data Wonder](https://open.substack.com/pub/datawonder/p/the-worlds-progress-on-mortality?r=17ashl&utm_campaign=post&utm_medium=web).
  prefs: []
  type: TYPE_NORMAL
- en: If you enjoy this tutorial, make sure to take a look at my other ones as well.
  prefs: []
  type: TYPE_NORMAL
- en: '![Oscar Leo](../Images/a3badd168c6bfbbdc3d060f9191ca1d2.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Oscar Leo](https://medium.com/@oscarleo?source=post_page-----2fde5412fee9--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: Matplotlib Tutorials
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[View list](https://medium.com/@oscarleo/list/matplotlib-tutorials-262e5d7f0847?source=post_page-----2fde5412fee9--------------------------------)8
    stories![](../Images/51b77b8f6d7ea69abdcd113427d4a52a.png)![](../Images/56c078b5447338a07b7bce2b23cf7133.png)![](../Images/c3088ee7cd4994f027ddddbc6ae423cd.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Let‚Äôs get started.
  prefs: []
  type: TYPE_NORMAL
- en: Step 1 - Importing libraries
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The first and simplest part is to import the required libraries like pandas
    and matplotlib.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Congratulations, you just completed step 1! ü•≥
  prefs: []
  type: TYPE_NORMAL
- en: Step 2 ‚Äî Create a Seaborn style
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Next, I want to create a color scheme and select a font. Sites like [Coolors](https://coolors.co/)
    and [Colorhunt](https://colorhunt.co/) are great resources when searching for
    beautiful colors.
  prefs: []
  type: TYPE_NORMAL
- en: Here‚Äôs my code and settings to create the seaborn style for this tutorial.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: I‚Äôm removing all the ticks and lines to create a clean visualization, and the
    grids don‚Äôt add valuable information to our lipstick chart.
  prefs: []
  type: TYPE_NORMAL
- en: Step 3 ‚Äî Reading the data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can read the CSV directly from the URL as I do in the code below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Here‚Äôs what the data frame looks like.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f47de81d9444a2532f04bd649b46d1cb.png)'
  prefs: []
  type: TYPE_IMG
- en: Screenshot by the author
  prefs: []
  type: TYPE_NORMAL
- en: Most values are self-explanatory except for ‚Äúper,‚Äù which shows each row‚Äôs scale.
    For example, the latest ‚ÄúMaternal mortality‚Äù value was 223 out of 100,000 births.
  prefs: []
  type: TYPE_NORMAL
- en: Step 4 ‚Äî Adding bars
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now, it‚Äôs time to add some data.
  prefs: []
  type: TYPE_NORMAL
- en: I‚Äôm adding bars for both 2000 and the latest values. Since my goal is to show
    the relative decrease for each value, I‚Äôm dividing each row by its 2000 value.
  prefs: []
  type: TYPE_NORMAL
- en: That means each bar for 2000 will reach 1, so it‚Äôs only a visual helper and
    doesn‚Äôt add any additional information.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: I create a figure and run the `add_bars()` function like this.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: The result for the code we have so far looks like this.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fc47eb7eb76ec908c817a3b30591bd15.png)'
  prefs: []
  type: TYPE_IMG
- en: Chart created by the author
  prefs: []
  type: TYPE_NORMAL
- en: Let‚Äôs continue.
  prefs: []
  type: TYPE_NORMAL
- en: Step 5 ‚Äî Formatting the axes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The names for each row are too long to use without line breaks. That‚Äôs why I
    created the following function to add `\n` to the strings in a few places.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: I also want to increase the font size and remove unnecessary information to
    make the chart readable. The code to create the visualization now looks like this.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Here‚Äôs the updated results.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b2665ace9f254cd4fc29b7698ecefbb4.png)'
  prefs: []
  type: TYPE_IMG
- en: Screenshot by the author
  prefs: []
  type: TYPE_NORMAL
- en: Let‚Äôs add some additional information.
  prefs: []
  type: TYPE_NORMAL
- en: Step 5 ‚Äî Adding useful information
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You always want to make sure that the users understand what they are looking
    at. Right now, we have no helpful information.
  prefs: []
  type: TYPE_NORMAL
- en: For starters, I want to add the current values, which I do with the following
    function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: And since the purpose is to show the relative decrease of each metric compared
    to its value from 2000, I have another function showing the change for each row.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: I add both functions under a for-loop.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Here‚Äôs the output.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c20a06fc75efed11b61d0d42daf28bc3.png)'
  prefs: []
  type: TYPE_IMG
- en: Chart created by the author
  prefs: []
  type: TYPE_NORMAL
- en: It‚Äôs starting to look good.
  prefs: []
  type: TYPE_NORMAL
- en: Step 6 ‚Äî Adding a title and legend
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this step, I‚Äôm simply using some built-in Matplotlib functions to add a title
    and legend. Since we defined `label` in `add_bars()` much of the styling is automatic.
  prefs: []
  type: TYPE_NORMAL
- en: Apart from defining a title and legend, I‚Äôm also adding a border using `Line2D`
    for visual effects.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Here‚Äôs what the chart looks like now.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5641db15d4ac07c7e7364c27821d92c9.png)'
  prefs: []
  type: TYPE_IMG
- en: Chart created by the author
  prefs: []
  type: TYPE_NORMAL
- en: Step 7 ‚Äî Creating an image and adding padding
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The chart looks a bit cramped, so the last step is to add some padding. I‚Äôm
    doing that by turning the figure into a PIL Image with the following function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: And here‚Äôs the function to add padding.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: We have now written all the code required to create the data visualization we
    aimed for.
  prefs: []
  type: TYPE_NORMAL
- en: Here‚Äôs the full code snippet that uses all functions to create the final lipstick
    chart.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: And here‚Äôs the finished product.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2f96394bd75b98d0250a070b8fdcd6fd.png)'
  prefs: []
  type: TYPE_IMG
- en: Screenshot by the author
  prefs: []
  type: TYPE_NORMAL
- en: We‚Äôre done!
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Thank you for reading this tutorial; I hope you learned some tricks you can
    reuse for your data visualization projects.
  prefs: []
  type: TYPE_NORMAL
- en: If you want to see more tutorials and beautiful data visualizations, follow
    me here, subscribe to [Data Wonder](https://datawonder.substack.com/), and to
    [oscarl3o](https://twitter.com/oscarl3o) on Twitter.
  prefs: []
  type: TYPE_NORMAL
- en: See you next time.
  prefs: []
  type: TYPE_NORMAL
