["```py\npipeline(task=\"sentiment-analysis\")(\"Love this!\")\n\n# output -> [{'label': 'POSITIVE', 'score': 0.9998745918273926}]\n```", "```py\npipeline(task=\"sentiment-analysis\", \n        model='distilbert-base-uncased-finetuned-sst-2-english')(\"Love this!\")\n\n# ouput -> [{'label': 'POSITIVE', 'score': 0.9998745918273926}]\n```", "```py\n>>> cd <directory with hf-env.yml>\n\n>>> conda env create --file hf-env.yml\n```", "```py\nfrom transformers import pipeline\n\nclassifier = pipeline(task=\"sentiment-analysis\", \\\n                      model=\"distilbert-base-uncased-finetuned-sst-2-english\")\n\nclassifier(\"Hate this.\")\n\n# output -> [{'label': 'NEGATIVE', 'score': 0.9997110962867737}]\n```", "```py\ntext_list = [\"This is great\", \\\n             \"Thanks for nothing\", \\\n             \"You've got to work on your face\", \\\n             \"You're beautiful, never change!\"]\n\nclassifier(text_list)\n\n# output -> [{'label': 'POSITIVE', 'score': 0.9998785257339478},\n# {'label': 'POSITIVE', 'score': 0.9680058360099792},\n# {'label': 'NEGATIVE', 'score': 0.8776106238365173},\n# {'label': 'POSITIVE', 'score': 0.9998120665550232}]\n```", "```py\nclassifier = pipeline(task=\"text-classification\", \\\n                      model=\"SamLowe/roberta-base-go_emotions\", top_k=None)\n\nclassifier(text_list[0])\n\n# output -> [[{'label': 'admiration', 'score': 0.9526104927062988},\n#  {'label': 'approval', 'score': 0.03047208860516548},\n#  {'label': 'neutral', 'score': 0.015236231498420238},\n#  {'label': 'excitement', 'score': 0.006063772831112146},\n#  {'label': 'gratitude', 'score': 0.005296189337968826},\n#  {'label': 'joy', 'score': 0.004475208930671215},\n#  ... and many more\n```", "```py\nsummarizer = pipeline(\"summarization\", model=\"facebook/bart-large-cnn\")\n\ntext = \"\"\"\nHugging Face is an AI company that has become a major hub for open-source machine learning. \nTheir platform has 3 major elements which allow users to access and share machine learning resources. \nFirst, is their rapidly growing repository of pre-trained open-source machine learning models for things such as natural language processing (NLP), computer vision, and more. \nSecond, is their library of datasets for training machine learning models for almost any task. \nThird, and finally, is Spaces which is a collection of open-source ML apps.\n\nThe power of these resources is that they are community generated, which leverages all the benefits of open source i.e. cost-free, wide diversity of tools, high quality resources, and rapid pace of innovation. \nWhile these make building powerful ML projects more accessible than before, there is another key element of the Hugging Face ecosystemâ€”their Transformers library.\n\"\"\"\nsummarized_text = summarizer(text, min_length=5, max_length=140)[0]['summary_text']\nprint(summarized_text)\n\n# output -> 'Hugging Face is an AI company that has become a major hub for \n# open-source machine learning. They have 3 major elements which allow users \n# to access and share machine learning resources.' \n```", "```py\nclassifier(summarized_text)\n\n# output -> [[{'label': 'neutral', 'score': 0.9101783633232117},  \n# {'label': 'approval', 'score': 0.08781372010707855},  \n# {'label': 'realization', 'score': 0.023256294429302216},  \n# {'label': 'annoyance', 'score': 0.006623792927712202},  \n# {'label': 'admiration', 'score': 0.004981081001460552},  \n# {'label': 'disapproval', 'score': 0.004730119835585356},  \n# {'label': 'optimism', 'score': 0.0033590723760426044},  \n# ... and many more\n```", "```py\nchatbot = pipeline(model=\"facebook/blenderbot-400M-distill\")\n```", "```py\nfrom transformers import Conversation\n\nconversation = Conversation(\"Hi I'm Shaw, how are you?\")\nconversation = chatbot(conversation)\nprint(conversation)\n\n# output -> Conversation id: 9248ee7d-2a58-4355-9fba-525189fae206 \n# user >> Hi I'm Shaw, how are you? \n# bot >>  I'm doing well. How are you doing this evening? I just got home from work. \n```", "```py\nconversation.add_user_input(\"Where do you work?\")\nconversation = chatbot(conversation)\nprint(conversation)\n\n# output -> Conversation id: 9248ee7d-2a58-4355-9fba-525189fae206 \n# user >> Hi I'm Shaw, how are you? \n# bot >>  I'm doing well. How are you doing this evening? I just got home from work.\n# user >> Where do you work? \n# bot >>  I work at a grocery store. What about you? What do you do for a living? \n```", "```py\nmessage_list = []\nresponse_list = []\n\ndef vanilla_chatbot(message, history):\n    conversation = Conversation(text=message, past_user_inputs=message_list, generated_responses=response_list)\n    conversation = chatbot(conversation)\n\n    return conversation.generated_responses[-1]\n\ndemo_chatbot = gr.ChatInterface(vanilla_chatbot, title=\"Vanilla Chatbot\", description=\"Enter text to start chatting.\")\n\ndemo_chatbot.launch()\n```"]