["```py\n$ python3 -m pip install --upgrade google-cloud-bigquery\n```", "```py\n$ gcloud auth application-default login\n```", "```py\nfrom google.cloud import bigquery\n\n# The client we'll use to interact with BigQuery\nclient = bigquery.Client(project='my-gcp-project')\n```", "```py\n# Get an iterator pointing to `DaasetListItem` objects\nbq_datasets = list(client.list_datasets())\n```", "```py\n# Print BigQuery datasets in project `my-gcp-project` \nfor dataset in bq_datasets:\n  print(f'{client.project=}, {dataset.dataset_id=}')\n```", "```py\n\"\"\"\nScript used to iterate over BigQuery datasets in a single \nBigQuery project.\n\"\"\"\nfrom google.cloud import bigquery\n\n# The client we'll use to interact with BigQuery\nclient = bigquery.Client(project='my-gcp-project')\n\n# Get an iterator pointing to `DaasetListItem` objects\nbq_datasets = client.list_datasets()\n\n# Print BigQuery datasets in project `my-gcp-project`\nfor dataset in bq_datasets:\n  print(f'{client.project=}, {dataset.dataset_id=}')\n```", "```py\nclient.project='my-gcp-project', dataset.dataset_id='my_dataset'\nclient.project='my-gcp-project', dataset.dataset_id='another_dataset'\nclient.project='my-gcp-project', dataset.dataset_id='oh_heres_another_one'\n```", "```py\nfor table in client.list_tables(dataset.dataset_id):\n    print(f'{table.table_id=}, {dataset.dataset_id=}, {client.project=}')\n```", "```py\n\"\"\"\nScript used to iterate over BigQuery table names for every single \ndataset in a particular BigQuery project.\n\"\"\"\nfrom google.cloud import bigquery\n\n# The client we'll use to interact with BigQuery\nclient = bigquery.Client(project='my-gcp-project')\n\n# Get an iterator pointing to `DaasetListItem` objects\nbq_datasets = client.list_datasets()\n\n# Print BigQuery table and dataset names in project `my-gcp-project`\nfor dataset in bq_datasets:\n  for table in client.list_tables(dataset.dataset_id):\n    print(f'{table.table_id=}, {dataset.dataset_id=}, {client.project=}')\n```", "```py\ntable.table_id='my_table', dataset.dataset_id='my_dataset', client.project='my-gcp-project'\ntable.table_id='another_table', dataset.dataset_id='my_dataset', client.project='my-gcp-project'\ntable.table_id='temp_table', dataset.dataset_id='temp_ds', client.project='my-gcp-project'\ntable.table_id='temp_table_2', dataset.dataset_id='temp_ds', client.project='my-gcp-project'\n```", "```py\n\"\"\"\nScript used to count number of datasets for a BigQuery project\n\"\"\"\nfrom google.cloud import bigquery\n\n# The client we'll use to interact with BigQuery\nclient = bigquery.Client(project='my-gcp-project')\n\n# Turn iterator into list, and count its length\ndataset_count = len(list(client.list_datasets()))\n\nprint(f'Number of datasets in project {client.project}: {dataset_count}')\n```", "```py\n\"\"\"\nScript used to count number of tables per dataset for a BigQuery project\n\"\"\"\nfrom google.cloud import bigquery\n\n# The client we'll use to interact with BigQuery\nclient = bigquery.Client(project='my-gcp-project')\n\n# Turn iterator into list, and count its length\ntable_total_count = 0\n\nfor dataset in client.list_datasets():\n  table_count = len(list(client.list_tables(dataset.dataset_id)))\n  table_total_count += table_count\n  print(f'No. of tables for dataset {dataset.dataset_id}: {table_count}')\n\nprint(f'Number of tables in project {client.project}: {table_total_count}')\n```"]