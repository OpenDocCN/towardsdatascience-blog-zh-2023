- en: Make Your Tabular Data Stand Out via CLI With These Tips and Tricks
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过这些技巧和窍门使你的表格数据在 CLI 中脱颖而出
- en: 原文：[https://towardsdatascience.com/make-your-tabular-data-stand-out-via-cli-with-these-tips-and-tricks-a21f276b7ba9](https://towardsdatascience.com/make-your-tabular-data-stand-out-via-cli-with-these-tips-and-tricks-a21f276b7ba9)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/make-your-tabular-data-stand-out-via-cli-with-these-tips-and-tricks-a21f276b7ba9](https://towardsdatascience.com/make-your-tabular-data-stand-out-via-cli-with-these-tips-and-tricks-a21f276b7ba9)
- en: 'Enhance readability: tips for displaying datasets in the CLI'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提高可读性：在 CLI 中展示数据集的技巧
- en: '[](https://federicotrotta.medium.com/?source=post_page-----a21f276b7ba9--------------------------------)[![Federico
    Trotta](../Images/e997e3a96940c16ab5071629016d82fd.png)](https://federicotrotta.medium.com/?source=post_page-----a21f276b7ba9--------------------------------)[](https://towardsdatascience.com/?source=post_page-----a21f276b7ba9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----a21f276b7ba9--------------------------------)
    [Federico Trotta](https://federicotrotta.medium.com/?source=post_page-----a21f276b7ba9--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://federicotrotta.medium.com/?source=post_page-----a21f276b7ba9--------------------------------)[![Federico
    Trotta](../Images/e997e3a96940c16ab5071629016d82fd.png)](https://federicotrotta.medium.com/?source=post_page-----a21f276b7ba9--------------------------------)[](https://towardsdatascience.com/?source=post_page-----a21f276b7ba9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----a21f276b7ba9--------------------------------)
    [Federico Trotta](https://federicotrotta.medium.com/?source=post_page-----a21f276b7ba9--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----a21f276b7ba9--------------------------------)
    ·6 min read·Apr 12, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----a21f276b7ba9--------------------------------)
    ·6分钟阅读·2023年4月12日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/cffe7e7f8f14546db47248ae34a16223.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cffe7e7f8f14546db47248ae34a16223.png)'
- en: Image by [Dorothe](https://pixabay.com/it/users/darkmoon_art-1664300/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=3224768)
    on [Pixabay](https://pixabay.com/it//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=3224768)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源于 [Dorothe](https://pixabay.com/it/users/darkmoon_art-1664300/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=3224768)
    在 [Pixabay](https://pixabay.com/it//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=3224768)
- en: A couple of days ago I wanted to help my father solve a problem. His need was
    to aggregate, filter, and display some data as fast as possible. Well…the truth
    is that he printed the data (something like 10 pages each time!!) and search the
    data by hand! I saw his difficulties and decided to help him immediately.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 几天前，我想帮助我的父亲解决一个问题。他需要尽快聚合、筛选和展示一些数据。事实上，他每次都打印数据（大约10页！！）并手动搜索数据！我看到了他的困难，决定立即帮助他。
- en: 'Nothing as difficult for someone who can analyze data as I am: the data was
    already in Excel format, so a Jupyter Notebook and Pandas were the perfect choices.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 对于像我这样能够分析数据的人来说，这并不难：数据已经是 Excel 格式，所以 Jupyter Notebook 和 Pandas 是完美的选择。
- en: 'The problem is that I don’t work for my father. Also, we leave in different
    cities and see each other only every couple of weeks. So, I needed to give him
    a tool he could use with the following characteristics:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 问题是我不为我的父亲工作。而且，我们住在不同的城市，每隔几周才见一次面。所以，我需要给他一个可以使用的工具，其特点如下：
- en: Simple usage.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单使用。
- en: Don’t make the PC explodes if he writes something wrong.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果他输入错误，不要让电脑爆炸。
- en: 'This is why I thought to create a small program that could be managed via CLI.
    What I wanted to create was easy: the user writes something via the command line.
    Then, the program shows the user all the data associated as Pandas would do, but
    in the terminal.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我决定创建一个可以通过 CLI 管理的小程序的原因。我想创建的是简单的：用户通过命令行输入，然后程序在终端中显示与 Pandas 相同的所有数据。
- en: 'So, in this article, I’ll show you how we can display tabular data via CLI
    (Command Line Interface. That is: the terminal, in case you didn’t know). We’ll
    create a simple project to get you immediately hands-on Python and discuss the
    libraries I used.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我将展示如何通过 CLI（命令行界面，即终端）展示表格数据。如果你不知道的话，终端就是我们要使用的工具。我们将创建一个简单的项目，让你立刻上手
    Python，并讨论我使用的库。
- en: Creating tabular data
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建表格数据
- en: 'So, first of all, let’s create some tabular data just for the sake of the exercise:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们创建一些表格数据以便练习：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'So, these are our data:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是我们的数据：
- en: '![](../Images/04d2689935cec48a1be534f1fbfe8178.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/04d2689935cec48a1be534f1fbfe8178.png)'
- en: The tabular data we created. Image by Author.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建的表格数据。图片由作者提供。
- en: 'We have created some tabular data that contain information on some fruits,
    particularly: the name of the fruit, the color, and the weight in kilograms.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了一些包含水果信息的表格数据，特别是：水果名称、颜色和重量（以千克为单位）。
- en: 'Now, to make it “more real”, we can save it into an Excel file like so:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，为了使其“更真实”，我们可以将其保存到 Excel 文件中，如下所示：
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The problem and its solution
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题及其解决方案
- en: 'Now, we’ll create a simple filter that doesn’t need Python if we can use Excel
    a little bit. The problem I faced was more complicated, but here we’re creating
    it simply on purpose: our scope is not to show that this method is better than
    another. Here we’re showing how we can display tabular data via CLI, and a simple
    example will do the job.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将创建一个简单的过滤器，如果我们稍微使用一下 Excel，就不需要 Python。我面临的问题更复杂，但这里我们故意简单地创建它：我们的目标不是展示这种方法是否比其他方法更好。这里我们展示的是如何通过
    CLI 显示表格数据，一个简单的示例就能完成任务。
- en: 'So, let’s say this is our problem: we want the user to write the name of a
    fruit and our program returns all the features of the fruit chosen. We also want
    the filter to be somehow “intelligent” so that if the user writes “pea” it will
    display the features related to “pear”.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，假设这是我们的问题：我们希望用户输入一个水果的名称，我们的程序返回所选水果的所有特征。我们还希望过滤器在某种程度上是“智能”的，以便如果用户输入“pea”，它将显示与“pear”相关的特征。
- en: 'To do so, in Pandas we can use the method `str.contains()`. Let’s try it in
    our Jupyter Notebook:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，在 Pandas 中我们可以使用方法`str.contains()`。让我们在 Jupyter Notebook 中尝试一下：
- en: '[PRE3]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'And we get:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到：
- en: '![](../Images/e28f8981602d703d7ee22f6cd64f99a5.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e28f8981602d703d7ee22f6cd64f99a5.png)'
- en: The filtered data. Image by Author.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 过滤后的数据。图片由作者提供。
- en: 'Read it carefully: we wrote “pea” as a typo on purpose to get sure Pandas returns
    the data anyway. And it does, as expected.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 仔细阅读：我们故意将“pea”写成了一个错别字，以确保 Pandas 无论如何都会返回数据。它确实如预期般返回了数据。
- en: 'So, now we have to face another problem: the intervention of the user via CLI.
    As far as I know, we can use two different methods in these cases: we can use
    the `input` built-in function or we can use the library `argparse`.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们必须面对另一个问题：用户通过 CLI 的干预。据我所知，在这些情况下，我们可以使用两种不同的方法：我们可以使用内置函数`input`，或者可以使用库`argparse`。
- en: 'In case you missed it, I’ve written an article on how we can use `argparse`
    in Data Science. Check it out here:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你错过了，我写了一篇关于如何在数据科学中使用`argparse`的文章。可以在这里查看：
- en: '[](https://medium.com/mlearning-ai/how-argparse-can-be-useful-in-your-data-science-projects-ecf02bef3b07?source=post_page-----a21f276b7ba9--------------------------------)
    [## How Argparse can be useful in your Data Science projects'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/mlearning-ai/how-argparse-can-be-useful-in-your-data-science-projects-ecf02bef3b07?source=post_page-----a21f276b7ba9--------------------------------)
    [## Argparse 如何在数据科学项目中发挥作用]'
- en: I know, it could be difficult to admit but…it can really save your time!
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我知道，这可能很难承认，但……它真的可以节省你的时间！
- en: medium.com](https://medium.com/mlearning-ai/how-argparse-can-be-useful-in-your-data-science-projects-ecf02bef3b07?source=post_page-----a21f276b7ba9--------------------------------)
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[medium.com](https://medium.com/mlearning-ai/how-argparse-can-be-useful-in-your-data-science-projects-ecf02bef3b07?source=post_page-----a21f276b7ba9--------------------------------)'
- en: Now, in this case, I decided to use the `input` built-in function because I
    believe it’s easier to use, and in simple cases like these is a very good choice.
    In fact, this is the perfect choice if we just need to pass a string as an argument
    via CLI (you can read the documentation [here](https://docs.python.org/3/library/functions.html#input)).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在这种情况下，我决定使用内置函数`input`，因为我认为它更容易使用，在像这样的简单情况下是一个很好的选择。实际上，如果我们只需要通过 CLI
    传递一个字符串作为参数，这是完美的选择（你可以在[这里](https://docs.python.org/3/library/functions.html#input)阅读文档）。
- en: 'We can use the `input` function like so:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以这样使用`input`函数：
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now, let’s see how this works and how it returns the data. This is the code
    we can use:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看这如何工作以及如何返回数据。我们可以使用的代码如下：
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now, let’s save it as `fruit.py`, move it to the folder where `fruit.xlsx`
    is located and let’s run it via the terminal:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们将其保存为`fruit.py`，移动到`fruit.xlsx`所在的文件夹，并通过终端运行它：
- en: '![](../Images/02f78a8ed9254fc9f09b5f20e2968c42.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/02f78a8ed9254fc9f09b5f20e2968c42.png)'
- en: Our code via CLI. GIF by Author.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过 CLI 的代码。GIF 由作者提供。
- en: 'Well, as we can see, everything works fine. But just one thing: can we improve
    the visualization? What if we’d like to display better the data as if we were
    on Pandas?'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，正如我们所看到的，一切都正常工作。但有一点：我们可以改进可视化吗？如果我们想要更好地展示数据，就像在 Pandas 中一样，会怎样呢？
- en: Well, the solution I found was to use the library `tabulate` ([here’s the documentation](https://pypi.org/project/tabulate/)).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，我找到的解决方案是使用库 `tabulate` （[这是文档](https://pypi.org/project/tabulate/)）。
- en: 'So, let’s add `tabulate` to our code and see what happens:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，让我们将 `tabulate` 添加到我们的代码中，看看会发生什么：
- en: '[PRE7]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'And we get:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们得到了：
- en: '![](../Images/62976a8a02b7d5738cd18e193ecf31f2.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/62976a8a02b7d5738cd18e193ecf31f2.png)'
- en: Our code via CLI. Image by Author.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的 CLI 代码。图片由作者提供。
- en: As we can see, the data are displayed in a “tabular way”, which is cleaner.
    Also, as we can see, the code correctly manages typos if we search for “pea” as
    we did in Jupyter before.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，数据以“表格方式”显示，这样更清晰。此外，正如我们所见，代码可以正确处理拼写错误，如果我们搜索“pea”就像之前在 Jupyter 中那样。
- en: Conclusions
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: 'I hope this helps you if you need to display tabular data via CLI. If you have
    any other suggestions, please, let me know in the comments: I’m always open to
    improving and learning something new.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望这对你在通过 CLI 显示表格数据时有所帮助。如果你有其他建议，请在评论中告诉我：我总是乐于改进和学习新知识。
- en: '*Subscribe to* [*my newsletter*](https://federicotrotta.substack.com/?r=1ep1nf&utm_campaign=pub-share-checklist)
    *to get more on Python & Data Science.*'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*订阅* [*我的新闻通讯*](https://federicotrotta.substack.com/?r=1ep1nf&utm_campaign=pub-share-checklist)
    *以获取更多关于 Python 和数据科学的信息。*'
- en: '*Liked the article? Join Medium through* [***my referral link***](https://federicotrotta.medium.com/membership)*:
    unlock all the content on Medium for 5$/month (with no additional fee).*'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*喜欢这篇文章吗？通过* [***我的推荐链接***](https://federicotrotta.medium.com/membership)*加入
    Medium：以 5$/月（无需额外费用）解锁 Medium 上的所有内容。*'
- en: '*Find/contact me here:* [*https://bio.link/federicotrotta*](https://bio.link/federicotrotta)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在这里找到/联系我：* [*https://bio.link/federicotrotta*](https://bio.link/federicotrotta)'
- en: '*Found it useful?* ***Buy me a*** [***Ko-fi***](https://ko-fi.com/federicotrotta)***.***'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*觉得有用吗？* ***支持我一下*** [***Ko-fi***](https://ko-fi.com/federicotrotta)***。***'
