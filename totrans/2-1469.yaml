- en: Make Your Tabular Data Stand Out via CLI With These Tips and Tricks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/make-your-tabular-data-stand-out-via-cli-with-these-tips-and-tricks-a21f276b7ba9](https://towardsdatascience.com/make-your-tabular-data-stand-out-via-cli-with-these-tips-and-tricks-a21f276b7ba9)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Enhance readability: tips for displaying datasets in the CLI'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://federicotrotta.medium.com/?source=post_page-----a21f276b7ba9--------------------------------)[![Federico
    Trotta](../Images/e997e3a96940c16ab5071629016d82fd.png)](https://federicotrotta.medium.com/?source=post_page-----a21f276b7ba9--------------------------------)[](https://towardsdatascience.com/?source=post_page-----a21f276b7ba9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----a21f276b7ba9--------------------------------)
    [Federico Trotta](https://federicotrotta.medium.com/?source=post_page-----a21f276b7ba9--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----a21f276b7ba9--------------------------------)
    ·6 min read·Apr 12, 2023
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/cffe7e7f8f14546db47248ae34a16223.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by [Dorothe](https://pixabay.com/it/users/darkmoon_art-1664300/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=3224768)
    on [Pixabay](https://pixabay.com/it//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=3224768)
  prefs: []
  type: TYPE_NORMAL
- en: A couple of days ago I wanted to help my father solve a problem. His need was
    to aggregate, filter, and display some data as fast as possible. Well…the truth
    is that he printed the data (something like 10 pages each time!!) and search the
    data by hand! I saw his difficulties and decided to help him immediately.
  prefs: []
  type: TYPE_NORMAL
- en: 'Nothing as difficult for someone who can analyze data as I am: the data was
    already in Excel format, so a Jupyter Notebook and Pandas were the perfect choices.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The problem is that I don’t work for my father. Also, we leave in different
    cities and see each other only every couple of weeks. So, I needed to give him
    a tool he could use with the following characteristics:'
  prefs: []
  type: TYPE_NORMAL
- en: Simple usage.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Don’t make the PC explodes if he writes something wrong.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This is why I thought to create a small program that could be managed via CLI.
    What I wanted to create was easy: the user writes something via the command line.
    Then, the program shows the user all the data associated as Pandas would do, but
    in the terminal.'
  prefs: []
  type: TYPE_NORMAL
- en: 'So, in this article, I’ll show you how we can display tabular data via CLI
    (Command Line Interface. That is: the terminal, in case you didn’t know). We’ll
    create a simple project to get you immediately hands-on Python and discuss the
    libraries I used.'
  prefs: []
  type: TYPE_NORMAL
- en: Creating tabular data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'So, first of all, let’s create some tabular data just for the sake of the exercise:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'So, these are our data:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/04d2689935cec48a1be534f1fbfe8178.png)'
  prefs: []
  type: TYPE_IMG
- en: The tabular data we created. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: 'We have created some tabular data that contain information on some fruits,
    particularly: the name of the fruit, the color, and the weight in kilograms.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, to make it “more real”, we can save it into an Excel file like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The problem and its solution
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now, we’ll create a simple filter that doesn’t need Python if we can use Excel
    a little bit. The problem I faced was more complicated, but here we’re creating
    it simply on purpose: our scope is not to show that this method is better than
    another. Here we’re showing how we can display tabular data via CLI, and a simple
    example will do the job.'
  prefs: []
  type: TYPE_NORMAL
- en: 'So, let’s say this is our problem: we want the user to write the name of a
    fruit and our program returns all the features of the fruit chosen. We also want
    the filter to be somehow “intelligent” so that if the user writes “pea” it will
    display the features related to “pear”.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To do so, in Pandas we can use the method `str.contains()`. Let’s try it in
    our Jupyter Notebook:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'And we get:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e28f8981602d703d7ee22f6cd64f99a5.png)'
  prefs: []
  type: TYPE_IMG
- en: The filtered data. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: 'Read it carefully: we wrote “pea” as a typo on purpose to get sure Pandas returns
    the data anyway. And it does, as expected.'
  prefs: []
  type: TYPE_NORMAL
- en: 'So, now we have to face another problem: the intervention of the user via CLI.
    As far as I know, we can use two different methods in these cases: we can use
    the `input` built-in function or we can use the library `argparse`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In case you missed it, I’ve written an article on how we can use `argparse`
    in Data Science. Check it out here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/mlearning-ai/how-argparse-can-be-useful-in-your-data-science-projects-ecf02bef3b07?source=post_page-----a21f276b7ba9--------------------------------)
    [## How Argparse can be useful in your Data Science projects'
  prefs: []
  type: TYPE_NORMAL
- en: I know, it could be difficult to admit but…it can really save your time!
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: medium.com](https://medium.com/mlearning-ai/how-argparse-can-be-useful-in-your-data-science-projects-ecf02bef3b07?source=post_page-----a21f276b7ba9--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Now, in this case, I decided to use the `input` built-in function because I
    believe it’s easier to use, and in simple cases like these is a very good choice.
    In fact, this is the perfect choice if we just need to pass a string as an argument
    via CLI (you can read the documentation [here](https://docs.python.org/3/library/functions.html#input)).
  prefs: []
  type: TYPE_NORMAL
- en: 'We can use the `input` function like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, let’s see how this works and how it returns the data. This is the code
    we can use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, let’s save it as `fruit.py`, move it to the folder where `fruit.xlsx`
    is located and let’s run it via the terminal:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/02f78a8ed9254fc9f09b5f20e2968c42.png)'
  prefs: []
  type: TYPE_IMG
- en: Our code via CLI. GIF by Author.
  prefs: []
  type: TYPE_NORMAL
- en: 'Well, as we can see, everything works fine. But just one thing: can we improve
    the visualization? What if we’d like to display better the data as if we were
    on Pandas?'
  prefs: []
  type: TYPE_NORMAL
- en: Well, the solution I found was to use the library `tabulate` ([here’s the documentation](https://pypi.org/project/tabulate/)).
  prefs: []
  type: TYPE_NORMAL
- en: 'So, let’s add `tabulate` to our code and see what happens:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'And we get:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/62976a8a02b7d5738cd18e193ecf31f2.png)'
  prefs: []
  type: TYPE_IMG
- en: Our code via CLI. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: As we can see, the data are displayed in a “tabular way”, which is cleaner.
    Also, as we can see, the code correctly manages typos if we search for “pea” as
    we did in Jupyter before.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'I hope this helps you if you need to display tabular data via CLI. If you have
    any other suggestions, please, let me know in the comments: I’m always open to
    improving and learning something new.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Subscribe to* [*my newsletter*](https://federicotrotta.substack.com/?r=1ep1nf&utm_campaign=pub-share-checklist)
    *to get more on Python & Data Science.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Liked the article? Join Medium through* [***my referral link***](https://federicotrotta.medium.com/membership)*:
    unlock all the content on Medium for 5$/month (with no additional fee).*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Find/contact me here:* [*https://bio.link/federicotrotta*](https://bio.link/federicotrotta)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Found it useful?* ***Buy me a*** [***Ko-fi***](https://ko-fi.com/federicotrotta)***.***'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
