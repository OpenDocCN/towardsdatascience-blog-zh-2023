- en: Python sorted() Function Explained
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python sorted() 函数解析
- en: 原文：[https://towardsdatascience.com/python-sorted-function-explained-8e46bc002147](https://towardsdatascience.com/python-sorted-function-explained-8e46bc002147)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/python-sorted-function-explained-8e46bc002147](https://towardsdatascience.com/python-sorted-function-explained-8e46bc002147)
- en: In this article we will explore how to use the Python **sorted()** function
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本文将探讨如何使用 Python 的 **sorted()** 函数
- en: '[](https://pyshark.medium.com/?source=post_page-----8e46bc002147--------------------------------)[![Misha
    Sv](../Images/d3f9605e2c7020246ff793869728e218.png)](https://pyshark.medium.com/?source=post_page-----8e46bc002147--------------------------------)[](https://towardsdatascience.com/?source=post_page-----8e46bc002147--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----8e46bc002147--------------------------------)
    [Misha Sv](https://pyshark.medium.com/?source=post_page-----8e46bc002147--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://pyshark.medium.com/?source=post_page-----8e46bc002147--------------------------------)[![Misha
    Sv](../Images/d3f9605e2c7020246ff793869728e218.png)](https://pyshark.medium.com/?source=post_page-----8e46bc002147--------------------------------)[](https://towardsdatascience.com/?source=post_page-----8e46bc002147--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page-----8e46bc002147--------------------------------)
    [Misha Sv](https://pyshark.medium.com/?source=post_page-----8e46bc002147--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page-----8e46bc002147--------------------------------)
    ·4 min read·Jan 16, 2023
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page-----8e46bc002147--------------------------------)
    ·4 分钟阅读·2023年1月16日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/5fda325ced75dc2866b7414161b8a2b8.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5fda325ced75dc2866b7414161b8a2b8.png)'
- en: Photo by [Andre Taissin](https://unsplash.com/fr/@andretaissin?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/hOwcob_3dpc?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[Andre Taissin](https://unsplash.com/fr/@andretaissin?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    摄影，来自 [Unsplash](https://unsplash.com/photos/hOwcob_3dpc?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)'
- en: '**Table of Contents**'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**目录**'
- en: Introduction
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍
- en: Basic sorting using sorted()
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本排序使用 sorted()
- en: Using key function with sorted()
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 key 函数与 sorted()
- en: Sort custom objects using sorted()
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`sorted()`对自定义对象进行排序
- en: Conclusion
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结论
- en: Introduction
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: Python **sorted()** function is a built-in function for sorting iterables.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Python **sorted()** 函数是用于排序可迭代对象的内置函数。
- en: It uses timsort as its sorting algorithm, which is derived from merge sort and
    insertion sort.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 它使用 timsort 作为排序算法，该算法源自归并排序和插入排序。
- en: 'The syntax of the Python **sorted()** function is:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Python **sorted()** 函数的语法是：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'where:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 其中：
- en: '*iterable* — can be any iterable Python object like string, tuple, list, set,
    [dictionary](https://pyshark.com/python-dictionary-data-structure/), and others.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*iterable* — 可以是任何可迭代的 Python 对象，如字符串、元组、列表、集合、[字典](https://pyshark.com/python-dictionary-data-structure/)
    等。'
- en: '*key* — optional argument that allows to add a function (for example [lambda
    function](https://pyshark.com/python-lambda-functions/)) as a key for sorting.
    Defaults to *None*.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*key* — 可选参数，允许添加一个函数（例如 [lambda 函数](https://pyshark.com/python-lambda-functions/)）作为排序的关键字。默认为
    *None*。'
- en: '*reverse* — optional argument that allows to reverse the iterable (to sort
    in descending order) if set to *True*. Defaults to *False*.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*reverse* — 可选参数，允许反转可迭代对象（按降序排序），如果设置为 *True*。默认为 *False*。'
- en: 'The **sorted()** function process is defined as:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**sorted()** 函数的过程定义为：'
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Basic sorting using sorted()
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本排序使用 sorted()
- en: There are many applications of the **sorted()** function, so let’s take at a
    few basic examples.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**sorted()**函数有很多应用，下面我们来看几个基本的示例。'
- en: Sort a list of numbers in ascending order
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将数字列表按升序排序
- en: 'The simplest example is to sort a [list](https://pyshark.com/python-list-data-structure/)
    of numbers in ascending order:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的例子是将一个 [列表](https://pyshark.com/python-list-data-structure/) 的数字按升序排序：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'and you should get:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到：
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Sort a list of numbers in descending order
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将数字列表按降序排序
- en: 'Similar to the previous example, we will be sorting a list of numbers, but
    now in descending order:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于之前的示例，我们将排序一个数字列表，但现在按降序排序：
- en: '[PRE4]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'and you should get:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到：
- en: '[PRE5]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Sort a list of strings
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 排序一个字符串列表
- en: Python **sorted()** function can also sort lists with string elements in it.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Python 的 **sorted()** 函数也可以排序包含字符串元素的列表。
- en: The procedure with sorting numbers is very simple and intuitive, and it can
    be extended to sorting strings.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 排序数字的过程非常简单直观，也可以扩展到排序字符串。
- en: Python **sorted()** function sorts strings based on the first character of each
    string (for example, *‘apple’* comes before *‘orange’* since *‘a’* is before *‘o’*
    in the alphabet).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Python **sorted()** 函数根据每个字符串的第一个字符对字符串进行排序（例如，*‘apple’* 排在 *‘orange’* 之前，因为
    *‘a’* 在字母表中排在 *‘o’* 之前）。
- en: 'Let’s take a look at an example:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个例子：
- en: '[PRE6]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'and you should get:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到：
- en: '[PRE7]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: As you can see, the list of strings has been sorted in alphabetical (ascending)
    order based on the first character of the string.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，字符串列表已经根据字符串的第一个字符按字母顺序（升序）排序了。
- en: You can also sort a list of strings in descending order by setting the optional
    **reverse** argument to *True*.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过将可选的 **reverse** 参数设置为 *True* 来按降序对字符串列表进行排序。
- en: '**Note:** you can extend the above functionality to other iterables, like [tuples](https://pyshark.com/python-tuple-data-structure/),
    [sets](https://pyshark.com/everything-about-python-set-data-structure/), and others.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 你可以将上述功能扩展到其他可迭代对象，如 [元组](https://pyshark.com/python-tuple-data-structure/)、[集合](https://pyshark.com/everything-about-python-set-data-structure/)，以及其他对象。'
- en: Using key function with sorted()
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用带有 key 函数的 sorted()
- en: For more complex sorting tasks we can add the usage of *key* function in **sorted()**
    which will act as a key for sorting.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 对于更复杂的排序任务，我们可以在 **sorted()** 中使用 *key* 函数，这将作为排序的关键。
- en: 'There are two ways of using a key function:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 key 函数有两种方式：
- en: Using lambda function as *key* function
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 lambda 函数作为 *key* 函数
- en: Using custom function as *key* function
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用自定义函数作为 *key* 函数
- en: Using lambda function with sorted()
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 lambda 函数与 sorted()
- en: 'Let’s create some sample list with words:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个包含单词的示例列表：
- en: '[PRE8]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Now, in this example, we would like to sort the list based on the length of
    the elements, meaning that the words will be ordered from shortest to longest
    based on the number of characters.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在这个示例中，我们希望根据元素的长度对列表进行排序，这意味着单词将按从短到长的顺序排列。
- en: 'As you can imagine, we will have to use the **len()** function to calculate
    the length of each element, and using a lambda function we can use it as a key
    function for sorting:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所料，我们将不得不使用 **len()** 函数来计算每个元素的长度，使用 lambda 函数可以将其作为排序的 key 函数：
- en: '[PRE9]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'and you should get:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到：
- en: '[PRE10]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Using custom function with sorted()
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用自定义函数与 sorted()
- en: 'Let’s reuse the same list of words from the previous example:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们重用前面示例中的相同单词列表：
- en: '[PRE11]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Now, we would like to perform the same sorting based on length of each element
    in the list, but using a custom function to calculate the length of each word.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们希望基于列表中每个元素的长度进行相同的排序，但使用自定义函数来计算每个单词的长度。
- en: 'We can define a simple function to calculate the length of a word, and pass
    it into **sorted()** as a *key* function:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以定义一个简单的函数来计算单词的长度，并将其作为 *key* 函数传递给 **sorted()**：
- en: '[PRE12]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'and you should get:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到：
- en: '[PRE13]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: which is the same result as when we used the **len()** with lambda function
    as a *key* function for **sorted()**.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这与我们使用 **len()** 和 lambda 函数作为 **sorted()** 的 *key* 函数时的结果是相同的。
- en: Sort custom objects using sorted()
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 sorted() 对自定义对象进行排序
- en: The functionality of Python **sorted()** function can be extended to custom
    objects (as long as we are sorting iterables).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: Python **sorted()** 函数的功能可以扩展到自定义对象（只要我们排序的是可迭代对象）。
- en: 'For example, let’s create a custom class **Person** with two attributes **name**
    and **age**:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，让我们创建一个具有两个属性 **name** 和 **age** 的自定义类 **Person**：
- en: '[PRE14]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'This class will create a list of tuples with information of each person:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这个类将创建一个包含每个人信息的元组列表：
- en: '[PRE15]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'and you should get:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到：
- en: '[PRE16]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: As you can see this is now a list of tuples, which is a Python iterable, and
    can be sorted using **sorted()** function.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，这现在是一个元组的列表，这是一个 Python 可迭代对象，可以使用 **sorted()** 函数进行排序。
- en: 'In this example, we would like to sort the list based on **age** attribute
    of each person:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们希望根据每个人的 **age** 属性对列表进行排序：
- en: '[PRE17]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'and you should get:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到：
- en: '[PRE18]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Conclusion
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In this article we explored how to use [Python sorted() function](https://docs.python.org/3/howto/sorting.html).
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们探讨了如何使用 [Python sorted() 函数](https://docs.python.org/3/howto/sorting.html)。
- en: Now that you know the basic functionality, you can practice using it with other
    iterable [data structures](https://pyshark.com/category/data-structures/) for
    more complex use cases.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你了解了基本功能，你可以在其他可迭代的 [数据结构](https://pyshark.com/category/data-structures/)
    中练习使用它，以应对更复杂的用例。
- en: Feel free to leave comments below if you have any questions or have suggestions
    for some edits and check out more of my [Python Functions](https://pyshark.com/category/python-functions/)
    tutorials.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有任何问题或对某些修改有建议，请随时在下方留言，并查看更多我的[Python函数](https://pyshark.com/category/python-functions/)教程。
- en: '*Originally published at* [*https://pyshark.com*](https://pyshark.com/python-sorted-function/)
    *on January 16, 2023.*'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '*最初发表于* [*https://pyshark.com*](https://pyshark.com/python-sorted-function/)
    *于2023年1月16日。*'
